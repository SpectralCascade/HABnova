Version 4.0 HI-TECH Software Intermediate Code
"357 BME280_driver/bme280.c
[; ;BME280_driver/bme280.c: 357: int8_t bme280_init(struct bme280_dev *dev)
[c E37 0 1 .. ]
[n E37 bme280_intf BME280_SPI_INTF BME280_I2C_INTF  ]
[v F88 `(c ~T0 @X0 0 tf4`uc`uc`*uc`us ]
[v F94 `(c ~T0 @X0 0 tf4`uc`uc`*uc`us ]
[v F100 `(v ~T0 @X0 0 tf1`ul ]
"261 BME280_driver/bme280_defs.h
[; ;BME280_driver/bme280_defs.h: 261: {
[s S1 `us 1 `s 1 `s 1 `us 1 `s 1 `s 1 `s 1 `s 1 `s 1 `s 1 `s 1 `s 1 `uc 1 `s 1 `uc 1 `s 1 `s 1 `c 1 `l 1 ]
[n S1 bme280_calib_data dig_T1 dig_T2 dig_T3 dig_P1 dig_P2 dig_P3 dig_P4 dig_P5 dig_P6 dig_P7 dig_P8 dig_P9 dig_H1 dig_H2 dig_H3 dig_H4 dig_H5 dig_H6 t_fine ]
"341
[; ;BME280_driver/bme280_defs.h: 341: {
[s S4 `uc 1 `uc 1 `uc 1 `uc 1 `uc 1 ]
[n S4 bme280_settings osr_p osr_t osr_h filter standby_time ]
"362
[; ;BME280_driver/bme280_defs.h: 362: {
[s S5 `uc 1 `uc 1 `E37 1 `*F88 1 `*F94 1 `*F100 1 `S1 1 `S4 1 ]
[n S5 bme280_dev chip_id dev_id intf read write delay_ms calib_data settings ]
"90 BME280_driver/bme280.c
[; ;BME280_driver/bme280.c: 90: static int8_t null_ptr_check(const struct bme280_dev *dev);
[v _null_ptr_check `(c ~T0 @X0 0 sf1`*CS5 ]
"104 BME280_driver/bme280.h
[; ;BME280_driver/bme280.h: 104: int8_t bme280_get_regs(uint8_t reg_addr, uint8_t *reg_data, uint16_t len, const struct bme280_dev *dev);
[v _bme280_get_regs `(c ~T0 @X0 0 ef4`uc`*uc`us`*CS5 ]
"184
[; ;BME280_driver/bme280.h: 184: int8_t bme280_soft_reset(const struct bme280_dev *dev);
[v _bme280_soft_reset `(c ~T0 @X0 0 ef1`*CS5 ]
"114 BME280_driver/bme280.c
[; ;BME280_driver/bme280.c: 114: static int8_t get_calib_data(struct bme280_dev *dev);
[v _get_calib_data `(c ~T0 @X0 0 sf1`*S5 ]
"103
[; ;BME280_driver/bme280.c: 103: static void interleave_reg_addr(const uint8_t *reg_addr, uint8_t *temp_buff, const uint8_t *reg_data, uint8_t len);
[v _interleave_reg_addr `(v ~T0 @X0 0 sf4`*Cuc`*uc`*Cuc`uc ]
"174 BME280_driver/bme280.h
[; ;BME280_driver/bme280.h: 174: int8_t bme280_get_sensor_mode(uint8_t *sensor_mode, const struct bme280_dev *dev);
[v _bme280_get_sensor_mode `(c ~T0 @X0 0 ef2`*uc`*CS5 ]
"68 BME280_driver/bme280.c
[; ;BME280_driver/bme280.c: 68: static int8_t put_device_to_sleep(const struct bme280_dev *dev);
[v _put_device_to_sleep `(c ~T0 @X0 0 sf1`*CS5 ]
"231
[; ;BME280_driver/bme280.c: 231: static uint8_t are_settings_changed(uint8_t sub_settings, uint8_t desired_settings);
[v _are_settings_changed `(uc ~T0 @X0 0 sf2`uc`uc ]
"254
[; ;BME280_driver/bme280.c: 254: static int8_t set_osr_settings(uint8_t desired_settings,
[v _set_osr_settings `(c ~T0 @X0 0 sf3`uc`*CS4`*CS5 ]
"304
[; ;BME280_driver/bme280.c: 304: static int8_t set_filter_standby_settings(uint8_t desired_settings,
[v _set_filter_standby_settings `(c ~T0 @X0 0 sf3`uc`*CS4`*CS5 ]
"336
[; ;BME280_driver/bme280.c: 336: static void parse_device_settings(const uint8_t *reg_data, struct bme280_settings *settings);
[v _parse_device_settings `(v ~T0 @X0 0 sf2`*Cuc`*S4 ]
"79
[; ;BME280_driver/bme280.c: 79: static int8_t write_power_mode(uint8_t sensor_mode, const struct bme280_dev *dev);
[v _write_power_mode `(c ~T0 @X0 0 sf2`uc`*CS5 ]
"308 BME280_driver/bme280_defs.h
[; ;BME280_driver/bme280_defs.h: 308: {
[s S2 `ul 1 `l 1 `ul 1 ]
[n S2 bme280_data pressure temperature humidity ]
"325
[; ;BME280_driver/bme280_defs.h: 325: {
[s S3 `ul 1 `ul 1 `ul 1 ]
[n S3 bme280_uncomp_data pressure temperature humidity ]
"217 BME280_driver/bme280.h
[; ;BME280_driver/bme280.h: 217: void bme280_parse_sensor_data(const uint8_t *reg_data, struct bme280_uncomp_data *uncomp_data);
[v _bme280_parse_sensor_data `(v ~T0 @X0 0 ef2`*Cuc`*S3 ]
"235
[; ;BME280_driver/bme280.h: 235: int8_t bme280_compensate_data(uint8_t sensor_comp,
[v _bme280_compensate_data `(c ~T0 @X0 0 ef4`uc`*CS3`*S2`*S1 ]
"187 BME280_driver/bme280.c
[; ;BME280_driver/bme280.c: 187: static int32_t compensate_temperature(const struct bme280_uncomp_data *uncomp_data,
[v _compensate_temperature `(l ~T0 @X0 0 sf2`*CS3`*S1 ]
"200
[; ;BME280_driver/bme280.c: 200: static uint32_t compensate_pressure(const struct bme280_uncomp_data *uncomp_data,
[v _compensate_pressure `(ul ~T0 @X0 0 sf2`*CS3`*CS1 ]
"241
[; ;BME280_driver/bme280.c: 241: static int8_t set_osr_humidity_settings(const struct bme280_settings *settings, const struct bme280_dev *dev);
[v _set_osr_humidity_settings `(c ~T0 @X0 0 sf2`*CS4`*CS5 ]
"269
[; ;BME280_driver/bme280.c: 269: static int8_t set_osr_press_temp_settings(uint8_t desired_settings,
[v _set_osr_press_temp_settings `(c ~T0 @X0 0 sf3`uc`*CS4`*CS5 ]
"281
[; ;BME280_driver/bme280.c: 281: static void fill_osr_press_settings(uint8_t *reg_data, const struct bme280_settings *settings);
[v _fill_osr_press_settings `(v ~T0 @X0 0 sf2`*uc`*CS4 ]
"291
[; ;BME280_driver/bme280.c: 291: static void fill_osr_temp_settings(uint8_t *reg_data, const struct bme280_settings *settings);
[v _fill_osr_temp_settings `(v ~T0 @X0 0 sf2`*uc`*CS4 ]
"316
[; ;BME280_driver/bme280.c: 316: static void fill_filter_settings(uint8_t *reg_data, const struct bme280_settings *settings);
[v _fill_filter_settings `(v ~T0 @X0 0 sf2`*uc`*CS4 ]
"326
[; ;BME280_driver/bme280.c: 326: static void fill_standby_settings(uint8_t *reg_data, const struct bme280_settings *settings);
[v _fill_standby_settings `(v ~T0 @X0 0 sf2`*uc`*CS4 ]
"349
[; ;BME280_driver/bme280.c: 349: static int8_t reload_device_settings(const struct bme280_settings *settings, const struct bme280_dev *dev);
[v _reload_device_settings `(c ~T0 @X0 0 sf2`*CS4`*CS5 ]
"123
[; ;BME280_driver/bme280.c: 123: static void parse_temp_press_calib_data(const uint8_t *reg_data, struct bme280_dev *dev);
[v _parse_temp_press_calib_data `(v ~T0 @X0 0 sf2`*Cuc`*S5 ]
"132
[; ;BME280_driver/bme280.c: 132: static void parse_humidity_calib_data(const uint8_t *reg_data, struct bme280_dev *dev);
[v _parse_humidity_calib_data `(v ~T0 @X0 0 sf2`*Cuc`*S5 ]
[v F409 `(c ~T0 @X0 0 tf4`uc`uc`*uc`us ]
[v F420 `(c ~T0 @X0 0 tf4`uc`uc`*uc`us ]
[v F428 `(v ~T0 @X0 0 tf1`ul ]
"357 BME280_driver/bme280.c
[; ;BME280_driver/bme280.c: 357: int8_t bme280_init(struct bme280_dev *dev)
[v _bme280_init `(c ~T0 @X0 1 ef1`*S5 ]
"358
[; ;BME280_driver/bme280.c: 358: {
{
[e :U _bme280_init ]
"357
[; ;BME280_driver/bme280.c: 357: int8_t bme280_init(struct bme280_dev *dev)
[v _dev `*S5 ~T0 @X0 1 r1 ]
"358
[; ;BME280_driver/bme280.c: 358: {
[f ]
"359
[; ;BME280_driver/bme280.c: 359:     int8_t rslt;
[v _rslt `c ~T0 @X0 1 a ]
"362
[; ;BME280_driver/bme280.c: 362:     uint8_t try_count = 5;
[v _try_count `uc ~T0 @X0 1 a ]
[e = _try_count -> -> 5 `i `uc ]
"363
[; ;BME280_driver/bme280.c: 363:     uint8_t chip_id = 0;
[v _chip_id `uc ~T0 @X0 1 a ]
[e = _chip_id -> -> 0 `i `uc ]
"366
[; ;BME280_driver/bme280.c: 366:     rslt = null_ptr_check(dev);
[e = _rslt ( _null_ptr_check (1 -> _dev `*CS5 ]
"369
[; ;BME280_driver/bme280.c: 369:     if (rslt == 0)
[e $ ! == -> _rslt `i -> 0 `i 7  ]
"370
[; ;BME280_driver/bme280.c: 370:     {
{
"371
[; ;BME280_driver/bme280.c: 371:         while (try_count)
[e $U 8  ]
[e :U 9 ]
"372
[; ;BME280_driver/bme280.c: 372:         {
{
"374
[; ;BME280_driver/bme280.c: 374:             rslt = bme280_get_regs(0xD0, &chip_id, 1, dev);
[e = _rslt ( _bme280_get_regs (4 , , , -> -> 208 `i `uc &U _chip_id -> -> 1 `i `us -> _dev `*CS5 ]
"377
[; ;BME280_driver/bme280.c: 377:             if ((rslt == 0) && (chip_id == 0x60))
[e $ ! && == -> _rslt `i -> 0 `i == -> _chip_id `i -> 96 `i 11  ]
"378
[; ;BME280_driver/bme280.c: 378:             {
{
"379
[; ;BME280_driver/bme280.c: 379:                 dev->chip_id = chip_id;
[e = . *U _dev 0 _chip_id ]
"382
[; ;BME280_driver/bme280.c: 382:                 rslt = bme280_soft_reset(dev);
[e = _rslt ( _bme280_soft_reset (1 -> _dev `*CS5 ]
"383
[; ;BME280_driver/bme280.c: 383:                 if (rslt == 0)
[e $ ! == -> _rslt `i -> 0 `i 12  ]
"384
[; ;BME280_driver/bme280.c: 384:                 {
{
"386
[; ;BME280_driver/bme280.c: 386:                     rslt = get_calib_data(dev);
[e = _rslt ( _get_calib_data (1 _dev ]
"387
[; ;BME280_driver/bme280.c: 387:                 }
}
[e :U 12 ]
"388
[; ;BME280_driver/bme280.c: 388:                 break;
[e $U 10  ]
"389
[; ;BME280_driver/bme280.c: 389:             }
}
[e :U 11 ]
"392
[; ;BME280_driver/bme280.c: 392:             dev->delay_ms(1);
[e ( *U . *U _dev 5 (1 -> -> -> 1 `i `l `ul ]
"393
[; ;BME280_driver/bme280.c: 393:             --try_count;
[e =- _try_count -> -> 1 `i `uc ]
"394
[; ;BME280_driver/bme280.c: 394:         }
}
[e :U 8 ]
"371
[; ;BME280_driver/bme280.c: 371:         while (try_count)
[e $ != -> _try_count `i -> 0 `i 9  ]
[e :U 10 ]
"397
[; ;BME280_driver/bme280.c: 397:         if (!try_count)
[e $ ! ! != -> _try_count `i -> 0 `i 13  ]
"398
[; ;BME280_driver/bme280.c: 398:         {
{
"399
[; ;BME280_driver/bme280.c: 399:             rslt = -2;
[e = _rslt -> -U -> 2 `i `c ]
"400
[; ;BME280_driver/bme280.c: 400:         }
}
[e :U 13 ]
"401
[; ;BME280_driver/bme280.c: 401:     }
}
[e :U 7 ]
"403
[; ;BME280_driver/bme280.c: 403:     return rslt;
[e ) _rslt ]
[e $UE 6  ]
"404
[; ;BME280_driver/bme280.c: 404: }
[e :UE 6 ]
}
"409
[; ;BME280_driver/bme280.c: 409: int8_t bme280_get_regs(uint8_t reg_addr, uint8_t *reg_data, uint16_t len, const struct bme280_dev *dev)
[v _bme280_get_regs `(c ~T0 @X0 1 ef4`uc`*uc`us`*CS5 ]
"410
[; ;BME280_driver/bme280.c: 410: {
{
[e :U _bme280_get_regs ]
"409
[; ;BME280_driver/bme280.c: 409: int8_t bme280_get_regs(uint8_t reg_addr, uint8_t *reg_data, uint16_t len, const struct bme280_dev *dev)
[v _reg_addr `uc ~T0 @X0 1 r1 ]
[v _reg_data `*uc ~T0 @X0 1 r2 ]
[v _len `us ~T0 @X0 1 r3 ]
[v _dev `*CS5 ~T0 @X0 1 r4 ]
"410
[; ;BME280_driver/bme280.c: 410: {
[f ]
"411
[; ;BME280_driver/bme280.c: 411:     int8_t rslt;
[v _rslt `c ~T0 @X0 1 a ]
"414
[; ;BME280_driver/bme280.c: 414:     rslt = null_ptr_check(dev);
[e = _rslt ( _null_ptr_check (1 _dev ]
"417
[; ;BME280_driver/bme280.c: 417:     if (rslt == 0)
[e $ ! == -> _rslt `i -> 0 `i 15  ]
"418
[; ;BME280_driver/bme280.c: 418:     {
{
"420
[; ;BME280_driver/bme280.c: 420:         if (dev->intf != BME280_I2C_INTF)
[e $ ! != -> . *U _dev 2 `ui -> . `E37 1 `ui 16  ]
"421
[; ;BME280_driver/bme280.c: 421:         {
{
"422
[; ;BME280_driver/bme280.c: 422:             reg_addr = reg_addr | 0x80;
[e = _reg_addr -> | -> _reg_addr `i -> 128 `i `uc ]
"423
[; ;BME280_driver/bme280.c: 423:         }
}
[e :U 16 ]
"426
[; ;BME280_driver/bme280.c: 426:         rslt = dev->read(dev->dev_id, reg_addr, reg_data, len);
[e = _rslt ( *U . *U _dev 3 (4 , , , . *U _dev 1 _reg_addr _reg_data _len ]
"429
[; ;BME280_driver/bme280.c: 429:         if (rslt != 0)
[e $ ! != -> _rslt `i -> 0 `i 17  ]
"430
[; ;BME280_driver/bme280.c: 430:         {
{
"431
[; ;BME280_driver/bme280.c: 431:             rslt = -4;
[e = _rslt -> -U -> 4 `i `c ]
"432
[; ;BME280_driver/bme280.c: 432:         }
}
[e :U 17 ]
"433
[; ;BME280_driver/bme280.c: 433:     }
}
[e :U 15 ]
"435
[; ;BME280_driver/bme280.c: 435:     return rslt;
[e ) _rslt ]
[e $UE 14  ]
"436
[; ;BME280_driver/bme280.c: 436: }
[e :UE 14 ]
}
"442
[; ;BME280_driver/bme280.c: 442: int8_t bme280_set_regs(uint8_t *reg_addr, const uint8_t *reg_data, uint8_t len, const struct bme280_dev *dev)
[v _bme280_set_regs `(c ~T0 @X0 1 ef4`*uc`*Cuc`uc`*CS5 ]
"443
[; ;BME280_driver/bme280.c: 443: {
{
[e :U _bme280_set_regs ]
"442
[; ;BME280_driver/bme280.c: 442: int8_t bme280_set_regs(uint8_t *reg_addr, const uint8_t *reg_data, uint8_t len, const struct bme280_dev *dev)
[v _reg_addr `*uc ~T0 @X0 1 r1 ]
[v _reg_data `*Cuc ~T0 @X0 1 r2 ]
[v _len `uc ~T0 @X0 1 r3 ]
[v _dev `*CS5 ~T0 @X0 1 r4 ]
"443
[; ;BME280_driver/bme280.c: 443: {
[f ]
"444
[; ;BME280_driver/bme280.c: 444:     int8_t rslt;
[v _rslt `c ~T0 @X0 1 a ]
"445
[; ;BME280_driver/bme280.c: 445:     uint8_t temp_buff[20];
[v _temp_buff `uc ~T0 @X0 -> 20 `i a ]
"447
[; ;BME280_driver/bme280.c: 447:     if (len > 10)
[e $ ! > -> _len `i -> 10 `i 19  ]
"448
[; ;BME280_driver/bme280.c: 448:     {
{
"449
[; ;BME280_driver/bme280.c: 449:         len = 10;
[e = _len -> -> 10 `i `uc ]
"450
[; ;BME280_driver/bme280.c: 450:     }
}
[e :U 19 ]
"451
[; ;BME280_driver/bme280.c: 451:     uint16_t temp_len;
[v _temp_len `us ~T0 @X0 1 a ]
"452
[; ;BME280_driver/bme280.c: 452:     uint8_t reg_addr_cnt;
[v _reg_addr_cnt `uc ~T0 @X0 1 a ]
"455
[; ;BME280_driver/bme280.c: 455:     rslt = null_ptr_check(dev);
[e = _rslt ( _null_ptr_check (1 _dev ]
"458
[; ;BME280_driver/bme280.c: 458:     if ((rslt == 0) && (reg_addr != ((void*)0)) && (reg_data != ((void*)0)))
[e $ ! && && == -> _rslt `i -> 0 `i != _reg_addr -> -> -> 0 `i `*v `*uc != _reg_data -> -> -> 0 `i `*v `*Cuc 20  ]
"459
[; ;BME280_driver/bme280.c: 459:     {
{
"460
[; ;BME280_driver/bme280.c: 460:         if (len != 0)
[e $ ! != -> _len `i -> 0 `i 21  ]
"461
[; ;BME280_driver/bme280.c: 461:         {
{
"462
[; ;BME280_driver/bme280.c: 462:             temp_buff[0] = reg_data[0];
[e = *U + &U _temp_buff * -> -> -> 0 `i `ui `ux -> -> # *U &U _temp_buff `ui `ux *U + _reg_data * -> -> 0 `i `x -> -> # *U _reg_data `i `x ]
"465
[; ;BME280_driver/bme280.c: 465:             if (dev->intf != BME280_I2C_INTF)
[e $ ! != -> . *U _dev 2 `ui -> . `E37 1 `ui 22  ]
"466
[; ;BME280_driver/bme280.c: 466:             {
{
"467
[; ;BME280_driver/bme280.c: 467:                 for (reg_addr_cnt = 0; reg_addr_cnt < len; reg_addr_cnt++)
{
[e = _reg_addr_cnt -> -> 0 `i `uc ]
[e $U 26  ]
[e :U 23 ]
"468
[; ;BME280_driver/bme280.c: 468:                 {
{
"469
[; ;BME280_driver/bme280.c: 469:                     reg_addr[reg_addr_cnt] = reg_addr[reg_addr_cnt] & 0x7F;
[e = *U + _reg_addr * -> _reg_addr_cnt `ux -> -> # *U _reg_addr `ui `ux -> & -> *U + _reg_addr * -> _reg_addr_cnt `ux -> -> # *U _reg_addr `ui `ux `i -> 127 `i `uc ]
"470
[; ;BME280_driver/bme280.c: 470:                 }
}
[e ++ _reg_addr_cnt -> -> 1 `i `uc ]
[e :U 26 ]
[e $ < -> _reg_addr_cnt `i -> _len `i 23  ]
[e :U 24 ]
}
"471
[; ;BME280_driver/bme280.c: 471:             }
}
[e :U 22 ]
"474
[; ;BME280_driver/bme280.c: 474:             if (len > 1)
[e $ ! > -> _len `i -> 1 `i 27  ]
"475
[; ;BME280_driver/bme280.c: 475:             {
{
"479
[; ;BME280_driver/bme280.c: 479:                 interleave_reg_addr(reg_addr, temp_buff, reg_data, len);
[e ( _interleave_reg_addr (4 , , , -> _reg_addr `*Cuc &U _temp_buff _reg_data _len ]
"480
[; ;BME280_driver/bme280.c: 480:                 temp_len = ((len * 2) - 1);
[e = _temp_len -> - * -> _len `i -> 2 `i -> 1 `i `us ]
"481
[; ;BME280_driver/bme280.c: 481:             }
}
[e $U 28  ]
"482
[; ;BME280_driver/bme280.c: 482:             else
[e :U 27 ]
"483
[; ;BME280_driver/bme280.c: 483:             {
{
"484
[; ;BME280_driver/bme280.c: 484:                 temp_len = len;
[e = _temp_len -> _len `us ]
"485
[; ;BME280_driver/bme280.c: 485:             }
}
[e :U 28 ]
"486
[; ;BME280_driver/bme280.c: 486:             rslt = dev->write(dev->dev_id, reg_addr[0], temp_buff, temp_len);
[e = _rslt ( *U . *U _dev 4 (4 , , , . *U _dev 1 *U + _reg_addr * -> -> 0 `i `x -> -> # *U _reg_addr `i `x &U _temp_buff _temp_len ]
"489
[; ;BME280_driver/bme280.c: 489:             if (rslt != 0)
[e $ ! != -> _rslt `i -> 0 `i 29  ]
"490
[; ;BME280_driver/bme280.c: 490:             {
{
"491
[; ;BME280_driver/bme280.c: 491:                 rslt = -4;
[e = _rslt -> -U -> 4 `i `c ]
"492
[; ;BME280_driver/bme280.c: 492:             }
}
[e :U 29 ]
"493
[; ;BME280_driver/bme280.c: 493:         }
}
[e $U 30  ]
"494
[; ;BME280_driver/bme280.c: 494:         else
[e :U 21 ]
"495
[; ;BME280_driver/bme280.c: 495:         {
{
"496
[; ;BME280_driver/bme280.c: 496:             rslt = -3;
[e = _rslt -> -U -> 3 `i `c ]
"497
[; ;BME280_driver/bme280.c: 497:         }
}
[e :U 30 ]
"498
[; ;BME280_driver/bme280.c: 498:     }
}
[e $U 31  ]
"499
[; ;BME280_driver/bme280.c: 499:     else
[e :U 20 ]
"500
[; ;BME280_driver/bme280.c: 500:     {
{
"501
[; ;BME280_driver/bme280.c: 501:         rslt = -1;
[e = _rslt -> -U -> 1 `i `c ]
"502
[; ;BME280_driver/bme280.c: 502:     }
}
[e :U 31 ]
"504
[; ;BME280_driver/bme280.c: 504:     return rslt;
[e ) _rslt ]
[e $UE 18  ]
"505
[; ;BME280_driver/bme280.c: 505: }
[e :UE 18 ]
}
"511
[; ;BME280_driver/bme280.c: 511: int8_t bme280_set_sensor_settings(uint8_t desired_settings, const struct bme280_dev *dev)
[v _bme280_set_sensor_settings `(c ~T0 @X0 1 ef2`uc`*CS5 ]
"512
[; ;BME280_driver/bme280.c: 512: {
{
[e :U _bme280_set_sensor_settings ]
"511
[; ;BME280_driver/bme280.c: 511: int8_t bme280_set_sensor_settings(uint8_t desired_settings, const struct bme280_dev *dev)
[v _desired_settings `uc ~T0 @X0 1 r1 ]
[v _dev `*CS5 ~T0 @X0 1 r2 ]
"512
[; ;BME280_driver/bme280.c: 512: {
[f ]
"513
[; ;BME280_driver/bme280.c: 513:     int8_t rslt;
[v _rslt `c ~T0 @X0 1 a ]
"514
[; ;BME280_driver/bme280.c: 514:     uint8_t sensor_mode;
[v _sensor_mode `uc ~T0 @X0 1 a ]
"517
[; ;BME280_driver/bme280.c: 517:     rslt = null_ptr_check(dev);
[e = _rslt ( _null_ptr_check (1 _dev ]
"520
[; ;BME280_driver/bme280.c: 520:     if (rslt == 0)
[e $ ! == -> _rslt `i -> 0 `i 33  ]
"521
[; ;BME280_driver/bme280.c: 521:     {
{
"522
[; ;BME280_driver/bme280.c: 522:         rslt = bme280_get_sensor_mode(&sensor_mode, dev);
[e = _rslt ( _bme280_get_sensor_mode (2 , &U _sensor_mode _dev ]
"523
[; ;BME280_driver/bme280.c: 523:         if ((rslt == 0) && (sensor_mode != 0x00))
[e $ ! && == -> _rslt `i -> 0 `i != -> _sensor_mode `i -> 0 `i 34  ]
"524
[; ;BME280_driver/bme280.c: 524:         {
{
"525
[; ;BME280_driver/bme280.c: 525:             rslt = put_device_to_sleep(dev);
[e = _rslt ( _put_device_to_sleep (1 _dev ]
"526
[; ;BME280_driver/bme280.c: 526:         }
}
[e :U 34 ]
"527
[; ;BME280_driver/bme280.c: 527:         if (rslt == 0)
[e $ ! == -> _rslt `i -> 0 `i 35  ]
"528
[; ;BME280_driver/bme280.c: 528:         {
{
"532
[; ;BME280_driver/bme280.c: 532:             if (are_settings_changed(0x07, desired_settings))
[e $ ! != -> ( _are_settings_changed (2 , -> -> 7 `i `uc _desired_settings `i -> 0 `i 36  ]
"533
[; ;BME280_driver/bme280.c: 533:             {
{
"534
[; ;BME280_driver/bme280.c: 534:                 rslt = set_osr_settings(desired_settings, &dev->settings, dev);
[e = _rslt ( _set_osr_settings (3 , , _desired_settings &U . *U _dev 7 _dev ]
"535
[; ;BME280_driver/bme280.c: 535:             }
}
[e :U 36 ]
"540
[; ;BME280_driver/bme280.c: 540:             if ((rslt == 0) && are_settings_changed(0x18, desired_settings))
[e $ ! && == -> _rslt `i -> 0 `i != -> ( _are_settings_changed (2 , -> -> 24 `i `uc _desired_settings `i -> 0 `i 37  ]
"541
[; ;BME280_driver/bme280.c: 541:             {
{
"542
[; ;BME280_driver/bme280.c: 542:                 rslt = set_filter_standby_settings(desired_settings, &dev->settings, dev);
[e = _rslt ( _set_filter_standby_settings (3 , , _desired_settings &U . *U _dev 7 _dev ]
"543
[; ;BME280_driver/bme280.c: 543:             }
}
[e :U 37 ]
"544
[; ;BME280_driver/bme280.c: 544:         }
}
[e :U 35 ]
"545
[; ;BME280_driver/bme280.c: 545:     }
}
[e :U 33 ]
"547
[; ;BME280_driver/bme280.c: 547:     return rslt;
[e ) _rslt ]
[e $UE 32  ]
"548
[; ;BME280_driver/bme280.c: 548: }
[e :UE 32 ]
}
"554
[; ;BME280_driver/bme280.c: 554: int8_t bme280_get_sensor_settings(struct bme280_dev *dev)
[v _bme280_get_sensor_settings `(c ~T0 @X0 1 ef1`*S5 ]
"555
[; ;BME280_driver/bme280.c: 555: {
{
[e :U _bme280_get_sensor_settings ]
"554
[; ;BME280_driver/bme280.c: 554: int8_t bme280_get_sensor_settings(struct bme280_dev *dev)
[v _dev `*S5 ~T0 @X0 1 r1 ]
"555
[; ;BME280_driver/bme280.c: 555: {
[f ]
"556
[; ;BME280_driver/bme280.c: 556:     int8_t rslt;
[v _rslt `c ~T0 @X0 1 a ]
"557
[; ;BME280_driver/bme280.c: 557:     uint8_t reg_data[4];
[v _reg_data `uc ~T0 @X0 -> 4 `i a ]
"560
[; ;BME280_driver/bme280.c: 560:     rslt = null_ptr_check(dev);
[e = _rslt ( _null_ptr_check (1 -> _dev `*CS5 ]
"563
[; ;BME280_driver/bme280.c: 563:     if (rslt == 0)
[e $ ! == -> _rslt `i -> 0 `i 39  ]
"564
[; ;BME280_driver/bme280.c: 564:     {
{
"565
[; ;BME280_driver/bme280.c: 565:         rslt = bme280_get_regs(0xF2, reg_data, 4, dev);
[e = _rslt ( _bme280_get_regs (4 , , , -> -> 242 `i `uc &U _reg_data -> -> 4 `i `us -> _dev `*CS5 ]
"566
[; ;BME280_driver/bme280.c: 566:         if (rslt == 0)
[e $ ! == -> _rslt `i -> 0 `i 40  ]
"567
[; ;BME280_driver/bme280.c: 567:         {
{
"568
[; ;BME280_driver/bme280.c: 568:             parse_device_settings(reg_data, &dev->settings);
[e ( _parse_device_settings (2 , -> &U _reg_data `*Cuc &U . *U _dev 7 ]
"569
[; ;BME280_driver/bme280.c: 569:         }
}
[e :U 40 ]
"570
[; ;BME280_driver/bme280.c: 570:     }
}
[e :U 39 ]
"572
[; ;BME280_driver/bme280.c: 572:     return rslt;
[e ) _rslt ]
[e $UE 38  ]
"573
[; ;BME280_driver/bme280.c: 573: }
[e :UE 38 ]
}
"578
[; ;BME280_driver/bme280.c: 578: int8_t bme280_set_sensor_mode(uint8_t sensor_mode, const struct bme280_dev *dev)
[v _bme280_set_sensor_mode `(c ~T0 @X0 1 ef2`uc`*CS5 ]
"579
[; ;BME280_driver/bme280.c: 579: {
{
[e :U _bme280_set_sensor_mode ]
"578
[; ;BME280_driver/bme280.c: 578: int8_t bme280_set_sensor_mode(uint8_t sensor_mode, const struct bme280_dev *dev)
[v _sensor_mode `uc ~T0 @X0 1 r1 ]
[v _dev `*CS5 ~T0 @X0 1 r2 ]
"579
[; ;BME280_driver/bme280.c: 579: {
[f ]
"580
[; ;BME280_driver/bme280.c: 580:     int8_t rslt;
[v _rslt `c ~T0 @X0 1 a ]
"581
[; ;BME280_driver/bme280.c: 581:     uint8_t last_set_mode;
[v _last_set_mode `uc ~T0 @X0 1 a ]
"584
[; ;BME280_driver/bme280.c: 584:     rslt = null_ptr_check(dev);
[e = _rslt ( _null_ptr_check (1 _dev ]
"585
[; ;BME280_driver/bme280.c: 585:     if (rslt == 0)
[e $ ! == -> _rslt `i -> 0 `i 42  ]
"586
[; ;BME280_driver/bme280.c: 586:     {
{
"587
[; ;BME280_driver/bme280.c: 587:         rslt = bme280_get_sensor_mode(&last_set_mode, dev);
[e = _rslt ( _bme280_get_sensor_mode (2 , &U _last_set_mode _dev ]
"592
[; ;BME280_driver/bme280.c: 592:         if ((rslt == 0) && (last_set_mode != 0x00))
[e $ ! && == -> _rslt `i -> 0 `i != -> _last_set_mode `i -> 0 `i 43  ]
"593
[; ;BME280_driver/bme280.c: 593:         {
{
"594
[; ;BME280_driver/bme280.c: 594:             rslt = put_device_to_sleep(dev);
[e = _rslt ( _put_device_to_sleep (1 _dev ]
"595
[; ;BME280_driver/bme280.c: 595:         }
}
[e :U 43 ]
"598
[; ;BME280_driver/bme280.c: 598:         if (rslt == 0)
[e $ ! == -> _rslt `i -> 0 `i 44  ]
"599
[; ;BME280_driver/bme280.c: 599:         {
{
"600
[; ;BME280_driver/bme280.c: 600:             rslt = write_power_mode(sensor_mode, dev);
[e = _rslt ( _write_power_mode (2 , _sensor_mode _dev ]
"601
[; ;BME280_driver/bme280.c: 601:         }
}
[e :U 44 ]
"602
[; ;BME280_driver/bme280.c: 602:     }
}
[e :U 42 ]
"604
[; ;BME280_driver/bme280.c: 604:     return rslt;
[e ) _rslt ]
[e $UE 41  ]
"605
[; ;BME280_driver/bme280.c: 605: }
[e :UE 41 ]
}
"610
[; ;BME280_driver/bme280.c: 610: int8_t bme280_get_sensor_mode(uint8_t *sensor_mode, const struct bme280_dev *dev)
[v _bme280_get_sensor_mode `(c ~T0 @X0 1 ef2`*uc`*CS5 ]
"611
[; ;BME280_driver/bme280.c: 611: {
{
[e :U _bme280_get_sensor_mode ]
"610
[; ;BME280_driver/bme280.c: 610: int8_t bme280_get_sensor_mode(uint8_t *sensor_mode, const struct bme280_dev *dev)
[v _sensor_mode `*uc ~T0 @X0 1 r1 ]
[v _dev `*CS5 ~T0 @X0 1 r2 ]
"611
[; ;BME280_driver/bme280.c: 611: {
[f ]
"612
[; ;BME280_driver/bme280.c: 612:     int8_t rslt;
[v _rslt `c ~T0 @X0 1 a ]
"615
[; ;BME280_driver/bme280.c: 615:     rslt = null_ptr_check(dev);
[e = _rslt ( _null_ptr_check (1 _dev ]
"616
[; ;BME280_driver/bme280.c: 616:     if (rslt == 0)
[e $ ! == -> _rslt `i -> 0 `i 46  ]
"617
[; ;BME280_driver/bme280.c: 617:     {
{
"619
[; ;BME280_driver/bme280.c: 619:         rslt = bme280_get_regs(0xF4, sensor_mode, 1, dev);
[e = _rslt ( _bme280_get_regs (4 , , , -> -> 244 `i `uc _sensor_mode -> -> 1 `i `us _dev ]
"622
[; ;BME280_driver/bme280.c: 622:         *sensor_mode = (*sensor_mode & ( 0x03));
[e = *U _sensor_mode -> & -> *U _sensor_mode `i -> 3 `i `uc ]
"623
[; ;BME280_driver/bme280.c: 623:     }
}
[e :U 46 ]
"625
[; ;BME280_driver/bme280.c: 625:     return rslt;
[e ) _rslt ]
[e $UE 45  ]
"626
[; ;BME280_driver/bme280.c: 626: }
[e :UE 45 ]
}
"631
[; ;BME280_driver/bme280.c: 631: int8_t bme280_soft_reset(const struct bme280_dev *dev)
[v _bme280_soft_reset `(c ~T0 @X0 1 ef1`*CS5 ]
"632
[; ;BME280_driver/bme280.c: 632: {
{
[e :U _bme280_soft_reset ]
"631
[; ;BME280_driver/bme280.c: 631: int8_t bme280_soft_reset(const struct bme280_dev *dev)
[v _dev `*CS5 ~T0 @X0 1 r1 ]
"632
[; ;BME280_driver/bme280.c: 632: {
[f ]
"633
[; ;BME280_driver/bme280.c: 633:     int8_t rslt;
[v _rslt `c ~T0 @X0 1 a ]
"634
[; ;BME280_driver/bme280.c: 634:     uint8_t reg_addr = 0xE0;
[v _reg_addr `uc ~T0 @X0 1 a ]
[e = _reg_addr -> -> 224 `i `uc ]
"637
[; ;BME280_driver/bme280.c: 637:     uint8_t soft_rst_cmd = 0xB6;
[v _soft_rst_cmd `uc ~T0 @X0 1 a ]
[e = _soft_rst_cmd -> -> 182 `i `uc ]
"640
[; ;BME280_driver/bme280.c: 640:     rslt = null_ptr_check(dev);
[e = _rslt ( _null_ptr_check (1 _dev ]
"643
[; ;BME280_driver/bme280.c: 643:     if (rslt == 0)
[e $ ! == -> _rslt `i -> 0 `i 48  ]
"644
[; ;BME280_driver/bme280.c: 644:     {
{
"646
[; ;BME280_driver/bme280.c: 646:         rslt = bme280_set_regs(&reg_addr, &soft_rst_cmd, 1, dev);
[e = _rslt ( _bme280_set_regs (4 , , , &U _reg_addr -> &U _soft_rst_cmd `*Cuc -> -> 1 `i `uc _dev ]
"649
[; ;BME280_driver/bme280.c: 649:         dev->delay_ms(2);
[e ( *U . *U _dev 5 (1 -> -> -> 2 `i `l `ul ]
"650
[; ;BME280_driver/bme280.c: 650:     }
}
[e :U 48 ]
"652
[; ;BME280_driver/bme280.c: 652:     return rslt;
[e ) _rslt ]
[e $UE 47  ]
"653
[; ;BME280_driver/bme280.c: 653: }
[e :UE 47 ]
}
"660
[; ;BME280_driver/bme280.c: 660: int8_t bme280_get_sensor_data(uint8_t sensor_comp, struct bme280_data *comp_data, struct bme280_dev *dev)
[v _bme280_get_sensor_data `(c ~T0 @X0 1 ef3`uc`*S2`*S5 ]
"661
[; ;BME280_driver/bme280.c: 661: {
{
[e :U _bme280_get_sensor_data ]
"660
[; ;BME280_driver/bme280.c: 660: int8_t bme280_get_sensor_data(uint8_t sensor_comp, struct bme280_data *comp_data, struct bme280_dev *dev)
[v _sensor_comp `uc ~T0 @X0 1 r1 ]
[v _comp_data `*S2 ~T0 @X0 1 r2 ]
[v _dev `*S5 ~T0 @X0 1 r3 ]
"661
[; ;BME280_driver/bme280.c: 661: {
[f ]
"662
[; ;BME280_driver/bme280.c: 662:     int8_t rslt;
[v _rslt `c ~T0 @X0 1 a ]
[v F271 `uc ~T0 @X0 -> 8 `i s ]
[i F271
:U ..
"667
[; ;BME280_driver/bme280.c: 667:     uint8_t reg_data[8] = { 0 };
-> -> 0 `i `uc
..
]
[v _reg_data `uc ~T0 @X0 -> 8 `i a ]
[e = _reg_data F271 ]
[v F273 `S3 ~T0 @X0 1 s ]
[i F273
:U ..
:U ..
"668
[; ;BME280_driver/bme280.c: 668:     struct bme280_uncomp_data uncomp_data = { 0 };
-> -> -> 0 `i `l `ul
..
..
]
[v _uncomp_data `S3 ~T0 @X0 1 a ]
[e = _uncomp_data F273 ]
"671
[; ;BME280_driver/bme280.c: 671:     rslt = null_ptr_check(dev);
[e = _rslt ( _null_ptr_check (1 -> _dev `*CS5 ]
"672
[; ;BME280_driver/bme280.c: 672:     if ((rslt == 0) && (comp_data != ((void*)0)))
[e $ ! && == -> _rslt `i -> 0 `i != _comp_data -> -> -> 0 `i `*v `*S2 50  ]
"673
[; ;BME280_driver/bme280.c: 673:     {
{
"675
[; ;BME280_driver/bme280.c: 675:         rslt = bme280_get_regs(0xF7, reg_data, 8, dev);
[e = _rslt ( _bme280_get_regs (4 , , , -> -> 247 `i `uc &U _reg_data -> -> 8 `i `us -> _dev `*CS5 ]
"676
[; ;BME280_driver/bme280.c: 676:         if (rslt == 0)
[e $ ! == -> _rslt `i -> 0 `i 51  ]
"677
[; ;BME280_driver/bme280.c: 677:         {
{
"679
[; ;BME280_driver/bme280.c: 679:             bme280_parse_sensor_data(reg_data, &uncomp_data);
[e ( _bme280_parse_sensor_data (2 , -> &U _reg_data `*Cuc &U _uncomp_data ]
"684
[; ;BME280_driver/bme280.c: 684:             rslt = bme280_compensate_data(sensor_comp, &uncomp_data, comp_data, &dev->calib_data);
[e = _rslt ( _bme280_compensate_data (4 , , , _sensor_comp -> &U _uncomp_data `*CS3 _comp_data &U . *U _dev 6 ]
"685
[; ;BME280_driver/bme280.c: 685:         }
}
[e :U 51 ]
"686
[; ;BME280_driver/bme280.c: 686:     }
}
[e $U 52  ]
"687
[; ;BME280_driver/bme280.c: 687:     else
[e :U 50 ]
"688
[; ;BME280_driver/bme280.c: 688:     {
{
"689
[; ;BME280_driver/bme280.c: 689:         rslt = -1;
[e = _rslt -> -U -> 1 `i `c ]
"690
[; ;BME280_driver/bme280.c: 690:     }
}
[e :U 52 ]
"692
[; ;BME280_driver/bme280.c: 692:     return rslt;
[e ) _rslt ]
[e $UE 49  ]
"693
[; ;BME280_driver/bme280.c: 693: }
[e :UE 49 ]
}
"699
[; ;BME280_driver/bme280.c: 699: void bme280_parse_sensor_data(const uint8_t *reg_data, struct bme280_uncomp_data *uncomp_data)
[v _bme280_parse_sensor_data `(v ~T0 @X0 1 ef2`*Cuc`*S3 ]
"700
[; ;BME280_driver/bme280.c: 700: {
{
[e :U _bme280_parse_sensor_data ]
"699
[; ;BME280_driver/bme280.c: 699: void bme280_parse_sensor_data(const uint8_t *reg_data, struct bme280_uncomp_data *uncomp_data)
[v _reg_data `*Cuc ~T0 @X0 1 r1 ]
[v _uncomp_data `*S3 ~T0 @X0 1 r2 ]
"700
[; ;BME280_driver/bme280.c: 700: {
[f ]
"702
[; ;BME280_driver/bme280.c: 702:     uint32_t data_xlsb;
[v _data_xlsb `ul ~T0 @X0 1 a ]
"703
[; ;BME280_driver/bme280.c: 703:     uint32_t data_lsb;
[v _data_lsb `ul ~T0 @X0 1 a ]
"704
[; ;BME280_driver/bme280.c: 704:     uint32_t data_msb;
[v _data_msb `ul ~T0 @X0 1 a ]
"707
[; ;BME280_driver/bme280.c: 707:     data_msb = (uint32_t)reg_data[0] << 12;
[e = _data_msb << -> *U + _reg_data * -> -> 0 `i `x -> -> # *U _reg_data `i `x `ul -> 12 `i ]
"708
[; ;BME280_driver/bme280.c: 708:     data_lsb = (uint32_t)reg_data[1] << 4;
[e = _data_lsb << -> *U + _reg_data * -> -> 1 `i `x -> -> # *U _reg_data `i `x `ul -> 4 `i ]
"709
[; ;BME280_driver/bme280.c: 709:     data_xlsb = (uint32_t)reg_data[2] >> 4;
[e = _data_xlsb >> -> *U + _reg_data * -> -> 2 `i `x -> -> # *U _reg_data `i `x `ul -> 4 `i ]
"710
[; ;BME280_driver/bme280.c: 710:     uncomp_data->pressure = data_msb | data_lsb | data_xlsb;
[e = . *U _uncomp_data 0 | | _data_msb _data_lsb _data_xlsb ]
"713
[; ;BME280_driver/bme280.c: 713:     data_msb = (uint32_t)reg_data[3] << 12;
[e = _data_msb << -> *U + _reg_data * -> -> 3 `i `x -> -> # *U _reg_data `i `x `ul -> 12 `i ]
"714
[; ;BME280_driver/bme280.c: 714:     data_lsb = (uint32_t)reg_data[4] << 4;
[e = _data_lsb << -> *U + _reg_data * -> -> 4 `i `x -> -> # *U _reg_data `i `x `ul -> 4 `i ]
"715
[; ;BME280_driver/bme280.c: 715:     data_xlsb = (uint32_t)reg_data[5] >> 4;
[e = _data_xlsb >> -> *U + _reg_data * -> -> 5 `i `x -> -> # *U _reg_data `i `x `ul -> 4 `i ]
"716
[; ;BME280_driver/bme280.c: 716:     uncomp_data->temperature = data_msb | data_lsb | data_xlsb;
[e = . *U _uncomp_data 1 | | _data_msb _data_lsb _data_xlsb ]
"719
[; ;BME280_driver/bme280.c: 719:     data_lsb = (uint32_t)reg_data[6] << 8;
[e = _data_lsb << -> *U + _reg_data * -> -> 6 `i `x -> -> # *U _reg_data `i `x `ul -> 8 `i ]
"720
[; ;BME280_driver/bme280.c: 720:     data_msb = (uint32_t)reg_data[7];
[e = _data_msb -> *U + _reg_data * -> -> 7 `i `x -> -> # *U _reg_data `i `x `ul ]
"721
[; ;BME280_driver/bme280.c: 721:     uncomp_data->humidity = data_msb | data_lsb;
[e = . *U _uncomp_data 2 | _data_msb _data_lsb ]
"722
[; ;BME280_driver/bme280.c: 722: }
[e :UE 53 ]
}
"729
[; ;BME280_driver/bme280.c: 729: int8_t bme280_compensate_data(uint8_t sensor_comp,
[v _bme280_compensate_data `(c ~T0 @X0 1 ef4`uc`*CS3`*S2`*S1 ]
"733
[; ;BME280_driver/bme280.c: 733: {
{
[e :U _bme280_compensate_data ]
"729
[; ;BME280_driver/bme280.c: 729: int8_t bme280_compensate_data(uint8_t sensor_comp,
[v _sensor_comp `uc ~T0 @X0 1 r1 ]
"730
[; ;BME280_driver/bme280.c: 730:                               const struct bme280_uncomp_data *uncomp_data,
[v _uncomp_data `*CS3 ~T0 @X0 1 r2 ]
"731
[; ;BME280_driver/bme280.c: 731:                               struct bme280_data *comp_data,
[v _comp_data `*S2 ~T0 @X0 1 r3 ]
"732
[; ;BME280_driver/bme280.c: 732:                               struct bme280_calib_data *calib_data)
[v _calib_data `*S1 ~T0 @X0 1 r4 ]
"733
[; ;BME280_driver/bme280.c: 733: {
[f ]
"734
[; ;BME280_driver/bme280.c: 734:     int8_t rslt = 0;
[v _rslt `c ~T0 @X0 1 a ]
[e = _rslt -> -> 0 `i `c ]
"736
[; ;BME280_driver/bme280.c: 736:     if ((uncomp_data != ((void*)0)) && (comp_data != ((void*)0)) && (calib_data != ((void*)0)))
[e $ ! && && != _uncomp_data -> -> -> 0 `i `*v `*CS3 != _comp_data -> -> -> 0 `i `*v `*S2 != _calib_data -> -> -> 0 `i `*v `*S1 55  ]
"737
[; ;BME280_driver/bme280.c: 737:     {
{
"739
[; ;BME280_driver/bme280.c: 739:         comp_data->temperature = 0;
[e = . *U _comp_data 1 -> -> 0 `i `l ]
"740
[; ;BME280_driver/bme280.c: 740:         comp_data->pressure = 0;
[e = . *U _comp_data 0 -> -> -> 0 `i `l `ul ]
"741
[; ;BME280_driver/bme280.c: 741:         comp_data->humidity = 0;
[e = . *U _comp_data 2 -> -> -> 0 `i `l `ul ]
"744
[; ;BME280_driver/bme280.c: 744:         if (sensor_comp & (1 | 1 << 1 | 1 << 2))
[e $ ! != & -> _sensor_comp `i | | -> 1 `i << -> 1 `i -> 1 `i << -> 1 `i -> 2 `i -> 0 `i 56  ]
"745
[; ;BME280_driver/bme280.c: 745:         {
{
"747
[; ;BME280_driver/bme280.c: 747:             comp_data->temperature = compensate_temperature(uncomp_data, calib_data);
[e = . *U _comp_data 1 ( _compensate_temperature (2 , _uncomp_data _calib_data ]
"748
[; ;BME280_driver/bme280.c: 748:         }
}
[e :U 56 ]
"749
[; ;BME280_driver/bme280.c: 749:         if (sensor_comp & 1)
[e $ ! != & -> _sensor_comp `i -> 1 `i -> 0 `i 57  ]
"750
[; ;BME280_driver/bme280.c: 750:         {
{
"752
[; ;BME280_driver/bme280.c: 752:             comp_data->pressure = compensate_pressure(uncomp_data, calib_data);
[e = . *U _comp_data 0 ( _compensate_pressure (2 , _uncomp_data -> _calib_data `*CS1 ]
"753
[; ;BME280_driver/bme280.c: 753:         }
}
[e :U 57 ]
"754
[; ;BME280_driver/bme280.c: 754:         if (sensor_comp & 1 << 2)
[e $ ! != & -> _sensor_comp `i << -> 1 `i -> 2 `i -> 0 `i 58  ]
"755
[; ;BME280_driver/bme280.c: 755:         {
{
"761
[; ;BME280_driver/bme280.c: 761:         }
}
[e :U 58 ]
"762
[; ;BME280_driver/bme280.c: 762:     }
}
[e $U 59  ]
"763
[; ;BME280_driver/bme280.c: 763:     else
[e :U 55 ]
"764
[; ;BME280_driver/bme280.c: 764:     {
{
"765
[; ;BME280_driver/bme280.c: 765:         rslt = -1;
[e = _rslt -> -U -> 1 `i `c ]
"766
[; ;BME280_driver/bme280.c: 766:     }
}
[e :U 59 ]
"768
[; ;BME280_driver/bme280.c: 768:     return rslt;
[e ) _rslt ]
[e $UE 54  ]
"769
[; ;BME280_driver/bme280.c: 769: }
[e :UE 54 ]
}
"775
[; ;BME280_driver/bme280.c: 775: static int8_t set_osr_settings(uint8_t desired_settings,
[v _set_osr_settings `(c ~T0 @X0 1 sf3`uc`*CS4`*CS5 ]
"778
[; ;BME280_driver/bme280.c: 778: {
{
[e :U _set_osr_settings ]
"775
[; ;BME280_driver/bme280.c: 775: static int8_t set_osr_settings(uint8_t desired_settings,
[v _desired_settings `uc ~T0 @X0 1 r1 ]
"776
[; ;BME280_driver/bme280.c: 776:                                const struct bme280_settings *settings,
[v _settings `*CS4 ~T0 @X0 1 r2 ]
"777
[; ;BME280_driver/bme280.c: 777:                                const struct bme280_dev *dev)
[v _dev `*CS5 ~T0 @X0 1 r3 ]
"778
[; ;BME280_driver/bme280.c: 778: {
[f ]
"779
[; ;BME280_driver/bme280.c: 779:     int8_t rslt = 1;
[v _rslt `c ~T0 @X0 1 a ]
[e = _rslt -> -> 1 `i `c ]
"781
[; ;BME280_driver/bme280.c: 781:     if (desired_settings & 1 << 2)
[e $ ! != & -> _desired_settings `i << -> 1 `i -> 2 `i -> 0 `i 61  ]
"782
[; ;BME280_driver/bme280.c: 782:     {
{
"783
[; ;BME280_driver/bme280.c: 783:         rslt = set_osr_humidity_settings(settings, dev);
[e = _rslt ( _set_osr_humidity_settings (2 , _settings _dev ]
"784
[; ;BME280_driver/bme280.c: 784:     }
}
[e :U 61 ]
"785
[; ;BME280_driver/bme280.c: 785:     if (desired_settings & (1 | 1 << 1))
[e $ ! != & -> _desired_settings `i | -> 1 `i << -> 1 `i -> 1 `i -> 0 `i 62  ]
"786
[; ;BME280_driver/bme280.c: 786:     {
{
"787
[; ;BME280_driver/bme280.c: 787:         rslt = set_osr_press_temp_settings(desired_settings, settings, dev);
[e = _rslt ( _set_osr_press_temp_settings (3 , , _desired_settings _settings _dev ]
"788
[; ;BME280_driver/bme280.c: 788:     }
}
[e :U 62 ]
"790
[; ;BME280_driver/bme280.c: 790:     return rslt;
[e ) _rslt ]
[e $UE 60  ]
"791
[; ;BME280_driver/bme280.c: 791: }
[e :UE 60 ]
}
"796
[; ;BME280_driver/bme280.c: 796: static int8_t set_osr_humidity_settings(const struct bme280_settings *settings, const struct bme280_dev *dev)
[v _set_osr_humidity_settings `(c ~T0 @X0 1 sf2`*CS4`*CS5 ]
"797
[; ;BME280_driver/bme280.c: 797: {
{
[e :U _set_osr_humidity_settings ]
"796
[; ;BME280_driver/bme280.c: 796: static int8_t set_osr_humidity_settings(const struct bme280_settings *settings, const struct bme280_dev *dev)
[v _settings `*CS4 ~T0 @X0 1 r1 ]
[v _dev `*CS5 ~T0 @X0 1 r2 ]
"797
[; ;BME280_driver/bme280.c: 797: {
[f ]
"798
[; ;BME280_driver/bme280.c: 798:     int8_t rslt;
[v _rslt `c ~T0 @X0 1 a ]
"799
[; ;BME280_driver/bme280.c: 799:     uint8_t ctrl_hum;
[v _ctrl_hum `uc ~T0 @X0 1 a ]
"800
[; ;BME280_driver/bme280.c: 800:     uint8_t ctrl_meas;
[v _ctrl_meas `uc ~T0 @X0 1 a ]
"801
[; ;BME280_driver/bme280.c: 801:     uint8_t reg_addr = 0xF2;
[v _reg_addr `uc ~T0 @X0 1 a ]
[e = _reg_addr -> -> 242 `i `uc ]
"803
[; ;BME280_driver/bme280.c: 803:     ctrl_hum = settings->osr_h & 0x07;
[e = _ctrl_hum -> & -> . *U _settings 2 `i -> 7 `i `uc ]
"806
[; ;BME280_driver/bme280.c: 806:     rslt = bme280_set_regs(&reg_addr, &ctrl_hum, 1, dev);
[e = _rslt ( _bme280_set_regs (4 , , , &U _reg_addr -> &U _ctrl_hum `*Cuc -> -> 1 `i `uc _dev ]
"811
[; ;BME280_driver/bme280.c: 811:     if (rslt == 0)
[e $ ! == -> _rslt `i -> 0 `i 64  ]
"812
[; ;BME280_driver/bme280.c: 812:     {
{
"813
[; ;BME280_driver/bme280.c: 813:         reg_addr = 0xF4;
[e = _reg_addr -> -> 244 `i `uc ]
"814
[; ;BME280_driver/bme280.c: 814:         rslt = bme280_get_regs(reg_addr, &ctrl_meas, 1, dev);
[e = _rslt ( _bme280_get_regs (4 , , , _reg_addr &U _ctrl_meas -> -> 1 `i `us _dev ]
"815
[; ;BME280_driver/bme280.c: 815:         if (rslt == 0)
[e $ ! == -> _rslt `i -> 0 `i 65  ]
"816
[; ;BME280_driver/bme280.c: 816:         {
{
"817
[; ;BME280_driver/bme280.c: 817:             rslt = bme280_set_regs(&reg_addr, &ctrl_meas, 1, dev);
[e = _rslt ( _bme280_set_regs (4 , , , &U _reg_addr -> &U _ctrl_meas `*Cuc -> -> 1 `i `uc _dev ]
"818
[; ;BME280_driver/bme280.c: 818:         }
}
[e :U 65 ]
"819
[; ;BME280_driver/bme280.c: 819:     }
}
[e :U 64 ]
"821
[; ;BME280_driver/bme280.c: 821:     return rslt;
[e ) _rslt ]
[e $UE 63  ]
"822
[; ;BME280_driver/bme280.c: 822: }
[e :UE 63 ]
}
"828
[; ;BME280_driver/bme280.c: 828: static int8_t set_osr_press_temp_settings(uint8_t desired_settings,
[v _set_osr_press_temp_settings `(c ~T0 @X0 1 sf3`uc`*CS4`*CS5 ]
"831
[; ;BME280_driver/bme280.c: 831: {
{
[e :U _set_osr_press_temp_settings ]
"828
[; ;BME280_driver/bme280.c: 828: static int8_t set_osr_press_temp_settings(uint8_t desired_settings,
[v _desired_settings `uc ~T0 @X0 1 r1 ]
"829
[; ;BME280_driver/bme280.c: 829:                                           const struct bme280_settings *settings,
[v _settings `*CS4 ~T0 @X0 1 r2 ]
"830
[; ;BME280_driver/bme280.c: 830:                                           const struct bme280_dev *dev)
[v _dev `*CS5 ~T0 @X0 1 r3 ]
"831
[; ;BME280_driver/bme280.c: 831: {
[f ]
"832
[; ;BME280_driver/bme280.c: 832:     int8_t rslt;
[v _rslt `c ~T0 @X0 1 a ]
"833
[; ;BME280_driver/bme280.c: 833:     uint8_t reg_addr = 0xF4;
[v _reg_addr `uc ~T0 @X0 1 a ]
[e = _reg_addr -> -> 244 `i `uc ]
"834
[; ;BME280_driver/bme280.c: 834:     uint8_t reg_data;
[v _reg_data `uc ~T0 @X0 1 a ]
"836
[; ;BME280_driver/bme280.c: 836:     rslt = bme280_get_regs(reg_addr, &reg_data, 1, dev);
[e = _rslt ( _bme280_get_regs (4 , , , _reg_addr &U _reg_data -> -> 1 `i `us _dev ]
"837
[; ;BME280_driver/bme280.c: 837:     if (rslt == 0)
[e $ ! == -> _rslt `i -> 0 `i 67  ]
"838
[; ;BME280_driver/bme280.c: 838:     {
{
"839
[; ;BME280_driver/bme280.c: 839:         if (desired_settings & 1)
[e $ ! != & -> _desired_settings `i -> 1 `i -> 0 `i 68  ]
"840
[; ;BME280_driver/bme280.c: 840:         {
{
"841
[; ;BME280_driver/bme280.c: 841:             fill_osr_press_settings(&reg_data, settings);
[e ( _fill_osr_press_settings (2 , &U _reg_data _settings ]
"842
[; ;BME280_driver/bme280.c: 842:         }
}
[e :U 68 ]
"843
[; ;BME280_driver/bme280.c: 843:         if (desired_settings & 1 << 1)
[e $ ! != & -> _desired_settings `i << -> 1 `i -> 1 `i -> 0 `i 69  ]
"844
[; ;BME280_driver/bme280.c: 844:         {
{
"845
[; ;BME280_driver/bme280.c: 845:             fill_osr_temp_settings(&reg_data, settings);
[e ( _fill_osr_temp_settings (2 , &U _reg_data _settings ]
"846
[; ;BME280_driver/bme280.c: 846:         }
}
[e :U 69 ]
"849
[; ;BME280_driver/bme280.c: 849:         rslt = bme280_set_regs(&reg_addr, &reg_data, 1, dev);
[e = _rslt ( _bme280_set_regs (4 , , , &U _reg_addr -> &U _reg_data `*Cuc -> -> 1 `i `uc _dev ]
"850
[; ;BME280_driver/bme280.c: 850:     }
}
[e :U 67 ]
"852
[; ;BME280_driver/bme280.c: 852:     return rslt;
[e ) _rslt ]
[e $UE 66  ]
"853
[; ;BME280_driver/bme280.c: 853: }
[e :UE 66 ]
}
"859
[; ;BME280_driver/bme280.c: 859: static int8_t set_filter_standby_settings(uint8_t desired_settings,
[v _set_filter_standby_settings `(c ~T0 @X0 1 sf3`uc`*CS4`*CS5 ]
"862
[; ;BME280_driver/bme280.c: 862: {
{
[e :U _set_filter_standby_settings ]
"859
[; ;BME280_driver/bme280.c: 859: static int8_t set_filter_standby_settings(uint8_t desired_settings,
[v _desired_settings `uc ~T0 @X0 1 r1 ]
"860
[; ;BME280_driver/bme280.c: 860:                                           const struct bme280_settings *settings,
[v _settings `*CS4 ~T0 @X0 1 r2 ]
"861
[; ;BME280_driver/bme280.c: 861:                                           const struct bme280_dev *dev)
[v _dev `*CS5 ~T0 @X0 1 r3 ]
"862
[; ;BME280_driver/bme280.c: 862: {
[f ]
"863
[; ;BME280_driver/bme280.c: 863:     int8_t rslt;
[v _rslt `c ~T0 @X0 1 a ]
"864
[; ;BME280_driver/bme280.c: 864:     uint8_t reg_addr = 0xF5;
[v _reg_addr `uc ~T0 @X0 1 a ]
[e = _reg_addr -> -> 245 `i `uc ]
"865
[; ;BME280_driver/bme280.c: 865:     uint8_t reg_data;
[v _reg_data `uc ~T0 @X0 1 a ]
"867
[; ;BME280_driver/bme280.c: 867:     rslt = bme280_get_regs(reg_addr, &reg_data, 1, dev);
[e = _rslt ( _bme280_get_regs (4 , , , _reg_addr &U _reg_data -> -> 1 `i `us _dev ]
"868
[; ;BME280_driver/bme280.c: 868:     if (rslt == 0)
[e $ ! == -> _rslt `i -> 0 `i 71  ]
"869
[; ;BME280_driver/bme280.c: 869:     {
{
"870
[; ;BME280_driver/bme280.c: 870:         if (desired_settings & 1 << 3)
[e $ ! != & -> _desired_settings `i << -> 1 `i -> 3 `i -> 0 `i 72  ]
"871
[; ;BME280_driver/bme280.c: 871:         {
{
"872
[; ;BME280_driver/bme280.c: 872:             fill_filter_settings(&reg_data, settings);
[e ( _fill_filter_settings (2 , &U _reg_data _settings ]
"873
[; ;BME280_driver/bme280.c: 873:         }
}
[e :U 72 ]
"874
[; ;BME280_driver/bme280.c: 874:         if (desired_settings & 1 << 4)
[e $ ! != & -> _desired_settings `i << -> 1 `i -> 4 `i -> 0 `i 73  ]
"875
[; ;BME280_driver/bme280.c: 875:         {
{
"876
[; ;BME280_driver/bme280.c: 876:             fill_standby_settings(&reg_data, settings);
[e ( _fill_standby_settings (2 , &U _reg_data _settings ]
"877
[; ;BME280_driver/bme280.c: 877:         }
}
[e :U 73 ]
"880
[; ;BME280_driver/bme280.c: 880:         rslt = bme280_set_regs(&reg_addr, &reg_data, 1, dev);
[e = _rslt ( _bme280_set_regs (4 , , , &U _reg_addr -> &U _reg_data `*Cuc -> -> 1 `i `uc _dev ]
"881
[; ;BME280_driver/bme280.c: 881:     }
}
[e :U 71 ]
"883
[; ;BME280_driver/bme280.c: 883:     return rslt;
[e ) _rslt ]
[e $UE 70  ]
"884
[; ;BME280_driver/bme280.c: 884: }
[e :UE 70 ]
}
"890
[; ;BME280_driver/bme280.c: 890: static void fill_filter_settings(uint8_t *reg_data, const struct bme280_settings *settings)
[v _fill_filter_settings `(v ~T0 @X0 1 sf2`*uc`*CS4 ]
"891
[; ;BME280_driver/bme280.c: 891: {
{
[e :U _fill_filter_settings ]
"890
[; ;BME280_driver/bme280.c: 890: static void fill_filter_settings(uint8_t *reg_data, const struct bme280_settings *settings)
[v _reg_data `*uc ~T0 @X0 1 r1 ]
[v _settings `*CS4 ~T0 @X0 1 r2 ]
"891
[; ;BME280_driver/bme280.c: 891: {
[f ]
"892
[; ;BME280_driver/bme280.c: 892:     *reg_data = ((*reg_data & ~( 0x1C)) | ((settings->filter << 0x02) & 0x1C));
[e = *U _reg_data -> | & -> *U _reg_data `i ~ -> 28 `i & << -> . *U _settings 3 `i -> 2 `i -> 28 `i `uc ]
"893
[; ;BME280_driver/bme280.c: 893: }
[e :UE 74 ]
}
"899
[; ;BME280_driver/bme280.c: 899: static void fill_standby_settings(uint8_t *reg_data, const struct bme280_settings *settings)
[v _fill_standby_settings `(v ~T0 @X0 1 sf2`*uc`*CS4 ]
"900
[; ;BME280_driver/bme280.c: 900: {
{
[e :U _fill_standby_settings ]
"899
[; ;BME280_driver/bme280.c: 899: static void fill_standby_settings(uint8_t *reg_data, const struct bme280_settings *settings)
[v _reg_data `*uc ~T0 @X0 1 r1 ]
[v _settings `*CS4 ~T0 @X0 1 r2 ]
"900
[; ;BME280_driver/bme280.c: 900: {
[f ]
"901
[; ;BME280_driver/bme280.c: 901:     *reg_data = ((*reg_data & ~( 0xE0)) | ((settings->standby_time << 0x05) & 0xE0));
[e = *U _reg_data -> | & -> *U _reg_data `i ~ -> 224 `i & << -> . *U _settings 4 `i -> 5 `i -> 224 `i `uc ]
"902
[; ;BME280_driver/bme280.c: 902: }
[e :UE 75 ]
}
"908
[; ;BME280_driver/bme280.c: 908: static void fill_osr_press_settings(uint8_t *reg_data, const struct bme280_settings *settings)
[v _fill_osr_press_settings `(v ~T0 @X0 1 sf2`*uc`*CS4 ]
"909
[; ;BME280_driver/bme280.c: 909: {
{
[e :U _fill_osr_press_settings ]
"908
[; ;BME280_driver/bme280.c: 908: static void fill_osr_press_settings(uint8_t *reg_data, const struct bme280_settings *settings)
[v _reg_data `*uc ~T0 @X0 1 r1 ]
[v _settings `*CS4 ~T0 @X0 1 r2 ]
"909
[; ;BME280_driver/bme280.c: 909: {
[f ]
"910
[; ;BME280_driver/bme280.c: 910:     *reg_data = ((*reg_data & ~( 0x1C)) | ((settings->osr_p << 0x02) & 0x1C));
[e = *U _reg_data -> | & -> *U _reg_data `i ~ -> 28 `i & << -> . *U _settings 0 `i -> 2 `i -> 28 `i `uc ]
"911
[; ;BME280_driver/bme280.c: 911: }
[e :UE 76 ]
}
"917
[; ;BME280_driver/bme280.c: 917: static void fill_osr_temp_settings(uint8_t *reg_data, const struct bme280_settings *settings)
[v _fill_osr_temp_settings `(v ~T0 @X0 1 sf2`*uc`*CS4 ]
"918
[; ;BME280_driver/bme280.c: 918: {
{
[e :U _fill_osr_temp_settings ]
"917
[; ;BME280_driver/bme280.c: 917: static void fill_osr_temp_settings(uint8_t *reg_data, const struct bme280_settings *settings)
[v _reg_data `*uc ~T0 @X0 1 r1 ]
[v _settings `*CS4 ~T0 @X0 1 r2 ]
"918
[; ;BME280_driver/bme280.c: 918: {
[f ]
"919
[; ;BME280_driver/bme280.c: 919:     *reg_data = ((*reg_data & ~( 0xE0)) | ((settings->osr_t << 0x05) & 0xE0));
[e = *U _reg_data -> | & -> *U _reg_data `i ~ -> 224 `i & << -> . *U _settings 1 `i -> 5 `i -> 224 `i `uc ]
"920
[; ;BME280_driver/bme280.c: 920: }
[e :UE 77 ]
}
"927
[; ;BME280_driver/bme280.c: 927: static void parse_device_settings(const uint8_t *reg_data, struct bme280_settings *settings)
[v _parse_device_settings `(v ~T0 @X0 1 sf2`*Cuc`*S4 ]
"928
[; ;BME280_driver/bme280.c: 928: {
{
[e :U _parse_device_settings ]
"927
[; ;BME280_driver/bme280.c: 927: static void parse_device_settings(const uint8_t *reg_data, struct bme280_settings *settings)
[v _reg_data `*Cuc ~T0 @X0 1 r1 ]
[v _settings `*S4 ~T0 @X0 1 r2 ]
"928
[; ;BME280_driver/bme280.c: 928: {
[f ]
"929
[; ;BME280_driver/bme280.c: 929:     settings->osr_h = (reg_data[0] & ( 0x07));
[e = . *U _settings 2 -> & -> *U + _reg_data * -> -> 0 `i `x -> -> # *U _reg_data `i `x `i -> 7 `i `uc ]
"930
[; ;BME280_driver/bme280.c: 930:     settings->osr_p = ((reg_data[2] & ( 0x1C)) >> ( 0x02));
[e = . *U _settings 0 -> >> & -> *U + _reg_data * -> -> 2 `i `x -> -> # *U _reg_data `i `x `i -> 28 `i -> 2 `i `uc ]
"931
[; ;BME280_driver/bme280.c: 931:     settings->osr_t = ((reg_data[2] & ( 0xE0)) >> ( 0x05));
[e = . *U _settings 1 -> >> & -> *U + _reg_data * -> -> 2 `i `x -> -> # *U _reg_data `i `x `i -> 224 `i -> 5 `i `uc ]
"932
[; ;BME280_driver/bme280.c: 932:     settings->filter = ((reg_data[3] & ( 0x1C)) >> ( 0x02));
[e = . *U _settings 3 -> >> & -> *U + _reg_data * -> -> 3 `i `x -> -> # *U _reg_data `i `x `i -> 28 `i -> 2 `i `uc ]
"933
[; ;BME280_driver/bme280.c: 933:     settings->standby_time = ((reg_data[3] & ( 0xE0)) >> ( 0x05));
[e = . *U _settings 4 -> >> & -> *U + _reg_data * -> -> 3 `i `x -> -> # *U _reg_data `i `x `i -> 224 `i -> 5 `i `uc ]
"934
[; ;BME280_driver/bme280.c: 934: }
[e :UE 78 ]
}
"939
[; ;BME280_driver/bme280.c: 939: static int8_t write_power_mode(uint8_t sensor_mode, const struct bme280_dev *dev)
[v _write_power_mode `(c ~T0 @X0 1 sf2`uc`*CS5 ]
"940
[; ;BME280_driver/bme280.c: 940: {
{
[e :U _write_power_mode ]
"939
[; ;BME280_driver/bme280.c: 939: static int8_t write_power_mode(uint8_t sensor_mode, const struct bme280_dev *dev)
[v _sensor_mode `uc ~T0 @X0 1 r1 ]
[v _dev `*CS5 ~T0 @X0 1 r2 ]
"940
[; ;BME280_driver/bme280.c: 940: {
[f ]
"941
[; ;BME280_driver/bme280.c: 941:     int8_t rslt;
[v _rslt `c ~T0 @X0 1 a ]
"942
[; ;BME280_driver/bme280.c: 942:     uint8_t reg_addr = 0xF4;
[v _reg_addr `uc ~T0 @X0 1 a ]
[e = _reg_addr -> -> 244 `i `uc ]
"945
[; ;BME280_driver/bme280.c: 945:     uint8_t sensor_mode_reg_val;
[v _sensor_mode_reg_val `uc ~T0 @X0 1 a ]
"948
[; ;BME280_driver/bme280.c: 948:     rslt = bme280_get_regs(reg_addr, &sensor_mode_reg_val, 1, dev);
[e = _rslt ( _bme280_get_regs (4 , , , _reg_addr &U _sensor_mode_reg_val -> -> 1 `i `us _dev ]
"951
[; ;BME280_driver/bme280.c: 951:     if (rslt == 0)
[e $ ! == -> _rslt `i -> 0 `i 80  ]
"952
[; ;BME280_driver/bme280.c: 952:     {
{
"953
[; ;BME280_driver/bme280.c: 953:         sensor_mode_reg_val = ((sensor_mode_reg_val & ~( 0x03)) | (sensor_mode & 0x03));
[e = _sensor_mode_reg_val -> | & -> _sensor_mode_reg_val `i ~ -> 3 `i & -> _sensor_mode `i -> 3 `i `uc ]
"956
[; ;BME280_driver/bme280.c: 956:         rslt = bme280_set_regs(&reg_addr, &sensor_mode_reg_val, 1, dev);
[e = _rslt ( _bme280_set_regs (4 , , , &U _reg_addr -> &U _sensor_mode_reg_val `*Cuc -> -> 1 `i `uc _dev ]
"957
[; ;BME280_driver/bme280.c: 957:     }
}
[e :U 80 ]
"959
[; ;BME280_driver/bme280.c: 959:     return rslt;
[e ) _rslt ]
[e $UE 79  ]
"960
[; ;BME280_driver/bme280.c: 960: }
[e :UE 79 ]
}
"965
[; ;BME280_driver/bme280.c: 965: static int8_t put_device_to_sleep(const struct bme280_dev *dev)
[v _put_device_to_sleep `(c ~T0 @X0 1 sf1`*CS5 ]
"966
[; ;BME280_driver/bme280.c: 966: {
{
[e :U _put_device_to_sleep ]
"965
[; ;BME280_driver/bme280.c: 965: static int8_t put_device_to_sleep(const struct bme280_dev *dev)
[v _dev `*CS5 ~T0 @X0 1 r1 ]
"966
[; ;BME280_driver/bme280.c: 966: {
[f ]
"967
[; ;BME280_driver/bme280.c: 967:     int8_t rslt;
[v _rslt `c ~T0 @X0 1 a ]
"968
[; ;BME280_driver/bme280.c: 968:     uint8_t reg_data[4];
[v _reg_data `uc ~T0 @X0 -> 4 `i a ]
"969
[; ;BME280_driver/bme280.c: 969:     struct bme280_settings settings;
[v _settings `S4 ~T0 @X0 1 a ]
"971
[; ;BME280_driver/bme280.c: 971:     rslt = bme280_get_regs(0xF2, reg_data, 4, dev);
[e = _rslt ( _bme280_get_regs (4 , , , -> -> 242 `i `uc &U _reg_data -> -> 4 `i `us _dev ]
"972
[; ;BME280_driver/bme280.c: 972:     if (rslt == 0)
[e $ ! == -> _rslt `i -> 0 `i 82  ]
"973
[; ;BME280_driver/bme280.c: 973:     {
{
"974
[; ;BME280_driver/bme280.c: 974:         parse_device_settings(reg_data, &settings);
[e ( _parse_device_settings (2 , -> &U _reg_data `*Cuc &U _settings ]
"975
[; ;BME280_driver/bme280.c: 975:         rslt = bme280_soft_reset(dev);
[e = _rslt ( _bme280_soft_reset (1 _dev ]
"976
[; ;BME280_driver/bme280.c: 976:         if (rslt == 0)
[e $ ! == -> _rslt `i -> 0 `i 83  ]
"977
[; ;BME280_driver/bme280.c: 977:         {
{
"978
[; ;BME280_driver/bme280.c: 978:             rslt = reload_device_settings(&settings, dev);
[e = _rslt ( _reload_device_settings (2 , -> &U _settings `*CS4 _dev ]
"979
[; ;BME280_driver/bme280.c: 979:         }
}
[e :U 83 ]
"980
[; ;BME280_driver/bme280.c: 980:     }
}
[e :U 82 ]
"982
[; ;BME280_driver/bme280.c: 982:     return rslt;
[e ) _rslt ]
[e $UE 81  ]
"983
[; ;BME280_driver/bme280.c: 983: }
[e :UE 81 ]
}
"989
[; ;BME280_driver/bme280.c: 989: static int8_t reload_device_settings(const struct bme280_settings *settings, const struct bme280_dev *dev)
[v _reload_device_settings `(c ~T0 @X0 1 sf2`*CS4`*CS5 ]
"990
[; ;BME280_driver/bme280.c: 990: {
{
[e :U _reload_device_settings ]
"989
[; ;BME280_driver/bme280.c: 989: static int8_t reload_device_settings(const struct bme280_settings *settings, const struct bme280_dev *dev)
[v _settings `*CS4 ~T0 @X0 1 r1 ]
[v _dev `*CS5 ~T0 @X0 1 r2 ]
"990
[; ;BME280_driver/bme280.c: 990: {
[f ]
"991
[; ;BME280_driver/bme280.c: 991:     int8_t rslt;
[v _rslt `c ~T0 @X0 1 a ]
"993
[; ;BME280_driver/bme280.c: 993:     rslt = set_osr_settings(0x1F, settings, dev);
[e = _rslt ( _set_osr_settings (3 , , -> -> 31 `i `uc _settings _dev ]
"994
[; ;BME280_driver/bme280.c: 994:     if (rslt == 0)
[e $ ! == -> _rslt `i -> 0 `i 85  ]
"995
[; ;BME280_driver/bme280.c: 995:     {
{
"996
[; ;BME280_driver/bme280.c: 996:         rslt = set_filter_standby_settings(0x1F, settings, dev);
[e = _rslt ( _set_filter_standby_settings (3 , , -> -> 31 `i `uc _settings _dev ]
"997
[; ;BME280_driver/bme280.c: 997:     }
}
[e :U 85 ]
"999
[; ;BME280_driver/bme280.c: 999:     return rslt;
[e ) _rslt ]
[e $UE 84  ]
"1000
[; ;BME280_driver/bme280.c: 1000: }
[e :UE 84 ]
}
"1124
[; ;BME280_driver/bme280.c: 1124: static int32_t compensate_temperature(const struct bme280_uncomp_data *uncomp_data,
[v _compensate_temperature `(l ~T0 @X0 1 sf2`*CS3`*S1 ]
"1126
[; ;BME280_driver/bme280.c: 1126: {
{
[e :U _compensate_temperature ]
"1124
[; ;BME280_driver/bme280.c: 1124: static int32_t compensate_temperature(const struct bme280_uncomp_data *uncomp_data,
[v _uncomp_data `*CS3 ~T0 @X0 1 r1 ]
"1125
[; ;BME280_driver/bme280.c: 1125:                                       struct bme280_calib_data *calib_data)
[v _calib_data `*S1 ~T0 @X0 1 r2 ]
"1126
[; ;BME280_driver/bme280.c: 1126: {
[f ]
"1127
[; ;BME280_driver/bme280.c: 1127:     int32_t var1;
[v _var1 `l ~T0 @X0 1 a ]
"1128
[; ;BME280_driver/bme280.c: 1128:     int32_t var2;
[v _var2 `l ~T0 @X0 1 a ]
"1129
[; ;BME280_driver/bme280.c: 1129:     int32_t temperature;
[v _temperature `l ~T0 @X0 1 a ]
"1130
[; ;BME280_driver/bme280.c: 1130:     int32_t temperature_min = -4000;
[v _temperature_min `l ~T0 @X0 1 a ]
[e = _temperature_min -> -U -> 4000 `i `l ]
"1131
[; ;BME280_driver/bme280.c: 1131:     int32_t temperature_max = 8500;
[v _temperature_max `l ~T0 @X0 1 a ]
[e = _temperature_max -> -> 8500 `i `l ]
"1133
[; ;BME280_driver/bme280.c: 1133:     var1 = (int32_t)((uncomp_data->temperature / 8) - ((int32_t)calib_data->dig_T1 * 2));
[e = _var1 -> - / . *U _uncomp_data 1 -> -> -> 8 `i `l `ul -> * -> . *U _calib_data 0 `l -> -> 2 `i `l `ul `l ]
"1134
[; ;BME280_driver/bme280.c: 1134:     var1 = (var1 * ((int32_t)calib_data->dig_T2)) / 2048;
[e = _var1 / * _var1 -> . *U _calib_data 1 `l -> -> 2048 `i `l ]
"1135
[; ;BME280_driver/bme280.c: 1135:     var2 = (int32_t)((uncomp_data->temperature / 16) - ((int32_t)calib_data->dig_T1));
[e = _var2 -> - / . *U _uncomp_data 1 -> -> -> 16 `i `l `ul -> -> . *U _calib_data 0 `l `ul `l ]
"1136
[; ;BME280_driver/bme280.c: 1136:     var2 = (((var2 * var2) / 4096) * ((int32_t)calib_data->dig_T3)) / 16384;
[e = _var2 / * / * _var2 _var2 -> -> 4096 `i `l -> . *U _calib_data 2 `l -> -> 16384 `i `l ]
"1137
[; ;BME280_driver/bme280.c: 1137:     calib_data->t_fine = var1 + var2;
[e = . *U _calib_data 18 + _var1 _var2 ]
"1138
[; ;BME280_driver/bme280.c: 1138:     temperature = (calib_data->t_fine * 5 + 128) / 256;
[e = _temperature / + * . *U _calib_data 18 -> -> 5 `i `l -> -> 128 `i `l -> -> 256 `i `l ]
"1139
[; ;BME280_driver/bme280.c: 1139:     if (temperature < temperature_min)
[e $ ! < _temperature _temperature_min 87  ]
"1140
[; ;BME280_driver/bme280.c: 1140:     {
{
"1141
[; ;BME280_driver/bme280.c: 1141:         temperature = temperature_min;
[e = _temperature _temperature_min ]
"1142
[; ;BME280_driver/bme280.c: 1142:     }
}
[e $U 88  ]
"1143
[; ;BME280_driver/bme280.c: 1143:     else if (temperature > temperature_max)
[e :U 87 ]
[e $ ! > _temperature _temperature_max 89  ]
"1144
[; ;BME280_driver/bme280.c: 1144:     {
{
"1145
[; ;BME280_driver/bme280.c: 1145:         temperature = temperature_max;
[e = _temperature _temperature_max ]
"1146
[; ;BME280_driver/bme280.c: 1146:     }
}
[e :U 89 ]
[e :U 88 ]
"1148
[; ;BME280_driver/bme280.c: 1148:     return temperature;
[e ) _temperature ]
[e $UE 86  ]
"1149
[; ;BME280_driver/bme280.c: 1149: }
[e :UE 86 ]
}
"1207
[; ;BME280_driver/bme280.c: 1207: static uint32_t compensate_pressure(const struct bme280_uncomp_data *uncomp_data,
[v _compensate_pressure `(ul ~T0 @X0 1 sf2`*CS3`*CS1 ]
"1209
[; ;BME280_driver/bme280.c: 1209: {
{
[e :U _compensate_pressure ]
"1207
[; ;BME280_driver/bme280.c: 1207: static uint32_t compensate_pressure(const struct bme280_uncomp_data *uncomp_data,
[v _uncomp_data `*CS3 ~T0 @X0 1 r1 ]
"1208
[; ;BME280_driver/bme280.c: 1208:                                     const struct bme280_calib_data *calib_data)
[v _calib_data `*CS1 ~T0 @X0 1 r2 ]
"1209
[; ;BME280_driver/bme280.c: 1209: {
[f ]
"1210
[; ;BME280_driver/bme280.c: 1210:     int32_t var1;
[v _var1 `l ~T0 @X0 1 a ]
"1211
[; ;BME280_driver/bme280.c: 1211:     int32_t var2;
[v _var2 `l ~T0 @X0 1 a ]
"1212
[; ;BME280_driver/bme280.c: 1212:     int32_t var3;
[v _var3 `l ~T0 @X0 1 a ]
"1213
[; ;BME280_driver/bme280.c: 1213:     int32_t var4;
[v _var4 `l ~T0 @X0 1 a ]
"1214
[; ;BME280_driver/bme280.c: 1214:     uint32_t var5;
[v _var5 `ul ~T0 @X0 1 a ]
"1215
[; ;BME280_driver/bme280.c: 1215:     uint32_t pressure;
[v _pressure `ul ~T0 @X0 1 a ]
"1216
[; ;BME280_driver/bme280.c: 1216:     uint32_t pressure_min = 30000;
[v _pressure_min `ul ~T0 @X0 1 a ]
[e = _pressure_min -> -> -> 30000 `i `l `ul ]
"1217
[; ;BME280_driver/bme280.c: 1217:     uint32_t pressure_max = 110000;
[v _pressure_max `ul ~T0 @X0 1 a ]
[e = _pressure_max -> -> 110000 `l `ul ]
"1219
[; ;BME280_driver/bme280.c: 1219:     var1 = (((int32_t)calib_data->t_fine) / 2) - (int32_t)64000;
[e = _var1 - / . *U _calib_data 18 -> -> 2 `i `l -> 64000 `l ]
"1220
[; ;BME280_driver/bme280.c: 1220:     var2 = (((var1 / 4) * (var1 / 4)) / 2048) * ((int32_t)calib_data->dig_P6);
[e = _var2 * / * / _var1 -> -> 4 `i `l / _var1 -> -> 4 `i `l -> -> 2048 `i `l -> . *U _calib_data 8 `l ]
"1221
[; ;BME280_driver/bme280.c: 1221:     var2 = var2 + ((var1 * ((int32_t)calib_data->dig_P5)) * 2);
[e = _var2 + _var2 * * _var1 -> . *U _calib_data 7 `l -> -> 2 `i `l ]
"1222
[; ;BME280_driver/bme280.c: 1222:     var2 = (var2 / 4) + (((int32_t)calib_data->dig_P4) * 65536);
[e = _var2 + / _var2 -> -> 4 `i `l * -> . *U _calib_data 6 `l -> 65536 `l ]
"1223
[; ;BME280_driver/bme280.c: 1223:     var3 = (calib_data->dig_P3 * (((var1 / 4) * (var1 / 4)) / 8192)) / 8;
[e = _var3 / * -> . *U _calib_data 5 `l / * / _var1 -> -> 4 `i `l / _var1 -> -> 4 `i `l -> -> 8192 `i `l -> -> 8 `i `l ]
"1224
[; ;BME280_driver/bme280.c: 1224:     var4 = (((int32_t)calib_data->dig_P2) * var1) / 2;
[e = _var4 / * -> . *U _calib_data 4 `l _var1 -> -> 2 `i `l ]
"1225
[; ;BME280_driver/bme280.c: 1225:     var1 = (var3 + var4) / 262144;
[e = _var1 / + _var3 _var4 -> 262144 `l ]
"1226
[; ;BME280_driver/bme280.c: 1226:     var1 = (((32768 + var1)) * ((int32_t)calib_data->dig_P1)) / 32768;
[e = _var1 / * + -> 32768 `l _var1 -> . *U _calib_data 3 `l -> 32768 `l ]
"1229
[; ;BME280_driver/bme280.c: 1229:     if (var1)
[e $ ! != _var1 -> -> 0 `i `l 91  ]
"1230
[; ;BME280_driver/bme280.c: 1230:     {
{
"1231
[; ;BME280_driver/bme280.c: 1231:         var5 = (uint32_t)((uint32_t)1048576) - uncomp_data->pressure;
[e = _var5 - -> -> 1048576 `l `ul . *U _uncomp_data 0 ]
"1232
[; ;BME280_driver/bme280.c: 1232:         pressure = ((uint32_t)(var5 - (uint32_t)(var2 / 4096))) * 3125;
[e = _pressure * - _var5 -> / _var2 -> -> 4096 `i `l `ul -> -> -> 3125 `i `l `ul ]
"1233
[; ;BME280_driver/bme280.c: 1233:         if (pressure < 0x80000000)
[e $ ! < _pressure -> 2147483648 `ul 92  ]
"1234
[; ;BME280_driver/bme280.c: 1234:         {
{
"1235
[; ;BME280_driver/bme280.c: 1235:             pressure = (pressure << 1) / ((uint32_t)var1);
[e = _pressure / << _pressure -> 1 `i -> _var1 `ul ]
"1236
[; ;BME280_driver/bme280.c: 1236:         }
}
[e $U 93  ]
"1237
[; ;BME280_driver/bme280.c: 1237:         else
[e :U 92 ]
"1238
[; ;BME280_driver/bme280.c: 1238:         {
{
"1239
[; ;BME280_driver/bme280.c: 1239:             pressure = (pressure / (uint32_t)var1) * 2;
[e = _pressure * / _pressure -> _var1 `ul -> -> -> 2 `i `l `ul ]
"1240
[; ;BME280_driver/bme280.c: 1240:         }
}
[e :U 93 ]
"1241
[; ;BME280_driver/bme280.c: 1241:         var1 = (((int32_t)calib_data->dig_P9) * ((int32_t)(((pressure / 8) * (pressure / 8)) / 8192))) / 4096;
[e = _var1 / * -> . *U _calib_data 11 `l -> / * / _pressure -> -> -> 8 `i `l `ul / _pressure -> -> -> 8 `i `l `ul -> -> -> 8192 `i `l `ul `l -> -> 4096 `i `l ]
"1242
[; ;BME280_driver/bme280.c: 1242:         var2 = (((int32_t)(pressure / 4)) * ((int32_t)calib_data->dig_P8)) / 8192;
[e = _var2 / * -> / _pressure -> -> -> 4 `i `l `ul `l -> . *U _calib_data 10 `l -> -> 8192 `i `l ]
"1243
[; ;BME280_driver/bme280.c: 1243:         pressure = (uint32_t)((int32_t)pressure + ((var1 + var2 + calib_data->dig_P7) / 16));
[e = _pressure -> + -> _pressure `l / + + _var1 _var2 -> . *U _calib_data 9 `l -> -> 16 `i `l `ul ]
"1244
[; ;BME280_driver/bme280.c: 1244:         if (pressure < pressure_min)
[e $ ! < _pressure _pressure_min 94  ]
"1245
[; ;BME280_driver/bme280.c: 1245:         {
{
"1246
[; ;BME280_driver/bme280.c: 1246:             pressure = pressure_min;
[e = _pressure _pressure_min ]
"1247
[; ;BME280_driver/bme280.c: 1247:         }
}
[e $U 95  ]
"1248
[; ;BME280_driver/bme280.c: 1248:         else if (pressure > pressure_max)
[e :U 94 ]
[e $ ! > _pressure _pressure_max 96  ]
"1249
[; ;BME280_driver/bme280.c: 1249:         {
{
"1250
[; ;BME280_driver/bme280.c: 1250:             pressure = pressure_max;
[e = _pressure _pressure_max ]
"1251
[; ;BME280_driver/bme280.c: 1251:         }
}
[e :U 96 ]
[e :U 95 ]
"1252
[; ;BME280_driver/bme280.c: 1252:     }
}
[e $U 97  ]
"1253
[; ;BME280_driver/bme280.c: 1253:     else
[e :U 91 ]
"1254
[; ;BME280_driver/bme280.c: 1254:     {
{
"1255
[; ;BME280_driver/bme280.c: 1255:         pressure = pressure_min;
[e = _pressure _pressure_min ]
"1256
[; ;BME280_driver/bme280.c: 1256:     }
}
[e :U 97 ]
"1258
[; ;BME280_driver/bme280.c: 1258:     return pressure;
[e ) _pressure ]
[e $UE 90  ]
"1259
[; ;BME280_driver/bme280.c: 1259: }
[e :UE 90 ]
}
"1266
[; ;BME280_driver/bme280.c: 1266: static uint32_t compensate_humidity(const struct bme280_uncomp_data *uncomp_data,
[v _compensate_humidity `(ul ~T0 @X0 1 sf2`*CS3`*CS1 ]
"1268
[; ;BME280_driver/bme280.c: 1268: {
{
[e :U _compensate_humidity ]
"1266
[; ;BME280_driver/bme280.c: 1266: static uint32_t compensate_humidity(const struct bme280_uncomp_data *uncomp_data,
[v _uncomp_data `*CS3 ~T0 @X0 1 r1 ]
"1267
[; ;BME280_driver/bme280.c: 1267:                                     const struct bme280_calib_data *calib_data)
[v _calib_data `*CS1 ~T0 @X0 1 r2 ]
"1268
[; ;BME280_driver/bme280.c: 1268: {
[f ]
"1269
[; ;BME280_driver/bme280.c: 1269:     int32_t var1;
[v _var1 `l ~T0 @X0 1 a ]
"1270
[; ;BME280_driver/bme280.c: 1270:     int32_t var2;
[v _var2 `l ~T0 @X0 1 a ]
"1271
[; ;BME280_driver/bme280.c: 1271:     int32_t var3;
[v _var3 `l ~T0 @X0 1 a ]
"1272
[; ;BME280_driver/bme280.c: 1272:     int32_t var4;
[v _var4 `l ~T0 @X0 1 a ]
"1273
[; ;BME280_driver/bme280.c: 1273:     int32_t var5;
[v _var5 `l ~T0 @X0 1 a ]
"1274
[; ;BME280_driver/bme280.c: 1274:     uint32_t humidity;
[v _humidity `ul ~T0 @X0 1 a ]
"1275
[; ;BME280_driver/bme280.c: 1275:     uint32_t humidity_max = 102400;
[v _humidity_max `ul ~T0 @X0 1 a ]
[e = _humidity_max -> -> 102400 `l `ul ]
"1277
[; ;BME280_driver/bme280.c: 1277:     var1 = calib_data->t_fine - ((int32_t)76800);
[e = _var1 - . *U _calib_data 18 -> 76800 `l ]
"1278
[; ;BME280_driver/bme280.c: 1278:     var2 = (int32_t)(uncomp_data->humidity * 16384);
[e = _var2 -> * . *U _uncomp_data 2 -> -> -> 16384 `i `l `ul `l ]
"1279
[; ;BME280_driver/bme280.c: 1279:     var3 = (int32_t)(((int32_t)calib_data->dig_H4) * 1048576);
[e = _var3 * -> . *U _calib_data 15 `l -> 1048576 `l ]
"1280
[; ;BME280_driver/bme280.c: 1280:     var4 = ((int32_t)calib_data->dig_H5) * var1;
[e = _var4 * -> . *U _calib_data 16 `l _var1 ]
"1281
[; ;BME280_driver/bme280.c: 1281:     var5 = (((var2 - var3) - var4) + (int32_t)16384) / 32768;
[e = _var5 / + - - _var2 _var3 _var4 -> -> 16384 `i `l -> 32768 `l ]
"1282
[; ;BME280_driver/bme280.c: 1282:     var2 = (var1 * ((int32_t)calib_data->dig_H6)) / 1024;
[e = _var2 / * _var1 -> . *U _calib_data 17 `l -> -> 1024 `i `l ]
"1283
[; ;BME280_driver/bme280.c: 1283:     var3 = (var1 * ((int32_t)calib_data->dig_H3)) / 2048;
[e = _var3 / * _var1 -> . *U _calib_data 14 `l -> -> 2048 `i `l ]
"1284
[; ;BME280_driver/bme280.c: 1284:     var4 = ((var2 * (var3 + (int32_t)32768)) / 1024) + (int32_t)2097152;
[e = _var4 + / * _var2 + _var3 -> 32768 `l -> -> 1024 `i `l -> 2097152 `l ]
"1285
[; ;BME280_driver/bme280.c: 1285:     var2 = ((var4 * ((int32_t)calib_data->dig_H2)) + 8192) / 16384;
[e = _var2 / + * _var4 -> . *U _calib_data 13 `l -> -> 8192 `i `l -> -> 16384 `i `l ]
"1286
[; ;BME280_driver/bme280.c: 1286:     var3 = var5 * var2;
[e = _var3 * _var5 _var2 ]
"1287
[; ;BME280_driver/bme280.c: 1287:     var4 = ((var3 / 32768) * (var3 / 32768)) / 128;
[e = _var4 / * / _var3 -> 32768 `l / _var3 -> 32768 `l -> -> 128 `i `l ]
"1288
[; ;BME280_driver/bme280.c: 1288:     var5 = var3 - ((var4 * ((int32_t)calib_data->dig_H1)) / 16);
[e = _var5 - _var3 / * _var4 -> . *U _calib_data 12 `l -> -> 16 `i `l ]
"1289
[; ;BME280_driver/bme280.c: 1289:     var5 = (var5 < 0 ? 0 : var5);
[e = _var5 ? < _var5 -> -> 0 `i `l : -> -> 0 `i `l _var5 ]
"1290
[; ;BME280_driver/bme280.c: 1290:     var5 = (var5 > 419430400 ? 419430400 : var5);
[e = _var5 ? > _var5 -> 419430400 `l : -> 419430400 `l _var5 ]
"1291
[; ;BME280_driver/bme280.c: 1291:     humidity = (uint32_t)(var5 / 4096);
[e = _humidity -> / _var5 -> -> 4096 `i `l `ul ]
"1292
[; ;BME280_driver/bme280.c: 1292:     if (humidity > humidity_max)
[e $ ! > _humidity _humidity_max 99  ]
"1293
[; ;BME280_driver/bme280.c: 1293:     {
{
"1294
[; ;BME280_driver/bme280.c: 1294:         humidity = humidity_max;
[e = _humidity _humidity_max ]
"1295
[; ;BME280_driver/bme280.c: 1295:     }
}
[e :U 99 ]
"1297
[; ;BME280_driver/bme280.c: 1297:     return humidity;
[e ) _humidity ]
[e $UE 98  ]
"1298
[; ;BME280_driver/bme280.c: 1298: }
[e :UE 98 ]
}
"1305
[; ;BME280_driver/bme280.c: 1305: static int8_t get_calib_data(struct bme280_dev *dev)
[v _get_calib_data `(c ~T0 @X0 1 sf1`*S5 ]
"1306
[; ;BME280_driver/bme280.c: 1306: {
{
[e :U _get_calib_data ]
"1305
[; ;BME280_driver/bme280.c: 1305: static int8_t get_calib_data(struct bme280_dev *dev)
[v _dev `*S5 ~T0 @X0 1 r1 ]
"1306
[; ;BME280_driver/bme280.c: 1306: {
[f ]
"1307
[; ;BME280_driver/bme280.c: 1307:     int8_t rslt;
[v _rslt `c ~T0 @X0 1 a ]
"1308
[; ;BME280_driver/bme280.c: 1308:     uint8_t reg_addr = 0x88;
[v _reg_addr `uc ~T0 @X0 1 a ]
[e = _reg_addr -> -> 136 `i `uc ]
[v F376 `uc ~T0 @X0 -> 26 `i s ]
[i F376
:U ..
"1311
[; ;BME280_driver/bme280.c: 1311:     uint8_t calib_data[26] = { 0 };
-> -> 0 `i `uc
..
]
[v _calib_data `uc ~T0 @X0 -> 26 `i a ]
[e = _calib_data F376 ]
"1314
[; ;BME280_driver/bme280.c: 1314:     rslt = bme280_get_regs(reg_addr, calib_data, 26, dev);
[e = _rslt ( _bme280_get_regs (4 , , , _reg_addr &U _calib_data -> -> 26 `i `us -> _dev `*CS5 ]
"1315
[; ;BME280_driver/bme280.c: 1315:     if (rslt == 0)
[e $ ! == -> _rslt `i -> 0 `i 101  ]
"1316
[; ;BME280_driver/bme280.c: 1316:     {
{
"1320
[; ;BME280_driver/bme280.c: 1320:         parse_temp_press_calib_data(calib_data, dev);
[e ( _parse_temp_press_calib_data (2 , -> &U _calib_data `*Cuc _dev ]
"1321
[; ;BME280_driver/bme280.c: 1321:         reg_addr = 0xE1;
[e = _reg_addr -> -> 225 `i `uc ]
"1324
[; ;BME280_driver/bme280.c: 1324:         rslt = bme280_get_regs(reg_addr, calib_data, 7, dev);
[e = _rslt ( _bme280_get_regs (4 , , , _reg_addr &U _calib_data -> -> 7 `i `us -> _dev `*CS5 ]
"1325
[; ;BME280_driver/bme280.c: 1325:         if (rslt == 0)
[e $ ! == -> _rslt `i -> 0 `i 102  ]
"1326
[; ;BME280_driver/bme280.c: 1326:         {
{
"1330
[; ;BME280_driver/bme280.c: 1330:             parse_humidity_calib_data(calib_data, dev);
[e ( _parse_humidity_calib_data (2 , -> &U _calib_data `*Cuc _dev ]
"1331
[; ;BME280_driver/bme280.c: 1331:         }
}
[e :U 102 ]
"1332
[; ;BME280_driver/bme280.c: 1332:     }
}
[e :U 101 ]
"1334
[; ;BME280_driver/bme280.c: 1334:     return rslt;
[e ) _rslt ]
[e $UE 100  ]
"1335
[; ;BME280_driver/bme280.c: 1335: }
[e :UE 100 ]
}
"1341
[; ;BME280_driver/bme280.c: 1341: static void interleave_reg_addr(const uint8_t *reg_addr, uint8_t *temp_buff, const uint8_t *reg_data, uint8_t len)
[v _interleave_reg_addr `(v ~T0 @X0 1 sf4`*Cuc`*uc`*Cuc`uc ]
"1342
[; ;BME280_driver/bme280.c: 1342: {
{
[e :U _interleave_reg_addr ]
"1341
[; ;BME280_driver/bme280.c: 1341: static void interleave_reg_addr(const uint8_t *reg_addr, uint8_t *temp_buff, const uint8_t *reg_data, uint8_t len)
[v _reg_addr `*Cuc ~T0 @X0 1 r1 ]
[v _temp_buff `*uc ~T0 @X0 1 r2 ]
[v _reg_data `*Cuc ~T0 @X0 1 r3 ]
[v _len `uc ~T0 @X0 1 r4 ]
"1342
[; ;BME280_driver/bme280.c: 1342: {
[f ]
"1343
[; ;BME280_driver/bme280.c: 1343:     uint8_t index;
[v _index `uc ~T0 @X0 1 a ]
"1345
[; ;BME280_driver/bme280.c: 1345:     for (index = 1; index < len; index++)
{
[e = _index -> -> 1 `i `uc ]
[e $U 107  ]
[e :U 104 ]
"1346
[; ;BME280_driver/bme280.c: 1346:     {
{
"1347
[; ;BME280_driver/bme280.c: 1347:         temp_buff[(index * 2) - 1] = reg_addr[index];
[e = *U + _temp_buff * -> - * -> _index `i -> 2 `i -> 1 `i `x -> -> # *U _temp_buff `i `x *U + _reg_addr * -> _index `ux -> -> # *U _reg_addr `ui `ux ]
"1348
[; ;BME280_driver/bme280.c: 1348:         temp_buff[index * 2] = reg_data[index];
[e = *U + _temp_buff * -> * -> _index `i -> 2 `i `x -> -> # *U _temp_buff `i `x *U + _reg_data * -> _index `ux -> -> # *U _reg_data `ui `ux ]
"1349
[; ;BME280_driver/bme280.c: 1349:     }
}
[e ++ _index -> -> 1 `i `uc ]
[e :U 107 ]
[e $ < -> _index `i -> _len `i 104  ]
[e :U 105 ]
}
"1350
[; ;BME280_driver/bme280.c: 1350: }
[e :UE 103 ]
}
"1356
[; ;BME280_driver/bme280.c: 1356: static void parse_temp_press_calib_data(const uint8_t *reg_data, struct bme280_dev *dev)
[v _parse_temp_press_calib_data `(v ~T0 @X0 1 sf2`*Cuc`*S5 ]
"1357
[; ;BME280_driver/bme280.c: 1357: {
{
[e :U _parse_temp_press_calib_data ]
"1356
[; ;BME280_driver/bme280.c: 1356: static void parse_temp_press_calib_data(const uint8_t *reg_data, struct bme280_dev *dev)
[v _reg_data `*Cuc ~T0 @X0 1 r1 ]
[v _dev `*S5 ~T0 @X0 1 r2 ]
"1357
[; ;BME280_driver/bme280.c: 1357: {
[f ]
"1358
[; ;BME280_driver/bme280.c: 1358:     struct bme280_calib_data *calib_data = &dev->calib_data;
[v _calib_data `*S1 ~T0 @X0 1 a ]
[e = _calib_data &U . *U _dev 6 ]
"1360
[; ;BME280_driver/bme280.c: 1360:     calib_data->dig_T1 = (((uint16_t)reg_data[1] << 8) | (uint16_t)reg_data[0]);
[e = . *U _calib_data 0 -> | << -> -> *U + _reg_data * -> -> 1 `i `x -> -> # *U _reg_data `i `x `us `ui -> 8 `i -> -> *U + _reg_data * -> -> 0 `i `x -> -> # *U _reg_data `i `x `us `ui `us ]
"1361
[; ;BME280_driver/bme280.c: 1361:     calib_data->dig_T2 = (int16_t)(((uint16_t)reg_data[3] << 8) | (uint16_t)reg_data[2]);
[e = . *U _calib_data 1 -> | << -> -> *U + _reg_data * -> -> 3 `i `x -> -> # *U _reg_data `i `x `us `ui -> 8 `i -> -> *U + _reg_data * -> -> 2 `i `x -> -> # *U _reg_data `i `x `us `ui `s ]
"1362
[; ;BME280_driver/bme280.c: 1362:     calib_data->dig_T3 = (int16_t)(((uint16_t)reg_data[5] << 8) | (uint16_t)reg_data[4]);
[e = . *U _calib_data 2 -> | << -> -> *U + _reg_data * -> -> 5 `i `x -> -> # *U _reg_data `i `x `us `ui -> 8 `i -> -> *U + _reg_data * -> -> 4 `i `x -> -> # *U _reg_data `i `x `us `ui `s ]
"1363
[; ;BME280_driver/bme280.c: 1363:     calib_data->dig_P1 = (((uint16_t)reg_data[7] << 8) | (uint16_t)reg_data[6]);
[e = . *U _calib_data 3 -> | << -> -> *U + _reg_data * -> -> 7 `i `x -> -> # *U _reg_data `i `x `us `ui -> 8 `i -> -> *U + _reg_data * -> -> 6 `i `x -> -> # *U _reg_data `i `x `us `ui `us ]
"1364
[; ;BME280_driver/bme280.c: 1364:     calib_data->dig_P2 = (int16_t)(((uint16_t)reg_data[9] << 8) | (uint16_t)reg_data[8]);
[e = . *U _calib_data 4 -> | << -> -> *U + _reg_data * -> -> 9 `i `x -> -> # *U _reg_data `i `x `us `ui -> 8 `i -> -> *U + _reg_data * -> -> 8 `i `x -> -> # *U _reg_data `i `x `us `ui `s ]
"1365
[; ;BME280_driver/bme280.c: 1365:     calib_data->dig_P3 = (int16_t)(((uint16_t)reg_data[11] << 8) | (uint16_t)reg_data[10]);
[e = . *U _calib_data 5 -> | << -> -> *U + _reg_data * -> -> 11 `i `x -> -> # *U _reg_data `i `x `us `ui -> 8 `i -> -> *U + _reg_data * -> -> 10 `i `x -> -> # *U _reg_data `i `x `us `ui `s ]
"1366
[; ;BME280_driver/bme280.c: 1366:     calib_data->dig_P4 = (int16_t)(((uint16_t)reg_data[13] << 8) | (uint16_t)reg_data[12]);
[e = . *U _calib_data 6 -> | << -> -> *U + _reg_data * -> -> 13 `i `x -> -> # *U _reg_data `i `x `us `ui -> 8 `i -> -> *U + _reg_data * -> -> 12 `i `x -> -> # *U _reg_data `i `x `us `ui `s ]
"1367
[; ;BME280_driver/bme280.c: 1367:     calib_data->dig_P5 = (int16_t)(((uint16_t)reg_data[15] << 8) | (uint16_t)reg_data[14]);
[e = . *U _calib_data 7 -> | << -> -> *U + _reg_data * -> -> 15 `i `x -> -> # *U _reg_data `i `x `us `ui -> 8 `i -> -> *U + _reg_data * -> -> 14 `i `x -> -> # *U _reg_data `i `x `us `ui `s ]
"1368
[; ;BME280_driver/bme280.c: 1368:     calib_data->dig_P6 = (int16_t)(((uint16_t)reg_data[17] << 8) | (uint16_t)reg_data[16]);
[e = . *U _calib_data 8 -> | << -> -> *U + _reg_data * -> -> 17 `i `x -> -> # *U _reg_data `i `x `us `ui -> 8 `i -> -> *U + _reg_data * -> -> 16 `i `x -> -> # *U _reg_data `i `x `us `ui `s ]
"1369
[; ;BME280_driver/bme280.c: 1369:     calib_data->dig_P7 = (int16_t)(((uint16_t)reg_data[19] << 8) | (uint16_t)reg_data[18]);
[e = . *U _calib_data 9 -> | << -> -> *U + _reg_data * -> -> 19 `i `x -> -> # *U _reg_data `i `x `us `ui -> 8 `i -> -> *U + _reg_data * -> -> 18 `i `x -> -> # *U _reg_data `i `x `us `ui `s ]
"1370
[; ;BME280_driver/bme280.c: 1370:     calib_data->dig_P8 = (int16_t)(((uint16_t)reg_data[21] << 8) | (uint16_t)reg_data[20]);
[e = . *U _calib_data 10 -> | << -> -> *U + _reg_data * -> -> 21 `i `x -> -> # *U _reg_data `i `x `us `ui -> 8 `i -> -> *U + _reg_data * -> -> 20 `i `x -> -> # *U _reg_data `i `x `us `ui `s ]
"1371
[; ;BME280_driver/bme280.c: 1371:     calib_data->dig_P9 = (int16_t)(((uint16_t)reg_data[23] << 8) | (uint16_t)reg_data[22]);
[e = . *U _calib_data 11 -> | << -> -> *U + _reg_data * -> -> 23 `i `x -> -> # *U _reg_data `i `x `us `ui -> 8 `i -> -> *U + _reg_data * -> -> 22 `i `x -> -> # *U _reg_data `i `x `us `ui `s ]
"1372
[; ;BME280_driver/bme280.c: 1372:     calib_data->dig_H1 = reg_data[25];
[e = . *U _calib_data 12 *U + _reg_data * -> -> 25 `i `x -> -> # *U _reg_data `i `x ]
"1373
[; ;BME280_driver/bme280.c: 1373: }
[e :UE 108 ]
}
"1379
[; ;BME280_driver/bme280.c: 1379: static void parse_humidity_calib_data(const uint8_t *reg_data, struct bme280_dev *dev)
[v _parse_humidity_calib_data `(v ~T0 @X0 1 sf2`*Cuc`*S5 ]
"1380
[; ;BME280_driver/bme280.c: 1380: {
{
[e :U _parse_humidity_calib_data ]
"1379
[; ;BME280_driver/bme280.c: 1379: static void parse_humidity_calib_data(const uint8_t *reg_data, struct bme280_dev *dev)
[v _reg_data `*Cuc ~T0 @X0 1 r1 ]
[v _dev `*S5 ~T0 @X0 1 r2 ]
"1380
[; ;BME280_driver/bme280.c: 1380: {
[f ]
"1381
[; ;BME280_driver/bme280.c: 1381:     struct bme280_calib_data *calib_data = &dev->calib_data;
[v _calib_data `*S1 ~T0 @X0 1 a ]
[e = _calib_data &U . *U _dev 6 ]
"1382
[; ;BME280_driver/bme280.c: 1382:     int16_t dig_H4_lsb;
[v _dig_H4_lsb `s ~T0 @X0 1 a ]
"1383
[; ;BME280_driver/bme280.c: 1383:     int16_t dig_H4_msb;
[v _dig_H4_msb `s ~T0 @X0 1 a ]
"1384
[; ;BME280_driver/bme280.c: 1384:     int16_t dig_H5_lsb;
[v _dig_H5_lsb `s ~T0 @X0 1 a ]
"1385
[; ;BME280_driver/bme280.c: 1385:     int16_t dig_H5_msb;
[v _dig_H5_msb `s ~T0 @X0 1 a ]
"1387
[; ;BME280_driver/bme280.c: 1387:     calib_data->dig_H2 = (int16_t)(((uint16_t)reg_data[1] << 8) | (uint16_t)reg_data[0]);
[e = . *U _calib_data 13 -> | << -> -> *U + _reg_data * -> -> 1 `i `x -> -> # *U _reg_data `i `x `us `ui -> 8 `i -> -> *U + _reg_data * -> -> 0 `i `x -> -> # *U _reg_data `i `x `us `ui `s ]
"1388
[; ;BME280_driver/bme280.c: 1388:     calib_data->dig_H3 = reg_data[2];
[e = . *U _calib_data 14 *U + _reg_data * -> -> 2 `i `x -> -> # *U _reg_data `i `x ]
"1389
[; ;BME280_driver/bme280.c: 1389:     dig_H4_msb = (int16_t)(int8_t)reg_data[3] * 16;
[e = _dig_H4_msb -> * -> -> -> *U + _reg_data * -> -> 3 `i `x -> -> # *U _reg_data `i `x `c `s `i -> 16 `i `s ]
"1390
[; ;BME280_driver/bme280.c: 1390:     dig_H4_lsb = (int16_t)(reg_data[4] & 0x0F);
[e = _dig_H4_lsb -> & -> *U + _reg_data * -> -> 4 `i `x -> -> # *U _reg_data `i `x `i -> 15 `i `s ]
"1391
[; ;BME280_driver/bme280.c: 1391:     calib_data->dig_H4 = dig_H4_msb | dig_H4_lsb;
[e = . *U _calib_data 15 -> | -> _dig_H4_msb `i -> _dig_H4_lsb `i `s ]
"1392
[; ;BME280_driver/bme280.c: 1392:     dig_H5_msb = (int16_t)(int8_t)reg_data[5] * 16;
[e = _dig_H5_msb -> * -> -> -> *U + _reg_data * -> -> 5 `i `x -> -> # *U _reg_data `i `x `c `s `i -> 16 `i `s ]
"1393
[; ;BME280_driver/bme280.c: 1393:     dig_H5_lsb = (int16_t)(reg_data[4] >> 4);
[e = _dig_H5_lsb -> >> -> *U + _reg_data * -> -> 4 `i `x -> -> # *U _reg_data `i `x `i -> 4 `i `s ]
"1394
[; ;BME280_driver/bme280.c: 1394:     calib_data->dig_H5 = dig_H5_msb | dig_H5_lsb;
[e = . *U _calib_data 16 -> | -> _dig_H5_msb `i -> _dig_H5_lsb `i `s ]
"1395
[; ;BME280_driver/bme280.c: 1395:     calib_data->dig_H6 = (int8_t)reg_data[6];
[e = . *U _calib_data 17 -> *U + _reg_data * -> -> 6 `i `x -> -> # *U _reg_data `i `x `c ]
"1396
[; ;BME280_driver/bme280.c: 1396: }
[e :UE 109 ]
}
"1402
[; ;BME280_driver/bme280.c: 1402: static uint8_t are_settings_changed(uint8_t sub_settings, uint8_t desired_settings)
[v _are_settings_changed `(uc ~T0 @X0 1 sf2`uc`uc ]
"1403
[; ;BME280_driver/bme280.c: 1403: {
{
[e :U _are_settings_changed ]
"1402
[; ;BME280_driver/bme280.c: 1402: static uint8_t are_settings_changed(uint8_t sub_settings, uint8_t desired_settings)
[v _sub_settings `uc ~T0 @X0 1 r1 ]
[v _desired_settings `uc ~T0 @X0 1 r2 ]
"1403
[; ;BME280_driver/bme280.c: 1403: {
[f ]
"1404
[; ;BME280_driver/bme280.c: 1404:     uint8_t settings_changed = 0;
[v _settings_changed `uc ~T0 @X0 1 a ]
[e = _settings_changed -> -> 0 `i `uc ]
"1406
[; ;BME280_driver/bme280.c: 1406:     if (sub_settings & desired_settings)
[e $ ! != & -> _sub_settings `i -> _desired_settings `i -> 0 `i 111  ]
"1407
[; ;BME280_driver/bme280.c: 1407:     {
{
"1409
[; ;BME280_driver/bme280.c: 1409:         settings_changed = 1;
[e = _settings_changed -> -> 1 `i `uc ]
"1410
[; ;BME280_driver/bme280.c: 1410:     }
}
[e $U 112  ]
"1411
[; ;BME280_driver/bme280.c: 1411:     else
[e :U 111 ]
"1412
[; ;BME280_driver/bme280.c: 1412:     {
{
"1414
[; ;BME280_driver/bme280.c: 1414:         settings_changed = 0;
[e = _settings_changed -> -> 0 `i `uc ]
"1415
[; ;BME280_driver/bme280.c: 1415:     }
}
[e :U 112 ]
"1417
[; ;BME280_driver/bme280.c: 1417:     return settings_changed;
[e ) _settings_changed ]
[e $UE 110  ]
"1418
[; ;BME280_driver/bme280.c: 1418: }
[e :UE 110 ]
}
"1424
[; ;BME280_driver/bme280.c: 1424: static int8_t null_ptr_check(const struct bme280_dev *dev)
[v _null_ptr_check `(c ~T0 @X0 1 sf1`*CS5 ]
"1425
[; ;BME280_driver/bme280.c: 1425: {
{
[e :U _null_ptr_check ]
"1424
[; ;BME280_driver/bme280.c: 1424: static int8_t null_ptr_check(const struct bme280_dev *dev)
[v _dev `*CS5 ~T0 @X0 1 r1 ]
"1425
[; ;BME280_driver/bme280.c: 1425: {
[f ]
"1426
[; ;BME280_driver/bme280.c: 1426:     int8_t rslt;
[v _rslt `c ~T0 @X0 1 a ]
"1428
[; ;BME280_driver/bme280.c: 1428:     if ((dev == ((void*)0)) || (dev->read == ((void*)0)) || (dev->write == ((void*)0)) || (dev->delay_ms == ((void*)0)))
[e $ ! || || || == _dev -> -> -> 0 `i `*v `*CS5 == . *U _dev 3 -> -> -> 0 `i `*v `*F409 == . *U _dev 4 -> -> -> 0 `i `*v `*F420 == . *U _dev 5 -> -> -> 0 `i `*v `*F428 114  ]
"1429
[; ;BME280_driver/bme280.c: 1429:     {
{
"1431
[; ;BME280_driver/bme280.c: 1431:         rslt = -1;
[e = _rslt -> -U -> 1 `i `c ]
"1432
[; ;BME280_driver/bme280.c: 1432:     }
}
[e $U 115  ]
"1433
[; ;BME280_driver/bme280.c: 1433:     else
[e :U 114 ]
"1434
[; ;BME280_driver/bme280.c: 1434:     {
{
"1436
[; ;BME280_driver/bme280.c: 1436:         rslt = 0;
[e = _rslt -> -> 0 `i `c ]
"1437
[; ;BME280_driver/bme280.c: 1437:     }
}
[e :U 115 ]
"1439
[; ;BME280_driver/bme280.c: 1439:     return rslt;
[e ) _rslt ]
[e $UE 113  ]
"1440
[; ;BME280_driver/bme280.c: 1440: }
[e :UE 113 ]
}
