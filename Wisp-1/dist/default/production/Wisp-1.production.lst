

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sat Sep 07 12:25:56 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og9 
     1                           	processor	16F1619
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK2,global,class=CODE,delta=2
     5                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1
     6                           	psect	stringtext1,global,class=STRCODE,delta=2
     7                           	psect	stringtext2,global,class=STRCODE,delta=2
     8                           	psect	stringtext3,global,class=STRCODE,delta=2
     9                           	psect	cinit,global,class=CODE,merge=1,delta=2
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    12                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    15                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    16                           	psect	clrtext,global,class=CODE,delta=2
    17                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    18                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    19                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    21                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    22                           	psect	text1,local,class=CODE,merge=1,delta=2
    23                           	psect	text2,local,class=CODE,merge=1,delta=2
    24                           	psect	text3,local,class=CODE,merge=1,delta=2
    25                           	psect	text4,local,class=CODE,merge=1,delta=2
    26                           	psect	text5,local,class=CODE,merge=1,delta=2
    27                           	psect	text6,local,class=CODE,merge=1,delta=2
    28                           	psect	text7,local,class=CODE,merge=1,delta=2
    29                           	psect	text8,local,class=CODE,merge=1,delta=2
    30                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text11,local,class=CODE,merge=1,delta=2
    33                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text14,local,class=CODE,merge=1,delta=2
    36                           	psect	text15,local,class=CODE,merge=1,delta=2
    37                           	psect	text16,local,class=CODE,merge=1,delta=2
    38                           	psect	text17,local,class=CODE,merge=1,delta=2
    39                           	psect	text18,local,class=CODE,merge=1,delta=2
    40                           	psect	text19,local,class=CODE,merge=1,delta=2
    41                           	psect	text20,local,class=CODE,merge=1,delta=2
    42                           	psect	text21,local,class=CODE,merge=1,delta=2
    43                           	psect	text22,local,class=CODE,merge=1,delta=2
    44                           	psect	text23,local,class=CODE,merge=1,delta=2
    45                           	psect	text24,local,class=CODE,merge=1,delta=2,group=1
    46                           	psect	text25,local,class=CODE,merge=1,delta=2
    47                           	psect	text26,local,class=CODE,merge=1,delta=2,group=1
    48                           	psect	text27,local,class=CODE,merge=1,delta=2
    49                           	psect	text28,local,class=CODE,merge=1,delta=2
    50                           	psect	text29,local,class=CODE,merge=1,delta=2
    51                           	psect	text30,local,class=CODE,merge=1,delta=2
    52                           	psect	text31,local,class=CODE,merge=1,delta=2
    53                           	psect	text32,local,class=CODE,merge=1,delta=2
    54                           	psect	text33,local,class=CODE,merge=1,delta=2,group=2
    55                           	psect	text34,local,class=CODE,merge=1,delta=2
    56                           	psect	text35,local,class=CODE,merge=1,delta=2
    57                           	psect	text36,local,class=CODE,merge=1,delta=2
    58                           	psect	text37,local,class=CODE,merge=1,delta=2
    59                           	psect	text38,local,class=CODE,merge=1,delta=2
    60                           	psect	text39,local,class=CODE,merge=1,delta=2
    61                           	psect	text40,local,class=CODE,merge=1,delta=2
    62                           	psect	text41,local,class=CODE,merge=1,delta=2
    63                           	psect	text42,local,class=CODE,merge=1,delta=2
    64                           	psect	text43,local,class=CODE,merge=1,delta=2
    65                           	psect	text44,local,class=CODE,merge=1,delta=2
    66                           	psect	text45,local,class=CODE,merge=1,delta=2
    67                           	psect	text46,local,class=CODE,merge=1,delta=2
    68                           	psect	text47,local,class=CODE,merge=1,delta=2
    69                           	psect	text48,local,class=CODE,merge=1,delta=2
    70                           	psect	text49,local,class=CODE,merge=1,delta=2
    71                           	psect	text50,local,class=CODE,merge=1,delta=2
    72                           	psect	text51,local,class=CODE,merge=1,delta=2
    73                           	psect	text52,local,class=CODE,merge=1,delta=2
    74                           	psect	text53,local,class=CODE,merge=1,delta=2
    75                           	psect	text54,local,class=CODE,merge=1,delta=2
    76                           	psect	text55,local,class=CODE,merge=1,delta=2
    77                           	psect	text56,local,class=CODE,merge=1,delta=2
    78                           	psect	text57,local,class=CODE,merge=1,delta=2
    79                           	psect	text58,local,class=CODE,merge=1,delta=2
    80                           	psect	text59,local,class=CODE,merge=1,delta=2
    81                           	psect	text60,local,class=CODE,merge=1,delta=2
    82                           	psect	text61,local,class=CODE,merge=1,delta=2
    83                           	psect	text62,local,class=CODE,merge=1,delta=2
    84                           	psect	text63,local,class=CODE,merge=1,delta=2
    85                           	psect	text64,local,class=CODE,merge=1,delta=2
    86                           	psect	text65,local,class=CODE,merge=1,delta=2
    87                           	psect	text66,local,class=CODE,merge=1,delta=2
    88                           	psect	text67,local,class=CODE,merge=1,delta=2
    89                           	psect	text68,local,class=CODE,merge=1,delta=2
    90                           	psect	text69,local,class=CODE,merge=1,delta=2
    91                           	psect	intentry,global,class=CODE,delta=2
    92                           	psect	text71,local,class=CODE,merge=1,delta=2
    93                           	psect	text72,local,class=CODE,merge=1,delta=2
    94                           	psect	text73,local,class=CODE,merge=1,delta=2
    95                           	dabs	1,0x7E,2
    96  0000                     
    97                           ; Version 2.05
    98                           ; Generated 20/12/2018 GMT
    99                           ; 
   100                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   101                           ; All rights reserved.
   102                           ; 
   103                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   104                           ; 
   105                           ; Redistribution and use in source and binary forms, with or without modification, are
   106                           ; permitted provided that the following conditions are met:
   107                           ; 
   108                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   109                           ;        conditions and the following disclaimer.
   110                           ; 
   111                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   112                           ;        of conditions and the following disclaimer in the documentation and/or other
   113                           ;        materials provided with the distribution.
   114                           ; 
   115                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   116                           ;        software without specific prior written permission.
   117                           ; 
   118                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   119                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   120                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   121                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   122                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   123                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   124                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   125                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   126                           ; 
   127                           ; 
   128                           ; Code-generator required, PIC16F1619 Definitions
   129                           ; 
   130                           ; SFR Addresses
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  0008                     	;# 
   140  0009                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000D                     	;# 
   145  000E                     	;# 
   146  0010                     	;# 
   147  0011                     	;# 
   148  0012                     	;# 
   149  0013                     	;# 
   150  0014                     	;# 
   151  0015                     	;# 
   152  0016                     	;# 
   153  0016                     	;# 
   154  0017                     	;# 
   155  0018                     	;# 
   156  0019                     	;# 
   157  001A                     	;# 
   158  001A                     	;# 
   159  001B                     	;# 
   160  001B                     	;# 
   161  001C                     	;# 
   162  001D                     	;# 
   163  001E                     	;# 
   164  001F                     	;# 
   165  008C                     	;# 
   166  008D                     	;# 
   167  008E                     	;# 
   168  0090                     	;# 
   169  0091                     	;# 
   170  0092                     	;# 
   171  0093                     	;# 
   172  0094                     	;# 
   173  0095                     	;# 
   174  0096                     	;# 
   175  0098                     	;# 
   176  0099                     	;# 
   177  009A                     	;# 
   178  009B                     	;# 
   179  009B                     	;# 
   180  009C                     	;# 
   181  009D                     	;# 
   182  009E                     	;# 
   183  009F                     	;# 
   184  010C                     	;# 
   185  010D                     	;# 
   186  010E                     	;# 
   187  0111                     	;# 
   188  0112                     	;# 
   189  0113                     	;# 
   190  0114                     	;# 
   191  0115                     	;# 
   192  0116                     	;# 
   193  0117                     	;# 
   194  0118                     	;# 
   195  0119                     	;# 
   196  011C                     	;# 
   197  018C                     	;# 
   198  018D                     	;# 
   199  018E                     	;# 
   200  0191                     	;# 
   201  0191                     	;# 
   202  0192                     	;# 
   203  0193                     	;# 
   204  0193                     	;# 
   205  0194                     	;# 
   206  0195                     	;# 
   207  0196                     	;# 
   208  0197                     	;# 
   209  0199                     	;# 
   210  0199                     	;# 
   211  0199                     	;# 
   212  019A                     	;# 
   213  019A                     	;# 
   214  019A                     	;# 
   215  019B                     	;# 
   216  019B                     	;# 
   217  019B                     	;# 
   218  019B                     	;# 
   219  019B                     	;# 
   220  019C                     	;# 
   221  019C                     	;# 
   222  019C                     	;# 
   223  019D                     	;# 
   224  019D                     	;# 
   225  019D                     	;# 
   226  019E                     	;# 
   227  019E                     	;# 
   228  019E                     	;# 
   229  019F                     	;# 
   230  019F                     	;# 
   231  019F                     	;# 
   232  019F                     	;# 
   233  019F                     	;# 
   234  020C                     	;# 
   235  020D                     	;# 
   236  020E                     	;# 
   237  0211                     	;# 
   238  0211                     	;# 
   239  0212                     	;# 
   240  0212                     	;# 
   241  0213                     	;# 
   242  0213                     	;# 
   243  0214                     	;# 
   244  0214                     	;# 
   245  0215                     	;# 
   246  0215                     	;# 
   247  0215                     	;# 
   248  0215                     	;# 
   249  0216                     	;# 
   250  0216                     	;# 
   251  0217                     	;# 
   252  0217                     	;# 
   253  028C                     	;# 
   254  028D                     	;# 
   255  028E                     	;# 
   256  0291                     	;# 
   257  0291                     	;# 
   258  0292                     	;# 
   259  0293                     	;# 
   260  0294                     	;# 
   261  0298                     	;# 
   262  0298                     	;# 
   263  0299                     	;# 
   264  029A                     	;# 
   265  029B                     	;# 
   266  029E                     	;# 
   267  030C                     	;# 
   268  030D                     	;# 
   269  030E                     	;# 
   270  038C                     	;# 
   271  038D                     	;# 
   272  038E                     	;# 
   273  0391                     	;# 
   274  0392                     	;# 
   275  0393                     	;# 
   276  0394                     	;# 
   277  0395                     	;# 
   278  0396                     	;# 
   279  0397                     	;# 
   280  0398                     	;# 
   281  0399                     	;# 
   282  040E                     	;# 
   283  0413                     	;# 
   284  0413                     	;# 
   285  0414                     	;# 
   286  0414                     	;# 
   287  0415                     	;# 
   288  0416                     	;# 
   289  0417                     	;# 
   290  0418                     	;# 
   291  041A                     	;# 
   292  041A                     	;# 
   293  041B                     	;# 
   294  041B                     	;# 
   295  041C                     	;# 
   296  041D                     	;# 
   297  041E                     	;# 
   298  041F                     	;# 
   299  0493                     	;# 
   300  0494                     	;# 
   301  0495                     	;# 
   302  0496                     	;# 
   303  049A                     	;# 
   304  049B                     	;# 
   305  049C                     	;# 
   306  049D                     	;# 
   307  058C                     	;# 
   308  058C                     	;# 
   309  058D                     	;# 
   310  058E                     	;# 
   311  058E                     	;# 
   312  058F                     	;# 
   313  0590                     	;# 
   314  0590                     	;# 
   315  0591                     	;# 
   316  0592                     	;# 
   317  0592                     	;# 
   318  0593                     	;# 
   319  0594                     	;# 
   320  0594                     	;# 
   321  0595                     	;# 
   322  0596                     	;# 
   323  0596                     	;# 
   324  0597                     	;# 
   325  0598                     	;# 
   326  0599                     	;# 
   327  059A                     	;# 
   328  059B                     	;# 
   329  059B                     	;# 
   330  059C                     	;# 
   331  059D                     	;# 
   332  060C                     	;# 
   333  060C                     	;# 
   334  060D                     	;# 
   335  060E                     	;# 
   336  060F                     	;# 
   337  060F                     	;# 
   338  0610                     	;# 
   339  0611                     	;# 
   340  0612                     	;# 
   341  0613                     	;# 
   342  0614                     	;# 
   343  0617                     	;# 
   344  0617                     	;# 
   345  0618                     	;# 
   346  0619                     	;# 
   347  061A                     	;# 
   348  061A                     	;# 
   349  061B                     	;# 
   350  061C                     	;# 
   351  0691                     	;# 
   352  0692                     	;# 
   353  0693                     	;# 
   354  0694                     	;# 
   355  0695                     	;# 
   356  0696                     	;# 
   357  0697                     	;# 
   358  0699                     	;# 
   359  069A                     	;# 
   360  0711                     	;# 
   361  0712                     	;# 
   362  0713                     	;# 
   363  0714                     	;# 
   364  0715                     	;# 
   365  0718                     	;# 
   366  0718                     	;# 
   367  0719                     	;# 
   368  071A                     	;# 
   369  071A                     	;# 
   370  071B                     	;# 
   371  071C                     	;# 
   372  071D                     	;# 
   373  0791                     	;# 
   374  0791                     	;# 
   375  0792                     	;# 
   376  0793                     	;# 
   377  0793                     	;# 
   378  0794                     	;# 
   379  0795                     	;# 
   380  0795                     	;# 
   381  0796                     	;# 
   382  0797                     	;# 
   383  0797                     	;# 
   384  0798                     	;# 
   385  0799                     	;# 
   386  079A                     	;# 
   387  080C                     	;# 
   388  080C                     	;# 
   389  080D                     	;# 
   390  080E                     	;# 
   391  080E                     	;# 
   392  080F                     	;# 
   393  0810                     	;# 
   394  0810                     	;# 
   395  0811                     	;# 
   396  0812                     	;# 
   397  0812                     	;# 
   398  0813                     	;# 
   399  0814                     	;# 
   400  0815                     	;# 
   401  0816                     	;# 
   402  0817                     	;# 
   403  0818                     	;# 
   404  0819                     	;# 
   405  081A                     	;# 
   406  081A                     	;# 
   407  081B                     	;# 
   408  081C                     	;# 
   409  081C                     	;# 
   410  081D                     	;# 
   411  088C                     	;# 
   412  088D                     	;# 
   413  088E                     	;# 
   414  088F                     	;# 
   415  088F                     	;# 
   416  0890                     	;# 
   417  0891                     	;# 
   418  0892                     	;# 
   419  0893                     	;# 
   420  0893                     	;# 
   421  0894                     	;# 
   422  0895                     	;# 
   423  0896                     	;# 
   424  0897                     	;# 
   425  0897                     	;# 
   426  0898                     	;# 
   427  0899                     	;# 
   428  0D8C                     	;# 
   429  0D8C                     	;# 
   430  0D8D                     	;# 
   431  0D8E                     	;# 
   432  0D8F                     	;# 
   433  0D8F                     	;# 
   434  0D90                     	;# 
   435  0D91                     	;# 
   436  0D92                     	;# 
   437  0D92                     	;# 
   438  0D93                     	;# 
   439  0D94                     	;# 
   440  0D95                     	;# 
   441  0D95                     	;# 
   442  0D96                     	;# 
   443  0D97                     	;# 
   444  0D98                     	;# 
   445  0D99                     	;# 
   446  0D9A                     	;# 
   447  0D9B                     	;# 
   448  0D9C                     	;# 
   449  0D9D                     	;# 
   450  0D9E                     	;# 
   451  0D9E                     	;# 
   452  0D9F                     	;# 
   453  0DA0                     	;# 
   454  0DA1                     	;# 
   455  0DA1                     	;# 
   456  0DA2                     	;# 
   457  0DA3                     	;# 
   458  0DA4                     	;# 
   459  0DA4                     	;# 
   460  0DA5                     	;# 
   461  0DA6                     	;# 
   462  0DA7                     	;# 
   463  0DA7                     	;# 
   464  0DA8                     	;# 
   465  0DA9                     	;# 
   466  0DAA                     	;# 
   467  0DAB                     	;# 
   468  0DAC                     	;# 
   469  0DAD                     	;# 
   470  0DAE                     	;# 
   471  0DAF                     	;# 
   472  0E0F                     	;# 
   473  0E10                     	;# 
   474  0E11                     	;# 
   475  0E12                     	;# 
   476  0E13                     	;# 
   477  0E14                     	;# 
   478  0E15                     	;# 
   479  0E16                     	;# 
   480  0E17                     	;# 
   481  0E18                     	;# 
   482  0E19                     	;# 
   483  0E1A                     	;# 
   484  0E1B                     	;# 
   485  0E1C                     	;# 
   486  0E1D                     	;# 
   487  0E1E                     	;# 
   488  0E1F                     	;# 
   489  0E20                     	;# 
   490  0E21                     	;# 
   491  0E22                     	;# 
   492  0E23                     	;# 
   493  0E24                     	;# 
   494  0E25                     	;# 
   495  0E26                     	;# 
   496  0E27                     	;# 
   497  0E28                     	;# 
   498  0E29                     	;# 
   499  0E2A                     	;# 
   500  0E2B                     	;# 
   501  0E2C                     	;# 
   502  0E2D                     	;# 
   503  0E2E                     	;# 
   504  0E90                     	;# 
   505  0E91                     	;# 
   506  0E92                     	;# 
   507  0E94                     	;# 
   508  0E95                     	;# 
   509  0E9C                     	;# 
   510  0E9D                     	;# 
   511  0E9E                     	;# 
   512  0E9F                     	;# 
   513  0EA0                     	;# 
   514  0EA1                     	;# 
   515  0EA2                     	;# 
   516  0EA3                     	;# 
   517  0EA4                     	;# 
   518  0EA5                     	;# 
   519  0EA6                     	;# 
   520  0EA7                     	;# 
   521  0F0F                     	;# 
   522  0F10                     	;# 
   523  0F11                     	;# 
   524  0F12                     	;# 
   525  0F13                     	;# 
   526  0F14                     	;# 
   527  0F15                     	;# 
   528  0F16                     	;# 
   529  0F17                     	;# 
   530  0F18                     	;# 
   531  0F19                     	;# 
   532  0F1A                     	;# 
   533  0F1B                     	;# 
   534  0F1C                     	;# 
   535  0F1D                     	;# 
   536  0F1E                     	;# 
   537  0F1F                     	;# 
   538  0F20                     	;# 
   539  0F21                     	;# 
   540  0F22                     	;# 
   541  0F23                     	;# 
   542  0F24                     	;# 
   543  0F25                     	;# 
   544  0F26                     	;# 
   545  0F27                     	;# 
   546  0F28                     	;# 
   547  0F29                     	;# 
   548  0F2A                     	;# 
   549  0F2B                     	;# 
   550  0F2C                     	;# 
   551  0F2D                     	;# 
   552  0F2E                     	;# 
   553  0F2F                     	;# 
   554  0F30                     	;# 
   555  0F31                     	;# 
   556  0F32                     	;# 
   557  0F33                     	;# 
   558  0F34                     	;# 
   559  0F35                     	;# 
   560  0F36                     	;# 
   561  0F37                     	;# 
   562  0FE4                     	;# 
   563  0FE5                     	;# 
   564  0FE6                     	;# 
   565  0FE7                     	;# 
   566  0FE8                     	;# 
   567  0FE9                     	;# 
   568  0FEA                     	;# 
   569  0FEB                     	;# 
   570  0FED                     	;# 
   571  0FEE                     	;# 
   572  0FEF                     	;# 
   573  0000                     	;# 
   574  0001                     	;# 
   575  0002                     	;# 
   576  0003                     	;# 
   577  0004                     	;# 
   578  0005                     	;# 
   579  0006                     	;# 
   580  0007                     	;# 
   581  0008                     	;# 
   582  0009                     	;# 
   583  000A                     	;# 
   584  000B                     	;# 
   585  000C                     	;# 
   586  000D                     	;# 
   587  000E                     	;# 
   588  0010                     	;# 
   589  0011                     	;# 
   590  0012                     	;# 
   591  0013                     	;# 
   592  0014                     	;# 
   593  0015                     	;# 
   594  0016                     	;# 
   595  0016                     	;# 
   596  0017                     	;# 
   597  0018                     	;# 
   598  0019                     	;# 
   599  001A                     	;# 
   600  001A                     	;# 
   601  001B                     	;# 
   602  001B                     	;# 
   603  001C                     	;# 
   604  001D                     	;# 
   605  001E                     	;# 
   606  001F                     	;# 
   607  008C                     	;# 
   608  008D                     	;# 
   609  008E                     	;# 
   610  0090                     	;# 
   611  0091                     	;# 
   612  0092                     	;# 
   613  0093                     	;# 
   614  0094                     	;# 
   615  0095                     	;# 
   616  0096                     	;# 
   617  0098                     	;# 
   618  0099                     	;# 
   619  009A                     	;# 
   620  009B                     	;# 
   621  009B                     	;# 
   622  009C                     	;# 
   623  009D                     	;# 
   624  009E                     	;# 
   625  009F                     	;# 
   626  010C                     	;# 
   627  010D                     	;# 
   628  010E                     	;# 
   629  0111                     	;# 
   630  0112                     	;# 
   631  0113                     	;# 
   632  0114                     	;# 
   633  0115                     	;# 
   634  0116                     	;# 
   635  0117                     	;# 
   636  0118                     	;# 
   637  0119                     	;# 
   638  011C                     	;# 
   639  018C                     	;# 
   640  018D                     	;# 
   641  018E                     	;# 
   642  0191                     	;# 
   643  0191                     	;# 
   644  0192                     	;# 
   645  0193                     	;# 
   646  0193                     	;# 
   647  0194                     	;# 
   648  0195                     	;# 
   649  0196                     	;# 
   650  0197                     	;# 
   651  0199                     	;# 
   652  0199                     	;# 
   653  0199                     	;# 
   654  019A                     	;# 
   655  019A                     	;# 
   656  019A                     	;# 
   657  019B                     	;# 
   658  019B                     	;# 
   659  019B                     	;# 
   660  019B                     	;# 
   661  019B                     	;# 
   662  019C                     	;# 
   663  019C                     	;# 
   664  019C                     	;# 
   665  019D                     	;# 
   666  019D                     	;# 
   667  019D                     	;# 
   668  019E                     	;# 
   669  019E                     	;# 
   670  019E                     	;# 
   671  019F                     	;# 
   672  019F                     	;# 
   673  019F                     	;# 
   674  019F                     	;# 
   675  019F                     	;# 
   676  020C                     	;# 
   677  020D                     	;# 
   678  020E                     	;# 
   679  0211                     	;# 
   680  0211                     	;# 
   681  0212                     	;# 
   682  0212                     	;# 
   683  0213                     	;# 
   684  0213                     	;# 
   685  0214                     	;# 
   686  0214                     	;# 
   687  0215                     	;# 
   688  0215                     	;# 
   689  0215                     	;# 
   690  0215                     	;# 
   691  0216                     	;# 
   692  0216                     	;# 
   693  0217                     	;# 
   694  0217                     	;# 
   695  028C                     	;# 
   696  028D                     	;# 
   697  028E                     	;# 
   698  0291                     	;# 
   699  0291                     	;# 
   700  0292                     	;# 
   701  0293                     	;# 
   702  0294                     	;# 
   703  0298                     	;# 
   704  0298                     	;# 
   705  0299                     	;# 
   706  029A                     	;# 
   707  029B                     	;# 
   708  029E                     	;# 
   709  030C                     	;# 
   710  030D                     	;# 
   711  030E                     	;# 
   712  038C                     	;# 
   713  038D                     	;# 
   714  038E                     	;# 
   715  0391                     	;# 
   716  0392                     	;# 
   717  0393                     	;# 
   718  0394                     	;# 
   719  0395                     	;# 
   720  0396                     	;# 
   721  0397                     	;# 
   722  0398                     	;# 
   723  0399                     	;# 
   724  040E                     	;# 
   725  0413                     	;# 
   726  0413                     	;# 
   727  0414                     	;# 
   728  0414                     	;# 
   729  0415                     	;# 
   730  0416                     	;# 
   731  0417                     	;# 
   732  0418                     	;# 
   733  041A                     	;# 
   734  041A                     	;# 
   735  041B                     	;# 
   736  041B                     	;# 
   737  041C                     	;# 
   738  041D                     	;# 
   739  041E                     	;# 
   740  041F                     	;# 
   741  0493                     	;# 
   742  0494                     	;# 
   743  0495                     	;# 
   744  0496                     	;# 
   745  049A                     	;# 
   746  049B                     	;# 
   747  049C                     	;# 
   748  049D                     	;# 
   749  058C                     	;# 
   750  058C                     	;# 
   751  058D                     	;# 
   752  058E                     	;# 
   753  058E                     	;# 
   754  058F                     	;# 
   755  0590                     	;# 
   756  0590                     	;# 
   757  0591                     	;# 
   758  0592                     	;# 
   759  0592                     	;# 
   760  0593                     	;# 
   761  0594                     	;# 
   762  0594                     	;# 
   763  0595                     	;# 
   764  0596                     	;# 
   765  0596                     	;# 
   766  0597                     	;# 
   767  0598                     	;# 
   768  0599                     	;# 
   769  059A                     	;# 
   770  059B                     	;# 
   771  059B                     	;# 
   772  059C                     	;# 
   773  059D                     	;# 
   774  060C                     	;# 
   775  060C                     	;# 
   776  060D                     	;# 
   777  060E                     	;# 
   778  060F                     	;# 
   779  060F                     	;# 
   780  0610                     	;# 
   781  0611                     	;# 
   782  0612                     	;# 
   783  0613                     	;# 
   784  0614                     	;# 
   785  0617                     	;# 
   786  0617                     	;# 
   787  0618                     	;# 
   788  0619                     	;# 
   789  061A                     	;# 
   790  061A                     	;# 
   791  061B                     	;# 
   792  061C                     	;# 
   793  0691                     	;# 
   794  0692                     	;# 
   795  0693                     	;# 
   796  0694                     	;# 
   797  0695                     	;# 
   798  0696                     	;# 
   799  0697                     	;# 
   800  0699                     	;# 
   801  069A                     	;# 
   802  0711                     	;# 
   803  0712                     	;# 
   804  0713                     	;# 
   805  0714                     	;# 
   806  0715                     	;# 
   807  0718                     	;# 
   808  0718                     	;# 
   809  0719                     	;# 
   810  071A                     	;# 
   811  071A                     	;# 
   812  071B                     	;# 
   813  071C                     	;# 
   814  071D                     	;# 
   815  0791                     	;# 
   816  0791                     	;# 
   817  0792                     	;# 
   818  0793                     	;# 
   819  0793                     	;# 
   820  0794                     	;# 
   821  0795                     	;# 
   822  0795                     	;# 
   823  0796                     	;# 
   824  0797                     	;# 
   825  0797                     	;# 
   826  0798                     	;# 
   827  0799                     	;# 
   828  079A                     	;# 
   829  080C                     	;# 
   830  080C                     	;# 
   831  080D                     	;# 
   832  080E                     	;# 
   833  080E                     	;# 
   834  080F                     	;# 
   835  0810                     	;# 
   836  0810                     	;# 
   837  0811                     	;# 
   838  0812                     	;# 
   839  0812                     	;# 
   840  0813                     	;# 
   841  0814                     	;# 
   842  0815                     	;# 
   843  0816                     	;# 
   844  0817                     	;# 
   845  0818                     	;# 
   846  0819                     	;# 
   847  081A                     	;# 
   848  081A                     	;# 
   849  081B                     	;# 
   850  081C                     	;# 
   851  081C                     	;# 
   852  081D                     	;# 
   853  088C                     	;# 
   854  088D                     	;# 
   855  088E                     	;# 
   856  088F                     	;# 
   857  088F                     	;# 
   858  0890                     	;# 
   859  0891                     	;# 
   860  0892                     	;# 
   861  0893                     	;# 
   862  0893                     	;# 
   863  0894                     	;# 
   864  0895                     	;# 
   865  0896                     	;# 
   866  0897                     	;# 
   867  0897                     	;# 
   868  0898                     	;# 
   869  0899                     	;# 
   870  0D8C                     	;# 
   871  0D8C                     	;# 
   872  0D8D                     	;# 
   873  0D8E                     	;# 
   874  0D8F                     	;# 
   875  0D8F                     	;# 
   876  0D90                     	;# 
   877  0D91                     	;# 
   878  0D92                     	;# 
   879  0D92                     	;# 
   880  0D93                     	;# 
   881  0D94                     	;# 
   882  0D95                     	;# 
   883  0D95                     	;# 
   884  0D96                     	;# 
   885  0D97                     	;# 
   886  0D98                     	;# 
   887  0D99                     	;# 
   888  0D9A                     	;# 
   889  0D9B                     	;# 
   890  0D9C                     	;# 
   891  0D9D                     	;# 
   892  0D9E                     	;# 
   893  0D9E                     	;# 
   894  0D9F                     	;# 
   895  0DA0                     	;# 
   896  0DA1                     	;# 
   897  0DA1                     	;# 
   898  0DA2                     	;# 
   899  0DA3                     	;# 
   900  0DA4                     	;# 
   901  0DA4                     	;# 
   902  0DA5                     	;# 
   903  0DA6                     	;# 
   904  0DA7                     	;# 
   905  0DA7                     	;# 
   906  0DA8                     	;# 
   907  0DA9                     	;# 
   908  0DAA                     	;# 
   909  0DAB                     	;# 
   910  0DAC                     	;# 
   911  0DAD                     	;# 
   912  0DAE                     	;# 
   913  0DAF                     	;# 
   914  0E0F                     	;# 
   915  0E10                     	;# 
   916  0E11                     	;# 
   917  0E12                     	;# 
   918  0E13                     	;# 
   919  0E14                     	;# 
   920  0E15                     	;# 
   921  0E16                     	;# 
   922  0E17                     	;# 
   923  0E18                     	;# 
   924  0E19                     	;# 
   925  0E1A                     	;# 
   926  0E1B                     	;# 
   927  0E1C                     	;# 
   928  0E1D                     	;# 
   929  0E1E                     	;# 
   930  0E1F                     	;# 
   931  0E20                     	;# 
   932  0E21                     	;# 
   933  0E22                     	;# 
   934  0E23                     	;# 
   935  0E24                     	;# 
   936  0E25                     	;# 
   937  0E26                     	;# 
   938  0E27                     	;# 
   939  0E28                     	;# 
   940  0E29                     	;# 
   941  0E2A                     	;# 
   942  0E2B                     	;# 
   943  0E2C                     	;# 
   944  0E2D                     	;# 
   945  0E2E                     	;# 
   946  0E90                     	;# 
   947  0E91                     	;# 
   948  0E92                     	;# 
   949  0E94                     	;# 
   950  0E95                     	;# 
   951  0E9C                     	;# 
   952  0E9D                     	;# 
   953  0E9E                     	;# 
   954  0E9F                     	;# 
   955  0EA0                     	;# 
   956  0EA1                     	;# 
   957  0EA2                     	;# 
   958  0EA3                     	;# 
   959  0EA4                     	;# 
   960  0EA5                     	;# 
   961  0EA6                     	;# 
   962  0EA7                     	;# 
   963  0F0F                     	;# 
   964  0F10                     	;# 
   965  0F11                     	;# 
   966  0F12                     	;# 
   967  0F13                     	;# 
   968  0F14                     	;# 
   969  0F15                     	;# 
   970  0F16                     	;# 
   971  0F17                     	;# 
   972  0F18                     	;# 
   973  0F19                     	;# 
   974  0F1A                     	;# 
   975  0F1B                     	;# 
   976  0F1C                     	;# 
   977  0F1D                     	;# 
   978  0F1E                     	;# 
   979  0F1F                     	;# 
   980  0F20                     	;# 
   981  0F21                     	;# 
   982  0F22                     	;# 
   983  0F23                     	;# 
   984  0F24                     	;# 
   985  0F25                     	;# 
   986  0F26                     	;# 
   987  0F27                     	;# 
   988  0F28                     	;# 
   989  0F29                     	;# 
   990  0F2A                     	;# 
   991  0F2B                     	;# 
   992  0F2C                     	;# 
   993  0F2D                     	;# 
   994  0F2E                     	;# 
   995  0F2F                     	;# 
   996  0F30                     	;# 
   997  0F31                     	;# 
   998  0F32                     	;# 
   999  0F33                     	;# 
  1000  0F34                     	;# 
  1001  0F35                     	;# 
  1002  0F36                     	;# 
  1003  0F37                     	;# 
  1004  0FE4                     	;# 
  1005  0FE5                     	;# 
  1006  0FE6                     	;# 
  1007  0FE7                     	;# 
  1008  0FE8                     	;# 
  1009  0FE9                     	;# 
  1010  0FEA                     	;# 
  1011  0FEB                     	;# 
  1012  0FED                     	;# 
  1013  0FEE                     	;# 
  1014  0FEF                     	;# 
  1015  0000                     	;# 
  1016  0001                     	;# 
  1017  0002                     	;# 
  1018  0003                     	;# 
  1019  0004                     	;# 
  1020  0005                     	;# 
  1021  0006                     	;# 
  1022  0007                     	;# 
  1023  0008                     	;# 
  1024  0009                     	;# 
  1025  000A                     	;# 
  1026  000B                     	;# 
  1027  000C                     	;# 
  1028  000D                     	;# 
  1029  000E                     	;# 
  1030  0010                     	;# 
  1031  0011                     	;# 
  1032  0012                     	;# 
  1033  0013                     	;# 
  1034  0014                     	;# 
  1035  0015                     	;# 
  1036  0016                     	;# 
  1037  0016                     	;# 
  1038  0017                     	;# 
  1039  0018                     	;# 
  1040  0019                     	;# 
  1041  001A                     	;# 
  1042  001A                     	;# 
  1043  001B                     	;# 
  1044  001B                     	;# 
  1045  001C                     	;# 
  1046  001D                     	;# 
  1047  001E                     	;# 
  1048  001F                     	;# 
  1049  008C                     	;# 
  1050  008D                     	;# 
  1051  008E                     	;# 
  1052  0090                     	;# 
  1053  0091                     	;# 
  1054  0092                     	;# 
  1055  0093                     	;# 
  1056  0094                     	;# 
  1057  0095                     	;# 
  1058  0096                     	;# 
  1059  0098                     	;# 
  1060  0099                     	;# 
  1061  009A                     	;# 
  1062  009B                     	;# 
  1063  009B                     	;# 
  1064  009C                     	;# 
  1065  009D                     	;# 
  1066  009E                     	;# 
  1067  009F                     	;# 
  1068  010C                     	;# 
  1069  010D                     	;# 
  1070  010E                     	;# 
  1071  0111                     	;# 
  1072  0112                     	;# 
  1073  0113                     	;# 
  1074  0114                     	;# 
  1075  0115                     	;# 
  1076  0116                     	;# 
  1077  0117                     	;# 
  1078  0118                     	;# 
  1079  0119                     	;# 
  1080  011C                     	;# 
  1081  018C                     	;# 
  1082  018D                     	;# 
  1083  018E                     	;# 
  1084  0191                     	;# 
  1085  0191                     	;# 
  1086  0192                     	;# 
  1087  0193                     	;# 
  1088  0193                     	;# 
  1089  0194                     	;# 
  1090  0195                     	;# 
  1091  0196                     	;# 
  1092  0197                     	;# 
  1093  0199                     	;# 
  1094  0199                     	;# 
  1095  0199                     	;# 
  1096  019A                     	;# 
  1097  019A                     	;# 
  1098  019A                     	;# 
  1099  019B                     	;# 
  1100  019B                     	;# 
  1101  019B                     	;# 
  1102  019B                     	;# 
  1103  019B                     	;# 
  1104  019C                     	;# 
  1105  019C                     	;# 
  1106  019C                     	;# 
  1107  019D                     	;# 
  1108  019D                     	;# 
  1109  019D                     	;# 
  1110  019E                     	;# 
  1111  019E                     	;# 
  1112  019E                     	;# 
  1113  019F                     	;# 
  1114  019F                     	;# 
  1115  019F                     	;# 
  1116  019F                     	;# 
  1117  019F                     	;# 
  1118  020C                     	;# 
  1119  020D                     	;# 
  1120  020E                     	;# 
  1121  0211                     	;# 
  1122  0211                     	;# 
  1123  0212                     	;# 
  1124  0212                     	;# 
  1125  0213                     	;# 
  1126  0213                     	;# 
  1127  0214                     	;# 
  1128  0214                     	;# 
  1129  0215                     	;# 
  1130  0215                     	;# 
  1131  0215                     	;# 
  1132  0215                     	;# 
  1133  0216                     	;# 
  1134  0216                     	;# 
  1135  0217                     	;# 
  1136  0217                     	;# 
  1137  028C                     	;# 
  1138  028D                     	;# 
  1139  028E                     	;# 
  1140  0291                     	;# 
  1141  0291                     	;# 
  1142  0292                     	;# 
  1143  0293                     	;# 
  1144  0294                     	;# 
  1145  0298                     	;# 
  1146  0298                     	;# 
  1147  0299                     	;# 
  1148  029A                     	;# 
  1149  029B                     	;# 
  1150  029E                     	;# 
  1151  030C                     	;# 
  1152  030D                     	;# 
  1153  030E                     	;# 
  1154  038C                     	;# 
  1155  038D                     	;# 
  1156  038E                     	;# 
  1157  0391                     	;# 
  1158  0392                     	;# 
  1159  0393                     	;# 
  1160  0394                     	;# 
  1161  0395                     	;# 
  1162  0396                     	;# 
  1163  0397                     	;# 
  1164  0398                     	;# 
  1165  0399                     	;# 
  1166  040E                     	;# 
  1167  0413                     	;# 
  1168  0413                     	;# 
  1169  0414                     	;# 
  1170  0414                     	;# 
  1171  0415                     	;# 
  1172  0416                     	;# 
  1173  0417                     	;# 
  1174  0418                     	;# 
  1175  041A                     	;# 
  1176  041A                     	;# 
  1177  041B                     	;# 
  1178  041B                     	;# 
  1179  041C                     	;# 
  1180  041D                     	;# 
  1181  041E                     	;# 
  1182  041F                     	;# 
  1183  0493                     	;# 
  1184  0494                     	;# 
  1185  0495                     	;# 
  1186  0496                     	;# 
  1187  049A                     	;# 
  1188  049B                     	;# 
  1189  049C                     	;# 
  1190  049D                     	;# 
  1191  058C                     	;# 
  1192  058C                     	;# 
  1193  058D                     	;# 
  1194  058E                     	;# 
  1195  058E                     	;# 
  1196  058F                     	;# 
  1197  0590                     	;# 
  1198  0590                     	;# 
  1199  0591                     	;# 
  1200  0592                     	;# 
  1201  0592                     	;# 
  1202  0593                     	;# 
  1203  0594                     	;# 
  1204  0594                     	;# 
  1205  0595                     	;# 
  1206  0596                     	;# 
  1207  0596                     	;# 
  1208  0597                     	;# 
  1209  0598                     	;# 
  1210  0599                     	;# 
  1211  059A                     	;# 
  1212  059B                     	;# 
  1213  059B                     	;# 
  1214  059C                     	;# 
  1215  059D                     	;# 
  1216  060C                     	;# 
  1217  060C                     	;# 
  1218  060D                     	;# 
  1219  060E                     	;# 
  1220  060F                     	;# 
  1221  060F                     	;# 
  1222  0610                     	;# 
  1223  0611                     	;# 
  1224  0612                     	;# 
  1225  0613                     	;# 
  1226  0614                     	;# 
  1227  0617                     	;# 
  1228  0617                     	;# 
  1229  0618                     	;# 
  1230  0619                     	;# 
  1231  061A                     	;# 
  1232  061A                     	;# 
  1233  061B                     	;# 
  1234  061C                     	;# 
  1235  0691                     	;# 
  1236  0692                     	;# 
  1237  0693                     	;# 
  1238  0694                     	;# 
  1239  0695                     	;# 
  1240  0696                     	;# 
  1241  0697                     	;# 
  1242  0699                     	;# 
  1243  069A                     	;# 
  1244  0711                     	;# 
  1245  0712                     	;# 
  1246  0713                     	;# 
  1247  0714                     	;# 
  1248  0715                     	;# 
  1249  0718                     	;# 
  1250  0718                     	;# 
  1251  0719                     	;# 
  1252  071A                     	;# 
  1253  071A                     	;# 
  1254  071B                     	;# 
  1255  071C                     	;# 
  1256  071D                     	;# 
  1257  0791                     	;# 
  1258  0791                     	;# 
  1259  0792                     	;# 
  1260  0793                     	;# 
  1261  0793                     	;# 
  1262  0794                     	;# 
  1263  0795                     	;# 
  1264  0795                     	;# 
  1265  0796                     	;# 
  1266  0797                     	;# 
  1267  0797                     	;# 
  1268  0798                     	;# 
  1269  0799                     	;# 
  1270  079A                     	;# 
  1271  080C                     	;# 
  1272  080C                     	;# 
  1273  080D                     	;# 
  1274  080E                     	;# 
  1275  080E                     	;# 
  1276  080F                     	;# 
  1277  0810                     	;# 
  1278  0810                     	;# 
  1279  0811                     	;# 
  1280  0812                     	;# 
  1281  0812                     	;# 
  1282  0813                     	;# 
  1283  0814                     	;# 
  1284  0815                     	;# 
  1285  0816                     	;# 
  1286  0817                     	;# 
  1287  0818                     	;# 
  1288  0819                     	;# 
  1289  081A                     	;# 
  1290  081A                     	;# 
  1291  081B                     	;# 
  1292  081C                     	;# 
  1293  081C                     	;# 
  1294  081D                     	;# 
  1295  088C                     	;# 
  1296  088D                     	;# 
  1297  088E                     	;# 
  1298  088F                     	;# 
  1299  088F                     	;# 
  1300  0890                     	;# 
  1301  0891                     	;# 
  1302  0892                     	;# 
  1303  0893                     	;# 
  1304  0893                     	;# 
  1305  0894                     	;# 
  1306  0895                     	;# 
  1307  0896                     	;# 
  1308  0897                     	;# 
  1309  0897                     	;# 
  1310  0898                     	;# 
  1311  0899                     	;# 
  1312  0D8C                     	;# 
  1313  0D8C                     	;# 
  1314  0D8D                     	;# 
  1315  0D8E                     	;# 
  1316  0D8F                     	;# 
  1317  0D8F                     	;# 
  1318  0D90                     	;# 
  1319  0D91                     	;# 
  1320  0D92                     	;# 
  1321  0D92                     	;# 
  1322  0D93                     	;# 
  1323  0D94                     	;# 
  1324  0D95                     	;# 
  1325  0D95                     	;# 
  1326  0D96                     	;# 
  1327  0D97                     	;# 
  1328  0D98                     	;# 
  1329  0D99                     	;# 
  1330  0D9A                     	;# 
  1331  0D9B                     	;# 
  1332  0D9C                     	;# 
  1333  0D9D                     	;# 
  1334  0D9E                     	;# 
  1335  0D9E                     	;# 
  1336  0D9F                     	;# 
  1337  0DA0                     	;# 
  1338  0DA1                     	;# 
  1339  0DA1                     	;# 
  1340  0DA2                     	;# 
  1341  0DA3                     	;# 
  1342  0DA4                     	;# 
  1343  0DA4                     	;# 
  1344  0DA5                     	;# 
  1345  0DA6                     	;# 
  1346  0DA7                     	;# 
  1347  0DA7                     	;# 
  1348  0DA8                     	;# 
  1349  0DA9                     	;# 
  1350  0DAA                     	;# 
  1351  0DAB                     	;# 
  1352  0DAC                     	;# 
  1353  0DAD                     	;# 
  1354  0DAE                     	;# 
  1355  0DAF                     	;# 
  1356  0E0F                     	;# 
  1357  0E10                     	;# 
  1358  0E11                     	;# 
  1359  0E12                     	;# 
  1360  0E13                     	;# 
  1361  0E14                     	;# 
  1362  0E15                     	;# 
  1363  0E16                     	;# 
  1364  0E17                     	;# 
  1365  0E18                     	;# 
  1366  0E19                     	;# 
  1367  0E1A                     	;# 
  1368  0E1B                     	;# 
  1369  0E1C                     	;# 
  1370  0E1D                     	;# 
  1371  0E1E                     	;# 
  1372  0E1F                     	;# 
  1373  0E20                     	;# 
  1374  0E21                     	;# 
  1375  0E22                     	;# 
  1376  0E23                     	;# 
  1377  0E24                     	;# 
  1378  0E25                     	;# 
  1379  0E26                     	;# 
  1380  0E27                     	;# 
  1381  0E28                     	;# 
  1382  0E29                     	;# 
  1383  0E2A                     	;# 
  1384  0E2B                     	;# 
  1385  0E2C                     	;# 
  1386  0E2D                     	;# 
  1387  0E2E                     	;# 
  1388  0E90                     	;# 
  1389  0E91                     	;# 
  1390  0E92                     	;# 
  1391  0E94                     	;# 
  1392  0E95                     	;# 
  1393  0E9C                     	;# 
  1394  0E9D                     	;# 
  1395  0E9E                     	;# 
  1396  0E9F                     	;# 
  1397  0EA0                     	;# 
  1398  0EA1                     	;# 
  1399  0EA2                     	;# 
  1400  0EA3                     	;# 
  1401  0EA4                     	;# 
  1402  0EA5                     	;# 
  1403  0EA6                     	;# 
  1404  0EA7                     	;# 
  1405  0F0F                     	;# 
  1406  0F10                     	;# 
  1407  0F11                     	;# 
  1408  0F12                     	;# 
  1409  0F13                     	;# 
  1410  0F14                     	;# 
  1411  0F15                     	;# 
  1412  0F16                     	;# 
  1413  0F17                     	;# 
  1414  0F18                     	;# 
  1415  0F19                     	;# 
  1416  0F1A                     	;# 
  1417  0F1B                     	;# 
  1418  0F1C                     	;# 
  1419  0F1D                     	;# 
  1420  0F1E                     	;# 
  1421  0F1F                     	;# 
  1422  0F20                     	;# 
  1423  0F21                     	;# 
  1424  0F22                     	;# 
  1425  0F23                     	;# 
  1426  0F24                     	;# 
  1427  0F25                     	;# 
  1428  0F26                     	;# 
  1429  0F27                     	;# 
  1430  0F28                     	;# 
  1431  0F29                     	;# 
  1432  0F2A                     	;# 
  1433  0F2B                     	;# 
  1434  0F2C                     	;# 
  1435  0F2D                     	;# 
  1436  0F2E                     	;# 
  1437  0F2F                     	;# 
  1438  0F30                     	;# 
  1439  0F31                     	;# 
  1440  0F32                     	;# 
  1441  0F33                     	;# 
  1442  0F34                     	;# 
  1443  0F35                     	;# 
  1444  0F36                     	;# 
  1445  0F37                     	;# 
  1446  0FE4                     	;# 
  1447  0FE5                     	;# 
  1448  0FE6                     	;# 
  1449  0FE7                     	;# 
  1450  0FE8                     	;# 
  1451  0FE9                     	;# 
  1452  0FEA                     	;# 
  1453  0FEB                     	;# 
  1454  0FED                     	;# 
  1455  0FEE                     	;# 
  1456  0FEF                     	;# 
  1457  0000                     	;# 
  1458  0001                     	;# 
  1459  0002                     	;# 
  1460  0003                     	;# 
  1461  0004                     	;# 
  1462  0005                     	;# 
  1463  0006                     	;# 
  1464  0007                     	;# 
  1465  0008                     	;# 
  1466  0009                     	;# 
  1467  000A                     	;# 
  1468  000B                     	;# 
  1469  000C                     	;# 
  1470  000D                     	;# 
  1471  000E                     	;# 
  1472  0010                     	;# 
  1473  0011                     	;# 
  1474  0012                     	;# 
  1475  0013                     	;# 
  1476  0014                     	;# 
  1477  0015                     	;# 
  1478  0016                     	;# 
  1479  0016                     	;# 
  1480  0017                     	;# 
  1481  0018                     	;# 
  1482  0019                     	;# 
  1483  001A                     	;# 
  1484  001A                     	;# 
  1485  001B                     	;# 
  1486  001B                     	;# 
  1487  001C                     	;# 
  1488  001D                     	;# 
  1489  001E                     	;# 
  1490  001F                     	;# 
  1491  008C                     	;# 
  1492  008D                     	;# 
  1493  008E                     	;# 
  1494  0090                     	;# 
  1495  0091                     	;# 
  1496  0092                     	;# 
  1497  0093                     	;# 
  1498  0094                     	;# 
  1499  0095                     	;# 
  1500  0096                     	;# 
  1501  0098                     	;# 
  1502  0099                     	;# 
  1503  009A                     	;# 
  1504  009B                     	;# 
  1505  009B                     	;# 
  1506  009C                     	;# 
  1507  009D                     	;# 
  1508  009E                     	;# 
  1509  009F                     	;# 
  1510  010C                     	;# 
  1511  010D                     	;# 
  1512  010E                     	;# 
  1513  0111                     	;# 
  1514  0112                     	;# 
  1515  0113                     	;# 
  1516  0114                     	;# 
  1517  0115                     	;# 
  1518  0116                     	;# 
  1519  0117                     	;# 
  1520  0118                     	;# 
  1521  0119                     	;# 
  1522  011C                     	;# 
  1523  018C                     	;# 
  1524  018D                     	;# 
  1525  018E                     	;# 
  1526  0191                     	;# 
  1527  0191                     	;# 
  1528  0192                     	;# 
  1529  0193                     	;# 
  1530  0193                     	;# 
  1531  0194                     	;# 
  1532  0195                     	;# 
  1533  0196                     	;# 
  1534  0197                     	;# 
  1535  0199                     	;# 
  1536  0199                     	;# 
  1537  0199                     	;# 
  1538  019A                     	;# 
  1539  019A                     	;# 
  1540  019A                     	;# 
  1541  019B                     	;# 
  1542  019B                     	;# 
  1543  019B                     	;# 
  1544  019B                     	;# 
  1545  019B                     	;# 
  1546  019C                     	;# 
  1547  019C                     	;# 
  1548  019C                     	;# 
  1549  019D                     	;# 
  1550  019D                     	;# 
  1551  019D                     	;# 
  1552  019E                     	;# 
  1553  019E                     	;# 
  1554  019E                     	;# 
  1555  019F                     	;# 
  1556  019F                     	;# 
  1557  019F                     	;# 
  1558  019F                     	;# 
  1559  019F                     	;# 
  1560  020C                     	;# 
  1561  020D                     	;# 
  1562  020E                     	;# 
  1563  0211                     	;# 
  1564  0211                     	;# 
  1565  0212                     	;# 
  1566  0212                     	;# 
  1567  0213                     	;# 
  1568  0213                     	;# 
  1569  0214                     	;# 
  1570  0214                     	;# 
  1571  0215                     	;# 
  1572  0215                     	;# 
  1573  0215                     	;# 
  1574  0215                     	;# 
  1575  0216                     	;# 
  1576  0216                     	;# 
  1577  0217                     	;# 
  1578  0217                     	;# 
  1579  028C                     	;# 
  1580  028D                     	;# 
  1581  028E                     	;# 
  1582  0291                     	;# 
  1583  0291                     	;# 
  1584  0292                     	;# 
  1585  0293                     	;# 
  1586  0294                     	;# 
  1587  0298                     	;# 
  1588  0298                     	;# 
  1589  0299                     	;# 
  1590  029A                     	;# 
  1591  029B                     	;# 
  1592  029E                     	;# 
  1593  030C                     	;# 
  1594  030D                     	;# 
  1595  030E                     	;# 
  1596  038C                     	;# 
  1597  038D                     	;# 
  1598  038E                     	;# 
  1599  0391                     	;# 
  1600  0392                     	;# 
  1601  0393                     	;# 
  1602  0394                     	;# 
  1603  0395                     	;# 
  1604  0396                     	;# 
  1605  0397                     	;# 
  1606  0398                     	;# 
  1607  0399                     	;# 
  1608  040E                     	;# 
  1609  0413                     	;# 
  1610  0413                     	;# 
  1611  0414                     	;# 
  1612  0414                     	;# 
  1613  0415                     	;# 
  1614  0416                     	;# 
  1615  0417                     	;# 
  1616  0418                     	;# 
  1617  041A                     	;# 
  1618  041A                     	;# 
  1619  041B                     	;# 
  1620  041B                     	;# 
  1621  041C                     	;# 
  1622  041D                     	;# 
  1623  041E                     	;# 
  1624  041F                     	;# 
  1625  0493                     	;# 
  1626  0494                     	;# 
  1627  0495                     	;# 
  1628  0496                     	;# 
  1629  049A                     	;# 
  1630  049B                     	;# 
  1631  049C                     	;# 
  1632  049D                     	;# 
  1633  058C                     	;# 
  1634  058C                     	;# 
  1635  058D                     	;# 
  1636  058E                     	;# 
  1637  058E                     	;# 
  1638  058F                     	;# 
  1639  0590                     	;# 
  1640  0590                     	;# 
  1641  0591                     	;# 
  1642  0592                     	;# 
  1643  0592                     	;# 
  1644  0593                     	;# 
  1645  0594                     	;# 
  1646  0594                     	;# 
  1647  0595                     	;# 
  1648  0596                     	;# 
  1649  0596                     	;# 
  1650  0597                     	;# 
  1651  0598                     	;# 
  1652  0599                     	;# 
  1653  059A                     	;# 
  1654  059B                     	;# 
  1655  059B                     	;# 
  1656  059C                     	;# 
  1657  059D                     	;# 
  1658  060C                     	;# 
  1659  060C                     	;# 
  1660  060D                     	;# 
  1661  060E                     	;# 
  1662  060F                     	;# 
  1663  060F                     	;# 
  1664  0610                     	;# 
  1665  0611                     	;# 
  1666  0612                     	;# 
  1667  0613                     	;# 
  1668  0614                     	;# 
  1669  0617                     	;# 
  1670  0617                     	;# 
  1671  0618                     	;# 
  1672  0619                     	;# 
  1673  061A                     	;# 
  1674  061A                     	;# 
  1675  061B                     	;# 
  1676  061C                     	;# 
  1677  0691                     	;# 
  1678  0692                     	;# 
  1679  0693                     	;# 
  1680  0694                     	;# 
  1681  0695                     	;# 
  1682  0696                     	;# 
  1683  0697                     	;# 
  1684  0699                     	;# 
  1685  069A                     	;# 
  1686  0711                     	;# 
  1687  0712                     	;# 
  1688  0713                     	;# 
  1689  0714                     	;# 
  1690  0715                     	;# 
  1691  0718                     	;# 
  1692  0718                     	;# 
  1693  0719                     	;# 
  1694  071A                     	;# 
  1695  071A                     	;# 
  1696  071B                     	;# 
  1697  071C                     	;# 
  1698  071D                     	;# 
  1699  0791                     	;# 
  1700  0791                     	;# 
  1701  0792                     	;# 
  1702  0793                     	;# 
  1703  0793                     	;# 
  1704  0794                     	;# 
  1705  0795                     	;# 
  1706  0795                     	;# 
  1707  0796                     	;# 
  1708  0797                     	;# 
  1709  0797                     	;# 
  1710  0798                     	;# 
  1711  0799                     	;# 
  1712  079A                     	;# 
  1713  080C                     	;# 
  1714  080C                     	;# 
  1715  080D                     	;# 
  1716  080E                     	;# 
  1717  080E                     	;# 
  1718  080F                     	;# 
  1719  0810                     	;# 
  1720  0810                     	;# 
  1721  0811                     	;# 
  1722  0812                     	;# 
  1723  0812                     	;# 
  1724  0813                     	;# 
  1725  0814                     	;# 
  1726  0815                     	;# 
  1727  0816                     	;# 
  1728  0817                     	;# 
  1729  0818                     	;# 
  1730  0819                     	;# 
  1731  081A                     	;# 
  1732  081A                     	;# 
  1733  081B                     	;# 
  1734  081C                     	;# 
  1735  081C                     	;# 
  1736  081D                     	;# 
  1737  088C                     	;# 
  1738  088D                     	;# 
  1739  088E                     	;# 
  1740  088F                     	;# 
  1741  088F                     	;# 
  1742  0890                     	;# 
  1743  0891                     	;# 
  1744  0892                     	;# 
  1745  0893                     	;# 
  1746  0893                     	;# 
  1747  0894                     	;# 
  1748  0895                     	;# 
  1749  0896                     	;# 
  1750  0897                     	;# 
  1751  0897                     	;# 
  1752  0898                     	;# 
  1753  0899                     	;# 
  1754  0D8C                     	;# 
  1755  0D8C                     	;# 
  1756  0D8D                     	;# 
  1757  0D8E                     	;# 
  1758  0D8F                     	;# 
  1759  0D8F                     	;# 
  1760  0D90                     	;# 
  1761  0D91                     	;# 
  1762  0D92                     	;# 
  1763  0D92                     	;# 
  1764  0D93                     	;# 
  1765  0D94                     	;# 
  1766  0D95                     	;# 
  1767  0D95                     	;# 
  1768  0D96                     	;# 
  1769  0D97                     	;# 
  1770  0D98                     	;# 
  1771  0D99                     	;# 
  1772  0D9A                     	;# 
  1773  0D9B                     	;# 
  1774  0D9C                     	;# 
  1775  0D9D                     	;# 
  1776  0D9E                     	;# 
  1777  0D9E                     	;# 
  1778  0D9F                     	;# 
  1779  0DA0                     	;# 
  1780  0DA1                     	;# 
  1781  0DA1                     	;# 
  1782  0DA2                     	;# 
  1783  0DA3                     	;# 
  1784  0DA4                     	;# 
  1785  0DA4                     	;# 
  1786  0DA5                     	;# 
  1787  0DA6                     	;# 
  1788  0DA7                     	;# 
  1789  0DA7                     	;# 
  1790  0DA8                     	;# 
  1791  0DA9                     	;# 
  1792  0DAA                     	;# 
  1793  0DAB                     	;# 
  1794  0DAC                     	;# 
  1795  0DAD                     	;# 
  1796  0DAE                     	;# 
  1797  0DAF                     	;# 
  1798  0E0F                     	;# 
  1799  0E10                     	;# 
  1800  0E11                     	;# 
  1801  0E12                     	;# 
  1802  0E13                     	;# 
  1803  0E14                     	;# 
  1804  0E15                     	;# 
  1805  0E16                     	;# 
  1806  0E17                     	;# 
  1807  0E18                     	;# 
  1808  0E19                     	;# 
  1809  0E1A                     	;# 
  1810  0E1B                     	;# 
  1811  0E1C                     	;# 
  1812  0E1D                     	;# 
  1813  0E1E                     	;# 
  1814  0E1F                     	;# 
  1815  0E20                     	;# 
  1816  0E21                     	;# 
  1817  0E22                     	;# 
  1818  0E23                     	;# 
  1819  0E24                     	;# 
  1820  0E25                     	;# 
  1821  0E26                     	;# 
  1822  0E27                     	;# 
  1823  0E28                     	;# 
  1824  0E29                     	;# 
  1825  0E2A                     	;# 
  1826  0E2B                     	;# 
  1827  0E2C                     	;# 
  1828  0E2D                     	;# 
  1829  0E2E                     	;# 
  1830  0E90                     	;# 
  1831  0E91                     	;# 
  1832  0E92                     	;# 
  1833  0E94                     	;# 
  1834  0E95                     	;# 
  1835  0E9C                     	;# 
  1836  0E9D                     	;# 
  1837  0E9E                     	;# 
  1838  0E9F                     	;# 
  1839  0EA0                     	;# 
  1840  0EA1                     	;# 
  1841  0EA2                     	;# 
  1842  0EA3                     	;# 
  1843  0EA4                     	;# 
  1844  0EA5                     	;# 
  1845  0EA6                     	;# 
  1846  0EA7                     	;# 
  1847  0F0F                     	;# 
  1848  0F10                     	;# 
  1849  0F11                     	;# 
  1850  0F12                     	;# 
  1851  0F13                     	;# 
  1852  0F14                     	;# 
  1853  0F15                     	;# 
  1854  0F16                     	;# 
  1855  0F17                     	;# 
  1856  0F18                     	;# 
  1857  0F19                     	;# 
  1858  0F1A                     	;# 
  1859  0F1B                     	;# 
  1860  0F1C                     	;# 
  1861  0F1D                     	;# 
  1862  0F1E                     	;# 
  1863  0F1F                     	;# 
  1864  0F20                     	;# 
  1865  0F21                     	;# 
  1866  0F22                     	;# 
  1867  0F23                     	;# 
  1868  0F24                     	;# 
  1869  0F25                     	;# 
  1870  0F26                     	;# 
  1871  0F27                     	;# 
  1872  0F28                     	;# 
  1873  0F29                     	;# 
  1874  0F2A                     	;# 
  1875  0F2B                     	;# 
  1876  0F2C                     	;# 
  1877  0F2D                     	;# 
  1878  0F2E                     	;# 
  1879  0F2F                     	;# 
  1880  0F30                     	;# 
  1881  0F31                     	;# 
  1882  0F32                     	;# 
  1883  0F33                     	;# 
  1884  0F34                     	;# 
  1885  0F35                     	;# 
  1886  0F36                     	;# 
  1887  0F37                     	;# 
  1888  0FE4                     	;# 
  1889  0FE5                     	;# 
  1890  0FE6                     	;# 
  1891  0FE7                     	;# 
  1892  0FE8                     	;# 
  1893  0FE9                     	;# 
  1894  0FEA                     	;# 
  1895  0FEB                     	;# 
  1896  0FED                     	;# 
  1897  0FEE                     	;# 
  1898  0FEF                     	;# 
  1899  0000                     	;# 
  1900  0001                     	;# 
  1901  0002                     	;# 
  1902  0003                     	;# 
  1903  0004                     	;# 
  1904  0005                     	;# 
  1905  0006                     	;# 
  1906  0007                     	;# 
  1907  0008                     	;# 
  1908  0009                     	;# 
  1909  000A                     	;# 
  1910  000B                     	;# 
  1911  000C                     	;# 
  1912  000D                     	;# 
  1913  000E                     	;# 
  1914  0010                     	;# 
  1915  0011                     	;# 
  1916  0012                     	;# 
  1917  0013                     	;# 
  1918  0014                     	;# 
  1919  0015                     	;# 
  1920  0016                     	;# 
  1921  0016                     	;# 
  1922  0017                     	;# 
  1923  0018                     	;# 
  1924  0019                     	;# 
  1925  001A                     	;# 
  1926  001A                     	;# 
  1927  001B                     	;# 
  1928  001B                     	;# 
  1929  001C                     	;# 
  1930  001D                     	;# 
  1931  001E                     	;# 
  1932  001F                     	;# 
  1933  008C                     	;# 
  1934  008D                     	;# 
  1935  008E                     	;# 
  1936  0090                     	;# 
  1937  0091                     	;# 
  1938  0092                     	;# 
  1939  0093                     	;# 
  1940  0094                     	;# 
  1941  0095                     	;# 
  1942  0096                     	;# 
  1943  0098                     	;# 
  1944  0099                     	;# 
  1945  009A                     	;# 
  1946  009B                     	;# 
  1947  009B                     	;# 
  1948  009C                     	;# 
  1949  009D                     	;# 
  1950  009E                     	;# 
  1951  009F                     	;# 
  1952  010C                     	;# 
  1953  010D                     	;# 
  1954  010E                     	;# 
  1955  0111                     	;# 
  1956  0112                     	;# 
  1957  0113                     	;# 
  1958  0114                     	;# 
  1959  0115                     	;# 
  1960  0116                     	;# 
  1961  0117                     	;# 
  1962  0118                     	;# 
  1963  0119                     	;# 
  1964  011C                     	;# 
  1965  018C                     	;# 
  1966  018D                     	;# 
  1967  018E                     	;# 
  1968  0191                     	;# 
  1969  0191                     	;# 
  1970  0192                     	;# 
  1971  0193                     	;# 
  1972  0193                     	;# 
  1973  0194                     	;# 
  1974  0195                     	;# 
  1975  0196                     	;# 
  1976  0197                     	;# 
  1977  0199                     	;# 
  1978  0199                     	;# 
  1979  0199                     	;# 
  1980  019A                     	;# 
  1981  019A                     	;# 
  1982  019A                     	;# 
  1983  019B                     	;# 
  1984  019B                     	;# 
  1985  019B                     	;# 
  1986  019B                     	;# 
  1987  019B                     	;# 
  1988  019C                     	;# 
  1989  019C                     	;# 
  1990  019C                     	;# 
  1991  019D                     	;# 
  1992  019D                     	;# 
  1993  019D                     	;# 
  1994  019E                     	;# 
  1995  019E                     	;# 
  1996  019E                     	;# 
  1997  019F                     	;# 
  1998  019F                     	;# 
  1999  019F                     	;# 
  2000  019F                     	;# 
  2001  019F                     	;# 
  2002  020C                     	;# 
  2003  020D                     	;# 
  2004  020E                     	;# 
  2005  0211                     	;# 
  2006  0211                     	;# 
  2007  0212                     	;# 
  2008  0212                     	;# 
  2009  0213                     	;# 
  2010  0213                     	;# 
  2011  0214                     	;# 
  2012  0214                     	;# 
  2013  0215                     	;# 
  2014  0215                     	;# 
  2015  0215                     	;# 
  2016  0215                     	;# 
  2017  0216                     	;# 
  2018  0216                     	;# 
  2019  0217                     	;# 
  2020  0217                     	;# 
  2021  028C                     	;# 
  2022  028D                     	;# 
  2023  028E                     	;# 
  2024  0291                     	;# 
  2025  0291                     	;# 
  2026  0292                     	;# 
  2027  0293                     	;# 
  2028  0294                     	;# 
  2029  0298                     	;# 
  2030  0298                     	;# 
  2031  0299                     	;# 
  2032  029A                     	;# 
  2033  029B                     	;# 
  2034  029E                     	;# 
  2035  030C                     	;# 
  2036  030D                     	;# 
  2037  030E                     	;# 
  2038  038C                     	;# 
  2039  038D                     	;# 
  2040  038E                     	;# 
  2041  0391                     	;# 
  2042  0392                     	;# 
  2043  0393                     	;# 
  2044  0394                     	;# 
  2045  0395                     	;# 
  2046  0396                     	;# 
  2047  0397                     	;# 
  2048  0398                     	;# 
  2049  0399                     	;# 
  2050  040E                     	;# 
  2051  0413                     	;# 
  2052  0413                     	;# 
  2053  0414                     	;# 
  2054  0414                     	;# 
  2055  0415                     	;# 
  2056  0416                     	;# 
  2057  0417                     	;# 
  2058  0418                     	;# 
  2059  041A                     	;# 
  2060  041A                     	;# 
  2061  041B                     	;# 
  2062  041B                     	;# 
  2063  041C                     	;# 
  2064  041D                     	;# 
  2065  041E                     	;# 
  2066  041F                     	;# 
  2067  0493                     	;# 
  2068  0494                     	;# 
  2069  0495                     	;# 
  2070  0496                     	;# 
  2071  049A                     	;# 
  2072  049B                     	;# 
  2073  049C                     	;# 
  2074  049D                     	;# 
  2075  058C                     	;# 
  2076  058C                     	;# 
  2077  058D                     	;# 
  2078  058E                     	;# 
  2079  058E                     	;# 
  2080  058F                     	;# 
  2081  0590                     	;# 
  2082  0590                     	;# 
  2083  0591                     	;# 
  2084  0592                     	;# 
  2085  0592                     	;# 
  2086  0593                     	;# 
  2087  0594                     	;# 
  2088  0594                     	;# 
  2089  0595                     	;# 
  2090  0596                     	;# 
  2091  0596                     	;# 
  2092  0597                     	;# 
  2093  0598                     	;# 
  2094  0599                     	;# 
  2095  059A                     	;# 
  2096  059B                     	;# 
  2097  059B                     	;# 
  2098  059C                     	;# 
  2099  059D                     	;# 
  2100  060C                     	;# 
  2101  060C                     	;# 
  2102  060D                     	;# 
  2103  060E                     	;# 
  2104  060F                     	;# 
  2105  060F                     	;# 
  2106  0610                     	;# 
  2107  0611                     	;# 
  2108  0612                     	;# 
  2109  0613                     	;# 
  2110  0614                     	;# 
  2111  0617                     	;# 
  2112  0617                     	;# 
  2113  0618                     	;# 
  2114  0619                     	;# 
  2115  061A                     	;# 
  2116  061A                     	;# 
  2117  061B                     	;# 
  2118  061C                     	;# 
  2119  0691                     	;# 
  2120  0692                     	;# 
  2121  0693                     	;# 
  2122  0694                     	;# 
  2123  0695                     	;# 
  2124  0696                     	;# 
  2125  0697                     	;# 
  2126  0699                     	;# 
  2127  069A                     	;# 
  2128  0711                     	;# 
  2129  0712                     	;# 
  2130  0713                     	;# 
  2131  0714                     	;# 
  2132  0715                     	;# 
  2133  0718                     	;# 
  2134  0718                     	;# 
  2135  0719                     	;# 
  2136  071A                     	;# 
  2137  071A                     	;# 
  2138  071B                     	;# 
  2139  071C                     	;# 
  2140  071D                     	;# 
  2141  0791                     	;# 
  2142  0791                     	;# 
  2143  0792                     	;# 
  2144  0793                     	;# 
  2145  0793                     	;# 
  2146  0794                     	;# 
  2147  0795                     	;# 
  2148  0795                     	;# 
  2149  0796                     	;# 
  2150  0797                     	;# 
  2151  0797                     	;# 
  2152  0798                     	;# 
  2153  0799                     	;# 
  2154  079A                     	;# 
  2155  080C                     	;# 
  2156  080C                     	;# 
  2157  080D                     	;# 
  2158  080E                     	;# 
  2159  080E                     	;# 
  2160  080F                     	;# 
  2161  0810                     	;# 
  2162  0810                     	;# 
  2163  0811                     	;# 
  2164  0812                     	;# 
  2165  0812                     	;# 
  2166  0813                     	;# 
  2167  0814                     	;# 
  2168  0815                     	;# 
  2169  0816                     	;# 
  2170  0817                     	;# 
  2171  0818                     	;# 
  2172  0819                     	;# 
  2173  081A                     	;# 
  2174  081A                     	;# 
  2175  081B                     	;# 
  2176  081C                     	;# 
  2177  081C                     	;# 
  2178  081D                     	;# 
  2179  088C                     	;# 
  2180  088D                     	;# 
  2181  088E                     	;# 
  2182  088F                     	;# 
  2183  088F                     	;# 
  2184  0890                     	;# 
  2185  0891                     	;# 
  2186  0892                     	;# 
  2187  0893                     	;# 
  2188  0893                     	;# 
  2189  0894                     	;# 
  2190  0895                     	;# 
  2191  0896                     	;# 
  2192  0897                     	;# 
  2193  0897                     	;# 
  2194  0898                     	;# 
  2195  0899                     	;# 
  2196  0D8C                     	;# 
  2197  0D8C                     	;# 
  2198  0D8D                     	;# 
  2199  0D8E                     	;# 
  2200  0D8F                     	;# 
  2201  0D8F                     	;# 
  2202  0D90                     	;# 
  2203  0D91                     	;# 
  2204  0D92                     	;# 
  2205  0D92                     	;# 
  2206  0D93                     	;# 
  2207  0D94                     	;# 
  2208  0D95                     	;# 
  2209  0D95                     	;# 
  2210  0D96                     	;# 
  2211  0D97                     	;# 
  2212  0D98                     	;# 
  2213  0D99                     	;# 
  2214  0D9A                     	;# 
  2215  0D9B                     	;# 
  2216  0D9C                     	;# 
  2217  0D9D                     	;# 
  2218  0D9E                     	;# 
  2219  0D9E                     	;# 
  2220  0D9F                     	;# 
  2221  0DA0                     	;# 
  2222  0DA1                     	;# 
  2223  0DA1                     	;# 
  2224  0DA2                     	;# 
  2225  0DA3                     	;# 
  2226  0DA4                     	;# 
  2227  0DA4                     	;# 
  2228  0DA5                     	;# 
  2229  0DA6                     	;# 
  2230  0DA7                     	;# 
  2231  0DA7                     	;# 
  2232  0DA8                     	;# 
  2233  0DA9                     	;# 
  2234  0DAA                     	;# 
  2235  0DAB                     	;# 
  2236  0DAC                     	;# 
  2237  0DAD                     	;# 
  2238  0DAE                     	;# 
  2239  0DAF                     	;# 
  2240  0E0F                     	;# 
  2241  0E10                     	;# 
  2242  0E11                     	;# 
  2243  0E12                     	;# 
  2244  0E13                     	;# 
  2245  0E14                     	;# 
  2246  0E15                     	;# 
  2247  0E16                     	;# 
  2248  0E17                     	;# 
  2249  0E18                     	;# 
  2250  0E19                     	;# 
  2251  0E1A                     	;# 
  2252  0E1B                     	;# 
  2253  0E1C                     	;# 
  2254  0E1D                     	;# 
  2255  0E1E                     	;# 
  2256  0E1F                     	;# 
  2257  0E20                     	;# 
  2258  0E21                     	;# 
  2259  0E22                     	;# 
  2260  0E23                     	;# 
  2261  0E24                     	;# 
  2262  0E25                     	;# 
  2263  0E26                     	;# 
  2264  0E27                     	;# 
  2265  0E28                     	;# 
  2266  0E29                     	;# 
  2267  0E2A                     	;# 
  2268  0E2B                     	;# 
  2269  0E2C                     	;# 
  2270  0E2D                     	;# 
  2271  0E2E                     	;# 
  2272  0E90                     	;# 
  2273  0E91                     	;# 
  2274  0E92                     	;# 
  2275  0E94                     	;# 
  2276  0E95                     	;# 
  2277  0E9C                     	;# 
  2278  0E9D                     	;# 
  2279  0E9E                     	;# 
  2280  0E9F                     	;# 
  2281  0EA0                     	;# 
  2282  0EA1                     	;# 
  2283  0EA2                     	;# 
  2284  0EA3                     	;# 
  2285  0EA4                     	;# 
  2286  0EA5                     	;# 
  2287  0EA6                     	;# 
  2288  0EA7                     	;# 
  2289  0F0F                     	;# 
  2290  0F10                     	;# 
  2291  0F11                     	;# 
  2292  0F12                     	;# 
  2293  0F13                     	;# 
  2294  0F14                     	;# 
  2295  0F15                     	;# 
  2296  0F16                     	;# 
  2297  0F17                     	;# 
  2298  0F18                     	;# 
  2299  0F19                     	;# 
  2300  0F1A                     	;# 
  2301  0F1B                     	;# 
  2302  0F1C                     	;# 
  2303  0F1D                     	;# 
  2304  0F1E                     	;# 
  2305  0F1F                     	;# 
  2306  0F20                     	;# 
  2307  0F21                     	;# 
  2308  0F22                     	;# 
  2309  0F23                     	;# 
  2310  0F24                     	;# 
  2311  0F25                     	;# 
  2312  0F26                     	;# 
  2313  0F27                     	;# 
  2314  0F28                     	;# 
  2315  0F29                     	;# 
  2316  0F2A                     	;# 
  2317  0F2B                     	;# 
  2318  0F2C                     	;# 
  2319  0F2D                     	;# 
  2320  0F2E                     	;# 
  2321  0F2F                     	;# 
  2322  0F30                     	;# 
  2323  0F31                     	;# 
  2324  0F32                     	;# 
  2325  0F33                     	;# 
  2326  0F34                     	;# 
  2327  0F35                     	;# 
  2328  0F36                     	;# 
  2329  0F37                     	;# 
  2330  0FE4                     	;# 
  2331  0FE5                     	;# 
  2332  0FE6                     	;# 
  2333  0FE7                     	;# 
  2334  0FE8                     	;# 
  2335  0FE9                     	;# 
  2336  0FEA                     	;# 
  2337  0FEB                     	;# 
  2338  0FED                     	;# 
  2339  0FEE                     	;# 
  2340  0FEF                     	;# 
  2341  0000                     	;# 
  2342  0001                     	;# 
  2343  0002                     	;# 
  2344  0003                     	;# 
  2345  0004                     	;# 
  2346  0005                     	;# 
  2347  0006                     	;# 
  2348  0007                     	;# 
  2349  0008                     	;# 
  2350  0009                     	;# 
  2351  000A                     	;# 
  2352  000B                     	;# 
  2353  000C                     	;# 
  2354  000D                     	;# 
  2355  000E                     	;# 
  2356  0010                     	;# 
  2357  0011                     	;# 
  2358  0012                     	;# 
  2359  0013                     	;# 
  2360  0014                     	;# 
  2361  0015                     	;# 
  2362  0016                     	;# 
  2363  0016                     	;# 
  2364  0017                     	;# 
  2365  0018                     	;# 
  2366  0019                     	;# 
  2367  001A                     	;# 
  2368  001A                     	;# 
  2369  001B                     	;# 
  2370  001B                     	;# 
  2371  001C                     	;# 
  2372  001D                     	;# 
  2373  001E                     	;# 
  2374  001F                     	;# 
  2375  008C                     	;# 
  2376  008D                     	;# 
  2377  008E                     	;# 
  2378  0090                     	;# 
  2379  0091                     	;# 
  2380  0092                     	;# 
  2381  0093                     	;# 
  2382  0094                     	;# 
  2383  0095                     	;# 
  2384  0096                     	;# 
  2385  0098                     	;# 
  2386  0099                     	;# 
  2387  009A                     	;# 
  2388  009B                     	;# 
  2389  009B                     	;# 
  2390  009C                     	;# 
  2391  009D                     	;# 
  2392  009E                     	;# 
  2393  009F                     	;# 
  2394  010C                     	;# 
  2395  010D                     	;# 
  2396  010E                     	;# 
  2397  0111                     	;# 
  2398  0112                     	;# 
  2399  0113                     	;# 
  2400  0114                     	;# 
  2401  0115                     	;# 
  2402  0116                     	;# 
  2403  0117                     	;# 
  2404  0118                     	;# 
  2405  0119                     	;# 
  2406  011C                     	;# 
  2407  018C                     	;# 
  2408  018D                     	;# 
  2409  018E                     	;# 
  2410  0191                     	;# 
  2411  0191                     	;# 
  2412  0192                     	;# 
  2413  0193                     	;# 
  2414  0193                     	;# 
  2415  0194                     	;# 
  2416  0195                     	;# 
  2417  0196                     	;# 
  2418  0197                     	;# 
  2419  0199                     	;# 
  2420  0199                     	;# 
  2421  0199                     	;# 
  2422  019A                     	;# 
  2423  019A                     	;# 
  2424  019A                     	;# 
  2425  019B                     	;# 
  2426  019B                     	;# 
  2427  019B                     	;# 
  2428  019B                     	;# 
  2429  019B                     	;# 
  2430  019C                     	;# 
  2431  019C                     	;# 
  2432  019C                     	;# 
  2433  019D                     	;# 
  2434  019D                     	;# 
  2435  019D                     	;# 
  2436  019E                     	;# 
  2437  019E                     	;# 
  2438  019E                     	;# 
  2439  019F                     	;# 
  2440  019F                     	;# 
  2441  019F                     	;# 
  2442  019F                     	;# 
  2443  019F                     	;# 
  2444  020C                     	;# 
  2445  020D                     	;# 
  2446  020E                     	;# 
  2447  0211                     	;# 
  2448  0211                     	;# 
  2449  0212                     	;# 
  2450  0212                     	;# 
  2451  0213                     	;# 
  2452  0213                     	;# 
  2453  0214                     	;# 
  2454  0214                     	;# 
  2455  0215                     	;# 
  2456  0215                     	;# 
  2457  0215                     	;# 
  2458  0215                     	;# 
  2459  0216                     	;# 
  2460  0216                     	;# 
  2461  0217                     	;# 
  2462  0217                     	;# 
  2463  028C                     	;# 
  2464  028D                     	;# 
  2465  028E                     	;# 
  2466  0291                     	;# 
  2467  0291                     	;# 
  2468  0292                     	;# 
  2469  0293                     	;# 
  2470  0294                     	;# 
  2471  0298                     	;# 
  2472  0298                     	;# 
  2473  0299                     	;# 
  2474  029A                     	;# 
  2475  029B                     	;# 
  2476  029E                     	;# 
  2477  030C                     	;# 
  2478  030D                     	;# 
  2479  030E                     	;# 
  2480  038C                     	;# 
  2481  038D                     	;# 
  2482  038E                     	;# 
  2483  0391                     	;# 
  2484  0392                     	;# 
  2485  0393                     	;# 
  2486  0394                     	;# 
  2487  0395                     	;# 
  2488  0396                     	;# 
  2489  0397                     	;# 
  2490  0398                     	;# 
  2491  0399                     	;# 
  2492  040E                     	;# 
  2493  0413                     	;# 
  2494  0413                     	;# 
  2495  0414                     	;# 
  2496  0414                     	;# 
  2497  0415                     	;# 
  2498  0416                     	;# 
  2499  0417                     	;# 
  2500  0418                     	;# 
  2501  041A                     	;# 
  2502  041A                     	;# 
  2503  041B                     	;# 
  2504  041B                     	;# 
  2505  041C                     	;# 
  2506  041D                     	;# 
  2507  041E                     	;# 
  2508  041F                     	;# 
  2509  0493                     	;# 
  2510  0494                     	;# 
  2511  0495                     	;# 
  2512  0496                     	;# 
  2513  049A                     	;# 
  2514  049B                     	;# 
  2515  049C                     	;# 
  2516  049D                     	;# 
  2517  058C                     	;# 
  2518  058C                     	;# 
  2519  058D                     	;# 
  2520  058E                     	;# 
  2521  058E                     	;# 
  2522  058F                     	;# 
  2523  0590                     	;# 
  2524  0590                     	;# 
  2525  0591                     	;# 
  2526  0592                     	;# 
  2527  0592                     	;# 
  2528  0593                     	;# 
  2529  0594                     	;# 
  2530  0594                     	;# 
  2531  0595                     	;# 
  2532  0596                     	;# 
  2533  0596                     	;# 
  2534  0597                     	;# 
  2535  0598                     	;# 
  2536  0599                     	;# 
  2537  059A                     	;# 
  2538  059B                     	;# 
  2539  059B                     	;# 
  2540  059C                     	;# 
  2541  059D                     	;# 
  2542  060C                     	;# 
  2543  060C                     	;# 
  2544  060D                     	;# 
  2545  060E                     	;# 
  2546  060F                     	;# 
  2547  060F                     	;# 
  2548  0610                     	;# 
  2549  0611                     	;# 
  2550  0612                     	;# 
  2551  0613                     	;# 
  2552  0614                     	;# 
  2553  0617                     	;# 
  2554  0617                     	;# 
  2555  0618                     	;# 
  2556  0619                     	;# 
  2557  061A                     	;# 
  2558  061A                     	;# 
  2559  061B                     	;# 
  2560  061C                     	;# 
  2561  0691                     	;# 
  2562  0692                     	;# 
  2563  0693                     	;# 
  2564  0694                     	;# 
  2565  0695                     	;# 
  2566  0696                     	;# 
  2567  0697                     	;# 
  2568  0699                     	;# 
  2569  069A                     	;# 
  2570  0711                     	;# 
  2571  0712                     	;# 
  2572  0713                     	;# 
  2573  0714                     	;# 
  2574  0715                     	;# 
  2575  0718                     	;# 
  2576  0718                     	;# 
  2577  0719                     	;# 
  2578  071A                     	;# 
  2579  071A                     	;# 
  2580  071B                     	;# 
  2581  071C                     	;# 
  2582  071D                     	;# 
  2583  0791                     	;# 
  2584  0791                     	;# 
  2585  0792                     	;# 
  2586  0793                     	;# 
  2587  0793                     	;# 
  2588  0794                     	;# 
  2589  0795                     	;# 
  2590  0795                     	;# 
  2591  0796                     	;# 
  2592  0797                     	;# 
  2593  0797                     	;# 
  2594  0798                     	;# 
  2595  0799                     	;# 
  2596  079A                     	;# 
  2597  080C                     	;# 
  2598  080C                     	;# 
  2599  080D                     	;# 
  2600  080E                     	;# 
  2601  080E                     	;# 
  2602  080F                     	;# 
  2603  0810                     	;# 
  2604  0810                     	;# 
  2605  0811                     	;# 
  2606  0812                     	;# 
  2607  0812                     	;# 
  2608  0813                     	;# 
  2609  0814                     	;# 
  2610  0815                     	;# 
  2611  0816                     	;# 
  2612  0817                     	;# 
  2613  0818                     	;# 
  2614  0819                     	;# 
  2615  081A                     	;# 
  2616  081A                     	;# 
  2617  081B                     	;# 
  2618  081C                     	;# 
  2619  081C                     	;# 
  2620  081D                     	;# 
  2621  088C                     	;# 
  2622  088D                     	;# 
  2623  088E                     	;# 
  2624  088F                     	;# 
  2625  088F                     	;# 
  2626  0890                     	;# 
  2627  0891                     	;# 
  2628  0892                     	;# 
  2629  0893                     	;# 
  2630  0893                     	;# 
  2631  0894                     	;# 
  2632  0895                     	;# 
  2633  0896                     	;# 
  2634  0897                     	;# 
  2635  0897                     	;# 
  2636  0898                     	;# 
  2637  0899                     	;# 
  2638  0D8C                     	;# 
  2639  0D8C                     	;# 
  2640  0D8D                     	;# 
  2641  0D8E                     	;# 
  2642  0D8F                     	;# 
  2643  0D8F                     	;# 
  2644  0D90                     	;# 
  2645  0D91                     	;# 
  2646  0D92                     	;# 
  2647  0D92                     	;# 
  2648  0D93                     	;# 
  2649  0D94                     	;# 
  2650  0D95                     	;# 
  2651  0D95                     	;# 
  2652  0D96                     	;# 
  2653  0D97                     	;# 
  2654  0D98                     	;# 
  2655  0D99                     	;# 
  2656  0D9A                     	;# 
  2657  0D9B                     	;# 
  2658  0D9C                     	;# 
  2659  0D9D                     	;# 
  2660  0D9E                     	;# 
  2661  0D9E                     	;# 
  2662  0D9F                     	;# 
  2663  0DA0                     	;# 
  2664  0DA1                     	;# 
  2665  0DA1                     	;# 
  2666  0DA2                     	;# 
  2667  0DA3                     	;# 
  2668  0DA4                     	;# 
  2669  0DA4                     	;# 
  2670  0DA5                     	;# 
  2671  0DA6                     	;# 
  2672  0DA7                     	;# 
  2673  0DA7                     	;# 
  2674  0DA8                     	;# 
  2675  0DA9                     	;# 
  2676  0DAA                     	;# 
  2677  0DAB                     	;# 
  2678  0DAC                     	;# 
  2679  0DAD                     	;# 
  2680  0DAE                     	;# 
  2681  0DAF                     	;# 
  2682  0E0F                     	;# 
  2683  0E10                     	;# 
  2684  0E11                     	;# 
  2685  0E12                     	;# 
  2686  0E13                     	;# 
  2687  0E14                     	;# 
  2688  0E15                     	;# 
  2689  0E16                     	;# 
  2690  0E17                     	;# 
  2691  0E18                     	;# 
  2692  0E19                     	;# 
  2693  0E1A                     	;# 
  2694  0E1B                     	;# 
  2695  0E1C                     	;# 
  2696  0E1D                     	;# 
  2697  0E1E                     	;# 
  2698  0E1F                     	;# 
  2699  0E20                     	;# 
  2700  0E21                     	;# 
  2701  0E22                     	;# 
  2702  0E23                     	;# 
  2703  0E24                     	;# 
  2704  0E25                     	;# 
  2705  0E26                     	;# 
  2706  0E27                     	;# 
  2707  0E28                     	;# 
  2708  0E29                     	;# 
  2709  0E2A                     	;# 
  2710  0E2B                     	;# 
  2711  0E2C                     	;# 
  2712  0E2D                     	;# 
  2713  0E2E                     	;# 
  2714  0E90                     	;# 
  2715  0E91                     	;# 
  2716  0E92                     	;# 
  2717  0E94                     	;# 
  2718  0E95                     	;# 
  2719  0E9C                     	;# 
  2720  0E9D                     	;# 
  2721  0E9E                     	;# 
  2722  0E9F                     	;# 
  2723  0EA0                     	;# 
  2724  0EA1                     	;# 
  2725  0EA2                     	;# 
  2726  0EA3                     	;# 
  2727  0EA4                     	;# 
  2728  0EA5                     	;# 
  2729  0EA6                     	;# 
  2730  0EA7                     	;# 
  2731  0F0F                     	;# 
  2732  0F10                     	;# 
  2733  0F11                     	;# 
  2734  0F12                     	;# 
  2735  0F13                     	;# 
  2736  0F14                     	;# 
  2737  0F15                     	;# 
  2738  0F16                     	;# 
  2739  0F17                     	;# 
  2740  0F18                     	;# 
  2741  0F19                     	;# 
  2742  0F1A                     	;# 
  2743  0F1B                     	;# 
  2744  0F1C                     	;# 
  2745  0F1D                     	;# 
  2746  0F1E                     	;# 
  2747  0F1F                     	;# 
  2748  0F20                     	;# 
  2749  0F21                     	;# 
  2750  0F22                     	;# 
  2751  0F23                     	;# 
  2752  0F24                     	;# 
  2753  0F25                     	;# 
  2754  0F26                     	;# 
  2755  0F27                     	;# 
  2756  0F28                     	;# 
  2757  0F29                     	;# 
  2758  0F2A                     	;# 
  2759  0F2B                     	;# 
  2760  0F2C                     	;# 
  2761  0F2D                     	;# 
  2762  0F2E                     	;# 
  2763  0F2F                     	;# 
  2764  0F30                     	;# 
  2765  0F31                     	;# 
  2766  0F32                     	;# 
  2767  0F33                     	;# 
  2768  0F34                     	;# 
  2769  0F35                     	;# 
  2770  0F36                     	;# 
  2771  0F37                     	;# 
  2772  0FE4                     	;# 
  2773  0FE5                     	;# 
  2774  0FE6                     	;# 
  2775  0FE7                     	;# 
  2776  0FE8                     	;# 
  2777  0FE9                     	;# 
  2778  0FEA                     	;# 
  2779  0FEB                     	;# 
  2780  0FED                     	;# 
  2781  0FEE                     	;# 
  2782  0FEF                     	;# 
  2783  0000                     	;# 
  2784  0001                     	;# 
  2785  0002                     	;# 
  2786  0003                     	;# 
  2787  0004                     	;# 
  2788  0005                     	;# 
  2789  0006                     	;# 
  2790  0007                     	;# 
  2791  0008                     	;# 
  2792  0009                     	;# 
  2793  000A                     	;# 
  2794  000B                     	;# 
  2795  000C                     	;# 
  2796  000D                     	;# 
  2797  000E                     	;# 
  2798  0010                     	;# 
  2799  0011                     	;# 
  2800  0012                     	;# 
  2801  0013                     	;# 
  2802  0014                     	;# 
  2803  0015                     	;# 
  2804  0016                     	;# 
  2805  0016                     	;# 
  2806  0017                     	;# 
  2807  0018                     	;# 
  2808  0019                     	;# 
  2809  001A                     	;# 
  2810  001A                     	;# 
  2811  001B                     	;# 
  2812  001B                     	;# 
  2813  001C                     	;# 
  2814  001D                     	;# 
  2815  001E                     	;# 
  2816  001F                     	;# 
  2817  008C                     	;# 
  2818  008D                     	;# 
  2819  008E                     	;# 
  2820  0090                     	;# 
  2821  0091                     	;# 
  2822  0092                     	;# 
  2823  0093                     	;# 
  2824  0094                     	;# 
  2825  0095                     	;# 
  2826  0096                     	;# 
  2827  0098                     	;# 
  2828  0099                     	;# 
  2829  009A                     	;# 
  2830  009B                     	;# 
  2831  009B                     	;# 
  2832  009C                     	;# 
  2833  009D                     	;# 
  2834  009E                     	;# 
  2835  009F                     	;# 
  2836  010C                     	;# 
  2837  010D                     	;# 
  2838  010E                     	;# 
  2839  0111                     	;# 
  2840  0112                     	;# 
  2841  0113                     	;# 
  2842  0114                     	;# 
  2843  0115                     	;# 
  2844  0116                     	;# 
  2845  0117                     	;# 
  2846  0118                     	;# 
  2847  0119                     	;# 
  2848  011C                     	;# 
  2849  018C                     	;# 
  2850  018D                     	;# 
  2851  018E                     	;# 
  2852  0191                     	;# 
  2853  0191                     	;# 
  2854  0192                     	;# 
  2855  0193                     	;# 
  2856  0193                     	;# 
  2857  0194                     	;# 
  2858  0195                     	;# 
  2859  0196                     	;# 
  2860  0197                     	;# 
  2861  0199                     	;# 
  2862  0199                     	;# 
  2863  0199                     	;# 
  2864  019A                     	;# 
  2865  019A                     	;# 
  2866  019A                     	;# 
  2867  019B                     	;# 
  2868  019B                     	;# 
  2869  019B                     	;# 
  2870  019B                     	;# 
  2871  019B                     	;# 
  2872  019C                     	;# 
  2873  019C                     	;# 
  2874  019C                     	;# 
  2875  019D                     	;# 
  2876  019D                     	;# 
  2877  019D                     	;# 
  2878  019E                     	;# 
  2879  019E                     	;# 
  2880  019E                     	;# 
  2881  019F                     	;# 
  2882  019F                     	;# 
  2883  019F                     	;# 
  2884  019F                     	;# 
  2885  019F                     	;# 
  2886  020C                     	;# 
  2887  020D                     	;# 
  2888  020E                     	;# 
  2889  0211                     	;# 
  2890  0211                     	;# 
  2891  0212                     	;# 
  2892  0212                     	;# 
  2893  0213                     	;# 
  2894  0213                     	;# 
  2895  0214                     	;# 
  2896  0214                     	;# 
  2897  0215                     	;# 
  2898  0215                     	;# 
  2899  0215                     	;# 
  2900  0215                     	;# 
  2901  0216                     	;# 
  2902  0216                     	;# 
  2903  0217                     	;# 
  2904  0217                     	;# 
  2905  028C                     	;# 
  2906  028D                     	;# 
  2907  028E                     	;# 
  2908  0291                     	;# 
  2909  0291                     	;# 
  2910  0292                     	;# 
  2911  0293                     	;# 
  2912  0294                     	;# 
  2913  0298                     	;# 
  2914  0298                     	;# 
  2915  0299                     	;# 
  2916  029A                     	;# 
  2917  029B                     	;# 
  2918  029E                     	;# 
  2919  030C                     	;# 
  2920  030D                     	;# 
  2921  030E                     	;# 
  2922  038C                     	;# 
  2923  038D                     	;# 
  2924  038E                     	;# 
  2925  0391                     	;# 
  2926  0392                     	;# 
  2927  0393                     	;# 
  2928  0394                     	;# 
  2929  0395                     	;# 
  2930  0396                     	;# 
  2931  0397                     	;# 
  2932  0398                     	;# 
  2933  0399                     	;# 
  2934  040E                     	;# 
  2935  0413                     	;# 
  2936  0413                     	;# 
  2937  0414                     	;# 
  2938  0414                     	;# 
  2939  0415                     	;# 
  2940  0416                     	;# 
  2941  0417                     	;# 
  2942  0418                     	;# 
  2943  041A                     	;# 
  2944  041A                     	;# 
  2945  041B                     	;# 
  2946  041B                     	;# 
  2947  041C                     	;# 
  2948  041D                     	;# 
  2949  041E                     	;# 
  2950  041F                     	;# 
  2951  0493                     	;# 
  2952  0494                     	;# 
  2953  0495                     	;# 
  2954  0496                     	;# 
  2955  049A                     	;# 
  2956  049B                     	;# 
  2957  049C                     	;# 
  2958  049D                     	;# 
  2959  058C                     	;# 
  2960  058C                     	;# 
  2961  058D                     	;# 
  2962  058E                     	;# 
  2963  058E                     	;# 
  2964  058F                     	;# 
  2965  0590                     	;# 
  2966  0590                     	;# 
  2967  0591                     	;# 
  2968  0592                     	;# 
  2969  0592                     	;# 
  2970  0593                     	;# 
  2971  0594                     	;# 
  2972  0594                     	;# 
  2973  0595                     	;# 
  2974  0596                     	;# 
  2975  0596                     	;# 
  2976  0597                     	;# 
  2977  0598                     	;# 
  2978  0599                     	;# 
  2979  059A                     	;# 
  2980  059B                     	;# 
  2981  059B                     	;# 
  2982  059C                     	;# 
  2983  059D                     	;# 
  2984  060C                     	;# 
  2985  060C                     	;# 
  2986  060D                     	;# 
  2987  060E                     	;# 
  2988  060F                     	;# 
  2989  060F                     	;# 
  2990  0610                     	;# 
  2991  0611                     	;# 
  2992  0612                     	;# 
  2993  0613                     	;# 
  2994  0614                     	;# 
  2995  0617                     	;# 
  2996  0617                     	;# 
  2997  0618                     	;# 
  2998  0619                     	;# 
  2999  061A                     	;# 
  3000  061A                     	;# 
  3001  061B                     	;# 
  3002  061C                     	;# 
  3003  0691                     	;# 
  3004  0692                     	;# 
  3005  0693                     	;# 
  3006  0694                     	;# 
  3007  0695                     	;# 
  3008  0696                     	;# 
  3009  0697                     	;# 
  3010  0699                     	;# 
  3011  069A                     	;# 
  3012  0711                     	;# 
  3013  0712                     	;# 
  3014  0713                     	;# 
  3015  0714                     	;# 
  3016  0715                     	;# 
  3017  0718                     	;# 
  3018  0718                     	;# 
  3019  0719                     	;# 
  3020  071A                     	;# 
  3021  071A                     	;# 
  3022  071B                     	;# 
  3023  071C                     	;# 
  3024  071D                     	;# 
  3025  0791                     	;# 
  3026  0791                     	;# 
  3027  0792                     	;# 
  3028  0793                     	;# 
  3029  0793                     	;# 
  3030  0794                     	;# 
  3031  0795                     	;# 
  3032  0795                     	;# 
  3033  0796                     	;# 
  3034  0797                     	;# 
  3035  0797                     	;# 
  3036  0798                     	;# 
  3037  0799                     	;# 
  3038  079A                     	;# 
  3039  080C                     	;# 
  3040  080C                     	;# 
  3041  080D                     	;# 
  3042  080E                     	;# 
  3043  080E                     	;# 
  3044  080F                     	;# 
  3045  0810                     	;# 
  3046  0810                     	;# 
  3047  0811                     	;# 
  3048  0812                     	;# 
  3049  0812                     	;# 
  3050  0813                     	;# 
  3051  0814                     	;# 
  3052  0815                     	;# 
  3053  0816                     	;# 
  3054  0817                     	;# 
  3055  0818                     	;# 
  3056  0819                     	;# 
  3057  081A                     	;# 
  3058  081A                     	;# 
  3059  081B                     	;# 
  3060  081C                     	;# 
  3061  081C                     	;# 
  3062  081D                     	;# 
  3063  088C                     	;# 
  3064  088D                     	;# 
  3065  088E                     	;# 
  3066  088F                     	;# 
  3067  088F                     	;# 
  3068  0890                     	;# 
  3069  0891                     	;# 
  3070  0892                     	;# 
  3071  0893                     	;# 
  3072  0893                     	;# 
  3073  0894                     	;# 
  3074  0895                     	;# 
  3075  0896                     	;# 
  3076  0897                     	;# 
  3077  0897                     	;# 
  3078  0898                     	;# 
  3079  0899                     	;# 
  3080  0D8C                     	;# 
  3081  0D8C                     	;# 
  3082  0D8D                     	;# 
  3083  0D8E                     	;# 
  3084  0D8F                     	;# 
  3085  0D8F                     	;# 
  3086  0D90                     	;# 
  3087  0D91                     	;# 
  3088  0D92                     	;# 
  3089  0D92                     	;# 
  3090  0D93                     	;# 
  3091  0D94                     	;# 
  3092  0D95                     	;# 
  3093  0D95                     	;# 
  3094  0D96                     	;# 
  3095  0D97                     	;# 
  3096  0D98                     	;# 
  3097  0D99                     	;# 
  3098  0D9A                     	;# 
  3099  0D9B                     	;# 
  3100  0D9C                     	;# 
  3101  0D9D                     	;# 
  3102  0D9E                     	;# 
  3103  0D9E                     	;# 
  3104  0D9F                     	;# 
  3105  0DA0                     	;# 
  3106  0DA1                     	;# 
  3107  0DA1                     	;# 
  3108  0DA2                     	;# 
  3109  0DA3                     	;# 
  3110  0DA4                     	;# 
  3111  0DA4                     	;# 
  3112  0DA5                     	;# 
  3113  0DA6                     	;# 
  3114  0DA7                     	;# 
  3115  0DA7                     	;# 
  3116  0DA8                     	;# 
  3117  0DA9                     	;# 
  3118  0DAA                     	;# 
  3119  0DAB                     	;# 
  3120  0DAC                     	;# 
  3121  0DAD                     	;# 
  3122  0DAE                     	;# 
  3123  0DAF                     	;# 
  3124  0E0F                     	;# 
  3125  0E10                     	;# 
  3126  0E11                     	;# 
  3127  0E12                     	;# 
  3128  0E13                     	;# 
  3129  0E14                     	;# 
  3130  0E15                     	;# 
  3131  0E16                     	;# 
  3132  0E17                     	;# 
  3133  0E18                     	;# 
  3134  0E19                     	;# 
  3135  0E1A                     	;# 
  3136  0E1B                     	;# 
  3137  0E1C                     	;# 
  3138  0E1D                     	;# 
  3139  0E1E                     	;# 
  3140  0E1F                     	;# 
  3141  0E20                     	;# 
  3142  0E21                     	;# 
  3143  0E22                     	;# 
  3144  0E23                     	;# 
  3145  0E24                     	;# 
  3146  0E25                     	;# 
  3147  0E26                     	;# 
  3148  0E27                     	;# 
  3149  0E28                     	;# 
  3150  0E29                     	;# 
  3151  0E2A                     	;# 
  3152  0E2B                     	;# 
  3153  0E2C                     	;# 
  3154  0E2D                     	;# 
  3155  0E2E                     	;# 
  3156  0E90                     	;# 
  3157  0E91                     	;# 
  3158  0E92                     	;# 
  3159  0E94                     	;# 
  3160  0E95                     	;# 
  3161  0E9C                     	;# 
  3162  0E9D                     	;# 
  3163  0E9E                     	;# 
  3164  0E9F                     	;# 
  3165  0EA0                     	;# 
  3166  0EA1                     	;# 
  3167  0EA2                     	;# 
  3168  0EA3                     	;# 
  3169  0EA4                     	;# 
  3170  0EA5                     	;# 
  3171  0EA6                     	;# 
  3172  0EA7                     	;# 
  3173  0F0F                     	;# 
  3174  0F10                     	;# 
  3175  0F11                     	;# 
  3176  0F12                     	;# 
  3177  0F13                     	;# 
  3178  0F14                     	;# 
  3179  0F15                     	;# 
  3180  0F16                     	;# 
  3181  0F17                     	;# 
  3182  0F18                     	;# 
  3183  0F19                     	;# 
  3184  0F1A                     	;# 
  3185  0F1B                     	;# 
  3186  0F1C                     	;# 
  3187  0F1D                     	;# 
  3188  0F1E                     	;# 
  3189  0F1F                     	;# 
  3190  0F20                     	;# 
  3191  0F21                     	;# 
  3192  0F22                     	;# 
  3193  0F23                     	;# 
  3194  0F24                     	;# 
  3195  0F25                     	;# 
  3196  0F26                     	;# 
  3197  0F27                     	;# 
  3198  0F28                     	;# 
  3199  0F29                     	;# 
  3200  0F2A                     	;# 
  3201  0F2B                     	;# 
  3202  0F2C                     	;# 
  3203  0F2D                     	;# 
  3204  0F2E                     	;# 
  3205  0F2F                     	;# 
  3206  0F30                     	;# 
  3207  0F31                     	;# 
  3208  0F32                     	;# 
  3209  0F33                     	;# 
  3210  0F34                     	;# 
  3211  0F35                     	;# 
  3212  0F36                     	;# 
  3213  0F37                     	;# 
  3214  0FE4                     	;# 
  3215  0FE5                     	;# 
  3216  0FE6                     	;# 
  3217  0FE7                     	;# 
  3218  0FE8                     	;# 
  3219  0FE9                     	;# 
  3220  0FEA                     	;# 
  3221  0FEB                     	;# 
  3222  0FED                     	;# 
  3223  0FEE                     	;# 
  3224  0FEF                     	;# 
  3225  0000                     	;# 
  3226  0001                     	;# 
  3227  0002                     	;# 
  3228  0003                     	;# 
  3229  0004                     	;# 
  3230  0005                     	;# 
  3231  0006                     	;# 
  3232  0007                     	;# 
  3233  0008                     	;# 
  3234  0009                     	;# 
  3235  000A                     	;# 
  3236  000B                     	;# 
  3237  000C                     	;# 
  3238  000D                     	;# 
  3239  000E                     	;# 
  3240  0010                     	;# 
  3241  0011                     	;# 
  3242  0012                     	;# 
  3243  0013                     	;# 
  3244  0014                     	;# 
  3245  0015                     	;# 
  3246  0016                     	;# 
  3247  0016                     	;# 
  3248  0017                     	;# 
  3249  0018                     	;# 
  3250  0019                     	;# 
  3251  001A                     	;# 
  3252  001A                     	;# 
  3253  001B                     	;# 
  3254  001B                     	;# 
  3255  001C                     	;# 
  3256  001D                     	;# 
  3257  001E                     	;# 
  3258  001F                     	;# 
  3259  008C                     	;# 
  3260  008D                     	;# 
  3261  008E                     	;# 
  3262  0090                     	;# 
  3263  0091                     	;# 
  3264  0092                     	;# 
  3265  0093                     	;# 
  3266  0094                     	;# 
  3267  0095                     	;# 
  3268  0096                     	;# 
  3269  0098                     	;# 
  3270  0099                     	;# 
  3271  009A                     	;# 
  3272  009B                     	;# 
  3273  009B                     	;# 
  3274  009C                     	;# 
  3275  009D                     	;# 
  3276  009E                     	;# 
  3277  009F                     	;# 
  3278  010C                     	;# 
  3279  010D                     	;# 
  3280  010E                     	;# 
  3281  0111                     	;# 
  3282  0112                     	;# 
  3283  0113                     	;# 
  3284  0114                     	;# 
  3285  0115                     	;# 
  3286  0116                     	;# 
  3287  0117                     	;# 
  3288  0118                     	;# 
  3289  0119                     	;# 
  3290  011C                     	;# 
  3291  018C                     	;# 
  3292  018D                     	;# 
  3293  018E                     	;# 
  3294  0191                     	;# 
  3295  0191                     	;# 
  3296  0192                     	;# 
  3297  0193                     	;# 
  3298  0193                     	;# 
  3299  0194                     	;# 
  3300  0195                     	;# 
  3301  0196                     	;# 
  3302  0197                     	;# 
  3303  0199                     	;# 
  3304  0199                     	;# 
  3305  0199                     	;# 
  3306  019A                     	;# 
  3307  019A                     	;# 
  3308  019A                     	;# 
  3309  019B                     	;# 
  3310  019B                     	;# 
  3311  019B                     	;# 
  3312  019B                     	;# 
  3313  019B                     	;# 
  3314  019C                     	;# 
  3315  019C                     	;# 
  3316  019C                     	;# 
  3317  019D                     	;# 
  3318  019D                     	;# 
  3319  019D                     	;# 
  3320  019E                     	;# 
  3321  019E                     	;# 
  3322  019E                     	;# 
  3323  019F                     	;# 
  3324  019F                     	;# 
  3325  019F                     	;# 
  3326  019F                     	;# 
  3327  019F                     	;# 
  3328  020C                     	;# 
  3329  020D                     	;# 
  3330  020E                     	;# 
  3331  0211                     	;# 
  3332  0211                     	;# 
  3333  0212                     	;# 
  3334  0212                     	;# 
  3335  0213                     	;# 
  3336  0213                     	;# 
  3337  0214                     	;# 
  3338  0214                     	;# 
  3339  0215                     	;# 
  3340  0215                     	;# 
  3341  0215                     	;# 
  3342  0215                     	;# 
  3343  0216                     	;# 
  3344  0216                     	;# 
  3345  0217                     	;# 
  3346  0217                     	;# 
  3347  028C                     	;# 
  3348  028D                     	;# 
  3349  028E                     	;# 
  3350  0291                     	;# 
  3351  0291                     	;# 
  3352  0292                     	;# 
  3353  0293                     	;# 
  3354  0294                     	;# 
  3355  0298                     	;# 
  3356  0298                     	;# 
  3357  0299                     	;# 
  3358  029A                     	;# 
  3359  029B                     	;# 
  3360  029E                     	;# 
  3361  030C                     	;# 
  3362  030D                     	;# 
  3363  030E                     	;# 
  3364  038C                     	;# 
  3365  038D                     	;# 
  3366  038E                     	;# 
  3367  0391                     	;# 
  3368  0392                     	;# 
  3369  0393                     	;# 
  3370  0394                     	;# 
  3371  0395                     	;# 
  3372  0396                     	;# 
  3373  0397                     	;# 
  3374  0398                     	;# 
  3375  0399                     	;# 
  3376  040E                     	;# 
  3377  0413                     	;# 
  3378  0413                     	;# 
  3379  0414                     	;# 
  3380  0414                     	;# 
  3381  0415                     	;# 
  3382  0416                     	;# 
  3383  0417                     	;# 
  3384  0418                     	;# 
  3385  041A                     	;# 
  3386  041A                     	;# 
  3387  041B                     	;# 
  3388  041B                     	;# 
  3389  041C                     	;# 
  3390  041D                     	;# 
  3391  041E                     	;# 
  3392  041F                     	;# 
  3393  0493                     	;# 
  3394  0494                     	;# 
  3395  0495                     	;# 
  3396  0496                     	;# 
  3397  049A                     	;# 
  3398  049B                     	;# 
  3399  049C                     	;# 
  3400  049D                     	;# 
  3401  058C                     	;# 
  3402  058C                     	;# 
  3403  058D                     	;# 
  3404  058E                     	;# 
  3405  058E                     	;# 
  3406  058F                     	;# 
  3407  0590                     	;# 
  3408  0590                     	;# 
  3409  0591                     	;# 
  3410  0592                     	;# 
  3411  0592                     	;# 
  3412  0593                     	;# 
  3413  0594                     	;# 
  3414  0594                     	;# 
  3415  0595                     	;# 
  3416  0596                     	;# 
  3417  0596                     	;# 
  3418  0597                     	;# 
  3419  0598                     	;# 
  3420  0599                     	;# 
  3421  059A                     	;# 
  3422  059B                     	;# 
  3423  059B                     	;# 
  3424  059C                     	;# 
  3425  059D                     	;# 
  3426  060C                     	;# 
  3427  060C                     	;# 
  3428  060D                     	;# 
  3429  060E                     	;# 
  3430  060F                     	;# 
  3431  060F                     	;# 
  3432  0610                     	;# 
  3433  0611                     	;# 
  3434  0612                     	;# 
  3435  0613                     	;# 
  3436  0614                     	;# 
  3437  0617                     	;# 
  3438  0617                     	;# 
  3439  0618                     	;# 
  3440  0619                     	;# 
  3441  061A                     	;# 
  3442  061A                     	;# 
  3443  061B                     	;# 
  3444  061C                     	;# 
  3445  0691                     	;# 
  3446  0692                     	;# 
  3447  0693                     	;# 
  3448  0694                     	;# 
  3449  0695                     	;# 
  3450  0696                     	;# 
  3451  0697                     	;# 
  3452  0699                     	;# 
  3453  069A                     	;# 
  3454  0711                     	;# 
  3455  0712                     	;# 
  3456  0713                     	;# 
  3457  0714                     	;# 
  3458  0715                     	;# 
  3459  0718                     	;# 
  3460  0718                     	;# 
  3461  0719                     	;# 
  3462  071A                     	;# 
  3463  071A                     	;# 
  3464  071B                     	;# 
  3465  071C                     	;# 
  3466  071D                     	;# 
  3467  0791                     	;# 
  3468  0791                     	;# 
  3469  0792                     	;# 
  3470  0793                     	;# 
  3471  0793                     	;# 
  3472  0794                     	;# 
  3473  0795                     	;# 
  3474  0795                     	;# 
  3475  0796                     	;# 
  3476  0797                     	;# 
  3477  0797                     	;# 
  3478  0798                     	;# 
  3479  0799                     	;# 
  3480  079A                     	;# 
  3481  080C                     	;# 
  3482  080C                     	;# 
  3483  080D                     	;# 
  3484  080E                     	;# 
  3485  080E                     	;# 
  3486  080F                     	;# 
  3487  0810                     	;# 
  3488  0810                     	;# 
  3489  0811                     	;# 
  3490  0812                     	;# 
  3491  0812                     	;# 
  3492  0813                     	;# 
  3493  0814                     	;# 
  3494  0815                     	;# 
  3495  0816                     	;# 
  3496  0817                     	;# 
  3497  0818                     	;# 
  3498  0819                     	;# 
  3499  081A                     	;# 
  3500  081A                     	;# 
  3501  081B                     	;# 
  3502  081C                     	;# 
  3503  081C                     	;# 
  3504  081D                     	;# 
  3505  088C                     	;# 
  3506  088D                     	;# 
  3507  088E                     	;# 
  3508  088F                     	;# 
  3509  088F                     	;# 
  3510  0890                     	;# 
  3511  0891                     	;# 
  3512  0892                     	;# 
  3513  0893                     	;# 
  3514  0893                     	;# 
  3515  0894                     	;# 
  3516  0895                     	;# 
  3517  0896                     	;# 
  3518  0897                     	;# 
  3519  0897                     	;# 
  3520  0898                     	;# 
  3521  0899                     	;# 
  3522  0D8C                     	;# 
  3523  0D8C                     	;# 
  3524  0D8D                     	;# 
  3525  0D8E                     	;# 
  3526  0D8F                     	;# 
  3527  0D8F                     	;# 
  3528  0D90                     	;# 
  3529  0D91                     	;# 
  3530  0D92                     	;# 
  3531  0D92                     	;# 
  3532  0D93                     	;# 
  3533  0D94                     	;# 
  3534  0D95                     	;# 
  3535  0D95                     	;# 
  3536  0D96                     	;# 
  3537  0D97                     	;# 
  3538  0D98                     	;# 
  3539  0D99                     	;# 
  3540  0D9A                     	;# 
  3541  0D9B                     	;# 
  3542  0D9C                     	;# 
  3543  0D9D                     	;# 
  3544  0D9E                     	;# 
  3545  0D9E                     	;# 
  3546  0D9F                     	;# 
  3547  0DA0                     	;# 
  3548  0DA1                     	;# 
  3549  0DA1                     	;# 
  3550  0DA2                     	;# 
  3551  0DA3                     	;# 
  3552  0DA4                     	;# 
  3553  0DA4                     	;# 
  3554  0DA5                     	;# 
  3555  0DA6                     	;# 
  3556  0DA7                     	;# 
  3557  0DA7                     	;# 
  3558  0DA8                     	;# 
  3559  0DA9                     	;# 
  3560  0DAA                     	;# 
  3561  0DAB                     	;# 
  3562  0DAC                     	;# 
  3563  0DAD                     	;# 
  3564  0DAE                     	;# 
  3565  0DAF                     	;# 
  3566  0E0F                     	;# 
  3567  0E10                     	;# 
  3568  0E11                     	;# 
  3569  0E12                     	;# 
  3570  0E13                     	;# 
  3571  0E14                     	;# 
  3572  0E15                     	;# 
  3573  0E16                     	;# 
  3574  0E17                     	;# 
  3575  0E18                     	;# 
  3576  0E19                     	;# 
  3577  0E1A                     	;# 
  3578  0E1B                     	;# 
  3579  0E1C                     	;# 
  3580  0E1D                     	;# 
  3581  0E1E                     	;# 
  3582  0E1F                     	;# 
  3583  0E20                     	;# 
  3584  0E21                     	;# 
  3585  0E22                     	;# 
  3586  0E23                     	;# 
  3587  0E24                     	;# 
  3588  0E25                     	;# 
  3589  0E26                     	;# 
  3590  0E27                     	;# 
  3591  0E28                     	;# 
  3592  0E29                     	;# 
  3593  0E2A                     	;# 
  3594  0E2B                     	;# 
  3595  0E2C                     	;# 
  3596  0E2D                     	;# 
  3597  0E2E                     	;# 
  3598  0E90                     	;# 
  3599  0E91                     	;# 
  3600  0E92                     	;# 
  3601  0E94                     	;# 
  3602  0E95                     	;# 
  3603  0E9C                     	;# 
  3604  0E9D                     	;# 
  3605  0E9E                     	;# 
  3606  0E9F                     	;# 
  3607  0EA0                     	;# 
  3608  0EA1                     	;# 
  3609  0EA2                     	;# 
  3610  0EA3                     	;# 
  3611  0EA4                     	;# 
  3612  0EA5                     	;# 
  3613  0EA6                     	;# 
  3614  0EA7                     	;# 
  3615  0F0F                     	;# 
  3616  0F10                     	;# 
  3617  0F11                     	;# 
  3618  0F12                     	;# 
  3619  0F13                     	;# 
  3620  0F14                     	;# 
  3621  0F15                     	;# 
  3622  0F16                     	;# 
  3623  0F17                     	;# 
  3624  0F18                     	;# 
  3625  0F19                     	;# 
  3626  0F1A                     	;# 
  3627  0F1B                     	;# 
  3628  0F1C                     	;# 
  3629  0F1D                     	;# 
  3630  0F1E                     	;# 
  3631  0F1F                     	;# 
  3632  0F20                     	;# 
  3633  0F21                     	;# 
  3634  0F22                     	;# 
  3635  0F23                     	;# 
  3636  0F24                     	;# 
  3637  0F25                     	;# 
  3638  0F26                     	;# 
  3639  0F27                     	;# 
  3640  0F28                     	;# 
  3641  0F29                     	;# 
  3642  0F2A                     	;# 
  3643  0F2B                     	;# 
  3644  0F2C                     	;# 
  3645  0F2D                     	;# 
  3646  0F2E                     	;# 
  3647  0F2F                     	;# 
  3648  0F30                     	;# 
  3649  0F31                     	;# 
  3650  0F32                     	;# 
  3651  0F33                     	;# 
  3652  0F34                     	;# 
  3653  0F35                     	;# 
  3654  0F36                     	;# 
  3655  0F37                     	;# 
  3656  0FE4                     	;# 
  3657  0FE5                     	;# 
  3658  0FE6                     	;# 
  3659  0FE7                     	;# 
  3660  0FE8                     	;# 
  3661  0FE9                     	;# 
  3662  0FEA                     	;# 
  3663  0FEB                     	;# 
  3664  0FED                     	;# 
  3665  0FEE                     	;# 
  3666  0FEF                     	;# 
  3667  0000                     	;# 
  3668  0001                     	;# 
  3669  0002                     	;# 
  3670  0003                     	;# 
  3671  0004                     	;# 
  3672  0005                     	;# 
  3673  0006                     	;# 
  3674  0007                     	;# 
  3675  0008                     	;# 
  3676  0009                     	;# 
  3677  000A                     	;# 
  3678  000B                     	;# 
  3679  000C                     	;# 
  3680  000D                     	;# 
  3681  000E                     	;# 
  3682  0010                     	;# 
  3683  0011                     	;# 
  3684  0012                     	;# 
  3685  0013                     	;# 
  3686  0014                     	;# 
  3687  0015                     	;# 
  3688  0016                     	;# 
  3689  0016                     	;# 
  3690  0017                     	;# 
  3691  0018                     	;# 
  3692  0019                     	;# 
  3693  001A                     	;# 
  3694  001A                     	;# 
  3695  001B                     	;# 
  3696  001B                     	;# 
  3697  001C                     	;# 
  3698  001D                     	;# 
  3699  001E                     	;# 
  3700  001F                     	;# 
  3701  008C                     	;# 
  3702  008D                     	;# 
  3703  008E                     	;# 
  3704  0090                     	;# 
  3705  0091                     	;# 
  3706  0092                     	;# 
  3707  0093                     	;# 
  3708  0094                     	;# 
  3709  0095                     	;# 
  3710  0096                     	;# 
  3711  0098                     	;# 
  3712  0099                     	;# 
  3713  009A                     	;# 
  3714  009B                     	;# 
  3715  009B                     	;# 
  3716  009C                     	;# 
  3717  009D                     	;# 
  3718  009E                     	;# 
  3719  009F                     	;# 
  3720  010C                     	;# 
  3721  010D                     	;# 
  3722  010E                     	;# 
  3723  0111                     	;# 
  3724  0112                     	;# 
  3725  0113                     	;# 
  3726  0114                     	;# 
  3727  0115                     	;# 
  3728  0116                     	;# 
  3729  0117                     	;# 
  3730  0118                     	;# 
  3731  0119                     	;# 
  3732  011C                     	;# 
  3733  018C                     	;# 
  3734  018D                     	;# 
  3735  018E                     	;# 
  3736  0191                     	;# 
  3737  0191                     	;# 
  3738  0192                     	;# 
  3739  0193                     	;# 
  3740  0193                     	;# 
  3741  0194                     	;# 
  3742  0195                     	;# 
  3743  0196                     	;# 
  3744  0197                     	;# 
  3745  0199                     	;# 
  3746  0199                     	;# 
  3747  0199                     	;# 
  3748  019A                     	;# 
  3749  019A                     	;# 
  3750  019A                     	;# 
  3751  019B                     	;# 
  3752  019B                     	;# 
  3753  019B                     	;# 
  3754  019B                     	;# 
  3755  019B                     	;# 
  3756  019C                     	;# 
  3757  019C                     	;# 
  3758  019C                     	;# 
  3759  019D                     	;# 
  3760  019D                     	;# 
  3761  019D                     	;# 
  3762  019E                     	;# 
  3763  019E                     	;# 
  3764  019E                     	;# 
  3765  019F                     	;# 
  3766  019F                     	;# 
  3767  019F                     	;# 
  3768  019F                     	;# 
  3769  019F                     	;# 
  3770  020C                     	;# 
  3771  020D                     	;# 
  3772  020E                     	;# 
  3773  0211                     	;# 
  3774  0211                     	;# 
  3775  0212                     	;# 
  3776  0212                     	;# 
  3777  0213                     	;# 
  3778  0213                     	;# 
  3779  0214                     	;# 
  3780  0214                     	;# 
  3781  0215                     	;# 
  3782  0215                     	;# 
  3783  0215                     	;# 
  3784  0215                     	;# 
  3785  0216                     	;# 
  3786  0216                     	;# 
  3787  0217                     	;# 
  3788  0217                     	;# 
  3789  028C                     	;# 
  3790  028D                     	;# 
  3791  028E                     	;# 
  3792  0291                     	;# 
  3793  0291                     	;# 
  3794  0292                     	;# 
  3795  0293                     	;# 
  3796  0294                     	;# 
  3797  0298                     	;# 
  3798  0298                     	;# 
  3799  0299                     	;# 
  3800  029A                     	;# 
  3801  029B                     	;# 
  3802  029E                     	;# 
  3803  030C                     	;# 
  3804  030D                     	;# 
  3805  030E                     	;# 
  3806  038C                     	;# 
  3807  038D                     	;# 
  3808  038E                     	;# 
  3809  0391                     	;# 
  3810  0392                     	;# 
  3811  0393                     	;# 
  3812  0394                     	;# 
  3813  0395                     	;# 
  3814  0396                     	;# 
  3815  0397                     	;# 
  3816  0398                     	;# 
  3817  0399                     	;# 
  3818  040E                     	;# 
  3819  0413                     	;# 
  3820  0413                     	;# 
  3821  0414                     	;# 
  3822  0414                     	;# 
  3823  0415                     	;# 
  3824  0416                     	;# 
  3825  0417                     	;# 
  3826  0418                     	;# 
  3827  041A                     	;# 
  3828  041A                     	;# 
  3829  041B                     	;# 
  3830  041B                     	;# 
  3831  041C                     	;# 
  3832  041D                     	;# 
  3833  041E                     	;# 
  3834  041F                     	;# 
  3835  0493                     	;# 
  3836  0494                     	;# 
  3837  0495                     	;# 
  3838  0496                     	;# 
  3839  049A                     	;# 
  3840  049B                     	;# 
  3841  049C                     	;# 
  3842  049D                     	;# 
  3843  058C                     	;# 
  3844  058C                     	;# 
  3845  058D                     	;# 
  3846  058E                     	;# 
  3847  058E                     	;# 
  3848  058F                     	;# 
  3849  0590                     	;# 
  3850  0590                     	;# 
  3851  0591                     	;# 
  3852  0592                     	;# 
  3853  0592                     	;# 
  3854  0593                     	;# 
  3855  0594                     	;# 
  3856  0594                     	;# 
  3857  0595                     	;# 
  3858  0596                     	;# 
  3859  0596                     	;# 
  3860  0597                     	;# 
  3861  0598                     	;# 
  3862  0599                     	;# 
  3863  059A                     	;# 
  3864  059B                     	;# 
  3865  059B                     	;# 
  3866  059C                     	;# 
  3867  059D                     	;# 
  3868  060C                     	;# 
  3869  060C                     	;# 
  3870  060D                     	;# 
  3871  060E                     	;# 
  3872  060F                     	;# 
  3873  060F                     	;# 
  3874  0610                     	;# 
  3875  0611                     	;# 
  3876  0612                     	;# 
  3877  0613                     	;# 
  3878  0614                     	;# 
  3879  0617                     	;# 
  3880  0617                     	;# 
  3881  0618                     	;# 
  3882  0619                     	;# 
  3883  061A                     	;# 
  3884  061A                     	;# 
  3885  061B                     	;# 
  3886  061C                     	;# 
  3887  0691                     	;# 
  3888  0692                     	;# 
  3889  0693                     	;# 
  3890  0694                     	;# 
  3891  0695                     	;# 
  3892  0696                     	;# 
  3893  0697                     	;# 
  3894  0699                     	;# 
  3895  069A                     	;# 
  3896  0711                     	;# 
  3897  0712                     	;# 
  3898  0713                     	;# 
  3899  0714                     	;# 
  3900  0715                     	;# 
  3901  0718                     	;# 
  3902  0718                     	;# 
  3903  0719                     	;# 
  3904  071A                     	;# 
  3905  071A                     	;# 
  3906  071B                     	;# 
  3907  071C                     	;# 
  3908  071D                     	;# 
  3909  0791                     	;# 
  3910  0791                     	;# 
  3911  0792                     	;# 
  3912  0793                     	;# 
  3913  0793                     	;# 
  3914  0794                     	;# 
  3915  0795                     	;# 
  3916  0795                     	;# 
  3917  0796                     	;# 
  3918  0797                     	;# 
  3919  0797                     	;# 
  3920  0798                     	;# 
  3921  0799                     	;# 
  3922  079A                     	;# 
  3923  080C                     	;# 
  3924  080C                     	;# 
  3925  080D                     	;# 
  3926  080E                     	;# 
  3927  080E                     	;# 
  3928  080F                     	;# 
  3929  0810                     	;# 
  3930  0810                     	;# 
  3931  0811                     	;# 
  3932  0812                     	;# 
  3933  0812                     	;# 
  3934  0813                     	;# 
  3935  0814                     	;# 
  3936  0815                     	;# 
  3937  0816                     	;# 
  3938  0817                     	;# 
  3939  0818                     	;# 
  3940  0819                     	;# 
  3941  081A                     	;# 
  3942  081A                     	;# 
  3943  081B                     	;# 
  3944  081C                     	;# 
  3945  081C                     	;# 
  3946  081D                     	;# 
  3947  088C                     	;# 
  3948  088D                     	;# 
  3949  088E                     	;# 
  3950  088F                     	;# 
  3951  088F                     	;# 
  3952  0890                     	;# 
  3953  0891                     	;# 
  3954  0892                     	;# 
  3955  0893                     	;# 
  3956  0893                     	;# 
  3957  0894                     	;# 
  3958  0895                     	;# 
  3959  0896                     	;# 
  3960  0897                     	;# 
  3961  0897                     	;# 
  3962  0898                     	;# 
  3963  0899                     	;# 
  3964  0D8C                     	;# 
  3965  0D8C                     	;# 
  3966  0D8D                     	;# 
  3967  0D8E                     	;# 
  3968  0D8F                     	;# 
  3969  0D8F                     	;# 
  3970  0D90                     	;# 
  3971  0D91                     	;# 
  3972  0D92                     	;# 
  3973  0D92                     	;# 
  3974  0D93                     	;# 
  3975  0D94                     	;# 
  3976  0D95                     	;# 
  3977  0D95                     	;# 
  3978  0D96                     	;# 
  3979  0D97                     	;# 
  3980  0D98                     	;# 
  3981  0D99                     	;# 
  3982  0D9A                     	;# 
  3983  0D9B                     	;# 
  3984  0D9C                     	;# 
  3985  0D9D                     	;# 
  3986  0D9E                     	;# 
  3987  0D9E                     	;# 
  3988  0D9F                     	;# 
  3989  0DA0                     	;# 
  3990  0DA1                     	;# 
  3991  0DA1                     	;# 
  3992  0DA2                     	;# 
  3993  0DA3                     	;# 
  3994  0DA4                     	;# 
  3995  0DA4                     	;# 
  3996  0DA5                     	;# 
  3997  0DA6                     	;# 
  3998  0DA7                     	;# 
  3999  0DA7                     	;# 
  4000  0DA8                     	;# 
  4001  0DA9                     	;# 
  4002  0DAA                     	;# 
  4003  0DAB                     	;# 
  4004  0DAC                     	;# 
  4005  0DAD                     	;# 
  4006  0DAE                     	;# 
  4007  0DAF                     	;# 
  4008  0E0F                     	;# 
  4009  0E10                     	;# 
  4010  0E11                     	;# 
  4011  0E12                     	;# 
  4012  0E13                     	;# 
  4013  0E14                     	;# 
  4014  0E15                     	;# 
  4015  0E16                     	;# 
  4016  0E17                     	;# 
  4017  0E18                     	;# 
  4018  0E19                     	;# 
  4019  0E1A                     	;# 
  4020  0E1B                     	;# 
  4021  0E1C                     	;# 
  4022  0E1D                     	;# 
  4023  0E1E                     	;# 
  4024  0E1F                     	;# 
  4025  0E20                     	;# 
  4026  0E21                     	;# 
  4027  0E22                     	;# 
  4028  0E23                     	;# 
  4029  0E24                     	;# 
  4030  0E25                     	;# 
  4031  0E26                     	;# 
  4032  0E27                     	;# 
  4033  0E28                     	;# 
  4034  0E29                     	;# 
  4035  0E2A                     	;# 
  4036  0E2B                     	;# 
  4037  0E2C                     	;# 
  4038  0E2D                     	;# 
  4039  0E2E                     	;# 
  4040  0E90                     	;# 
  4041  0E91                     	;# 
  4042  0E92                     	;# 
  4043  0E94                     	;# 
  4044  0E95                     	;# 
  4045  0E9C                     	;# 
  4046  0E9D                     	;# 
  4047  0E9E                     	;# 
  4048  0E9F                     	;# 
  4049  0EA0                     	;# 
  4050  0EA1                     	;# 
  4051  0EA2                     	;# 
  4052  0EA3                     	;# 
  4053  0EA4                     	;# 
  4054  0EA5                     	;# 
  4055  0EA6                     	;# 
  4056  0EA7                     	;# 
  4057  0F0F                     	;# 
  4058  0F10                     	;# 
  4059  0F11                     	;# 
  4060  0F12                     	;# 
  4061  0F13                     	;# 
  4062  0F14                     	;# 
  4063  0F15                     	;# 
  4064  0F16                     	;# 
  4065  0F17                     	;# 
  4066  0F18                     	;# 
  4067  0F19                     	;# 
  4068  0F1A                     	;# 
  4069  0F1B                     	;# 
  4070  0F1C                     	;# 
  4071  0F1D                     	;# 
  4072  0F1E                     	;# 
  4073  0F1F                     	;# 
  4074  0F20                     	;# 
  4075  0F21                     	;# 
  4076  0F22                     	;# 
  4077  0F23                     	;# 
  4078  0F24                     	;# 
  4079  0F25                     	;# 
  4080  0F26                     	;# 
  4081  0F27                     	;# 
  4082  0F28                     	;# 
  4083  0F29                     	;# 
  4084  0F2A                     	;# 
  4085  0F2B                     	;# 
  4086  0F2C                     	;# 
  4087  0F2D                     	;# 
  4088  0F2E                     	;# 
  4089  0F2F                     	;# 
  4090  0F30                     	;# 
  4091  0F31                     	;# 
  4092  0F32                     	;# 
  4093  0F33                     	;# 
  4094  0F34                     	;# 
  4095  0F35                     	;# 
  4096  0F36                     	;# 
  4097  0F37                     	;# 
  4098  0FE4                     	;# 
  4099  0FE5                     	;# 
  4100  0FE6                     	;# 
  4101  0FE7                     	;# 
  4102  0FE8                     	;# 
  4103  0FE9                     	;# 
  4104  0FEA                     	;# 
  4105  0FEB                     	;# 
  4106  0FED                     	;# 
  4107  0FEE                     	;# 
  4108  0FEF                     	;# 
  4109  0000                     	;# 
  4110  0001                     	;# 
  4111  0002                     	;# 
  4112  0003                     	;# 
  4113  0004                     	;# 
  4114  0005                     	;# 
  4115  0006                     	;# 
  4116  0007                     	;# 
  4117  0008                     	;# 
  4118  0009                     	;# 
  4119  000A                     	;# 
  4120  000B                     	;# 
  4121  000C                     	;# 
  4122  000D                     	;# 
  4123  000E                     	;# 
  4124  0010                     	;# 
  4125  0011                     	;# 
  4126  0012                     	;# 
  4127  0013                     	;# 
  4128  0014                     	;# 
  4129  0015                     	;# 
  4130  0016                     	;# 
  4131  0016                     	;# 
  4132  0017                     	;# 
  4133  0018                     	;# 
  4134  0019                     	;# 
  4135  001A                     	;# 
  4136  001A                     	;# 
  4137  001B                     	;# 
  4138  001B                     	;# 
  4139  001C                     	;# 
  4140  001D                     	;# 
  4141  001E                     	;# 
  4142  001F                     	;# 
  4143  008C                     	;# 
  4144  008D                     	;# 
  4145  008E                     	;# 
  4146  0090                     	;# 
  4147  0091                     	;# 
  4148  0092                     	;# 
  4149  0093                     	;# 
  4150  0094                     	;# 
  4151  0095                     	;# 
  4152  0096                     	;# 
  4153  0098                     	;# 
  4154  0099                     	;# 
  4155  009A                     	;# 
  4156  009B                     	;# 
  4157  009B                     	;# 
  4158  009C                     	;# 
  4159  009D                     	;# 
  4160  009E                     	;# 
  4161  009F                     	;# 
  4162  010C                     	;# 
  4163  010D                     	;# 
  4164  010E                     	;# 
  4165  0111                     	;# 
  4166  0112                     	;# 
  4167  0113                     	;# 
  4168  0114                     	;# 
  4169  0115                     	;# 
  4170  0116                     	;# 
  4171  0117                     	;# 
  4172  0118                     	;# 
  4173  0119                     	;# 
  4174  011C                     	;# 
  4175  018C                     	;# 
  4176  018D                     	;# 
  4177  018E                     	;# 
  4178  0191                     	;# 
  4179  0191                     	;# 
  4180  0192                     	;# 
  4181  0193                     	;# 
  4182  0193                     	;# 
  4183  0194                     	;# 
  4184  0195                     	;# 
  4185  0196                     	;# 
  4186  0197                     	;# 
  4187  0199                     	;# 
  4188  0199                     	;# 
  4189  0199                     	;# 
  4190  019A                     	;# 
  4191  019A                     	;# 
  4192  019A                     	;# 
  4193  019B                     	;# 
  4194  019B                     	;# 
  4195  019B                     	;# 
  4196  019B                     	;# 
  4197  019B                     	;# 
  4198  019C                     	;# 
  4199  019C                     	;# 
  4200  019C                     	;# 
  4201  019D                     	;# 
  4202  019D                     	;# 
  4203  019D                     	;# 
  4204  019E                     	;# 
  4205  019E                     	;# 
  4206  019E                     	;# 
  4207  019F                     	;# 
  4208  019F                     	;# 
  4209  019F                     	;# 
  4210  019F                     	;# 
  4211  019F                     	;# 
  4212  020C                     	;# 
  4213  020D                     	;# 
  4214  020E                     	;# 
  4215  0211                     	;# 
  4216  0211                     	;# 
  4217  0212                     	;# 
  4218  0212                     	;# 
  4219  0213                     	;# 
  4220  0213                     	;# 
  4221  0214                     	;# 
  4222  0214                     	;# 
  4223  0215                     	;# 
  4224  0215                     	;# 
  4225  0215                     	;# 
  4226  0215                     	;# 
  4227  0216                     	;# 
  4228  0216                     	;# 
  4229  0217                     	;# 
  4230  0217                     	;# 
  4231  028C                     	;# 
  4232  028D                     	;# 
  4233  028E                     	;# 
  4234  0291                     	;# 
  4235  0291                     	;# 
  4236  0292                     	;# 
  4237  0293                     	;# 
  4238  0294                     	;# 
  4239  0298                     	;# 
  4240  0298                     	;# 
  4241  0299                     	;# 
  4242  029A                     	;# 
  4243  029B                     	;# 
  4244  029E                     	;# 
  4245  030C                     	;# 
  4246  030D                     	;# 
  4247  030E                     	;# 
  4248  038C                     	;# 
  4249  038D                     	;# 
  4250  038E                     	;# 
  4251  0391                     	;# 
  4252  0392                     	;# 
  4253  0393                     	;# 
  4254  0394                     	;# 
  4255  0395                     	;# 
  4256  0396                     	;# 
  4257  0397                     	;# 
  4258  0398                     	;# 
  4259  0399                     	;# 
  4260  040E                     	;# 
  4261  0413                     	;# 
  4262  0413                     	;# 
  4263  0414                     	;# 
  4264  0414                     	;# 
  4265  0415                     	;# 
  4266  0416                     	;# 
  4267  0417                     	;# 
  4268  0418                     	;# 
  4269  041A                     	;# 
  4270  041A                     	;# 
  4271  041B                     	;# 
  4272  041B                     	;# 
  4273  041C                     	;# 
  4274  041D                     	;# 
  4275  041E                     	;# 
  4276  041F                     	;# 
  4277  0493                     	;# 
  4278  0494                     	;# 
  4279  0495                     	;# 
  4280  0496                     	;# 
  4281  049A                     	;# 
  4282  049B                     	;# 
  4283  049C                     	;# 
  4284  049D                     	;# 
  4285  058C                     	;# 
  4286  058C                     	;# 
  4287  058D                     	;# 
  4288  058E                     	;# 
  4289  058E                     	;# 
  4290  058F                     	;# 
  4291  0590                     	;# 
  4292  0590                     	;# 
  4293  0591                     	;# 
  4294  0592                     	;# 
  4295  0592                     	;# 
  4296  0593                     	;# 
  4297  0594                     	;# 
  4298  0594                     	;# 
  4299  0595                     	;# 
  4300  0596                     	;# 
  4301  0596                     	;# 
  4302  0597                     	;# 
  4303  0598                     	;# 
  4304  0599                     	;# 
  4305  059A                     	;# 
  4306  059B                     	;# 
  4307  059B                     	;# 
  4308  059C                     	;# 
  4309  059D                     	;# 
  4310  060C                     	;# 
  4311  060C                     	;# 
  4312  060D                     	;# 
  4313  060E                     	;# 
  4314  060F                     	;# 
  4315  060F                     	;# 
  4316  0610                     	;# 
  4317  0611                     	;# 
  4318  0612                     	;# 
  4319  0613                     	;# 
  4320  0614                     	;# 
  4321  0617                     	;# 
  4322  0617                     	;# 
  4323  0618                     	;# 
  4324  0619                     	;# 
  4325  061A                     	;# 
  4326  061A                     	;# 
  4327  061B                     	;# 
  4328  061C                     	;# 
  4329  0691                     	;# 
  4330  0692                     	;# 
  4331  0693                     	;# 
  4332  0694                     	;# 
  4333  0695                     	;# 
  4334  0696                     	;# 
  4335  0697                     	;# 
  4336  0699                     	;# 
  4337  069A                     	;# 
  4338  0711                     	;# 
  4339  0712                     	;# 
  4340  0713                     	;# 
  4341  0714                     	;# 
  4342  0715                     	;# 
  4343  0718                     	;# 
  4344  0718                     	;# 
  4345  0719                     	;# 
  4346  071A                     	;# 
  4347  071A                     	;# 
  4348  071B                     	;# 
  4349  071C                     	;# 
  4350  071D                     	;# 
  4351  0791                     	;# 
  4352  0791                     	;# 
  4353  0792                     	;# 
  4354  0793                     	;# 
  4355  0793                     	;# 
  4356  0794                     	;# 
  4357  0795                     	;# 
  4358  0795                     	;# 
  4359  0796                     	;# 
  4360  0797                     	;# 
  4361  0797                     	;# 
  4362  0798                     	;# 
  4363  0799                     	;# 
  4364  079A                     	;# 
  4365  080C                     	;# 
  4366  080C                     	;# 
  4367  080D                     	;# 
  4368  080E                     	;# 
  4369  080E                     	;# 
  4370  080F                     	;# 
  4371  0810                     	;# 
  4372  0810                     	;# 
  4373  0811                     	;# 
  4374  0812                     	;# 
  4375  0812                     	;# 
  4376  0813                     	;# 
  4377  0814                     	;# 
  4378  0815                     	;# 
  4379  0816                     	;# 
  4380  0817                     	;# 
  4381  0818                     	;# 
  4382  0819                     	;# 
  4383  081A                     	;# 
  4384  081A                     	;# 
  4385  081B                     	;# 
  4386  081C                     	;# 
  4387  081C                     	;# 
  4388  081D                     	;# 
  4389  088C                     	;# 
  4390  088D                     	;# 
  4391  088E                     	;# 
  4392  088F                     	;# 
  4393  088F                     	;# 
  4394  0890                     	;# 
  4395  0891                     	;# 
  4396  0892                     	;# 
  4397  0893                     	;# 
  4398  0893                     	;# 
  4399  0894                     	;# 
  4400  0895                     	;# 
  4401  0896                     	;# 
  4402  0897                     	;# 
  4403  0897                     	;# 
  4404  0898                     	;# 
  4405  0899                     	;# 
  4406  0D8C                     	;# 
  4407  0D8C                     	;# 
  4408  0D8D                     	;# 
  4409  0D8E                     	;# 
  4410  0D8F                     	;# 
  4411  0D8F                     	;# 
  4412  0D90                     	;# 
  4413  0D91                     	;# 
  4414  0D92                     	;# 
  4415  0D92                     	;# 
  4416  0D93                     	;# 
  4417  0D94                     	;# 
  4418  0D95                     	;# 
  4419  0D95                     	;# 
  4420  0D96                     	;# 
  4421  0D97                     	;# 
  4422  0D98                     	;# 
  4423  0D99                     	;# 
  4424  0D9A                     	;# 
  4425  0D9B                     	;# 
  4426  0D9C                     	;# 
  4427  0D9D                     	;# 
  4428  0D9E                     	;# 
  4429  0D9E                     	;# 
  4430  0D9F                     	;# 
  4431  0DA0                     	;# 
  4432  0DA1                     	;# 
  4433  0DA1                     	;# 
  4434  0DA2                     	;# 
  4435  0DA3                     	;# 
  4436  0DA4                     	;# 
  4437  0DA4                     	;# 
  4438  0DA5                     	;# 
  4439  0DA6                     	;# 
  4440  0DA7                     	;# 
  4441  0DA7                     	;# 
  4442  0DA8                     	;# 
  4443  0DA9                     	;# 
  4444  0DAA                     	;# 
  4445  0DAB                     	;# 
  4446  0DAC                     	;# 
  4447  0DAD                     	;# 
  4448  0DAE                     	;# 
  4449  0DAF                     	;# 
  4450  0E0F                     	;# 
  4451  0E10                     	;# 
  4452  0E11                     	;# 
  4453  0E12                     	;# 
  4454  0E13                     	;# 
  4455  0E14                     	;# 
  4456  0E15                     	;# 
  4457  0E16                     	;# 
  4458  0E17                     	;# 
  4459  0E18                     	;# 
  4460  0E19                     	;# 
  4461  0E1A                     	;# 
  4462  0E1B                     	;# 
  4463  0E1C                     	;# 
  4464  0E1D                     	;# 
  4465  0E1E                     	;# 
  4466  0E1F                     	;# 
  4467  0E20                     	;# 
  4468  0E21                     	;# 
  4469  0E22                     	;# 
  4470  0E23                     	;# 
  4471  0E24                     	;# 
  4472  0E25                     	;# 
  4473  0E26                     	;# 
  4474  0E27                     	;# 
  4475  0E28                     	;# 
  4476  0E29                     	;# 
  4477  0E2A                     	;# 
  4478  0E2B                     	;# 
  4479  0E2C                     	;# 
  4480  0E2D                     	;# 
  4481  0E2E                     	;# 
  4482  0E90                     	;# 
  4483  0E91                     	;# 
  4484  0E92                     	;# 
  4485  0E94                     	;# 
  4486  0E95                     	;# 
  4487  0E9C                     	;# 
  4488  0E9D                     	;# 
  4489  0E9E                     	;# 
  4490  0E9F                     	;# 
  4491  0EA0                     	;# 
  4492  0EA1                     	;# 
  4493  0EA2                     	;# 
  4494  0EA3                     	;# 
  4495  0EA4                     	;# 
  4496  0EA5                     	;# 
  4497  0EA6                     	;# 
  4498  0EA7                     	;# 
  4499  0F0F                     	;# 
  4500  0F10                     	;# 
  4501  0F11                     	;# 
  4502  0F12                     	;# 
  4503  0F13                     	;# 
  4504  0F14                     	;# 
  4505  0F15                     	;# 
  4506  0F16                     	;# 
  4507  0F17                     	;# 
  4508  0F18                     	;# 
  4509  0F19                     	;# 
  4510  0F1A                     	;# 
  4511  0F1B                     	;# 
  4512  0F1C                     	;# 
  4513  0F1D                     	;# 
  4514  0F1E                     	;# 
  4515  0F1F                     	;# 
  4516  0F20                     	;# 
  4517  0F21                     	;# 
  4518  0F22                     	;# 
  4519  0F23                     	;# 
  4520  0F24                     	;# 
  4521  0F25                     	;# 
  4522  0F26                     	;# 
  4523  0F27                     	;# 
  4524  0F28                     	;# 
  4525  0F29                     	;# 
  4526  0F2A                     	;# 
  4527  0F2B                     	;# 
  4528  0F2C                     	;# 
  4529  0F2D                     	;# 
  4530  0F2E                     	;# 
  4531  0F2F                     	;# 
  4532  0F30                     	;# 
  4533  0F31                     	;# 
  4534  0F32                     	;# 
  4535  0F33                     	;# 
  4536  0F34                     	;# 
  4537  0F35                     	;# 
  4538  0F36                     	;# 
  4539  0F37                     	;# 
  4540  0FE4                     	;# 
  4541  0FE5                     	;# 
  4542  0FE6                     	;# 
  4543  0FE7                     	;# 
  4544  0FE8                     	;# 
  4545  0FE9                     	;# 
  4546  0FEA                     	;# 
  4547  0FEB                     	;# 
  4548  0FED                     	;# 
  4549  0FEE                     	;# 
  4550  0FEF                     	;# 
  4551                           
  4552                           	psect	idataBANK2
  4553  0002                     __pidataBANK2:	
  4554                           
  4555                           ;initializer for _messages
  4556  0002  3420               	retlw	low (_message_start| (0+512))
  4557  0003  34A0               	retlw	low (_message_end| (0+512))
  4558                           
  4559                           	psect	nvBANK2
  4560  015E                     __pnvBANK2:	
  4561  015E                     _TMR0_InterruptHandler:	
  4562  015E                     	ds	2
  4563  0160                     _timer0ReloadVal:	
  4564  0160                     	ds	1
  4565  0015                     _TMR0	set	21
  4566  000B                     _INTCONbits	set	11
  4567  0010                     _PIR1bits	set	16
  4568  0095                     _OPTION_REG	set	149
  4569  0095                     _OPTION_REGbits	set	149
  4570  008E                     _TRISC	set	142
  4571  008D                     _TRISB	set	141
  4572  008C                     _TRISA	set	140
  4573  0098                     _OSCTUNE	set	152
  4574  0099                     _OSCCON	set	153
  4575  010E                     _LATCbits	set	270
  4576  010C                     _LATAbits	set	268
  4577  010E                     _LATC	set	270
  4578  010D                     _LATB	set	269
  4579  010C                     _LATA	set	268
  4580  0116                     _BORCON	set	278
  4581  019C                     _SPBRGH	set	412
  4582  019B                     _SPBRGL	set	411
  4583  019E                     _TX1STA	set	414
  4584  019D                     _RC1STA	set	413
  4585  019F                     _BAUD1CON	set	415
  4586  018C                     _ANSELA	set	396
  4587  018D                     _ANSELB	set	397
  4588  018E                     _ANSELC	set	398
  4589  0216                     _SSP1CON2bits	set	534
  4590  0211                     _SSP1BUF	set	529
  4591  0215                     _SSP1CON1bits	set	533
  4592  0212                     _SSP1ADD	set	530
  4593  0216                     _SSP1CON2	set	534
  4594  0215                     _SSP1CON1	set	533
  4595  0214                     _SSP1STAT	set	532
  4596  020E                     _WPUC	set	526
  4597  020C                     _WPUA	set	524
  4598  020D                     _WPUB	set	525
  4599  028E                     _ODCONC	set	654
  4600  028D                     _ODCONB	set	653
  4601  028C                     _ODCONA	set	652
  4602  030E                     _SLRCONC	set	782
  4603  030D                     _SLRCONB	set	781
  4604  030C                     _SLRCONA	set	780
  4605  0E21                     _SSPDATPPS	set	3617
  4606  0E20                     _SSPCLKPPS	set	3616
  4607  0E24                     _RXPPS	set	3620
  4608  0E9C                     _RB4PPS	set	3740
  4609  0E9E                     _RB6PPS	set	3742
  4610  0E9F                     _RB7PPS	set	3743
  4611                           
  4612                           	psect	stringtext1
  4613  1800                     __pstringtext1:	
  4614  1800                     STR_1:	
  4615  1800  3457               	retlw	87	;'W'
  4616  1801  3469               	retlw	105	;'i'
  4617  1802  3473               	retlw	115	;'s'
  4618  1803  3470               	retlw	112	;'p'
  4619  1804  342D               	retlw	45	;'-'
  4620  1805  3431               	retlw	49	;'1'
  4621  1806  3400               	retlw	0
  4622                           
  4623                           	psect	stringtext2
  4624  1807                     __pstringtext2:	
  4625  1807                     STR_2:	
  4626  1807  3424               	retlw	36	;'$'
  4627  1808  3424               	retlw	36	;'$'
  4628  1809  3400               	retlw	0
  4629                           
  4630                           	psect	stringtext3
  4631  0000                     __pstringtext3:	
  4632                           
  4633                           ; #config settings
  4634  0000                     
  4635                           	psect	cinit
  4636  000F                     start_initialization:	
  4637  000F                     __initialization:	
  4638                           
  4639                           ; Initialize objects allocated to BANK2
  4640  000F  0022               	movlb	2	; select bank2
  4641  0010  3180  2002  3180   	fcall	__pidataBANK2	;fetch initializer
  4642  0013  00E1               	movwf	__pdataBANK2& (0+127)
  4643  0014  3180  2003  3180   	fcall	__pidataBANK2+1	;fetch initializer
  4644  0017  00E2               	movwf	(__pdataBANK2+1)& (0+127)
  4645                           
  4646                           ; Clear objects allocated to BANK1
  4647  0018  30E8               	movlw	low __pbssBANK1
  4648  0019  0084               	movwf	4
  4649  001A  3000               	movlw	high __pbssBANK1
  4650  001B  0085               	movwf	5
  4651  001C  3008               	movlw	8
  4652  001D  319B  2379  3180   	fcall	clear_ram0
  4653                           
  4654                           ; Clear objects allocated to BANK2
  4655  0020  3042               	movlw	low __pbssBANK2
  4656  0021  0084               	movwf	4
  4657  0022  3001               	movlw	high __pbssBANK2
  4658  0023  0085               	movwf	5
  4659  0024  301C               	movlw	28
  4660  0025  319B  2379  3180   	fcall	clear_ram0
  4661                           
  4662                           ; Clear objects allocated to BANK3
  4663  0028  30A0               	movlw	low __pbssBANK3
  4664  0029  0084               	movwf	4
  4665  002A  3001               	movlw	high __pbssBANK3
  4666  002B  0085               	movwf	5
  4667  002C  304D               	movlw	77
  4668  002D  319B  2379  3180   	fcall	clear_ram0
  4669                           
  4670                           ; Clear objects allocated to BANK4
  4671  0030  3020               	movlw	low __pbssBANK4
  4672  0031  0084               	movwf	4
  4673  0032  3002               	movlw	high __pbssBANK4
  4674  0033  0085               	movwf	5
  4675  0034  3046               	movlw	70
  4676  0035  319B  2379  3180   	fcall	clear_ram0
  4677                           
  4678                           ; Clear objects allocated to BANK5
  4679  0038  30A0               	movlw	low __pbssBANK5
  4680  0039  0084               	movwf	4
  4681  003A  3002               	movlw	high __pbssBANK5
  4682  003B  0085               	movwf	5
  4683  003C  3049               	movlw	73
  4684  003D  319B  2379         	fcall	clear_ram0
  4685  003F                     end_of_initialization:	
  4686                           ;End of C runtime variable initialization code
  4687                           
  4688  003F                     __end_of__initialization:	
  4689  003F  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4690  0040  0020               	movlb	0
  4691  0041  3185  2D8B         	ljmp	_main	;jump to C main() function
  4692                           
  4693                           	psect	bssBANK1
  4694  00E8                     __pbssBANK1:	
  4695  00E8                     _ticks:	
  4696  00E8                     	ds	4
  4697  00EC                     ___g_timeout_start:	
  4698  00EC                     	ds	4
  4699                           
  4700                           	psect	bssBANK2
  4701  0142                     __pbssBANK2:	
  4702  0142                     bme280_get_sensor_data@F273:	
  4703  0142                     	ds	12
  4704  014E                     bme280_get_sensor_data@F271:	
  4705  014E                     	ds	8
  4706  0156                     _id:	
  4707  0156                     	ds	2
  4708  0158                     _checksum:	
  4709  0158                     	ds	6
  4710                           
  4711                           	psect	dataBANK2
  4712  0161                     __pdataBANK2:	
  4713  0161                     _messages:	
  4714  0161                     	ds	2
  4715                           
  4716                           	psect	bssBANK3
  4717  01A0                     __pbssBANK3:	
  4718  01A0                     get_calib_data@F376:	
  4719  01A0                     	ds	26
  4720  01BA                     _EnvSensor:	
  4721  01BA                     	ds	51
  4722                           
  4723                           	psect	bssBANK4
  4724  0220                     __pbssBANK4:	
  4725  0220                     _message_start:	
  4726  0220                     	ds	70
  4727                           
  4728                           	psect	bssBANK5
  4729  02A0                     __pbssBANK5:	
  4730  02A0                     _message_end:	
  4731  02A0                     	ds	73
  4732                           
  4733                           	psect	clrtext
  4734  1B79                     clear_ram0:	
  4735                           ;	Called with FSR0 containing the base address, and
  4736                           ;	WREG with the size to clear
  4737                           
  4738  1B79  0064               	clrwdt	;clear the watchdog before getting into this loop
  4739  1B7A                     clrloop0:	
  4740  1B7A  0180               	clrf	0	;clear RAM location pointed to by FSR
  4741  1B7B  3101               	addfsr 0,1
  4742  1B7C  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  4743  1B7D  2B7A               	goto	clrloop0	;have we reached the end yet?
  4744  1B7E  3400               	retlw	0	;all done for this memory range, return
  4745                           
  4746                           	psect	cstackBANK2
  4747  0120                     __pcstackBANK2:	
  4748  0120                     main@convertedNumber:	
  4749                           
  4750                           ; 16 bytes @ 0x0
  4751  0120                     	ds	16
  4752  0130                     main@end:	
  4753                           
  4754                           ; 2 bytes @ 0x10
  4755  0130                     	ds	2
  4756  0132                     main@i:	
  4757                           
  4758                           ; 2 bytes @ 0x12
  4759  0132                     	ds	2
  4760  0134                     main@sensor_data:	
  4761                           
  4762                           ; 12 bytes @ 0x14
  4763  0134                     	ds	12
  4764  0140                     main@index:	
  4765                           
  4766                           ; 2 bytes @ 0x20
  4767  0140                     	ds	2
  4768                           
  4769                           	psect	cstackBANK1
  4770  00A0                     __pcstackBANK1:	
  4771  00A0                     put_device_to_sleep@reg_data:	
  4772  00A0                     compensate_pressure@var3:	
  4773                           ; 4 bytes @ 0x0
  4774                           
  4775                           
  4776                           ; 4 bytes @ 0x0
  4777  00A0                     	ds	4
  4778  00A4                     put_device_to_sleep@rslt:	
  4779  00A4                     compensate_pressure@var4:	
  4780                           ; 1 bytes @ 0x4
  4781                           
  4782                           
  4783                           ; 4 bytes @ 0x4
  4784  00A4                     	ds	1
  4785  00A5                     put_device_to_sleep@dev:	
  4786                           
  4787                           ; 1 bytes @ 0x5
  4788  00A5                     	ds	1
  4789  00A6                     put_device_to_sleep@settings:	
  4790                           
  4791                           ; 5 bytes @ 0x6
  4792  00A6                     	ds	2
  4793  00A8                     compensate_pressure@var5:	
  4794                           
  4795                           ; 4 bytes @ 0x8
  4796  00A8                     	ds	3
  4797  00AB                     bme280_set_sensor_settings@desired_settings:	
  4798  00AB                     bme280_set_sensor_mode@sensor_mode:	
  4799                           ; 1 bytes @ 0xB
  4800                           
  4801                           
  4802                           ; 1 bytes @ 0xB
  4803  00AB                     	ds	1
  4804  00AC                     bme280_set_sensor_settings@sensor_mode:	
  4805  00AC                     bme280_set_sensor_mode@last_set_mode:	
  4806                           ; 1 bytes @ 0xC
  4807                           
  4808  00AC                     _compensate_pressure$2271:	
  4809                           ; 1 bytes @ 0xC
  4810                           
  4811                           
  4812                           ; 4 bytes @ 0xC
  4813  00AC                     	ds	1
  4814  00AD                     bme280_set_sensor_settings@rslt:	
  4815  00AD                     bme280_set_sensor_mode@rslt:	
  4816                           ; 1 bytes @ 0xD
  4817                           
  4818                           
  4819                           ; 1 bytes @ 0xD
  4820  00AD                     	ds	1
  4821  00AE                     ??_BME280_Init:	
  4822                           
  4823                           ; 1 bytes @ 0xE
  4824  00AE                     	ds	2
  4825  00B0                     BME280_Init@settings_sel:	
  4826  00B0                     _compensate_pressure$2272:	
  4827                           ; 1 bytes @ 0x10
  4828                           
  4829                           
  4830                           ; 4 bytes @ 0x10
  4831  00B0                     	ds	1
  4832  00B1                     BME280_Init@rslt:	
  4833                           
  4834                           ; 1 bytes @ 0x11
  4835  00B1                     	ds	3
  4836  00B4                     compensate_pressure@uncomp_data:	
  4837                           
  4838                           ; 1 bytes @ 0x14
  4839  00B4                     	ds	1
  4840  00B5                     compensate_pressure@pressure_max:	
  4841                           
  4842                           ; 4 bytes @ 0x15
  4843  00B5                     	ds	4
  4844  00B9                     _compensate_pressure$2270:	
  4845                           
  4846                           ; 4 bytes @ 0x19
  4847  00B9                     	ds	8
  4848  00C1                     compensate_pressure@var2:	
  4849                           
  4850                           ; 4 bytes @ 0x21
  4851  00C1                     	ds	4
  4852  00C5                     compensate_pressure@pressure:	
  4853                           
  4854                           ; 4 bytes @ 0x25
  4855  00C5                     	ds	4
  4856  00C9                     compensate_pressure@var1:	
  4857                           
  4858                           ; 4 bytes @ 0x29
  4859  00C9                     	ds	4
  4860  00CD                     bme280_get_sensor_data@reg_data:	
  4861                           
  4862                           ; 8 bytes @ 0x2D
  4863  00CD                     	ds	8
  4864  00D5                     bme280_get_sensor_data@sensor_comp:	
  4865                           
  4866                           ; 1 bytes @ 0x35
  4867  00D5                     	ds	1
  4868  00D6                     bme280_get_sensor_data@rslt:	
  4869                           
  4870                           ; 1 bytes @ 0x36
  4871  00D6                     	ds	1
  4872  00D7                     bme280_get_sensor_data@uncomp_data:	
  4873                           
  4874                           ; 12 bytes @ 0x37
  4875  00D7                     	ds	12
  4876  00E3                     ??_main:	
  4877                           
  4878                           ; 1 bytes @ 0x43
  4879  00E3                     	ds	5
  4880                           
  4881                           	psect	cstackCOMMON
  4882  0070                     __pcstackCOMMON:	
  4883  0070                     ?_null_ptr_check:	
  4884  0070                     ??_null_ptr_check:	
  4885                           ; 1 bytes @ 0x0
  4886                           
  4887  0070                     ?_interleave_reg_addr:	
  4888                           ; 1 bytes @ 0x0
  4889                           
  4890  0070                     ?_are_settings_changed:	
  4891                           ; 1 bytes @ 0x0
  4892                           
  4893  0070                     ?_parse_device_settings:	
  4894                           ; 1 bytes @ 0x0
  4895                           
  4896  0070                     ?_bme280_parse_sensor_data:	
  4897                           ; 1 bytes @ 0x0
  4898                           
  4899  0070                     ?_fill_osr_press_settings:	
  4900                           ; 1 bytes @ 0x0
  4901                           
  4902  0070                     ?_fill_osr_temp_settings:	
  4903                           ; 1 bytes @ 0x0
  4904                           
  4905  0070                     ?_fill_filter_settings:	
  4906                           ; 1 bytes @ 0x0
  4907                           
  4908  0070                     ?_fill_standby_settings:	
  4909                           ; 1 bytes @ 0x0
  4910                           
  4911  0070                     ?_parse_temp_press_calib_data:	
  4912                           ; 1 bytes @ 0x0
  4913                           
  4914  0070                     ?_parse_humidity_calib_data:	
  4915                           ; 1 bytes @ 0x0
  4916                           
  4917  0070                     ?_PIN_MANAGER_Initialize:	
  4918                           ; 1 bytes @ 0x0
  4919                           
  4920  0070                     ??_PIN_MANAGER_Initialize:	
  4921                           ; 1 bytes @ 0x0
  4922                           
  4923  0070                     ?_OSCILLATOR_Initialize:	
  4924                           ; 1 bytes @ 0x0
  4925                           
  4926  0070                     ??_OSCILLATOR_Initialize:	
  4927                           ; 1 bytes @ 0x0
  4928                           
  4929  0070                     ?_TMR0_Initialize:	
  4930                           ; 1 bytes @ 0x0
  4931                           
  4932  0070                     ?_EUSART_Initialize:	
  4933                           ; 1 bytes @ 0x0
  4934                           
  4935  0070                     ??_EUSART_Initialize:	
  4936                           ; 1 bytes @ 0x0
  4937                           
  4938  0070                     ?_TMR0_ISR:	
  4939                           ; 1 bytes @ 0x0
  4940                           
  4941  0070                     ??_TMR0_ISR:	
  4942                           ; 1 bytes @ 0x0
  4943                           
  4944  0070                     ?_TMR0_SetInterruptHandler:	
  4945                           ; 1 bytes @ 0x0
  4946                           
  4947  0070                     ?_TMR0_DefaultInterruptHandler:	
  4948                           ; 1 bytes @ 0x0
  4949                           
  4950  0070                     ??_TMR0_DefaultInterruptHandler:	
  4951                           ; 1 bytes @ 0x0
  4952                           
  4953  0070                     ?_InitTiming:	
  4954                           ; 1 bytes @ 0x0
  4955                           
  4956  0070                     ?_BME280_Init:	
  4957                           ; 1 bytes @ 0x0
  4958                           
  4959  0070                     ?_TransmitString:	
  4960                           ; 1 bytes @ 0x0
  4961                           
  4962  0070                     ?_I2C_UserAlert:	
  4963                           ; 1 bytes @ 0x0
  4964                           
  4965  0070                     ?_Sleep:	
  4966                           ; 1 bytes @ 0x0
  4967                           
  4968  0070                     ?_SYSTEM_Initialize:	
  4969                           ; 1 bytes @ 0x0
  4970                           
  4971  0070                     ?_INTERRUPT_InterruptManager:	
  4972                           ; 1 bytes @ 0x0
  4973                           
  4974  0070                     ??_INTERRUPT_InterruptManager:	
  4975                           ; 1 bytes @ 0x0
  4976                           
  4977  0070                     ?_ReverseString:	
  4978                           ; 1 bytes @ 0x0
  4979                           
  4980  0070                     ?_ClearMessages:	
  4981                           ; 1 bytes @ 0x0
  4982                           
  4983  0070                     ?_main:	
  4984                           ; 1 bytes @ 0x0
  4985                           
  4986  0070                     ?_I2C_Wait_SSPIF:	
  4987                           ; 1 bytes @ 0x0
  4988                           
  4989  0070                     ?_I2C_Init:	
  4990                           ; 1 bytes @ 0x0
  4991                           
  4992  0070                     ??_I2C_Init:	
  4993                           ; 1 bytes @ 0x0
  4994                           
  4995  0070                     ?_I2C_WriteByte:	
  4996                           ; 1 bytes @ 0x0
  4997                           
  4998  0070                     ?_I2C_ReadByte:	
  4999                           ; 1 bytes @ 0x0
  5000                           
  5001  0070                     ?_I2C_Stop:	
  5002                           ; 1 bytes @ 0x0
  5003                           
  5004  0070                     ?_TimerISR:	
  5005                           ; 1 bytes @ 0x0
  5006                           
  5007  0070                     ??_TimerISR:	
  5008                           ; 1 bytes @ 0x0
  5009                           
  5010  0070                     ?_TransmitBit:	
  5011                           ; 1 bytes @ 0x0
  5012                           
  5013  0070                     ??_TransmitBit:	
  5014                           ; 1 bytes @ 0x0
  5015                           
  5016  0070                     ?_TransmitByte:	
  5017                           ; 1 bytes @ 0x0
  5018                           
  5019  0070                     ?_strlen:	
  5020                           ; 1 bytes @ 0x0
  5021                           
  5022  0070                     ?_Insert:	
  5023                           ; 2 bytes @ 0x0
  5024                           
  5025  0070                     ?___awdiv:	
  5026                           ; 2 bytes @ 0x0
  5027                           
  5028  0070                     ?___awmod:	
  5029                           ; 2 bytes @ 0x0
  5030                           
  5031  0070                     ?___lmul:	
  5032                           ; 2 bytes @ 0x0
  5033                           
  5034  0070                     ?___lldiv:	
  5035                           ; 4 bytes @ 0x0
  5036                           
  5037  0070                     ?___llmod:	
  5038                           ; 4 bytes @ 0x0
  5039                           
  5040  0070                     bme280_parse_sensor_data@uncomp_data:	
  5041                           ; 4 bytes @ 0x0
  5042                           
  5043  0070                     parse_device_settings@settings:	
  5044                           ; 1 bytes @ 0x0
  5045                           
  5046  0070                     interleave_reg_addr@temp_buff:	
  5047                           ; 1 bytes @ 0x0
  5048                           
  5049  0070                     parse_temp_press_calib_data@dev:	
  5050                           ; 1 bytes @ 0x0
  5051                           
  5052  0070                     parse_humidity_calib_data@dev:	
  5053                           ; 1 bytes @ 0x0
  5054                           
  5055  0070                     are_settings_changed@desired_settings:	
  5056                           ; 1 bytes @ 0x0
  5057                           
  5058  0070                     Insert@src:	
  5059                           ; 1 bytes @ 0x0
  5060                           
  5061  0070                     I2C_UserAlert@status:	
  5062                           ; 1 bytes @ 0x0
  5063                           
  5064  0070                     fill_filter_settings@settings:	
  5065                           ; 1 bytes @ 0x0
  5066                           
  5067  0070                     fill_standby_settings@settings:	
  5068                           ; 2 bytes @ 0x0
  5069                           
  5070  0070                     fill_osr_press_settings@settings:	
  5071                           ; 2 bytes @ 0x0
  5072                           
  5073  0070                     fill_osr_temp_settings@settings:	
  5074                           ; 2 bytes @ 0x0
  5075                           
  5076  0070                     TMR0_SetInterruptHandler@InterruptHandler:	
  5077                           ; 2 bytes @ 0x0
  5078                           
  5079  0070                     ___awdiv@divisor:	
  5080                           ; 2 bytes @ 0x0
  5081                           
  5082  0070                     ___awmod@divisor:	
  5083                           ; 2 bytes @ 0x0
  5084                           
  5085  0070                     strlen@s:	
  5086                           ; 2 bytes @ 0x0
  5087                           
  5088  0070                     Sleep@ms:	
  5089                           ; 2 bytes @ 0x0
  5090                           
  5091  0070                     ___lmul@multiplier:	
  5092                           ; 4 bytes @ 0x0
  5093                           
  5094  0070                     ___lldiv@divisor:	
  5095                           ; 4 bytes @ 0x0
  5096                           
  5097  0070                     ___llmod@divisor:	
  5098                           ; 4 bytes @ 0x0
  5099                           
  5100                           
  5101                           ; 4 bytes @ 0x0
  5102  0070                     	ds	1
  5103  0071                     ??_are_settings_changed:	
  5104  0071                     ??_parse_device_settings:	
  5105                           ; 1 bytes @ 0x1
  5106                           
  5107  0071                     ??_bme280_parse_sensor_data:	
  5108                           ; 1 bytes @ 0x1
  5109                           
  5110  0071                     ??_parse_temp_press_calib_data:	
  5111                           ; 1 bytes @ 0x1
  5112                           
  5113  0071                     ??_parse_humidity_calib_data:	
  5114                           ; 1 bytes @ 0x1
  5115                           
  5116  0071                     interleave_reg_addr@reg_data:	
  5117                           ; 1 bytes @ 0x1
  5118                           
  5119  0071                     are_settings_changed@sub_settings:	
  5120                           ; 1 bytes @ 0x1
  5121                           
  5122  0071                     TransmitBit@b:	
  5123                           ; 1 bytes @ 0x1
  5124                           
  5125  0071                     Insert@index:	
  5126                           ; 1 bytes @ 0x1
  5127                           
  5128                           
  5129                           ; 2 bytes @ 0x1
  5130  0071                     	ds	1
  5131  0072                     ??_fill_osr_press_settings:	
  5132  0072                     ??_fill_osr_temp_settings:	
  5133                           ; 1 bytes @ 0x2
  5134                           
  5135  0072                     ??_fill_filter_settings:	
  5136                           ; 1 bytes @ 0x2
  5137                           
  5138  0072                     ??_fill_standby_settings:	
  5139                           ; 1 bytes @ 0x2
  5140                           
  5141  0072                     ??_TMR0_Initialize:	
  5142                           ; 1 bytes @ 0x2
  5143                           
  5144  0072                     ??_TMR0_SetInterruptHandler:	
  5145                           ; 1 bytes @ 0x2
  5146                           
  5147  0072                     ??_strlen:	
  5148                           ; 1 bytes @ 0x2
  5149                           
  5150  0072                     ??_InitTiming:	
  5151                           ; 1 bytes @ 0x2
  5152                           
  5153  0072                     ??_TransmitByte:	
  5154                           ; 1 bytes @ 0x2
  5155                           
  5156  0072                     interleave_reg_addr@len:	
  5157                           ; 1 bytes @ 0x2
  5158                           
  5159  0072                     parse_temp_press_calib_data@calib_data:	
  5160                           ; 1 bytes @ 0x2
  5161                           
  5162  0072                     are_settings_changed@settings_changed:	
  5163                           ; 1 bytes @ 0x2
  5164                           
  5165  0072                     null_ptr_check@rslt:	
  5166                           ; 1 bytes @ 0x2
  5167                           
  5168  0072                     ___awdiv@dividend:	
  5169                           ; 1 bytes @ 0x2
  5170                           
  5171  0072                     ___awmod@dividend:	
  5172                           ; 2 bytes @ 0x2
  5173                           
  5174                           
  5175                           ; 2 bytes @ 0x2
  5176  0072                     	ds	1
  5177  0073                     ??_interleave_reg_addr:	
  5178  0073                     ??_SYSTEM_Initialize:	
  5179                           ; 1 bytes @ 0x3
  5180                           
  5181  0073                     parse_device_settings@reg_data:	
  5182                           ; 1 bytes @ 0x3
  5183                           
  5184  0073                     parse_temp_press_calib_data@reg_data:	
  5185                           ; 1 bytes @ 0x3
  5186                           
  5187  0073                     null_ptr_check@dev:	
  5188                           ; 1 bytes @ 0x3
  5189                           
  5190  0073                     TransmitByte@byte:	
  5191                           ; 1 bytes @ 0x3
  5192                           
  5193  0073                     Insert@destLimit:	
  5194                           ; 1 bytes @ 0x3
  5195                           
  5196  0073                     strlen@a:	
  5197                           ; 2 bytes @ 0x3
  5198                           
  5199                           
  5200                           ; 2 bytes @ 0x3
  5201  0073                     	ds	1
  5202  0074                     ??_Sleep:	
  5203  0074                     ??___awdiv:	
  5204                           ; 1 bytes @ 0x4
  5205                           
  5206  0074                     ??___awmod:	
  5207                           ; 1 bytes @ 0x4
  5208                           
  5209  0074                     parse_humidity_calib_data@dig_H4_lsb:	
  5210                           ; 1 bytes @ 0x4
  5211                           
  5212  0074                     TransmitByte@i:	
  5213                           ; 2 bytes @ 0x4
  5214                           
  5215  0074                     ___lmul@multiplicand:	
  5216                           ; 2 bytes @ 0x4
  5217                           
  5218  0074                     ___lldiv@dividend:	
  5219                           ; 4 bytes @ 0x4
  5220                           
  5221  0074                     ___llmod@dividend:	
  5222                           ; 4 bytes @ 0x4
  5223                           
  5224                           
  5225                           ; 4 bytes @ 0x4
  5226  0074                     	ds	1
  5227  0075                     ?_ClearString:	
  5228  0075                     ??_Insert:	
  5229                           ; 1 bytes @ 0x5
  5230                           
  5231  0075                     ?_crc16_update:	
  5232                           ; 1 bytes @ 0x5
  5233                           
  5234  0075                     fill_filter_settings@reg_data:	
  5235                           ; 2 bytes @ 0x5
  5236                           
  5237  0075                     fill_standby_settings@reg_data:	
  5238                           ; 1 bytes @ 0x5
  5239                           
  5240  0075                     fill_osr_press_settings@reg_data:	
  5241                           ; 1 bytes @ 0x5
  5242                           
  5243  0075                     fill_osr_temp_settings@reg_data:	
  5244                           ; 1 bytes @ 0x5
  5245                           
  5246  0075                     ___awdiv@counter:	
  5247                           ; 1 bytes @ 0x5
  5248                           
  5249  0075                     ___awmod@counter:	
  5250                           ; 1 bytes @ 0x5
  5251                           
  5252  0075                     ClearString@str:	
  5253                           ; 1 bytes @ 0x5
  5254                           
  5255  0075                     crc16_update@length:	
  5256                           ; 2 bytes @ 0x5
  5257                           
  5258                           
  5259                           ; 2 bytes @ 0x5
  5260  0075                     	ds	1
  5261  0076                     ??_TransmitString:	
  5262  0076                     interleave_reg_addr@reg_addr:	
  5263                           ; 1 bytes @ 0x6
  5264                           
  5265  0076                     ___awdiv@sign:	
  5266                           ; 1 bytes @ 0x6
  5267                           
  5268  0076                     ___awmod@sign:	
  5269                           ; 1 bytes @ 0x6
  5270                           
  5271  0076                     parse_humidity_calib_data@dig_H4_msb:	
  5272                           ; 1 bytes @ 0x6
  5273                           
  5274                           
  5275                           ; 2 bytes @ 0x6
  5276  0076                     	ds	1
  5277  0077                     ??_ClearString:	
  5278  0077                     interleave_reg_addr@index:	
  5279                           ; 1 bytes @ 0x7
  5280                           
  5281  0077                     Insert@temp:	
  5282                           ; 1 bytes @ 0x7
  5283                           
  5284  0077                     crc16_update@wCrc:	
  5285                           ; 1 bytes @ 0x7
  5286                           
  5287  0077                     TransmitString@counti:	
  5288                           ; 2 bytes @ 0x7
  5289                           
  5290  0077                     ___awdiv@quotient:	
  5291                           ; 2 bytes @ 0x7
  5292                           
  5293                           
  5294                           ; 2 bytes @ 0x7
  5295  0077                     	ds	1
  5296  0078                     ??___lmul:	
  5297  0078                     ??___lldiv:	
  5298                           ; 1 bytes @ 0x8
  5299                           
  5300  0078                     ??___llmod:	
  5301                           ; 1 bytes @ 0x8
  5302                           
  5303  0078                     Insert@current:	
  5304                           ; 1 bytes @ 0x8
  5305                           
  5306  0078                     parse_humidity_calib_data@dig_H5_lsb:	
  5307                           ; 1 bytes @ 0x8
  5308                           
  5309  0078                     ClearString@counti:	
  5310                           ; 2 bytes @ 0x8
  5311                           
  5312  0078                     Sleep@start:	
  5313                           ; 2 bytes @ 0x8
  5314                           
  5315  0078                     ___lmul@product:	
  5316                           ; 4 bytes @ 0x8
  5317                           
  5318                           
  5319                           ; 4 bytes @ 0x8
  5320  0078                     	ds	1
  5321  0079                     ??_ReverseString:	
  5322  0079                     ??_crc16_update:	
  5323                           ; 1 bytes @ 0x9
  5324                           
  5325  0079                     Insert@dest:	
  5326                           ; 1 bytes @ 0x9
  5327                           
  5328  0079                     ___llmod@counter:	
  5329                           ; 1 bytes @ 0x9
  5330                           
  5331  0079                     TransmitString@i:	
  5332                           ; 1 bytes @ 0x9
  5333                           
  5334  0079                     ___lldiv@quotient:	
  5335                           ; 2 bytes @ 0x9
  5336                           
  5337                           
  5338                           ; 4 bytes @ 0x9
  5339  0079                     	ds	1
  5340  007A                     ??_InsertString:	
  5341  007A                     parse_humidity_calib_data@dig_H5_msb:	
  5342                           ; 1 bytes @ 0xA
  5343                           
  5344  007A                     ClearString@i:	
  5345                           ; 2 bytes @ 0xA
  5346                           
  5347                           
  5348                           ; 2 bytes @ 0xA
  5349  007A                     	ds	1
  5350  007B                     ?_IntToString:	
  5351  007B                     TransmitString@message:	
  5352                           ; 1 bytes @ 0xB
  5353                           
  5354  007B                     IntToString@n:	
  5355                           ; 1 bytes @ 0xB
  5356                           
  5357                           
  5358                           ; 2 bytes @ 0xB
  5359  007B                     	ds	1
  5360  007C                     ??_DebugAlert:	
  5361  007C                     ??_ClearMessages:	
  5362                           ; 1 bytes @ 0xC
  5363                           
  5364  007C                     ??___aldiv:	
  5365                           ; 1 bytes @ 0xC
  5366                           
  5367  007C                     parse_humidity_calib_data@calib_data:	
  5368                           ; 1 bytes @ 0xC
  5369                           
  5370  007C                     crc16_update@pData:	
  5371                           ; 1 bytes @ 0xC
  5372                           
  5373                           
  5374                           ; 1 bytes @ 0xC
  5375  007C                     	ds	1
  5376  007D                     ??_I2C_UserAlert:	
  5377  007D                     ??_I2C_WriteByte:	
  5378                           ; 1 bytes @ 0xD
  5379                           
  5380  007D                     ??_I2C_ReadByte:	
  5381                           ; 1 bytes @ 0xD
  5382                           
  5383  007D                     ??_I2C_Stop:	
  5384                           ; 1 bytes @ 0xD
  5385                           
  5386  007D                     parse_humidity_calib_data@reg_data:	
  5387                           ; 1 bytes @ 0xD
  5388                           
  5389  007D                     IntToString@dest:	
  5390                           ; 1 bytes @ 0xD
  5391                           
  5392  007D                     I2C_WriteByte@data:	
  5393                           ; 1 bytes @ 0xD
  5394                           
  5395  007D                     crc16_update@i:	
  5396                           ; 1 bytes @ 0xD
  5397                           
  5398  007D                     ___lldiv@counter:	
  5399                           ; 1 bytes @ 0xD
  5400                           
  5401                           
  5402                           ; 1 bytes @ 0xD
  5403  007D                     	ds	1
  5404                           
  5405                           	psect	cstackBANK0
  5406  0020                     __pcstackBANK0:	
  5407  0020                     ?_DebugAlert:	
  5408  0020                     ?_crc16:	
  5409                           ; 1 bytes @ 0x0
  5410                           
  5411  0020                     ?_InsertString:	
  5412                           ; 2 bytes @ 0x0
  5413                           
  5414  0020                     ?___aldiv:	
  5415                           ; 2 bytes @ 0x0
  5416                           
  5417  0020                     InsertString@src:	
  5418                           ; 4 bytes @ 0x0
  5419                           
  5420  0020                     ReverseString@halfway:	
  5421                           ; 2 bytes @ 0x0
  5422                           
  5423  0020                     crc16@segments:	
  5424                           ; 2 bytes @ 0x0
  5425                           
  5426  0020                     DebugAlert@delay_high:	
  5427                           ; 2 bytes @ 0x0
  5428                           
  5429  0020                     bme280_parse_sensor_data@data_xlsb:	
  5430                           ; 2 bytes @ 0x0
  5431                           
  5432  0020                     ___aldiv@divisor:	
  5433                           ; 4 bytes @ 0x0
  5434                           
  5435                           
  5436                           ; 4 bytes @ 0x0
  5437  0020                     	ds	2
  5438  0022                     ??_crc16:	
  5439  0022                     ReverseString@temp:	
  5440                           ; 1 bytes @ 0x2
  5441                           
  5442  0022                     InsertString@index:	
  5443                           ; 1 bytes @ 0x2
  5444                           
  5445  0022                     DebugAlert@delay_low:	
  5446                           ; 2 bytes @ 0x2
  5447                           
  5448                           
  5449                           ; 2 bytes @ 0x2
  5450  0022                     	ds	1
  5451  0023                     ReverseString@opposite:	
  5452                           
  5453                           ; 1 bytes @ 0x3
  5454  0023                     	ds	1
  5455  0024                     DebugAlert@num_flashes:	
  5456  0024                     InsertString@destLimit:	
  5457                           ; 1 bytes @ 0x4
  5458                           
  5459  0024                     ReverseString@counti:	
  5460                           ; 2 bytes @ 0x4
  5461                           
  5462  0024                     crc16@crc:	
  5463                           ; 2 bytes @ 0x4
  5464                           
  5465  0024                     bme280_parse_sensor_data@data_lsb:	
  5466                           ; 2 bytes @ 0x4
  5467                           
  5468  0024                     ___aldiv@dividend:	
  5469                           ; 4 bytes @ 0x4
  5470                           
  5471                           
  5472                           ; 4 bytes @ 0x4
  5473  0024                     	ds	1
  5474  0025                     DebugAlert@i:	
  5475                           
  5476                           ; 2 bytes @ 0x5
  5477  0025                     	ds	1
  5478  0026                     crc16@data:	
  5479  0026                     InsertString@counti:	
  5480                           ; 1 bytes @ 0x6
  5481                           
  5482  0026                     ReverseString@i:	
  5483                           ; 2 bytes @ 0x6
  5484                           
  5485                           
  5486                           ; 2 bytes @ 0x6
  5487  0026                     	ds	1
  5488  0027                     ??_I2C_Wait_SSPIF:	
  5489  0027                     crc16@i:	
  5490                           ; 1 bytes @ 0x7
  5491                           
  5492                           
  5493                           ; 2 bytes @ 0x7
  5494  0027                     	ds	1
  5495  0028                     ReverseString@str:	
  5496  0028                     ___aldiv@counter:	
  5497                           ; 1 bytes @ 0x8
  5498                           
  5499  0028                     InsertString@i:	
  5500                           ; 1 bytes @ 0x8
  5501                           
  5502  0028                     bme280_parse_sensor_data@data_msb:	
  5503                           ; 2 bytes @ 0x8
  5504                           
  5505                           
  5506                           ; 4 bytes @ 0x8
  5507  0028                     	ds	1
  5508  0029                     ?_UIntToHexString:	
  5509  0029                     ??_IntToString:	
  5510                           ; 1 bytes @ 0x9
  5511                           
  5512  0029                     ?_UIntToString:	
  5513                           ; 1 bytes @ 0x9
  5514                           
  5515  0029                     ___aldiv@sign:	
  5516                           ; 1 bytes @ 0x9
  5517                           
  5518  0029                     UIntToHexString@n:	
  5519                           ; 1 bytes @ 0x9
  5520                           
  5521  0029                     UIntToString@n:	
  5522                           ; 4 bytes @ 0x9
  5523                           
  5524                           
  5525                           ; 4 bytes @ 0x9
  5526  0029                     	ds	1
  5527  002A                     InsertString@dest:	
  5528  002A                     ___aldiv@quotient:	
  5529                           ; 1 bytes @ 0xA
  5530                           
  5531                           
  5532                           ; 4 bytes @ 0xA
  5533  002A                     	ds	1
  5534  002B                     ?_WriteEnvSensor:	
  5535  002B                     IntToString@sign:	
  5536                           ; 1 bytes @ 0xB
  5537                           
  5538  002B                     I2C_ReadByte@ackbit:	
  5539                           ; 1 bytes @ 0xB
  5540                           
  5541  002B                     WriteEnvSensor@dev_id:	
  5542                           ; 1 bytes @ 0xB
  5543                           
  5544                           
  5545                           ; 1 bytes @ 0xB
  5546  002B                     	ds	1
  5547  002C                     bme280_parse_sensor_data@reg_data:	
  5548  002C                     I2C_ReadByte@rcvdata:	
  5549                           ; 1 bytes @ 0xC
  5550                           
  5551  002C                     WriteEnvSensor@reg_addr:	
  5552                           ; 1 bytes @ 0xC
  5553                           
  5554  002C                     IntToString@i:	
  5555                           ; 1 bytes @ 0xC
  5556                           
  5557                           
  5558                           ; 2 bytes @ 0xC
  5559  002C                     	ds	1
  5560  002D                     ?_ReadEnvSensor:	
  5561  002D                     UIntToHexString@dest:	
  5562                           ; 1 bytes @ 0xD
  5563                           
  5564  002D                     UIntToString@dest:	
  5565                           ; 1 bytes @ 0xD
  5566                           
  5567  002D                     ReadEnvSensor@dev_id:	
  5568                           ; 1 bytes @ 0xD
  5569                           
  5570  002D                     WriteEnvSensor@reg_data:	
  5571                           ; 1 bytes @ 0xD
  5572                           
  5573                           
  5574                           ; 1 bytes @ 0xD
  5575  002D                     	ds	1
  5576  002E                     ??_UIntToHexString:	
  5577  002E                     ??_UIntToString:	
  5578                           ; 1 bytes @ 0xE
  5579                           
  5580  002E                     ?_compensate_temperature:	
  5581                           ; 1 bytes @ 0xE
  5582                           
  5583  002E                     ?_compensate_pressure:	
  5584                           ; 4 bytes @ 0xE
  5585                           
  5586  002E                     ?_compensate_humidity:	
  5587                           ; 4 bytes @ 0xE
  5588                           
  5589  002E                     compensate_temperature@calib_data:	
  5590                           ; 4 bytes @ 0xE
  5591                           
  5592  002E                     compensate_pressure@calib_data:	
  5593                           ; 1 bytes @ 0xE
  5594                           
  5595  002E                     compensate_humidity@calib_data:	
  5596                           ; 1 bytes @ 0xE
  5597                           
  5598  002E                     ReadEnvSensor@reg_addr:	
  5599                           ; 1 bytes @ 0xE
  5600                           
  5601  002E                     WriteEnvSensor@len:	
  5602                           ; 1 bytes @ 0xE
  5603                           
  5604                           
  5605                           ; 2 bytes @ 0xE
  5606  002E                     	ds	1
  5607  002F                     ReadEnvSensor@reg_data:	
  5608                           
  5609                           ; 1 bytes @ 0xF
  5610  002F                     	ds	1
  5611  0030                     ??_WriteEnvSensor:	
  5612  0030                     UIntToString@i:	
  5613                           ; 1 bytes @ 0x10
  5614                           
  5615  0030                     ReadEnvSensor@len:	
  5616                           ; 2 bytes @ 0x10
  5617                           
  5618  0030                     _UIntToHexString$1373:	
  5619                           ; 2 bytes @ 0x10
  5620                           
  5621                           
  5622                           ; 4 bytes @ 0x10
  5623  0030                     	ds	1
  5624  0031                     WriteEnvSensor@rslt:	
  5625                           
  5626                           ; 1 bytes @ 0x11
  5627  0031                     	ds	1
  5628  0032                     ??_compensate_temperature:	
  5629  0032                     ??_compensate_pressure:	
  5630                           ; 1 bytes @ 0x12
  5631                           
  5632  0032                     ??_compensate_humidity:	
  5633                           ; 1 bytes @ 0x12
  5634                           
  5635  0032                     ??_ReadEnvSensor:	
  5636                           ; 1 bytes @ 0x12
  5637                           
  5638  0032                     WriteEnvSensor@i:	
  5639                           ; 1 bytes @ 0x12
  5640                           
  5641                           
  5642                           ; 2 bytes @ 0x12
  5643  0032                     	ds	2
  5644  0034                     ?_bme280_set_regs:	
  5645  0034                     bme280_set_regs@reg_data:	
  5646                           ; 1 bytes @ 0x14
  5647                           
  5648  0034                     ReadEnvSensor@rslt:	
  5649                           ; 1 bytes @ 0x14
  5650                           
  5651  0034                     UIntToHexString@remainder:	
  5652                           ; 1 bytes @ 0x14
  5653                           
  5654                           
  5655                           ; 4 bytes @ 0x14
  5656  0034                     	ds	1
  5657  0035                     bme280_set_regs@len:	
  5658  0035                     ReadEnvSensor@i:	
  5659                           ; 1 bytes @ 0x15
  5660                           
  5661                           
  5662                           ; 2 bytes @ 0x15
  5663  0035                     	ds	1
  5664  0036                     bme280_set_regs@dev:	
  5665                           
  5666                           ; 1 bytes @ 0x16
  5667  0036                     	ds	1
  5668  0037                     ?_bme280_get_regs:	
  5669  0037                     ??_bme280_set_regs:	
  5670                           ; 1 bytes @ 0x17
  5671                           
  5672  0037                     bme280_get_regs@reg_data:	
  5673                           ; 1 bytes @ 0x17
  5674                           
  5675                           
  5676                           ; 1 bytes @ 0x17
  5677  0037                     	ds	1
  5678  0038                     bme280_get_regs@len:	
  5679  0038                     UIntToHexString@i:	
  5680                           ; 2 bytes @ 0x18
  5681                           
  5682                           
  5683                           ; 4 bytes @ 0x18
  5684  0038                     	ds	2
  5685  003A                     bme280_get_regs@dev:	
  5686  003A                     _compensate_humidity$2273:	
  5687                           ; 1 bytes @ 0x1A
  5688                           
  5689  003A                     bme280_set_regs@temp_buff:	
  5690                           ; 4 bytes @ 0x1A
  5691                           
  5692                           
  5693                           ; 20 bytes @ 0x1A
  5694  003A                     	ds	1
  5695  003B                     ??_bme280_get_regs:	
  5696                           
  5697                           ; 1 bytes @ 0x1B
  5698  003B                     	ds	1
  5699  003C                     _compensate_temperature$2269:	
  5700                           
  5701                           ; 4 bytes @ 0x1C
  5702  003C                     	ds	2
  5703  003E                     bme280_get_regs@reg_addr:	
  5704  003E                     compensate_humidity@uncomp_data:	
  5705                           ; 1 bytes @ 0x1E
  5706                           
  5707                           
  5708                           ; 1 bytes @ 0x1E
  5709  003E                     	ds	1
  5710  003F                     ?_get_calib_data:	
  5711  003F                     bme280_get_regs@rslt:	
  5712                           ; 1 bytes @ 0x1F
  5713                           
  5714                           
  5715                           ; 1 bytes @ 0x1F
  5716  003F                     	ds	1
  5717  0040                     ??_get_calib_data:	
  5718  0040                     ?_bme280_get_sensor_mode:	
  5719                           ; 1 bytes @ 0x20
  5720                           
  5721  0040                     bme280_get_sensor_mode@dev:	
  5722                           ; 1 bytes @ 0x20
  5723                           
  5724                           
  5725                           ; 1 bytes @ 0x20
  5726  0040                     	ds	1
  5727  0041                     ??_bme280_get_sensor_mode:	
  5728                           
  5729                           ; 1 bytes @ 0x21
  5730  0041                     	ds	2
  5731  0043                     compensate_humidity@humidity:	
  5732  0043                     get_calib_data@calib_data:	
  5733                           ; 4 bytes @ 0x23
  5734                           
  5735                           
  5736                           ; 26 bytes @ 0x23
  5737  0043                     	ds	1
  5738  0044                     bme280_get_sensor_mode@rslt:	
  5739  0044                     compensate_temperature@temperature_max:	
  5740                           ; 1 bytes @ 0x24
  5741                           
  5742                           
  5743                           ; 4 bytes @ 0x24
  5744  0044                     	ds	1
  5745  0045                     bme280_get_sensor_mode@sensor_mode:	
  5746                           
  5747                           ; 1 bytes @ 0x25
  5748  0045                     	ds	2
  5749  0047                     compensate_humidity@var1:	
  5750                           
  5751                           ; 4 bytes @ 0x27
  5752  0047                     	ds	1
  5753  0048                     compensate_temperature@var1:	
  5754                           
  5755                           ; 4 bytes @ 0x28
  5756  0048                     	ds	3
  5757  004B                     compensate_humidity@var2:	
  5758                           
  5759                           ; 4 bytes @ 0x2B
  5760  004B                     	ds	1
  5761  004C                     compensate_temperature@uncomp_data:	
  5762                           
  5763                           ; 1 bytes @ 0x2C
  5764  004C                     	ds	1
  5765  004D                     compensate_temperature@var2:	
  5766                           
  5767                           ; 4 bytes @ 0x2D
  5768  004D                     	ds	1
  5769  004E                     bme280_set_regs@temp_len:	
  5770                           
  5771                           ; 2 bytes @ 0x2E
  5772  004E                     	ds	1
  5773  004F                     compensate_humidity@var4:	
  5774                           
  5775                           ; 4 bytes @ 0x2F
  5776  004F                     	ds	1
  5777  0050                     bme280_set_regs@reg_addr_cnt:	
  5778                           
  5779                           ; 1 bytes @ 0x30
  5780  0050                     	ds	1
  5781  0051                     bme280_set_regs@rslt:	
  5782  0051                     compensate_temperature@temperature:	
  5783                           ; 1 bytes @ 0x31
  5784                           
  5785                           
  5786                           ; 4 bytes @ 0x31
  5787  0051                     	ds	1
  5788  0052                     ?_bme280_soft_reset:	
  5789  0052                     bme280_set_regs@reg_addr:	
  5790                           ; 1 bytes @ 0x32
  5791                           
  5792                           
  5793                           ; 1 bytes @ 0x32
  5794  0052                     	ds	1
  5795  0053                     ??_bme280_soft_reset:	
  5796  0053                     ?_set_filter_standby_settings:	
  5797                           ; 1 bytes @ 0x33
  5798                           
  5799  0053                     ?_write_power_mode:	
  5800                           ; 1 bytes @ 0x33
  5801                           
  5802  0053                     ?_set_osr_humidity_settings:	
  5803                           ; 1 bytes @ 0x33
  5804                           
  5805  0053                     ?_set_osr_press_temp_settings:	
  5806                           ; 1 bytes @ 0x33
  5807                           
  5808  0053                     write_power_mode@dev:	
  5809                           ; 1 bytes @ 0x33
  5810                           
  5811  0053                     set_osr_humidity_settings@settings:	
  5812                           ; 1 bytes @ 0x33
  5813                           
  5814  0053                     set_osr_press_temp_settings@settings:	
  5815                           ; 2 bytes @ 0x33
  5816                           
  5817  0053                     set_filter_standby_settings@settings:	
  5818                           ; 2 bytes @ 0x33
  5819                           
  5820  0053                     compensate_humidity@var5:	
  5821                           ; 2 bytes @ 0x33
  5822                           
  5823                           
  5824                           ; 4 bytes @ 0x33
  5825  0053                     	ds	1
  5826  0054                     ??_write_power_mode:	
  5827                           
  5828                           ; 1 bytes @ 0x34
  5829  0054                     	ds	1
  5830  0055                     set_osr_humidity_settings@dev:	
  5831  0055                     set_osr_press_temp_settings@dev:	
  5832                           ; 1 bytes @ 0x35
  5833                           
  5834  0055                     set_filter_standby_settings@dev:	
  5835                           ; 1 bytes @ 0x35
  5836                           
  5837                           
  5838                           ; 1 bytes @ 0x35
  5839  0055                     	ds	1
  5840  0056                     ??_set_filter_standby_settings:	
  5841  0056                     ??_set_osr_humidity_settings:	
  5842                           ; 1 bytes @ 0x36
  5843                           
  5844  0056                     ??_set_osr_press_temp_settings:	
  5845                           ; 1 bytes @ 0x36
  5846                           
  5847  0056                     bme280_soft_reset@soft_rst_cmd:	
  5848                           ; 1 bytes @ 0x36
  5849                           
  5850                           
  5851                           ; 1 bytes @ 0x36
  5852  0056                     	ds	1
  5853  0057                     bme280_soft_reset@rslt:	
  5854  0057                     write_power_mode@sensor_mode:	
  5855                           ; 1 bytes @ 0x37
  5856                           
  5857  0057                     compensate_humidity@var3:	
  5858                           ; 1 bytes @ 0x37
  5859                           
  5860                           
  5861                           ; 4 bytes @ 0x37
  5862  0057                     	ds	1
  5863  0058                     bme280_soft_reset@reg_addr:	
  5864  0058                     write_power_mode@rslt:	
  5865                           ; 1 bytes @ 0x38
  5866                           
  5867                           
  5868                           ; 1 bytes @ 0x38
  5869  0058                     	ds	1
  5870  0059                     bme280_soft_reset@dev:	
  5871  0059                     set_osr_humidity_settings@ctrl_hum:	
  5872                           ; 1 bytes @ 0x39
  5873                           
  5874  0059                     set_osr_press_temp_settings@desired_settings:	
  5875                           ; 1 bytes @ 0x39
  5876                           
  5877  0059                     set_filter_standby_settings@desired_settings:	
  5878                           ; 1 bytes @ 0x39
  5879                           
  5880  0059                     write_power_mode@reg_addr:	
  5881                           ; 1 bytes @ 0x39
  5882                           
  5883                           
  5884                           ; 1 bytes @ 0x39
  5885  0059                     	ds	1
  5886  005A                     set_osr_humidity_settings@ctrl_meas:	
  5887  005A                     set_osr_press_temp_settings@rslt:	
  5888                           ; 1 bytes @ 0x3A
  5889                           
  5890  005A                     set_filter_standby_settings@rslt:	
  5891                           ; 1 bytes @ 0x3A
  5892                           
  5893  005A                     write_power_mode@sensor_mode_reg_val:	
  5894                           ; 1 bytes @ 0x3A
  5895                           
  5896                           
  5897                           ; 1 bytes @ 0x3A
  5898  005A                     	ds	1
  5899  005B                     ?_bme280_compensate_data:	
  5900  005B                     bme280_compensate_data@uncomp_data:	
  5901                           ; 1 bytes @ 0x3B
  5902                           
  5903  005B                     set_osr_humidity_settings@rslt:	
  5904                           ; 1 bytes @ 0x3B
  5905                           
  5906  005B                     set_osr_press_temp_settings@reg_addr:	
  5907                           ; 1 bytes @ 0x3B
  5908                           
  5909  005B                     set_filter_standby_settings@reg_addr:	
  5910                           ; 1 bytes @ 0x3B
  5911                           
  5912                           
  5913                           ; 1 bytes @ 0x3B
  5914  005B                     	ds	1
  5915  005C                     bme280_compensate_data@comp_data:	
  5916  005C                     set_osr_humidity_settings@reg_addr:	
  5917                           ; 1 bytes @ 0x3C
  5918                           
  5919  005C                     set_osr_press_temp_settings@reg_data:	
  5920                           ; 1 bytes @ 0x3C
  5921                           
  5922  005C                     set_filter_standby_settings@reg_data:	
  5923                           ; 1 bytes @ 0x3C
  5924                           
  5925                           
  5926                           ; 1 bytes @ 0x3C
  5927  005C                     	ds	1
  5928  005D                     ?_set_osr_settings:	
  5929  005D                     bme280_compensate_data@calib_data:	
  5930                           ; 1 bytes @ 0x3D
  5931                           
  5932  005D                     set_osr_settings@settings:	
  5933                           ; 1 bytes @ 0x3D
  5934                           
  5935                           
  5936                           ; 2 bytes @ 0x3D
  5937  005D                     	ds	1
  5938  005E                     ??_bme280_compensate_data:	
  5939  005E                     get_calib_data@rslt:	
  5940                           ; 1 bytes @ 0x3E
  5941                           
  5942                           
  5943                           ; 1 bytes @ 0x3E
  5944  005E                     	ds	1
  5945  005F                     ?_bme280_init:	
  5946  005F                     bme280_compensate_data@rslt:	
  5947                           ; 1 bytes @ 0x3F
  5948                           
  5949  005F                     set_osr_settings@dev:	
  5950                           ; 1 bytes @ 0x3F
  5951                           
  5952  005F                     get_calib_data@dev:	
  5953                           ; 1 bytes @ 0x3F
  5954                           
  5955                           
  5956                           ; 1 bytes @ 0x3F
  5957  005F                     	ds	1
  5958  0060                     ??_set_osr_settings:	
  5959  0060                     ??_bme280_init:	
  5960                           ; 1 bytes @ 0x40
  5961                           
  5962  0060                     bme280_compensate_data@sensor_comp:	
  5963                           ; 1 bytes @ 0x40
  5964                           
  5965                           
  5966                           ; 1 bytes @ 0x40
  5967  0060                     	ds	1
  5968  0061                     ?_bme280_get_sensor_data:	
  5969  0061                     bme280_get_sensor_data@comp_data:	
  5970                           ; 1 bytes @ 0x41
  5971                           
  5972                           
  5973                           ; 1 bytes @ 0x41
  5974  0061                     	ds	1
  5975  0062                     bme280_get_sensor_data@dev:	
  5976  0062                     set_osr_settings@rslt:	
  5977                           ; 1 bytes @ 0x42
  5978                           
  5979                           
  5980                           ; 1 bytes @ 0x42
  5981  0062                     	ds	1
  5982  0063                     ??_bme280_get_sensor_data:	
  5983  0063                     bme280_init@try_count:	
  5984                           ; 1 bytes @ 0x43
  5985                           
  5986  0063                     set_osr_settings@desired_settings:	
  5987                           ; 1 bytes @ 0x43
  5988                           
  5989                           
  5990                           ; 1 bytes @ 0x43
  5991  0063                     	ds	1
  5992  0064                     ?_reload_device_settings:	
  5993  0064                     bme280_init@chip_id:	
  5994                           ; 1 bytes @ 0x44
  5995                           
  5996  0064                     reload_device_settings@dev:	
  5997                           ; 1 bytes @ 0x44
  5998                           
  5999                           
  6000                           ; 1 bytes @ 0x44
  6001  0064                     	ds	1
  6002  0065                     ??_reload_device_settings:	
  6003  0065                     bme280_init@rslt:	
  6004                           ; 1 bytes @ 0x45
  6005                           
  6006                           
  6007                           ; 1 bytes @ 0x45
  6008  0065                     	ds	1
  6009  0066                     bme280_init@dev:	
  6010                           
  6011                           ; 1 bytes @ 0x46
  6012  0066                     	ds	1
  6013  0067                     reload_device_settings@settings:	
  6014                           
  6015                           ; 1 bytes @ 0x47
  6016  0067                     	ds	1
  6017  0068                     ?_put_device_to_sleep:	
  6018  0068                     reload_device_settings@rslt:	
  6019                           ; 1 bytes @ 0x48
  6020                           
  6021                           
  6022                           ; 1 bytes @ 0x48
  6023  0068                     	ds	1
  6024  0069                     ??_put_device_to_sleep:	
  6025                           
  6026                           ; 1 bytes @ 0x49
  6027  0069                     	ds	3
  6028  006C                     ?_bme280_set_sensor_settings:	
  6029  006C                     ?_bme280_set_sensor_mode:	
  6030                           ; 1 bytes @ 0x4C
  6031                           
  6032  006C                     bme280_set_sensor_settings@dev:	
  6033                           ; 1 bytes @ 0x4C
  6034                           
  6035  006C                     bme280_set_sensor_mode@dev:	
  6036                           ; 1 bytes @ 0x4C
  6037                           
  6038                           
  6039                           ; 1 bytes @ 0x4C
  6040  006C                     	ds	1
  6041  006D                     ??_bme280_set_sensor_settings:	
  6042  006D                     ??_bme280_set_sensor_mode:	
  6043                           ; 1 bytes @ 0x4D
  6044                           
  6045                           
  6046                           ; 1 bytes @ 0x4D
  6047  006D                     	ds	2
  6048                           
  6049                           	psect	maintext
  6050  058B                     __pmaintext:	
  6051 ;;
  6052 ;;Main: autosize = 0, tempsize = 5, incstack = 0, save=0
  6053 ;;
  6054 ;; *************** function _main *****************
  6055 ;; Defined at:
  6056 ;;		line 616 in file "main.c"
  6057 ;; Parameters:    Size  Location     Type
  6058 ;;		None
  6059 ;; Auto vars:     Size  Location     Type
  6060 ;;  i               2   18[BANK2 ] int 
  6061 ;;  convertedNum   16    0[BANK2 ] unsigned char [16]
  6062 ;;  sensor_data    12   20[BANK2 ] struct bme280_data
  6063 ;;  index           2   32[BANK2 ] int 
  6064 ;;  end             2   16[BANK2 ] int 
  6065 ;; Return value:  Size  Location     Type
  6066 ;;                  1    wreg      void 
  6067 ;; Registers used:
  6068 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6069 ;; Tracked objects:
  6070 ;;		On entry : B1F/0
  6071 ;;		On exit  : 0/0
  6072 ;;		Unchanged: 0/0
  6073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6074 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6075 ;;      Locals:         0       0       0      34       0       0       0       0       0       0       0       0       
      +0       0
  6076 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  6077 ;;      Totals:         0       0       5      34       0       0       0       0       0       0       0       0       
      +0       0
  6078 ;;Total ram usage:       39 bytes
  6079 ;; Hardware stack levels required when called:   17
  6080 ;; This function calls:
  6081 ;;		_BME280_Init
  6082 ;;		_ClearMessages
  6083 ;;		_ClearString
  6084 ;;		_InitTiming
  6085 ;;		_Insert
  6086 ;;		_InsertString
  6087 ;;		_IntToString
  6088 ;;		_SYSTEM_Initialize
  6089 ;;		_TransmitString
  6090 ;;		_UIntToHexString
  6091 ;;		_UIntToString
  6092 ;;		_bme280_get_sensor_data
  6093 ;;		_crc16
  6094 ;;		_strlen
  6095 ;; This function is called by:
  6096 ;;		Startup code after reset
  6097 ;; This function uses a non-reentrant model
  6098 ;;
  6099                           
  6100                           
  6101                           ;psect for function _main
  6102  058B                     _main:	
  6103                           
  6104                           ;main.c: 619:     SYSTEM_Initialize();
  6105                           
  6106                           ;incstack = 0
  6107 ;; hardware stack exceeded
  6108                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6109  058B  319B  23AE  3185   	fcall	_SYSTEM_Initialize
  6110                           
  6111                           ;main.c: 620:     InitTiming();
  6112  058E  319B  2386  3185   	fcall	_InitTiming
  6113                           
  6114                           ;main.c: 623:     BME280_Init();
  6115  0591  3195  25B8  3185   	fcall	_BME280_Init
  6116                           
  6117                           ;main.c: 625:     ClearMessages();
  6118  0594  3190  2001  3185   	fcall	_ClearMessages
  6119  0597                     l4542:	
  6120                           
  6121                           ;main.c: 639:         {;main.c: 641:             struct bme280_data sensor_data;;main.c:
      +                           642:             bme280_get_sensor_data(0x07, &sensor_data, &EnvSensor);
  6122  0597  3034               	movlw	(low (main@sensor_data| (0+256)))& (0+255)
  6123  0598  0021               	movlb	1	; select bank1
  6124  0599  00E3               	movwf	??_main^(0+128)
  6125  059A  0863               	movf	??_main^(0+128),w
  6126  059B  0020               	movlb	0	; select bank0
  6127  059C  00E1               	movwf	bme280_get_sensor_data@comp_data
  6128  059D  30BA               	movlw	(low (_EnvSensor| (0+256)))& (0+255)
  6129  059E  0021               	movlb	1	; select bank1
  6130  059F  00E4               	movwf	(??_main+1)^(0+128)
  6131  05A0  0864               	movf	(??_main+1)^(0+128),w
  6132  05A1  0020               	movlb	0	; select bank0
  6133  05A2  00E2               	movwf	bme280_get_sensor_data@dev
  6134  05A3  3007               	movlw	7
  6135  05A4  3193  23C1  3185   	fcall	_bme280_get_sensor_data
  6136                           
  6137                           ;main.c: 645:             ClearMessages();
  6138  05A7  3190  2001  3185   	fcall	_ClearMessages
  6139                           
  6140                           ;main.c: 648:             char convertedNumber[16];;main.c: 649:             convertedNu
      +                          mber[15] = '\0';
  6141  05AA  0022               	movlb	2	; select bank2
  6142  05AB  01AF               	clrf	(main@convertedNumber^(0+256)+15)
  6143                           
  6144                           ;main.c: 650:             ClearString(convertedNumber);
  6145  05AC  3020               	movlw	low main@convertedNumber
  6146  05AD  00F5               	movwf	ClearString@str
  6147  05AE  3001               	movlw	high main@convertedNumber
  6148  05AF  00F6               	movwf	ClearString@str+1
  6149  05B0  319C  24FF  3185   	fcall	_ClearString
  6150                           
  6151                           ;main.c: 652:             IntToString(sensor_data.temperature, convertedNumber);
  6152  05B3  0022               	movlb	2	; select bank2
  6153  05B4  0839               	movf	((main@sensor_data+1)^(0+256)+4),w
  6154  05B5  00FC               	movwf	IntToString@n+1
  6155  05B6  0838               	movf	(main@sensor_data^(0+256)+4),w
  6156  05B7  00FB               	movwf	IntToString@n
  6157  05B8  3020               	movlw	(low (main@convertedNumber| (0+256)))& (0+255)
  6158  05B9  0021               	movlb	1	; select bank1
  6159  05BA  00E3               	movwf	??_main^(0+128)
  6160  05BB  0863               	movf	??_main^(0+128),w
  6161  05BC  00FD               	movwf	IntToString@dest
  6162  05BD  3194  24E7  3185   	fcall	_IntToString
  6163                           
  6164                           ;main.c: 653:             int index = strlen(messages[1]);
  6165  05C0  0022               	movlb	2	; select bank2
  6166  05C1  0862               	movf	(low ((_messages| (0+256)+1)))^0,w
  6167  05C2  00F0               	movwf	strlen@s
  6168  05C3  3002               	movlw	2
  6169  05C4  00F1               	movwf	strlen@s+1
  6170  05C5  319C  2419  3185   	fcall	_strlen
  6171  05C8  0871               	movf	?_strlen+1,w
  6172  05C9  0022               	movlb	2	; select bank2
  6173  05CA  00C1               	movwf	(main@index+1)^(0+256)
  6174  05CB  0870               	movf	?_strlen,w
  6175  05CC  00C0               	movwf	main@index^(0+256)
  6176                           
  6177                           ;main.c: 654:             index = InsertString(messages[1], convertedNumber, index, 70);
  6178  05CD  3020               	movlw	low main@convertedNumber
  6179  05CE  0020               	movlb	0	; select bank0
  6180  05CF  00A0               	movwf	InsertString@src
  6181  05D0  3001               	movlw	high main@convertedNumber
  6182  05D1  00A1               	movwf	InsertString@src+1
  6183  05D2  0022               	movlb	2	; select bank2
  6184  05D3  0841               	movf	(main@index+1)^(0+256),w
  6185  05D4  0020               	movlb	0	; select bank0
  6186  05D5  00A3               	movwf	InsertString@index+1
  6187  05D6  0022               	movlb	2	; select bank2
  6188  05D7  0840               	movf	main@index^(0+256),w
  6189  05D8  0020               	movlb	0	; select bank0
  6190  05D9  00A2               	movwf	InsertString@index
  6191  05DA  3046               	movlw	70
  6192  05DB  00A4               	movwf	InsertString@destLimit
  6193  05DC  3000               	movlw	0
  6194  05DD  00A5               	movwf	InsertString@destLimit+1
  6195  05DE  0022               	movlb	2	; select bank2
  6196  05DF  0862               	movf	(low ((_messages| (0+256)+1)))^0,w
  6197  05E0  3192  2276  3185   	fcall	_InsertString
  6198  05E3  0821               	movf	?_InsertString+1,w
  6199  05E4  0022               	movlb	2	; select bank2
  6200  05E5  00C1               	movwf	(main@index+1)^(0+256)
  6201  05E6  0020               	movlb	0	; select bank0
  6202  05E7  0820               	movf	?_InsertString,w
  6203  05E8  0022               	movlb	2	; select bank2
  6204  05E9  00C0               	movwf	main@index^(0+256)
  6205                           
  6206                           ;main.c: 655:             index = Insert(messages[1], ',', index, 70);
  6207  05EA  302C               	movlw	44
  6208  05EB  0021               	movlb	1	; select bank1
  6209  05EC  00E3               	movwf	??_main^(0+128)
  6210  05ED  0863               	movf	??_main^(0+128),w
  6211  05EE  00F0               	movwf	Insert@src
  6212  05EF  0022               	movlb	2	; select bank2
  6213  05F0  0841               	movf	(main@index+1)^(0+256),w
  6214  05F1  00F2               	movwf	Insert@index+1
  6215  05F2  0840               	movf	main@index^(0+256),w
  6216  05F3  00F1               	movwf	Insert@index
  6217  05F4  3046               	movlw	70
  6218  05F5  00F3               	movwf	Insert@destLimit
  6219  05F6  3000               	movlw	0
  6220  05F7  00F4               	movwf	Insert@destLimit+1
  6221  05F8  0862               	movf	(low ((_messages| (0+256)+1)))^0,w
  6222  05F9  3195  254F  3185   	fcall	_Insert
  6223  05FC  0871               	movf	?_Insert+1,w
  6224  05FD  0022               	movlb	2	; select bank2
  6225  05FE  00C1               	movwf	(main@index+1)^(0+256)
  6226  05FF  0870               	movf	?_Insert,w
  6227  0600  00C0               	movwf	main@index^(0+256)
  6228                           
  6229                           ;main.c: 656:             ClearString(convertedNumber);
  6230  0601  3020               	movlw	low main@convertedNumber
  6231  0602  00F5               	movwf	ClearString@str
  6232  0603  3001               	movlw	high main@convertedNumber
  6233  0604  00F6               	movwf	ClearString@str+1
  6234  0605  319C  24FF  3185   	fcall	_ClearString
  6235                           
  6236                           ;main.c: 658:             UIntToString(sensor_data.pressure, convertedNumber);
  6237  0608  0022               	movlb	2	; select bank2
  6238  0609  0837               	movf	(main@sensor_data+3)^(0+256),w
  6239  060A  0020               	movlb	0	; select bank0
  6240  060B  00AC               	movwf	UIntToString@n+3
  6241  060C  0022               	movlb	2	; select bank2
  6242  060D  0836               	movf	(main@sensor_data+2)^(0+256),w
  6243  060E  0020               	movlb	0	; select bank0
  6244  060F  00AB               	movwf	UIntToString@n+2
  6245  0610  0022               	movlb	2	; select bank2
  6246  0611  0835               	movf	(main@sensor_data+1)^(0+256),w
  6247  0612  0020               	movlb	0	; select bank0
  6248  0613  00AA               	movwf	UIntToString@n+1
  6249  0614  0022               	movlb	2	; select bank2
  6250  0615  0834               	movf	main@sensor_data^(0+256),w
  6251  0616  0020               	movlb	0	; select bank0
  6252  0617  00A9               	movwf	UIntToString@n
  6253  0618  3020               	movlw	(low (main@convertedNumber| (0+256)))& (0+255)
  6254  0619  0021               	movlb	1	; select bank1
  6255  061A  00E3               	movwf	??_main^(0+128)
  6256  061B  0863               	movf	??_main^(0+128),w
  6257  061C  0020               	movlb	0	; select bank0
  6258  061D  00AD               	movwf	UIntToString@dest
  6259  061E  3188  2002  3185   	fcall	_UIntToString
  6260                           
  6261                           ;main.c: 659:             index = InsertString(messages[1], convertedNumber, index, 70);
  6262  0621  3020               	movlw	low main@convertedNumber
  6263  0622  00A0               	movwf	InsertString@src
  6264  0623  3001               	movlw	high main@convertedNumber
  6265  0624  00A1               	movwf	InsertString@src+1
  6266  0625  0022               	movlb	2	; select bank2
  6267  0626  0841               	movf	(main@index+1)^(0+256),w
  6268  0627  0020               	movlb	0	; select bank0
  6269  0628  00A3               	movwf	InsertString@index+1
  6270  0629  0022               	movlb	2	; select bank2
  6271  062A  0840               	movf	main@index^(0+256),w
  6272  062B  0020               	movlb	0	; select bank0
  6273  062C  00A2               	movwf	InsertString@index
  6274  062D  3046               	movlw	70
  6275  062E  00A4               	movwf	InsertString@destLimit
  6276  062F  3000               	movlw	0
  6277  0630  00A5               	movwf	InsertString@destLimit+1
  6278  0631  0022               	movlb	2	; select bank2
  6279  0632  0862               	movf	(low ((_messages| (0+256)+1)))^0,w
  6280  0633  3192  2276  3185   	fcall	_InsertString
  6281  0636  0821               	movf	?_InsertString+1,w
  6282  0637  0022               	movlb	2	; select bank2
  6283  0638  00C1               	movwf	(main@index+1)^(0+256)
  6284  0639  0020               	movlb	0	; select bank0
  6285  063A  0820               	movf	?_InsertString,w
  6286  063B  0022               	movlb	2	; select bank2
  6287  063C  00C0               	movwf	main@index^(0+256)
  6288                           
  6289                           ;main.c: 660:             index = Insert(messages[1], ',', index, 70);
  6290  063D  302C               	movlw	44
  6291  063E  0021               	movlb	1	; select bank1
  6292  063F  00E3               	movwf	??_main^(0+128)
  6293  0640  0863               	movf	??_main^(0+128),w
  6294  0641  00F0               	movwf	Insert@src
  6295  0642  0022               	movlb	2	; select bank2
  6296  0643  0841               	movf	(main@index+1)^(0+256),w
  6297  0644  00F2               	movwf	Insert@index+1
  6298  0645  0840               	movf	main@index^(0+256),w
  6299  0646  00F1               	movwf	Insert@index
  6300  0647  3046               	movlw	70
  6301  0648  00F3               	movwf	Insert@destLimit
  6302  0649  3000               	movlw	0
  6303  064A  00F4               	movwf	Insert@destLimit+1
  6304  064B  0862               	movf	(low ((_messages| (0+256)+1)))^0,w
  6305  064C  3195  254F  3185   	fcall	_Insert
  6306  064F  0871               	movf	?_Insert+1,w
  6307  0650  0022               	movlb	2	; select bank2
  6308  0651  00C1               	movwf	(main@index+1)^(0+256)
  6309  0652  0870               	movf	?_Insert,w
  6310  0653  00C0               	movwf	main@index^(0+256)
  6311                           
  6312                           ;main.c: 661:             ClearString(convertedNumber);
  6313  0654  3020               	movlw	low main@convertedNumber
  6314  0655  00F5               	movwf	ClearString@str
  6315  0656  3001               	movlw	high main@convertedNumber
  6316  0657  00F6               	movwf	ClearString@str+1
  6317  0658  319C  24FF  3185   	fcall	_ClearString
  6318                           
  6319                           ;main.c: 663:             UIntToString(sensor_data.humidity, convertedNumber);
  6320  065B  3008               	movlw	8
  6321  065C  3E34               	addlw	(low (main@sensor_data| (0+256)))& (0+255)
  6322  065D  0086               	movwf	6
  6323  065E  3001               	movlw	1	; select bank2/3
  6324  065F  0087               	movwf	7
  6325  0660  3F40               	moviw [0]fsr1
  6326  0661  0020               	movlb	0	; select bank0
  6327  0662  00A9               	movwf	UIntToString@n
  6328  0663  3F41               	moviw [1]fsr1
  6329  0664  00AA               	movwf	UIntToString@n+1
  6330  0665  3F42               	moviw [2]fsr1
  6331  0666  00AB               	movwf	UIntToString@n+2
  6332  0667  3F43               	moviw [3]fsr1
  6333  0668  00AC               	movwf	UIntToString@n+3
  6334  0669  3020               	movlw	(low (main@convertedNumber| (0+256)))& (0+255)
  6335  066A  0021               	movlb	1	; select bank1
  6336  066B  00E3               	movwf	??_main^(0+128)
  6337  066C  0863               	movf	??_main^(0+128),w
  6338  066D  0020               	movlb	0	; select bank0
  6339  066E  00AD               	movwf	UIntToString@dest
  6340  066F  3188  2002  3185   	fcall	_UIntToString
  6341                           
  6342                           ;main.c: 664:             index = InsertString(messages[1], convertedNumber, index, 70);
  6343  0672  3020               	movlw	low main@convertedNumber
  6344  0673  00A0               	movwf	InsertString@src
  6345  0674  3001               	movlw	high main@convertedNumber
  6346  0675  00A1               	movwf	InsertString@src+1
  6347  0676  0022               	movlb	2	; select bank2
  6348  0677  0841               	movf	(main@index+1)^(0+256),w
  6349  0678  0020               	movlb	0	; select bank0
  6350  0679  00A3               	movwf	InsertString@index+1
  6351  067A  0022               	movlb	2	; select bank2
  6352  067B  0840               	movf	main@index^(0+256),w
  6353  067C  0020               	movlb	0	; select bank0
  6354  067D  00A2               	movwf	InsertString@index
  6355  067E  3046               	movlw	70
  6356  067F  00A4               	movwf	InsertString@destLimit
  6357  0680  3000               	movlw	0
  6358  0681  00A5               	movwf	InsertString@destLimit+1
  6359  0682  0022               	movlb	2	; select bank2
  6360  0683  0862               	movf	(low ((_messages| (0+256)+1)))^0,w
  6361  0684  3192  2276  3185   	fcall	_InsertString
  6362  0687  0821               	movf	?_InsertString+1,w
  6363  0688  0022               	movlb	2	; select bank2
  6364  0689  00C1               	movwf	(main@index+1)^(0+256)
  6365  068A  0020               	movlb	0	; select bank0
  6366  068B  0820               	movf	?_InsertString,w
  6367  068C  0022               	movlb	2	; select bank2
  6368  068D  00C0               	movwf	main@index^(0+256)
  6369                           
  6370                           ;main.c: 666:             int end = index;
  6371  068E  0841               	movf	(main@index+1)^(0+256),w
  6372  068F  00B1               	movwf	(main@end+1)^(0+256)
  6373  0690  0840               	movf	main@index^(0+256),w
  6374  0691  00B0               	movwf	main@end^(0+256)
  6375                           
  6376                           ;main.c: 669:             index = InsertString(messages[0], "Wisp-1", 0, 70);
  6377  0692  3000               	movlw	low (STR_1| (0+32768))
  6378  0693  0020               	movlb	0	; select bank0
  6379  0694  00A0               	movwf	InsertString@src
  6380  0695  3098               	movlw	high (STR_1| (0+32768))
  6381  0696  00A1               	movwf	InsertString@src+1
  6382  0697  3000               	movlw	0
  6383  0698  00A2               	movwf	InsertString@index
  6384  0699  00A3               	movwf	InsertString@index+1
  6385  069A  3046               	movlw	70
  6386  069B  00A4               	movwf	InsertString@destLimit
  6387  069C  3000               	movlw	0
  6388  069D  00A5               	movwf	InsertString@destLimit+1
  6389  069E  0022               	movlb	2	; select bank2
  6390  069F  0861               	movf	_messages^(0+256),w
  6391  06A0  3192  2276  3185   	fcall	_InsertString
  6392  06A3  0821               	movf	?_InsertString+1,w
  6393  06A4  0022               	movlb	2	; select bank2
  6394  06A5  00C1               	movwf	(main@index+1)^(0+256)
  6395  06A6  0020               	movlb	0	; select bank0
  6396  06A7  0820               	movf	?_InsertString,w
  6397  06A8  0022               	movlb	2	; select bank2
  6398  06A9  00C0               	movwf	main@index^(0+256)
  6399                           
  6400                           ;main.c: 670:             index = Insert(messages[0], ',', index, 70);
  6401  06AA  302C               	movlw	44
  6402  06AB  0021               	movlb	1	; select bank1
  6403  06AC  00E3               	movwf	??_main^(0+128)
  6404  06AD  0863               	movf	??_main^(0+128),w
  6405  06AE  00F0               	movwf	Insert@src
  6406  06AF  0022               	movlb	2	; select bank2
  6407  06B0  0841               	movf	(main@index+1)^(0+256),w
  6408  06B1  00F2               	movwf	Insert@index+1
  6409  06B2  0840               	movf	main@index^(0+256),w
  6410  06B3  00F1               	movwf	Insert@index
  6411  06B4  3046               	movlw	70
  6412  06B5  00F3               	movwf	Insert@destLimit
  6413  06B6  3000               	movlw	0
  6414  06B7  00F4               	movwf	Insert@destLimit+1
  6415  06B8  0861               	movf	_messages^(0+256),w
  6416  06B9  3195  254F  3185   	fcall	_Insert
  6417  06BC  0871               	movf	?_Insert+1,w
  6418  06BD  0022               	movlb	2	; select bank2
  6419  06BE  00C1               	movwf	(main@index+1)^(0+256)
  6420  06BF  0870               	movf	?_Insert,w
  6421  06C0  00C0               	movwf	main@index^(0+256)
  6422                           
  6423                           ;main.c: 671:             ClearString(convertedNumber);
  6424  06C1  3020               	movlw	low main@convertedNumber
  6425  06C2  00F5               	movwf	ClearString@str
  6426  06C3  3001               	movlw	high main@convertedNumber
  6427  06C4  00F6               	movwf	ClearString@str+1
  6428  06C5  319C  24FF  3185   	fcall	_ClearString
  6429                           
  6430                           ;main.c: 672:             IntToString(id, convertedNumber);
  6431  06C8  0022               	movlb	2	; select bank2
  6432  06C9  0857               	movf	(_id+1)^(0+256),w
  6433  06CA  00FC               	movwf	IntToString@n+1
  6434  06CB  0856               	movf	_id^(0+256),w
  6435  06CC  00FB               	movwf	IntToString@n
  6436  06CD  3020               	movlw	(low (main@convertedNumber| (0+256)))& (0+255)
  6437  06CE  0021               	movlb	1	; select bank1
  6438  06CF  00E3               	movwf	??_main^(0+128)
  6439  06D0  0863               	movf	??_main^(0+128),w
  6440  06D1  00FD               	movwf	IntToString@dest
  6441  06D2  3194  24E7  3185   	fcall	_IntToString
  6442                           
  6443                           ;main.c: 673:             index = InsertString(messages[0], convertedNumber, index, 70);
  6444  06D5  3020               	movlw	low main@convertedNumber
  6445  06D6  00A0               	movwf	InsertString@src
  6446  06D7  3001               	movlw	high main@convertedNumber
  6447  06D8  00A1               	movwf	InsertString@src+1
  6448  06D9  0022               	movlb	2	; select bank2
  6449  06DA  0841               	movf	(main@index+1)^(0+256),w
  6450  06DB  0020               	movlb	0	; select bank0
  6451  06DC  00A3               	movwf	InsertString@index+1
  6452  06DD  0022               	movlb	2	; select bank2
  6453  06DE  0840               	movf	main@index^(0+256),w
  6454  06DF  0020               	movlb	0	; select bank0
  6455  06E0  00A2               	movwf	InsertString@index
  6456  06E1  3046               	movlw	70
  6457  06E2  00A4               	movwf	InsertString@destLimit
  6458  06E3  3000               	movlw	0
  6459  06E4  00A5               	movwf	InsertString@destLimit+1
  6460  06E5  0022               	movlb	2	; select bank2
  6461  06E6  0861               	movf	_messages^(0+256),w
  6462  06E7  3192  2276  3185   	fcall	_InsertString
  6463  06EA  0821               	movf	?_InsertString+1,w
  6464  06EB  0022               	movlb	2	; select bank2
  6465  06EC  00C1               	movwf	(main@index+1)^(0+256)
  6466  06ED  0020               	movlb	0	; select bank0
  6467  06EE  0820               	movf	?_InsertString,w
  6468  06EF  0022               	movlb	2	; select bank2
  6469  06F0  00C0               	movwf	main@index^(0+256)
  6470                           
  6471                           ;main.c: 674:             Insert(messages[0], ',', index, 70);
  6472  06F1  302C               	movlw	44
  6473  06F2  0021               	movlb	1	; select bank1
  6474  06F3  00E3               	movwf	??_main^(0+128)
  6475  06F4  0863               	movf	??_main^(0+128),w
  6476  06F5  00F0               	movwf	Insert@src
  6477  06F6  0022               	movlb	2	; select bank2
  6478  06F7  0841               	movf	(main@index+1)^(0+256),w
  6479  06F8  00F2               	movwf	Insert@index+1
  6480  06F9  0840               	movf	main@index^(0+256),w
  6481  06FA  00F1               	movwf	Insert@index
  6482  06FB  3046               	movlw	70
  6483  06FC  00F3               	movwf	Insert@destLimit
  6484  06FD  3000               	movlw	0
  6485  06FE  00F4               	movwf	Insert@destLimit+1
  6486  06FF  0861               	movf	_messages^(0+256),w
  6487  0700  3195  254F  3185   	fcall	_Insert
  6488                           
  6489                           ;main.c: 676:             UIntToHexString(crc16(messages, 2), checksum);
  6490  0703  3002               	movlw	2
  6491  0704  0020               	movlb	0	; select bank0
  6492  0705  00A0               	movwf	crc16@segments
  6493  0706  3000               	movlw	0
  6494  0707  00A1               	movwf	crc16@segments+1
  6495  0708  3061               	movlw	(low (_messages| (0+256)))& (0+255)
  6496  0709  3191  219B  3185   	fcall	_crc16
  6497  070C  0820               	movf	?_crc16,w
  6498  070D  0021               	movlb	1	; select bank1
  6499  070E  00E3               	movwf	??_main^(0+128)
  6500  070F  0020               	movlb	0	; select bank0
  6501  0710  0821               	movf	?_crc16+1,w
  6502  0711  0021               	movlb	1	; select bank1
  6503  0712  00E4               	movwf	(??_main^(0+128)+1)
  6504  0713  01E5               	clrf	(??_main^(0+128)+2)
  6505  0714  01E6               	clrf	(??_main^(0+128)+3)
  6506  0715  0866               	movf	(??_main+3)^(0+128),w
  6507  0716  0020               	movlb	0	; select bank0
  6508  0717  00AC               	movwf	UIntToHexString@n+3
  6509  0718  0021               	movlb	1	; select bank1
  6510  0719  0865               	movf	(??_main+2)^(0+128),w
  6511  071A  0020               	movlb	0	; select bank0
  6512  071B  00AB               	movwf	UIntToHexString@n+2
  6513  071C  0021               	movlb	1	; select bank1
  6514  071D  0864               	movf	(??_main+1)^(0+128),w
  6515  071E  0020               	movlb	0	; select bank0
  6516  071F  00AA               	movwf	UIntToHexString@n+1
  6517  0720  0021               	movlb	1	; select bank1
  6518  0721  0863               	movf	??_main^(0+128),w
  6519  0722  0020               	movlb	0	; select bank0
  6520  0723  00A9               	movwf	UIntToHexString@n
  6521  0724  3058               	movlw	(low (_checksum| (0+256)))& (0+255)
  6522  0725  0021               	movlb	1	; select bank1
  6523  0726  00E7               	movwf	(??_main+4)^(0+128)
  6524  0727  0867               	movf	(??_main+4)^(0+128),w
  6525  0728  0020               	movlb	0	; select bank0
  6526  0729  00AD               	movwf	UIntToHexString@dest
  6527  072A  3197  2708  3185   	fcall	_UIntToHexString
  6528                           
  6529                           ;main.c: 679:             InsertString(messages[0], "$$", 0, 70);
  6530  072D  3007               	movlw	low (STR_2| (0+32768))
  6531  072E  00A0               	movwf	InsertString@src
  6532  072F  3098               	movlw	high (STR_2| (0+32768))
  6533  0730  00A1               	movwf	InsertString@src+1
  6534  0731  3000               	movlw	0
  6535  0732  00A2               	movwf	InsertString@index
  6536  0733  00A3               	movwf	InsertString@index+1
  6537  0734  3046               	movlw	70
  6538  0735  00A4               	movwf	InsertString@destLimit
  6539  0736  3000               	movlw	0
  6540  0737  00A5               	movwf	InsertString@destLimit+1
  6541  0738  0022               	movlb	2	; select bank2
  6542  0739  0861               	movf	_messages^(0+256),w
  6543  073A  3192  2276  3185   	fcall	_InsertString
  6544                           
  6545                           ;main.c: 681:             index = Insert(messages[1], '*', end, 70);
  6546  073D  302A               	movlw	42
  6547  073E  0021               	movlb	1	; select bank1
  6548  073F  00E3               	movwf	??_main^(0+128)
  6549  0740  0863               	movf	??_main^(0+128),w
  6550  0741  00F0               	movwf	Insert@src
  6551  0742  0022               	movlb	2	; select bank2
  6552  0743  0831               	movf	(main@end+1)^(0+256),w
  6553  0744  00F2               	movwf	Insert@index+1
  6554  0745  0830               	movf	main@end^(0+256),w
  6555  0746  00F1               	movwf	Insert@index
  6556  0747  3046               	movlw	70
  6557  0748  00F3               	movwf	Insert@destLimit
  6558  0749  3000               	movlw	0
  6559  074A  00F4               	movwf	Insert@destLimit+1
  6560  074B  0862               	movf	(low ((_messages| (0+256)+1)))^0,w
  6561  074C  3195  254F  3185   	fcall	_Insert
  6562  074F  0871               	movf	?_Insert+1,w
  6563  0750  0022               	movlb	2	; select bank2
  6564  0751  00C1               	movwf	(main@index+1)^(0+256)
  6565  0752  0870               	movf	?_Insert,w
  6566  0753  00C0               	movwf	main@index^(0+256)
  6567                           
  6568                           ;main.c: 682:             index = InsertString(messages[1], checksum, index, 70);
  6569  0754  3058               	movlw	low _checksum
  6570  0755  0020               	movlb	0	; select bank0
  6571  0756  00A0               	movwf	InsertString@src
  6572  0757  3001               	movlw	high _checksum
  6573  0758  00A1               	movwf	InsertString@src+1
  6574  0759  0022               	movlb	2	; select bank2
  6575  075A  0841               	movf	(main@index+1)^(0+256),w
  6576  075B  0020               	movlb	0	; select bank0
  6577  075C  00A3               	movwf	InsertString@index+1
  6578  075D  0022               	movlb	2	; select bank2
  6579  075E  0840               	movf	main@index^(0+256),w
  6580  075F  0020               	movlb	0	; select bank0
  6581  0760  00A2               	movwf	InsertString@index
  6582  0761  3046               	movlw	70
  6583  0762  00A4               	movwf	InsertString@destLimit
  6584  0763  3000               	movlw	0
  6585  0764  00A5               	movwf	InsertString@destLimit+1
  6586  0765  0022               	movlb	2	; select bank2
  6587  0766  0862               	movf	(low ((_messages| (0+256)+1)))^0,w
  6588  0767  3192  2276  3185   	fcall	_InsertString
  6589  076A  0821               	movf	?_InsertString+1,w
  6590  076B  0022               	movlb	2	; select bank2
  6591  076C  00C1               	movwf	(main@index+1)^(0+256)
  6592  076D  0020               	movlb	0	; select bank0
  6593  076E  0820               	movf	?_InsertString,w
  6594  076F  0022               	movlb	2	; select bank2
  6595  0770  00C0               	movwf	main@index^(0+256)
  6596                           
  6597                           ;main.c: 683:             index = Insert(messages[1], '\n', index, 70);
  6598  0771  300A               	movlw	10
  6599  0772  0021               	movlb	1	; select bank1
  6600  0773  00E3               	movwf	??_main^(0+128)
  6601  0774  0863               	movf	??_main^(0+128),w
  6602  0775  00F0               	movwf	Insert@src
  6603  0776  0022               	movlb	2	; select bank2
  6604  0777  0841               	movf	(main@index+1)^(0+256),w
  6605  0778  00F2               	movwf	Insert@index+1
  6606  0779  0840               	movf	main@index^(0+256),w
  6607  077A  00F1               	movwf	Insert@index
  6608  077B  3046               	movlw	70
  6609  077C  00F3               	movwf	Insert@destLimit
  6610  077D  3000               	movlw	0
  6611  077E  00F4               	movwf	Insert@destLimit+1
  6612  077F  0862               	movf	(low ((_messages| (0+256)+1)))^0,w
  6613  0780  3195  254F  3185   	fcall	_Insert
  6614  0783  0871               	movf	?_Insert+1,w
  6615  0784  0022               	movlb	2	; select bank2
  6616  0785  00C1               	movwf	(main@index+1)^(0+256)
  6617  0786  0870               	movf	?_Insert,w
  6618  0787  00C0               	movwf	main@index^(0+256)
  6619                           
  6620                           ;main.c: 685:             id++;
  6621  0788  3001               	movlw	1
  6622  0789  07D6               	addwf	_id^(0+256),f
  6623  078A  3000               	movlw	0
  6624  078B  3DD7               	addwfc	(_id+1)^(0+256),f
  6625  078C  150C               	bsf	12,2	;volatile
  6626                           
  6627                           ;main.c: 688:             TransmitString(messages[0]);
  6628  078D  0861               	movf	_messages^(0+256),w
  6629  078E  319D  25A0  3185   	fcall	_TransmitString
  6630                           
  6631                           ;main.c: 689:             TransmitString(messages[1]);
  6632  0791  0022               	movlb	2	; select bank2
  6633  0792  0862               	movf	(low ((_messages| (0+256)+1)))^0,w
  6634  0793  319D  25A0  3185   	fcall	_TransmitString
  6635  0796  0022               	movlb	2	; select bank2
  6636  0797  110C               	bcf	12,2	;volatile
  6637                           
  6638                           ;main.c: 699:         for (int i = 0; i < 1000; i++)
  6639  0798  01B2               	clrf	main@i^(0+256)
  6640  0799  01B3               	clrf	(main@i+1)^(0+256)
  6641  079A                     l4612:	
  6642                           
  6643                           ;main.c: 700:         {;main.c: 701:             _delay((unsigned long)((5)*(4000000/400
      +                          0.0)));
  6644  079A  3007               	movlw	7
  6645  079B  0021               	movlb	1	; select bank1
  6646  079C  00E3               	movwf	??_main^(0+128)
  6647  079D  307D               	movlw	125
  6648  079E                     u4837:	
  6649  079E  0B89               	decfsz	9,f
  6650  079F  2F9E               	goto	u4837
  6651  07A0  0BE3               	decfsz	??_main^(0+128),f
  6652  07A1  2F9E               	goto	u4837
  6653                           
  6654                           ;main.c: 702:         }
  6655  07A2  3001               	movlw	1
  6656  07A3  0022               	movlb	2	; select bank2
  6657  07A4  07B2               	addwf	main@i^(0+256),f
  6658  07A5  3000               	movlw	0
  6659  07A6  3DB3               	addwfc	(main@i+1)^(0+256),f
  6660  07A7  0833               	movf	(main@i+1)^(0+256),w
  6661  07A8  3A80               	xorlw	128
  6662  07A9  0021               	movlb	1	; select bank1
  6663  07AA  00E3               	movwf	??_main^(0+128)
  6664  07AB  3083               	movlw	131
  6665  07AC  0263               	subwf	??_main^(0+128),w
  6666  07AD  1D03               	skipz
  6667  07AE  2FB2               	goto	u4825
  6668  07AF  30E8               	movlw	232
  6669  07B0  0022               	movlb	2	; select bank2
  6670  07B1  0232               	subwf	main@i^(0+256),w
  6671  07B2                     u4825:	
  6672  07B2  1803               	btfsc	3,0
  6673  07B3  2D97               	goto	l4542
  6674  07B4  2F9A               	goto	l4612
  6675  07B5                     __end_of_main:	
  6676                           
  6677                           	psect	text1
  6678  119B                     __ptext1:	
  6679 ;; *************** function _crc16 *****************
  6680 ;; Defined at:
  6681 ;;		line 21 in file "rtty.c"
  6682 ;; Parameters:    Size  Location     Type
  6683 ;;  data            1    wreg     PTR PTR unsigned char 
  6684 ;;		 -> messages(2), 
  6685 ;;  segments        2    0[BANK0 ] int 
  6686 ;; Auto vars:     Size  Location     Type
  6687 ;;  data            1    6[BANK0 ] PTR PTR unsigned char 
  6688 ;;		 -> messages(2), 
  6689 ;;  i               2    7[BANK0 ] int 
  6690 ;;  crc             2    4[BANK0 ] unsigned short 
  6691 ;; Return value:  Size  Location     Type
  6692 ;;                  2    0[BANK0 ] unsigned short 
  6693 ;; Registers used:
  6694 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6695 ;; Tracked objects:
  6696 ;;		On entry : 1F/0
  6697 ;;		On exit  : 1F/0
  6698 ;;		Unchanged: 0/0
  6699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6700 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6701 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6702 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6703 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6704 ;;Total ram usage:        9 bytes
  6705 ;; Hardware stack levels used:    1
  6706 ;; Hardware stack levels required when called:    4
  6707 ;; This function calls:
  6708 ;;		_crc16_update
  6709 ;;		_strlen
  6710 ;; This function is called by:
  6711 ;;		_main
  6712 ;; This function uses a non-reentrant model
  6713 ;;
  6714                           
  6715                           
  6716                           ;psect for function _crc16
  6717  119B                     _crc16:	
  6718                           
  6719                           ;incstack = 0
  6720                           ; Regs used in _crc16: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6721                           ;crc16@data stored from wreg
  6722  119B  00A6               	movwf	crc16@data
  6723                           
  6724                           ;rtty.c: 21: uint16_t crc16(char** data, int segments);rtty.c: 22: {;rtty.c: 23:     uin
      +                          t16_t crc = 0xFFFF;
  6725  119C  30FF               	movlw	255
  6726  119D  00A4               	movwf	crc16@crc
  6727  119E  30FF               	movlw	255
  6728  119F  00A5               	movwf	crc16@crc+1
  6729                           
  6730                           ;rtty.c: 24:     for (int i = 0; i < segments; i++)
  6731  11A0  01A7               	clrf	crc16@i
  6732  11A1  01A8               	clrf	crc16@i+1
  6733  11A2                     l3700:	
  6734  11A2  0828               	movf	crc16@i+1,w
  6735  11A3  3A80               	xorlw	128
  6736  11A4  00A2               	movwf	??_crc16
  6737  11A5  0821               	movf	crc16@segments+1,w
  6738  11A6  3A80               	xorlw	128
  6739  11A7  0222               	subwf	??_crc16,w
  6740  11A8  1D03               	skipz
  6741  11A9  29AC               	goto	u3725
  6742  11AA  0820               	movf	crc16@segments,w
  6743  11AB  0227               	subwf	crc16@i,w
  6744  11AC                     u3725:	
  6745  11AC  1803               	btfsc	3,0
  6746  11AD  29DA               	goto	l3702
  6747                           
  6748                           ;rtty.c: 25:     {;rtty.c: 26:         crc = crc16_update(data[i], strlen(data[i]), crc)
      +                          ;
  6749  11AE  0020               	movlb	0	; select bank0
  6750  11AF  0827               	movf	crc16@i,w
  6751  11B0  0726               	addwf	crc16@data,w
  6752  11B1  00A2               	movwf	??_crc16
  6753  11B2  0822               	movf	??_crc16,w
  6754  11B3  0086               	movwf	6
  6755  11B4  3001               	movlw	1	; select bank2/3
  6756  11B5  0087               	movwf	7
  6757  11B6  0801               	movf	1,w
  6758  11B7  00F0               	movwf	strlen@s
  6759  11B8  3002               	movlw	2
  6760  11B9  00F1               	movwf	strlen@s+1
  6761  11BA  319C  2419  3191   	fcall	_strlen
  6762  11BD  0871               	movf	?_strlen+1,w
  6763  11BE  00F6               	movwf	crc16_update@length+1
  6764  11BF  0870               	movf	?_strlen,w
  6765  11C0  00F5               	movwf	crc16_update@length
  6766  11C1  0020               	movlb	0	; select bank0
  6767  11C2  0825               	movf	crc16@crc+1,w
  6768  11C3  00F8               	movwf	crc16_update@wCrc+1
  6769  11C4  0824               	movf	crc16@crc,w
  6770  11C5  00F7               	movwf	crc16_update@wCrc
  6771  11C6  0827               	movf	crc16@i,w
  6772  11C7  0726               	addwf	crc16@data,w
  6773  11C8  00A3               	movwf	??_crc16+1
  6774  11C9  0823               	movf	??_crc16+1,w
  6775  11CA  0086               	movwf	6
  6776  11CB  3001               	movlw	1	; select bank2/3
  6777  11CC  0087               	movwf	7
  6778  11CD  0801               	movf	1,w
  6779  11CE  319F  27C3  3191   	fcall	_crc16_update
  6780  11D1  0876               	movf	?_crc16_update+1,w
  6781  11D2  00A5               	movwf	crc16@crc+1
  6782  11D3  0875               	movf	?_crc16_update,w
  6783  11D4  00A4               	movwf	crc16@crc
  6784                           
  6785                           ;rtty.c: 27:     }
  6786  11D5  3001               	movlw	1
  6787  11D6  07A7               	addwf	crc16@i,f
  6788  11D7  3000               	movlw	0
  6789  11D8  3DA8               	addwfc	crc16@i+1,f
  6790  11D9  29A2               	goto	l3700
  6791  11DA                     l3702:	
  6792                           
  6793                           ;rtty.c: 28:     return crc & 0xFFFF;
  6794  11DA  0020               	movlb	0	; select bank0
  6795  11DB  0825               	movf	crc16@crc+1,w
  6796  11DC  00A1               	movwf	?_crc16+1
  6797  11DD  0824               	movf	crc16@crc,w
  6798  11DE  00A0               	movwf	?_crc16
  6799  11DF  0008               	return
  6800  11E0                     __end_of_crc16:	
  6801                           
  6802                           	psect	text2
  6803  1FC3                     __ptext2:	
  6804 ;; *************** function _crc16_update *****************
  6805 ;; Defined at:
  6806 ;;		line 10 in file "rtty.c"
  6807 ;; Parameters:    Size  Location     Type
  6808 ;;  pData           1    wreg     PTR unsigned char 
  6809 ;;		 -> message_end(73), message_start(70), 
  6810 ;;  length          2    5[COMMON] int 
  6811 ;;  wCrc            2    7[COMMON] unsigned short 
  6812 ;; Auto vars:     Size  Location     Type
  6813 ;;  pData           1   12[COMMON] PTR unsigned char 
  6814 ;;		 -> message_end(73), message_start(70), 
  6815 ;;  i               1   13[COMMON] unsigned char 
  6816 ;; Return value:  Size  Location     Type
  6817 ;;                  2    5[COMMON] unsigned short 
  6818 ;; Registers used:
  6819 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6820 ;; Tracked objects:
  6821 ;;		On entry : 1F/0
  6822 ;;		On exit  : 1F/0
  6823 ;;		Unchanged: 1F/0
  6824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6825 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6826 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6827 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6828 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6829 ;;Total ram usage:        9 bytes
  6830 ;; Hardware stack levels used:    1
  6831 ;; Hardware stack levels required when called:    3
  6832 ;; This function calls:
  6833 ;;		Nothing
  6834 ;; This function is called by:
  6835 ;;		_crc16
  6836 ;; This function uses a non-reentrant model
  6837 ;;
  6838                           
  6839                           
  6840                           ;psect for function _crc16_update
  6841  1FC3                     _crc16_update:	
  6842                           
  6843                           ;incstack = 0
  6844                           ; Regs used in _crc16_update: [wreg+fsr1l+fsr1h+status,2+status,0]
  6845                           ;crc16_update@pData stored from wreg
  6846  1FC3  00FC               	movwf	crc16_update@pData
  6847  1FC4                     l3460:	
  6848                           ;rtty.c: 10: uint16_t crc16_update(char* pData, int length, uint16_t wCrc);rtty.c: 11: {
      +                          ;rtty.c: 12:     uint8_t i;;rtty.c: 13:     while (length--) {
  6849                           
  6850                           
  6851                           ;rtty.c: 13:     while (length--) {
  6852  1FC4  30FF               	movlw	255
  6853  1FC5  07F5               	addwf	crc16_update@length,f
  6854  1FC6  30FF               	movlw	255
  6855  1FC7  3DF6               	addwfc	crc16_update@length+1,f
  6856  1FC8  0A75               	incf	crc16_update@length,w
  6857  1FC9  1903               	btfsc	3,2
  6858  1FCA  0A76               	incf	crc16_update@length+1,w
  6859  1FCB  1903               	btfsc	3,2
  6860  1FCC  2FFB               	goto	l3462
  6861                           
  6862                           ;rtty.c: 14:         wCrc ^= *(unsigned char *)pData++ << 8;
  6863  1FCD  087C               	movf	crc16_update@pData,w
  6864  1FCE  0086               	movwf	6
  6865  1FCF  3002               	movlw	2	; select bank4/5
  6866  1FD0  0087               	movwf	7
  6867  1FD1  0801               	movf	1,w
  6868  1FD2  00F9               	movwf	??_crc16_update
  6869  1FD3  01FA               	clrf	??_crc16_update+1
  6870  1FD4  0879               	movf	??_crc16_update,w
  6871  1FD5  00FA               	movwf	??_crc16_update+1
  6872  1FD6  01F9               	clrf	??_crc16_update
  6873  1FD7  0879               	movf	??_crc16_update,w
  6874  1FD8  06F7               	xorwf	crc16_update@wCrc,f
  6875  1FD9  087A               	movf	??_crc16_update+1,w
  6876  1FDA  06F8               	xorwf	crc16_update@wCrc+1,f
  6877  1FDB  3001               	movlw	1
  6878  1FDC  00F9               	movwf	??_crc16_update
  6879  1FDD  0879               	movf	??_crc16_update,w
  6880  1FDE  07FC               	addwf	crc16_update@pData,f
  6881                           
  6882                           ;rtty.c: 15:         for (i=0; i < 8; i++)
  6883  1FDF  01FD               	clrf	crc16_update@i
  6884  1FE0                     l665:	
  6885                           
  6886                           ;rtty.c: 16:             wCrc = wCrc & 0x8000 ? (wCrc << 1) ^ 0x1021 : wCrc << 1;
  6887  1FE0  1BF8               	btfsc	crc16_update@wCrc+1,7
  6888  1FE1  2FE6               	goto	l3456
  6889  1FE2  3577               	lslf	crc16_update@wCrc,w
  6890  1FE3  00F7               	movwf	crc16_update@wCrc
  6891  1FE4  0D78               	rlf	crc16_update@wCrc+1,w
  6892  1FE5  2FF1               	goto	L1
  6893  1FE6                     l3456:	
  6894  1FE6  0878               	movf	crc16_update@wCrc+1,w
  6895  1FE7  00FA               	movwf	??_crc16_update+1
  6896  1FE8  0877               	movf	crc16_update@wCrc,w
  6897  1FE9  00F9               	movwf	??_crc16_update
  6898  1FEA  35F9               	lslf	??_crc16_update,f
  6899  1FEB  0DFA               	rlf	??_crc16_update+1,f
  6900  1FEC  3021               	movlw	33
  6901  1FED  0679               	xorwf	??_crc16_update,w
  6902  1FEE  00F7               	movwf	crc16_update@wCrc
  6903  1FEF  3010               	movlw	16
  6904  1FF0  067A               	xorwf	??_crc16_update+1,w
  6905  1FF1                     L1:	
  6906  1FF1  00F8               	movwf	crc16_update@wCrc+1
  6907  1FF2  3001               	movlw	1
  6908  1FF3  00F9               	movwf	??_crc16_update
  6909  1FF4  0879               	movf	??_crc16_update,w
  6910  1FF5  07FD               	addwf	crc16_update@i,f
  6911  1FF6  3008               	movlw	8
  6912  1FF7  027D               	subwf	crc16_update@i,w
  6913  1FF8  1803               	btfsc	3,0
  6914  1FF9  2FC4               	goto	l3460
  6915  1FFA  2FE0               	goto	l665
  6916  1FFB                     l3462:	
  6917                           
  6918                           ;rtty.c: 18:     return wCrc;
  6919  1FFB  0878               	movf	crc16_update@wCrc+1,w
  6920  1FFC  00F6               	movwf	?_crc16_update+1
  6921  1FFD  0877               	movf	crc16_update@wCrc,w
  6922  1FFE  00F5               	movwf	?_crc16_update
  6923  1FFF  0008               	return
  6924  2000                     __end_of_crc16_update:	
  6925                           
  6926                           	psect	text3
  6927  13C1                     __ptext3:	
  6928 ;; *************** function _bme280_get_sensor_data *****************
  6929 ;; Defined at:
  6930 ;;		line 660 in file "BME280_driver/bme280.c"
  6931 ;; Parameters:    Size  Location     Type
  6932 ;;  sensor_comp     1    wreg     unsigned char 
  6933 ;;  comp_data       1   65[BANK0 ] PTR struct bme280_data
  6934 ;;		 -> main@sensor_data(12), 
  6935 ;;  dev             1   66[BANK0 ] PTR struct bme280_dev
  6936 ;;		 -> EnvSensor(51), 
  6937 ;; Auto vars:     Size  Location     Type
  6938 ;;  sensor_comp     1   53[BANK1 ] unsigned char 
  6939 ;;  uncomp_data    12   55[BANK1 ] struct bme280_uncomp_dat
  6940 ;;  reg_data        8   45[BANK1 ] unsigned char [8]
  6941 ;;  rslt            1   54[BANK1 ] char 
  6942 ;; Return value:  Size  Location     Type
  6943 ;;                  1    wreg      char 
  6944 ;; Registers used:
  6945 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6946 ;; Tracked objects:
  6947 ;;		On entry : 1F/0
  6948 ;;		On exit  : 1E/0
  6949 ;;		Unchanged: 0/0
  6950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6951 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6952 ;;      Locals:         0       0      22       0       0       0       0       0       0       0       0       0       
      +0       0
  6953 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6954 ;;      Totals:         0       5      22       0       0       0       0       0       0       0       0       0       
      +0       0
  6955 ;;Total ram usage:       27 bytes
  6956 ;; Hardware stack levels used:    1
  6957 ;; Hardware stack levels required when called:   11
  6958 ;; This function calls:
  6959 ;;		_bme280_compensate_data
  6960 ;;		_bme280_get_regs
  6961 ;;		_bme280_parse_sensor_data
  6962 ;;		_null_ptr_check
  6963 ;; This function is called by:
  6964 ;;		_main
  6965 ;; This function uses a non-reentrant model
  6966 ;;
  6967                           
  6968                           
  6969                           ;psect for function _bme280_get_sensor_data
  6970  13C1                     _bme280_get_sensor_data:	
  6971                           
  6972                           ;incstack = 0
  6973                           ; Regs used in _bme280_get_sensor_data: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6974                           ;bme280_get_sensor_data@sensor_comp stored from wreg
  6975  13C1  0021               	movlb	1	; select bank1
  6976  13C2  00D5               	movwf	bme280_get_sensor_data@sensor_comp^(0+128)
  6977                           
  6978                           ;BME280_driver/bme280.c: 660: int8_t bme280_get_sensor_data(uint8_t sensor_comp, struct 
      +                          bme280_data *comp_data, struct bme280_dev *dev);BME280_driver/bme280.c: 661: {;BME280_dr
      +                          iver/bme280.c: 662:     int8_t rslt;;BME280_driver/bme280.c: 667:     uint8_t reg_data[8
      +                          ] = { 0 };
  6979  13C3  30CD               	movlw	low bme280_get_sensor_data@reg_data
  6980  13C4  0086               	movwf	6
  6981  13C5  3000               	movlw	high bme280_get_sensor_data@reg_data
  6982  13C6  0087               	movwf	7
  6983  13C7  3008               	movlw	8
  6984  13C8  0020               	movlb	0	; select bank0
  6985  13C9  00E3               	movwf	??_bme280_get_sensor_data
  6986  13CA  3000               	movlw	0
  6987  13CB                     u4750:	
  6988  13CB  001E               	movwi fsr1++
  6989  13CC  0BE3               	decfsz	??_bme280_get_sensor_data,f
  6990  13CD  2BCB               	goto	u4750
  6991                           
  6992                           ;BME280_driver/bme280.c: 668:     struct bme280_uncomp_data uncomp_data = { 0 };
  6993  13CE  3042               	movlw	low bme280_get_sensor_data@F273
  6994  13CF  0086               	movwf	6
  6995  13D0  3001               	movlw	high bme280_get_sensor_data@F273
  6996  13D1  0087               	movwf	7
  6997  13D2  30D7               	movlw	low bme280_get_sensor_data@uncomp_data
  6998  13D3  0084               	movwf	4
  6999  13D4  3000               	movlw	high bme280_get_sensor_data@uncomp_data
  7000  13D5  0085               	movwf	5
  7001  13D6  300C               	movlw	12
  7002  13D7  00E3               	movwf	??_bme280_get_sensor_data
  7003  13D8                     u4760:	
  7004  13D8  0016               	moviw fsr1++
  7005  13D9  001A               	movwi fsr0++
  7006  13DA  0BE3               	decfsz	??_bme280_get_sensor_data,f
  7007  13DB  2BD8               	goto	u4760
  7008                           
  7009                           ;BME280_driver/bme280.c: 671:     rslt = null_ptr_check(dev);
  7010  13DC  0862               	movf	bme280_get_sensor_data@dev,w
  7011  13DD  319C  24DA  3193   	fcall	_null_ptr_check
  7012  13E0  00E3               	movwf	??_bme280_get_sensor_data
  7013  13E1  0863               	movf	??_bme280_get_sensor_data,w
  7014  13E2  0021               	movlb	1	; select bank1
  7015  13E3  00D6               	movwf	bme280_get_sensor_data@rslt^(0+128)
  7016                           
  7017                           ;BME280_driver/bme280.c: 672:     if ((rslt == 0) && (comp_data != ((void*)0)))
  7018  13E4  0856               	movf	bme280_get_sensor_data@rslt^(0+128),w
  7019  13E5  1D03               	btfss	3,2
  7020  13E6  0008               	return
  7021  13E7  0020               	movlb	0	; select bank0
  7022  13E8  0861               	movf	bme280_get_sensor_data@comp_data,w
  7023  13E9  1903               	btfsc	3,2
  7024  13EA  0008               	return
  7025                           
  7026                           ;BME280_driver/bme280.c: 673:     {;BME280_driver/bme280.c: 675:         rslt = bme280_g
      +                          et_regs(0xF7, reg_data, 8, dev);
  7027  13EB  30CD               	movlw	(low (bme280_get_sensor_data@reg_data| 0))& (0+255)
  7028  13EC  00E3               	movwf	??_bme280_get_sensor_data
  7029  13ED  0863               	movf	??_bme280_get_sensor_data,w
  7030  13EE  00B7               	movwf	bme280_get_regs@reg_data
  7031  13EF  3008               	movlw	8
  7032  13F0  00B8               	movwf	bme280_get_regs@len
  7033  13F1  3000               	movlw	0
  7034  13F2  00B9               	movwf	bme280_get_regs@len+1
  7035  13F3  0862               	movf	bme280_get_sensor_data@dev,w
  7036  13F4  00E4               	movwf	??_bme280_get_sensor_data+1
  7037  13F5  0864               	movf	??_bme280_get_sensor_data+1,w
  7038  13F6  00BA               	movwf	bme280_get_regs@dev
  7039  13F7  30F7               	movlw	247
  7040  13F8  3190  2050  3193   	fcall	_bme280_get_regs
  7041  13FB  00E5               	movwf	??_bme280_get_sensor_data+2
  7042  13FC  0865               	movf	??_bme280_get_sensor_data+2,w
  7043  13FD  0021               	movlb	1	; select bank1
  7044  13FE  00D6               	movwf	bme280_get_sensor_data@rslt^(0+128)
  7045                           
  7046                           ;BME280_driver/bme280.c: 676:         if (rslt == 0)
  7047  13FF  0856               	movf	bme280_get_sensor_data@rslt^(0+128),w
  7048  1400  1D03               	btfss	3,2
  7049  1401  0008               	return
  7050                           
  7051                           ;BME280_driver/bme280.c: 677:         {;BME280_driver/bme280.c: 679:             bme280_
      +                          parse_sensor_data(reg_data, &uncomp_data);
  7052  1402  30D7               	movlw	(low (bme280_get_sensor_data@uncomp_data| 0))& (0+255)
  7053  1403  0020               	movlb	0	; select bank0
  7054  1404  00E3               	movwf	??_bme280_get_sensor_data
  7055  1405  0863               	movf	??_bme280_get_sensor_data,w
  7056  1406  00F0               	movwf	bme280_parse_sensor_data@uncomp_data
  7057  1407  30CD               	movlw	(low (bme280_get_sensor_data@reg_data| 0))& (0+255)
  7058  1408  318A  2280  3193   	fcall	_bme280_parse_sensor_data
  7059  140B  30D7               	movlw	(low (bme280_get_sensor_data@uncomp_data| 0))& (0+255)
  7060  140C  00E3               	movwf	??_bme280_get_sensor_data
  7061  140D  0863               	movf	??_bme280_get_sensor_data,w
  7062  140E  00DB               	movwf	bme280_compensate_data@uncomp_data
  7063  140F  0861               	movf	bme280_get_sensor_data@comp_data,w
  7064  1410  00E4               	movwf	??_bme280_get_sensor_data+1
  7065  1411  0864               	movf	??_bme280_get_sensor_data+1,w
  7066  1412  00DC               	movwf	bme280_compensate_data@comp_data
  7067  1413  0862               	movf	bme280_get_sensor_data@dev,w
  7068  1414  3E09               	addlw	9
  7069  1415  00E5               	movwf	??_bme280_get_sensor_data+2
  7070  1416  0865               	movf	??_bme280_get_sensor_data+2,w
  7071  1417  00DD               	movwf	bme280_compensate_data@calib_data
  7072  1418  0021               	movlb	1	; select bank1
  7073  1419  0855               	movf	bme280_get_sensor_data@sensor_comp^(0+128),w
  7074  141A  3196  2692         	fcall	_bme280_compensate_data
  7075  141C  0008               	return
  7076  141D                     __end_of_bme280_get_sensor_data:	
  7077                           ;BME280_driver/bme280.c: 687:     else
  7078                           
  7079                           
  7080                           	psect	text4
  7081  0A80                     __ptext4:	
  7082 ;; *************** function _bme280_parse_sensor_data *****************
  7083 ;; Defined at:
  7084 ;;		line 699 in file "BME280_driver/bme280.c"
  7085 ;; Parameters:    Size  Location     Type
  7086 ;;  reg_data        1    wreg     PTR const unsigned char 
  7087 ;;		 -> bme280_get_sensor_data@reg_data(8), 
  7088 ;;  uncomp_data     1    0[COMMON] PTR struct bme280_uncomp
  7089 ;;		 -> bme280_get_sensor_data@uncomp_data(12), 
  7090 ;; Auto vars:     Size  Location     Type
  7091 ;;  reg_data        1   12[BANK0 ] PTR const unsigned char 
  7092 ;;		 -> bme280_get_sensor_data@reg_data(8), 
  7093 ;;  data_msb        4    8[BANK0 ] unsigned long 
  7094 ;;  data_lsb        4    4[BANK0 ] unsigned long 
  7095 ;;  data_xlsb       4    0[BANK0 ] unsigned long 
  7096 ;; Return value:  Size  Location     Type
  7097 ;;                  1    wreg      void 
  7098 ;; Registers used:
  7099 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7100 ;; Tracked objects:
  7101 ;;		On entry : 1F/0
  7102 ;;		On exit  : 1F/0
  7103 ;;		Unchanged: 0/0
  7104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7105 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7106 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7107 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7108 ;;      Totals:         9      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7109 ;;Total ram usage:       22 bytes
  7110 ;; Hardware stack levels used:    1
  7111 ;; Hardware stack levels required when called:    3
  7112 ;; This function calls:
  7113 ;;		Nothing
  7114 ;; This function is called by:
  7115 ;;		_bme280_get_sensor_data
  7116 ;; This function uses a non-reentrant model
  7117 ;;
  7118                           
  7119                           
  7120                           ;psect for function _bme280_parse_sensor_data
  7121  0A80                     _bme280_parse_sensor_data:	
  7122                           
  7123                           ;incstack = 0
  7124                           ; Regs used in _bme280_parse_sensor_data: [wreg+fsr1l+fsr1h+status,2+status,0]
  7125                           ;bme280_parse_sensor_data@reg_data stored from wreg
  7126  0A80  00AC               	movwf	bme280_parse_sensor_data@reg_data
  7127                           
  7128                           ;BME280_driver/bme280.c: 699: void bme280_parse_sensor_data(const uint8_t *reg_data, str
      +                          uct bme280_uncomp_data *uncomp_data);BME280_driver/bme280.c: 700: {;BME280_driver/bme280
      +                          .c: 702:     uint32_t data_xlsb;;BME280_driver/bme280.c: 703:     uint32_t data_lsb;;BME
      +                          280_driver/bme280.c: 704:     uint32_t data_msb;;BME280_driver/bme280.c: 707:     data_m
      +                          sb = (uint32_t)reg_data[0] << 12;
  7129  0A81  082C               	movf	bme280_parse_sensor_data@reg_data,w
  7130  0A82  0086               	movwf	6
  7131  0A83  0187               	clrf	7
  7132  0A84  0801               	movf	1,w
  7133  0A85  00F1               	movwf	??_bme280_parse_sensor_data
  7134  0A86  01F2               	clrf	??_bme280_parse_sensor_data+1
  7135  0A87  01F3               	clrf	??_bme280_parse_sensor_data+2
  7136  0A88  01F4               	clrf	??_bme280_parse_sensor_data+3
  7137  0A89  300C               	movlw	12
  7138  0A8A                     u3125:	
  7139  0A8A  35F1               	lslf	??_bme280_parse_sensor_data,f
  7140  0A8B  0DF2               	rlf	??_bme280_parse_sensor_data+1,f
  7141  0A8C  0DF3               	rlf	??_bme280_parse_sensor_data+2,f
  7142  0A8D  0DF4               	rlf	??_bme280_parse_sensor_data+3,f
  7143  0A8E  0B89               	decfsz	9,f
  7144  0A8F  2A8A               	goto	u3125
  7145  0A90  0874               	movf	??_bme280_parse_sensor_data+3,w
  7146  0A91  00AB               	movwf	bme280_parse_sensor_data@data_msb+3
  7147  0A92  0873               	movf	??_bme280_parse_sensor_data+2,w
  7148  0A93  00AA               	movwf	bme280_parse_sensor_data@data_msb+2
  7149  0A94  0872               	movf	??_bme280_parse_sensor_data+1,w
  7150  0A95  00A9               	movwf	bme280_parse_sensor_data@data_msb+1
  7151  0A96  0871               	movf	??_bme280_parse_sensor_data,w
  7152  0A97  00A8               	movwf	bme280_parse_sensor_data@data_msb
  7153                           
  7154                           ;BME280_driver/bme280.c: 708:     data_lsb = (uint32_t)reg_data[1] << 4;
  7155  0A98  0A2C               	incf	bme280_parse_sensor_data@reg_data,w
  7156  0A99  0086               	movwf	6
  7157  0A9A  0187               	clrf	7
  7158  0A9B  0801               	movf	1,w
  7159  0A9C  00F1               	movwf	??_bme280_parse_sensor_data
  7160  0A9D  01F2               	clrf	??_bme280_parse_sensor_data+1
  7161  0A9E  01F3               	clrf	??_bme280_parse_sensor_data+2
  7162  0A9F  01F4               	clrf	??_bme280_parse_sensor_data+3
  7163  0AA0  3004               	movlw	4
  7164  0AA1                     u3135:	
  7165  0AA1  35F1               	lslf	??_bme280_parse_sensor_data,f
  7166  0AA2  0DF2               	rlf	??_bme280_parse_sensor_data+1,f
  7167  0AA3  0DF3               	rlf	??_bme280_parse_sensor_data+2,f
  7168  0AA4  0DF4               	rlf	??_bme280_parse_sensor_data+3,f
  7169  0AA5  0B89               	decfsz	9,f
  7170  0AA6  2AA1               	goto	u3135
  7171  0AA7  0874               	movf	??_bme280_parse_sensor_data+3,w
  7172  0AA8  00A7               	movwf	bme280_parse_sensor_data@data_lsb+3
  7173  0AA9  0873               	movf	??_bme280_parse_sensor_data+2,w
  7174  0AAA  00A6               	movwf	bme280_parse_sensor_data@data_lsb+2
  7175  0AAB  0872               	movf	??_bme280_parse_sensor_data+1,w
  7176  0AAC  00A5               	movwf	bme280_parse_sensor_data@data_lsb+1
  7177  0AAD  0871               	movf	??_bme280_parse_sensor_data,w
  7178  0AAE  00A4               	movwf	bme280_parse_sensor_data@data_lsb
  7179                           
  7180                           ;BME280_driver/bme280.c: 709:     data_xlsb = (uint32_t)reg_data[2] >> 4;
  7181  0AAF  082C               	movf	bme280_parse_sensor_data@reg_data,w
  7182  0AB0  3E02               	addlw	2
  7183  0AB1  0086               	movwf	6
  7184  0AB2  0187               	clrf	7
  7185  0AB3  0801               	movf	1,w
  7186  0AB4  00F1               	movwf	??_bme280_parse_sensor_data
  7187  0AB5  3004               	movlw	4
  7188  0AB6                     u3145:	
  7189  0AB6  36F1               	lsrf	??_bme280_parse_sensor_data,f
  7190  0AB7  0B89               	decfsz	9,f
  7191  0AB8  2AB6               	goto	u3145
  7192  0AB9  0871               	movf	??_bme280_parse_sensor_data,w
  7193  0ABA  00F2               	movwf	??_bme280_parse_sensor_data+1
  7194  0ABB  01F3               	clrf	??_bme280_parse_sensor_data+2
  7195  0ABC  01F4               	clrf	??_bme280_parse_sensor_data+3
  7196  0ABD  01F5               	clrf	??_bme280_parse_sensor_data+4
  7197  0ABE  0875               	movf	??_bme280_parse_sensor_data+4,w
  7198  0ABF  00A3               	movwf	bme280_parse_sensor_data@data_xlsb+3
  7199  0AC0  0874               	movf	??_bme280_parse_sensor_data+3,w
  7200  0AC1  00A2               	movwf	bme280_parse_sensor_data@data_xlsb+2
  7201  0AC2  0873               	movf	??_bme280_parse_sensor_data+2,w
  7202  0AC3  00A1               	movwf	bme280_parse_sensor_data@data_xlsb+1
  7203  0AC4  0872               	movf	??_bme280_parse_sensor_data+1,w
  7204  0AC5  00A0               	movwf	bme280_parse_sensor_data@data_xlsb
  7205                           
  7206                           ;BME280_driver/bme280.c: 710:     uncomp_data->pressure = data_msb | data_lsb | data_xls
      +                          b;
  7207  0AC6  0820               	movf	bme280_parse_sensor_data@data_xlsb,w
  7208  0AC7  00F1               	movwf	??_bme280_parse_sensor_data
  7209  0AC8  0821               	movf	bme280_parse_sensor_data@data_xlsb+1,w
  7210  0AC9  00F2               	movwf	??_bme280_parse_sensor_data+1
  7211  0ACA  0822               	movf	bme280_parse_sensor_data@data_xlsb+2,w
  7212  0ACB  00F3               	movwf	??_bme280_parse_sensor_data+2
  7213  0ACC  0823               	movf	bme280_parse_sensor_data@data_xlsb+3,w
  7214  0ACD  00F4               	movwf	??_bme280_parse_sensor_data+3
  7215  0ACE  0828               	movf	bme280_parse_sensor_data@data_msb,w
  7216  0ACF  0424               	iorwf	bme280_parse_sensor_data@data_lsb,w
  7217  0AD0  00F5               	movwf	??_bme280_parse_sensor_data+4
  7218  0AD1  0829               	movf	bme280_parse_sensor_data@data_msb+1,w
  7219  0AD2  0425               	iorwf	bme280_parse_sensor_data@data_lsb+1,w
  7220  0AD3  00F6               	movwf	??_bme280_parse_sensor_data+5
  7221  0AD4  082A               	movf	bme280_parse_sensor_data@data_msb+2,w
  7222  0AD5  0426               	iorwf	bme280_parse_sensor_data@data_lsb+2,w
  7223  0AD6  00F7               	movwf	??_bme280_parse_sensor_data+6
  7224  0AD7  082B               	movf	bme280_parse_sensor_data@data_msb+3,w
  7225  0AD8  0427               	iorwf	bme280_parse_sensor_data@data_lsb+3,w
  7226  0AD9  00F8               	movwf	??_bme280_parse_sensor_data+7
  7227  0ADA  0875               	movf	??_bme280_parse_sensor_data+4,w
  7228  0ADB  04F1               	iorwf	??_bme280_parse_sensor_data,f
  7229  0ADC  0876               	movf	??_bme280_parse_sensor_data+5,w
  7230  0ADD  04F2               	iorwf	??_bme280_parse_sensor_data+1,f
  7231  0ADE  0877               	movf	??_bme280_parse_sensor_data+6,w
  7232  0ADF  04F3               	iorwf	??_bme280_parse_sensor_data+2,f
  7233  0AE0  0878               	movf	??_bme280_parse_sensor_data+7,w
  7234  0AE1  04F4               	iorwf	??_bme280_parse_sensor_data+3,f
  7235  0AE2  0870               	movf	bme280_parse_sensor_data@uncomp_data,w
  7236  0AE3  0086               	movwf	6
  7237  0AE4  0187               	clrf	7
  7238  0AE5  0871               	movf	??_bme280_parse_sensor_data,w
  7239  0AE6  3FC0               	movwi [0]fsr1
  7240  0AE7  0872               	movf	??_bme280_parse_sensor_data+1,w
  7241  0AE8  3FC1               	movwi [1]fsr1
  7242  0AE9  0873               	movf	??_bme280_parse_sensor_data+2,w
  7243  0AEA  3FC2               	movwi [2]fsr1
  7244  0AEB  0874               	movf	??_bme280_parse_sensor_data+3,w
  7245  0AEC  3FC3               	movwi [3]fsr1
  7246                           
  7247                           ;BME280_driver/bme280.c: 713:     data_msb = (uint32_t)reg_data[3] << 12;
  7248  0AED  082C               	movf	bme280_parse_sensor_data@reg_data,w
  7249  0AEE  3E03               	addlw	3
  7250  0AEF  0086               	movwf	6
  7251  0AF0  0187               	clrf	7
  7252  0AF1  0801               	movf	1,w
  7253  0AF2  00F1               	movwf	??_bme280_parse_sensor_data
  7254  0AF3  01F2               	clrf	??_bme280_parse_sensor_data+1
  7255  0AF4  01F3               	clrf	??_bme280_parse_sensor_data+2
  7256  0AF5  01F4               	clrf	??_bme280_parse_sensor_data+3
  7257  0AF6  300C               	movlw	12
  7258  0AF7                     u3155:	
  7259  0AF7  35F1               	lslf	??_bme280_parse_sensor_data,f
  7260  0AF8  0DF2               	rlf	??_bme280_parse_sensor_data+1,f
  7261  0AF9  0DF3               	rlf	??_bme280_parse_sensor_data+2,f
  7262  0AFA  0DF4               	rlf	??_bme280_parse_sensor_data+3,f
  7263  0AFB  0B89               	decfsz	9,f
  7264  0AFC  2AF7               	goto	u3155
  7265  0AFD  0874               	movf	??_bme280_parse_sensor_data+3,w
  7266  0AFE  00AB               	movwf	bme280_parse_sensor_data@data_msb+3
  7267  0AFF  0873               	movf	??_bme280_parse_sensor_data+2,w
  7268  0B00  00AA               	movwf	bme280_parse_sensor_data@data_msb+2
  7269  0B01  0872               	movf	??_bme280_parse_sensor_data+1,w
  7270  0B02  00A9               	movwf	bme280_parse_sensor_data@data_msb+1
  7271  0B03  0871               	movf	??_bme280_parse_sensor_data,w
  7272  0B04  00A8               	movwf	bme280_parse_sensor_data@data_msb
  7273                           
  7274                           ;BME280_driver/bme280.c: 714:     data_lsb = (uint32_t)reg_data[4] << 4;
  7275  0B05  082C               	movf	bme280_parse_sensor_data@reg_data,w
  7276  0B06  3E04               	addlw	4
  7277  0B07  0086               	movwf	6
  7278  0B08  0187               	clrf	7
  7279  0B09  0801               	movf	1,w
  7280  0B0A  00F1               	movwf	??_bme280_parse_sensor_data
  7281  0B0B  01F2               	clrf	??_bme280_parse_sensor_data+1
  7282  0B0C  01F3               	clrf	??_bme280_parse_sensor_data+2
  7283  0B0D  01F4               	clrf	??_bme280_parse_sensor_data+3
  7284  0B0E  3004               	movlw	4
  7285  0B0F                     u3165:	
  7286  0B0F  35F1               	lslf	??_bme280_parse_sensor_data,f
  7287  0B10  0DF2               	rlf	??_bme280_parse_sensor_data+1,f
  7288  0B11  0DF3               	rlf	??_bme280_parse_sensor_data+2,f
  7289  0B12  0DF4               	rlf	??_bme280_parse_sensor_data+3,f
  7290  0B13  0B89               	decfsz	9,f
  7291  0B14  2B0F               	goto	u3165
  7292  0B15  0874               	movf	??_bme280_parse_sensor_data+3,w
  7293  0B16  00A7               	movwf	bme280_parse_sensor_data@data_lsb+3
  7294  0B17  0873               	movf	??_bme280_parse_sensor_data+2,w
  7295  0B18  00A6               	movwf	bme280_parse_sensor_data@data_lsb+2
  7296  0B19  0872               	movf	??_bme280_parse_sensor_data+1,w
  7297  0B1A  00A5               	movwf	bme280_parse_sensor_data@data_lsb+1
  7298  0B1B  0871               	movf	??_bme280_parse_sensor_data,w
  7299  0B1C  00A4               	movwf	bme280_parse_sensor_data@data_lsb
  7300                           
  7301                           ;BME280_driver/bme280.c: 715:     data_xlsb = (uint32_t)reg_data[5] >> 4;
  7302  0B1D  082C               	movf	bme280_parse_sensor_data@reg_data,w
  7303  0B1E  3E05               	addlw	5
  7304  0B1F  0086               	movwf	6
  7305  0B20  0187               	clrf	7
  7306  0B21  0801               	movf	1,w
  7307  0B22  00F1               	movwf	??_bme280_parse_sensor_data
  7308  0B23  3004               	movlw	4
  7309  0B24                     u3175:	
  7310  0B24  36F1               	lsrf	??_bme280_parse_sensor_data,f
  7311  0B25  0B89               	decfsz	9,f
  7312  0B26  2B24               	goto	u3175
  7313  0B27  0871               	movf	??_bme280_parse_sensor_data,w
  7314  0B28  00F2               	movwf	??_bme280_parse_sensor_data+1
  7315  0B29  01F3               	clrf	??_bme280_parse_sensor_data+2
  7316  0B2A  01F4               	clrf	??_bme280_parse_sensor_data+3
  7317  0B2B  01F5               	clrf	??_bme280_parse_sensor_data+4
  7318  0B2C  0875               	movf	??_bme280_parse_sensor_data+4,w
  7319  0B2D  00A3               	movwf	bme280_parse_sensor_data@data_xlsb+3
  7320  0B2E  0874               	movf	??_bme280_parse_sensor_data+3,w
  7321  0B2F  00A2               	movwf	bme280_parse_sensor_data@data_xlsb+2
  7322  0B30  0873               	movf	??_bme280_parse_sensor_data+2,w
  7323  0B31  00A1               	movwf	bme280_parse_sensor_data@data_xlsb+1
  7324  0B32  0872               	movf	??_bme280_parse_sensor_data+1,w
  7325  0B33  00A0               	movwf	bme280_parse_sensor_data@data_xlsb
  7326                           
  7327                           ;BME280_driver/bme280.c: 716:     uncomp_data->temperature = data_msb | data_lsb | data_
      +                          xlsb;
  7328  0B34  0820               	movf	bme280_parse_sensor_data@data_xlsb,w
  7329  0B35  00F1               	movwf	??_bme280_parse_sensor_data
  7330  0B36  0821               	movf	bme280_parse_sensor_data@data_xlsb+1,w
  7331  0B37  00F2               	movwf	??_bme280_parse_sensor_data+1
  7332  0B38  0822               	movf	bme280_parse_sensor_data@data_xlsb+2,w
  7333  0B39  00F3               	movwf	??_bme280_parse_sensor_data+2
  7334  0B3A  0823               	movf	bme280_parse_sensor_data@data_xlsb+3,w
  7335  0B3B  00F4               	movwf	??_bme280_parse_sensor_data+3
  7336  0B3C  0828               	movf	bme280_parse_sensor_data@data_msb,w
  7337  0B3D  0424               	iorwf	bme280_parse_sensor_data@data_lsb,w
  7338  0B3E  00F5               	movwf	??_bme280_parse_sensor_data+4
  7339  0B3F  0829               	movf	bme280_parse_sensor_data@data_msb+1,w
  7340  0B40  0425               	iorwf	bme280_parse_sensor_data@data_lsb+1,w
  7341  0B41  00F6               	movwf	??_bme280_parse_sensor_data+5
  7342  0B42  082A               	movf	bme280_parse_sensor_data@data_msb+2,w
  7343  0B43  0426               	iorwf	bme280_parse_sensor_data@data_lsb+2,w
  7344  0B44  00F7               	movwf	??_bme280_parse_sensor_data+6
  7345  0B45  082B               	movf	bme280_parse_sensor_data@data_msb+3,w
  7346  0B46  0427               	iorwf	bme280_parse_sensor_data@data_lsb+3,w
  7347  0B47  00F8               	movwf	??_bme280_parse_sensor_data+7
  7348  0B48  0875               	movf	??_bme280_parse_sensor_data+4,w
  7349  0B49  04F1               	iorwf	??_bme280_parse_sensor_data,f
  7350  0B4A  0876               	movf	??_bme280_parse_sensor_data+5,w
  7351  0B4B  04F2               	iorwf	??_bme280_parse_sensor_data+1,f
  7352  0B4C  0877               	movf	??_bme280_parse_sensor_data+6,w
  7353  0B4D  04F3               	iorwf	??_bme280_parse_sensor_data+2,f
  7354  0B4E  0878               	movf	??_bme280_parse_sensor_data+7,w
  7355  0B4F  04F4               	iorwf	??_bme280_parse_sensor_data+3,f
  7356  0B50  0870               	movf	bme280_parse_sensor_data@uncomp_data,w
  7357  0B51  3E04               	addlw	4
  7358  0B52  0086               	movwf	6
  7359  0B53  0187               	clrf	7
  7360  0B54  0871               	movf	??_bme280_parse_sensor_data,w
  7361  0B55  3FC0               	movwi [0]fsr1
  7362  0B56  0872               	movf	??_bme280_parse_sensor_data+1,w
  7363  0B57  3FC1               	movwi [1]fsr1
  7364  0B58  0873               	movf	??_bme280_parse_sensor_data+2,w
  7365  0B59  3FC2               	movwi [2]fsr1
  7366  0B5A  0874               	movf	??_bme280_parse_sensor_data+3,w
  7367  0B5B  3FC3               	movwi [3]fsr1
  7368                           
  7369                           ;BME280_driver/bme280.c: 719:     data_lsb = (uint32_t)reg_data[6] << 8;
  7370  0B5C  082C               	movf	bme280_parse_sensor_data@reg_data,w
  7371  0B5D  3E06               	addlw	6
  7372  0B5E  0086               	movwf	6
  7373  0B5F  0187               	clrf	7
  7374  0B60  0801               	movf	1,w
  7375  0B61  00F1               	movwf	??_bme280_parse_sensor_data
  7376  0B62  01F2               	clrf	??_bme280_parse_sensor_data+1
  7377  0B63  01F3               	clrf	??_bme280_parse_sensor_data+2
  7378  0B64  01F4               	clrf	??_bme280_parse_sensor_data+3
  7379  0B65  3008               	movlw	8
  7380  0B66                     u3185:	
  7381  0B66  35F1               	lslf	??_bme280_parse_sensor_data,f
  7382  0B67  0DF2               	rlf	??_bme280_parse_sensor_data+1,f
  7383  0B68  0DF3               	rlf	??_bme280_parse_sensor_data+2,f
  7384  0B69  0DF4               	rlf	??_bme280_parse_sensor_data+3,f
  7385  0B6A  0B89               	decfsz	9,f
  7386  0B6B  2B66               	goto	u3185
  7387  0B6C  0874               	movf	??_bme280_parse_sensor_data+3,w
  7388  0B6D  00A7               	movwf	bme280_parse_sensor_data@data_lsb+3
  7389  0B6E  0873               	movf	??_bme280_parse_sensor_data+2,w
  7390  0B6F  00A6               	movwf	bme280_parse_sensor_data@data_lsb+2
  7391  0B70  0872               	movf	??_bme280_parse_sensor_data+1,w
  7392  0B71  00A5               	movwf	bme280_parse_sensor_data@data_lsb+1
  7393  0B72  0871               	movf	??_bme280_parse_sensor_data,w
  7394  0B73  00A4               	movwf	bme280_parse_sensor_data@data_lsb
  7395                           
  7396                           ;BME280_driver/bme280.c: 720:     data_msb = (uint32_t)reg_data[7];
  7397  0B74  082C               	movf	bme280_parse_sensor_data@reg_data,w
  7398  0B75  3E07               	addlw	7
  7399  0B76  0086               	movwf	6
  7400  0B77  0187               	clrf	7
  7401  0B78  0801               	movf	1,w
  7402  0B79  00F1               	movwf	??_bme280_parse_sensor_data
  7403  0B7A  01F2               	clrf	??_bme280_parse_sensor_data+1
  7404  0B7B  01F3               	clrf	??_bme280_parse_sensor_data+2
  7405  0B7C  01F4               	clrf	??_bme280_parse_sensor_data+3
  7406  0B7D  0874               	movf	??_bme280_parse_sensor_data+3,w
  7407  0B7E  00AB               	movwf	bme280_parse_sensor_data@data_msb+3
  7408  0B7F  0873               	movf	??_bme280_parse_sensor_data+2,w
  7409  0B80  00AA               	movwf	bme280_parse_sensor_data@data_msb+2
  7410  0B81  0872               	movf	??_bme280_parse_sensor_data+1,w
  7411  0B82  00A9               	movwf	bme280_parse_sensor_data@data_msb+1
  7412  0B83  0871               	movf	??_bme280_parse_sensor_data,w
  7413  0B84  00A8               	movwf	bme280_parse_sensor_data@data_msb
  7414                           
  7415                           ;BME280_driver/bme280.c: 721:     uncomp_data->humidity = data_msb | data_lsb;
  7416  0B85  0828               	movf	bme280_parse_sensor_data@data_msb,w
  7417  0B86  0424               	iorwf	bme280_parse_sensor_data@data_lsb,w
  7418  0B87  00F1               	movwf	??_bme280_parse_sensor_data
  7419  0B88  0829               	movf	bme280_parse_sensor_data@data_msb+1,w
  7420  0B89  0425               	iorwf	bme280_parse_sensor_data@data_lsb+1,w
  7421  0B8A  00F2               	movwf	??_bme280_parse_sensor_data+1
  7422  0B8B  082A               	movf	bme280_parse_sensor_data@data_msb+2,w
  7423  0B8C  0426               	iorwf	bme280_parse_sensor_data@data_lsb+2,w
  7424  0B8D  00F3               	movwf	??_bme280_parse_sensor_data+2
  7425  0B8E  082B               	movf	bme280_parse_sensor_data@data_msb+3,w
  7426  0B8F  0427               	iorwf	bme280_parse_sensor_data@data_lsb+3,w
  7427  0B90  00F4               	movwf	??_bme280_parse_sensor_data+3
  7428  0B91  0870               	movf	bme280_parse_sensor_data@uncomp_data,w
  7429  0B92  3E08               	addlw	8
  7430  0B93  0086               	movwf	6
  7431  0B94  0187               	clrf	7
  7432  0B95  0871               	movf	??_bme280_parse_sensor_data,w
  7433  0B96  3FC0               	movwi [0]fsr1
  7434  0B97  0872               	movf	??_bme280_parse_sensor_data+1,w
  7435  0B98  3FC1               	movwi [1]fsr1
  7436  0B99  0873               	movf	??_bme280_parse_sensor_data+2,w
  7437  0B9A  3FC2               	movwi [2]fsr1
  7438  0B9B  0874               	movf	??_bme280_parse_sensor_data+3,w
  7439  0B9C  3FC3               	movwi [3]fsr1
  7440  0B9D  0008               	return
  7441  0B9E                     __end_of_bme280_parse_sensor_data:	
  7442                           
  7443                           	psect	text5
  7444  1692                     __ptext5:	
  7445 ;; *************** function _bme280_compensate_data *****************
  7446 ;; Defined at:
  7447 ;;		line 729 in file "BME280_driver/bme280.c"
  7448 ;; Parameters:    Size  Location     Type
  7449 ;;  sensor_comp     1    wreg     unsigned char 
  7450 ;;  uncomp_data     1   59[BANK0 ] PTR const struct bme280_
  7451 ;;		 -> bme280_get_sensor_data@uncomp_data(12), 
  7452 ;;  comp_data       1   60[BANK0 ] PTR struct bme280_data
  7453 ;;		 -> main@sensor_data(12), 
  7454 ;;  calib_data      1   61[BANK0 ] PTR struct bme280_calib_
  7455 ;;		 -> EnvSensor(51), 
  7456 ;; Auto vars:     Size  Location     Type
  7457 ;;  sensor_comp     1   64[BANK0 ] unsigned char 
  7458 ;;  rslt            1   63[BANK0 ] char 
  7459 ;; Return value:  Size  Location     Type
  7460 ;;                  1    wreg      char 
  7461 ;; Registers used:
  7462 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7463 ;; Tracked objects:
  7464 ;;		On entry : 1F/1
  7465 ;;		On exit  : 1F/0
  7466 ;;		Unchanged: 0/0
  7467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7468 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7469 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7470 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7471 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7472 ;;Total ram usage:        6 bytes
  7473 ;; Hardware stack levels used:    1
  7474 ;; Hardware stack levels required when called:    5
  7475 ;; This function calls:
  7476 ;;		_compensate_humidity
  7477 ;;		_compensate_pressure
  7478 ;;		_compensate_temperature
  7479 ;; This function is called by:
  7480 ;;		_bme280_get_sensor_data
  7481 ;; This function uses a non-reentrant model
  7482 ;;
  7483                           
  7484                           
  7485                           ;psect for function _bme280_compensate_data
  7486  1692                     _bme280_compensate_data:	
  7487                           
  7488                           ;incstack = 0
  7489                           ; Regs used in _bme280_compensate_data: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
  7490                           ;bme280_compensate_data@sensor_comp stored from wreg
  7491  1692  0020               	movlb	0	; select bank0
  7492  1693  00E0               	movwf	bme280_compensate_data@sensor_comp
  7493                           
  7494                           ;BME280_driver/bme280.c: 729: int8_t bme280_compensate_data(uint8_t sensor_comp,;BME280_
      +                          driver/bme280.c: 730:                               const struct bme280_uncomp_data *unc
      +                          omp_data,;BME280_driver/bme280.c: 731:                               struct bme280_data 
      +                          *comp_data,;BME280_driver/bme280.c: 732:                               struct bme280_cal
      +                          ib_data *calib_data);BME280_driver/bme280.c: 733: {;BME280_driver/bme280.c: 734:     int
      +                          8_t rslt = 0;
  7495  1694  01DF               	clrf	bme280_compensate_data@rslt
  7496                           
  7497                           ;BME280_driver/bme280.c: 736:     if ((uncomp_data != ((void*)0)) && (comp_data != ((voi
      +                          d*)0)) && (calib_data != ((void*)0)))
  7498  1695  085B               	movf	bme280_compensate_data@uncomp_data,w
  7499  1696  1903               	btfsc	3,2
  7500  1697  2F04               	goto	l126
  7501  1698  085C               	movf	bme280_compensate_data@comp_data,w
  7502  1699  1903               	btfsc	3,2
  7503  169A  2F04               	goto	l126
  7504  169B  085D               	movf	bme280_compensate_data@calib_data,w
  7505  169C  1903               	btfsc	3,2
  7506  169D  2F04               	goto	l126
  7507                           
  7508                           ;BME280_driver/bme280.c: 737:     {;BME280_driver/bme280.c: 739:         comp_data->temp
      +                          erature = 0;
  7509  169E  085C               	movf	bme280_compensate_data@comp_data,w
  7510  169F  3E04               	addlw	4
  7511  16A0  0086               	movwf	6
  7512  16A1  3001               	movlw	1	; select bank2/3
  7513  16A2  0087               	movwf	7
  7514  16A3  3000               	movlw	0
  7515  16A4  3FC0               	movwi [0]fsr1
  7516  16A5  3000               	movlw	0
  7517  16A6  3FC1               	movwi [1]fsr1
  7518  16A7  3FC2               	movwi [2]fsr1
  7519  16A8  3FC3               	movwi [3]fsr1
  7520                           
  7521                           ;BME280_driver/bme280.c: 740:         comp_data->pressure = 0;
  7522  16A9  085C               	movf	bme280_compensate_data@comp_data,w
  7523  16AA  0086               	movwf	6
  7524  16AB  3001               	movlw	1	; select bank2/3
  7525  16AC  0087               	movwf	7
  7526  16AD  3000               	movlw	0
  7527  16AE  3FC0               	movwi [0]fsr1
  7528  16AF  3FC1               	movwi [1]fsr1
  7529  16B0  3FC2               	movwi [2]fsr1
  7530  16B1  3FC3               	movwi [3]fsr1
  7531                           
  7532                           ;BME280_driver/bme280.c: 741:         comp_data->humidity = 0;
  7533  16B2  085C               	movf	bme280_compensate_data@comp_data,w
  7534  16B3  3E08               	addlw	8
  7535  16B4  0086               	movwf	6
  7536  16B5  3001               	movlw	1	; select bank2/3
  7537  16B6  0087               	movwf	7
  7538  16B7  3000               	movlw	0
  7539  16B8  3FC0               	movwi [0]fsr1
  7540  16B9  3000               	movlw	0
  7541  16BA  3FC1               	movwi [1]fsr1
  7542  16BB  3FC2               	movwi [2]fsr1
  7543  16BC  3FC3               	movwi [3]fsr1
  7544                           
  7545                           ;BME280_driver/bme280.c: 744:         if (sensor_comp & (1 | 1 << 1 | 1 << 2))
  7546  16BD  0860               	movf	bme280_compensate_data@sensor_comp,w
  7547  16BE  3907               	andlw	7
  7548  16BF  1903               	btfsc	3,2
  7549  16C0  2ED6               	goto	l4452
  7550                           
  7551                           ;BME280_driver/bme280.c: 745:         {;BME280_driver/bme280.c: 747:             comp_da
      +                          ta->temperature = compensate_temperature(uncomp_data, calib_data);
  7552  16C1  085D               	movf	bme280_compensate_data@calib_data,w
  7553  16C2  00DE               	movwf	??_bme280_compensate_data
  7554  16C3  085E               	movf	??_bme280_compensate_data,w
  7555  16C4  00AE               	movwf	compensate_temperature@calib_data
  7556  16C5  085B               	movf	bme280_compensate_data@uncomp_data,w
  7557  16C6  318B  239E  3196   	fcall	_compensate_temperature
  7558  16C9  085C               	movf	bme280_compensate_data@comp_data,w
  7559  16CA  3E04               	addlw	4
  7560  16CB  0086               	movwf	6
  7561  16CC  3001               	movlw	1	; select bank2/3
  7562  16CD  0087               	movwf	7
  7563  16CE  082E               	movf	?_compensate_temperature,w
  7564  16CF  3FC0               	movwi [0]fsr1
  7565  16D0  082F               	movf	?_compensate_temperature+1,w
  7566  16D1  3FC1               	movwi [1]fsr1
  7567  16D2  0830               	movf	?_compensate_temperature+2,w
  7568  16D3  3FC2               	movwi [2]fsr1
  7569  16D4  0831               	movf	?_compensate_temperature+3,w
  7570  16D5  3FC3               	movwi [3]fsr1
  7571  16D6                     l4452:	
  7572                           
  7573                           ;BME280_driver/bme280.c: 749:         if (sensor_comp & 1)
  7574  16D6  1C60               	btfss	bme280_compensate_data@sensor_comp,0
  7575  16D7  2EEC               	goto	l4456
  7576                           
  7577                           ;BME280_driver/bme280.c: 750:         {;BME280_driver/bme280.c: 752:             comp_da
      +                          ta->pressure = compensate_pressure(uncomp_data, calib_data);
  7578  16D8  085D               	movf	bme280_compensate_data@calib_data,w
  7579  16D9  00DE               	movwf	??_bme280_compensate_data
  7580  16DA  085E               	movf	??_bme280_compensate_data,w
  7581  16DB  00AE               	movwf	compensate_pressure@calib_data
  7582  16DC  085B               	movf	bme280_compensate_data@uncomp_data,w
  7583  16DD  3180  2043  3196   	fcall	_compensate_pressure
  7584  16E0  085C               	movf	bme280_compensate_data@comp_data,w
  7585  16E1  0086               	movwf	6
  7586  16E2  3001               	movlw	1	; select bank2/3
  7587  16E3  0087               	movwf	7
  7588  16E4  082E               	movf	?_compensate_pressure,w
  7589  16E5  3FC0               	movwi [0]fsr1
  7590  16E6  082F               	movf	?_compensate_pressure+1,w
  7591  16E7  3FC1               	movwi [1]fsr1
  7592  16E8  0830               	movf	?_compensate_pressure+2,w
  7593  16E9  3FC2               	movwi [2]fsr1
  7594  16EA  0831               	movf	?_compensate_pressure+3,w
  7595  16EB  3FC3               	movwi [3]fsr1
  7596  16EC                     l4456:	
  7597                           
  7598                           ;BME280_driver/bme280.c: 754:         if (sensor_comp & 1 << 2)
  7599  16EC  1D60               	btfss	bme280_compensate_data@sensor_comp,2
  7600  16ED  2F06               	goto	l4460
  7601                           
  7602                           ;BME280_driver/bme280.c: 755:         {;BME280_driver/bme280.c: 758:             comp_da
      +                          ta->humidity = compensate_humidity(uncomp_data, calib_data);
  7603  16EE  085D               	movf	bme280_compensate_data@calib_data,w
  7604  16EF  00DE               	movwf	??_bme280_compensate_data
  7605  16F0  085E               	movf	??_bme280_compensate_data,w
  7606  16F1  00AE               	movwf	compensate_humidity@calib_data
  7607  16F2  085B               	movf	bme280_compensate_data@uncomp_data,w
  7608  16F3  318D  2541  3196   	fcall	_compensate_humidity
  7609  16F6  085C               	movf	bme280_compensate_data@comp_data,w
  7610  16F7  3E08               	addlw	8
  7611  16F8  0086               	movwf	6
  7612  16F9  3001               	movlw	1	; select bank2/3
  7613  16FA  0087               	movwf	7
  7614  16FB  082E               	movf	?_compensate_humidity,w
  7615  16FC  3FC0               	movwi [0]fsr1
  7616  16FD  082F               	movf	?_compensate_humidity+1,w
  7617  16FE  3FC1               	movwi [1]fsr1
  7618  16FF  0830               	movf	?_compensate_humidity+2,w
  7619  1700  3FC2               	movwi [2]fsr1
  7620  1701  0831               	movf	?_compensate_humidity+3,w
  7621  1702  3FC3               	movwi [3]fsr1
  7622  1703  2F06               	goto	l4460
  7623  1704                     l126:	
  7624                           ;BME280_driver/bme280.c: 765:     else
  7625                           
  7626                           
  7627                           ;BME280_driver/bme280.c: 766:     {;BME280_driver/bme280.c: 767:         rslt = -1;
  7628  1704  01DF               	clrf	bme280_compensate_data@rslt
  7629  1705  03DF               	decf	bme280_compensate_data@rslt,f
  7630  1706                     l4460:	
  7631                           
  7632                           ;BME280_driver/bme280.c: 770:     return rslt;
  7633  1706  085F               	movf	bme280_compensate_data@rslt,w
  7634  1707  0008               	return
  7635  1708                     __end_of_bme280_compensate_data:	
  7636                           
  7637                           	psect	text6
  7638  0B9E                     __ptext6:	
  7639 ;; *************** function _compensate_temperature *****************
  7640 ;; Defined at:
  7641 ;;		line 1126 in file "BME280_driver/bme280.c"
  7642 ;; Parameters:    Size  Location     Type
  7643 ;;  uncomp_data     1    wreg     PTR const struct bme280_
  7644 ;;		 -> bme280_get_sensor_data@uncomp_data(12), 
  7645 ;;  calib_data      1   14[BANK0 ] PTR struct bme280_calib_
  7646 ;;		 -> EnvSensor(51), 
  7647 ;; Auto vars:     Size  Location     Type
  7648 ;;  uncomp_data     1   44[BANK0 ] PTR const struct bme280_
  7649 ;;		 -> bme280_get_sensor_data@uncomp_data(12), 
  7650 ;;  temperature     4   49[BANK0 ] long 
  7651 ;;  var2            4   45[BANK0 ] long 
  7652 ;;  var1            4   40[BANK0 ] long 
  7653 ;;  temperature_    4   36[BANK0 ] long 
  7654 ;;  temperature_    4    0        long 
  7655 ;; Return value:  Size  Location     Type
  7656 ;;                  4   14[BANK0 ] long 
  7657 ;; Registers used:
  7658 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7659 ;; Tracked objects:
  7660 ;;		On entry : 1F/0
  7661 ;;		On exit  : 1F/0
  7662 ;;		Unchanged: 0/0
  7663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7664 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7665 ;;      Locals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7666 ;;      Temps:          0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7667 ;;      Totals:         0      39       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7668 ;;Total ram usage:       39 bytes
  7669 ;; Hardware stack levels used:    1
  7670 ;; Hardware stack levels required when called:    4
  7671 ;; This function calls:
  7672 ;;		___aldiv
  7673 ;;		___lmul
  7674 ;; This function is called by:
  7675 ;;		_bme280_compensate_data
  7676 ;; This function uses a non-reentrant model
  7677 ;;
  7678                           
  7679                           
  7680                           ;psect for function _compensate_temperature
  7681  0B9E                     _compensate_temperature:	
  7682                           
  7683                           ;incstack = 0
  7684                           ; Regs used in _compensate_temperature: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
  7685                           ;compensate_temperature@uncomp_data stored from wreg
  7686  0B9E  00CC               	movwf	compensate_temperature@uncomp_data
  7687                           
  7688                           ;BME280_driver/bme280.c: 1133:     int32_t temperature_max = 8500;
  7689  0B9F  3000               	movlw	0
  7690  0BA0  00C7               	movwf	compensate_temperature@temperature_max+3
  7691  0BA1  3000               	movlw	0
  7692  0BA2  00C6               	movwf	compensate_temperature@temperature_max+2
  7693  0BA3  3021               	movlw	33
  7694  0BA4  00C5               	movwf	compensate_temperature@temperature_max+1
  7695  0BA5  3034               	movlw	52
  7696  0BA6  00C4               	movwf	compensate_temperature@temperature_max
  7697                           
  7698                           ;BME280_driver/bme280.c: 1135:     var1 = (int32_t)((uncomp_data->temperature / 8) - ((i
      +                          nt32_t)calib_data->dig_T1 * 2));
  7699  0BA7  082E               	movf	compensate_temperature@calib_data,w
  7700  0BA8  0086               	movwf	6
  7701  0BA9  3001               	movlw	1	; select bank2/3
  7702  0BAA  0087               	movwf	7
  7703  0BAB  3F40               	moviw [0]fsr1
  7704  0BAC  00B2               	movwf	??_compensate_temperature
  7705  0BAD  3F41               	moviw [1]fsr1
  7706  0BAE  00B3               	movwf	??_compensate_temperature+1
  7707  0BAF  0832               	movf	??_compensate_temperature,w
  7708  0BB0  00B4               	movwf	??_compensate_temperature+2
  7709  0BB1  0833               	movf	??_compensate_temperature+1,w
  7710  0BB2  00B5               	movwf	??_compensate_temperature+3
  7711  0BB3  01B6               	clrf	??_compensate_temperature+4
  7712  0BB4  01B7               	clrf	??_compensate_temperature+5
  7713  0BB5  3001               	movlw	1
  7714  0BB6                     u4315:	
  7715  0BB6  35B4               	lslf	??_compensate_temperature+2,f
  7716  0BB7  0DB5               	rlf	??_compensate_temperature+3,f
  7717  0BB8  0DB6               	rlf	??_compensate_temperature+4,f
  7718  0BB9  0DB7               	rlf	??_compensate_temperature+5,f
  7719  0BBA  0B89               	decfsz	9,f
  7720  0BBB  2BB6               	goto	u4315
  7721  0BBC  084C               	movf	compensate_temperature@uncomp_data,w
  7722  0BBD  3E04               	addlw	4
  7723  0BBE  0086               	movwf	6
  7724  0BBF  0187               	clrf	7
  7725  0BC0  3F40               	moviw [0]fsr1
  7726  0BC1  00B8               	movwf	??_compensate_temperature+6
  7727  0BC2  3F41               	moviw [1]fsr1
  7728  0BC3  00B9               	movwf	??_compensate_temperature+7
  7729  0BC4  3F42               	moviw [2]fsr1
  7730  0BC5  00BA               	movwf	??_compensate_temperature+8
  7731  0BC6  3F43               	moviw [3]fsr1
  7732  0BC7  00BB               	movwf	??_compensate_temperature+9
  7733  0BC8  3003               	movlw	3
  7734  0BC9                     u4325:	
  7735  0BC9  36BB               	lsrf	??_compensate_temperature+9,f
  7736  0BCA  0CBA               	rrf	??_compensate_temperature+8,f
  7737  0BCB  0CB9               	rrf	??_compensate_temperature+7,f
  7738  0BCC  0CB8               	rrf	??_compensate_temperature+6,f
  7739  0BCD  0B89               	decfsz	9,f
  7740  0BCE  2BC9               	goto	u4325
  7741  0BCF  0834               	movf	??_compensate_temperature+2,w
  7742  0BD0  02B8               	subwf	??_compensate_temperature+6,f
  7743  0BD1  0835               	movf	??_compensate_temperature+3,w
  7744  0BD2  3BB9               	subwfb	??_compensate_temperature+7,f
  7745  0BD3  0836               	movf	??_compensate_temperature+4,w
  7746  0BD4  3BBA               	subwfb	??_compensate_temperature+8,f
  7747  0BD5  0837               	movf	??_compensate_temperature+5,w
  7748  0BD6  3BBB               	subwfb	??_compensate_temperature+9,f
  7749  0BD7  083B               	movf	??_compensate_temperature+9,w
  7750  0BD8  00CB               	movwf	compensate_temperature@var1+3
  7751  0BD9  083A               	movf	??_compensate_temperature+8,w
  7752  0BDA  00CA               	movwf	compensate_temperature@var1+2
  7753  0BDB  0839               	movf	??_compensate_temperature+7,w
  7754  0BDC  00C9               	movwf	compensate_temperature@var1+1
  7755  0BDD  0838               	movf	??_compensate_temperature+6,w
  7756  0BDE  00C8               	movwf	compensate_temperature@var1
  7757                           
  7758                           ;BME280_driver/bme280.c: 1136:     var1 = (var1 * ((int32_t)calib_data->dig_T2)) / 2048;
  7759  0BDF  3000               	movlw	0
  7760  0BE0  00A3               	movwf	___aldiv@divisor+3
  7761  0BE1  3000               	movlw	0
  7762  0BE2  00A2               	movwf	___aldiv@divisor+2
  7763  0BE3  3008               	movlw	8
  7764  0BE4  00A1               	movwf	___aldiv@divisor+1
  7765  0BE5  3000               	movlw	0
  7766  0BE6  00A0               	movwf	___aldiv@divisor
  7767  0BE7  082E               	movf	compensate_temperature@calib_data,w
  7768  0BE8  3E02               	addlw	2
  7769  0BE9  0086               	movwf	6
  7770  0BEA  3001               	movlw	1	; select bank2/3
  7771  0BEB  0087               	movwf	7
  7772  0BEC  3F40               	moviw [0]fsr1
  7773  0BED  00B2               	movwf	??_compensate_temperature
  7774  0BEE  3F41               	moviw [1]fsr1
  7775  0BEF  00B3               	movwf	??_compensate_temperature+1
  7776  0BF0  0832               	movf	??_compensate_temperature,w
  7777  0BF1  00F0               	movwf	___lmul@multiplier
  7778  0BF2  0833               	movf	??_compensate_temperature+1,w
  7779  0BF3  00F1               	movwf	___lmul@multiplier+1
  7780  0BF4  0D89               	rlf	9,f
  7781  0BF5  3B89               	subwfb	9,f
  7782  0BF6  0989               	comf	9,f
  7783  0BF7  00F2               	movwf	___lmul@multiplier+2
  7784  0BF8  00F3               	movwf	___lmul@multiplier+3
  7785  0BF9  084B               	movf	compensate_temperature@var1+3,w
  7786  0BFA  00F7               	movwf	___lmul@multiplicand+3
  7787  0BFB  084A               	movf	compensate_temperature@var1+2,w
  7788  0BFC  00F6               	movwf	___lmul@multiplicand+2
  7789  0BFD  0849               	movf	compensate_temperature@var1+1,w
  7790  0BFE  00F5               	movwf	___lmul@multiplicand+1
  7791  0BFF  0848               	movf	compensate_temperature@var1,w
  7792  0C00  00F4               	movwf	___lmul@multiplicand
  7793  0C01  319E  26A9  318B   	fcall	___lmul
  7794  0C04  0873               	movf	?___lmul+3,w
  7795  0C05  0020               	movlb	0	; select bank0
  7796  0C06  00A7               	movwf	___aldiv@dividend+3
  7797  0C07  0872               	movf	?___lmul+2,w
  7798  0C08  00A6               	movwf	___aldiv@dividend+2
  7799  0C09  0871               	movf	?___lmul+1,w
  7800  0C0A  00A5               	movwf	___aldiv@dividend+1
  7801  0C0B  0870               	movf	?___lmul,w
  7802  0C0C  00A4               	movwf	___aldiv@dividend
  7803  0C0D  3197  277F  318B   	fcall	___aldiv
  7804  0C10  0823               	movf	?___aldiv+3,w
  7805  0C11  00CB               	movwf	compensate_temperature@var1+3
  7806  0C12  0822               	movf	?___aldiv+2,w
  7807  0C13  00CA               	movwf	compensate_temperature@var1+2
  7808  0C14  0821               	movf	?___aldiv+1,w
  7809  0C15  00C9               	movwf	compensate_temperature@var1+1
  7810  0C16  0820               	movf	?___aldiv,w
  7811  0C17  00C8               	movwf	compensate_temperature@var1
  7812                           
  7813                           ;BME280_driver/bme280.c: 1137:     var2 = (int32_t)((uncomp_data->temperature / 16) - ((
      +                          int32_t)calib_data->dig_T1));
  7814  0C18  082E               	movf	compensate_temperature@calib_data,w
  7815  0C19  0086               	movwf	6
  7816  0C1A  3001               	movlw	1	; select bank2/3
  7817  0C1B  0087               	movwf	7
  7818  0C1C  3F40               	moviw [0]fsr1
  7819  0C1D  00B2               	movwf	??_compensate_temperature
  7820  0C1E  3F41               	moviw [1]fsr1
  7821  0C1F  00B3               	movwf	??_compensate_temperature+1
  7822  0C20  0832               	movf	??_compensate_temperature,w
  7823  0C21  00B4               	movwf	??_compensate_temperature+2
  7824  0C22  0833               	movf	??_compensate_temperature+1,w
  7825  0C23  00B5               	movwf	??_compensate_temperature+3
  7826  0C24  01B6               	clrf	??_compensate_temperature+4
  7827  0C25  01B7               	clrf	??_compensate_temperature+5
  7828  0C26  084C               	movf	compensate_temperature@uncomp_data,w
  7829  0C27  3E04               	addlw	4
  7830  0C28  0086               	movwf	6
  7831  0C29  0187               	clrf	7
  7832  0C2A  3F40               	moviw [0]fsr1
  7833  0C2B  00B8               	movwf	??_compensate_temperature+6
  7834  0C2C  3F41               	moviw [1]fsr1
  7835  0C2D  00B9               	movwf	??_compensate_temperature+7
  7836  0C2E  3F42               	moviw [2]fsr1
  7837  0C2F  00BA               	movwf	??_compensate_temperature+8
  7838  0C30  3F43               	moviw [3]fsr1
  7839  0C31  00BB               	movwf	??_compensate_temperature+9
  7840  0C32  3004               	movlw	4
  7841  0C33                     u4335:	
  7842  0C33  36BB               	lsrf	??_compensate_temperature+9,f
  7843  0C34  0CBA               	rrf	??_compensate_temperature+8,f
  7844  0C35  0CB9               	rrf	??_compensate_temperature+7,f
  7845  0C36  0CB8               	rrf	??_compensate_temperature+6,f
  7846  0C37  0B89               	decfsz	9,f
  7847  0C38  2C33               	goto	u4335
  7848  0C39  0834               	movf	??_compensate_temperature+2,w
  7849  0C3A  02B8               	subwf	??_compensate_temperature+6,f
  7850  0C3B  0835               	movf	??_compensate_temperature+3,w
  7851  0C3C  3BB9               	subwfb	??_compensate_temperature+7,f
  7852  0C3D  0836               	movf	??_compensate_temperature+4,w
  7853  0C3E  3BBA               	subwfb	??_compensate_temperature+8,f
  7854  0C3F  0837               	movf	??_compensate_temperature+5,w
  7855  0C40  3BBB               	subwfb	??_compensate_temperature+9,f
  7856  0C41  083B               	movf	??_compensate_temperature+9,w
  7857  0C42  00D0               	movwf	compensate_temperature@var2+3
  7858  0C43  083A               	movf	??_compensate_temperature+8,w
  7859  0C44  00CF               	movwf	compensate_temperature@var2+2
  7860  0C45  0839               	movf	??_compensate_temperature+7,w
  7861  0C46  00CE               	movwf	compensate_temperature@var2+1
  7862  0C47  0838               	movf	??_compensate_temperature+6,w
  7863  0C48  00CD               	movwf	compensate_temperature@var2
  7864                           
  7865                           ;BME280_driver/bme280.c: 1138:     var2 = (((var2 * var2) / 4096) * ((int32_t)calib_data
      +                          ->dig_T3)) / 16384;
  7866  0C49  3000               	movlw	0
  7867  0C4A  00A3               	movwf	___aldiv@divisor+3
  7868  0C4B  3000               	movlw	0
  7869  0C4C  00A2               	movwf	___aldiv@divisor+2
  7870  0C4D  3010               	movlw	16
  7871  0C4E  00A1               	movwf	___aldiv@divisor+1
  7872  0C4F  3000               	movlw	0
  7873  0C50  00A0               	movwf	___aldiv@divisor
  7874  0C51  0850               	movf	compensate_temperature@var2+3,w
  7875  0C52  00F3               	movwf	___lmul@multiplier+3
  7876  0C53  084F               	movf	compensate_temperature@var2+2,w
  7877  0C54  00F2               	movwf	___lmul@multiplier+2
  7878  0C55  084E               	movf	compensate_temperature@var2+1,w
  7879  0C56  00F1               	movwf	___lmul@multiplier+1
  7880  0C57  084D               	movf	compensate_temperature@var2,w
  7881  0C58  00F0               	movwf	___lmul@multiplier
  7882  0C59  0850               	movf	compensate_temperature@var2+3,w
  7883  0C5A  00F7               	movwf	___lmul@multiplicand+3
  7884  0C5B  084F               	movf	compensate_temperature@var2+2,w
  7885  0C5C  00F6               	movwf	___lmul@multiplicand+2
  7886  0C5D  084E               	movf	compensate_temperature@var2+1,w
  7887  0C5E  00F5               	movwf	___lmul@multiplicand+1
  7888  0C5F  084D               	movf	compensate_temperature@var2,w
  7889  0C60  00F4               	movwf	___lmul@multiplicand
  7890  0C61  319E  26A9  318B   	fcall	___lmul
  7891  0C64  0873               	movf	?___lmul+3,w
  7892  0C65  0020               	movlb	0	; select bank0
  7893  0C66  00A7               	movwf	___aldiv@dividend+3
  7894  0C67  0872               	movf	?___lmul+2,w
  7895  0C68  00A6               	movwf	___aldiv@dividend+2
  7896  0C69  0871               	movf	?___lmul+1,w
  7897  0C6A  00A5               	movwf	___aldiv@dividend+1
  7898  0C6B  0870               	movf	?___lmul,w
  7899  0C6C  00A4               	movwf	___aldiv@dividend
  7900  0C6D  3197  277F  318B   	fcall	___aldiv
  7901  0C70  0823               	movf	?___aldiv+3,w
  7902  0C71  00BF               	movwf	_compensate_temperature$2269+3
  7903  0C72  0822               	movf	?___aldiv+2,w
  7904  0C73  00BE               	movwf	_compensate_temperature$2269+2
  7905  0C74  0821               	movf	?___aldiv+1,w
  7906  0C75  00BD               	movwf	_compensate_temperature$2269+1
  7907  0C76  0820               	movf	?___aldiv,w
  7908  0C77  00BC               	movwf	_compensate_temperature$2269
  7909                           
  7910                           ;BME280_driver/bme280.c: 1138:     var2 = (((var2 * var2) / 4096) * ((int32_t)calib_data
      +                          ->dig_T3)) / 16384;
  7911  0C78  3000               	movlw	0
  7912  0C79  00A3               	movwf	___aldiv@divisor+3
  7913  0C7A  3000               	movlw	0
  7914  0C7B  00A2               	movwf	___aldiv@divisor+2
  7915  0C7C  3040               	movlw	64
  7916  0C7D  00A1               	movwf	___aldiv@divisor+1
  7917  0C7E  3000               	movlw	0
  7918  0C7F  00A0               	movwf	___aldiv@divisor
  7919  0C80  083F               	movf	_compensate_temperature$2269+3,w
  7920  0C81  00F3               	movwf	___lmul@multiplier+3
  7921  0C82  083E               	movf	_compensate_temperature$2269+2,w
  7922  0C83  00F2               	movwf	___lmul@multiplier+2
  7923  0C84  083D               	movf	_compensate_temperature$2269+1,w
  7924  0C85  00F1               	movwf	___lmul@multiplier+1
  7925  0C86  083C               	movf	_compensate_temperature$2269,w
  7926  0C87  00F0               	movwf	___lmul@multiplier
  7927  0C88  082E               	movf	compensate_temperature@calib_data,w
  7928  0C89  3E04               	addlw	4
  7929  0C8A  0086               	movwf	6
  7930  0C8B  3001               	movlw	1	; select bank2/3
  7931  0C8C  0087               	movwf	7
  7932  0C8D  3F40               	moviw [0]fsr1
  7933  0C8E  00B2               	movwf	??_compensate_temperature
  7934  0C8F  3F41               	moviw [1]fsr1
  7935  0C90  00B3               	movwf	??_compensate_temperature+1
  7936  0C91  0832               	movf	??_compensate_temperature,w
  7937  0C92  00F4               	movwf	___lmul@multiplicand
  7938  0C93  0833               	movf	??_compensate_temperature+1,w
  7939  0C94  00F5               	movwf	___lmul@multiplicand+1
  7940  0C95  0D89               	rlf	9,f
  7941  0C96  3B89               	subwfb	9,f
  7942  0C97  0989               	comf	9,f
  7943  0C98  00F6               	movwf	___lmul@multiplicand+2
  7944  0C99  00F7               	movwf	___lmul@multiplicand+3
  7945  0C9A  319E  26A9  318B   	fcall	___lmul
  7946  0C9D  0873               	movf	?___lmul+3,w
  7947  0C9E  0020               	movlb	0	; select bank0
  7948  0C9F  00A7               	movwf	___aldiv@dividend+3
  7949  0CA0  0872               	movf	?___lmul+2,w
  7950  0CA1  00A6               	movwf	___aldiv@dividend+2
  7951  0CA2  0871               	movf	?___lmul+1,w
  7952  0CA3  00A5               	movwf	___aldiv@dividend+1
  7953  0CA4  0870               	movf	?___lmul,w
  7954  0CA5  00A4               	movwf	___aldiv@dividend
  7955  0CA6  3197  277F  318B   	fcall	___aldiv
  7956  0CA9  0823               	movf	?___aldiv+3,w
  7957  0CAA  00D0               	movwf	compensate_temperature@var2+3
  7958  0CAB  0822               	movf	?___aldiv+2,w
  7959  0CAC  00CF               	movwf	compensate_temperature@var2+2
  7960  0CAD  0821               	movf	?___aldiv+1,w
  7961  0CAE  00CE               	movwf	compensate_temperature@var2+1
  7962  0CAF  0820               	movf	?___aldiv,w
  7963  0CB0  00CD               	movwf	compensate_temperature@var2
  7964                           
  7965                           ;BME280_driver/bme280.c: 1139:     calib_data->t_fine = var1 + var2;
  7966  0CB1  0848               	movf	compensate_temperature@var1,w
  7967  0CB2  074D               	addwf	compensate_temperature@var2,w
  7968  0CB3  00B2               	movwf	??_compensate_temperature
  7969  0CB4  0849               	movf	compensate_temperature@var1+1,w
  7970  0CB5  3D4E               	addwfc	compensate_temperature@var2+1,w
  7971  0CB6  00B3               	movwf	??_compensate_temperature+1
  7972  0CB7  084A               	movf	compensate_temperature@var1+2,w
  7973  0CB8  3D4F               	addwfc	compensate_temperature@var2+2,w
  7974  0CB9  00B4               	movwf	??_compensate_temperature+2
  7975  0CBA  084B               	movf	compensate_temperature@var1+3,w
  7976  0CBB  3D50               	addwfc	compensate_temperature@var2+3,w
  7977  0CBC  00B5               	movwf	??_compensate_temperature+3
  7978  0CBD  082E               	movf	compensate_temperature@calib_data,w
  7979  0CBE  3E21               	addlw	33
  7980  0CBF  0086               	movwf	6
  7981  0CC0  3001               	movlw	1	; select bank2/3
  7982  0CC1  0087               	movwf	7
  7983  0CC2  0832               	movf	??_compensate_temperature,w
  7984  0CC3  3FC0               	movwi [0]fsr1
  7985  0CC4  0833               	movf	??_compensate_temperature+1,w
  7986  0CC5  3FC1               	movwi [1]fsr1
  7987  0CC6  0834               	movf	??_compensate_temperature+2,w
  7988  0CC7  3FC2               	movwi [2]fsr1
  7989  0CC8  0835               	movf	??_compensate_temperature+3,w
  7990  0CC9  3FC3               	movwi [3]fsr1
  7991                           
  7992                           ;BME280_driver/bme280.c: 1140:     temperature = (calib_data->t_fine * 5 + 128) / 256;
  7993  0CCA  3000               	movlw	0
  7994  0CCB  00A3               	movwf	___aldiv@divisor+3
  7995  0CCC  3000               	movlw	0
  7996  0CCD  00A2               	movwf	___aldiv@divisor+2
  7997  0CCE  3001               	movlw	1
  7998  0CCF  00A1               	movwf	___aldiv@divisor+1
  7999  0CD0  3000               	movlw	0
  8000  0CD1  00A0               	movwf	___aldiv@divisor
  8001  0CD2  3080               	movlw	128
  8002  0CD3  00B2               	movwf	??_compensate_temperature
  8003  0CD4  3000               	movlw	0
  8004  0CD5  00B3               	movwf	??_compensate_temperature+1
  8005  0CD6  3000               	movlw	0
  8006  0CD7  00B4               	movwf	??_compensate_temperature+2
  8007  0CD8  3000               	movlw	0
  8008  0CD9  00B5               	movwf	??_compensate_temperature+3
  8009  0CDA  082E               	movf	compensate_temperature@calib_data,w
  8010  0CDB  3E21               	addlw	33
  8011  0CDC  0086               	movwf	6
  8012  0CDD  3001               	movlw	1	; select bank2/3
  8013  0CDE  0087               	movwf	7
  8014  0CDF  3F40               	moviw [0]fsr1
  8015  0CE0  00F0               	movwf	___lmul@multiplier
  8016  0CE1  3F41               	moviw [1]fsr1
  8017  0CE2  00F1               	movwf	___lmul@multiplier+1
  8018  0CE3  3F42               	moviw [2]fsr1
  8019  0CE4  00F2               	movwf	___lmul@multiplier+2
  8020  0CE5  3F43               	moviw [3]fsr1
  8021  0CE6  00F3               	movwf	___lmul@multiplier+3
  8022  0CE7  3000               	movlw	0
  8023  0CE8  00F7               	movwf	___lmul@multiplicand+3
  8024  0CE9  3000               	movlw	0
  8025  0CEA  00F6               	movwf	___lmul@multiplicand+2
  8026  0CEB  3000               	movlw	0
  8027  0CEC  00F5               	movwf	___lmul@multiplicand+1
  8028  0CED  3005               	movlw	5
  8029  0CEE  00F4               	movwf	___lmul@multiplicand
  8030  0CEF  319E  26A9  318B   	fcall	___lmul
  8031  0CF2  0870               	movf	?___lmul,w
  8032  0CF3  0020               	movlb	0	; select bank0
  8033  0CF4  07B2               	addwf	??_compensate_temperature,f
  8034  0CF5  0871               	movf	?___lmul+1,w
  8035  0CF6  3DB3               	addwfc	??_compensate_temperature+1,f
  8036  0CF7  0872               	movf	?___lmul+2,w
  8037  0CF8  3DB4               	addwfc	??_compensate_temperature+2,f
  8038  0CF9  0873               	movf	?___lmul+3,w
  8039  0CFA  3DB5               	addwfc	??_compensate_temperature+3,f
  8040  0CFB  0835               	movf	??_compensate_temperature+3,w
  8041  0CFC  00A7               	movwf	___aldiv@dividend+3
  8042  0CFD  0834               	movf	??_compensate_temperature+2,w
  8043  0CFE  00A6               	movwf	___aldiv@dividend+2
  8044  0CFF  0833               	movf	??_compensate_temperature+1,w
  8045  0D00  00A5               	movwf	___aldiv@dividend+1
  8046  0D01  0832               	movf	??_compensate_temperature,w
  8047  0D02  00A4               	movwf	___aldiv@dividend
  8048  0D03  3197  277F  318B   	fcall	___aldiv
  8049  0D06  0823               	movf	?___aldiv+3,w
  8050  0D07  00D4               	movwf	compensate_temperature@temperature+3
  8051  0D08  0822               	movf	?___aldiv+2,w
  8052  0D09  00D3               	movwf	compensate_temperature@temperature+2
  8053  0D0A  0821               	movf	?___aldiv+1,w
  8054  0D0B  00D2               	movwf	compensate_temperature@temperature+1
  8055  0D0C  0820               	movf	?___aldiv,w
  8056  0D0D  00D1               	movwf	compensate_temperature@temperature
  8057                           
  8058                           ;BME280_driver/bme280.c: 1141:     if (temperature < temperature_min)
  8059  0D0E  1FD4               	btfss	compensate_temperature@temperature+3,7
  8060  0D0F  2D22               	goto	l4242
  8061  0D10  3060               	movlw	96
  8062  0D11  0251               	subwf	compensate_temperature@temperature,w
  8063  0D12  30F0               	movlw	240
  8064  0D13  3B52               	subwfb	compensate_temperature@temperature+1,w
  8065  0D14  30FF               	movlw	255
  8066  0D15  3B53               	subwfb	compensate_temperature@temperature+2,w
  8067  0D16  30FF               	movlw	255
  8068  0D17  3B54               	subwfb	compensate_temperature@temperature+3,w
  8069  0D18  1803               	btfsc	3,0
  8070  0D19  2D22               	goto	l4242
  8071                           
  8072                           ;BME280_driver/bme280.c: 1142:     {;BME280_driver/bme280.c: 1143:         temperature =
      +                           temperature_min;
  8073  0D1A  30FF               	movlw	255
  8074  0D1B  00D4               	movwf	compensate_temperature@temperature+3
  8075  0D1C  30FF               	movlw	255
  8076  0D1D  00D3               	movwf	compensate_temperature@temperature+2
  8077  0D1E  30F0               	movlw	240
  8078  0D1F  00D2               	movwf	compensate_temperature@temperature+1
  8079  0D20  3060               	movlw	96
  8080  0D21  2D37               	goto	L2
  8081  0D22                     l4242:	
  8082                           ;BME280_driver/bme280.c: 1144:     }
  8083                           
  8084  0D22  1BD4               	btfsc	compensate_temperature@temperature+3,7
  8085  0D23  2D38               	goto	l185
  8086  0D24  0854               	movf	compensate_temperature@temperature+3,w
  8087  0D25  1D03               	btfss	3,2
  8088  0D26  2D30               	goto	l4244
  8089  0D27  0853               	movf	compensate_temperature@temperature+2,w
  8090  0D28  1D03               	btfss	3,2
  8091  0D29  2D30               	goto	l4244
  8092  0D2A  3035               	movlw	53
  8093  0D2B  0251               	subwf	compensate_temperature@temperature,w
  8094  0D2C  3021               	movlw	33
  8095  0D2D  3B52               	subwfb	compensate_temperature@temperature+1,w
  8096  0D2E  1C03               	btfss	3,0
  8097  0D2F  2D38               	goto	l185
  8098  0D30                     l4244:	
  8099                           
  8100                           ;BME280_driver/bme280.c: 1146:     {;BME280_driver/bme280.c: 1147:         temperature =
      +                           temperature_max;
  8101  0D30  3000               	movlw	0
  8102  0D31  00D4               	movwf	compensate_temperature@temperature+3
  8103  0D32  3000               	movlw	0
  8104  0D33  00D3               	movwf	compensate_temperature@temperature+2
  8105  0D34  3021               	movlw	33
  8106  0D35  00D2               	movwf	compensate_temperature@temperature+1
  8107  0D36  3034               	movlw	52
  8108  0D37                     L2:	
  8109  0D37  00D1               	movwf	compensate_temperature@temperature
  8110  0D38                     l185:	
  8111                           
  8112                           ;BME280_driver/bme280.c: 1150:     return temperature;
  8113  0D38  0854               	movf	compensate_temperature@temperature+3,w
  8114  0D39  00B1               	movwf	?_compensate_temperature+3
  8115  0D3A  0853               	movf	compensate_temperature@temperature+2,w
  8116  0D3B  00B0               	movwf	?_compensate_temperature+2
  8117  0D3C  0852               	movf	compensate_temperature@temperature+1,w
  8118  0D3D  00AF               	movwf	?_compensate_temperature+1
  8119  0D3E  0851               	movf	compensate_temperature@temperature,w
  8120  0D3F  00AE               	movwf	?_compensate_temperature
  8121  0D40  0008               	return
  8122  0D41                     __end_of_compensate_temperature:	
  8123                           
  8124                           	psect	text7
  8125  0043                     __ptext7:	
  8126 ;; *************** function _compensate_pressure *****************
  8127 ;; Defined at:
  8128 ;;		line 1209 in file "BME280_driver/bme280.c"
  8129 ;; Parameters:    Size  Location     Type
  8130 ;;  uncomp_data     1    wreg     PTR const struct bme280_
  8131 ;;		 -> bme280_get_sensor_data@uncomp_data(12), 
  8132 ;;  calib_data      1   14[BANK0 ] PTR const struct bme280_
  8133 ;;		 -> EnvSensor(51), 
  8134 ;; Auto vars:     Size  Location     Type
  8135 ;;  uncomp_data     1   20[BANK1 ] PTR const struct bme280_
  8136 ;;		 -> bme280_get_sensor_data@uncomp_data(12), 
  8137 ;;  var1            4   41[BANK1 ] long 
  8138 ;;  pressure        4   37[BANK1 ] unsigned long 
  8139 ;;  var2            4   33[BANK1 ] long 
  8140 ;;  pressure_min    4    0        unsigned long 
  8141 ;;  pressure_max    4   21[BANK1 ] unsigned long 
  8142 ;;  var5            4    8[BANK1 ] unsigned long 
  8143 ;;  var4            4    4[BANK1 ] long 
  8144 ;;  var3            4    0[BANK1 ] long 
  8145 ;; Return value:  Size  Location     Type
  8146 ;;                  4   14[BANK0 ] unsigned long 
  8147 ;; Registers used:
  8148 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8149 ;; Tracked objects:
  8150 ;;		On entry : 1F/0
  8151 ;;		On exit  : 1F/0
  8152 ;;		Unchanged: 0/0
  8153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8154 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8155 ;;      Locals:         0       0      45       0       0       0       0       0       0       0       0       0       
      +0       0
  8156 ;;      Temps:          0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8157 ;;      Totals:         0      22      45       0       0       0       0       0       0       0       0       0       
      +0       0
  8158 ;;Total ram usage:       67 bytes
  8159 ;; Hardware stack levels used:    1
  8160 ;; Hardware stack levels required when called:    4
  8161 ;; This function calls:
  8162 ;;		___aldiv
  8163 ;;		___lldiv
  8164 ;;		___lmul
  8165 ;; This function is called by:
  8166 ;;		_bme280_compensate_data
  8167 ;; This function uses a non-reentrant model
  8168 ;;
  8169                           
  8170                           
  8171                           ;psect for function _compensate_pressure
  8172  0043                     _compensate_pressure:	
  8173                           
  8174                           ;incstack = 0
  8175                           ; Regs used in _compensate_pressure: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8176                           ;compensate_pressure@uncomp_data stored from wreg
  8177  0043  0021               	movlb	1	; select bank1
  8178  0044  00B4               	movwf	compensate_pressure@uncomp_data^(0+128)
  8179                           
  8180                           ;BME280_driver/bme280.c: 1219:     uint32_t pressure_max = 110000;
  8181  0045  3000               	movlw	0
  8182  0046  00B8               	movwf	(compensate_pressure@pressure_max+3)^(0+128)
  8183  0047  3001               	movlw	1
  8184  0048  00B7               	movwf	(compensate_pressure@pressure_max+2)^(0+128)
  8185  0049  30AD               	movlw	173
  8186  004A  00B6               	movwf	(compensate_pressure@pressure_max+1)^(0+128)
  8187  004B  30B0               	movlw	176
  8188  004C  00B5               	movwf	compensate_pressure@pressure_max^(0+128)
  8189                           
  8190                           ;BME280_driver/bme280.c: 1221:     var1 = (((int32_t)calib_data->t_fine) / 2) - (int32_t
      +                          )64000;
  8191  004D  3000               	movlw	0
  8192  004E  0020               	movlb	0	; select bank0
  8193  004F  00A3               	movwf	___aldiv@divisor+3
  8194  0050  3000               	movlw	0
  8195  0051  00A2               	movwf	___aldiv@divisor+2
  8196  0052  3000               	movlw	0
  8197  0053  00A1               	movwf	___aldiv@divisor+1
  8198  0054  3002               	movlw	2
  8199  0055  00A0               	movwf	___aldiv@divisor
  8200  0056  082E               	movf	compensate_pressure@calib_data,w
  8201  0057  3E21               	addlw	33
  8202  0058  0086               	movwf	6
  8203  0059  3001               	movlw	1	; select bank2/3
  8204  005A  0087               	movwf	7
  8205  005B  3F40               	moviw [0]fsr1
  8206  005C  00A4               	movwf	___aldiv@dividend
  8207  005D  3F41               	moviw [1]fsr1
  8208  005E  00A5               	movwf	___aldiv@dividend+1
  8209  005F  3F42               	moviw [2]fsr1
  8210  0060  00A6               	movwf	___aldiv@dividend+2
  8211  0061  3F43               	moviw [3]fsr1
  8212  0062  00A7               	movwf	___aldiv@dividend+3
  8213  0063  3197  277F  3180   	fcall	___aldiv
  8214  0066  3000               	movlw	0
  8215  0067  0720               	addwf	?___aldiv,w
  8216  0068  0021               	movlb	1	; select bank1
  8217  0069  00C9               	movwf	compensate_pressure@var1^(0+128)
  8218  006A  3006               	movlw	6
  8219  006B  0020               	movlb	0	; select bank0
  8220  006C  3D21               	addwfc	?___aldiv+1,w
  8221  006D  0021               	movlb	1	; select bank1
  8222  006E  00CA               	movwf	(compensate_pressure@var1+1)^(0+128)
  8223  006F  30FF               	movlw	255
  8224  0070  0020               	movlb	0	; select bank0
  8225  0071  3D22               	addwfc	?___aldiv+2,w
  8226  0072  0021               	movlb	1	; select bank1
  8227  0073  00CB               	movwf	(compensate_pressure@var1+2)^(0+128)
  8228  0074  30FF               	movlw	255
  8229  0075  0020               	movlb	0	; select bank0
  8230  0076  3D23               	addwfc	?___aldiv+3,w
  8231  0077  0021               	movlb	1	; select bank1
  8232  0078  00CC               	movwf	(compensate_pressure@var1+3)^(0+128)
  8233                           
  8234                           ;BME280_driver/bme280.c: 1222:     var2 = (((var1 / 4) * (var1 / 4)) / 2048) * ((int32_t
      +                          )calib_data->dig_P6);
  8235  0079  3000               	movlw	0
  8236  007A  0020               	movlb	0	; select bank0
  8237  007B  00A3               	movwf	___aldiv@divisor+3
  8238  007C  3000               	movlw	0
  8239  007D  00A2               	movwf	___aldiv@divisor+2
  8240  007E  3000               	movlw	0
  8241  007F  00A1               	movwf	___aldiv@divisor+1
  8242  0080  3004               	movlw	4
  8243  0081  00A0               	movwf	___aldiv@divisor
  8244  0082  0021               	movlb	1	; select bank1
  8245  0083  084C               	movf	(compensate_pressure@var1+3)^(0+128),w
  8246  0084  0020               	movlb	0	; select bank0
  8247  0085  00A7               	movwf	___aldiv@dividend+3
  8248  0086  0021               	movlb	1	; select bank1
  8249  0087  084B               	movf	(compensate_pressure@var1+2)^(0+128),w
  8250  0088  0020               	movlb	0	; select bank0
  8251  0089  00A6               	movwf	___aldiv@dividend+2
  8252  008A  0021               	movlb	1	; select bank1
  8253  008B  084A               	movf	(compensate_pressure@var1+1)^(0+128),w
  8254  008C  0020               	movlb	0	; select bank0
  8255  008D  00A5               	movwf	___aldiv@dividend+1
  8256  008E  0021               	movlb	1	; select bank1
  8257  008F  0849               	movf	compensate_pressure@var1^(0+128),w
  8258  0090  0020               	movlb	0	; select bank0
  8259  0091  00A4               	movwf	___aldiv@dividend
  8260  0092  3197  277F  3180   	fcall	___aldiv
  8261  0095  0823               	movf	?___aldiv+3,w
  8262  0096  00F3               	movwf	___lmul@multiplier+3
  8263  0097  0822               	movf	?___aldiv+2,w
  8264  0098  00F2               	movwf	___lmul@multiplier+2
  8265  0099  0821               	movf	?___aldiv+1,w
  8266  009A  00F1               	movwf	___lmul@multiplier+1
  8267  009B  0820               	movf	?___aldiv,w
  8268  009C  00F0               	movwf	___lmul@multiplier
  8269  009D  3000               	movlw	0
  8270  009E  00A3               	movwf	___aldiv@divisor+3
  8271  009F  3000               	movlw	0
  8272  00A0  00A2               	movwf	___aldiv@divisor+2
  8273  00A1  3000               	movlw	0
  8274  00A2  00A1               	movwf	___aldiv@divisor+1
  8275  00A3  3004               	movlw	4
  8276  00A4  00A0               	movwf	___aldiv@divisor
  8277  00A5  0021               	movlb	1	; select bank1
  8278  00A6  084C               	movf	(compensate_pressure@var1+3)^(0+128),w
  8279  00A7  0020               	movlb	0	; select bank0
  8280  00A8  00A7               	movwf	___aldiv@dividend+3
  8281  00A9  0021               	movlb	1	; select bank1
  8282  00AA  084B               	movf	(compensate_pressure@var1+2)^(0+128),w
  8283  00AB  0020               	movlb	0	; select bank0
  8284  00AC  00A6               	movwf	___aldiv@dividend+2
  8285  00AD  0021               	movlb	1	; select bank1
  8286  00AE  084A               	movf	(compensate_pressure@var1+1)^(0+128),w
  8287  00AF  0020               	movlb	0	; select bank0
  8288  00B0  00A5               	movwf	___aldiv@dividend+1
  8289  00B1  0021               	movlb	1	; select bank1
  8290  00B2  0849               	movf	compensate_pressure@var1^(0+128),w
  8291  00B3  0020               	movlb	0	; select bank0
  8292  00B4  00A4               	movwf	___aldiv@dividend
  8293  00B5  3197  277F  3180   	fcall	___aldiv
  8294  00B8  0823               	movf	?___aldiv+3,w
  8295  00B9  00F7               	movwf	___lmul@multiplicand+3
  8296  00BA  0822               	movf	?___aldiv+2,w
  8297  00BB  00F6               	movwf	___lmul@multiplicand+2
  8298  00BC  0821               	movf	?___aldiv+1,w
  8299  00BD  00F5               	movwf	___lmul@multiplicand+1
  8300  00BE  0820               	movf	?___aldiv,w
  8301  00BF  00F4               	movwf	___lmul@multiplicand
  8302  00C0  319E  26A9  3180   	fcall	___lmul
  8303  00C3  0873               	movf	?___lmul+3,w
  8304  00C4  0021               	movlb	1	; select bank1
  8305  00C5  00BC               	movwf	(_compensate_pressure$2270+3)^(0+128)
  8306  00C6  0872               	movf	?___lmul+2,w
  8307  00C7  00BB               	movwf	(_compensate_pressure$2270+2)^(0+128)
  8308  00C8  0871               	movf	?___lmul+1,w
  8309  00C9  00BA               	movwf	(_compensate_pressure$2270+1)^(0+128)
  8310  00CA  0870               	movf	?___lmul,w
  8311  00CB  00B9               	movwf	_compensate_pressure$2270^(0+128)
  8312                           
  8313                           ;BME280_driver/bme280.c: 1222:     var2 = (((var1 / 4) * (var1 / 4)) / 2048) * ((int32_t
      +                          )calib_data->dig_P6);
  8314  00CC  3000               	movlw	0
  8315  00CD  0020               	movlb	0	; select bank0
  8316  00CE  00A3               	movwf	___aldiv@divisor+3
  8317  00CF  3000               	movlw	0
  8318  00D0  00A2               	movwf	___aldiv@divisor+2
  8319  00D1  3008               	movlw	8
  8320  00D2  00A1               	movwf	___aldiv@divisor+1
  8321  00D3  3000               	movlw	0
  8322  00D4  00A0               	movwf	___aldiv@divisor
  8323  00D5  0021               	movlb	1	; select bank1
  8324  00D6  083C               	movf	(_compensate_pressure$2270+3)^(0+128),w
  8325  00D7  0020               	movlb	0	; select bank0
  8326  00D8  00A7               	movwf	___aldiv@dividend+3
  8327  00D9  0021               	movlb	1	; select bank1
  8328  00DA  083B               	movf	(_compensate_pressure$2270+2)^(0+128),w
  8329  00DB  0020               	movlb	0	; select bank0
  8330  00DC  00A6               	movwf	___aldiv@dividend+2
  8331  00DD  0021               	movlb	1	; select bank1
  8332  00DE  083A               	movf	(_compensate_pressure$2270+1)^(0+128),w
  8333  00DF  0020               	movlb	0	; select bank0
  8334  00E0  00A5               	movwf	___aldiv@dividend+1
  8335  00E1  0021               	movlb	1	; select bank1
  8336  00E2  0839               	movf	_compensate_pressure$2270^(0+128),w
  8337  00E3  0020               	movlb	0	; select bank0
  8338  00E4  00A4               	movwf	___aldiv@dividend
  8339  00E5  3197  277F  3180   	fcall	___aldiv
  8340  00E8  0823               	movf	?___aldiv+3,w
  8341  00E9  00F3               	movwf	___lmul@multiplier+3
  8342  00EA  0822               	movf	?___aldiv+2,w
  8343  00EB  00F2               	movwf	___lmul@multiplier+2
  8344  00EC  0821               	movf	?___aldiv+1,w
  8345  00ED  00F1               	movwf	___lmul@multiplier+1
  8346  00EE  0820               	movf	?___aldiv,w
  8347  00EF  00F0               	movwf	___lmul@multiplier
  8348  00F0  082E               	movf	compensate_pressure@calib_data,w
  8349  00F1  3E10               	addlw	16
  8350  00F2  0086               	movwf	6
  8351  00F3  3001               	movlw	1	; select bank2/3
  8352  00F4  0087               	movwf	7
  8353  00F5  3F40               	moviw [0]fsr1
  8354  00F6  00B2               	movwf	??_compensate_pressure
  8355  00F7  3F41               	moviw [1]fsr1
  8356  00F8  00B3               	movwf	??_compensate_pressure+1
  8357  00F9  0832               	movf	??_compensate_pressure,w
  8358  00FA  00F4               	movwf	___lmul@multiplicand
  8359  00FB  0833               	movf	??_compensate_pressure+1,w
  8360  00FC  00F5               	movwf	___lmul@multiplicand+1
  8361  00FD  0D89               	rlf	9,f
  8362  00FE  3B89               	subwfb	9,f
  8363  00FF  0989               	comf	9,f
  8364  0100  00F6               	movwf	___lmul@multiplicand+2
  8365  0101  00F7               	movwf	___lmul@multiplicand+3
  8366  0102  319E  26A9  3180   	fcall	___lmul
  8367  0105  0873               	movf	?___lmul+3,w
  8368  0106  0021               	movlb	1	; select bank1
  8369  0107  00C4               	movwf	(compensate_pressure@var2+3)^(0+128)
  8370  0108  0872               	movf	?___lmul+2,w
  8371  0109  00C3               	movwf	(compensate_pressure@var2+2)^(0+128)
  8372  010A  0871               	movf	?___lmul+1,w
  8373  010B  00C2               	movwf	(compensate_pressure@var2+1)^(0+128)
  8374  010C  0870               	movf	?___lmul,w
  8375  010D  00C1               	movwf	compensate_pressure@var2^(0+128)
  8376                           
  8377                           ;BME280_driver/bme280.c: 1223:     var2 = var2 + ((var1 * ((int32_t)calib_data->dig_P5))
      +                           * 2);
  8378  010E  0841               	movf	compensate_pressure@var2^(0+128),w
  8379  010F  0020               	movlb	0	; select bank0
  8380  0110  00B2               	movwf	??_compensate_pressure
  8381  0111  0021               	movlb	1	; select bank1
  8382  0112  0842               	movf	(compensate_pressure@var2+1)^(0+128),w
  8383  0113  0020               	movlb	0	; select bank0
  8384  0114  00B3               	movwf	??_compensate_pressure+1
  8385  0115  0021               	movlb	1	; select bank1
  8386  0116  0843               	movf	(compensate_pressure@var2+2)^(0+128),w
  8387  0117  0020               	movlb	0	; select bank0
  8388  0118  00B4               	movwf	??_compensate_pressure+2
  8389  0119  0021               	movlb	1	; select bank1
  8390  011A  0844               	movf	(compensate_pressure@var2+3)^(0+128),w
  8391  011B  0020               	movlb	0	; select bank0
  8392  011C  00B5               	movwf	??_compensate_pressure+3
  8393  011D  082E               	movf	compensate_pressure@calib_data,w
  8394  011E  3E0E               	addlw	14
  8395  011F  0086               	movwf	6
  8396  0120  3001               	movlw	1	; select bank2/3
  8397  0121  0087               	movwf	7
  8398  0122  3F40               	moviw [0]fsr1
  8399  0123  00B6               	movwf	??_compensate_pressure+4
  8400  0124  3F41               	moviw [1]fsr1
  8401  0125  00B7               	movwf	??_compensate_pressure+5
  8402  0126  0836               	movf	??_compensate_pressure+4,w
  8403  0127  00F0               	movwf	___lmul@multiplier
  8404  0128  0837               	movf	??_compensate_pressure+5,w
  8405  0129  00F1               	movwf	___lmul@multiplier+1
  8406  012A  0D89               	rlf	9,f
  8407  012B  3B89               	subwfb	9,f
  8408  012C  0989               	comf	9,f
  8409  012D  00F2               	movwf	___lmul@multiplier+2
  8410  012E  00F3               	movwf	___lmul@multiplier+3
  8411  012F  0021               	movlb	1	; select bank1
  8412  0130  084C               	movf	(compensate_pressure@var1+3)^(0+128),w
  8413  0131  00F7               	movwf	___lmul@multiplicand+3
  8414  0132  084B               	movf	(compensate_pressure@var1+2)^(0+128),w
  8415  0133  00F6               	movwf	___lmul@multiplicand+2
  8416  0134  084A               	movf	(compensate_pressure@var1+1)^(0+128),w
  8417  0135  00F5               	movwf	___lmul@multiplicand+1
  8418  0136  0849               	movf	compensate_pressure@var1^(0+128),w
  8419  0137  00F4               	movwf	___lmul@multiplicand
  8420  0138  319E  26A9  3180   	fcall	___lmul
  8421  013B  0870               	movf	?___lmul,w
  8422  013C  0020               	movlb	0	; select bank0
  8423  013D  00B8               	movwf	??_compensate_pressure+6
  8424  013E  0871               	movf	?___lmul+1,w
  8425  013F  00B9               	movwf	??_compensate_pressure+7
  8426  0140  0872               	movf	?___lmul+2,w
  8427  0141  00BA               	movwf	??_compensate_pressure+8
  8428  0142  0873               	movf	?___lmul+3,w
  8429  0143  00BB               	movwf	??_compensate_pressure+9
  8430  0144  3001               	movlw	1
  8431  0145                     u4365:	
  8432  0145  35B8               	lslf	??_compensate_pressure+6,f
  8433  0146  0DB9               	rlf	??_compensate_pressure+7,f
  8434  0147  0DBA               	rlf	??_compensate_pressure+8,f
  8435  0148  0DBB               	rlf	??_compensate_pressure+9,f
  8436  0149  0B89               	decfsz	9,f
  8437  014A  2945               	goto	u4365
  8438  014B  0838               	movf	??_compensate_pressure+6,w
  8439  014C  07B2               	addwf	??_compensate_pressure,f
  8440  014D  0839               	movf	??_compensate_pressure+7,w
  8441  014E  3DB3               	addwfc	??_compensate_pressure+1,f
  8442  014F  083A               	movf	??_compensate_pressure+8,w
  8443  0150  3DB4               	addwfc	??_compensate_pressure+2,f
  8444  0151  083B               	movf	??_compensate_pressure+9,w
  8445  0152  3DB5               	addwfc	??_compensate_pressure+3,f
  8446  0153  0835               	movf	??_compensate_pressure+3,w
  8447  0154  0021               	movlb	1	; select bank1
  8448  0155  00C4               	movwf	(compensate_pressure@var2+3)^(0+128)
  8449  0156  0020               	movlb	0	; select bank0
  8450  0157  0834               	movf	??_compensate_pressure+2,w
  8451  0158  0021               	movlb	1	; select bank1
  8452  0159  00C3               	movwf	(compensate_pressure@var2+2)^(0+128)
  8453  015A  0020               	movlb	0	; select bank0
  8454  015B  0833               	movf	??_compensate_pressure+1,w
  8455  015C  0021               	movlb	1	; select bank1
  8456  015D  00C2               	movwf	(compensate_pressure@var2+1)^(0+128)
  8457  015E  0020               	movlb	0	; select bank0
  8458  015F  0832               	movf	??_compensate_pressure,w
  8459  0160  0021               	movlb	1	; select bank1
  8460  0161  00C1               	movwf	compensate_pressure@var2^(0+128)
  8461                           
  8462                           ;BME280_driver/bme280.c: 1224:     var2 = (var2 / 4) + (((int32_t)calib_data->dig_P4) * 
      +                          65536);
  8463  0162  0020               	movlb	0	; select bank0
  8464  0163  082E               	movf	compensate_pressure@calib_data,w
  8465  0164  3E0C               	addlw	12
  8466  0165  0086               	movwf	6
  8467  0166  3001               	movlw	1	; select bank2/3
  8468  0167  0087               	movwf	7
  8469  0168  3F40               	moviw [0]fsr1
  8470  0169  00B2               	movwf	??_compensate_pressure
  8471  016A  3F41               	moviw [1]fsr1
  8472  016B  00B3               	movwf	??_compensate_pressure+1
  8473  016C  0832               	movf	??_compensate_pressure,w
  8474  016D  00B4               	movwf	??_compensate_pressure+2
  8475  016E  0833               	movf	??_compensate_pressure+1,w
  8476  016F  00B5               	movwf	??_compensate_pressure+3
  8477  0170  01B6               	clrf	??_compensate_pressure+4
  8478  0171  01B7               	clrf	??_compensate_pressure+5
  8479  0172  3010               	movlw	16
  8480  0173                     u4375:	
  8481  0173  35B4               	lslf	??_compensate_pressure+2,f
  8482  0174  0DB5               	rlf	??_compensate_pressure+3,f
  8483  0175  0DB6               	rlf	??_compensate_pressure+4,f
  8484  0176  0DB7               	rlf	??_compensate_pressure+5,f
  8485  0177  0B89               	decfsz	9,f
  8486  0178  2973               	goto	u4375
  8487  0179  3000               	movlw	0
  8488  017A  00A3               	movwf	___aldiv@divisor+3
  8489  017B  3000               	movlw	0
  8490  017C  00A2               	movwf	___aldiv@divisor+2
  8491  017D  3000               	movlw	0
  8492  017E  00A1               	movwf	___aldiv@divisor+1
  8493  017F  3004               	movlw	4
  8494  0180  00A0               	movwf	___aldiv@divisor
  8495  0181  0021               	movlb	1	; select bank1
  8496  0182  0844               	movf	(compensate_pressure@var2+3)^(0+128),w
  8497  0183  0020               	movlb	0	; select bank0
  8498  0184  00A7               	movwf	___aldiv@dividend+3
  8499  0185  0021               	movlb	1	; select bank1
  8500  0186  0843               	movf	(compensate_pressure@var2+2)^(0+128),w
  8501  0187  0020               	movlb	0	; select bank0
  8502  0188  00A6               	movwf	___aldiv@dividend+2
  8503  0189  0021               	movlb	1	; select bank1
  8504  018A  0842               	movf	(compensate_pressure@var2+1)^(0+128),w
  8505  018B  0020               	movlb	0	; select bank0
  8506  018C  00A5               	movwf	___aldiv@dividend+1
  8507  018D  0021               	movlb	1	; select bank1
  8508  018E  0841               	movf	compensate_pressure@var2^(0+128),w
  8509  018F  0020               	movlb	0	; select bank0
  8510  0190  00A4               	movwf	___aldiv@dividend
  8511  0191  3197  277F  3180   	fcall	___aldiv
  8512  0194  0820               	movf	?___aldiv,w
  8513  0195  07B4               	addwf	??_compensate_pressure+2,f
  8514  0196  0821               	movf	?___aldiv+1,w
  8515  0197  3DB5               	addwfc	??_compensate_pressure+3,f
  8516  0198  0822               	movf	?___aldiv+2,w
  8517  0199  3DB6               	addwfc	??_compensate_pressure+4,f
  8518  019A  0823               	movf	?___aldiv+3,w
  8519  019B  3DB7               	addwfc	??_compensate_pressure+5,f
  8520  019C  0837               	movf	??_compensate_pressure+5,w
  8521  019D  0021               	movlb	1	; select bank1
  8522  019E  00C4               	movwf	(compensate_pressure@var2+3)^(0+128)
  8523  019F  0020               	movlb	0	; select bank0
  8524  01A0  0836               	movf	??_compensate_pressure+4,w
  8525  01A1  0021               	movlb	1	; select bank1
  8526  01A2  00C3               	movwf	(compensate_pressure@var2+2)^(0+128)
  8527  01A3  0020               	movlb	0	; select bank0
  8528  01A4  0835               	movf	??_compensate_pressure+3,w
  8529  01A5  0021               	movlb	1	; select bank1
  8530  01A6  00C2               	movwf	(compensate_pressure@var2+1)^(0+128)
  8531  01A7  0020               	movlb	0	; select bank0
  8532  01A8  0834               	movf	??_compensate_pressure+2,w
  8533  01A9  0021               	movlb	1	; select bank1
  8534  01AA  00C1               	movwf	compensate_pressure@var2^(0+128)
  8535                           
  8536                           ;BME280_driver/bme280.c: 1225:     var3 = (calib_data->dig_P3 * (((var1 / 4) * (var1 / 4
      +                          )) / 8192)) / 8;
  8537  01AB  3000               	movlw	0
  8538  01AC  0020               	movlb	0	; select bank0
  8539  01AD  00A3               	movwf	___aldiv@divisor+3
  8540  01AE  3000               	movlw	0
  8541  01AF  00A2               	movwf	___aldiv@divisor+2
  8542  01B0  3000               	movlw	0
  8543  01B1  00A1               	movwf	___aldiv@divisor+1
  8544  01B2  3004               	movlw	4
  8545  01B3  00A0               	movwf	___aldiv@divisor
  8546  01B4  0021               	movlb	1	; select bank1
  8547  01B5  084C               	movf	(compensate_pressure@var1+3)^(0+128),w
  8548  01B6  0020               	movlb	0	; select bank0
  8549  01B7  00A7               	movwf	___aldiv@dividend+3
  8550  01B8  0021               	movlb	1	; select bank1
  8551  01B9  084B               	movf	(compensate_pressure@var1+2)^(0+128),w
  8552  01BA  0020               	movlb	0	; select bank0
  8553  01BB  00A6               	movwf	___aldiv@dividend+2
  8554  01BC  0021               	movlb	1	; select bank1
  8555  01BD  084A               	movf	(compensate_pressure@var1+1)^(0+128),w
  8556  01BE  0020               	movlb	0	; select bank0
  8557  01BF  00A5               	movwf	___aldiv@dividend+1
  8558  01C0  0021               	movlb	1	; select bank1
  8559  01C1  0849               	movf	compensate_pressure@var1^(0+128),w
  8560  01C2  0020               	movlb	0	; select bank0
  8561  01C3  00A4               	movwf	___aldiv@dividend
  8562  01C4  3197  277F  3180   	fcall	___aldiv
  8563  01C7  0823               	movf	?___aldiv+3,w
  8564  01C8  00F3               	movwf	___lmul@multiplier+3
  8565  01C9  0822               	movf	?___aldiv+2,w
  8566  01CA  00F2               	movwf	___lmul@multiplier+2
  8567  01CB  0821               	movf	?___aldiv+1,w
  8568  01CC  00F1               	movwf	___lmul@multiplier+1
  8569  01CD  0820               	movf	?___aldiv,w
  8570  01CE  00F0               	movwf	___lmul@multiplier
  8571  01CF  3000               	movlw	0
  8572  01D0  00A3               	movwf	___aldiv@divisor+3
  8573  01D1  3000               	movlw	0
  8574  01D2  00A2               	movwf	___aldiv@divisor+2
  8575  01D3  3000               	movlw	0
  8576  01D4  00A1               	movwf	___aldiv@divisor+1
  8577  01D5  3004               	movlw	4
  8578  01D6  00A0               	movwf	___aldiv@divisor
  8579  01D7  0021               	movlb	1	; select bank1
  8580  01D8  084C               	movf	(compensate_pressure@var1+3)^(0+128),w
  8581  01D9  0020               	movlb	0	; select bank0
  8582  01DA  00A7               	movwf	___aldiv@dividend+3
  8583  01DB  0021               	movlb	1	; select bank1
  8584  01DC  084B               	movf	(compensate_pressure@var1+2)^(0+128),w
  8585  01DD  0020               	movlb	0	; select bank0
  8586  01DE  00A6               	movwf	___aldiv@dividend+2
  8587  01DF  0021               	movlb	1	; select bank1
  8588  01E0  084A               	movf	(compensate_pressure@var1+1)^(0+128),w
  8589  01E1  0020               	movlb	0	; select bank0
  8590  01E2  00A5               	movwf	___aldiv@dividend+1
  8591  01E3  0021               	movlb	1	; select bank1
  8592  01E4  0849               	movf	compensate_pressure@var1^(0+128),w
  8593  01E5  0020               	movlb	0	; select bank0
  8594  01E6  00A4               	movwf	___aldiv@dividend
  8595  01E7  3197  277F  3180   	fcall	___aldiv
  8596  01EA  0823               	movf	?___aldiv+3,w
  8597  01EB  00F7               	movwf	___lmul@multiplicand+3
  8598  01EC  0822               	movf	?___aldiv+2,w
  8599  01ED  00F6               	movwf	___lmul@multiplicand+2
  8600  01EE  0821               	movf	?___aldiv+1,w
  8601  01EF  00F5               	movwf	___lmul@multiplicand+1
  8602  01F0  0820               	movf	?___aldiv,w
  8603  01F1  00F4               	movwf	___lmul@multiplicand
  8604  01F2  319E  26A9  3180   	fcall	___lmul
  8605  01F5  0873               	movf	?___lmul+3,w
  8606  01F6  0021               	movlb	1	; select bank1
  8607  01F7  00BC               	movwf	(_compensate_pressure$2270+3)^(0+128)
  8608  01F8  0872               	movf	?___lmul+2,w
  8609  01F9  00BB               	movwf	(_compensate_pressure$2270+2)^(0+128)
  8610  01FA  0871               	movf	?___lmul+1,w
  8611  01FB  00BA               	movwf	(_compensate_pressure$2270+1)^(0+128)
  8612  01FC  0870               	movf	?___lmul,w
  8613  01FD  00B9               	movwf	_compensate_pressure$2270^(0+128)
  8614                           
  8615                           ;BME280_driver/bme280.c: 1225:     var3 = (calib_data->dig_P3 * (((var1 / 4) * (var1 / 4
      +                          )) / 8192)) / 8;
  8616  01FE  0020               	movlb	0	; select bank0
  8617  01FF  082E               	movf	compensate_pressure@calib_data,w
  8618  0200  3E0A               	addlw	10
  8619  0201  0086               	movwf	6
  8620  0202  3001               	movlw	1	; select bank2/3
  8621  0203  0087               	movwf	7
  8622  0204  3F40               	moviw [0]fsr1
  8623  0205  00B2               	movwf	??_compensate_pressure
  8624  0206  3F41               	moviw [1]fsr1
  8625  0207  00B3               	movwf	??_compensate_pressure+1
  8626  0208  0832               	movf	??_compensate_pressure,w
  8627  0209  00F0               	movwf	___lmul@multiplier
  8628  020A  0833               	movf	??_compensate_pressure+1,w
  8629  020B  00F1               	movwf	___lmul@multiplier+1
  8630  020C  0D89               	rlf	9,f
  8631  020D  3B89               	subwfb	9,f
  8632  020E  0989               	comf	9,f
  8633  020F  00F2               	movwf	___lmul@multiplier+2
  8634  0210  00F3               	movwf	___lmul@multiplier+3
  8635  0211  3000               	movlw	0
  8636  0212  00A3               	movwf	___aldiv@divisor+3
  8637  0213  3000               	movlw	0
  8638  0214  00A2               	movwf	___aldiv@divisor+2
  8639  0215  3020               	movlw	32
  8640  0216  00A1               	movwf	___aldiv@divisor+1
  8641  0217  3000               	movlw	0
  8642  0218  00A0               	movwf	___aldiv@divisor
  8643  0219  0021               	movlb	1	; select bank1
  8644  021A  083C               	movf	(_compensate_pressure$2270+3)^(0+128),w
  8645  021B  0020               	movlb	0	; select bank0
  8646  021C  00A7               	movwf	___aldiv@dividend+3
  8647  021D  0021               	movlb	1	; select bank1
  8648  021E  083B               	movf	(_compensate_pressure$2270+2)^(0+128),w
  8649  021F  0020               	movlb	0	; select bank0
  8650  0220  00A6               	movwf	___aldiv@dividend+2
  8651  0221  0021               	movlb	1	; select bank1
  8652  0222  083A               	movf	(_compensate_pressure$2270+1)^(0+128),w
  8653  0223  0020               	movlb	0	; select bank0
  8654  0224  00A5               	movwf	___aldiv@dividend+1
  8655  0225  0021               	movlb	1	; select bank1
  8656  0226  0839               	movf	_compensate_pressure$2270^(0+128),w
  8657  0227  0020               	movlb	0	; select bank0
  8658  0228  00A4               	movwf	___aldiv@dividend
  8659  0229  3197  277F  3180   	fcall	___aldiv
  8660  022C  0823               	movf	?___aldiv+3,w
  8661  022D  00F7               	movwf	___lmul@multiplicand+3
  8662  022E  0822               	movf	?___aldiv+2,w
  8663  022F  00F6               	movwf	___lmul@multiplicand+2
  8664  0230  0821               	movf	?___aldiv+1,w
  8665  0231  00F5               	movwf	___lmul@multiplicand+1
  8666  0232  0820               	movf	?___aldiv,w
  8667  0233  00F4               	movwf	___lmul@multiplicand
  8668  0234  319E  26A9  3180   	fcall	___lmul
  8669  0237  0873               	movf	?___lmul+3,w
  8670  0238  0021               	movlb	1	; select bank1
  8671  0239  00AF               	movwf	(_compensate_pressure$2271+3)^(0+128)
  8672  023A  0872               	movf	?___lmul+2,w
  8673  023B  00AE               	movwf	(_compensate_pressure$2271+2)^(0+128)
  8674  023C  0871               	movf	?___lmul+1,w
  8675  023D  00AD               	movwf	(_compensate_pressure$2271+1)^(0+128)
  8676  023E  0870               	movf	?___lmul,w
  8677  023F  00AC               	movwf	_compensate_pressure$2271^(0+128)
  8678                           
  8679                           ;BME280_driver/bme280.c: 1225:     var3 = (calib_data->dig_P3 * (((var1 / 4) * (var1 / 4
      +                          )) / 8192)) / 8;
  8680  0240  3000               	movlw	0
  8681  0241  0020               	movlb	0	; select bank0
  8682  0242  00A3               	movwf	___aldiv@divisor+3
  8683  0243  3000               	movlw	0
  8684  0244  00A2               	movwf	___aldiv@divisor+2
  8685  0245  3000               	movlw	0
  8686  0246  00A1               	movwf	___aldiv@divisor+1
  8687  0247  3008               	movlw	8
  8688  0248  00A0               	movwf	___aldiv@divisor
  8689  0249  0021               	movlb	1	; select bank1
  8690  024A  082F               	movf	(_compensate_pressure$2271+3)^(0+128),w
  8691  024B  0020               	movlb	0	; select bank0
  8692  024C  00A7               	movwf	___aldiv@dividend+3
  8693  024D  0021               	movlb	1	; select bank1
  8694  024E  082E               	movf	(_compensate_pressure$2271+2)^(0+128),w
  8695  024F  0020               	movlb	0	; select bank0
  8696  0250  00A6               	movwf	___aldiv@dividend+2
  8697  0251  0021               	movlb	1	; select bank1
  8698  0252  082D               	movf	(_compensate_pressure$2271+1)^(0+128),w
  8699  0253  0020               	movlb	0	; select bank0
  8700  0254  00A5               	movwf	___aldiv@dividend+1
  8701  0255  0021               	movlb	1	; select bank1
  8702  0256  082C               	movf	_compensate_pressure$2271^(0+128),w
  8703  0257  0020               	movlb	0	; select bank0
  8704  0258  00A4               	movwf	___aldiv@dividend
  8705  0259  3197  277F  3180   	fcall	___aldiv
  8706  025C  0823               	movf	?___aldiv+3,w
  8707  025D  0021               	movlb	1	; select bank1
  8708  025E  00A3               	movwf	(compensate_pressure@var3+3)^(0+128)
  8709  025F  0020               	movlb	0	; select bank0
  8710  0260  0822               	movf	?___aldiv+2,w
  8711  0261  0021               	movlb	1	; select bank1
  8712  0262  00A2               	movwf	(compensate_pressure@var3+2)^(0+128)
  8713  0263  0020               	movlb	0	; select bank0
  8714  0264  0821               	movf	?___aldiv+1,w
  8715  0265  0021               	movlb	1	; select bank1
  8716  0266  00A1               	movwf	(compensate_pressure@var3+1)^(0+128)
  8717  0267  0020               	movlb	0	; select bank0
  8718  0268  0820               	movf	?___aldiv,w
  8719  0269  0021               	movlb	1	; select bank1
  8720  026A  00A0               	movwf	compensate_pressure@var3^(0+128)
  8721                           
  8722                           ;BME280_driver/bme280.c: 1226:     var4 = (((int32_t)calib_data->dig_P2) * var1) / 2;
  8723  026B  3000               	movlw	0
  8724  026C  0020               	movlb	0	; select bank0
  8725  026D  00A3               	movwf	___aldiv@divisor+3
  8726  026E  3000               	movlw	0
  8727  026F  00A2               	movwf	___aldiv@divisor+2
  8728  0270  3000               	movlw	0
  8729  0271  00A1               	movwf	___aldiv@divisor+1
  8730  0272  3002               	movlw	2
  8731  0273  00A0               	movwf	___aldiv@divisor
  8732  0274  082E               	movf	compensate_pressure@calib_data,w
  8733  0275  3E08               	addlw	8
  8734  0276  0086               	movwf	6
  8735  0277  3001               	movlw	1	; select bank2/3
  8736  0278  0087               	movwf	7
  8737  0279  3F40               	moviw [0]fsr1
  8738  027A  00B2               	movwf	??_compensate_pressure
  8739  027B  3F41               	moviw [1]fsr1
  8740  027C  00B3               	movwf	??_compensate_pressure+1
  8741  027D  0832               	movf	??_compensate_pressure,w
  8742  027E  00F0               	movwf	___lmul@multiplier
  8743  027F  0833               	movf	??_compensate_pressure+1,w
  8744  0280  00F1               	movwf	___lmul@multiplier+1
  8745  0281  0D89               	rlf	9,f
  8746  0282  3B89               	subwfb	9,f
  8747  0283  0989               	comf	9,f
  8748  0284  00F2               	movwf	___lmul@multiplier+2
  8749  0285  00F3               	movwf	___lmul@multiplier+3
  8750  0286  0021               	movlb	1	; select bank1
  8751  0287  084C               	movf	(compensate_pressure@var1+3)^(0+128),w
  8752  0288  00F7               	movwf	___lmul@multiplicand+3
  8753  0289  084B               	movf	(compensate_pressure@var1+2)^(0+128),w
  8754  028A  00F6               	movwf	___lmul@multiplicand+2
  8755  028B  084A               	movf	(compensate_pressure@var1+1)^(0+128),w
  8756  028C  00F5               	movwf	___lmul@multiplicand+1
  8757  028D  0849               	movf	compensate_pressure@var1^(0+128),w
  8758  028E  00F4               	movwf	___lmul@multiplicand
  8759  028F  319E  26A9  3180   	fcall	___lmul
  8760  0292  0873               	movf	?___lmul+3,w
  8761  0293  0020               	movlb	0	; select bank0
  8762  0294  00A7               	movwf	___aldiv@dividend+3
  8763  0295  0872               	movf	?___lmul+2,w
  8764  0296  00A6               	movwf	___aldiv@dividend+2
  8765  0297  0871               	movf	?___lmul+1,w
  8766  0298  00A5               	movwf	___aldiv@dividend+1
  8767  0299  0870               	movf	?___lmul,w
  8768  029A  00A4               	movwf	___aldiv@dividend
  8769  029B  3197  277F  3180   	fcall	___aldiv
  8770  029E  0823               	movf	?___aldiv+3,w
  8771  029F  0021               	movlb	1	; select bank1
  8772  02A0  00A7               	movwf	(compensate_pressure@var4+3)^(0+128)
  8773  02A1  0020               	movlb	0	; select bank0
  8774  02A2  0822               	movf	?___aldiv+2,w
  8775  02A3  0021               	movlb	1	; select bank1
  8776  02A4  00A6               	movwf	(compensate_pressure@var4+2)^(0+128)
  8777  02A5  0020               	movlb	0	; select bank0
  8778  02A6  0821               	movf	?___aldiv+1,w
  8779  02A7  0021               	movlb	1	; select bank1
  8780  02A8  00A5               	movwf	(compensate_pressure@var4+1)^(0+128)
  8781  02A9  0020               	movlb	0	; select bank0
  8782  02AA  0820               	movf	?___aldiv,w
  8783  02AB  0021               	movlb	1	; select bank1
  8784  02AC  00A4               	movwf	compensate_pressure@var4^(0+128)
  8785                           
  8786                           ;BME280_driver/bme280.c: 1227:     var1 = (var3 + var4) / 262144;
  8787  02AD  3000               	movlw	0
  8788  02AE  0020               	movlb	0	; select bank0
  8789  02AF  00A3               	movwf	___aldiv@divisor+3
  8790  02B0  3004               	movlw	4
  8791  02B1  00A2               	movwf	___aldiv@divisor+2
  8792  02B2  3000               	movlw	0
  8793  02B3  00A1               	movwf	___aldiv@divisor+1
  8794  02B4  3000               	movlw	0
  8795  02B5  00A0               	movwf	___aldiv@divisor
  8796  02B6  0021               	movlb	1	; select bank1
  8797  02B7  0820               	movf	compensate_pressure@var3^(0+128),w
  8798  02B8  0724               	addwf	compensate_pressure@var4^(0+128),w
  8799  02B9  0020               	movlb	0	; select bank0
  8800  02BA  00B2               	movwf	??_compensate_pressure
  8801  02BB  0021               	movlb	1	; select bank1
  8802  02BC  0821               	movf	(compensate_pressure@var3+1)^(0+128),w
  8803  02BD  3D25               	addwfc	(compensate_pressure@var4+1)^(0+128),w
  8804  02BE  0020               	movlb	0	; select bank0
  8805  02BF  00B3               	movwf	??_compensate_pressure+1
  8806  02C0  0021               	movlb	1	; select bank1
  8807  02C1  0822               	movf	(compensate_pressure@var3+2)^(0+128),w
  8808  02C2  3D26               	addwfc	(compensate_pressure@var4+2)^(0+128),w
  8809  02C3  0020               	movlb	0	; select bank0
  8810  02C4  00B4               	movwf	??_compensate_pressure+2
  8811  02C5  0021               	movlb	1	; select bank1
  8812  02C6  0823               	movf	(compensate_pressure@var3+3)^(0+128),w
  8813  02C7  3D27               	addwfc	(compensate_pressure@var4+3)^(0+128),w
  8814  02C8  0020               	movlb	0	; select bank0
  8815  02C9  00B5               	movwf	??_compensate_pressure+3
  8816  02CA  0835               	movf	??_compensate_pressure+3,w
  8817  02CB  00A7               	movwf	___aldiv@dividend+3
  8818  02CC  0834               	movf	??_compensate_pressure+2,w
  8819  02CD  00A6               	movwf	___aldiv@dividend+2
  8820  02CE  0833               	movf	??_compensate_pressure+1,w
  8821  02CF  00A5               	movwf	___aldiv@dividend+1
  8822  02D0  0832               	movf	??_compensate_pressure,w
  8823  02D1  00A4               	movwf	___aldiv@dividend
  8824  02D2  3197  277F  3180   	fcall	___aldiv
  8825  02D5  0823               	movf	?___aldiv+3,w
  8826  02D6  0021               	movlb	1	; select bank1
  8827  02D7  00CC               	movwf	(compensate_pressure@var1+3)^(0+128)
  8828  02D8  0020               	movlb	0	; select bank0
  8829  02D9  0822               	movf	?___aldiv+2,w
  8830  02DA  0021               	movlb	1	; select bank1
  8831  02DB  00CB               	movwf	(compensate_pressure@var1+2)^(0+128)
  8832  02DC  0020               	movlb	0	; select bank0
  8833  02DD  0821               	movf	?___aldiv+1,w
  8834  02DE  0021               	movlb	1	; select bank1
  8835  02DF  00CA               	movwf	(compensate_pressure@var1+1)^(0+128)
  8836  02E0  0020               	movlb	0	; select bank0
  8837  02E1  0820               	movf	?___aldiv,w
  8838  02E2  0021               	movlb	1	; select bank1
  8839  02E3  00C9               	movwf	compensate_pressure@var1^(0+128)
  8840                           
  8841                           ;BME280_driver/bme280.c: 1228:     var1 = (((32768 + var1)) * ((int32_t)calib_data->dig_
      +                          P1)) / 32768;
  8842  02E4  3000               	movlw	0
  8843  02E5  0020               	movlb	0	; select bank0
  8844  02E6  00A3               	movwf	___aldiv@divisor+3
  8845  02E7  3000               	movlw	0
  8846  02E8  00A2               	movwf	___aldiv@divisor+2
  8847  02E9  3080               	movlw	128
  8848  02EA  00A1               	movwf	___aldiv@divisor+1
  8849  02EB  3000               	movlw	0
  8850  02EC  00A0               	movwf	___aldiv@divisor
  8851  02ED  3000               	movlw	0
  8852  02EE  0021               	movlb	1	; select bank1
  8853  02EF  0749               	addwf	compensate_pressure@var1^(0+128),w
  8854  02F0  00F0               	movwf	___lmul@multiplier
  8855  02F1  3080               	movlw	128
  8856  02F2  3D4A               	addwfc	(compensate_pressure@var1+1)^(0+128),w
  8857  02F3  00F1               	movwf	___lmul@multiplier+1
  8858  02F4  3000               	movlw	0
  8859  02F5  3D4B               	addwfc	(compensate_pressure@var1+2)^(0+128),w
  8860  02F6  00F2               	movwf	___lmul@multiplier+2
  8861  02F7  3000               	movlw	0
  8862  02F8  3D4C               	addwfc	(compensate_pressure@var1+3)^(0+128),w
  8863  02F9  00F3               	movwf	___lmul@multiplier+3
  8864  02FA  0020               	movlb	0	; select bank0
  8865  02FB  082E               	movf	compensate_pressure@calib_data,w
  8866  02FC  3E06               	addlw	6
  8867  02FD  0086               	movwf	6
  8868  02FE  3001               	movlw	1	; select bank2/3
  8869  02FF  0087               	movwf	7
  8870  0300  3F40               	moviw [0]fsr1
  8871  0301  00B2               	movwf	??_compensate_pressure
  8872  0302  3F41               	moviw [1]fsr1
  8873  0303  00B3               	movwf	??_compensate_pressure+1
  8874  0304  0832               	movf	??_compensate_pressure,w
  8875  0305  00F4               	movwf	___lmul@multiplicand
  8876  0306  0833               	movf	??_compensate_pressure+1,w
  8877  0307  00F5               	movwf	___lmul@multiplicand+1
  8878  0308  01F6               	clrf	___lmul@multiplicand+2
  8879  0309  01F7               	clrf	___lmul@multiplicand+3
  8880  030A  319E  26A9  3180   	fcall	___lmul
  8881  030D  0873               	movf	?___lmul+3,w
  8882  030E  0020               	movlb	0	; select bank0
  8883  030F  00A7               	movwf	___aldiv@dividend+3
  8884  0310  0872               	movf	?___lmul+2,w
  8885  0311  00A6               	movwf	___aldiv@dividend+2
  8886  0312  0871               	movf	?___lmul+1,w
  8887  0313  00A5               	movwf	___aldiv@dividend+1
  8888  0314  0870               	movf	?___lmul,w
  8889  0315  00A4               	movwf	___aldiv@dividend
  8890  0316  3197  277F  3180   	fcall	___aldiv
  8891  0319  0823               	movf	?___aldiv+3,w
  8892  031A  0021               	movlb	1	; select bank1
  8893  031B  00CC               	movwf	(compensate_pressure@var1+3)^(0+128)
  8894  031C  0020               	movlb	0	; select bank0
  8895  031D  0822               	movf	?___aldiv+2,w
  8896  031E  0021               	movlb	1	; select bank1
  8897  031F  00CB               	movwf	(compensate_pressure@var1+2)^(0+128)
  8898  0320  0020               	movlb	0	; select bank0
  8899  0321  0821               	movf	?___aldiv+1,w
  8900  0322  0021               	movlb	1	; select bank1
  8901  0323  00CA               	movwf	(compensate_pressure@var1+1)^(0+128)
  8902  0324  0020               	movlb	0	; select bank0
  8903  0325  0820               	movf	?___aldiv,w
  8904  0326  0021               	movlb	1	; select bank1
  8905  0327  00C9               	movwf	compensate_pressure@var1^(0+128)
  8906                           
  8907                           ;BME280_driver/bme280.c: 1231:     if (var1)
  8908  0328  084C               	movf	(compensate_pressure@var1+3)^(0+128),w
  8909  0329  044B               	iorwf	(compensate_pressure@var1+2)^(0+128),w
  8910  032A  044A               	iorwf	(compensate_pressure@var1+1)^(0+128),w
  8911  032B  0449               	iorwf	compensate_pressure@var1^(0+128),w
  8912  032C  1903               	skipnz
  8913  032D  2D60               	goto	l4292
  8914                           
  8915                           ;BME280_driver/bme280.c: 1232:     {;BME280_driver/bme280.c: 1233:         var5 = (uint3
      +                          2_t)((uint32_t)1048576) - uncomp_data->pressure;
  8916  032E  0834               	movf	compensate_pressure@uncomp_data^(0+128),w
  8917  032F  0086               	movwf	6
  8918  0330  0187               	clrf	7
  8919  0331  3F40               	moviw [0]fsr1
  8920  0332  0020               	movlb	0	; select bank0
  8921  0333  00B2               	movwf	??_compensate_pressure
  8922  0334  3F41               	moviw [1]fsr1
  8923  0335  00B3               	movwf	??_compensate_pressure+1
  8924  0336  3F42               	moviw [2]fsr1
  8925  0337  00B4               	movwf	??_compensate_pressure+2
  8926  0338  3F43               	moviw [3]fsr1
  8927  0339  00B5               	movwf	??_compensate_pressure+3
  8928  033A  3000               	movlw	0
  8929  033B  00B6               	movwf	??_compensate_pressure+4
  8930  033C  3000               	movlw	0
  8931  033D  00B7               	movwf	??_compensate_pressure+5
  8932  033E  3010               	movlw	16
  8933  033F  00B8               	movwf	??_compensate_pressure+6
  8934  0340  3000               	movlw	0
  8935  0341  00B9               	movwf	??_compensate_pressure+7
  8936  0342  0832               	movf	??_compensate_pressure,w
  8937  0343  02B6               	subwf	??_compensate_pressure+4,f
  8938  0344  0833               	movf	??_compensate_pressure+1,w
  8939  0345  3BB7               	subwfb	??_compensate_pressure+5,f
  8940  0346  0834               	movf	??_compensate_pressure+2,w
  8941  0347  3BB8               	subwfb	??_compensate_pressure+6,f
  8942  0348  0835               	movf	??_compensate_pressure+3,w
  8943  0349  3BB9               	subwfb	??_compensate_pressure+7,f
  8944  034A  0839               	movf	??_compensate_pressure+7,w
  8945  034B  0021               	movlb	1	; select bank1
  8946  034C  00AB               	movwf	(compensate_pressure@var5+3)^(0+128)
  8947  034D  0020               	movlb	0	; select bank0
  8948  034E  0838               	movf	??_compensate_pressure+6,w
  8949  034F  0021               	movlb	1	; select bank1
  8950  0350  00AA               	movwf	(compensate_pressure@var5+2)^(0+128)
  8951  0351  0020               	movlb	0	; select bank0
  8952  0352  0837               	movf	??_compensate_pressure+5,w
  8953  0353  0021               	movlb	1	; select bank1
  8954  0354  00A9               	movwf	(compensate_pressure@var5+1)^(0+128)
  8955  0355  0020               	movlb	0	; select bank0
  8956  0356  0836               	movf	??_compensate_pressure+4,w
  8957  0357  0021               	movlb	1	; select bank1
  8958  0358  00A8               	movwf	compensate_pressure@var5^(0+128)
  8959                           
  8960                           ;BME280_driver/bme280.c: 1234:         pressure = ((uint32_t)(var5 - (uint32_t)(var2 / 4
      +                          096))) * 3125;
  8961  0359  3000               	movlw	0
  8962  035A  0020               	movlb	0	; select bank0
  8963  035B  00A3               	movwf	___aldiv@divisor+3
  8964  035C  3000               	movlw	0
  8965  035D  00A2               	movwf	___aldiv@divisor+2
  8966  035E  3010               	movlw	16
  8967  035F  00A1               	movwf	___aldiv@divisor+1
  8968  0360  3000               	movlw	0
  8969  0361  00A0               	movwf	___aldiv@divisor
  8970  0362  0021               	movlb	1	; select bank1
  8971  0363  0844               	movf	(compensate_pressure@var2+3)^(0+128),w
  8972  0364  0020               	movlb	0	; select bank0
  8973  0365  00A7               	movwf	___aldiv@dividend+3
  8974  0366  0021               	movlb	1	; select bank1
  8975  0367  0843               	movf	(compensate_pressure@var2+2)^(0+128),w
  8976  0368  0020               	movlb	0	; select bank0
  8977  0369  00A6               	movwf	___aldiv@dividend+2
  8978  036A  0021               	movlb	1	; select bank1
  8979  036B  0842               	movf	(compensate_pressure@var2+1)^(0+128),w
  8980  036C  0020               	movlb	0	; select bank0
  8981  036D  00A5               	movwf	___aldiv@dividend+1
  8982  036E  0021               	movlb	1	; select bank1
  8983  036F  0841               	movf	compensate_pressure@var2^(0+128),w
  8984  0370  0020               	movlb	0	; select bank0
  8985  0371  00A4               	movwf	___aldiv@dividend
  8986  0372  3197  277F  3180   	fcall	___aldiv
  8987  0375  0820               	movf	?___aldiv,w
  8988  0376  0021               	movlb	1	; select bank1
  8989  0377  0228               	subwf	compensate_pressure@var5^(0+128),w
  8990  0378  0020               	movlb	0	; select bank0
  8991  0379  00B2               	movwf	??_compensate_pressure
  8992  037A  0821               	movf	?___aldiv+1,w
  8993  037B  0021               	movlb	1	; select bank1
  8994  037C  3B29               	subwfb	(compensate_pressure@var5+1)^(0+128),w
  8995  037D  0020               	movlb	0	; select bank0
  8996  037E  00B3               	movwf	??_compensate_pressure+1
  8997  037F  0822               	movf	?___aldiv+2,w
  8998  0380  0021               	movlb	1	; select bank1
  8999  0381  3B2A               	subwfb	(compensate_pressure@var5+2)^(0+128),w
  9000  0382  0020               	movlb	0	; select bank0
  9001  0383  00B4               	movwf	??_compensate_pressure+2
  9002  0384  0823               	movf	?___aldiv+3,w
  9003  0385  0021               	movlb	1	; select bank1
  9004  0386  3B2B               	subwfb	(compensate_pressure@var5+3)^(0+128),w
  9005  0387  0020               	movlb	0	; select bank0
  9006  0388  00B5               	movwf	??_compensate_pressure+3
  9007  0389  0835               	movf	??_compensate_pressure+3,w
  9008  038A  00F3               	movwf	___lmul@multiplier+3
  9009  038B  0834               	movf	??_compensate_pressure+2,w
  9010  038C  00F2               	movwf	___lmul@multiplier+2
  9011  038D  0833               	movf	??_compensate_pressure+1,w
  9012  038E  00F1               	movwf	___lmul@multiplier+1
  9013  038F  0832               	movf	??_compensate_pressure,w
  9014  0390  00F0               	movwf	___lmul@multiplier
  9015  0391  3000               	movlw	0
  9016  0392  00F7               	movwf	___lmul@multiplicand+3
  9017  0393  3000               	movlw	0
  9018  0394  00F6               	movwf	___lmul@multiplicand+2
  9019  0395  300C               	movlw	12
  9020  0396  00F5               	movwf	___lmul@multiplicand+1
  9021  0397  3035               	movlw	53
  9022  0398  00F4               	movwf	___lmul@multiplicand
  9023  0399  319E  26A9  3180   	fcall	___lmul
  9024  039C  0873               	movf	?___lmul+3,w
  9025  039D  0021               	movlb	1	; select bank1
  9026  039E  00C8               	movwf	(compensate_pressure@pressure+3)^(0+128)
  9027  039F  0872               	movf	?___lmul+2,w
  9028  03A0  00C7               	movwf	(compensate_pressure@pressure+2)^(0+128)
  9029  03A1  0871               	movf	?___lmul+1,w
  9030  03A2  00C6               	movwf	(compensate_pressure@pressure+1)^(0+128)
  9031  03A3  0870               	movf	?___lmul,w
  9032  03A4  00C5               	movwf	compensate_pressure@pressure^(0+128)
  9033                           
  9034                           ;BME280_driver/bme280.c: 1235:         if (pressure < 0x80000000)
  9035  03A5  3080               	movlw	128
  9036  03A6  0248               	subwf	(compensate_pressure@pressure+3)^(0+128),w
  9037  03A7  1803               	btfsc	3,0
  9038  03A8  2BC6               	goto	l4282
  9039                           
  9040                           ;BME280_driver/bme280.c: 1236:         {;BME280_driver/bme280.c: 1237:             press
      +                          ure = (pressure << 1) / ((uint32_t)var1);
  9041  03A9  084C               	movf	(compensate_pressure@var1+3)^(0+128),w
  9042  03AA  00F3               	movwf	___lldiv@divisor+3
  9043  03AB  084B               	movf	(compensate_pressure@var1+2)^(0+128),w
  9044  03AC  00F2               	movwf	___lldiv@divisor+2
  9045  03AD  084A               	movf	(compensate_pressure@var1+1)^(0+128),w
  9046  03AE  00F1               	movwf	___lldiv@divisor+1
  9047  03AF  0849               	movf	compensate_pressure@var1^(0+128),w
  9048  03B0  00F0               	movwf	___lldiv@divisor
  9049  03B1  3545               	lslf	compensate_pressure@pressure^(0+128),w
  9050  03B2  00F4               	movwf	___lldiv@dividend
  9051  03B3  0D46               	rlf	(compensate_pressure@pressure+1)^(0+128),w
  9052  03B4  00F5               	movwf	___lldiv@dividend+1
  9053  03B5  0D47               	rlf	(compensate_pressure@pressure+2)^(0+128),w
  9054  03B6  00F6               	movwf	___lldiv@dividend+2
  9055  03B7  0D48               	rlf	(compensate_pressure@pressure+3)^(0+128),w
  9056  03B8  00F7               	movwf	___lldiv@dividend+3
  9057  03B9  3193  2317  3180   	fcall	___lldiv
  9058  03BC  0873               	movf	?___lldiv+3,w
  9059  03BD  0021               	movlb	1	; select bank1
  9060  03BE  00C8               	movwf	(compensate_pressure@pressure+3)^(0+128)
  9061  03BF  0872               	movf	?___lldiv+2,w
  9062  03C0  00C7               	movwf	(compensate_pressure@pressure+2)^(0+128)
  9063  03C1  0871               	movf	?___lldiv+1,w
  9064  03C2  00C6               	movwf	(compensate_pressure@pressure+1)^(0+128)
  9065  03C3  0870               	movf	?___lldiv,w
  9066  03C4  00C5               	movwf	compensate_pressure@pressure^(0+128)
  9067                           
  9068                           ;BME280_driver/bme280.c: 1238:         }
  9069  03C5  2BE2               	goto	l192
  9070  03C6                     l4282:	
  9071                           
  9072                           ;BME280_driver/bme280.c: 1240:         {;BME280_driver/bme280.c: 1241:             press
      +                          ure = (pressure / (uint32_t)var1) * 2;
  9073  03C6  084C               	movf	(compensate_pressure@var1+3)^(0+128),w
  9074  03C7  00F3               	movwf	___lldiv@divisor+3
  9075  03C8  084B               	movf	(compensate_pressure@var1+2)^(0+128),w
  9076  03C9  00F2               	movwf	___lldiv@divisor+2
  9077  03CA  084A               	movf	(compensate_pressure@var1+1)^(0+128),w
  9078  03CB  00F1               	movwf	___lldiv@divisor+1
  9079  03CC  0849               	movf	compensate_pressure@var1^(0+128),w
  9080  03CD  00F0               	movwf	___lldiv@divisor
  9081  03CE  0848               	movf	(compensate_pressure@pressure+3)^(0+128),w
  9082  03CF  00F7               	movwf	___lldiv@dividend+3
  9083  03D0  0847               	movf	(compensate_pressure@pressure+2)^(0+128),w
  9084  03D1  00F6               	movwf	___lldiv@dividend+2
  9085  03D2  0846               	movf	(compensate_pressure@pressure+1)^(0+128),w
  9086  03D3  00F5               	movwf	___lldiv@dividend+1
  9087  03D4  0845               	movf	compensate_pressure@pressure^(0+128),w
  9088  03D5  00F4               	movwf	___lldiv@dividend
  9089  03D6  3193  2317  3180   	fcall	___lldiv
  9090  03D9  3570               	lslf	?___lldiv,w
  9091  03DA  0021               	movlb	1	; select bank1
  9092  03DB  00C5               	movwf	compensate_pressure@pressure^(0+128)
  9093  03DC  0D71               	rlf	?___lldiv+1,w
  9094  03DD  00C6               	movwf	(compensate_pressure@pressure+1)^(0+128)
  9095  03DE  0D72               	rlf	?___lldiv+2,w
  9096  03DF  00C7               	movwf	(compensate_pressure@pressure+2)^(0+128)
  9097  03E0  0D73               	rlf	?___lldiv+3,w
  9098  03E1  00C8               	movwf	(compensate_pressure@pressure+3)^(0+128)
  9099  03E2                     l192:	
  9100                           ;BME280_driver/bme280.c: 1242:         }
  9101                           
  9102                           
  9103                           ;BME280_driver/bme280.c: 1243:         var1 = (((int32_t)calib_data->dig_P9) * ((int32_t
      +                          )(((pressure / 8) * (pressure / 8)) / 8192))) / 4096;
  9104  03E2  0845               	movf	compensate_pressure@pressure^(0+128),w
  9105  03E3  0020               	movlb	0	; select bank0
  9106  03E4  00B2               	movwf	??_compensate_pressure
  9107  03E5  0021               	movlb	1	; select bank1
  9108  03E6  0846               	movf	(compensate_pressure@pressure+1)^(0+128),w
  9109  03E7  0020               	movlb	0	; select bank0
  9110  03E8  00B3               	movwf	??_compensate_pressure+1
  9111  03E9  0021               	movlb	1	; select bank1
  9112  03EA  0847               	movf	(compensate_pressure@pressure+2)^(0+128),w
  9113  03EB  0020               	movlb	0	; select bank0
  9114  03EC  00B4               	movwf	??_compensate_pressure+2
  9115  03ED  0021               	movlb	1	; select bank1
  9116  03EE  0848               	movf	(compensate_pressure@pressure+3)^(0+128),w
  9117  03EF  0020               	movlb	0	; select bank0
  9118  03F0  00B5               	movwf	??_compensate_pressure+3
  9119  03F1  3003               	movlw	3
  9120  03F2                     u4405:	
  9121  03F2  36B5               	lsrf	??_compensate_pressure+3,f
  9122  03F3  0CB4               	rrf	??_compensate_pressure+2,f
  9123  03F4  0CB3               	rrf	??_compensate_pressure+1,f
  9124  03F5  0CB2               	rrf	??_compensate_pressure,f
  9125  03F6  0B89               	decfsz	9,f
  9126  03F7  2BF2               	goto	u4405
  9127  03F8  0835               	movf	??_compensate_pressure+3,w
  9128  03F9  00F7               	movwf	___lmul@multiplicand+3
  9129  03FA  0834               	movf	??_compensate_pressure+2,w
  9130  03FB  00F6               	movwf	___lmul@multiplicand+2
  9131  03FC  0833               	movf	??_compensate_pressure+1,w
  9132  03FD  00F5               	movwf	___lmul@multiplicand+1
  9133  03FE  0832               	movf	??_compensate_pressure,w
  9134  03FF  00F4               	movwf	___lmul@multiplicand
  9135  0400  0021               	movlb	1	; select bank1
  9136  0401  0845               	movf	compensate_pressure@pressure^(0+128),w
  9137  0402  0020               	movlb	0	; select bank0
  9138  0403  00B6               	movwf	??_compensate_pressure+4
  9139  0404  0021               	movlb	1	; select bank1
  9140  0405  0846               	movf	(compensate_pressure@pressure+1)^(0+128),w
  9141  0406  0020               	movlb	0	; select bank0
  9142  0407  00B7               	movwf	??_compensate_pressure+5
  9143  0408  0021               	movlb	1	; select bank1
  9144  0409  0847               	movf	(compensate_pressure@pressure+2)^(0+128),w
  9145  040A  0020               	movlb	0	; select bank0
  9146  040B  00B8               	movwf	??_compensate_pressure+6
  9147  040C  0021               	movlb	1	; select bank1
  9148  040D  0848               	movf	(compensate_pressure@pressure+3)^(0+128),w
  9149  040E  0020               	movlb	0	; select bank0
  9150  040F  00B9               	movwf	??_compensate_pressure+7
  9151  0410  3003               	movlw	3
  9152  0411                     u4415:	
  9153  0411  36B9               	lsrf	??_compensate_pressure+7,f
  9154  0412  0CB8               	rrf	??_compensate_pressure+6,f
  9155  0413  0CB7               	rrf	??_compensate_pressure+5,f
  9156  0414  0CB6               	rrf	??_compensate_pressure+4,f
  9157  0415  0B89               	decfsz	9,f
  9158  0416  2C11               	goto	u4415
  9159  0417  0839               	movf	??_compensate_pressure+7,w
  9160  0418  00F3               	movwf	___lmul@multiplier+3
  9161  0419  0838               	movf	??_compensate_pressure+6,w
  9162  041A  00F2               	movwf	___lmul@multiplier+2
  9163  041B  0837               	movf	??_compensate_pressure+5,w
  9164  041C  00F1               	movwf	___lmul@multiplier+1
  9165  041D  0836               	movf	??_compensate_pressure+4,w
  9166  041E  00F0               	movwf	___lmul@multiplier
  9167  041F  319E  26A9  3180   	fcall	___lmul
  9168  0422  0870               	movf	?___lmul,w
  9169  0423  0020               	movlb	0	; select bank0
  9170  0424  00BA               	movwf	??_compensate_pressure+8
  9171  0425  0871               	movf	?___lmul+1,w
  9172  0426  00BB               	movwf	??_compensate_pressure+9
  9173  0427  0872               	movf	?___lmul+2,w
  9174  0428  00BC               	movwf	??_compensate_pressure+10
  9175  0429  0873               	movf	?___lmul+3,w
  9176  042A  00BD               	movwf	??_compensate_pressure+11
  9177  042B  300D               	movlw	13
  9178  042C                     u4425:	
  9179  042C  36BD               	lsrf	??_compensate_pressure+11,f
  9180  042D  0CBC               	rrf	??_compensate_pressure+10,f
  9181  042E  0CBB               	rrf	??_compensate_pressure+9,f
  9182  042F  0CBA               	rrf	??_compensate_pressure+8,f
  9183  0430  0B89               	decfsz	9,f
  9184  0431  2C2C               	goto	u4425
  9185  0432  083D               	movf	??_compensate_pressure+11,w
  9186  0433  0021               	movlb	1	; select bank1
  9187  0434  00B3               	movwf	(_compensate_pressure$2272+3)^(0+128)
  9188  0435  0020               	movlb	0	; select bank0
  9189  0436  083C               	movf	??_compensate_pressure+10,w
  9190  0437  0021               	movlb	1	; select bank1
  9191  0438  00B2               	movwf	(_compensate_pressure$2272+2)^(0+128)
  9192  0439  0020               	movlb	0	; select bank0
  9193  043A  083B               	movf	??_compensate_pressure+9,w
  9194  043B  0021               	movlb	1	; select bank1
  9195  043C  00B1               	movwf	(_compensate_pressure$2272+1)^(0+128)
  9196  043D  0020               	movlb	0	; select bank0
  9197  043E  083A               	movf	??_compensate_pressure+8,w
  9198  043F  0021               	movlb	1	; select bank1
  9199  0440  00B0               	movwf	_compensate_pressure$2272^(0+128)
  9200                           
  9201                           ;BME280_driver/bme280.c: 1243:         var1 = (((int32_t)calib_data->dig_P9) * ((int32_t
      +                          )(((pressure / 8) * (pressure / 8)) / 8192))) / 4096;
  9202  0441  3000               	movlw	0
  9203  0442  0020               	movlb	0	; select bank0
  9204  0443  00A3               	movwf	___aldiv@divisor+3
  9205  0444  3000               	movlw	0
  9206  0445  00A2               	movwf	___aldiv@divisor+2
  9207  0446  3010               	movlw	16
  9208  0447  00A1               	movwf	___aldiv@divisor+1
  9209  0448  3000               	movlw	0
  9210  0449  00A0               	movwf	___aldiv@divisor
  9211  044A  082E               	movf	compensate_pressure@calib_data,w
  9212  044B  3E16               	addlw	22
  9213  044C  0086               	movwf	6
  9214  044D  3001               	movlw	1	; select bank2/3
  9215  044E  0087               	movwf	7
  9216  044F  3F40               	moviw [0]fsr1
  9217  0450  00B2               	movwf	??_compensate_pressure
  9218  0451  3F41               	moviw [1]fsr1
  9219  0452  00B3               	movwf	??_compensate_pressure+1
  9220  0453  0832               	movf	??_compensate_pressure,w
  9221  0454  00F0               	movwf	___lmul@multiplier
  9222  0455  0833               	movf	??_compensate_pressure+1,w
  9223  0456  00F1               	movwf	___lmul@multiplier+1
  9224  0457  0D89               	rlf	9,f
  9225  0458  3B89               	subwfb	9,f
  9226  0459  0989               	comf	9,f
  9227  045A  00F2               	movwf	___lmul@multiplier+2
  9228  045B  00F3               	movwf	___lmul@multiplier+3
  9229  045C  0021               	movlb	1	; select bank1
  9230  045D  0833               	movf	(_compensate_pressure$2272+3)^(0+128),w
  9231  045E  00F7               	movwf	___lmul@multiplicand+3
  9232  045F  0832               	movf	(_compensate_pressure$2272+2)^(0+128),w
  9233  0460  00F6               	movwf	___lmul@multiplicand+2
  9234  0461  0831               	movf	(_compensate_pressure$2272+1)^(0+128),w
  9235  0462  00F5               	movwf	___lmul@multiplicand+1
  9236  0463  0830               	movf	_compensate_pressure$2272^(0+128),w
  9237  0464  00F4               	movwf	___lmul@multiplicand
  9238  0465  319E  26A9  3180   	fcall	___lmul
  9239  0468  0873               	movf	?___lmul+3,w
  9240  0469  0020               	movlb	0	; select bank0
  9241  046A  00A7               	movwf	___aldiv@dividend+3
  9242  046B  0872               	movf	?___lmul+2,w
  9243  046C  00A6               	movwf	___aldiv@dividend+2
  9244  046D  0871               	movf	?___lmul+1,w
  9245  046E  00A5               	movwf	___aldiv@dividend+1
  9246  046F  0870               	movf	?___lmul,w
  9247  0470  00A4               	movwf	___aldiv@dividend
  9248  0471  3197  277F  3180   	fcall	___aldiv
  9249  0474  0823               	movf	?___aldiv+3,w
  9250  0475  0021               	movlb	1	; select bank1
  9251  0476  00CC               	movwf	(compensate_pressure@var1+3)^(0+128)
  9252  0477  0020               	movlb	0	; select bank0
  9253  0478  0822               	movf	?___aldiv+2,w
  9254  0479  0021               	movlb	1	; select bank1
  9255  047A  00CB               	movwf	(compensate_pressure@var1+2)^(0+128)
  9256  047B  0020               	movlb	0	; select bank0
  9257  047C  0821               	movf	?___aldiv+1,w
  9258  047D  0021               	movlb	1	; select bank1
  9259  047E  00CA               	movwf	(compensate_pressure@var1+1)^(0+128)
  9260  047F  0020               	movlb	0	; select bank0
  9261  0480  0820               	movf	?___aldiv,w
  9262  0481  0021               	movlb	1	; select bank1
  9263  0482  00C9               	movwf	compensate_pressure@var1^(0+128)
  9264                           
  9265                           ;BME280_driver/bme280.c: 1244:         var2 = (((int32_t)(pressure / 4)) * ((int32_t)cal
      +                          ib_data->dig_P8)) / 8192;
  9266  0483  3000               	movlw	0
  9267  0484  0020               	movlb	0	; select bank0
  9268  0485  00A3               	movwf	___aldiv@divisor+3
  9269  0486  3000               	movlw	0
  9270  0487  00A2               	movwf	___aldiv@divisor+2
  9271  0488  3020               	movlw	32
  9272  0489  00A1               	movwf	___aldiv@divisor+1
  9273  048A  3000               	movlw	0
  9274  048B  00A0               	movwf	___aldiv@divisor
  9275  048C  0021               	movlb	1	; select bank1
  9276  048D  0845               	movf	compensate_pressure@pressure^(0+128),w
  9277  048E  0020               	movlb	0	; select bank0
  9278  048F  00B2               	movwf	??_compensate_pressure
  9279  0490  0021               	movlb	1	; select bank1
  9280  0491  0846               	movf	(compensate_pressure@pressure+1)^(0+128),w
  9281  0492  0020               	movlb	0	; select bank0
  9282  0493  00B3               	movwf	??_compensate_pressure+1
  9283  0494  0021               	movlb	1	; select bank1
  9284  0495  0847               	movf	(compensate_pressure@pressure+2)^(0+128),w
  9285  0496  0020               	movlb	0	; select bank0
  9286  0497  00B4               	movwf	??_compensate_pressure+2
  9287  0498  0021               	movlb	1	; select bank1
  9288  0499  0848               	movf	(compensate_pressure@pressure+3)^(0+128),w
  9289  049A  0020               	movlb	0	; select bank0
  9290  049B  00B5               	movwf	??_compensate_pressure+3
  9291  049C  3002               	movlw	2
  9292  049D                     u4435:	
  9293  049D  36B5               	lsrf	??_compensate_pressure+3,f
  9294  049E  0CB4               	rrf	??_compensate_pressure+2,f
  9295  049F  0CB3               	rrf	??_compensate_pressure+1,f
  9296  04A0  0CB2               	rrf	??_compensate_pressure,f
  9297  04A1  0B89               	decfsz	9,f
  9298  04A2  2C9D               	goto	u4435
  9299  04A3  0835               	movf	??_compensate_pressure+3,w
  9300  04A4  00F3               	movwf	___lmul@multiplier+3
  9301  04A5  0834               	movf	??_compensate_pressure+2,w
  9302  04A6  00F2               	movwf	___lmul@multiplier+2
  9303  04A7  0833               	movf	??_compensate_pressure+1,w
  9304  04A8  00F1               	movwf	___lmul@multiplier+1
  9305  04A9  0832               	movf	??_compensate_pressure,w
  9306  04AA  00F0               	movwf	___lmul@multiplier
  9307  04AB  082E               	movf	compensate_pressure@calib_data,w
  9308  04AC  3E14               	addlw	20
  9309  04AD  0086               	movwf	6
  9310  04AE  3001               	movlw	1	; select bank2/3
  9311  04AF  0087               	movwf	7
  9312  04B0  3F40               	moviw [0]fsr1
  9313  04B1  00B6               	movwf	??_compensate_pressure+4
  9314  04B2  3F41               	moviw [1]fsr1
  9315  04B3  00B7               	movwf	??_compensate_pressure+5
  9316  04B4  0836               	movf	??_compensate_pressure+4,w
  9317  04B5  00F4               	movwf	___lmul@multiplicand
  9318  04B6  0837               	movf	??_compensate_pressure+5,w
  9319  04B7  00F5               	movwf	___lmul@multiplicand+1
  9320  04B8  0D89               	rlf	9,f
  9321  04B9  3B89               	subwfb	9,f
  9322  04BA  0989               	comf	9,f
  9323  04BB  00F6               	movwf	___lmul@multiplicand+2
  9324  04BC  00F7               	movwf	___lmul@multiplicand+3
  9325  04BD  319E  26A9  3180   	fcall	___lmul
  9326  04C0  0873               	movf	?___lmul+3,w
  9327  04C1  0020               	movlb	0	; select bank0
  9328  04C2  00A7               	movwf	___aldiv@dividend+3
  9329  04C3  0872               	movf	?___lmul+2,w
  9330  04C4  00A6               	movwf	___aldiv@dividend+2
  9331  04C5  0871               	movf	?___lmul+1,w
  9332  04C6  00A5               	movwf	___aldiv@dividend+1
  9333  04C7  0870               	movf	?___lmul,w
  9334  04C8  00A4               	movwf	___aldiv@dividend
  9335  04C9  3197  277F  3180   	fcall	___aldiv
  9336  04CC  0823               	movf	?___aldiv+3,w
  9337  04CD  0021               	movlb	1	; select bank1
  9338  04CE  00C4               	movwf	(compensate_pressure@var2+3)^(0+128)
  9339  04CF  0020               	movlb	0	; select bank0
  9340  04D0  0822               	movf	?___aldiv+2,w
  9341  04D1  0021               	movlb	1	; select bank1
  9342  04D2  00C3               	movwf	(compensate_pressure@var2+2)^(0+128)
  9343  04D3  0020               	movlb	0	; select bank0
  9344  04D4  0821               	movf	?___aldiv+1,w
  9345  04D5  0021               	movlb	1	; select bank1
  9346  04D6  00C2               	movwf	(compensate_pressure@var2+1)^(0+128)
  9347  04D7  0020               	movlb	0	; select bank0
  9348  04D8  0820               	movf	?___aldiv,w
  9349  04D9  0021               	movlb	1	; select bank1
  9350  04DA  00C1               	movwf	compensate_pressure@var2^(0+128)
  9351                           
  9352                           ;BME280_driver/bme280.c: 1245:         pressure = (uint32_t)((int32_t)pressure + ((var1 
      +                          + var2 + calib_data->dig_P7) / 16));
  9353  04DB  3000               	movlw	0
  9354  04DC  0020               	movlb	0	; select bank0
  9355  04DD  00A3               	movwf	___aldiv@divisor+3
  9356  04DE  3000               	movlw	0
  9357  04DF  00A2               	movwf	___aldiv@divisor+2
  9358  04E0  3000               	movlw	0
  9359  04E1  00A1               	movwf	___aldiv@divisor+1
  9360  04E2  3010               	movlw	16
  9361  04E3  00A0               	movwf	___aldiv@divisor
  9362  04E4  0021               	movlb	1	; select bank1
  9363  04E5  0841               	movf	compensate_pressure@var2^(0+128),w
  9364  04E6  0020               	movlb	0	; select bank0
  9365  04E7  00B2               	movwf	??_compensate_pressure
  9366  04E8  0021               	movlb	1	; select bank1
  9367  04E9  0842               	movf	(compensate_pressure@var2+1)^(0+128),w
  9368  04EA  0020               	movlb	0	; select bank0
  9369  04EB  00B3               	movwf	??_compensate_pressure+1
  9370  04EC  0021               	movlb	1	; select bank1
  9371  04ED  0843               	movf	(compensate_pressure@var2+2)^(0+128),w
  9372  04EE  0020               	movlb	0	; select bank0
  9373  04EF  00B4               	movwf	??_compensate_pressure+2
  9374  04F0  0021               	movlb	1	; select bank1
  9375  04F1  0844               	movf	(compensate_pressure@var2+3)^(0+128),w
  9376  04F2  0020               	movlb	0	; select bank0
  9377  04F3  00B5               	movwf	??_compensate_pressure+3
  9378  04F4  0021               	movlb	1	; select bank1
  9379  04F5  0849               	movf	compensate_pressure@var1^(0+128),w
  9380  04F6  0020               	movlb	0	; select bank0
  9381  04F7  00B6               	movwf	??_compensate_pressure+4
  9382  04F8  0021               	movlb	1	; select bank1
  9383  04F9  084A               	movf	(compensate_pressure@var1+1)^(0+128),w
  9384  04FA  0020               	movlb	0	; select bank0
  9385  04FB  00B7               	movwf	??_compensate_pressure+5
  9386  04FC  0021               	movlb	1	; select bank1
  9387  04FD  084B               	movf	(compensate_pressure@var1+2)^(0+128),w
  9388  04FE  0020               	movlb	0	; select bank0
  9389  04FF  00B8               	movwf	??_compensate_pressure+6
  9390  0500  0021               	movlb	1	; select bank1
  9391  0501  084C               	movf	(compensate_pressure@var1+3)^(0+128),w
  9392  0502  0020               	movlb	0	; select bank0
  9393  0503  00B9               	movwf	??_compensate_pressure+7
  9394  0504  082E               	movf	compensate_pressure@calib_data,w
  9395  0505  3E12               	addlw	18
  9396  0506  0086               	movwf	6
  9397  0507  3001               	movlw	1	; select bank2/3
  9398  0508  0087               	movwf	7
  9399  0509  3F40               	moviw [0]fsr1
  9400  050A  00BA               	movwf	??_compensate_pressure+8
  9401  050B  3F41               	moviw [1]fsr1
  9402  050C  00BB               	movwf	??_compensate_pressure+9
  9403  050D  083A               	movf	??_compensate_pressure+8,w
  9404  050E  00BC               	movwf	??_compensate_pressure+10
  9405  050F  083B               	movf	??_compensate_pressure+9,w
  9406  0510  00BD               	movwf	??_compensate_pressure+11
  9407  0511  3000               	movlw	0
  9408  0512  1BBD               	btfsc	??_compensate_pressure+11,7
  9409  0513  30FF               	movlw	255
  9410  0514  00BE               	movwf	??_compensate_pressure+12
  9411  0515  00BF               	movwf	??_compensate_pressure+13
  9412  0516  083C               	movf	??_compensate_pressure+10,w
  9413  0517  07B6               	addwf	??_compensate_pressure+4,f
  9414  0518  083D               	movf	??_compensate_pressure+11,w
  9415  0519  3DB7               	addwfc	??_compensate_pressure+5,f
  9416  051A  083E               	movf	??_compensate_pressure+12,w
  9417  051B  3DB8               	addwfc	??_compensate_pressure+6,f
  9418  051C  083F               	movf	??_compensate_pressure+13,w
  9419  051D  3DB9               	addwfc	??_compensate_pressure+7,f
  9420  051E  0836               	movf	??_compensate_pressure+4,w
  9421  051F  07B2               	addwf	??_compensate_pressure,f
  9422  0520  0837               	movf	??_compensate_pressure+5,w
  9423  0521  3DB3               	addwfc	??_compensate_pressure+1,f
  9424  0522  0838               	movf	??_compensate_pressure+6,w
  9425  0523  3DB4               	addwfc	??_compensate_pressure+2,f
  9426  0524  0839               	movf	??_compensate_pressure+7,w
  9427  0525  3DB5               	addwfc	??_compensate_pressure+3,f
  9428  0526  0835               	movf	??_compensate_pressure+3,w
  9429  0527  00A7               	movwf	___aldiv@dividend+3
  9430  0528  0834               	movf	??_compensate_pressure+2,w
  9431  0529  00A6               	movwf	___aldiv@dividend+2
  9432  052A  0833               	movf	??_compensate_pressure+1,w
  9433  052B  00A5               	movwf	___aldiv@dividend+1
  9434  052C  0832               	movf	??_compensate_pressure,w
  9435  052D  00A4               	movwf	___aldiv@dividend
  9436  052E  3197  277F  3180   	fcall	___aldiv
  9437  0531  0820               	movf	?___aldiv,w
  9438  0532  0021               	movlb	1	; select bank1
  9439  0533  0745               	addwf	compensate_pressure@pressure^(0+128),w
  9440  0534  0020               	movlb	0	; select bank0
  9441  0535  00C0               	movwf	??_compensate_pressure+14
  9442  0536  0821               	movf	?___aldiv+1,w
  9443  0537  0021               	movlb	1	; select bank1
  9444  0538  3D46               	addwfc	(compensate_pressure@pressure+1)^(0+128),w
  9445  0539  0020               	movlb	0	; select bank0
  9446  053A  00C1               	movwf	??_compensate_pressure+15
  9447  053B  0822               	movf	?___aldiv+2,w
  9448  053C  0021               	movlb	1	; select bank1
  9449  053D  3D47               	addwfc	(compensate_pressure@pressure+2)^(0+128),w
  9450  053E  0020               	movlb	0	; select bank0
  9451  053F  00C2               	movwf	??_compensate_pressure+16
  9452  0540  0823               	movf	?___aldiv+3,w
  9453  0541  0021               	movlb	1	; select bank1
  9454  0542  3D48               	addwfc	(compensate_pressure@pressure+3)^(0+128),w
  9455  0543  0020               	movlb	0	; select bank0
  9456  0544  00C3               	movwf	??_compensate_pressure+17
  9457  0545  0843               	movf	??_compensate_pressure+17,w
  9458  0546  0021               	movlb	1	; select bank1
  9459  0547  00C8               	movwf	(compensate_pressure@pressure+3)^(0+128)
  9460  0548  0020               	movlb	0	; select bank0
  9461  0549  0842               	movf	??_compensate_pressure+16,w
  9462  054A  0021               	movlb	1	; select bank1
  9463  054B  00C7               	movwf	(compensate_pressure@pressure+2)^(0+128)
  9464  054C  0020               	movlb	0	; select bank0
  9465  054D  0841               	movf	??_compensate_pressure+15,w
  9466  054E  0021               	movlb	1	; select bank1
  9467  054F  00C6               	movwf	(compensate_pressure@pressure+1)^(0+128)
  9468  0550  0020               	movlb	0	; select bank0
  9469  0551  0840               	movf	??_compensate_pressure+14,w
  9470  0552  0021               	movlb	1	; select bank1
  9471  0553  00C5               	movwf	compensate_pressure@pressure^(0+128)
  9472                           
  9473                           ;BME280_driver/bme280.c: 1246:         if (pressure < pressure_min)
  9474  0554  0848               	movf	(compensate_pressure@pressure+3)^(0+128),w
  9475  0555  1D03               	btfss	3,2
  9476  0556  2D68               	goto	l4294
  9477  0557  0847               	movf	(compensate_pressure@pressure+2)^(0+128),w
  9478  0558  1D03               	btfss	3,2
  9479  0559  2D68               	goto	l4294
  9480  055A  3030               	movlw	48
  9481  055B  0245               	subwf	compensate_pressure@pressure^(0+128),w
  9482  055C  3075               	movlw	117
  9483  055D  3B46               	subwfb	(compensate_pressure@pressure+1)^(0+128),w
  9484  055E  1803               	btfsc	3,0
  9485  055F  2D68               	goto	l4294
  9486  0560                     l4292:	
  9487                           
  9488                           ;BME280_driver/bme280.c: 1247:         {;BME280_driver/bme280.c: 1248:             press
      +                          ure = pressure_min;
  9489  0560  3000               	movlw	0
  9490  0561  00C8               	movwf	(compensate_pressure@pressure+3)^(0+128)
  9491  0562  3000               	movlw	0
  9492  0563  00C7               	movwf	(compensate_pressure@pressure+2)^(0+128)
  9493  0564  3075               	movlw	117
  9494  0565  00C6               	movwf	(compensate_pressure@pressure+1)^(0+128)
  9495  0566  3030               	movlw	48
  9496  0567  2D7A               	goto	L3
  9497  0568                     l4294:	
  9498                           ;BME280_driver/bme280.c: 1249:         }
  9499                           
  9500  0568  0848               	movf	(compensate_pressure@pressure+3)^(0+128),w
  9501  0569  1D03               	btfss	3,2
  9502  056A  2D73               	goto	l4296
  9503  056B  30B1               	movlw	177
  9504  056C  0245               	subwf	compensate_pressure@pressure^(0+128),w
  9505  056D  30AD               	movlw	173
  9506  056E  3B46               	subwfb	(compensate_pressure@pressure+1)^(0+128),w
  9507  056F  3001               	movlw	1
  9508  0570  3B47               	subwfb	(compensate_pressure@pressure+2)^(0+128),w
  9509  0571  1C03               	btfss	3,0
  9510  0572  2D7B               	goto	l196
  9511  0573                     l4296:	
  9512                           
  9513                           ;BME280_driver/bme280.c: 1251:         {;BME280_driver/bme280.c: 1252:             press
      +                          ure = pressure_max;
  9514  0573  3000               	movlw	0
  9515  0574  00C8               	movwf	(compensate_pressure@pressure+3)^(0+128)
  9516  0575  3001               	movlw	1
  9517  0576  00C7               	movwf	(compensate_pressure@pressure+2)^(0+128)
  9518  0577  30AD               	movlw	173
  9519  0578  00C6               	movwf	(compensate_pressure@pressure+1)^(0+128)
  9520  0579  30B0               	movlw	176
  9521  057A                     L3:	
  9522  057A  00C5               	movwf	compensate_pressure@pressure^(0+128)
  9523  057B                     l196:	
  9524                           ;BME280_driver/bme280.c: 1258:     }
  9525                           
  9526                           
  9527                           ;BME280_driver/bme280.c: 1260:     return pressure;
  9528  057B  0848               	movf	(compensate_pressure@pressure+3)^(0+128),w
  9529  057C  0020               	movlb	0	; select bank0
  9530  057D  00B1               	movwf	?_compensate_pressure+3
  9531  057E  0021               	movlb	1	; select bank1
  9532  057F  0847               	movf	(compensate_pressure@pressure+2)^(0+128),w
  9533  0580  0020               	movlb	0	; select bank0
  9534  0581  00B0               	movwf	?_compensate_pressure+2
  9535  0582  0021               	movlb	1	; select bank1
  9536  0583  0846               	movf	(compensate_pressure@pressure+1)^(0+128),w
  9537  0584  0020               	movlb	0	; select bank0
  9538  0585  00AF               	movwf	?_compensate_pressure+1
  9539  0586  0021               	movlb	1	; select bank1
  9540  0587  0845               	movf	compensate_pressure@pressure^(0+128),w
  9541  0588  0020               	movlb	0	; select bank0
  9542  0589  00AE               	movwf	?_compensate_pressure
  9543  058A  0008               	return
  9544  058B                     __end_of_compensate_pressure:	
  9545                           
  9546                           	psect	text8
  9547  0D41                     __ptext8:	
  9548 ;; *************** function _compensate_humidity *****************
  9549 ;; Defined at:
  9550 ;;		line 1268 in file "BME280_driver/bme280.c"
  9551 ;; Parameters:    Size  Location     Type
  9552 ;;  uncomp_data     1    wreg     PTR const struct bme280_
  9553 ;;		 -> bme280_get_sensor_data@uncomp_data(12), 
  9554 ;;  calib_data      1   14[BANK0 ] PTR const struct bme280_
  9555 ;;		 -> EnvSensor(51), 
  9556 ;; Auto vars:     Size  Location     Type
  9557 ;;  uncomp_data     1   30[BANK0 ] PTR const struct bme280_
  9558 ;;		 -> bme280_get_sensor_data@uncomp_data(12), 
  9559 ;;  var3            4   55[BANK0 ] long 
  9560 ;;  var5            4   51[BANK0 ] long 
  9561 ;;  var4            4   47[BANK0 ] long 
  9562 ;;  var2            4   43[BANK0 ] long 
  9563 ;;  var1            4   39[BANK0 ] long 
  9564 ;;  humidity        4   35[BANK0 ] unsigned long 
  9565 ;;  humidity_max    4    0        unsigned long 
  9566 ;; Return value:  Size  Location     Type
  9567 ;;                  4   14[BANK0 ] unsigned long 
  9568 ;; Registers used:
  9569 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9570 ;; Tracked objects:
  9571 ;;		On entry : 1F/0
  9572 ;;		On exit  : 1F/0
  9573 ;;		Unchanged: 0/0
  9574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9575 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9576 ;;      Locals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9577 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9578 ;;      Totals:         0      45       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9579 ;;Total ram usage:       45 bytes
  9580 ;; Hardware stack levels used:    1
  9581 ;; Hardware stack levels required when called:    4
  9582 ;; This function calls:
  9583 ;;		___aldiv
  9584 ;;		___lmul
  9585 ;; This function is called by:
  9586 ;;		_bme280_compensate_data
  9587 ;; This function uses a non-reentrant model
  9588 ;;
  9589                           
  9590                           
  9591                           ;psect for function _compensate_humidity
  9592  0D41                     _compensate_humidity:	
  9593                           
  9594                           ;incstack = 0
  9595                           ; Regs used in _compensate_humidity: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9596                           ;compensate_humidity@uncomp_data stored from wreg
  9597  0D41  00BE               	movwf	compensate_humidity@uncomp_data
  9598                           
  9599                           ;BME280_driver/bme280.c: 1279:     var1 = calib_data->t_fine - ((int32_t)76800);
  9600  0D42  082E               	movf	compensate_humidity@calib_data,w
  9601  0D43  3E21               	addlw	33
  9602  0D44  0086               	movwf	6
  9603  0D45  3001               	movlw	1	; select bank2/3
  9604  0D46  0087               	movwf	7
  9605  0D47  3F40               	moviw [0]fsr1
  9606  0D48  00B2               	movwf	??_compensate_humidity
  9607  0D49  3F41               	moviw [1]fsr1
  9608  0D4A  00B3               	movwf	??_compensate_humidity+1
  9609  0D4B  3F42               	moviw [2]fsr1
  9610  0D4C  00B4               	movwf	??_compensate_humidity+2
  9611  0D4D  3F43               	moviw [3]fsr1
  9612  0D4E  00B5               	movwf	??_compensate_humidity+3
  9613  0D4F  3000               	movlw	0
  9614  0D50  0732               	addwf	??_compensate_humidity,w
  9615  0D51  00C7               	movwf	compensate_humidity@var1
  9616  0D52  30D4               	movlw	212
  9617  0D53  3D33               	addwfc	??_compensate_humidity+1,w
  9618  0D54  00C8               	movwf	compensate_humidity@var1+1
  9619  0D55  30FE               	movlw	254
  9620  0D56  3D34               	addwfc	??_compensate_humidity+2,w
  9621  0D57  00C9               	movwf	compensate_humidity@var1+2
  9622  0D58  30FF               	movlw	255
  9623  0D59  3D35               	addwfc	??_compensate_humidity+3,w
  9624  0D5A  00CA               	movwf	compensate_humidity@var1+3
  9625                           
  9626                           ;BME280_driver/bme280.c: 1280:     var2 = (int32_t)(uncomp_data->humidity * 16384);
  9627  0D5B  083E               	movf	compensate_humidity@uncomp_data,w
  9628  0D5C  3E08               	addlw	8
  9629  0D5D  0086               	movwf	6
  9630  0D5E  0187               	clrf	7
  9631  0D5F  3F40               	moviw [0]fsr1
  9632  0D60  00B2               	movwf	??_compensate_humidity
  9633  0D61  3F41               	moviw [1]fsr1
  9634  0D62  00B3               	movwf	??_compensate_humidity+1
  9635  0D63  3F42               	moviw [2]fsr1
  9636  0D64  00B4               	movwf	??_compensate_humidity+2
  9637  0D65  3F43               	moviw [3]fsr1
  9638  0D66  00B5               	movwf	??_compensate_humidity+3
  9639  0D67  300E               	movlw	14
  9640  0D68                     u4465:	
  9641  0D68  35B2               	lslf	??_compensate_humidity,f
  9642  0D69  0DB3               	rlf	??_compensate_humidity+1,f
  9643  0D6A  0DB4               	rlf	??_compensate_humidity+2,f
  9644  0D6B  0DB5               	rlf	??_compensate_humidity+3,f
  9645  0D6C  0B89               	decfsz	9,f
  9646  0D6D  2D68               	goto	u4465
  9647  0D6E  0835               	movf	??_compensate_humidity+3,w
  9648  0D6F  00CE               	movwf	compensate_humidity@var2+3
  9649  0D70  0834               	movf	??_compensate_humidity+2,w
  9650  0D71  00CD               	movwf	compensate_humidity@var2+2
  9651  0D72  0833               	movf	??_compensate_humidity+1,w
  9652  0D73  00CC               	movwf	compensate_humidity@var2+1
  9653  0D74  0832               	movf	??_compensate_humidity,w
  9654  0D75  00CB               	movwf	compensate_humidity@var2
  9655                           
  9656                           ;BME280_driver/bme280.c: 1281:     var3 = (int32_t)(((int32_t)calib_data->dig_H4) * 1048
      +                          576);
  9657  0D76  082E               	movf	compensate_humidity@calib_data,w
  9658  0D77  3E1C               	addlw	28
  9659  0D78  0086               	movwf	6
  9660  0D79  3001               	movlw	1	; select bank2/3
  9661  0D7A  0087               	movwf	7
  9662  0D7B  3F40               	moviw [0]fsr1
  9663  0D7C  00B2               	movwf	??_compensate_humidity
  9664  0D7D  3F41               	moviw [1]fsr1
  9665  0D7E  00B3               	movwf	??_compensate_humidity+1
  9666  0D7F  0832               	movf	??_compensate_humidity,w
  9667  0D80  00B4               	movwf	??_compensate_humidity+2
  9668  0D81  0833               	movf	??_compensate_humidity+1,w
  9669  0D82  00B5               	movwf	??_compensate_humidity+3
  9670  0D83  01B6               	clrf	??_compensate_humidity+4
  9671  0D84  01B7               	clrf	??_compensate_humidity+5
  9672  0D85  3014               	movlw	20
  9673  0D86                     u4475:	
  9674  0D86  35B4               	lslf	??_compensate_humidity+2,f
  9675  0D87  0DB5               	rlf	??_compensate_humidity+3,f
  9676  0D88  0DB6               	rlf	??_compensate_humidity+4,f
  9677  0D89  0DB7               	rlf	??_compensate_humidity+5,f
  9678  0D8A  0B89               	decfsz	9,f
  9679  0D8B  2D86               	goto	u4475
  9680  0D8C  0837               	movf	??_compensate_humidity+5,w
  9681  0D8D  00DA               	movwf	compensate_humidity@var3+3
  9682  0D8E  0836               	movf	??_compensate_humidity+4,w
  9683  0D8F  00D9               	movwf	compensate_humidity@var3+2
  9684  0D90  0835               	movf	??_compensate_humidity+3,w
  9685  0D91  00D8               	movwf	compensate_humidity@var3+1
  9686  0D92  0834               	movf	??_compensate_humidity+2,w
  9687  0D93  00D7               	movwf	compensate_humidity@var3
  9688                           
  9689                           ;BME280_driver/bme280.c: 1282:     var4 = ((int32_t)calib_data->dig_H5) * var1;
  9690  0D94  082E               	movf	compensate_humidity@calib_data,w
  9691  0D95  3E1E               	addlw	30
  9692  0D96  0086               	movwf	6
  9693  0D97  3001               	movlw	1	; select bank2/3
  9694  0D98  0087               	movwf	7
  9695  0D99  3F40               	moviw [0]fsr1
  9696  0D9A  00B2               	movwf	??_compensate_humidity
  9697  0D9B  3F41               	moviw [1]fsr1
  9698  0D9C  00B3               	movwf	??_compensate_humidity+1
  9699  0D9D  0832               	movf	??_compensate_humidity,w
  9700  0D9E  00F0               	movwf	___lmul@multiplier
  9701  0D9F  0833               	movf	??_compensate_humidity+1,w
  9702  0DA0  00F1               	movwf	___lmul@multiplier+1
  9703  0DA1  0D89               	rlf	9,f
  9704  0DA2  3B89               	subwfb	9,f
  9705  0DA3  0989               	comf	9,f
  9706  0DA4  00F2               	movwf	___lmul@multiplier+2
  9707  0DA5  00F3               	movwf	___lmul@multiplier+3
  9708  0DA6  084A               	movf	compensate_humidity@var1+3,w
  9709  0DA7  00F7               	movwf	___lmul@multiplicand+3
  9710  0DA8  0849               	movf	compensate_humidity@var1+2,w
  9711  0DA9  00F6               	movwf	___lmul@multiplicand+2
  9712  0DAA  0848               	movf	compensate_humidity@var1+1,w
  9713  0DAB  00F5               	movwf	___lmul@multiplicand+1
  9714  0DAC  0847               	movf	compensate_humidity@var1,w
  9715  0DAD  00F4               	movwf	___lmul@multiplicand
  9716  0DAE  319E  26A9  318D   	fcall	___lmul
  9717  0DB1  0873               	movf	?___lmul+3,w
  9718  0DB2  0020               	movlb	0	; select bank0
  9719  0DB3  00D2               	movwf	compensate_humidity@var4+3
  9720  0DB4  0872               	movf	?___lmul+2,w
  9721  0DB5  00D1               	movwf	compensate_humidity@var4+2
  9722  0DB6  0871               	movf	?___lmul+1,w
  9723  0DB7  00D0               	movwf	compensate_humidity@var4+1
  9724  0DB8  0870               	movf	?___lmul,w
  9725  0DB9  00CF               	movwf	compensate_humidity@var4
  9726                           
  9727                           ;BME280_driver/bme280.c: 1283:     var5 = (((var2 - var3) - var4) + (int32_t)16384) / 32
      +                          768;
  9728  0DBA  3000               	movlw	0
  9729  0DBB  00A3               	movwf	___aldiv@divisor+3
  9730  0DBC  3000               	movlw	0
  9731  0DBD  00A2               	movwf	___aldiv@divisor+2
  9732  0DBE  3080               	movlw	128
  9733  0DBF  00A1               	movwf	___aldiv@divisor+1
  9734  0DC0  3000               	movlw	0
  9735  0DC1  00A0               	movwf	___aldiv@divisor
  9736  0DC2  084B               	movf	compensate_humidity@var2,w
  9737  0DC3  00B2               	movwf	??_compensate_humidity
  9738  0DC4  084C               	movf	compensate_humidity@var2+1,w
  9739  0DC5  00B3               	movwf	??_compensate_humidity+1
  9740  0DC6  084D               	movf	compensate_humidity@var2+2,w
  9741  0DC7  00B4               	movwf	??_compensate_humidity+2
  9742  0DC8  084E               	movf	compensate_humidity@var2+3,w
  9743  0DC9  00B5               	movwf	??_compensate_humidity+3
  9744  0DCA  0957               	comf	compensate_humidity@var3,w
  9745  0DCB  00B6               	movwf	??_compensate_humidity+4
  9746  0DCC  0958               	comf	compensate_humidity@var3+1,w
  9747  0DCD  00B7               	movwf	??_compensate_humidity+5
  9748  0DCE  0959               	comf	compensate_humidity@var3+2,w
  9749  0DCF  00B8               	movwf	??_compensate_humidity+6
  9750  0DD0  095A               	comf	compensate_humidity@var3+3,w
  9751  0DD1  00B9               	movwf	??_compensate_humidity+7
  9752  0DD2  0AB6               	incf	??_compensate_humidity+4,f
  9753  0DD3  1903               	skipnz
  9754  0DD4  0AB7               	incf	??_compensate_humidity+5,f
  9755  0DD5  1903               	skipnz
  9756  0DD6  0AB8               	incf	??_compensate_humidity+6,f
  9757  0DD7  1903               	skipnz
  9758  0DD8  0AB9               	incf	??_compensate_humidity+7,f
  9759  0DD9  084F               	movf	compensate_humidity@var4,w
  9760  0DDA  02B6               	subwf	??_compensate_humidity+4,f
  9761  0DDB  0850               	movf	compensate_humidity@var4+1,w
  9762  0DDC  3BB7               	subwfb	??_compensate_humidity+5,f
  9763  0DDD  0851               	movf	compensate_humidity@var4+2,w
  9764  0DDE  3BB8               	subwfb	??_compensate_humidity+6,f
  9765  0DDF  0852               	movf	compensate_humidity@var4+3,w
  9766  0DE0  3BB9               	subwfb	??_compensate_humidity+7,f
  9767  0DE1  0836               	movf	??_compensate_humidity+4,w
  9768  0DE2  07B2               	addwf	??_compensate_humidity,f
  9769  0DE3  0837               	movf	??_compensate_humidity+5,w
  9770  0DE4  3DB3               	addwfc	??_compensate_humidity+1,f
  9771  0DE5  0838               	movf	??_compensate_humidity+6,w
  9772  0DE6  3DB4               	addwfc	??_compensate_humidity+2,f
  9773  0DE7  0839               	movf	??_compensate_humidity+7,w
  9774  0DE8  3DB5               	addwfc	??_compensate_humidity+3,f
  9775  0DE9  3000               	movlw	0
  9776  0DEA  0732               	addwf	??_compensate_humidity,w
  9777  0DEB  00A4               	movwf	___aldiv@dividend
  9778  0DEC  3040               	movlw	64
  9779  0DED  3D33               	addwfc	??_compensate_humidity+1,w
  9780  0DEE  00A5               	movwf	___aldiv@dividend+1
  9781  0DEF  3000               	movlw	0
  9782  0DF0  3D34               	addwfc	??_compensate_humidity+2,w
  9783  0DF1  00A6               	movwf	___aldiv@dividend+2
  9784  0DF2  3000               	movlw	0
  9785  0DF3  3D35               	addwfc	??_compensate_humidity+3,w
  9786  0DF4  00A7               	movwf	___aldiv@dividend+3
  9787  0DF5  3197  277F  318D   	fcall	___aldiv
  9788  0DF8  0823               	movf	?___aldiv+3,w
  9789  0DF9  00D6               	movwf	compensate_humidity@var5+3
  9790  0DFA  0822               	movf	?___aldiv+2,w
  9791  0DFB  00D5               	movwf	compensate_humidity@var5+2
  9792  0DFC  0821               	movf	?___aldiv+1,w
  9793  0DFD  00D4               	movwf	compensate_humidity@var5+1
  9794  0DFE  0820               	movf	?___aldiv,w
  9795  0DFF  00D3               	movwf	compensate_humidity@var5
  9796                           
  9797                           ;BME280_driver/bme280.c: 1284:     var2 = (var1 * ((int32_t)calib_data->dig_H6)) / 1024;
  9798  0E00  3000               	movlw	0
  9799  0E01  00A3               	movwf	___aldiv@divisor+3
  9800  0E02  3000               	movlw	0
  9801  0E03  00A2               	movwf	___aldiv@divisor+2
  9802  0E04  3004               	movlw	4
  9803  0E05  00A1               	movwf	___aldiv@divisor+1
  9804  0E06  3000               	movlw	0
  9805  0E07  00A0               	movwf	___aldiv@divisor
  9806  0E08  082E               	movf	compensate_humidity@calib_data,w
  9807  0E09  3E20               	addlw	32
  9808  0E0A  0086               	movwf	6
  9809  0E0B  3001               	movlw	1	; select bank2/3
  9810  0E0C  0087               	movwf	7
  9811  0E0D  0801               	movf	1,w
  9812  0E0E  00F0               	movwf	___lmul@multiplier
  9813  0E0F  3980               	andlw	128
  9814  0E10  1D03               	skipz
  9815  0E11  30FF               	movlw	255
  9816  0E12  00F1               	movwf	___lmul@multiplier+1
  9817  0E13  00F2               	movwf	___lmul@multiplier+2
  9818  0E14  00F3               	movwf	___lmul@multiplier+3
  9819  0E15  084A               	movf	compensate_humidity@var1+3,w
  9820  0E16  00F7               	movwf	___lmul@multiplicand+3
  9821  0E17  0849               	movf	compensate_humidity@var1+2,w
  9822  0E18  00F6               	movwf	___lmul@multiplicand+2
  9823  0E19  0848               	movf	compensate_humidity@var1+1,w
  9824  0E1A  00F5               	movwf	___lmul@multiplicand+1
  9825  0E1B  0847               	movf	compensate_humidity@var1,w
  9826  0E1C  00F4               	movwf	___lmul@multiplicand
  9827  0E1D  319E  26A9  318D   	fcall	___lmul
  9828  0E20  0873               	movf	?___lmul+3,w
  9829  0E21  0020               	movlb	0	; select bank0
  9830  0E22  00A7               	movwf	___aldiv@dividend+3
  9831  0E23  0872               	movf	?___lmul+2,w
  9832  0E24  00A6               	movwf	___aldiv@dividend+2
  9833  0E25  0871               	movf	?___lmul+1,w
  9834  0E26  00A5               	movwf	___aldiv@dividend+1
  9835  0E27  0870               	movf	?___lmul,w
  9836  0E28  00A4               	movwf	___aldiv@dividend
  9837  0E29  3197  277F  318D   	fcall	___aldiv
  9838  0E2C  0823               	movf	?___aldiv+3,w
  9839  0E2D  00CE               	movwf	compensate_humidity@var2+3
  9840  0E2E  0822               	movf	?___aldiv+2,w
  9841  0E2F  00CD               	movwf	compensate_humidity@var2+2
  9842  0E30  0821               	movf	?___aldiv+1,w
  9843  0E31  00CC               	movwf	compensate_humidity@var2+1
  9844  0E32  0820               	movf	?___aldiv,w
  9845  0E33  00CB               	movwf	compensate_humidity@var2
  9846                           
  9847                           ;BME280_driver/bme280.c: 1285:     var3 = (var1 * ((int32_t)calib_data->dig_H3)) / 2048;
  9848  0E34  3000               	movlw	0
  9849  0E35  00A3               	movwf	___aldiv@divisor+3
  9850  0E36  3000               	movlw	0
  9851  0E37  00A2               	movwf	___aldiv@divisor+2
  9852  0E38  3008               	movlw	8
  9853  0E39  00A1               	movwf	___aldiv@divisor+1
  9854  0E3A  3000               	movlw	0
  9855  0E3B  00A0               	movwf	___aldiv@divisor
  9856  0E3C  082E               	movf	compensate_humidity@calib_data,w
  9857  0E3D  3E1B               	addlw	27
  9858  0E3E  0086               	movwf	6
  9859  0E3F  3001               	movlw	1	; select bank2/3
  9860  0E40  0087               	movwf	7
  9861  0E41  0801               	movf	1,w
  9862  0E42  00B2               	movwf	??_compensate_humidity
  9863  0E43  01B3               	clrf	??_compensate_humidity+1
  9864  0E44  01B4               	clrf	??_compensate_humidity+2
  9865  0E45  01B5               	clrf	??_compensate_humidity+3
  9866  0E46  0835               	movf	??_compensate_humidity+3,w
  9867  0E47  00F3               	movwf	___lmul@multiplier+3
  9868  0E48  0834               	movf	??_compensate_humidity+2,w
  9869  0E49  00F2               	movwf	___lmul@multiplier+2
  9870  0E4A  0833               	movf	??_compensate_humidity+1,w
  9871  0E4B  00F1               	movwf	___lmul@multiplier+1
  9872  0E4C  0832               	movf	??_compensate_humidity,w
  9873  0E4D  00F0               	movwf	___lmul@multiplier
  9874  0E4E  084A               	movf	compensate_humidity@var1+3,w
  9875  0E4F  00F7               	movwf	___lmul@multiplicand+3
  9876  0E50  0849               	movf	compensate_humidity@var1+2,w
  9877  0E51  00F6               	movwf	___lmul@multiplicand+2
  9878  0E52  0848               	movf	compensate_humidity@var1+1,w
  9879  0E53  00F5               	movwf	___lmul@multiplicand+1
  9880  0E54  0847               	movf	compensate_humidity@var1,w
  9881  0E55  00F4               	movwf	___lmul@multiplicand
  9882  0E56  319E  26A9  318D   	fcall	___lmul
  9883  0E59  0873               	movf	?___lmul+3,w
  9884  0E5A  0020               	movlb	0	; select bank0
  9885  0E5B  00A7               	movwf	___aldiv@dividend+3
  9886  0E5C  0872               	movf	?___lmul+2,w
  9887  0E5D  00A6               	movwf	___aldiv@dividend+2
  9888  0E5E  0871               	movf	?___lmul+1,w
  9889  0E5F  00A5               	movwf	___aldiv@dividend+1
  9890  0E60  0870               	movf	?___lmul,w
  9891  0E61  00A4               	movwf	___aldiv@dividend
  9892  0E62  3197  277F  318D   	fcall	___aldiv
  9893  0E65  0823               	movf	?___aldiv+3,w
  9894  0E66  00DA               	movwf	compensate_humidity@var3+3
  9895  0E67  0822               	movf	?___aldiv+2,w
  9896  0E68  00D9               	movwf	compensate_humidity@var3+2
  9897  0E69  0821               	movf	?___aldiv+1,w
  9898  0E6A  00D8               	movwf	compensate_humidity@var3+1
  9899  0E6B  0820               	movf	?___aldiv,w
  9900  0E6C  00D7               	movwf	compensate_humidity@var3
  9901                           
  9902                           ;BME280_driver/bme280.c: 1286:     var4 = ((var2 * (var3 + (int32_t)32768)) / 1024) + (i
      +                          nt32_t)2097152;
  9903  0E6D  3000               	movlw	0
  9904  0E6E  00A3               	movwf	___aldiv@divisor+3
  9905  0E6F  3000               	movlw	0
  9906  0E70  00A2               	movwf	___aldiv@divisor+2
  9907  0E71  3004               	movlw	4
  9908  0E72  00A1               	movwf	___aldiv@divisor+1
  9909  0E73  3000               	movlw	0
  9910  0E74  00A0               	movwf	___aldiv@divisor
  9911  0E75  3000               	movlw	0
  9912  0E76  0757               	addwf	compensate_humidity@var3,w
  9913  0E77  00F0               	movwf	___lmul@multiplier
  9914  0E78  3080               	movlw	128
  9915  0E79  3D58               	addwfc	compensate_humidity@var3+1,w
  9916  0E7A  00F1               	movwf	___lmul@multiplier+1
  9917  0E7B  3000               	movlw	0
  9918  0E7C  3D59               	addwfc	compensate_humidity@var3+2,w
  9919  0E7D  00F2               	movwf	___lmul@multiplier+2
  9920  0E7E  3000               	movlw	0
  9921  0E7F  3D5A               	addwfc	compensate_humidity@var3+3,w
  9922  0E80  00F3               	movwf	___lmul@multiplier+3
  9923  0E81  084E               	movf	compensate_humidity@var2+3,w
  9924  0E82  00F7               	movwf	___lmul@multiplicand+3
  9925  0E83  084D               	movf	compensate_humidity@var2+2,w
  9926  0E84  00F6               	movwf	___lmul@multiplicand+2
  9927  0E85  084C               	movf	compensate_humidity@var2+1,w
  9928  0E86  00F5               	movwf	___lmul@multiplicand+1
  9929  0E87  084B               	movf	compensate_humidity@var2,w
  9930  0E88  00F4               	movwf	___lmul@multiplicand
  9931  0E89  319E  26A9  318D   	fcall	___lmul
  9932  0E8C  0873               	movf	?___lmul+3,w
  9933  0E8D  0020               	movlb	0	; select bank0
  9934  0E8E  00A7               	movwf	___aldiv@dividend+3
  9935  0E8F  0872               	movf	?___lmul+2,w
  9936  0E90  00A6               	movwf	___aldiv@dividend+2
  9937  0E91  0871               	movf	?___lmul+1,w
  9938  0E92  00A5               	movwf	___aldiv@dividend+1
  9939  0E93  0870               	movf	?___lmul,w
  9940  0E94  00A4               	movwf	___aldiv@dividend
  9941  0E95  3197  277F  318D   	fcall	___aldiv
  9942  0E98  3000               	movlw	0
  9943  0E99  0720               	addwf	?___aldiv,w
  9944  0E9A  00CF               	movwf	compensate_humidity@var4
  9945  0E9B  3000               	movlw	0
  9946  0E9C  3D21               	addwfc	?___aldiv+1,w
  9947  0E9D  00D0               	movwf	compensate_humidity@var4+1
  9948  0E9E  3020               	movlw	32
  9949  0E9F  3D22               	addwfc	?___aldiv+2,w
  9950  0EA0  00D1               	movwf	compensate_humidity@var4+2
  9951  0EA1  3000               	movlw	0
  9952  0EA2  3D23               	addwfc	?___aldiv+3,w
  9953  0EA3  00D2               	movwf	compensate_humidity@var4+3
  9954                           
  9955                           ;BME280_driver/bme280.c: 1287:     var2 = ((var4 * ((int32_t)calib_data->dig_H2)) + 8192
      +                          ) / 16384;
  9956  0EA4  3000               	movlw	0
  9957  0EA5  00A3               	movwf	___aldiv@divisor+3
  9958  0EA6  3000               	movlw	0
  9959  0EA7  00A2               	movwf	___aldiv@divisor+2
  9960  0EA8  3040               	movlw	64
  9961  0EA9  00A1               	movwf	___aldiv@divisor+1
  9962  0EAA  3000               	movlw	0
  9963  0EAB  00A0               	movwf	___aldiv@divisor
  9964  0EAC  3000               	movlw	0
  9965  0EAD  00B2               	movwf	??_compensate_humidity
  9966  0EAE  3020               	movlw	32
  9967  0EAF  00B3               	movwf	??_compensate_humidity+1
  9968  0EB0  3000               	movlw	0
  9969  0EB1  00B4               	movwf	??_compensate_humidity+2
  9970  0EB2  3000               	movlw	0
  9971  0EB3  00B5               	movwf	??_compensate_humidity+3
  9972  0EB4  082E               	movf	compensate_humidity@calib_data,w
  9973  0EB5  3E19               	addlw	25
  9974  0EB6  0086               	movwf	6
  9975  0EB7  3001               	movlw	1	; select bank2/3
  9976  0EB8  0087               	movwf	7
  9977  0EB9  3F40               	moviw [0]fsr1
  9978  0EBA  00B6               	movwf	??_compensate_humidity+4
  9979  0EBB  3F41               	moviw [1]fsr1
  9980  0EBC  00B7               	movwf	??_compensate_humidity+5
  9981  0EBD  0836               	movf	??_compensate_humidity+4,w
  9982  0EBE  00F0               	movwf	___lmul@multiplier
  9983  0EBF  0837               	movf	??_compensate_humidity+5,w
  9984  0EC0  00F1               	movwf	___lmul@multiplier+1
  9985  0EC1  0D89               	rlf	9,f
  9986  0EC2  3B89               	subwfb	9,f
  9987  0EC3  0989               	comf	9,f
  9988  0EC4  00F2               	movwf	___lmul@multiplier+2
  9989  0EC5  00F3               	movwf	___lmul@multiplier+3
  9990  0EC6  0852               	movf	compensate_humidity@var4+3,w
  9991  0EC7  00F7               	movwf	___lmul@multiplicand+3
  9992  0EC8  0851               	movf	compensate_humidity@var4+2,w
  9993  0EC9  00F6               	movwf	___lmul@multiplicand+2
  9994  0ECA  0850               	movf	compensate_humidity@var4+1,w
  9995  0ECB  00F5               	movwf	___lmul@multiplicand+1
  9996  0ECC  084F               	movf	compensate_humidity@var4,w
  9997  0ECD  00F4               	movwf	___lmul@multiplicand
  9998  0ECE  319E  26A9  318D   	fcall	___lmul
  9999  0ED1  0870               	movf	?___lmul,w
 10000  0ED2  0020               	movlb	0	; select bank0
 10001  0ED3  07B2               	addwf	??_compensate_humidity,f
 10002  0ED4  0871               	movf	?___lmul+1,w
 10003  0ED5  3DB3               	addwfc	??_compensate_humidity+1,f
 10004  0ED6  0872               	movf	?___lmul+2,w
 10005  0ED7  3DB4               	addwfc	??_compensate_humidity+2,f
 10006  0ED8  0873               	movf	?___lmul+3,w
 10007  0ED9  3DB5               	addwfc	??_compensate_humidity+3,f
 10008  0EDA  0835               	movf	??_compensate_humidity+3,w
 10009  0EDB  00A7               	movwf	___aldiv@dividend+3
 10010  0EDC  0834               	movf	??_compensate_humidity+2,w
 10011  0EDD  00A6               	movwf	___aldiv@dividend+2
 10012  0EDE  0833               	movf	??_compensate_humidity+1,w
 10013  0EDF  00A5               	movwf	___aldiv@dividend+1
 10014  0EE0  0832               	movf	??_compensate_humidity,w
 10015  0EE1  00A4               	movwf	___aldiv@dividend
 10016  0EE2  3197  277F  318D   	fcall	___aldiv
 10017  0EE5  0823               	movf	?___aldiv+3,w
 10018  0EE6  00CE               	movwf	compensate_humidity@var2+3
 10019  0EE7  0822               	movf	?___aldiv+2,w
 10020  0EE8  00CD               	movwf	compensate_humidity@var2+2
 10021  0EE9  0821               	movf	?___aldiv+1,w
 10022  0EEA  00CC               	movwf	compensate_humidity@var2+1
 10023  0EEB  0820               	movf	?___aldiv,w
 10024  0EEC  00CB               	movwf	compensate_humidity@var2
 10025                           
 10026                           ;BME280_driver/bme280.c: 1288:     var3 = var5 * var2;
 10027  0EED  0856               	movf	compensate_humidity@var5+3,w
 10028  0EEE  00F3               	movwf	___lmul@multiplier+3
 10029  0EEF  0855               	movf	compensate_humidity@var5+2,w
 10030  0EF0  00F2               	movwf	___lmul@multiplier+2
 10031  0EF1  0854               	movf	compensate_humidity@var5+1,w
 10032  0EF2  00F1               	movwf	___lmul@multiplier+1
 10033  0EF3  0853               	movf	compensate_humidity@var5,w
 10034  0EF4  00F0               	movwf	___lmul@multiplier
 10035  0EF5  084E               	movf	compensate_humidity@var2+3,w
 10036  0EF6  00F7               	movwf	___lmul@multiplicand+3
 10037  0EF7  084D               	movf	compensate_humidity@var2+2,w
 10038  0EF8  00F6               	movwf	___lmul@multiplicand+2
 10039  0EF9  084C               	movf	compensate_humidity@var2+1,w
 10040  0EFA  00F5               	movwf	___lmul@multiplicand+1
 10041  0EFB  084B               	movf	compensate_humidity@var2,w
 10042  0EFC  00F4               	movwf	___lmul@multiplicand
 10043  0EFD  319E  26A9  318D   	fcall	___lmul
 10044  0F00  0873               	movf	?___lmul+3,w
 10045  0F01  0020               	movlb	0	; select bank0
 10046  0F02  00DA               	movwf	compensate_humidity@var3+3
 10047  0F03  0872               	movf	?___lmul+2,w
 10048  0F04  00D9               	movwf	compensate_humidity@var3+2
 10049  0F05  0871               	movf	?___lmul+1,w
 10050  0F06  00D8               	movwf	compensate_humidity@var3+1
 10051  0F07  0870               	movf	?___lmul,w
 10052  0F08  00D7               	movwf	compensate_humidity@var3
 10053                           
 10054                           ;BME280_driver/bme280.c: 1289:     var4 = ((var3 / 32768) * (var3 / 32768)) / 128;
 10055  0F09  3000               	movlw	0
 10056  0F0A  00A3               	movwf	___aldiv@divisor+3
 10057  0F0B  3000               	movlw	0
 10058  0F0C  00A2               	movwf	___aldiv@divisor+2
 10059  0F0D  3080               	movlw	128
 10060  0F0E  00A1               	movwf	___aldiv@divisor+1
 10061  0F0F  3000               	movlw	0
 10062  0F10  00A0               	movwf	___aldiv@divisor
 10063  0F11  085A               	movf	compensate_humidity@var3+3,w
 10064  0F12  00A7               	movwf	___aldiv@dividend+3
 10065  0F13  0859               	movf	compensate_humidity@var3+2,w
 10066  0F14  00A6               	movwf	___aldiv@dividend+2
 10067  0F15  0858               	movf	compensate_humidity@var3+1,w
 10068  0F16  00A5               	movwf	___aldiv@dividend+1
 10069  0F17  0857               	movf	compensate_humidity@var3,w
 10070  0F18  00A4               	movwf	___aldiv@dividend
 10071  0F19  3197  277F  318D   	fcall	___aldiv
 10072  0F1C  0823               	movf	?___aldiv+3,w
 10073  0F1D  00F3               	movwf	___lmul@multiplier+3
 10074  0F1E  0822               	movf	?___aldiv+2,w
 10075  0F1F  00F2               	movwf	___lmul@multiplier+2
 10076  0F20  0821               	movf	?___aldiv+1,w
 10077  0F21  00F1               	movwf	___lmul@multiplier+1
 10078  0F22  0820               	movf	?___aldiv,w
 10079  0F23  00F0               	movwf	___lmul@multiplier
 10080  0F24  3000               	movlw	0
 10081  0F25  00A3               	movwf	___aldiv@divisor+3
 10082  0F26  3000               	movlw	0
 10083  0F27  00A2               	movwf	___aldiv@divisor+2
 10084  0F28  3080               	movlw	128
 10085  0F29  00A1               	movwf	___aldiv@divisor+1
 10086  0F2A  3000               	movlw	0
 10087  0F2B  00A0               	movwf	___aldiv@divisor
 10088  0F2C  085A               	movf	compensate_humidity@var3+3,w
 10089  0F2D  00A7               	movwf	___aldiv@dividend+3
 10090  0F2E  0859               	movf	compensate_humidity@var3+2,w
 10091  0F2F  00A6               	movwf	___aldiv@dividend+2
 10092  0F30  0858               	movf	compensate_humidity@var3+1,w
 10093  0F31  00A5               	movwf	___aldiv@dividend+1
 10094  0F32  0857               	movf	compensate_humidity@var3,w
 10095  0F33  00A4               	movwf	___aldiv@dividend
 10096  0F34  3197  277F  318D   	fcall	___aldiv
 10097  0F37  0823               	movf	?___aldiv+3,w
 10098  0F38  00F7               	movwf	___lmul@multiplicand+3
 10099  0F39  0822               	movf	?___aldiv+2,w
 10100  0F3A  00F6               	movwf	___lmul@multiplicand+2
 10101  0F3B  0821               	movf	?___aldiv+1,w
 10102  0F3C  00F5               	movwf	___lmul@multiplicand+1
 10103  0F3D  0820               	movf	?___aldiv,w
 10104  0F3E  00F4               	movwf	___lmul@multiplicand
 10105  0F3F  319E  26A9  318D   	fcall	___lmul
 10106  0F42  0873               	movf	?___lmul+3,w
 10107  0F43  0020               	movlb	0	; select bank0
 10108  0F44  00BD               	movwf	_compensate_humidity$2273+3
 10109  0F45  0872               	movf	?___lmul+2,w
 10110  0F46  00BC               	movwf	_compensate_humidity$2273+2
 10111  0F47  0871               	movf	?___lmul+1,w
 10112  0F48  00BB               	movwf	_compensate_humidity$2273+1
 10113  0F49  0870               	movf	?___lmul,w
 10114  0F4A  00BA               	movwf	_compensate_humidity$2273
 10115                           
 10116                           ;BME280_driver/bme280.c: 1289:     var4 = ((var3 / 32768) * (var3 / 32768)) / 128;
 10117  0F4B  3000               	movlw	0
 10118  0F4C  00A3               	movwf	___aldiv@divisor+3
 10119  0F4D  3000               	movlw	0
 10120  0F4E  00A2               	movwf	___aldiv@divisor+2
 10121  0F4F  3000               	movlw	0
 10122  0F50  00A1               	movwf	___aldiv@divisor+1
 10123  0F51  3080               	movlw	128
 10124  0F52  00A0               	movwf	___aldiv@divisor
 10125  0F53  083D               	movf	_compensate_humidity$2273+3,w
 10126  0F54  00A7               	movwf	___aldiv@dividend+3
 10127  0F55  083C               	movf	_compensate_humidity$2273+2,w
 10128  0F56  00A6               	movwf	___aldiv@dividend+2
 10129  0F57  083B               	movf	_compensate_humidity$2273+1,w
 10130  0F58  00A5               	movwf	___aldiv@dividend+1
 10131  0F59  083A               	movf	_compensate_humidity$2273,w
 10132  0F5A  00A4               	movwf	___aldiv@dividend
 10133  0F5B  3197  277F  318D   	fcall	___aldiv
 10134  0F5E  0823               	movf	?___aldiv+3,w
 10135  0F5F  00D2               	movwf	compensate_humidity@var4+3
 10136  0F60  0822               	movf	?___aldiv+2,w
 10137  0F61  00D1               	movwf	compensate_humidity@var4+2
 10138  0F62  0821               	movf	?___aldiv+1,w
 10139  0F63  00D0               	movwf	compensate_humidity@var4+1
 10140  0F64  0820               	movf	?___aldiv,w
 10141  0F65  00CF               	movwf	compensate_humidity@var4
 10142                           
 10143                           ;BME280_driver/bme280.c: 1290:     var5 = var3 - ((var4 * ((int32_t)calib_data->dig_H1))
      +                           / 16);
 10144  0F66  3000               	movlw	0
 10145  0F67  00A3               	movwf	___aldiv@divisor+3
 10146  0F68  3000               	movlw	0
 10147  0F69  00A2               	movwf	___aldiv@divisor+2
 10148  0F6A  3000               	movlw	0
 10149  0F6B  00A1               	movwf	___aldiv@divisor+1
 10150  0F6C  3010               	movlw	16
 10151  0F6D  00A0               	movwf	___aldiv@divisor
 10152  0F6E  082E               	movf	compensate_humidity@calib_data,w
 10153  0F6F  3E18               	addlw	24
 10154  0F70  0086               	movwf	6
 10155  0F71  3001               	movlw	1	; select bank2/3
 10156  0F72  0087               	movwf	7
 10157  0F73  0801               	movf	1,w
 10158  0F74  00B2               	movwf	??_compensate_humidity
 10159  0F75  01B3               	clrf	??_compensate_humidity+1
 10160  0F76  01B4               	clrf	??_compensate_humidity+2
 10161  0F77  01B5               	clrf	??_compensate_humidity+3
 10162  0F78  0835               	movf	??_compensate_humidity+3,w
 10163  0F79  00F3               	movwf	___lmul@multiplier+3
 10164  0F7A  0834               	movf	??_compensate_humidity+2,w
 10165  0F7B  00F2               	movwf	___lmul@multiplier+2
 10166  0F7C  0833               	movf	??_compensate_humidity+1,w
 10167  0F7D  00F1               	movwf	___lmul@multiplier+1
 10168  0F7E  0832               	movf	??_compensate_humidity,w
 10169  0F7F  00F0               	movwf	___lmul@multiplier
 10170  0F80  0852               	movf	compensate_humidity@var4+3,w
 10171  0F81  00F7               	movwf	___lmul@multiplicand+3
 10172  0F82  0851               	movf	compensate_humidity@var4+2,w
 10173  0F83  00F6               	movwf	___lmul@multiplicand+2
 10174  0F84  0850               	movf	compensate_humidity@var4+1,w
 10175  0F85  00F5               	movwf	___lmul@multiplicand+1
 10176  0F86  084F               	movf	compensate_humidity@var4,w
 10177  0F87  00F4               	movwf	___lmul@multiplicand
 10178  0F88  319E  26A9  318D   	fcall	___lmul
 10179  0F8B  0873               	movf	?___lmul+3,w
 10180  0F8C  0020               	movlb	0	; select bank0
 10181  0F8D  00A7               	movwf	___aldiv@dividend+3
 10182  0F8E  0872               	movf	?___lmul+2,w
 10183  0F8F  00A6               	movwf	___aldiv@dividend+2
 10184  0F90  0871               	movf	?___lmul+1,w
 10185  0F91  00A5               	movwf	___aldiv@dividend+1
 10186  0F92  0870               	movf	?___lmul,w
 10187  0F93  00A4               	movwf	___aldiv@dividend
 10188  0F94  3197  277F  318D   	fcall	___aldiv
 10189  0F97  0820               	movf	?___aldiv,w
 10190  0F98  0257               	subwf	compensate_humidity@var3,w
 10191  0F99  00B6               	movwf	??_compensate_humidity+4
 10192  0F9A  0821               	movf	?___aldiv+1,w
 10193  0F9B  3B58               	subwfb	compensate_humidity@var3+1,w
 10194  0F9C  00B7               	movwf	??_compensate_humidity+5
 10195  0F9D  0822               	movf	?___aldiv+2,w
 10196  0F9E  3B59               	subwfb	compensate_humidity@var3+2,w
 10197  0F9F  00B8               	movwf	??_compensate_humidity+6
 10198  0FA0  0823               	movf	?___aldiv+3,w
 10199  0FA1  3B5A               	subwfb	compensate_humidity@var3+3,w
 10200  0FA2  00B9               	movwf	??_compensate_humidity+7
 10201  0FA3  0839               	movf	??_compensate_humidity+7,w
 10202  0FA4  00D6               	movwf	compensate_humidity@var5+3
 10203  0FA5  0838               	movf	??_compensate_humidity+6,w
 10204  0FA6  00D5               	movwf	compensate_humidity@var5+2
 10205  0FA7  0837               	movf	??_compensate_humidity+5,w
 10206  0FA8  00D4               	movwf	compensate_humidity@var5+1
 10207  0FA9  0836               	movf	??_compensate_humidity+4,w
 10208  0FAA  00D3               	movwf	compensate_humidity@var5
 10209                           
 10210                           ;BME280_driver/bme280.c: 1291:     var5 = (var5 < 0 ? 0 : var5);
 10211  0FAB  1FD6               	btfss	compensate_humidity@var5+3,7
 10212  0FAC  2FB5               	goto	l4336
 10213  0FAD  3000               	movlw	0
 10214  0FAE  00D6               	movwf	compensate_humidity@var5+3
 10215  0FAF  3000               	movlw	0
 10216  0FB0  00D5               	movwf	compensate_humidity@var5+2
 10217  0FB1  3000               	movlw	0
 10218  0FB2  00D4               	movwf	compensate_humidity@var5+1
 10219  0FB3  3000               	movlw	0
 10220  0FB4  00D3               	movwf	compensate_humidity@var5
 10221  0FB5                     l4336:	
 10222                           
 10223                           ;BME280_driver/bme280.c: 1292:     var5 = (var5 > 419430400 ? 419430400 : var5);
 10224  0FB5  1BD6               	btfsc	compensate_humidity@var5+3,7
 10225  0FB6  2FC9               	goto	l4342
 10226  0FB7  3001               	movlw	1
 10227  0FB8  0253               	subwf	compensate_humidity@var5,w
 10228  0FB9  3000               	movlw	0
 10229  0FBA  3B54               	subwfb	compensate_humidity@var5+1,w
 10230  0FBB  3000               	movlw	0
 10231  0FBC  3B55               	subwfb	compensate_humidity@var5+2,w
 10232  0FBD  3019               	movlw	25
 10233  0FBE  3B56               	subwfb	compensate_humidity@var5+3,w
 10234  0FBF  1C03               	btfss	3,0
 10235  0FC0  2FC9               	goto	l4342
 10236  0FC1  3019               	movlw	25
 10237  0FC2  00D6               	movwf	compensate_humidity@var5+3
 10238  0FC3  3000               	movlw	0
 10239  0FC4  00D5               	movwf	compensate_humidity@var5+2
 10240  0FC5  3000               	movlw	0
 10241  0FC6  00D4               	movwf	compensate_humidity@var5+1
 10242  0FC7  3000               	movlw	0
 10243  0FC8  00D3               	movwf	compensate_humidity@var5
 10244  0FC9                     l4342:	
 10245                           
 10246                           ;BME280_driver/bme280.c: 1293:     humidity = (uint32_t)(var5 / 4096);
 10247  0FC9  3000               	movlw	0
 10248  0FCA  00A3               	movwf	___aldiv@divisor+3
 10249  0FCB  3000               	movlw	0
 10250  0FCC  00A2               	movwf	___aldiv@divisor+2
 10251  0FCD  3010               	movlw	16
 10252  0FCE  00A1               	movwf	___aldiv@divisor+1
 10253  0FCF  3000               	movlw	0
 10254  0FD0  00A0               	movwf	___aldiv@divisor
 10255  0FD1  0856               	movf	compensate_humidity@var5+3,w
 10256  0FD2  00A7               	movwf	___aldiv@dividend+3
 10257  0FD3  0855               	movf	compensate_humidity@var5+2,w
 10258  0FD4  00A6               	movwf	___aldiv@dividend+2
 10259  0FD5  0854               	movf	compensate_humidity@var5+1,w
 10260  0FD6  00A5               	movwf	___aldiv@dividend+1
 10261  0FD7  0853               	movf	compensate_humidity@var5,w
 10262  0FD8  00A4               	movwf	___aldiv@dividend
 10263  0FD9  3197  277F  318D   	fcall	___aldiv
 10264  0FDC  0823               	movf	?___aldiv+3,w
 10265  0FDD  00C6               	movwf	compensate_humidity@humidity+3
 10266  0FDE  0822               	movf	?___aldiv+2,w
 10267  0FDF  00C5               	movwf	compensate_humidity@humidity+2
 10268  0FE0  0821               	movf	?___aldiv+1,w
 10269  0FE1  00C4               	movwf	compensate_humidity@humidity+1
 10270  0FE2  0820               	movf	?___aldiv,w
 10271  0FE3  00C3               	movwf	compensate_humidity@humidity
 10272                           
 10273                           ;BME280_driver/bme280.c: 1294:     if (humidity > humidity_max)
 10274  0FE4  0846               	movf	compensate_humidity@humidity+3,w
 10275  0FE5  1D03               	btfss	3,2
 10276  0FE6  2FEF               	goto	l4346
 10277  0FE7  3001               	movlw	1
 10278  0FE8  0243               	subwf	compensate_humidity@humidity,w
 10279  0FE9  3090               	movlw	144
 10280  0FEA  3B44               	subwfb	compensate_humidity@humidity+1,w
 10281  0FEB  3001               	movlw	1
 10282  0FEC  3B45               	subwfb	compensate_humidity@humidity+2,w
 10283  0FED  1C03               	btfss	3,0
 10284  0FEE  2FF7               	goto	l208
 10285  0FEF                     l4346:	
 10286                           
 10287                           ;BME280_driver/bme280.c: 1295:     {;BME280_driver/bme280.c: 1296:         humidity = hu
      +                          midity_max;
 10288  0FEF  3000               	movlw	0
 10289  0FF0  00C6               	movwf	compensate_humidity@humidity+3
 10290  0FF1  3001               	movlw	1
 10291  0FF2  00C5               	movwf	compensate_humidity@humidity+2
 10292  0FF3  3090               	movlw	144
 10293  0FF4  00C4               	movwf	compensate_humidity@humidity+1
 10294  0FF5  3000               	movlw	0
 10295  0FF6  00C3               	movwf	compensate_humidity@humidity
 10296  0FF7                     l208:	
 10297                           ;BME280_driver/bme280.c: 1297:     }
 10298                           
 10299                           
 10300                           ;BME280_driver/bme280.c: 1299:     return humidity;
 10301  0FF7  0846               	movf	compensate_humidity@humidity+3,w
 10302  0FF8  00B1               	movwf	?_compensate_humidity+3
 10303  0FF9  0845               	movf	compensate_humidity@humidity+2,w
 10304  0FFA  00B0               	movwf	?_compensate_humidity+2
 10305  0FFB  0844               	movf	compensate_humidity@humidity+1,w
 10306  0FFC  00AF               	movwf	?_compensate_humidity+1
 10307  0FFD  0843               	movf	compensate_humidity@humidity,w
 10308  0FFE  00AE               	movwf	?_compensate_humidity
 10309  0FFF  0008               	return
 10310  1000                     __end_of_compensate_humidity:	
 10311                           
 10312                           	psect	text9
 10313  1EA9                     __ptext9:	
 10314 ;; *************** function ___lmul *****************
 10315 ;; Defined at:
 10316 ;;		line 15 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\Umul32.c"
 10317 ;; Parameters:    Size  Location     Type
 10318 ;;  multiplier      4    0[COMMON] unsigned long 
 10319 ;;  multiplicand    4    4[COMMON] unsigned long 
 10320 ;; Auto vars:     Size  Location     Type
 10321 ;;  product         4    8[COMMON] unsigned long 
 10322 ;; Return value:  Size  Location     Type
 10323 ;;                  4    0[COMMON] unsigned long 
 10324 ;; Registers used:
 10325 ;;		wreg, status,2, status,0
 10326 ;; Tracked objects:
 10327 ;;		On entry : 1E/0
 10328 ;;		On exit  : 1E/0
 10329 ;;		Unchanged: 1E/0
 10330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10331 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10332 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10334 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10335 ;;Total ram usage:       12 bytes
 10336 ;; Hardware stack levels used:    1
 10337 ;; Hardware stack levels required when called:    3
 10338 ;; This function calls:
 10339 ;;		Nothing
 10340 ;; This function is called by:
 10341 ;;		_compensate_temperature
 10342 ;;		_compensate_pressure
 10343 ;;		_compensate_humidity
 10344 ;; This function uses a non-reentrant model
 10345 ;;
 10346                           
 10347                           
 10348                           ;psect for function ___lmul
 10349  1EA9                     ___lmul:	
 10350                           
 10351                           ;incstack = 0
 10352                           ; Regs used in ___lmul: [wreg+status,2+status,0]
 10353  1EA9  3000               	movlw	0
 10354  1EAA  00FB               	movwf	___lmul@product+3
 10355  1EAB  3000               	movlw	0
 10356  1EAC  00FA               	movwf	___lmul@product+2
 10357  1EAD  3000               	movlw	0
 10358  1EAE  00F9               	movwf	___lmul@product+1
 10359  1EAF  3000               	movlw	0
 10360  1EB0  00F8               	movwf	___lmul@product
 10361  1EB1                     l2870:	
 10362  1EB1  1C70               	btfss	___lmul@multiplier,0
 10363  1EB2  2EBB               	goto	l2874
 10364  1EB3  0874               	movf	___lmul@multiplicand,w
 10365  1EB4  07F8               	addwf	___lmul@product,f
 10366  1EB5  0875               	movf	___lmul@multiplicand+1,w
 10367  1EB6  3DF9               	addwfc	___lmul@product+1,f
 10368  1EB7  0876               	movf	___lmul@multiplicand+2,w
 10369  1EB8  3DFA               	addwfc	___lmul@product+2,f
 10370  1EB9  0877               	movf	___lmul@multiplicand+3,w
 10371  1EBA  3DFB               	addwfc	___lmul@product+3,f
 10372  1EBB                     l2874:	
 10373  1EBB  3001               	movlw	1
 10374  1EBC                     u2355:	
 10375  1EBC  35F4               	lslf	___lmul@multiplicand,f
 10376  1EBD  0DF5               	rlf	___lmul@multiplicand+1,f
 10377  1EBE  0DF6               	rlf	___lmul@multiplicand+2,f
 10378  1EBF  0DF7               	rlf	___lmul@multiplicand+3,f
 10379  1EC0  0B89               	decfsz	9,f
 10380  1EC1  2EBC               	goto	u2355
 10381  1EC2  3001               	movlw	1
 10382  1EC3                     u2365:	
 10383  1EC3  36F3               	lsrf	___lmul@multiplier+3,f
 10384  1EC4  0CF2               	rrf	___lmul@multiplier+2,f
 10385  1EC5  0CF1               	rrf	___lmul@multiplier+1,f
 10386  1EC6  0CF0               	rrf	___lmul@multiplier,f
 10387  1EC7  0B89               	decfsz	9,f
 10388  1EC8  2EC3               	goto	u2365
 10389  1EC9  0873               	movf	___lmul@multiplier+3,w
 10390  1ECA  0472               	iorwf	___lmul@multiplier+2,w
 10391  1ECB  0471               	iorwf	___lmul@multiplier+1,w
 10392  1ECC  0470               	iorwf	___lmul@multiplier,w
 10393  1ECD  1D03               	skipz
 10394  1ECE  2EB1               	goto	l2870
 10395  1ECF  087B               	movf	___lmul@product+3,w
 10396  1ED0  00F3               	movwf	?___lmul+3
 10397  1ED1  087A               	movf	___lmul@product+2,w
 10398  1ED2  00F2               	movwf	?___lmul+2
 10399  1ED3  0879               	movf	___lmul@product+1,w
 10400  1ED4  00F1               	movwf	?___lmul+1
 10401  1ED5  0878               	movf	___lmul@product,w
 10402  1ED6  00F0               	movwf	?___lmul
 10403  1ED7  0008               	return
 10404  1ED8                     __end_of___lmul:	
 10405                           
 10406                           	psect	text10
 10407  177F                     __ptext10:	
 10408 ;; *************** function ___aldiv *****************
 10409 ;; Defined at:
 10410 ;;		line 5 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\aldiv.c"
 10411 ;; Parameters:    Size  Location     Type
 10412 ;;  divisor         4    0[BANK0 ] long 
 10413 ;;  dividend        4    4[BANK0 ] long 
 10414 ;; Auto vars:     Size  Location     Type
 10415 ;;  quotient        4   10[BANK0 ] long 
 10416 ;;  sign            1    9[BANK0 ] unsigned char 
 10417 ;;  counter         1    8[BANK0 ] unsigned char 
 10418 ;; Return value:  Size  Location     Type
 10419 ;;                  4    0[BANK0 ] long 
 10420 ;; Registers used:
 10421 ;;		wreg, status,2, status,0
 10422 ;; Tracked objects:
 10423 ;;		On entry : 1F/0
 10424 ;;		On exit  : 1F/0
 10425 ;;		Unchanged: 0/0
 10426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10427 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10428 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10429 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10430 ;;      Totals:         1      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10431 ;;Total ram usage:       15 bytes
 10432 ;; Hardware stack levels used:    1
 10433 ;; Hardware stack levels required when called:    3
 10434 ;; This function calls:
 10435 ;;		Nothing
 10436 ;; This function is called by:
 10437 ;;		_compensate_temperature
 10438 ;;		_compensate_pressure
 10439 ;;		_compensate_humidity
 10440 ;; This function uses a non-reentrant model
 10441 ;;
 10442                           
 10443                           
 10444                           ;psect for function ___aldiv
 10445  177F                     ___aldiv:	
 10446                           
 10447                           ;incstack = 0
 10448                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
 10449  177F  01A9               	clrf	___aldiv@sign
 10450  1780  1FA3               	btfss	___aldiv@divisor+3,7
 10451  1781  2F8F               	goto	l845
 10452  1782  09A0               	comf	___aldiv@divisor,f
 10453  1783  09A1               	comf	___aldiv@divisor+1,f
 10454  1784  09A2               	comf	___aldiv@divisor+2,f
 10455  1785  09A3               	comf	___aldiv@divisor+3,f
 10456  1786  0AA0               	incf	___aldiv@divisor,f
 10457  1787  1903               	skipnz
 10458  1788  0AA1               	incf	___aldiv@divisor+1,f
 10459  1789  1903               	skipnz
 10460  178A  0AA2               	incf	___aldiv@divisor+2,f
 10461  178B  1903               	skipnz
 10462  178C  0AA3               	incf	___aldiv@divisor+3,f
 10463  178D  01A9               	clrf	___aldiv@sign
 10464  178E  0AA9               	incf	___aldiv@sign,f
 10465  178F                     l845:	
 10466  178F  1FA7               	btfss	___aldiv@dividend+3,7
 10467  1790  2FA0               	goto	l2916
 10468  1791  09A4               	comf	___aldiv@dividend,f
 10469  1792  09A5               	comf	___aldiv@dividend+1,f
 10470  1793  09A6               	comf	___aldiv@dividend+2,f
 10471  1794  09A7               	comf	___aldiv@dividend+3,f
 10472  1795  0AA4               	incf	___aldiv@dividend,f
 10473  1796  1903               	skipnz
 10474  1797  0AA5               	incf	___aldiv@dividend+1,f
 10475  1798  1903               	skipnz
 10476  1799  0AA6               	incf	___aldiv@dividend+2,f
 10477  179A  1903               	skipnz
 10478  179B  0AA7               	incf	___aldiv@dividend+3,f
 10479  179C  3001               	movlw	1
 10480  179D  00FC               	movwf	??___aldiv
 10481  179E  087C               	movf	??___aldiv,w
 10482  179F  06A9               	xorwf	___aldiv@sign,f
 10483  17A0                     l2916:	
 10484  17A0  3000               	movlw	0
 10485  17A1  00AD               	movwf	___aldiv@quotient+3
 10486  17A2  3000               	movlw	0
 10487  17A3  00AC               	movwf	___aldiv@quotient+2
 10488  17A4  3000               	movlw	0
 10489  17A5  00AB               	movwf	___aldiv@quotient+1
 10490  17A6  3000               	movlw	0
 10491  17A7  00AA               	movwf	___aldiv@quotient
 10492  17A8  0823               	movf	___aldiv@divisor+3,w
 10493  17A9  0422               	iorwf	___aldiv@divisor+2,w
 10494  17AA  0421               	iorwf	___aldiv@divisor+1,w
 10495  17AB  0420               	iorwf	___aldiv@divisor,w
 10496  17AC  1903               	skipnz
 10497  17AD  2FE9               	goto	l2938
 10498  17AE  01A8               	clrf	___aldiv@counter
 10499  17AF  0AA8               	incf	___aldiv@counter,f
 10500  17B0                     l2924:	
 10501  17B0  1BA3               	btfsc	___aldiv@divisor+3,7
 10502  17B1  2FBE               	goto	l2926
 10503  17B2  3001               	movlw	1
 10504  17B3                     u2485:	
 10505  17B3  35A0               	lslf	___aldiv@divisor,f
 10506  17B4  0DA1               	rlf	___aldiv@divisor+1,f
 10507  17B5  0DA2               	rlf	___aldiv@divisor+2,f
 10508  17B6  0DA3               	rlf	___aldiv@divisor+3,f
 10509  17B7  0B89               	decfsz	9,f
 10510  17B8  2FB3               	goto	u2485
 10511  17B9  3001               	movlw	1
 10512  17BA  00FC               	movwf	??___aldiv
 10513  17BB  087C               	movf	??___aldiv,w
 10514  17BC  07A8               	addwf	___aldiv@counter,f
 10515  17BD  2FB0               	goto	l2924
 10516  17BE                     l2926:	
 10517  17BE  3001               	movlw	1
 10518  17BF                     u2505:	
 10519  17BF  35AA               	lslf	___aldiv@quotient,f
 10520  17C0  0DAB               	rlf	___aldiv@quotient+1,f
 10521  17C1  0DAC               	rlf	___aldiv@quotient+2,f
 10522  17C2  0DAD               	rlf	___aldiv@quotient+3,f
 10523  17C3  0B89               	decfsz	9,f
 10524  17C4  2FBF               	goto	u2505
 10525  17C5  0823               	movf	___aldiv@divisor+3,w
 10526  17C6  0227               	subwf	___aldiv@dividend+3,w
 10527  17C7  1D03               	skipz
 10528  17C8  2FD3               	goto	u2515
 10529  17C9  0822               	movf	___aldiv@divisor+2,w
 10530  17CA  0226               	subwf	___aldiv@dividend+2,w
 10531  17CB  1D03               	skipz
 10532  17CC  2FD3               	goto	u2515
 10533  17CD  0821               	movf	___aldiv@divisor+1,w
 10534  17CE  0225               	subwf	___aldiv@dividend+1,w
 10535  17CF  1D03               	skipz
 10536  17D0  2FD3               	goto	u2515
 10537  17D1  0820               	movf	___aldiv@divisor,w
 10538  17D2  0224               	subwf	___aldiv@dividend,w
 10539  17D3                     u2515:	
 10540  17D3  1C03               	skipc
 10541  17D4  2FDE               	goto	l2934
 10542  17D5  0820               	movf	___aldiv@divisor,w
 10543  17D6  02A4               	subwf	___aldiv@dividend,f
 10544  17D7  0821               	movf	___aldiv@divisor+1,w
 10545  17D8  3BA5               	subwfb	___aldiv@dividend+1,f
 10546  17D9  0822               	movf	___aldiv@divisor+2,w
 10547  17DA  3BA6               	subwfb	___aldiv@dividend+2,f
 10548  17DB  0823               	movf	___aldiv@divisor+3,w
 10549  17DC  3BA7               	subwfb	___aldiv@dividend+3,f
 10550  17DD  142A               	bsf	___aldiv@quotient,0
 10551  17DE                     l2934:	
 10552  17DE  3001               	movlw	1
 10553  17DF                     u2525:	
 10554  17DF  36A3               	lsrf	___aldiv@divisor+3,f
 10555  17E0  0CA2               	rrf	___aldiv@divisor+2,f
 10556  17E1  0CA1               	rrf	___aldiv@divisor+1,f
 10557  17E2  0CA0               	rrf	___aldiv@divisor,f
 10558  17E3  0B89               	decfsz	9,f
 10559  17E4  2FDF               	goto	u2525
 10560  17E5  3001               	movlw	1
 10561  17E6  02A8               	subwf	___aldiv@counter,f
 10562  17E7  1D03               	btfss	3,2
 10563  17E8  2FBE               	goto	l2926
 10564  17E9                     l2938:	
 10565  17E9  0829               	movf	___aldiv@sign,w
 10566  17EA  1903               	btfsc	3,2
 10567  17EB  2FF7               	goto	l2942
 10568  17EC  09AA               	comf	___aldiv@quotient,f
 10569  17ED  09AB               	comf	___aldiv@quotient+1,f
 10570  17EE  09AC               	comf	___aldiv@quotient+2,f
 10571  17EF  09AD               	comf	___aldiv@quotient+3,f
 10572  17F0  0AAA               	incf	___aldiv@quotient,f
 10573  17F1  1903               	skipnz
 10574  17F2  0AAB               	incf	___aldiv@quotient+1,f
 10575  17F3  1903               	skipnz
 10576  17F4  0AAC               	incf	___aldiv@quotient+2,f
 10577  17F5  1903               	skipnz
 10578  17F6  0AAD               	incf	___aldiv@quotient+3,f
 10579  17F7                     l2942:	
 10580  17F7  082D               	movf	___aldiv@quotient+3,w
 10581  17F8  00A3               	movwf	?___aldiv+3
 10582  17F9  082C               	movf	___aldiv@quotient+2,w
 10583  17FA  00A2               	movwf	?___aldiv+2
 10584  17FB  082B               	movf	___aldiv@quotient+1,w
 10585  17FC  00A1               	movwf	?___aldiv+1
 10586  17FD  082A               	movf	___aldiv@quotient,w
 10587  17FE  00A0               	movwf	?___aldiv
 10588  17FF  0008               	return
 10589  1800                     __end_of___aldiv:	
 10590                           
 10591                           	psect	text11
 10592  0802                     __ptext11:	
 10593 ;; *************** function _UIntToString *****************
 10594 ;; Defined at:
 10595 ;;		line 175 in file "main.c"
 10596 ;; Parameters:    Size  Location     Type
 10597 ;;  n               4    9[BANK0 ] unsigned long 
 10598 ;;  dest            1   13[BANK0 ] PTR unsigned char 
 10599 ;;		 -> main@convertedNumber(16), 
 10600 ;; Auto vars:     Size  Location     Type
 10601 ;;  i               2   16[BANK0 ] int 
 10602 ;; Return value:  Size  Location     Type
 10603 ;;                  1    wreg      void 
 10604 ;; Registers used:
 10605 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10606 ;; Tracked objects:
 10607 ;;		On entry : 1F/0
 10608 ;;		On exit  : 1F/0
 10609 ;;		Unchanged: 0/0
 10610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10611 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10612 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10613 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10614 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10615 ;;Total ram usage:        9 bytes
 10616 ;; Hardware stack levels used:    1
 10617 ;; Hardware stack levels required when called:    5
 10618 ;; This function calls:
 10619 ;;		_ReverseString
 10620 ;;		___lldiv
 10621 ;;		___llmod
 10622 ;; This function is called by:
 10623 ;;		_main
 10624 ;; This function uses a non-reentrant model
 10625 ;;
 10626                           
 10627                           
 10628                           ;psect for function _UIntToString
 10629  0802                     _UIntToString:	
 10630                           
 10631                           ;main.c: 175: void UIntToString(uint32_t n, char* dest);main.c: 176: {;main.c: 177:     
      +                          int i = 0;
 10632                           
 10633                           ;incstack = 0
 10634                           ; Regs used in _UIntToString: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10635  0802  01B0               	clrf	UIntToString@i
 10636  0803  01B1               	clrf	UIntToString@i+1
 10637  0804                     l3632:	
 10638                           
 10639                           ;main.c: 182:         dest[i++] = n % 10 + '0';
 10640  0804  3000               	movlw	0
 10641  0805  00F3               	movwf	___llmod@divisor+3
 10642  0806  3000               	movlw	0
 10643  0807  00F2               	movwf	___llmod@divisor+2
 10644  0808  3000               	movlw	0
 10645  0809  00F1               	movwf	___llmod@divisor+1
 10646  080A  300A               	movlw	10
 10647  080B  00F0               	movwf	___llmod@divisor
 10648  080C  082C               	movf	UIntToString@n+3,w
 10649  080D  00F7               	movwf	___llmod@dividend+3
 10650  080E  082B               	movf	UIntToString@n+2,w
 10651  080F  00F6               	movwf	___llmod@dividend+2
 10652  0810  082A               	movf	UIntToString@n+1,w
 10653  0811  00F5               	movwf	___llmod@dividend+1
 10654  0812  0829               	movf	UIntToString@n,w
 10655  0813  00F4               	movwf	___llmod@dividend
 10656  0814  3191  2114  3188   	fcall	___llmod
 10657  0817  0870               	movf	?___llmod,w
 10658  0818  3E30               	addlw	48
 10659  0819  00AE               	movwf	??_UIntToString
 10660  081A  0830               	movf	UIntToString@i,w
 10661  081B  072D               	addwf	UIntToString@dest,w
 10662  081C  00AF               	movwf	??_UIntToString+1
 10663  081D  082F               	movf	??_UIntToString+1,w
 10664  081E  0086               	movwf	6
 10665  081F  3001               	movlw	1	; select bank2/3
 10666  0820  0087               	movwf	7
 10667  0821  082E               	movf	??_UIntToString,w
 10668  0822  0081               	movwf	1
 10669  0823  3001               	movlw	1
 10670  0824  07B0               	addwf	UIntToString@i,f
 10671  0825  3000               	movlw	0
 10672  0826  3DB1               	addwfc	UIntToString@i+1,f
 10673                           
 10674                           ;main.c: 184:     } while ((n /= 10) > 0);
 10675  0827  3000               	movlw	0
 10676  0828  00F3               	movwf	___lldiv@divisor+3
 10677  0829  3000               	movlw	0
 10678  082A  00F2               	movwf	___lldiv@divisor+2
 10679  082B  3000               	movlw	0
 10680  082C  00F1               	movwf	___lldiv@divisor+1
 10681  082D  300A               	movlw	10
 10682  082E  00F0               	movwf	___lldiv@divisor
 10683  082F  082C               	movf	UIntToString@n+3,w
 10684  0830  00F7               	movwf	___lldiv@dividend+3
 10685  0831  082B               	movf	UIntToString@n+2,w
 10686  0832  00F6               	movwf	___lldiv@dividend+2
 10687  0833  082A               	movf	UIntToString@n+1,w
 10688  0834  00F5               	movwf	___lldiv@dividend+1
 10689  0835  0829               	movf	UIntToString@n,w
 10690  0836  00F4               	movwf	___lldiv@dividend
 10691  0837  3193  2317  3188   	fcall	___lldiv
 10692  083A  0873               	movf	?___lldiv+3,w
 10693  083B  0020               	movlb	0	; select bank0
 10694  083C  00AC               	movwf	UIntToString@n+3
 10695  083D  0872               	movf	?___lldiv+2,w
 10696  083E  00AB               	movwf	UIntToString@n+2
 10697  083F  0871               	movf	?___lldiv+1,w
 10698  0840  00AA               	movwf	UIntToString@n+1
 10699  0841  0870               	movf	?___lldiv,w
 10700  0842  00A9               	movwf	UIntToString@n
 10701  0843  082C               	movf	UIntToString@n+3,w
 10702  0844  042B               	iorwf	UIntToString@n+2,w
 10703  0845  042A               	iorwf	UIntToString@n+1,w
 10704  0846  0429               	iorwf	UIntToString@n,w
 10705  0847  1D03               	skipz
 10706  0848  2804               	goto	l3632
 10707                           
 10708                           ;main.c: 185:     dest[i] = '\0';
 10709  0849  0830               	movf	UIntToString@i,w
 10710  084A  072D               	addwf	UIntToString@dest,w
 10711  084B  00AE               	movwf	??_UIntToString
 10712  084C  082E               	movf	??_UIntToString,w
 10713  084D  0086               	movwf	6
 10714  084E  3001               	movlw	1	; select bank2/3
 10715  084F  0087               	movwf	7
 10716  0850  0181               	clrf	1
 10717                           
 10718                           ;main.c: 187:     ReverseString(dest);
 10719  0851  082D               	movf	UIntToString@dest,w
 10720  0852  3194  241D         	fcall	_ReverseString
 10721  0854  0008               	return
 10722  0855                     __end_of_UIntToString:	
 10723                           
 10724                           	psect	text12
 10725  1114                     __ptext12:	
 10726 ;; *************** function ___llmod *****************
 10727 ;; Defined at:
 10728 ;;		line 5 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\llmod.c"
 10729 ;; Parameters:    Size  Location     Type
 10730 ;;  divisor         4    0[COMMON] unsigned long 
 10731 ;;  dividend        4    4[COMMON] unsigned long 
 10732 ;; Auto vars:     Size  Location     Type
 10733 ;;  counter         1    9[COMMON] unsigned char 
 10734 ;; Return value:  Size  Location     Type
 10735 ;;                  4    0[COMMON] unsigned long 
 10736 ;; Registers used:
 10737 ;;		wreg, status,2, status,0
 10738 ;; Tracked objects:
 10739 ;;		On entry : 1F/0
 10740 ;;		On exit  : 1F/0
 10741 ;;		Unchanged: 1F/0
 10742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10743 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10744 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10745 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10746 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10747 ;;Total ram usage:       10 bytes
 10748 ;; Hardware stack levels used:    1
 10749 ;; Hardware stack levels required when called:    3
 10750 ;; This function calls:
 10751 ;;		Nothing
 10752 ;; This function is called by:
 10753 ;;		_UIntToString
 10754 ;; This function uses a non-reentrant model
 10755 ;;
 10756                           
 10757                           
 10758                           ;psect for function ___llmod
 10759  1114                     ___llmod:	
 10760                           
 10761                           ;incstack = 0
 10762                           ; Regs used in ___llmod: [wreg+status,2+status,0]
 10763  1114  0873               	movf	___llmod@divisor+3,w
 10764  1115  0472               	iorwf	___llmod@divisor+2,w
 10765  1116  0471               	iorwf	___llmod@divisor+1,w
 10766  1117  0470               	iorwf	___llmod@divisor,w
 10767  1118  1903               	skipnz
 10768  1119  294D               	goto	l3536
 10769  111A  01F9               	clrf	___llmod@counter
 10770  111B  0AF9               	incf	___llmod@counter,f
 10771  111C                     l3526:	
 10772  111C  1BF3               	btfsc	___llmod@divisor+3,7
 10773  111D  292A               	goto	l3528
 10774  111E  3001               	movlw	1
 10775  111F                     u3475:	
 10776  111F  35F0               	lslf	___llmod@divisor,f
 10777  1120  0DF1               	rlf	___llmod@divisor+1,f
 10778  1121  0DF2               	rlf	___llmod@divisor+2,f
 10779  1122  0DF3               	rlf	___llmod@divisor+3,f
 10780  1123  0B89               	decfsz	9,f
 10781  1124  291F               	goto	u3475
 10782  1125  3001               	movlw	1
 10783  1126  00F8               	movwf	??___llmod
 10784  1127  0878               	movf	??___llmod,w
 10785  1128  07F9               	addwf	___llmod@counter,f
 10786  1129  291C               	goto	l3526
 10787  112A                     l3528:	
 10788  112A  0873               	movf	___llmod@divisor+3,w
 10789  112B  0277               	subwf	___llmod@dividend+3,w
 10790  112C  1D03               	skipz
 10791  112D  2938               	goto	u3495
 10792  112E  0872               	movf	___llmod@divisor+2,w
 10793  112F  0276               	subwf	___llmod@dividend+2,w
 10794  1130  1D03               	skipz
 10795  1131  2938               	goto	u3495
 10796  1132  0871               	movf	___llmod@divisor+1,w
 10797  1133  0275               	subwf	___llmod@dividend+1,w
 10798  1134  1D03               	skipz
 10799  1135  2938               	goto	u3495
 10800  1136  0870               	movf	___llmod@divisor,w
 10801  1137  0274               	subwf	___llmod@dividend,w
 10802  1138                     u3495:	
 10803  1138  1C03               	skipc
 10804  1139  2942               	goto	l3532
 10805  113A  0870               	movf	___llmod@divisor,w
 10806  113B  02F4               	subwf	___llmod@dividend,f
 10807  113C  0871               	movf	___llmod@divisor+1,w
 10808  113D  3BF5               	subwfb	___llmod@dividend+1,f
 10809  113E  0872               	movf	___llmod@divisor+2,w
 10810  113F  3BF6               	subwfb	___llmod@dividend+2,f
 10811  1140  0873               	movf	___llmod@divisor+3,w
 10812  1141  3BF7               	subwfb	___llmod@dividend+3,f
 10813  1142                     l3532:	
 10814  1142  3001               	movlw	1
 10815  1143                     u3505:	
 10816  1143  36F3               	lsrf	___llmod@divisor+3,f
 10817  1144  0CF2               	rrf	___llmod@divisor+2,f
 10818  1145  0CF1               	rrf	___llmod@divisor+1,f
 10819  1146  0CF0               	rrf	___llmod@divisor,f
 10820  1147  0B89               	decfsz	9,f
 10821  1148  2943               	goto	u3505
 10822  1149  3001               	movlw	1
 10823  114A  02F9               	subwf	___llmod@counter,f
 10824  114B  1D03               	btfss	3,2
 10825  114C  292A               	goto	l3528
 10826  114D                     l3536:	
 10827  114D  0877               	movf	___llmod@dividend+3,w
 10828  114E  00F3               	movwf	?___llmod+3
 10829  114F  0876               	movf	___llmod@dividend+2,w
 10830  1150  00F2               	movwf	?___llmod+2
 10831  1151  0875               	movf	___llmod@dividend+1,w
 10832  1152  00F1               	movwf	?___llmod+1
 10833  1153  0874               	movf	___llmod@dividend,w
 10834  1154  00F0               	movwf	?___llmod
 10835  1155  0008               	return
 10836  1156                     __end_of___llmod:	
 10837                           
 10838                           	psect	text13
 10839  1317                     __ptext13:	
 10840 ;; *************** function ___lldiv *****************
 10841 ;; Defined at:
 10842 ;;		line 5 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\__lldiv.c"
 10843 ;; Parameters:    Size  Location     Type
 10844 ;;  divisor         4    0[COMMON] unsigned long 
 10845 ;;  dividend        4    4[COMMON] unsigned long 
 10846 ;; Auto vars:     Size  Location     Type
 10847 ;;  quotient        4    9[COMMON] unsigned long 
 10848 ;;  counter         1   13[COMMON] unsigned char 
 10849 ;; Return value:  Size  Location     Type
 10850 ;;                  4    0[COMMON] unsigned long 
 10851 ;; Registers used:
 10852 ;;		wreg, status,2, status,0
 10853 ;; Tracked objects:
 10854 ;;		On entry : 1E/1
 10855 ;;		On exit  : 1E/0
 10856 ;;		Unchanged: 1E/0
 10857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10858 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10859 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10860 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10861 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10862 ;;Total ram usage:       14 bytes
 10863 ;; Hardware stack levels used:    1
 10864 ;; Hardware stack levels required when called:    3
 10865 ;; This function calls:
 10866 ;;		Nothing
 10867 ;; This function is called by:
 10868 ;;		_compensate_pressure
 10869 ;;		_UIntToString
 10870 ;; This function uses a non-reentrant model
 10871 ;;
 10872                           
 10873                           
 10874                           ;psect for function ___lldiv
 10875  1317                     ___lldiv:	
 10876                           
 10877                           ;incstack = 0
 10878                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
 10879  1317  3000               	movlw	0
 10880  1318  00FC               	movwf	___lldiv@quotient+3
 10881  1319  3000               	movlw	0
 10882  131A  00FB               	movwf	___lldiv@quotient+2
 10883  131B  3000               	movlw	0
 10884  131C  00FA               	movwf	___lldiv@quotient+1
 10885  131D  3000               	movlw	0
 10886  131E  00F9               	movwf	___lldiv@quotient
 10887  131F  0873               	movf	___lldiv@divisor+3,w
 10888  1320  0472               	iorwf	___lldiv@divisor+2,w
 10889  1321  0471               	iorwf	___lldiv@divisor+1,w
 10890  1322  0470               	iorwf	___lldiv@divisor,w
 10891  1323  1903               	skipnz
 10892  1324  2B60               	goto	l2902
 10893  1325  01FD               	clrf	___lldiv@counter
 10894  1326  0AFD               	incf	___lldiv@counter,f
 10895  1327                     l2888:	
 10896  1327  1BF3               	btfsc	___lldiv@divisor+3,7
 10897  1328  2B35               	goto	l2890
 10898  1329  3001               	movlw	1
 10899  132A                     u2395:	
 10900  132A  35F0               	lslf	___lldiv@divisor,f
 10901  132B  0DF1               	rlf	___lldiv@divisor+1,f
 10902  132C  0DF2               	rlf	___lldiv@divisor+2,f
 10903  132D  0DF3               	rlf	___lldiv@divisor+3,f
 10904  132E  0B89               	decfsz	9,f
 10905  132F  2B2A               	goto	u2395
 10906  1330  3001               	movlw	1
 10907  1331  00F8               	movwf	??___lldiv
 10908  1332  0878               	movf	??___lldiv,w
 10909  1333  07FD               	addwf	___lldiv@counter,f
 10910  1334  2B27               	goto	l2888
 10911  1335                     l2890:	
 10912  1335  3001               	movlw	1
 10913  1336                     u2415:	
 10914  1336  35F9               	lslf	___lldiv@quotient,f
 10915  1337  0DFA               	rlf	___lldiv@quotient+1,f
 10916  1338  0DFB               	rlf	___lldiv@quotient+2,f
 10917  1339  0DFC               	rlf	___lldiv@quotient+3,f
 10918  133A  0B89               	decfsz	9,f
 10919  133B  2B36               	goto	u2415
 10920  133C  0873               	movf	___lldiv@divisor+3,w
 10921  133D  0277               	subwf	___lldiv@dividend+3,w
 10922  133E  1D03               	skipz
 10923  133F  2B4A               	goto	u2425
 10924  1340  0872               	movf	___lldiv@divisor+2,w
 10925  1341  0276               	subwf	___lldiv@dividend+2,w
 10926  1342  1D03               	skipz
 10927  1343  2B4A               	goto	u2425
 10928  1344  0871               	movf	___lldiv@divisor+1,w
 10929  1345  0275               	subwf	___lldiv@dividend+1,w
 10930  1346  1D03               	skipz
 10931  1347  2B4A               	goto	u2425
 10932  1348  0870               	movf	___lldiv@divisor,w
 10933  1349  0274               	subwf	___lldiv@dividend,w
 10934  134A                     u2425:	
 10935  134A  1C03               	skipc
 10936  134B  2B55               	goto	l2898
 10937  134C  0870               	movf	___lldiv@divisor,w
 10938  134D  02F4               	subwf	___lldiv@dividend,f
 10939  134E  0871               	movf	___lldiv@divisor+1,w
 10940  134F  3BF5               	subwfb	___lldiv@dividend+1,f
 10941  1350  0872               	movf	___lldiv@divisor+2,w
 10942  1351  3BF6               	subwfb	___lldiv@dividend+2,f
 10943  1352  0873               	movf	___lldiv@divisor+3,w
 10944  1353  3BF7               	subwfb	___lldiv@dividend+3,f
 10945  1354  1479               	bsf	___lldiv@quotient,0
 10946  1355                     l2898:	
 10947  1355  3001               	movlw	1
 10948  1356                     u2435:	
 10949  1356  36F3               	lsrf	___lldiv@divisor+3,f
 10950  1357  0CF2               	rrf	___lldiv@divisor+2,f
 10951  1358  0CF1               	rrf	___lldiv@divisor+1,f
 10952  1359  0CF0               	rrf	___lldiv@divisor,f
 10953  135A  0B89               	decfsz	9,f
 10954  135B  2B56               	goto	u2435
 10955  135C  3001               	movlw	1
 10956  135D  02FD               	subwf	___lldiv@counter,f
 10957  135E  1D03               	btfss	3,2
 10958  135F  2B35               	goto	l2890
 10959  1360                     l2902:	
 10960  1360  087C               	movf	___lldiv@quotient+3,w
 10961  1361  00F3               	movwf	?___lldiv+3
 10962  1362  087B               	movf	___lldiv@quotient+2,w
 10963  1363  00F2               	movwf	?___lldiv+2
 10964  1364  087A               	movf	___lldiv@quotient+1,w
 10965  1365  00F1               	movwf	?___lldiv+1
 10966  1366  0879               	movf	___lldiv@quotient,w
 10967  1367  00F0               	movwf	?___lldiv
 10968  1368  0008               	return
 10969  1369                     __end_of___lldiv:	
 10970                           
 10971                           	psect	text14
 10972  1708                     __ptext14:	
 10973 ;; *************** function _UIntToHexString *****************
 10974 ;; Defined at:
 10975 ;;		line 106 in file "main.c"
 10976 ;; Parameters:    Size  Location     Type
 10977 ;;  n               4    9[BANK0 ] unsigned long 
 10978 ;;  dest            1   13[BANK0 ] PTR unsigned char 
 10979 ;;		 -> checksum(6), 
 10980 ;; Auto vars:     Size  Location     Type
 10981 ;;  remainder       4   20[BANK0 ] unsigned long 
 10982 ;;  i               4   24[BANK0 ] unsigned long 
 10983 ;; Return value:  Size  Location     Type
 10984 ;;                  1    wreg      void 
 10985 ;; Registers used:
 10986 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10987 ;; Tracked objects:
 10988 ;;		On entry : 1F/0
 10989 ;;		On exit  : 1F/0
 10990 ;;		Unchanged: 0/0
 10991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10992 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10993 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10994 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10995 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10996 ;;Total ram usage:       19 bytes
 10997 ;; Hardware stack levels used:    1
 10998 ;; Hardware stack levels required when called:    5
 10999 ;; This function calls:
 11000 ;;		_ReverseString
 11001 ;; This function is called by:
 11002 ;;		_main
 11003 ;; This function uses a non-reentrant model
 11004 ;;
 11005                           
 11006                           
 11007                           ;psect for function _UIntToHexString
 11008  1708                     _UIntToHexString:	
 11009                           
 11010                           ;main.c: 106: void UIntToHexString(uint32_t n, char* dest);main.c: 107: {;main.c: 108:  
      +                             uint32_t i = 0;
 11011                           
 11012                           ;incstack = 0
 11013                           ; Regs used in _UIntToHexString: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11014  1708  3000               	movlw	0
 11015  1709  00BB               	movwf	UIntToHexString@i+3
 11016  170A  3000               	movlw	0
 11017  170B  00BA               	movwf	UIntToHexString@i+2
 11018  170C  3000               	movlw	0
 11019  170D  00B9               	movwf	UIntToHexString@i+1
 11020  170E  3000               	movlw	0
 11021  170F  00B8               	movwf	UIntToHexString@i
 11022  1710                     l464:	
 11023                           ;main.c: 109:     do {
 11024                           
 11025                           
 11026                           ;main.c: 112:         uint32_t remainder = n % 16;
 11027  1710  300F               	movlw	15
 11028  1711  0529               	andwf	UIntToHexString@n,w
 11029  1712  00B4               	movwf	UIntToHexString@remainder
 11030  1713  3000               	movlw	0
 11031  1714  052A               	andwf	UIntToHexString@n+1,w
 11032  1715  00B5               	movwf	UIntToHexString@remainder+1
 11033  1716  3000               	movlw	0
 11034  1717  052B               	andwf	UIntToHexString@n+2,w
 11035  1718  00B6               	movwf	UIntToHexString@remainder+2
 11036  1719  3000               	movlw	0
 11037  171A  052C               	andwf	UIntToHexString@n+3,w
 11038  171B  00B7               	movwf	UIntToHexString@remainder+3
 11039                           
 11040                           ;main.c: 114:         dest[i++] = remainder + (remainder >= 10 ? 55 : '0');
 11041  171C  0837               	movf	UIntToHexString@remainder+3,w
 11042  171D  1D03               	btfss	3,2
 11043  171E  2F31               	goto	l3590
 11044  171F  0836               	movf	UIntToHexString@remainder+2,w
 11045  1720  1D03               	btfss	3,2
 11046  1721  2F31               	goto	l3590
 11047  1722  0835               	movf	UIntToHexString@remainder+1,w
 11048  1723  1D03               	btfss	3,2
 11049  1724  2F31               	goto	l3590
 11050  1725  300A               	movlw	10
 11051  1726  0234               	subwf	UIntToHexString@remainder,w
 11052  1727  1803               	btfsc	3,0
 11053  1728  2F31               	goto	l3590
 11054  1729  3000               	movlw	0
 11055  172A  00B3               	movwf	_UIntToHexString$1373+3
 11056  172B  3000               	movlw	0
 11057  172C  00B2               	movwf	_UIntToHexString$1373+2
 11058  172D  3000               	movlw	0
 11059  172E  00B1               	movwf	_UIntToHexString$1373+1
 11060  172F  3030               	movlw	48
 11061  1730  2F38               	goto	L4
 11062  1731                     l3590:	
 11063  1731  3000               	movlw	0
 11064  1732  00B3               	movwf	_UIntToHexString$1373+3
 11065  1733  3000               	movlw	0
 11066  1734  00B2               	movwf	_UIntToHexString$1373+2
 11067  1735  3000               	movlw	0
 11068  1736  00B1               	movwf	_UIntToHexString$1373+1
 11069  1737  3037               	movlw	55
 11070  1738                     L4:	
 11071  1738  00B0               	movwf	_UIntToHexString$1373
 11072  1739  0830               	movf	_UIntToHexString$1373,w
 11073  173A  0734               	addwf	UIntToHexString@remainder,w
 11074  173B  00AE               	movwf	??_UIntToHexString
 11075  173C  0838               	movf	UIntToHexString@i,w
 11076  173D  072D               	addwf	UIntToHexString@dest,w
 11077  173E  00AF               	movwf	??_UIntToHexString+1
 11078  173F  082F               	movf	??_UIntToHexString+1,w
 11079  1740  0086               	movwf	6
 11080  1741  3001               	movlw	1	; select bank2/3
 11081  1742  0087               	movwf	7
 11082  1743  082E               	movf	??_UIntToHexString,w
 11083  1744  0081               	movwf	1
 11084  1745  3001               	movlw	1
 11085  1746  07B8               	addwf	UIntToHexString@i,f
 11086  1747  3000               	movlw	0
 11087  1748  3DB9               	addwfc	UIntToHexString@i+1,f
 11088  1749  3000               	movlw	0
 11089  174A  3DBA               	addwfc	UIntToHexString@i+2,f
 11090  174B  3000               	movlw	0
 11091  174C  3DBB               	addwfc	UIntToHexString@i+3,f
 11092                           
 11093                           ;main.c: 116:     } while ((n /= 16) > 0);
 11094  174D  3004               	movlw	4
 11095  174E                     u3615:	
 11096  174E  36AC               	lsrf	UIntToHexString@n+3,f
 11097  174F  0CAB               	rrf	UIntToHexString@n+2,f
 11098  1750  0CAA               	rrf	UIntToHexString@n+1,f
 11099  1751  0CA9               	rrf	UIntToHexString@n,f
 11100  1752  0B89               	decfsz	9,f
 11101  1753  2F4E               	goto	u3615
 11102  1754  082C               	movf	UIntToHexString@n+3,w
 11103  1755  042B               	iorwf	UIntToHexString@n+2,w
 11104  1756  042A               	iorwf	UIntToHexString@n+1,w
 11105  1757  0429               	iorwf	UIntToHexString@n,w
 11106  1758  1903               	btfsc	3,2
 11107  1759  2F6E               	goto	l3602
 11108  175A  2F10               	goto	l464
 11109  175B                     l3598:	
 11110                           
 11111                           ;main.c: 118:     {;main.c: 119:         dest[i] = '0';
 11112  175B  3030               	movlw	48
 11113  175C  00AE               	movwf	??_UIntToHexString
 11114  175D  0838               	movf	UIntToHexString@i,w
 11115  175E  072D               	addwf	UIntToHexString@dest,w
 11116  175F  00AF               	movwf	??_UIntToHexString+1
 11117  1760  082F               	movf	??_UIntToHexString+1,w
 11118  1761  0086               	movwf	6
 11119  1762  3001               	movlw	1	; select bank2/3
 11120  1763  0087               	movwf	7
 11121  1764  082E               	movf	??_UIntToHexString,w
 11122  1765  0081               	movwf	1
 11123                           
 11124                           ;main.c: 120:         i++;
 11125  1766  3001               	movlw	1
 11126  1767  07B8               	addwf	UIntToHexString@i,f
 11127  1768  3000               	movlw	0
 11128  1769  3DB9               	addwfc	UIntToHexString@i+1,f
 11129  176A  3000               	movlw	0
 11130  176B  3DBA               	addwfc	UIntToHexString@i+2,f
 11131  176C  3000               	movlw	0
 11132  176D  3DBB               	addwfc	UIntToHexString@i+3,f
 11133  176E                     l3602:	
 11134                           
 11135                           ;main.c: 117:     while (i < 4)
 11136  176E  083B               	movf	UIntToHexString@i+3,w
 11137  176F  1D03               	btfss	3,2
 11138  1770  2F7B               	goto	l3604
 11139  1771  083A               	movf	UIntToHexString@i+2,w
 11140  1772  1D03               	btfss	3,2
 11141  1773  2F7B               	goto	l3604
 11142  1774  0839               	movf	UIntToHexString@i+1,w
 11143  1775  1D03               	btfss	3,2
 11144  1776  2F7B               	goto	l3604
 11145  1777  3004               	movlw	4
 11146  1778  0238               	subwf	UIntToHexString@i,w
 11147  1779  1C03               	btfss	3,0
 11148  177A  2F5B               	goto	l3598
 11149  177B                     l3604:	
 11150                           
 11151                           ;main.c: 122:     ReverseString(dest);
 11152  177B  082D               	movf	UIntToHexString@dest,w
 11153  177C  3194  241D         	fcall	_ReverseString
 11154  177E  0008               	return
 11155  177F                     __end_of_UIntToHexString:	
 11156                           
 11157                           	psect	text15
 11158  1DA0                     __ptext15:	
 11159 ;; *************** function _TransmitString *****************
 11160 ;; Defined at:
 11161 ;;		line 73 in file "rtty.c"
 11162 ;; Parameters:    Size  Location     Type
 11163 ;;  message         1    wreg     PTR unsigned char 
 11164 ;;		 -> message_end(73), message_start(70), 
 11165 ;; Auto vars:     Size  Location     Type
 11166 ;;  message         1   11[COMMON] PTR unsigned char 
 11167 ;;		 -> message_end(73), message_start(70), 
 11168 ;;  i               2    9[COMMON] int 
 11169 ;;  counti          2    7[COMMON] int 
 11170 ;; Return value:  Size  Location     Type
 11171 ;;                  1    wreg      void 
 11172 ;; Registers used:
 11173 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11174 ;; Tracked objects:
 11175 ;;		On entry : 1F/2
 11176 ;;		On exit  : 0/0
 11177 ;;		Unchanged: 0/0
 11178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11180 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11181 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11182 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11183 ;;Total ram usage:        6 bytes
 11184 ;; Hardware stack levels used:    1
 11185 ;; Hardware stack levels required when called:    5
 11186 ;; This function calls:
 11187 ;;		_TransmitByte
 11188 ;;		_strlen
 11189 ;; This function is called by:
 11190 ;;		_main
 11191 ;; This function uses a non-reentrant model
 11192 ;;
 11193                           
 11194                           
 11195                           ;psect for function _TransmitString
 11196  1DA0                     _TransmitString:	
 11197                           
 11198                           ;incstack = 0
 11199                           ; Regs used in _TransmitString: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11200                           ;TransmitString@message stored from wreg
 11201  1DA0  00FB               	movwf	TransmitString@message
 11202                           
 11203                           ;rtty.c: 73: void TransmitString(char* message);rtty.c: 74: {;rtty.c: 78:  for (int i = 
      +                          0, counti = strlen(message); i < counti; i++)
 11204  1DA1  01F9               	clrf	TransmitString@i
 11205  1DA2  01FA               	clrf	TransmitString@i+1
 11206  1DA3  087B               	movf	TransmitString@message,w
 11207  1DA4  00F0               	movwf	strlen@s
 11208  1DA5  3002               	movlw	2
 11209  1DA6  00F1               	movwf	strlen@s+1
 11210  1DA7  319C  2419  319D   	fcall	_strlen
 11211  1DAA  0871               	movf	?_strlen+1,w
 11212  1DAB  00F8               	movwf	TransmitString@counti+1
 11213  1DAC  0870               	movf	?_strlen,w
 11214  1DAD  00F7               	movwf	TransmitString@counti
 11215  1DAE                     l3714:	
 11216  1DAE  087A               	movf	TransmitString@i+1,w
 11217  1DAF  3A80               	xorlw	128
 11218  1DB0  00F6               	movwf	??_TransmitString
 11219  1DB1  0878               	movf	TransmitString@counti+1,w
 11220  1DB2  3A80               	xorlw	128
 11221  1DB3  0276               	subwf	??_TransmitString,w
 11222  1DB4  1D03               	skipz
 11223  1DB5  2DB8               	goto	u3735
 11224  1DB6  0877               	movf	TransmitString@counti,w
 11225  1DB7  0279               	subwf	TransmitString@i,w
 11226  1DB8                     u3735:	
 11227  1DB8  1803               	btfsc	3,0
 11228  1DB9  0008               	return
 11229                           
 11230                           ;rtty.c: 79:  {;rtty.c: 80:   TransmitByte(message[i]);
 11231  1DBA  0879               	movf	TransmitString@i,w
 11232  1DBB  077B               	addwf	TransmitString@message,w
 11233  1DBC  00F6               	movwf	??_TransmitString
 11234  1DBD  0876               	movf	??_TransmitString,w
 11235  1DBE  0086               	movwf	6
 11236  1DBF  3002               	movlw	2	; select bank4/5
 11237  1DC0  0087               	movwf	7
 11238  1DC1  0801               	movf	1,w
 11239  1DC2  319E  264D  319D   	fcall	_TransmitByte
 11240                           
 11241                           ;rtty.c: 81:  }
 11242  1DC5  3001               	movlw	1
 11243  1DC6  07F9               	addwf	TransmitString@i,f
 11244  1DC7  3000               	movlw	0
 11245  1DC8  3DFA               	addwfc	TransmitString@i+1,f
 11246  1DC9  2DAE               	goto	l3714
 11247  1DCA                     __end_of_TransmitString:	
 11248                           
 11249                           	psect	text16
 11250  1E4D                     __ptext16:	
 11251 ;; *************** function _TransmitByte *****************
 11252 ;; Defined at:
 11253 ;;		line 51 in file "rtty.c"
 11254 ;; Parameters:    Size  Location     Type
 11255 ;;  byte            1    wreg     unsigned char 
 11256 ;; Auto vars:     Size  Location     Type
 11257 ;;  byte            1    3[COMMON] unsigned char 
 11258 ;;  i               2    4[COMMON] int 
 11259 ;; Return value:  Size  Location     Type
 11260 ;;                  1    wreg      void 
 11261 ;; Registers used:
 11262 ;;		wreg, status,2, status,0, pclath, cstack
 11263 ;; Tracked objects:
 11264 ;;		On entry : 0/2
 11265 ;;		On exit  : 0/0
 11266 ;;		Unchanged: 0/0
 11267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11269 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11270 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11271 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11272 ;;Total ram usage:        4 bytes
 11273 ;; Hardware stack levels used:    1
 11274 ;; Hardware stack levels required when called:    4
 11275 ;; This function calls:
 11276 ;;		_TransmitBit
 11277 ;; This function is called by:
 11278 ;;		_TransmitString
 11279 ;; This function uses a non-reentrant model
 11280 ;;
 11281                           
 11282                           
 11283                           ;psect for function _TransmitByte
 11284  1E4D                     _TransmitByte:	
 11285                           
 11286                           ;incstack = 0
 11287                           ; Regs used in _TransmitByte: [wreg+status,2+status,0+pclath+cstack]
 11288                           ;TransmitByte@byte stored from wreg
 11289  1E4D  00F3               	movwf	TransmitByte@byte
 11290                           
 11291                           ;rtty.c: 51: void TransmitByte(char byte);rtty.c: 52: {;rtty.c: 62:     TransmitBit(0);
 11292  1E4E  3000               	movlw	0
 11293  1E4F  319C  2430  319E   	fcall	_TransmitBit
 11294                           
 11295                           ;rtty.c: 64:  for (int i = 0; i < 7; i++)
 11296  1E52  01F4               	clrf	TransmitByte@i
 11297  1E53  01F5               	clrf	TransmitByte@i+1
 11298  1E54                     l3474:	
 11299                           
 11300                           ;rtty.c: 65:  {;rtty.c: 66:   TransmitBit((byte >> i) & 1);
 11301  1E54  0873               	movf	TransmitByte@byte,w
 11302  1E55  00F2               	movwf	??_TransmitByte
 11303  1E56  0A74               	incf	TransmitByte@i,w
 11304  1E57  2E59               	goto	u3334
 11305  1E58                     u3335:	
 11306  1E58  36F2               	lsrf	??_TransmitByte,f
 11307  1E59                     u3334:	
 11308  1E59  0B89               	decfsz	9,f
 11309  1E5A  2E58               	goto	u3335
 11310  1E5B  1C72               	btfss	??_TransmitByte,0
 11311  1E5C  2E5F               	goto	u3340
 11312  1E5D  3001               	movlw	1
 11313  1E5E  2E60               	goto	u3350
 11314  1E5F                     u3340:	
 11315  1E5F  3000               	movlw	0
 11316  1E60                     u3350:	
 11317  1E60  319C  2430  319E   	fcall	_TransmitBit
 11318                           
 11319                           ;rtty.c: 67:  }
 11320  1E63  3001               	movlw	1
 11321  1E64  07F4               	addwf	TransmitByte@i,f
 11322  1E65  3000               	movlw	0
 11323  1E66  3DF5               	addwfc	TransmitByte@i+1,f
 11324  1E67  0875               	movf	TransmitByte@i+1,w
 11325  1E68  3A80               	xorlw	128
 11326  1E69  00F2               	movwf	??_TransmitByte
 11327  1E6A  3080               	movlw	128
 11328  1E6B  0272               	subwf	??_TransmitByte,w
 11329  1E6C  1D03               	skipz
 11330  1E6D  2E70               	goto	u3365
 11331  1E6E  3007               	movlw	7
 11332  1E6F  0274               	subwf	TransmitByte@i,w
 11333  1E70                     u3365:	
 11334  1E70  1C03               	skipc
 11335  1E71  2E54               	goto	l3474
 11336                           
 11337                           ;rtty.c: 69:  TransmitBit(1);
 11338  1E72  3001               	movlw	1
 11339  1E73  319C  2430  319E   	fcall	_TransmitBit
 11340                           
 11341                           ;rtty.c: 70:  TransmitBit(1);
 11342  1E76  3001               	movlw	1
 11343  1E77  319C  2430         	fcall	_TransmitBit
 11344  1E79  0008               	return
 11345  1E7A                     __end_of_TransmitByte:	
 11346                           
 11347                           	psect	text17
 11348  1C30                     __ptext17:	
 11349 ;; *************** function _TransmitBit *****************
 11350 ;; Defined at:
 11351 ;;		line 31 in file "rtty.c"
 11352 ;; Parameters:    Size  Location     Type
 11353 ;;  b               1    wreg     _Bool 
 11354 ;; Auto vars:     Size  Location     Type
 11355 ;;  b               1    1[COMMON] _Bool 
 11356 ;; Return value:  Size  Location     Type
 11357 ;;                  1    wreg      void 
 11358 ;; Registers used:
 11359 ;;		wreg, status,2, status,0
 11360 ;; Tracked objects:
 11361 ;;		On entry : 0/2
 11362 ;;		On exit  : 0/0
 11363 ;;		Unchanged: 0/0
 11364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11366 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11367 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11368 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11369 ;;Total ram usage:        2 bytes
 11370 ;; Hardware stack levels used:    1
 11371 ;; Hardware stack levels required when called:    3
 11372 ;; This function calls:
 11373 ;;		Nothing
 11374 ;; This function is called by:
 11375 ;;		_TransmitByte
 11376 ;; This function uses a non-reentrant model
 11377 ;;
 11378                           
 11379                           
 11380                           ;psect for function _TransmitBit
 11381  1C30                     _TransmitBit:	
 11382                           
 11383                           ;incstack = 0
 11384                           ; Regs used in _TransmitBit: [wreg+status,2+status,0]
 11385                           ;TransmitBit@b stored from wreg
 11386  1C30  00F1               	movwf	TransmitBit@b
 11387                           
 11388                           ;rtty.c: 31: void TransmitBit(_Bool b);rtty.c: 32: {;rtty.c: 33:  if (b)
 11389  1C31  0871               	movf	TransmitBit@b,w
 11390  1C32  1903               	btfsc	3,2
 11391  1C33  2C37               	goto	l685
 11392                           
 11393                           ;rtty.c: 34:  {;rtty.c: 35:   do { LATAbits.LATA4 = 1; } while(0);
 11394  1C34  0022               	movlb	2	; select bank2
 11395  1C35  160C               	bsf	12,4	;volatile
 11396  1C36  2C39               	goto	l3162
 11397  1C37                     l685:	
 11398                           ;rtty.c: 38:  {;rtty.c: 39:   do { LATAbits.LATA4 = 0; } while(0);
 11399                           
 11400  1C37  0022               	movlb	2	; select bank2
 11401  1C38  120C               	bcf	12,4	;volatile
 11402  1C39                     l3162:	
 11403                           
 11404                           ;rtty.c: 46:  _delay((unsigned long)((((1000 / 50) / 2) * 1000)*(4000000/4000000.0)));
 11405  1C39  300D               	movlw	13
 11406  1C3A  00F0               	movwf	??_TransmitBit
 11407  1C3B  30FC               	movlw	252
 11408  1C3C                     u4847:	
 11409  1C3C  0B89               	decfsz	9,f
 11410  1C3D  2C3C               	goto	u4847
 11411  1C3E  0BF0               	decfsz	??_TransmitBit,f
 11412  1C3F  2C3C               	goto	u4847
 11413                           
 11414                           ;rtty.c: 47:  _delay((unsigned long)((((1000 / 50) / 2) * 1000)*(4000000/4000000.0)));
 11415  1C40  300D               	movlw	13
 11416  1C41  00F0               	movwf	??_TransmitBit
 11417  1C42  30FC               	movlw	252
 11418  1C43                     u4857:	
 11419  1C43  0B89               	decfsz	9,f
 11420  1C44  2C43               	goto	u4857
 11421  1C45  0BF0               	decfsz	??_TransmitBit,f
 11422  1C46  2C43               	goto	u4857
 11423  1C47  0008               	return
 11424  1C48                     __end_of_TransmitBit:	
 11425                           
 11426                           	psect	text18
 11427  1BAE                     __ptext18:	
 11428 ;; *************** function _SYSTEM_Initialize *****************
 11429 ;; Defined at:
 11430 ;;		line 50 in file "mcc_generated_files/mcc.c"
 11431 ;; Parameters:    Size  Location     Type
 11432 ;;		None
 11433 ;; Auto vars:     Size  Location     Type
 11434 ;;		None
 11435 ;; Return value:  Size  Location     Type
 11436 ;;                  1    wreg      void 
 11437 ;; Registers used:
 11438 ;;		wreg, status,2, status,0, pclath, cstack
 11439 ;; Tracked objects:
 11440 ;;		On entry : B1F/0
 11441 ;;		On exit  : 1F/3
 11442 ;;		Unchanged: 0/0
 11443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11447 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11448 ;;Total ram usage:        0 bytes
 11449 ;; Hardware stack levels used:    1
 11450 ;; Hardware stack levels required when called:    5
 11451 ;; This function calls:
 11452 ;;		_EUSART_Initialize
 11453 ;;		_OSCILLATOR_Initialize
 11454 ;;		_PIN_MANAGER_Initialize
 11455 ;;		_TMR0_Initialize
 11456 ;; This function is called by:
 11457 ;;		_main
 11458 ;; This function uses a non-reentrant model
 11459 ;;
 11460                           
 11461                           
 11462                           ;psect for function _SYSTEM_Initialize
 11463  1BAE                     _SYSTEM_Initialize:	
 11464                           
 11465                           ;mcc_generated_files/mcc.c: 52:     PIN_MANAGER_Initialize();
 11466                           
 11467                           ;incstack = 0
 11468                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 11469  1BAE  319D  2576  319B   	fcall	_PIN_MANAGER_Initialize
 11470                           
 11471                           ;mcc_generated_files/mcc.c: 53:     OSCILLATOR_Initialize();
 11472  1BB1  319B  237F  319B   	fcall	_OSCILLATOR_Initialize
 11473                           
 11474                           ;mcc_generated_files/mcc.c: 54:     TMR0_Initialize();
 11475  1BB4  319B  23EC  319B   	fcall	_TMR0_Initialize
 11476                           
 11477                           ;mcc_generated_files/mcc.c: 55:     EUSART_Initialize();
 11478  1BB7  319B  23A3         	fcall	_EUSART_Initialize
 11479  1BB9  0008               	return
 11480  1BBA                     __end_of_SYSTEM_Initialize:	
 11481                           
 11482                           	psect	text19
 11483  1BEC                     __ptext19:	
 11484 ;; *************** function _TMR0_Initialize *****************
 11485 ;; Defined at:
 11486 ;;		line 64 in file "mcc_generated_files/tmr0.c"
 11487 ;; Parameters:    Size  Location     Type
 11488 ;;		None
 11489 ;; Auto vars:     Size  Location     Type
 11490 ;;		None
 11491 ;; Return value:  Size  Location     Type
 11492 ;;                  1    wreg      void 
 11493 ;; Registers used:
 11494 ;;		wreg, status,2, status,0, pclath, cstack
 11495 ;; Tracked objects:
 11496 ;;		On entry : B1F/2
 11497 ;;		On exit  : 1F/2
 11498 ;;		Unchanged: 0/0
 11499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11502 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11503 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11504 ;;Total ram usage:        1 bytes
 11505 ;; Hardware stack levels used:    1
 11506 ;; Hardware stack levels required when called:    4
 11507 ;; This function calls:
 11508 ;;		_TMR0_SetInterruptHandler
 11509 ;; This function is called by:
 11510 ;;		_SYSTEM_Initialize
 11511 ;; This function uses a non-reentrant model
 11512 ;;
 11513                           
 11514                           
 11515                           ;psect for function _TMR0_Initialize
 11516  1BEC                     _TMR0_Initialize:	
 11517                           
 11518                           ;mcc_generated_files/tmr0.c: 69:     OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | (0xD2 
      +                          & 0x3F));
 11519                           
 11520                           ;incstack = 0
 11521                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
 11522  1BEC  0021               	movlb	1	; select bank1
 11523  1BED  0815               	movf	21,w	;volatile
 11524  1BEE  39C0               	andlw	192
 11525  1BEF  3812               	iorlw	18
 11526  1BF0  0095               	movwf	21	;volatile
 11527                           
 11528                           ;mcc_generated_files/tmr0.c: 72:     TMR0 = 0x83;
 11529  1BF1  3083               	movlw	131
 11530  1BF2  0020               	movlb	0	; select bank0
 11531  1BF3  0095               	movwf	21	;volatile
 11532                           
 11533                           ;mcc_generated_files/tmr0.c: 75:     timer0ReloadVal= 131;
 11534  1BF4  3083               	movlw	131
 11535  1BF5  00F2               	movwf	??_TMR0_Initialize
 11536  1BF6  0872               	movf	??_TMR0_Initialize,w
 11537  1BF7  0022               	movlb	2	; select bank2
 11538  1BF8  00E0               	movwf	_timer0ReloadVal^(0+256)	;volatile
 11539                           
 11540                           ;mcc_generated_files/tmr0.c: 78:     INTCONbits.TMR0IF = 0;
 11541  1BF9  110B               	bcf	11,2	;volatile
 11542                           
 11543                           ;mcc_generated_files/tmr0.c: 81:     INTCONbits.TMR0IE = 1;
 11544  1BFA  168B               	bsf	11,5	;volatile
 11545                           
 11546                           ;mcc_generated_files/tmr0.c: 84:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
 11547  1BFB  3001               	movlw	low _TMR0_DefaultInterruptHandler
 11548  1BFC  00F0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 11549  1BFD  3008               	movlw	high _TMR0_DefaultInterruptHandler
 11550  1BFE  00F1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 11551  1BFF  319B  2373         	fcall	_TMR0_SetInterruptHandler
 11552  1C01  0008               	return
 11553  1C02                     __end_of_TMR0_Initialize:	
 11554                           
 11555                           	psect	text20
 11556  1D76                     __ptext20:	
 11557 ;; *************** function _PIN_MANAGER_Initialize *****************
 11558 ;; Defined at:
 11559 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 11560 ;; Parameters:    Size  Location     Type
 11561 ;;		None
 11562 ;; Auto vars:     Size  Location     Type
 11563 ;;		None
 11564 ;; Return value:  Size  Location     Type
 11565 ;;                  1    wreg      void 
 11566 ;; Registers used:
 11567 ;;		wreg, status,2
 11568 ;; Tracked objects:
 11569 ;;		On entry : B1F/0
 11570 ;;		On exit  : B1F/1D
 11571 ;;		Unchanged: B00/0
 11572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11576 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11577 ;;Total ram usage:        0 bytes
 11578 ;; Hardware stack levels used:    1
 11579 ;; Hardware stack levels required when called:    3
 11580 ;; This function calls:
 11581 ;;		Nothing
 11582 ;; This function is called by:
 11583 ;;		_SYSTEM_Initialize
 11584 ;; This function uses a non-reentrant model
 11585 ;;
 11586                           
 11587                           
 11588                           ;psect for function _PIN_MANAGER_Initialize
 11589  1D76                     _PIN_MANAGER_Initialize:	
 11590                           
 11591                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
 11592                           
 11593                           ;incstack = 0
 11594                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 11595  1D76  0022               	movlb	2	; select bank2
 11596  1D77  018C               	clrf	12	;volatile
 11597                           
 11598                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
 11599  1D78  018D               	clrf	13	;volatile
 11600                           
 11601                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
 11602  1D79  018E               	clrf	14	;volatile
 11603                           
 11604                           ;mcc_generated_files/pin_manager.c: 69:     TRISA = 0x03;
 11605  1D7A  3003               	movlw	3
 11606  1D7B  0021               	movlb	1	; select bank1
 11607  1D7C  008C               	movwf	12	;volatile
 11608                           
 11609                           ;mcc_generated_files/pin_manager.c: 70:     TRISB = 0x70;
 11610  1D7D  3070               	movlw	112
 11611  1D7E  008D               	movwf	13	;volatile
 11612                           
 11613                           ;mcc_generated_files/pin_manager.c: 71:     TRISC = 0xDF;
 11614  1D7F  30DF               	movlw	223
 11615  1D80  008E               	movwf	14	;volatile
 11616                           
 11617                           ;mcc_generated_files/pin_manager.c: 76:     ANSELC = 0x4F;
 11618  1D81  304F               	movlw	79
 11619  1D82  0023               	movlb	3	; select bank3
 11620  1D83  008E               	movwf	14	;volatile
 11621                           
 11622                           ;mcc_generated_files/pin_manager.c: 77:     ANSELB = 0x80;
 11623  1D84  3080               	movlw	128
 11624  1D85  008D               	movwf	13	;volatile
 11625                           
 11626                           ;mcc_generated_files/pin_manager.c: 78:     ANSELA = 0x03;
 11627  1D86  3003               	movlw	3
 11628  1D87  008C               	movwf	12	;volatile
 11629                           
 11630                           ;mcc_generated_files/pin_manager.c: 83:     WPUB = 0x00;
 11631  1D88  0024               	movlb	4	; select bank4
 11632  1D89  018D               	clrf	13	;volatile
 11633                           
 11634                           ;mcc_generated_files/pin_manager.c: 84:     WPUA = 0x00;
 11635  1D8A  018C               	clrf	12	;volatile
 11636                           
 11637                           ;mcc_generated_files/pin_manager.c: 85:     WPUC = 0x00;
 11638  1D8B  018E               	clrf	14	;volatile
 11639                           
 11640                           ;mcc_generated_files/pin_manager.c: 86:     OPTION_REGbits.nWPUEN = 1;
 11641  1D8C  0021               	movlb	1	; select bank1
 11642  1D8D  1795               	bsf	21,7	;volatile
 11643                           
 11644                           ;mcc_generated_files/pin_manager.c: 91:     ODCONA = 0x00;
 11645  1D8E  0025               	movlb	5	; select bank5
 11646  1D8F  018C               	clrf	12	;volatile
 11647                           
 11648                           ;mcc_generated_files/pin_manager.c: 92:     ODCONB = 0x00;
 11649  1D90  018D               	clrf	13	;volatile
 11650                           
 11651                           ;mcc_generated_files/pin_manager.c: 93:     ODCONC = 0x00;
 11652  1D91  018E               	clrf	14	;volatile
 11653                           
 11654                           ;mcc_generated_files/pin_manager.c: 98:     SLRCONA = 0x37;
 11655  1D92  3037               	movlw	55
 11656  1D93  0026               	movlb	6	; select bank6
 11657  1D94  008C               	movwf	12	;volatile
 11658                           
 11659                           ;mcc_generated_files/pin_manager.c: 99:     SLRCONB = 0xF0;
 11660  1D95  30F0               	movlw	240
 11661  1D96  008D               	movwf	13	;volatile
 11662                           
 11663                           ;mcc_generated_files/pin_manager.c: 100:     SLRCONC = 0xFF;
 11664  1D97  30FF               	movlw	255
 11665  1D98  008E               	movwf	14	;volatile
 11666                           
 11667                           ;mcc_generated_files/pin_manager.c: 109:     RXPPS = 0x0D;
 11668  1D99  300D               	movlw	13
 11669  1D9A  003C               	movlb	28	; select bank28
 11670  1D9B  00A4               	movwf	36	;volatile
 11671                           
 11672                           ;mcc_generated_files/pin_manager.c: 110:     RB7PPS = 0x12;
 11673  1D9C  3012               	movlw	18
 11674  1D9D  003D               	movlb	29	; select bank29
 11675  1D9E  009F               	movwf	31	;volatile
 11676  1D9F  0008               	return
 11677  1DA0                     __end_of_PIN_MANAGER_Initialize:	
 11678                           
 11679                           	psect	text21
 11680  1B7F                     __ptext21:	
 11681 ;; *************** function _OSCILLATOR_Initialize *****************
 11682 ;; Defined at:
 11683 ;;		line 58 in file "mcc_generated_files/mcc.c"
 11684 ;; Parameters:    Size  Location     Type
 11685 ;;		None
 11686 ;; Auto vars:     Size  Location     Type
 11687 ;;		None
 11688 ;; Return value:  Size  Location     Type
 11689 ;;                  1    wreg      void 
 11690 ;; Registers used:
 11691 ;;		wreg, status,2
 11692 ;; Tracked objects:
 11693 ;;		On entry : B1F/1D
 11694 ;;		On exit  : B1F/2
 11695 ;;		Unchanged: B00/0
 11696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11700 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11701 ;;Total ram usage:        0 bytes
 11702 ;; Hardware stack levels used:    1
 11703 ;; Hardware stack levels required when called:    3
 11704 ;; This function calls:
 11705 ;;		Nothing
 11706 ;; This function is called by:
 11707 ;;		_SYSTEM_Initialize
 11708 ;; This function uses a non-reentrant model
 11709 ;;
 11710                           
 11711                           
 11712                           ;psect for function _OSCILLATOR_Initialize
 11713  1B7F                     _OSCILLATOR_Initialize:	
 11714                           
 11715                           ;mcc_generated_files/mcc.c: 61:     OSCCON = 0x68;
 11716                           
 11717                           ;incstack = 0
 11718                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 11719  1B7F  3068               	movlw	104
 11720  1B80  0021               	movlb	1	; select bank1
 11721  1B81  0099               	movwf	25	;volatile
 11722                           
 11723                           ;mcc_generated_files/mcc.c: 63:     OSCTUNE = 0x00;
 11724  1B82  0198               	clrf	24	;volatile
 11725                           
 11726                           ;mcc_generated_files/mcc.c: 65:     BORCON = 0x00;
 11727  1B83  0022               	movlb	2	; select bank2
 11728  1B84  0196               	clrf	22	;volatile
 11729  1B85  0008               	return
 11730  1B86                     __end_of_OSCILLATOR_Initialize:	
 11731                           
 11732                           	psect	text22
 11733  1BA3                     __ptext22:	
 11734 ;; *************** function _EUSART_Initialize *****************
 11735 ;; Defined at:
 11736 ;;		line 56 in file "mcc_generated_files/eusart.c"
 11737 ;; Parameters:    Size  Location     Type
 11738 ;;		None
 11739 ;; Auto vars:     Size  Location     Type
 11740 ;;		None
 11741 ;; Return value:  Size  Location     Type
 11742 ;;                  1    wreg      void 
 11743 ;; Registers used:
 11744 ;;		wreg, status,2
 11745 ;; Tracked objects:
 11746 ;;		On entry : 1F/2
 11747 ;;		On exit  : 1F/3
 11748 ;;		Unchanged: 0/0
 11749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11753 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11754 ;;Total ram usage:        0 bytes
 11755 ;; Hardware stack levels used:    1
 11756 ;; Hardware stack levels required when called:    3
 11757 ;; This function calls:
 11758 ;;		Nothing
 11759 ;; This function is called by:
 11760 ;;		_SYSTEM_Initialize
 11761 ;; This function uses a non-reentrant model
 11762 ;;
 11763                           
 11764                           
 11765                           ;psect for function _EUSART_Initialize
 11766  1BA3                     _EUSART_Initialize:	
 11767                           
 11768                           ;mcc_generated_files/eusart.c: 61:     BAUD1CON = 0x08;
 11769                           
 11770                           ;incstack = 0
 11771                           ; Regs used in _EUSART_Initialize: [wreg+status,2]
 11772  1BA3  3008               	movlw	8
 11773  1BA4  0023               	movlb	3	; select bank3
 11774  1BA5  009F               	movwf	31	;volatile
 11775                           
 11776                           ;mcc_generated_files/eusart.c: 64:     RC1STA = 0x90;
 11777  1BA6  3090               	movlw	144
 11778  1BA7  009D               	movwf	29	;volatile
 11779                           
 11780                           ;mcc_generated_files/eusart.c: 67:     TX1STA = 0x24;
 11781  1BA8  3024               	movlw	36
 11782  1BA9  009E               	movwf	30	;volatile
 11783                           
 11784                           ;mcc_generated_files/eusart.c: 70:     SPBRGL = 0x67;
 11785  1BAA  3067               	movlw	103
 11786  1BAB  009B               	movwf	27	;volatile
 11787                           
 11788                           ;mcc_generated_files/eusart.c: 73:     SPBRGH = 0x00;
 11789  1BAC  019C               	clrf	28	;volatile
 11790  1BAD  0008               	return
 11791  1BAE                     __end_of_EUSART_Initialize:	
 11792                           
 11793                           	psect	text23
 11794  14E7                     __ptext23:	
 11795 ;; *************** function _IntToString *****************
 11796 ;; Defined at:
 11797 ;;		line 148 in file "main.c"
 11798 ;; Parameters:    Size  Location     Type
 11799 ;;  n               2   11[COMMON] int 
 11800 ;;  dest            1   13[COMMON] PTR unsigned char 
 11801 ;;		 -> main@convertedNumber(16), 
 11802 ;; Auto vars:     Size  Location     Type
 11803 ;;  i               2   12[BANK0 ] int 
 11804 ;;  sign            1   11[BANK0 ] _Bool 
 11805 ;; Return value:  Size  Location     Type
 11806 ;;                  1    wreg      void 
 11807 ;; Registers used:
 11808 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11809 ;; Tracked objects:
 11810 ;;		On entry : 1F/1
 11811 ;;		On exit  : 1F/0
 11812 ;;		Unchanged: 0/0
 11813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11814 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11815 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11816 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11817 ;;      Totals:         3       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11818 ;;Total ram usage:        8 bytes
 11819 ;; Hardware stack levels used:    1
 11820 ;; Hardware stack levels required when called:    5
 11821 ;; This function calls:
 11822 ;;		_ReverseString
 11823 ;;		___awdiv
 11824 ;;		___awmod
 11825 ;; This function is called by:
 11826 ;;		_main
 11827 ;; This function uses a non-reentrant model
 11828 ;;
 11829                           
 11830                           
 11831                           ;psect for function _IntToString
 11832  14E7                     _IntToString:	
 11833                           
 11834                           ;main.c: 148: void IntToString(int n, char* dest);main.c: 149: {;main.c: 150:     int i 
      +                          = 0;
 11835                           
 11836                           ;incstack = 0
 11837                           ; Regs used in _IntToString: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11838  14E7  0020               	movlb	0	; select bank0
 11839  14E8  01AC               	clrf	IntToString@i
 11840  14E9  01AD               	clrf	IntToString@i+1
 11841                           
 11842                           ;main.c: 151:     _Bool sign = n < 0;
 11843  14EA  1FFC               	btfss	IntToString@n+1,7
 11844  14EB  2CEE               	goto	u3640
 11845  14EC  3001               	movlw	1
 11846  14ED  2CEF               	goto	u3650
 11847  14EE                     u3640:	
 11848  14EE  3000               	movlw	0
 11849  14EF                     u3650:	
 11850  14EF  00A9               	movwf	??_IntToString
 11851  14F0  0829               	movf	??_IntToString,w
 11852  14F1  00AB               	movwf	IntToString@sign
 11853                           
 11854                           ;main.c: 152:     if (sign)
 11855  14F2  082B               	movf	IntToString@sign,w
 11856  14F3  1903               	btfsc	3,2
 11857  14F4  2CFA               	goto	l3614
 11858                           
 11859                           ;main.c: 153:     {;main.c: 155:         n = -n;
 11860  14F5  09FB               	comf	IntToString@n,f
 11861  14F6  09FC               	comf	IntToString@n+1,f
 11862  14F7  0AFB               	incf	IntToString@n,f
 11863  14F8  1903               	skipnz
 11864  14F9  0AFC               	incf	IntToString@n+1,f
 11865  14FA                     l3614:	
 11866                           
 11867                           ;main.c: 161:         dest[i++] = n % 10 + '0';
 11868  14FA  300A               	movlw	10
 11869  14FB  00F0               	movwf	___awmod@divisor
 11870  14FC  3000               	movlw	0
 11871  14FD  00F1               	movwf	___awmod@divisor+1
 11872  14FE  087C               	movf	IntToString@n+1,w
 11873  14FF  00F3               	movwf	___awmod@dividend+1
 11874  1500  087B               	movf	IntToString@n,w
 11875  1501  00F2               	movwf	___awmod@dividend
 11876  1502  3191  2156  3194   	fcall	___awmod
 11877  1505  0870               	movf	?___awmod,w
 11878  1506  3E30               	addlw	48
 11879  1507  0020               	movlb	0	; select bank0
 11880  1508  00A9               	movwf	??_IntToString
 11881  1509  082C               	movf	IntToString@i,w
 11882  150A  077D               	addwf	IntToString@dest,w
 11883  150B  00AA               	movwf	??_IntToString+1
 11884  150C  082A               	movf	??_IntToString+1,w
 11885  150D  0086               	movwf	6
 11886  150E  3001               	movlw	1	; select bank2/3
 11887  150F  0087               	movwf	7
 11888  1510  0829               	movf	??_IntToString,w
 11889  1511  0081               	movwf	1
 11890  1512  3001               	movlw	1
 11891  1513  07AC               	addwf	IntToString@i,f
 11892  1514  3000               	movlw	0
 11893  1515  3DAD               	addwfc	IntToString@i+1,f
 11894                           
 11895                           ;main.c: 163:     } while ((n /= 10) > 0);
 11896  1516  300A               	movlw	10
 11897  1517  00F0               	movwf	___awdiv@divisor
 11898  1518  3000               	movlw	0
 11899  1519  00F1               	movwf	___awdiv@divisor+1
 11900  151A  087C               	movf	IntToString@n+1,w
 11901  151B  00F3               	movwf	___awdiv@dividend+1
 11902  151C  087B               	movf	IntToString@n,w
 11903  151D  00F2               	movwf	___awdiv@dividend
 11904  151E  3192  22C6  3194   	fcall	___awdiv
 11905  1521  0871               	movf	?___awdiv+1,w
 11906  1522  00FC               	movwf	IntToString@n+1
 11907  1523  0870               	movf	?___awdiv,w
 11908  1524  00FB               	movwf	IntToString@n
 11909  1525  087C               	movf	IntToString@n+1,w
 11910  1526  3A80               	xorlw	128
 11911  1527  00A9               	movwf	??_IntToString
 11912  1528  3080               	movlw	128
 11913  1529  0229               	subwf	??_IntToString,w
 11914  152A  1D03               	skipz
 11915  152B  2D2E               	goto	u3675
 11916  152C  3001               	movlw	1
 11917  152D  027B               	subwf	IntToString@n,w
 11918  152E                     u3675:	
 11919  152E  1803               	skipnc
 11920  152F  2CFA               	goto	l3614
 11921                           
 11922                           ;main.c: 164:     if (sign)
 11923  1530  0020               	movlb	0	; select bank0
 11924  1531  082B               	movf	IntToString@sign,w
 11925  1532  1903               	btfsc	3,2
 11926  1533  2D43               	goto	l3626
 11927                           
 11928                           ;main.c: 165:     {;main.c: 166:         dest[i++] = '-';
 11929  1534  302D               	movlw	45
 11930  1535  00A9               	movwf	??_IntToString
 11931  1536  082C               	movf	IntToString@i,w
 11932  1537  077D               	addwf	IntToString@dest,w
 11933  1538  00AA               	movwf	??_IntToString+1
 11934  1539  082A               	movf	??_IntToString+1,w
 11935  153A  0086               	movwf	6
 11936  153B  3001               	movlw	1	; select bank2/3
 11937  153C  0087               	movwf	7
 11938  153D  0829               	movf	??_IntToString,w
 11939  153E  0081               	movwf	1
 11940  153F  3001               	movlw	1
 11941  1540  07AC               	addwf	IntToString@i,f
 11942  1541  3000               	movlw	0
 11943  1542  3DAD               	addwfc	IntToString@i+1,f
 11944  1543                     l3626:	
 11945                           
 11946                           ;main.c: 168:     dest[i] = '\0';
 11947  1543  082C               	movf	IntToString@i,w
 11948  1544  077D               	addwf	IntToString@dest,w
 11949  1545  00A9               	movwf	??_IntToString
 11950  1546  0829               	movf	??_IntToString,w
 11951  1547  0086               	movwf	6
 11952  1548  3001               	movlw	1	; select bank2/3
 11953  1549  0087               	movwf	7
 11954  154A  0181               	clrf	1
 11955                           
 11956                           ;main.c: 170:     ReverseString(dest);
 11957  154B  087D               	movf	IntToString@dest,w
 11958  154C  3194  241D         	fcall	_ReverseString
 11959  154E  0008               	return
 11960  154F                     __end_of_IntToString:	
 11961                           
 11962                           	psect	text24
 11963  1156                     __ptext24:	
 11964 ;; *************** function ___awmod *****************
 11965 ;; Defined at:
 11966 ;;		line 5 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\awmod.c"
 11967 ;; Parameters:    Size  Location     Type
 11968 ;;  divisor         2    0[COMMON] int 
 11969 ;;  dividend        2    2[COMMON] int 
 11970 ;; Auto vars:     Size  Location     Type
 11971 ;;  sign            1    6[COMMON] unsigned char 
 11972 ;;  counter         1    5[COMMON] unsigned char 
 11973 ;; Return value:  Size  Location     Type
 11974 ;;                  2    0[COMMON] int 
 11975 ;; Registers used:
 11976 ;;		wreg, status,2, status,0
 11977 ;; Tracked objects:
 11978 ;;		On entry : 0/0
 11979 ;;		On exit  : 0/0
 11980 ;;		Unchanged: 0/0
 11981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11982 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11983 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11984 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11985 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11986 ;;Total ram usage:        7 bytes
 11987 ;; Hardware stack levels used:    1
 11988 ;; Hardware stack levels required when called:    3
 11989 ;; This function calls:
 11990 ;;		Nothing
 11991 ;; This function is called by:
 11992 ;;		_IntToString
 11993 ;; This function uses a non-reentrant model
 11994 ;;
 11995                           
 11996                           
 11997                           ;psect for function ___awmod
 11998  1156                     ___awmod:	
 11999                           
 12000                           ;incstack = 0
 12001                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 12002  1156  01F6               	clrf	___awmod@sign
 12003  1157  1FF3               	btfss	___awmod@dividend+1,7
 12004  1158  2960               	goto	l3490
 12005  1159  09F2               	comf	___awmod@dividend,f
 12006  115A  09F3               	comf	___awmod@dividend+1,f
 12007  115B  0AF2               	incf	___awmod@dividend,f
 12008  115C  1903               	skipnz
 12009  115D  0AF3               	incf	___awmod@dividend+1,f
 12010  115E  01F6               	clrf	___awmod@sign
 12011  115F  0AF6               	incf	___awmod@sign,f
 12012  1160                     l3490:	
 12013  1160  1FF1               	btfss	___awmod@divisor+1,7
 12014  1161  2967               	goto	l3494
 12015  1162  09F0               	comf	___awmod@divisor,f
 12016  1163  09F1               	comf	___awmod@divisor+1,f
 12017  1164  0AF0               	incf	___awmod@divisor,f
 12018  1165  1903               	skipnz
 12019  1166  0AF1               	incf	___awmod@divisor+1,f
 12020  1167                     l3494:	
 12021  1167  0870               	movf	___awmod@divisor,w
 12022  1168  0471               	iorwf	___awmod@divisor+1,w
 12023  1169  1903               	btfsc	3,2
 12024  116A  298E               	goto	l3512
 12025  116B  01F5               	clrf	___awmod@counter
 12026  116C  0AF5               	incf	___awmod@counter,f
 12027  116D                     l3502:	
 12028  116D  1BF1               	btfsc	___awmod@divisor+1,7
 12029  116E  2979               	goto	l3504
 12030  116F  3001               	movlw	1
 12031  1170                     u3405:	
 12032  1170  35F0               	lslf	___awmod@divisor,f
 12033  1171  0DF1               	rlf	___awmod@divisor+1,f
 12034  1172  0B89               	decfsz	9,f
 12035  1173  2970               	goto	u3405
 12036  1174  3001               	movlw	1
 12037  1175  00F4               	movwf	??___awmod
 12038  1176  0874               	movf	??___awmod,w
 12039  1177  07F5               	addwf	___awmod@counter,f
 12040  1178  296D               	goto	l3502
 12041  1179                     l3504:	
 12042  1179  0871               	movf	___awmod@divisor+1,w
 12043  117A  0273               	subwf	___awmod@dividend+1,w
 12044  117B  1D03               	skipz
 12045  117C  297F               	goto	u3425
 12046  117D  0870               	movf	___awmod@divisor,w
 12047  117E  0272               	subwf	___awmod@dividend,w
 12048  117F                     u3425:	
 12049  117F  1C03               	skipc
 12050  1180  2985               	goto	l3508
 12051  1181  0870               	movf	___awmod@divisor,w
 12052  1182  02F2               	subwf	___awmod@dividend,f
 12053  1183  0871               	movf	___awmod@divisor+1,w
 12054  1184  3BF3               	subwfb	___awmod@dividend+1,f
 12055  1185                     l3508:	
 12056  1185  3001               	movlw	1
 12057  1186                     u3435:	
 12058  1186  36F1               	lsrf	___awmod@divisor+1,f
 12059  1187  0CF0               	rrf	___awmod@divisor,f
 12060  1188  0B89               	decfsz	9,f
 12061  1189  2986               	goto	u3435
 12062  118A  3001               	movlw	1
 12063  118B  02F5               	subwf	___awmod@counter,f
 12064  118C  1D03               	btfss	3,2
 12065  118D  2979               	goto	l3504
 12066  118E                     l3512:	
 12067  118E  0876               	movf	___awmod@sign,w
 12068  118F  1903               	btfsc	3,2
 12069  1190  2996               	goto	l3516
 12070  1191  09F2               	comf	___awmod@dividend,f
 12071  1192  09F3               	comf	___awmod@dividend+1,f
 12072  1193  0AF2               	incf	___awmod@dividend,f
 12073  1194  1903               	skipnz
 12074  1195  0AF3               	incf	___awmod@dividend+1,f
 12075  1196                     l3516:	
 12076  1196  0873               	movf	___awmod@dividend+1,w
 12077  1197  00F1               	movwf	?___awmod+1
 12078  1198  0872               	movf	___awmod@dividend,w
 12079  1199  00F0               	movwf	?___awmod
 12080  119A  0008               	return
 12081  119B                     __end_of___awmod:	
 12082                           
 12083                           	psect	text25
 12084  141D                     __ptext25:	
 12085 ;; *************** function _ReverseString *****************
 12086 ;; Defined at:
 12087 ;;		line 93 in file "main.c"
 12088 ;; Parameters:    Size  Location     Type
 12089 ;;  str             1    wreg     PTR unsigned char 
 12090 ;;		 -> checksum(6), main@convertedNumber(16), 
 12091 ;; Auto vars:     Size  Location     Type
 12092 ;;  str             1    8[BANK0 ] PTR unsigned char 
 12093 ;;		 -> checksum(6), main@convertedNumber(16), 
 12094 ;;  opposite        1    3[BANK0 ] PTR unsigned char 
 12095 ;;		 -> checksum(6), main@convertedNumber(16), 
 12096 ;;  temp            1    2[BANK0 ] unsigned char 
 12097 ;;  i               2    6[BANK0 ] int 
 12098 ;;  halfway         2    0[BANK0 ] int 
 12099 ;;  counti          2    4[BANK0 ] int 
 12100 ;; Return value:  Size  Location     Type
 12101 ;;                  1    wreg      void 
 12102 ;; Registers used:
 12103 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12104 ;; Tracked objects:
 12105 ;;		On entry : 1F/0
 12106 ;;		On exit  : 1F/0
 12107 ;;		Unchanged: 0/0
 12108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12110 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12111 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12112 ;;      Totals:         2       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12113 ;;Total ram usage:       11 bytes
 12114 ;; Hardware stack levels used:    1
 12115 ;; Hardware stack levels required when called:    4
 12116 ;; This function calls:
 12117 ;;		___awdiv
 12118 ;;		_strlen
 12119 ;; This function is called by:
 12120 ;;		_UIntToHexString
 12121 ;;		_IntToString
 12122 ;;		_UIntToString
 12123 ;; This function uses a non-reentrant model
 12124 ;;
 12125                           
 12126                           
 12127                           ;psect for function _ReverseString
 12128  141D                     _ReverseString:	
 12129                           
 12130                           ;incstack = 0
 12131                           ; Regs used in _ReverseString: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12132                           ;ReverseString@str stored from wreg
 12133  141D  00A8               	movwf	ReverseString@str
 12134                           
 12135                           ;main.c: 93: void ReverseString(char* str);main.c: 94: {;main.c: 95:     int counti = st
      +                          rlen(str);
 12136  141E  0828               	movf	ReverseString@str,w
 12137  141F  00F0               	movwf	strlen@s
 12138  1420  3001               	movlw	1
 12139  1421  00F1               	movwf	strlen@s+1
 12140  1422  319C  2419  3194   	fcall	_strlen
 12141  1425  0871               	movf	?_strlen+1,w
 12142  1426  0020               	movlb	0	; select bank0
 12143  1427  00A5               	movwf	ReverseString@counti+1
 12144  1428  0870               	movf	?_strlen,w
 12145  1429  00A4               	movwf	ReverseString@counti
 12146                           
 12147                           ;main.c: 96:     for (int i = 0, halfway = counti / 2; i < halfway; i++)
 12148  142A  01A6               	clrf	ReverseString@i
 12149  142B  01A7               	clrf	ReverseString@i+1
 12150  142C  3002               	movlw	2
 12151  142D  00F0               	movwf	___awdiv@divisor
 12152  142E  3000               	movlw	0
 12153  142F  00F1               	movwf	___awdiv@divisor+1
 12154  1430  0825               	movf	ReverseString@counti+1,w
 12155  1431  00F3               	movwf	___awdiv@dividend+1
 12156  1432  0824               	movf	ReverseString@counti,w
 12157  1433  00F2               	movwf	___awdiv@dividend
 12158  1434  3192  22C6  3194   	fcall	___awdiv
 12159  1437  0871               	movf	?___awdiv+1,w
 12160  1438  00A1               	movwf	ReverseString@halfway+1
 12161  1439  0870               	movf	?___awdiv,w
 12162  143A  00A0               	movwf	ReverseString@halfway
 12163  143B                     l3428:	
 12164  143B  0827               	movf	ReverseString@i+1,w
 12165  143C  3A80               	xorlw	128
 12166  143D  00F9               	movwf	??_ReverseString
 12167  143E  0821               	movf	ReverseString@halfway+1,w
 12168  143F  3A80               	xorlw	128
 12169  1440  0279               	subwf	??_ReverseString,w
 12170  1441  1D03               	skipz
 12171  1442  2C45               	goto	u3295
 12172  1443  0820               	movf	ReverseString@halfway,w
 12173  1444  0226               	subwf	ReverseString@i,w
 12174  1445                     u3295:	
 12175  1445  1803               	btfsc	3,0
 12176  1446  2C76               	goto	l3430
 12177                           
 12178                           ;main.c: 97:     {;main.c: 98:         char temp = str[i];
 12179  1447  0020               	movlb	0	; select bank0
 12180  1448  0826               	movf	ReverseString@i,w
 12181  1449  0728               	addwf	ReverseString@str,w
 12182  144A  00F9               	movwf	??_ReverseString
 12183  144B  0879               	movf	??_ReverseString,w
 12184  144C  0086               	movwf	6
 12185  144D  3001               	movlw	1	; select bank2/3
 12186  144E  0087               	movwf	7
 12187  144F  0801               	movf	1,w
 12188  1450  00FA               	movwf	??_ReverseString+1
 12189  1451  087A               	movf	??_ReverseString+1,w
 12190  1452  00A2               	movwf	ReverseString@temp
 12191                           
 12192                           ;main.c: 99:         char* opposite = str + (counti - 1 - i);
 12193  1453  0826               	movf	ReverseString@i,w
 12194  1454  0228               	subwf	ReverseString@str,w
 12195  1455  0724               	addwf	ReverseString@counti,w
 12196  1456  3EFF               	addlw	-1
 12197  1457  00F9               	movwf	??_ReverseString
 12198  1458  0879               	movf	??_ReverseString,w
 12199  1459  00A3               	movwf	ReverseString@opposite
 12200                           
 12201                           ;main.c: 100:         str[i] = *opposite;
 12202  145A  0823               	movf	ReverseString@opposite,w
 12203  145B  0086               	movwf	6
 12204  145C  3001               	movlw	1	; select bank2/3
 12205  145D  0087               	movwf	7
 12206  145E  0801               	movf	1,w
 12207  145F  00F9               	movwf	??_ReverseString
 12208  1460  0826               	movf	ReverseString@i,w
 12209  1461  0728               	addwf	ReverseString@str,w
 12210  1462  00FA               	movwf	??_ReverseString+1
 12211  1463  087A               	movf	??_ReverseString+1,w
 12212  1464  0086               	movwf	6
 12213  1465  3001               	movlw	1	; select bank2/3
 12214  1466  0087               	movwf	7
 12215  1467  0879               	movf	??_ReverseString,w
 12216  1468  0081               	movwf	1
 12217                           
 12218                           ;main.c: 101:         *opposite = temp;
 12219  1469  0822               	movf	ReverseString@temp,w
 12220  146A  00F9               	movwf	??_ReverseString
 12221  146B  0823               	movf	ReverseString@opposite,w
 12222  146C  0086               	movwf	6
 12223  146D  3001               	movlw	1	; select bank2/3
 12224  146E  0087               	movwf	7
 12225  146F  0879               	movf	??_ReverseString,w
 12226  1470  0081               	movwf	1
 12227                           
 12228                           ;main.c: 102:     }
 12229  1471  3001               	movlw	1
 12230  1472  07A6               	addwf	ReverseString@i,f
 12231  1473  3000               	movlw	0
 12232  1474  3DA7               	addwfc	ReverseString@i+1,f
 12233  1475  2C3B               	goto	l3428
 12234  1476                     l3430:	
 12235                           
 12236                           ;main.c: 103:     str[counti] = '\0';
 12237  1476  0020               	movlb	0	; select bank0
 12238  1477  0824               	movf	ReverseString@counti,w
 12239  1478  0728               	addwf	ReverseString@str,w
 12240  1479  00F9               	movwf	??_ReverseString
 12241  147A  0879               	movf	??_ReverseString,w
 12242  147B  0086               	movwf	6
 12243  147C  3001               	movlw	1	; select bank2/3
 12244  147D  0087               	movwf	7
 12245  147E  0181               	clrf	1
 12246  147F  0008               	return
 12247  1480                     __end_of_ReverseString:	
 12248                           
 12249                           	psect	text26
 12250  12C6                     __ptext26:	
 12251 ;; *************** function ___awdiv *****************
 12252 ;; Defined at:
 12253 ;;		line 5 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\awdiv.c"
 12254 ;; Parameters:    Size  Location     Type
 12255 ;;  divisor         2    0[COMMON] int 
 12256 ;;  dividend        2    2[COMMON] int 
 12257 ;; Auto vars:     Size  Location     Type
 12258 ;;  quotient        2    7[COMMON] int 
 12259 ;;  sign            1    6[COMMON] unsigned char 
 12260 ;;  counter         1    5[COMMON] unsigned char 
 12261 ;; Return value:  Size  Location     Type
 12262 ;;                  2    0[COMMON] int 
 12263 ;; Registers used:
 12264 ;;		wreg, status,2, status,0
 12265 ;; Tracked objects:
 12266 ;;		On entry : 1F/0
 12267 ;;		On exit  : 1F/0
 12268 ;;		Unchanged: 1F/0
 12269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12270 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12271 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12272 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12273 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12274 ;;Total ram usage:        9 bytes
 12275 ;; Hardware stack levels used:    1
 12276 ;; Hardware stack levels required when called:    3
 12277 ;; This function calls:
 12278 ;;		Nothing
 12279 ;; This function is called by:
 12280 ;;		_ReverseString
 12281 ;;		_IntToString
 12282 ;; This function uses a non-reentrant model
 12283 ;;
 12284                           
 12285                           
 12286                           ;psect for function ___awdiv
 12287  12C6                     ___awdiv:	
 12288                           
 12289                           ;incstack = 0
 12290                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 12291  12C6  01F6               	clrf	___awdiv@sign
 12292  12C7  1FF1               	btfss	___awdiv@divisor+1,7
 12293  12C8  2AD0               	goto	l3172
 12294  12C9  09F0               	comf	___awdiv@divisor,f
 12295  12CA  09F1               	comf	___awdiv@divisor+1,f
 12296  12CB  0AF0               	incf	___awdiv@divisor,f
 12297  12CC  1903               	skipnz
 12298  12CD  0AF1               	incf	___awdiv@divisor+1,f
 12299  12CE  01F6               	clrf	___awdiv@sign
 12300  12CF  0AF6               	incf	___awdiv@sign,f
 12301  12D0                     l3172:	
 12302  12D0  1FF3               	btfss	___awdiv@dividend+1,7
 12303  12D1  2ADB               	goto	l3178
 12304  12D2  09F2               	comf	___awdiv@dividend,f
 12305  12D3  09F3               	comf	___awdiv@dividend+1,f
 12306  12D4  0AF2               	incf	___awdiv@dividend,f
 12307  12D5  1903               	skipnz
 12308  12D6  0AF3               	incf	___awdiv@dividend+1,f
 12309  12D7  3001               	movlw	1
 12310  12D8  00F4               	movwf	??___awdiv
 12311  12D9  0874               	movf	??___awdiv,w
 12312  12DA  06F6               	xorwf	___awdiv@sign,f
 12313  12DB                     l3178:	
 12314  12DB  01F7               	clrf	___awdiv@quotient
 12315  12DC  01F8               	clrf	___awdiv@quotient+1
 12316  12DD  0870               	movf	___awdiv@divisor,w
 12317  12DE  0471               	iorwf	___awdiv@divisor+1,w
 12318  12DF  1903               	btfsc	3,2
 12319  12E0  2B0A               	goto	l3200
 12320  12E1  01F5               	clrf	___awdiv@counter
 12321  12E2  0AF5               	incf	___awdiv@counter,f
 12322  12E3                     l3188:	
 12323  12E3  1BF1               	btfsc	___awdiv@divisor+1,7
 12324  12E4  2AEF               	goto	l3190
 12325  12E5  3001               	movlw	1
 12326  12E6                     u2885:	
 12327  12E6  35F0               	lslf	___awdiv@divisor,f
 12328  12E7  0DF1               	rlf	___awdiv@divisor+1,f
 12329  12E8  0B89               	decfsz	9,f
 12330  12E9  2AE6               	goto	u2885
 12331  12EA  3001               	movlw	1
 12332  12EB  00F4               	movwf	??___awdiv
 12333  12EC  0874               	movf	??___awdiv,w
 12334  12ED  07F5               	addwf	___awdiv@counter,f
 12335  12EE  2AE3               	goto	l3188
 12336  12EF                     l3190:	
 12337  12EF  3001               	movlw	1
 12338  12F0                     u2905:	
 12339  12F0  35F7               	lslf	___awdiv@quotient,f
 12340  12F1  0DF8               	rlf	___awdiv@quotient+1,f
 12341  12F2  0B89               	decfsz	9,f
 12342  12F3  2AF0               	goto	u2905
 12343  12F4  0871               	movf	___awdiv@divisor+1,w
 12344  12F5  0273               	subwf	___awdiv@dividend+1,w
 12345  12F6  1D03               	skipz
 12346  12F7  2AFA               	goto	u2915
 12347  12F8  0870               	movf	___awdiv@divisor,w
 12348  12F9  0272               	subwf	___awdiv@dividend,w
 12349  12FA                     u2915:	
 12350  12FA  1C03               	skipc
 12351  12FB  2B01               	goto	l3196
 12352  12FC  0870               	movf	___awdiv@divisor,w
 12353  12FD  02F2               	subwf	___awdiv@dividend,f
 12354  12FE  0871               	movf	___awdiv@divisor+1,w
 12355  12FF  3BF3               	subwfb	___awdiv@dividend+1,f
 12356  1300  1477               	bsf	___awdiv@quotient,0
 12357  1301                     l3196:	
 12358  1301  3001               	movlw	1
 12359  1302                     u2925:	
 12360  1302  36F1               	lsrf	___awdiv@divisor+1,f
 12361  1303  0CF0               	rrf	___awdiv@divisor,f
 12362  1304  0B89               	decfsz	9,f
 12363  1305  2B02               	goto	u2925
 12364  1306  3001               	movlw	1
 12365  1307  02F5               	subwf	___awdiv@counter,f
 12366  1308  1D03               	btfss	3,2
 12367  1309  2AEF               	goto	l3190
 12368  130A                     l3200:	
 12369  130A  0876               	movf	___awdiv@sign,w
 12370  130B  1903               	btfsc	3,2
 12371  130C  2B12               	goto	l3204
 12372  130D  09F7               	comf	___awdiv@quotient,f
 12373  130E  09F8               	comf	___awdiv@quotient+1,f
 12374  130F  0AF7               	incf	___awdiv@quotient,f
 12375  1310  1903               	skipnz
 12376  1311  0AF8               	incf	___awdiv@quotient+1,f
 12377  1312                     l3204:	
 12378  1312  0878               	movf	___awdiv@quotient+1,w
 12379  1313  00F1               	movwf	?___awdiv+1
 12380  1314  0877               	movf	___awdiv@quotient,w
 12381  1315  00F0               	movwf	?___awdiv
 12382  1316  0008               	return
 12383  1317                     __end_of___awdiv:	
 12384                           
 12385                           	psect	text27
 12386  1276                     __ptext27:	
 12387 ;; *************** function _InsertString *****************
 12388 ;; Defined at:
 12389 ;;		line 80 in file "main.c"
 12390 ;; Parameters:    Size  Location     Type
 12391 ;;  dest            1    wreg     PTR unsigned char 
 12392 ;;		 -> message_end(73), message_start(70), 
 12393 ;;  src             2    0[BANK0 ] PTR unsigned char 
 12394 ;;		 -> STR_2(3), checksum(6), STR_1(7), main@convertedNumber(16), 
 12395 ;;  index           2    2[BANK0 ] int 
 12396 ;;  destLimit       2    4[BANK0 ] int 
 12397 ;; Auto vars:     Size  Location     Type
 12398 ;;  dest            1   10[BANK0 ] PTR unsigned char 
 12399 ;;		 -> message_end(73), message_start(70), 
 12400 ;;  i               2    8[BANK0 ] int 
 12401 ;;  counti          2    6[BANK0 ] int 
 12402 ;; Return value:  Size  Location     Type
 12403 ;;                  2    0[BANK0 ] int 
 12404 ;; Registers used:
 12405 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12406 ;; Tracked objects:
 12407 ;;		On entry : 1F/2
 12408 ;;		On exit  : 1F/0
 12409 ;;		Unchanged: 0/0
 12410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12411 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12412 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12413 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12414 ;;      Totals:         1      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12415 ;;Total ram usage:       12 bytes
 12416 ;; Hardware stack levels used:    1
 12417 ;; Hardware stack levels required when called:    4
 12418 ;; This function calls:
 12419 ;;		_Insert
 12420 ;;		_strlen
 12421 ;; This function is called by:
 12422 ;;		_main
 12423 ;; This function uses a non-reentrant model
 12424 ;;
 12425                           
 12426                           
 12427                           ;psect for function _InsertString
 12428  1276                     _InsertString:	
 12429                           
 12430                           ;incstack = 0
 12431                           ; Regs used in _InsertString: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12432                           ;InsertString@dest stored from wreg
 12433  1276  0020               	movlb	0	; select bank0
 12434  1277  00AA               	movwf	InsertString@dest
 12435                           
 12436                           ;main.c: 80: int InsertString(char* dest, char* src, int index, int destLimit);main.c: 8
      +                          1: {;main.c: 82:     for (int i = 0, counti = strlen(src); i < counti && index < destLim
      +                          it; i++)
 12437  1278  01A8               	clrf	InsertString@i
 12438  1279  01A9               	clrf	InsertString@i+1
 12439  127A  0821               	movf	InsertString@src+1,w
 12440  127B  00F1               	movwf	strlen@s+1
 12441  127C  0820               	movf	InsertString@src,w
 12442  127D  00F0               	movwf	strlen@s
 12443  127E  319C  2419  3192   	fcall	_strlen
 12444  1281  0871               	movf	?_strlen+1,w
 12445  1282  0020               	movlb	0	; select bank0
 12446  1283  00A7               	movwf	InsertString@counti+1
 12447  1284  0870               	movf	?_strlen,w
 12448  1285  00A6               	movwf	InsertString@counti
 12449  1286  2AB4               	goto	l3576
 12450  1287                     l3578:	
 12451  1287  0020               	movlb	0	; select bank0
 12452  1288  0823               	movf	InsertString@index+1,w
 12453  1289  3A80               	xorlw	128
 12454  128A  00FA               	movwf	??_InsertString
 12455  128B  0825               	movf	InsertString@destLimit+1,w
 12456  128C  3A80               	xorlw	128
 12457  128D  027A               	subwf	??_InsertString,w
 12458  128E  1D03               	skipz
 12459  128F  2A92               	goto	u3595
 12460  1290  0824               	movf	InsertString@destLimit,w
 12461  1291  0222               	subwf	InsertString@index,w
 12462  1292                     u3595:	
 12463  1292  1803               	btfsc	3,0
 12464  1293  2AC0               	goto	l3580
 12465                           
 12466                           ;main.c: 83:     {;main.c: 85:         Insert(dest, src[i], index++, destLimit);
 12467  1294  0020               	movlb	0	; select bank0
 12468  1295  0820               	movf	InsertString@src,w
 12469  1296  0728               	addwf	InsertString@i,w
 12470  1297  0084               	movwf	4
 12471  1298  0821               	movf	InsertString@src+1,w
 12472  1299  3D29               	addwfc	InsertString@i+1,w
 12473  129A  0085               	movwf	5
 12474  129B  0800               	movf	0,w	;code access
 12475  129C  00FA               	movwf	??_InsertString
 12476  129D  087A               	movf	??_InsertString,w
 12477  129E  00F0               	movwf	Insert@src
 12478  129F  0823               	movf	InsertString@index+1,w
 12479  12A0  00F2               	movwf	Insert@index+1
 12480  12A1  0822               	movf	InsertString@index,w
 12481  12A2  00F1               	movwf	Insert@index
 12482  12A3  0825               	movf	InsertString@destLimit+1,w
 12483  12A4  00F4               	movwf	Insert@destLimit+1
 12484  12A5  0824               	movf	InsertString@destLimit,w
 12485  12A6  00F3               	movwf	Insert@destLimit
 12486  12A7  082A               	movf	InsertString@dest,w
 12487  12A8  3195  254F  3192   	fcall	_Insert
 12488  12AB  3001               	movlw	1
 12489  12AC  0020               	movlb	0	; select bank0
 12490  12AD  07A2               	addwf	InsertString@index,f
 12491  12AE  3000               	movlw	0
 12492  12AF  3DA3               	addwfc	InsertString@index+1,f
 12493                           
 12494                           ;main.c: 86:     }
 12495  12B0  3001               	movlw	1
 12496  12B1  07A8               	addwf	InsertString@i,f
 12497  12B2  3000               	movlw	0
 12498  12B3  3DA9               	addwfc	InsertString@i+1,f
 12499  12B4                     l3576:	
 12500  12B4  0829               	movf	InsertString@i+1,w
 12501  12B5  3A80               	xorlw	128
 12502  12B6  00FA               	movwf	??_InsertString
 12503  12B7  0827               	movf	InsertString@counti+1,w
 12504  12B8  3A80               	xorlw	128
 12505  12B9  027A               	subwf	??_InsertString,w
 12506  12BA  1D03               	skipz
 12507  12BB  2ABE               	goto	u3585
 12508  12BC  0826               	movf	InsertString@counti,w
 12509  12BD  0228               	subwf	InsertString@i,w
 12510  12BE                     u3585:	
 12511  12BE  1C03               	btfss	3,0
 12512  12BF  2A87               	goto	l3578
 12513  12C0                     l3580:	
 12514                           
 12515                           ;main.c: 87:     return index;
 12516  12C0  0020               	movlb	0	; select bank0
 12517  12C1  0823               	movf	InsertString@index+1,w
 12518  12C2  00A1               	movwf	?_InsertString+1
 12519  12C3  0822               	movf	InsertString@index,w
 12520  12C4  00A0               	movwf	?_InsertString
 12521  12C5  0008               	return
 12522  12C6                     __end_of_InsertString:	
 12523                           
 12524                           	psect	text28
 12525  154F                     __ptext28:	
 12526 ;; *************** function _Insert *****************
 12527 ;; Defined at:
 12528 ;;		line 55 in file "main.c"
 12529 ;; Parameters:    Size  Location     Type
 12530 ;;  dest            1    wreg     PTR unsigned char 
 12531 ;;		 -> message_end(73), message_start(70), 
 12532 ;;  src             1    0[COMMON] unsigned char 
 12533 ;;  index           2    1[COMMON] int 
 12534 ;;  destLimit       2    3[COMMON] int 
 12535 ;; Auto vars:     Size  Location     Type
 12536 ;;  dest            1    9[COMMON] PTR unsigned char 
 12537 ;;		 -> message_end(73), message_start(70), 
 12538 ;;  current         1    8[COMMON] unsigned char 
 12539 ;;  temp            1    7[COMMON] unsigned char 
 12540 ;; Return value:  Size  Location     Type
 12541 ;;                  2    0[COMMON] int 
 12542 ;; Registers used:
 12543 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12544 ;; Tracked objects:
 12545 ;;		On entry : 1D/2
 12546 ;;		On exit  : 0/0
 12547 ;;		Unchanged: 0/0
 12548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12549 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12550 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12551 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12552 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12553 ;;Total ram usage:       10 bytes
 12554 ;; Hardware stack levels used:    1
 12555 ;; Hardware stack levels required when called:    3
 12556 ;; This function calls:
 12557 ;;		Nothing
 12558 ;; This function is called by:
 12559 ;;		_InsertString
 12560 ;;		_main
 12561 ;; This function uses a non-reentrant model
 12562 ;;
 12563                           
 12564                           
 12565                           ;psect for function _Insert
 12566  154F                     _Insert:	
 12567                           
 12568                           ;incstack = 0
 12569                           ; Regs used in _Insert: [wreg+fsr1l+fsr1h+status,2+status,0]
 12570                           ;Insert@dest stored from wreg
 12571  154F  00F9               	movwf	Insert@dest
 12572                           
 12573                           ;main.c: 58:     temp = dest[index];
 12574  1550  0871               	movf	Insert@index,w
 12575  1551  0779               	addwf	Insert@dest,w
 12576  1552  00F5               	movwf	??_Insert
 12577  1553  0875               	movf	??_Insert,w
 12578  1554  0086               	movwf	6
 12579  1555  3002               	movlw	2	; select bank4/5
 12580  1556  0087               	movwf	7
 12581  1557  0801               	movf	1,w
 12582  1558  00F6               	movwf	??_Insert+1
 12583  1559  0876               	movf	??_Insert+1,w
 12584  155A  00F7               	movwf	Insert@temp
 12585                           
 12586                           ;main.c: 59:     dest[index] = src;
 12587  155B  0870               	movf	Insert@src,w
 12588  155C  00F5               	movwf	??_Insert
 12589  155D  0871               	movf	Insert@index,w
 12590  155E  0779               	addwf	Insert@dest,w
 12591  155F  00F6               	movwf	??_Insert+1
 12592  1560  0876               	movf	??_Insert+1,w
 12593  1561  0086               	movwf	6
 12594  1562  3002               	movlw	2	; select bank4/5
 12595  1563  0087               	movwf	7
 12596  1564  0875               	movf	??_Insert,w
 12597  1565  0081               	movwf	1
 12598                           
 12599                           ;main.c: 60:     if (dest[index + 1] == '\0')
 12600  1566  0871               	movf	Insert@index,w
 12601  1567  0779               	addwf	Insert@dest,w
 12602  1568  00F5               	movwf	??_Insert
 12603  1569  0A75               	incf	??_Insert,w
 12604  156A  0086               	movwf	6
 12605  156B  3002               	movlw	2	; select bank4/5
 12606  156C  0087               	movwf	7
 12607  156D  0801               	movf	1,w
 12608  156E  1D03               	btfss	3,2
 12609  156F  2D77               	goto	l3394
 12610                           
 12611                           ;main.c: 61:     {;main.c: 62:         return index + 1;
 12612  1570  0871               	movf	Insert@index,w
 12613  1571  3E01               	addlw	1
 12614  1572  00F0               	movwf	?_Insert
 12615  1573  3000               	movlw	0
 12616  1574  3D72               	addwfc	Insert@index+1,w
 12617  1575  00F1               	movwf	?_Insert+1
 12618  1576  0008               	return
 12619  1577                     l3394:	
 12620                           
 12621                           ;main.c: 64:     index++;
 12622  1577  3001               	movlw	1
 12623  1578  07F1               	addwf	Insert@index,f
 12624  1579  3000               	movlw	0
 12625  157A  3DF2               	addwfc	Insert@index+1,f
 12626  157B                     l3406:	
 12627                           ;main.c: 65:     while (index < destLimit)
 12628                           
 12629                           
 12630                           ;main.c: 65:     while (index < destLimit)
 12631  157B  0872               	movf	Insert@index+1,w
 12632  157C  3A80               	xorlw	128
 12633  157D  00F5               	movwf	??_Insert
 12634  157E  0874               	movf	Insert@destLimit+1,w
 12635  157F  3A80               	xorlw	128
 12636  1580  0275               	subwf	??_Insert,w
 12637  1581  1D03               	skipz
 12638  1582  2D85               	goto	u3285
 12639  1583  0873               	movf	Insert@destLimit,w
 12640  1584  0271               	subwf	Insert@index,w
 12641  1585                     u3285:	
 12642  1585  1803               	btfsc	3,0
 12643  1586  2DB3               	goto	l3408
 12644                           
 12645                           ;main.c: 66:     {;main.c: 67:         char current = dest[index];
 12646  1587  0871               	movf	Insert@index,w
 12647  1588  0779               	addwf	Insert@dest,w
 12648  1589  00F5               	movwf	??_Insert
 12649  158A  0875               	movf	??_Insert,w
 12650  158B  0086               	movwf	6
 12651  158C  3002               	movlw	2	; select bank4/5
 12652  158D  0087               	movwf	7
 12653  158E  0801               	movf	1,w
 12654  158F  00F6               	movwf	??_Insert+1
 12655  1590  0876               	movf	??_Insert+1,w
 12656  1591  00F8               	movwf	Insert@current
 12657                           
 12658                           ;main.c: 68:         dest[index] = temp;
 12659  1592  0877               	movf	Insert@temp,w
 12660  1593  00F5               	movwf	??_Insert
 12661  1594  0871               	movf	Insert@index,w
 12662  1595  0779               	addwf	Insert@dest,w
 12663  1596  00F6               	movwf	??_Insert+1
 12664  1597  0876               	movf	??_Insert+1,w
 12665  1598  0086               	movwf	6
 12666  1599  3002               	movlw	2	; select bank4/5
 12667  159A  0087               	movwf	7
 12668  159B  0875               	movf	??_Insert,w
 12669  159C  0081               	movwf	1
 12670                           
 12671                           ;main.c: 69:         temp = current;
 12672  159D  0878               	movf	Insert@current,w
 12673  159E  00F5               	movwf	??_Insert
 12674  159F  0875               	movf	??_Insert,w
 12675  15A0  00F7               	movwf	Insert@temp
 12676                           
 12677                           ;main.c: 70:         index++;
 12678  15A1  3001               	movlw	1
 12679  15A2  07F1               	addwf	Insert@index,f
 12680  15A3  3000               	movlw	0
 12681  15A4  3DF2               	addwfc	Insert@index+1,f
 12682                           
 12683                           ;main.c: 71:         if (current == '\0')
 12684  15A5  0878               	movf	Insert@current,w
 12685  15A6  1D03               	btfss	3,2
 12686  15A7  2D7B               	goto	l3406
 12687                           
 12688                           ;main.c: 72:         {;main.c: 73:             dest[index] = current;
 12689  15A8  0878               	movf	Insert@current,w
 12690  15A9  00F5               	movwf	??_Insert
 12691  15AA  0871               	movf	Insert@index,w
 12692  15AB  0779               	addwf	Insert@dest,w
 12693  15AC  00F6               	movwf	??_Insert+1
 12694  15AD  0876               	movf	??_Insert+1,w
 12695  15AE  0086               	movwf	6
 12696  15AF  3002               	movlw	2	; select bank4/5
 12697  15B0  0087               	movwf	7
 12698  15B1  0875               	movf	??_Insert,w
 12699  15B2  0081               	movwf	1
 12700  15B3                     l3408:	
 12701                           ;main.c: 74:             break;
 12702                           
 12703                           
 12704                           ;main.c: 77:     return index;
 12705  15B3  0871               	movf	Insert@index,w
 12706  15B4  00F0               	movwf	?_Insert
 12707  15B5  0872               	movf	Insert@index+1,w
 12708  15B6  00F1               	movwf	?_Insert+1
 12709  15B7  0008               	return
 12710  15B8                     __end_of_Insert:	
 12711                           
 12712                           	psect	text29
 12713  1B86                     __ptext29:	
 12714 ;; *************** function _InitTiming *****************
 12715 ;; Defined at:
 12716 ;;		line 11 in file "timing.c"
 12717 ;; Parameters:    Size  Location     Type
 12718 ;;		None
 12719 ;; Auto vars:     Size  Location     Type
 12720 ;;		None
 12721 ;; Return value:  Size  Location     Type
 12722 ;;                  1    wreg      void 
 12723 ;; Registers used:
 12724 ;;		wreg, status,2, status,0, pclath, cstack
 12725 ;; Tracked objects:
 12726 ;;		On entry : 1F/3
 12727 ;;		On exit  : 1F/2
 12728 ;;		Unchanged: 0/0
 12729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12733 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12734 ;;Total ram usage:        0 bytes
 12735 ;; Hardware stack levels used:    1
 12736 ;; Hardware stack levels required when called:    4
 12737 ;; This function calls:
 12738 ;;		_TMR0_SetInterruptHandler
 12739 ;; This function is called by:
 12740 ;;		_main
 12741 ;; This function uses a non-reentrant model
 12742 ;;
 12743                           
 12744                           
 12745                           ;psect for function _InitTiming
 12746  1B86                     _InitTiming:	
 12747                           
 12748                           ;timing.c: 13:     (INTCONbits.GIE = 1);
 12749                           
 12750                           ;incstack = 0
 12751                           ; Regs used in _InitTiming: [wreg+status,2+status,0+pclath+cstack]
 12752  1B86  178B               	bsf	11,7	;volatile
 12753                           
 12754                           ;timing.c: 14:     TMR0_SetInterruptHandler(TimerISR);
 12755  1B87  308E               	movlw	low _TimerISR
 12756  1B88  00F0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 12757  1B89  301B               	movlw	high _TimerISR
 12758  1B8A  00F1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 12759  1B8B  319B  2373         	fcall	_TMR0_SetInterruptHandler
 12760  1B8D  0008               	return
 12761  1B8E                     __end_of_InitTiming:	
 12762                           
 12763                           	psect	text30
 12764  1B73                     __ptext30:	
 12765 ;; *************** function _TMR0_SetInterruptHandler *****************
 12766 ;; Defined at:
 12767 ;;		line 125 in file "mcc_generated_files/tmr0.c"
 12768 ;; Parameters:    Size  Location     Type
 12769 ;;  InterruptHan    2    0[COMMON] PTR FTN()void 
 12770 ;;		 -> TimerISR(1), TMR0_DefaultInterruptHandler(1), 
 12771 ;; Auto vars:     Size  Location     Type
 12772 ;;		None
 12773 ;; Return value:  Size  Location     Type
 12774 ;;                  1    wreg      void 
 12775 ;; Registers used:
 12776 ;;		wreg
 12777 ;; Tracked objects:
 12778 ;;		On entry : 1E/2
 12779 ;;		On exit  : 1F/2
 12780 ;;		Unchanged: 0/0
 12781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12782 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12785 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12786 ;;Total ram usage:        2 bytes
 12787 ;; Hardware stack levels used:    1
 12788 ;; Hardware stack levels required when called:    3
 12789 ;; This function calls:
 12790 ;;		Nothing
 12791 ;; This function is called by:
 12792 ;;		_TMR0_Initialize
 12793 ;;		_InitTiming
 12794 ;; This function uses a non-reentrant model
 12795 ;;
 12796                           
 12797                           
 12798                           ;psect for function _TMR0_SetInterruptHandler
 12799  1B73                     _TMR0_SetInterruptHandler:	
 12800                           
 12801                           ;mcc_generated_files/tmr0.c: 126:     TMR0_InterruptHandler = InterruptHandler;
 12802                           
 12803                           ;incstack = 0
 12804                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
 12805  1B73  0871               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
 12806  1B74  0022               	movlb	2	; select bank2
 12807  1B75  00DF               	movwf	(_TMR0_InterruptHandler+1)^(0+256)
 12808  1B76  0870               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
 12809  1B77  00DE               	movwf	_TMR0_InterruptHandler^(0+256)
 12810  1B78  0008               	return
 12811  1B79                     __end_of_TMR0_SetInterruptHandler:	
 12812                           
 12813                           	psect	text31
 12814  1001                     __ptext31:	
 12815 ;; *************** function _ClearMessages *****************
 12816 ;; Defined at:
 12817 ;;		line 280 in file "main.c"
 12818 ;; Parameters:    Size  Location     Type
 12819 ;;		None
 12820 ;; Auto vars:     Size  Location     Type
 12821 ;;		None
 12822 ;; Return value:  Size  Location     Type
 12823 ;;                  1    wreg      void 
 12824 ;; Registers used:
 12825 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12826 ;; Tracked objects:
 12827 ;;		On entry : 0/2
 12828 ;;		On exit  : 0/0
 12829 ;;		Unchanged: 0/0
 12830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12831 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12834 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12835 ;;Total ram usage:        0 bytes
 12836 ;; Hardware stack levels used:    1
 12837 ;; Hardware stack levels required when called:    5
 12838 ;; This function calls:
 12839 ;;		_ClearString
 12840 ;; This function is called by:
 12841 ;;		_main
 12842 ;; This function uses a non-reentrant model
 12843 ;;
 12844                           
 12845                           
 12846                           ;psect for function _ClearMessages
 12847  1001                     _ClearMessages:	
 12848                           
 12849                           ;main.c: 282:     ClearString(messages[0]);
 12850                           
 12851                           ;incstack = 0
 12852                           ; Regs used in _ClearMessages: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12853  1001  0022               	movlb	2	; select bank2
 12854  1002  0861               	movf	_messages^(0+256),w
 12855  1003  00F5               	movwf	ClearString@str
 12856  1004  3002               	movlw	2
 12857  1005  00F6               	movwf	ClearString@str+1
 12858  1006  319C  24FF  3190   	fcall	_ClearString
 12859                           
 12860                           ;main.c: 283:     ClearString(messages[1]);
 12861  1009  0022               	movlb	2	; select bank2
 12862  100A  0862               	movf	(low ((_messages| (0+256)+1)))^0,w
 12863  100B  00F5               	movwf	ClearString@str
 12864  100C  3002               	movlw	2
 12865  100D  00F6               	movwf	ClearString@str+1
 12866  100E  319C  24FF         	fcall	_ClearString
 12867  1010  0008               	return
 12868  1011                     __end_of_ClearMessages:	
 12869                           
 12870                           	psect	text32
 12871  1CFF                     __ptext32:	
 12872 ;; *************** function _ClearString *****************
 12873 ;; Defined at:
 12874 ;;		line 25 in file "main.c"
 12875 ;; Parameters:    Size  Location     Type
 12876 ;;  str             2    5[COMMON] PTR unsigned char 
 12877 ;;		 -> main@convertedNumber(16), message_end(73), message_start(70), 
 12878 ;; Auto vars:     Size  Location     Type
 12879 ;;  i               2   10[COMMON] int 
 12880 ;;  counti          2    8[COMMON] int 
 12881 ;; Return value:  Size  Location     Type
 12882 ;;                  1    wreg      void 
 12883 ;; Registers used:
 12884 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12885 ;; Tracked objects:
 12886 ;;		On entry : 1F/2
 12887 ;;		On exit  : 0/0
 12888 ;;		Unchanged: 0/0
 12889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12890 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12891 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12892 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12893 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12894 ;;Total ram usage:        7 bytes
 12895 ;; Hardware stack levels used:    1
 12896 ;; Hardware stack levels required when called:    4
 12897 ;; This function calls:
 12898 ;;		_strlen
 12899 ;; This function is called by:
 12900 ;;		_ClearMessages
 12901 ;;		_main
 12902 ;; This function uses a non-reentrant model
 12903 ;;
 12904                           
 12905                           
 12906                           ;psect for function _ClearString
 12907  1CFF                     _ClearString:	
 12908                           
 12909                           ;main.c: 25: void ClearString(char* str);main.c: 26: {;main.c: 27:     for (int i = 0, c
      +                          ounti = strlen(str); i < counti; i++)
 12910                           
 12911                           ;incstack = 0
 12912                           ; Regs used in _ClearString: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12913  1CFF  01FA               	clrf	ClearString@i
 12914  1D00  01FB               	clrf	ClearString@i+1
 12915  1D01  0876               	movf	ClearString@str+1,w
 12916  1D02  00F1               	movwf	strlen@s+1
 12917  1D03  0875               	movf	ClearString@str,w
 12918  1D04  00F0               	movwf	strlen@s
 12919  1D05  319C  2419  319C   	fcall	_strlen
 12920  1D08  0871               	movf	?_strlen+1,w
 12921  1D09  00F9               	movwf	ClearString@counti+1
 12922  1D0A  0870               	movf	?_strlen,w
 12923  1D0B  00F8               	movwf	ClearString@counti
 12924  1D0C                     l4472:	
 12925  1D0C  087B               	movf	ClearString@i+1,w
 12926  1D0D  3A80               	xorlw	128
 12927  1D0E  00F7               	movwf	??_ClearString
 12928  1D0F  0879               	movf	ClearString@counti+1,w
 12929  1D10  3A80               	xorlw	128
 12930  1D11  0277               	subwf	??_ClearString,w
 12931  1D12  1D03               	skipz
 12932  1D13  2D16               	goto	u4745
 12933  1D14  0878               	movf	ClearString@counti,w
 12934  1D15  027A               	subwf	ClearString@i,w
 12935  1D16                     u4745:	
 12936  1D16  1803               	btfsc	3,0
 12937  1D17  0008               	return
 12938                           
 12939                           ;main.c: 28:     {;main.c: 29:         str[i] = '\0';
 12940  1D18  087A               	movf	ClearString@i,w
 12941  1D19  0775               	addwf	ClearString@str,w
 12942  1D1A  0086               	movwf	6
 12943  1D1B  087B               	movf	ClearString@i+1,w
 12944  1D1C  3D76               	addwfc	ClearString@str+1,w
 12945  1D1D  0087               	movwf	7
 12946  1D1E  0181               	clrf	1
 12947                           
 12948                           ;main.c: 30:     }
 12949  1D1F  3001               	movlw	1
 12950  1D20  07FA               	addwf	ClearString@i,f
 12951  1D21  3000               	movlw	0
 12952  1D22  3DFB               	addwfc	ClearString@i+1,f
 12953  1D23  2D0C               	goto	l4472
 12954  1D24                     __end_of_ClearString:	
 12955                           
 12956                           	psect	text33
 12957  1C19                     __ptext33:	
 12958 ;; *************** function _strlen *****************
 12959 ;; Defined at:
 12960 ;;		line 12 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\strlen.c"
 12961 ;; Parameters:    Size  Location     Type
 12962 ;;  s               2    0[COMMON] PTR const unsigned char 
 12963 ;;		 -> STR_2(3), checksum(6), STR_1(7), main@convertedNumber(16), 
 12964 ;;		 -> message_end(73), message_start(70), 
 12965 ;; Auto vars:     Size  Location     Type
 12966 ;;  a               2    3[COMMON] PTR const unsigned char 
 12967 ;;		 -> STR_2(3), checksum(6), STR_1(7), main@convertedNumber(16), 
 12968 ;;		 -> message_end(73), message_start(70), 
 12969 ;; Return value:  Size  Location     Type
 12970 ;;                  2    0[COMMON] unsigned int 
 12971 ;; Registers used:
 12972 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 12973 ;; Tracked objects:
 12974 ;;		On entry : 1D/2
 12975 ;;		On exit  : 1D/0
 12976 ;;		Unchanged: 1D/0
 12977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12978 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12979 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12980 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12981 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12982 ;;Total ram usage:        5 bytes
 12983 ;; Hardware stack levels used:    1
 12984 ;; Hardware stack levels required when called:    3
 12985 ;; This function calls:
 12986 ;;		Nothing
 12987 ;; This function is called by:
 12988 ;;		_ClearString
 12989 ;;		_InsertString
 12990 ;;		_ReverseString
 12991 ;;		_main
 12992 ;;		_crc16
 12993 ;;		_TransmitString
 12994 ;; This function uses a non-reentrant model
 12995 ;;
 12996                           
 12997                           
 12998                           ;psect for function _strlen
 12999  1C19                     _strlen:	
 13000                           
 13001                           ;incstack = 0
 13002                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
 13003  1C19  0871               	movf	strlen@s+1,w
 13004  1C1A  00F4               	movwf	strlen@a+1
 13005  1C1B  0870               	movf	strlen@s,w
 13006  1C1C  00F3               	movwf	strlen@a
 13007  1C1D                     l3154:	
 13008  1C1D  0870               	movf	strlen@s,w
 13009  1C1E  0084               	movwf	4
 13010  1C1F  0871               	movf	strlen@s+1,w
 13011  1C20  0085               	movwf	5
 13012  1C21  0012               	moviw fsr0++
 13013  1C22  1903               	btfsc	3,2
 13014  1C23  2C29               	goto	l3156
 13015  1C24  3001               	movlw	1
 13016  1C25  07F0               	addwf	strlen@s,f
 13017  1C26  3000               	movlw	0
 13018  1C27  3DF1               	addwfc	strlen@s+1,f
 13019  1C28  2C1D               	goto	l3154
 13020  1C29                     l3156:	
 13021  1C29  0873               	movf	strlen@a,w
 13022  1C2A  0270               	subwf	strlen@s,w
 13023  1C2B  00F0               	movwf	?_strlen
 13024  1C2C  0874               	movf	strlen@a+1,w
 13025  1C2D  3B71               	subwfb	strlen@s+1,w
 13026  1C2E  00F1               	movwf	?_strlen+1
 13027  1C2F  0008               	return
 13028  1C30                     __end_of_strlen:	
 13029                           
 13030                           	psect	text34
 13031  15B8                     __ptext34:	
 13032 ;; *************** function _BME280_Init *****************
 13033 ;; Defined at:
 13034 ;;		line 82 in file "bme280_i2c.c"
 13035 ;; Parameters:    Size  Location     Type
 13036 ;;		None
 13037 ;; Auto vars:     Size  Location     Type
 13038 ;;  settings_sel    1   16[BANK1 ] unsigned char 
 13039 ;;  rslt            1   17[BANK1 ] char 
 13040 ;; Return value:  Size  Location     Type
 13041 ;;                  1    wreg      void 
 13042 ;; Registers used:
 13043 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13044 ;; Tracked objects:
 13045 ;;		On entry : 1F/2
 13046 ;;		On exit  : 0/0
 13047 ;;		Unchanged: 0/0
 13048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13050 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 13051 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 13052 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 13053 ;;Total ram usage:        4 bytes
 13054 ;; Hardware stack levels used:    1
 13055 ;; Hardware stack levels required when called:   16
 13056 ;; This function calls:
 13057 ;;		_DebugAlert
 13058 ;;		_I2C_Init
 13059 ;;		_bme280_init
 13060 ;;		_bme280_set_sensor_mode
 13061 ;;		_bme280_set_sensor_settings
 13062 ;; This function is called by:
 13063 ;;		_main
 13064 ;; This function uses a non-reentrant model
 13065 ;;
 13066                           
 13067                           
 13068                           ;psect for function _BME280_Init
 13069  15B8                     _BME280_Init:	
 13070                           
 13071                           ;bme280_i2c.c: 84:     I2C_Init();
 13072                           
 13073                           ;incstack = 0
 13074 ;; hardware stack exceeded
 13075                           ; Regs used in _BME280_Init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13076  15B8  319B  23D8  3195   	fcall	_I2C_Init
 13077                           
 13078                           ;bme280_i2c.c: 88:     EnvSensor.dev_id = 0x76;
 13079  15BB  3076               	movlw	118
 13080  15BC  0021               	movlb	1	; select bank1
 13081  15BD  00AE               	movwf	??_BME280_Init^(0+128)
 13082  15BE  082E               	movf	??_BME280_Init^(0+128),w
 13083  15BF  0023               	movlb	3	; select bank3
 13084  15C0  00BB               	movwf	(_EnvSensor^(0+384)+1)
 13085                           
 13086                           ;bme280_i2c.c: 89:     EnvSensor.intf = BME280_I2C_INTF;
 13087  15C1  01BC               	clrf	(_EnvSensor^(0+384)+2)
 13088  15C2  0ABC               	incf	(_EnvSensor^(0+384)+2),f
 13089                           
 13090                           ;bme280_i2c.c: 90:     EnvSensor.read = ReadEnvSensor;
 13091  15C3  30B5               	movlw	low _ReadEnvSensor
 13092  15C4  00BD               	movwf	(low ((_EnvSensor| (0+256)+3)))^(0+128)
 13093  15C5  3007               	movlw	high _ReadEnvSensor
 13094  15C6  00BE               	movwf	((low ((_EnvSensor| (0+256)+3)))^(0+128)+1)
 13095                           
 13096                           ;bme280_i2c.c: 91:     EnvSensor.write = WriteEnvSensor;
 13097  15C7  307A               	movlw	low _WriteEnvSensor
 13098  15C8  00BF               	movwf	(low ((_EnvSensor| (0+256)+5)))^(0+128)
 13099  15C9  301E               	movlw	high _WriteEnvSensor
 13100  15CA  00C0               	movwf	((low ((_EnvSensor| (0+256)+5)))^(0+128)+1)
 13101                           
 13102                           ;bme280_i2c.c: 92:     EnvSensor.delay_ms = Sleep;
 13103  15CB  30CA               	movlw	low _Sleep
 13104  15CC  00C1               	movwf	(low ((_EnvSensor| (0+256)+7)))^(0+128)
 13105  15CD  301D               	movlw	high _Sleep
 13106  15CE  00C2               	movwf	((low ((_EnvSensor| (0+256)+7)))^(0+128)+1)
 13107                           
 13108                           ;bme280_i2c.c: 94:     rslt = bme280_init(&EnvSensor);
 13109  15CF  30BA               	movlw	(low (_EnvSensor| (0+256)))& (0+255)
 13110  15D0  3194  2480  3195   	fcall	_bme280_init
 13111  15D3  0021               	movlb	1	; select bank1
 13112  15D4  00AE               	movwf	??_BME280_Init^(0+128)
 13113  15D5  082E               	movf	??_BME280_Init^(0+128),w
 13114  15D6  00B1               	movwf	BME280_Init@rslt^(0+128)
 13115                           
 13116                           ;bme280_i2c.c: 96:     if (rslt == 0){
 13117  15D7  0831               	movf	BME280_Init@rslt^(0+128),w
 13118  15D8  1D03               	btfss	3,2
 13119  15D9  2E11               	goto	l4534
 13120                           
 13121                           ;bme280_i2c.c: 97:         uint8_t settings_sel;;bme280_i2c.c: 100:         EnvSensor.se
      +                          ttings.osr_h = 0x01;
 13122  15DA  0023               	movlb	3	; select bank3
 13123  15DB  01EA               	clrf	(_EnvSensor^(0+384)+48)
 13124  15DC  0AEA               	incf	(_EnvSensor^(0+384)+48),f
 13125                           
 13126                           ;bme280_i2c.c: 101:         EnvSensor.settings.osr_p = 0x05;
 13127  15DD  3005               	movlw	5
 13128  15DE  0021               	movlb	1	; select bank1
 13129  15DF  00AE               	movwf	??_BME280_Init^(0+128)
 13130  15E0  082E               	movf	??_BME280_Init^(0+128),w
 13131  15E1  0023               	movlb	3	; select bank3
 13132  15E2  00E8               	movwf	(_EnvSensor^(0+384)+46)
 13133                           
 13134                           ;bme280_i2c.c: 102:         EnvSensor.settings.osr_t = 0x02;
 13135  15E3  3002               	movlw	2
 13136  15E4  0021               	movlb	1	; select bank1
 13137  15E5  00AE               	movwf	??_BME280_Init^(0+128)
 13138  15E6  082E               	movf	??_BME280_Init^(0+128),w
 13139  15E7  0023               	movlb	3	; select bank3
 13140  15E8  00E9               	movwf	(_EnvSensor^(0+384)+47)
 13141                           
 13142                           ;bme280_i2c.c: 103:         EnvSensor.settings.filter = (0x04);
 13143  15E9  3004               	movlw	4
 13144  15EA  0021               	movlb	1	; select bank1
 13145  15EB  00AE               	movwf	??_BME280_Init^(0+128)
 13146  15EC  082E               	movf	??_BME280_Init^(0+128),w
 13147  15ED  0023               	movlb	3	; select bank3
 13148  15EE  00EB               	movwf	(_EnvSensor^(0+384)+49)
 13149                           
 13150                           ;bme280_i2c.c: 104:         EnvSensor.settings.standby_time = (0x01);
 13151  15EF  01EC               	clrf	(_EnvSensor^(0+384)+50)
 13152  15F0  0AEC               	incf	(_EnvSensor^(0+384)+50),f
 13153                           
 13154                           ;bme280_i2c.c: 106:         settings_sel = 1;
 13155  15F1  0021               	movlb	1	; select bank1
 13156  15F2  01B0               	clrf	BME280_Init@settings_sel^(0+128)
 13157  15F3  0AB0               	incf	BME280_Init@settings_sel^(0+128),f
 13158                           
 13159                           ;bme280_i2c.c: 107:         settings_sel |= 1 << 1;
 13160  15F4  14B0               	bsf	BME280_Init@settings_sel^(0+128),1
 13161                           
 13162                           ;bme280_i2c.c: 108:         settings_sel |= 1 << 2;
 13163  15F5  1530               	bsf	BME280_Init@settings_sel^(0+128),2
 13164                           
 13165                           ;bme280_i2c.c: 109:         settings_sel |= 1 << 4;
 13166  15F6  1630               	bsf	BME280_Init@settings_sel^(0+128),4
 13167                           
 13168                           ;bme280_i2c.c: 110:         settings_sel |= 1 << 3;
 13169  15F7  15B0               	bsf	BME280_Init@settings_sel^(0+128),3
 13170  15F8  30BA               	movlw	(low (_EnvSensor| (0+256)))& (0+255)
 13171  15F9  00AE               	movwf	??_BME280_Init^(0+128)
 13172  15FA  082E               	movf	??_BME280_Init^(0+128),w
 13173  15FB  0020               	movlb	0	; select bank0
 13174  15FC  00EC               	movwf	bme280_set_sensor_settings@dev
 13175  15FD  0021               	movlb	1	; select bank1
 13176  15FE  0830               	movf	BME280_Init@settings_sel^(0+128),w
 13177  15FF  3196  2623  3195   	fcall	_bme280_set_sensor_settings
 13178                           
 13179                           ;bme280_i2c.c: 112:         rslt = bme280_set_sensor_mode(0x03, &EnvSensor);
 13180  1602  30BA               	movlw	(low (_EnvSensor| (0+256)))& (0+255)
 13181  1603  00AE               	movwf	??_BME280_Init^(0+128)
 13182  1604  082E               	movf	??_BME280_Init^(0+128),w
 13183  1605  0020               	movlb	0	; select bank0
 13184  1606  00EC               	movwf	bme280_set_sensor_mode@dev
 13185  1607  3003               	movlw	3
 13186  1608  319F  2786  3195   	fcall	_bme280_set_sensor_mode
 13187  160B  00AF               	movwf	(??_BME280_Init+1)^(0+128)
 13188  160C  082F               	movf	(??_BME280_Init+1)^(0+128),w
 13189  160D  00B1               	movwf	BME280_Init@rslt^(0+128)
 13190                           
 13191                           ;bme280_i2c.c: 114:         if (rslt == 0)
 13192  160E  0831               	movf	BME280_Init@rslt^(0+128),w
 13193  160F  1903               	btfsc	3,2
 13194  1610  0008               	return
 13195  1611                     l4534:	
 13196                           
 13197                           ;bme280_i2c.c: 120:     DebugAlert(200, 200, 3);;
 13198  1611  30C8               	movlw	200
 13199  1612  0020               	movlb	0	; select bank0
 13200  1613  00A0               	movwf	DebugAlert@delay_high
 13201  1614  3000               	movlw	0
 13202  1615  00A1               	movwf	DebugAlert@delay_high+1
 13203  1616  30C8               	movlw	200
 13204  1617  00A2               	movwf	DebugAlert@delay_low
 13205  1618  3000               	movlw	0
 13206  1619  00A3               	movwf	DebugAlert@delay_low+1
 13207  161A  3003               	movlw	3
 13208  161B  0021               	movlb	1	; select bank1
 13209  161C  00AE               	movwf	??_BME280_Init^(0+128)
 13210  161D  082E               	movf	??_BME280_Init^(0+128),w
 13211  161E  0020               	movlb	0	; select bank0
 13212  161F  00A4               	movwf	DebugAlert@num_flashes
 13213  1620  319D  25F5         	fcall	_DebugAlert
 13214  1622  0008               	return
 13215  1623                     __end_of_BME280_Init:	
 13216                           
 13217                           	psect	text35
 13218  1623                     __ptext35:	
 13219 ;; *************** function _bme280_set_sensor_settings *****************
 13220 ;; Defined at:
 13221 ;;		line 511 in file "BME280_driver/bme280.c"
 13222 ;; Parameters:    Size  Location     Type
 13223 ;;  desired_sett    1    wreg     unsigned char 
 13224 ;;  dev             1   76[BANK0 ] PTR const struct bme280_
 13225 ;;		 -> EnvSensor(51), 
 13226 ;; Auto vars:     Size  Location     Type
 13227 ;;  desired_sett    1   11[BANK1 ] unsigned char 
 13228 ;;  rslt            1   13[BANK1 ] char 
 13229 ;;  sensor_mode     1   12[BANK1 ] unsigned char 
 13230 ;; Return value:  Size  Location     Type
 13231 ;;                  1    wreg      char 
 13232 ;; Registers used:
 13233 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13234 ;; Tracked objects:
 13235 ;;		On entry : 1F/1
 13236 ;;		On exit  : 1F/1
 13237 ;;		Unchanged: 0/0
 13238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13239 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13240 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 13241 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13242 ;;      Totals:         0       3       3       0       0       0       0       0       0       0       0       0       
      +0       0
 13243 ;;Total ram usage:        6 bytes
 13244 ;; Hardware stack levels used:    1
 13245 ;; Hardware stack levels required when called:   15
 13246 ;; This function calls:
 13247 ;;		_are_settings_changed
 13248 ;;		_bme280_get_sensor_mode
 13249 ;;		_null_ptr_check
 13250 ;;		_put_device_to_sleep
 13251 ;;		_set_filter_standby_settings
 13252 ;;		_set_osr_settings
 13253 ;; This function is called by:
 13254 ;;		_BME280_Init
 13255 ;; This function uses a non-reentrant model
 13256 ;;
 13257                           
 13258                           
 13259                           ;psect for function _bme280_set_sensor_settings
 13260  1623                     _bme280_set_sensor_settings:	
 13261                           
 13262                           ;incstack = 0
 13263 ;; hardware stack exceeded
 13264                           ; Regs used in _bme280_set_sensor_settings: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 13265                           ;bme280_set_sensor_settings@desired_settings stored from wreg
 13266  1623  00AB               	movwf	bme280_set_sensor_settings@desired_settings^(0+128)
 13267                           
 13268                           ;BME280_driver/bme280.c: 511: int8_t bme280_set_sensor_settings(uint8_t desired_settings
      +                          , const struct bme280_dev *dev);BME280_driver/bme280.c: 512: {;BME280_driver/bme280.c: 5
      +                          13:     int8_t rslt;;BME280_driver/bme280.c: 514:     uint8_t sensor_mode;;BME280_driver
      +                          /bme280.c: 517:     rslt = null_ptr_check(dev);
 13269  1624  0020               	movlb	0	; select bank0
 13270  1625  086C               	movf	bme280_set_sensor_settings@dev,w
 13271  1626  319C  24DA  3196   	fcall	_null_ptr_check
 13272  1629  00ED               	movwf	??_bme280_set_sensor_settings
 13273  162A  086D               	movf	??_bme280_set_sensor_settings,w
 13274  162B  0021               	movlb	1	; select bank1
 13275  162C  00AD               	movwf	bme280_set_sensor_settings@rslt^(0+128)
 13276                           
 13277                           ;BME280_driver/bme280.c: 520:     if (rslt == 0)
 13278  162D  082D               	movf	bme280_set_sensor_settings@rslt^(0+128),w
 13279  162E  1D03               	btfss	3,2
 13280  162F  2E8F               	goto	l4410
 13281                           
 13282                           ;BME280_driver/bme280.c: 521:     {;BME280_driver/bme280.c: 522:         rslt = bme280_g
      +                          et_sensor_mode(&sensor_mode, dev);
 13283  1630  0020               	movlb	0	; select bank0
 13284  1631  086C               	movf	bme280_set_sensor_settings@dev,w
 13285  1632  00ED               	movwf	??_bme280_set_sensor_settings
 13286  1633  086D               	movf	??_bme280_set_sensor_settings,w
 13287  1634  00C0               	movwf	bme280_get_sensor_mode@dev
 13288  1635  30AC               	movlw	(low (bme280_set_sensor_settings@sensor_mode| 0))& (0+255)
 13289  1636  319D  254C  3196   	fcall	_bme280_get_sensor_mode
 13290  1639  00EE               	movwf	??_bme280_set_sensor_settings+1
 13291  163A  086E               	movf	??_bme280_set_sensor_settings+1,w
 13292  163B  0021               	movlb	1	; select bank1
 13293  163C  00AD               	movwf	bme280_set_sensor_settings@rslt^(0+128)
 13294                           
 13295                           ;BME280_driver/bme280.c: 523:         if ((rslt == 0) && (sensor_mode != 0x00))
 13296  163D  082D               	movf	bme280_set_sensor_settings@rslt^(0+128),w
 13297  163E  1D03               	btfss	3,2
 13298  163F  2E4D               	goto	l4398
 13299  1640  082C               	movf	bme280_set_sensor_settings@sensor_mode^(0+128),w
 13300  1641  1903               	btfsc	3,2
 13301  1642  2E4D               	goto	l4398
 13302                           
 13303                           ;BME280_driver/bme280.c: 524:         {;BME280_driver/bme280.c: 525:             rslt = 
      +                          put_device_to_sleep(dev);
 13304  1643  0020               	movlb	0	; select bank0
 13305  1644  086C               	movf	bme280_set_sensor_settings@dev,w
 13306  1645  3190  2011  3196   	fcall	_put_device_to_sleep
 13307  1648  0020               	movlb	0	; select bank0
 13308  1649  00ED               	movwf	??_bme280_set_sensor_settings
 13309  164A  086D               	movf	??_bme280_set_sensor_settings,w
 13310  164B  0021               	movlb	1	; select bank1
 13311  164C  00AD               	movwf	bme280_set_sensor_settings@rslt^(0+128)
 13312  164D                     l4398:	
 13313                           
 13314                           ;BME280_driver/bme280.c: 527:         if (rslt == 0)
 13315  164D  082D               	movf	bme280_set_sensor_settings@rslt^(0+128),w
 13316  164E  1D03               	btfss	3,2
 13317  164F  2E8F               	goto	l4410
 13318                           
 13319                           ;BME280_driver/bme280.c: 528:         {;BME280_driver/bme280.c: 532:             if (are
      +                          _settings_changed(0x07, desired_settings))
 13320  1650  082B               	movf	bme280_set_sensor_settings@desired_settings^(0+128),w
 13321  1651  0020               	movlb	0	; select bank0
 13322  1652  00ED               	movwf	??_bme280_set_sensor_settings
 13323  1653  086D               	movf	??_bme280_set_sensor_settings,w
 13324  1654  00F0               	movwf	are_settings_changed@desired_settings
 13325  1655  3007               	movlw	7
 13326  1656  319B  2398  3196   	fcall	_are_settings_changed
 13327  1659  3A00               	xorlw	0
 13328  165A  1903               	skipnz
 13329  165B  2E6E               	goto	l4404
 13330                           
 13331                           ;BME280_driver/bme280.c: 533:             {;BME280_driver/bme280.c: 534:                
      +                           rslt = set_osr_settings(desired_settings, &dev->settings, dev);
 13332  165C  086C               	movf	bme280_set_sensor_settings@dev,w
 13333  165D  3E2E               	addlw	46
 13334  165E  00DD               	movwf	set_osr_settings@settings
 13335  165F  3001               	movlw	1
 13336  1660  00DE               	movwf	set_osr_settings@settings+1
 13337  1661  086C               	movf	bme280_set_sensor_settings@dev,w
 13338  1662  00ED               	movwf	??_bme280_set_sensor_settings
 13339  1663  086D               	movf	??_bme280_set_sensor_settings,w
 13340  1664  00DF               	movwf	set_osr_settings@dev
 13341  1665  0021               	movlb	1	; select bank1
 13342  1666  082B               	movf	bme280_set_sensor_settings@desired_settings^(0+128),w
 13343  1667  319D  2524  3196   	fcall	_set_osr_settings
 13344  166A  00EE               	movwf	??_bme280_set_sensor_settings+1
 13345  166B  086E               	movf	??_bme280_set_sensor_settings+1,w
 13346  166C  0021               	movlb	1	; select bank1
 13347  166D  00AD               	movwf	bme280_set_sensor_settings@rslt^(0+128)
 13348  166E                     l4404:	
 13349                           
 13350                           ;BME280_driver/bme280.c: 540:             if ((rslt == 0) && are_settings_changed(0x18, 
      +                          desired_settings))
 13351  166E  0021               	movlb	1	; select bank1
 13352  166F  082D               	movf	bme280_set_sensor_settings@rslt^(0+128),w
 13353  1670  1D03               	btfss	3,2
 13354  1671  2E8F               	goto	l4410
 13355  1672  082B               	movf	bme280_set_sensor_settings@desired_settings^(0+128),w
 13356  1673  0020               	movlb	0	; select bank0
 13357  1674  00ED               	movwf	??_bme280_set_sensor_settings
 13358  1675  086D               	movf	??_bme280_set_sensor_settings,w
 13359  1676  00F0               	movwf	are_settings_changed@desired_settings
 13360  1677  3018               	movlw	24
 13361  1678  319B  2398  3196   	fcall	_are_settings_changed
 13362  167B  3A00               	xorlw	0
 13363  167C  1903               	skipnz
 13364  167D  2E8F               	goto	l4410
 13365                           
 13366                           ;BME280_driver/bme280.c: 541:             {;BME280_driver/bme280.c: 542:                
      +                           rslt = set_filter_standby_settings(desired_settings, &dev->settings, dev);
 13367  167E  086C               	movf	bme280_set_sensor_settings@dev,w
 13368  167F  3E2E               	addlw	46
 13369  1680  00D3               	movwf	set_filter_standby_settings@settings
 13370  1681  3001               	movlw	1
 13371  1682  00D4               	movwf	set_filter_standby_settings@settings+1
 13372  1683  086C               	movf	bme280_set_sensor_settings@dev,w
 13373  1684  00ED               	movwf	??_bme280_set_sensor_settings
 13374  1685  086D               	movf	??_bme280_set_sensor_settings,w
 13375  1686  00D5               	movwf	set_filter_standby_settings@dev
 13376  1687  0021               	movlb	1	; select bank1
 13377  1688  082B               	movf	bme280_set_sensor_settings@desired_settings^(0+128),w
 13378  1689  3190  20D2         	fcall	_set_filter_standby_settings
 13379  168B  00EE               	movwf	??_bme280_set_sensor_settings+1
 13380  168C  086E               	movf	??_bme280_set_sensor_settings+1,w
 13381  168D  0021               	movlb	1	; select bank1
 13382  168E  00AD               	movwf	bme280_set_sensor_settings@rslt^(0+128)
 13383  168F                     l4410:	
 13384                           
 13385                           ;BME280_driver/bme280.c: 547:     return rslt;
 13386  168F  0021               	movlb	1	; select bank1
 13387  1690  082D               	movf	bme280_set_sensor_settings@rslt^(0+128),w
 13388  1691  0008               	return
 13389  1692                     __end_of_bme280_set_sensor_settings:	
 13390                           
 13391                           	psect	text36
 13392  1B98                     __ptext36:	
 13393 ;; *************** function _are_settings_changed *****************
 13394 ;; Defined at:
 13395 ;;		line 1404 in file "BME280_driver/bme280.c"
 13396 ;; Parameters:    Size  Location     Type
 13397 ;;  sub_settings    1    wreg     unsigned char 
 13398 ;;  desired_sett    1    0[COMMON] unsigned char 
 13399 ;; Auto vars:     Size  Location     Type
 13400 ;;  sub_settings    1    1[COMMON] unsigned char 
 13401 ;;  settings_cha    1    2[COMMON] unsigned char 
 13402 ;; Return value:  Size  Location     Type
 13403 ;;                  1    wreg      unsigned char 
 13404 ;; Registers used:
 13405 ;;		wreg, status,2, status,0
 13406 ;; Tracked objects:
 13407 ;;		On entry : 1F/0
 13408 ;;		On exit  : 1F/0
 13409 ;;		Unchanged: 1F/0
 13410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13411 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13412 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13414 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13415 ;;Total ram usage:        3 bytes
 13416 ;; Hardware stack levels used:    1
 13417 ;; Hardware stack levels required when called:    3
 13418 ;; This function calls:
 13419 ;;		Nothing
 13420 ;; This function is called by:
 13421 ;;		_bme280_set_sensor_settings
 13422 ;; This function uses a non-reentrant model
 13423 ;;
 13424                           
 13425                           
 13426                           ;psect for function _are_settings_changed
 13427  1B98                     _are_settings_changed:	
 13428                           
 13429                           ;incstack = 0
 13430                           ; Regs used in _are_settings_changed: [wreg+status,2+status,0]
 13431                           ;are_settings_changed@sub_settings stored from wreg
 13432  1B98  00F1               	movwf	are_settings_changed@sub_settings
 13433                           
 13434                           ;BME280_driver/bme280.c: 1408:     if (sub_settings & desired_settings)
 13435  1B99  0871               	movf	are_settings_changed@sub_settings,w
 13436  1B9A  0570               	andwf	are_settings_changed@desired_settings,w
 13437  1B9B  1903               	btfsc	3,2
 13438  1B9C  2BA0               	goto	l4202
 13439                           
 13440                           ;BME280_driver/bme280.c: 1409:     {;BME280_driver/bme280.c: 1411:         settings_chan
      +                          ged = 1;
 13441  1B9D  01F2               	clrf	are_settings_changed@settings_changed
 13442  1B9E  0AF2               	incf	are_settings_changed@settings_changed,f
 13443                           
 13444                           ;BME280_driver/bme280.c: 1412:     }
 13445  1B9F  2BA1               	goto	l4204
 13446  1BA0                     l4202:	
 13447                           
 13448                           ;BME280_driver/bme280.c: 1414:     {;BME280_driver/bme280.c: 1416:         settings_chan
      +                          ged = 0;
 13449  1BA0  01F2               	clrf	are_settings_changed@settings_changed
 13450  1BA1                     l4204:	
 13451                           
 13452                           ;BME280_driver/bme280.c: 1419:     return settings_changed;
 13453  1BA1  0872               	movf	are_settings_changed@settings_changed,w
 13454  1BA2  0008               	return
 13455  1BA3                     __end_of_are_settings_changed:	
 13456                           
 13457                           	psect	text37
 13458  1F86                     __ptext37:	
 13459 ;; *************** function _bme280_set_sensor_mode *****************
 13460 ;; Defined at:
 13461 ;;		line 578 in file "BME280_driver/bme280.c"
 13462 ;; Parameters:    Size  Location     Type
 13463 ;;  sensor_mode     1    wreg     unsigned char 
 13464 ;;  dev             1   76[BANK0 ] PTR const struct bme280_
 13465 ;;		 -> EnvSensor(51), 
 13466 ;; Auto vars:     Size  Location     Type
 13467 ;;  sensor_mode     1   11[BANK1 ] unsigned char 
 13468 ;;  rslt            1   13[BANK1 ] char 
 13469 ;;  last_set_mod    1   12[BANK1 ] unsigned char 
 13470 ;; Return value:  Size  Location     Type
 13471 ;;                  1    wreg      char 
 13472 ;; Registers used:
 13473 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13474 ;; Tracked objects:
 13475 ;;		On entry : 1F/0
 13476 ;;		On exit  : 1F/1
 13477 ;;		Unchanged: 0/0
 13478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13479 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13480 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 13481 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13482 ;;      Totals:         0       3       3       0       0       0       0       0       0       0       0       0       
      +0       0
 13483 ;;Total ram usage:        6 bytes
 13484 ;; Hardware stack levels used:    1
 13485 ;; Hardware stack levels required when called:   15
 13486 ;; This function calls:
 13487 ;;		_bme280_get_sensor_mode
 13488 ;;		_null_ptr_check
 13489 ;;		_put_device_to_sleep
 13490 ;;		_write_power_mode
 13491 ;; This function is called by:
 13492 ;;		_BME280_Init
 13493 ;; This function uses a non-reentrant model
 13494 ;;
 13495                           
 13496                           
 13497                           ;psect for function _bme280_set_sensor_mode
 13498  1F86                     _bme280_set_sensor_mode:	
 13499                           
 13500                           ;incstack = 0
 13501 ;; hardware stack exceeded
 13502                           ; Regs used in _bme280_set_sensor_mode: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
 13503                           ;bme280_set_sensor_mode@sensor_mode stored from wreg
 13504  1F86  0021               	movlb	1	; select bank1
 13505  1F87  00AB               	movwf	bme280_set_sensor_mode@sensor_mode^(0+128)
 13506                           
 13507                           ;BME280_driver/bme280.c: 578: int8_t bme280_set_sensor_mode(uint8_t sensor_mode, const s
      +                          truct bme280_dev *dev);BME280_driver/bme280.c: 579: {;BME280_driver/bme280.c: 580:     i
      +                          nt8_t rslt;;BME280_driver/bme280.c: 581:     uint8_t last_set_mode;;BME280_driver/bme280
      +                          .c: 584:     rslt = null_ptr_check(dev);
 13508  1F88  0020               	movlb	0	; select bank0
 13509  1F89  086C               	movf	bme280_set_sensor_mode@dev,w
 13510  1F8A  319C  24DA  319F   	fcall	_null_ptr_check
 13511  1F8D  00ED               	movwf	??_bme280_set_sensor_mode
 13512  1F8E  086D               	movf	??_bme280_set_sensor_mode,w
 13513  1F8F  0021               	movlb	1	; select bank1
 13514  1F90  00AD               	movwf	bme280_set_sensor_mode@rslt^(0+128)
 13515                           
 13516                           ;BME280_driver/bme280.c: 585:     if (rslt == 0)
 13517  1F91  082D               	movf	bme280_set_sensor_mode@rslt^(0+128),w
 13518  1F92  1D03               	btfss	3,2
 13519  1F93  2FC1               	goto	l4430
 13520                           
 13521                           ;BME280_driver/bme280.c: 586:     {;BME280_driver/bme280.c: 587:         rslt = bme280_g
      +                          et_sensor_mode(&last_set_mode, dev);
 13522  1F94  0020               	movlb	0	; select bank0
 13523  1F95  086C               	movf	bme280_set_sensor_mode@dev,w
 13524  1F96  00ED               	movwf	??_bme280_set_sensor_mode
 13525  1F97  086D               	movf	??_bme280_set_sensor_mode,w
 13526  1F98  00C0               	movwf	bme280_get_sensor_mode@dev
 13527  1F99  30AC               	movlw	(low (bme280_set_sensor_mode@last_set_mode| 0))& (0+255)
 13528  1F9A  319D  254C  319F   	fcall	_bme280_get_sensor_mode
 13529  1F9D  00EE               	movwf	??_bme280_set_sensor_mode+1
 13530  1F9E  086E               	movf	??_bme280_set_sensor_mode+1,w
 13531  1F9F  0021               	movlb	1	; select bank1
 13532  1FA0  00AD               	movwf	bme280_set_sensor_mode@rslt^(0+128)
 13533                           
 13534                           ;BME280_driver/bme280.c: 592:         if ((rslt == 0) && (last_set_mode != 0x00))
 13535  1FA1  082D               	movf	bme280_set_sensor_mode@rslt^(0+128),w
 13536  1FA2  1D03               	btfss	3,2
 13537  1FA3  2FB1               	goto	l4426
 13538  1FA4  082C               	movf	bme280_set_sensor_mode@last_set_mode^(0+128),w
 13539  1FA5  1903               	btfsc	3,2
 13540  1FA6  2FB1               	goto	l4426
 13541                           
 13542                           ;BME280_driver/bme280.c: 593:         {;BME280_driver/bme280.c: 594:             rslt = 
      +                          put_device_to_sleep(dev);
 13543  1FA7  0020               	movlb	0	; select bank0
 13544  1FA8  086C               	movf	bme280_set_sensor_mode@dev,w
 13545  1FA9  3190  2011  319F   	fcall	_put_device_to_sleep
 13546  1FAC  0020               	movlb	0	; select bank0
 13547  1FAD  00ED               	movwf	??_bme280_set_sensor_mode
 13548  1FAE  086D               	movf	??_bme280_set_sensor_mode,w
 13549  1FAF  0021               	movlb	1	; select bank1
 13550  1FB0  00AD               	movwf	bme280_set_sensor_mode@rslt^(0+128)
 13551  1FB1                     l4426:	
 13552                           
 13553                           ;BME280_driver/bme280.c: 598:         if (rslt == 0)
 13554  1FB1  082D               	movf	bme280_set_sensor_mode@rslt^(0+128),w
 13555  1FB2  1D03               	btfss	3,2
 13556  1FB3  2FC1               	goto	l4430
 13557                           
 13558                           ;BME280_driver/bme280.c: 599:         {;BME280_driver/bme280.c: 600:             rslt = 
      +                          write_power_mode(sensor_mode, dev);
 13559  1FB4  0020               	movlb	0	; select bank0
 13560  1FB5  086C               	movf	bme280_set_sensor_mode@dev,w
 13561  1FB6  00ED               	movwf	??_bme280_set_sensor_mode
 13562  1FB7  086D               	movf	??_bme280_set_sensor_mode,w
 13563  1FB8  00D3               	movwf	write_power_mode@dev
 13564  1FB9  0021               	movlb	1	; select bank1
 13565  1FBA  082B               	movf	bme280_set_sensor_mode@sensor_mode^(0+128),w
 13566  1FBB  319E  26D8         	fcall	_write_power_mode
 13567  1FBD  00EE               	movwf	??_bme280_set_sensor_mode+1
 13568  1FBE  086E               	movf	??_bme280_set_sensor_mode+1,w
 13569  1FBF  0021               	movlb	1	; select bank1
 13570  1FC0  00AD               	movwf	bme280_set_sensor_mode@rslt^(0+128)
 13571  1FC1                     l4430:	
 13572                           
 13573                           ;BME280_driver/bme280.c: 604:     return rslt;
 13574  1FC1  082D               	movf	bme280_set_sensor_mode@rslt^(0+128),w
 13575  1FC2  0008               	return
 13576  1FC3                     __end_of_bme280_set_sensor_mode:	
 13577                           
 13578                           	psect	text38
 13579  1ED8                     __ptext38:	
 13580 ;; *************** function _write_power_mode *****************
 13581 ;; Defined at:
 13582 ;;		line 941 in file "BME280_driver/bme280.c"
 13583 ;; Parameters:    Size  Location     Type
 13584 ;;  sensor_mode     1    wreg     unsigned char 
 13585 ;;  dev             1   51[BANK0 ] PTR const struct bme280_
 13586 ;;		 -> EnvSensor(51), 
 13587 ;; Auto vars:     Size  Location     Type
 13588 ;;  sensor_mode     1   55[BANK0 ] unsigned char 
 13589 ;;  sensor_mode_    1   58[BANK0 ] unsigned char 
 13590 ;;  reg_addr        1   57[BANK0 ] unsigned char 
 13591 ;;  rslt            1   56[BANK0 ] char 
 13592 ;; Return value:  Size  Location     Type
 13593 ;;                  1    wreg      char 
 13594 ;; Registers used:
 13595 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13596 ;; Tracked objects:
 13597 ;;		On entry : 1F/1
 13598 ;;		On exit  : 1F/0
 13599 ;;		Unchanged: 0/0
 13600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13601 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13602 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13603 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13604 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13605 ;;Total ram usage:        8 bytes
 13606 ;; Hardware stack levels used:    1
 13607 ;; Hardware stack levels required when called:   11
 13608 ;; This function calls:
 13609 ;;		_bme280_get_regs
 13610 ;;		_bme280_set_regs
 13611 ;; This function is called by:
 13612 ;;		_bme280_set_sensor_mode
 13613 ;; This function uses a non-reentrant model
 13614 ;;
 13615                           
 13616                           
 13617                           ;psect for function _write_power_mode
 13618  1ED8                     _write_power_mode:	
 13619                           
 13620                           ;incstack = 0
 13621                           ; Regs used in _write_power_mode: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13622                           ;write_power_mode@sensor_mode stored from wreg
 13623  1ED8  0020               	movlb	0	; select bank0
 13624  1ED9  00D7               	movwf	write_power_mode@sensor_mode
 13625                           
 13626                           ;BME280_driver/bme280.c: 941: static int8_t write_power_mode(uint8_t sensor_mode, const 
      +                          struct bme280_dev *dev);BME280_driver/bme280.c: 942: {;BME280_driver/bme280.c: 943:     
      +                          int8_t rslt;;BME280_driver/bme280.c: 944:     uint8_t reg_addr = 0xF4;
 13627  1EDA  30F4               	movlw	244
 13628  1EDB  00D4               	movwf	??_write_power_mode
 13629  1EDC  0854               	movf	??_write_power_mode,w
 13630  1EDD  00D9               	movwf	write_power_mode@reg_addr
 13631                           
 13632                           ;BME280_driver/bme280.c: 947:     uint8_t sensor_mode_reg_val;;BME280_driver/bme280.c: 9
      +                          50:     rslt = bme280_get_regs(reg_addr, &sensor_mode_reg_val, 1, dev);
 13633  1EDE  305A               	movlw	(low (write_power_mode@sensor_mode_reg_val| 0))& (0+255)
 13634  1EDF  00D4               	movwf	??_write_power_mode
 13635  1EE0  0854               	movf	??_write_power_mode,w
 13636  1EE1  00B7               	movwf	bme280_get_regs@reg_data
 13637  1EE2  3001               	movlw	1
 13638  1EE3  00B8               	movwf	bme280_get_regs@len
 13639  1EE4  3000               	movlw	0
 13640  1EE5  00B9               	movwf	bme280_get_regs@len+1
 13641  1EE6  0853               	movf	write_power_mode@dev,w
 13642  1EE7  00D5               	movwf	??_write_power_mode+1
 13643  1EE8  0855               	movf	??_write_power_mode+1,w
 13644  1EE9  00BA               	movwf	bme280_get_regs@dev
 13645  1EEA  0859               	movf	write_power_mode@reg_addr,w
 13646  1EEB  3190  2050  319E   	fcall	_bme280_get_regs
 13647  1EEE  00D6               	movwf	??_write_power_mode+2
 13648  1EEF  0856               	movf	??_write_power_mode+2,w
 13649  1EF0  00D8               	movwf	write_power_mode@rslt
 13650                           
 13651                           ;BME280_driver/bme280.c: 953:     if (rslt == 0)
 13652  1EF1  0858               	movf	write_power_mode@rslt,w
 13653  1EF2  1D03               	btfss	3,2
 13654  1EF3  2F0D               	goto	l4218
 13655                           
 13656                           ;BME280_driver/bme280.c: 954:     {;BME280_driver/bme280.c: 955:         sensor_mode_reg
      +                          _val = ((sensor_mode_reg_val & ~( 0x03)) | (sensor_mode & 0x03));
 13657  1EF4  3003               	movlw	3
 13658  1EF5  0557               	andwf	write_power_mode@sensor_mode,w
 13659  1EF6  00D4               	movwf	??_write_power_mode
 13660  1EF7  085A               	movf	write_power_mode@sensor_mode_reg_val,w
 13661  1EF8  39FC               	andlw	252
 13662  1EF9  0454               	iorwf	??_write_power_mode,w
 13663  1EFA  00D5               	movwf	??_write_power_mode+1
 13664  1EFB  0855               	movf	??_write_power_mode+1,w
 13665  1EFC  00DA               	movwf	write_power_mode@sensor_mode_reg_val
 13666                           
 13667                           ;BME280_driver/bme280.c: 958:         rslt = bme280_set_regs(&reg_addr, &sensor_mode_reg
      +                          _val, 1, dev);
 13668  1EFD  305A               	movlw	(low (write_power_mode@sensor_mode_reg_val| 0))& (0+255)
 13669  1EFE  00D4               	movwf	??_write_power_mode
 13670  1EFF  0854               	movf	??_write_power_mode,w
 13671  1F00  00B4               	movwf	bme280_set_regs@reg_data
 13672  1F01  01B5               	clrf	bme280_set_regs@len
 13673  1F02  0AB5               	incf	bme280_set_regs@len,f
 13674  1F03  0853               	movf	write_power_mode@dev,w
 13675  1F04  00D5               	movwf	??_write_power_mode+1
 13676  1F05  0855               	movf	??_write_power_mode+1,w
 13677  1F06  00B6               	movwf	bme280_set_regs@dev
 13678  1F07  3059               	movlw	(low (write_power_mode@reg_addr| 0))& (0+255)
 13679  1F08  3188  20EE         	fcall	_bme280_set_regs
 13680  1F0A  00D6               	movwf	??_write_power_mode+2
 13681  1F0B  0856               	movf	??_write_power_mode+2,w
 13682  1F0C  00D8               	movwf	write_power_mode@rslt
 13683  1F0D                     l4218:	
 13684                           
 13685                           ;BME280_driver/bme280.c: 961:     return rslt;
 13686  1F0D  0858               	movf	write_power_mode@rslt,w
 13687  1F0E  0008               	return
 13688  1F0F                     __end_of_write_power_mode:	
 13689                           
 13690                           	psect	text39
 13691  1011                     __ptext39:	
 13692 ;; *************** function _put_device_to_sleep *****************
 13693 ;; Defined at:
 13694 ;;		line 967 in file "BME280_driver/bme280.c"
 13695 ;; Parameters:    Size  Location     Type
 13696 ;;  dev             1    wreg     PTR const struct bme280_
 13697 ;;		 -> EnvSensor(51), 
 13698 ;; Auto vars:     Size  Location     Type
 13699 ;;  dev             1    5[BANK1 ] PTR const struct bme280_
 13700 ;;		 -> EnvSensor(51), 
 13701 ;;  settings        5    6[BANK1 ] struct bme280_settings
 13702 ;;  reg_data        4    0[BANK1 ] unsigned char [4]
 13703 ;;  rslt            1    4[BANK1 ] char 
 13704 ;; Return value:  Size  Location     Type
 13705 ;;                  1    wreg      char 
 13706 ;; Registers used:
 13707 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13708 ;; Tracked objects:
 13709 ;;		On entry : 1F/0
 13710 ;;		On exit  : 1F/1
 13711 ;;		Unchanged: 0/0
 13712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13714 ;;      Locals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0
 13715 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13716 ;;      Totals:         0       3      11       0       0       0       0       0       0       0       0       0       
      +0       0
 13717 ;;Total ram usage:       14 bytes
 13718 ;; Hardware stack levels used:    1
 13719 ;; Hardware stack levels required when called:   14
 13720 ;; This function calls:
 13721 ;;		_bme280_get_regs
 13722 ;;		_bme280_soft_reset
 13723 ;;		_parse_device_settings
 13724 ;;		_reload_device_settings
 13725 ;; This function is called by:
 13726 ;;		_bme280_set_sensor_settings
 13727 ;;		_bme280_set_sensor_mode
 13728 ;; This function uses a non-reentrant model
 13729 ;;
 13730                           
 13731                           
 13732                           ;psect for function _put_device_to_sleep
 13733  1011                     _put_device_to_sleep:	
 13734                           
 13735                           ;incstack = 0
 13736 ;; hardware stack exceeded
 13737                           ; Regs used in _put_device_to_sleep: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13738                           ;put_device_to_sleep@dev stored from wreg
 13739  1011  0021               	movlb	1	; select bank1
 13740  1012  00A5               	movwf	put_device_to_sleep@dev^(0+128)
 13741                           
 13742                           ;BME280_driver/bme280.c: 967: static int8_t put_device_to_sleep(const struct bme280_dev 
      +                          *dev);BME280_driver/bme280.c: 968: {;BME280_driver/bme280.c: 969:     int8_t rslt;;BME28
      +                          0_driver/bme280.c: 970:     uint8_t reg_data[4];;BME280_driver/bme280.c: 971:     struct
      +                           bme280_settings settings;;BME280_driver/bme280.c: 973:     rslt = bme280_get_regs(0xF2,
      +                           reg_data, 4, dev);
 13743  1013  30A0               	movlw	(low (put_device_to_sleep@reg_data| 0))& (0+255)
 13744  1014  0020               	movlb	0	; select bank0
 13745  1015  00E9               	movwf	??_put_device_to_sleep
 13746  1016  0869               	movf	??_put_device_to_sleep,w
 13747  1017  00B7               	movwf	bme280_get_regs@reg_data
 13748  1018  3004               	movlw	4
 13749  1019  00B8               	movwf	bme280_get_regs@len
 13750  101A  3000               	movlw	0
 13751  101B  00B9               	movwf	bme280_get_regs@len+1
 13752  101C  0021               	movlb	1	; select bank1
 13753  101D  0825               	movf	put_device_to_sleep@dev^(0+128),w
 13754  101E  0020               	movlb	0	; select bank0
 13755  101F  00EA               	movwf	??_put_device_to_sleep+1
 13756  1020  086A               	movf	??_put_device_to_sleep+1,w
 13757  1021  00BA               	movwf	bme280_get_regs@dev
 13758  1022  30F2               	movlw	242
 13759  1023  3190  2050  3190   	fcall	_bme280_get_regs
 13760  1026  00EB               	movwf	??_put_device_to_sleep+2
 13761  1027  086B               	movf	??_put_device_to_sleep+2,w
 13762  1028  0021               	movlb	1	; select bank1
 13763  1029  00A4               	movwf	put_device_to_sleep@rslt^(0+128)
 13764                           
 13765                           ;BME280_driver/bme280.c: 974:     if (rslt == 0)
 13766  102A  0824               	movf	put_device_to_sleep@rslt^(0+128),w
 13767  102B  1D03               	btfss	3,2
 13768  102C  284E               	goto	l4192
 13769                           
 13770                           ;BME280_driver/bme280.c: 975:     {;BME280_driver/bme280.c: 976:         parse_device_se
      +                          ttings(reg_data, &settings);
 13771  102D  30A6               	movlw	(low (put_device_to_sleep@settings| 0))& (0+255)
 13772  102E  0020               	movlb	0	; select bank0
 13773  102F  00E9               	movwf	??_put_device_to_sleep
 13774  1030  0869               	movf	??_put_device_to_sleep,w
 13775  1031  00F0               	movwf	parse_device_settings@settings
 13776  1032  30A0               	movlw	(low (put_device_to_sleep@reg_data| 0))& (0+255)
 13777  1033  3193  2369  3190   	fcall	_parse_device_settings
 13778                           
 13779                           ;BME280_driver/bme280.c: 977:         rslt = bme280_soft_reset(dev);
 13780  1036  0021               	movlb	1	; select bank1
 13781  1037  0825               	movf	put_device_to_sleep@dev^(0+128),w
 13782  1038  319F  270F  3190   	fcall	_bme280_soft_reset
 13783  103B  00E9               	movwf	??_put_device_to_sleep
 13784  103C  0869               	movf	??_put_device_to_sleep,w
 13785  103D  0021               	movlb	1	; select bank1
 13786  103E  00A4               	movwf	put_device_to_sleep@rslt^(0+128)
 13787                           
 13788                           ;BME280_driver/bme280.c: 978:         if (rslt == 0)
 13789  103F  0824               	movf	put_device_to_sleep@rslt^(0+128),w
 13790  1040  1D03               	btfss	3,2
 13791  1041  284E               	goto	l4192
 13792                           
 13793                           ;BME280_driver/bme280.c: 979:         {;BME280_driver/bme280.c: 980:             rslt = 
      +                          reload_device_settings(&settings, dev);
 13794  1042  0825               	movf	put_device_to_sleep@dev^(0+128),w
 13795  1043  0020               	movlb	0	; select bank0
 13796  1044  00E9               	movwf	??_put_device_to_sleep
 13797  1045  0869               	movf	??_put_device_to_sleep,w
 13798  1046  00E4               	movwf	reload_device_settings@dev
 13799  1047  30A6               	movlw	(low (put_device_to_sleep@settings| 0))& (0+255)
 13800  1048  319C  24B7         	fcall	_reload_device_settings
 13801  104A  00EA               	movwf	??_put_device_to_sleep+1
 13802  104B  086A               	movf	??_put_device_to_sleep+1,w
 13803  104C  0021               	movlb	1	; select bank1
 13804  104D  00A4               	movwf	put_device_to_sleep@rslt^(0+128)
 13805  104E                     l4192:	
 13806                           
 13807                           ;BME280_driver/bme280.c: 984:     return rslt;
 13808  104E  0824               	movf	put_device_to_sleep@rslt^(0+128),w
 13809  104F  0008               	return
 13810  1050                     __end_of_put_device_to_sleep:	
 13811                           
 13812                           	psect	text40
 13813  1CB7                     __ptext40:	
 13814 ;; *************** function _reload_device_settings *****************
 13815 ;; Defined at:
 13816 ;;		line 991 in file "BME280_driver/bme280.c"
 13817 ;; Parameters:    Size  Location     Type
 13818 ;;  settings        1    wreg     PTR const struct bme280_
 13819 ;;		 -> put_device_to_sleep@settings(5), 
 13820 ;;  dev             1   68[BANK0 ] PTR const struct bme280_
 13821 ;;		 -> EnvSensor(51), 
 13822 ;; Auto vars:     Size  Location     Type
 13823 ;;  settings        1   71[BANK0 ] PTR const struct bme280_
 13824 ;;		 -> put_device_to_sleep@settings(5), 
 13825 ;;  rslt            1   72[BANK0 ] char 
 13826 ;; Return value:  Size  Location     Type
 13827 ;;                  1    wreg      char 
 13828 ;; Registers used:
 13829 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13830 ;; Tracked objects:
 13831 ;;		On entry : 1F/0
 13832 ;;		On exit  : 1F/0
 13833 ;;		Unchanged: 0/0
 13834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13835 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13836 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13837 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13838 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13839 ;;Total ram usage:        5 bytes
 13840 ;; Hardware stack levels used:    1
 13841 ;; Hardware stack levels required when called:   13
 13842 ;; This function calls:
 13843 ;;		_set_filter_standby_settings
 13844 ;;		_set_osr_settings
 13845 ;; This function is called by:
 13846 ;;		_put_device_to_sleep
 13847 ;; This function uses a non-reentrant model
 13848 ;;
 13849                           
 13850                           
 13851                           ;psect for function _reload_device_settings
 13852  1CB7                     _reload_device_settings:	
 13853                           
 13854                           ;incstack = 0
 13855 ;; hardware stack exceeded
 13856                           ; Regs used in _reload_device_settings: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
 13857                           ;reload_device_settings@settings stored from wreg
 13858  1CB7  00E7               	movwf	reload_device_settings@settings
 13859                           
 13860                           ;BME280_driver/bme280.c: 991: static int8_t reload_device_settings(const struct bme280_s
      +                          ettings *settings, const struct bme280_dev *dev);BME280_driver/bme280.c: 992: {;BME280_d
      +                          river/bme280.c: 993:     int8_t rslt;;BME280_driver/bme280.c: 995:     rslt = set_osr_se
      +                          ttings(0x1F, settings, dev);
 13861  1CB8  0867               	movf	reload_device_settings@settings,w
 13862  1CB9  00DD               	movwf	set_osr_settings@settings
 13863  1CBA  3000               	movlw	0
 13864  1CBB  00DE               	movwf	set_osr_settings@settings+1
 13865  1CBC  0864               	movf	reload_device_settings@dev,w
 13866  1CBD  00E5               	movwf	??_reload_device_settings
 13867  1CBE  0865               	movf	??_reload_device_settings,w
 13868  1CBF  00DF               	movwf	set_osr_settings@dev
 13869  1CC0  301F               	movlw	31
 13870  1CC1  319D  2524  319C   	fcall	_set_osr_settings
 13871  1CC4  00E6               	movwf	??_reload_device_settings+1
 13872  1CC5  0866               	movf	??_reload_device_settings+1,w
 13873  1CC6  00E8               	movwf	reload_device_settings@rslt
 13874                           
 13875                           ;BME280_driver/bme280.c: 996:     if (rslt == 0)
 13876  1CC7  0868               	movf	reload_device_settings@rslt,w
 13877  1CC8  1D03               	btfss	3,2
 13878  1CC9  2CD8               	goto	l4096
 13879                           
 13880                           ;BME280_driver/bme280.c: 997:     {;BME280_driver/bme280.c: 998:         rslt = set_filt
      +                          er_standby_settings(0x1F, settings, dev);
 13881  1CCA  0867               	movf	reload_device_settings@settings,w
 13882  1CCB  00D3               	movwf	set_filter_standby_settings@settings
 13883  1CCC  3000               	movlw	0
 13884  1CCD  00D4               	movwf	set_filter_standby_settings@settings+1
 13885  1CCE  0864               	movf	reload_device_settings@dev,w
 13886  1CCF  00E5               	movwf	??_reload_device_settings
 13887  1CD0  0865               	movf	??_reload_device_settings,w
 13888  1CD1  00D5               	movwf	set_filter_standby_settings@dev
 13889  1CD2  301F               	movlw	31
 13890  1CD3  3190  20D2         	fcall	_set_filter_standby_settings
 13891  1CD5  00E6               	movwf	??_reload_device_settings+1
 13892  1CD6  0866               	movf	??_reload_device_settings+1,w
 13893  1CD7  00E8               	movwf	reload_device_settings@rslt
 13894  1CD8                     l4096:	
 13895                           
 13896                           ;BME280_driver/bme280.c: 1001:     return rslt;
 13897  1CD8  0868               	movf	reload_device_settings@rslt,w
 13898  1CD9  0008               	return
 13899  1CDA                     __end_of_reload_device_settings:	
 13900                           
 13901                           	psect	text41
 13902  1D24                     __ptext41:	
 13903 ;; *************** function _set_osr_settings *****************
 13904 ;; Defined at:
 13905 ;;		line 777 in file "BME280_driver/bme280.c"
 13906 ;; Parameters:    Size  Location     Type
 13907 ;;  desired_sett    1    wreg     unsigned char 
 13908 ;;  settings        2   61[BANK0 ] PTR const struct bme280_
 13909 ;;		 -> EnvSensor(51), put_device_to_sleep@settings(5), 
 13910 ;;  dev             1   63[BANK0 ] PTR const struct bme280_
 13911 ;;		 -> EnvSensor(51), 
 13912 ;; Auto vars:     Size  Location     Type
 13913 ;;  desired_sett    1   67[BANK0 ] unsigned char 
 13914 ;;  rslt            1   66[BANK0 ] char 
 13915 ;; Return value:  Size  Location     Type
 13916 ;;                  1    wreg      char 
 13917 ;; Registers used:
 13918 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13919 ;; Tracked objects:
 13920 ;;		On entry : 1E/1
 13921 ;;		On exit  : 1F/0
 13922 ;;		Unchanged: 0/0
 13923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13924 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13925 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13926 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13927 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13928 ;;Total ram usage:        7 bytes
 13929 ;; Hardware stack levels used:    1
 13930 ;; Hardware stack levels required when called:   12
 13931 ;; This function calls:
 13932 ;;		_set_osr_humidity_settings
 13933 ;;		_set_osr_press_temp_settings
 13934 ;; This function is called by:
 13935 ;;		_bme280_set_sensor_settings
 13936 ;;		_reload_device_settings
 13937 ;; This function uses a non-reentrant model
 13938 ;;
 13939                           
 13940                           
 13941                           ;psect for function _set_osr_settings
 13942  1D24                     _set_osr_settings:	
 13943                           
 13944                           ;incstack = 0
 13945                           ; Regs used in _set_osr_settings: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13946                           ;set_osr_settings@desired_settings stored from wreg
 13947  1D24  0020               	movlb	0	; select bank0
 13948  1D25  00E3               	movwf	set_osr_settings@desired_settings
 13949                           
 13950                           ;BME280_driver/bme280.c: 777: static int8_t set_osr_settings(uint8_t desired_settings,;B
      +                          ME280_driver/bme280.c: 778:                                const struct bme280_settings 
      +                          *settings,;BME280_driver/bme280.c: 779:                                const struct bme2
      +                          80_dev *dev);BME280_driver/bme280.c: 780: {;BME280_driver/bme280.c: 781:     int8_t rslt
      +                           = 1;
 13951  1D26  01E2               	clrf	set_osr_settings@rslt
 13952  1D27  0AE2               	incf	set_osr_settings@rslt,f
 13953                           
 13954                           ;BME280_driver/bme280.c: 783:     if (desired_settings & 1 << 2)
 13955  1D28  1D63               	btfss	set_osr_settings@desired_settings,2
 13956  1D29  2D38               	goto	l4050
 13957                           
 13958                           ;BME280_driver/bme280.c: 784:     {;BME280_driver/bme280.c: 785:         rslt = set_osr_
      +                          humidity_settings(settings, dev);
 13959  1D2A  085E               	movf	set_osr_settings@settings+1,w
 13960  1D2B  00D4               	movwf	set_osr_humidity_settings@settings+1
 13961  1D2C  085D               	movf	set_osr_settings@settings,w
 13962  1D2D  00D3               	movwf	set_osr_humidity_settings@settings
 13963  1D2E  085F               	movf	set_osr_settings@dev,w
 13964  1D2F  00E0               	movwf	??_set_osr_settings
 13965  1D30  0860               	movf	??_set_osr_settings,w
 13966  1D31  00D5               	movwf	set_osr_humidity_settings@dev
 13967  1D32  3192  2228  319D   	fcall	_set_osr_humidity_settings
 13968  1D35  00E1               	movwf	??_set_osr_settings+1
 13969  1D36  0861               	movf	??_set_osr_settings+1,w
 13970  1D37  00E2               	movwf	set_osr_settings@rslt
 13971  1D38                     l4050:	
 13972                           
 13973                           ;BME280_driver/bme280.c: 787:     if (desired_settings & (1 | 1 << 1))
 13974  1D38  0863               	movf	set_osr_settings@desired_settings,w
 13975  1D39  3903               	andlw	3
 13976  1D3A  1903               	btfsc	3,2
 13977  1D3B  2D4A               	goto	l4054
 13978                           
 13979                           ;BME280_driver/bme280.c: 788:     {;BME280_driver/bme280.c: 789:         rslt = set_osr_
      +                          press_temp_settings(desired_settings, settings, dev);
 13980  1D3C  085E               	movf	set_osr_settings@settings+1,w
 13981  1D3D  00D4               	movwf	set_osr_press_temp_settings@settings+1
 13982  1D3E  085D               	movf	set_osr_settings@settings,w
 13983  1D3F  00D3               	movwf	set_osr_press_temp_settings@settings
 13984  1D40  085F               	movf	set_osr_settings@dev,w
 13985  1D41  00E0               	movwf	??_set_osr_settings
 13986  1D42  0860               	movf	??_set_osr_settings,w
 13987  1D43  00D5               	movwf	set_osr_press_temp_settings@dev
 13988  1D44  0863               	movf	set_osr_settings@desired_settings,w
 13989  1D45  3190  2091         	fcall	_set_osr_press_temp_settings
 13990  1D47  00E1               	movwf	??_set_osr_settings+1
 13991  1D48  0861               	movf	??_set_osr_settings+1,w
 13992  1D49  00E2               	movwf	set_osr_settings@rslt
 13993  1D4A                     l4054:	
 13994                           
 13995                           ;BME280_driver/bme280.c: 792:     return rslt;
 13996  1D4A  0862               	movf	set_osr_settings@rslt,w
 13997  1D4B  0008               	return
 13998  1D4C                     __end_of_set_osr_settings:	
 13999                           
 14000                           	psect	text42
 14001  1091                     __ptext42:	
 14002 ;; *************** function _set_osr_press_temp_settings *****************
 14003 ;; Defined at:
 14004 ;;		line 830 in file "BME280_driver/bme280.c"
 14005 ;; Parameters:    Size  Location     Type
 14006 ;;  desired_sett    1    wreg     unsigned char 
 14007 ;;  settings        2   51[BANK0 ] PTR const struct bme280_
 14008 ;;		 -> EnvSensor(51), put_device_to_sleep@settings(5), 
 14009 ;;  dev             1   53[BANK0 ] PTR const struct bme280_
 14010 ;;		 -> EnvSensor(51), 
 14011 ;; Auto vars:     Size  Location     Type
 14012 ;;  desired_sett    1   57[BANK0 ] unsigned char 
 14013 ;;  reg_data        1   60[BANK0 ] unsigned char 
 14014 ;;  reg_addr        1   59[BANK0 ] unsigned char 
 14015 ;;  rslt            1   58[BANK0 ] char 
 14016 ;; Return value:  Size  Location     Type
 14017 ;;                  1    wreg      char 
 14018 ;; Registers used:
 14019 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14020 ;; Tracked objects:
 14021 ;;		On entry : 1F/0
 14022 ;;		On exit  : 1F/0
 14023 ;;		Unchanged: 0/0
 14024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14025 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14026 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14027 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14028 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14029 ;;Total ram usage:       10 bytes
 14030 ;; Hardware stack levels used:    1
 14031 ;; Hardware stack levels required when called:   11
 14032 ;; This function calls:
 14033 ;;		_bme280_get_regs
 14034 ;;		_bme280_set_regs
 14035 ;;		_fill_osr_press_settings
 14036 ;;		_fill_osr_temp_settings
 14037 ;; This function is called by:
 14038 ;;		_set_osr_settings
 14039 ;; This function uses a non-reentrant model
 14040 ;;
 14041                           
 14042                           
 14043                           ;psect for function _set_osr_press_temp_settings
 14044  1091                     _set_osr_press_temp_settings:	
 14045                           
 14046                           ;incstack = 0
 14047                           ; Regs used in _set_osr_press_temp_settings: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 14048                           ;set_osr_press_temp_settings@desired_settings stored from wreg
 14049  1091  00D9               	movwf	set_osr_press_temp_settings@desired_settings
 14050                           
 14051                           ;BME280_driver/bme280.c: 830: static int8_t set_osr_press_temp_settings(uint8_t desired_
      +                          settings,;BME280_driver/bme280.c: 831:                                           const s
      +                          truct bme280_settings *settings,;BME280_driver/bme280.c: 832:                           
      +                                          const struct bme280_dev *dev);BME280_driver/bme280.c: 833: {;BME280_driv
      +                          er/bme280.c: 834:     int8_t rslt;;BME280_driver/bme280.c: 835:     uint8_t reg_addr = 0
      +                          xF4;
 14052  1092  30F4               	movlw	244
 14053  1093  00D6               	movwf	??_set_osr_press_temp_settings
 14054  1094  0856               	movf	??_set_osr_press_temp_settings,w
 14055  1095  00DB               	movwf	set_osr_press_temp_settings@reg_addr
 14056                           
 14057                           ;BME280_driver/bme280.c: 836:     uint8_t reg_data;;BME280_driver/bme280.c: 838:     rsl
      +                          t = bme280_get_regs(reg_addr, &reg_data, 1, dev);
 14058  1096  305C               	movlw	(low (set_osr_press_temp_settings@reg_data| 0))& (0+255)
 14059  1097  00D6               	movwf	??_set_osr_press_temp_settings
 14060  1098  0856               	movf	??_set_osr_press_temp_settings,w
 14061  1099  00B7               	movwf	bme280_get_regs@reg_data
 14062  109A  3001               	movlw	1
 14063  109B  00B8               	movwf	bme280_get_regs@len
 14064  109C  3000               	movlw	0
 14065  109D  00B9               	movwf	bme280_get_regs@len+1
 14066  109E  0855               	movf	set_osr_press_temp_settings@dev,w
 14067  109F  00D7               	movwf	??_set_osr_press_temp_settings+1
 14068  10A0  0857               	movf	??_set_osr_press_temp_settings+1,w
 14069  10A1  00BA               	movwf	bme280_get_regs@dev
 14070  10A2  085B               	movf	set_osr_press_temp_settings@reg_addr,w
 14071  10A3  3190  2050  3190   	fcall	_bme280_get_regs
 14072  10A6  00D8               	movwf	??_set_osr_press_temp_settings+2
 14073  10A7  0858               	movf	??_set_osr_press_temp_settings+2,w
 14074  10A8  00DA               	movwf	set_osr_press_temp_settings@rslt
 14075                           
 14076                           ;BME280_driver/bme280.c: 839:     if (rslt == 0)
 14077  10A9  085A               	movf	set_osr_press_temp_settings@rslt,w
 14078  10AA  1D03               	btfss	3,2
 14079  10AB  28D0               	goto	l4036
 14080                           
 14081                           ;BME280_driver/bme280.c: 840:     {;BME280_driver/bme280.c: 841:         if (desired_set
      +                          tings & 1)
 14082  10AC  1C59               	btfss	set_osr_press_temp_settings@desired_settings,0
 14083  10AD  28B6               	goto	l4032
 14084                           
 14085                           ;BME280_driver/bme280.c: 842:         {;BME280_driver/bme280.c: 843:             fill_os
      +                          r_press_settings(&reg_data, settings);
 14086  10AE  0854               	movf	set_osr_press_temp_settings@settings+1,w
 14087  10AF  00F1               	movwf	fill_osr_press_settings@settings+1
 14088  10B0  0853               	movf	set_osr_press_temp_settings@settings,w
 14089  10B1  00F0               	movwf	fill_osr_press_settings@settings
 14090  10B2  305C               	movlw	(low (set_osr_press_temp_settings@reg_data| 0))& (0+255)
 14091  10B3  319C  2448  3190   	fcall	_fill_osr_press_settings
 14092  10B6                     l4032:	
 14093                           
 14094                           ;BME280_driver/bme280.c: 845:         if (desired_settings & 1 << 1)
 14095  10B6  1CD9               	btfss	set_osr_press_temp_settings@desired_settings,1
 14096  10B7  28C0               	goto	l146
 14097                           
 14098                           ;BME280_driver/bme280.c: 846:         {;BME280_driver/bme280.c: 847:             fill_os
      +                          r_temp_settings(&reg_data, settings);
 14099  10B8  0854               	movf	set_osr_press_temp_settings@settings+1,w
 14100  10B9  00F1               	movwf	fill_osr_temp_settings@settings+1
 14101  10BA  0853               	movf	set_osr_press_temp_settings@settings,w
 14102  10BB  00F0               	movwf	fill_osr_temp_settings@settings
 14103  10BC  305C               	movlw	(low (set_osr_press_temp_settings@reg_data| 0))& (0+255)
 14104  10BD  319C  249B  3190   	fcall	_fill_osr_temp_settings
 14105  10C0                     l146:	
 14106                           ;BME280_driver/bme280.c: 848:         }
 14107                           
 14108                           
 14109                           ;BME280_driver/bme280.c: 851:         rslt = bme280_set_regs(&reg_addr, &reg_data, 1, de
      +                          v);
 14110  10C0  305C               	movlw	(low (set_osr_press_temp_settings@reg_data| 0))& (0+255)
 14111  10C1  00D6               	movwf	??_set_osr_press_temp_settings
 14112  10C2  0856               	movf	??_set_osr_press_temp_settings,w
 14113  10C3  00B4               	movwf	bme280_set_regs@reg_data
 14114  10C4  01B5               	clrf	bme280_set_regs@len
 14115  10C5  0AB5               	incf	bme280_set_regs@len,f
 14116  10C6  0855               	movf	set_osr_press_temp_settings@dev,w
 14117  10C7  00D7               	movwf	??_set_osr_press_temp_settings+1
 14118  10C8  0857               	movf	??_set_osr_press_temp_settings+1,w
 14119  10C9  00B6               	movwf	bme280_set_regs@dev
 14120  10CA  305B               	movlw	(low (set_osr_press_temp_settings@reg_addr| 0))& (0+255)
 14121  10CB  3188  20EE         	fcall	_bme280_set_regs
 14122  10CD  00D8               	movwf	??_set_osr_press_temp_settings+2
 14123  10CE  0858               	movf	??_set_osr_press_temp_settings+2,w
 14124  10CF  00DA               	movwf	set_osr_press_temp_settings@rslt
 14125  10D0                     l4036:	
 14126                           
 14127                           ;BME280_driver/bme280.c: 854:     return rslt;
 14128  10D0  085A               	movf	set_osr_press_temp_settings@rslt,w
 14129  10D1  0008               	return
 14130  10D2                     __end_of_set_osr_press_temp_settings:	
 14131                           
 14132                           	psect	text43
 14133  1C9B                     __ptext43:	
 14134 ;; *************** function _fill_osr_temp_settings *****************
 14135 ;; Defined at:
 14136 ;;		line 919 in file "BME280_driver/bme280.c"
 14137 ;; Parameters:    Size  Location     Type
 14138 ;;  reg_data        1    wreg     PTR unsigned char 
 14139 ;;		 -> set_osr_press_temp_settings@reg_data(1), 
 14140 ;;  settings        2    0[COMMON] PTR const struct bme280_
 14141 ;;		 -> EnvSensor(51), put_device_to_sleep@settings(5), 
 14142 ;; Auto vars:     Size  Location     Type
 14143 ;;  reg_data        1    5[COMMON] PTR unsigned char 
 14144 ;;		 -> set_osr_press_temp_settings@reg_data(1), 
 14145 ;; Return value:  Size  Location     Type
 14146 ;;                  1    wreg      void 
 14147 ;; Registers used:
 14148 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14149 ;; Tracked objects:
 14150 ;;		On entry : 1F/0
 14151 ;;		On exit  : 1F/0
 14152 ;;		Unchanged: 1F/0
 14153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14154 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14155 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14156 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14157 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14158 ;;Total ram usage:        6 bytes
 14159 ;; Hardware stack levels used:    1
 14160 ;; Hardware stack levels required when called:    3
 14161 ;; This function calls:
 14162 ;;		Nothing
 14163 ;; This function is called by:
 14164 ;;		_set_osr_press_temp_settings
 14165 ;; This function uses a non-reentrant model
 14166 ;;
 14167                           
 14168                           
 14169                           ;psect for function _fill_osr_temp_settings
 14170  1C9B                     _fill_osr_temp_settings:	
 14171                           
 14172                           ;incstack = 0
 14173                           ; Regs used in _fill_osr_temp_settings: [wreg+fsr1l+fsr1h+status,2+status,0]
 14174                           ;fill_osr_temp_settings@reg_data stored from wreg
 14175  1C9B  00F5               	movwf	fill_osr_temp_settings@reg_data
 14176                           
 14177                           ;BME280_driver/bme280.c: 919: static void fill_osr_temp_settings(uint8_t *reg_data, cons
      +                          t struct bme280_settings *settings);BME280_driver/bme280.c: 920: {;BME280_driver/bme280.
      +                          c: 921:     *reg_data = ((*reg_data & ~( 0xE0)) | ((settings->osr_t << 0x05) & 0xE0));
 14178  1C9C  0870               	movf	fill_osr_temp_settings@settings,w
 14179  1C9D  0086               	movwf	6
 14180  1C9E  0871               	movf	fill_osr_temp_settings@settings+1,w
 14181  1C9F  0087               	movwf	7
 14182  1CA0  3141               	addfsr 1,1
 14183  1CA1  0801               	movf	1,w
 14184  1CA2  00F2               	movwf	??_fill_osr_temp_settings
 14185  1CA3  3005               	movlw	5
 14186  1CA4                     u4035:	
 14187  1CA4  35F2               	lslf	??_fill_osr_temp_settings,f
 14188  1CA5  0B89               	decfsz	9,f
 14189  1CA6  2CA4               	goto	u4035
 14190  1CA7  30E0               	movlw	224
 14191  1CA8  0572               	andwf	??_fill_osr_temp_settings,w
 14192  1CA9  00F3               	movwf	??_fill_osr_temp_settings+1
 14193  1CAA  0875               	movf	fill_osr_temp_settings@reg_data,w
 14194  1CAB  0086               	movwf	6
 14195  1CAC  0187               	clrf	7
 14196  1CAD  0801               	movf	1,w
 14197  1CAE  391F               	andlw	31
 14198  1CAF  0473               	iorwf	??_fill_osr_temp_settings+1,w
 14199  1CB0  00F4               	movwf	??_fill_osr_temp_settings+2
 14200  1CB1  0875               	movf	fill_osr_temp_settings@reg_data,w
 14201  1CB2  0086               	movwf	6
 14202  1CB3  0187               	clrf	7
 14203  1CB4  0874               	movf	??_fill_osr_temp_settings+2,w
 14204  1CB5  0081               	movwf	1
 14205  1CB6  0008               	return
 14206  1CB7                     __end_of_fill_osr_temp_settings:	
 14207                           
 14208                           	psect	text44
 14209  1C48                     __ptext44:	
 14210 ;; *************** function _fill_osr_press_settings *****************
 14211 ;; Defined at:
 14212 ;;		line 910 in file "BME280_driver/bme280.c"
 14213 ;; Parameters:    Size  Location     Type
 14214 ;;  reg_data        1    wreg     PTR unsigned char 
 14215 ;;		 -> set_osr_press_temp_settings@reg_data(1), 
 14216 ;;  settings        2    0[COMMON] PTR const struct bme280_
 14217 ;;		 -> EnvSensor(51), put_device_to_sleep@settings(5), 
 14218 ;; Auto vars:     Size  Location     Type
 14219 ;;  reg_data        1    5[COMMON] PTR unsigned char 
 14220 ;;		 -> set_osr_press_temp_settings@reg_data(1), 
 14221 ;; Return value:  Size  Location     Type
 14222 ;;                  1    wreg      void 
 14223 ;; Registers used:
 14224 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14225 ;; Tracked objects:
 14226 ;;		On entry : 1F/0
 14227 ;;		On exit  : 1F/0
 14228 ;;		Unchanged: 1F/0
 14229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14230 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14231 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14232 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14233 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14234 ;;Total ram usage:        6 bytes
 14235 ;; Hardware stack levels used:    1
 14236 ;; Hardware stack levels required when called:    3
 14237 ;; This function calls:
 14238 ;;		Nothing
 14239 ;; This function is called by:
 14240 ;;		_set_osr_press_temp_settings
 14241 ;; This function uses a non-reentrant model
 14242 ;;
 14243                           
 14244                           
 14245                           ;psect for function _fill_osr_press_settings
 14246  1C48                     _fill_osr_press_settings:	
 14247                           
 14248                           ;incstack = 0
 14249                           ; Regs used in _fill_osr_press_settings: [wreg+fsr1l+fsr1h+status,2+status,0]
 14250                           ;fill_osr_press_settings@reg_data stored from wreg
 14251  1C48  00F5               	movwf	fill_osr_press_settings@reg_data
 14252                           
 14253                           ;BME280_driver/bme280.c: 910: static void fill_osr_press_settings(uint8_t *reg_data, con
      +                          st struct bme280_settings *settings);BME280_driver/bme280.c: 911: {;BME280_driver/bme280
      +                          .c: 912:     *reg_data = ((*reg_data & ~( 0x1C)) | ((settings->osr_p << 0x02) & 0x1C));
 14254  1C49  0870               	movf	fill_osr_press_settings@settings,w
 14255  1C4A  0086               	movwf	6
 14256  1C4B  0871               	movf	fill_osr_press_settings@settings+1,w
 14257  1C4C  0087               	movwf	7
 14258  1C4D  0801               	movf	1,w
 14259  1C4E  00F2               	movwf	??_fill_osr_press_settings
 14260  1C4F  3002               	movlw	2
 14261  1C50                     u4025:	
 14262  1C50  35F2               	lslf	??_fill_osr_press_settings,f
 14263  1C51  0B89               	decfsz	9,f
 14264  1C52  2C50               	goto	u4025
 14265  1C53  301C               	movlw	28
 14266  1C54  0572               	andwf	??_fill_osr_press_settings,w
 14267  1C55  00F3               	movwf	??_fill_osr_press_settings+1
 14268  1C56  0875               	movf	fill_osr_press_settings@reg_data,w
 14269  1C57  0086               	movwf	6
 14270  1C58  0187               	clrf	7
 14271  1C59  0801               	movf	1,w
 14272  1C5A  39E3               	andlw	227
 14273  1C5B  0473               	iorwf	??_fill_osr_press_settings+1,w
 14274  1C5C  00F4               	movwf	??_fill_osr_press_settings+2
 14275  1C5D  0875               	movf	fill_osr_press_settings@reg_data,w
 14276  1C5E  0086               	movwf	6
 14277  1C5F  0187               	clrf	7
 14278  1C60  0874               	movf	??_fill_osr_press_settings+2,w
 14279  1C61  0081               	movwf	1
 14280  1C62  0008               	return
 14281  1C63                     __end_of_fill_osr_press_settings:	
 14282                           
 14283                           	psect	text45
 14284  1228                     __ptext45:	
 14285 ;; *************** function _set_osr_humidity_settings *****************
 14286 ;; Defined at:
 14287 ;;		line 798 in file "BME280_driver/bme280.c"
 14288 ;; Parameters:    Size  Location     Type
 14289 ;;  settings        2   51[BANK0 ] PTR const struct bme280_
 14290 ;;		 -> EnvSensor(51), put_device_to_sleep@settings(5), 
 14291 ;;  dev             1   53[BANK0 ] PTR const struct bme280_
 14292 ;;		 -> EnvSensor(51), 
 14293 ;; Auto vars:     Size  Location     Type
 14294 ;;  reg_addr        1   60[BANK0 ] unsigned char 
 14295 ;;  rslt            1   59[BANK0 ] char 
 14296 ;;  ctrl_meas       1   58[BANK0 ] unsigned char 
 14297 ;;  ctrl_hum        1   57[BANK0 ] unsigned char 
 14298 ;; Return value:  Size  Location     Type
 14299 ;;                  1    wreg      char 
 14300 ;; Registers used:
 14301 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14302 ;; Tracked objects:
 14303 ;;		On entry : 1F/0
 14304 ;;		On exit  : 1F/0
 14305 ;;		Unchanged: 0/0
 14306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14307 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14308 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14309 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14310 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14311 ;;Total ram usage:       10 bytes
 14312 ;; Hardware stack levels used:    1
 14313 ;; Hardware stack levels required when called:   11
 14314 ;; This function calls:
 14315 ;;		_bme280_get_regs
 14316 ;;		_bme280_set_regs
 14317 ;; This function is called by:
 14318 ;;		_set_osr_settings
 14319 ;; This function uses a non-reentrant model
 14320 ;;
 14321                           
 14322                           
 14323                           ;psect for function _set_osr_humidity_settings
 14324  1228                     _set_osr_humidity_settings:	
 14325                           
 14326                           ;BME280_driver/bme280.c: 798: static int8_t set_osr_humidity_settings(const struct bme28
      +                          0_settings *settings, const struct bme280_dev *dev);BME280_driver/bme280.c: 799: {;BME28
      +                          0_driver/bme280.c: 800:     int8_t rslt;;BME280_driver/bme280.c: 801:     uint8_t ctrl_h
      +                          um;;BME280_driver/bme280.c: 802:     uint8_t ctrl_meas;;BME280_driver/bme280.c: 803:    
      +                           uint8_t reg_addr = 0xF2;
 14327                           
 14328                           ;incstack = 0
 14329                           ; Regs used in _set_osr_humidity_settings: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cs
      +                          tack]
 14330  1228  30F2               	movlw	242
 14331  1229  00D6               	movwf	??_set_osr_humidity_settings
 14332  122A  0856               	movf	??_set_osr_humidity_settings,w
 14333  122B  00DC               	movwf	set_osr_humidity_settings@reg_addr
 14334                           
 14335                           ;BME280_driver/bme280.c: 805:     ctrl_hum = settings->osr_h & 0x07;
 14336  122C  0853               	movf	set_osr_humidity_settings@settings,w
 14337  122D  0086               	movwf	6
 14338  122E  0854               	movf	set_osr_humidity_settings@settings+1,w
 14339  122F  0087               	movwf	7
 14340  1230  3142               	addfsr 1,2
 14341  1231  0801               	movf	1,w
 14342  1232  3907               	andlw	7
 14343  1233  00D6               	movwf	??_set_osr_humidity_settings
 14344  1234  0856               	movf	??_set_osr_humidity_settings,w
 14345  1235  00D9               	movwf	set_osr_humidity_settings@ctrl_hum
 14346                           
 14347                           ;BME280_driver/bme280.c: 808:     rslt = bme280_set_regs(&reg_addr, &ctrl_hum, 1, dev);
 14348  1236  3059               	movlw	(low (set_osr_humidity_settings@ctrl_hum| 0))& (0+255)
 14349  1237  00D6               	movwf	??_set_osr_humidity_settings
 14350  1238  0856               	movf	??_set_osr_humidity_settings,w
 14351  1239  00B4               	movwf	bme280_set_regs@reg_data
 14352  123A  01B5               	clrf	bme280_set_regs@len
 14353  123B  0AB5               	incf	bme280_set_regs@len,f
 14354  123C  0855               	movf	set_osr_humidity_settings@dev,w
 14355  123D  00D7               	movwf	??_set_osr_humidity_settings+1
 14356  123E  0857               	movf	??_set_osr_humidity_settings+1,w
 14357  123F  00B6               	movwf	bme280_set_regs@dev
 14358  1240  305C               	movlw	(low (set_osr_humidity_settings@reg_addr| 0))& (0+255)
 14359  1241  3188  20EE  3192   	fcall	_bme280_set_regs
 14360  1244  00D8               	movwf	??_set_osr_humidity_settings+2
 14361  1245  0858               	movf	??_set_osr_humidity_settings+2,w
 14362  1246  00DB               	movwf	set_osr_humidity_settings@rslt
 14363                           
 14364                           ;BME280_driver/bme280.c: 813:     if (rslt == 0)
 14365  1247  085B               	movf	set_osr_humidity_settings@rslt,w
 14366  1248  1D03               	btfss	3,2
 14367  1249  2A74               	goto	l4018
 14368                           
 14369                           ;BME280_driver/bme280.c: 814:     {;BME280_driver/bme280.c: 815:         reg_addr = 0xF4
      +                          ;
 14370  124A  30F4               	movlw	244
 14371  124B  00D6               	movwf	??_set_osr_humidity_settings
 14372  124C  0856               	movf	??_set_osr_humidity_settings,w
 14373  124D  00DC               	movwf	set_osr_humidity_settings@reg_addr
 14374                           
 14375                           ;BME280_driver/bme280.c: 816:         rslt = bme280_get_regs(reg_addr, &ctrl_meas, 1, de
      +                          v);
 14376  124E  305A               	movlw	(low (set_osr_humidity_settings@ctrl_meas| 0))& (0+255)
 14377  124F  00D6               	movwf	??_set_osr_humidity_settings
 14378  1250  0856               	movf	??_set_osr_humidity_settings,w
 14379  1251  00B7               	movwf	bme280_get_regs@reg_data
 14380  1252  3001               	movlw	1
 14381  1253  00B8               	movwf	bme280_get_regs@len
 14382  1254  3000               	movlw	0
 14383  1255  00B9               	movwf	bme280_get_regs@len+1
 14384  1256  0855               	movf	set_osr_humidity_settings@dev,w
 14385  1257  00D7               	movwf	??_set_osr_humidity_settings+1
 14386  1258  0857               	movf	??_set_osr_humidity_settings+1,w
 14387  1259  00BA               	movwf	bme280_get_regs@dev
 14388  125A  085C               	movf	set_osr_humidity_settings@reg_addr,w
 14389  125B  3190  2050  3192   	fcall	_bme280_get_regs
 14390  125E  00D8               	movwf	??_set_osr_humidity_settings+2
 14391  125F  0858               	movf	??_set_osr_humidity_settings+2,w
 14392  1260  00DB               	movwf	set_osr_humidity_settings@rslt
 14393                           
 14394                           ;BME280_driver/bme280.c: 817:         if (rslt == 0)
 14395  1261  085B               	movf	set_osr_humidity_settings@rslt,w
 14396  1262  1D03               	btfss	3,2
 14397  1263  2A74               	goto	l4018
 14398                           
 14399                           ;BME280_driver/bme280.c: 818:         {;BME280_driver/bme280.c: 819:             rslt = 
      +                          bme280_set_regs(&reg_addr, &ctrl_meas, 1, dev);
 14400  1264  305A               	movlw	(low (set_osr_humidity_settings@ctrl_meas| 0))& (0+255)
 14401  1265  00D6               	movwf	??_set_osr_humidity_settings
 14402  1266  0856               	movf	??_set_osr_humidity_settings,w
 14403  1267  00B4               	movwf	bme280_set_regs@reg_data
 14404  1268  01B5               	clrf	bme280_set_regs@len
 14405  1269  0AB5               	incf	bme280_set_regs@len,f
 14406  126A  0855               	movf	set_osr_humidity_settings@dev,w
 14407  126B  00D7               	movwf	??_set_osr_humidity_settings+1
 14408  126C  0857               	movf	??_set_osr_humidity_settings+1,w
 14409  126D  00B6               	movwf	bme280_set_regs@dev
 14410  126E  305C               	movlw	(low (set_osr_humidity_settings@reg_addr| 0))& (0+255)
 14411  126F  3188  20EE         	fcall	_bme280_set_regs
 14412  1271  00D8               	movwf	??_set_osr_humidity_settings+2
 14413  1272  0858               	movf	??_set_osr_humidity_settings+2,w
 14414  1273  00DB               	movwf	set_osr_humidity_settings@rslt
 14415  1274                     l4018:	
 14416                           
 14417                           ;BME280_driver/bme280.c: 823:     return rslt;
 14418  1274  085B               	movf	set_osr_humidity_settings@rslt,w
 14419  1275  0008               	return
 14420  1276                     __end_of_set_osr_humidity_settings:	
 14421                           
 14422                           	psect	text46
 14423  10D2                     __ptext46:	
 14424 ;; *************** function _set_filter_standby_settings *****************
 14425 ;; Defined at:
 14426 ;;		line 861 in file "BME280_driver/bme280.c"
 14427 ;; Parameters:    Size  Location     Type
 14428 ;;  desired_sett    1    wreg     unsigned char 
 14429 ;;  settings        2   51[BANK0 ] PTR const struct bme280_
 14430 ;;		 -> EnvSensor(51), put_device_to_sleep@settings(5), 
 14431 ;;  dev             1   53[BANK0 ] PTR const struct bme280_
 14432 ;;		 -> EnvSensor(51), 
 14433 ;; Auto vars:     Size  Location     Type
 14434 ;;  desired_sett    1   57[BANK0 ] unsigned char 
 14435 ;;  reg_data        1   60[BANK0 ] unsigned char 
 14436 ;;  reg_addr        1   59[BANK0 ] unsigned char 
 14437 ;;  rslt            1   58[BANK0 ] char 
 14438 ;; Return value:  Size  Location     Type
 14439 ;;                  1    wreg      char 
 14440 ;; Registers used:
 14441 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14442 ;; Tracked objects:
 14443 ;;		On entry : 1E/1
 14444 ;;		On exit  : 1F/0
 14445 ;;		Unchanged: 0/0
 14446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14447 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14448 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14449 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14450 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14451 ;;Total ram usage:       10 bytes
 14452 ;; Hardware stack levels used:    1
 14453 ;; Hardware stack levels required when called:   11
 14454 ;; This function calls:
 14455 ;;		_bme280_get_regs
 14456 ;;		_bme280_set_regs
 14457 ;;		_fill_filter_settings
 14458 ;;		_fill_standby_settings
 14459 ;; This function is called by:
 14460 ;;		_bme280_set_sensor_settings
 14461 ;;		_reload_device_settings
 14462 ;; This function uses a non-reentrant model
 14463 ;;
 14464                           
 14465                           
 14466                           ;psect for function _set_filter_standby_settings
 14467  10D2                     _set_filter_standby_settings:	
 14468                           
 14469                           ;incstack = 0
 14470                           ; Regs used in _set_filter_standby_settings: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 14471                           ;set_filter_standby_settings@desired_settings stored from wreg
 14472  10D2  0020               	movlb	0	; select bank0
 14473  10D3  00D9               	movwf	set_filter_standby_settings@desired_settings
 14474                           
 14475                           ;BME280_driver/bme280.c: 861: static int8_t set_filter_standby_settings(uint8_t desired_
      +                          settings,;BME280_driver/bme280.c: 862:                                           const s
      +                          truct bme280_settings *settings,;BME280_driver/bme280.c: 863:                           
      +                                          const struct bme280_dev *dev);BME280_driver/bme280.c: 864: {;BME280_driv
      +                          er/bme280.c: 865:     int8_t rslt;;BME280_driver/bme280.c: 866:     uint8_t reg_addr = 0
      +                          xF5;
 14476  10D4  30F5               	movlw	245
 14477  10D5  00D6               	movwf	??_set_filter_standby_settings
 14478  10D6  0856               	movf	??_set_filter_standby_settings,w
 14479  10D7  00DB               	movwf	set_filter_standby_settings@reg_addr
 14480                           
 14481                           ;BME280_driver/bme280.c: 867:     uint8_t reg_data;;BME280_driver/bme280.c: 869:     rsl
      +                          t = bme280_get_regs(reg_addr, &reg_data, 1, dev);
 14482  10D8  305C               	movlw	(low (set_filter_standby_settings@reg_data| 0))& (0+255)
 14483  10D9  00D6               	movwf	??_set_filter_standby_settings
 14484  10DA  0856               	movf	??_set_filter_standby_settings,w
 14485  10DB  00B7               	movwf	bme280_get_regs@reg_data
 14486  10DC  3001               	movlw	1
 14487  10DD  00B8               	movwf	bme280_get_regs@len
 14488  10DE  3000               	movlw	0
 14489  10DF  00B9               	movwf	bme280_get_regs@len+1
 14490  10E0  0855               	movf	set_filter_standby_settings@dev,w
 14491  10E1  00D7               	movwf	??_set_filter_standby_settings+1
 14492  10E2  0857               	movf	??_set_filter_standby_settings+1,w
 14493  10E3  00BA               	movwf	bme280_get_regs@dev
 14494  10E4  085B               	movf	set_filter_standby_settings@reg_addr,w
 14495  10E5  3190  2050  3190   	fcall	_bme280_get_regs
 14496  10E8  00D8               	movwf	??_set_filter_standby_settings+2
 14497  10E9  0858               	movf	??_set_filter_standby_settings+2,w
 14498  10EA  00DA               	movwf	set_filter_standby_settings@rslt
 14499                           
 14500                           ;BME280_driver/bme280.c: 870:     if (rslt == 0)
 14501  10EB  085A               	movf	set_filter_standby_settings@rslt,w
 14502  10EC  1D03               	btfss	3,2
 14503  10ED  2912               	goto	l4072
 14504                           
 14505                           ;BME280_driver/bme280.c: 871:     {;BME280_driver/bme280.c: 872:         if (desired_set
      +                          tings & 1 << 3)
 14506  10EE  1DD9               	btfss	set_filter_standby_settings@desired_settings,3
 14507  10EF  28F8               	goto	l4068
 14508                           
 14509                           ;BME280_driver/bme280.c: 873:         {;BME280_driver/bme280.c: 874:             fill_fi
      +                          lter_settings(&reg_data, settings);
 14510  10F0  0854               	movf	set_filter_standby_settings@settings+1,w
 14511  10F1  00F1               	movwf	fill_filter_settings@settings+1
 14512  10F2  0853               	movf	set_filter_standby_settings@settings,w
 14513  10F3  00F0               	movwf	fill_filter_settings@settings
 14514  10F4  305C               	movlw	(low (set_filter_standby_settings@reg_data| 0))& (0+255)
 14515  10F5  319C  2463  3190   	fcall	_fill_filter_settings
 14516  10F8                     l4068:	
 14517                           
 14518                           ;BME280_driver/bme280.c: 876:         if (desired_settings & 1 << 4)
 14519  10F8  1E59               	btfss	set_filter_standby_settings@desired_settings,4
 14520  10F9  2902               	goto	l152
 14521                           
 14522                           ;BME280_driver/bme280.c: 877:         {;BME280_driver/bme280.c: 878:             fill_st
      +                          andby_settings(&reg_data, settings);
 14523  10FA  0854               	movf	set_filter_standby_settings@settings+1,w
 14524  10FB  00F1               	movwf	fill_standby_settings@settings+1
 14525  10FC  0853               	movf	set_filter_standby_settings@settings,w
 14526  10FD  00F0               	movwf	fill_standby_settings@settings
 14527  10FE  305C               	movlw	(low (set_filter_standby_settings@reg_data| 0))& (0+255)
 14528  10FF  319C  247F  3190   	fcall	_fill_standby_settings
 14529  1102                     l152:	
 14530                           ;BME280_driver/bme280.c: 879:         }
 14531                           
 14532                           
 14533                           ;BME280_driver/bme280.c: 882:         rslt = bme280_set_regs(&reg_addr, &reg_data, 1, de
      +                          v);
 14534  1102  305C               	movlw	(low (set_filter_standby_settings@reg_data| 0))& (0+255)
 14535  1103  00D6               	movwf	??_set_filter_standby_settings
 14536  1104  0856               	movf	??_set_filter_standby_settings,w
 14537  1105  00B4               	movwf	bme280_set_regs@reg_data
 14538  1106  01B5               	clrf	bme280_set_regs@len
 14539  1107  0AB5               	incf	bme280_set_regs@len,f
 14540  1108  0855               	movf	set_filter_standby_settings@dev,w
 14541  1109  00D7               	movwf	??_set_filter_standby_settings+1
 14542  110A  0857               	movf	??_set_filter_standby_settings+1,w
 14543  110B  00B6               	movwf	bme280_set_regs@dev
 14544  110C  305B               	movlw	(low (set_filter_standby_settings@reg_addr| 0))& (0+255)
 14545  110D  3188  20EE         	fcall	_bme280_set_regs
 14546  110F  00D8               	movwf	??_set_filter_standby_settings+2
 14547  1110  0858               	movf	??_set_filter_standby_settings+2,w
 14548  1111  00DA               	movwf	set_filter_standby_settings@rslt
 14549  1112                     l4072:	
 14550                           
 14551                           ;BME280_driver/bme280.c: 885:     return rslt;
 14552  1112  085A               	movf	set_filter_standby_settings@rslt,w
 14553  1113  0008               	return
 14554  1114                     __end_of_set_filter_standby_settings:	
 14555                           
 14556                           	psect	text47
 14557  1C7F                     __ptext47:	
 14558 ;; *************** function _fill_standby_settings *****************
 14559 ;; Defined at:
 14560 ;;		line 901 in file "BME280_driver/bme280.c"
 14561 ;; Parameters:    Size  Location     Type
 14562 ;;  reg_data        1    wreg     PTR unsigned char 
 14563 ;;		 -> set_filter_standby_settings@reg_data(1), 
 14564 ;;  settings        2    0[COMMON] PTR const struct bme280_
 14565 ;;		 -> EnvSensor(51), put_device_to_sleep@settings(5), 
 14566 ;; Auto vars:     Size  Location     Type
 14567 ;;  reg_data        1    5[COMMON] PTR unsigned char 
 14568 ;;		 -> set_filter_standby_settings@reg_data(1), 
 14569 ;; Return value:  Size  Location     Type
 14570 ;;                  1    wreg      void 
 14571 ;; Registers used:
 14572 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14573 ;; Tracked objects:
 14574 ;;		On entry : 1F/0
 14575 ;;		On exit  : 1F/0
 14576 ;;		Unchanged: 1F/0
 14577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14578 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14579 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14580 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14581 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14582 ;;Total ram usage:        6 bytes
 14583 ;; Hardware stack levels used:    1
 14584 ;; Hardware stack levels required when called:    3
 14585 ;; This function calls:
 14586 ;;		Nothing
 14587 ;; This function is called by:
 14588 ;;		_set_filter_standby_settings
 14589 ;; This function uses a non-reentrant model
 14590 ;;
 14591                           
 14592                           
 14593                           ;psect for function _fill_standby_settings
 14594  1C7F                     _fill_standby_settings:	
 14595                           
 14596                           ;incstack = 0
 14597                           ; Regs used in _fill_standby_settings: [wreg+fsr1l+fsr1h+status,2+status,0]
 14598                           ;fill_standby_settings@reg_data stored from wreg
 14599  1C7F  00F5               	movwf	fill_standby_settings@reg_data
 14600                           
 14601                           ;BME280_driver/bme280.c: 901: static void fill_standby_settings(uint8_t *reg_data, const
      +                           struct bme280_settings *settings);BME280_driver/bme280.c: 902: {;BME280_driver/bme280.c
      +                          : 903:     *reg_data = ((*reg_data & ~( 0xE0)) | ((settings->standby_time << 0x05) & 0xE
      +                          0));
 14602  1C80  0870               	movf	fill_standby_settings@settings,w
 14603  1C81  0086               	movwf	6
 14604  1C82  0871               	movf	fill_standby_settings@settings+1,w
 14605  1C83  0087               	movwf	7
 14606  1C84  3144               	addfsr 1,4
 14607  1C85  0801               	movf	1,w
 14608  1C86  00F2               	movwf	??_fill_standby_settings
 14609  1C87  3005               	movlw	5
 14610  1C88                     u4105:	
 14611  1C88  35F2               	lslf	??_fill_standby_settings,f
 14612  1C89  0B89               	decfsz	9,f
 14613  1C8A  2C88               	goto	u4105
 14614  1C8B  30E0               	movlw	224
 14615  1C8C  0572               	andwf	??_fill_standby_settings,w
 14616  1C8D  00F3               	movwf	??_fill_standby_settings+1
 14617  1C8E  0875               	movf	fill_standby_settings@reg_data,w
 14618  1C8F  0086               	movwf	6
 14619  1C90  0187               	clrf	7
 14620  1C91  0801               	movf	1,w
 14621  1C92  391F               	andlw	31
 14622  1C93  0473               	iorwf	??_fill_standby_settings+1,w
 14623  1C94  00F4               	movwf	??_fill_standby_settings+2
 14624  1C95  0875               	movf	fill_standby_settings@reg_data,w
 14625  1C96  0086               	movwf	6
 14626  1C97  0187               	clrf	7
 14627  1C98  0874               	movf	??_fill_standby_settings+2,w
 14628  1C99  0081               	movwf	1
 14629  1C9A  0008               	return
 14630  1C9B                     __end_of_fill_standby_settings:	
 14631                           
 14632                           	psect	text48
 14633  1C63                     __ptext48:	
 14634 ;; *************** function _fill_filter_settings *****************
 14635 ;; Defined at:
 14636 ;;		line 892 in file "BME280_driver/bme280.c"
 14637 ;; Parameters:    Size  Location     Type
 14638 ;;  reg_data        1    wreg     PTR unsigned char 
 14639 ;;		 -> set_filter_standby_settings@reg_data(1), 
 14640 ;;  settings        2    0[COMMON] PTR const struct bme280_
 14641 ;;		 -> EnvSensor(51), put_device_to_sleep@settings(5), 
 14642 ;; Auto vars:     Size  Location     Type
 14643 ;;  reg_data        1    5[COMMON] PTR unsigned char 
 14644 ;;		 -> set_filter_standby_settings@reg_data(1), 
 14645 ;; Return value:  Size  Location     Type
 14646 ;;                  1    wreg      void 
 14647 ;; Registers used:
 14648 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14649 ;; Tracked objects:
 14650 ;;		On entry : 1F/0
 14651 ;;		On exit  : 1F/0
 14652 ;;		Unchanged: 1F/0
 14653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14654 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14655 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14656 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14657 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14658 ;;Total ram usage:        6 bytes
 14659 ;; Hardware stack levels used:    1
 14660 ;; Hardware stack levels required when called:    3
 14661 ;; This function calls:
 14662 ;;		Nothing
 14663 ;; This function is called by:
 14664 ;;		_set_filter_standby_settings
 14665 ;; This function uses a non-reentrant model
 14666 ;;
 14667                           
 14668                           
 14669                           ;psect for function _fill_filter_settings
 14670  1C63                     _fill_filter_settings:	
 14671                           
 14672                           ;incstack = 0
 14673                           ; Regs used in _fill_filter_settings: [wreg+fsr1l+fsr1h+status,2+status,0]
 14674                           ;fill_filter_settings@reg_data stored from wreg
 14675  1C63  00F5               	movwf	fill_filter_settings@reg_data
 14676                           
 14677                           ;BME280_driver/bme280.c: 892: static void fill_filter_settings(uint8_t *reg_data, const 
      +                          struct bme280_settings *settings);BME280_driver/bme280.c: 893: {;BME280_driver/bme280.c:
      +                           894:     *reg_data = ((*reg_data & ~( 0x1C)) | ((settings->filter << 0x02) & 0x1C));
 14678  1C64  0870               	movf	fill_filter_settings@settings,w
 14679  1C65  0086               	movwf	6
 14680  1C66  0871               	movf	fill_filter_settings@settings+1,w
 14681  1C67  0087               	movwf	7
 14682  1C68  3143               	addfsr 1,3
 14683  1C69  0801               	movf	1,w
 14684  1C6A  00F2               	movwf	??_fill_filter_settings
 14685  1C6B  3002               	movlw	2
 14686  1C6C                     u4095:	
 14687  1C6C  35F2               	lslf	??_fill_filter_settings,f
 14688  1C6D  0B89               	decfsz	9,f
 14689  1C6E  2C6C               	goto	u4095
 14690  1C6F  301C               	movlw	28
 14691  1C70  0572               	andwf	??_fill_filter_settings,w
 14692  1C71  00F3               	movwf	??_fill_filter_settings+1
 14693  1C72  0875               	movf	fill_filter_settings@reg_data,w
 14694  1C73  0086               	movwf	6
 14695  1C74  0187               	clrf	7
 14696  1C75  0801               	movf	1,w
 14697  1C76  39E3               	andlw	227
 14698  1C77  0473               	iorwf	??_fill_filter_settings+1,w
 14699  1C78  00F4               	movwf	??_fill_filter_settings+2
 14700  1C79  0875               	movf	fill_filter_settings@reg_data,w
 14701  1C7A  0086               	movwf	6
 14702  1C7B  0187               	clrf	7
 14703  1C7C  0874               	movf	??_fill_filter_settings+2,w
 14704  1C7D  0081               	movwf	1
 14705  1C7E  0008               	return
 14706  1C7F                     __end_of_fill_filter_settings:	
 14707                           
 14708                           	psect	text49
 14709  1369                     __ptext49:	
 14710 ;; *************** function _parse_device_settings *****************
 14711 ;; Defined at:
 14712 ;;		line 929 in file "BME280_driver/bme280.c"
 14713 ;; Parameters:    Size  Location     Type
 14714 ;;  reg_data        1    wreg     PTR const unsigned char 
 14715 ;;		 -> put_device_to_sleep@reg_data(4), bme280_get_sensor_settings@reg_data(4), 
 14716 ;;  settings        1    0[COMMON] PTR struct bme280_settin
 14717 ;;		 -> put_device_to_sleep@settings(5), 
 14718 ;; Auto vars:     Size  Location     Type
 14719 ;;  reg_data        1    3[COMMON] PTR const unsigned char 
 14720 ;;		 -> put_device_to_sleep@reg_data(4), bme280_get_sensor_settings@reg_data(4), 
 14721 ;; Return value:  Size  Location     Type
 14722 ;;                  1    wreg      void 
 14723 ;; Registers used:
 14724 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14725 ;; Tracked objects:
 14726 ;;		On entry : 1F/0
 14727 ;;		On exit  : 1F/0
 14728 ;;		Unchanged: 1F/0
 14729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14730 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14731 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14732 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14733 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14734 ;;Total ram usage:        4 bytes
 14735 ;; Hardware stack levels used:    1
 14736 ;; Hardware stack levels required when called:    3
 14737 ;; This function calls:
 14738 ;;		Nothing
 14739 ;; This function is called by:
 14740 ;;		_put_device_to_sleep
 14741 ;; This function uses a non-reentrant model
 14742 ;;
 14743                           
 14744                           
 14745                           ;psect for function _parse_device_settings
 14746  1369                     _parse_device_settings:	
 14747                           
 14748                           ;incstack = 0
 14749                           ; Regs used in _parse_device_settings: [wreg+fsr1l+fsr1h+status,2+status,0]
 14750                           ;parse_device_settings@reg_data stored from wreg
 14751  1369  00F3               	movwf	parse_device_settings@reg_data
 14752                           
 14753                           ;BME280_driver/bme280.c: 929: static void parse_device_settings(const uint8_t *reg_data,
      +                           struct bme280_settings *settings);BME280_driver/bme280.c: 930: {;BME280_driver/bme280.c
      +                          : 931:     settings->osr_h = (reg_data[0] & ( 0x07));
 14754  136A  0873               	movf	parse_device_settings@reg_data,w
 14755  136B  0086               	movwf	6
 14756  136C  0187               	clrf	7
 14757  136D  0801               	movf	1,w
 14758  136E  3907               	andlw	7
 14759  136F  00F1               	movwf	??_parse_device_settings
 14760  1370  0870               	movf	parse_device_settings@settings,w
 14761  1371  3E02               	addlw	2
 14762  1372  0086               	movwf	6
 14763  1373  0187               	clrf	7
 14764  1374  0871               	movf	??_parse_device_settings,w
 14765  1375  0081               	movwf	1
 14766                           
 14767                           ;BME280_driver/bme280.c: 932:     settings->osr_p = ((reg_data[2] & ( 0x1C)) >> ( 0x02))
      +                          ;
 14768  1376  0873               	movf	parse_device_settings@reg_data,w
 14769  1377  3E02               	addlw	2
 14770  1378  0086               	movwf	6
 14771  1379  0187               	clrf	7
 14772  137A  0801               	movf	1,w
 14773  137B  00F1               	movwf	??_parse_device_settings
 14774  137C  3002               	movlw	2
 14775  137D                     u4175:	
 14776  137D  36F1               	lsrf	??_parse_device_settings,f
 14777  137E  0B89               	decfsz	9,f
 14778  137F  2B7D               	goto	u4175
 14779  1380  0871               	movf	??_parse_device_settings,w
 14780  1381  3907               	andlw	7
 14781  1382  00F2               	movwf	??_parse_device_settings+1
 14782  1383  0870               	movf	parse_device_settings@settings,w
 14783  1384  0086               	movwf	6
 14784  1385  0187               	clrf	7
 14785  1386  0872               	movf	??_parse_device_settings+1,w
 14786  1387  0081               	movwf	1
 14787                           
 14788                           ;BME280_driver/bme280.c: 933:     settings->osr_t = ((reg_data[2] & ( 0xE0)) >> ( 0x05))
      +                          ;
 14789  1388  0873               	movf	parse_device_settings@reg_data,w
 14790  1389  3E02               	addlw	2
 14791  138A  0086               	movwf	6
 14792  138B  0187               	clrf	7
 14793  138C  0801               	movf	1,w
 14794  138D  00F1               	movwf	??_parse_device_settings
 14795  138E  3005               	movlw	5
 14796  138F                     u4185:	
 14797  138F  36F1               	lsrf	??_parse_device_settings,f
 14798  1390  0B89               	decfsz	9,f
 14799  1391  2B8F               	goto	u4185
 14800  1392  0871               	movf	??_parse_device_settings,w
 14801  1393  3907               	andlw	7
 14802  1394  00F2               	movwf	??_parse_device_settings+1
 14803  1395  0A70               	incf	parse_device_settings@settings,w
 14804  1396  0086               	movwf	6
 14805  1397  0187               	clrf	7
 14806  1398  0872               	movf	??_parse_device_settings+1,w
 14807  1399  0081               	movwf	1
 14808                           
 14809                           ;BME280_driver/bme280.c: 934:     settings->filter = ((reg_data[3] & ( 0x1C)) >> ( 0x02)
      +                          );
 14810  139A  0873               	movf	parse_device_settings@reg_data,w
 14811  139B  3E03               	addlw	3
 14812  139C  0086               	movwf	6
 14813  139D  0187               	clrf	7
 14814  139E  0801               	movf	1,w
 14815  139F  00F1               	movwf	??_parse_device_settings
 14816  13A0  3002               	movlw	2
 14817  13A1                     u4195:	
 14818  13A1  36F1               	lsrf	??_parse_device_settings,f
 14819  13A2  0B89               	decfsz	9,f
 14820  13A3  2BA1               	goto	u4195
 14821  13A4  0871               	movf	??_parse_device_settings,w
 14822  13A5  3907               	andlw	7
 14823  13A6  00F2               	movwf	??_parse_device_settings+1
 14824  13A7  0870               	movf	parse_device_settings@settings,w
 14825  13A8  3E03               	addlw	3
 14826  13A9  0086               	movwf	6
 14827  13AA  0187               	clrf	7
 14828  13AB  0872               	movf	??_parse_device_settings+1,w
 14829  13AC  0081               	movwf	1
 14830                           
 14831                           ;BME280_driver/bme280.c: 935:     settings->standby_time = ((reg_data[3] & ( 0xE0)) >> (
      +                           0x05));
 14832  13AD  0873               	movf	parse_device_settings@reg_data,w
 14833  13AE  3E03               	addlw	3
 14834  13AF  0086               	movwf	6
 14835  13B0  0187               	clrf	7
 14836  13B1  0801               	movf	1,w
 14837  13B2  00F1               	movwf	??_parse_device_settings
 14838  13B3  3005               	movlw	5
 14839  13B4                     u4205:	
 14840  13B4  36F1               	lsrf	??_parse_device_settings,f
 14841  13B5  0B89               	decfsz	9,f
 14842  13B6  2BB4               	goto	u4205
 14843  13B7  0871               	movf	??_parse_device_settings,w
 14844  13B8  3907               	andlw	7
 14845  13B9  00F2               	movwf	??_parse_device_settings+1
 14846  13BA  0870               	movf	parse_device_settings@settings,w
 14847  13BB  3E04               	addlw	4
 14848  13BC  0086               	movwf	6
 14849  13BD  0187               	clrf	7
 14850  13BE  0872               	movf	??_parse_device_settings+1,w
 14851  13BF  0081               	movwf	1
 14852  13C0  0008               	return
 14853  13C1                     __end_of_parse_device_settings:	
 14854                           
 14855                           	psect	text50
 14856  1D4C                     __ptext50:	
 14857 ;; *************** function _bme280_get_sensor_mode *****************
 14858 ;; Defined at:
 14859 ;;		line 610 in file "BME280_driver/bme280.c"
 14860 ;; Parameters:    Size  Location     Type
 14861 ;;  sensor_mode     1    wreg     PTR unsigned char 
 14862 ;;		 -> bme280_set_sensor_mode@last_set_mode(1), bme280_set_sensor_settings@sensor_mode(1), 
 14863 ;;  dev             1   32[BANK0 ] PTR const struct bme280_
 14864 ;;		 -> EnvSensor(51), 
 14865 ;; Auto vars:     Size  Location     Type
 14866 ;;  sensor_mode     1   37[BANK0 ] PTR unsigned char 
 14867 ;;		 -> bme280_set_sensor_mode@last_set_mode(1), bme280_set_sensor_settings@sensor_mode(1), 
 14868 ;;  rslt            1   36[BANK0 ] char 
 14869 ;; Return value:  Size  Location     Type
 14870 ;;                  1    wreg      char 
 14871 ;; Registers used:
 14872 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14873 ;; Tracked objects:
 14874 ;;		On entry : 1F/0
 14875 ;;		On exit  : 1F/0
 14876 ;;		Unchanged: 0/0
 14877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14878 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14879 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14880 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14881 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14882 ;;Total ram usage:        6 bytes
 14883 ;; Hardware stack levels used:    1
 14884 ;; Hardware stack levels required when called:   11
 14885 ;; This function calls:
 14886 ;;		_bme280_get_regs
 14887 ;;		_null_ptr_check
 14888 ;; This function is called by:
 14889 ;;		_bme280_set_sensor_settings
 14890 ;;		_bme280_set_sensor_mode
 14891 ;; This function uses a non-reentrant model
 14892 ;;
 14893                           
 14894                           
 14895                           ;psect for function _bme280_get_sensor_mode
 14896  1D4C                     _bme280_get_sensor_mode:	
 14897                           
 14898                           ;incstack = 0
 14899                           ; Regs used in _bme280_get_sensor_mode: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
 14900                           ;bme280_get_sensor_mode@sensor_mode stored from wreg
 14901  1D4C  00C5               	movwf	bme280_get_sensor_mode@sensor_mode
 14902                           
 14903                           ;BME280_driver/bme280.c: 610: int8_t bme280_get_sensor_mode(uint8_t *sensor_mode, const 
      +                          struct bme280_dev *dev);BME280_driver/bme280.c: 611: {;BME280_driver/bme280.c: 612:     
      +                          int8_t rslt;;BME280_driver/bme280.c: 615:     rslt = null_ptr_check(dev);
 14904  1D4D  0840               	movf	bme280_get_sensor_mode@dev,w
 14905  1D4E  319C  24DA  319D   	fcall	_null_ptr_check
 14906  1D51  00C1               	movwf	??_bme280_get_sensor_mode
 14907  1D52  0841               	movf	??_bme280_get_sensor_mode,w
 14908  1D53  00C4               	movwf	bme280_get_sensor_mode@rslt
 14909                           
 14910                           ;BME280_driver/bme280.c: 616:     if (rslt == 0)
 14911  1D54  0844               	movf	bme280_get_sensor_mode@rslt,w
 14912  1D55  1D03               	btfss	3,2
 14913  1D56  2D74               	goto	l4178
 14914                           
 14915                           ;BME280_driver/bme280.c: 617:     {;BME280_driver/bme280.c: 619:         rslt = bme280_g
      +                          et_regs(0xF4, sensor_mode, 1, dev);
 14916  1D57  0845               	movf	bme280_get_sensor_mode@sensor_mode,w
 14917  1D58  00C1               	movwf	??_bme280_get_sensor_mode
 14918  1D59  0841               	movf	??_bme280_get_sensor_mode,w
 14919  1D5A  00B7               	movwf	bme280_get_regs@reg_data
 14920  1D5B  3001               	movlw	1
 14921  1D5C  00B8               	movwf	bme280_get_regs@len
 14922  1D5D  3000               	movlw	0
 14923  1D5E  00B9               	movwf	bme280_get_regs@len+1
 14924  1D5F  0840               	movf	bme280_get_sensor_mode@dev,w
 14925  1D60  00C2               	movwf	??_bme280_get_sensor_mode+1
 14926  1D61  0842               	movf	??_bme280_get_sensor_mode+1,w
 14927  1D62  00BA               	movwf	bme280_get_regs@dev
 14928  1D63  30F4               	movlw	244
 14929  1D64  3190  2050         	fcall	_bme280_get_regs
 14930  1D66  00C3               	movwf	??_bme280_get_sensor_mode+2
 14931  1D67  0843               	movf	??_bme280_get_sensor_mode+2,w
 14932  1D68  00C4               	movwf	bme280_get_sensor_mode@rslt
 14933                           
 14934                           ;BME280_driver/bme280.c: 622:         *sensor_mode = (*sensor_mode & ( 0x03));
 14935  1D69  0845               	movf	bme280_get_sensor_mode@sensor_mode,w
 14936  1D6A  0086               	movwf	6
 14937  1D6B  0187               	clrf	7
 14938  1D6C  0801               	movf	1,w
 14939  1D6D  3903               	andlw	3
 14940  1D6E  00C1               	movwf	??_bme280_get_sensor_mode
 14941  1D6F  0845               	movf	bme280_get_sensor_mode@sensor_mode,w
 14942  1D70  0086               	movwf	6
 14943  1D71  0187               	clrf	7
 14944  1D72  0841               	movf	??_bme280_get_sensor_mode,w
 14945  1D73  0081               	movwf	1
 14946  1D74                     l4178:	
 14947                           
 14948                           ;BME280_driver/bme280.c: 625:     return rslt;
 14949  1D74  0844               	movf	bme280_get_sensor_mode@rslt,w
 14950  1D75  0008               	return
 14951  1D76                     __end_of_bme280_get_sensor_mode:	
 14952                           
 14953                           	psect	text51
 14954  1480                     __ptext51:	
 14955 ;; *************** function _bme280_init *****************
 14956 ;; Defined at:
 14957 ;;		line 357 in file "BME280_driver/bme280.c"
 14958 ;; Parameters:    Size  Location     Type
 14959 ;;  dev             1    wreg     PTR struct bme280_dev
 14960 ;;		 -> EnvSensor(51), 
 14961 ;; Auto vars:     Size  Location     Type
 14962 ;;  dev             1   70[BANK0 ] PTR struct bme280_dev
 14963 ;;		 -> EnvSensor(51), 
 14964 ;;  rslt            1   69[BANK0 ] char 
 14965 ;;  chip_id         1   68[BANK0 ] unsigned char 
 14966 ;;  try_count       1   67[BANK0 ] unsigned char 
 14967 ;; Return value:  Size  Location     Type
 14968 ;;                  1    wreg      char 
 14969 ;; Registers used:
 14970 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14971 ;; Tracked objects:
 14972 ;;		On entry : 1F/3
 14973 ;;		On exit  : 1F/0
 14974 ;;		Unchanged: 0/0
 14975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14977 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14978 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14979 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14980 ;;Total ram usage:        7 bytes
 14981 ;; Hardware stack levels used:    1
 14982 ;; Hardware stack levels required when called:   12
 14983 ;; This function calls:
 14984 ;;		_Sleep
 14985 ;;		_bme280_get_regs
 14986 ;;		_bme280_soft_reset
 14987 ;;		_get_calib_data
 14988 ;;		_null_ptr_check
 14989 ;; This function is called by:
 14990 ;;		_BME280_Init
 14991 ;; This function uses a non-reentrant model
 14992 ;;
 14993                           
 14994                           
 14995                           ;psect for function _bme280_init
 14996  1480                     _bme280_init:	
 14997                           
 14998                           ;incstack = 0
 14999                           ; Regs used in _bme280_init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15000                           ;bme280_init@dev stored from wreg
 15001  1480  0020               	movlb	0	; select bank0
 15002  1481  00E6               	movwf	bme280_init@dev
 15003                           
 15004                           ;BME280_driver/bme280.c: 357: int8_t bme280_init(struct bme280_dev *dev);BME280_driver/b
      +                          me280.c: 358: {;BME280_driver/bme280.c: 359:     int8_t rslt;;BME280_driver/bme280.c: 36
      +                          2:     uint8_t try_count = 5;
 15005  1482  3005               	movlw	5
 15006  1483  00E0               	movwf	??_bme280_init
 15007  1484  0860               	movf	??_bme280_init,w
 15008  1485  00E3               	movwf	bme280_init@try_count
 15009                           
 15010                           ;BME280_driver/bme280.c: 363:     uint8_t chip_id = 0;
 15011  1486  01E4               	clrf	bme280_init@chip_id
 15012                           
 15013                           ;BME280_driver/bme280.c: 366:     rslt = null_ptr_check(dev);
 15014  1487  0866               	movf	bme280_init@dev,w
 15015  1488  319C  24DA  3194   	fcall	_null_ptr_check
 15016  148B  00E0               	movwf	??_bme280_init
 15017  148C  0860               	movf	??_bme280_init,w
 15018  148D  00E5               	movwf	bme280_init@rslt
 15019                           
 15020                           ;BME280_driver/bme280.c: 369:     if (rslt == 0)
 15021  148E  0865               	movf	bme280_init@rslt,w
 15022  148F  1903               	btfsc	3,2
 15023  1490  2CDB               	goto	l4378
 15024  1491  2CE5               	goto	l55
 15025  1492                     l4360:	
 15026                           
 15027                           ;BME280_driver/bme280.c: 372:         {;BME280_driver/bme280.c: 374:             rslt = 
      +                          bme280_get_regs(0xD0, &chip_id, 1, dev);
 15028  1492  3064               	movlw	(low (bme280_init@chip_id| 0))& (0+255)
 15029  1493  00E0               	movwf	??_bme280_init
 15030  1494  0860               	movf	??_bme280_init,w
 15031  1495  00B7               	movwf	bme280_get_regs@reg_data
 15032  1496  3001               	movlw	1
 15033  1497  00B8               	movwf	bme280_get_regs@len
 15034  1498  3000               	movlw	0
 15035  1499  00B9               	movwf	bme280_get_regs@len+1
 15036  149A  0866               	movf	bme280_init@dev,w
 15037  149B  00E1               	movwf	??_bme280_init+1
 15038  149C  0861               	movf	??_bme280_init+1,w
 15039  149D  00BA               	movwf	bme280_get_regs@dev
 15040  149E  30D0               	movlw	208
 15041  149F  3190  2050  3194   	fcall	_bme280_get_regs
 15042  14A2  00E2               	movwf	??_bme280_init+2
 15043  14A3  0862               	movf	??_bme280_init+2,w
 15044  14A4  00E5               	movwf	bme280_init@rslt
 15045                           
 15046                           ;BME280_driver/bme280.c: 377:             if ((rslt == 0) && (chip_id == 0x60))
 15047  14A5  0865               	movf	bme280_init@rslt,w
 15048  14A6  1D03               	btfss	3,2
 15049  14A7  2CC6               	goto	l4374
 15050  14A8  3060               	movlw	96
 15051  14A9  0664               	xorwf	bme280_init@chip_id,w
 15052  14AA  1D03               	btfss	3,2
 15053  14AB  2CC6               	goto	l4374
 15054                           
 15055                           ;BME280_driver/bme280.c: 378:             {;BME280_driver/bme280.c: 379:                
      +                           dev->chip_id = chip_id;
 15056  14AC  0864               	movf	bme280_init@chip_id,w
 15057  14AD  00E0               	movwf	??_bme280_init
 15058  14AE  0866               	movf	bme280_init@dev,w
 15059  14AF  0086               	movwf	6
 15060  14B0  3001               	movlw	1	; select bank2/3
 15061  14B1  0087               	movwf	7
 15062  14B2  0860               	movf	??_bme280_init,w
 15063  14B3  0081               	movwf	1
 15064                           
 15065                           ;BME280_driver/bme280.c: 382:                 rslt = bme280_soft_reset(dev);
 15066  14B4  0866               	movf	bme280_init@dev,w
 15067  14B5  319F  270F  3194   	fcall	_bme280_soft_reset
 15068  14B8  00E0               	movwf	??_bme280_init
 15069  14B9  0860               	movf	??_bme280_init,w
 15070  14BA  00E5               	movwf	bme280_init@rslt
 15071                           
 15072                           ;BME280_driver/bme280.c: 383:                 if (rslt == 0)
 15073  14BB  0865               	movf	bme280_init@rslt,w
 15074  14BC  1D03               	btfss	3,2
 15075  14BD  2CDE               	goto	l4380
 15076                           
 15077                           ;BME280_driver/bme280.c: 384:                 {;BME280_driver/bme280.c: 386:            
      +                                   rslt = get_calib_data(dev);
 15078  14BE  0866               	movf	bme280_init@dev,w
 15079  14BF  3191  21E0  3194   	fcall	_get_calib_data
 15080  14C2  00E0               	movwf	??_bme280_init
 15081  14C3  0860               	movf	??_bme280_init,w
 15082  14C4  00E5               	movwf	bme280_init@rslt
 15083  14C5  2CDE               	goto	l4380
 15084  14C6                     l4374:	
 15085                           
 15086                           ;BME280_driver/bme280.c: 392:             dev->delay_ms(1);
 15087  14C6  3000               	movlw	0
 15088  14C7  00F3               	movwf	Sleep@ms+3
 15089  14C8  3000               	movlw	0
 15090  14C9  00F2               	movwf	Sleep@ms+2
 15091  14CA  3000               	movlw	0
 15092  14CB  00F1               	movwf	Sleep@ms+1
 15093  14CC  3001               	movlw	1
 15094  14CD  00F0               	movwf	Sleep@ms
 15095  14CE  0866               	movf	bme280_init@dev,w
 15096  14CF  3E07               	addlw	7
 15097  14D0  0086               	movwf	6
 15098  14D1  3001               	movlw	1	; select bank2/3
 15099  14D2  0087               	movwf	7
 15100  14D3  3F41               	moviw [1]fsr1
 15101  14D4  008A               	movwf	10
 15102  14D5  3F40               	moviw [0]fsr1
 15103  14D6  000A               	callw
 15104  14D7  3194               	pagesel	$
 15105                           
 15106                           ;BME280_driver/bme280.c: 393:             --try_count;
 15107  14D8  3001               	movlw	1
 15108  14D9  0020               	movlb	0	; select bank0
 15109  14DA  02E3               	subwf	bme280_init@try_count,f
 15110  14DB                     l4378:	
 15111                           
 15112                           ;BME280_driver/bme280.c: 371:         while (try_count)
 15113  14DB  0863               	movf	bme280_init@try_count,w
 15114  14DC  1D03               	btfss	3,2
 15115  14DD  2C92               	goto	l4360
 15116  14DE                     l4380:	
 15117                           
 15118                           ;BME280_driver/bme280.c: 397:         if (!try_count)
 15119  14DE  0863               	movf	bme280_init@try_count,w
 15120  14DF  1D03               	btfss	3,2
 15121  14E0  2CE5               	goto	l55
 15122                           
 15123                           ;BME280_driver/bme280.c: 398:         {;BME280_driver/bme280.c: 399:             rslt = 
      +                          -2;
 15124  14E1  30FE               	movlw	254
 15125  14E2  00E0               	movwf	??_bme280_init
 15126  14E3  0860               	movf	??_bme280_init,w
 15127  14E4  00E5               	movwf	bme280_init@rslt
 15128  14E5                     l55:	
 15129                           ;BME280_driver/bme280.c: 401:     }
 15130                           
 15131                           
 15132                           ;BME280_driver/bme280.c: 403:     return rslt;
 15133  14E5  0865               	movf	bme280_init@rslt,w
 15134  14E6  0008               	return
 15135  14E7                     __end_of_bme280_init:	
 15136                           
 15137                           	psect	text52
 15138  11E0                     __ptext52:	
 15139 ;; *************** function _get_calib_data *****************
 15140 ;; Defined at:
 15141 ;;		line 1307 in file "BME280_driver/bme280.c"
 15142 ;; Parameters:    Size  Location     Type
 15143 ;;  dev             1    wreg     PTR struct bme280_dev
 15144 ;;		 -> EnvSensor(51), 
 15145 ;; Auto vars:     Size  Location     Type
 15146 ;;  dev             1   63[BANK0 ] PTR struct bme280_dev
 15147 ;;		 -> EnvSensor(51), 
 15148 ;;  calib_data     26   35[BANK0 ] unsigned char [26]
 15149 ;;  rslt            1   62[BANK0 ] char 
 15150 ;;  reg_addr        1    0        unsigned char 
 15151 ;; Return value:  Size  Location     Type
 15152 ;;                  1    wreg      char 
 15153 ;; Registers used:
 15154 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15155 ;; Tracked objects:
 15156 ;;		On entry : 1F/0
 15157 ;;		On exit  : 1F/0
 15158 ;;		Unchanged: 0/0
 15159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15161 ;;      Locals:         0      29       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15162 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15163 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15164 ;;Total ram usage:       32 bytes
 15165 ;; Hardware stack levels used:    1
 15166 ;; Hardware stack levels required when called:   11
 15167 ;; This function calls:
 15168 ;;		_bme280_get_regs
 15169 ;;		_parse_humidity_calib_data
 15170 ;;		_parse_temp_press_calib_data
 15171 ;; This function is called by:
 15172 ;;		_bme280_init
 15173 ;; This function uses a non-reentrant model
 15174 ;;
 15175                           
 15176                           
 15177                           ;psect for function _get_calib_data
 15178  11E0                     _get_calib_data:	
 15179                           
 15180                           ;incstack = 0
 15181                           ; Regs used in _get_calib_data: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15182                           ;get_calib_data@dev stored from wreg
 15183  11E0  00DF               	movwf	get_calib_data@dev
 15184                           
 15185                           ;BME280_driver/bme280.c: 1313:     uint8_t calib_data[26] = { 0 };
 15186  11E1  3043               	movlw	low get_calib_data@calib_data
 15187  11E2  0086               	movwf	6
 15188  11E3  3000               	movlw	high get_calib_data@calib_data
 15189  11E4  0087               	movwf	7
 15190  11E5  301A               	movlw	26
 15191  11E6  00C0               	movwf	??_get_calib_data
 15192  11E7  3000               	movlw	0
 15193  11E8                     u4230:	
 15194  11E8  001E               	movwi fsr1++
 15195  11E9  0BC0               	decfsz	??_get_calib_data,f
 15196  11EA  29E8               	goto	u4230
 15197                           
 15198                           ;BME280_driver/bme280.c: 1316:     rslt = bme280_get_regs(reg_addr, calib_data, 26, dev)
      +                          ;
 15199  11EB  3043               	movlw	(low (get_calib_data@calib_data| 0))& (0+255)
 15200  11EC  00C0               	movwf	??_get_calib_data
 15201  11ED  0840               	movf	??_get_calib_data,w
 15202  11EE  00B7               	movwf	bme280_get_regs@reg_data
 15203  11EF  301A               	movlw	26
 15204  11F0  00B8               	movwf	bme280_get_regs@len
 15205  11F1  3000               	movlw	0
 15206  11F2  00B9               	movwf	bme280_get_regs@len+1
 15207  11F3  085F               	movf	get_calib_data@dev,w
 15208  11F4  00C1               	movwf	??_get_calib_data+1
 15209  11F5  0841               	movf	??_get_calib_data+1,w
 15210  11F6  00BA               	movwf	bme280_get_regs@dev
 15211  11F7  3088               	movlw	136
 15212  11F8  3190  2050  3191   	fcall	_bme280_get_regs
 15213  11FB  00C2               	movwf	??_get_calib_data+2
 15214  11FC  0842               	movf	??_get_calib_data+2,w
 15215  11FD  00DE               	movwf	get_calib_data@rslt
 15216                           
 15217                           ;BME280_driver/bme280.c: 1317:     if (rslt == 0)
 15218  11FE  085E               	movf	get_calib_data@rslt,w
 15219  11FF  1D03               	btfss	3,2
 15220  1200  2A26               	goto	l4166
 15221                           
 15222                           ;BME280_driver/bme280.c: 1318:     {;BME280_driver/bme280.c: 1322:         parse_temp_pr
      +                          ess_calib_data(calib_data, dev);
 15223  1201  085F               	movf	get_calib_data@dev,w
 15224  1202  00C0               	movwf	??_get_calib_data
 15225  1203  0840               	movf	??_get_calib_data,w
 15226  1204  00F0               	movwf	parse_temp_press_calib_data@dev
 15227  1205  3043               	movlw	(low (get_calib_data@calib_data| 0))& (0+255)
 15228  1206  3189  218B  3191   	fcall	_parse_temp_press_calib_data
 15229                           
 15230                           ;BME280_driver/bme280.c: 1326:         rslt = bme280_get_regs(reg_addr, calib_data, 7, d
      +                          ev);
 15231  1209  3043               	movlw	(low (get_calib_data@calib_data| 0))& (0+255)
 15232  120A  00C0               	movwf	??_get_calib_data
 15233  120B  0840               	movf	??_get_calib_data,w
 15234  120C  00B7               	movwf	bme280_get_regs@reg_data
 15235  120D  3007               	movlw	7
 15236  120E  00B8               	movwf	bme280_get_regs@len
 15237  120F  3000               	movlw	0
 15238  1210  00B9               	movwf	bme280_get_regs@len+1
 15239  1211  085F               	movf	get_calib_data@dev,w
 15240  1212  00C1               	movwf	??_get_calib_data+1
 15241  1213  0841               	movf	??_get_calib_data+1,w
 15242  1214  00BA               	movwf	bme280_get_regs@dev
 15243  1215  30E1               	movlw	225
 15244  1216  3190  2050  3191   	fcall	_bme280_get_regs
 15245  1219  00C2               	movwf	??_get_calib_data+2
 15246  121A  0842               	movf	??_get_calib_data+2,w
 15247  121B  00DE               	movwf	get_calib_data@rslt
 15248                           
 15249                           ;BME280_driver/bme280.c: 1327:         if (rslt == 0)
 15250  121C  085E               	movf	get_calib_data@rslt,w
 15251  121D  1D03               	btfss	3,2
 15252  121E  2A26               	goto	l4166
 15253                           
 15254                           ;BME280_driver/bme280.c: 1328:         {;BME280_driver/bme280.c: 1332:             parse
      +                          _humidity_calib_data(calib_data, dev);
 15255  121F  085F               	movf	get_calib_data@dev,w
 15256  1220  00C0               	movwf	??_get_calib_data
 15257  1221  0840               	movf	??_get_calib_data,w
 15258  1222  00F0               	movwf	parse_humidity_calib_data@dev
 15259  1223  3043               	movlw	(low (get_calib_data@calib_data| 0))& (0+255)
 15260  1224  3188  2055         	fcall	_parse_humidity_calib_data
 15261  1226                     l4166:	
 15262                           
 15263                           ;BME280_driver/bme280.c: 1336:     return rslt;
 15264  1226  085E               	movf	get_calib_data@rslt,w
 15265  1227  0008               	return
 15266  1228                     __end_of_get_calib_data:	
 15267                           
 15268                           	psect	text53
 15269  098B                     __ptext53:	
 15270 ;; *************** function _parse_temp_press_calib_data *****************
 15271 ;; Defined at:
 15272 ;;		line 1358 in file "BME280_driver/bme280.c"
 15273 ;; Parameters:    Size  Location     Type
 15274 ;;  reg_data        1    wreg     PTR const unsigned char 
 15275 ;;		 -> get_calib_data@calib_data(26), 
 15276 ;;  dev             1    0[COMMON] PTR struct bme280_dev
 15277 ;;		 -> EnvSensor(51), 
 15278 ;; Auto vars:     Size  Location     Type
 15279 ;;  reg_data        1    3[COMMON] PTR const unsigned char 
 15280 ;;		 -> get_calib_data@calib_data(26), 
 15281 ;;  calib_data      1    2[COMMON] PTR struct bme280_calib_
 15282 ;;		 -> EnvSensor.calib_data(37), EnvSensor(51), 
 15283 ;; Return value:  Size  Location     Type
 15284 ;;                  1    wreg      void 
 15285 ;; Registers used:
 15286 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 15287 ;; Tracked objects:
 15288 ;;		On entry : 1F/0
 15289 ;;		On exit  : 1F/0
 15290 ;;		Unchanged: 1F/0
 15291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15292 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15293 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15294 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15295 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15296 ;;Total ram usage:        4 bytes
 15297 ;; Hardware stack levels used:    1
 15298 ;; Hardware stack levels required when called:    3
 15299 ;; This function calls:
 15300 ;;		Nothing
 15301 ;; This function is called by:
 15302 ;;		_get_calib_data
 15303 ;; This function uses a non-reentrant model
 15304 ;;
 15305                           
 15306                           
 15307                           ;psect for function _parse_temp_press_calib_data
 15308  098B                     _parse_temp_press_calib_data:	
 15309                           
 15310                           ;incstack = 0
 15311                           ; Regs used in _parse_temp_press_calib_data: [wreg-fsr1h+status,2+status,0]
 15312                           ;parse_temp_press_calib_data@reg_data stored from wreg
 15313  098B  00F3               	movwf	parse_temp_press_calib_data@reg_data
 15314                           
 15315                           ;BME280_driver/bme280.c: 1358: static void parse_temp_press_calib_data(const uint8_t *re
      +                          g_data, struct bme280_dev *dev);BME280_driver/bme280.c: 1359: {;BME280_driver/bme280.c: 
      +                          1360:     struct bme280_calib_data *calib_data = &dev->calib_data;
 15316  098C  0870               	movf	parse_temp_press_calib_data@dev,w
 15317  098D  3E09               	addlw	9
 15318  098E  00F1               	movwf	??_parse_temp_press_calib_data
 15319  098F  0871               	movf	??_parse_temp_press_calib_data,w
 15320  0990  00F2               	movwf	parse_temp_press_calib_data@calib_data
 15321                           
 15322                           ;BME280_driver/bme280.c: 1362:     calib_data->dig_T1 = (((uint16_t)reg_data[1] << 8) | 
      +                          (uint16_t)reg_data[0]);
 15323  0991  0A73               	incf	parse_temp_press_calib_data@reg_data,w
 15324  0992  0084               	movwf	4
 15325  0993  0185               	clrf	5
 15326  0994  0800               	movf	0,w
 15327  0995  00F1               	movwf	??_parse_temp_press_calib_data
 15328  0996  0873               	movf	parse_temp_press_calib_data@reg_data,w
 15329  0997  0084               	movwf	4
 15330  0998  0185               	clrf	5
 15331  0999  0872               	movf	parse_temp_press_calib_data@calib_data,w
 15332  099A  0086               	movwf	6
 15333  099B  3001               	movlw	1	; select bank2/3
 15334  099C  0087               	movwf	7
 15335  099D  0800               	movf	0,w
 15336  099E  3FC0               	movwi [0]fsr1
 15337  099F  0871               	movf	??_parse_temp_press_calib_data,w
 15338  09A0  3FC1               	movwi [1]fsr1
 15339                           
 15340                           ;BME280_driver/bme280.c: 1363:     calib_data->dig_T2 = (int16_t)(((uint16_t)reg_data[3]
      +                           << 8) | (uint16_t)reg_data[2]);
 15341  09A1  0873               	movf	parse_temp_press_calib_data@reg_data,w
 15342  09A2  3E03               	addlw	3
 15343  09A3  0084               	movwf	4
 15344  09A4  0185               	clrf	5
 15345  09A5  0800               	movf	0,w
 15346  09A6  00F1               	movwf	??_parse_temp_press_calib_data
 15347  09A7  0873               	movf	parse_temp_press_calib_data@reg_data,w
 15348  09A8  3E02               	addlw	2
 15349  09A9  0084               	movwf	4
 15350  09AA  0185               	clrf	5
 15351  09AB  0872               	movf	parse_temp_press_calib_data@calib_data,w
 15352  09AC  3E02               	addlw	2
 15353  09AD  0086               	movwf	6
 15354  09AE  3001               	movlw	1	; select bank2/3
 15355  09AF  0087               	movwf	7
 15356  09B0  0800               	movf	0,w
 15357  09B1  3FC0               	movwi [0]fsr1
 15358  09B2  0871               	movf	??_parse_temp_press_calib_data,w
 15359  09B3  3FC1               	movwi [1]fsr1
 15360                           
 15361                           ;BME280_driver/bme280.c: 1364:     calib_data->dig_T3 = (int16_t)(((uint16_t)reg_data[5]
      +                           << 8) | (uint16_t)reg_data[4]);
 15362  09B4  0873               	movf	parse_temp_press_calib_data@reg_data,w
 15363  09B5  3E05               	addlw	5
 15364  09B6  0084               	movwf	4
 15365  09B7  0185               	clrf	5
 15366  09B8  0800               	movf	0,w
 15367  09B9  00F1               	movwf	??_parse_temp_press_calib_data
 15368  09BA  0873               	movf	parse_temp_press_calib_data@reg_data,w
 15369  09BB  3E04               	addlw	4
 15370  09BC  0084               	movwf	4
 15371  09BD  0185               	clrf	5
 15372  09BE  0872               	movf	parse_temp_press_calib_data@calib_data,w
 15373  09BF  3E04               	addlw	4
 15374  09C0  0086               	movwf	6
 15375  09C1  3001               	movlw	1	; select bank2/3
 15376  09C2  0087               	movwf	7
 15377  09C3  0800               	movf	0,w
 15378  09C4  3FC0               	movwi [0]fsr1
 15379  09C5  0871               	movf	??_parse_temp_press_calib_data,w
 15380  09C6  3FC1               	movwi [1]fsr1
 15381                           
 15382                           ;BME280_driver/bme280.c: 1365:     calib_data->dig_P1 = (((uint16_t)reg_data[7] << 8) | 
      +                          (uint16_t)reg_data[6]);
 15383  09C7  0873               	movf	parse_temp_press_calib_data@reg_data,w
 15384  09C8  3E07               	addlw	7
 15385  09C9  0084               	movwf	4
 15386  09CA  0185               	clrf	5
 15387  09CB  0800               	movf	0,w
 15388  09CC  00F1               	movwf	??_parse_temp_press_calib_data
 15389  09CD  0873               	movf	parse_temp_press_calib_data@reg_data,w
 15390  09CE  3E06               	addlw	6
 15391  09CF  0084               	movwf	4
 15392  09D0  0185               	clrf	5
 15393  09D1  0872               	movf	parse_temp_press_calib_data@calib_data,w
 15394  09D2  3E06               	addlw	6
 15395  09D3  0086               	movwf	6
 15396  09D4  3001               	movlw	1	; select bank2/3
 15397  09D5  0087               	movwf	7
 15398  09D6  0800               	movf	0,w
 15399  09D7  3FC0               	movwi [0]fsr1
 15400  09D8  0871               	movf	??_parse_temp_press_calib_data,w
 15401  09D9  3FC1               	movwi [1]fsr1
 15402                           
 15403                           ;BME280_driver/bme280.c: 1366:     calib_data->dig_P2 = (int16_t)(((uint16_t)reg_data[9]
      +                           << 8) | (uint16_t)reg_data[8]);
 15404  09DA  0873               	movf	parse_temp_press_calib_data@reg_data,w
 15405  09DB  3E09               	addlw	9
 15406  09DC  0084               	movwf	4
 15407  09DD  0185               	clrf	5
 15408  09DE  0800               	movf	0,w
 15409  09DF  00F1               	movwf	??_parse_temp_press_calib_data
 15410  09E0  0873               	movf	parse_temp_press_calib_data@reg_data,w
 15411  09E1  3E08               	addlw	8
 15412  09E2  0084               	movwf	4
 15413  09E3  0185               	clrf	5
 15414  09E4  0872               	movf	parse_temp_press_calib_data@calib_data,w
 15415  09E5  3E08               	addlw	8
 15416  09E6  0086               	movwf	6
 15417  09E7  3001               	movlw	1	; select bank2/3
 15418  09E8  0087               	movwf	7
 15419  09E9  0800               	movf	0,w
 15420  09EA  3FC0               	movwi [0]fsr1
 15421  09EB  0871               	movf	??_parse_temp_press_calib_data,w
 15422  09EC  3FC1               	movwi [1]fsr1
 15423                           
 15424                           ;BME280_driver/bme280.c: 1367:     calib_data->dig_P3 = (int16_t)(((uint16_t)reg_data[11
      +                          ] << 8) | (uint16_t)reg_data[10]);
 15425  09ED  0873               	movf	parse_temp_press_calib_data@reg_data,w
 15426  09EE  3E0B               	addlw	11
 15427  09EF  0084               	movwf	4
 15428  09F0  0185               	clrf	5
 15429  09F1  0800               	movf	0,w
 15430  09F2  00F1               	movwf	??_parse_temp_press_calib_data
 15431  09F3  0873               	movf	parse_temp_press_calib_data@reg_data,w
 15432  09F4  3E0A               	addlw	10
 15433  09F5  0084               	movwf	4
 15434  09F6  0185               	clrf	5
 15435  09F7  0872               	movf	parse_temp_press_calib_data@calib_data,w
 15436  09F8  3E0A               	addlw	10
 15437  09F9  0086               	movwf	6
 15438  09FA  3001               	movlw	1	; select bank2/3
 15439  09FB  0087               	movwf	7
 15440  09FC  0800               	movf	0,w
 15441  09FD  3FC0               	movwi [0]fsr1
 15442  09FE  0871               	movf	??_parse_temp_press_calib_data,w
 15443  09FF  3FC1               	movwi [1]fsr1
 15444                           
 15445                           ;BME280_driver/bme280.c: 1368:     calib_data->dig_P4 = (int16_t)(((uint16_t)reg_data[13
      +                          ] << 8) | (uint16_t)reg_data[12]);
 15446  0A00  0873               	movf	parse_temp_press_calib_data@reg_data,w
 15447  0A01  3E0D               	addlw	13
 15448  0A02  0084               	movwf	4
 15449  0A03  0185               	clrf	5
 15450  0A04  0800               	movf	0,w
 15451  0A05  00F1               	movwf	??_parse_temp_press_calib_data
 15452  0A06  0873               	movf	parse_temp_press_calib_data@reg_data,w
 15453  0A07  3E0C               	addlw	12
 15454  0A08  0084               	movwf	4
 15455  0A09  0185               	clrf	5
 15456  0A0A  0872               	movf	parse_temp_press_calib_data@calib_data,w
 15457  0A0B  3E0C               	addlw	12
 15458  0A0C  0086               	movwf	6
 15459  0A0D  3001               	movlw	1	; select bank2/3
 15460  0A0E  0087               	movwf	7
 15461  0A0F  0800               	movf	0,w
 15462  0A10  3FC0               	movwi [0]fsr1
 15463  0A11  0871               	movf	??_parse_temp_press_calib_data,w
 15464  0A12  3FC1               	movwi [1]fsr1
 15465                           
 15466                           ;BME280_driver/bme280.c: 1369:     calib_data->dig_P5 = (int16_t)(((uint16_t)reg_data[15
      +                          ] << 8) | (uint16_t)reg_data[14]);
 15467  0A13  0873               	movf	parse_temp_press_calib_data@reg_data,w
 15468  0A14  3E0F               	addlw	15
 15469  0A15  0084               	movwf	4
 15470  0A16  0185               	clrf	5
 15471  0A17  0800               	movf	0,w
 15472  0A18  00F1               	movwf	??_parse_temp_press_calib_data
 15473  0A19  0873               	movf	parse_temp_press_calib_data@reg_data,w
 15474  0A1A  3E0E               	addlw	14
 15475  0A1B  0084               	movwf	4
 15476  0A1C  0185               	clrf	5
 15477  0A1D  0872               	movf	parse_temp_press_calib_data@calib_data,w
 15478  0A1E  3E0E               	addlw	14
 15479  0A1F  0086               	movwf	6
 15480  0A20  3001               	movlw	1	; select bank2/3
 15481  0A21  0087               	movwf	7
 15482  0A22  0800               	movf	0,w
 15483  0A23  3FC0               	movwi [0]fsr1
 15484  0A24  0871               	movf	??_parse_temp_press_calib_data,w
 15485  0A25  3FC1               	movwi [1]fsr1
 15486                           
 15487                           ;BME280_driver/bme280.c: 1370:     calib_data->dig_P6 = (int16_t)(((uint16_t)reg_data[17
      +                          ] << 8) | (uint16_t)reg_data[16]);
 15488  0A26  0873               	movf	parse_temp_press_calib_data@reg_data,w
 15489  0A27  3E11               	addlw	17
 15490  0A28  0084               	movwf	4
 15491  0A29  0185               	clrf	5
 15492  0A2A  0800               	movf	0,w
 15493  0A2B  00F1               	movwf	??_parse_temp_press_calib_data
 15494  0A2C  0873               	movf	parse_temp_press_calib_data@reg_data,w
 15495  0A2D  3E10               	addlw	16
 15496  0A2E  0084               	movwf	4
 15497  0A2F  0185               	clrf	5
 15498  0A30  0872               	movf	parse_temp_press_calib_data@calib_data,w
 15499  0A31  3E10               	addlw	16
 15500  0A32  0086               	movwf	6
 15501  0A33  3001               	movlw	1	; select bank2/3
 15502  0A34  0087               	movwf	7
 15503  0A35  0800               	movf	0,w
 15504  0A36  3FC0               	movwi [0]fsr1
 15505  0A37  0871               	movf	??_parse_temp_press_calib_data,w
 15506  0A38  3FC1               	movwi [1]fsr1
 15507                           
 15508                           ;BME280_driver/bme280.c: 1371:     calib_data->dig_P7 = (int16_t)(((uint16_t)reg_data[19
      +                          ] << 8) | (uint16_t)reg_data[18]);
 15509  0A39  0873               	movf	parse_temp_press_calib_data@reg_data,w
 15510  0A3A  3E13               	addlw	19
 15511  0A3B  0084               	movwf	4
 15512  0A3C  0185               	clrf	5
 15513  0A3D  0800               	movf	0,w
 15514  0A3E  00F1               	movwf	??_parse_temp_press_calib_data
 15515  0A3F  0873               	movf	parse_temp_press_calib_data@reg_data,w
 15516  0A40  3E12               	addlw	18
 15517  0A41  0084               	movwf	4
 15518  0A42  0185               	clrf	5
 15519  0A43  0872               	movf	parse_temp_press_calib_data@calib_data,w
 15520  0A44  3E12               	addlw	18
 15521  0A45  0086               	movwf	6
 15522  0A46  3001               	movlw	1	; select bank2/3
 15523  0A47  0087               	movwf	7
 15524  0A48  0800               	movf	0,w
 15525  0A49  3FC0               	movwi [0]fsr1
 15526  0A4A  0871               	movf	??_parse_temp_press_calib_data,w
 15527  0A4B  3FC1               	movwi [1]fsr1
 15528                           
 15529                           ;BME280_driver/bme280.c: 1372:     calib_data->dig_P8 = (int16_t)(((uint16_t)reg_data[21
      +                          ] << 8) | (uint16_t)reg_data[20]);
 15530  0A4C  0873               	movf	parse_temp_press_calib_data@reg_data,w
 15531  0A4D  3E15               	addlw	21
 15532  0A4E  0084               	movwf	4
 15533  0A4F  0185               	clrf	5
 15534  0A50  0800               	movf	0,w
 15535  0A51  00F1               	movwf	??_parse_temp_press_calib_data
 15536  0A52  0873               	movf	parse_temp_press_calib_data@reg_data,w
 15537  0A53  3E14               	addlw	20
 15538  0A54  0084               	movwf	4
 15539  0A55  0185               	clrf	5
 15540  0A56  0872               	movf	parse_temp_press_calib_data@calib_data,w
 15541  0A57  3E14               	addlw	20
 15542  0A58  0086               	movwf	6
 15543  0A59  3001               	movlw	1	; select bank2/3
 15544  0A5A  0087               	movwf	7
 15545  0A5B  0800               	movf	0,w
 15546  0A5C  3FC0               	movwi [0]fsr1
 15547  0A5D  0871               	movf	??_parse_temp_press_calib_data,w
 15548  0A5E  3FC1               	movwi [1]fsr1
 15549                           
 15550                           ;BME280_driver/bme280.c: 1373:     calib_data->dig_P9 = (int16_t)(((uint16_t)reg_data[23
      +                          ] << 8) | (uint16_t)reg_data[22]);
 15551  0A5F  0873               	movf	parse_temp_press_calib_data@reg_data,w
 15552  0A60  3E17               	addlw	23
 15553  0A61  0084               	movwf	4
 15554  0A62  0185               	clrf	5
 15555  0A63  0800               	movf	0,w
 15556  0A64  00F1               	movwf	??_parse_temp_press_calib_data
 15557  0A65  0873               	movf	parse_temp_press_calib_data@reg_data,w
 15558  0A66  3E16               	addlw	22
 15559  0A67  0084               	movwf	4
 15560  0A68  0185               	clrf	5
 15561  0A69  0872               	movf	parse_temp_press_calib_data@calib_data,w
 15562  0A6A  3E16               	addlw	22
 15563  0A6B  0086               	movwf	6
 15564  0A6C  3001               	movlw	1	; select bank2/3
 15565  0A6D  0087               	movwf	7
 15566  0A6E  0800               	movf	0,w
 15567  0A6F  3FC0               	movwi [0]fsr1
 15568  0A70  0871               	movf	??_parse_temp_press_calib_data,w
 15569  0A71  3FC1               	movwi [1]fsr1
 15570                           
 15571                           ;BME280_driver/bme280.c: 1374:     calib_data->dig_H1 = reg_data[25];
 15572  0A72  0873               	movf	parse_temp_press_calib_data@reg_data,w
 15573  0A73  3E19               	addlw	25
 15574  0A74  0086               	movwf	6
 15575  0A75  0187               	clrf	7
 15576  0A76  0801               	movf	1,w
 15577  0A77  00F1               	movwf	??_parse_temp_press_calib_data
 15578  0A78  0872               	movf	parse_temp_press_calib_data@calib_data,w
 15579  0A79  3E18               	addlw	24
 15580  0A7A  0086               	movwf	6
 15581  0A7B  3001               	movlw	1	; select bank2/3
 15582  0A7C  0087               	movwf	7
 15583  0A7D  0871               	movf	??_parse_temp_press_calib_data,w
 15584  0A7E  0081               	movwf	1
 15585  0A7F  0008               	return
 15586  0A80                     __end_of_parse_temp_press_calib_data:	
 15587                           
 15588                           	psect	text54
 15589  0855                     __ptext54:	
 15590 ;; *************** function _parse_humidity_calib_data *****************
 15591 ;; Defined at:
 15592 ;;		line 1381 in file "BME280_driver/bme280.c"
 15593 ;; Parameters:    Size  Location     Type
 15594 ;;  reg_data        1    wreg     PTR const unsigned char 
 15595 ;;		 -> get_calib_data@calib_data(26), 
 15596 ;;  dev             1    0[COMMON] PTR struct bme280_dev
 15597 ;;		 -> EnvSensor(51), 
 15598 ;; Auto vars:     Size  Location     Type
 15599 ;;  reg_data        1   13[COMMON] PTR const unsigned char 
 15600 ;;		 -> get_calib_data@calib_data(26), 
 15601 ;;  dig_H5_msb      2   10[COMMON] short 
 15602 ;;  dig_H5_lsb      2    8[COMMON] short 
 15603 ;;  dig_H4_msb      2    6[COMMON] short 
 15604 ;;  dig_H4_lsb      2    4[COMMON] short 
 15605 ;;  calib_data      1   12[COMMON] PTR struct bme280_calib_
 15606 ;;		 -> EnvSensor.calib_data(37), EnvSensor(51), 
 15607 ;; Return value:  Size  Location     Type
 15608 ;;                  1    wreg      void 
 15609 ;; Registers used:
 15610 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 15611 ;; Tracked objects:
 15612 ;;		On entry : 1F/0
 15613 ;;		On exit  : 1F/0
 15614 ;;		Unchanged: 1F/0
 15615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15616 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15617 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15618 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15619 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15620 ;;Total ram usage:       14 bytes
 15621 ;; Hardware stack levels used:    1
 15622 ;; Hardware stack levels required when called:    3
 15623 ;; This function calls:
 15624 ;;		Nothing
 15625 ;; This function is called by:
 15626 ;;		_get_calib_data
 15627 ;; This function uses a non-reentrant model
 15628 ;;
 15629                           
 15630                           
 15631                           ;psect for function _parse_humidity_calib_data
 15632  0855                     _parse_humidity_calib_data:	
 15633                           
 15634                           ;incstack = 0
 15635                           ; Regs used in _parse_humidity_calib_data: [wreg-fsr1h+status,2+status,0]
 15636                           ;parse_humidity_calib_data@reg_data stored from wreg
 15637  0855  00FD               	movwf	parse_humidity_calib_data@reg_data
 15638                           
 15639                           ;BME280_driver/bme280.c: 1381: static void parse_humidity_calib_data(const uint8_t *reg_
      +                          data, struct bme280_dev *dev);BME280_driver/bme280.c: 1382: {;BME280_driver/bme280.c: 13
      +                          83:     struct bme280_calib_data *calib_data = &dev->calib_data;
 15640  0856  0870               	movf	parse_humidity_calib_data@dev,w
 15641  0857  3E09               	addlw	9
 15642  0858  00F1               	movwf	??_parse_humidity_calib_data
 15643  0859  0871               	movf	??_parse_humidity_calib_data,w
 15644  085A  00FC               	movwf	parse_humidity_calib_data@calib_data
 15645                           
 15646                           ;BME280_driver/bme280.c: 1384:     int16_t dig_H4_lsb;;BME280_driver/bme280.c: 1385:    
      +                           int16_t dig_H4_msb;;BME280_driver/bme280.c: 1386:     int16_t dig_H5_lsb;;BME280_driver
      +                          /bme280.c: 1387:     int16_t dig_H5_msb;;BME280_driver/bme280.c: 1389:     calib_data->d
      +                          ig_H2 = (int16_t)(((uint16_t)reg_data[1] << 8) | (uint16_t)reg_data[0]);
 15647  085B  0A7D               	incf	parse_humidity_calib_data@reg_data,w
 15648  085C  0084               	movwf	4
 15649  085D  0185               	clrf	5
 15650  085E  0800               	movf	0,w
 15651  085F  00F1               	movwf	??_parse_humidity_calib_data
 15652  0860  087D               	movf	parse_humidity_calib_data@reg_data,w
 15653  0861  0084               	movwf	4
 15654  0862  0185               	clrf	5
 15655  0863  087C               	movf	parse_humidity_calib_data@calib_data,w
 15656  0864  3E19               	addlw	25
 15657  0865  0086               	movwf	6
 15658  0866  3001               	movlw	1	; select bank2/3
 15659  0867  0087               	movwf	7
 15660  0868  0800               	movf	0,w
 15661  0869  3FC0               	movwi [0]fsr1
 15662  086A  0871               	movf	??_parse_humidity_calib_data,w
 15663  086B  3FC1               	movwi [1]fsr1
 15664                           
 15665                           ;BME280_driver/bme280.c: 1390:     calib_data->dig_H3 = reg_data[2];
 15666  086C  087D               	movf	parse_humidity_calib_data@reg_data,w
 15667  086D  3E02               	addlw	2
 15668  086E  0086               	movwf	6
 15669  086F  0187               	clrf	7
 15670  0870  0801               	movf	1,w
 15671  0871  00F1               	movwf	??_parse_humidity_calib_data
 15672  0872  087C               	movf	parse_humidity_calib_data@calib_data,w
 15673  0873  3E1B               	addlw	27
 15674  0874  0086               	movwf	6
 15675  0875  3001               	movlw	1	; select bank2/3
 15676  0876  0087               	movwf	7
 15677  0877  0871               	movf	??_parse_humidity_calib_data,w
 15678  0878  0081               	movwf	1
 15679                           
 15680                           ;BME280_driver/bme280.c: 1391:     dig_H4_msb = (int16_t)(int8_t)reg_data[3] * 16;
 15681  0879  087D               	movf	parse_humidity_calib_data@reg_data,w
 15682  087A  3E03               	addlw	3
 15683  087B  0086               	movwf	6
 15684  087C  0187               	clrf	7
 15685  087D  0801               	movf	1,w
 15686  087E  00F1               	movwf	??_parse_humidity_calib_data
 15687  087F  01F2               	clrf	??_parse_humidity_calib_data+1
 15688  0880  1BF1               	btfsc	??_parse_humidity_calib_data,7
 15689  0881  03F2               	decf	??_parse_humidity_calib_data+1,f
 15690  0882  0EF1               	swapf	??_parse_humidity_calib_data,f
 15691  0883  0EF2               	swapf	??_parse_humidity_calib_data+1,f
 15692  0884  30F0               	movlw	240
 15693  0885  05F2               	andwf	??_parse_humidity_calib_data+1,f
 15694  0886  0871               	movf	??_parse_humidity_calib_data,w
 15695  0887  390F               	andlw	15
 15696  0888  04F2               	iorwf	??_parse_humidity_calib_data+1,f
 15697  0889  30F0               	movlw	240
 15698  088A  05F1               	andwf	??_parse_humidity_calib_data,f
 15699  088B  0871               	movf	??_parse_humidity_calib_data,w
 15700  088C  00F6               	movwf	parse_humidity_calib_data@dig_H4_msb
 15701  088D  0872               	movf	??_parse_humidity_calib_data+1,w
 15702  088E  00F7               	movwf	parse_humidity_calib_data@dig_H4_msb+1
 15703                           
 15704                           ;BME280_driver/bme280.c: 1392:     dig_H4_lsb = (int16_t)(reg_data[4] & 0x0F);
 15705  088F  087D               	movf	parse_humidity_calib_data@reg_data,w
 15706  0890  3E04               	addlw	4
 15707  0891  0086               	movwf	6
 15708  0892  0187               	clrf	7
 15709  0893  0801               	movf	1,w
 15710  0894  390F               	andlw	15
 15711  0895  00F1               	movwf	??_parse_humidity_calib_data
 15712  0896  01F2               	clrf	??_parse_humidity_calib_data+1
 15713  0897  0871               	movf	??_parse_humidity_calib_data,w
 15714  0898  00F4               	movwf	parse_humidity_calib_data@dig_H4_lsb
 15715  0899  0872               	movf	??_parse_humidity_calib_data+1,w
 15716  089A  00F5               	movwf	parse_humidity_calib_data@dig_H4_lsb+1
 15717                           
 15718                           ;BME280_driver/bme280.c: 1393:     calib_data->dig_H4 = dig_H4_msb | dig_H4_lsb;
 15719  089B  0874               	movf	parse_humidity_calib_data@dig_H4_lsb,w
 15720  089C  0476               	iorwf	parse_humidity_calib_data@dig_H4_msb,w
 15721  089D  00F1               	movwf	??_parse_humidity_calib_data
 15722  089E  0875               	movf	parse_humidity_calib_data@dig_H4_lsb+1,w
 15723  089F  0477               	iorwf	parse_humidity_calib_data@dig_H4_msb+1,w
 15724  08A0  00F2               	movwf	??_parse_humidity_calib_data+1
 15725  08A1  087C               	movf	parse_humidity_calib_data@calib_data,w
 15726  08A2  3E1C               	addlw	28
 15727  08A3  0086               	movwf	6
 15728  08A4  3001               	movlw	1	; select bank2/3
 15729  08A5  0087               	movwf	7
 15730  08A6  0871               	movf	??_parse_humidity_calib_data,w
 15731  08A7  3FC0               	movwi [0]fsr1
 15732  08A8  0872               	movf	??_parse_humidity_calib_data+1,w
 15733  08A9  3FC1               	movwi [1]fsr1
 15734                           
 15735                           ;BME280_driver/bme280.c: 1394:     dig_H5_msb = (int16_t)(int8_t)reg_data[5] * 16;
 15736  08AA  087D               	movf	parse_humidity_calib_data@reg_data,w
 15737  08AB  3E05               	addlw	5
 15738  08AC  0086               	movwf	6
 15739  08AD  0187               	clrf	7
 15740  08AE  0801               	movf	1,w
 15741  08AF  00F1               	movwf	??_parse_humidity_calib_data
 15742  08B0  01F2               	clrf	??_parse_humidity_calib_data+1
 15743  08B1  1BF1               	btfsc	??_parse_humidity_calib_data,7
 15744  08B2  03F2               	decf	??_parse_humidity_calib_data+1,f
 15745  08B3  0EF1               	swapf	??_parse_humidity_calib_data,f
 15746  08B4  0EF2               	swapf	??_parse_humidity_calib_data+1,f
 15747  08B5  30F0               	movlw	240
 15748  08B6  05F2               	andwf	??_parse_humidity_calib_data+1,f
 15749  08B7  0871               	movf	??_parse_humidity_calib_data,w
 15750  08B8  390F               	andlw	15
 15751  08B9  04F2               	iorwf	??_parse_humidity_calib_data+1,f
 15752  08BA  30F0               	movlw	240
 15753  08BB  05F1               	andwf	??_parse_humidity_calib_data,f
 15754  08BC  0871               	movf	??_parse_humidity_calib_data,w
 15755  08BD  00FA               	movwf	parse_humidity_calib_data@dig_H5_msb
 15756  08BE  0872               	movf	??_parse_humidity_calib_data+1,w
 15757  08BF  00FB               	movwf	parse_humidity_calib_data@dig_H5_msb+1
 15758                           
 15759                           ;BME280_driver/bme280.c: 1395:     dig_H5_lsb = (int16_t)(reg_data[4] >> 4);
 15760  08C0  087D               	movf	parse_humidity_calib_data@reg_data,w
 15761  08C1  3E04               	addlw	4
 15762  08C2  0086               	movwf	6
 15763  08C3  0187               	clrf	7
 15764  08C4  0801               	movf	1,w
 15765  08C5  00F1               	movwf	??_parse_humidity_calib_data
 15766  08C6  3004               	movlw	4
 15767  08C7                     u4225:	
 15768  08C7  36F1               	lsrf	??_parse_humidity_calib_data,f
 15769  08C8  0B89               	decfsz	9,f
 15770  08C9  28C7               	goto	u4225
 15771  08CA  0871               	movf	??_parse_humidity_calib_data,w
 15772  08CB  00F2               	movwf	??_parse_humidity_calib_data+1
 15773  08CC  01F3               	clrf	??_parse_humidity_calib_data+2
 15774  08CD  0872               	movf	??_parse_humidity_calib_data+1,w
 15775  08CE  00F8               	movwf	parse_humidity_calib_data@dig_H5_lsb
 15776  08CF  0873               	movf	??_parse_humidity_calib_data+2,w
 15777  08D0  00F9               	movwf	parse_humidity_calib_data@dig_H5_lsb+1
 15778                           
 15779                           ;BME280_driver/bme280.c: 1396:     calib_data->dig_H5 = dig_H5_msb | dig_H5_lsb;
 15780  08D1  0878               	movf	parse_humidity_calib_data@dig_H5_lsb,w
 15781  08D2  047A               	iorwf	parse_humidity_calib_data@dig_H5_msb,w
 15782  08D3  00F1               	movwf	??_parse_humidity_calib_data
 15783  08D4  0879               	movf	parse_humidity_calib_data@dig_H5_lsb+1,w
 15784  08D5  047B               	iorwf	parse_humidity_calib_data@dig_H5_msb+1,w
 15785  08D6  00F2               	movwf	??_parse_humidity_calib_data+1
 15786  08D7  087C               	movf	parse_humidity_calib_data@calib_data,w
 15787  08D8  3E1E               	addlw	30
 15788  08D9  0086               	movwf	6
 15789  08DA  3001               	movlw	1	; select bank2/3
 15790  08DB  0087               	movwf	7
 15791  08DC  0871               	movf	??_parse_humidity_calib_data,w
 15792  08DD  3FC0               	movwi [0]fsr1
 15793  08DE  0872               	movf	??_parse_humidity_calib_data+1,w
 15794  08DF  3FC1               	movwi [1]fsr1
 15795                           
 15796                           ;BME280_driver/bme280.c: 1397:     calib_data->dig_H6 = (int8_t)reg_data[6];
 15797  08E0  087D               	movf	parse_humidity_calib_data@reg_data,w
 15798  08E1  3E06               	addlw	6
 15799  08E2  0086               	movwf	6
 15800  08E3  0187               	clrf	7
 15801  08E4  0801               	movf	1,w
 15802  08E5  00F1               	movwf	??_parse_humidity_calib_data
 15803  08E6  087C               	movf	parse_humidity_calib_data@calib_data,w
 15804  08E7  3E20               	addlw	32
 15805  08E8  0086               	movwf	6
 15806  08E9  3001               	movlw	1	; select bank2/3
 15807  08EA  0087               	movwf	7
 15808  08EB  0871               	movf	??_parse_humidity_calib_data,w
 15809  08EC  0081               	movwf	1
 15810  08ED  0008               	return
 15811  08EE                     __end_of_parse_humidity_calib_data:	
 15812                           
 15813                           	psect	text55
 15814  1050                     __ptext55:	
 15815 ;; *************** function _bme280_get_regs *****************
 15816 ;; Defined at:
 15817 ;;		line 409 in file "BME280_driver/bme280.c"
 15818 ;; Parameters:    Size  Location     Type
 15819 ;;  reg_addr        1    wreg     unsigned char 
 15820 ;;  reg_data        1   23[BANK0 ] PTR unsigned char 
 15821 ;;		 -> get_calib_data@calib_data(26), put_device_to_sleep@reg_data(4), write_power_mode@sensor_mode_reg_val(1), set_fil
      +ter_standby_settings@reg_data(1), 
 15822 ;;		 -> set_osr_press_temp_settings@reg_data(1), set_osr_humidity_settings@ctrl_meas(1), bme280_get_sensor_data@reg_data
      +(8), bme280_set_sensor_mode@last_set_mode(1), 
 15823 ;;		 -> bme280_get_sensor_settings@reg_data(4), bme280_set_sensor_settings@sensor_mode(1), bme280_init@chip_id(1), 
 15824 ;;  len             2   24[BANK0 ] unsigned short 
 15825 ;;  dev             1   26[BANK0 ] PTR const struct bme280_
 15826 ;;		 -> EnvSensor(51), 
 15827 ;; Auto vars:     Size  Location     Type
 15828 ;;  reg_addr        1   30[BANK0 ] unsigned char 
 15829 ;;  rslt            1   31[BANK0 ] char 
 15830 ;; Return value:  Size  Location     Type
 15831 ;;                  1    wreg      char 
 15832 ;; Registers used:
 15833 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15834 ;; Tracked objects:
 15835 ;;		On entry : 1F/0
 15836 ;;		On exit  : 1F/0
 15837 ;;		Unchanged: 0/0
 15838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15839 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15840 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15841 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15842 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15843 ;;Total ram usage:        9 bytes
 15844 ;; Hardware stack levels used:    1
 15845 ;; Hardware stack levels required when called:   10
 15846 ;; This function calls:
 15847 ;;		_ReadEnvSensor
 15848 ;;		_null_ptr_check
 15849 ;; This function is called by:
 15850 ;;		_bme280_init
 15851 ;;		_bme280_get_sensor_mode
 15852 ;;		_bme280_get_sensor_data
 15853 ;;		_set_osr_humidity_settings
 15854 ;;		_set_osr_press_temp_settings
 15855 ;;		_set_filter_standby_settings
 15856 ;;		_write_power_mode
 15857 ;;		_put_device_to_sleep
 15858 ;;		_get_calib_data
 15859 ;; This function uses a non-reentrant model
 15860 ;;
 15861                           
 15862                           
 15863                           ;psect for function _bme280_get_regs
 15864  1050                     _bme280_get_regs:	
 15865                           
 15866                           ;incstack = 0
 15867                           ; Regs used in _bme280_get_regs: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15868                           ;bme280_get_regs@reg_addr stored from wreg
 15869  1050  00BE               	movwf	bme280_get_regs@reg_addr
 15870                           
 15871                           ;BME280_driver/bme280.c: 409: int8_t bme280_get_regs(uint8_t reg_addr, uint8_t *reg_data
      +                          , uint16_t len, const struct bme280_dev *dev);BME280_driver/bme280.c: 410: {;BME280_driv
      +                          er/bme280.c: 411:     int8_t rslt;;BME280_driver/bme280.c: 414:     rslt = null_ptr_chec
      +                          k(dev);
 15872  1051  083A               	movf	bme280_get_regs@dev,w
 15873  1052  319C  24DA  3190   	fcall	_null_ptr_check
 15874  1055  00BB               	movwf	??_bme280_get_regs
 15875  1056  083B               	movf	??_bme280_get_regs,w
 15876  1057  00BF               	movwf	bme280_get_regs@rslt
 15877                           
 15878                           ;BME280_driver/bme280.c: 417:     if (rslt == 0)
 15879  1058  083F               	movf	bme280_get_regs@rslt,w
 15880  1059  1D03               	btfss	3,2
 15881  105A  288F               	goto	l65
 15882                           
 15883                           ;BME280_driver/bme280.c: 418:     {;BME280_driver/bme280.c: 420:         if (dev->intf !
      +                          = BME280_I2C_INTF)
 15884  105B  083A               	movf	bme280_get_regs@dev,w
 15885  105C  3E02               	addlw	2
 15886  105D  0086               	movwf	6
 15887  105E  3001               	movlw	1	; select bank2/3
 15888  105F  0087               	movwf	7
 15889  1060  0301               	decf	1,w
 15890  1061  1903               	btfsc	3,2
 15891  1062  2868               	goto	l3944
 15892                           
 15893                           ;BME280_driver/bme280.c: 421:         {;BME280_driver/bme280.c: 422:             reg_add
      +                          r = reg_addr | 0x80;
 15894  1063  083E               	movf	bme280_get_regs@reg_addr,w
 15895  1064  3880               	iorlw	128
 15896  1065  00BB               	movwf	??_bme280_get_regs
 15897  1066  083B               	movf	??_bme280_get_regs,w
 15898  1067  00BE               	movwf	bme280_get_regs@reg_addr
 15899  1068                     l3944:	
 15900                           
 15901                           ;BME280_driver/bme280.c: 426:         rslt = dev->read(dev->dev_id, reg_addr, reg_data, 
      +                          len);
 15902  1068  083A               	movf	bme280_get_regs@dev,w
 15903  1069  0086               	movwf	6
 15904  106A  3001               	movlw	1	; select bank2/3
 15905  106B  0087               	movwf	7
 15906  106C  3001               	movlw	1	; select bank2/3
 15907  106D  3F41               	moviw [1]fsr1
 15908  106E  00AD               	movwf	ReadEnvSensor@dev_id
 15909  106F  083E               	movf	bme280_get_regs@reg_addr,w
 15910  1070  00BB               	movwf	??_bme280_get_regs
 15911  1071  083B               	movf	??_bme280_get_regs,w
 15912  1072  00AE               	movwf	ReadEnvSensor@reg_addr
 15913  1073  0837               	movf	bme280_get_regs@reg_data,w
 15914  1074  00BC               	movwf	??_bme280_get_regs+1
 15915  1075  083C               	movf	??_bme280_get_regs+1,w
 15916  1076  00AF               	movwf	ReadEnvSensor@reg_data
 15917  1077  0839               	movf	bme280_get_regs@len+1,w
 15918  1078  00B1               	movwf	ReadEnvSensor@len+1
 15919  1079  0838               	movf	bme280_get_regs@len,w
 15920  107A  00B0               	movwf	ReadEnvSensor@len
 15921  107B  083A               	movf	bme280_get_regs@dev,w
 15922  107C  3E03               	addlw	3
 15923  107D  0086               	movwf	6
 15924  107E  3001               	movlw	1	; select bank2/3
 15925  107F  0087               	movwf	7
 15926  1080  3F41               	moviw [1]fsr1
 15927  1081  008A               	movwf	10
 15928  1082  3F40               	moviw [0]fsr1
 15929  1083  000A               	callw
 15930  1084  3190               	pagesel	$
 15931  1085  00BD               	movwf	??_bme280_get_regs+2
 15932  1086  083D               	movf	??_bme280_get_regs+2,w
 15933  1087  00BF               	movwf	bme280_get_regs@rslt
 15934                           
 15935                           ;BME280_driver/bme280.c: 429:         if (rslt != 0)
 15936  1088  083F               	movf	bme280_get_regs@rslt,w
 15937  1089  1903               	btfsc	3,2
 15938  108A  288F               	goto	l65
 15939                           
 15940                           ;BME280_driver/bme280.c: 430:         {;BME280_driver/bme280.c: 431:             rslt = 
      +                          -4;
 15941  108B  30FC               	movlw	252
 15942  108C  00BB               	movwf	??_bme280_get_regs
 15943  108D  083B               	movf	??_bme280_get_regs,w
 15944  108E  00BF               	movwf	bme280_get_regs@rslt
 15945  108F                     l65:	
 15946                           ;BME280_driver/bme280.c: 433:     }
 15947                           
 15948                           
 15949                           ;BME280_driver/bme280.c: 435:     return rslt;
 15950  108F  083F               	movf	bme280_get_regs@rslt,w
 15951  1090  0008               	return
 15952  1091                     __end_of_bme280_get_regs:	
 15953                           
 15954                           	psect	text56
 15955  07B5                     __ptext56:	
 15956 ;; *************** function _ReadEnvSensor *****************
 15957 ;; Defined at:
 15958 ;;		line 123 in file "bme280_i2c.c"
 15959 ;; Parameters:    Size  Location     Type
 15960 ;;  dev_id          1   13[BANK0 ] unsigned char 
 15961 ;;  reg_addr        1   14[BANK0 ] unsigned char 
 15962 ;;  reg_data        1   15[BANK0 ] PTR unsigned char 
 15963 ;;		 -> get_calib_data@calib_data(26), put_device_to_sleep@reg_data(4), write_power_mode@sensor_mode_reg_val(1), set_fil
      +ter_standby_settings@reg_data(1), 
 15964 ;;		 -> set_osr_press_temp_settings@reg_data(1), set_osr_humidity_settings@ctrl_meas(1), bme280_get_sensor_data@reg_data
      +(8), bme280_set_sensor_mode@last_set_mode(1), 
 15965 ;;		 -> bme280_get_sensor_settings@reg_data(4), bme280_set_sensor_settings@sensor_mode(1), bme280_init@chip_id(1), 
 15966 ;;  len             2   16[BANK0 ] unsigned short 
 15967 ;; Auto vars:     Size  Location     Type
 15968 ;;  i               2   21[BANK0 ] int 
 15969 ;;  rslt            1   20[BANK0 ] char 
 15970 ;; Return value:  Size  Location     Type
 15971 ;;                  1    wreg      char 
 15972 ;; Registers used:
 15973 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15974 ;; Tracked objects:
 15975 ;;		On entry : 1F/0
 15976 ;;		On exit  : 1F/0
 15977 ;;		Unchanged: 0/0
 15978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15979 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15980 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15981 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15982 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15983 ;;Total ram usage:       10 bytes
 15984 ;; Hardware stack levels used:    1
 15985 ;; Hardware stack levels required when called:    9
 15986 ;; This function calls:
 15987 ;;		_I2C_ReadByte
 15988 ;;		_I2C_Stop
 15989 ;;		_I2C_Wait_SSPIF
 15990 ;;		_I2C_WriteByte
 15991 ;; This function is called by:
 15992 ;;		_BME280_Init
 15993 ;;		_bme280_get_regs
 15994 ;; This function uses a non-reentrant model
 15995 ;;
 15996                           
 15997                           
 15998                           ;psect for function _ReadEnvSensor
 15999  07B5                     _ReadEnvSensor:	
 16000                           
 16001                           ;bme280_i2c.c: 123: int8_t ReadEnvSensor(uint8_t dev_id, uint8_t reg_addr, uint8_t *reg_
      +                          data, uint16_t len);bme280_i2c.c: 124: {;bme280_i2c.c: 125:     int8_t rslt = 0;
 16002                           
 16003                           ;incstack = 0
 16004                           ; Regs used in _ReadEnvSensor: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 16005  07B5  01B4               	clrf	ReadEnvSensor@rslt
 16006                           
 16007                           ;bme280_i2c.c: 127:     PIR1bits.SSP1IF = 0;
 16008  07B6  1190               	bcf	16,3	;volatile
 16009                           
 16010                           ;bme280_i2c.c: 130:     SSP1CON2bits.SEN = 1;
 16011  07B7  0024               	movlb	4	; select bank4
 16012  07B8  1416               	bsf	22,0	;volatile
 16013                           
 16014                           ;bme280_i2c.c: 131:     I2C_Wait_SSPIF();
 16015  07B9  319F  2749  3187   	fcall	_I2C_Wait_SSPIF
 16016                           
 16017                           ;bme280_i2c.c: 134:     I2C_WriteByte(dev_id << 1);
 16018  07BC  352D               	lslf	ReadEnvSensor@dev_id,w
 16019  07BD  319B  23BA  3187   	fcall	_I2C_WriteByte
 16020                           
 16021                           ;bme280_i2c.c: 137:     I2C_WriteByte(reg_addr);
 16022  07C0  0020               	movlb	0	; select bank0
 16023  07C1  082E               	movf	ReadEnvSensor@reg_addr,w
 16024  07C2  319B  23BA  3187   	fcall	_I2C_WriteByte
 16025                           
 16026                           ;bme280_i2c.c: 140:     SSP1CON2bits.RSEN = 1;
 16027  07C5  0024               	movlb	4	; select bank4
 16028  07C6  1496               	bsf	22,1	;volatile
 16029                           
 16030                           ;bme280_i2c.c: 141:     I2C_Wait_SSPIF();
 16031  07C7  319F  2749  3187   	fcall	_I2C_Wait_SSPIF
 16032                           
 16033                           ;bme280_i2c.c: 144:     I2C_WriteByte((dev_id << 1) | 0x01);
 16034  07CA  1403               	setc
 16035  07CB  0D2D               	rlf	ReadEnvSensor@dev_id,w
 16036  07CC  319B  23BA  3187   	fcall	_I2C_WriteByte
 16037                           
 16038                           ;bme280_i2c.c: 147:     for(int i = 0; i < len; i++){
 16039  07CF  0020               	movlb	0	; select bank0
 16040  07D0  01B5               	clrf	ReadEnvSensor@i
 16041  07D1  01B6               	clrf	ReadEnvSensor@i+1
 16042  07D2                     l3902:	
 16043  07D2  0831               	movf	ReadEnvSensor@len+1,w
 16044  07D3  0236               	subwf	ReadEnvSensor@i+1,w
 16045  07D4  1D03               	skipz
 16046  07D5  2FD8               	goto	u3885
 16047  07D6  0830               	movf	ReadEnvSensor@len,w
 16048  07D7  0235               	subwf	ReadEnvSensor@i,w
 16049  07D8                     u3885:	
 16050  07D8  1803               	btfsc	3,0
 16051  07D9  2FFC               	goto	l3904
 16052                           
 16053                           ;bme280_i2c.c: 148:         if(i == len - 1){
 16054  07DA  0830               	movf	ReadEnvSensor@len,w
 16055  07DB  3EFF               	addlw	255
 16056  07DC  00B2               	movwf	??_ReadEnvSensor
 16057  07DD  30FF               	movlw	255
 16058  07DE  3D31               	addwfc	ReadEnvSensor@len+1,w
 16059  07DF  00B3               	movwf	??_ReadEnvSensor+1
 16060  07E0  0836               	movf	ReadEnvSensor@i+1,w
 16061  07E1  0633               	xorwf	??_ReadEnvSensor+1,w
 16062  07E2  1D03               	skipz
 16063  07E3  2FE6               	goto	u3875
 16064  07E4  0835               	movf	ReadEnvSensor@i,w
 16065  07E5  0632               	xorwf	??_ReadEnvSensor,w
 16066  07E6                     u3875:	
 16067  07E6  1D03               	skipz
 16068  07E7  2FEA               	goto	l3898
 16069                           
 16070                           ;bme280_i2c.c: 149:             reg_data[i] = I2C_ReadByte(1);
 16071  07E8  3001               	movlw	1
 16072  07E9  2FEB               	goto	L5
 16073  07EA                     l3898:	
 16074                           ;bme280_i2c.c: 150:         }
 16075                           
 16076                           
 16077                           ;bme280_i2c.c: 152:             reg_data[i]=I2C_ReadByte(0);
 16078  07EA  3000               	movlw	0
 16079  07EB                     L5:	
 16080  07EB  319C  2402  3187   	fcall	_I2C_ReadByte
 16081  07EE  00B2               	movwf	??_ReadEnvSensor
 16082  07EF  0835               	movf	ReadEnvSensor@i,w
 16083  07F0  072F               	addwf	ReadEnvSensor@reg_data,w
 16084  07F1  00B3               	movwf	??_ReadEnvSensor+1
 16085  07F2  0833               	movf	??_ReadEnvSensor+1,w
 16086  07F3  0086               	movwf	6
 16087  07F4  0187               	clrf	7
 16088  07F5  0832               	movf	??_ReadEnvSensor,w
 16089  07F6  0081               	movwf	1
 16090                           
 16091                           ;bme280_i2c.c: 154:     }
 16092  07F7  3001               	movlw	1
 16093  07F8  07B5               	addwf	ReadEnvSensor@i,f
 16094  07F9  3000               	movlw	0
 16095  07FA  3DB6               	addwfc	ReadEnvSensor@i+1,f
 16096  07FB  2FD2               	goto	l3902
 16097  07FC                     l3904:	
 16098                           
 16099                           ;bme280_i2c.c: 157:     I2C_Stop();
 16100  07FC  319B  236E         	fcall	_I2C_Stop
 16101                           
 16102                           ;bme280_i2c.c: 159:     return rslt;
 16103  07FE  0834               	movf	ReadEnvSensor@rslt,w
 16104  07FF  0008               	return
 16105  0800                     __end_of_ReadEnvSensor:	
 16106                           
 16107                           	psect	text57
 16108  1C02                     __ptext57:	
 16109 ;; *************** function _I2C_ReadByte *****************
 16110 ;; Defined at:
 16111 ;;		line 50 in file "bme280_i2c.c"
 16112 ;; Parameters:    Size  Location     Type
 16113 ;;  ackbit          1    wreg     unsigned char 
 16114 ;; Auto vars:     Size  Location     Type
 16115 ;;  ackbit          1   11[BANK0 ] unsigned char 
 16116 ;;  rcvdata         1   12[BANK0 ] unsigned char 
 16117 ;; Return value:  Size  Location     Type
 16118 ;;                  1    wreg      unsigned char 
 16119 ;; Registers used:
 16120 ;;		wreg, status,2, status,0, pclath, cstack
 16121 ;; Tracked objects:
 16122 ;;		On entry : 1F/0
 16123 ;;		On exit  : 1F/0
 16124 ;;		Unchanged: 0/0
 16125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16127 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16128 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16129 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16130 ;;Total ram usage:        3 bytes
 16131 ;; Hardware stack levels used:    1
 16132 ;; Hardware stack levels required when called:    6
 16133 ;; This function calls:
 16134 ;;		_I2C_Wait_SSPIF
 16135 ;; This function is called by:
 16136 ;;		_ReadEnvSensor
 16137 ;; This function uses a non-reentrant model
 16138 ;;
 16139                           
 16140                           
 16141                           ;psect for function _I2C_ReadByte
 16142  1C02                     _I2C_ReadByte:	
 16143                           
 16144                           ;incstack = 0
 16145                           ; Regs used in _I2C_ReadByte: [wreg+status,2+status,0+pclath+cstack]
 16146                           ;I2C_ReadByte@ackbit stored from wreg
 16147  1C02  00AB               	movwf	I2C_ReadByte@ackbit
 16148                           
 16149                           ;bme280_i2c.c: 50: uint8_t I2C_ReadByte(uint8_t ackbit);bme280_i2c.c: 51: {;bme280_i2c.c
      +                          : 52:     uint8_t rcvdata;;bme280_i2c.c: 54:     SSP1CON2bits.RCEN = 1;
 16150  1C03  0024               	movlb	4	; select bank4
 16151  1C04  1596               	bsf	22,3	;volatile
 16152                           
 16153                           ;bme280_i2c.c: 55:     I2C_Wait_SSPIF();
 16154  1C05  319F  2749  319C   	fcall	_I2C_Wait_SSPIF
 16155                           
 16156                           ;bme280_i2c.c: 57:     rcvdata = SSP1BUF;
 16157  1C08  0024               	movlb	4	; select bank4
 16158  1C09  0811               	movf	17,w	;volatile
 16159  1C0A  00FD               	movwf	??_I2C_ReadByte
 16160  1C0B  087D               	movf	??_I2C_ReadByte,w
 16161  1C0C  0020               	movlb	0	; select bank0
 16162  1C0D  00AC               	movwf	I2C_ReadByte@rcvdata
 16163                           
 16164                           ;bme280_i2c.c: 60:     SSP1CON2bits.ACKDT=ackbit;
 16165  1C0E  0C2B               	rrf	I2C_ReadByte@ackbit,w
 16166  1C0F  0024               	movlb	4	; select bank4
 16167  1C10  1C03               	skipc
 16168  1C11  1296               	bcf	22,5	;volatile
 16169  1C12  1803               	skipnc
 16170  1C13  1696               	bsf	22,5	;volatile
 16171                           
 16172                           ;bme280_i2c.c: 61:     SSP1CON2bits.ACKEN = 1;
 16173  1C14  1616               	bsf	22,4	;volatile
 16174                           
 16175                           ;bme280_i2c.c: 62:     I2C_Wait_SSPIF();
 16176  1C15  319F  2749         	fcall	_I2C_Wait_SSPIF
 16177                           
 16178                           ;bme280_i2c.c: 64:     return (rcvdata);
 16179  1C17  082C               	movf	I2C_ReadByte@rcvdata,w
 16180  1C18  0008               	return
 16181  1C19                     __end_of_I2C_ReadByte:	
 16182                           
 16183                           	psect	text58
 16184  1F0F                     __ptext58:	
 16185 ;; *************** function _bme280_soft_reset *****************
 16186 ;; Defined at:
 16187 ;;		line 631 in file "BME280_driver/bme280.c"
 16188 ;; Parameters:    Size  Location     Type
 16189 ;;  dev             1    wreg     PTR const struct bme280_
 16190 ;;		 -> EnvSensor(51), 
 16191 ;; Auto vars:     Size  Location     Type
 16192 ;;  dev             1   57[BANK0 ] PTR const struct bme280_
 16193 ;;		 -> EnvSensor(51), 
 16194 ;;  reg_addr        1   56[BANK0 ] unsigned char 
 16195 ;;  rslt            1   55[BANK0 ] char 
 16196 ;;  soft_rst_cmd    1   54[BANK0 ] unsigned char 
 16197 ;; Return value:  Size  Location     Type
 16198 ;;                  1    wreg      char 
 16199 ;; Registers used:
 16200 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16201 ;; Tracked objects:
 16202 ;;		On entry : 1E/1
 16203 ;;		On exit  : 1F/0
 16204 ;;		Unchanged: 0/0
 16205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16207 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16208 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16209 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16210 ;;Total ram usage:        7 bytes
 16211 ;; Hardware stack levels used:    1
 16212 ;; Hardware stack levels required when called:   11
 16213 ;; This function calls:
 16214 ;;		_Sleep
 16215 ;;		_bme280_set_regs
 16216 ;;		_null_ptr_check
 16217 ;; This function is called by:
 16218 ;;		_bme280_init
 16219 ;;		_put_device_to_sleep
 16220 ;; This function uses a non-reentrant model
 16221 ;;
 16222                           
 16223                           
 16224                           ;psect for function _bme280_soft_reset
 16225  1F0F                     _bme280_soft_reset:	
 16226                           
 16227                           ;incstack = 0
 16228                           ; Regs used in _bme280_soft_reset: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 16229                           ;bme280_soft_reset@dev stored from wreg
 16230  1F0F  0020               	movlb	0	; select bank0
 16231  1F10  00D9               	movwf	bme280_soft_reset@dev
 16232                           
 16233                           ;BME280_driver/bme280.c: 631: int8_t bme280_soft_reset(const struct bme280_dev *dev);BME
      +                          280_driver/bme280.c: 632: {;BME280_driver/bme280.c: 633:     int8_t rslt;;BME280_driver/
      +                          bme280.c: 634:     uint8_t reg_addr = 0xE0;
 16234  1F11  30E0               	movlw	224
 16235  1F12  00D3               	movwf	??_bme280_soft_reset
 16236  1F13  0853               	movf	??_bme280_soft_reset,w
 16237  1F14  00D8               	movwf	bme280_soft_reset@reg_addr
 16238                           
 16239                           ;BME280_driver/bme280.c: 637:     uint8_t soft_rst_cmd = 0xB6;
 16240  1F15  30B6               	movlw	182
 16241  1F16  00D3               	movwf	??_bme280_soft_reset
 16242  1F17  0853               	movf	??_bme280_soft_reset,w
 16243  1F18  00D6               	movwf	bme280_soft_reset@soft_rst_cmd
 16244                           
 16245                           ;BME280_driver/bme280.c: 640:     rslt = null_ptr_check(dev);
 16246  1F19  0859               	movf	bme280_soft_reset@dev,w
 16247  1F1A  319C  24DA  319F   	fcall	_null_ptr_check
 16248  1F1D  00D3               	movwf	??_bme280_soft_reset
 16249  1F1E  0853               	movf	??_bme280_soft_reset,w
 16250  1F1F  00D7               	movwf	bme280_soft_reset@rslt
 16251                           
 16252                           ;BME280_driver/bme280.c: 643:     if (rslt == 0)
 16253  1F20  0857               	movf	bme280_soft_reset@rslt,w
 16254  1F21  1D03               	btfss	3,2
 16255  1F22  2F46               	goto	l4084
 16256                           
 16257                           ;BME280_driver/bme280.c: 644:     {;BME280_driver/bme280.c: 646:         rslt = bme280_s
      +                          et_regs(&reg_addr, &soft_rst_cmd, 1, dev);
 16258  1F23  3056               	movlw	(low (bme280_soft_reset@soft_rst_cmd| 0))& (0+255)
 16259  1F24  00D3               	movwf	??_bme280_soft_reset
 16260  1F25  0853               	movf	??_bme280_soft_reset,w
 16261  1F26  00B4               	movwf	bme280_set_regs@reg_data
 16262  1F27  01B5               	clrf	bme280_set_regs@len
 16263  1F28  0AB5               	incf	bme280_set_regs@len,f
 16264  1F29  0859               	movf	bme280_soft_reset@dev,w
 16265  1F2A  00D4               	movwf	??_bme280_soft_reset+1
 16266  1F2B  0854               	movf	??_bme280_soft_reset+1,w
 16267  1F2C  00B6               	movwf	bme280_set_regs@dev
 16268  1F2D  3058               	movlw	(low (bme280_soft_reset@reg_addr| 0))& (0+255)
 16269  1F2E  3188  20EE  319F   	fcall	_bme280_set_regs
 16270  1F31  00D5               	movwf	??_bme280_soft_reset+2
 16271  1F32  0855               	movf	??_bme280_soft_reset+2,w
 16272  1F33  00D7               	movwf	bme280_soft_reset@rslt
 16273                           
 16274                           ;BME280_driver/bme280.c: 649:         dev->delay_ms(2);
 16275  1F34  3000               	movlw	0
 16276  1F35  00F3               	movwf	Sleep@ms+3
 16277  1F36  3000               	movlw	0
 16278  1F37  00F2               	movwf	Sleep@ms+2
 16279  1F38  3000               	movlw	0
 16280  1F39  00F1               	movwf	Sleep@ms+1
 16281  1F3A  3002               	movlw	2
 16282  1F3B  00F0               	movwf	Sleep@ms
 16283  1F3C  0859               	movf	bme280_soft_reset@dev,w
 16284  1F3D  3E07               	addlw	7
 16285  1F3E  0086               	movwf	6
 16286  1F3F  3001               	movlw	1	; select bank2/3
 16287  1F40  0087               	movwf	7
 16288  1F41  3F41               	moviw [1]fsr1
 16289  1F42  008A               	movwf	10
 16290  1F43  3F40               	moviw [0]fsr1
 16291  1F44  000A               	callw
 16292  1F45  319F               	pagesel	$
 16293  1F46                     l4084:	
 16294                           
 16295                           ;BME280_driver/bme280.c: 652:     return rslt;
 16296  1F46  0020               	movlb	0	; select bank0
 16297  1F47  0857               	movf	bme280_soft_reset@rslt,w
 16298  1F48  0008               	return
 16299  1F49                     __end_of_bme280_soft_reset:	
 16300                           
 16301                           	psect	text59
 16302  08EE                     __ptext59:	
 16303 ;; *************** function _bme280_set_regs *****************
 16304 ;; Defined at:
 16305 ;;		line 442 in file "BME280_driver/bme280.c"
 16306 ;; Parameters:    Size  Location     Type
 16307 ;;  reg_addr        1    wreg     PTR unsigned char 
 16308 ;;		 -> write_power_mode@reg_addr(1), set_filter_standby_settings@reg_addr(1), set_osr_press_temp_settings@reg_addr(1), 
      +set_osr_humidity_settings@reg_addr(1), 
 16309 ;;		 -> bme280_soft_reset@reg_addr(1), 
 16310 ;;  reg_data        1   20[BANK0 ] PTR const unsigned char 
 16311 ;;		 -> write_power_mode@sensor_mode_reg_val(1), set_filter_standby_settings@reg_data(1), set_osr_press_temp_settings@re
      +g_data(1), set_osr_humidity_settings@ctrl_meas(1), 
 16312 ;;		 -> set_osr_humidity_settings@ctrl_hum(1), bme280_soft_reset@soft_rst_cmd(1), 
 16313 ;;  len             1   21[BANK0 ] unsigned char 
 16314 ;;  dev             1   22[BANK0 ] PTR const struct bme280_
 16315 ;;		 -> EnvSensor(51), 
 16316 ;; Auto vars:     Size  Location     Type
 16317 ;;  reg_addr        1   50[BANK0 ] PTR unsigned char 
 16318 ;;		 -> write_power_mode@reg_addr(1), set_filter_standby_settings@reg_addr(1), set_osr_press_temp_settings@reg_addr(1), 
      +set_osr_humidity_settings@reg_addr(1), 
 16319 ;;		 -> bme280_soft_reset@reg_addr(1), 
 16320 ;;  temp_buff      20   26[BANK0 ] unsigned char [20]
 16321 ;;  temp_len        2   46[BANK0 ] unsigned short 
 16322 ;;  rslt            1   49[BANK0 ] char 
 16323 ;;  reg_addr_cnt    1   48[BANK0 ] unsigned char 
 16324 ;; Return value:  Size  Location     Type
 16325 ;;                  1    wreg      char 
 16326 ;; Registers used:
 16327 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16328 ;; Tracked objects:
 16329 ;;		On entry : 1F/0
 16330 ;;		On exit  : 1F/0
 16331 ;;		Unchanged: 0/0
 16332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16333 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16334 ;;      Locals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16335 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16336 ;;      Totals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16337 ;;Total ram usage:       31 bytes
 16338 ;; Hardware stack levels used:    1
 16339 ;; Hardware stack levels required when called:   10
 16340 ;; This function calls:
 16341 ;;		_WriteEnvSensor
 16342 ;;		_interleave_reg_addr
 16343 ;;		_null_ptr_check
 16344 ;; This function is called by:
 16345 ;;		_bme280_soft_reset
 16346 ;;		_set_osr_humidity_settings
 16347 ;;		_set_osr_press_temp_settings
 16348 ;;		_set_filter_standby_settings
 16349 ;;		_write_power_mode
 16350 ;; This function uses a non-reentrant model
 16351 ;;
 16352                           
 16353                           
 16354                           ;psect for function _bme280_set_regs
 16355  08EE                     _bme280_set_regs:	
 16356                           
 16357                           ;incstack = 0
 16358                           ; Regs used in _bme280_set_regs: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 16359                           ;bme280_set_regs@reg_addr stored from wreg
 16360  08EE  00D2               	movwf	bme280_set_regs@reg_addr
 16361                           
 16362                           ;BME280_driver/bme280.c: 442: int8_t bme280_set_regs(uint8_t *reg_addr, const uint8_t *r
      +                          eg_data, uint8_t len, const struct bme280_dev *dev);BME280_driver/bme280.c: 443: {;BME28
      +                          0_driver/bme280.c: 444:     int8_t rslt;;BME280_driver/bme280.c: 445:     uint8_t temp_b
      +                          uff[20];;BME280_driver/bme280.c: 447:     if (len > 10)
 16363  08EF  300B               	movlw	11
 16364  08F0  0235               	subwf	bme280_set_regs@len,w
 16365  08F1  1C03               	skipc
 16366  08F2  28F7               	goto	l3956
 16367                           
 16368                           ;BME280_driver/bme280.c: 448:     {;BME280_driver/bme280.c: 449:         len = 10;
 16369  08F3  300A               	movlw	10
 16370  08F4  00B7               	movwf	??_bme280_set_regs
 16371  08F5  0837               	movf	??_bme280_set_regs,w
 16372  08F6  00B5               	movwf	bme280_set_regs@len
 16373  08F7                     l3956:	
 16374                           
 16375                           ;BME280_driver/bme280.c: 451:     uint16_t temp_len;;BME280_driver/bme280.c: 452:     ui
      +                          nt8_t reg_addr_cnt;;BME280_driver/bme280.c: 455:     rslt = null_ptr_check(dev);
 16376  08F7  0836               	movf	bme280_set_regs@dev,w
 16377  08F8  319C  24DA  3188   	fcall	_null_ptr_check
 16378  08FB  00B7               	movwf	??_bme280_set_regs
 16379  08FC  0837               	movf	??_bme280_set_regs,w
 16380  08FD  00D1               	movwf	bme280_set_regs@rslt
 16381                           
 16382                           ;BME280_driver/bme280.c: 458:     if ((rslt == 0) && (reg_addr != ((void*)0)) && (reg_da
      +                          ta != ((void*)0)))
 16383  08FE  0851               	movf	bme280_set_regs@rslt,w
 16384  08FF  1D03               	btfss	3,2
 16385  0900  2987               	goto	l72
 16386  0901  0852               	movf	bme280_set_regs@reg_addr,w
 16387  0902  1903               	btfsc	3,2
 16388  0903  2987               	goto	l72
 16389  0904  0834               	movf	bme280_set_regs@reg_data,w
 16390  0905  1903               	btfsc	3,2
 16391  0906  2987               	goto	l72
 16392                           
 16393                           ;BME280_driver/bme280.c: 459:     {;BME280_driver/bme280.c: 460:         if (len != 0)
 16394  0907  0835               	movf	bme280_set_regs@len,w
 16395  0908  1903               	btfsc	3,2
 16396  0909  2982               	goto	l3992
 16397                           
 16398                           ;BME280_driver/bme280.c: 461:         {;BME280_driver/bme280.c: 462:             temp_bu
      +                          ff[0] = reg_data[0];
 16399  090A  0834               	movf	bme280_set_regs@reg_data,w
 16400  090B  0086               	movwf	6
 16401  090C  0187               	clrf	7
 16402  090D  0801               	movf	1,w
 16403  090E  00B7               	movwf	??_bme280_set_regs
 16404  090F  0837               	movf	??_bme280_set_regs,w
 16405  0910  00BA               	movwf	bme280_set_regs@temp_buff
 16406                           
 16407                           ;BME280_driver/bme280.c: 465:             if (dev->intf != BME280_I2C_INTF)
 16408  0911  0836               	movf	bme280_set_regs@dev,w
 16409  0912  3E02               	addlw	2
 16410  0913  0086               	movwf	6
 16411  0914  3001               	movlw	1	; select bank2/3
 16412  0915  0087               	movwf	7
 16413  0916  0301               	decf	1,w
 16414  0917  1903               	btfsc	3,2
 16415  0918  2934               	goto	l3978
 16416                           
 16417                           ;BME280_driver/bme280.c: 466:             {;BME280_driver/bme280.c: 467:                
      +                           for (reg_addr_cnt = 0; reg_addr_cnt < len; reg_addr_cnt++)
 16418  0919  01D0               	clrf	bme280_set_regs@reg_addr_cnt
 16419  091A                     l3976:	
 16420  091A  0835               	movf	bme280_set_regs@len,w
 16421  091B  0250               	subwf	bme280_set_regs@reg_addr_cnt,w
 16422  091C  1803               	btfsc	3,0
 16423  091D  2934               	goto	l3978
 16424                           
 16425                           ;BME280_driver/bme280.c: 468:                 {;BME280_driver/bme280.c: 469:            
      +                                   reg_addr[reg_addr_cnt] = reg_addr[reg_addr_cnt] & 0x7F;
 16426  091E  0850               	movf	bme280_set_regs@reg_addr_cnt,w
 16427  091F  0752               	addwf	bme280_set_regs@reg_addr,w
 16428  0920  00B7               	movwf	??_bme280_set_regs
 16429  0921  0837               	movf	??_bme280_set_regs,w
 16430  0922  0086               	movwf	6
 16431  0923  0187               	clrf	7
 16432  0924  0801               	movf	1,w
 16433  0925  397F               	andlw	127
 16434  0926  00B8               	movwf	??_bme280_set_regs+1
 16435  0927  0850               	movf	bme280_set_regs@reg_addr_cnt,w
 16436  0928  0752               	addwf	bme280_set_regs@reg_addr,w
 16437  0929  00B9               	movwf	??_bme280_set_regs+2
 16438  092A  0839               	movf	??_bme280_set_regs+2,w
 16439  092B  0086               	movwf	6
 16440  092C  0187               	clrf	7
 16441  092D  0838               	movf	??_bme280_set_regs+1,w
 16442  092E  0081               	movwf	1
 16443                           
 16444                           ;BME280_driver/bme280.c: 470:                 }
 16445  092F  3001               	movlw	1
 16446  0930  00B7               	movwf	??_bme280_set_regs
 16447  0931  0837               	movf	??_bme280_set_regs,w
 16448  0932  07D0               	addwf	bme280_set_regs@reg_addr_cnt,f
 16449  0933  291A               	goto	l3976
 16450  0934                     l3978:	
 16451                           
 16452                           ;BME280_driver/bme280.c: 474:             if (len > 1)
 16453  0934  3002               	movlw	2
 16454  0935  0235               	subwf	bme280_set_regs@len,w
 16455  0936  1C03               	skipc
 16456  0937  2953               	goto	l3984
 16457                           
 16458                           ;BME280_driver/bme280.c: 475:             {;BME280_driver/bme280.c: 479:                
      +                           interleave_reg_addr(reg_addr, temp_buff, reg_data, len);
 16459  0938  303A               	movlw	(low (bme280_set_regs@temp_buff| 0))& (0+255)
 16460  0939  00B7               	movwf	??_bme280_set_regs
 16461  093A  0837               	movf	??_bme280_set_regs,w
 16462  093B  00F0               	movwf	interleave_reg_addr@temp_buff
 16463  093C  0834               	movf	bme280_set_regs@reg_data,w
 16464  093D  00B8               	movwf	??_bme280_set_regs+1
 16465  093E  0838               	movf	??_bme280_set_regs+1,w
 16466  093F  00F1               	movwf	interleave_reg_addr@reg_data
 16467  0940  0835               	movf	bme280_set_regs@len,w
 16468  0941  00B9               	movwf	??_bme280_set_regs+2
 16469  0942  0839               	movf	??_bme280_set_regs+2,w
 16470  0943  00F2               	movwf	interleave_reg_addr@len
 16471  0944  0852               	movf	bme280_set_regs@reg_addr,w
 16472  0945  319E  2620  3188   	fcall	_interleave_reg_addr
 16473                           
 16474                           ;BME280_driver/bme280.c: 480:                 temp_len = ((len * 2) - 1);
 16475  0948  0835               	movf	bme280_set_regs@len,w
 16476  0949  00B7               	movwf	??_bme280_set_regs
 16477  094A  01B8               	clrf	??_bme280_set_regs+1
 16478  094B  35B7               	lslf	??_bme280_set_regs,f
 16479  094C  0DB8               	rlf	??_bme280_set_regs+1,f
 16480  094D  0837               	movf	??_bme280_set_regs,w
 16481  094E  3EFF               	addlw	255
 16482  094F  00CE               	movwf	bme280_set_regs@temp_len
 16483  0950  30FF               	movlw	255
 16484  0951  3D38               	addwfc	??_bme280_set_regs+1,w
 16485  0952  2959               	goto	L6
 16486  0953                     l3984:	
 16487                           ;BME280_driver/bme280.c: 481:             }
 16488                           
 16489                           
 16490                           ;BME280_driver/bme280.c: 483:             {;BME280_driver/bme280.c: 484:                
      +                           temp_len = len;
 16491  0953  0835               	movf	bme280_set_regs@len,w
 16492  0954  00B7               	movwf	??_bme280_set_regs
 16493  0955  01B8               	clrf	??_bme280_set_regs+1
 16494  0956  0837               	movf	??_bme280_set_regs,w
 16495  0957  00CE               	movwf	bme280_set_regs@temp_len
 16496  0958  0838               	movf	??_bme280_set_regs+1,w
 16497  0959                     L6:	
 16498  0959  00CF               	movwf	bme280_set_regs@temp_len+1
 16499                           
 16500                           ;BME280_driver/bme280.c: 486:             rslt = dev->write(dev->dev_id, reg_addr[0], te
      +                          mp_buff, temp_len);
 16501  095A  0836               	movf	bme280_set_regs@dev,w
 16502  095B  0086               	movwf	6
 16503  095C  3001               	movlw	1	; select bank2/3
 16504  095D  0087               	movwf	7
 16505  095E  3001               	movlw	1	; select bank2/3
 16506  095F  3F41               	moviw [1]fsr1
 16507  0960  00AB               	movwf	WriteEnvSensor@dev_id
 16508  0961  0852               	movf	bme280_set_regs@reg_addr,w
 16509  0962  0086               	movwf	6
 16510  0963  0187               	clrf	7
 16511  0964  0801               	movf	1,w
 16512  0965  00B7               	movwf	??_bme280_set_regs
 16513  0966  0837               	movf	??_bme280_set_regs,w
 16514  0967  00AC               	movwf	WriteEnvSensor@reg_addr
 16515  0968  303A               	movlw	(low (bme280_set_regs@temp_buff| 0))& (0+255)
 16516  0969  00B8               	movwf	??_bme280_set_regs+1
 16517  096A  0838               	movf	??_bme280_set_regs+1,w
 16518  096B  00AD               	movwf	WriteEnvSensor@reg_data
 16519  096C  084F               	movf	bme280_set_regs@temp_len+1,w
 16520  096D  00AF               	movwf	WriteEnvSensor@len+1
 16521  096E  084E               	movf	bme280_set_regs@temp_len,w
 16522  096F  00AE               	movwf	WriteEnvSensor@len
 16523  0970  0836               	movf	bme280_set_regs@dev,w
 16524  0971  3E05               	addlw	5
 16525  0972  0086               	movwf	6
 16526  0973  3001               	movlw	1	; select bank2/3
 16527  0974  0087               	movwf	7
 16528  0975  3F41               	moviw [1]fsr1
 16529  0976  008A               	movwf	10
 16530  0977  3F40               	moviw [0]fsr1
 16531  0978  000A               	callw
 16532  0979  3188               	pagesel	$
 16533  097A  00B9               	movwf	??_bme280_set_regs+2
 16534  097B  0839               	movf	??_bme280_set_regs+2,w
 16535  097C  00D1               	movwf	bme280_set_regs@rslt
 16536                           
 16537                           ;BME280_driver/bme280.c: 489:             if (rslt != 0)
 16538  097D  0851               	movf	bme280_set_regs@rslt,w
 16539  097E  1903               	btfsc	3,2
 16540  097F  2989               	goto	l3994
 16541                           
 16542                           ;BME280_driver/bme280.c: 490:             {;BME280_driver/bme280.c: 491:                
      +                           rslt = -4;
 16543  0980  30FC               	movlw	252
 16544  0981  2983               	goto	L7
 16545  0982                     l3992:	
 16546                           
 16547                           ;BME280_driver/bme280.c: 495:         {;BME280_driver/bme280.c: 496:             rslt = 
      +                          -3;
 16548  0982  30FD               	movlw	253
 16549  0983                     L7:	
 16550  0983  00B7               	movwf	??_bme280_set_regs
 16551  0984  0837               	movf	??_bme280_set_regs,w
 16552  0985  00D1               	movwf	bme280_set_regs@rslt
 16553  0986  2989               	goto	l3994
 16554  0987                     l72:	
 16555                           ;BME280_driver/bme280.c: 499:     else
 16556                           
 16557                           
 16558                           ;BME280_driver/bme280.c: 500:     {;BME280_driver/bme280.c: 501:         rslt = -1;
 16559  0987  01D1               	clrf	bme280_set_regs@rslt
 16560  0988  03D1               	decf	bme280_set_regs@rslt,f
 16561  0989                     l3994:	
 16562                           
 16563                           ;BME280_driver/bme280.c: 504:     return rslt;
 16564  0989  0851               	movf	bme280_set_regs@rslt,w
 16565  098A  0008               	return
 16566  098B                     __end_of_bme280_set_regs:	
 16567                           
 16568                           	psect	text60
 16569  1CDA                     __ptext60:	
 16570 ;; *************** function _null_ptr_check *****************
 16571 ;; Defined at:
 16572 ;;		line 1426 in file "BME280_driver/bme280.c"
 16573 ;; Parameters:    Size  Location     Type
 16574 ;;  dev             1    wreg     PTR const struct bme280_
 16575 ;;		 -> EnvSensor(51), 
 16576 ;; Auto vars:     Size  Location     Type
 16577 ;;  dev             1    3[COMMON] PTR const struct bme280_
 16578 ;;		 -> EnvSensor(51), 
 16579 ;;  rslt            1    2[COMMON] char 
 16580 ;; Return value:  Size  Location     Type
 16581 ;;                  1    wreg      char 
 16582 ;; Registers used:
 16583 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 16584 ;; Tracked objects:
 16585 ;;		On entry : 1F/0
 16586 ;;		On exit  : 1F/0
 16587 ;;		Unchanged: 1F/0
 16588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16590 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16591 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16592 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16593 ;;Total ram usage:        4 bytes
 16594 ;; Hardware stack levels used:    1
 16595 ;; Hardware stack levels required when called:    3
 16596 ;; This function calls:
 16597 ;;		Nothing
 16598 ;; This function is called by:
 16599 ;;		_bme280_init
 16600 ;;		_bme280_get_regs
 16601 ;;		_bme280_set_regs
 16602 ;;		_bme280_set_sensor_settings
 16603 ;;		_bme280_set_sensor_mode
 16604 ;;		_bme280_get_sensor_mode
 16605 ;;		_bme280_soft_reset
 16606 ;;		_bme280_get_sensor_data
 16607 ;; This function uses a non-reentrant model
 16608 ;;
 16609                           
 16610                           
 16611                           ;psect for function _null_ptr_check
 16612  1CDA                     _null_ptr_check:	
 16613                           
 16614                           ;incstack = 0
 16615                           ; Regs used in _null_ptr_check: [wreg+fsr1l+fsr1h+status,2+status,0]
 16616                           ;null_ptr_check@dev stored from wreg
 16617  1CDA  00F3               	movwf	null_ptr_check@dev
 16618                           
 16619                           ;BME280_driver/bme280.c: 1426: static int8_t null_ptr_check(const struct bme280_dev *dev
      +                          );BME280_driver/bme280.c: 1427: {;BME280_driver/bme280.c: 1428:     int8_t rslt;;BME280_
      +                          driver/bme280.c: 1430:     if ((dev == ((void*)0)) || (dev->read == ((void*)0)) || (dev-
      +                          >write == ((void*)0)) || (dev->delay_ms == ((void*)0)))
 16620  1CDB  0873               	movf	null_ptr_check@dev,w
 16621  1CDC  1903               	btfsc	3,2
 16622  1CDD  2CF9               	goto	l238
 16623  1CDE  0873               	movf	null_ptr_check@dev,w
 16624  1CDF  3E03               	addlw	3
 16625  1CE0  0086               	movwf	6
 16626  1CE1  3001               	movlw	1	; select bank2/3
 16627  1CE2  0087               	movwf	7
 16628  1CE3  0016               	moviw fsr1++
 16629  1CE4  0401               	iorwf	1,w
 16630  1CE5  1903               	btfsc	3,2
 16631  1CE6  2CF9               	goto	l238
 16632  1CE7  0873               	movf	null_ptr_check@dev,w
 16633  1CE8  3E05               	addlw	5
 16634  1CE9  0086               	movwf	6
 16635  1CEA  3001               	movlw	1	; select bank2/3
 16636  1CEB  0087               	movwf	7
 16637  1CEC  0016               	moviw fsr1++
 16638  1CED  0401               	iorwf	1,w
 16639  1CEE  1903               	btfsc	3,2
 16640  1CEF  2CF9               	goto	l238
 16641  1CF0  0873               	movf	null_ptr_check@dev,w
 16642  1CF1  3E07               	addlw	7
 16643  1CF2  0086               	movwf	6
 16644  1CF3  3001               	movlw	1	; select bank2/3
 16645  1CF4  0087               	movwf	7
 16646  1CF5  0016               	moviw fsr1++
 16647  1CF6  0401               	iorwf	1,w
 16648  1CF7  1D03               	btfss	3,2
 16649  1CF8  2CFC               	goto	l3860
 16650  1CF9                     l238:	
 16651                           
 16652                           ;BME280_driver/bme280.c: 1431:     {;BME280_driver/bme280.c: 1433:         rslt = -1;
 16653  1CF9  01F2               	clrf	null_ptr_check@rslt
 16654  1CFA  03F2               	decf	null_ptr_check@rslt,f
 16655                           
 16656                           ;BME280_driver/bme280.c: 1434:     }
 16657  1CFB  2CFD               	goto	l3862
 16658  1CFC                     l3860:	
 16659                           
 16660                           ;BME280_driver/bme280.c: 1436:     {;BME280_driver/bme280.c: 1438:         rslt = 0;
 16661  1CFC  01F2               	clrf	null_ptr_check@rslt
 16662  1CFD                     l3862:	
 16663                           
 16664                           ;BME280_driver/bme280.c: 1441:     return rslt;
 16665  1CFD  0872               	movf	null_ptr_check@rslt,w
 16666  1CFE  0008               	return
 16667  1CFF                     __end_of_null_ptr_check:	
 16668                           
 16669                           	psect	text61
 16670  1E20                     __ptext61:	
 16671 ;; *************** function _interleave_reg_addr *****************
 16672 ;; Defined at:
 16673 ;;		line 1343 in file "BME280_driver/bme280.c"
 16674 ;; Parameters:    Size  Location     Type
 16675 ;;  reg_addr        1    wreg     PTR const unsigned char 
 16676 ;;		 -> write_power_mode@reg_addr(1), set_filter_standby_settings@reg_addr(1), set_osr_press_temp_settings@reg_addr(1), 
      +set_osr_humidity_settings@reg_addr(1), 
 16677 ;;		 -> bme280_soft_reset@reg_addr(1), 
 16678 ;;  temp_buff       1    0[COMMON] PTR unsigned char 
 16679 ;;		 -> bme280_set_regs@temp_buff(20), 
 16680 ;;  reg_data        1    1[COMMON] PTR const unsigned char 
 16681 ;;		 -> write_power_mode@sensor_mode_reg_val(1), set_filter_standby_settings@reg_data(1), set_osr_press_temp_settings@re
      +g_data(1), set_osr_humidity_settings@ctrl_meas(1), 
 16682 ;;		 -> set_osr_humidity_settings@ctrl_hum(1), bme280_soft_reset@soft_rst_cmd(1), 
 16683 ;;  len             1    2[COMMON] unsigned char 
 16684 ;; Auto vars:     Size  Location     Type
 16685 ;;  reg_addr        1    6[COMMON] PTR const unsigned char 
 16686 ;;		 -> write_power_mode@reg_addr(1), set_filter_standby_settings@reg_addr(1), set_osr_press_temp_settings@reg_addr(1), 
      +set_osr_humidity_settings@reg_addr(1), 
 16687 ;;		 -> bme280_soft_reset@reg_addr(1), 
 16688 ;;  index           1    7[COMMON] unsigned char 
 16689 ;; Return value:  Size  Location     Type
 16690 ;;                  1    wreg      void 
 16691 ;; Registers used:
 16692 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 16693 ;; Tracked objects:
 16694 ;;		On entry : 1F/0
 16695 ;;		On exit  : 1F/0
 16696 ;;		Unchanged: 1F/0
 16697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16698 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16699 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16700 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16701 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16702 ;;Total ram usage:        8 bytes
 16703 ;; Hardware stack levels used:    1
 16704 ;; Hardware stack levels required when called:    3
 16705 ;; This function calls:
 16706 ;;		Nothing
 16707 ;; This function is called by:
 16708 ;;		_bme280_set_regs
 16709 ;; This function uses a non-reentrant model
 16710 ;;
 16711                           
 16712                           
 16713                           ;psect for function _interleave_reg_addr
 16714  1E20                     _interleave_reg_addr:	
 16715                           
 16716                           ;incstack = 0
 16717                           ; Regs used in _interleave_reg_addr: [wreg+fsr1l+fsr1h+status,2+status,0]
 16718                           ;interleave_reg_addr@reg_addr stored from wreg
 16719  1E20  00F6               	movwf	interleave_reg_addr@reg_addr
 16720                           
 16721                           ;BME280_driver/bme280.c: 1343: static void interleave_reg_addr(const uint8_t *reg_addr, 
      +                          uint8_t *temp_buff, const uint8_t *reg_data, uint8_t len);BME280_driver/bme280.c: 1344: 
      +                          {;BME280_driver/bme280.c: 1345:     uint8_t index;;BME280_driver/bme280.c: 1347:     for
      +                           (index = 1; index < len; index++)
 16722  1E21  01F7               	clrf	interleave_reg_addr@index
 16723  1E22  0AF7               	incf	interleave_reg_addr@index,f
 16724  1E23                     l3872:	
 16725  1E23  0872               	movf	interleave_reg_addr@len,w
 16726  1E24  0277               	subwf	interleave_reg_addr@index,w
 16727  1E25  1803               	btfsc	3,0
 16728  1E26  0008               	return
 16729                           
 16730                           ;BME280_driver/bme280.c: 1348:     {;BME280_driver/bme280.c: 1349:         temp_buff[(in
      +                          dex * 2) - 1] = reg_addr[index];
 16731  1E27  0877               	movf	interleave_reg_addr@index,w
 16732  1E28  0776               	addwf	interleave_reg_addr@reg_addr,w
 16733  1E29  00F3               	movwf	??_interleave_reg_addr
 16734  1E2A  0873               	movf	??_interleave_reg_addr,w
 16735  1E2B  0086               	movwf	6
 16736  1E2C  0187               	clrf	7
 16737  1E2D  0801               	movf	1,w
 16738  1E2E  00F4               	movwf	??_interleave_reg_addr+1
 16739  1E2F  3577               	lslf	interleave_reg_addr@index,w
 16740  1E30  0770               	addwf	interleave_reg_addr@temp_buff,w
 16741  1E31  00F5               	movwf	??_interleave_reg_addr+2
 16742  1E32  0875               	movf	??_interleave_reg_addr+2,w
 16743  1E33  3EFF               	addlw	-1
 16744  1E34  0086               	movwf	6
 16745  1E35  0187               	clrf	7
 16746  1E36  0874               	movf	??_interleave_reg_addr+1,w
 16747  1E37  0081               	movwf	1
 16748                           
 16749                           ;BME280_driver/bme280.c: 1350:         temp_buff[index * 2] = reg_data[index];
 16750  1E38  0877               	movf	interleave_reg_addr@index,w
 16751  1E39  0771               	addwf	interleave_reg_addr@reg_data,w
 16752  1E3A  00F3               	movwf	??_interleave_reg_addr
 16753  1E3B  0873               	movf	??_interleave_reg_addr,w
 16754  1E3C  0086               	movwf	6
 16755  1E3D  0187               	clrf	7
 16756  1E3E  0801               	movf	1,w
 16757  1E3F  00F4               	movwf	??_interleave_reg_addr+1
 16758  1E40  3577               	lslf	interleave_reg_addr@index,w
 16759  1E41  0770               	addwf	interleave_reg_addr@temp_buff,w
 16760  1E42  00F5               	movwf	??_interleave_reg_addr+2
 16761  1E43  0875               	movf	??_interleave_reg_addr+2,w
 16762  1E44  0086               	movwf	6
 16763  1E45  0187               	clrf	7
 16764  1E46  0874               	movf	??_interleave_reg_addr+1,w
 16765  1E47  0081               	movwf	1
 16766                           
 16767                           ;BME280_driver/bme280.c: 1351:     }
 16768  1E48  3001               	movlw	1
 16769  1E49  00F3               	movwf	??_interleave_reg_addr
 16770  1E4A  0873               	movf	??_interleave_reg_addr,w
 16771  1E4B  07F7               	addwf	interleave_reg_addr@index,f
 16772  1E4C  2E23               	goto	l3872
 16773  1E4D                     __end_of_interleave_reg_addr:	
 16774                           
 16775                           	psect	text62
 16776  1E7A                     __ptext62:	
 16777 ;; *************** function _WriteEnvSensor *****************
 16778 ;; Defined at:
 16779 ;;		line 162 in file "bme280_i2c.c"
 16780 ;; Parameters:    Size  Location     Type
 16781 ;;  dev_id          1   11[BANK0 ] unsigned char 
 16782 ;;  reg_addr        1   12[BANK0 ] unsigned char 
 16783 ;;  reg_data        1   13[BANK0 ] PTR unsigned char 
 16784 ;;		 -> bme280_set_regs@temp_buff(20), 
 16785 ;;  len             2   14[BANK0 ] unsigned short 
 16786 ;; Auto vars:     Size  Location     Type
 16787 ;;  i               2   18[BANK0 ] int 
 16788 ;;  rslt            1   17[BANK0 ] char 
 16789 ;; Return value:  Size  Location     Type
 16790 ;;                  1    wreg      char 
 16791 ;; Registers used:
 16792 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16793 ;; Tracked objects:
 16794 ;;		On entry : 1F/0
 16795 ;;		On exit  : 1F/0
 16796 ;;		Unchanged: 0/0
 16797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16798 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16799 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16800 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16801 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16802 ;;Total ram usage:        9 bytes
 16803 ;; Hardware stack levels used:    1
 16804 ;; Hardware stack levels required when called:    9
 16805 ;; This function calls:
 16806 ;;		_I2C_Stop
 16807 ;;		_I2C_Wait_SSPIF
 16808 ;;		_I2C_WriteByte
 16809 ;; This function is called by:
 16810 ;;		_BME280_Init
 16811 ;;		_bme280_set_regs
 16812 ;; This function uses a non-reentrant model
 16813 ;;
 16814                           
 16815                           
 16816                           ;psect for function _WriteEnvSensor
 16817  1E7A                     _WriteEnvSensor:	
 16818                           
 16819                           ;bme280_i2c.c: 162: int8_t WriteEnvSensor(uint8_t dev_id, uint8_t reg_addr, uint8_t *reg
      +                          _data, uint16_t len);bme280_i2c.c: 163: {;bme280_i2c.c: 164:     int8_t rslt = 0;
 16820                           
 16821                           ;incstack = 0
 16822                           ; Regs used in _WriteEnvSensor: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 16823  1E7A  01B1               	clrf	WriteEnvSensor@rslt
 16824                           
 16825                           ;bme280_i2c.c: 166:     PIR1bits.SSP1IF = 0;
 16826  1E7B  1190               	bcf	16,3	;volatile
 16827                           
 16828                           ;bme280_i2c.c: 169:     SSP1CON2bits.SEN = 1;
 16829  1E7C  0024               	movlb	4	; select bank4
 16830  1E7D  1416               	bsf	22,0	;volatile
 16831                           
 16832                           ;bme280_i2c.c: 170:     I2C_Wait_SSPIF();
 16833  1E7E  319F  2749  319E   	fcall	_I2C_Wait_SSPIF
 16834                           
 16835                           ;bme280_i2c.c: 173:     I2C_WriteByte(dev_id << 1);
 16836  1E81  352B               	lslf	WriteEnvSensor@dev_id,w
 16837  1E82  319B  23BA  319E   	fcall	_I2C_WriteByte
 16838                           
 16839                           ;bme280_i2c.c: 176:     I2C_WriteByte(reg_addr);
 16840  1E85  0020               	movlb	0	; select bank0
 16841  1E86  082C               	movf	WriteEnvSensor@reg_addr,w
 16842  1E87  319B  23BA  319E   	fcall	_I2C_WriteByte
 16843                           
 16844                           ;bme280_i2c.c: 178:     for(int i = 0; i < len; i++){
 16845  1E8A  0020               	movlb	0	; select bank0
 16846  1E8B  01B2               	clrf	WriteEnvSensor@i
 16847  1E8C  01B3               	clrf	WriteEnvSensor@i+1
 16848  1E8D                     l3928:	
 16849  1E8D  082F               	movf	WriteEnvSensor@len+1,w
 16850  1E8E  0233               	subwf	WriteEnvSensor@i+1,w
 16851  1E8F  1D03               	skipz
 16852  1E90  2E93               	goto	u3895
 16853  1E91  082E               	movf	WriteEnvSensor@len,w
 16854  1E92  0232               	subwf	WriteEnvSensor@i,w
 16855  1E93                     u3895:	
 16856  1E93  1803               	btfsc	3,0
 16857  1E94  2EA5               	goto	l3930
 16858                           
 16859                           ;bme280_i2c.c: 179:         I2C_WriteByte(reg_data[i]);
 16860  1E95  0832               	movf	WriteEnvSensor@i,w
 16861  1E96  072D               	addwf	WriteEnvSensor@reg_data,w
 16862  1E97  00B0               	movwf	??_WriteEnvSensor
 16863  1E98  0830               	movf	??_WriteEnvSensor,w
 16864  1E99  0086               	movwf	6
 16865  1E9A  0187               	clrf	7
 16866  1E9B  0801               	movf	1,w
 16867  1E9C  319B  23BA  319E   	fcall	_I2C_WriteByte
 16868                           
 16869                           ;bme280_i2c.c: 180:     }
 16870  1E9F  3001               	movlw	1
 16871  1EA0  0020               	movlb	0	; select bank0
 16872  1EA1  07B2               	addwf	WriteEnvSensor@i,f
 16873  1EA2  3000               	movlw	0
 16874  1EA3  3DB3               	addwfc	WriteEnvSensor@i+1,f
 16875  1EA4  2E8D               	goto	l3928
 16876  1EA5                     l3930:	
 16877                           
 16878                           ;bme280_i2c.c: 182:     I2C_Stop();
 16879  1EA5  319B  236E         	fcall	_I2C_Stop
 16880                           
 16881                           ;bme280_i2c.c: 184:     return rslt;
 16882  1EA7  0831               	movf	WriteEnvSensor@rslt,w
 16883  1EA8  0008               	return
 16884  1EA9                     __end_of_WriteEnvSensor:	
 16885                           
 16886                           	psect	text63
 16887  1BBA                     __ptext63:	
 16888 ;; *************** function _I2C_WriteByte *****************
 16889 ;; Defined at:
 16890 ;;		line 37 in file "bme280_i2c.c"
 16891 ;; Parameters:    Size  Location     Type
 16892 ;;  data            1    wreg     unsigned char 
 16893 ;; Auto vars:     Size  Location     Type
 16894 ;;  data            1   13[COMMON] unsigned char 
 16895 ;; Return value:  Size  Location     Type
 16896 ;;                  1    wreg      void 
 16897 ;; Registers used:
 16898 ;;		wreg, status,2, status,0, pclath, cstack
 16899 ;; Tracked objects:
 16900 ;;		On entry : 1F/0
 16901 ;;		On exit  : 1B/0
 16902 ;;		Unchanged: 0/0
 16903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16905 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16907 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16908 ;;Total ram usage:        1 bytes
 16909 ;; Hardware stack levels used:    1
 16910 ;; Hardware stack levels required when called:    8
 16911 ;; This function calls:
 16912 ;;		_I2C_UserAlert
 16913 ;;		_I2C_Wait_SSPIF
 16914 ;; This function is called by:
 16915 ;;		_ReadEnvSensor
 16916 ;;		_WriteEnvSensor
 16917 ;; This function uses a non-reentrant model
 16918 ;;
 16919                           
 16920                           
 16921                           ;psect for function _I2C_WriteByte
 16922  1BBA                     _I2C_WriteByte:	
 16923                           
 16924                           ;incstack = 0
 16925                           ; Regs used in _I2C_WriteByte: [wreg+status,2+status,0+pclath+cstack]
 16926                           ;I2C_WriteByte@data stored from wreg
 16927  1BBA  00FD               	movwf	I2C_WriteByte@data
 16928                           
 16929                           ;bme280_i2c.c: 37: void I2C_WriteByte(uint8_t data);bme280_i2c.c: 38: {;bme280_i2c.c: 39
      +                          :     SSP1BUF = data;
 16930  1BBB  087D               	movf	I2C_WriteByte@data,w
 16931  1BBC  0024               	movlb	4	; select bank4
 16932  1BBD  0091               	movwf	17	;volatile
 16933                           
 16934                           ;bme280_i2c.c: 40:     I2C_Wait_SSPIF();
 16935  1BBE  319F  2749  319B   	fcall	_I2C_Wait_SSPIF
 16936                           
 16937                           ;bme280_i2c.c: 43:     if(SSP1CON2bits.ACKSTAT!=0){
 16938  1BC1  0024               	movlb	4	; select bank4
 16939  1BC2  1F16               	btfss	22,6	;volatile
 16940  1BC3  0008               	return
 16941                           
 16942                           ;bme280_i2c.c: 44:         I2C_UserAlert(I2C_ERROR_WRITE_NO_ACK);
 16943  1BC4  3001               	movlw	1
 16944  1BC5  319B  236B         	fcall	_I2C_UserAlert
 16945  1BC7  0008               	return
 16946  1BC8                     __end_of_I2C_WriteByte:	
 16947                           
 16948                           	psect	text64
 16949  1B6B                     __ptext64:	
 16950 ;; *************** function _I2C_UserAlert *****************
 16951 ;; Defined at:
 16952 ;;		line 73 in file "bme280_i2c.c"
 16953 ;; Parameters:    Size  Location     Type
 16954 ;;  status          1    wreg     enum E10053
 16955 ;; Auto vars:     Size  Location     Type
 16956 ;;  status          1    0[COMMON] enum E10053
 16957 ;; Return value:  Size  Location     Type
 16958 ;;                  1    wreg      void 
 16959 ;; Registers used:
 16960 ;;		wreg, status,2, status,0, pclath, cstack
 16961 ;; Tracked objects:
 16962 ;;		On entry : 1F/4
 16963 ;;		On exit  : 1F/0
 16964 ;;		Unchanged: 0/0
 16965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16967 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16969 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16970 ;;Total ram usage:        0 bytes
 16971 ;; Hardware stack levels used:    1
 16972 ;; Hardware stack levels required when called:    7
 16973 ;; This function calls:
 16974 ;;		_I2C_Stop
 16975 ;; This function is called by:
 16976 ;;		_I2C_WriteByte
 16977 ;; This function uses a non-reentrant model
 16978 ;;
 16979                           
 16980                           
 16981                           ;psect for function _I2C_UserAlert
 16982  1B6B                     _I2C_UserAlert:	
 16983                           
 16984                           ;bme280_i2c.c: 73: void I2C_UserAlert(I2C_ERROR status);bme280_i2c.c: 74: {;bme280_i2c.c
      +                          : 75:     I2C_Stop();
 16985                           
 16986                           ;incstack = 0
 16987                           ; Regs used in _I2C_UserAlert: [wreg+status,2+status,0+pclath+cstack]
 16988  1B6B  319B  236E         	fcall	_I2C_Stop
 16989  1B6D  0008               	return
 16990  1B6E                     __end_of_I2C_UserAlert:	
 16991                           
 16992                           	psect	text65
 16993  1B6E                     __ptext65:	
 16994 ;; *************** function _I2C_Stop *****************
 16995 ;; Defined at:
 16996 ;;		line 67 in file "bme280_i2c.c"
 16997 ;; Parameters:    Size  Location     Type
 16998 ;;		None
 16999 ;; Auto vars:     Size  Location     Type
 17000 ;;		None
 17001 ;; Return value:  Size  Location     Type
 17002 ;;                  1    wreg      void 
 17003 ;; Registers used:
 17004 ;;		wreg, status,2, status,0, pclath, cstack
 17005 ;; Tracked objects:
 17006 ;;		On entry : 1B/0
 17007 ;;		On exit  : 1F/0
 17008 ;;		Unchanged: 0/0
 17009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17013 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17014 ;;Total ram usage:        0 bytes
 17015 ;; Hardware stack levels used:    1
 17016 ;; Hardware stack levels required when called:    6
 17017 ;; This function calls:
 17018 ;;		_I2C_Wait_SSPIF
 17019 ;; This function is called by:
 17020 ;;		_I2C_UserAlert
 17021 ;;		_ReadEnvSensor
 17022 ;;		_WriteEnvSensor
 17023 ;; This function uses a non-reentrant model
 17024 ;;
 17025                           
 17026                           
 17027                           ;psect for function _I2C_Stop
 17028  1B6E                     _I2C_Stop:	
 17029                           
 17030                           ;bme280_i2c.c: 69:     SSP1CON2bits.PEN = 1;
 17031                           
 17032                           ;incstack = 0
 17033                           ; Regs used in _I2C_Stop: [wreg+status,2+status,0+pclath+cstack]
 17034  1B6E  0024               	movlb	4	; select bank4
 17035  1B6F  1516               	bsf	22,2	;volatile
 17036                           
 17037                           ;bme280_i2c.c: 70:     I2C_Wait_SSPIF();
 17038  1B70  319F  2749         	fcall	_I2C_Wait_SSPIF
 17039  1B72  0008               	return
 17040  1B73                     __end_of_I2C_Stop:	
 17041                           
 17042                           	psect	text66
 17043  1F49                     __ptext66:	
 17044 ;; *************** function _I2C_Wait_SSPIF *****************
 17045 ;; Defined at:
 17046 ;;		line 16 in file "bme280_i2c.c"
 17047 ;; Parameters:    Size  Location     Type
 17048 ;;		None
 17049 ;; Auto vars:     Size  Location     Type
 17050 ;;		None
 17051 ;; Return value:  Size  Location     Type
 17052 ;;                  1    wreg      void 
 17053 ;; Registers used:
 17054 ;;		wreg, status,2, status,0, pclath, cstack
 17055 ;; Tracked objects:
 17056 ;;		On entry : 1F/4
 17057 ;;		On exit  : 1F/0
 17058 ;;		Unchanged: 0/0
 17059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17061 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17062 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17063 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17064 ;;Total ram usage:        4 bytes
 17065 ;; Hardware stack levels used:    1
 17066 ;; Hardware stack levels required when called:    5
 17067 ;; This function calls:
 17068 ;;		_DebugAlert
 17069 ;; This function is called by:
 17070 ;;		_I2C_WriteByte
 17071 ;;		_I2C_ReadByte
 17072 ;;		_I2C_Stop
 17073 ;;		_ReadEnvSensor
 17074 ;;		_WriteEnvSensor
 17075 ;; This function uses a non-reentrant model
 17076 ;;
 17077                           
 17078                           
 17079                           ;psect for function _I2C_Wait_SSPIF
 17080  1F49                     _I2C_Wait_SSPIF:	
 17081                           
 17082                           ;bme280_i2c.c: 18:     __g_timeout_start = ticks; while (!(PIR1bits.SSP1IF != 0)) { if (
      +                          ticks - __g_timeout_start > 1000) { DebugAlert(200, 200, 3);; break; } };
 17083                           
 17084                           ;incstack = 0
 17085                           ; Regs used in _I2C_Wait_SSPIF: [wreg+status,2+status,0+pclath+cstack]
 17086  1F49  0021               	movlb	1	; select bank1
 17087  1F4A  086B               	movf	(_ticks+3)^(0+128),w
 17088  1F4B  00EF               	movwf	(___g_timeout_start+3)^(0+128)
 17089  1F4C  086A               	movf	(_ticks+2)^(0+128),w
 17090  1F4D  00EE               	movwf	(___g_timeout_start+2)^(0+128)
 17091  1F4E  0869               	movf	(_ticks+1)^(0+128),w
 17092  1F4F  00ED               	movwf	(___g_timeout_start+1)^(0+128)
 17093  1F50  0868               	movf	_ticks^(0+128),w
 17094  1F51  00EC               	movwf	___g_timeout_start^(0+128)
 17095  1F52                     l591:	
 17096  1F52  0020               	movlb	0	; select bank0
 17097  1F53  1990               	btfsc	16,3	;volatile
 17098  1F54  2F83               	goto	l594
 17099  1F55  0021               	movlb	1	; select bank1
 17100  1F56  086C               	movf	___g_timeout_start^(0+128),w
 17101  1F57  0268               	subwf	_ticks^(0+128),w
 17102  1F58  0020               	movlb	0	; select bank0
 17103  1F59  00A7               	movwf	??_I2C_Wait_SSPIF
 17104  1F5A  0021               	movlb	1	; select bank1
 17105  1F5B  086D               	movf	(___g_timeout_start+1)^(0+128),w
 17106  1F5C  3B69               	subwfb	(_ticks+1)^(0+128),w
 17107  1F5D  0020               	movlb	0	; select bank0
 17108  1F5E  00A8               	movwf	??_I2C_Wait_SSPIF+1
 17109  1F5F  0021               	movlb	1	; select bank1
 17110  1F60  086E               	movf	(___g_timeout_start+2)^(0+128),w
 17111  1F61  3B6A               	subwfb	(_ticks+2)^(0+128),w
 17112  1F62  0020               	movlb	0	; select bank0
 17113  1F63  00A9               	movwf	??_I2C_Wait_SSPIF+2
 17114  1F64  0021               	movlb	1	; select bank1
 17115  1F65  086F               	movf	(___g_timeout_start+3)^(0+128),w
 17116  1F66  3B6B               	subwfb	(_ticks+3)^(0+128),w
 17117  1F67  0020               	movlb	0	; select bank0
 17118  1F68  00AA               	movwf	??_I2C_Wait_SSPIF+3
 17119  1F69  082A               	movf	??_I2C_Wait_SSPIF+3,w
 17120  1F6A  1D03               	btfss	3,2
 17121  1F6B  2F75               	goto	l3818
 17122  1F6C  0829               	movf	??_I2C_Wait_SSPIF+2,w
 17123  1F6D  1D03               	btfss	3,2
 17124  1F6E  2F75               	goto	l3818
 17125  1F6F  30E9               	movlw	233
 17126  1F70  0227               	subwf	??_I2C_Wait_SSPIF,w
 17127  1F71  3003               	movlw	3
 17128  1F72  3B28               	subwfb	??_I2C_Wait_SSPIF+1,w
 17129  1F73  1C03               	btfss	3,0
 17130  1F74  2F52               	goto	l591
 17131  1F75                     l3818:	
 17132  1F75  30C8               	movlw	200
 17133  1F76  00A0               	movwf	DebugAlert@delay_high
 17134  1F77  3000               	movlw	0
 17135  1F78  00A1               	movwf	DebugAlert@delay_high+1
 17136  1F79  30C8               	movlw	200
 17137  1F7A  00A2               	movwf	DebugAlert@delay_low
 17138  1F7B  3000               	movlw	0
 17139  1F7C  00A3               	movwf	DebugAlert@delay_low+1
 17140  1F7D  3003               	movlw	3
 17141  1F7E  00A7               	movwf	??_I2C_Wait_SSPIF
 17142  1F7F  0827               	movf	??_I2C_Wait_SSPIF,w
 17143  1F80  00A4               	movwf	DebugAlert@num_flashes
 17144  1F81  319D  25F5         	fcall	_DebugAlert
 17145  1F83                     l594:	
 17146                           
 17147                           ;bme280_i2c.c: 19:     PIR1bits.SSP1IF = 0;
 17148  1F83  0020               	movlb	0	; select bank0
 17149  1F84  1190               	bcf	16,3	;volatile
 17150  1F85  0008               	return
 17151  1F86                     __end_of_I2C_Wait_SSPIF:	
 17152                           
 17153                           	psect	text67
 17154  1DF5                     __ptext67:	
 17155 ;; *************** function _DebugAlert *****************
 17156 ;; Defined at:
 17157 ;;		line 4 in file "debug.c"
 17158 ;; Parameters:    Size  Location     Type
 17159 ;;  delay_high      2    0[BANK0 ] unsigned int 
 17160 ;;  delay_low       2    2[BANK0 ] unsigned int 
 17161 ;;  num_flashes     1    4[BANK0 ] unsigned char 
 17162 ;; Auto vars:     Size  Location     Type
 17163 ;;  i               2    5[BANK0 ] int 
 17164 ;; Return value:  Size  Location     Type
 17165 ;;                  1    wreg      void 
 17166 ;; Registers used:
 17167 ;;		wreg, status,2, status,0, pclath, cstack
 17168 ;; Tracked objects:
 17169 ;;		On entry : 1F/0
 17170 ;;		On exit  : 0/0
 17171 ;;		Unchanged: 0/0
 17172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17173 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17174 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17175 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17176 ;;      Totals:         1       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17177 ;;Total ram usage:        8 bytes
 17178 ;; Hardware stack levels used:    1
 17179 ;; Hardware stack levels required when called:    4
 17180 ;; This function calls:
 17181 ;;		_Sleep
 17182 ;; This function is called by:
 17183 ;;		_I2C_Wait_SSPIF
 17184 ;;		_BME280_Init
 17185 ;; This function uses a non-reentrant model
 17186 ;;
 17187                           
 17188                           
 17189                           ;psect for function _DebugAlert
 17190  1DF5                     _DebugAlert:	
 17191                           
 17192                           ;debug.c: 4: void DebugAlert(unsigned int delay_high, unsigned int delay_low, uint8_t nu
      +                          m_flashes);debug.c: 5: {;debug.c: 7:     for (int i = 0; i < num_flashes; i++)
 17193                           
 17194                           ;incstack = 0
 17195                           ; Regs used in _DebugAlert: [wreg+status,2+status,0+pclath+cstack]
 17196  1DF5  01A5               	clrf	DebugAlert@i
 17197  1DF6  01A6               	clrf	DebugAlert@i+1
 17198  1DF7                     l3812:	
 17199  1DF7  0826               	movf	DebugAlert@i+1,w
 17200  1DF8  3A80               	xorlw	128
 17201  1DF9  00FC               	movwf	??_DebugAlert
 17202  1DFA  3080               	movlw	128
 17203  1DFB  027C               	subwf	??_DebugAlert,w
 17204  1DFC  1D03               	skipz
 17205  1DFD  2E00               	goto	u3785
 17206  1DFE  0824               	movf	DebugAlert@num_flashes,w
 17207  1DFF  0225               	subwf	DebugAlert@i,w
 17208  1E00                     u3785:	
 17209  1E00  1803               	btfsc	3,0
 17210  1E01  0008               	return
 17211                           
 17212                           ;debug.c: 8:     {;debug.c: 9:         do { LATCbits.LATC5 = 1; } while(0);
 17213  1E02  0022               	movlb	2	; select bank2
 17214  1E03  168E               	bsf	14,5	;volatile
 17215                           
 17216                           ;debug.c: 10:         Sleep(delay_high);
 17217  1E04  0020               	movlb	0	; select bank0
 17218  1E05  0820               	movf	DebugAlert@delay_high,w
 17219  1E06  00F0               	movwf	Sleep@ms
 17220  1E07  0821               	movf	DebugAlert@delay_high+1,w
 17221  1E08  00F1               	movwf	Sleep@ms+1
 17222  1E09  01F2               	clrf	Sleep@ms+2
 17223  1E0A  01F3               	clrf	Sleep@ms+3
 17224  1E0B  319D  25CA  319D   	fcall	_Sleep
 17225  1E0E  0022               	movlb	2	; select bank2
 17226  1E0F  128E               	bcf	14,5	;volatile
 17227                           
 17228                           ;debug.c: 12:         Sleep(delay_low);
 17229  1E10  0020               	movlb	0	; select bank0
 17230  1E11  0822               	movf	DebugAlert@delay_low,w
 17231  1E12  00F0               	movwf	Sleep@ms
 17232  1E13  0823               	movf	DebugAlert@delay_low+1,w
 17233  1E14  00F1               	movwf	Sleep@ms+1
 17234  1E15  01F2               	clrf	Sleep@ms+2
 17235  1E16  01F3               	clrf	Sleep@ms+3
 17236  1E17  319D  25CA  319D   	fcall	_Sleep
 17237                           
 17238                           ;debug.c: 13:     }
 17239  1E1A  3001               	movlw	1
 17240  1E1B  0020               	movlb	0	; select bank0
 17241  1E1C  07A5               	addwf	DebugAlert@i,f
 17242  1E1D  3000               	movlw	0
 17243  1E1E  3DA6               	addwfc	DebugAlert@i+1,f
 17244  1E1F  2DF7               	goto	l3812
 17245  1E20                     __end_of_DebugAlert:	
 17246                           
 17247                           	psect	text68
 17248  1DCA                     __ptext68:	
 17249 ;; *************** function _Sleep *****************
 17250 ;; Defined at:
 17251 ;;		line 17 in file "timing.c"
 17252 ;; Parameters:    Size  Location     Type
 17253 ;;  ms              4    0[COMMON] unsigned long 
 17254 ;; Auto vars:     Size  Location     Type
 17255 ;;  start           4    8[COMMON] unsigned long 
 17256 ;; Return value:  Size  Location     Type
 17257 ;;                  1    wreg      void 
 17258 ;; Registers used:
 17259 ;;		wreg
 17260 ;; Tracked objects:
 17261 ;;		On entry : 1F/0
 17262 ;;		On exit  : 1F/1
 17263 ;;		Unchanged: 0/0
 17264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17265 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17266 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17267 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17268 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17269 ;;Total ram usage:       12 bytes
 17270 ;; Hardware stack levels used:    1
 17271 ;; Hardware stack levels required when called:    3
 17272 ;; This function calls:
 17273 ;;		Nothing
 17274 ;; This function is called by:
 17275 ;;		_BME280_Init
 17276 ;;		_DebugAlert
 17277 ;;		_bme280_soft_reset
 17278 ;;		_bme280_init
 17279 ;; This function uses a non-reentrant model
 17280 ;;
 17281                           
 17282                           
 17283                           ;psect for function _Sleep
 17284  1DCA                     _Sleep:	
 17285                           
 17286                           ;timing.c: 17: void Sleep(uint32_t ms);timing.c: 18: {;timing.c: 19:     uint32_t start 
      +                          = ticks;
 17287                           
 17288                           ;incstack = 0
 17289                           ; Regs used in _Sleep: [wreg]
 17290  1DCA  0021               	movlb	1	; select bank1
 17291  1DCB  086B               	movf	(_ticks+3)^(0+128),w
 17292  1DCC  00FB               	movwf	Sleep@start+3
 17293  1DCD  086A               	movf	(_ticks+2)^(0+128),w
 17294  1DCE  00FA               	movwf	Sleep@start+2
 17295  1DCF  0869               	movf	(_ticks+1)^(0+128),w
 17296  1DD0  00F9               	movwf	Sleep@start+1
 17297  1DD1  0868               	movf	_ticks^(0+128),w
 17298  1DD2  00F8               	movwf	Sleep@start
 17299  1DD3                     l649:	
 17300                           ;timing.c: 23:     }
 17301                           
 17302                           ;timing.c: 20:     while (ticks - start < ms)
 17303                           
 17304                           
 17305                           ;timing.c: 20:     while (ticks - start < ms)
 17306  1DD3  0878               	movf	Sleep@start,w
 17307  1DD4  0021               	movlb	1	; select bank1
 17308  1DD5  0268               	subwf	_ticks^(0+128),w
 17309  1DD6  00F4               	movwf	??_Sleep
 17310  1DD7  0879               	movf	Sleep@start+1,w
 17311  1DD8  3B69               	subwfb	(_ticks+1)^(0+128),w
 17312  1DD9  00F5               	movwf	??_Sleep+1
 17313  1DDA  087A               	movf	Sleep@start+2,w
 17314  1DDB  3B6A               	subwfb	(_ticks+2)^(0+128),w
 17315  1DDC  00F6               	movwf	??_Sleep+2
 17316  1DDD  087B               	movf	Sleep@start+3,w
 17317  1DDE  3B6B               	subwfb	(_ticks+3)^(0+128),w
 17318  1DDF  00F7               	movwf	??_Sleep+3
 17319  1DE0  0873               	movf	Sleep@ms+3,w
 17320  1DE1  0277               	subwf	??_Sleep+3,w
 17321  1DE2  1D03               	skipz
 17322  1DE3  2DEE               	goto	u3775
 17323  1DE4  0872               	movf	Sleep@ms+2,w
 17324  1DE5  0276               	subwf	??_Sleep+2,w
 17325  1DE6  1D03               	skipz
 17326  1DE7  2DEE               	goto	u3775
 17327  1DE8  0871               	movf	Sleep@ms+1,w
 17328  1DE9  0275               	subwf	??_Sleep+1,w
 17329  1DEA  1D03               	skipz
 17330  1DEB  2DEE               	goto	u3775
 17331  1DEC  0870               	movf	Sleep@ms,w
 17332  1DED  0274               	subwf	??_Sleep,w
 17333  1DEE                     u3775:	
 17334  1DEE  1803               	btfsc	3,0
 17335  1DEF  0008               	return
 17336                           
 17337                           ;timing.c: 21:     {;timing.c: 22:         _delay((unsigned long)((1)*(4000000/4000.0)))
      +                          ;
 17338  1DF0  30C8               	movlw	200
 17339  1DF1                     u4867:	
 17340  1DF1  3200               	nop2
 17341  1DF2  0B89               	decfsz	9,f
 17342  1DF3  2DF1               	goto	u4867
 17343  1DF4  2DD3               	goto	l649
 17344  1DF5                     __end_of_Sleep:	
 17345                           
 17346                           	psect	text69
 17347  1BD8                     __ptext69:	
 17348 ;; *************** function _I2C_Init *****************
 17349 ;; Defined at:
 17350 ;;		line 22 in file "bme280_i2c.c"
 17351 ;; Parameters:    Size  Location     Type
 17352 ;;		None
 17353 ;; Auto vars:     Size  Location     Type
 17354 ;;		None
 17355 ;; Return value:  Size  Location     Type
 17356 ;;                  1    wreg      void 
 17357 ;; Registers used:
 17358 ;;		wreg, status,2
 17359 ;; Tracked objects:
 17360 ;;		On entry : 1F/2
 17361 ;;		On exit  : 1F/4
 17362 ;;		Unchanged: 0/0
 17363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17367 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17368 ;;Total ram usage:        0 bytes
 17369 ;; Hardware stack levels used:    1
 17370 ;; Hardware stack levels required when called:    3
 17371 ;; This function calls:
 17372 ;;		Nothing
 17373 ;; This function is called by:
 17374 ;;		_BME280_Init
 17375 ;; This function uses a non-reentrant model
 17376 ;;
 17377                           
 17378                           
 17379                           ;psect for function _I2C_Init
 17380  1BD8                     _I2C_Init:	
 17381                           
 17382                           ;bme280_i2c.c: 24:     SSPCLKPPS = 0x0E;
 17383                           
 17384                           ;incstack = 0
 17385                           ; Regs used in _I2C_Init: [wreg+status,2]
 17386  1BD8  300E               	movlw	14
 17387  1BD9  003C               	movlb	28	; select bank28
 17388  1BDA  00A0               	movwf	32	;volatile
 17389                           
 17390                           ;bme280_i2c.c: 25:     SSPDATPPS = 0x0C;
 17391  1BDB  300C               	movlw	12
 17392  1BDC  00A1               	movwf	33	;volatile
 17393                           
 17394                           ;bme280_i2c.c: 26:     RB6PPS = 0x10;
 17395  1BDD  3010               	movlw	16
 17396  1BDE  003D               	movlb	29	; select bank29
 17397  1BDF  009E               	movwf	30	;volatile
 17398                           
 17399                           ;bme280_i2c.c: 27:     RB4PPS = 0x11;
 17400  1BE0  3011               	movlw	17
 17401  1BE1  009C               	movwf	28	;volatile
 17402                           
 17403                           ;bme280_i2c.c: 29:     SSP1STAT = 0x80;
 17404  1BE2  3080               	movlw	128
 17405  1BE3  0024               	movlb	4	; select bank4
 17406  1BE4  0094               	movwf	20	;volatile
 17407                           
 17408                           ;bme280_i2c.c: 30:     SSP1CON1 = 0x28;
 17409  1BE5  3028               	movlw	40
 17410  1BE6  0095               	movwf	21	;volatile
 17411                           
 17412                           ;bme280_i2c.c: 31:     SSP1CON2 = 0x00;
 17413  1BE7  0196               	clrf	22	;volatile
 17414                           
 17415                           ;bme280_i2c.c: 32:     SSP1ADD = 0x4f;
 17416  1BE8  304F               	movlw	79
 17417  1BE9  0092               	movwf	18	;volatile
 17418                           
 17419                           ;bme280_i2c.c: 34:     SSP1CON1bits.SSPEN = 1;
 17420  1BEA  1695               	bsf	21,5	;volatile
 17421  1BEB  0008               	return
 17422  1BEC                     __end_of_I2C_Init:	
 17423                           
 17424                           	psect	intentry
 17425  0004                     __pintentry:	
 17426 ;; *************** function _INTERRUPT_InterruptManager *****************
 17427 ;; Defined at:
 17428 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 17429 ;; Parameters:    Size  Location     Type
 17430 ;;		None
 17431 ;; Auto vars:     Size  Location     Type
 17432 ;;		None
 17433 ;; Return value:  Size  Location     Type
 17434 ;;                  1    wreg      void 
 17435 ;; Registers used:
 17436 ;;		wreg, status,2, status,0, pclath, cstack
 17437 ;; Tracked objects:
 17438 ;;		On entry : 0/0
 17439 ;;		On exit  : 0/0
 17440 ;;		Unchanged: 0/0
 17441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17445 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17446 ;;Total ram usage:        0 bytes
 17447 ;; Hardware stack levels used:    1
 17448 ;; Hardware stack levels required when called:    2
 17449 ;; This function calls:
 17450 ;;		_TMR0_ISR
 17451 ;; This function is called by:
 17452 ;;		Interrupt level 1
 17453 ;; This function uses a non-reentrant model
 17454 ;;
 17455                           
 17456  0004                     _INTERRUPT_InterruptManager:	
 17457                           
 17458                           ;incstack = 0
 17459 ;; hardware stack exceeded
 17460  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 17461                           
 17462                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
 17463  0005  3180               	pagesel	$
 17464                           
 17465                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
 17466  0006  1A8B               	btfsc	11,5	;volatile
 17467  0007  1D0B               	btfss	11,2	;volatile
 17468  0008  280B               	goto	i1l366
 17469                           
 17470                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
 17471  0009  319B  23C8         	fcall	_TMR0_ISR
 17472  000B                     i1l366:	
 17473                           ;mcc_generated_files/interrupt_manager.c: 58:     }
 17474                           
 17475  000B  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 17476  000C  0009               	retfie
 17477  000D                     __end_of_INTERRUPT_InterruptManager:	
 17478                           
 17479                           	psect	text71
 17480  1BC8                     __ptext71:	
 17481 ;; *************** function _TMR0_ISR *****************
 17482 ;; Defined at:
 17483 ;;		line 108 in file "mcc_generated_files/tmr0.c"
 17484 ;; Parameters:    Size  Location     Type
 17485 ;;		None
 17486 ;; Auto vars:     Size  Location     Type
 17487 ;;		None
 17488 ;; Return value:  Size  Location     Type
 17489 ;;                  1    wreg      void 
 17490 ;; Registers used:
 17491 ;;		wreg, status,2, status,0, pclath, cstack
 17492 ;; Tracked objects:
 17493 ;;		On entry : 0/0
 17494 ;;		On exit  : 0/0
 17495 ;;		Unchanged: 0/0
 17496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17500 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17501 ;;Total ram usage:        0 bytes
 17502 ;; Hardware stack levels used:    1
 17503 ;; Hardware stack levels required when called:    1
 17504 ;; This function calls:
 17505 ;;		Absolute function
 17506 ;;		_TMR0_DefaultInterruptHandler
 17507 ;;		_TimerISR
 17508 ;; This function is called by:
 17509 ;;		_INTERRUPT_InterruptManager
 17510 ;; This function uses a non-reentrant model
 17511 ;;
 17512                           
 17513                           
 17514                           ;psect for function _TMR0_ISR
 17515  1BC8                     _TMR0_ISR:	
 17516                           
 17517                           ;mcc_generated_files/tmr0.c: 112:     INTCONbits.TMR0IF = 0;
 17518                           
 17519                           ;incstack = 0
 17520 ;; hardware stack exceeded
 17521                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
 17522  1BC8  110B               	bcf	11,2	;volatile
 17523                           
 17524                           ;mcc_generated_files/tmr0.c: 114:     TMR0 = timer0ReloadVal;
 17525  1BC9  0022               	movlb	2	; select bank2
 17526  1BCA  0860               	movf	_timer0ReloadVal^(0+256),w	;volatile
 17527  1BCB  0020               	movlb	0	; select bank0
 17528  1BCC  0095               	movwf	21	;volatile
 17529                           
 17530                           ;mcc_generated_files/tmr0.c: 116:     if(TMR0_InterruptHandler)
 17531  1BCD  0022               	movlb	2	; select bank2
 17532  1BCE  085E               	movf	_TMR0_InterruptHandler^(0+256),w
 17533  1BCF  045F               	iorwf	(_TMR0_InterruptHandler+1)^(0+256),w
 17534  1BD0  1903               	btfsc	3,2
 17535  1BD1  0008               	return
 17536                           
 17537                           ;mcc_generated_files/tmr0.c: 117:     {;mcc_generated_files/tmr0.c: 118:         TMR0_In
      +                          terruptHandler();
 17538  1BD2  085F               	movf	(_TMR0_InterruptHandler+1)^(0+256),w
 17539  1BD3  008A               	movwf	10
 17540  1BD4  085E               	movf	_TMR0_InterruptHandler^(0+256),w
 17541  1BD5  000A               	callw
 17542  1BD6  319B               	pagesel	$
 17543  1BD7  0008               	return
 17544  1BD8                     __end_of_TMR0_ISR:	
 17545                           
 17546                           	psect	text72
 17547  0801                     __ptext72:	
 17548 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 17549 ;; Defined at:
 17550 ;;		line 129 in file "mcc_generated_files/tmr0.c"
 17551 ;; Parameters:    Size  Location     Type
 17552 ;;		None
 17553 ;; Auto vars:     Size  Location     Type
 17554 ;;		None
 17555 ;; Return value:  Size  Location     Type
 17556 ;;                  1    wreg      void 
 17557 ;; Registers used:
 17558 ;;		None
 17559 ;; Tracked objects:
 17560 ;;		On entry : 1F/2
 17561 ;;		On exit  : 1F/2
 17562 ;;		Unchanged: 1F/0
 17563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17565 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17567 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17568 ;;Total ram usage:        0 bytes
 17569 ;; Hardware stack levels used:    1
 17570 ;; This function calls:
 17571 ;;		Nothing
 17572 ;; This function is called by:
 17573 ;;		_TMR0_Initialize
 17574 ;;		_TMR0_ISR
 17575 ;; This function uses a non-reentrant model
 17576 ;;
 17577                           
 17578                           
 17579                           ;psect for function _TMR0_DefaultInterruptHandler
 17580  0801                     _TMR0_DefaultInterruptHandler:	
 17581                           
 17582                           ;incstack = 0
 17583 ;; hardware stack exceeded
 17584                           ; Regs used in _TMR0_DefaultInterruptHandler: []
 17585  0801  0008               	return
 17586  0802                     __end_of_TMR0_DefaultInterruptHandler:	
 17587                           
 17588                           	psect	text73
 17589  1B8E                     __ptext73:	
 17590 ;; *************** function _TimerISR *****************
 17591 ;; Defined at:
 17592 ;;		line 6 in file "timing.c"
 17593 ;; Parameters:    Size  Location     Type
 17594 ;;		None
 17595 ;; Auto vars:     Size  Location     Type
 17596 ;;		None
 17597 ;; Return value:  Size  Location     Type
 17598 ;;                  1    wreg      void 
 17599 ;; Registers used:
 17600 ;;		wreg
 17601 ;; Tracked objects:
 17602 ;;		On entry : 1F/2
 17603 ;;		On exit  : 1F/1
 17604 ;;		Unchanged: 0/0
 17605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17606 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17607 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17609 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17610 ;;Total ram usage:        0 bytes
 17611 ;; Hardware stack levels used:    1
 17612 ;; This function calls:
 17613 ;;		Nothing
 17614 ;; This function is called by:
 17615 ;;		_InitTiming
 17616 ;;		_TMR0_ISR
 17617 ;; This function uses a non-reentrant model
 17618 ;;
 17619                           
 17620                           
 17621                           ;psect for function _TimerISR
 17622  1B8E                     _TimerISR:	
 17623                           
 17624                           ;timing.c: 8:     ticks++;
 17625                           
 17626                           ;incstack = 0
 17627 ;; hardware stack exceeded
 17628                           ; Regs used in _TimerISR: [wreg]
 17629  1B8E  3001               	movlw	1
 17630  1B8F  0021               	movlb	1	; select bank1
 17631  1B90  07E8               	addwf	_ticks^(0+128),f
 17632  1B91  3000               	movlw	0
 17633  1B92  3DE9               	addwfc	(_ticks+1)^(0+128),f
 17634  1B93  3000               	movlw	0
 17635  1B94  3DEA               	addwfc	(_ticks+2)^(0+128),f
 17636  1B95  3000               	movlw	0
 17637  1B96  3DEB               	addwfc	(_ticks+3)^(0+128),f
 17638  1B97  0008               	return
 17639  1B98                     __end_of_TimerISR:	
 17640  007E                     btemp	set	126	;btemp
 17641  007E                     int$flags	set	126
 17642  007E                     wtemp0	set	126


Data Sizes:
    Strings     10
    Constant    0
    Data        2
    BSS         256
    Persistent  35
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     79      79
    BANK1            80     72      80
    BANK2            80     34      67
    BANK3            80      0      77
    BANK4            80      0      70
    BANK5            80      0      73
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    put_device_to_sleep@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 0
		 -> Sleep(), 

    put_device_to_sleep@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 0
		 -> WriteEnvSensor(), 

    put_device_to_sleep@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 0
		 -> ReadEnvSensor(), 

    get_calib_data@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 0
		 -> Sleep(), 

    get_calib_data@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 0
		 -> WriteEnvSensor(), 

    get_calib_data@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 0
		 -> ReadEnvSensor(), 

    S54$4$2	PTR unsigned char  size(1) Largest target is 20
		 -> bme280_set_regs@temp_buff(BANK0[20]), 

    S54$3$2	PTR unsigned char  size(1) Largest target is 26
		 -> get_calib_data@calib_data(BANK0[26]), put_device_to_sleep@reg_data(BANK1[4]), write_power_mode@sensor_mode_reg_val(BANK0[1]), set_filter_standby_settings@reg_data(BANK0[1]), 
		 -> set_osr_press_temp_settings@reg_data(BANK0[1]), set_osr_humidity_settings@ctrl_meas(BANK0[1]), bme280_get_sensor_data@reg_data(BANK1[8]), bme280_set_sensor_mode@last_set_mode(BANK1[1]), 
		 -> bme280_get_sensor_settings@reg_data(COMMON[4]), bme280_set_sensor_settings@sensor_mode(BANK1[1]), bme280_init@chip_id(BANK0[1]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 73
		 -> STR_2(CODE[3]), checksum(BANK2[6]), STR_1(CODE[7]), main@convertedNumber(BANK2[16]), 
		 -> message_end(BANK5[73]), message_start(BANK4[70]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 73
		 -> STR_2(CODE[3]), checksum(BANK2[6]), STR_1(CODE[7]), main@convertedNumber(BANK2[16]), 
		 -> message_end(BANK5[73]), message_start(BANK4[70]), 

    TransmitString@message	PTR unsigned char  size(1) Largest target is 73
		 -> message_end(BANK5[73]), message_start(BANK4[70]), 

    crc16@data	PTR PTR unsigned char  size(1) Largest target is 2
		 -> messages(BANK2[2]), 

    crc16_update@pData	PTR unsigned char  size(1) Largest target is 73
		 -> message_end(BANK5[73]), message_start(BANK4[70]), 

    WriteEnvSensor@reg_data	PTR unsigned char  size(1) Largest target is 20
		 -> bme280_set_regs@temp_buff(BANK0[20]), 

    ReadEnvSensor@reg_data	PTR unsigned char  size(1) Largest target is 26
		 -> get_calib_data@calib_data(BANK0[26]), put_device_to_sleep@reg_data(BANK1[4]), write_power_mode@sensor_mode_reg_val(BANK0[1]), set_filter_standby_settings@reg_data(BANK0[1]), 
		 -> set_osr_press_temp_settings@reg_data(BANK0[1]), set_osr_humidity_settings@ctrl_meas(BANK0[1]), bme280_get_sensor_data@reg_data(BANK1[8]), bme280_set_sensor_mode@last_set_mode(BANK1[1]), 
		 -> bme280_get_sensor_settings@reg_data(COMMON[4]), bme280_set_sensor_settings@sensor_mode(BANK1[1]), bme280_init@chip_id(BANK0[1]), 

    messages	PTR unsigned char [2] size(1) Largest target is 73
		 -> message_end(BANK5[73]), message_start(BANK4[70]), 

    UIntToString@dest	PTR unsigned char  size(1) Largest target is 16
		 -> main@convertedNumber(BANK2[16]), 

    IntToString@dest	PTR unsigned char  size(1) Largest target is 16
		 -> main@convertedNumber(BANK2[16]), 

    UIntToHexString@dest	PTR unsigned char  size(1) Largest target is 6
		 -> checksum(BANK2[6]), 

    ReverseString@opposite	PTR unsigned char  size(1) Largest target is 16
		 -> checksum(BANK2[6]), main@convertedNumber(BANK2[16]), 

    ReverseString@str	PTR unsigned char  size(1) Largest target is 16
		 -> checksum(BANK2[6]), main@convertedNumber(BANK2[16]), 

    InsertString@dest	PTR unsigned char  size(1) Largest target is 73
		 -> message_end(BANK5[73]), message_start(BANK4[70]), 

    InsertString@src	PTR unsigned char  size(2) Largest target is 16
		 -> STR_2(CODE[3]), checksum(BANK2[6]), STR_1(CODE[7]), main@convertedNumber(BANK2[16]), 

    Insert@dest	PTR unsigned char  size(1) Largest target is 73
		 -> message_end(BANK5[73]), message_start(BANK4[70]), 

    ClearString@str	PTR unsigned char  size(2) Largest target is 73
		 -> main@convertedNumber(BANK2[16]), message_end(BANK5[73]), message_start(BANK4[70]), 

    EnvSensor.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> Sleep(), 

    EnvSensor.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> WriteEnvSensor(), 

    EnvSensor.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> ReadEnvSensor(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TimerISR(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TimerISR(), Absolute function(), TMR0_DefaultInterruptHandler(), 

    null_ptr_check@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> Sleep(), 

    null_ptr_check@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> WriteEnvSensor(), 

    null_ptr_check@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> ReadEnvSensor(), 

    null_ptr_check@dev	PTR const struct bme280_dev size(1) Largest target is 51
		 -> EnvSensor(BANK3[51]), 

    parse_humidity_calib_data@reg_data	PTR const unsigned char  size(1) Largest target is 26
		 -> get_calib_data@calib_data(BANK0[26]), 

    parse_humidity_calib_data@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> Sleep(), 

    parse_humidity_calib_data@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> WriteEnvSensor(), 

    parse_humidity_calib_data@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> ReadEnvSensor(), 

    parse_humidity_calib_data@dev	PTR struct bme280_dev size(1) Largest target is 51
		 -> EnvSensor(BANK3[51]), 

    parse_humidity_calib_data@calib_data	PTR struct bme280_calib_data size(1) Largest target is 51
		 -> EnvSensor.calib_data(BANK3[37]), EnvSensor(BANK3[51]), 

    parse_temp_press_calib_data@reg_data	PTR const unsigned char  size(1) Largest target is 26
		 -> get_calib_data@calib_data(BANK0[26]), 

    parse_temp_press_calib_data@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> Sleep(), 

    parse_temp_press_calib_data@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> WriteEnvSensor(), 

    parse_temp_press_calib_data@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> ReadEnvSensor(), 

    parse_temp_press_calib_data@dev	PTR struct bme280_dev size(1) Largest target is 51
		 -> EnvSensor(BANK3[51]), 

    parse_temp_press_calib_data@calib_data	PTR struct bme280_calib_data size(1) Largest target is 51
		 -> EnvSensor.calib_data(BANK3[37]), EnvSensor(BANK3[51]), 

    interleave_reg_addr@reg_data	PTR const unsigned char  size(1) Largest target is 1
		 -> write_power_mode@sensor_mode_reg_val(BANK0[1]), set_filter_standby_settings@reg_data(BANK0[1]), set_osr_press_temp_settings@reg_data(BANK0[1]), set_osr_humidity_settings@ctrl_meas(BANK0[1]), 
		 -> set_osr_humidity_settings@ctrl_hum(BANK0[1]), bme280_soft_reset@soft_rst_cmd(BANK0[1]), 

    interleave_reg_addr@reg_addr	PTR const unsigned char  size(1) Largest target is 1
		 -> write_power_mode@reg_addr(BANK0[1]), set_filter_standby_settings@reg_addr(BANK0[1]), set_osr_press_temp_settings@reg_addr(BANK0[1]), set_osr_humidity_settings@reg_addr(BANK0[1]), 
		 -> bme280_soft_reset@reg_addr(BANK0[1]), 

    interleave_reg_addr@temp_buff	PTR unsigned char  size(1) Largest target is 20
		 -> bme280_set_regs@temp_buff(BANK0[20]), 

    get_calib_data@dev	PTR struct bme280_dev size(1) Largest target is 51
		 -> EnvSensor(BANK3[51]), 

    compensate_humidity@uncomp_data	PTR const struct bme280_uncomp_data size(1) Largest target is 12
		 -> bme280_get_sensor_data@uncomp_data(BANK1[12]), 

    compensate_humidity@calib_data	PTR const struct bme280_calib_data size(1) Largest target is 51
		 -> EnvSensor(BANK3[51]), 

    compensate_pressure@uncomp_data	PTR const struct bme280_uncomp_data size(1) Largest target is 12
		 -> bme280_get_sensor_data@uncomp_data(BANK1[12]), 

    compensate_pressure@calib_data	PTR const struct bme280_calib_data size(1) Largest target is 51
		 -> EnvSensor(BANK3[51]), 

    compensate_temperature@calib_data	PTR struct bme280_calib_data size(1) Largest target is 51
		 -> EnvSensor(BANK3[51]), 

    compensate_temperature@uncomp_data	PTR const struct bme280_uncomp_data size(1) Largest target is 12
		 -> bme280_get_sensor_data@uncomp_data(BANK1[12]), 

    reload_device_settings@dev	PTR const struct bme280_dev size(1) Largest target is 51
		 -> EnvSensor(BANK3[51]), 

    reload_device_settings@settings	PTR const struct bme280_settings size(1) Largest target is 5
		 -> put_device_to_sleep@settings(BANK1[5]), 

    put_device_to_sleep@dev	PTR const struct bme280_dev size(1) Largest target is 51
		 -> EnvSensor(BANK3[51]), 

    write_power_mode@dev	PTR const struct bme280_dev size(1) Largest target is 51
		 -> EnvSensor(BANK3[51]), 

    parse_device_settings@reg_data	PTR const unsigned char  size(1) Largest target is 4
		 -> put_device_to_sleep@reg_data(BANK1[4]), bme280_get_sensor_settings@reg_data(COMMON[4]), 

    parse_device_settings@settings	PTR struct bme280_settings size(1) Largest target is 5
		 -> put_device_to_sleep@settings(BANK1[5]), 

    fill_osr_temp_settings@settings	PTR const struct bme280_settings size(2) Largest target is 51
		 -> EnvSensor(BANK3[51]), put_device_to_sleep@settings(BANK1[5]), 

    fill_osr_temp_settings@reg_data	PTR unsigned char  size(1) Largest target is 1
		 -> set_osr_press_temp_settings@reg_data(BANK0[1]), 

    fill_osr_press_settings@settings	PTR const struct bme280_settings size(2) Largest target is 51
		 -> EnvSensor(BANK3[51]), put_device_to_sleep@settings(BANK1[5]), 

    fill_osr_press_settings@reg_data	PTR unsigned char  size(1) Largest target is 1
		 -> set_osr_press_temp_settings@reg_data(BANK0[1]), 

    fill_standby_settings@settings	PTR const struct bme280_settings size(2) Largest target is 51
		 -> EnvSensor(BANK3[51]), put_device_to_sleep@settings(BANK1[5]), 

    fill_standby_settings@reg_data	PTR unsigned char  size(1) Largest target is 1
		 -> set_filter_standby_settings@reg_data(BANK0[1]), 

    fill_filter_settings@settings	PTR const struct bme280_settings size(2) Largest target is 51
		 -> EnvSensor(BANK3[51]), put_device_to_sleep@settings(BANK1[5]), 

    fill_filter_settings@reg_data	PTR unsigned char  size(1) Largest target is 1
		 -> set_filter_standby_settings@reg_data(BANK0[1]), 

    set_filter_standby_settings@settings	PTR const struct bme280_settings size(2) Largest target is 51
		 -> EnvSensor(BANK3[51]), put_device_to_sleep@settings(BANK1[5]), 

    set_filter_standby_settings@dev	PTR const struct bme280_dev size(1) Largest target is 51
		 -> EnvSensor(BANK3[51]), 

    set_osr_press_temp_settings@settings	PTR const struct bme280_settings size(2) Largest target is 51
		 -> EnvSensor(BANK3[51]), put_device_to_sleep@settings(BANK1[5]), 

    set_osr_press_temp_settings@dev	PTR const struct bme280_dev size(1) Largest target is 51
		 -> EnvSensor(BANK3[51]), 

    set_osr_humidity_settings@dev	PTR const struct bme280_dev size(1) Largest target is 51
		 -> EnvSensor(BANK3[51]), 

    set_osr_humidity_settings@settings	PTR const struct bme280_settings size(2) Largest target is 51
		 -> EnvSensor(BANK3[51]), put_device_to_sleep@settings(BANK1[5]), 

    set_osr_settings@dev	PTR const struct bme280_dev size(1) Largest target is 51
		 -> EnvSensor(BANK3[51]), 

    set_osr_settings@settings	PTR const struct bme280_settings size(2) Largest target is 51
		 -> EnvSensor(BANK3[51]), put_device_to_sleep@settings(BANK1[5]), 

    bme280_compensate_data@calib_data	PTR struct bme280_calib_data size(1) Largest target is 51
		 -> EnvSensor(BANK3[51]), 

    bme280_compensate_data@comp_data	PTR struct bme280_data size(1) Largest target is 12
		 -> main@sensor_data(BANK2[12]), 

    bme280_compensate_data@uncomp_data	PTR const struct bme280_uncomp_data size(1) Largest target is 12
		 -> bme280_get_sensor_data@uncomp_data(BANK1[12]), 

    bme280_parse_sensor_data@uncomp_data	PTR struct bme280_uncomp_data size(1) Largest target is 12
		 -> bme280_get_sensor_data@uncomp_data(BANK1[12]), 

    bme280_parse_sensor_data@reg_data	PTR const unsigned char  size(1) Largest target is 8
		 -> bme280_get_sensor_data@reg_data(BANK1[8]), 

    bme280_get_sensor_data@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> Sleep(), 

    bme280_get_sensor_data@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> WriteEnvSensor(), 

    bme280_get_sensor_data@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> ReadEnvSensor(), 

    bme280_get_sensor_data@comp_data	PTR struct bme280_data size(1) Largest target is 12
		 -> main@sensor_data(BANK2[12]), 

    bme280_get_sensor_data@dev	PTR struct bme280_dev size(1) Largest target is 51
		 -> EnvSensor(BANK3[51]), 

    bme280_soft_reset@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> Sleep(), 

    bme280_soft_reset@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> WriteEnvSensor(), 

    bme280_soft_reset@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> ReadEnvSensor(), 

    bme280_soft_reset@dev	PTR const struct bme280_dev size(1) Largest target is 51
		 -> EnvSensor(BANK3[51]), 

    bme280_get_sensor_mode@sensor_mode	PTR unsigned char  size(1) Largest target is 1
		 -> bme280_set_sensor_mode@last_set_mode(BANK1[1]), bme280_set_sensor_settings@sensor_mode(BANK1[1]), 

    bme280_get_sensor_mode@dev	PTR const struct bme280_dev size(1) Largest target is 51
		 -> EnvSensor(BANK3[51]), 

    bme280_set_sensor_mode@dev	PTR const struct bme280_dev size(1) Largest target is 51
		 -> EnvSensor(BANK3[51]), 

    bme280_get_sensor_settings@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> Sleep(), 

    bme280_get_sensor_settings@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> WriteEnvSensor(), 

    bme280_get_sensor_settings@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> ReadEnvSensor(), 

    bme280_set_sensor_settings@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> Sleep(), 

    bme280_set_sensor_settings@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> WriteEnvSensor(), 

    bme280_set_sensor_settings@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> ReadEnvSensor(), 

    bme280_set_sensor_settings@dev	PTR const struct bme280_dev size(1) Largest target is 51
		 -> EnvSensor(BANK3[51]), 

    bme280_set_regs@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> Sleep(), 

    bme280_set_regs@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> WriteEnvSensor(), 

    bme280_set_regs@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> ReadEnvSensor(), 

    bme280_set_regs@reg_data	PTR const unsigned char  size(1) Largest target is 1
		 -> write_power_mode@sensor_mode_reg_val(BANK0[1]), set_filter_standby_settings@reg_data(BANK0[1]), set_osr_press_temp_settings@reg_data(BANK0[1]), set_osr_humidity_settings@ctrl_meas(BANK0[1]), 
		 -> set_osr_humidity_settings@ctrl_hum(BANK0[1]), bme280_soft_reset@soft_rst_cmd(BANK0[1]), 

    bme280_set_regs@reg_addr	PTR unsigned char  size(1) Largest target is 1
		 -> write_power_mode@reg_addr(BANK0[1]), set_filter_standby_settings@reg_addr(BANK0[1]), set_osr_press_temp_settings@reg_addr(BANK0[1]), set_osr_humidity_settings@reg_addr(BANK0[1]), 
		 -> bme280_soft_reset@reg_addr(BANK0[1]), 

    bme280_set_regs@dev	PTR const struct bme280_dev size(1) Largest target is 51
		 -> EnvSensor(BANK3[51]), 

    bme280_get_regs@reg_data	PTR unsigned char  size(1) Largest target is 26
		 -> get_calib_data@calib_data(BANK0[26]), put_device_to_sleep@reg_data(BANK1[4]), write_power_mode@sensor_mode_reg_val(BANK0[1]), set_filter_standby_settings@reg_data(BANK0[1]), 
		 -> set_osr_press_temp_settings@reg_data(BANK0[1]), set_osr_humidity_settings@ctrl_meas(BANK0[1]), bme280_get_sensor_data@reg_data(BANK1[8]), bme280_set_sensor_mode@last_set_mode(BANK1[1]), 
		 -> bme280_get_sensor_settings@reg_data(COMMON[4]), bme280_set_sensor_settings@sensor_mode(BANK1[1]), bme280_init@chip_id(BANK0[1]), 

    bme280_get_regs@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> Sleep(), 

    bme280_get_regs@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> WriteEnvSensor(), 

    bme280_get_regs@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> ReadEnvSensor(), 

    bme280_get_regs@dev	PTR const struct bme280_dev size(1) Largest target is 51
		 -> EnvSensor(BANK3[51]), 

    S54bme280_dev$delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> Sleep(), 

    bme280_init@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> Sleep(), 

    S54bme280_dev$write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> WriteEnvSensor(), 

    bme280_init@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> WriteEnvSensor(), 

    S54bme280_dev$read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> ReadEnvSensor(), 

    bme280_init@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> ReadEnvSensor(), 

    bme280_init@dev	PTR struct bme280_dev size(1) Largest target is 51
		 -> EnvSensor(BANK3[51]), 


Critical Paths under _main in COMMON

    _main->_IntToString
    _crc16->_crc16_update
    _crc16_update->_strlen
    _compensate_temperature->___aldiv
    _compensate_pressure->___lldiv
    _compensate_humidity->___aldiv
    ___aldiv->___lmul
    _UIntToString->___lldiv
    _TransmitString->_TransmitByte
    _TransmitByte->_TransmitBit
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _IntToString->_ReverseString
    _ReverseString->___awdiv
    _InsertString->_Insert
    _InitTiming->_TMR0_SetInterruptHandler
    _ClearMessages->_ClearString
    _ClearString->_strlen
    _get_calib_data->_parse_humidity_calib_data
    _ReadEnvSensor->_I2C_ReadByte
    _ReadEnvSensor->_I2C_WriteByte
    _WriteEnvSensor->_I2C_WriteByte
    _I2C_Wait_SSPIF->_DebugAlert
    _DebugAlert->_Sleep

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    None.

Critical Paths under _main in BANK0

    _bme280_get_sensor_data->_bme280_compensate_data
    _bme280_compensate_data->_compensate_humidity
    _compensate_temperature->___aldiv
    _compensate_pressure->___aldiv
    _compensate_humidity->___aldiv
    _UIntToString->_ReverseString
    _UIntToHexString->_ReverseString
    _UIntToHexString->_crc16
    _IntToString->_ReverseString
    _BME280_Init->_bme280_set_sensor_mode
    _BME280_Init->_bme280_set_sensor_settings
    _bme280_set_sensor_settings->_put_device_to_sleep
    _bme280_set_sensor_mode->_put_device_to_sleep
    _write_power_mode->_bme280_set_regs
    _put_device_to_sleep->_reload_device_settings
    _reload_device_settings->_set_osr_settings
    _set_osr_settings->_set_osr_humidity_settings
    _set_osr_settings->_set_osr_press_temp_settings
    _set_osr_press_temp_settings->_bme280_set_regs
    _set_osr_humidity_settings->_bme280_set_regs
    _set_filter_standby_settings->_bme280_set_regs
    _bme280_get_sensor_mode->_bme280_get_regs
    _bme280_init->_get_calib_data
    _get_calib_data->_bme280_get_regs
    _bme280_get_regs->_ReadEnvSensor
    _ReadEnvSensor->_I2C_ReadByte
    _I2C_ReadByte->_I2C_Wait_SSPIF
    _bme280_soft_reset->_bme280_set_regs
    _bme280_set_regs->_WriteEnvSensor
    _WriteEnvSensor->_I2C_Wait_SSPIF
    _I2C_WriteByte->_I2C_Wait_SSPIF
    _I2C_Stop->_I2C_Wait_SSPIF
    _I2C_Wait_SSPIF->_DebugAlert

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_bme280_get_sensor_data
    _bme280_compensate_data->_compensate_pressure
    _BME280_Init->_bme280_set_sensor_mode
    _BME280_Init->_bme280_set_sensor_settings
    _bme280_set_sensor_settings->_put_device_to_sleep
    _bme280_set_sensor_mode->_put_device_to_sleep

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                39    39      0  375328
                                             67 BANK1      5     5      0
                                              0 BANK2     34    34      0
                        _BME280_Init
                      _ClearMessages
                        _ClearString
                         _InitTiming
                             _Insert
                       _InsertString
                        _IntToString
                  _SYSTEM_Initialize
                     _TransmitString
                    _UIntToHexString
                       _UIntToString
             _bme280_get_sensor_data
                              _crc16
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _crc16                                                9     7      2    1202
                                              0 BANK0      9     7      2
                       _crc16_update
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _crc16_update                                         9     5      4     367
                                              5 COMMON     9     5      4
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (1) _bme280_get_sensor_data                              27    25      2   42702
                                             65 BANK0      5     3      2
                                             45 BANK1     22    22      0
             _bme280_compensate_data
                    _bme280_get_regs
           _bme280_parse_sensor_data
                     _null_ptr_check
 ---------------------------------------------------------------------------------
 (2) _bme280_parse_sensor_data                            22    21      1     535
                                              0 COMMON     9     8      1
                                              0 BANK0     13    13      0
 ---------------------------------------------------------------------------------
 (2) _bme280_compensate_data                               6     3      3   30461
                                             59 BANK0      6     3      3
                _compensate_humidity
                _compensate_pressure
             _compensate_temperature
 ---------------------------------------------------------------------------------
 (3) _compensate_temperature                              39    35      4    9255
                                             14 BANK0     39    35      4
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) _compensate_pressure                                 67    63      4   10752
                                             14 BANK0     22    18      4
                                              0 BANK1     45    45      0
                            ___aldiv
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) _compensate_humidity                                 45    41      4    9589
                                             14 BANK0     45    41      4
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8    3588
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             15     7      8    4860
                                             12 COMMON     1     1      0
                                              0 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _UIntToString                                         9     4      5    3156
                                              9 BANK0      9     4      5
                      _ReverseString
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     311
                                              0 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             14     6      8     618
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _UIntToHexString                                     19    14      5    2166
                                              9 BANK0     19    14      5
                      _ReverseString
                              _crc16 (ARG)
 ---------------------------------------------------------------------------------
 (1) _TransmitString                                       6     6      0     837
                                              6 COMMON     6     6      0
                       _TransmitByte
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _TransmitByte                                         4     4      0     112
                                              2 COMMON     4     4      0
                        _TransmitBit
 ---------------------------------------------------------------------------------
 (3) _TransmitBit                                          2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     174
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      1     1      0     174
                                              2 COMMON     1     1      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _IntToString                                          8     5      3    3792
                                             11 COMMON     3     0      3
                                              9 BANK0      5     5      0
                      _ReverseString
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) _ReverseString                                       11    11      0    1766
                                              9 COMMON     2     2      0
                                              0 BANK0      9     9      0
                            ___awdiv
                             _strlen
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     730
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _InsertString                                        12     6      6    4914
                                             10 COMMON     1     1      0
                                              0 BANK0     11     5      6
                             _Insert
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _Insert                                              10     5      5    2295
                                              0 COMMON    10     5      5
 ---------------------------------------------------------------------------------
 (1) _InitTiming                                           0     0      0     174
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2     174
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _ClearMessages                                        0     0      0     950
                        _ClearString
 ---------------------------------------------------------------------------------
 (1) _ClearString                                          7     5      2     950
                                              5 COMMON     7     5      2
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _strlen                                               5     3      2     546
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _BME280_Init                                          4     4      0  310350
                                             14 BANK1      4     4      0
                         _DebugAlert
                           _I2C_Init
                        _bme280_init
             _bme280_set_sensor_mode
         _bme280_set_sensor_settings
 ---------------------------------------------------------------------------------
 (2) _bme280_set_sensor_settings                           6     5      1  157822
                                             76 BANK0      3     2      1
                                             11 BANK1      3     3      0
               _are_settings_changed
             _bme280_get_sensor_mode
                     _null_ptr_check
                _put_device_to_sleep
        _set_filter_standby_settings
                   _set_osr_settings
 ---------------------------------------------------------------------------------
 (3) _are_settings_changed                                 3     2      1     282
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (2) _bme280_set_sensor_mode                               6     5      1  115836
                                             76 BANK0      3     2      1
                                             11 BANK1      3     3      0
             _bme280_get_sensor_mode
                     _null_ptr_check
                _put_device_to_sleep
                   _write_power_mode
 ---------------------------------------------------------------------------------
 (3) _write_power_mode                                     8     7      1   19579
                                             51 BANK0      8     7      1
                    _bme280_get_regs
                    _bme280_set_regs
 ---------------------------------------------------------------------------------
 (3) _put_device_to_sleep                                 14    14      0   83336
                                             73 BANK0      3     3      0
                                              0 BANK1     11    11      0
                    _bme280_get_regs
                  _bme280_soft_reset
              _parse_device_settings
             _reload_device_settings
 ---------------------------------------------------------------------------------
 (4) _reload_device_settings                               5     4      1   61381
                                             68 BANK0      5     4      1
        _set_filter_standby_settings
                   _set_osr_settings
 ---------------------------------------------------------------------------------
 (3) _set_osr_settings                                     7     4      3   40637
                                             61 BANK0      7     4      3
          _set_osr_humidity_settings
        _set_osr_press_temp_settings
 ---------------------------------------------------------------------------------
 (4) _set_osr_press_temp_settings                         10     7      3   20246
                                             51 BANK0     10     7      3
                    _bme280_get_regs
                    _bme280_set_regs
            _fill_osr_press_settings
             _fill_osr_temp_settings
 ---------------------------------------------------------------------------------
 (5) _fill_osr_temp_settings                               6     4      2     219
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (5) _fill_osr_press_settings                              6     4      2     219
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (4) _set_osr_humidity_settings                           10     7      3   19774
                                             51 BANK0     10     7      3
                    _bme280_get_regs
                    _bme280_set_regs
 ---------------------------------------------------------------------------------
 (3) _set_filter_standby_settings                         10     7      3   20426
                                             51 BANK0     10     7      3
                    _bme280_get_regs
                    _bme280_set_regs
               _fill_filter_settings
              _fill_standby_settings
 ---------------------------------------------------------------------------------
 (4) _fill_standby_settings                                6     4      2     219
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (4) _fill_filter_settings                                 6     4      2     219
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (4) _parse_device_settings                                4     3      1     542
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (3) _bme280_get_sensor_mode                               6     5      1   11538
                                             32 BANK0      6     5      1
                    _bme280_get_regs
                     _null_ptr_check
 ---------------------------------------------------------------------------------
 (2) _bme280_init                                          7     7      0   35527
                                             64 BANK0      7     7      0
                              _Sleep *
                    _bme280_get_regs
                  _bme280_soft_reset
                     _get_calib_data
                     _null_ptr_check
 ---------------------------------------------------------------------------------
 (3) _get_calib_data                                      32    32      0   12796
                                             32 BANK0     32    32      0
                    _bme280_get_regs
          _parse_humidity_calib_data
        _parse_temp_press_calib_data
 ---------------------------------------------------------------------------------
 (4) _parse_temp_press_calib_data                          4     3      1    1338
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (4) _parse_humidity_calib_data                           14    13      1     699
                                              0 COMMON    14    13      1
 ---------------------------------------------------------------------------------
 (2) _bme280_get_regs                                      9     5      4   10144
                                             23 BANK0      9     5      4
                      _ReadEnvSensor *
                     _null_ptr_check
 ---------------------------------------------------------------------------------
 (3) _ReadEnvSensor                                       10     5      5    5962
                                             13 BANK0     10     5      5
                       _I2C_ReadByte
                           _I2C_Stop
                     _I2C_Wait_SSPIF
                      _I2C_WriteByte
 ---------------------------------------------------------------------------------
 (4) _I2C_ReadByte                                         3     3      0    1110
                                             13 COMMON     1     1      0
                                             11 BANK0      2     2      0
                     _I2C_Wait_SSPIF
 ---------------------------------------------------------------------------------
 (4) _bme280_soft_reset                                    7     7      0   10706
                                             51 BANK0      7     7      0
                              _Sleep *
                    _bme280_set_regs
                     _null_ptr_check
 ---------------------------------------------------------------------------------
 (5) _bme280_set_regs                                     31    28      3    8990
                                             20 BANK0     31    28      3
                     _WriteEnvSensor *
                _interleave_reg_addr
                     _null_ptr_check
 ---------------------------------------------------------------------------------
 (2) _null_ptr_check                                       4     4      0     919
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (6) _interleave_reg_addr                                  8     5      3     622
                                              0 COMMON     8     5      3
 ---------------------------------------------------------------------------------
 (6) _WriteEnvSensor                                       9     4      5    4697
                                             11 BANK0      9     4      5
                           _I2C_Stop
                     _I2C_Wait_SSPIF
                      _I2C_WriteByte
 ---------------------------------------------------------------------------------
 (4) _I2C_WriteByte                                        1     1      0    2121
                                             13 COMMON     1     1      0
                      _I2C_UserAlert
                     _I2C_Wait_SSPIF
 ---------------------------------------------------------------------------------
 (5) _I2C_UserAlert                                        1     1      0    1045
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (6) _I2C_Stop                                             0     0      0    1045
                     _I2C_Wait_SSPIF
 ---------------------------------------------------------------------------------
 (5) _I2C_Wait_SSPIF                                       4     4      0    1045
                                              7 BANK0      4     4      0
                         _DebugAlert
 ---------------------------------------------------------------------------------
 (6) _DebugAlert                                           8     3      5    1045
                                             12 COMMON     1     1      0
                                              0 BANK0      7     2      5
                              _Sleep
 ---------------------------------------------------------------------------------
 (7) _Sleep                                               12     8      4     375
                                              0 COMMON    12     8      4
 ---------------------------------------------------------------------------------
 (2) _I2C_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _INTERRUPT_InterruptManager                          0     0      0       0
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (16) _TMR0_ISR                                            0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                           _TimerISR *
 ---------------------------------------------------------------------------------
 (17) _TimerISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BME280_Init
     _DebugAlert
       _Sleep
     _I2C_Init
     _bme280_init
       _Sleep *
       _bme280_get_regs *
         _ReadEnvSensor *
           _I2C_ReadByte
             _I2C_Wait_SSPIF
               _DebugAlert
                 _Sleep
           _I2C_Stop
             _I2C_Wait_SSPIF
               _DebugAlert
                 _Sleep
           _I2C_Wait_SSPIF
             _DebugAlert
               _Sleep
           _I2C_WriteByte
             _I2C_UserAlert
               _I2C_Stop
                 _I2C_Wait_SSPIF
                   _DebugAlert
                     _Sleep
             _I2C_Wait_SSPIF
               _DebugAlert
                 _Sleep
         _null_ptr_check *
       _bme280_soft_reset *
         _Sleep *
         _bme280_set_regs *
           _WriteEnvSensor *
             _I2C_Stop
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
             _I2C_Wait_SSPIF
               _DebugAlert
                 _Sleep
             _I2C_WriteByte
               _I2C_UserAlert
                 _I2C_Stop
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
           _interleave_reg_addr *
           _null_ptr_check *
         _null_ptr_check *
       _get_calib_data *
         _bme280_get_regs
           _ReadEnvSensor *
             _I2C_ReadByte
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
             _I2C_Stop
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
             _I2C_Wait_SSPIF
               _DebugAlert
                 _Sleep
             _I2C_WriteByte
               _I2C_UserAlert
                 _I2C_Stop
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
           _null_ptr_check *
         _parse_humidity_calib_data
         _parse_temp_press_calib_data
       _null_ptr_check *
     _bme280_set_sensor_mode
       _bme280_get_sensor_mode
         _bme280_get_regs
           _ReadEnvSensor *
             _I2C_ReadByte
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
             _I2C_Stop
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
             _I2C_Wait_SSPIF
               _DebugAlert
                 _Sleep
             _I2C_WriteByte
               _I2C_UserAlert
                 _I2C_Stop
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
           _null_ptr_check *
         _null_ptr_check
       _null_ptr_check
       _put_device_to_sleep
         _bme280_get_regs
           _ReadEnvSensor *
             _I2C_ReadByte
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
             _I2C_Stop
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
             _I2C_Wait_SSPIF
               _DebugAlert
                 _Sleep
             _I2C_WriteByte
               _I2C_UserAlert
                 _I2C_Stop
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
           _null_ptr_check *
         _bme280_soft_reset
           _Sleep *
           _bme280_set_regs *
             _WriteEnvSensor *
               _I2C_Stop
                 _I2C_Wait_SSPIF
                   _DebugAlert
                     _Sleep
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
               _I2C_WriteByte
                 _I2C_UserAlert
                   _I2C_Stop
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                 _I2C_Wait_SSPIF
                   _DebugAlert
                     _Sleep
             _interleave_reg_addr *
             _null_ptr_check *
           _null_ptr_check *
         _parse_device_settings
         _reload_device_settings
           _set_filter_standby_settings
             _bme280_get_regs
               _ReadEnvSensor *
                 _I2C_ReadByte
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
                 _I2C_Stop
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
                 _I2C_Wait_SSPIF
                   _DebugAlert
                     _Sleep
                 _I2C_WriteByte
                   _I2C_UserAlert
                     _I2C_Stop
                       _I2C_Wait_SSPIF
                         _DebugAlert
                           _Sleep
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
               _null_ptr_check *
             _bme280_set_regs
               _WriteEnvSensor *
                 _I2C_Stop
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
                 _I2C_Wait_SSPIF
                   _DebugAlert
                     _Sleep
                 _I2C_WriteByte
                   _I2C_UserAlert
                     _I2C_Stop
                       _I2C_Wait_SSPIF
                         _DebugAlert
                           _Sleep
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
               _interleave_reg_addr *
               _null_ptr_check *
             _fill_filter_settings
             _fill_standby_settings
           _set_osr_settings
             _set_osr_humidity_settings
               _bme280_get_regs
                 _ReadEnvSensor *
                   _I2C_ReadByte
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                   _I2C_Stop
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
                   _I2C_WriteByte
                     _I2C_UserAlert
                       _I2C_Stop
                         _I2C_Wait_SSPIF
                           _DebugAlert
                             _Sleep
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                 _null_ptr_check *
               _bme280_set_regs
                 _WriteEnvSensor *
                   _I2C_Stop
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
                   _I2C_WriteByte
                     _I2C_UserAlert
                       _I2C_Stop
                         _I2C_Wait_SSPIF
                           _DebugAlert
                             _Sleep
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                 _interleave_reg_addr *
                 _null_ptr_check *
             _set_osr_press_temp_settings
               _bme280_get_regs
                 _ReadEnvSensor *
                   _I2C_ReadByte
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                   _I2C_Stop
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
                   _I2C_WriteByte
                     _I2C_UserAlert
                       _I2C_Stop
                         _I2C_Wait_SSPIF
                           _DebugAlert
                             _Sleep
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                 _null_ptr_check *
               _bme280_set_regs
                 _WriteEnvSensor *
                   _I2C_Stop
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
                   _I2C_WriteByte
                     _I2C_UserAlert
                       _I2C_Stop
                         _I2C_Wait_SSPIF
                           _DebugAlert
                             _Sleep
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                 _interleave_reg_addr *
                 _null_ptr_check *
               _fill_osr_press_settings
               _fill_osr_temp_settings
       _write_power_mode
         _bme280_get_regs
           _ReadEnvSensor *
             _I2C_ReadByte
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
             _I2C_Stop
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
             _I2C_Wait_SSPIF
               _DebugAlert
                 _Sleep
             _I2C_WriteByte
               _I2C_UserAlert
                 _I2C_Stop
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
           _null_ptr_check *
         _bme280_set_regs
           _WriteEnvSensor *
             _I2C_Stop
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
             _I2C_Wait_SSPIF
               _DebugAlert
                 _Sleep
             _I2C_WriteByte
               _I2C_UserAlert
                 _I2C_Stop
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
           _interleave_reg_addr *
           _null_ptr_check *
     _bme280_set_sensor_settings
       _are_settings_changed
       _bme280_get_sensor_mode
         _bme280_get_regs
           _ReadEnvSensor *
             _I2C_ReadByte
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
             _I2C_Stop
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
             _I2C_Wait_SSPIF
               _DebugAlert
                 _Sleep
             _I2C_WriteByte
               _I2C_UserAlert
                 _I2C_Stop
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
           _null_ptr_check *
         _null_ptr_check
       _null_ptr_check
       _put_device_to_sleep
         _bme280_get_regs
           _ReadEnvSensor *
             _I2C_ReadByte
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
             _I2C_Stop
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
             _I2C_Wait_SSPIF
               _DebugAlert
                 _Sleep
             _I2C_WriteByte
               _I2C_UserAlert
                 _I2C_Stop
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
           _null_ptr_check *
         _bme280_soft_reset
           _Sleep *
           _bme280_set_regs *
             _WriteEnvSensor *
               _I2C_Stop
                 _I2C_Wait_SSPIF
                   _DebugAlert
                     _Sleep
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
               _I2C_WriteByte
                 _I2C_UserAlert
                   _I2C_Stop
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                 _I2C_Wait_SSPIF
                   _DebugAlert
                     _Sleep
             _interleave_reg_addr *
             _null_ptr_check *
           _null_ptr_check *
         _parse_device_settings
         _reload_device_settings
           _set_filter_standby_settings
             _bme280_get_regs
               _ReadEnvSensor *
                 _I2C_ReadByte
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
                 _I2C_Stop
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
                 _I2C_Wait_SSPIF
                   _DebugAlert
                     _Sleep
                 _I2C_WriteByte
                   _I2C_UserAlert
                     _I2C_Stop
                       _I2C_Wait_SSPIF
                         _DebugAlert
                           _Sleep
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
               _null_ptr_check *
             _bme280_set_regs
               _WriteEnvSensor *
                 _I2C_Stop
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
                 _I2C_Wait_SSPIF
                   _DebugAlert
                     _Sleep
                 _I2C_WriteByte
                   _I2C_UserAlert
                     _I2C_Stop
                       _I2C_Wait_SSPIF
                         _DebugAlert
                           _Sleep
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
               _interleave_reg_addr *
               _null_ptr_check *
             _fill_filter_settings
             _fill_standby_settings
           _set_osr_settings
             _set_osr_humidity_settings
               _bme280_get_regs
                 _ReadEnvSensor *
                   _I2C_ReadByte
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                   _I2C_Stop
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
                   _I2C_WriteByte
                     _I2C_UserAlert
                       _I2C_Stop
                         _I2C_Wait_SSPIF
                           _DebugAlert
                             _Sleep
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                 _null_ptr_check *
               _bme280_set_regs
                 _WriteEnvSensor *
                   _I2C_Stop
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
                   _I2C_WriteByte
                     _I2C_UserAlert
                       _I2C_Stop
                         _I2C_Wait_SSPIF
                           _DebugAlert
                             _Sleep
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                 _interleave_reg_addr *
                 _null_ptr_check *
             _set_osr_press_temp_settings
               _bme280_get_regs
                 _ReadEnvSensor *
                   _I2C_ReadByte
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                   _I2C_Stop
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
                   _I2C_WriteByte
                     _I2C_UserAlert
                       _I2C_Stop
                         _I2C_Wait_SSPIF
                           _DebugAlert
                             _Sleep
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                 _null_ptr_check *
               _bme280_set_regs
                 _WriteEnvSensor *
                   _I2C_Stop
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
                   _I2C_WriteByte
                     _I2C_UserAlert
                       _I2C_Stop
                         _I2C_Wait_SSPIF
                           _DebugAlert
                             _Sleep
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                 _interleave_reg_addr *
                 _null_ptr_check *
               _fill_osr_press_settings
               _fill_osr_temp_settings
       _set_filter_standby_settings
         _bme280_get_regs
           _ReadEnvSensor *
             _I2C_ReadByte
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
             _I2C_Stop
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
             _I2C_Wait_SSPIF
               _DebugAlert
                 _Sleep
             _I2C_WriteByte
               _I2C_UserAlert
                 _I2C_Stop
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
           _null_ptr_check *
         _bme280_set_regs
           _WriteEnvSensor *
             _I2C_Stop
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
             _I2C_Wait_SSPIF
               _DebugAlert
                 _Sleep
             _I2C_WriteByte
               _I2C_UserAlert
                 _I2C_Stop
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
           _interleave_reg_addr *
           _null_ptr_check *
         _fill_filter_settings
         _fill_standby_settings
       _set_osr_settings
         _set_osr_humidity_settings
           _bme280_get_regs
             _ReadEnvSensor *
               _I2C_ReadByte
                 _I2C_Wait_SSPIF
                   _DebugAlert
                     _Sleep
               _I2C_Stop
                 _I2C_Wait_SSPIF
                   _DebugAlert
                     _Sleep
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
               _I2C_WriteByte
                 _I2C_UserAlert
                   _I2C_Stop
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                 _I2C_Wait_SSPIF
                   _DebugAlert
                     _Sleep
             _null_ptr_check *
           _bme280_set_regs
             _WriteEnvSensor *
               _I2C_Stop
                 _I2C_Wait_SSPIF
                   _DebugAlert
                     _Sleep
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
               _I2C_WriteByte
                 _I2C_UserAlert
                   _I2C_Stop
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                 _I2C_Wait_SSPIF
                   _DebugAlert
                     _Sleep
             _interleave_reg_addr *
             _null_ptr_check *
         _set_osr_press_temp_settings
           _bme280_get_regs
             _ReadEnvSensor *
               _I2C_ReadByte
                 _I2C_Wait_SSPIF
                   _DebugAlert
                     _Sleep
               _I2C_Stop
                 _I2C_Wait_SSPIF
                   _DebugAlert
                     _Sleep
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
               _I2C_WriteByte
                 _I2C_UserAlert
                   _I2C_Stop
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                 _I2C_Wait_SSPIF
                   _DebugAlert
                     _Sleep
             _null_ptr_check *
           _bme280_set_regs
             _WriteEnvSensor *
               _I2C_Stop
                 _I2C_Wait_SSPIF
                   _DebugAlert
                     _Sleep
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
               _I2C_WriteByte
                 _I2C_UserAlert
                   _I2C_Stop
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                 _I2C_Wait_SSPIF
                   _DebugAlert
                     _Sleep
             _interleave_reg_addr *
             _null_ptr_check *
           _fill_osr_press_settings
           _fill_osr_temp_settings
   _ClearMessages
     _ClearString
       _strlen
   _ClearString
     _strlen
   _InitTiming
     _TMR0_SetInterruptHandler
   _Insert
   _InsertString
     _Insert
     _strlen
   _IntToString
     _ReverseString
       ___awdiv
       _strlen
     ___awdiv
     ___awmod
   _SYSTEM_Initialize
     _EUSART_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
   _TransmitString
     _TransmitByte
       _TransmitBit
     _strlen
   _UIntToHexString
     _ReverseString
       ___awdiv
       _strlen
     _crc16 (ARG)
       _crc16_update
         _strlen (ARG)
       _strlen
   _UIntToString
     _ReverseString
       ___awdiv
       _strlen
     ___lldiv
     ___llmod
   _bme280_get_sensor_data
     _bme280_compensate_data
       _compensate_humidity
         ___aldiv
           ___lmul (ARG)
         ___lmul
       _compensate_pressure
         ___aldiv
           ___lmul (ARG)
         ___lldiv
         ___lmul
       _compensate_temperature
         ___aldiv
           ___lmul (ARG)
         ___lmul
     _bme280_get_regs
       _ReadEnvSensor *
         _I2C_ReadByte
           _I2C_Wait_SSPIF
             _DebugAlert
               _Sleep
         _I2C_Stop
           _I2C_Wait_SSPIF
             _DebugAlert
               _Sleep
         _I2C_Wait_SSPIF
           _DebugAlert
             _Sleep
         _I2C_WriteByte
           _I2C_UserAlert
             _I2C_Stop
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
           _I2C_Wait_SSPIF
             _DebugAlert
               _Sleep
       _null_ptr_check *
     _bme280_parse_sensor_data
     _null_ptr_check
   _crc16
     _crc16_update
       _strlen (ARG)
     _strlen
   _strlen

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _TimerISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      4F       5       98.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     48      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50     22      43       9       83.8%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      4D      11       96.3%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      46      13       87.5%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0      49      15       91.3%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     1CC      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     1CC      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sat Sep 07 12:25:56 2019

                        __end_of_ClearString 1D24                                  __CFG_CP$OFF 0000  
           bme280_parse_sensor_data@data_lsb 0024             bme280_parse_sensor_data@data_msb 0028  
                                         l55 14E5                                           l72 0987  
                                         l65 108F                                 ___awdiv@sign 0076  
                                         _id 0156                              _timer0ReloadVal 0160  
                 ?_set_osr_humidity_settings 0053             __end_of_bme280_parse_sensor_data 0B9E  
                                __CFG_LVP$ON 0000                                          l126 1704  
                                        l152 1102                                          l208 0FF7  
                                        l146 10C0                                          l238 1CF9  
                                        l192 03E2                                          l185 0D38  
                                        l196 057B                                          l464 1710  
                                        l591 1F52                                          l649 1DD3  
                                        l665 1FE0                                          l594 1F83  
                                        l685 1C37                                          l845 178F  
          bme280_parse_sensor_data@data_xlsb 0020              __size_of_fill_osr_temp_settings 001C  
                               ___awmod@sign 0076                                 __CFG_BORV$LO 0000  
                                        wreg 0009                                 __CFG_IESO$ON 0000  
           bme280_parse_sensor_data@reg_data 002C                               bme280_init@dev 0066  
            __size_of_compensate_temperature 01A3                            ___g_timeout_start 00EC  
                             ReverseString@i 0026                                 __CFG_ZCD$OFF 0000  
                                 _DebugAlert 1DF5                                         l3200 130A  
                                       l3204 1312                                         l4032 10B6  
                                       l4018 1274                                         l4050 1D38  
                                       l4202 1BA0                                         l3154 1C1D  
                                       l3162 1C39                                         l4036 10D0  
                                       l4204 1BA1                                         l3156 1C29  
                                       l3172 12D0                                         l4054 1D4A  
                                       l3406 157B                                         l3190 12EF  
                                       l3430 1476                                         l3502 116D  
                      __size_of_crc16_update 003D                                         l4072 1112  
                                       l3408 15B3                                         l3504 1179  
                                       l3512 118E                                         l4218 1F0D  
                                       l4410 168F                                         l3178 12DB  
                                       l3602 176E                                         l4242 0D22  
                                       l4084 1F46                                         l4068 10F8  
                                       l4404 166E                                         l3196 1301  
                                       l3188 12E3                                         l3428 143B  
                                       l3516 1196                                         l3508 1185  
                                       l3604 177B                                         l3532 1142  
                                       l4244 0D30                                         l3460 1FC4  
                                       l3700 11A2                                         l4166 1226  
                                       l4430 1FC1                                         l3614 14FA  
                                       l2902 1360                                         l3526 111C  
                                       l4342 0FC9                                         l3462 1FFB  
                                       l3702 11DA                                         l4360 1492  
                                       l4096 1CD8                                         l4192 104E  
                                       l3528 112A                                         l3536 114D  
                                       l3632 0804                                         l4336 0FB5  
                                       l3456 1FE6                                         l4178 1D74  
                                       l4426 1FB1                                         l3394 1577  
                                       l3490 1160                                         l3626 1543  
                                       l3474 1E54                                         l3714 1DAE  
                                       l4346 0FEF                                         l4282 03C6  
                                       l3812 1DF7                                         l4380 14DE  
                                       l3580 12C0                                         l2924 17B0  
                                       l2916 17A0                                         l4292 0560  
                                       l4460 1706                                         l4452 16D6  
                                       l4612 079A                                         l3902 07D2  
                                       l4374 14C6                                         l4534 1611  
                                       l3494 1167                                         l3590 1731  
                                       l2942 17F7                                         l2934 17DE  
                                       l2926 17BE                                         l2870 1EB1  
                                       l4294 0568                                         l4542 0597  
                                       l3904 07FC                                         l4472 1D0C  
                                       l3576 12B4                                         l4296 0573  
                                       l4456 16EC                                         l3818 1F75  
                                       l3930 1EA5                                         l4378 14DB  
                                       l3578 1287                                         l2890 1335  
                                       l2938 17E9                                         l2874 1EBB  
                                       l3860 1CFC                                         l3862 1CFD  
                                       l4398 164D                                         l3598 175B  
                                       l3928 1E8D                                         l3872 1E23  
                                       l3944 1068                                         l2888 1327  
                                       l2898 1355                                         l3956 08F7  
                                       l3984 0953                                         l3976 091A  
                                       l3992 0982                                         l3994 0989  
                                       l3978 0934                                         l3898 07EA  
                                       STR_1 1800                                         STR_2 1807  
                                       _LATA 010C                                         _LATB 010D  
                                       _LATC 010E                                         u3125 0A8A  
                                       u2415 1336                                         u3135 0AA1  
                                       u4105 1C88                                         u4025 1C50  
                                       u2425 134A                                         u2505 17BF  
                                       u3145 0AB6                                         u4035 1CA4  
                                       u2435 1356                                         u2515 17D3  
                                       u2355 1EBC                                         u3155 0AF7  
                                       u3340 1E5F                                         u4205 13B4  
                                       u3405 1170                                         u2525 17DF  
                                       u2365 1EC3                                         u3165 0B0F  
                                       u4230 11E8                                         u3350 1E60  
                                       u3334 1E59                                         u3335 1E58  
                                       u3175 0B24                                         u4225 08C7  
                                       u3425 117F                                         u3505 1143  
                                       u3185 0B66                                         u3435 1186  
                                       u2395 132A                                         u4315 0BB6  
                                       u3285 1585                                         u3365 1E70  
                                       u2485 17B3                                         u4405 03F2  
                                       u4325 0BC9                                         u4175 137D  
                                       u4095 1C6C                                         u3295 1445  
                                       u3615 174E                                         u4415 0411  
                                       u4335 0C33                                         u3640 14EE  
                                       u4185 138F                                         u2905 12F0  
                                       u4425 042C                                         u3650 14EF  
                                       u4195 13A1                                         u2915 12FA  
                                       u3475 111F                                         u4435 049D  
                                       u2925 1302                                         u4365 0145  
                                       u3725 11AC                                         u3735 1DB8  
                                       u3495 1138                                         u4375 0173  
                                       u3585 12BE                                         u4465 0D68  
                                       u3595 1292                                         u3675 152E  
                                       u4475 0D86                                         u2885 12E6  
                                       u4750 13CB                                         u3775 1DEE  
                                       u4760 13D8                                         u3785 1E00  
                                       u4745 1D16                                         u4825 07B2  
                                       u3875 07E6                                         u3885 07D8  
                                       u4837 079E                                         u3895 1E93  
                                       u4847 1C3C                                         u4857 1C43  
                                       u4867 1DF1                  __end_of_compensate_humidity 1000  
                                       _TMR0 0015                                         _WPUA 020C  
                                       _WPUB 020D                                         _WPUC 020E  
                     ??_fill_filter_settings 0072                    __size_of_write_power_mode 0037  
                     WriteEnvSensor@reg_addr 002C          bme280_parse_sensor_data@uncomp_data 0070  
                     WriteEnvSensor@reg_data 002D            bme280_get_sensor_data@uncomp_data 00D7  
                               __CFG_WRT$OFF 0000                                __CFG_FCMEN$ON 0000  
            __size_of_bme280_set_sensor_mode 003D                    __size_of_set_osr_settings 0028  
                      __size_of_I2C_ReadByte 0017                          _put_device_to_sleep 1011  
                                       _main 058B                compensate_humidity@calib_data 002E  
                           __end_of_I2C_Init 1BEC                                 TransmitBit@b 0071  
                                       fsr0h 0005                                         fsr1h 0007  
                                       indf0 0000                                         fsr0l 0004  
                                       indf1 0001                                         fsr1l 0006  
                                       btemp 007E                       interleave_reg_addr@len 0072  
                           __end_of_I2C_Stop 1B73         are_settings_changed@desired_settings 0070  
                put_device_to_sleep@reg_data 00A0                                __CFG_BOREN$ON 0000  
                                       start 000D                         bme280_soft_reset@dev 0059  
                __end_of_compensate_pressure 058B                                __CFG_MCLRE$ON 0000  
             reload_device_settings@settings 0067                      ??_fill_standby_settings 0072  
                              ??_IntToString 0029                  put_device_to_sleep@settings 00A6  
                              _ReadEnvSensor 07B5                              bme280_init@rslt 0065  
                    __end_of_TMR0_Initialize 1C02               ??_TMR0_DefaultInterruptHandler 0070  
             __size_of_OSCILLATOR_Initialize 0007                __end_of_OSCILLATOR_Initialize 1B86  
                       ?_put_device_to_sleep 0068                              __end_of___aldiv 1800  
                      ReverseString@opposite 0023                                        ?_main 0070  
                            __end_of___awdiv 1317                                __CFG_WDTE$OFF 0000  
                            __end_of___awmod 119B                              __end_of___lldiv 1369  
                     _bme280_compensate_data 1692                              ___awdiv@divisor 0070  
                            __end_of___llmod 1156                                        i1l366 000B  
                            ___awdiv@counter 0075                                 _crc16_update 1FC3  
                                 Insert@dest 0079                            _bme280_soft_reset 1F0F  
                                      _TRISA 008C                                        _TRISB 008D  
                                      _TRISC 008E                                        _RXPPS 0E24  
                                 Insert@temp 0077            __size_of_TMR0_SetInterruptHandler 0006  
                   __size_of_bme280_get_regs 0041                          ___lmul@multiplicand 0074  
                  ?_TMR0_SetInterruptHandler 0070                                        _Sleep 1DCA  
                           __end_of_TMR0_ISR 1BD8               compensate_pressure@uncomp_data 00B4  
                 bme280_compensate_data@rslt 005F                           ?_bme280_soft_reset 0052  
                               _I2C_ReadByte 1C02                     UIntToHexString@remainder 0034  
                                      _crc16 119B                             crc16_update@wCrc 0077  
                           ?_UIntToHexString 0029                                        _ticks 00E8  
                                      main@i 0132                                        pclath 000A  
                              TransmitByte@i 0074                __size_of_are_settings_changed 000B  
                        ??_bme280_soft_reset 0053                                        status 0003  
                                      wtemp0 007E                                  _ClearString 1CFF  
                   __size_of_bme280_set_regs 009D                             ??_get_calib_data 0040  
                     put_device_to_sleep@dev 00A5                        bme280_soft_reset@rslt 0057  
                     _fill_osr_temp_settings 1C9B   bme280_set_sensor_settings@desired_settings 00AB  
                       __end_of_UIntToString 0855                bme280_set_sensor_settings@dev 006C  
                            __initialization 000F                        DebugAlert@num_flashes 0024  
                     _compensate_temperature 0B9E                                   _InitTiming 1B86  
          parse_humidity_calib_data@reg_data 007D                               ?_ReadEnvSensor 002D  
                               __end_of_main 07B5                               __CFG_LPBOR$OFF 0000  
                ?_INTERRUPT_InterruptManager 0070                       _bme280_set_sensor_mode 1F86  
                      ??_put_device_to_sleep 0069                      ?_bme280_get_sensor_data 0061  
                  __end_of_bme280_soft_reset 1F49                      ?_bme280_get_sensor_mode 0040  
                                     ??_main 00E3                        __end_of_ReverseString 1480  
                        __end_of_IntToString 154F                       __size_of_I2C_UserAlert 0003  
                    __size_of_WriteEnvSensor 002F                             ??_null_ptr_check 0070  
            bme280_compensate_data@comp_data 005C            bme280_set_sensor_mode@sensor_mode 00AB  
                           ReverseString@str 0028                               __CFG_PLLEN$OFF 0000  
                           __end_of_TimerISR 1B98              compensate_pressure@pressure_max 00B5  
                  bme280_get_sensor_data@dev 0062                        ReadEnvSensor@reg_addr 002E  
                              ?_InsertString 0020                        ReadEnvSensor@reg_data 002F  
        write_power_mode@sensor_mode_reg_val 005A                                       ?_Sleep 0070  
                   _bme280_parse_sensor_data 0A80                                       ?_crc16 0020  
                                 Sleep@start 0078                       __size_of_I2C_WriteByte 000E  
                           ___llmod@dividend 0074                             ___awdiv@dividend 0072  
                                ?_DebugAlert 0020                                       _ANSELA 018C  
                                     _ANSELB 018D                                       _ANSELC 018E  
                                     _BORCON 0116                     _compensate_humidity$2273 003A  
                                     _RC1STA 019D                     ??_reload_device_settings 0065  
                                     _RB4PPS 0E9C                                       _RB6PPS 0E9E  
                                     _RB7PPS 0E9F                                       _ODCONA 028C  
                                     _ODCONB 028D                                       _ODCONC 028E  
                                     _OSCCON 0099                                       _SPBRGH 019C  
                                     _SPBRGL 019B                                       _TX1STA 019E  
                        I2C_ReadByte@rcvdata 002C                                  Insert@index 0071  
               __size_of_interleave_reg_addr 002D                    bme280_get_sensor_mode@dev 0040  
                  bme280_set_sensor_mode@dev 006C                               __CFG_PWRTE$OFF 0000  
                 ?_parse_humidity_calib_data 0070                                       _Insert 154F  
               fill_filter_settings@reg_data 0075                                       ___lmul 1EA9  
                          crc16_update@pData 007C                                    ??___aldiv 007C  
                                  ??___awdiv 0074                                       crc16@i 0027  
                             __CFG_STVREN$ON 0000                                    ??___awmod 0074  
                                  ??___lldiv 0078                 parse_humidity_calib_data@dev 0070  
                                  ??___llmod 0078               __end_of_bme280_get_sensor_data 141D  
                        DebugAlert@delay_low 0022               __end_of_bme280_get_sensor_mode 1D76  
                           ?_TMR0_Initialize 0070               fill_osr_temp_settings@reg_data 0075  
                compensate_pressure@pressure 00C5                             ___awdiv@quotient 0077  
                            ___awmod@divisor 0070                 fill_filter_settings@settings 0070  
                            ___awmod@counter 0075                                       _strlen 1C19  
                   interleave_reg_addr@index 0077                            get_calib_data@dev 005F  
                               IntToString@i 002C                                 IntToString@n 007B  
                            InsertString@src 0020                                    ?_I2C_Init 0070  
                    compensate_pressure@var1 00C9                      compensate_pressure@var2 00C1  
                    compensate_pressure@var3 00A0                      compensate_pressure@var4 00A4  
                    compensate_pressure@var5 00A8                               ??_InsertString 007A  
                                  ?_I2C_Stop 0070               fill_osr_temp_settings@settings 0070  
                           ??_TransmitString 0076                          write_power_mode@dev 0053  
   TMR0_SetInterruptHandler@InterruptHandler 0070                      put_device_to_sleep@rslt 00A4  
                          ??_bme280_get_regs 003B                             _write_power_mode 1ED8  
           bme280_compensate_data@calib_data 005D                 interleave_reg_addr@temp_buff 0070  
                          _SYSTEM_Initialize 1BAE                      __end_of__initialization 003F  
                           _set_osr_settings 1D24                                _I2C_UserAlert 1B6B  
                         ?_SYSTEM_Initialize 0070                          main@convertedNumber 0120  
                       _UIntToHexString$1373 0030             compensate_temperature@calib_data 002E  
            set_filter_standby_settings@rslt 005A                              ??_ReadEnvSensor 0032  
                        ReverseString@counti 0024               bme280_set_sensor_settings@rslt 00AD  
                    __size_of_I2C_Wait_SSPIF 003D                                ??_bme280_init 0060  
                   get_calib_data@calib_data 0043                               __pcstackCOMMON 0070  
                                ?_InitTiming 0070                                __end_of_Sleep 1DF5  
                              _I2C_WriteByte 1BBA             __size_of_fill_osr_press_settings 001B  
                               __pidataBANK2 0002                            ??_bme280_set_regs 0037  
                              __end_of_crc16 11E0                          ??_SYSTEM_Initialize 0073  
                                _IntToString 14E7                                    ?_TMR0_ISR 0070  
           set_osr_settings@desired_settings 0063                                ??_TransmitBit 0070  
                        __size_of_DebugAlert 002B                   __size_of_bme280_soft_reset 003A  
                ??_set_osr_humidity_settings 0056                        _parse_device_settings 1369  
                                 ??_I2C_Init 0070                               _OPTION_REGbits 0095  
                                 ??_I2C_Stop 007D             are_settings_changed@sub_settings 0071  
                                    ??_Sleep 0074                          set_osr_settings@dev 005F  
                                    ??_crc16 0022                    __end_of_SYSTEM_Initialize 1BBA  
                                 __pbssBANK1 00E8                                   __pbssBANK2 0142  
                                 __pbssBANK3 01A0                                   __pbssBANK4 0220  
                                 __pbssBANK5 02A0                                ??_BME280_Init 00AE  
            __size_of_reload_device_settings 0023                  interleave_reg_addr@reg_addr 0076  
                      __size_of_UIntToString 0053                               ?_I2C_UserAlert 0070  
                          ReverseString@temp 0022                  interleave_reg_addr@reg_data 0071  
                      InsertString@destLimit 0024                                      ?_Insert 0070  
                                 __pmaintext 058B                                    ?_TimerISR 0070  
                             ?_I2C_WriteByte 0070               set_osr_press_temp_settings@dev 0055  
           __end_of_TMR0_SetInterruptHandler 1B79                                      ?___lmul 0070  
                                 ??_TMR0_ISR 0070               __size_of_fill_standby_settings 001C  
                            __CFG_PPS1WAY$ON 0000                __end_of_fill_standby_settings 1C9B  
                                 __pintentry 0004                      ?_bme280_compensate_data 005B  
set_filter_standby_settings@desired_settings 0059                               ___lmul@product 0078  
                           ReadEnvSensor@len 0030                          __end_of_bme280_init 14E7  
                             _WriteEnvSensor 1E7A                                      ?_strlen 0070  
               ??_bme280_set_sensor_settings 006D                       __size_of_ClearMessages 0010  
                            __CFG_WDTCCS$SWC 0000                          __end_of_TransmitBit 1C48  
                               _UIntToString 0802                                      _OSCTUNE 0098  
               ?_parse_temp_press_calib_data 0070                                      _SSP1ADD 0212  
                                    _SLRCONA 030C                                      _SLRCONB 030D  
                                    _SLRCONC 030E                                      _SSP1BUF 0211  
              set_osr_humidity_settings@rslt 005B                          __size_of_InitTiming 0008  
                    ?_fill_osr_temp_settings 0070                 ?_set_osr_press_temp_settings 0053  
                  _set_osr_humidity_settings 1228                                 ?_ClearString 0075  
              __size_of_fill_filter_settings 001C                 set_osr_humidity_settings@dev 0055  
                    ?_compensate_temperature 002E                bme280_soft_reset@soft_rst_cmd 0056  
                                    Sleep@ms 0070                 __size_of_compensate_humidity 02BF  
                       __end_of_InsertString 12C6                          __end_of_BME280_Init 1623  
                            __size_of_Insert 0069                                   ??_TimerISR 0070  
                    ?_bme280_set_sensor_mode 006C               __end_of_bme280_compensate_data 1708  
                                    ___aldiv 177F                                      ___awdiv 12C6  
                            __size_of___lmul 002F                                      ___awmod 1156  
                                    ___lldiv 1317                                      ___llmod 1114  
               __end_of_are_settings_changed 1BA3                       __end_of_WriteEnvSensor 1EA9  
               __size_of_compensate_pressure 0548                       _reload_device_settings 1CB7  
                 ??_bme280_parse_sensor_data 0071                       ?_parse_device_settings 0070  
                         crc16_update@length 0075                                      __ptext1 119B  
                                    __ptext2 1FC3                                      __ptext3 13C1  
                                    __ptext4 0A80                                      __ptext5 1692  
                                    __ptext6 0B9E                                      __ptext7 0043  
                                    __ptext8 0D41                                      __ptext9 1EA9  
        parse_humidity_calib_data@dig_H4_lsb 0074          parse_humidity_calib_data@dig_H4_msb 0076  
        parse_humidity_calib_data@dig_H5_lsb 0078          parse_humidity_calib_data@dig_H5_msb 007A  
                       DebugAlert@delay_high 0020          parse_humidity_calib_data@calib_data 007C  
                            __size_of_strlen 0017                          _interleave_reg_addr 1E20  
                      _OSCILLATOR_Initialize 1B7F                             ___awmod@dividend 0072  
                              _message_start 0220                             ___aldiv@dividend 0024  
                   ??_PIN_MANAGER_Initialize 0070                           get_calib_data@F376 01A0  
                  reload_device_settings@dev 0064               __end_of_fill_osr_temp_settings 1CB7  
                                    main@end 0130                   __size_of_SYSTEM_Initialize 000C  
                                    clrloop0 1B7A                                 ??_DebugAlert 007C  
              ??_parse_temp_press_calib_data 0071                              ??_I2C_UserAlert 007D  
                       end_of_initialization 003F              bme280_get_sensor_data@comp_data 0061  
                         get_calib_data@rslt 005E                             InsertString@dest 002A  
      bme280_set_sensor_settings@sensor_mode 00AC               __end_of_compensate_temperature 0D41  
              ??_set_osr_press_temp_settings 0056                         ?_interleave_reg_addr 0070  
                   __size_of_UIntToHexString 0077                                _ClearMessages 1001  
                          _EUSART_Initialize 1BA3                              ??_I2C_WriteByte 007D  
                            ___lldiv@divisor 0070               __end_of_bme280_set_sensor_mode 1FC3  
                             _I2C_Wait_SSPIF 1F49                              ___lldiv@counter 007D  
                ??_parse_humidity_calib_data 0071                      _fill_osr_press_settings 1C48  
                         ?_EUSART_Initialize 0070                  __end_of_put_device_to_sleep 1050  
                       write_power_mode@rslt 0058                                  _bme280_init 1480  
                   write_power_mode@reg_addr 0059                             ___aldiv@quotient 002A  
                 reload_device_settings@rslt 0068            compensate_temperature@temperature 0051  
                             ClearString@str 0075                              ?_WriteEnvSensor 002B  
                                _TransmitBit 1C30                                      strlen@a 0073  
                   __end_of_write_power_mode 1F0F                                      strlen@s 0070  
                        ??_EUSART_Initialize 0070                           __end_of_DebugAlert 1E20  
                   _TMR0_SetInterruptHandler 1B73                     __end_of_set_osr_settings 1D4C  
                                  _SSPDATPPS 0E21                              _bme280_get_regs 1050  
                                  _SSPCLKPPS 0E20                           bme280_get_regs@dev 003A  
                            WriteEnvSensor@i 0032                           bme280_get_regs@len 0038  
                            TransmitString@i 0079                                ?_TransmitByte 0070  
                           __CFG_FOSC$INTOSC 0000                                crc16@segments 0020  
            fill_osr_press_settings@reg_data 0075                            __size_of_I2C_Init 0014  
                          __size_of_I2C_Stop 0005                 ?_set_filter_standby_settings 0053  
            fill_osr_press_settings@settings 0070               compensate_humidity@uncomp_data 003E  
                            _bme280_set_regs 08EE                                  _BME280_Init 15B8  
                  __end_of_EUSART_Initialize 1BAE                         bme280_init@try_count 0063  
                      ??_interleave_reg_addr 0073                       __end_of_I2C_Wait_SSPIF 1F86  
                             ?_ClearMessages 0070                    bme280_soft_reset@reg_addr 0058  
          compensate_temperature@uncomp_data 004C                         ReverseString@halfway 0020  
                     __size_of_ReverseString 0063                        TransmitString@message 007B  
                               ??_InitTiming 0072         __size_of_parse_temp_press_calib_data 00F5  
                             __end_of_Insert 15B8                                 ?_IntToString 007B  
                             __end_of___lmul 1ED8                      __size_of_get_calib_data 0048  
                                  Insert@src 0070         __size_of_set_osr_press_temp_settings 0041  
                          __size_of_TMR0_ISR 0010           __end_of_bme280_set_sensor_settings 1692  
                 _bme280_set_sensor_settings 1623                       ?_OSCILLATOR_Initialize 0070  
             parse_temp_press_calib_data@dev 0070                                    _EnvSensor 01BA  
                   bme280_set_regs@temp_buff 003A                               ??_TransmitByte 0072  
                  _parse_humidity_calib_data 0855                               __end_of_strlen 1C30  
                        start_initialization 000F                          UIntToHexString@dest 002D  
                   __size_of_TMR0_Initialize 0016              __size_of_PIN_MANAGER_Initialize 002A  
      parse_temp_press_calib_data@calib_data 0072                             UIntToHexString@i 0038  
                           UIntToHexString@n 0029                           __end_of_InitTiming 1B8E  
                       _are_settings_changed 1B98                           I2C_ReadByte@ackbit 002B  
                    __size_of_null_ptr_check 0025                        __size_of_InsertString 0050  
              ??_set_filter_standby_settings 0056                              ___llmod@divisor 0070  
                            ?_I2C_Wait_SSPIF 0070                    ??_fill_osr_press_settings 0072  
                            ___llmod@counter 0079                         __size_of_ClearString 0025  
                                   ??_Insert 0075                           bme280_init@chip_id 0064  
                      __end_of_ReadEnvSensor 0800                         set_osr_settings@rslt 0062  
                                   ??___lmul 0078           __size_of_set_osr_humidity_settings 004E  
                    __end_of_bme280_get_regs 1091                              BME280_Init@rslt 00B1  
                          ??_UIntToHexString 002E                            __size_of_TimerISR 000A  
                                __pdataBANK2 0161                           null_ptr_check@rslt 0072  
                               ClearString@i 007A                                     ??_strlen 0072  
                              ?_crc16_update 0075                   compensate_temperature@var1 0048  
                 compensate_temperature@var2 004D        compensate_temperature@temperature_max 0044  
                              _ReverseString 141D                                    ___latbits 0002  
                        _compensate_humidity 0D41                                __pcstackBANK0 0020  
                              __pcstackBANK1 00A0                                __pcstackBANK2 0120  
                              ?_I2C_ReadByte 0070                      __end_of_bme280_set_regs 098B  
                               _InsertString 1276                                crc16_update@i 007D  
                   _compensate_pressure$2270 00B9                     _compensate_pressure$2271 00AC  
                   _compensate_pressure$2272 00B0                        ?_are_settings_changed 0070  
                        _compensate_pressure 0043                              ??_ClearMessages 007C  
                 __size_of_EUSART_Initialize 000B          bme280_set_sensor_mode@last_set_mode 00AC  
          set_osr_humidity_settings@ctrl_hum 0059                                    crc16@data 0026  
                    __size_of_TransmitString 002A                        _TMR0_InterruptHandler 015E  
                                  __pnvBANK2 015E            set_osr_humidity_settings@reg_addr 005C  
                   set_osr_settings@settings 005D                     ??_bme280_get_sensor_data 0063  
                       ?_compensate_humidity 002E                     ??_bme280_get_sensor_mode 0041  
                     _PIN_MANAGER_Initialize 1D76                      ?_reload_device_settings 0064  
                    ??_parse_device_settings 0071                                     ?___aldiv 0020  
                                   ?___awdiv 0070                                     ?___awmod 0070  
                                   ?___lldiv 0070          set_filter_standby_settings@reg_addr 005B  
                                   ?___llmod 0070          set_filter_standby_settings@reg_data 005C  
          set_osr_humidity_settings@settings 0053              set_osr_press_temp_settings@rslt 005A  
                       ?_compensate_pressure 002E         __size_of_set_filter_standby_settings 0042  
          __end_of_set_osr_humidity_settings 1276                 ??_INTERRUPT_InterruptManager 0070  
                      _fill_standby_settings 1C7F                 __end_of_fill_filter_settings 1C7F  
                             ??_crc16_update 0079              __end_of_fill_osr_press_settings 1C63  
                             ?_ReverseString 0070                                     _BAUD1CON 019F  
        set_filter_standby_settings@settings 0053                                     _I2C_Init 1BD8  
                                   _I2C_Stop 1B6E                               ??_I2C_ReadByte 007D  
                          ReadEnvSensor@rslt 0034                               __size_of_Sleep 002B  
                             __size_of_crc16 0045  set_osr_press_temp_settings@desired_settings 0059  
                            ___aldiv@divisor 0020                            ??_TMR0_Initialize 0072  
                            ___aldiv@counter 0028                                     _LATAbits 010C  
                                   _LATCbits 010E                      BME280_Init@settings_sel 00B0  
                                  clear_ram0 1B79                         __end_of_TransmitByte 1E7A  
                      ??_compensate_humidity 0032               __end_of_reload_device_settings 1CDA  
        __size_of_INTERRUPT_InterruptManager 0009          parse_temp_press_calib_data@reg_data 0073  
                           ??_WriteEnvSensor 0030                   ??_TMR0_SetInterruptHandler 0072  
                                   _PIR1bits 0010                                 ?_bme280_init 005F  
                                DebugAlert@i 0025                                UIntToString@i 0030  
                              UIntToString@n 0029               bme280_get_sensor_data@reg_data 00CD  
                       __CFG_WDTCPS$WDTCPS1F 0000                                     _SSP1CON1 0215  
                                   _SSP1CON2 0216                                     _TMR0_ISR 1BC8  
                      ??_compensate_pressure 0032                                     _SSP1STAT 0214  
                           ?_bme280_get_regs 0037                               _get_calib_data 11E0  
                               ?_TransmitBit 0070                         __size_of_IntToString 0068  
                          ?_write_power_mode 0053                  compensate_humidity@humidity 0043  
                              Insert@current 0078                            ?_set_osr_settings 005D  
                       WriteEnvSensor@dev_id 002B                           ??_write_power_mode 0054  
                                  main@index 0140                      compensate_humidity@var1 0047  
                    compensate_humidity@var2 004B                      compensate_humidity@var3 0057  
                    compensate_humidity@var4 004F                      compensate_humidity@var5 0053  
                         ??_set_osr_settings 0060                         TransmitString@counti 0077  
                    bme280_get_regs@reg_addr 003E                      bme280_set_regs@reg_addr 0052  
                    bme280_get_regs@reg_data 0037                      bme280_set_regs@reg_data 0034  
                           ?_bme280_set_regs 0034            bme280_get_sensor_mode@sensor_mode 0045  
                     ??_are_settings_changed 0071                            ___lmul@multiplier 0070  
                    bme280_set_regs@temp_len 004E            __size_of_bme280_parse_sensor_data 011E  
                  ?_bme280_parse_sensor_data 0070                               _null_ptr_check 1CDA  
         __size_of_parse_humidity_calib_data 0099                                 ?_BME280_Init 0070  
                      __end_of_I2C_UserAlert 1B6E                          ReadEnvSensor@dev_id 002D  
                bme280_set_regs@reg_addr_cnt 0050                           InsertString@counti 0026  
                            IntToString@dest 007D                              IntToString@sign 002B  
            __size_of_bme280_get_sensor_data 005C                          bme280_set_regs@rslt 0051  
            __size_of_bme280_get_sensor_mode 002A                        __end_of_I2C_WriteByte 1BC8  
                                   _TimerISR 1B8E                       __end_of_get_calib_data 1228  
                          null_ptr_check@dev 0073                                InsertString@i 0028  
                    ??_OSCILLATOR_Initialize 0070                             __size_of___aldiv 0081  
                           __size_of___awdiv 0051                       ?_fill_standby_settings 0070  
                           __size_of___awmod 0045                             __size_of___lldiv 0052  
                           __size_of___llmod 0042                              ??_ReverseString 0079  
               __size_of_put_device_to_sleep 003F                  ?_bme280_set_sensor_settings 006C  
                          ClearString@counti 0078                                     crc16@crc 0024  
                                   _checksum 0158          __end_of_parse_temp_press_calib_data 0A80  
                _parse_temp_press_calib_data 098B                          I2C_UserAlert@status 0070  
             set_filter_standby_settings@dev 0055                               ReadEnvSensor@i 0035  
                                   __ptext10 177F                                     __ptext11 0802  
                                   __ptext20 1D76                                     __ptext12 1114  
                                   __ptext21 1B7F                                     __ptext13 1317  
                                   __ptext30 1B73                                     __ptext22 1BA3  
                                   __ptext14 1708                                     __ptext31 1001  
                                   __ptext23 14E7                                     __ptext15 1DA0  
                                   __ptext40 1CB7                                     __ptext32 1CFF  
                                   __ptext24 1156                                     __ptext16 1E4D  
                                   __ptext41 1D24                                     __ptext33 1C19  
                                   __ptext25 141D                                     __ptext17 1C30  
                                   __ptext50 1D4C                                     __ptext42 1091  
                                   __ptext34 15B8                                     __ptext26 12C6  
                                   __ptext18 1BAE                                     __ptext51 1480  
                                   __ptext43 1C9B                                     __ptext35 1623  
                                   __ptext27 1276                                     __ptext19 1BEC  
                                   __ptext60 1CDA                                     __ptext52 11E0  
                                   __ptext44 1C48                                     __ptext36 1B98  
                                   __ptext28 154F                                     __ptext61 1E20  
                                   __ptext53 098B                                     __ptext45 1228  
                                   __ptext37 1F86                                     __ptext29 1B86  
                                   __ptext62 1E7A                                     __ptext54 0855  
                                   __ptext46 10D2                                     __ptext38 1ED8  
                                   __ptext71 1BC8                                     __ptext63 1BBA  
                                   __ptext55 1050                                     __ptext47 1C7F  
                                   __ptext39 1011                                     __ptext72 0801  
                                   __ptext64 1B6B                                     __ptext56 07B5  
                                   __ptext48 1C63                                     __ptext73 1B8E  
                                   __ptext65 1B6E                                     __ptext57 1C02  
                                   __ptext49 1369                                     __ptext66 1F49  
                                   __ptext58 1F0F                                     __ptext67 1DF5  
                                   __ptext59 08EE                                     __ptext68 1DCA  
                                   __ptext69 1BD8                  __end_of_interleave_reg_addr 1E4D  
                               _SSP1CON1bits 0215                       __end_of_null_ptr_check 1CFF  
                               _SSP1CON2bits 0216                             ??_I2C_Wait_SSPIF 0027  
        __end_of_set_osr_press_temp_settings 10D2                  _set_osr_press_temp_settings 1091  
              compensate_pressure@calib_data 002E                              _UIntToHexString 1708  
                             _TransmitString 1DA0                                __size_of_main 022A  
          bme280_compensate_data@sensor_comp 0060                     ??_bme280_compensate_data 005E  
                       _fill_filter_settings 1C63            __end_of_parse_humidity_calib_data 08EE  
                                _message_end 02A0                         __end_of_crc16_update 2000  
                                   _messages 0161         __end_of_TMR0_DefaultInterruptHandler 0802  
      __size_of_TMR0_DefaultInterruptHandler 0001                 _TMR0_DefaultInterruptHandler 0801  
                       __CFG_WDTCWS$WDTCWSSW 0000                         __end_of_I2C_ReadByte 1C19  
                            ?_get_calib_data 003F                  _compensate_temperature$2269 003C  
                                   int$flags 007E           __end_of_INTERRUPT_InterruptManager 000D  
                 _INTERRUPT_InterruptManager 0004                             UIntToString@dest 002D  
                            main@sensor_data 0134                     ??_fill_osr_temp_settings 0072  
                                 _INTCONbits 000B                       _bme280_get_sensor_data 13C1  
                          InsertString@index 0022                       _bme280_get_sensor_mode 1D4C  
         set_osr_humidity_settings@ctrl_meas 005A                                ?_UIntToString 0029  
                         bme280_set_regs@dev 0036                           bme280_set_regs@len 0035  
              parse_device_settings@reg_data 0073                     ??_compensate_temperature 0032  
          bme280_compensate_data@uncomp_data 005B                              ?_null_ptr_check 0070  
                 bme280_get_sensor_data@F271 014E                   bme280_get_sensor_data@F273 0142  
                     __end_of_TransmitString 1DCA                        __size_of_TransmitByte 002D  
                                   intlevel1 0000                     ??_bme280_set_sensor_mode 006D  
                           TransmitByte@byte 0073                parse_device_settings@settings 0070  
              fill_standby_settings@reg_data 0075                                ??_ClearString 0077  
                           ___lldiv@dividend 0074                        ?_fill_filter_settings 0070  
                    ?_PIN_MANAGER_Initialize 0070                   bme280_get_sensor_data@rslt 00D6  
                          __CFG_CLKOUTEN$OFF 0000                ?_TMR0_DefaultInterruptHandler 0070  
              fill_standby_settings@settings 0070                           WriteEnvSensor@rslt 0031  
                       __size_of_bme280_init 0067               __size_of_parse_device_settings 0058  
              __end_of_parse_device_settings 13C1                                __pstringtext1 1800  
                              __pstringtext2 1807                                __pstringtext3 0000  
                       __size_of_TransmitBit 0018                                   _OPTION_REG 0095  
                           ___lldiv@quotient 0079                               ??_UIntToString 002E  
                               _TransmitByte 1E4D                              _TMR0_Initialize 1BEC  
       are_settings_changed@settings_changed 0072                                 ___aldiv@sign 0029  
                    __end_of_UIntToHexString 177F                            WriteEnvSensor@len 002E  
        __end_of_set_filter_standby_settings 1114                  _set_filter_standby_settings 10D2  
                 bme280_get_sensor_mode@rslt 0044                       __size_of_ReadEnvSensor 004B  
                   ?_fill_osr_press_settings 0070                   bme280_set_sensor_mode@rslt 00AD  
                            ?_TransmitString 0070               __end_of_PIN_MANAGER_Initialize 1DA0  
                            Insert@destLimit 0073          set_osr_press_temp_settings@reg_addr 005B  
        set_osr_press_temp_settings@reg_data 005C                          bme280_get_regs@rslt 003F  
                      __end_of_ClearMessages 1011                            I2C_WriteByte@data 007D  
            __size_of_bme280_compensate_data 0076                         __size_of_BME280_Init 006B  
        __size_of_bme280_set_sensor_settings 006F            bme280_get_sensor_data@sensor_comp 00D5  
                write_power_mode@sensor_mode 0057          set_osr_press_temp_settings@settings 0053  
