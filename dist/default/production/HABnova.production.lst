

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sat Jun 15 18:27:10 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F1619
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBANK5,global,class=CODE,delta=2
     6                           	psect	stringtext1,global,class=STRCODE,delta=2
     7                           	psect	stringtext2,global,class=STRCODE,delta=2
     8                           	psect	stringtext3,global,class=STRCODE,delta=2
     9                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	stringtext4,global,class=STRCODE,delta=2
    11                           	psect	stringtext5,global,class=STRCODE,delta=2
    12                           	psect	stringtext6,global,class=STRCODE,delta=2
    13                           	psect	stringtext7,global,class=STRCODE,delta=2
    14                           	psect	stringtext8,global,class=STRCODE,delta=2
    15                           	psect	stringtext9,global,class=STRCODE,delta=2
    16                           	psect	stringtext10,global,class=STRCODE,delta=2
    17                           	psect	stringtext11,global,class=STRCODE,delta=2
    18                           	psect	stringtext12,global,class=STRCODE,delta=2
    19                           	psect	cinit,global,class=CODE,merge=1,delta=2
    20                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    21                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    22                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    23                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    24                           	psect	dataBANK5,global,class=BANK5,space=1,delta=1
    25                           	psect	inittext,global,class=CODE,delta=2
    26                           	psect	clrtext,global,class=CODE,delta=2
    27                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    28                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    29                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    30                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    31                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    32                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    33                           	psect	text1,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text2,local,class=CODE,merge=1,delta=2
    35                           	psect	text3,local,class=CODE,merge=1,delta=2
    36                           	psect	text4,local,class=CODE,merge=1,delta=2
    37                           	psect	text5,local,class=CODE,merge=1,delta=2
    38                           	psect	text6,local,class=CODE,merge=1,delta=2
    39                           	psect	text7,local,class=CODE,merge=1,delta=2
    40                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text9,local,class=CODE,merge=1,delta=2
    42                           	psect	text10,local,class=CODE,merge=1,delta=2
    43                           	psect	text11,local,class=CODE,merge=1,delta=2
    44                           	psect	text12,local,class=CODE,merge=1,delta=2
    45                           	psect	text13,local,class=CODE,merge=1,delta=2
    46                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    47                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    48                           	psect	text16,local,class=CODE,merge=1,delta=2
    49                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    50                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    51                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    52                           	psect	text20,local,class=CODE,merge=1,delta=2
    53                           	psect	text21,local,class=CODE,merge=1,delta=2
    54                           	psect	text22,local,class=CODE,merge=1,delta=2
    55                           	psect	text23,local,class=CODE,merge=1,delta=2
    56                           	psect	text24,local,class=CODE,merge=1,delta=2
    57                           	psect	text25,local,class=CODE,merge=1,delta=2
    58                           	psect	text26,local,class=CODE,merge=1,delta=2
    59                           	psect	text27,local,class=CODE,merge=1,delta=2
    60                           	psect	text28,local,class=CODE,merge=1,delta=2
    61                           	psect	text29,local,class=CODE,merge=1,delta=2
    62                           	psect	text30,local,class=CODE,merge=1,delta=2
    63                           	psect	text31,local,class=CODE,merge=1,delta=2
    64                           	psect	text32,local,class=CODE,merge=1,delta=2
    65                           	psect	text33,local,class=CODE,merge=1,delta=2
    66                           	psect	text34,local,class=CODE,merge=1,delta=2,group=2
    67                           	psect	intentry,global,class=CODE,delta=2
    68                           	psect	text36,local,class=CODE,merge=1,delta=2
    69                           	psect	text37,local,class=CODE,merge=1,delta=2
    70                           	psect	text38,local,class=CODE,merge=1,delta=2
    71                           	dabs	1,0x7E,2
    72  0000                     
    73                           ; Version 2.05
    74                           ; Generated 20/12/2018 GMT
    75                           ; 
    76                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    77                           ; All rights reserved.
    78                           ; 
    79                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    80                           ; 
    81                           ; Redistribution and use in source and binary forms, with or without modification, are
    82                           ; permitted provided that the following conditions are met:
    83                           ; 
    84                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    85                           ;        conditions and the following disclaimer.
    86                           ; 
    87                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    88                           ;        of conditions and the following disclaimer in the documentation and/or other
    89                           ;        materials provided with the distribution.
    90                           ; 
    91                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    92                           ;        software without specific prior written permission.
    93                           ; 
    94                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    95                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    96                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    97                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    98                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    99                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   100                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   101                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   102                           ; 
   103                           ; 
   104                           ; Code-generator required, PIC16F1619 Definitions
   105                           ; 
   106                           ; SFR Addresses
   107  0000                     	;# 
   108  0001                     	;# 
   109  0002                     	;# 
   110  0003                     	;# 
   111  0004                     	;# 
   112  0005                     	;# 
   113  0006                     	;# 
   114  0007                     	;# 
   115  0008                     	;# 
   116  0009                     	;# 
   117  000A                     	;# 
   118  000B                     	;# 
   119  000C                     	;# 
   120  000D                     	;# 
   121  000E                     	;# 
   122  0010                     	;# 
   123  0011                     	;# 
   124  0012                     	;# 
   125  0013                     	;# 
   126  0014                     	;# 
   127  0015                     	;# 
   128  0016                     	;# 
   129  0016                     	;# 
   130  0017                     	;# 
   131  0018                     	;# 
   132  0019                     	;# 
   133  001A                     	;# 
   134  001A                     	;# 
   135  001B                     	;# 
   136  001B                     	;# 
   137  001C                     	;# 
   138  001D                     	;# 
   139  001E                     	;# 
   140  001F                     	;# 
   141  008C                     	;# 
   142  008D                     	;# 
   143  008E                     	;# 
   144  0090                     	;# 
   145  0091                     	;# 
   146  0092                     	;# 
   147  0093                     	;# 
   148  0094                     	;# 
   149  0095                     	;# 
   150  0096                     	;# 
   151  0098                     	;# 
   152  0099                     	;# 
   153  009A                     	;# 
   154  009B                     	;# 
   155  009B                     	;# 
   156  009C                     	;# 
   157  009D                     	;# 
   158  009E                     	;# 
   159  009F                     	;# 
   160  010C                     	;# 
   161  010D                     	;# 
   162  010E                     	;# 
   163  0111                     	;# 
   164  0112                     	;# 
   165  0113                     	;# 
   166  0114                     	;# 
   167  0115                     	;# 
   168  0116                     	;# 
   169  0117                     	;# 
   170  0118                     	;# 
   171  0119                     	;# 
   172  011C                     	;# 
   173  018C                     	;# 
   174  018D                     	;# 
   175  018E                     	;# 
   176  0191                     	;# 
   177  0191                     	;# 
   178  0192                     	;# 
   179  0193                     	;# 
   180  0193                     	;# 
   181  0194                     	;# 
   182  0195                     	;# 
   183  0196                     	;# 
   184  0197                     	;# 
   185  0199                     	;# 
   186  0199                     	;# 
   187  0199                     	;# 
   188  019A                     	;# 
   189  019A                     	;# 
   190  019A                     	;# 
   191  019B                     	;# 
   192  019B                     	;# 
   193  019B                     	;# 
   194  019B                     	;# 
   195  019B                     	;# 
   196  019C                     	;# 
   197  019C                     	;# 
   198  019C                     	;# 
   199  019D                     	;# 
   200  019D                     	;# 
   201  019D                     	;# 
   202  019E                     	;# 
   203  019E                     	;# 
   204  019E                     	;# 
   205  019F                     	;# 
   206  019F                     	;# 
   207  019F                     	;# 
   208  019F                     	;# 
   209  019F                     	;# 
   210  020C                     	;# 
   211  020D                     	;# 
   212  020E                     	;# 
   213  0211                     	;# 
   214  0211                     	;# 
   215  0212                     	;# 
   216  0212                     	;# 
   217  0213                     	;# 
   218  0213                     	;# 
   219  0214                     	;# 
   220  0214                     	;# 
   221  0215                     	;# 
   222  0215                     	;# 
   223  0215                     	;# 
   224  0215                     	;# 
   225  0216                     	;# 
   226  0216                     	;# 
   227  0217                     	;# 
   228  0217                     	;# 
   229  028C                     	;# 
   230  028D                     	;# 
   231  028E                     	;# 
   232  0291                     	;# 
   233  0291                     	;# 
   234  0292                     	;# 
   235  0293                     	;# 
   236  0294                     	;# 
   237  0298                     	;# 
   238  0298                     	;# 
   239  0299                     	;# 
   240  029A                     	;# 
   241  029B                     	;# 
   242  029E                     	;# 
   243  030C                     	;# 
   244  030D                     	;# 
   245  030E                     	;# 
   246  038C                     	;# 
   247  038D                     	;# 
   248  038E                     	;# 
   249  0391                     	;# 
   250  0392                     	;# 
   251  0393                     	;# 
   252  0394                     	;# 
   253  0395                     	;# 
   254  0396                     	;# 
   255  0397                     	;# 
   256  0398                     	;# 
   257  0399                     	;# 
   258  040E                     	;# 
   259  0413                     	;# 
   260  0413                     	;# 
   261  0414                     	;# 
   262  0414                     	;# 
   263  0415                     	;# 
   264  0416                     	;# 
   265  0417                     	;# 
   266  0418                     	;# 
   267  041A                     	;# 
   268  041A                     	;# 
   269  041B                     	;# 
   270  041B                     	;# 
   271  041C                     	;# 
   272  041D                     	;# 
   273  041E                     	;# 
   274  041F                     	;# 
   275  0493                     	;# 
   276  0494                     	;# 
   277  0495                     	;# 
   278  0496                     	;# 
   279  049A                     	;# 
   280  049B                     	;# 
   281  049C                     	;# 
   282  049D                     	;# 
   283  058C                     	;# 
   284  058C                     	;# 
   285  058D                     	;# 
   286  058E                     	;# 
   287  058E                     	;# 
   288  058F                     	;# 
   289  0590                     	;# 
   290  0590                     	;# 
   291  0591                     	;# 
   292  0592                     	;# 
   293  0592                     	;# 
   294  0593                     	;# 
   295  0594                     	;# 
   296  0594                     	;# 
   297  0595                     	;# 
   298  0596                     	;# 
   299  0596                     	;# 
   300  0597                     	;# 
   301  0598                     	;# 
   302  0599                     	;# 
   303  059A                     	;# 
   304  059B                     	;# 
   305  059B                     	;# 
   306  059C                     	;# 
   307  059D                     	;# 
   308  060C                     	;# 
   309  060C                     	;# 
   310  060D                     	;# 
   311  060E                     	;# 
   312  060F                     	;# 
   313  060F                     	;# 
   314  0610                     	;# 
   315  0611                     	;# 
   316  0612                     	;# 
   317  0613                     	;# 
   318  0614                     	;# 
   319  0617                     	;# 
   320  0617                     	;# 
   321  0618                     	;# 
   322  0619                     	;# 
   323  061A                     	;# 
   324  061A                     	;# 
   325  061B                     	;# 
   326  061C                     	;# 
   327  0691                     	;# 
   328  0692                     	;# 
   329  0693                     	;# 
   330  0694                     	;# 
   331  0695                     	;# 
   332  0696                     	;# 
   333  0697                     	;# 
   334  0699                     	;# 
   335  069A                     	;# 
   336  0711                     	;# 
   337  0712                     	;# 
   338  0713                     	;# 
   339  0714                     	;# 
   340  0715                     	;# 
   341  0718                     	;# 
   342  0718                     	;# 
   343  0719                     	;# 
   344  071A                     	;# 
   345  071A                     	;# 
   346  071B                     	;# 
   347  071C                     	;# 
   348  071D                     	;# 
   349  0791                     	;# 
   350  0791                     	;# 
   351  0792                     	;# 
   352  0793                     	;# 
   353  0793                     	;# 
   354  0794                     	;# 
   355  0795                     	;# 
   356  0795                     	;# 
   357  0796                     	;# 
   358  0797                     	;# 
   359  0797                     	;# 
   360  0798                     	;# 
   361  0799                     	;# 
   362  079A                     	;# 
   363  080C                     	;# 
   364  080C                     	;# 
   365  080D                     	;# 
   366  080E                     	;# 
   367  080E                     	;# 
   368  080F                     	;# 
   369  0810                     	;# 
   370  0810                     	;# 
   371  0811                     	;# 
   372  0812                     	;# 
   373  0812                     	;# 
   374  0813                     	;# 
   375  0814                     	;# 
   376  0815                     	;# 
   377  0816                     	;# 
   378  0817                     	;# 
   379  0818                     	;# 
   380  0819                     	;# 
   381  081A                     	;# 
   382  081A                     	;# 
   383  081B                     	;# 
   384  081C                     	;# 
   385  081C                     	;# 
   386  081D                     	;# 
   387  088C                     	;# 
   388  088D                     	;# 
   389  088E                     	;# 
   390  088F                     	;# 
   391  088F                     	;# 
   392  0890                     	;# 
   393  0891                     	;# 
   394  0892                     	;# 
   395  0893                     	;# 
   396  0893                     	;# 
   397  0894                     	;# 
   398  0895                     	;# 
   399  0896                     	;# 
   400  0897                     	;# 
   401  0897                     	;# 
   402  0898                     	;# 
   403  0899                     	;# 
   404  0D8C                     	;# 
   405  0D8C                     	;# 
   406  0D8D                     	;# 
   407  0D8E                     	;# 
   408  0D8F                     	;# 
   409  0D8F                     	;# 
   410  0D90                     	;# 
   411  0D91                     	;# 
   412  0D92                     	;# 
   413  0D92                     	;# 
   414  0D93                     	;# 
   415  0D94                     	;# 
   416  0D95                     	;# 
   417  0D95                     	;# 
   418  0D96                     	;# 
   419  0D97                     	;# 
   420  0D98                     	;# 
   421  0D99                     	;# 
   422  0D9A                     	;# 
   423  0D9B                     	;# 
   424  0D9C                     	;# 
   425  0D9D                     	;# 
   426  0D9E                     	;# 
   427  0D9E                     	;# 
   428  0D9F                     	;# 
   429  0DA0                     	;# 
   430  0DA1                     	;# 
   431  0DA1                     	;# 
   432  0DA2                     	;# 
   433  0DA3                     	;# 
   434  0DA4                     	;# 
   435  0DA4                     	;# 
   436  0DA5                     	;# 
   437  0DA6                     	;# 
   438  0DA7                     	;# 
   439  0DA7                     	;# 
   440  0DA8                     	;# 
   441  0DA9                     	;# 
   442  0DAA                     	;# 
   443  0DAB                     	;# 
   444  0DAC                     	;# 
   445  0DAD                     	;# 
   446  0DAE                     	;# 
   447  0DAF                     	;# 
   448  0E0F                     	;# 
   449  0E10                     	;# 
   450  0E11                     	;# 
   451  0E12                     	;# 
   452  0E13                     	;# 
   453  0E14                     	;# 
   454  0E15                     	;# 
   455  0E16                     	;# 
   456  0E17                     	;# 
   457  0E18                     	;# 
   458  0E19                     	;# 
   459  0E1A                     	;# 
   460  0E1B                     	;# 
   461  0E1C                     	;# 
   462  0E1D                     	;# 
   463  0E1E                     	;# 
   464  0E1F                     	;# 
   465  0E20                     	;# 
   466  0E21                     	;# 
   467  0E22                     	;# 
   468  0E23                     	;# 
   469  0E24                     	;# 
   470  0E25                     	;# 
   471  0E26                     	;# 
   472  0E27                     	;# 
   473  0E28                     	;# 
   474  0E29                     	;# 
   475  0E2A                     	;# 
   476  0E2B                     	;# 
   477  0E2C                     	;# 
   478  0E2D                     	;# 
   479  0E2E                     	;# 
   480  0E90                     	;# 
   481  0E91                     	;# 
   482  0E92                     	;# 
   483  0E94                     	;# 
   484  0E95                     	;# 
   485  0E9C                     	;# 
   486  0E9D                     	;# 
   487  0E9E                     	;# 
   488  0E9F                     	;# 
   489  0EA0                     	;# 
   490  0EA1                     	;# 
   491  0EA2                     	;# 
   492  0EA3                     	;# 
   493  0EA4                     	;# 
   494  0EA5                     	;# 
   495  0EA6                     	;# 
   496  0EA7                     	;# 
   497  0F0F                     	;# 
   498  0F10                     	;# 
   499  0F11                     	;# 
   500  0F12                     	;# 
   501  0F13                     	;# 
   502  0F14                     	;# 
   503  0F15                     	;# 
   504  0F16                     	;# 
   505  0F17                     	;# 
   506  0F18                     	;# 
   507  0F19                     	;# 
   508  0F1A                     	;# 
   509  0F1B                     	;# 
   510  0F1C                     	;# 
   511  0F1D                     	;# 
   512  0F1E                     	;# 
   513  0F1F                     	;# 
   514  0F20                     	;# 
   515  0F21                     	;# 
   516  0F22                     	;# 
   517  0F23                     	;# 
   518  0F24                     	;# 
   519  0F25                     	;# 
   520  0F26                     	;# 
   521  0F27                     	;# 
   522  0F28                     	;# 
   523  0F29                     	;# 
   524  0F2A                     	;# 
   525  0F2B                     	;# 
   526  0F2C                     	;# 
   527  0F2D                     	;# 
   528  0F2E                     	;# 
   529  0F2F                     	;# 
   530  0F30                     	;# 
   531  0F31                     	;# 
   532  0F32                     	;# 
   533  0F33                     	;# 
   534  0F34                     	;# 
   535  0F35                     	;# 
   536  0F36                     	;# 
   537  0F37                     	;# 
   538  0FE4                     	;# 
   539  0FE5                     	;# 
   540  0FE6                     	;# 
   541  0FE7                     	;# 
   542  0FE8                     	;# 
   543  0FE9                     	;# 
   544  0FEA                     	;# 
   545  0FEB                     	;# 
   546  0FED                     	;# 
   547  0FEE                     	;# 
   548  0FEF                     	;# 
   549  0000                     	;# 
   550  0001                     	;# 
   551  0002                     	;# 
   552  0003                     	;# 
   553  0004                     	;# 
   554  0005                     	;# 
   555  0006                     	;# 
   556  0007                     	;# 
   557  0008                     	;# 
   558  0009                     	;# 
   559  000A                     	;# 
   560  000B                     	;# 
   561  000C                     	;# 
   562  000D                     	;# 
   563  000E                     	;# 
   564  0010                     	;# 
   565  0011                     	;# 
   566  0012                     	;# 
   567  0013                     	;# 
   568  0014                     	;# 
   569  0015                     	;# 
   570  0016                     	;# 
   571  0016                     	;# 
   572  0017                     	;# 
   573  0018                     	;# 
   574  0019                     	;# 
   575  001A                     	;# 
   576  001A                     	;# 
   577  001B                     	;# 
   578  001B                     	;# 
   579  001C                     	;# 
   580  001D                     	;# 
   581  001E                     	;# 
   582  001F                     	;# 
   583  008C                     	;# 
   584  008D                     	;# 
   585  008E                     	;# 
   586  0090                     	;# 
   587  0091                     	;# 
   588  0092                     	;# 
   589  0093                     	;# 
   590  0094                     	;# 
   591  0095                     	;# 
   592  0096                     	;# 
   593  0098                     	;# 
   594  0099                     	;# 
   595  009A                     	;# 
   596  009B                     	;# 
   597  009B                     	;# 
   598  009C                     	;# 
   599  009D                     	;# 
   600  009E                     	;# 
   601  009F                     	;# 
   602  010C                     	;# 
   603  010D                     	;# 
   604  010E                     	;# 
   605  0111                     	;# 
   606  0112                     	;# 
   607  0113                     	;# 
   608  0114                     	;# 
   609  0115                     	;# 
   610  0116                     	;# 
   611  0117                     	;# 
   612  0118                     	;# 
   613  0119                     	;# 
   614  011C                     	;# 
   615  018C                     	;# 
   616  018D                     	;# 
   617  018E                     	;# 
   618  0191                     	;# 
   619  0191                     	;# 
   620  0192                     	;# 
   621  0193                     	;# 
   622  0193                     	;# 
   623  0194                     	;# 
   624  0195                     	;# 
   625  0196                     	;# 
   626  0197                     	;# 
   627  0199                     	;# 
   628  0199                     	;# 
   629  0199                     	;# 
   630  019A                     	;# 
   631  019A                     	;# 
   632  019A                     	;# 
   633  019B                     	;# 
   634  019B                     	;# 
   635  019B                     	;# 
   636  019B                     	;# 
   637  019B                     	;# 
   638  019C                     	;# 
   639  019C                     	;# 
   640  019C                     	;# 
   641  019D                     	;# 
   642  019D                     	;# 
   643  019D                     	;# 
   644  019E                     	;# 
   645  019E                     	;# 
   646  019E                     	;# 
   647  019F                     	;# 
   648  019F                     	;# 
   649  019F                     	;# 
   650  019F                     	;# 
   651  019F                     	;# 
   652  020C                     	;# 
   653  020D                     	;# 
   654  020E                     	;# 
   655  0211                     	;# 
   656  0211                     	;# 
   657  0212                     	;# 
   658  0212                     	;# 
   659  0213                     	;# 
   660  0213                     	;# 
   661  0214                     	;# 
   662  0214                     	;# 
   663  0215                     	;# 
   664  0215                     	;# 
   665  0215                     	;# 
   666  0215                     	;# 
   667  0216                     	;# 
   668  0216                     	;# 
   669  0217                     	;# 
   670  0217                     	;# 
   671  028C                     	;# 
   672  028D                     	;# 
   673  028E                     	;# 
   674  0291                     	;# 
   675  0291                     	;# 
   676  0292                     	;# 
   677  0293                     	;# 
   678  0294                     	;# 
   679  0298                     	;# 
   680  0298                     	;# 
   681  0299                     	;# 
   682  029A                     	;# 
   683  029B                     	;# 
   684  029E                     	;# 
   685  030C                     	;# 
   686  030D                     	;# 
   687  030E                     	;# 
   688  038C                     	;# 
   689  038D                     	;# 
   690  038E                     	;# 
   691  0391                     	;# 
   692  0392                     	;# 
   693  0393                     	;# 
   694  0394                     	;# 
   695  0395                     	;# 
   696  0396                     	;# 
   697  0397                     	;# 
   698  0398                     	;# 
   699  0399                     	;# 
   700  040E                     	;# 
   701  0413                     	;# 
   702  0413                     	;# 
   703  0414                     	;# 
   704  0414                     	;# 
   705  0415                     	;# 
   706  0416                     	;# 
   707  0417                     	;# 
   708  0418                     	;# 
   709  041A                     	;# 
   710  041A                     	;# 
   711  041B                     	;# 
   712  041B                     	;# 
   713  041C                     	;# 
   714  041D                     	;# 
   715  041E                     	;# 
   716  041F                     	;# 
   717  0493                     	;# 
   718  0494                     	;# 
   719  0495                     	;# 
   720  0496                     	;# 
   721  049A                     	;# 
   722  049B                     	;# 
   723  049C                     	;# 
   724  049D                     	;# 
   725  058C                     	;# 
   726  058C                     	;# 
   727  058D                     	;# 
   728  058E                     	;# 
   729  058E                     	;# 
   730  058F                     	;# 
   731  0590                     	;# 
   732  0590                     	;# 
   733  0591                     	;# 
   734  0592                     	;# 
   735  0592                     	;# 
   736  0593                     	;# 
   737  0594                     	;# 
   738  0594                     	;# 
   739  0595                     	;# 
   740  0596                     	;# 
   741  0596                     	;# 
   742  0597                     	;# 
   743  0598                     	;# 
   744  0599                     	;# 
   745  059A                     	;# 
   746  059B                     	;# 
   747  059B                     	;# 
   748  059C                     	;# 
   749  059D                     	;# 
   750  060C                     	;# 
   751  060C                     	;# 
   752  060D                     	;# 
   753  060E                     	;# 
   754  060F                     	;# 
   755  060F                     	;# 
   756  0610                     	;# 
   757  0611                     	;# 
   758  0612                     	;# 
   759  0613                     	;# 
   760  0614                     	;# 
   761  0617                     	;# 
   762  0617                     	;# 
   763  0618                     	;# 
   764  0619                     	;# 
   765  061A                     	;# 
   766  061A                     	;# 
   767  061B                     	;# 
   768  061C                     	;# 
   769  0691                     	;# 
   770  0692                     	;# 
   771  0693                     	;# 
   772  0694                     	;# 
   773  0695                     	;# 
   774  0696                     	;# 
   775  0697                     	;# 
   776  0699                     	;# 
   777  069A                     	;# 
   778  0711                     	;# 
   779  0712                     	;# 
   780  0713                     	;# 
   781  0714                     	;# 
   782  0715                     	;# 
   783  0718                     	;# 
   784  0718                     	;# 
   785  0719                     	;# 
   786  071A                     	;# 
   787  071A                     	;# 
   788  071B                     	;# 
   789  071C                     	;# 
   790  071D                     	;# 
   791  0791                     	;# 
   792  0791                     	;# 
   793  0792                     	;# 
   794  0793                     	;# 
   795  0793                     	;# 
   796  0794                     	;# 
   797  0795                     	;# 
   798  0795                     	;# 
   799  0796                     	;# 
   800  0797                     	;# 
   801  0797                     	;# 
   802  0798                     	;# 
   803  0799                     	;# 
   804  079A                     	;# 
   805  080C                     	;# 
   806  080C                     	;# 
   807  080D                     	;# 
   808  080E                     	;# 
   809  080E                     	;# 
   810  080F                     	;# 
   811  0810                     	;# 
   812  0810                     	;# 
   813  0811                     	;# 
   814  0812                     	;# 
   815  0812                     	;# 
   816  0813                     	;# 
   817  0814                     	;# 
   818  0815                     	;# 
   819  0816                     	;# 
   820  0817                     	;# 
   821  0818                     	;# 
   822  0819                     	;# 
   823  081A                     	;# 
   824  081A                     	;# 
   825  081B                     	;# 
   826  081C                     	;# 
   827  081C                     	;# 
   828  081D                     	;# 
   829  088C                     	;# 
   830  088D                     	;# 
   831  088E                     	;# 
   832  088F                     	;# 
   833  088F                     	;# 
   834  0890                     	;# 
   835  0891                     	;# 
   836  0892                     	;# 
   837  0893                     	;# 
   838  0893                     	;# 
   839  0894                     	;# 
   840  0895                     	;# 
   841  0896                     	;# 
   842  0897                     	;# 
   843  0897                     	;# 
   844  0898                     	;# 
   845  0899                     	;# 
   846  0D8C                     	;# 
   847  0D8C                     	;# 
   848  0D8D                     	;# 
   849  0D8E                     	;# 
   850  0D8F                     	;# 
   851  0D8F                     	;# 
   852  0D90                     	;# 
   853  0D91                     	;# 
   854  0D92                     	;# 
   855  0D92                     	;# 
   856  0D93                     	;# 
   857  0D94                     	;# 
   858  0D95                     	;# 
   859  0D95                     	;# 
   860  0D96                     	;# 
   861  0D97                     	;# 
   862  0D98                     	;# 
   863  0D99                     	;# 
   864  0D9A                     	;# 
   865  0D9B                     	;# 
   866  0D9C                     	;# 
   867  0D9D                     	;# 
   868  0D9E                     	;# 
   869  0D9E                     	;# 
   870  0D9F                     	;# 
   871  0DA0                     	;# 
   872  0DA1                     	;# 
   873  0DA1                     	;# 
   874  0DA2                     	;# 
   875  0DA3                     	;# 
   876  0DA4                     	;# 
   877  0DA4                     	;# 
   878  0DA5                     	;# 
   879  0DA6                     	;# 
   880  0DA7                     	;# 
   881  0DA7                     	;# 
   882  0DA8                     	;# 
   883  0DA9                     	;# 
   884  0DAA                     	;# 
   885  0DAB                     	;# 
   886  0DAC                     	;# 
   887  0DAD                     	;# 
   888  0DAE                     	;# 
   889  0DAF                     	;# 
   890  0E0F                     	;# 
   891  0E10                     	;# 
   892  0E11                     	;# 
   893  0E12                     	;# 
   894  0E13                     	;# 
   895  0E14                     	;# 
   896  0E15                     	;# 
   897  0E16                     	;# 
   898  0E17                     	;# 
   899  0E18                     	;# 
   900  0E19                     	;# 
   901  0E1A                     	;# 
   902  0E1B                     	;# 
   903  0E1C                     	;# 
   904  0E1D                     	;# 
   905  0E1E                     	;# 
   906  0E1F                     	;# 
   907  0E20                     	;# 
   908  0E21                     	;# 
   909  0E22                     	;# 
   910  0E23                     	;# 
   911  0E24                     	;# 
   912  0E25                     	;# 
   913  0E26                     	;# 
   914  0E27                     	;# 
   915  0E28                     	;# 
   916  0E29                     	;# 
   917  0E2A                     	;# 
   918  0E2B                     	;# 
   919  0E2C                     	;# 
   920  0E2D                     	;# 
   921  0E2E                     	;# 
   922  0E90                     	;# 
   923  0E91                     	;# 
   924  0E92                     	;# 
   925  0E94                     	;# 
   926  0E95                     	;# 
   927  0E9C                     	;# 
   928  0E9D                     	;# 
   929  0E9E                     	;# 
   930  0E9F                     	;# 
   931  0EA0                     	;# 
   932  0EA1                     	;# 
   933  0EA2                     	;# 
   934  0EA3                     	;# 
   935  0EA4                     	;# 
   936  0EA5                     	;# 
   937  0EA6                     	;# 
   938  0EA7                     	;# 
   939  0F0F                     	;# 
   940  0F10                     	;# 
   941  0F11                     	;# 
   942  0F12                     	;# 
   943  0F13                     	;# 
   944  0F14                     	;# 
   945  0F15                     	;# 
   946  0F16                     	;# 
   947  0F17                     	;# 
   948  0F18                     	;# 
   949  0F19                     	;# 
   950  0F1A                     	;# 
   951  0F1B                     	;# 
   952  0F1C                     	;# 
   953  0F1D                     	;# 
   954  0F1E                     	;# 
   955  0F1F                     	;# 
   956  0F20                     	;# 
   957  0F21                     	;# 
   958  0F22                     	;# 
   959  0F23                     	;# 
   960  0F24                     	;# 
   961  0F25                     	;# 
   962  0F26                     	;# 
   963  0F27                     	;# 
   964  0F28                     	;# 
   965  0F29                     	;# 
   966  0F2A                     	;# 
   967  0F2B                     	;# 
   968  0F2C                     	;# 
   969  0F2D                     	;# 
   970  0F2E                     	;# 
   971  0F2F                     	;# 
   972  0F30                     	;# 
   973  0F31                     	;# 
   974  0F32                     	;# 
   975  0F33                     	;# 
   976  0F34                     	;# 
   977  0F35                     	;# 
   978  0F36                     	;# 
   979  0F37                     	;# 
   980  0FE4                     	;# 
   981  0FE5                     	;# 
   982  0FE6                     	;# 
   983  0FE7                     	;# 
   984  0FE8                     	;# 
   985  0FE9                     	;# 
   986  0FEA                     	;# 
   987  0FEB                     	;# 
   988  0FED                     	;# 
   989  0FEE                     	;# 
   990  0FEF                     	;# 
   991  0000                     	;# 
   992  0001                     	;# 
   993  0002                     	;# 
   994  0003                     	;# 
   995  0004                     	;# 
   996  0005                     	;# 
   997  0006                     	;# 
   998  0007                     	;# 
   999  0008                     	;# 
  1000  0009                     	;# 
  1001  000A                     	;# 
  1002  000B                     	;# 
  1003  000C                     	;# 
  1004  000D                     	;# 
  1005  000E                     	;# 
  1006  0010                     	;# 
  1007  0011                     	;# 
  1008  0012                     	;# 
  1009  0013                     	;# 
  1010  0014                     	;# 
  1011  0015                     	;# 
  1012  0016                     	;# 
  1013  0016                     	;# 
  1014  0017                     	;# 
  1015  0018                     	;# 
  1016  0019                     	;# 
  1017  001A                     	;# 
  1018  001A                     	;# 
  1019  001B                     	;# 
  1020  001B                     	;# 
  1021  001C                     	;# 
  1022  001D                     	;# 
  1023  001E                     	;# 
  1024  001F                     	;# 
  1025  008C                     	;# 
  1026  008D                     	;# 
  1027  008E                     	;# 
  1028  0090                     	;# 
  1029  0091                     	;# 
  1030  0092                     	;# 
  1031  0093                     	;# 
  1032  0094                     	;# 
  1033  0095                     	;# 
  1034  0096                     	;# 
  1035  0098                     	;# 
  1036  0099                     	;# 
  1037  009A                     	;# 
  1038  009B                     	;# 
  1039  009B                     	;# 
  1040  009C                     	;# 
  1041  009D                     	;# 
  1042  009E                     	;# 
  1043  009F                     	;# 
  1044  010C                     	;# 
  1045  010D                     	;# 
  1046  010E                     	;# 
  1047  0111                     	;# 
  1048  0112                     	;# 
  1049  0113                     	;# 
  1050  0114                     	;# 
  1051  0115                     	;# 
  1052  0116                     	;# 
  1053  0117                     	;# 
  1054  0118                     	;# 
  1055  0119                     	;# 
  1056  011C                     	;# 
  1057  018C                     	;# 
  1058  018D                     	;# 
  1059  018E                     	;# 
  1060  0191                     	;# 
  1061  0191                     	;# 
  1062  0192                     	;# 
  1063  0193                     	;# 
  1064  0193                     	;# 
  1065  0194                     	;# 
  1066  0195                     	;# 
  1067  0196                     	;# 
  1068  0197                     	;# 
  1069  0199                     	;# 
  1070  0199                     	;# 
  1071  0199                     	;# 
  1072  019A                     	;# 
  1073  019A                     	;# 
  1074  019A                     	;# 
  1075  019B                     	;# 
  1076  019B                     	;# 
  1077  019B                     	;# 
  1078  019B                     	;# 
  1079  019B                     	;# 
  1080  019C                     	;# 
  1081  019C                     	;# 
  1082  019C                     	;# 
  1083  019D                     	;# 
  1084  019D                     	;# 
  1085  019D                     	;# 
  1086  019E                     	;# 
  1087  019E                     	;# 
  1088  019E                     	;# 
  1089  019F                     	;# 
  1090  019F                     	;# 
  1091  019F                     	;# 
  1092  019F                     	;# 
  1093  019F                     	;# 
  1094  020C                     	;# 
  1095  020D                     	;# 
  1096  020E                     	;# 
  1097  0211                     	;# 
  1098  0211                     	;# 
  1099  0212                     	;# 
  1100  0212                     	;# 
  1101  0213                     	;# 
  1102  0213                     	;# 
  1103  0214                     	;# 
  1104  0214                     	;# 
  1105  0215                     	;# 
  1106  0215                     	;# 
  1107  0215                     	;# 
  1108  0215                     	;# 
  1109  0216                     	;# 
  1110  0216                     	;# 
  1111  0217                     	;# 
  1112  0217                     	;# 
  1113  028C                     	;# 
  1114  028D                     	;# 
  1115  028E                     	;# 
  1116  0291                     	;# 
  1117  0291                     	;# 
  1118  0292                     	;# 
  1119  0293                     	;# 
  1120  0294                     	;# 
  1121  0298                     	;# 
  1122  0298                     	;# 
  1123  0299                     	;# 
  1124  029A                     	;# 
  1125  029B                     	;# 
  1126  029E                     	;# 
  1127  030C                     	;# 
  1128  030D                     	;# 
  1129  030E                     	;# 
  1130  038C                     	;# 
  1131  038D                     	;# 
  1132  038E                     	;# 
  1133  0391                     	;# 
  1134  0392                     	;# 
  1135  0393                     	;# 
  1136  0394                     	;# 
  1137  0395                     	;# 
  1138  0396                     	;# 
  1139  0397                     	;# 
  1140  0398                     	;# 
  1141  0399                     	;# 
  1142  040E                     	;# 
  1143  0413                     	;# 
  1144  0413                     	;# 
  1145  0414                     	;# 
  1146  0414                     	;# 
  1147  0415                     	;# 
  1148  0416                     	;# 
  1149  0417                     	;# 
  1150  0418                     	;# 
  1151  041A                     	;# 
  1152  041A                     	;# 
  1153  041B                     	;# 
  1154  041B                     	;# 
  1155  041C                     	;# 
  1156  041D                     	;# 
  1157  041E                     	;# 
  1158  041F                     	;# 
  1159  0493                     	;# 
  1160  0494                     	;# 
  1161  0495                     	;# 
  1162  0496                     	;# 
  1163  049A                     	;# 
  1164  049B                     	;# 
  1165  049C                     	;# 
  1166  049D                     	;# 
  1167  058C                     	;# 
  1168  058C                     	;# 
  1169  058D                     	;# 
  1170  058E                     	;# 
  1171  058E                     	;# 
  1172  058F                     	;# 
  1173  0590                     	;# 
  1174  0590                     	;# 
  1175  0591                     	;# 
  1176  0592                     	;# 
  1177  0592                     	;# 
  1178  0593                     	;# 
  1179  0594                     	;# 
  1180  0594                     	;# 
  1181  0595                     	;# 
  1182  0596                     	;# 
  1183  0596                     	;# 
  1184  0597                     	;# 
  1185  0598                     	;# 
  1186  0599                     	;# 
  1187  059A                     	;# 
  1188  059B                     	;# 
  1189  059B                     	;# 
  1190  059C                     	;# 
  1191  059D                     	;# 
  1192  060C                     	;# 
  1193  060C                     	;# 
  1194  060D                     	;# 
  1195  060E                     	;# 
  1196  060F                     	;# 
  1197  060F                     	;# 
  1198  0610                     	;# 
  1199  0611                     	;# 
  1200  0612                     	;# 
  1201  0613                     	;# 
  1202  0614                     	;# 
  1203  0617                     	;# 
  1204  0617                     	;# 
  1205  0618                     	;# 
  1206  0619                     	;# 
  1207  061A                     	;# 
  1208  061A                     	;# 
  1209  061B                     	;# 
  1210  061C                     	;# 
  1211  0691                     	;# 
  1212  0692                     	;# 
  1213  0693                     	;# 
  1214  0694                     	;# 
  1215  0695                     	;# 
  1216  0696                     	;# 
  1217  0697                     	;# 
  1218  0699                     	;# 
  1219  069A                     	;# 
  1220  0711                     	;# 
  1221  0712                     	;# 
  1222  0713                     	;# 
  1223  0714                     	;# 
  1224  0715                     	;# 
  1225  0718                     	;# 
  1226  0718                     	;# 
  1227  0719                     	;# 
  1228  071A                     	;# 
  1229  071A                     	;# 
  1230  071B                     	;# 
  1231  071C                     	;# 
  1232  071D                     	;# 
  1233  0791                     	;# 
  1234  0791                     	;# 
  1235  0792                     	;# 
  1236  0793                     	;# 
  1237  0793                     	;# 
  1238  0794                     	;# 
  1239  0795                     	;# 
  1240  0795                     	;# 
  1241  0796                     	;# 
  1242  0797                     	;# 
  1243  0797                     	;# 
  1244  0798                     	;# 
  1245  0799                     	;# 
  1246  079A                     	;# 
  1247  080C                     	;# 
  1248  080C                     	;# 
  1249  080D                     	;# 
  1250  080E                     	;# 
  1251  080E                     	;# 
  1252  080F                     	;# 
  1253  0810                     	;# 
  1254  0810                     	;# 
  1255  0811                     	;# 
  1256  0812                     	;# 
  1257  0812                     	;# 
  1258  0813                     	;# 
  1259  0814                     	;# 
  1260  0815                     	;# 
  1261  0816                     	;# 
  1262  0817                     	;# 
  1263  0818                     	;# 
  1264  0819                     	;# 
  1265  081A                     	;# 
  1266  081A                     	;# 
  1267  081B                     	;# 
  1268  081C                     	;# 
  1269  081C                     	;# 
  1270  081D                     	;# 
  1271  088C                     	;# 
  1272  088D                     	;# 
  1273  088E                     	;# 
  1274  088F                     	;# 
  1275  088F                     	;# 
  1276  0890                     	;# 
  1277  0891                     	;# 
  1278  0892                     	;# 
  1279  0893                     	;# 
  1280  0893                     	;# 
  1281  0894                     	;# 
  1282  0895                     	;# 
  1283  0896                     	;# 
  1284  0897                     	;# 
  1285  0897                     	;# 
  1286  0898                     	;# 
  1287  0899                     	;# 
  1288  0D8C                     	;# 
  1289  0D8C                     	;# 
  1290  0D8D                     	;# 
  1291  0D8E                     	;# 
  1292  0D8F                     	;# 
  1293  0D8F                     	;# 
  1294  0D90                     	;# 
  1295  0D91                     	;# 
  1296  0D92                     	;# 
  1297  0D92                     	;# 
  1298  0D93                     	;# 
  1299  0D94                     	;# 
  1300  0D95                     	;# 
  1301  0D95                     	;# 
  1302  0D96                     	;# 
  1303  0D97                     	;# 
  1304  0D98                     	;# 
  1305  0D99                     	;# 
  1306  0D9A                     	;# 
  1307  0D9B                     	;# 
  1308  0D9C                     	;# 
  1309  0D9D                     	;# 
  1310  0D9E                     	;# 
  1311  0D9E                     	;# 
  1312  0D9F                     	;# 
  1313  0DA0                     	;# 
  1314  0DA1                     	;# 
  1315  0DA1                     	;# 
  1316  0DA2                     	;# 
  1317  0DA3                     	;# 
  1318  0DA4                     	;# 
  1319  0DA4                     	;# 
  1320  0DA5                     	;# 
  1321  0DA6                     	;# 
  1322  0DA7                     	;# 
  1323  0DA7                     	;# 
  1324  0DA8                     	;# 
  1325  0DA9                     	;# 
  1326  0DAA                     	;# 
  1327  0DAB                     	;# 
  1328  0DAC                     	;# 
  1329  0DAD                     	;# 
  1330  0DAE                     	;# 
  1331  0DAF                     	;# 
  1332  0E0F                     	;# 
  1333  0E10                     	;# 
  1334  0E11                     	;# 
  1335  0E12                     	;# 
  1336  0E13                     	;# 
  1337  0E14                     	;# 
  1338  0E15                     	;# 
  1339  0E16                     	;# 
  1340  0E17                     	;# 
  1341  0E18                     	;# 
  1342  0E19                     	;# 
  1343  0E1A                     	;# 
  1344  0E1B                     	;# 
  1345  0E1C                     	;# 
  1346  0E1D                     	;# 
  1347  0E1E                     	;# 
  1348  0E1F                     	;# 
  1349  0E20                     	;# 
  1350  0E21                     	;# 
  1351  0E22                     	;# 
  1352  0E23                     	;# 
  1353  0E24                     	;# 
  1354  0E25                     	;# 
  1355  0E26                     	;# 
  1356  0E27                     	;# 
  1357  0E28                     	;# 
  1358  0E29                     	;# 
  1359  0E2A                     	;# 
  1360  0E2B                     	;# 
  1361  0E2C                     	;# 
  1362  0E2D                     	;# 
  1363  0E2E                     	;# 
  1364  0E90                     	;# 
  1365  0E91                     	;# 
  1366  0E92                     	;# 
  1367  0E94                     	;# 
  1368  0E95                     	;# 
  1369  0E9C                     	;# 
  1370  0E9D                     	;# 
  1371  0E9E                     	;# 
  1372  0E9F                     	;# 
  1373  0EA0                     	;# 
  1374  0EA1                     	;# 
  1375  0EA2                     	;# 
  1376  0EA3                     	;# 
  1377  0EA4                     	;# 
  1378  0EA5                     	;# 
  1379  0EA6                     	;# 
  1380  0EA7                     	;# 
  1381  0F0F                     	;# 
  1382  0F10                     	;# 
  1383  0F11                     	;# 
  1384  0F12                     	;# 
  1385  0F13                     	;# 
  1386  0F14                     	;# 
  1387  0F15                     	;# 
  1388  0F16                     	;# 
  1389  0F17                     	;# 
  1390  0F18                     	;# 
  1391  0F19                     	;# 
  1392  0F1A                     	;# 
  1393  0F1B                     	;# 
  1394  0F1C                     	;# 
  1395  0F1D                     	;# 
  1396  0F1E                     	;# 
  1397  0F1F                     	;# 
  1398  0F20                     	;# 
  1399  0F21                     	;# 
  1400  0F22                     	;# 
  1401  0F23                     	;# 
  1402  0F24                     	;# 
  1403  0F25                     	;# 
  1404  0F26                     	;# 
  1405  0F27                     	;# 
  1406  0F28                     	;# 
  1407  0F29                     	;# 
  1408  0F2A                     	;# 
  1409  0F2B                     	;# 
  1410  0F2C                     	;# 
  1411  0F2D                     	;# 
  1412  0F2E                     	;# 
  1413  0F2F                     	;# 
  1414  0F30                     	;# 
  1415  0F31                     	;# 
  1416  0F32                     	;# 
  1417  0F33                     	;# 
  1418  0F34                     	;# 
  1419  0F35                     	;# 
  1420  0F36                     	;# 
  1421  0F37                     	;# 
  1422  0FE4                     	;# 
  1423  0FE5                     	;# 
  1424  0FE6                     	;# 
  1425  0FE7                     	;# 
  1426  0FE8                     	;# 
  1427  0FE9                     	;# 
  1428  0FEA                     	;# 
  1429  0FEB                     	;# 
  1430  0FED                     	;# 
  1431  0FEE                     	;# 
  1432  0FEF                     	;# 
  1433  0000                     	;# 
  1434  0001                     	;# 
  1435  0002                     	;# 
  1436  0003                     	;# 
  1437  0004                     	;# 
  1438  0005                     	;# 
  1439  0006                     	;# 
  1440  0007                     	;# 
  1441  0008                     	;# 
  1442  0009                     	;# 
  1443  000A                     	;# 
  1444  000B                     	;# 
  1445  000C                     	;# 
  1446  000D                     	;# 
  1447  000E                     	;# 
  1448  0010                     	;# 
  1449  0011                     	;# 
  1450  0012                     	;# 
  1451  0013                     	;# 
  1452  0014                     	;# 
  1453  0015                     	;# 
  1454  0016                     	;# 
  1455  0016                     	;# 
  1456  0017                     	;# 
  1457  0018                     	;# 
  1458  0019                     	;# 
  1459  001A                     	;# 
  1460  001A                     	;# 
  1461  001B                     	;# 
  1462  001B                     	;# 
  1463  001C                     	;# 
  1464  001D                     	;# 
  1465  001E                     	;# 
  1466  001F                     	;# 
  1467  008C                     	;# 
  1468  008D                     	;# 
  1469  008E                     	;# 
  1470  0090                     	;# 
  1471  0091                     	;# 
  1472  0092                     	;# 
  1473  0093                     	;# 
  1474  0094                     	;# 
  1475  0095                     	;# 
  1476  0096                     	;# 
  1477  0098                     	;# 
  1478  0099                     	;# 
  1479  009A                     	;# 
  1480  009B                     	;# 
  1481  009B                     	;# 
  1482  009C                     	;# 
  1483  009D                     	;# 
  1484  009E                     	;# 
  1485  009F                     	;# 
  1486  010C                     	;# 
  1487  010D                     	;# 
  1488  010E                     	;# 
  1489  0111                     	;# 
  1490  0112                     	;# 
  1491  0113                     	;# 
  1492  0114                     	;# 
  1493  0115                     	;# 
  1494  0116                     	;# 
  1495  0117                     	;# 
  1496  0118                     	;# 
  1497  0119                     	;# 
  1498  011C                     	;# 
  1499  018C                     	;# 
  1500  018D                     	;# 
  1501  018E                     	;# 
  1502  0191                     	;# 
  1503  0191                     	;# 
  1504  0192                     	;# 
  1505  0193                     	;# 
  1506  0193                     	;# 
  1507  0194                     	;# 
  1508  0195                     	;# 
  1509  0196                     	;# 
  1510  0197                     	;# 
  1511  0199                     	;# 
  1512  0199                     	;# 
  1513  0199                     	;# 
  1514  019A                     	;# 
  1515  019A                     	;# 
  1516  019A                     	;# 
  1517  019B                     	;# 
  1518  019B                     	;# 
  1519  019B                     	;# 
  1520  019B                     	;# 
  1521  019B                     	;# 
  1522  019C                     	;# 
  1523  019C                     	;# 
  1524  019C                     	;# 
  1525  019D                     	;# 
  1526  019D                     	;# 
  1527  019D                     	;# 
  1528  019E                     	;# 
  1529  019E                     	;# 
  1530  019E                     	;# 
  1531  019F                     	;# 
  1532  019F                     	;# 
  1533  019F                     	;# 
  1534  019F                     	;# 
  1535  019F                     	;# 
  1536  020C                     	;# 
  1537  020D                     	;# 
  1538  020E                     	;# 
  1539  0211                     	;# 
  1540  0211                     	;# 
  1541  0212                     	;# 
  1542  0212                     	;# 
  1543  0213                     	;# 
  1544  0213                     	;# 
  1545  0214                     	;# 
  1546  0214                     	;# 
  1547  0215                     	;# 
  1548  0215                     	;# 
  1549  0215                     	;# 
  1550  0215                     	;# 
  1551  0216                     	;# 
  1552  0216                     	;# 
  1553  0217                     	;# 
  1554  0217                     	;# 
  1555  028C                     	;# 
  1556  028D                     	;# 
  1557  028E                     	;# 
  1558  0291                     	;# 
  1559  0291                     	;# 
  1560  0292                     	;# 
  1561  0293                     	;# 
  1562  0294                     	;# 
  1563  0298                     	;# 
  1564  0298                     	;# 
  1565  0299                     	;# 
  1566  029A                     	;# 
  1567  029B                     	;# 
  1568  029E                     	;# 
  1569  030C                     	;# 
  1570  030D                     	;# 
  1571  030E                     	;# 
  1572  038C                     	;# 
  1573  038D                     	;# 
  1574  038E                     	;# 
  1575  0391                     	;# 
  1576  0392                     	;# 
  1577  0393                     	;# 
  1578  0394                     	;# 
  1579  0395                     	;# 
  1580  0396                     	;# 
  1581  0397                     	;# 
  1582  0398                     	;# 
  1583  0399                     	;# 
  1584  040E                     	;# 
  1585  0413                     	;# 
  1586  0413                     	;# 
  1587  0414                     	;# 
  1588  0414                     	;# 
  1589  0415                     	;# 
  1590  0416                     	;# 
  1591  0417                     	;# 
  1592  0418                     	;# 
  1593  041A                     	;# 
  1594  041A                     	;# 
  1595  041B                     	;# 
  1596  041B                     	;# 
  1597  041C                     	;# 
  1598  041D                     	;# 
  1599  041E                     	;# 
  1600  041F                     	;# 
  1601  0493                     	;# 
  1602  0494                     	;# 
  1603  0495                     	;# 
  1604  0496                     	;# 
  1605  049A                     	;# 
  1606  049B                     	;# 
  1607  049C                     	;# 
  1608  049D                     	;# 
  1609  058C                     	;# 
  1610  058C                     	;# 
  1611  058D                     	;# 
  1612  058E                     	;# 
  1613  058E                     	;# 
  1614  058F                     	;# 
  1615  0590                     	;# 
  1616  0590                     	;# 
  1617  0591                     	;# 
  1618  0592                     	;# 
  1619  0592                     	;# 
  1620  0593                     	;# 
  1621  0594                     	;# 
  1622  0594                     	;# 
  1623  0595                     	;# 
  1624  0596                     	;# 
  1625  0596                     	;# 
  1626  0597                     	;# 
  1627  0598                     	;# 
  1628  0599                     	;# 
  1629  059A                     	;# 
  1630  059B                     	;# 
  1631  059B                     	;# 
  1632  059C                     	;# 
  1633  059D                     	;# 
  1634  060C                     	;# 
  1635  060C                     	;# 
  1636  060D                     	;# 
  1637  060E                     	;# 
  1638  060F                     	;# 
  1639  060F                     	;# 
  1640  0610                     	;# 
  1641  0611                     	;# 
  1642  0612                     	;# 
  1643  0613                     	;# 
  1644  0614                     	;# 
  1645  0617                     	;# 
  1646  0617                     	;# 
  1647  0618                     	;# 
  1648  0619                     	;# 
  1649  061A                     	;# 
  1650  061A                     	;# 
  1651  061B                     	;# 
  1652  061C                     	;# 
  1653  0691                     	;# 
  1654  0692                     	;# 
  1655  0693                     	;# 
  1656  0694                     	;# 
  1657  0695                     	;# 
  1658  0696                     	;# 
  1659  0697                     	;# 
  1660  0699                     	;# 
  1661  069A                     	;# 
  1662  0711                     	;# 
  1663  0712                     	;# 
  1664  0713                     	;# 
  1665  0714                     	;# 
  1666  0715                     	;# 
  1667  0718                     	;# 
  1668  0718                     	;# 
  1669  0719                     	;# 
  1670  071A                     	;# 
  1671  071A                     	;# 
  1672  071B                     	;# 
  1673  071C                     	;# 
  1674  071D                     	;# 
  1675  0791                     	;# 
  1676  0791                     	;# 
  1677  0792                     	;# 
  1678  0793                     	;# 
  1679  0793                     	;# 
  1680  0794                     	;# 
  1681  0795                     	;# 
  1682  0795                     	;# 
  1683  0796                     	;# 
  1684  0797                     	;# 
  1685  0797                     	;# 
  1686  0798                     	;# 
  1687  0799                     	;# 
  1688  079A                     	;# 
  1689  080C                     	;# 
  1690  080C                     	;# 
  1691  080D                     	;# 
  1692  080E                     	;# 
  1693  080E                     	;# 
  1694  080F                     	;# 
  1695  0810                     	;# 
  1696  0810                     	;# 
  1697  0811                     	;# 
  1698  0812                     	;# 
  1699  0812                     	;# 
  1700  0813                     	;# 
  1701  0814                     	;# 
  1702  0815                     	;# 
  1703  0816                     	;# 
  1704  0817                     	;# 
  1705  0818                     	;# 
  1706  0819                     	;# 
  1707  081A                     	;# 
  1708  081A                     	;# 
  1709  081B                     	;# 
  1710  081C                     	;# 
  1711  081C                     	;# 
  1712  081D                     	;# 
  1713  088C                     	;# 
  1714  088D                     	;# 
  1715  088E                     	;# 
  1716  088F                     	;# 
  1717  088F                     	;# 
  1718  0890                     	;# 
  1719  0891                     	;# 
  1720  0892                     	;# 
  1721  0893                     	;# 
  1722  0893                     	;# 
  1723  0894                     	;# 
  1724  0895                     	;# 
  1725  0896                     	;# 
  1726  0897                     	;# 
  1727  0897                     	;# 
  1728  0898                     	;# 
  1729  0899                     	;# 
  1730  0D8C                     	;# 
  1731  0D8C                     	;# 
  1732  0D8D                     	;# 
  1733  0D8E                     	;# 
  1734  0D8F                     	;# 
  1735  0D8F                     	;# 
  1736  0D90                     	;# 
  1737  0D91                     	;# 
  1738  0D92                     	;# 
  1739  0D92                     	;# 
  1740  0D93                     	;# 
  1741  0D94                     	;# 
  1742  0D95                     	;# 
  1743  0D95                     	;# 
  1744  0D96                     	;# 
  1745  0D97                     	;# 
  1746  0D98                     	;# 
  1747  0D99                     	;# 
  1748  0D9A                     	;# 
  1749  0D9B                     	;# 
  1750  0D9C                     	;# 
  1751  0D9D                     	;# 
  1752  0D9E                     	;# 
  1753  0D9E                     	;# 
  1754  0D9F                     	;# 
  1755  0DA0                     	;# 
  1756  0DA1                     	;# 
  1757  0DA1                     	;# 
  1758  0DA2                     	;# 
  1759  0DA3                     	;# 
  1760  0DA4                     	;# 
  1761  0DA4                     	;# 
  1762  0DA5                     	;# 
  1763  0DA6                     	;# 
  1764  0DA7                     	;# 
  1765  0DA7                     	;# 
  1766  0DA8                     	;# 
  1767  0DA9                     	;# 
  1768  0DAA                     	;# 
  1769  0DAB                     	;# 
  1770  0DAC                     	;# 
  1771  0DAD                     	;# 
  1772  0DAE                     	;# 
  1773  0DAF                     	;# 
  1774  0E0F                     	;# 
  1775  0E10                     	;# 
  1776  0E11                     	;# 
  1777  0E12                     	;# 
  1778  0E13                     	;# 
  1779  0E14                     	;# 
  1780  0E15                     	;# 
  1781  0E16                     	;# 
  1782  0E17                     	;# 
  1783  0E18                     	;# 
  1784  0E19                     	;# 
  1785  0E1A                     	;# 
  1786  0E1B                     	;# 
  1787  0E1C                     	;# 
  1788  0E1D                     	;# 
  1789  0E1E                     	;# 
  1790  0E1F                     	;# 
  1791  0E20                     	;# 
  1792  0E21                     	;# 
  1793  0E22                     	;# 
  1794  0E23                     	;# 
  1795  0E24                     	;# 
  1796  0E25                     	;# 
  1797  0E26                     	;# 
  1798  0E27                     	;# 
  1799  0E28                     	;# 
  1800  0E29                     	;# 
  1801  0E2A                     	;# 
  1802  0E2B                     	;# 
  1803  0E2C                     	;# 
  1804  0E2D                     	;# 
  1805  0E2E                     	;# 
  1806  0E90                     	;# 
  1807  0E91                     	;# 
  1808  0E92                     	;# 
  1809  0E94                     	;# 
  1810  0E95                     	;# 
  1811  0E9C                     	;# 
  1812  0E9D                     	;# 
  1813  0E9E                     	;# 
  1814  0E9F                     	;# 
  1815  0EA0                     	;# 
  1816  0EA1                     	;# 
  1817  0EA2                     	;# 
  1818  0EA3                     	;# 
  1819  0EA4                     	;# 
  1820  0EA5                     	;# 
  1821  0EA6                     	;# 
  1822  0EA7                     	;# 
  1823  0F0F                     	;# 
  1824  0F10                     	;# 
  1825  0F11                     	;# 
  1826  0F12                     	;# 
  1827  0F13                     	;# 
  1828  0F14                     	;# 
  1829  0F15                     	;# 
  1830  0F16                     	;# 
  1831  0F17                     	;# 
  1832  0F18                     	;# 
  1833  0F19                     	;# 
  1834  0F1A                     	;# 
  1835  0F1B                     	;# 
  1836  0F1C                     	;# 
  1837  0F1D                     	;# 
  1838  0F1E                     	;# 
  1839  0F1F                     	;# 
  1840  0F20                     	;# 
  1841  0F21                     	;# 
  1842  0F22                     	;# 
  1843  0F23                     	;# 
  1844  0F24                     	;# 
  1845  0F25                     	;# 
  1846  0F26                     	;# 
  1847  0F27                     	;# 
  1848  0F28                     	;# 
  1849  0F29                     	;# 
  1850  0F2A                     	;# 
  1851  0F2B                     	;# 
  1852  0F2C                     	;# 
  1853  0F2D                     	;# 
  1854  0F2E                     	;# 
  1855  0F2F                     	;# 
  1856  0F30                     	;# 
  1857  0F31                     	;# 
  1858  0F32                     	;# 
  1859  0F33                     	;# 
  1860  0F34                     	;# 
  1861  0F35                     	;# 
  1862  0F36                     	;# 
  1863  0F37                     	;# 
  1864  0FE4                     	;# 
  1865  0FE5                     	;# 
  1866  0FE6                     	;# 
  1867  0FE7                     	;# 
  1868  0FE8                     	;# 
  1869  0FE9                     	;# 
  1870  0FEA                     	;# 
  1871  0FEB                     	;# 
  1872  0FED                     	;# 
  1873  0FEE                     	;# 
  1874  0FEF                     	;# 
  1875  0000                     	;# 
  1876  0001                     	;# 
  1877  0002                     	;# 
  1878  0003                     	;# 
  1879  0004                     	;# 
  1880  0005                     	;# 
  1881  0006                     	;# 
  1882  0007                     	;# 
  1883  0008                     	;# 
  1884  0009                     	;# 
  1885  000A                     	;# 
  1886  000B                     	;# 
  1887  000C                     	;# 
  1888  000D                     	;# 
  1889  000E                     	;# 
  1890  0010                     	;# 
  1891  0011                     	;# 
  1892  0012                     	;# 
  1893  0013                     	;# 
  1894  0014                     	;# 
  1895  0015                     	;# 
  1896  0016                     	;# 
  1897  0016                     	;# 
  1898  0017                     	;# 
  1899  0018                     	;# 
  1900  0019                     	;# 
  1901  001A                     	;# 
  1902  001A                     	;# 
  1903  001B                     	;# 
  1904  001B                     	;# 
  1905  001C                     	;# 
  1906  001D                     	;# 
  1907  001E                     	;# 
  1908  001F                     	;# 
  1909  008C                     	;# 
  1910  008D                     	;# 
  1911  008E                     	;# 
  1912  0090                     	;# 
  1913  0091                     	;# 
  1914  0092                     	;# 
  1915  0093                     	;# 
  1916  0094                     	;# 
  1917  0095                     	;# 
  1918  0096                     	;# 
  1919  0098                     	;# 
  1920  0099                     	;# 
  1921  009A                     	;# 
  1922  009B                     	;# 
  1923  009B                     	;# 
  1924  009C                     	;# 
  1925  009D                     	;# 
  1926  009E                     	;# 
  1927  009F                     	;# 
  1928  010C                     	;# 
  1929  010D                     	;# 
  1930  010E                     	;# 
  1931  0111                     	;# 
  1932  0112                     	;# 
  1933  0113                     	;# 
  1934  0114                     	;# 
  1935  0115                     	;# 
  1936  0116                     	;# 
  1937  0117                     	;# 
  1938  0118                     	;# 
  1939  0119                     	;# 
  1940  011C                     	;# 
  1941  018C                     	;# 
  1942  018D                     	;# 
  1943  018E                     	;# 
  1944  0191                     	;# 
  1945  0191                     	;# 
  1946  0192                     	;# 
  1947  0193                     	;# 
  1948  0193                     	;# 
  1949  0194                     	;# 
  1950  0195                     	;# 
  1951  0196                     	;# 
  1952  0197                     	;# 
  1953  0199                     	;# 
  1954  0199                     	;# 
  1955  0199                     	;# 
  1956  019A                     	;# 
  1957  019A                     	;# 
  1958  019A                     	;# 
  1959  019B                     	;# 
  1960  019B                     	;# 
  1961  019B                     	;# 
  1962  019B                     	;# 
  1963  019B                     	;# 
  1964  019C                     	;# 
  1965  019C                     	;# 
  1966  019C                     	;# 
  1967  019D                     	;# 
  1968  019D                     	;# 
  1969  019D                     	;# 
  1970  019E                     	;# 
  1971  019E                     	;# 
  1972  019E                     	;# 
  1973  019F                     	;# 
  1974  019F                     	;# 
  1975  019F                     	;# 
  1976  019F                     	;# 
  1977  019F                     	;# 
  1978  020C                     	;# 
  1979  020D                     	;# 
  1980  020E                     	;# 
  1981  0211                     	;# 
  1982  0211                     	;# 
  1983  0212                     	;# 
  1984  0212                     	;# 
  1985  0213                     	;# 
  1986  0213                     	;# 
  1987  0214                     	;# 
  1988  0214                     	;# 
  1989  0215                     	;# 
  1990  0215                     	;# 
  1991  0215                     	;# 
  1992  0215                     	;# 
  1993  0216                     	;# 
  1994  0216                     	;# 
  1995  0217                     	;# 
  1996  0217                     	;# 
  1997  028C                     	;# 
  1998  028D                     	;# 
  1999  028E                     	;# 
  2000  0291                     	;# 
  2001  0291                     	;# 
  2002  0292                     	;# 
  2003  0293                     	;# 
  2004  0294                     	;# 
  2005  0298                     	;# 
  2006  0298                     	;# 
  2007  0299                     	;# 
  2008  029A                     	;# 
  2009  029B                     	;# 
  2010  029E                     	;# 
  2011  030C                     	;# 
  2012  030D                     	;# 
  2013  030E                     	;# 
  2014  038C                     	;# 
  2015  038D                     	;# 
  2016  038E                     	;# 
  2017  0391                     	;# 
  2018  0392                     	;# 
  2019  0393                     	;# 
  2020  0394                     	;# 
  2021  0395                     	;# 
  2022  0396                     	;# 
  2023  0397                     	;# 
  2024  0398                     	;# 
  2025  0399                     	;# 
  2026  040E                     	;# 
  2027  0413                     	;# 
  2028  0413                     	;# 
  2029  0414                     	;# 
  2030  0414                     	;# 
  2031  0415                     	;# 
  2032  0416                     	;# 
  2033  0417                     	;# 
  2034  0418                     	;# 
  2035  041A                     	;# 
  2036  041A                     	;# 
  2037  041B                     	;# 
  2038  041B                     	;# 
  2039  041C                     	;# 
  2040  041D                     	;# 
  2041  041E                     	;# 
  2042  041F                     	;# 
  2043  0493                     	;# 
  2044  0494                     	;# 
  2045  0495                     	;# 
  2046  0496                     	;# 
  2047  049A                     	;# 
  2048  049B                     	;# 
  2049  049C                     	;# 
  2050  049D                     	;# 
  2051  058C                     	;# 
  2052  058C                     	;# 
  2053  058D                     	;# 
  2054  058E                     	;# 
  2055  058E                     	;# 
  2056  058F                     	;# 
  2057  0590                     	;# 
  2058  0590                     	;# 
  2059  0591                     	;# 
  2060  0592                     	;# 
  2061  0592                     	;# 
  2062  0593                     	;# 
  2063  0594                     	;# 
  2064  0594                     	;# 
  2065  0595                     	;# 
  2066  0596                     	;# 
  2067  0596                     	;# 
  2068  0597                     	;# 
  2069  0598                     	;# 
  2070  0599                     	;# 
  2071  059A                     	;# 
  2072  059B                     	;# 
  2073  059B                     	;# 
  2074  059C                     	;# 
  2075  059D                     	;# 
  2076  060C                     	;# 
  2077  060C                     	;# 
  2078  060D                     	;# 
  2079  060E                     	;# 
  2080  060F                     	;# 
  2081  060F                     	;# 
  2082  0610                     	;# 
  2083  0611                     	;# 
  2084  0612                     	;# 
  2085  0613                     	;# 
  2086  0614                     	;# 
  2087  0617                     	;# 
  2088  0617                     	;# 
  2089  0618                     	;# 
  2090  0619                     	;# 
  2091  061A                     	;# 
  2092  061A                     	;# 
  2093  061B                     	;# 
  2094  061C                     	;# 
  2095  0691                     	;# 
  2096  0692                     	;# 
  2097  0693                     	;# 
  2098  0694                     	;# 
  2099  0695                     	;# 
  2100  0696                     	;# 
  2101  0697                     	;# 
  2102  0699                     	;# 
  2103  069A                     	;# 
  2104  0711                     	;# 
  2105  0712                     	;# 
  2106  0713                     	;# 
  2107  0714                     	;# 
  2108  0715                     	;# 
  2109  0718                     	;# 
  2110  0718                     	;# 
  2111  0719                     	;# 
  2112  071A                     	;# 
  2113  071A                     	;# 
  2114  071B                     	;# 
  2115  071C                     	;# 
  2116  071D                     	;# 
  2117  0791                     	;# 
  2118  0791                     	;# 
  2119  0792                     	;# 
  2120  0793                     	;# 
  2121  0793                     	;# 
  2122  0794                     	;# 
  2123  0795                     	;# 
  2124  0795                     	;# 
  2125  0796                     	;# 
  2126  0797                     	;# 
  2127  0797                     	;# 
  2128  0798                     	;# 
  2129  0799                     	;# 
  2130  079A                     	;# 
  2131  080C                     	;# 
  2132  080C                     	;# 
  2133  080D                     	;# 
  2134  080E                     	;# 
  2135  080E                     	;# 
  2136  080F                     	;# 
  2137  0810                     	;# 
  2138  0810                     	;# 
  2139  0811                     	;# 
  2140  0812                     	;# 
  2141  0812                     	;# 
  2142  0813                     	;# 
  2143  0814                     	;# 
  2144  0815                     	;# 
  2145  0816                     	;# 
  2146  0817                     	;# 
  2147  0818                     	;# 
  2148  0819                     	;# 
  2149  081A                     	;# 
  2150  081A                     	;# 
  2151  081B                     	;# 
  2152  081C                     	;# 
  2153  081C                     	;# 
  2154  081D                     	;# 
  2155  088C                     	;# 
  2156  088D                     	;# 
  2157  088E                     	;# 
  2158  088F                     	;# 
  2159  088F                     	;# 
  2160  0890                     	;# 
  2161  0891                     	;# 
  2162  0892                     	;# 
  2163  0893                     	;# 
  2164  0893                     	;# 
  2165  0894                     	;# 
  2166  0895                     	;# 
  2167  0896                     	;# 
  2168  0897                     	;# 
  2169  0897                     	;# 
  2170  0898                     	;# 
  2171  0899                     	;# 
  2172  0D8C                     	;# 
  2173  0D8C                     	;# 
  2174  0D8D                     	;# 
  2175  0D8E                     	;# 
  2176  0D8F                     	;# 
  2177  0D8F                     	;# 
  2178  0D90                     	;# 
  2179  0D91                     	;# 
  2180  0D92                     	;# 
  2181  0D92                     	;# 
  2182  0D93                     	;# 
  2183  0D94                     	;# 
  2184  0D95                     	;# 
  2185  0D95                     	;# 
  2186  0D96                     	;# 
  2187  0D97                     	;# 
  2188  0D98                     	;# 
  2189  0D99                     	;# 
  2190  0D9A                     	;# 
  2191  0D9B                     	;# 
  2192  0D9C                     	;# 
  2193  0D9D                     	;# 
  2194  0D9E                     	;# 
  2195  0D9E                     	;# 
  2196  0D9F                     	;# 
  2197  0DA0                     	;# 
  2198  0DA1                     	;# 
  2199  0DA1                     	;# 
  2200  0DA2                     	;# 
  2201  0DA3                     	;# 
  2202  0DA4                     	;# 
  2203  0DA4                     	;# 
  2204  0DA5                     	;# 
  2205  0DA6                     	;# 
  2206  0DA7                     	;# 
  2207  0DA7                     	;# 
  2208  0DA8                     	;# 
  2209  0DA9                     	;# 
  2210  0DAA                     	;# 
  2211  0DAB                     	;# 
  2212  0DAC                     	;# 
  2213  0DAD                     	;# 
  2214  0DAE                     	;# 
  2215  0DAF                     	;# 
  2216  0E0F                     	;# 
  2217  0E10                     	;# 
  2218  0E11                     	;# 
  2219  0E12                     	;# 
  2220  0E13                     	;# 
  2221  0E14                     	;# 
  2222  0E15                     	;# 
  2223  0E16                     	;# 
  2224  0E17                     	;# 
  2225  0E18                     	;# 
  2226  0E19                     	;# 
  2227  0E1A                     	;# 
  2228  0E1B                     	;# 
  2229  0E1C                     	;# 
  2230  0E1D                     	;# 
  2231  0E1E                     	;# 
  2232  0E1F                     	;# 
  2233  0E20                     	;# 
  2234  0E21                     	;# 
  2235  0E22                     	;# 
  2236  0E23                     	;# 
  2237  0E24                     	;# 
  2238  0E25                     	;# 
  2239  0E26                     	;# 
  2240  0E27                     	;# 
  2241  0E28                     	;# 
  2242  0E29                     	;# 
  2243  0E2A                     	;# 
  2244  0E2B                     	;# 
  2245  0E2C                     	;# 
  2246  0E2D                     	;# 
  2247  0E2E                     	;# 
  2248  0E90                     	;# 
  2249  0E91                     	;# 
  2250  0E92                     	;# 
  2251  0E94                     	;# 
  2252  0E95                     	;# 
  2253  0E9C                     	;# 
  2254  0E9D                     	;# 
  2255  0E9E                     	;# 
  2256  0E9F                     	;# 
  2257  0EA0                     	;# 
  2258  0EA1                     	;# 
  2259  0EA2                     	;# 
  2260  0EA3                     	;# 
  2261  0EA4                     	;# 
  2262  0EA5                     	;# 
  2263  0EA6                     	;# 
  2264  0EA7                     	;# 
  2265  0F0F                     	;# 
  2266  0F10                     	;# 
  2267  0F11                     	;# 
  2268  0F12                     	;# 
  2269  0F13                     	;# 
  2270  0F14                     	;# 
  2271  0F15                     	;# 
  2272  0F16                     	;# 
  2273  0F17                     	;# 
  2274  0F18                     	;# 
  2275  0F19                     	;# 
  2276  0F1A                     	;# 
  2277  0F1B                     	;# 
  2278  0F1C                     	;# 
  2279  0F1D                     	;# 
  2280  0F1E                     	;# 
  2281  0F1F                     	;# 
  2282  0F20                     	;# 
  2283  0F21                     	;# 
  2284  0F22                     	;# 
  2285  0F23                     	;# 
  2286  0F24                     	;# 
  2287  0F25                     	;# 
  2288  0F26                     	;# 
  2289  0F27                     	;# 
  2290  0F28                     	;# 
  2291  0F29                     	;# 
  2292  0F2A                     	;# 
  2293  0F2B                     	;# 
  2294  0F2C                     	;# 
  2295  0F2D                     	;# 
  2296  0F2E                     	;# 
  2297  0F2F                     	;# 
  2298  0F30                     	;# 
  2299  0F31                     	;# 
  2300  0F32                     	;# 
  2301  0F33                     	;# 
  2302  0F34                     	;# 
  2303  0F35                     	;# 
  2304  0F36                     	;# 
  2305  0F37                     	;# 
  2306  0FE4                     	;# 
  2307  0FE5                     	;# 
  2308  0FE6                     	;# 
  2309  0FE7                     	;# 
  2310  0FE8                     	;# 
  2311  0FE9                     	;# 
  2312  0FEA                     	;# 
  2313  0FEB                     	;# 
  2314  0FED                     	;# 
  2315  0FEE                     	;# 
  2316  0FEF                     	;# 
  2317  0000                     	;# 
  2318  0001                     	;# 
  2319  0002                     	;# 
  2320  0003                     	;# 
  2321  0004                     	;# 
  2322  0005                     	;# 
  2323  0006                     	;# 
  2324  0007                     	;# 
  2325  0008                     	;# 
  2326  0009                     	;# 
  2327  000A                     	;# 
  2328  000B                     	;# 
  2329  000C                     	;# 
  2330  000D                     	;# 
  2331  000E                     	;# 
  2332  0010                     	;# 
  2333  0011                     	;# 
  2334  0012                     	;# 
  2335  0013                     	;# 
  2336  0014                     	;# 
  2337  0015                     	;# 
  2338  0016                     	;# 
  2339  0016                     	;# 
  2340  0017                     	;# 
  2341  0018                     	;# 
  2342  0019                     	;# 
  2343  001A                     	;# 
  2344  001A                     	;# 
  2345  001B                     	;# 
  2346  001B                     	;# 
  2347  001C                     	;# 
  2348  001D                     	;# 
  2349  001E                     	;# 
  2350  001F                     	;# 
  2351  008C                     	;# 
  2352  008D                     	;# 
  2353  008E                     	;# 
  2354  0090                     	;# 
  2355  0091                     	;# 
  2356  0092                     	;# 
  2357  0093                     	;# 
  2358  0094                     	;# 
  2359  0095                     	;# 
  2360  0096                     	;# 
  2361  0098                     	;# 
  2362  0099                     	;# 
  2363  009A                     	;# 
  2364  009B                     	;# 
  2365  009B                     	;# 
  2366  009C                     	;# 
  2367  009D                     	;# 
  2368  009E                     	;# 
  2369  009F                     	;# 
  2370  010C                     	;# 
  2371  010D                     	;# 
  2372  010E                     	;# 
  2373  0111                     	;# 
  2374  0112                     	;# 
  2375  0113                     	;# 
  2376  0114                     	;# 
  2377  0115                     	;# 
  2378  0116                     	;# 
  2379  0117                     	;# 
  2380  0118                     	;# 
  2381  0119                     	;# 
  2382  011C                     	;# 
  2383  018C                     	;# 
  2384  018D                     	;# 
  2385  018E                     	;# 
  2386  0191                     	;# 
  2387  0191                     	;# 
  2388  0192                     	;# 
  2389  0193                     	;# 
  2390  0193                     	;# 
  2391  0194                     	;# 
  2392  0195                     	;# 
  2393  0196                     	;# 
  2394  0197                     	;# 
  2395  0199                     	;# 
  2396  0199                     	;# 
  2397  0199                     	;# 
  2398  019A                     	;# 
  2399  019A                     	;# 
  2400  019A                     	;# 
  2401  019B                     	;# 
  2402  019B                     	;# 
  2403  019B                     	;# 
  2404  019B                     	;# 
  2405  019B                     	;# 
  2406  019C                     	;# 
  2407  019C                     	;# 
  2408  019C                     	;# 
  2409  019D                     	;# 
  2410  019D                     	;# 
  2411  019D                     	;# 
  2412  019E                     	;# 
  2413  019E                     	;# 
  2414  019E                     	;# 
  2415  019F                     	;# 
  2416  019F                     	;# 
  2417  019F                     	;# 
  2418  019F                     	;# 
  2419  019F                     	;# 
  2420  020C                     	;# 
  2421  020D                     	;# 
  2422  020E                     	;# 
  2423  0211                     	;# 
  2424  0211                     	;# 
  2425  0212                     	;# 
  2426  0212                     	;# 
  2427  0213                     	;# 
  2428  0213                     	;# 
  2429  0214                     	;# 
  2430  0214                     	;# 
  2431  0215                     	;# 
  2432  0215                     	;# 
  2433  0215                     	;# 
  2434  0215                     	;# 
  2435  0216                     	;# 
  2436  0216                     	;# 
  2437  0217                     	;# 
  2438  0217                     	;# 
  2439  028C                     	;# 
  2440  028D                     	;# 
  2441  028E                     	;# 
  2442  0291                     	;# 
  2443  0291                     	;# 
  2444  0292                     	;# 
  2445  0293                     	;# 
  2446  0294                     	;# 
  2447  0298                     	;# 
  2448  0298                     	;# 
  2449  0299                     	;# 
  2450  029A                     	;# 
  2451  029B                     	;# 
  2452  029E                     	;# 
  2453  030C                     	;# 
  2454  030D                     	;# 
  2455  030E                     	;# 
  2456  038C                     	;# 
  2457  038D                     	;# 
  2458  038E                     	;# 
  2459  0391                     	;# 
  2460  0392                     	;# 
  2461  0393                     	;# 
  2462  0394                     	;# 
  2463  0395                     	;# 
  2464  0396                     	;# 
  2465  0397                     	;# 
  2466  0398                     	;# 
  2467  0399                     	;# 
  2468  040E                     	;# 
  2469  0413                     	;# 
  2470  0413                     	;# 
  2471  0414                     	;# 
  2472  0414                     	;# 
  2473  0415                     	;# 
  2474  0416                     	;# 
  2475  0417                     	;# 
  2476  0418                     	;# 
  2477  041A                     	;# 
  2478  041A                     	;# 
  2479  041B                     	;# 
  2480  041B                     	;# 
  2481  041C                     	;# 
  2482  041D                     	;# 
  2483  041E                     	;# 
  2484  041F                     	;# 
  2485  0493                     	;# 
  2486  0494                     	;# 
  2487  0495                     	;# 
  2488  0496                     	;# 
  2489  049A                     	;# 
  2490  049B                     	;# 
  2491  049C                     	;# 
  2492  049D                     	;# 
  2493  058C                     	;# 
  2494  058C                     	;# 
  2495  058D                     	;# 
  2496  058E                     	;# 
  2497  058E                     	;# 
  2498  058F                     	;# 
  2499  0590                     	;# 
  2500  0590                     	;# 
  2501  0591                     	;# 
  2502  0592                     	;# 
  2503  0592                     	;# 
  2504  0593                     	;# 
  2505  0594                     	;# 
  2506  0594                     	;# 
  2507  0595                     	;# 
  2508  0596                     	;# 
  2509  0596                     	;# 
  2510  0597                     	;# 
  2511  0598                     	;# 
  2512  0599                     	;# 
  2513  059A                     	;# 
  2514  059B                     	;# 
  2515  059B                     	;# 
  2516  059C                     	;# 
  2517  059D                     	;# 
  2518  060C                     	;# 
  2519  060C                     	;# 
  2520  060D                     	;# 
  2521  060E                     	;# 
  2522  060F                     	;# 
  2523  060F                     	;# 
  2524  0610                     	;# 
  2525  0611                     	;# 
  2526  0612                     	;# 
  2527  0613                     	;# 
  2528  0614                     	;# 
  2529  0617                     	;# 
  2530  0617                     	;# 
  2531  0618                     	;# 
  2532  0619                     	;# 
  2533  061A                     	;# 
  2534  061A                     	;# 
  2535  061B                     	;# 
  2536  061C                     	;# 
  2537  0691                     	;# 
  2538  0692                     	;# 
  2539  0693                     	;# 
  2540  0694                     	;# 
  2541  0695                     	;# 
  2542  0696                     	;# 
  2543  0697                     	;# 
  2544  0699                     	;# 
  2545  069A                     	;# 
  2546  0711                     	;# 
  2547  0712                     	;# 
  2548  0713                     	;# 
  2549  0714                     	;# 
  2550  0715                     	;# 
  2551  0718                     	;# 
  2552  0718                     	;# 
  2553  0719                     	;# 
  2554  071A                     	;# 
  2555  071A                     	;# 
  2556  071B                     	;# 
  2557  071C                     	;# 
  2558  071D                     	;# 
  2559  0791                     	;# 
  2560  0791                     	;# 
  2561  0792                     	;# 
  2562  0793                     	;# 
  2563  0793                     	;# 
  2564  0794                     	;# 
  2565  0795                     	;# 
  2566  0795                     	;# 
  2567  0796                     	;# 
  2568  0797                     	;# 
  2569  0797                     	;# 
  2570  0798                     	;# 
  2571  0799                     	;# 
  2572  079A                     	;# 
  2573  080C                     	;# 
  2574  080C                     	;# 
  2575  080D                     	;# 
  2576  080E                     	;# 
  2577  080E                     	;# 
  2578  080F                     	;# 
  2579  0810                     	;# 
  2580  0810                     	;# 
  2581  0811                     	;# 
  2582  0812                     	;# 
  2583  0812                     	;# 
  2584  0813                     	;# 
  2585  0814                     	;# 
  2586  0815                     	;# 
  2587  0816                     	;# 
  2588  0817                     	;# 
  2589  0818                     	;# 
  2590  0819                     	;# 
  2591  081A                     	;# 
  2592  081A                     	;# 
  2593  081B                     	;# 
  2594  081C                     	;# 
  2595  081C                     	;# 
  2596  081D                     	;# 
  2597  088C                     	;# 
  2598  088D                     	;# 
  2599  088E                     	;# 
  2600  088F                     	;# 
  2601  088F                     	;# 
  2602  0890                     	;# 
  2603  0891                     	;# 
  2604  0892                     	;# 
  2605  0893                     	;# 
  2606  0893                     	;# 
  2607  0894                     	;# 
  2608  0895                     	;# 
  2609  0896                     	;# 
  2610  0897                     	;# 
  2611  0897                     	;# 
  2612  0898                     	;# 
  2613  0899                     	;# 
  2614  0D8C                     	;# 
  2615  0D8C                     	;# 
  2616  0D8D                     	;# 
  2617  0D8E                     	;# 
  2618  0D8F                     	;# 
  2619  0D8F                     	;# 
  2620  0D90                     	;# 
  2621  0D91                     	;# 
  2622  0D92                     	;# 
  2623  0D92                     	;# 
  2624  0D93                     	;# 
  2625  0D94                     	;# 
  2626  0D95                     	;# 
  2627  0D95                     	;# 
  2628  0D96                     	;# 
  2629  0D97                     	;# 
  2630  0D98                     	;# 
  2631  0D99                     	;# 
  2632  0D9A                     	;# 
  2633  0D9B                     	;# 
  2634  0D9C                     	;# 
  2635  0D9D                     	;# 
  2636  0D9E                     	;# 
  2637  0D9E                     	;# 
  2638  0D9F                     	;# 
  2639  0DA0                     	;# 
  2640  0DA1                     	;# 
  2641  0DA1                     	;# 
  2642  0DA2                     	;# 
  2643  0DA3                     	;# 
  2644  0DA4                     	;# 
  2645  0DA4                     	;# 
  2646  0DA5                     	;# 
  2647  0DA6                     	;# 
  2648  0DA7                     	;# 
  2649  0DA7                     	;# 
  2650  0DA8                     	;# 
  2651  0DA9                     	;# 
  2652  0DAA                     	;# 
  2653  0DAB                     	;# 
  2654  0DAC                     	;# 
  2655  0DAD                     	;# 
  2656  0DAE                     	;# 
  2657  0DAF                     	;# 
  2658  0E0F                     	;# 
  2659  0E10                     	;# 
  2660  0E11                     	;# 
  2661  0E12                     	;# 
  2662  0E13                     	;# 
  2663  0E14                     	;# 
  2664  0E15                     	;# 
  2665  0E16                     	;# 
  2666  0E17                     	;# 
  2667  0E18                     	;# 
  2668  0E19                     	;# 
  2669  0E1A                     	;# 
  2670  0E1B                     	;# 
  2671  0E1C                     	;# 
  2672  0E1D                     	;# 
  2673  0E1E                     	;# 
  2674  0E1F                     	;# 
  2675  0E20                     	;# 
  2676  0E21                     	;# 
  2677  0E22                     	;# 
  2678  0E23                     	;# 
  2679  0E24                     	;# 
  2680  0E25                     	;# 
  2681  0E26                     	;# 
  2682  0E27                     	;# 
  2683  0E28                     	;# 
  2684  0E29                     	;# 
  2685  0E2A                     	;# 
  2686  0E2B                     	;# 
  2687  0E2C                     	;# 
  2688  0E2D                     	;# 
  2689  0E2E                     	;# 
  2690  0E90                     	;# 
  2691  0E91                     	;# 
  2692  0E92                     	;# 
  2693  0E94                     	;# 
  2694  0E95                     	;# 
  2695  0E9C                     	;# 
  2696  0E9D                     	;# 
  2697  0E9E                     	;# 
  2698  0E9F                     	;# 
  2699  0EA0                     	;# 
  2700  0EA1                     	;# 
  2701  0EA2                     	;# 
  2702  0EA3                     	;# 
  2703  0EA4                     	;# 
  2704  0EA5                     	;# 
  2705  0EA6                     	;# 
  2706  0EA7                     	;# 
  2707  0F0F                     	;# 
  2708  0F10                     	;# 
  2709  0F11                     	;# 
  2710  0F12                     	;# 
  2711  0F13                     	;# 
  2712  0F14                     	;# 
  2713  0F15                     	;# 
  2714  0F16                     	;# 
  2715  0F17                     	;# 
  2716  0F18                     	;# 
  2717  0F19                     	;# 
  2718  0F1A                     	;# 
  2719  0F1B                     	;# 
  2720  0F1C                     	;# 
  2721  0F1D                     	;# 
  2722  0F1E                     	;# 
  2723  0F1F                     	;# 
  2724  0F20                     	;# 
  2725  0F21                     	;# 
  2726  0F22                     	;# 
  2727  0F23                     	;# 
  2728  0F24                     	;# 
  2729  0F25                     	;# 
  2730  0F26                     	;# 
  2731  0F27                     	;# 
  2732  0F28                     	;# 
  2733  0F29                     	;# 
  2734  0F2A                     	;# 
  2735  0F2B                     	;# 
  2736  0F2C                     	;# 
  2737  0F2D                     	;# 
  2738  0F2E                     	;# 
  2739  0F2F                     	;# 
  2740  0F30                     	;# 
  2741  0F31                     	;# 
  2742  0F32                     	;# 
  2743  0F33                     	;# 
  2744  0F34                     	;# 
  2745  0F35                     	;# 
  2746  0F36                     	;# 
  2747  0F37                     	;# 
  2748  0FE4                     	;# 
  2749  0FE5                     	;# 
  2750  0FE6                     	;# 
  2751  0FE7                     	;# 
  2752  0FE8                     	;# 
  2753  0FE9                     	;# 
  2754  0FEA                     	;# 
  2755  0FEB                     	;# 
  2756  0FED                     	;# 
  2757  0FEE                     	;# 
  2758  0FEF                     	;# 
  2759                           
  2760                           	psect	idataBANK1
  2761  0CA5                     __pidataBANK1:	
  2762                           
  2763                           ;initializer for stoa@F1139
  2764  0CA5  3428               	retlw	40
  2765  0CA6  346E               	retlw	110
  2766  0CA7  3475               	retlw	117
  2767  0CA8  346C               	retlw	108
  2768  0CA9  346C               	retlw	108
  2769  0CAA  3429               	retlw	41
  2770  0CAB  3400               	retlw	0
  2771                           
  2772                           	psect	idataBANK5
  2773  0E3C                     __pidataBANK5:	
  2774                           
  2775                           ;initializer for _setNavFlightMode
  2776  0E3C  34B5               	retlw	181
  2777  0E3D  3462               	retlw	98
  2778  0E3E  3406               	retlw	6
  2779  0E3F  3424               	retlw	36
  2780  0E40  3424               	retlw	36
  2781  0E41  3400               	retlw	0
  2782  0E42  34FF               	retlw	255
  2783  0E43  34FF               	retlw	255
  2784  0E44  3406               	retlw	6
  2785  0E45  3403               	retlw	3
  2786  0E46  3400               	retlw	0
  2787  0E47  3400               	retlw	0
  2788  0E48  3400               	retlw	0
  2789  0E49  3400               	retlw	0
  2790  0E4A  3410               	retlw	16
  2791  0E4B  3427               	retlw	39
  2792  0E4C  3400               	retlw	0
  2793  0E4D  3400               	retlw	0
  2794  0E4E  3405               	retlw	5
  2795  0E4F  3400               	retlw	0
  2796  0E50  34FA               	retlw	250
  2797  0E51  3400               	retlw	0
  2798  0E52  34FA               	retlw	250
  2799  0E53  3400               	retlw	0
  2800  0E54  3464               	retlw	100
  2801  0E55  3400               	retlw	0
  2802  0E56  342C               	retlw	44
  2803  0E57  3401               	retlw	1
  2804  0E58  3400               	retlw	0
  2805  0E59  3400               	retlw	0
  2806  0E5A  3400               	retlw	0
  2807  0E5B  3400               	retlw	0
  2808  0E5C  3400               	retlw	0
  2809  0E5D  3400               	retlw	0
  2810  0E5E  3400               	retlw	0
  2811  0E5F  3400               	retlw	0
  2812  0E60  3400               	retlw	0
  2813  0E61  3400               	retlw	0
  2814  0E62  3400               	retlw	0
  2815  0E63  3400               	retlw	0
  2816  0E64  3400               	retlw	0
  2817  0E65  3400               	retlw	0
  2818  0E66  3416               	retlw	22
  2819  0E67  34DC               	retlw	220
  2820                           
  2821                           	psect	stringtext1
  2822  10C0                     __pstringtext1:	
  2823  10C0                     _DELAY_MULT:	
  2824  10C0  34E8               	retlw	232
  2825  10C1  3403               	retlw	3
  2826  10C2                     __end_of_DELAY_MULT:	
  2827                           
  2828                           	psect	stringtext2
  2829  10C2                     __pstringtext2:	
  2830  10C2                     _BAUD_RATE:	
  2831  10C2  3432               	retlw	50
  2832  10C3  3400               	retlw	0
  2833  10C4                     __end_of_BAUD_RATE:	
  2834                           
  2835                           	psect	stringtext3
  2836  10C4                     __pstringtext3:	
  2837  10C4                     _MESSAGE_INTERVAL:	
  2838  10C4  3405               	retlw	5
  2839  10C5  3400               	retlw	0
  2840  10C6                     __end_of_MESSAGE_INTERVAL:	
  2841                           
  2842                           	psect	nvBANK1
  2843  00EC                     __pnvBANK1:	
  2844  00EC                     _TMR0_InterruptHandler:	
  2845  00EC                     	ds	2
  2846  00EE                     _timer0ReloadVal:	
  2847  00EE                     	ds	1
  2848  0015                     _TMR0	set	21
  2849  000B                     _INTCONbits	set	11
  2850  0010                     _PIR1bits	set	16
  2851  0095                     _OPTION_REG	set	149
  2852  0095                     _OPTION_REGbits	set	149
  2853  008E                     _TRISC	set	142
  2854  008D                     _TRISB	set	141
  2855  008C                     _TRISA	set	140
  2856  0098                     _OSCTUNE	set	152
  2857  0099                     _OSCCON	set	153
  2858  010E                     _LATCbits	set	270
  2859  010C                     _LATAbits	set	268
  2860  010E                     _LATC	set	270
  2861  010D                     _LATB	set	269
  2862  010C                     _LATA	set	268
  2863  0116                     _BORCON	set	278
  2864  019A                     _TX1REG	set	410
  2865  0199                     _RC1REG	set	409
  2866  019D                     _RC1STAbits	set	413
  2867  019E                     _TX1STAbits	set	414
  2868  019C                     _SPBRGH	set	412
  2869  019B                     _SPBRGL	set	411
  2870  019E                     _TX1STA	set	414
  2871  019D                     _RC1STA	set	413
  2872  019F                     _BAUD1CON	set	415
  2873  018C                     _ANSELA	set	396
  2874  018D                     _ANSELB	set	397
  2875  018E                     _ANSELC	set	398
  2876  020E                     _WPUC	set	526
  2877  020C                     _WPUA	set	524
  2878  020D                     _WPUB	set	525
  2879  028E                     _ODCONC	set	654
  2880  028D                     _ODCONB	set	653
  2881  028C                     _ODCONA	set	652
  2882  030E                     _SLRCONC	set	782
  2883  030D                     _SLRCONB	set	781
  2884  030C                     _SLRCONA	set	780
  2885  0E24                     _RXPPS	set	3620
  2886  0E9F                     _RB7PPS	set	3743
  2887                           
  2888                           	psect	stringtext4
  2889  1000                     __pstringtext4:	
  2890  1000                     STR_2:	
  2891  1000  3424               	retlw	36	;'$'
  2892  1001  3450               	retlw	80	;'P'
  2893  1002  3455               	retlw	85	;'U'
  2894  1003  3442               	retlw	66	;'B'
  2895  1004  3458               	retlw	88	;'X'
  2896  1005  342C               	retlw	44	;','
  2897  1006  3434               	retlw	52	;'4'
  2898  1007  3430               	retlw	48	;'0'
  2899  1008  342C               	retlw	44	;','
  2900  1009  3447               	retlw	71	;'G'
  2901  100A  3447               	retlw	71	;'G'
  2902  100B  3441               	retlw	65	;'A'
  2903  100C  342C               	retlw	44	;','
  2904  100D  3430               	retlw	48	;'0'
  2905  100E  342C               	retlw	44	;','
  2906  100F  3430               	retlw	48	;'0'
  2907  1010  342C               	retlw	44	;','
  2908  1011  3430               	retlw	48	;'0'
  2909  1012  342C               	retlw	44	;','
  2910  1013  3430               	retlw	48	;'0'
  2911  1014  342A               	retlw	42	;'*'
  2912  1015  3434               	retlw	52	;'4'
  2913  1016  3434               	retlw	52	;'4'
  2914  1017  340D               	retlw	13
  2915  1018  340A               	retlw	10
  2916  1019  3400               	retlw	0
  2917                           
  2918                           	psect	stringtext5
  2919  101A                     __pstringtext5:	
  2920  101A                     STR_6:	
  2921  101A  3424               	retlw	36	;'$'
  2922  101B  3450               	retlw	80	;'P'
  2923  101C  3455               	retlw	85	;'U'
  2924  101D  3442               	retlw	66	;'B'
  2925  101E  3458               	retlw	88	;'X'
  2926  101F  342C               	retlw	44	;','
  2927  1020  3434               	retlw	52	;'4'
  2928  1021  3430               	retlw	48	;'0'
  2929  1022  342C               	retlw	44	;','
  2930  1023  3452               	retlw	82	;'R'
  2931  1024  344D               	retlw	77	;'M'
  2932  1025  3443               	retlw	67	;'C'
  2933  1026  342C               	retlw	44	;','
  2934  1027  3430               	retlw	48	;'0'
  2935  1028  342C               	retlw	44	;','
  2936  1029  3430               	retlw	48	;'0'
  2937  102A  342C               	retlw	44	;','
  2938  102B  3430               	retlw	48	;'0'
  2939  102C  342C               	retlw	44	;','
  2940  102D  3430               	retlw	48	;'0'
  2941  102E  342A               	retlw	42	;'*'
  2942  102F  3434               	retlw	52	;'4'
  2943  1030  3437               	retlw	55	;'7'
  2944  1031  340D               	retlw	13
  2945  1032  340A               	retlw	10
  2946  1033  3400               	retlw	0
  2947                           
  2948                           	psect	stringtext6
  2949  1034                     __pstringtext6:	
  2950  1034                     STR_4:	
  2951  1034  3424               	retlw	36	;'$'
  2952  1035  3450               	retlw	80	;'P'
  2953  1036  3455               	retlw	85	;'U'
  2954  1037  3442               	retlw	66	;'B'
  2955  1038  3458               	retlw	88	;'X'
  2956  1039  342C               	retlw	44	;','
  2957  103A  3434               	retlw	52	;'4'
  2958  103B  3430               	retlw	48	;'0'
  2959  103C  342C               	retlw	44	;','
  2960  103D  3447               	retlw	71	;'G'
  2961  103E  3453               	retlw	83	;'S'
  2962  103F  3456               	retlw	86	;'V'
  2963  1040  342C               	retlw	44	;','
  2964  1041  3430               	retlw	48	;'0'
  2965  1042  342C               	retlw	44	;','
  2966  1043  3430               	retlw	48	;'0'
  2967  1044  342C               	retlw	44	;','
  2968  1045  3430               	retlw	48	;'0'
  2969  1046  342C               	retlw	44	;','
  2970  1047  3430               	retlw	48	;'0'
  2971  1048  342A               	retlw	42	;'*'
  2972  1049  3435               	retlw	53	;'5'
  2973  104A  3439               	retlw	57	;'9'
  2974  104B  340D               	retlw	13
  2975  104C  340A               	retlw	10
  2976  104D  3400               	retlw	0
  2977                           
  2978                           	psect	stringtext7
  2979  104E                     __pstringtext7:	
  2980  104E                     STR_1:	
  2981  104E  3424               	retlw	36	;'$'
  2982  104F  3450               	retlw	80	;'P'
  2983  1050  3455               	retlw	85	;'U'
  2984  1051  3442               	retlw	66	;'B'
  2985  1052  3458               	retlw	88	;'X'
  2986  1053  342C               	retlw	44	;','
  2987  1054  3434               	retlw	52	;'4'
  2988  1055  3430               	retlw	48	;'0'
  2989  1056  342C               	retlw	44	;','
  2990  1057  3447               	retlw	71	;'G'
  2991  1058  344C               	retlw	76	;'L'
  2992  1059  344C               	retlw	76	;'L'
  2993  105A  342C               	retlw	44	;','
  2994  105B  3430               	retlw	48	;'0'
  2995  105C  342C               	retlw	44	;','
  2996  105D  3430               	retlw	48	;'0'
  2997  105E  342C               	retlw	44	;','
  2998  105F  3430               	retlw	48	;'0'
  2999  1060  342C               	retlw	44	;','
  3000  1061  3430               	retlw	48	;'0'
  3001  1062  342A               	retlw	42	;'*'
  3002  1063  3435               	retlw	53	;'5'
  3003  1064  3443               	retlw	67	;'C'
  3004  1065  340D               	retlw	13
  3005  1066  340A               	retlw	10
  3006  1067  3400               	retlw	0
  3007                           
  3008                           	psect	stringtext8
  3009  1068                     __pstringtext8:	
  3010  1068                     STR_5:	
  3011  1068  3424               	retlw	36	;'$'
  3012  1069  3450               	retlw	80	;'P'
  3013  106A  3455               	retlw	85	;'U'
  3014  106B  3442               	retlw	66	;'B'
  3015  106C  3458               	retlw	88	;'X'
  3016  106D  342C               	retlw	44	;','
  3017  106E  3434               	retlw	52	;'4'
  3018  106F  3430               	retlw	48	;'0'
  3019  1070  342C               	retlw	44	;','
  3020  1071  3447               	retlw	71	;'G'
  3021  1072  3453               	retlw	83	;'S'
  3022  1073  3441               	retlw	65	;'A'
  3023  1074  342C               	retlw	44	;','
  3024  1075  3430               	retlw	48	;'0'
  3025  1076  342C               	retlw	44	;','
  3026  1077  3430               	retlw	48	;'0'
  3027  1078  342C               	retlw	44	;','
  3028  1079  3430               	retlw	48	;'0'
  3029  107A  342C               	retlw	44	;','
  3030  107B  3430               	retlw	48	;'0'
  3031  107C  342A               	retlw	42	;'*'
  3032  107D  3434               	retlw	52	;'4'
  3033  107E  3445               	retlw	69	;'E'
  3034  107F  340D               	retlw	13
  3035  1080  340A               	retlw	10
  3036  1081  3400               	retlw	0
  3037                           
  3038                           	psect	stringtext9
  3039  1082                     __pstringtext9:	
  3040  1082                     STR_3:	
  3041  1082  3424               	retlw	36	;'$'
  3042  1083  3450               	retlw	80	;'P'
  3043  1084  3455               	retlw	85	;'U'
  3044  1085  3442               	retlw	66	;'B'
  3045  1086  3458               	retlw	88	;'X'
  3046  1087  342C               	retlw	44	;','
  3047  1088  3434               	retlw	52	;'4'
  3048  1089  3430               	retlw	48	;'0'
  3049  108A  342C               	retlw	44	;','
  3050  108B  3456               	retlw	86	;'V'
  3051  108C  3454               	retlw	84	;'T'
  3052  108D  3447               	retlw	71	;'G'
  3053  108E  342C               	retlw	44	;','
  3054  108F  3430               	retlw	48	;'0'
  3055  1090  342C               	retlw	44	;','
  3056  1091  3430               	retlw	48	;'0'
  3057  1092  342C               	retlw	44	;','
  3058  1093  3430               	retlw	48	;'0'
  3059  1094  342C               	retlw	44	;','
  3060  1095  3430               	retlw	48	;'0'
  3061  1096  342A               	retlw	42	;'*'
  3062  1097  3435               	retlw	53	;'5'
  3063  1098  3445               	retlw	69	;'E'
  3064  1099  340D               	retlw	13
  3065  109A  340A               	retlw	10
  3066  109B  3400               	retlw	0
  3067                           
  3068                           	psect	stringtext10
  3069  109C                     __pstringtext10:	
  3070  109C                     STR_7:	
  3071  109C  3424               	retlw	36	;'$'
  3072  109D  3424               	retlw	36	;'$'
  3073  109E  3448               	retlw	72	;'H'
  3074  109F  3441               	retlw	65	;'A'
  3075  10A0  3442               	retlw	66	;'B'
  3076  10A1  346E               	retlw	110	;'n'
  3077  10A2  346F               	retlw	111	;'o'
  3078  10A3  3476               	retlw	118	;'v'
  3079  10A4  3461               	retlw	97	;'a'
  3080  10A5  342C               	retlw	44	;','
  3081  10A6  3425               	retlw	37	;'%'
  3082  10A7  3464               	retlw	100	;'d'
  3083  10A8  342C               	retlw	44	;','
  3084  10A9  3425               	retlw	37	;'%'
  3085  10AA  3473               	retlw	115	;'s'
  3086  10AB  342C               	retlw	44	;','
  3087  10AC  3425               	retlw	37	;'%'
  3088  10AD  3473               	retlw	115	;'s'
  3089  10AE  342C               	retlw	44	;','
  3090  10AF  3425               	retlw	37	;'%'
  3091  10B0  3473               	retlw	115	;'s'
  3092  10B1  342C               	retlw	44	;','
  3093  10B2  3400               	retlw	0
  3094                           
  3095                           	psect	stringtext11
  3096  10B3                     __pstringtext11:	
  3097  10B3                     STR_8:	
  3098  10B3  3425               	retlw	37	;'%'
  3099  10B4  3473               	retlw	115	;'s'
  3100  10B5  342C               	retlw	44	;','
  3101  10B6  3425               	retlw	37	;'%'
  3102  10B7  3473               	retlw	115	;'s'
  3103  10B8  342C               	retlw	44	;','
  3104  10B9  3425               	retlw	37	;'%'
  3105  10BA  3473               	retlw	115	;'s'
  3106  10BB  342C               	retlw	44	;','
  3107  10BC  3425               	retlw	37	;'%'
  3108  10BD  3473               	retlw	115	;'s'
  3109  10BE  342A               	retlw	42	;'*'
  3110  10BF  3400               	retlw	0
  3111                           
  3112                           	psect	stringtext12
  3113  0000                     __pstringtext12:	
  3114                           
  3115                           ; #config settings
  3116  0000                     
  3117                           	psect	cinit
  3118  000F                     start_initialization:	
  3119  000F                     __initialization:	
  3120                           
  3121                           ; Initialize objects allocated to BANK1
  3122  000F  30A5               	movlw	low __pidataBANK1
  3123  0010  0084               	movwf	4
  3124  0011  308C               	movlw	(high __pidataBANK1)| (0+128)
  3125  0012  0085               	movwf	5
  3126  0013  30E5               	movlw	low __pdataBANK1
  3127  0014  0086               	movwf	6
  3128  0015  3000               	movlw	high __pdataBANK1
  3129  0016  0087               	movwf	7
  3130  0017  3007               	movlw	7
  3131  0018  318C  2498  3180   	fcall	init_ram
  3132                           
  3133                           ; Initialize objects allocated to BANK5
  3134  001B  303C               	movlw	low __pidataBANK5
  3135  001C  0084               	movwf	4
  3136  001D  308E               	movlw	(high __pidataBANK5)| (0+128)
  3137  001E  0085               	movwf	5
  3138  001F  30A0               	movlw	low __pdataBANK5
  3139  0020  0086               	movwf	6
  3140  0021  3002               	movlw	high __pdataBANK5
  3141  0022  0087               	movwf	7
  3142  0023  302C               	movlw	44
  3143  0024  318C  2498  3180   	fcall	init_ram
  3144                           
  3145                           ; Clear objects allocated to BANK1
  3146  0027  30A0               	movlw	low __pbssBANK1
  3147  0028  0084               	movwf	4
  3148  0029  3000               	movlw	high __pbssBANK1
  3149  002A  0085               	movwf	5
  3150  002B  302B               	movlw	43
  3151  002C  318C  2492  3180   	fcall	clear_ram0
  3152                           
  3153                           ; Clear objects allocated to BANK3
  3154  002F  30E6               	movlw	low __pbssBANK3
  3155  0030  0084               	movwf	4
  3156  0031  3001               	movlw	high __pbssBANK3
  3157  0032  0085               	movwf	5
  3158  0033  300A               	movlw	10
  3159  0034  318C  2492  3180   	fcall	clear_ram0
  3160                           
  3161                           ; Clear objects allocated to BANK4
  3162  0037  3020               	movlw	low __pbssBANK4
  3163  0038  0084               	movwf	4
  3164  0039  3002               	movlw	high __pbssBANK4
  3165  003A  0085               	movwf	5
  3166  003B  304C               	movlw	76
  3167  003C  318C  2492         	fcall	clear_ram0
  3168  003E                     end_of_initialization:	
  3169                           ;End of C runtime variable initialization code
  3170                           
  3171  003E                     __end_of__initialization:	
  3172  003E  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3173  003F  0020               	movlb	0
  3174  0040  3186  2EE4         	ljmp	_main	;jump to C main() function
  3175                           
  3176                           	psect	bssBANK1
  3177  00A0                     __pbssBANK1:	
  3178  00A0                     _gps_nav_status:	
  3179  00A0                     	ds	4
  3180  00A4                     _ticks:	
  3181  00A4                     	ds	4
  3182  00A8                     _nout:	
  3183  00A8                     	ds	2
  3184  00AA                     _width:	
  3185  00AA                     	ds	2
  3186  00AC                     _prec:	
  3187  00AC                     	ds	2
  3188  00AE                     _flags:	
  3189  00AE                     	ds	2
  3190  00B0                     _gps_configured:	
  3191  00B0                     	ds	1
  3192  00B1                     _gps_time:	
  3193  00B1                     	ds	10
  3194  00BB                     _gps_vertical_velocity:	
  3195  00BB                     	ds	8
  3196  00C3                     _gps_course_over_ground:	
  3197  00C3                     	ds	8
  3198                           
  3199                           	psect	dataBANK1
  3200  00E5                     __pdataBANK1:	
  3201  00E5                     stoa@F1139:	
  3202  00E5                     	ds	7
  3203                           
  3204                           	psect	bssBANK3
  3205  01E6                     __pbssBANK3:	
  3206  01E6                     main@F10217:	
  3207  01E6                     	ds	2
  3208  01E8                     _gps_speed_over_ground:	
  3209  01E8                     	ds	8
  3210                           
  3211                           	psect	bssBANK4
  3212  0220                     __pbssBANK4:	
  3213  0220                     _dbuf:	
  3214  0220                     	ds	32
  3215  0240                     _gps_longitude:	
  3216  0240                     	ds	16
  3217  0250                     _gps_latitude:	
  3218  0250                     	ds	16
  3219  0260                     _gps_altitude:	
  3220  0260                     	ds	12
  3221                           
  3222                           	psect	dataBANK5
  3223  02A0                     __pdataBANK5:	
  3224  02A0                     _setNavFlightMode:	
  3225  02A0                     	ds	44
  3226                           
  3227                           	psect	inittext
  3228  0C98                     init_ram:	
  3229  0C98  00FE               	movwf	126
  3230  0C99                     initloop:	
  3231  0C99  0012               	moviw fsr0++
  3232  0C9A  001E               	movwi fsr1++
  3233  0C9B  0BFE               	decfsz	126,f
  3234  0C9C  2C99               	goto	initloop
  3235  0C9D  3400               	retlw	0
  3236                           
  3237                           	psect	clrtext
  3238  0C92                     clear_ram0:	
  3239                           ;	Called with FSR0 containing the base address, and
  3240                           ;	WREG with the size to clear
  3241                           
  3242  0C92  0064               	clrwdt	;clear the watchdog before getting into this loop
  3243  0C93                     clrloop0:	
  3244  0C93  0180               	clrf	0	;clear RAM location pointed to by FSR
  3245  0C94  3101               	addfsr 0,1
  3246  0C95  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3247  0C96  2C93               	goto	clrloop0	;have we reached the end yet?
  3248  0C97  3400               	retlw	0	;all done for this memory range, return
  3249                           
  3250                           	psect	cstackBANK3
  3251  01A0                     __pcstackBANK3:	
  3252  01A0                     main@message_start:	
  3253                           
  3254                           ; 70 bytes @ 0x0
  3255  01A0                     	ds	70
  3256                           
  3257                           	psect	cstackBANK2
  3258  0120                     __pcstackBANK2:	
  3259  0120                     main@message_end:	
  3260                           
  3261                           ; 73 bytes @ 0x0
  3262  0120                     	ds	73
  3263                           
  3264                           	psect	cstackBANK1
  3265  00CB                     __pcstackBANK1:	
  3266  00CB                     ?_sprintf:	
  3267  00CB                     sprintf@fmt:	
  3268                           ; 2 bytes @ 0x0
  3269                           
  3270                           
  3271                           ; 2 bytes @ 0x0
  3272  00CB                     	ds	12
  3273  00D7                     sprintf@ap:	
  3274                           
  3275                           ; 1 bytes @ 0xC
  3276  00D7                     	ds	1
  3277  00D8                     sprintf@s:	
  3278                           
  3279                           ; 1 bytes @ 0xD
  3280  00D8                     	ds	1
  3281  00D9                     sprintf@f:	
  3282                           
  3283                           ; 5 bytes @ 0xE
  3284  00D9                     	ds	5
  3285  00DE                     ??_main:	
  3286                           
  3287                           ; 1 bytes @ 0x13
  3288  00DE                     	ds	1
  3289  00DF                     main@id:	
  3290                           
  3291                           ; 2 bytes @ 0x14
  3292  00DF                     	ds	2
  3293  00E1                     main@i:	
  3294                           
  3295                           ; 2 bytes @ 0x16
  3296  00E1                     	ds	2
  3297  00E3                     main@messages:	
  3298                           
  3299                           ; 2 bytes @ 0x18
  3300  00E3                     	ds	2
  3301                           
  3302                           	psect	cstackCOMMON
  3303  0070                     __pcstackCOMMON:	
  3304  0070                     ?_PIN_MANAGER_Initialize:	
  3305  0070                     ??_PIN_MANAGER_Initialize:	
  3306                           ; 1 bytes @ 0x0
  3307                           
  3308  0070                     ?_OSCILLATOR_Initialize:	
  3309                           ; 1 bytes @ 0x0
  3310                           
  3311  0070                     ??_OSCILLATOR_Initialize:	
  3312                           ; 1 bytes @ 0x0
  3313                           
  3314  0070                     ?_TMR0_Initialize:	
  3315                           ; 1 bytes @ 0x0
  3316                           
  3317  0070                     ?_EUSART_Initialize:	
  3318                           ; 1 bytes @ 0x0
  3319                           
  3320  0070                     ??_EUSART_Initialize:	
  3321                           ; 1 bytes @ 0x0
  3322                           
  3323  0070                     ?_TMR0_ISR:	
  3324                           ; 1 bytes @ 0x0
  3325                           
  3326  0070                     ??_TMR0_ISR:	
  3327                           ; 1 bytes @ 0x0
  3328                           
  3329  0070                     ?_TMR0_SetInterruptHandler:	
  3330                           ; 1 bytes @ 0x0
  3331                           
  3332  0070                     ?_TMR0_DefaultInterruptHandler:	
  3333                           ; 1 bytes @ 0x0
  3334                           
  3335  0070                     ??_TMR0_DefaultInterruptHandler:	
  3336                           ; 1 bytes @ 0x0
  3337                           
  3338  0070                     ?_SYSTEM_Initialize:	
  3339                           ; 1 bytes @ 0x0
  3340                           
  3341  0070                     ?_EUSART_is_rx_ready:	
  3342                           ; 1 bytes @ 0x0
  3343                           
  3344  0070                     ??_EUSART_is_rx_ready:	
  3345                           ; 1 bytes @ 0x0
  3346                           
  3347  0070                     ?_EUSART_Read:	
  3348                           ; 1 bytes @ 0x0
  3349                           
  3350  0070                     ??_EUSART_Read:	
  3351                           ; 1 bytes @ 0x0
  3352                           
  3353  0070                     ?_EUSART_Write:	
  3354                           ; 1 bytes @ 0x0
  3355                           
  3356  0070                     ??_EUSART_Write:	
  3357                           ; 1 bytes @ 0x0
  3358                           
  3359  0070                     ?_putch:	
  3360                           ; 1 bytes @ 0x0
  3361                           
  3362  0070                     ?_INTERRUPT_InterruptManager:	
  3363                           ; 1 bytes @ 0x0
  3364                           
  3365  0070                     ??_INTERRUPT_InterruptManager:	
  3366                           ; 1 bytes @ 0x0
  3367                           
  3368  0070                     ?_TimerISR:	
  3369                           ; 1 bytes @ 0x0
  3370                           
  3371  0070                     ??_TimerISR:	
  3372                           ; 1 bytes @ 0x0
  3373                           
  3374  0070                     ?_TransmitBit:	
  3375                           ; 1 bytes @ 0x0
  3376                           
  3377  0070                     ??_TransmitBit:	
  3378                           ; 1 bytes @ 0x0
  3379                           
  3380  0070                     ?_TransmitByte:	
  3381                           ; 1 bytes @ 0x0
  3382                           
  3383  0070                     ?_GPS_SendUBX:	
  3384                           ; 1 bytes @ 0x0
  3385                           
  3386  0070                     ?_GPS_HasAcknowledged:	
  3387                           ; 1 bytes @ 0x0
  3388                           
  3389  0070                     ??_GPS_HasAcknowledged:	
  3390                           ; 1 bytes @ 0x0
  3391                           
  3392  0070                     ?_SetupGPS:	
  3393                           ; 1 bytes @ 0x0
  3394                           
  3395  0070                     ?_GetNavData:	
  3396                           ; 1 bytes @ 0x0
  3397                           
  3398  0070                     ??_GetNavData:	
  3399                           ; 1 bytes @ 0x0
  3400                           
  3401  0070                     ?_main:	
  3402                           ; 1 bytes @ 0x0
  3403                           
  3404  0070                     ??___aodiv:	
  3405                           ; 1 bytes @ 0x0
  3406                           
  3407  0070                     ??___aomod:	
  3408                           ; 1 bytes @ 0x0
  3409                           
  3410  0070                     ?_strlen:	
  3411                           ; 1 bytes @ 0x0
  3412                           
  3413  0070                     ?_crc_append_byte:	
  3414                           ; 2 bytes @ 0x0
  3415                           
  3416  0070                     ?_GetLengthUBX:	
  3417                           ; 2 bytes @ 0x0
  3418                           
  3419  0070                     EUSART_Write@txData:	
  3420                           ; 2 bytes @ 0x0
  3421                           
  3422  0070                     crc_append_byte@crc:	
  3423                           ; 1 bytes @ 0x0
  3424                           
  3425  0070                     TMR0_SetInterruptHandler@InterruptHandler:	
  3426                           ; 2 bytes @ 0x0
  3427                           
  3428  0070                     strlen@s:	
  3429                           ; 2 bytes @ 0x0
  3430                           
  3431                           
  3432                           ; 2 bytes @ 0x0
  3433  0070                     	ds	1
  3434  0071                     ??_putch:	
  3435  0071                     putch@txData:	
  3436                           ; 1 bytes @ 0x1
  3437                           
  3438  0071                     TransmitBit@b:	
  3439                           ; 1 bytes @ 0x1
  3440                           
  3441  0071                     ___aodiv@counter:	
  3442                           ; 1 bytes @ 0x1
  3443                           
  3444  0071                     ___aomod@counter:	
  3445                           ; 1 bytes @ 0x1
  3446                           
  3447                           
  3448                           ; 1 bytes @ 0x1
  3449  0071                     	ds	1
  3450  0072                     ??_TMR0_Initialize:	
  3451  0072                     ??_strlen:	
  3452                           ; 1 bytes @ 0x2
  3453                           
  3454  0072                     ??_TMR0_SetInterruptHandler:	
  3455                           ; 1 bytes @ 0x2
  3456                           
  3457  0072                     ??_TransmitByte:	
  3458                           ; 1 bytes @ 0x2
  3459                           
  3460  0072                     ?_fputc:	
  3461                           ; 1 bytes @ 0x2
  3462                           
  3463  0072                     crc_append_byte@data:	
  3464                           ; 2 bytes @ 0x2
  3465                           
  3466  0072                     ___aodiv@sign:	
  3467                           ; 1 bytes @ 0x2
  3468                           
  3469  0072                     ___aomod@sign:	
  3470                           ; 1 bytes @ 0x2
  3471                           
  3472  0072                     fputc@c:	
  3473                           ; 1 bytes @ 0x2
  3474                           
  3475  0072                     strlen@a:	
  3476                           ; 2 bytes @ 0x2
  3477                           
  3478                           
  3479                           ; 2 bytes @ 0x2
  3480  0072                     	ds	1
  3481  0073                     ??_SYSTEM_Initialize:	
  3482  0073                     ??_crc_append_byte:	
  3483                           ; 1 bytes @ 0x3
  3484                           
  3485  0073                     ??_GetLengthUBX:	
  3486                           ; 1 bytes @ 0x3
  3487                           
  3488  0073                     ?_abs:	
  3489                           ; 1 bytes @ 0x3
  3490                           
  3491  0073                     TransmitByte@byte:	
  3492                           ; 2 bytes @ 0x3
  3493                           
  3494  0073                     GetLengthUBX@data:	
  3495                           ; 1 bytes @ 0x3
  3496                           
  3497  0073                     abs@a:	
  3498                           ; 1 bytes @ 0x3
  3499                           
  3500  0073                     ___aodiv@quotient:	
  3501                           ; 2 bytes @ 0x3
  3502                           
  3503                           
  3504                           ; 8 bytes @ 0x3
  3505  0073                     	ds	1
  3506  0074                     ??_GPS_SendUBX:	
  3507  0074                     fputc@fp:	
  3508                           ; 1 bytes @ 0x4
  3509                           
  3510  0074                     TransmitByte@i:	
  3511                           ; 1 bytes @ 0x4
  3512                           
  3513                           
  3514                           ; 2 bytes @ 0x4
  3515  0074                     	ds	1
  3516  0075                     ??_fputc:	
  3517  0075                     ??_abs:	
  3518                           ; 1 bytes @ 0x5
  3519                           
  3520  0075                     GPS_SendUBX@length:	
  3521                           ; 1 bytes @ 0x5
  3522                           
  3523                           
  3524                           ; 2 bytes @ 0x5
  3525  0075                     	ds	1
  3526  0076                     ?_TransmitString:	
  3527  0076                     ??_TransmitString:	
  3528                           ; 1 bytes @ 0x6
  3529                           
  3530  0076                     crc_append_byte@i:	
  3531                           ; 1 bytes @ 0x6
  3532                           
  3533                           
  3534                           ; 2 bytes @ 0x6
  3535  0076                     	ds	1
  3536  0077                     GPS_SendUBX@data:	
  3537  0077                     TransmitString@counti:	
  3538                           ; 1 bytes @ 0x7
  3539                           
  3540                           
  3541                           ; 2 bytes @ 0x7
  3542  0077                     	ds	1
  3543  0078                     ?_crc16:	
  3544  0078                     crc16@segments:	
  3545                           ; 2 bytes @ 0x8
  3546                           
  3547  0078                     GPS_SendUBX@i:	
  3548                           ; 2 bytes @ 0x8
  3549                           
  3550                           
  3551                           ; 2 bytes @ 0x8
  3552  0078                     	ds	1
  3553  0079                     TransmitString@i:	
  3554                           
  3555                           ; 2 bytes @ 0x9
  3556  0079                     	ds	1
  3557  007A                     ??_crc16:	
  3558  007A                     ?_fputs:	
  3559                           ; 1 bytes @ 0xA
  3560                           
  3561  007A                     ?_stoa:	
  3562                           ; 2 bytes @ 0xA
  3563                           
  3564  007A                     fputs@fp:	
  3565                           ; 2 bytes @ 0xA
  3566                           
  3567  007A                     stoa@s:	
  3568                           ; 1 bytes @ 0xA
  3569                           
  3570                           
  3571                           ; 2 bytes @ 0xA
  3572  007A                     	ds	1
  3573  007B                     ??_fputs:	
  3574  007B                     TransmitString@message:	
  3575                           ; 1 bytes @ 0xB
  3576                           
  3577                           
  3578                           ; 1 bytes @ 0xB
  3579  007B                     	ds	1
  3580  007C                     ??_AppendCRC:	
  3581                           
  3582                           ; 1 bytes @ 0xC
  3583  007C                     	ds	2
  3584                           
  3585                           	psect	cstackBANK0
  3586  0020                     __pcstackBANK0:	
  3587  0020                     ??_stoa:	
  3588  0020                     ?___aodiv:	
  3589                           ; 1 bytes @ 0x0
  3590                           
  3591  0020                     ?___aomod:	
  3592                           ; 8 bytes @ 0x0
  3593                           
  3594  0020                     crc16@data:	
  3595                           ; 8 bytes @ 0x0
  3596                           
  3597  0020                     fputs@c:	
  3598                           ; 1 bytes @ 0x0
  3599                           
  3600  0020                     GPS_HasAcknowledged@startTime:	
  3601                           ; 1 bytes @ 0x0
  3602                           
  3603  0020                     GetNavData@startTime:	
  3604                           ; 4 bytes @ 0x0
  3605                           
  3606  0020                     ___aodiv@divisor:	
  3607                           ; 4 bytes @ 0x0
  3608                           
  3609  0020                     ___aomod@divisor:	
  3610                           ; 8 bytes @ 0x0
  3611                           
  3612                           
  3613                           ; 8 bytes @ 0x0
  3614  0020                     	ds	1
  3615  0021                     crc16@c:	
  3616  0021                     fputs@i:	
  3617                           ; 1 bytes @ 0x1
  3618                           
  3619                           
  3620                           ; 2 bytes @ 0x1
  3621  0021                     	ds	1
  3622  0022                     crc16@string:	
  3623                           
  3624                           ; 1 bytes @ 0x2
  3625  0022                     	ds	1
  3626  0023                     fputs@s:	
  3627  0023                     crc16@i:	
  3628                           ; 1 bytes @ 0x3
  3629                           
  3630  0023                     stoa@nuls:	
  3631                           ; 2 bytes @ 0x3
  3632                           
  3633                           
  3634                           ; 7 bytes @ 0x3
  3635  0023                     	ds	1
  3636  0024                     ?_pad:	
  3637  0024                     GPS_HasAcknowledged@ackByte:	
  3638                           ; 2 bytes @ 0x4
  3639                           
  3640  0024                     pad@buf:	
  3641                           ; 1 bytes @ 0x4
  3642                           
  3643  0024                     _GetNavData$447:	
  3644                           ; 1 bytes @ 0x4
  3645                           
  3646                           
  3647                           ; 2 bytes @ 0x4
  3648  0024                     	ds	1
  3649  0025                     crc16@crc:	
  3650  0025                     pad@p:	
  3651                           ; 2 bytes @ 0x5
  3652                           
  3653  0025                     GPS_HasAcknowledged@ackPacket:	
  3654                           ; 2 bytes @ 0x5
  3655                           
  3656                           
  3657                           ; 10 bytes @ 0x5
  3658  0025                     	ds	1
  3659  0026                     _GetNavData$448:	
  3660                           
  3661                           ; 2 bytes @ 0x6
  3662  0026                     	ds	1
  3663  0027                     ??_pad:	
  3664  0027                     crc16@str:	
  3665                           ; 1 bytes @ 0x7
  3666                           
  3667                           
  3668                           ; 2 bytes @ 0x7
  3669  0027                     	ds	1
  3670  0028                     GetNavData@skip:	
  3671  0028                     pad@i:	
  3672                           ; 1 bytes @ 0x8
  3673                           
  3674  0028                     ___aodiv@dividend:	
  3675                           ; 2 bytes @ 0x8
  3676                           
  3677  0028                     ___aomod@dividend:	
  3678                           ; 8 bytes @ 0x8
  3679                           
  3680                           
  3681                           ; 8 bytes @ 0x8
  3682  0028                     	ds	1
  3683  0029                     ?_AppendCRC:	
  3684  0029                     AppendCRC@crc:	
  3685                           ; 1 bytes @ 0x9
  3686                           
  3687  0029                     GetNavData@dataFieldType:	
  3688                           ; 2 bytes @ 0x9
  3689                           
  3690                           
  3691                           ; 2 bytes @ 0x9
  3692  0029                     	ds	1
  3693  002A                     pad@w:	
  3694  002A                     stoa@i:	
  3695                           ; 2 bytes @ 0xA
  3696                           
  3697                           
  3698                           ; 2 bytes @ 0xA
  3699  002A                     	ds	1
  3700  002B                     AppendCRC@len:	
  3701  002B                     GetNavData@i:	
  3702                           ; 2 bytes @ 0xB
  3703                           
  3704                           
  3705                           ; 2 bytes @ 0xB
  3706  002B                     	ds	1
  3707  002C                     pad@fp:	
  3708  002C                     stoa@w:	
  3709                           ; 1 bytes @ 0xC
  3710                           
  3711                           
  3712                           ; 2 bytes @ 0xC
  3713  002C                     	ds	1
  3714  002D                     AppendCRC@data:	
  3715  002D                     GetNavData@success:	
  3716                           ; 1 bytes @ 0xD
  3717                           
  3718                           
  3719                           ; 1 bytes @ 0xD
  3720  002D                     	ds	1
  3721  002E                     stoa@fp:	
  3722  002E                     GetNavData@dataIndex:	
  3723                           ; 1 bytes @ 0xE
  3724                           
  3725                           
  3726                           ; 2 bytes @ 0xE
  3727  002E                     	ds	1
  3728  002F                     GPS_HasAcknowledged@data:	
  3729  002F                     stoa@cp:	
  3730                           ; 1 bytes @ 0xF
  3731                           
  3732                           
  3733                           ; 2 bytes @ 0xF
  3734  002F                     	ds	1
  3735  0030                     ?_dtoa:	
  3736  0030                     GPS_HasAcknowledged@ackByteID:	
  3737                           ; 2 bytes @ 0x10
  3738                           
  3739  0030                     GetNavData@byte:	
  3740                           ; 1 bytes @ 0x10
  3741                           
  3742  0030                     dtoa@d:	
  3743                           ; 1 bytes @ 0x10
  3744                           
  3745                           
  3746                           ; 8 bytes @ 0x10
  3747  0030                     	ds	1
  3748  0031                     GPS_HasAcknowledged@i:	
  3749  0031                     stoa@p:	
  3750                           ; 1 bytes @ 0x11
  3751                           
  3752                           
  3753                           ; 2 bytes @ 0x11
  3754  0031                     	ds	2
  3755  0033                     stoa@l:	
  3756                           
  3757                           ; 2 bytes @ 0x13
  3758  0033                     	ds	5
  3759  0038                     ??_dtoa:	
  3760                           
  3761                           ; 1 bytes @ 0x18
  3762  0038                     	ds	3
  3763  003B                     dtoa@fp:	
  3764                           
  3765                           ; 1 bytes @ 0x1B
  3766  003B                     	ds	1
  3767  003C                     _dtoa$592:	
  3768                           
  3769                           ; 2 bytes @ 0x1C
  3770  003C                     	ds	2
  3771  003E                     dtoa@p:	
  3772                           
  3773                           ; 2 bytes @ 0x1E
  3774  003E                     	ds	2
  3775  0040                     dtoa@w:	
  3776                           
  3777                           ; 2 bytes @ 0x20
  3778  0040                     	ds	2
  3779  0042                     dtoa@s:	
  3780                           
  3781                           ; 2 bytes @ 0x22
  3782  0042                     	ds	2
  3783  0044                     dtoa@n:	
  3784                           
  3785                           ; 8 bytes @ 0x24
  3786  0044                     	ds	8
  3787  004C                     dtoa@i:	
  3788                           
  3789                           ; 2 bytes @ 0x2C
  3790  004C                     	ds	2
  3791  004E                     ?_vfpfcnvrt:	
  3792  004E                     vfpfcnvrt@fmt:	
  3793                           ; 2 bytes @ 0x2E
  3794                           
  3795                           
  3796                           ; 1 bytes @ 0x2E
  3797  004E                     	ds	1
  3798  004F                     vfpfcnvrt@ap:	
  3799                           
  3800                           ; 1 bytes @ 0x2F
  3801  004F                     	ds	1
  3802  0050                     ??_vfpfcnvrt:	
  3803                           
  3804                           ; 1 bytes @ 0x30
  3805  0050                     	ds	5
  3806  0055                     vfpfcnvrt@ll:	
  3807                           
  3808                           ; 8 bytes @ 0x35
  3809  0055                     	ds	8
  3810  005D                     vfpfcnvrt@cp:	
  3811                           
  3812                           ; 2 bytes @ 0x3D
  3813  005D                     	ds	2
  3814  005F                     vfpfcnvrt@fp:	
  3815                           
  3816                           ; 1 bytes @ 0x3F
  3817  005F                     	ds	1
  3818  0060                     ?_vfprintf:	
  3819  0060                     vfprintf@fmt:	
  3820                           ; 2 bytes @ 0x40
  3821                           
  3822                           
  3823                           ; 2 bytes @ 0x40
  3824  0060                     	ds	2
  3825  0062                     vfprintf@ap:	
  3826                           
  3827                           ; 1 bytes @ 0x42
  3828  0062                     	ds	1
  3829  0063                     ??_vfprintf:	
  3830                           
  3831                           ; 1 bytes @ 0x43
  3832  0063                     	ds	2
  3833  0065                     vfprintf@fp:	
  3834                           
  3835                           ; 1 bytes @ 0x45
  3836  0065                     	ds	1
  3837  0066                     vfprintf@cfmt:	
  3838                           
  3839                           ; 2 bytes @ 0x46
  3840  0066                     	ds	2
  3841  0068                     ??_sprintf:	
  3842  0068                     ?_printf:	
  3843                           ; 1 bytes @ 0x48
  3844                           
  3845  0068                     printf@fmt:	
  3846                           ; 2 bytes @ 0x48
  3847                           
  3848                           
  3849                           ; 2 bytes @ 0x48
  3850  0068                     	ds	2
  3851  006A                     ??_printf:	
  3852                           
  3853                           ; 1 bytes @ 0x4A
  3854  006A                     	ds	3
  3855  006D                     printf@ap:	
  3856                           
  3857                           ; 1 bytes @ 0x4D
  3858  006D                     	ds	1
  3859  006E                     ??_SetupGPS:	
  3860                           
  3861                           ; 1 bytes @ 0x4E
  3862  006E                     	ds	2
  3863                           
  3864                           	psect	maintext
  3865  06E4                     __pmaintext:	
  3866 ;;
  3867 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  3868 ;;
  3869 ;; *************** function _main *****************
  3870 ;; Defined at:
  3871 ;;		line 534 in file "main.c"
  3872 ;; Parameters:    Size  Location     Type
  3873 ;;		None
  3874 ;; Auto vars:     Size  Location     Type
  3875 ;;  i               2   22[BANK1 ] int 
  3876 ;;  message_end    73    0[BANK2 ] unsigned char [73]
  3877 ;;  message_star   70    0[BANK3 ] unsigned char [70]
  3878 ;;  messages        2   24[BANK1 ] PTR unsigned char [2]
  3879 ;;		 -> main@message_end(73), main@message_start(70), NULL(0), 
  3880 ;;  id              2   20[BANK1 ] int 
  3881 ;; Return value:  Size  Location     Type
  3882 ;;                  1    wreg      void 
  3883 ;; Registers used:
  3884 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3885 ;; Tracked objects:
  3886 ;;		On entry : B1F/0
  3887 ;;		On exit  : 0/0
  3888 ;;		Unchanged: 0/0
  3889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3891 ;;      Locals:         0       0       6      73      70       0       0       0       0       0       0       0       
      +0       0
  3892 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3893 ;;      Totals:         0       0       7      73      70       0       0       0       0       0       0       0       
      +0       0
  3894 ;;Total ram usage:      150 bytes
  3895 ;; Hardware stack levels required when called:   13
  3896 ;; This function calls:
  3897 ;;		_AppendCRC
  3898 ;;		_GetNavData
  3899 ;;		_SYSTEM_Initialize
  3900 ;;		_SetupGPS
  3901 ;;		_TMR0_SetInterruptHandler
  3902 ;;		_TransmitString
  3903 ;;		_crc16
  3904 ;;		_sprintf
  3905 ;; This function is called by:
  3906 ;;		Startup code after reset
  3907 ;; This function uses a non-reentrant model
  3908 ;;
  3909                           
  3910                           
  3911                           ;psect for function _main
  3912  06E4                     _main:	
  3913                           
  3914                           ;main.c: 538:     SYSTEM_Initialize();
  3915                           
  3916                           ;incstack = 0
  3917                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3918  06E4  318C  24D3  3186   	fcall	_SYSTEM_Initialize
  3919                           
  3920                           ;main.c: 539:     (INTCONbits.GIE = 1);
  3921  06E7  178B               	bsf	11,7	;volatile
  3922                           
  3923                           ;main.c: 540:     TMR0_SetInterruptHandler(TimerISR);
  3924  06E8  30B4               	movlw	low _TimerISR
  3925  06E9  00F0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  3926  06EA  300C               	movlw	high _TimerISR
  3927  06EB  00F1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  3928  06EC  318C  248C  3186   	fcall	_TMR0_SetInterruptHandler
  3929                           
  3930                           ;main.c: 543:     SetupGPS();
  3931  06EF  318F  27AC  3186   	fcall	_SetupGPS
  3932                           
  3933                           ;main.c: 546:     char message_start[70];;main.c: 547:     char message_end[70 + 3];;mai
      +                          n.c: 549:     char* messages[2] = {message_start, message_end};
  3934  06F2  0021               	movlb	1	; select bank1
  3935  06F3  01E3               	clrf	main@messages^(0+128)
  3936  06F4  01E4               	clrf	(main@messages+1)^(0+128)
  3937  06F5  30A0               	movlw	(low (main@message_start| (0+256)))& (0+255)
  3938  06F6  00DE               	movwf	??_main^(0+128)
  3939  06F7  085E               	movf	??_main^(0+128),w
  3940  06F8  00E3               	movwf	main@messages^(0+128)
  3941  06F9  3020               	movlw	(low (main@message_end| (0+256)))& (0+255)
  3942  06FA  00DE               	movwf	??_main^(0+128)
  3943  06FB  085E               	movf	??_main^(0+128),w
  3944  06FC  00E4               	movwf	(low ((main@messages| 0+1)))^(0+128)
  3945                           
  3946                           ;main.c: 551:     int id = 0;
  3947  06FD  01DF               	clrf	main@id^(0+128)
  3948  06FE  01E0               	clrf	(main@id+1)^(0+128)
  3949  06FF                     l3216:	
  3950                           
  3951                           ;main.c: 553:     {;main.c: 554:         GetNavData();
  3952  06FF  3181  2193  3186   	fcall	_GetNavData
  3953                           
  3954                           ;main.c: 555:         sprintf(messages[0], "$$HABnova,%d,%s,%s,%s,",
  3955  0702  309C               	movlw	low (STR_7| (0+32768))
  3956  0703  0021               	movlb	1	; select bank1
  3957  0704  00CB               	movwf	sprintf@fmt^(0+128)
  3958  0705  3090               	movlw	high (STR_7| (0+32768))
  3959  0706  00CC               	movwf	(sprintf@fmt^(0+128)+1)
  3960  0707  0860               	movf	(main@id+1)^(0+128),w
  3961  0708  00CE               	movwf	((?_sprintf+1)^(0+128)+2)
  3962  0709  085F               	movf	main@id^(0+128),w
  3963  070A  00CD               	movwf	(?_sprintf^(0+128)+2)
  3964  070B  30B1               	movlw	low _gps_time
  3965  070C  00CF               	movwf	(low ((?_sprintf| 0+4)))^(0+128)
  3966  070D  3000               	movlw	high _gps_time
  3967  070E  00D0               	movwf	((low ((?_sprintf| 0+4))+1))^(0+128)
  3968  070F  3050               	movlw	low _gps_latitude
  3969  0710  00D1               	movwf	(low ((?_sprintf| 0+6)))^(0+128)
  3970  0711  3002               	movlw	high _gps_latitude
  3971  0712  00D2               	movwf	((low ((?_sprintf| 0+6))+1))^(0+128)
  3972  0713  3040               	movlw	low _gps_longitude
  3973  0714  00D3               	movwf	(low ((?_sprintf| 0+8)))^(0+128)
  3974  0715  3002               	movlw	high _gps_longitude
  3975  0716  00D4               	movwf	((low ((?_sprintf| 0+8))+1))^(0+128)
  3976  0717  0863               	movf	main@messages^(0+128),w
  3977  0718  318D  25E5  3186   	fcall	_sprintf
  3978                           
  3979                           ;main.c: 558:         sprintf(messages[1], "%s,%s,%s,%s*",
  3980  071B  30B3               	movlw	low (STR_8| (0+32768))
  3981  071C  0021               	movlb	1	; select bank1
  3982  071D  00CB               	movwf	sprintf@fmt^(0+128)
  3983  071E  3090               	movlw	high (STR_8| (0+32768))
  3984  071F  00CC               	movwf	(sprintf@fmt^(0+128)+1)
  3985  0720  3060               	movlw	low _gps_altitude
  3986  0721  00CD               	movwf	(low ((?_sprintf| 0+2)))^(0+128)
  3987  0722  3002               	movlw	high _gps_altitude
  3988  0723  00CE               	movwf	((low ((?_sprintf| 0+2))+1))^(0+128)
  3989  0724  30E8               	movlw	low _gps_speed_over_ground
  3990  0725  00CF               	movwf	(low ((?_sprintf| 0+4)))^(0+128)
  3991  0726  3001               	movlw	high _gps_speed_over_ground
  3992  0727  00D0               	movwf	((low ((?_sprintf| 0+4))+1))^(0+128)
  3993  0728  30C3               	movlw	low _gps_course_over_ground
  3994  0729  00D1               	movwf	(low ((?_sprintf| 0+6)))^(0+128)
  3995  072A  3000               	movlw	high _gps_course_over_ground
  3996  072B  00D2               	movwf	((low ((?_sprintf| 0+6))+1))^(0+128)
  3997  072C  30BB               	movlw	low _gps_vertical_velocity
  3998  072D  00D3               	movwf	(low ((?_sprintf| 0+8)))^(0+128)
  3999  072E  3000               	movlw	high _gps_vertical_velocity
  4000  072F  00D4               	movwf	((low ((?_sprintf| 0+8))+1))^(0+128)
  4001  0730  0864               	movf	(low ((main@messages| 0+1)))^(0+128),w
  4002  0731  318D  25E5  3186   	fcall	_sprintf
  4003                           
  4004                           ;main.c: 562:         id++;
  4005  0734  3001               	movlw	1
  4006  0735  0021               	movlb	1	; select bank1
  4007  0736  07DF               	addwf	main@id^(0+128),f
  4008  0737  3000               	movlw	0
  4009  0738  3DE0               	addwfc	(main@id+1)^(0+128),f
  4010                           
  4011                           ;main.c: 563:         AppendCRC(messages[1], crc16(messages, 2));
  4012  0739  3002               	movlw	2
  4013  073A  00F8               	movwf	crc16@segments
  4014  073B  3000               	movlw	0
  4015  073C  00F9               	movwf	crc16@segments+1
  4016  073D  30E3               	movlw	(low (main@messages| 0))& (0+255)
  4017  073E  3187  2771  3186   	fcall	_crc16
  4018  0741  0879               	movf	?_crc16+1,w
  4019  0742  0020               	movlb	0	; select bank0
  4020  0743  00AA               	movwf	AppendCRC@crc+1
  4021  0744  0878               	movf	?_crc16,w
  4022  0745  00A9               	movwf	AppendCRC@crc
  4023  0746  0021               	movlb	1	; select bank1
  4024  0747  0864               	movf	(low ((main@messages| 0+1)))^(0+128),w
  4025  0748  318F  270C  3186   	fcall	_AppendCRC
  4026                           
  4027                           ;main.c: 565:         TransmitString(messages[0]);
  4028  074B  0021               	movlb	1	; select bank1
  4029  074C  0863               	movf	main@messages^(0+128),w
  4030  074D  318E  2610  3186   	fcall	_TransmitString
  4031                           
  4032                           ;main.c: 566:         TransmitString(messages[1]);
  4033  0750  0021               	movlb	1	; select bank1
  4034  0751  0864               	movf	(low ((main@messages| 0+1)))^(0+128),w
  4035  0752  318E  2610  3186   	fcall	_TransmitString
  4036                           
  4037                           ;main.c: 568:         for (int i = 0; i < DELAY_MULT; i++)
  4038  0755  0021               	movlb	1	; select bank1
  4039  0756  01E1               	clrf	main@i^(0+128)
  4040  0757  01E2               	clrf	(main@i+1)^(0+128)
  4041  0758                     l3236:	
  4042                           
  4043                           ;main.c: 569:         {;main.c: 570:             _delay((unsigned long)((MESSAGE_INTERVA
      +                          L)*(4000000/4000.0)));
  4044  0758  3007               	movlw	7
  4045  0759  0021               	movlb	1	; select bank1
  4046  075A  00DE               	movwf	??_main^(0+128)
  4047  075B  307D               	movlw	125
  4048  075C                     u2977:	
  4049  075C  0B89               	decfsz	9,f
  4050  075D  2F5C               	goto	u2977
  4051  075E  0BDE               	decfsz	??_main^(0+128),f
  4052  075F  2F5C               	goto	u2977
  4053                           
  4054                           ;main.c: 571:         }
  4055  0760  3001               	movlw	1
  4056  0761  0021               	movlb	1	; select bank1
  4057  0762  07E1               	addwf	main@i^(0+128),f
  4058  0763  3000               	movlw	0
  4059  0764  3DE2               	addwfc	(main@i+1)^(0+128),f
  4060  0765  0862               	movf	(main@i+1)^(0+128),w
  4061  0766  3A80               	xorlw	128
  4062  0767  00DE               	movwf	??_main^(0+128)
  4063  0768  3083               	movlw	131
  4064  0769  025E               	subwf	??_main^(0+128),w
  4065  076A  1D03               	skipz
  4066  076B  2F6E               	goto	u2965
  4067  076C  30E8               	movlw	232
  4068  076D  0261               	subwf	main@i^(0+128),w
  4069  076E                     u2965:	
  4070  076E  1803               	btfsc	3,0
  4071  076F  2EFF               	goto	l3216
  4072  0770  2F58               	goto	l3236
  4073  0771                     __end_of_main:	
  4074                           
  4075                           	psect	text1
  4076  0DE5                     __ptext1:	
  4077 ;; *************** function _sprintf *****************
  4078 ;; Defined at:
  4079 ;;		line 9 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\nf_sprintf.c"
  4080 ;; Parameters:    Size  Location     Type
  4081 ;;  s               1    wreg     PTR unsigned char 
  4082 ;;		 -> main@message_end(73), main@message_start(70), NULL(0), 
  4083 ;;  fmt             2    0[BANK1 ] PTR const unsigned char 
  4084 ;;		 -> STR_8(13), STR_7(23), 
  4085 ;; Auto vars:     Size  Location     Type
  4086 ;;  s               1   13[BANK1 ] PTR unsigned char 
  4087 ;;		 -> main@message_end(73), main@message_start(70), NULL(0), 
  4088 ;;  f               5   14[BANK1 ] struct _IO_FILE
  4089 ;;  ret             2    0        int 
  4090 ;;  ap              1   12[BANK1 ] PTR void [1]
  4091 ;;		 -> ?_printf(2), ?_sprintf(2), 
  4092 ;; Return value:  Size  Location     Type
  4093 ;;                  2    0[BANK1 ] int 
  4094 ;; Registers used:
  4095 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4096 ;; Tracked objects:
  4097 ;;		On entry : 0/0
  4098 ;;		On exit  : 0/0
  4099 ;;		Unchanged: 0/0
  4100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4101 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
  4102 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
  4103 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4104 ;;      Totals:         0       1      19       0       0       0       0       0       0       0       0       0       
      +0       0
  4105 ;;Total ram usage:       20 bytes
  4106 ;; Hardware stack levels used:    1
  4107 ;; Hardware stack levels required when called:   11
  4108 ;; This function calls:
  4109 ;;		_vfprintf
  4110 ;; This function is called by:
  4111 ;;		_main
  4112 ;; This function uses a non-reentrant model
  4113 ;;
  4114                           
  4115                           
  4116                           ;psect for function _sprintf
  4117  0DE5                     _sprintf:	
  4118                           
  4119                           ;incstack = 0
  4120                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4121                           ;sprintf@s stored from wreg
  4122  0DE5  0021               	movlb	1	; select bank1
  4123  0DE6  00D8               	movwf	sprintf@s^(0+128)
  4124  0DE7  30CD               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  4125  0DE8  0020               	movlb	0	; select bank0
  4126  0DE9  00E8               	movwf	??_sprintf
  4127  0DEA  0868               	movf	??_sprintf,w
  4128  0DEB  0021               	movlb	1	; select bank1
  4129  0DEC  00D7               	movwf	sprintf@ap^(0+128)
  4130  0DED  0858               	movf	sprintf@s^(0+128),w
  4131  0DEE  0020               	movlb	0	; select bank0
  4132  0DEF  00E8               	movwf	??_sprintf
  4133  0DF0  0868               	movf	??_sprintf,w
  4134  0DF1  0021               	movlb	1	; select bank1
  4135  0DF2  00D9               	movwf	sprintf@f^(0+128)
  4136  0DF3  01DA               	clrf	(sprintf@f^(0+128)+1)
  4137  0DF4  01DB               	clrf	((sprintf@f+1)^(0+128)+1)
  4138  0DF5  01DC               	clrf	(sprintf@f^(0+128)+3)
  4139  0DF6  01DD               	clrf	((sprintf@f+1)^(0+128)+3)
  4140  0DF7  084C               	movf	(sprintf@fmt+1)^(0+128),w
  4141  0DF8  0020               	movlb	0	; select bank0
  4142  0DF9  00E1               	movwf	vfprintf@fmt+1
  4143  0DFA  0021               	movlb	1	; select bank1
  4144  0DFB  084B               	movf	sprintf@fmt^(0+128),w
  4145  0DFC  0020               	movlb	0	; select bank0
  4146  0DFD  00E0               	movwf	vfprintf@fmt
  4147  0DFE  30D7               	movlw	(low (sprintf@ap| 0))& (0+255)
  4148  0DFF  00E8               	movwf	??_sprintf
  4149  0E00  0868               	movf	??_sprintf,w
  4150  0E01  00E2               	movwf	vfprintf@ap
  4151  0E02  30D9               	movlw	(low (sprintf@f| 0))& (0+255)
  4152  0E03  3187  27D1         	fcall	_vfprintf
  4153  0E05  0021               	movlb	1	; select bank1
  4154  0E06  085A               	movf	(sprintf@f^(0+128)+1),w
  4155  0E07  0758               	addwf	sprintf@s^(0+128),w
  4156  0E08  0020               	movlb	0	; select bank0
  4157  0E09  00E8               	movwf	??_sprintf
  4158  0E0A  0868               	movf	??_sprintf,w
  4159  0E0B  0086               	movwf	6
  4160  0E0C  3001               	movlw	1	; select bank2/3
  4161  0E0D  0087               	movwf	7
  4162  0E0E  0181               	clrf	1
  4163  0E0F  0008               	return
  4164  0E10                     __end_of_sprintf:	
  4165                           
  4166                           	psect	text2
  4167  0771                     __ptext2:	
  4168 ;; *************** function _crc16 *****************
  4169 ;; Defined at:
  4170 ;;		line 79 in file "main.c"
  4171 ;; Parameters:    Size  Location     Type
  4172 ;;  data            1    wreg     PTR PTR unsigned char 
  4173 ;;		 -> main@messages(2), 
  4174 ;;  segments        2    8[COMMON] int 
  4175 ;; Auto vars:     Size  Location     Type
  4176 ;;  data            1    0[BANK0 ] PTR PTR unsigned char 
  4177 ;;		 -> main@messages(2), 
  4178 ;;  string          1    2[BANK0 ] PTR unsigned char 
  4179 ;;		 -> main@message_end(73), main@message_start(70), NULL(0), 
  4180 ;;  str             2    7[BANK0 ] int 
  4181 ;;  crc             2    5[BANK0 ] unsigned short 
  4182 ;;  i               2    3[BANK0 ] unsigned int 
  4183 ;;  c               1    1[BANK0 ] unsigned char 
  4184 ;; Return value:  Size  Location     Type
  4185 ;;                  2    8[COMMON] unsigned short 
  4186 ;; Registers used:
  4187 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4188 ;; Tracked objects:
  4189 ;;		On entry : 0/0
  4190 ;;		On exit  : 0/0
  4191 ;;		Unchanged: 0/0
  4192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4193 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4194 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4195 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4196 ;;      Totals:         4       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4197 ;;Total ram usage:       13 bytes
  4198 ;; Hardware stack levels used:    1
  4199 ;; Hardware stack levels required when called:    4
  4200 ;; This function calls:
  4201 ;;		_crc_append_byte
  4202 ;;		_strlen
  4203 ;; This function is called by:
  4204 ;;		_main
  4205 ;; This function uses a non-reentrant model
  4206 ;;
  4207                           
  4208                           
  4209                           ;psect for function _crc16
  4210  0771                     _crc16:	
  4211                           
  4212                           ;incstack = 0
  4213                           ; Regs used in _crc16: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4214                           ;crc16@data stored from wreg
  4215  0771  0020               	movlb	0	; select bank0
  4216  0772  00A0               	movwf	crc16@data
  4217                           
  4218                           ;main.c: 79: unsigned short crc16(char** data, int segments);main.c: 80: {;main.c: 81:  
      +                             size_t i;;main.c: 82:  uint16_t crc;;main.c: 83:  uint8_t c;;main.c: 85:  crc = 0xFFF
      +                          F;
  4219  0773  30FF               	movlw	255
  4220  0774  00A5               	movwf	crc16@crc
  4221  0775  30FF               	movlw	255
  4222  0776  00A6               	movwf	crc16@crc+1
  4223                           
  4224                           ;main.c: 87:     for (int str = 0; str < segments; str++)
  4225  0777  01A7               	clrf	crc16@str
  4226  0778  01A8               	clrf	crc16@str+1
  4227  0779                     l177:	
  4228  0779  0828               	movf	crc16@str+1,w
  4229  077A  3A80               	xorlw	128
  4230  077B  00FA               	movwf	??_crc16
  4231  077C  0879               	movf	crc16@segments+1,w
  4232  077D  3A80               	xorlw	128
  4233  077E  027A               	subwf	??_crc16,w
  4234  077F  1D03               	skipz
  4235  0780  2F83               	goto	u2825
  4236  0781  0878               	movf	crc16@segments,w
  4237  0782  0227               	subwf	crc16@str,w
  4238  0783                     u2825:	
  4239  0783  1803               	btfsc	3,0
  4240  0784  2FCB               	goto	l3038
  4241                           
  4242                           ;main.c: 88:     {;main.c: 89:         char* string = data[str];
  4243  0785  0020               	movlb	0	; select bank0
  4244  0786  0827               	movf	crc16@str,w
  4245  0787  0720               	addwf	crc16@data,w
  4246  0788  00FA               	movwf	??_crc16
  4247  0789  087A               	movf	??_crc16,w
  4248  078A  0086               	movwf	6
  4249  078B  0187               	clrf	7
  4250  078C  0801               	movf	1,w
  4251  078D  00FB               	movwf	??_crc16+1
  4252  078E  087B               	movf	??_crc16+1,w
  4253  078F  00A2               	movwf	crc16@string
  4254                           
  4255                           ;main.c: 91:         for (i = 2; i < strlen(string); i++)
  4256  0790  3002               	movlw	2
  4257  0791  00A3               	movwf	crc16@i
  4258  0792  3000               	movlw	0
  4259  0793  00A4               	movwf	crc16@i+1
  4260  0794                     l3034:	
  4261  0794  0822               	movf	crc16@string,w
  4262  0795  00F0               	movwf	strlen@s
  4263  0796  39FF               	andlw	255
  4264  0797  1D03               	skipz
  4265  0798  3001               	movlw	1
  4266  0799  00F1               	movwf	strlen@s+1
  4267  079A  318D  2528  3187   	fcall	_strlen
  4268  079D  0871               	movf	?_strlen+1,w
  4269  079E  0020               	movlb	0	; select bank0
  4270  079F  0224               	subwf	crc16@i+1,w
  4271  07A0  1D03               	skipz
  4272  07A1  2FA4               	goto	u2815
  4273  07A2  0870               	movf	?_strlen,w
  4274  07A3  0223               	subwf	crc16@i,w
  4275  07A4                     u2815:	
  4276  07A4  1803               	btfsc	3,0
  4277  07A5  2FC6               	goto	l3036
  4278                           
  4279                           ;main.c: 92:         {;main.c: 93:             c = string[i];
  4280  07A6  0823               	movf	crc16@i,w
  4281  07A7  0722               	addwf	crc16@string,w
  4282  07A8  00FA               	movwf	??_crc16
  4283  07A9  087A               	movf	??_crc16,w
  4284  07AA  0086               	movwf	6
  4285  07AB  3001               	movlw	1	; select bank2/3
  4286  07AC  0087               	movwf	7
  4287  07AD  0801               	movf	1,w
  4288  07AE  00FB               	movwf	??_crc16+1
  4289  07AF  087B               	movf	??_crc16+1,w
  4290  07B0  00A1               	movwf	crc16@c
  4291                           
  4292                           ;main.c: 94:             crc = crc_append_byte(crc, c);
  4293  07B1  0826               	movf	crc16@crc+1,w
  4294  07B2  00F1               	movwf	crc_append_byte@crc+1
  4295  07B3  0825               	movf	crc16@crc,w
  4296  07B4  00F0               	movwf	crc_append_byte@crc
  4297  07B5  0821               	movf	crc16@c,w
  4298  07B6  00FA               	movwf	??_crc16
  4299  07B7  087A               	movf	??_crc16,w
  4300  07B8  00F2               	movwf	crc_append_byte@data
  4301  07B9  318E  2695  3187   	fcall	_crc_append_byte
  4302  07BC  0871               	movf	?_crc_append_byte+1,w
  4303  07BD  0020               	movlb	0	; select bank0
  4304  07BE  00A6               	movwf	crc16@crc+1
  4305  07BF  0870               	movf	?_crc_append_byte,w
  4306  07C0  00A5               	movwf	crc16@crc
  4307                           
  4308                           ;main.c: 95:         }
  4309  07C1  3001               	movlw	1
  4310  07C2  07A3               	addwf	crc16@i,f
  4311  07C3  3000               	movlw	0
  4312  07C4  3DA4               	addwfc	crc16@i+1,f
  4313  07C5  2F94               	goto	l3034
  4314  07C6                     l3036:	
  4315                           
  4316                           ;main.c: 96:     }
  4317  07C6  3001               	movlw	1
  4318  07C7  07A7               	addwf	crc16@str,f
  4319  07C8  3000               	movlw	0
  4320  07C9  3DA8               	addwfc	crc16@str+1,f
  4321  07CA  2F79               	goto	l177
  4322  07CB                     l3038:	
  4323                           
  4324                           ;main.c: 97:  return crc;
  4325  07CB  0020               	movlb	0	; select bank0
  4326  07CC  0826               	movf	crc16@crc+1,w
  4327  07CD  00F9               	movwf	?_crc16+1
  4328  07CE  0825               	movf	crc16@crc,w
  4329  07CF  00F8               	movwf	?_crc16
  4330  07D0  0008               	return
  4331  07D1                     __end_of_crc16:	
  4332                           
  4333                           	psect	text3
  4334  0E95                     __ptext3:	
  4335 ;; *************** function _crc_append_byte *****************
  4336 ;; Defined at:
  4337 ;;		line 59 in file "main.c"
  4338 ;; Parameters:    Size  Location     Type
  4339 ;;  crc             2    0[COMMON] unsigned short 
  4340 ;;  data            1    2[COMMON] unsigned char 
  4341 ;; Auto vars:     Size  Location     Type
  4342 ;;  i               2    6[COMMON] int 
  4343 ;; Return value:  Size  Location     Type
  4344 ;;                  2    0[COMMON] unsigned short 
  4345 ;; Registers used:
  4346 ;;		wreg, status,2, status,0
  4347 ;; Tracked objects:
  4348 ;;		On entry : 0/0
  4349 ;;		On exit  : 0/0
  4350 ;;		Unchanged: 0/0
  4351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4352 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4353 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4354 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4355 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4356 ;;Total ram usage:        8 bytes
  4357 ;; Hardware stack levels used:    1
  4358 ;; Hardware stack levels required when called:    3
  4359 ;; This function calls:
  4360 ;;		Nothing
  4361 ;; This function is called by:
  4362 ;;		_crc16
  4363 ;; This function uses a non-reentrant model
  4364 ;;
  4365                           
  4366                           
  4367                           ;psect for function _crc_append_byte
  4368  0E95                     _crc_append_byte:	
  4369                           
  4370                           ;main.c: 59: unsigned short crc_append_byte(uint16_t crc, uint8_t data);main.c: 60: {;ma
      +                          in.c: 61:     int i;;main.c: 62:     crc = crc ^ ((uint16_t)data << 8);
  4371                           
  4372                           ;incstack = 0
  4373                           ; Regs used in _crc_append_byte: [wreg+status,2+status,0]
  4374  0E95  0872               	movf	crc_append_byte@data,w
  4375  0E96  00F3               	movwf	??_crc_append_byte
  4376  0E97  01F4               	clrf	??_crc_append_byte+1
  4377  0E98  0873               	movf	??_crc_append_byte,w
  4378  0E99  00F4               	movwf	??_crc_append_byte+1
  4379  0E9A  01F3               	clrf	??_crc_append_byte
  4380  0E9B  0870               	movf	crc_append_byte@crc,w
  4381  0E9C  0673               	xorwf	??_crc_append_byte,w
  4382  0E9D  00F0               	movwf	crc_append_byte@crc
  4383  0E9E  0871               	movf	crc_append_byte@crc+1,w
  4384  0E9F  0674               	xorwf	??_crc_append_byte+1,w
  4385  0EA0  00F1               	movwf	crc_append_byte@crc+1
  4386                           
  4387                           ;main.c: 63:     for (i = 0; i < 8; i++)
  4388  0EA1  01F6               	clrf	crc_append_byte@i
  4389  0EA2  01F7               	clrf	crc_append_byte@i+1
  4390  0EA3                     l170:	
  4391                           
  4392                           ;main.c: 64:     {;main.c: 65:         if (crc & 0x8000)
  4393  0EA3  1FF1               	btfss	crc_append_byte@crc+1,7
  4394  0EA4  2EB2               	goto	l2932
  4395                           
  4396                           ;main.c: 66:         {;main.c: 67:             crc = (crc << 1) ^ 0x1021;
  4397  0EA5  0871               	movf	crc_append_byte@crc+1,w
  4398  0EA6  00F4               	movwf	??_crc_append_byte+1
  4399  0EA7  0870               	movf	crc_append_byte@crc,w
  4400  0EA8  00F3               	movwf	??_crc_append_byte
  4401  0EA9  35F3               	lslf	??_crc_append_byte,f
  4402  0EAA  0DF4               	rlf	??_crc_append_byte+1,f
  4403  0EAB  3021               	movlw	33
  4404  0EAC  0673               	xorwf	??_crc_append_byte,w
  4405  0EAD  00F0               	movwf	crc_append_byte@crc
  4406  0EAE  3010               	movlw	16
  4407  0EAF  0674               	xorwf	??_crc_append_byte+1,w
  4408  0EB0  00F1               	movwf	crc_append_byte@crc+1
  4409                           
  4410                           ;main.c: 68:         }
  4411  0EB1  2EB7               	goto	l173
  4412  0EB2                     l2932:	
  4413                           
  4414                           ;main.c: 70:         {;main.c: 71:             crc <<= 1;
  4415  0EB2  3001               	movlw	1
  4416  0EB3                     u2695:	
  4417  0EB3  35F0               	lslf	crc_append_byte@crc,f
  4418  0EB4  0DF1               	rlf	crc_append_byte@crc+1,f
  4419  0EB5  0B89               	decfsz	9,f
  4420  0EB6  2EB3               	goto	u2695
  4421  0EB7                     l173:	
  4422                           ;main.c: 72:         }
  4423                           
  4424                           
  4425                           ;main.c: 73:     }
  4426  0EB7  3001               	movlw	1
  4427  0EB8  07F6               	addwf	crc_append_byte@i,f
  4428  0EB9  3000               	movlw	0
  4429  0EBA  3DF7               	addwfc	crc_append_byte@i+1,f
  4430  0EBB  0877               	movf	crc_append_byte@i+1,w
  4431  0EBC  3A80               	xorlw	128
  4432  0EBD  00F3               	movwf	??_crc_append_byte
  4433  0EBE  3080               	movlw	128
  4434  0EBF  0273               	subwf	??_crc_append_byte,w
  4435  0EC0  3008               	movlw	8
  4436  0EC1  1903               	btfsc	3,2
  4437  0EC2  0276               	subwf	crc_append_byte@i,w
  4438  0EC3  1803               	btfsc	3,0
  4439  0EC4  0008               	return
  4440  0EC5  2EA3               	goto	l170
  4441  0EC6                     __end_of_crc_append_byte:	
  4442                           ;main.c: 75:     return crc;
  4443                           
  4444                           
  4445                           	psect	text4
  4446  0E10                     __ptext4:	
  4447 ;; *************** function _TransmitString *****************
  4448 ;; Defined at:
  4449 ;;		line 185 in file "main.c"
  4450 ;; Parameters:    Size  Location     Type
  4451 ;;  message         1    wreg     PTR unsigned char 
  4452 ;;		 -> main@message_end(73), main@message_start(70), NULL(0), 
  4453 ;; Auto vars:     Size  Location     Type
  4454 ;;  message         1   11[COMMON] PTR unsigned char 
  4455 ;;		 -> main@message_end(73), main@message_start(70), NULL(0), 
  4456 ;;  i               2    9[COMMON] int 
  4457 ;;  counti          2    7[COMMON] int 
  4458 ;; Return value:  Size  Location     Type
  4459 ;;                  1    wreg      void 
  4460 ;; Registers used:
  4461 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4462 ;; Tracked objects:
  4463 ;;		On entry : 0/0
  4464 ;;		On exit  : 0/0
  4465 ;;		Unchanged: 0/0
  4466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4468 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4469 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4470 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4471 ;;Total ram usage:        6 bytes
  4472 ;; Hardware stack levels used:    1
  4473 ;; Hardware stack levels required when called:    5
  4474 ;; This function calls:
  4475 ;;		_TransmitByte
  4476 ;;		_strlen
  4477 ;; This function is called by:
  4478 ;;		_main
  4479 ;; This function uses a non-reentrant model
  4480 ;;
  4481                           
  4482                           
  4483                           ;psect for function _TransmitString
  4484  0E10                     _TransmitString:	
  4485                           
  4486                           ;incstack = 0
  4487                           ; Regs used in _TransmitString: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4488                           ;TransmitString@message stored from wreg
  4489  0E10  00FB               	movwf	TransmitString@message
  4490                           
  4491                           ;main.c: 185: void TransmitString(char* message);main.c: 186: {;main.c: 190:  for (int i
      +                           = 0, counti = strlen(message); i < counti; i++)
  4492  0E11  01F9               	clrf	TransmitString@i
  4493  0E12  01FA               	clrf	TransmitString@i+1
  4494  0E13  087B               	movf	TransmitString@message,w
  4495  0E14  00F0               	movwf	strlen@s
  4496  0E15  39FF               	andlw	255
  4497  0E16  1D03               	skipz
  4498  0E17  3001               	movlw	1
  4499  0E18  00F1               	movwf	strlen@s+1
  4500  0E19  318D  2528  318E   	fcall	_strlen
  4501  0E1C  0871               	movf	?_strlen+1,w
  4502  0E1D  00F8               	movwf	TransmitString@counti+1
  4503  0E1E  0870               	movf	?_strlen,w
  4504  0E1F  00F7               	movwf	TransmitString@counti
  4505  0E20                     l3050:	
  4506  0E20  087A               	movf	TransmitString@i+1,w
  4507  0E21  3A80               	xorlw	128
  4508  0E22  00F6               	movwf	??_TransmitString
  4509  0E23  0878               	movf	TransmitString@counti+1,w
  4510  0E24  3A80               	xorlw	128
  4511  0E25  0276               	subwf	??_TransmitString,w
  4512  0E26  1D03               	skipz
  4513  0E27  2E2A               	goto	u2835
  4514  0E28  0877               	movf	TransmitString@counti,w
  4515  0E29  0279               	subwf	TransmitString@i,w
  4516  0E2A                     u2835:	
  4517  0E2A  1803               	btfsc	3,0
  4518  0E2B  0008               	return
  4519                           
  4520                           ;main.c: 191:  {;main.c: 192:   TransmitByte(message[i]);
  4521  0E2C  0879               	movf	TransmitString@i,w
  4522  0E2D  077B               	addwf	TransmitString@message,w
  4523  0E2E  00F6               	movwf	??_TransmitString
  4524  0E2F  0876               	movf	??_TransmitString,w
  4525  0E30  0086               	movwf	6
  4526  0E31  3001               	movlw	1	; select bank2/3
  4527  0E32  0087               	movwf	7
  4528  0E33  0801               	movf	1,w
  4529  0E34  318E  2668  318E   	fcall	_TransmitByte
  4530                           
  4531                           ;main.c: 193:  }
  4532  0E37  3001               	movlw	1
  4533  0E38  07F9               	addwf	TransmitString@i,f
  4534  0E39  3000               	movlw	0
  4535  0E3A  3DFA               	addwfc	TransmitString@i+1,f
  4536  0E3B  2E20               	goto	l3050
  4537  0E3C                     __end_of_TransmitString:	
  4538                           
  4539                           	psect	text5
  4540  0E68                     __ptext5:	
  4541 ;; *************** function _TransmitByte *****************
  4542 ;; Defined at:
  4543 ;;		line 154 in file "main.c"
  4544 ;; Parameters:    Size  Location     Type
  4545 ;;  byte            1    wreg     unsigned char 
  4546 ;; Auto vars:     Size  Location     Type
  4547 ;;  byte            1    3[COMMON] unsigned char 
  4548 ;;  i               2    4[COMMON] int 
  4549 ;; Return value:  Size  Location     Type
  4550 ;;                  1    wreg      void 
  4551 ;; Registers used:
  4552 ;;		wreg, status,2, status,0, pclath, cstack
  4553 ;; Tracked objects:
  4554 ;;		On entry : 0/0
  4555 ;;		On exit  : 0/0
  4556 ;;		Unchanged: 0/0
  4557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4559 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4560 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4561 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4562 ;;Total ram usage:        4 bytes
  4563 ;; Hardware stack levels used:    1
  4564 ;; Hardware stack levels required when called:    4
  4565 ;; This function calls:
  4566 ;;		_TransmitBit
  4567 ;; This function is called by:
  4568 ;;		_TransmitString
  4569 ;; This function uses a non-reentrant model
  4570 ;;
  4571                           
  4572                           
  4573                           ;psect for function _TransmitByte
  4574  0E68                     _TransmitByte:	
  4575                           
  4576                           ;incstack = 0
  4577                           ; Regs used in _TransmitByte: [wreg+status,2+status,0+pclath+cstack]
  4578                           ;TransmitByte@byte stored from wreg
  4579  0E68  00F3               	movwf	TransmitByte@byte
  4580                           
  4581                           ;main.c: 154: void TransmitByte(char byte);main.c: 155: {;main.c: 165:     TransmitBit(0
      +                          );
  4582  0E69  3000               	movlw	0
  4583  0E6A  318D  2556  318E   	fcall	_TransmitBit
  4584                           
  4585                           ;main.c: 170:  for (int i = 0; i < 7; i++)
  4586  0E6D  01F4               	clrf	TransmitByte@i
  4587  0E6E  01F5               	clrf	TransmitByte@i+1
  4588  0E6F                     l2942:	
  4589                           
  4590                           ;main.c: 171:  {;main.c: 172:   TransmitBit((byte >> i) & 1);
  4591  0E6F  0873               	movf	TransmitByte@byte,w
  4592  0E70  00F2               	movwf	??_TransmitByte
  4593  0E71  0A74               	incf	TransmitByte@i,w
  4594  0E72  2E74               	goto	u2714
  4595  0E73                     u2715:	
  4596  0E73  36F2               	lsrf	??_TransmitByte,f
  4597  0E74                     u2714:	
  4598  0E74  0B89               	decfsz	9,f
  4599  0E75  2E73               	goto	u2715
  4600  0E76  1C72               	btfss	??_TransmitByte,0
  4601  0E77  2E7A               	goto	u2720
  4602  0E78  3001               	movlw	1
  4603  0E79  2E7B               	goto	u2730
  4604  0E7A                     u2720:	
  4605  0E7A  3000               	movlw	0
  4606  0E7B                     u2730:	
  4607  0E7B  318D  2556  318E   	fcall	_TransmitBit
  4608                           
  4609                           ;main.c: 173:  }
  4610  0E7E  3001               	movlw	1
  4611  0E7F  07F4               	addwf	TransmitByte@i,f
  4612  0E80  3000               	movlw	0
  4613  0E81  3DF5               	addwfc	TransmitByte@i+1,f
  4614  0E82  0875               	movf	TransmitByte@i+1,w
  4615  0E83  3A80               	xorlw	128
  4616  0E84  00F2               	movwf	??_TransmitByte
  4617  0E85  3080               	movlw	128
  4618  0E86  0272               	subwf	??_TransmitByte,w
  4619  0E87  1D03               	skipz
  4620  0E88  2E8B               	goto	u2745
  4621  0E89  3007               	movlw	7
  4622  0E8A  0274               	subwf	TransmitByte@i,w
  4623  0E8B                     u2745:	
  4624  0E8B  1C03               	skipc
  4625  0E8C  2E6F               	goto	l2942
  4626                           
  4627                           ;main.c: 178:  TransmitBit(1);
  4628  0E8D  3001               	movlw	1
  4629  0E8E  318D  2556  318E   	fcall	_TransmitBit
  4630                           
  4631                           ;main.c: 179:  TransmitBit(1);
  4632  0E91  3001               	movlw	1
  4633  0E92  318D  2556         	fcall	_TransmitBit
  4634  0E94  0008               	return
  4635  0E95                     __end_of_TransmitByte:	
  4636                           
  4637                           	psect	text6
  4638  0D56                     __ptext6:	
  4639 ;; *************** function _TransmitBit *****************
  4640 ;; Defined at:
  4641 ;;		line 132 in file "main.c"
  4642 ;; Parameters:    Size  Location     Type
  4643 ;;  b               1    wreg     _Bool 
  4644 ;; Auto vars:     Size  Location     Type
  4645 ;;  b               1    1[COMMON] _Bool 
  4646 ;; Return value:  Size  Location     Type
  4647 ;;                  1    wreg      void 
  4648 ;; Registers used:
  4649 ;;		wreg, status,2, status,0
  4650 ;; Tracked objects:
  4651 ;;		On entry : 0/0
  4652 ;;		On exit  : 0/0
  4653 ;;		Unchanged: 0/0
  4654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4656 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4657 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4658 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4659 ;;Total ram usage:        2 bytes
  4660 ;; Hardware stack levels used:    1
  4661 ;; Hardware stack levels required when called:    3
  4662 ;; This function calls:
  4663 ;;		Nothing
  4664 ;; This function is called by:
  4665 ;;		_TransmitByte
  4666 ;; This function uses a non-reentrant model
  4667 ;;
  4668                           
  4669                           
  4670                           ;psect for function _TransmitBit
  4671  0D56                     _TransmitBit:	
  4672                           
  4673                           ;incstack = 0
  4674                           ; Regs used in _TransmitBit: [wreg+status,2+status,0]
  4675                           ;TransmitBit@b stored from wreg
  4676  0D56  00F1               	movwf	TransmitBit@b
  4677                           
  4678                           ;main.c: 132: void TransmitBit(_Bool b);main.c: 133: {;main.c: 134:  if (b)
  4679  0D57  0871               	movf	TransmitBit@b,w
  4680  0D58  1903               	btfsc	3,2
  4681  0D59  2D5D               	goto	l190
  4682                           
  4683                           ;main.c: 135:  {;main.c: 139:   do { LATAbits.LATA4 = 1; } while(0);
  4684  0D5A  0022               	movlb	2	; select bank2
  4685  0D5B  160C               	bsf	12,4	;volatile
  4686  0D5C  2D5F               	goto	l2854
  4687  0D5D                     l190:	
  4688                           ;main.c: 143:  {;main.c: 147:   do { LATAbits.LATA4 = 0; } while(0);
  4689                           
  4690  0D5D  0022               	movlb	2	; select bank2
  4691  0D5E  120C               	bcf	12,4	;volatile
  4692  0D5F                     l2854:	
  4693                           
  4694                           ;main.c: 150:  _delay((unsigned long)((((1000 / BAUD_RATE) / 2) * 1000)*(4000000/4000000
      +                          .0)));
  4695  0D5F  300D               	movlw	13
  4696  0D60  00F0               	movwf	??_TransmitBit
  4697  0D61  30FC               	movlw	252
  4698  0D62                     u2987:	
  4699  0D62  0B89               	decfsz	9,f
  4700  0D63  2D62               	goto	u2987
  4701  0D64  0BF0               	decfsz	??_TransmitBit,f
  4702  0D65  2D62               	goto	u2987
  4703                           
  4704                           ;main.c: 151:  _delay((unsigned long)((((1000 / BAUD_RATE) / 2) * 1000)*(4000000/4000000
      +                          .0)));
  4705  0D66  300D               	movlw	13
  4706  0D67  00F0               	movwf	??_TransmitBit
  4707  0D68  30FC               	movlw	252
  4708  0D69                     u2997:	
  4709  0D69  0B89               	decfsz	9,f
  4710  0D6A  2D69               	goto	u2997
  4711  0D6B  0BF0               	decfsz	??_TransmitBit,f
  4712  0D6C  2D69               	goto	u2997
  4713  0D6D  0008               	return
  4714  0D6E                     __end_of_TransmitBit:	
  4715                           
  4716                           	psect	text7
  4717  0FAC                     __ptext7:	
  4718 ;; *************** function _SetupGPS *****************
  4719 ;; Defined at:
  4720 ;;		line 343 in file "main.c"
  4721 ;; Parameters:    Size  Location     Type
  4722 ;;		None
  4723 ;; Auto vars:     Size  Location     Type
  4724 ;;		None
  4725 ;; Return value:  Size  Location     Type
  4726 ;;                  1    wreg      void 
  4727 ;; Registers used:
  4728 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4729 ;; Tracked objects:
  4730 ;;		On entry : 0/0
  4731 ;;		On exit  : 0/0
  4732 ;;		Unchanged: 0/0
  4733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4736 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4737 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4738 ;;Total ram usage:        2 bytes
  4739 ;; Hardware stack levels used:    1
  4740 ;; Hardware stack levels required when called:   12
  4741 ;; This function calls:
  4742 ;;		_GPS_HasAcknowledged
  4743 ;;		_GPS_SendUBX
  4744 ;;		_printf
  4745 ;; This function is called by:
  4746 ;;		_main
  4747 ;; This function uses a non-reentrant model
  4748 ;;
  4749                           
  4750                           
  4751                           ;psect for function _SetupGPS
  4752  0FAC                     _SetupGPS:	
  4753  0FAC                     l3076:	
  4754                           ;main.c: 345:     while (!gps_configured)
  4755                           
  4756                           ;incstack = 0
  4757                           ; Regs used in _SetupGPS: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4758                           
  4759                           
  4760                           ;main.c: 345:     while (!gps_configured)
  4761  0FAC  0021               	movlb	1	; select bank1
  4762  0FAD  0830               	movf	_gps_configured^(0+128),w
  4763  0FAE  1D03               	btfss	3,2
  4764  0FAF  2FCF               	goto	l3078
  4765                           
  4766                           ;main.c: 346:     {;main.c: 348:         do { LATAbits.LATA5 = 0; } while(0);
  4767  0FB0  0022               	movlb	2	; select bank2
  4768  0FB1  128C               	bcf	12,5	;volatile
  4769                           
  4770                           ;main.c: 350:         GPS_SendUBX(setNavFlightMode);
  4771  0FB2  30A0               	movlw	(low (_setNavFlightMode| (0+512)))& (0+255)
  4772  0FB3  318D  2594  318F   	fcall	_GPS_SendUBX
  4773                           
  4774                           ;main.c: 351:         gps_configured = GPS_HasAcknowledged(setNavFlightMode);
  4775  0FB6  30A0               	movlw	(low (_setNavFlightMode| (0+512)))& (0+255)
  4776  0FB7  3186  2652  318F   	fcall	_GPS_HasAcknowledged
  4777  0FBA  0020               	movlb	0	; select bank0
  4778  0FBB  00EE               	movwf	??_SetupGPS
  4779  0FBC  086E               	movf	??_SetupGPS,w
  4780  0FBD  0021               	movlb	1	; select bank1
  4781  0FBE  00B0               	movwf	_gps_configured^(0+128)
  4782  0FBF  0022               	movlb	2	; select bank2
  4783  0FC0  168C               	bsf	12,5	;volatile
  4784                           
  4785                           ;main.c: 355:         _delay((unsigned long)((500)*(4000000/4000.0)));
  4786  0FC1  3003               	movlw	3
  4787  0FC2  0020               	movlb	0	; select bank0
  4788  0FC3  00EF               	movwf	??_SetupGPS+1
  4789  0FC4  308A               	movlw	138
  4790  0FC5  00EE               	movwf	??_SetupGPS
  4791  0FC6  3055               	movlw	85
  4792  0FC7                     u3007:	
  4793  0FC7  0B89               	decfsz	9,f
  4794  0FC8  2FC7               	goto	u3007
  4795  0FC9  0BEE               	decfsz	??_SetupGPS,f
  4796  0FCA  2FC7               	goto	u3007
  4797  0FCB  0BEF               	decfsz	??_SetupGPS+1,f
  4798  0FCC  2FC7               	goto	u3007
  4799  0FCD  3200               	nop2
  4800  0FCE  2FAC               	goto	l3076
  4801  0FCF                     l3078:	
  4802                           
  4803                           ;main.c: 358:     gps_configured = 0;
  4804  0FCF  01B0               	clrf	_gps_configured^(0+128)
  4805                           
  4806                           ;main.c: 361:     printf("$PUBX,40,GLL,0,0,0,0*5C\r\n");
  4807  0FD0  304E               	movlw	low (STR_1| (0+32768))
  4808  0FD1  0020               	movlb	0	; select bank0
  4809  0FD2  00E8               	movwf	printf@fmt
  4810  0FD3  3090               	movlw	high (STR_1| (0+32768))
  4811  0FD4  00E9               	movwf	printf@fmt+1
  4812  0FD5  318C  24EF  318F   	fcall	_printf
  4813                           
  4814                           ;main.c: 362:     printf("$PUBX,40,GGA,0,0,0,0*44\r\n");
  4815  0FD8  3000               	movlw	low (STR_2| (0+32768))
  4816  0FD9  0020               	movlb	0	; select bank0
  4817  0FDA  00E8               	movwf	printf@fmt
  4818  0FDB  3090               	movlw	high (STR_2| (0+32768))
  4819  0FDC  00E9               	movwf	printf@fmt+1
  4820  0FDD  318C  24EF  318F   	fcall	_printf
  4821                           
  4822                           ;main.c: 363:     printf("$PUBX,40,VTG,0,0,0,0*5E\r\n");
  4823  0FE0  3082               	movlw	low (STR_3| (0+32768))
  4824  0FE1  0020               	movlb	0	; select bank0
  4825  0FE2  00E8               	movwf	printf@fmt
  4826  0FE3  3090               	movlw	high (STR_3| (0+32768))
  4827  0FE4  00E9               	movwf	printf@fmt+1
  4828  0FE5  318C  24EF  318F   	fcall	_printf
  4829                           
  4830                           ;main.c: 364:     printf("$PUBX,40,GSV,0,0,0,0*59\r\n");
  4831  0FE8  3034               	movlw	low (STR_4| (0+32768))
  4832  0FE9  0020               	movlb	0	; select bank0
  4833  0FEA  00E8               	movwf	printf@fmt
  4834  0FEB  3090               	movlw	high (STR_4| (0+32768))
  4835  0FEC  00E9               	movwf	printf@fmt+1
  4836  0FED  318C  24EF  318F   	fcall	_printf
  4837                           
  4838                           ;main.c: 365:     printf("$PUBX,40,GSA,0,0,0,0*4E\r\n");
  4839  0FF0  3068               	movlw	low (STR_5| (0+32768))
  4840  0FF1  0020               	movlb	0	; select bank0
  4841  0FF2  00E8               	movwf	printf@fmt
  4842  0FF3  3090               	movlw	high (STR_5| (0+32768))
  4843  0FF4  00E9               	movwf	printf@fmt+1
  4844  0FF5  318C  24EF  318F   	fcall	_printf
  4845                           
  4846                           ;main.c: 366:     printf("$PUBX,40,RMC,0,0,0,0*47\r\n");
  4847  0FF8  301A               	movlw	low (STR_6| (0+32768))
  4848  0FF9  0020               	movlb	0	; select bank0
  4849  0FFA  00E8               	movwf	printf@fmt
  4850  0FFB  3090               	movlw	high (STR_6| (0+32768))
  4851  0FFC  00E9               	movwf	printf@fmt+1
  4852  0FFD  318C  24EF         	fcall	_printf
  4853  0FFF  0008               	return
  4854  1000                     __end_of_SetupGPS:	
  4855                           
  4856                           	psect	text8
  4857  0CEF                     __ptext8:	
  4858 ;; *************** function _printf *****************
  4859 ;; Defined at:
  4860 ;;		line 5 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\printf.c"
  4861 ;; Parameters:    Size  Location     Type
  4862 ;;  fmt             2   72[BANK0 ] PTR const unsigned char 
  4863 ;;		 -> STR_6(26), STR_5(26), STR_4(26), STR_3(26), 
  4864 ;;		 -> STR_2(26), STR_1(26), 
  4865 ;; Auto vars:     Size  Location     Type
  4866 ;;  ret             2    0        int 
  4867 ;;  ap              1   77[BANK0 ] PTR void [1]
  4868 ;;		 -> ?_printf(2), ?_sprintf(2), 
  4869 ;; Return value:  Size  Location     Type
  4870 ;;                  2   72[BANK0 ] int 
  4871 ;; Registers used:
  4872 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4873 ;; Tracked objects:
  4874 ;;		On entry : 0/0
  4875 ;;		On exit  : 0/0
  4876 ;;		Unchanged: 0/0
  4877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4878 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4879 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4880 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4881 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4882 ;;Total ram usage:        6 bytes
  4883 ;; Hardware stack levels used:    1
  4884 ;; Hardware stack levels required when called:   11
  4885 ;; This function calls:
  4886 ;;		_vfprintf
  4887 ;; This function is called by:
  4888 ;;		_SetupGPS
  4889 ;; This function uses a non-reentrant model
  4890 ;;
  4891                           
  4892                           
  4893                           ;psect for function _printf
  4894  0CEF                     _printf:	
  4895                           
  4896                           ;incstack = 0
  4897                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4898  0CEF  306A               	movlw	(low ((?_printf| 0+2)))& (0+255)
  4899  0CF0  0020               	movlb	0	; select bank0
  4900  0CF1  00EA               	movwf	??_printf
  4901  0CF2  086A               	movf	??_printf,w
  4902  0CF3  00ED               	movwf	printf@ap
  4903  0CF4  0869               	movf	printf@fmt+1,w
  4904  0CF5  00E1               	movwf	vfprintf@fmt+1
  4905  0CF6  0868               	movf	printf@fmt,w
  4906  0CF7  00E0               	movwf	vfprintf@fmt
  4907  0CF8  306D               	movlw	(low (printf@ap| 0))& (0+255)
  4908  0CF9  00EA               	movwf	??_printf
  4909  0CFA  086A               	movf	??_printf,w
  4910  0CFB  00E2               	movwf	vfprintf@ap
  4911  0CFC  3000               	movlw	0
  4912  0CFD  3187  27D1         	fcall	_vfprintf
  4913  0CFF  0008               	return
  4914  0D00                     __end_of_printf:	
  4915                           
  4916                           	psect	text9
  4917  07D1                     __ptext9:	
  4918 ;; *************** function _vfprintf *****************
  4919 ;; Defined at:
  4920 ;;		line 1368 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c"
  4921 ;; Parameters:    Size  Location     Type
  4922 ;;  fp              1    wreg     PTR struct _IO_FILE
  4923 ;;		 -> sprintf@f(5), NULL(0), 
  4924 ;;  fmt             2   64[BANK0 ] PTR const unsigned char 
  4925 ;;		 -> STR_8(13), STR_7(23), STR_6(26), STR_5(26), 
  4926 ;;		 -> STR_4(26), STR_3(26), STR_2(26), STR_1(26), 
  4927 ;;  ap              1   66[BANK0 ] PTR PTR void 
  4928 ;;		 -> printf@ap(1), sprintf@ap(1), 
  4929 ;; Auto vars:     Size  Location     Type
  4930 ;;  fp              1   69[BANK0 ] PTR struct _IO_FILE
  4931 ;;		 -> sprintf@f(5), NULL(0), 
  4932 ;;  cfmt            2   70[BANK0 ] PTR unsigned char 
  4933 ;;		 -> STR_8(13), STR_7(23), STR_6(26), STR_5(26), 
  4934 ;;		 -> STR_4(26), STR_3(26), STR_2(26), STR_1(26), 
  4935 ;; Return value:  Size  Location     Type
  4936 ;;                  2   64[BANK0 ] int 
  4937 ;; Registers used:
  4938 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4939 ;; Tracked objects:
  4940 ;;		On entry : 0/0
  4941 ;;		On exit  : 0/0
  4942 ;;		Unchanged: 0/0
  4943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4944 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4945 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4946 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4947 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4948 ;;Total ram usage:        8 bytes
  4949 ;; Hardware stack levels used:    1
  4950 ;; Hardware stack levels required when called:   10
  4951 ;; This function calls:
  4952 ;;		_vfpfcnvrt
  4953 ;; This function is called by:
  4954 ;;		_sprintf
  4955 ;;		_printf
  4956 ;; This function uses a non-reentrant model
  4957 ;;
  4958                           
  4959                           
  4960                           ;psect for function _vfprintf
  4961  07D1                     _vfprintf:	
  4962                           
  4963                           ;incstack = 0
  4964                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4965                           ;vfprintf@fp stored from wreg
  4966  07D1  0020               	movlb	0	; select bank0
  4967  07D2  00E5               	movwf	vfprintf@fp
  4968                           
  4969                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 1368: int vfprintf(FIL
      +                          E *fp, const char *fmt, va_list ap);K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\comm
      +                          on\doprnt.c: 1369: {;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 13
      +                          71:     char *cfmt;;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 137
      +                          3:     cfmt = (char *)fmt;
  4970  07D3  0861               	movf	vfprintf@fmt+1,w
  4971  07D4  00E7               	movwf	vfprintf@cfmt+1
  4972  07D5  0860               	movf	vfprintf@fmt,w
  4973  07D6  00E6               	movwf	vfprintf@cfmt
  4974                           
  4975                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 1374:     nout = 0;
  4976  07D7  0021               	movlb	1	; select bank1
  4977  07D8  01A8               	clrf	_nout^(0+128)
  4978  07D9  01A9               	clrf	(_nout+1)^(0+128)
  4979  07DA                     l2868:	
  4980                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 1375:     while (*cfmt
      +                          ) {
  4981                           
  4982                           
  4983                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 1375:     while (*cfmt
      +                          ) {
  4984  07DA  0020               	movlb	0	; select bank0
  4985  07DB  0866               	movf	vfprintf@cfmt,w
  4986  07DC  0084               	movwf	4
  4987  07DD  0867               	movf	vfprintf@cfmt+1,w
  4988  07DE  0085               	movwf	5
  4989  07DF  0012               	moviw fsr0++
  4990  07E0  1903               	btfsc	3,2
  4991  07E1  2FF7               	goto	l2870
  4992                           
  4993                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 1376:         nout += 
      +                          vfpfcnvrt(fp, &cfmt, ap);
  4994  07E2  3066               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  4995  07E3  00E3               	movwf	??_vfprintf
  4996  07E4  0863               	movf	??_vfprintf,w
  4997  07E5  00CE               	movwf	vfpfcnvrt@fmt
  4998  07E6  0862               	movf	vfprintf@ap,w
  4999  07E7  00E4               	movwf	??_vfprintf+1
  5000  07E8  0864               	movf	??_vfprintf+1,w
  5001  07E9  00CF               	movwf	vfpfcnvrt@ap
  5002  07EA  0865               	movf	vfprintf@fp,w
  5003  07EB  3182  22BD  3187   	fcall	_vfpfcnvrt
  5004  07EE  0020               	movlb	0	; select bank0
  5005  07EF  084E               	movf	?_vfpfcnvrt,w
  5006  07F0  0021               	movlb	1	; select bank1
  5007  07F1  07A8               	addwf	_nout^(0+128),f
  5008  07F2  0020               	movlb	0	; select bank0
  5009  07F3  084F               	movf	?_vfpfcnvrt+1,w
  5010  07F4  0021               	movlb	1	; select bank1
  5011  07F5  3DA9               	addwfc	(_nout+1)^(0+128),f
  5012  07F6  2FDA               	goto	l2868
  5013  07F7                     l2870:	
  5014                           
  5015                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 1378:     return nout;
  5016  07F7  0021               	movlb	1	; select bank1
  5017  07F8  0829               	movf	(_nout+1)^(0+128),w
  5018  07F9  0020               	movlb	0	; select bank0
  5019  07FA  00E1               	movwf	?_vfprintf+1
  5020  07FB  0021               	movlb	1	; select bank1
  5021  07FC  0828               	movf	_nout^(0+128),w
  5022  07FD  0020               	movlb	0	; select bank0
  5023  07FE  00E0               	movwf	?_vfprintf
  5024  07FF  0008               	return
  5025  0800                     __end_of_vfprintf:	
  5026                           
  5027                           	psect	text10
  5028  02BD                     __ptext10:	
  5029 ;; *************** function _vfpfcnvrt *****************
  5030 ;; Defined at:
  5031 ;;		line 670 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c"
  5032 ;; Parameters:    Size  Location     Type
  5033 ;;  fp              1    wreg     PTR struct _IO_FILE
  5034 ;;		 -> sprintf@f(5), NULL(0), 
  5035 ;;  fmt             1   46[BANK0 ] PTR PTR unsigned char 
  5036 ;;		 -> vfprintf@cfmt(2), 
  5037 ;;  ap              1   47[BANK0 ] PTR PTR void 
  5038 ;;		 -> printf@ap(1), sprintf@ap(1), 
  5039 ;; Auto vars:     Size  Location     Type
  5040 ;;  fp              1   63[BANK0 ] PTR struct _IO_FILE
  5041 ;;		 -> sprintf@f(5), NULL(0), 
  5042 ;;  ll              8   53[BANK0 ] long long 
  5043 ;;  llu             8    0        unsigned long long 
  5044 ;;  f               4    0        unsigned long long 
  5045 ;;  ct              3    0        unsigned char [3]
  5046 ;;  cp              2   61[BANK0 ] PTR unsigned char 
  5047 ;;		 -> ?_printf(2), ?_sprintf(2), gps_vertical_velocity(8), gps_course_over_ground(8), 
  5048 ;;		 -> gps_speed_over_ground(8), gps_altitude(12), gps_longitude(16), gps_latitude(16), 
  5049 ;;		 -> gps_time(10), 
  5050 ;;  vp              2    0        PTR void 
  5051 ;;  i               2    0        int 
  5052 ;;  done            2    0        int 
  5053 ;;  c               1    0        unsigned char 
  5054 ;; Return value:  Size  Location     Type
  5055 ;;                  2   46[BANK0 ] int 
  5056 ;; Registers used:
  5057 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5058 ;; Tracked objects:
  5059 ;;		On entry : 0/0
  5060 ;;		On exit  : 0/0
  5061 ;;		Unchanged: 0/0
  5062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5063 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5064 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5065 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5066 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5067 ;;Total ram usage:       18 bytes
  5068 ;; Hardware stack levels used:    1
  5069 ;; Hardware stack levels required when called:    9
  5070 ;; This function calls:
  5071 ;;		_dtoa
  5072 ;;		_fputc
  5073 ;;		_stoa
  5074 ;; This function is called by:
  5075 ;;		_vfprintf
  5076 ;; This function uses a non-reentrant model
  5077 ;;
  5078                           
  5079                           
  5080                           ;psect for function _vfpfcnvrt
  5081  02BD                     _vfpfcnvrt:	
  5082                           
  5083                           ;incstack = 0
  5084                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5085                           ;vfpfcnvrt@fp stored from wreg
  5086  02BD  0020               	movlb	0	; select bank0
  5087  02BE  00DF               	movwf	vfpfcnvrt@fp
  5088                           
  5089                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 670: static int vfpfcn
      +                          vrt(FILE *fp, char *fmt[], va_list ap);K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\c
      +                          ommon\doprnt.c: 671: {;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 
      +                          672:     char c, *cp, ct[3];;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\dopr
      +                          nt.c: 673:     int done, i;;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprn
      +                          t.c: 674:     long long ll;;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprn
      +                          t.c: 675:     unsigned long long llu;
  5090  02BF  084E               	movf	vfpfcnvrt@fmt,w
  5091  02C0  0086               	movwf	6
  5092  02C1  0187               	clrf	7
  5093  02C2  3F40               	moviw [0]fsr1
  5094  02C3  00D0               	movwf	??_vfpfcnvrt
  5095  02C4  3F41               	moviw [1]fsr1
  5096  02C5  00D1               	movwf	??_vfpfcnvrt+1
  5097  02C6  0850               	movf	??_vfpfcnvrt,w
  5098  02C7  0084               	movwf	4
  5099  02C8  0851               	movf	??_vfpfcnvrt+1,w
  5100  02C9  0085               	movwf	5
  5101  02CA  0012               	moviw fsr0++
  5102  02CB  3A25               	xorlw	37
  5103  02CC  1D03               	btfss	3,2
  5104  02CD  2B9A               	goto	l2832
  5105                           
  5106                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 681:         ++*fmt;
  5107  02CE  084E               	movf	vfpfcnvrt@fmt,w
  5108  02CF  0086               	movwf	6
  5109  02D0  0187               	clrf	7
  5110  02D1  3001               	movlw	1
  5111  02D2  0781               	addwf	1,f
  5112  02D3  3141               	addfsr 1,1
  5113  02D4  1803               	skipnc
  5114  02D5  0A81               	incf	1,f
  5115                           
  5116                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 683:         flags = w
      +                          idth = 0;
  5117  02D6  0021               	movlb	1	; select bank1
  5118  02D7  01AA               	clrf	_width^(0+128)
  5119  02D8  01AB               	clrf	(_width+1)^(0+128)
  5120  02D9  01AE               	clrf	_flags^(0+128)
  5121  02DA  01AF               	clrf	(_flags+1)^(0+128)
  5122                           
  5123                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 684:         prec = -1
      +                          ;
  5124  02DB  30FF               	movlw	255
  5125  02DC  00AC               	movwf	_prec^(0+128)
  5126  02DD  30FF               	movlw	255
  5127  02DE  00AD               	movwf	(_prec^(0+128)+1)
  5128                           
  5129                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 825:         if ((*fmt
      +                          [0] == 'd') || (*fmt[0] == 'i')) {
  5130  02DF  0020               	movlb	0	; select bank0
  5131  02E0  084E               	movf	vfpfcnvrt@fmt,w
  5132  02E1  0086               	movwf	6
  5133  02E2  0187               	clrf	7
  5134  02E3  3F40               	moviw [0]fsr1
  5135  02E4  00D0               	movwf	??_vfpfcnvrt
  5136  02E5  3F41               	moviw [1]fsr1
  5137  02E6  00D1               	movwf	??_vfpfcnvrt+1
  5138  02E7  0850               	movf	??_vfpfcnvrt,w
  5139  02E8  0084               	movwf	4
  5140  02E9  0851               	movf	??_vfpfcnvrt+1,w
  5141  02EA  0085               	movwf	5
  5142  02EB  0012               	moviw fsr0++
  5143  02EC  3A64               	xorlw	100
  5144  02ED  1903               	btfsc	3,2
  5145  02EE  2AFE               	goto	l2798
  5146  02EF  084E               	movf	vfpfcnvrt@fmt,w
  5147  02F0  0086               	movwf	6
  5148  02F1  0187               	clrf	7
  5149  02F2  3F40               	moviw [0]fsr1
  5150  02F3  00D0               	movwf	??_vfpfcnvrt
  5151  02F4  3F41               	moviw [1]fsr1
  5152  02F5  00D1               	movwf	??_vfpfcnvrt+1
  5153  02F6  0850               	movf	??_vfpfcnvrt,w
  5154  02F7  0084               	movwf	4
  5155  02F8  0851               	movf	??_vfpfcnvrt+1,w
  5156  02F9  0085               	movwf	5
  5157  02FA  0012               	moviw fsr0++
  5158  02FB  3A69               	xorlw	105
  5159  02FC  1D03               	btfss	3,2
  5160  02FD  2B38               	goto	l2806
  5161  02FE                     l2798:	
  5162                           
  5163                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 827:             ++*fm
      +                          t;
  5164  02FE  084E               	movf	vfpfcnvrt@fmt,w
  5165  02FF  0086               	movwf	6
  5166  0300  0187               	clrf	7
  5167  0301  3001               	movlw	1
  5168  0302  0781               	addwf	1,f
  5169  0303  3141               	addfsr 1,1
  5170  0304  1803               	skipnc
  5171  0305  0A81               	incf	1,f
  5172                           
  5173                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 828:             ll = 
      +                          (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  5174  0306  084F               	movf	vfpfcnvrt@ap,w
  5175  0307  0086               	movwf	6
  5176  0308  0187               	clrf	7
  5177  0309  0801               	movf	1,w
  5178  030A  0084               	movwf	4
  5179  030B  0185               	clrf	5
  5180  030C  3002               	movlw	2
  5181  030D  0781               	addwf	1,f
  5182  030E  3F00               	moviw [0]fsr0
  5183  030F  00D0               	movwf	??_vfpfcnvrt
  5184  0310  3F01               	moviw [1]fsr0
  5185  0311  00D1               	movwf	??_vfpfcnvrt+1
  5186  0312  0850               	movf	??_vfpfcnvrt,w
  5187  0313  00D5               	movwf	vfpfcnvrt@ll
  5188  0314  0851               	movf	??_vfpfcnvrt+1,w
  5189  0315  00D6               	movwf	vfpfcnvrt@ll+1
  5190  0316  0D89               	rlf	9,f
  5191  0317  3B89               	subwfb	9,f
  5192  0318  0989               	comf	9,f
  5193  0319  00D7               	movwf	vfpfcnvrt@ll+2
  5194  031A  00D8               	movwf	vfpfcnvrt@ll+3
  5195  031B  00D9               	movwf	vfpfcnvrt@ll+4
  5196  031C  00DA               	movwf	vfpfcnvrt@ll+5
  5197  031D  00DB               	movwf	vfpfcnvrt@ll+6
  5198  031E  00DC               	movwf	vfpfcnvrt@ll+7
  5199                           
  5200                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 830:             retur
      +                          n dtoa(fp, ll);
  5201  031F  0855               	movf	vfpfcnvrt@ll,w
  5202  0320  00B0               	movwf	dtoa@d
  5203  0321  0856               	movf	vfpfcnvrt@ll+1,w
  5204  0322  00B1               	movwf	dtoa@d+1
  5205  0323  0857               	movf	vfpfcnvrt@ll+2,w
  5206  0324  00B2               	movwf	dtoa@d+2
  5207  0325  0858               	movf	vfpfcnvrt@ll+3,w
  5208  0326  00B3               	movwf	dtoa@d+3
  5209  0327  0859               	movf	vfpfcnvrt@ll+4,w
  5210  0328  00B4               	movwf	dtoa@d+4
  5211  0329  085A               	movf	vfpfcnvrt@ll+5,w
  5212  032A  00B5               	movwf	dtoa@d+5
  5213  032B  085B               	movf	vfpfcnvrt@ll+6,w
  5214  032C  00B6               	movwf	dtoa@d+6
  5215  032D  085C               	movf	vfpfcnvrt@ll+7,w
  5216  032E  00B7               	movwf	dtoa@d+7
  5217  032F  085F               	movf	vfpfcnvrt@fp,w
  5218  0330  3180  2042         	fcall	_dtoa
  5219  0332  0020               	movlb	0	; select bank0
  5220  0333  0831               	movf	?_dtoa+1,w
  5221  0334  00CF               	movwf	?_vfpfcnvrt+1
  5222  0335  0830               	movf	?_dtoa,w
  5223  0336  00CE               	movwf	?_vfpfcnvrt
  5224  0337  0008               	return
  5225  0338                     l2806:	
  5226                           
  5227                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 1149:         if (*fmt
      +                          [0] == 's') {
  5228  0338  084E               	movf	vfpfcnvrt@fmt,w
  5229  0339  0086               	movwf	6
  5230  033A  0187               	clrf	7
  5231  033B  3F40               	moviw [0]fsr1
  5232  033C  00D0               	movwf	??_vfpfcnvrt
  5233  033D  3F41               	moviw [1]fsr1
  5234  033E  00D1               	movwf	??_vfpfcnvrt+1
  5235  033F  0850               	movf	??_vfpfcnvrt,w
  5236  0340  0084               	movwf	4
  5237  0341  0851               	movf	??_vfpfcnvrt+1,w
  5238  0342  0085               	movwf	5
  5239  0343  0012               	moviw fsr0++
  5240  0344  3A73               	xorlw	115
  5241  0345  1D03               	btfss	3,2
  5242  0346  2B68               	goto	l2816
  5243                           
  5244                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 1151:             ++*f
      +                          mt;
  5245  0347  084E               	movf	vfpfcnvrt@fmt,w
  5246  0348  0086               	movwf	6
  5247  0349  0187               	clrf	7
  5248  034A  3001               	movlw	1
  5249  034B  0781               	addwf	1,f
  5250  034C  3141               	addfsr 1,1
  5251  034D  1803               	skipnc
  5252  034E  0A81               	incf	1,f
  5253                           
  5254                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 1152:             cp =
      +                           (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  5255  034F  084F               	movf	vfpfcnvrt@ap,w
  5256  0350  0086               	movwf	6
  5257  0351  0187               	clrf	7
  5258  0352  0801               	movf	1,w
  5259  0353  0084               	movwf	4
  5260  0354  0185               	clrf	5
  5261  0355  3002               	movlw	2
  5262  0356  0781               	addwf	1,f
  5263  0357  3F00               	moviw [0]fsr0
  5264  0358  00DD               	movwf	vfpfcnvrt@cp
  5265  0359  3F01               	moviw [1]fsr0
  5266  035A  00DE               	movwf	vfpfcnvrt@cp+1
  5267                           
  5268                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 1154:             retu
      +                          rn stoa(fp, cp);
  5269  035B  085E               	movf	vfpfcnvrt@cp+1,w
  5270  035C  00FB               	movwf	stoa@s+1
  5271  035D  085D               	movf	vfpfcnvrt@cp,w
  5272  035E  00FA               	movwf	stoa@s
  5273  035F  085F               	movf	vfpfcnvrt@fp,w
  5274  0360  3185  258C         	fcall	_stoa
  5275  0362  087B               	movf	?_stoa+1,w
  5276  0363  0020               	movlb	0	; select bank0
  5277  0364  00CF               	movwf	?_vfpfcnvrt+1
  5278  0365  087A               	movf	?_stoa,w
  5279  0366  00CE               	movwf	?_vfpfcnvrt
  5280  0367  0008               	return
  5281  0368                     l2816:	
  5282                           
  5283                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 1350:         if ((*fm
      +                          t)[0] == '%') {
  5284  0368  084E               	movf	vfpfcnvrt@fmt,w
  5285  0369  0086               	movwf	6
  5286  036A  0187               	clrf	7
  5287  036B  3F40               	moviw [0]fsr1
  5288  036C  00D0               	movwf	??_vfpfcnvrt
  5289  036D  3F41               	moviw [1]fsr1
  5290  036E  00D1               	movwf	??_vfpfcnvrt+1
  5291  036F  0850               	movf	??_vfpfcnvrt,w
  5292  0370  0084               	movwf	4
  5293  0371  0851               	movf	??_vfpfcnvrt+1,w
  5294  0372  0085               	movwf	5
  5295  0373  0012               	moviw fsr0++
  5296  0374  3A25               	xorlw	37
  5297  0375  1D03               	btfss	3,2
  5298  0376  2B8F               	goto	l2826
  5299                           
  5300                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 1351:             ++*f
      +                          mt;
  5301  0377  084E               	movf	vfpfcnvrt@fmt,w
  5302  0378  0086               	movwf	6
  5303  0379  0187               	clrf	7
  5304  037A  3001               	movlw	1
  5305  037B  0781               	addwf	1,f
  5306  037C  3141               	addfsr 1,1
  5307  037D  1803               	skipnc
  5308  037E  0A81               	incf	1,f
  5309                           
  5310                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 1352:             fput
      +                          c((int)'%', fp);
  5311  037F  3025               	movlw	37
  5312  0380  00F2               	movwf	fputc@c
  5313  0381  3000               	movlw	0
  5314  0382  00F3               	movwf	fputc@c+1
  5315  0383  085F               	movf	vfpfcnvrt@fp,w
  5316  0384  00D0               	movwf	??_vfpfcnvrt
  5317  0385  0850               	movf	??_vfpfcnvrt,w
  5318  0386  00F4               	movwf	fputc@fp
  5319  0387  318E  26C6         	fcall	_fputc
  5320  0389                     l2822:	
  5321                           
  5322                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 1353:             retu
      +                          rn 1;
  5323  0389  3001               	movlw	1
  5324  038A  0020               	movlb	0	; select bank0
  5325  038B  00CE               	movwf	?_vfpfcnvrt
  5326  038C  3000               	movlw	0
  5327  038D  00CF               	movwf	?_vfpfcnvrt+1
  5328  038E  0008               	return
  5329  038F                     l2826:	
  5330                           
  5331                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 1357:         ++*fmt;
  5332  038F  084E               	movf	vfpfcnvrt@fmt,w
  5333  0390  0086               	movwf	6
  5334  0391  0187               	clrf	7
  5335  0392  3001               	movlw	1
  5336  0393  0781               	addwf	1,f
  5337  0394  3141               	addfsr 1,1
  5338  0395  1803               	skipnc
  5339  0396  0A81               	incf	1,f
  5340                           
  5341                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 1358:         return 0
      +                          ;
  5342  0397  01CE               	clrf	?_vfpfcnvrt
  5343  0398  01CF               	clrf	?_vfpfcnvrt+1
  5344  0399  0008               	return
  5345  039A                     l2832:	
  5346                           
  5347                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 1362:     fputc((int)(
      +                          *fmt)[0], fp);
  5348  039A  084E               	movf	vfpfcnvrt@fmt,w
  5349  039B  0086               	movwf	6
  5350  039C  0187               	clrf	7
  5351  039D  3F40               	moviw [0]fsr1
  5352  039E  00D0               	movwf	??_vfpfcnvrt
  5353  039F  3F41               	moviw [1]fsr1
  5354  03A0  00D1               	movwf	??_vfpfcnvrt+1
  5355  03A1  0850               	movf	??_vfpfcnvrt,w
  5356  03A2  0084               	movwf	4
  5357  03A3  0851               	movf	??_vfpfcnvrt+1,w
  5358  03A4  0085               	movwf	5
  5359  03A5  0800               	movf	0,w	;code access
  5360  03A6  00D2               	movwf	??_vfpfcnvrt+2
  5361  03A7  01D3               	clrf	??_vfpfcnvrt+3
  5362  03A8  0852               	movf	??_vfpfcnvrt+2,w
  5363  03A9  00F2               	movwf	fputc@c
  5364  03AA  0853               	movf	??_vfpfcnvrt+3,w
  5365  03AB  00F3               	movwf	fputc@c+1
  5366  03AC  085F               	movf	vfpfcnvrt@fp,w
  5367  03AD  00D4               	movwf	??_vfpfcnvrt+4
  5368  03AE  0854               	movf	??_vfpfcnvrt+4,w
  5369  03AF  00F4               	movwf	fputc@fp
  5370  03B0  318E  26C6  3182   	fcall	_fputc
  5371                           
  5372                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 1363:     ++*fmt;
  5373  03B3  0020               	movlb	0	; select bank0
  5374  03B4  084E               	movf	vfpfcnvrt@fmt,w
  5375  03B5  0086               	movwf	6
  5376  03B6  0187               	clrf	7
  5377  03B7  3001               	movlw	1
  5378  03B8  0781               	addwf	1,f
  5379  03B9  3141               	addfsr 1,1
  5380  03BA  1803               	skipnc
  5381  03BB  0A81               	incf	1,f
  5382  03BC  2B89               	goto	l2822
  5383  03BD                     __end_of_vfpfcnvrt:	
  5384                           
  5385                           	psect	text11
  5386  058C                     __ptext11:	
  5387 ;; *************** function _stoa *****************
  5388 ;; Defined at:
  5389 ;;		line 546 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c"
  5390 ;; Parameters:    Size  Location     Type
  5391 ;;  fp              1    wreg     PTR struct _IO_FILE
  5392 ;;		 -> sprintf@f(5), NULL(0), 
  5393 ;;  s               2   10[COMMON] PTR unsigned char 
  5394 ;;		 -> ?_printf(2), ?_sprintf(2), gps_vertical_velocity(8), gps_course_over_ground(8), 
  5395 ;;		 -> gps_speed_over_ground(8), gps_altitude(12), gps_longitude(16), gps_latitude(16), 
  5396 ;;		 -> gps_time(10), 
  5397 ;; Auto vars:     Size  Location     Type
  5398 ;;  fp              1   14[BANK0 ] PTR struct _IO_FILE
  5399 ;;		 -> sprintf@f(5), NULL(0), 
  5400 ;;  nuls            7    3[BANK0 ] unsigned char [7]
  5401 ;;  l               2   19[BANK0 ] int 
  5402 ;;  p               2   17[BANK0 ] int 
  5403 ;;  cp              2   15[BANK0 ] PTR unsigned char 
  5404 ;;		 -> ?_printf(2), ?_sprintf(2), stoa@nuls(7), gps_vertical_velocity(8), 
  5405 ;;		 -> gps_course_over_ground(8), gps_speed_over_ground(8), gps_altitude(12), gps_longitude(16), 
  5406 ;;		 -> gps_latitude(16), gps_time(10), 
  5407 ;;  w               2   12[BANK0 ] int 
  5408 ;;  i               2   10[BANK0 ] int 
  5409 ;; Return value:  Size  Location     Type
  5410 ;;                  2   10[COMMON] int 
  5411 ;; Registers used:
  5412 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5413 ;; Tracked objects:
  5414 ;;		On entry : 0/0
  5415 ;;		On exit  : 0/0
  5416 ;;		Unchanged: 0/0
  5417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5418 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5419 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5420 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5421 ;;      Totals:         2      21       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5422 ;;Total ram usage:       23 bytes
  5423 ;; Hardware stack levels used:    1
  5424 ;; Hardware stack levels required when called:    6
  5425 ;; This function calls:
  5426 ;;		_fputc
  5427 ;;		_strlen
  5428 ;; This function is called by:
  5429 ;;		_vfpfcnvrt
  5430 ;; This function uses a non-reentrant model
  5431 ;;
  5432                           
  5433                           
  5434                           ;psect for function _stoa
  5435  058C                     _stoa:	
  5436                           
  5437                           ;incstack = 0
  5438                           ; Regs used in _stoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5439                           ;stoa@fp stored from wreg
  5440  058C  0020               	movlb	0	; select bank0
  5441  058D  00AE               	movwf	stoa@fp
  5442                           
  5443                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 546: static int stoa(F
      +                          ILE *fp, char *s);K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 547: 
      +                          {;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 548:     char *cp, nu
      +                          ls[] = "(null)";
  5444  058E  30E5               	movlw	low stoa@F1139
  5445  058F  0086               	movwf	6
  5446  0590  3000               	movlw	high stoa@F1139
  5447  0591  0087               	movwf	7
  5448  0592  3023               	movlw	low stoa@nuls
  5449  0593  0084               	movwf	4
  5450  0594  3000               	movlw	high stoa@nuls
  5451  0595  0085               	movwf	5
  5452  0596  3007               	movlw	7
  5453  0597  00A0               	movwf	??_stoa
  5454  0598                     u2500:	
  5455  0598  0016               	moviw fsr1++
  5456  0599  001A               	movwi fsr0++
  5457  059A  0BA0               	decfsz	??_stoa,f
  5458  059B  2D98               	goto	u2500
  5459                           
  5460                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 549:     int i, l, p, 
      +                          w;;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 552:     cp = s;
  5461  059C  087B               	movf	stoa@s+1,w
  5462  059D  00B0               	movwf	stoa@cp+1
  5463  059E  087A               	movf	stoa@s,w
  5464  059F  00AF               	movwf	stoa@cp
  5465                           
  5466                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 553:     if (!cp) {
  5467  05A0  082F               	movf	stoa@cp,w
  5468  05A1  0430               	iorwf	stoa@cp+1,w
  5469  05A2  1D03               	btfss	3,2
  5470  05A3  2DA8               	goto	l2744
  5471                           
  5472                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 554:         cp = nuls
      +                          ;
  5473  05A4  3023               	movlw	low stoa@nuls
  5474  05A5  00AF               	movwf	stoa@cp
  5475  05A6  3000               	movlw	high stoa@nuls
  5476  05A7  00B0               	movwf	stoa@cp+1
  5477  05A8                     l2744:	
  5478                           
  5479                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 558:     l = strlen(cp
      +                          );
  5480  05A8  0830               	movf	stoa@cp+1,w
  5481  05A9  00F1               	movwf	strlen@s+1
  5482  05AA  082F               	movf	stoa@cp,w
  5483  05AB  00F0               	movwf	strlen@s
  5484  05AC  318D  2528  3185   	fcall	_strlen
  5485  05AF  0871               	movf	?_strlen+1,w
  5486  05B0  0020               	movlb	0	; select bank0
  5487  05B1  00B4               	movwf	stoa@l+1
  5488  05B2  0870               	movf	?_strlen,w
  5489  05B3  00B3               	movwf	stoa@l
  5490                           
  5491                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 559:     p = prec;
  5492  05B4  0021               	movlb	1	; select bank1
  5493  05B5  082D               	movf	(_prec+1)^(0+128),w
  5494  05B6  0020               	movlb	0	; select bank0
  5495  05B7  00B2               	movwf	stoa@p+1
  5496  05B8  0021               	movlb	1	; select bank1
  5497  05B9  082C               	movf	_prec^(0+128),w
  5498  05BA  0020               	movlb	0	; select bank0
  5499  05BB  00B1               	movwf	stoa@p
  5500                           
  5501                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 560:     l = (!(p < 0)
      +                           && (p < l)) ? p : l;
  5502  05BC  1BB2               	btfsc	stoa@p+1,7
  5503  05BD  2DCF               	goto	l484
  5504  05BE  0832               	movf	stoa@p+1,w
  5505  05BF  3A80               	xorlw	128
  5506  05C0  00A0               	movwf	??_stoa
  5507  05C1  0834               	movf	stoa@l+1,w
  5508  05C2  3A80               	xorlw	128
  5509  05C3  0220               	subwf	??_stoa,w
  5510  05C4  1D03               	skipz
  5511  05C5  2DC8               	goto	u2535
  5512  05C6  0833               	movf	stoa@l,w
  5513  05C7  0231               	subwf	stoa@p,w
  5514  05C8                     u2535:	
  5515  05C8  1803               	btfsc	3,0
  5516  05C9  2DCF               	goto	l484
  5517  05CA  0020               	movlb	0	; select bank0
  5518  05CB  0832               	movf	stoa@p+1,w
  5519  05CC  00B4               	movwf	stoa@l+1
  5520  05CD  0831               	movf	stoa@p,w
  5521  05CE  00B3               	movwf	stoa@l
  5522  05CF                     l484:	
  5523                           
  5524                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 561:     p = l;
  5525  05CF  0020               	movlb	0	; select bank0
  5526  05D0  0834               	movf	stoa@l+1,w
  5527  05D1  00B2               	movwf	stoa@p+1
  5528  05D2  0833               	movf	stoa@l,w
  5529  05D3  00B1               	movwf	stoa@p
  5530                           
  5531                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 562:     w = width;
  5532  05D4  0021               	movlb	1	; select bank1
  5533  05D5  082B               	movf	(_width+1)^(0+128),w
  5534  05D6  0020               	movlb	0	; select bank0
  5535  05D7  00AD               	movwf	stoa@w+1
  5536  05D8  0021               	movlb	1	; select bank1
  5537  05D9  082A               	movf	_width^(0+128),w
  5538  05DA  0020               	movlb	0	; select bank0
  5539  05DB  00AC               	movwf	stoa@w
  5540                           
  5541                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 565:     if (!(flags &
      +                           (1 << 0))) {
  5542  05DC  0021               	movlb	1	; select bank1
  5543  05DD  1C2E               	btfss	_flags^(0+128),0
  5544  05DE  2DF1               	goto	l2762
  5545  05DF  2DFE               	goto	l2764
  5546  05E0                     l2758:	
  5547                           
  5548                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 567:             fputc
      +                          (' ', fp);
  5549  05E0  3020               	movlw	32
  5550  05E1  00F2               	movwf	fputc@c
  5551  05E2  3000               	movlw	0
  5552  05E3  00F3               	movwf	fputc@c+1
  5553  05E4  0020               	movlb	0	; select bank0
  5554  05E5  082E               	movf	stoa@fp,w
  5555  05E6  00A0               	movwf	??_stoa
  5556  05E7  0820               	movf	??_stoa,w
  5557  05E8  00F4               	movwf	fputc@fp
  5558  05E9  318E  26C6  3185   	fcall	_fputc
  5559                           
  5560                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 568:             ++l;
  5561  05EC  3001               	movlw	1
  5562  05ED  0020               	movlb	0	; select bank0
  5563  05EE  07B3               	addwf	stoa@l,f
  5564  05EF  3000               	movlw	0
  5565  05F0  3DB4               	addwfc	stoa@l+1,f
  5566  05F1                     l2762:	
  5567                           
  5568                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 566:         while (l 
      +                          < w) {
  5569  05F1  0020               	movlb	0	; select bank0
  5570  05F2  0834               	movf	stoa@l+1,w
  5571  05F3  3A80               	xorlw	128
  5572  05F4  00A0               	movwf	??_stoa
  5573  05F5  082D               	movf	stoa@w+1,w
  5574  05F6  3A80               	xorlw	128
  5575  05F7  0220               	subwf	??_stoa,w
  5576  05F8  1D03               	skipz
  5577  05F9  2DFC               	goto	u2555
  5578  05FA  082C               	movf	stoa@w,w
  5579  05FB  0233               	subwf	stoa@l,w
  5580  05FC                     u2555:	
  5581  05FC  1C03               	skipc
  5582  05FD  2DE0               	goto	l2758
  5583  05FE                     l2764:	
  5584                           
  5585                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 573:     i = 0;
  5586  05FE  0020               	movlb	0	; select bank0
  5587  05FF  01AA               	clrf	stoa@i
  5588  0600  01AB               	clrf	stoa@i+1
  5589  0601                     l2772:	
  5590                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 574:     while (i < p)
      +                           {
  5591                           
  5592                           
  5593                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 574:     while (i < p)
      +                           {
  5594  0601  082B               	movf	stoa@i+1,w
  5595  0602  3A80               	xorlw	128
  5596  0603  00A0               	movwf	??_stoa
  5597  0604  0832               	movf	stoa@p+1,w
  5598  0605  3A80               	xorlw	128
  5599  0606  0220               	subwf	??_stoa,w
  5600  0607  1D03               	skipz
  5601  0608  2E0B               	goto	u2565
  5602  0609  0831               	movf	stoa@p,w
  5603  060A  022A               	subwf	stoa@i,w
  5604  060B                     u2565:	
  5605  060B  1803               	btfsc	3,0
  5606  060C  2E2A               	goto	l493
  5607                           
  5608                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 575:         fputc(*cp
      +                          , fp);
  5609  060D  0020               	movlb	0	; select bank0
  5610  060E  082F               	movf	stoa@cp,w
  5611  060F  0086               	movwf	6
  5612  0610  0830               	movf	stoa@cp+1,w
  5613  0611  0087               	movwf	7
  5614  0612  0801               	movf	1,w
  5615  0613  00A0               	movwf	??_stoa
  5616  0614  01A1               	clrf	??_stoa+1
  5617  0615  0820               	movf	??_stoa,w
  5618  0616  00F2               	movwf	fputc@c
  5619  0617  0821               	movf	??_stoa+1,w
  5620  0618  00F3               	movwf	fputc@c+1
  5621  0619  082E               	movf	stoa@fp,w
  5622  061A  00A2               	movwf	??_stoa+2
  5623  061B  0822               	movf	??_stoa+2,w
  5624  061C  00F4               	movwf	fputc@fp
  5625  061D  318E  26C6  3185   	fcall	_fputc
  5626                           
  5627                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 576:         ++cp;
  5628  0620  3001               	movlw	1
  5629  0621  0020               	movlb	0	; select bank0
  5630  0622  07AF               	addwf	stoa@cp,f
  5631  0623  3000               	movlw	0
  5632  0624  3DB0               	addwfc	stoa@cp+1,f
  5633                           
  5634                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 577:         ++i;
  5635  0625  3001               	movlw	1
  5636  0626  07AA               	addwf	stoa@i,f
  5637  0627  3000               	movlw	0
  5638  0628  3DAB               	addwfc	stoa@i+1,f
  5639  0629  2E01               	goto	l2772
  5640  062A                     l493:	
  5641                           
  5642                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 581:     if (flags & (
      +                          1 << 0)) {
  5643  062A  0021               	movlb	1	; select bank1
  5644  062B  182E               	btfsc	_flags^(0+128),0
  5645  062C  2E3F               	goto	l2780
  5646  062D  2E4C               	goto	l2782
  5647  062E                     l2776:	
  5648                           
  5649                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 583:             fputc
      +                          (' ', fp);
  5650  062E  3020               	movlw	32
  5651  062F  00F2               	movwf	fputc@c
  5652  0630  3000               	movlw	0
  5653  0631  00F3               	movwf	fputc@c+1
  5654  0632  0020               	movlb	0	; select bank0
  5655  0633  082E               	movf	stoa@fp,w
  5656  0634  00A0               	movwf	??_stoa
  5657  0635  0820               	movf	??_stoa,w
  5658  0636  00F4               	movwf	fputc@fp
  5659  0637  318E  26C6  3185   	fcall	_fputc
  5660                           
  5661                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 584:             ++l;
  5662  063A  3001               	movlw	1
  5663  063B  0020               	movlb	0	; select bank0
  5664  063C  07B3               	addwf	stoa@l,f
  5665  063D  3000               	movlw	0
  5666  063E  3DB4               	addwfc	stoa@l+1,f
  5667  063F                     l2780:	
  5668                           
  5669                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 582:         while (l 
      +                          < w) {
  5670  063F  0020               	movlb	0	; select bank0
  5671  0640  0834               	movf	stoa@l+1,w
  5672  0641  3A80               	xorlw	128
  5673  0642  00A0               	movwf	??_stoa
  5674  0643  082D               	movf	stoa@w+1,w
  5675  0644  3A80               	xorlw	128
  5676  0645  0220               	subwf	??_stoa,w
  5677  0646  1D03               	skipz
  5678  0647  2E4A               	goto	u2585
  5679  0648  082C               	movf	stoa@w,w
  5680  0649  0233               	subwf	stoa@l,w
  5681  064A                     u2585:	
  5682  064A  1C03               	skipc
  5683  064B  2E2E               	goto	l2776
  5684  064C                     l2782:	
  5685                           
  5686                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 588:     return l;
  5687  064C  0020               	movlb	0	; select bank0
  5688  064D  0834               	movf	stoa@l+1,w
  5689  064E  00FB               	movwf	?_stoa+1
  5690  064F  0833               	movf	stoa@l,w
  5691  0650  00FA               	movwf	?_stoa
  5692  0651  0008               	return
  5693  0652                     __end_of_stoa:	
  5694                           
  5695                           	psect	text12
  5696  0042                     __ptext12:	
  5697 ;; *************** function _dtoa *****************
  5698 ;; Defined at:
  5699 ;;		line 274 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c"
  5700 ;; Parameters:    Size  Location     Type
  5701 ;;  fp              1    wreg     PTR struct _IO_FILE
  5702 ;;		 -> sprintf@f(5), NULL(0), 
  5703 ;;  d               8   16[BANK0 ] long long 
  5704 ;; Auto vars:     Size  Location     Type
  5705 ;;  fp              1   27[BANK0 ] PTR struct _IO_FILE
  5706 ;;		 -> sprintf@f(5), NULL(0), 
  5707 ;;  n               8   36[BANK0 ] long long 
  5708 ;;  i               2   44[BANK0 ] int 
  5709 ;;  s               2   34[BANK0 ] int 
  5710 ;;  w               2   32[BANK0 ] int 
  5711 ;;  p               2   30[BANK0 ] int 
  5712 ;; Return value:  Size  Location     Type
  5713 ;;                  2   16[BANK0 ] int 
  5714 ;; Registers used:
  5715 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5716 ;; Tracked objects:
  5717 ;;		On entry : 0/0
  5718 ;;		On exit  : 0/0
  5719 ;;		Unchanged: 0/0
  5720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5721 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5722 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5723 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5724 ;;      Totals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5725 ;;Total ram usage:       30 bytes
  5726 ;; Hardware stack levels used:    1
  5727 ;; Hardware stack levels required when called:    8
  5728 ;; This function calls:
  5729 ;;		___aodiv
  5730 ;;		___aomod
  5731 ;;		_abs
  5732 ;;		_pad
  5733 ;; This function is called by:
  5734 ;;		_vfpfcnvrt
  5735 ;; This function uses a non-reentrant model
  5736 ;;
  5737                           
  5738                           
  5739                           ;psect for function _dtoa
  5740  0042                     _dtoa:	
  5741                           
  5742                           ;incstack = 0
  5743                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5744                           ;dtoa@fp stored from wreg
  5745  0042  0020               	movlb	0	; select bank0
  5746  0043  00BB               	movwf	dtoa@fp
  5747                           
  5748                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 274: static int dtoa(F
      +                          ILE *fp, long long d);K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 2
      +                          75: {;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 276:     int i, p
      +                          , s, w;;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 277:     long l
      +                          ong n;;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 280:     n = d;
  5749  0044  0830               	movf	dtoa@d,w
  5750  0045  00C4               	movwf	dtoa@n
  5751  0046  0831               	movf	dtoa@d+1,w
  5752  0047  00C5               	movwf	dtoa@n+1
  5753  0048  0832               	movf	dtoa@d+2,w
  5754  0049  00C6               	movwf	dtoa@n+2
  5755  004A  0833               	movf	dtoa@d+3,w
  5756  004B  00C7               	movwf	dtoa@n+3
  5757  004C  0834               	movf	dtoa@d+4,w
  5758  004D  00C8               	movwf	dtoa@n+4
  5759  004E  0835               	movf	dtoa@d+5,w
  5760  004F  00C9               	movwf	dtoa@n+5
  5761  0050  0836               	movf	dtoa@d+6,w
  5762  0051  00CA               	movwf	dtoa@n+6
  5763  0052  0837               	movf	dtoa@d+7,w
  5764  0053  00CB               	movwf	dtoa@n+7
  5765                           
  5766                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 281:     s = n < 0 ? 1
      +                           : 0;
  5767  0054  3044               	movlw	low dtoa@n
  5768  0055  0086               	movwf	6
  5769  0056  3000               	movlw	high dtoa@n
  5770  0057  0087               	movwf	7
  5771  0058  3F47               	moviw [7]fsr1
  5772  0059  00B8               	movwf	??_dtoa
  5773  005A  1FB8               	btfss	??_dtoa,7
  5774  005B  285E               	goto	u2340
  5775  005C  3001               	movlw	1
  5776  005D  285F               	goto	u2350
  5777  005E                     u2340:	
  5778  005E  3000               	movlw	0
  5779  005F                     u2350:	
  5780  005F  0020               	movlb	0	; select bank0
  5781  0060  00B9               	movwf	??_dtoa+1
  5782  0061  01BA               	clrf	??_dtoa+2
  5783  0062  0839               	movf	??_dtoa+1,w
  5784  0063  00C2               	movwf	dtoa@s
  5785  0064  083A               	movf	??_dtoa+2,w
  5786  0065  00C3               	movwf	dtoa@s+1
  5787                           
  5788                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 282:     if (s) {
  5789  0066  0842               	movf	dtoa@s,w
  5790  0067  0443               	iorwf	dtoa@s+1,w
  5791  0068  1903               	btfsc	3,2
  5792  0069  2888               	goto	l452
  5793                           
  5794                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 283:         n = -n;
  5795  006A  09C4               	comf	dtoa@n,f
  5796  006B  09C5               	comf	dtoa@n+1,f
  5797  006C  09C6               	comf	dtoa@n+2,f
  5798  006D  09C7               	comf	dtoa@n+3,f
  5799  006E  09C8               	comf	dtoa@n+4,f
  5800  006F  09C9               	comf	dtoa@n+5,f
  5801  0070  09CA               	comf	dtoa@n+6,f
  5802  0071  09CB               	comf	dtoa@n+7,f
  5803  0072  0AC4               	incf	dtoa@n,f
  5804  0073  1D03               	skipz
  5805  0074  2888               	goto	l452
  5806  0075  0AC5               	incf	dtoa@n+1,f
  5807  0076  1D03               	skipz
  5808  0077  2888               	goto	l452
  5809  0078  0AC6               	incf	dtoa@n+2,f
  5810  0079  1D03               	skipz
  5811  007A  2888               	goto	l452
  5812  007B  0AC7               	incf	dtoa@n+3,f
  5813  007C  1D03               	skipz
  5814  007D  2888               	goto	l452
  5815  007E  0AC8               	incf	dtoa@n+4,f
  5816  007F  1D03               	skipz
  5817  0080  2888               	goto	l452
  5818  0081  0AC9               	incf	dtoa@n+5,f
  5819  0082  1D03               	skipz
  5820  0083  2888               	goto	l452
  5821  0084  0ACA               	incf	dtoa@n+6,f
  5822  0085  1D03               	skipz
  5823  0086  2888               	goto	l452
  5824  0087  0ACB               	incf	dtoa@n+7,f
  5825  0088                     l452:	
  5826                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 284:     }
  5827                           
  5828                           
  5829                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 287:     if (!(prec < 
      +                          0)) {
  5830  0088  0021               	movlb	1	; select bank1
  5831  0089  1BAD               	btfsc	(_prec+1)^(0+128),7
  5832  008A  288F               	goto	l453
  5833                           
  5834                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 288:         flags &= 
      +                          ~(1 << 1);
  5835  008B  30FD               	movlw	253
  5836  008C  05AE               	andwf	_flags^(0+128),f
  5837  008D  30FF               	movlw	255
  5838  008E  05AF               	andwf	(_flags+1)^(0+128),f
  5839  008F                     l453:	
  5840                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 289:     }
  5841                           
  5842                           
  5843                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 290:     p = (0 < prec
      +                          ) ? prec : 1;
  5844  008F  082D               	movf	(_prec+1)^(0+128),w
  5845  0090  3A80               	xorlw	128
  5846  0091  0020               	movlb	0	; select bank0
  5847  0092  00B8               	movwf	??_dtoa
  5848  0093  3080               	movlw	128
  5849  0094  0238               	subwf	??_dtoa,w
  5850  0095  1D03               	skipz
  5851  0096  289A               	goto	u2395
  5852  0097  3001               	movlw	1
  5853  0098  0021               	movlb	1	; select bank1
  5854  0099  022C               	subwf	_prec^(0+128),w
  5855  009A                     u2395:	
  5856  009A  1803               	skipnc
  5857  009B  28A2               	goto	l2690
  5858  009C  3001               	movlw	1
  5859  009D  0020               	movlb	0	; select bank0
  5860  009E  00BE               	movwf	dtoa@p
  5861  009F  3000               	movlw	0
  5862  00A0  00BF               	movwf	dtoa@p+1
  5863  00A1  28AA               	goto	l457
  5864  00A2                     l2690:	
  5865  00A2  0021               	movlb	1	; select bank1
  5866  00A3  082D               	movf	(_prec+1)^(0+128),w
  5867  00A4  0020               	movlb	0	; select bank0
  5868  00A5  00BF               	movwf	dtoa@p+1
  5869  00A6  0021               	movlb	1	; select bank1
  5870  00A7  082C               	movf	_prec^(0+128),w
  5871  00A8  0020               	movlb	0	; select bank0
  5872  00A9  00BE               	movwf	dtoa@p
  5873  00AA                     l457:	
  5874                           
  5875                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 291:     w = width;
  5876  00AA  0021               	movlb	1	; select bank1
  5877  00AB  082B               	movf	(_width+1)^(0+128),w
  5878  00AC  0020               	movlb	0	; select bank0
  5879  00AD  00C1               	movwf	dtoa@w+1
  5880  00AE  0021               	movlb	1	; select bank1
  5881  00AF  082A               	movf	_width^(0+128),w
  5882  00B0  0020               	movlb	0	; select bank0
  5883  00B1  00C0               	movwf	dtoa@w
  5884                           
  5885                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 292:     if (s || (fla
      +                          gs & (1 << 2))) {
  5886  00B2  0842               	movf	dtoa@s,w
  5887  00B3  0443               	iorwf	dtoa@s+1,w
  5888  00B4  1D03               	btfss	3,2
  5889  00B5  28B9               	goto	l2696
  5890  00B6  0021               	movlb	1	; select bank1
  5891  00B7  1D2E               	btfss	_flags^(0+128),2
  5892  00B8  28BE               	goto	l458
  5893  00B9                     l2696:	
  5894                           
  5895                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 293:         --w;
  5896  00B9  30FF               	movlw	255
  5897  00BA  0020               	movlb	0	; select bank0
  5898  00BB  07C0               	addwf	dtoa@w,f
  5899  00BC  30FF               	movlw	255
  5900  00BD  3DC1               	addwfc	dtoa@w+1,f
  5901  00BE                     l458:	
  5902                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 294:     }
  5903                           
  5904                           
  5905                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 297:     i = sizeof(db
      +                          uf) - 1;
  5906  00BE  301F               	movlw	31
  5907  00BF  0020               	movlb	0	; select bank0
  5908  00C0  00CC               	movwf	dtoa@i
  5909  00C1  3000               	movlw	0
  5910  00C2  00CD               	movwf	dtoa@i+1
  5911                           
  5912                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 298:     dbuf[i] = '\0
      +                          ';
  5913  00C3  0024               	movlb	4	; select bank4
  5914  00C4  01BF               	clrf	(_dbuf^(0+512)+31)
  5915                           
  5916                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 299:     while (!(i < 
      +                          1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5917  00C5  2954               	goto	l461
  5918  00C6                     l2710:	
  5919  00C6  0020               	movlb	0	; select bank0
  5920  00C7  0844               	movf	dtoa@n,w
  5921  00C8  0445               	iorwf	dtoa@n+1,w
  5922  00C9  0446               	iorwf	dtoa@n+2,w
  5923  00CA  0447               	iorwf	dtoa@n+3,w
  5924  00CB  0448               	iorwf	dtoa@n+4,w
  5925  00CC  0449               	iorwf	dtoa@n+5,w
  5926  00CD  044A               	iorwf	dtoa@n+6,w
  5927  00CE  044B               	iorwf	dtoa@n+7,w
  5928  00CF  1D03               	skipz
  5929  00D0  28EB               	goto	l2700
  5930  00D1  083F               	movf	dtoa@p+1,w
  5931  00D2  3A80               	xorlw	128
  5932  00D3  00B8               	movwf	??_dtoa
  5933  00D4  3080               	movlw	128
  5934  00D5  0238               	subwf	??_dtoa,w
  5935  00D6  1D03               	skipz
  5936  00D7  28DA               	goto	u2445
  5937  00D8  3001               	movlw	1
  5938  00D9  023E               	subwf	dtoa@p,w
  5939  00DA                     u2445:	
  5940  00DA  1803               	skipnc
  5941  00DB  28EB               	goto	l2700
  5942  00DC  0020               	movlb	0	; select bank0
  5943  00DD  0841               	movf	dtoa@w+1,w
  5944  00DE  3A80               	xorlw	128
  5945  00DF  00B8               	movwf	??_dtoa
  5946  00E0  3080               	movlw	128
  5947  00E1  0238               	subwf	??_dtoa,w
  5948  00E2  1D03               	skipz
  5949  00E3  28E6               	goto	u2455
  5950  00E4  3001               	movlw	1
  5951  00E5  0240               	subwf	dtoa@w,w
  5952  00E6                     u2455:	
  5953  00E6  1C03               	skipc
  5954  00E7  2960               	goto	l2718
  5955  00E8  0021               	movlb	1	; select bank1
  5956  00E9  1CAE               	btfss	_flags^(0+128),1
  5957  00EA  2960               	goto	l2718
  5958  00EB                     l2700:	
  5959                           
  5960                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 300:         --i;
  5961  00EB  30FF               	movlw	255
  5962  00EC  0020               	movlb	0	; select bank0
  5963  00ED  07CC               	addwf	dtoa@i,f
  5964  00EE  30FF               	movlw	255
  5965  00EF  3DCD               	addwfc	dtoa@i+1,f
  5966                           
  5967                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 301:         dbuf[i] =
      +                           '0' + abs(n % 10);
  5968  00F0  300A               	movlw	10
  5969  00F1  00A0               	movwf	___aomod@divisor
  5970  00F2  01A1               	clrf	___aomod@divisor+1
  5971  00F3  01A2               	clrf	___aomod@divisor+2
  5972  00F4  01A3               	clrf	___aomod@divisor+3
  5973  00F5  01A4               	clrf	___aomod@divisor+4
  5974  00F6  01A5               	clrf	___aomod@divisor+5
  5975  00F7  01A6               	clrf	___aomod@divisor+6
  5976  00F8  01A7               	clrf	___aomod@divisor+7
  5977  00F9  0844               	movf	dtoa@n,w
  5978  00FA  00A8               	movwf	___aomod@dividend
  5979  00FB  0845               	movf	dtoa@n+1,w
  5980  00FC  00A9               	movwf	___aomod@dividend+1
  5981  00FD  0846               	movf	dtoa@n+2,w
  5982  00FE  00AA               	movwf	___aomod@dividend+2
  5983  00FF  0847               	movf	dtoa@n+3,w
  5984  0100  00AB               	movwf	___aomod@dividend+3
  5985  0101  0848               	movf	dtoa@n+4,w
  5986  0102  00AC               	movwf	___aomod@dividend+4
  5987  0103  0849               	movf	dtoa@n+5,w
  5988  0104  00AD               	movwf	___aomod@dividend+5
  5989  0105  084A               	movf	dtoa@n+6,w
  5990  0106  00AE               	movwf	___aomod@dividend+6
  5991  0107  084B               	movf	dtoa@n+7,w
  5992  0108  00AF               	movwf	___aomod@dividend+7
  5993  0109  3184  24B0  3180   	fcall	___aomod
  5994  010C  0020               	movlb	0	; select bank0
  5995  010D  0821               	movf	?___aomod+1,w
  5996  010E  00F4               	movwf	abs@a+1
  5997  010F  0820               	movf	?___aomod,w
  5998  0110  00F3               	movwf	abs@a
  5999  0111  318D  253F  3180   	fcall	_abs
  6000  0114  0873               	movf	?_abs,w
  6001  0115  3E30               	addlw	48
  6002  0116  0020               	movlb	0	; select bank0
  6003  0117  00B8               	movwf	??_dtoa
  6004  0118  084C               	movf	dtoa@i,w
  6005  0119  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6006  011A  0086               	movwf	6
  6007  011B  3002               	movlw	2	; select bank4/5
  6008  011C  0087               	movwf	7
  6009  011D  0838               	movf	??_dtoa,w
  6010  011E  0081               	movwf	1
  6011                           
  6012                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 302:         --p;
  6013  011F  30FF               	movlw	255
  6014  0120  07BE               	addwf	dtoa@p,f
  6015  0121  30FF               	movlw	255
  6016  0122  3DBF               	addwfc	dtoa@p+1,f
  6017                           
  6018                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 303:         --w;
  6019  0123  30FF               	movlw	255
  6020  0124  07C0               	addwf	dtoa@w,f
  6021  0125  30FF               	movlw	255
  6022  0126  3DC1               	addwfc	dtoa@w+1,f
  6023                           
  6024                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 304:         n = n / 1
      +                          0;
  6025  0127  300A               	movlw	10
  6026  0128  00A0               	movwf	___aodiv@divisor
  6027  0129  01A1               	clrf	___aodiv@divisor+1
  6028  012A  01A2               	clrf	___aodiv@divisor+2
  6029  012B  01A3               	clrf	___aodiv@divisor+3
  6030  012C  01A4               	clrf	___aodiv@divisor+4
  6031  012D  01A5               	clrf	___aodiv@divisor+5
  6032  012E  01A6               	clrf	___aodiv@divisor+6
  6033  012F  01A7               	clrf	___aodiv@divisor+7
  6034  0130  0844               	movf	dtoa@n,w
  6035  0131  00A8               	movwf	___aodiv@dividend
  6036  0132  0845               	movf	dtoa@n+1,w
  6037  0133  00A9               	movwf	___aodiv@dividend+1
  6038  0134  0846               	movf	dtoa@n+2,w
  6039  0135  00AA               	movwf	___aodiv@dividend+2
  6040  0136  0847               	movf	dtoa@n+3,w
  6041  0137  00AB               	movwf	___aodiv@dividend+3
  6042  0138  0848               	movf	dtoa@n+4,w
  6043  0139  00AC               	movwf	___aodiv@dividend+4
  6044  013A  0849               	movf	dtoa@n+5,w
  6045  013B  00AD               	movwf	___aodiv@dividend+5
  6046  013C  084A               	movf	dtoa@n+6,w
  6047  013D  00AE               	movwf	___aodiv@dividend+6
  6048  013E  084B               	movf	dtoa@n+7,w
  6049  013F  00AF               	movwf	___aodiv@dividend+7
  6050  0140  3183  23BD  3180   	fcall	___aodiv
  6051  0143  0020               	movlb	0	; select bank0
  6052  0144  0820               	movf	?___aodiv,w
  6053  0145  00C4               	movwf	dtoa@n
  6054  0146  0821               	movf	?___aodiv+1,w
  6055  0147  00C5               	movwf	dtoa@n+1
  6056  0148  0822               	movf	?___aodiv+2,w
  6057  0149  00C6               	movwf	dtoa@n+2
  6058  014A  0823               	movf	?___aodiv+3,w
  6059  014B  00C7               	movwf	dtoa@n+3
  6060  014C  0824               	movf	?___aodiv+4,w
  6061  014D  00C8               	movwf	dtoa@n+4
  6062  014E  0825               	movf	?___aodiv+5,w
  6063  014F  00C9               	movwf	dtoa@n+5
  6064  0150  0826               	movf	?___aodiv+6,w
  6065  0151  00CA               	movwf	dtoa@n+6
  6066  0152  0827               	movf	?___aodiv+7,w
  6067  0153  00CB               	movwf	dtoa@n+7
  6068  0154                     l461:	
  6069                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 305:     }
  6070                           
  6071                           
  6072                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 299:     while (!(i < 
      +                          1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6073  0154  0020               	movlb	0	; select bank0
  6074  0155  084D               	movf	dtoa@i+1,w
  6075  0156  3A80               	xorlw	128
  6076  0157  00B8               	movwf	??_dtoa
  6077  0158  3080               	movlw	128
  6078  0159  0238               	subwf	??_dtoa,w
  6079  015A  1D03               	skipz
  6080  015B  295E               	goto	u2425
  6081  015C  3001               	movlw	1
  6082  015D  024C               	subwf	dtoa@i,w
  6083  015E                     u2425:	
  6084  015E  1803               	btfsc	3,0
  6085  015F  28C6               	goto	l2710
  6086  0160                     l2718:	
  6087                           
  6088                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 308:     if (s || (fla
      +                          gs & (1 << 2))) {
  6089  0160  0020               	movlb	0	; select bank0
  6090  0161  0842               	movf	dtoa@s,w
  6091  0162  0443               	iorwf	dtoa@s+1,w
  6092  0163  1D03               	btfss	3,2
  6093  0164  2968               	goto	l2722
  6094  0165  0021               	movlb	1	; select bank1
  6095  0166  1D2E               	btfss	_flags^(0+128),2
  6096  0167  2980               	goto	l2732
  6097  0168                     l2722:	
  6098                           
  6099                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 309:         --i;
  6100  0168  30FF               	movlw	255
  6101  0169  0020               	movlb	0	; select bank0
  6102  016A  07CC               	addwf	dtoa@i,f
  6103  016B  30FF               	movlw	255
  6104  016C  3DCD               	addwfc	dtoa@i+1,f
  6105                           
  6106                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 310:         dbuf[i] =
      +                           s ? '-' : '+';
  6107  016D  0842               	movf	dtoa@s,w
  6108  016E  0443               	iorwf	dtoa@s+1,w
  6109  016F  1D03               	btfss	3,2
  6110  0170  2973               	goto	l2728
  6111  0171  302B               	movlw	43
  6112  0172  2974               	goto	L1
  6113  0173                     l2728:	
  6114  0173  302D               	movlw	45
  6115  0174                     L1:	
  6116  0174  00BC               	movwf	_dtoa$592
  6117  0175  3000               	movlw	0
  6118  0176  00BD               	movwf	_dtoa$592+1
  6119  0177  083C               	movf	_dtoa$592,w
  6120  0178  00B8               	movwf	??_dtoa
  6121  0179  084C               	movf	dtoa@i,w
  6122  017A  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6123  017B  0086               	movwf	6
  6124  017C  3002               	movlw	2	; select bank4/5
  6125  017D  0087               	movwf	7
  6126  017E  0838               	movf	??_dtoa,w
  6127  017F  0081               	movwf	1
  6128  0180                     l2732:	
  6129                           
  6130                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 314:     return pad(fp
      +                          , &dbuf[i], w);
  6131  0180  0020               	movlb	0	; select bank0
  6132  0181  084C               	movf	dtoa@i,w
  6133  0182  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6134  0183  00B8               	movwf	??_dtoa
  6135  0184  0838               	movf	??_dtoa,w
  6136  0185  00A4               	movwf	pad@buf
  6137  0186  0841               	movf	dtoa@w+1,w
  6138  0187  00A6               	movwf	pad@p+1
  6139  0188  0840               	movf	dtoa@w,w
  6140  0189  00A5               	movwf	pad@p
  6141  018A  083B               	movf	dtoa@fp,w
  6142  018B  318F  2759         	fcall	_pad
  6143  018D  0020               	movlb	0	; select bank0
  6144  018E  0825               	movf	?_pad+1,w
  6145  018F  00B1               	movwf	?_dtoa+1
  6146  0190  0824               	movf	?_pad,w
  6147  0191  00B0               	movwf	?_dtoa
  6148  0192  0008               	return
  6149  0193                     __end_of_dtoa:	
  6150                           
  6151                           	psect	text13
  6152  0F59                     __ptext13:	
  6153 ;; *************** function _pad *****************
  6154 ;; Defined at:
  6155 ;;		line 72 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c"
  6156 ;; Parameters:    Size  Location     Type
  6157 ;;  fp              1    wreg     PTR struct _IO_FILE
  6158 ;;		 -> sprintf@f(5), NULL(0), 
  6159 ;;  buf             1    4[BANK0 ] PTR unsigned char 
  6160 ;;		 -> dbuf(32), 
  6161 ;;  p               2    5[BANK0 ] int 
  6162 ;; Auto vars:     Size  Location     Type
  6163 ;;  fp              1   12[BANK0 ] PTR struct _IO_FILE
  6164 ;;		 -> sprintf@f(5), NULL(0), 
  6165 ;;  w               2   10[BANK0 ] int 
  6166 ;;  i               2    8[BANK0 ] int 
  6167 ;; Return value:  Size  Location     Type
  6168 ;;                  2    4[BANK0 ] int 
  6169 ;; Registers used:
  6170 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6171 ;; Tracked objects:
  6172 ;;		On entry : 0/0
  6173 ;;		On exit  : 0/0
  6174 ;;		Unchanged: 0/0
  6175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6176 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6177 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6178 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6179 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6180 ;;Total ram usage:        9 bytes
  6181 ;; Hardware stack levels used:    1
  6182 ;; Hardware stack levels required when called:    7
  6183 ;; This function calls:
  6184 ;;		_fputc
  6185 ;;		_fputs
  6186 ;;		_strlen
  6187 ;; This function is called by:
  6188 ;;		_dtoa
  6189 ;; This function uses a non-reentrant model
  6190 ;;
  6191                           
  6192                           
  6193                           ;psect for function _pad
  6194  0F59                     _pad:	
  6195                           
  6196                           ;incstack = 0
  6197                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6198                           ;pad@fp stored from wreg
  6199  0F59  0020               	movlb	0	; select bank0
  6200  0F5A  00AC               	movwf	pad@fp
  6201                           
  6202                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 72: static int pad(FIL
      +                          E *fp, char *buf, int p);K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c
      +                          : 73: {;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 74:     int i, 
      +                          w;;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 77:     if (flags & 
      +                          (1 << 0)) {
  6203  0F5B  0021               	movlb	1	; select bank1
  6204  0F5C  1C2E               	btfss	_flags^(0+128),0
  6205  0F5D  2F67               	goto	l2588
  6206                           
  6207                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 78:         fputs((con
      +                          st char *)buf, fp);
  6208  0F5E  0020               	movlb	0	; select bank0
  6209  0F5F  082C               	movf	pad@fp,w
  6210  0F60  00A7               	movwf	??_pad
  6211  0F61  0827               	movf	??_pad,w
  6212  0F62  00FA               	movwf	fputs@fp
  6213  0F63  0824               	movf	pad@buf,w
  6214  0F64  318D  256E  318F   	fcall	_fputs
  6215  0F67                     l2588:	
  6216                           
  6217                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 82:     w = (p < 0) ? 
      +                          0 : p;
  6218  0F67  0020               	movlb	0	; select bank0
  6219  0F68  1BA6               	btfsc	pad@p+1,7
  6220  0F69  2F6F               	goto	l2592
  6221  0F6A  0826               	movf	pad@p+1,w
  6222  0F6B  00AB               	movwf	pad@w+1
  6223  0F6C  0825               	movf	pad@p,w
  6224  0F6D  00AA               	movwf	pad@w
  6225  0F6E  2F71               	goto	l444
  6226  0F6F                     l2592:	
  6227  0F6F  01AA               	clrf	pad@w
  6228  0F70  01AB               	clrf	pad@w+1
  6229  0F71                     l444:	
  6230                           
  6231                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  6232  0F71  01A8               	clrf	pad@i
  6233  0F72  01A9               	clrf	pad@i+1
  6234  0F73                     l2598:	
  6235                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 84:     while (i < w) 
      +                          {
  6236                           
  6237                           
  6238                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 84:     while (i < w) 
      +                          {
  6239  0F73  0829               	movf	pad@i+1,w
  6240  0F74  3A80               	xorlw	128
  6241  0F75  00A7               	movwf	??_pad
  6242  0F76  082B               	movf	pad@w+1,w
  6243  0F77  3A80               	xorlw	128
  6244  0F78  0227               	subwf	??_pad,w
  6245  0F79  1D03               	skipz
  6246  0F7A  2F7D               	goto	u2105
  6247  0F7B  082A               	movf	pad@w,w
  6248  0F7C  0228               	subwf	pad@i,w
  6249  0F7D                     u2105:	
  6250  0F7D  1803               	btfsc	3,0
  6251  0F7E  2F91               	goto	l447
  6252                           
  6253                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 85:         fputc(' ',
      +                           fp);
  6254  0F7F  3020               	movlw	32
  6255  0F80  00F2               	movwf	fputc@c
  6256  0F81  3000               	movlw	0
  6257  0F82  00F3               	movwf	fputc@c+1
  6258  0F83  0020               	movlb	0	; select bank0
  6259  0F84  082C               	movf	pad@fp,w
  6260  0F85  00A7               	movwf	??_pad
  6261  0F86  0827               	movf	??_pad,w
  6262  0F87  00F4               	movwf	fputc@fp
  6263  0F88  318E  26C6  318F   	fcall	_fputc
  6264                           
  6265                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 86:         ++i;
  6266  0F8B  3001               	movlw	1
  6267  0F8C  0020               	movlb	0	; select bank0
  6268  0F8D  07A8               	addwf	pad@i,f
  6269  0F8E  3000               	movlw	0
  6270  0F8F  3DA9               	addwfc	pad@i+1,f
  6271  0F90  2F73               	goto	l2598
  6272  0F91                     l447:	
  6273                           
  6274                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 90:     if (!(flags & 
      +                          (1 << 0))) {
  6275  0F91  0021               	movlb	1	; select bank1
  6276  0F92  182E               	btfsc	_flags^(0+128),0
  6277  0F93  2F9D               	goto	l2602
  6278                           
  6279                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 91:         fputs((con
      +                          st char *)buf, fp);
  6280  0F94  0020               	movlb	0	; select bank0
  6281  0F95  082C               	movf	pad@fp,w
  6282  0F96  00A7               	movwf	??_pad
  6283  0F97  0827               	movf	??_pad,w
  6284  0F98  00FA               	movwf	fputs@fp
  6285  0F99  0824               	movf	pad@buf,w
  6286  0F9A  318D  256E  318F   	fcall	_fputs
  6287  0F9D                     l2602:	
  6288                           
  6289                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 94:     return strlen(
      +                          buf) + w;
  6290  0F9D  0020               	movlb	0	; select bank0
  6291  0F9E  0824               	movf	pad@buf,w
  6292  0F9F  00F0               	movwf	strlen@s
  6293  0FA0  3002               	movlw	2
  6294  0FA1  00F1               	movwf	strlen@s+1
  6295  0FA2  318D  2528         	fcall	_strlen
  6296  0FA4  0020               	movlb	0	; select bank0
  6297  0FA5  082A               	movf	pad@w,w
  6298  0FA6  0770               	addwf	?_strlen,w
  6299  0FA7  00A4               	movwf	?_pad
  6300  0FA8  082B               	movf	pad@w+1,w
  6301  0FA9  3D71               	addwfc	?_strlen+1,w
  6302  0FAA  00A5               	movwf	?_pad+1
  6303  0FAB  0008               	return
  6304  0FAC                     __end_of_pad:	
  6305                           
  6306                           	psect	text14
  6307  0D6E                     __ptext14:	
  6308 ;; *************** function _fputs *****************
  6309 ;; Defined at:
  6310 ;;		line 8 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\nf_fputs.c"
  6311 ;; Parameters:    Size  Location     Type
  6312 ;;  s               1    wreg     PTR const unsigned char 
  6313 ;;		 -> dbuf(32), 
  6314 ;;  fp              1   10[COMMON] PTR struct _IO_FILE
  6315 ;;		 -> sprintf@f(5), NULL(0), 
  6316 ;; Auto vars:     Size  Location     Type
  6317 ;;  s               1    3[BANK0 ] PTR const unsigned char 
  6318 ;;		 -> dbuf(32), 
  6319 ;;  i               2    1[BANK0 ] int 
  6320 ;;  c               1    0[BANK0 ] unsigned char 
  6321 ;; Return value:  Size  Location     Type
  6322 ;;                  2   10[COMMON] int 
  6323 ;; Registers used:
  6324 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6325 ;; Tracked objects:
  6326 ;;		On entry : 0/0
  6327 ;;		On exit  : 0/0
  6328 ;;		Unchanged: 0/0
  6329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6330 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6331 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6332 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6333 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6334 ;;Total ram usage:        8 bytes
  6335 ;; Hardware stack levels used:    1
  6336 ;; Hardware stack levels required when called:    6
  6337 ;; This function calls:
  6338 ;;		_fputc
  6339 ;; This function is called by:
  6340 ;;		_pad
  6341 ;; This function uses a non-reentrant model
  6342 ;;
  6343                           
  6344                           
  6345                           ;psect for function _fputs
  6346  0D6E                     _fputs:	
  6347                           
  6348                           ;incstack = 0
  6349                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6350                           ;fputs@s stored from wreg
  6351  0D6E  0020               	movlb	0	; select bank0
  6352  0D6F  00A3               	movwf	fputs@s
  6353  0D70  01A1               	clrf	fputs@i
  6354  0D71  01A2               	clrf	fputs@i+1
  6355  0D72                     l2582:	
  6356  0D72  0821               	movf	fputs@i,w
  6357  0D73  0723               	addwf	fputs@s,w
  6358  0D74  00FB               	movwf	??_fputs
  6359  0D75  087B               	movf	??_fputs,w
  6360  0D76  0086               	movwf	6
  6361  0D77  3002               	movlw	2	; select bank4/5
  6362  0D78  0087               	movwf	7
  6363  0D79  0801               	movf	1,w
  6364  0D7A  00FC               	movwf	??_fputs+1
  6365  0D7B  087C               	movf	??_fputs+1,w
  6366  0D7C  00A0               	movwf	fputs@c
  6367  0D7D  0820               	movf	fputs@c,w
  6368  0D7E  1903               	btfsc	3,2
  6369  0D7F  0008               	return
  6370  0D80  0820               	movf	fputs@c,w
  6371  0D81  00FB               	movwf	??_fputs
  6372  0D82  01FC               	clrf	??_fputs+1
  6373  0D83  087B               	movf	??_fputs,w
  6374  0D84  00F2               	movwf	fputc@c
  6375  0D85  087C               	movf	??_fputs+1,w
  6376  0D86  00F3               	movwf	fputc@c+1
  6377  0D87  087A               	movf	fputs@fp,w
  6378  0D88  00FD               	movwf	??_fputs+2
  6379  0D89  087D               	movf	??_fputs+2,w
  6380  0D8A  00F4               	movwf	fputc@fp
  6381  0D8B  318E  26C6  318D   	fcall	_fputc
  6382  0D8E  3001               	movlw	1
  6383  0D8F  0020               	movlb	0	; select bank0
  6384  0D90  07A1               	addwf	fputs@i,f
  6385  0D91  3000               	movlw	0
  6386  0D92  3DA2               	addwfc	fputs@i+1,f
  6387  0D93  2D72               	goto	l2582
  6388  0D94                     __end_of_fputs:	
  6389                           
  6390                           	psect	text15
  6391  0EC6                     __ptext15:	
  6392 ;; *************** function _fputc *****************
  6393 ;; Defined at:
  6394 ;;		line 8 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\nf_fputc.c"
  6395 ;; Parameters:    Size  Location     Type
  6396 ;;  c               2    2[COMMON] int 
  6397 ;;  fp              1    4[COMMON] PTR struct _IO_FILE
  6398 ;;		 -> sprintf@f(5), NULL(0), 
  6399 ;; Auto vars:     Size  Location     Type
  6400 ;;		None
  6401 ;; Return value:  Size  Location     Type
  6402 ;;                  2    2[COMMON] int 
  6403 ;; Registers used:
  6404 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6405 ;; Tracked objects:
  6406 ;;		On entry : 0/0
  6407 ;;		On exit  : 0/0
  6408 ;;		Unchanged: 0/0
  6409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6410 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6412 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6413 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6414 ;;Total ram usage:        8 bytes
  6415 ;; Hardware stack levels used:    1
  6416 ;; Hardware stack levels required when called:    5
  6417 ;; This function calls:
  6418 ;;		_putch
  6419 ;; This function is called by:
  6420 ;;		_pad
  6421 ;;		_stoa
  6422 ;;		_vfpfcnvrt
  6423 ;;		_fputs
  6424 ;; This function uses a non-reentrant model
  6425 ;;
  6426                           
  6427                           
  6428                           ;psect for function _fputc
  6429  0EC6                     _fputc:	
  6430                           
  6431                           ;incstack = 0
  6432                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6433  0EC6  0874               	movf	fputc@fp,w
  6434  0EC7  1D03               	btfss	3,2
  6435  0EC8  0874               	movf	fputc@fp,w
  6436  0EC9  1D03               	btfss	3,2
  6437  0ECA  2ECF               	goto	l2556
  6438  0ECB  0872               	movf	fputc@c,w
  6439  0ECC  318C  2487         	fcall	_putch
  6440  0ECE  0008               	return
  6441  0ECF                     l2556:	
  6442  0ECF  0874               	movf	fputc@fp,w
  6443  0ED0  3E03               	addlw	3
  6444  0ED1  0086               	movwf	6
  6445  0ED2  0187               	clrf	7
  6446  0ED3  0016               	moviw fsr1++
  6447  0ED4  0401               	iorwf	1,w
  6448  0ED5  1903               	btfsc	3,2
  6449  0ED6  2EF2               	goto	l2560
  6450  0ED7  0874               	movf	fputc@fp,w
  6451  0ED8  3E03               	addlw	3
  6452  0ED9  0086               	movwf	6
  6453  0EDA  0187               	clrf	7
  6454  0EDB  3F40               	moviw [0]fsr1
  6455  0EDC  00F5               	movwf	??_fputc
  6456  0EDD  3F41               	moviw [1]fsr1
  6457  0EDE  00F6               	movwf	??_fputc+1
  6458  0EDF  0A74               	incf	fputc@fp,w
  6459  0EE0  0086               	movwf	6
  6460  0EE1  0187               	clrf	7
  6461  0EE2  3F40               	moviw [0]fsr1
  6462  0EE3  00F7               	movwf	??_fputc+2
  6463  0EE4  3F41               	moviw [1]fsr1
  6464  0EE5  00F8               	movwf	??_fputc+3
  6465  0EE6  0878               	movf	??_fputc+3,w
  6466  0EE7  3A80               	xorlw	128
  6467  0EE8  00F9               	movwf	??_fputc+4
  6468  0EE9  0876               	movf	??_fputc+1,w
  6469  0EEA  3A80               	xorlw	128
  6470  0EEB  0279               	subwf	??_fputc+4,w
  6471  0EEC  1D03               	skipz
  6472  0EED  2EF0               	goto	u2055
  6473  0EEE  0875               	movf	??_fputc,w
  6474  0EEF  0277               	subwf	??_fputc+2,w
  6475  0EF0                     u2055:	
  6476  0EF0  1803               	skipnc
  6477  0EF1  0008               	return
  6478  0EF2                     l2560:	
  6479  0EF2  0872               	movf	fputc@c,w
  6480  0EF3  00F5               	movwf	??_fputc
  6481  0EF4  0874               	movf	fputc@fp,w
  6482  0EF5  0086               	movwf	6
  6483  0EF6  0187               	clrf	7
  6484  0EF7  0A74               	incf	fputc@fp,w
  6485  0EF8  0084               	movwf	4
  6486  0EF9  0185               	clrf	5
  6487  0EFA  0800               	movf	0,w
  6488  0EFB  0701               	addwf	1,w
  6489  0EFC  00F6               	movwf	??_fputc+1
  6490  0EFD  0876               	movf	??_fputc+1,w
  6491  0EFE  0086               	movwf	6
  6492  0EFF  3001               	movlw	1	; select bank2/3
  6493  0F00  0087               	movwf	7
  6494  0F01  0875               	movf	??_fputc,w
  6495  0F02  0081               	movwf	1
  6496  0F03  0A74               	incf	fputc@fp,w
  6497  0F04  0086               	movwf	6
  6498  0F05  0187               	clrf	7
  6499  0F06  3001               	movlw	1
  6500  0F07  0781               	addwf	1,f
  6501  0F08  3141               	addfsr 1,1
  6502  0F09  1803               	skipnc
  6503  0F0A  0A81               	incf	1,f
  6504  0F0B  0008               	return
  6505  0F0C                     __end_of_fputc:	
  6506                           
  6507                           	psect	text16
  6508  0C87                     __ptext16:	
  6509 ;; *************** function _putch *****************
  6510 ;; Defined at:
  6511 ;;		line 125 in file "mcc_generated_files/eusart.c"
  6512 ;; Parameters:    Size  Location     Type
  6513 ;;  txData          1    wreg     unsigned char 
  6514 ;; Auto vars:     Size  Location     Type
  6515 ;;  txData          1    1[COMMON] unsigned char 
  6516 ;; Return value:  Size  Location     Type
  6517 ;;                  1    wreg      void 
  6518 ;; Registers used:
  6519 ;;		wreg, status,2, status,0, pclath, cstack
  6520 ;; Tracked objects:
  6521 ;;		On entry : 0/0
  6522 ;;		On exit  : 0/0
  6523 ;;		Unchanged: 0/0
  6524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6526 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6528 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6529 ;;Total ram usage:        1 bytes
  6530 ;; Hardware stack levels used:    1
  6531 ;; Hardware stack levels required when called:    4
  6532 ;; This function calls:
  6533 ;;		_EUSART_Write
  6534 ;; This function is called by:
  6535 ;;		_fputc
  6536 ;; This function uses a non-reentrant model
  6537 ;;
  6538                           
  6539                           
  6540                           ;psect for function _putch
  6541  0C87                     _putch:	
  6542                           
  6543                           ;incstack = 0
  6544                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  6545                           ;putch@txData stored from wreg
  6546  0C87  00F1               	movwf	putch@txData
  6547                           
  6548                           ;mcc_generated_files/eusart.c: 125: void putch(char txData);mcc_generated_files/eusart.c
      +                          : 126: {;mcc_generated_files/eusart.c: 127:     EUSART_Write(txData);
  6549  0C88  0871               	movf	putch@txData,w
  6550  0C89  318C  24AC         	fcall	_EUSART_Write
  6551  0C8B  0008               	return
  6552  0C8C                     __end_of_putch:	
  6553                           
  6554                           	psect	text17
  6555  0D3F                     __ptext17:	
  6556 ;; *************** function _abs *****************
  6557 ;; Defined at:
  6558 ;;		line 1 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\abs.c"
  6559 ;; Parameters:    Size  Location     Type
  6560 ;;  a               2    3[COMMON] int 
  6561 ;; Auto vars:     Size  Location     Type
  6562 ;;		None
  6563 ;; Return value:  Size  Location     Type
  6564 ;;                  2    3[COMMON] int 
  6565 ;; Registers used:
  6566 ;;		wreg, status,2, status,0
  6567 ;; Tracked objects:
  6568 ;;		On entry : 0/0
  6569 ;;		On exit  : 0/0
  6570 ;;		Unchanged: 0/0
  6571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6572 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6573 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6574 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6575 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6576 ;;Total ram usage:        4 bytes
  6577 ;; Hardware stack levels used:    1
  6578 ;; Hardware stack levels required when called:    3
  6579 ;; This function calls:
  6580 ;;		Nothing
  6581 ;; This function is called by:
  6582 ;;		_dtoa
  6583 ;; This function uses a non-reentrant model
  6584 ;;
  6585                           
  6586                           
  6587                           ;psect for function _abs
  6588  0D3F                     _abs:	
  6589                           
  6590                           ;incstack = 0
  6591                           ; Regs used in _abs: [wreg+status,2+status,0]
  6592  0D3F  0874               	movf	abs@a+1,w
  6593  0D40  3A80               	xorlw	128
  6594  0D41  00F5               	movwf	??_abs
  6595  0D42  3080               	movlw	128
  6596  0D43  0275               	subwf	??_abs,w
  6597  0D44  1D03               	skipz
  6598  0D45  2D48               	goto	u2125
  6599  0D46  3001               	movlw	1
  6600  0D47  0273               	subwf	abs@a,w
  6601  0D48                     u2125:	
  6602  0D48  1803               	skipnc
  6603  0D49  0008               	return
  6604  0D4A  0973               	comf	abs@a,w
  6605  0D4B  00F5               	movwf	??_abs
  6606  0D4C  0974               	comf	abs@a+1,w
  6607  0D4D  00F6               	movwf	??_abs+1
  6608  0D4E  0AF5               	incf	??_abs,f
  6609  0D4F  1903               	skipnz
  6610  0D50  0AF6               	incf	??_abs+1,f
  6611  0D51  0875               	movf	??_abs,w
  6612  0D52  00F3               	movwf	?_abs
  6613  0D53  0876               	movf	??_abs+1,w
  6614  0D54  00F4               	movwf	?_abs+1
  6615  0D55  0008               	return
  6616  0D56                     __end_of_abs:	
  6617                           
  6618                           	psect	text18
  6619  04B0                     __ptext18:	
  6620 ;; *************** function ___aomod *****************
  6621 ;; Defined at:
  6622 ;;		line 7 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\aomod.c"
  6623 ;; Parameters:    Size  Location     Type
  6624 ;;  divisor         8    0[BANK0 ] long long 
  6625 ;;  dividend        8    8[BANK0 ] long long 
  6626 ;; Auto vars:     Size  Location     Type
  6627 ;;  sign            1    2[COMMON] unsigned char 
  6628 ;;  counter         1    1[COMMON] unsigned char 
  6629 ;; Return value:  Size  Location     Type
  6630 ;;                  8    0[BANK0 ] long long 
  6631 ;; Registers used:
  6632 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6633 ;; Tracked objects:
  6634 ;;		On entry : 0/0
  6635 ;;		On exit  : 0/0
  6636 ;;		Unchanged: 0/0
  6637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6638 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6639 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6640 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6641 ;;      Totals:         3      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6642 ;;Total ram usage:       19 bytes
  6643 ;; Hardware stack levels used:    1
  6644 ;; Hardware stack levels required when called:    3
  6645 ;; This function calls:
  6646 ;;		Nothing
  6647 ;; This function is called by:
  6648 ;;		_dtoa
  6649 ;; This function uses a non-reentrant model
  6650 ;;
  6651                           
  6652                           
  6653                           ;psect for function ___aomod
  6654  04B0                     ___aomod:	
  6655                           
  6656                           ;incstack = 0
  6657                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  6658  04B0  01F2               	clrf	___aomod@sign
  6659  04B1  3028               	movlw	low ___aomod@dividend
  6660  04B2  0086               	movwf	6
  6661  04B3  3000               	movlw	high ___aomod@dividend
  6662  04B4  0087               	movwf	7
  6663  04B5  3F47               	moviw [7]fsr1
  6664  04B6  00F0               	movwf	??___aomod
  6665  04B7  1FF0               	btfss	??___aomod,7
  6666  04B8  2CDA               	goto	l2654
  6667  04B9  0020               	movlb	0	; select bank0
  6668  04BA  09A8               	comf	___aomod@dividend,f
  6669  04BB  09A9               	comf	___aomod@dividend+1,f
  6670  04BC  09AA               	comf	___aomod@dividend+2,f
  6671  04BD  09AB               	comf	___aomod@dividend+3,f
  6672  04BE  09AC               	comf	___aomod@dividend+4,f
  6673  04BF  09AD               	comf	___aomod@dividend+5,f
  6674  04C0  09AE               	comf	___aomod@dividend+6,f
  6675  04C1  09AF               	comf	___aomod@dividend+7,f
  6676  04C2  0AA8               	incf	___aomod@dividend,f
  6677  04C3  1D03               	skipz
  6678  04C4  2CD8               	goto	u225lld
  6679  04C5  0AA9               	incf	___aomod@dividend+1,f
  6680  04C6  1D03               	skipz
  6681  04C7  2CD8               	goto	u225lld
  6682  04C8  0AAA               	incf	___aomod@dividend+2,f
  6683  04C9  1D03               	skipz
  6684  04CA  2CD8               	goto	u225lld
  6685  04CB  0AAB               	incf	___aomod@dividend+3,f
  6686  04CC  1D03               	skipz
  6687  04CD  2CD8               	goto	u225lld
  6688  04CE  0AAC               	incf	___aomod@dividend+4,f
  6689  04CF  1D03               	skipz
  6690  04D0  2CD8               	goto	u225lld
  6691  04D1  0AAD               	incf	___aomod@dividend+5,f
  6692  04D2  1D03               	skipz
  6693  04D3  2CD8               	goto	u225lld
  6694  04D4  0AAE               	incf	___aomod@dividend+6,f
  6695  04D5  1D03               	skipz
  6696  04D6  2CD8               	goto	u225lld
  6697  04D7  0AAF               	incf	___aomod@dividend+7,f
  6698  04D8                     u225lld:	
  6699  04D8  01F2               	clrf	___aomod@sign
  6700  04D9  0AF2               	incf	___aomod@sign,f
  6701  04DA                     l2654:	
  6702  04DA  3020               	movlw	low ___aomod@divisor
  6703  04DB  0086               	movwf	6
  6704  04DC  3000               	movlw	high ___aomod@divisor
  6705  04DD  0087               	movwf	7
  6706  04DE  3F47               	moviw [7]fsr1
  6707  04DF  00F0               	movwf	??___aomod
  6708  04E0  1FF0               	btfss	??___aomod,7
  6709  04E1  2D01               	goto	l2658
  6710  04E2  0020               	movlb	0	; select bank0
  6711  04E3  09A0               	comf	___aomod@divisor,f
  6712  04E4  09A1               	comf	___aomod@divisor+1,f
  6713  04E5  09A2               	comf	___aomod@divisor+2,f
  6714  04E6  09A3               	comf	___aomod@divisor+3,f
  6715  04E7  09A4               	comf	___aomod@divisor+4,f
  6716  04E8  09A5               	comf	___aomod@divisor+5,f
  6717  04E9  09A6               	comf	___aomod@divisor+6,f
  6718  04EA  09A7               	comf	___aomod@divisor+7,f
  6719  04EB  0AA0               	incf	___aomod@divisor,f
  6720  04EC  1D03               	skipz
  6721  04ED  2D01               	goto	l2658
  6722  04EE  0AA1               	incf	___aomod@divisor+1,f
  6723  04EF  1D03               	skipz
  6724  04F0  2D01               	goto	l2658
  6725  04F1  0AA2               	incf	___aomod@divisor+2,f
  6726  04F2  1D03               	skipz
  6727  04F3  2D01               	goto	l2658
  6728  04F4  0AA3               	incf	___aomod@divisor+3,f
  6729  04F5  1D03               	skipz
  6730  04F6  2D01               	goto	l2658
  6731  04F7  0AA4               	incf	___aomod@divisor+4,f
  6732  04F8  1D03               	skipz
  6733  04F9  2D01               	goto	l2658
  6734  04FA  0AA5               	incf	___aomod@divisor+5,f
  6735  04FB  1D03               	skipz
  6736  04FC  2D01               	goto	l2658
  6737  04FD  0AA6               	incf	___aomod@divisor+6,f
  6738  04FE  1D03               	skipz
  6739  04FF  2D01               	goto	l2658
  6740  0500  0AA7               	incf	___aomod@divisor+7,f
  6741  0501                     l2658:	
  6742  0501  0020               	movlb	0	; select bank0
  6743  0502  0820               	movf	___aomod@divisor,w
  6744  0503  0421               	iorwf	___aomod@divisor+1,w
  6745  0504  0422               	iorwf	___aomod@divisor+2,w
  6746  0505  0423               	iorwf	___aomod@divisor+3,w
  6747  0506  0424               	iorwf	___aomod@divisor+4,w
  6748  0507  0425               	iorwf	___aomod@divisor+5,w
  6749  0508  0426               	iorwf	___aomod@divisor+6,w
  6750  0509  0427               	iorwf	___aomod@divisor+7,w
  6751  050A  1903               	skipnz
  6752  050B  2D59               	goto	l2674
  6753  050C  01F1               	clrf	___aomod@counter
  6754  050D  0AF1               	incf	___aomod@counter,f
  6755  050E                     l2666:	
  6756  050E  1BA7               	btfsc	___aomod@divisor+7,7
  6757  050F  2D1D               	goto	l2668
  6758  0510  35A0               	lslf	___aomod@divisor,f
  6759  0511  0DA1               	rlf	___aomod@divisor+1,f
  6760  0512  0DA2               	rlf	___aomod@divisor+2,f
  6761  0513  0DA3               	rlf	___aomod@divisor+3,f
  6762  0514  0DA4               	rlf	___aomod@divisor+4,f
  6763  0515  0DA5               	rlf	___aomod@divisor+5,f
  6764  0516  0DA6               	rlf	___aomod@divisor+6,f
  6765  0517  0DA7               	rlf	___aomod@divisor+7,f
  6766  0518  3001               	movlw	1
  6767  0519  00F0               	movwf	??___aomod
  6768  051A  0870               	movf	??___aomod,w
  6769  051B  07F1               	addwf	___aomod@counter,f
  6770  051C  2D0E               	goto	l2666
  6771  051D                     l2668:	
  6772  051D  0827               	movf	___aomod@divisor+7,w
  6773  051E  022F               	subwf	___aomod@dividend+7,w
  6774  051F  1D03               	skipz
  6775  0520  2D3B               	goto	u2305
  6776  0521  0826               	movf	___aomod@divisor+6,w
  6777  0522  022E               	subwf	___aomod@dividend+6,w
  6778  0523  1D03               	skipz
  6779  0524  2D3B               	goto	u2305
  6780  0525  0825               	movf	___aomod@divisor+5,w
  6781  0526  022D               	subwf	___aomod@dividend+5,w
  6782  0527  1D03               	skipz
  6783  0528  2D3B               	goto	u2305
  6784  0529  0824               	movf	___aomod@divisor+4,w
  6785  052A  022C               	subwf	___aomod@dividend+4,w
  6786  052B  1D03               	skipz
  6787  052C  2D3B               	goto	u2305
  6788  052D  0823               	movf	___aomod@divisor+3,w
  6789  052E  022B               	subwf	___aomod@dividend+3,w
  6790  052F  1D03               	skipz
  6791  0530  2D3B               	goto	u2305
  6792  0531  0822               	movf	___aomod@divisor+2,w
  6793  0532  022A               	subwf	___aomod@dividend+2,w
  6794  0533  1D03               	skipz
  6795  0534  2D3B               	goto	u2305
  6796  0535  0821               	movf	___aomod@divisor+1,w
  6797  0536  0229               	subwf	___aomod@dividend+1,w
  6798  0537  1D03               	skipz
  6799  0538  2D3B               	goto	u2305
  6800  0539  0820               	movf	___aomod@divisor,w
  6801  053A  0228               	subwf	___aomod@dividend,w
  6802  053B                     u2305:	
  6803  053B  1C03               	skipc
  6804  053C  2D4D               	goto	l2672
  6805  053D  0820               	movf	___aomod@divisor,w
  6806  053E  02A8               	subwf	___aomod@dividend,f
  6807  053F  0821               	movf	___aomod@divisor+1,w
  6808  0540  3BA9               	subwfb	___aomod@dividend+1,f
  6809  0541  0822               	movf	___aomod@divisor+2,w
  6810  0542  3BAA               	subwfb	___aomod@dividend+2,f
  6811  0543  0823               	movf	___aomod@divisor+3,w
  6812  0544  3BAB               	subwfb	___aomod@dividend+3,f
  6813  0545  0824               	movf	___aomod@divisor+4,w
  6814  0546  3BAC               	subwfb	___aomod@dividend+4,f
  6815  0547  0825               	movf	___aomod@divisor+5,w
  6816  0548  3BAD               	subwfb	___aomod@dividend+5,f
  6817  0549  0826               	movf	___aomod@divisor+6,w
  6818  054A  3BAE               	subwfb	___aomod@dividend+6,f
  6819  054B  0827               	movf	___aomod@divisor+7,w
  6820  054C  3BAF               	subwfb	___aomod@dividend+7,f
  6821  054D                     l2672:	
  6822  054D  36A7               	lsrf	___aomod@divisor+7,f
  6823  054E  0CA6               	rrf	___aomod@divisor+6,f
  6824  054F  0CA5               	rrf	___aomod@divisor+5,f
  6825  0550  0CA4               	rrf	___aomod@divisor+4,f
  6826  0551  0CA3               	rrf	___aomod@divisor+3,f
  6827  0552  0CA2               	rrf	___aomod@divisor+2,f
  6828  0553  0CA1               	rrf	___aomod@divisor+1,f
  6829  0554  0CA0               	rrf	___aomod@divisor,f
  6830  0555  3001               	movlw	1
  6831  0556  02F1               	subwf	___aomod@counter,f
  6832  0557  1D03               	btfss	3,2
  6833  0558  2D1D               	goto	l2668
  6834  0559                     l2674:	
  6835  0559  0872               	movf	___aomod@sign,w
  6836  055A  1903               	btfsc	3,2
  6837  055B  2D7A               	goto	l630
  6838  055C  09A8               	comf	___aomod@dividend,f
  6839  055D  09A9               	comf	___aomod@dividend+1,f
  6840  055E  09AA               	comf	___aomod@dividend+2,f
  6841  055F  09AB               	comf	___aomod@dividend+3,f
  6842  0560  09AC               	comf	___aomod@dividend+4,f
  6843  0561  09AD               	comf	___aomod@dividend+5,f
  6844  0562  09AE               	comf	___aomod@dividend+6,f
  6845  0563  09AF               	comf	___aomod@dividend+7,f
  6846  0564  0AA8               	incf	___aomod@dividend,f
  6847  0565  1D03               	skipz
  6848  0566  2D7A               	goto	l630
  6849  0567  0AA9               	incf	___aomod@dividend+1,f
  6850  0568  1D03               	skipz
  6851  0569  2D7A               	goto	l630
  6852  056A  0AAA               	incf	___aomod@dividend+2,f
  6853  056B  1D03               	skipz
  6854  056C  2D7A               	goto	l630
  6855  056D  0AAB               	incf	___aomod@dividend+3,f
  6856  056E  1D03               	skipz
  6857  056F  2D7A               	goto	l630
  6858  0570  0AAC               	incf	___aomod@dividend+4,f
  6859  0571  1D03               	skipz
  6860  0572  2D7A               	goto	l630
  6861  0573  0AAD               	incf	___aomod@dividend+5,f
  6862  0574  1D03               	skipz
  6863  0575  2D7A               	goto	l630
  6864  0576  0AAE               	incf	___aomod@dividend+6,f
  6865  0577  1D03               	skipz
  6866  0578  2D7A               	goto	l630
  6867  0579  0AAF               	incf	___aomod@dividend+7,f
  6868  057A                     l630:	
  6869  057A  0020               	movlb	0	; select bank0
  6870  057B  0828               	movf	___aomod@dividend,w
  6871  057C  00A0               	movwf	?___aomod
  6872  057D  0829               	movf	___aomod@dividend+1,w
  6873  057E  00A1               	movwf	?___aomod+1
  6874  057F  082A               	movf	___aomod@dividend+2,w
  6875  0580  00A2               	movwf	?___aomod+2
  6876  0581  082B               	movf	___aomod@dividend+3,w
  6877  0582  00A3               	movwf	?___aomod+3
  6878  0583  082C               	movf	___aomod@dividend+4,w
  6879  0584  00A4               	movwf	?___aomod+4
  6880  0585  082D               	movf	___aomod@dividend+5,w
  6881  0586  00A5               	movwf	?___aomod+5
  6882  0587  082E               	movf	___aomod@dividend+6,w
  6883  0588  00A6               	movwf	?___aomod+6
  6884  0589  082F               	movf	___aomod@dividend+7,w
  6885  058A  00A7               	movwf	?___aomod+7
  6886  058B  0008               	return
  6887  058C                     __end_of___aomod:	
  6888                           
  6889                           	psect	text19
  6890  03BD                     __ptext19:	
  6891 ;; *************** function ___aodiv *****************
  6892 ;; Defined at:
  6893 ;;		line 7 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\aodiv.c"
  6894 ;; Parameters:    Size  Location     Type
  6895 ;;  divisor         8    0[BANK0 ] long long 
  6896 ;;  dividend        8    8[BANK0 ] long long 
  6897 ;; Auto vars:     Size  Location     Type
  6898 ;;  quotient        8    3[COMMON] long long 
  6899 ;;  sign            1    2[COMMON] unsigned char 
  6900 ;;  counter         1    1[COMMON] unsigned char 
  6901 ;; Return value:  Size  Location     Type
  6902 ;;                  8    0[BANK0 ] long long 
  6903 ;; Registers used:
  6904 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6905 ;; Tracked objects:
  6906 ;;		On entry : 0/0
  6907 ;;		On exit  : 0/0
  6908 ;;		Unchanged: 0/0
  6909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6910 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6911 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6912 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6913 ;;      Totals:        11      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6914 ;;Total ram usage:       27 bytes
  6915 ;; Hardware stack levels used:    1
  6916 ;; Hardware stack levels required when called:    3
  6917 ;; This function calls:
  6918 ;;		Nothing
  6919 ;; This function is called by:
  6920 ;;		_dtoa
  6921 ;; This function uses a non-reentrant model
  6922 ;;
  6923                           
  6924                           
  6925                           ;psect for function ___aodiv
  6926  03BD                     ___aodiv:	
  6927                           
  6928                           ;incstack = 0
  6929                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  6930  03BD  01F2               	clrf	___aodiv@sign
  6931  03BE  3020               	movlw	low ___aodiv@divisor
  6932  03BF  0086               	movwf	6
  6933  03C0  3000               	movlw	high ___aodiv@divisor
  6934  03C1  0087               	movwf	7
  6935  03C2  3F47               	moviw [7]fsr1
  6936  03C3  00F0               	movwf	??___aodiv
  6937  03C4  1FF0               	btfss	??___aodiv,7
  6938  03C5  2BE7               	goto	l2616
  6939  03C6  0020               	movlb	0	; select bank0
  6940  03C7  09A0               	comf	___aodiv@divisor,f
  6941  03C8  09A1               	comf	___aodiv@divisor+1,f
  6942  03C9  09A2               	comf	___aodiv@divisor+2,f
  6943  03CA  09A3               	comf	___aodiv@divisor+3,f
  6944  03CB  09A4               	comf	___aodiv@divisor+4,f
  6945  03CC  09A5               	comf	___aodiv@divisor+5,f
  6946  03CD  09A6               	comf	___aodiv@divisor+6,f
  6947  03CE  09A7               	comf	___aodiv@divisor+7,f
  6948  03CF  0AA0               	incf	___aodiv@divisor,f
  6949  03D0  1D03               	skipz
  6950  03D1  2BE5               	goto	u214lld
  6951  03D2  0AA1               	incf	___aodiv@divisor+1,f
  6952  03D3  1D03               	skipz
  6953  03D4  2BE5               	goto	u214lld
  6954  03D5  0AA2               	incf	___aodiv@divisor+2,f
  6955  03D6  1D03               	skipz
  6956  03D7  2BE5               	goto	u214lld
  6957  03D8  0AA3               	incf	___aodiv@divisor+3,f
  6958  03D9  1D03               	skipz
  6959  03DA  2BE5               	goto	u214lld
  6960  03DB  0AA4               	incf	___aodiv@divisor+4,f
  6961  03DC  1D03               	skipz
  6962  03DD  2BE5               	goto	u214lld
  6963  03DE  0AA5               	incf	___aodiv@divisor+5,f
  6964  03DF  1D03               	skipz
  6965  03E0  2BE5               	goto	u214lld
  6966  03E1  0AA6               	incf	___aodiv@divisor+6,f
  6967  03E2  1D03               	skipz
  6968  03E3  2BE5               	goto	u214lld
  6969  03E4  0AA7               	incf	___aodiv@divisor+7,f
  6970  03E5                     u214lld:	
  6971  03E5  01F2               	clrf	___aodiv@sign
  6972  03E6  0AF2               	incf	___aodiv@sign,f
  6973  03E7                     l2616:	
  6974  03E7  3028               	movlw	low ___aodiv@dividend
  6975  03E8  0086               	movwf	6
  6976  03E9  3000               	movlw	high ___aodiv@dividend
  6977  03EA  0087               	movwf	7
  6978  03EB  3F47               	moviw [7]fsr1
  6979  03EC  00F0               	movwf	??___aodiv
  6980  03ED  1FF0               	btfss	??___aodiv,7
  6981  03EE  2C12               	goto	l2622
  6982  03EF  0020               	movlb	0	; select bank0
  6983  03F0  09A8               	comf	___aodiv@dividend,f
  6984  03F1  09A9               	comf	___aodiv@dividend+1,f
  6985  03F2  09AA               	comf	___aodiv@dividend+2,f
  6986  03F3  09AB               	comf	___aodiv@dividend+3,f
  6987  03F4  09AC               	comf	___aodiv@dividend+4,f
  6988  03F5  09AD               	comf	___aodiv@dividend+5,f
  6989  03F6  09AE               	comf	___aodiv@dividend+6,f
  6990  03F7  09AF               	comf	___aodiv@dividend+7,f
  6991  03F8  0AA8               	incf	___aodiv@dividend,f
  6992  03F9  1D03               	skipz
  6993  03FA  2C0E               	goto	l2620
  6994  03FB  0AA9               	incf	___aodiv@dividend+1,f
  6995  03FC  1D03               	skipz
  6996  03FD  2C0E               	goto	l2620
  6997  03FE  0AAA               	incf	___aodiv@dividend+2,f
  6998  03FF  1D03               	skipz
  6999  0400  2C0E               	goto	l2620
  7000  0401  0AAB               	incf	___aodiv@dividend+3,f
  7001  0402  1D03               	skipz
  7002  0403  2C0E               	goto	l2620
  7003  0404  0AAC               	incf	___aodiv@dividend+4,f
  7004  0405  1D03               	skipz
  7005  0406  2C0E               	goto	l2620
  7006  0407  0AAD               	incf	___aodiv@dividend+5,f
  7007  0408  1D03               	skipz
  7008  0409  2C0E               	goto	l2620
  7009  040A  0AAE               	incf	___aodiv@dividend+6,f
  7010  040B  1D03               	skipz
  7011  040C  2C0E               	goto	l2620
  7012  040D  0AAF               	incf	___aodiv@dividend+7,f
  7013  040E                     l2620:	
  7014  040E  3001               	movlw	1
  7015  040F  00F0               	movwf	??___aodiv
  7016  0410  0870               	movf	??___aodiv,w
  7017  0411  06F2               	xorwf	___aodiv@sign,f
  7018  0412                     l2622:	
  7019  0412  3073               	movlw	low ___aodiv@quotient
  7020  0413  0086               	movwf	6
  7021  0414  3000               	movlw	high ___aodiv@quotient
  7022  0415  0087               	movwf	7
  7023  0416  3008               	movlw	8
  7024  0417  00F0               	movwf	??___aodiv
  7025  0418  3000               	movlw	0
  7026  0419                     u2170:	
  7027  0419  001E               	movwi fsr1++
  7028  041A  0BF0               	decfsz	??___aodiv,f
  7029  041B  2C19               	goto	u2170
  7030  041C  0020               	movlb	0	; select bank0
  7031  041D  0820               	movf	___aodiv@divisor,w
  7032  041E  0421               	iorwf	___aodiv@divisor+1,w
  7033  041F  0422               	iorwf	___aodiv@divisor+2,w
  7034  0420  0423               	iorwf	___aodiv@divisor+3,w
  7035  0421  0424               	iorwf	___aodiv@divisor+4,w
  7036  0422  0425               	iorwf	___aodiv@divisor+5,w
  7037  0423  0426               	iorwf	___aodiv@divisor+6,w
  7038  0424  0427               	iorwf	___aodiv@divisor+7,w
  7039  0425  1903               	skipnz
  7040  0426  2C7D               	goto	l2644
  7041  0427  01F1               	clrf	___aodiv@counter
  7042  0428  0AF1               	incf	___aodiv@counter,f
  7043  0429                     l2632:	
  7044  0429  1BA7               	btfsc	___aodiv@divisor+7,7
  7045  042A  2C38               	goto	l2634
  7046  042B  35A0               	lslf	___aodiv@divisor,f
  7047  042C  0DA1               	rlf	___aodiv@divisor+1,f
  7048  042D  0DA2               	rlf	___aodiv@divisor+2,f
  7049  042E  0DA3               	rlf	___aodiv@divisor+3,f
  7050  042F  0DA4               	rlf	___aodiv@divisor+4,f
  7051  0430  0DA5               	rlf	___aodiv@divisor+5,f
  7052  0431  0DA6               	rlf	___aodiv@divisor+6,f
  7053  0432  0DA7               	rlf	___aodiv@divisor+7,f
  7054  0433  3001               	movlw	1
  7055  0434  00F0               	movwf	??___aodiv
  7056  0435  0870               	movf	??___aodiv,w
  7057  0436  07F1               	addwf	___aodiv@counter,f
  7058  0437  2C29               	goto	l2632
  7059  0438                     l2634:	
  7060  0438  35F3               	lslf	___aodiv@quotient,f
  7061  0439  0DF4               	rlf	___aodiv@quotient+1,f
  7062  043A  0DF5               	rlf	___aodiv@quotient+2,f
  7063  043B  0DF6               	rlf	___aodiv@quotient+3,f
  7064  043C  0DF7               	rlf	___aodiv@quotient+4,f
  7065  043D  0DF8               	rlf	___aodiv@quotient+5,f
  7066  043E  0DF9               	rlf	___aodiv@quotient+6,f
  7067  043F  0DFA               	rlf	___aodiv@quotient+7,f
  7068  0440  0827               	movf	___aodiv@divisor+7,w
  7069  0441  022F               	subwf	___aodiv@dividend+7,w
  7070  0442  1D03               	skipz
  7071  0443  2C5E               	goto	u2205
  7072  0444  0826               	movf	___aodiv@divisor+6,w
  7073  0445  022E               	subwf	___aodiv@dividend+6,w
  7074  0446  1D03               	skipz
  7075  0447  2C5E               	goto	u2205
  7076  0448  0825               	movf	___aodiv@divisor+5,w
  7077  0449  022D               	subwf	___aodiv@dividend+5,w
  7078  044A  1D03               	skipz
  7079  044B  2C5E               	goto	u2205
  7080  044C  0824               	movf	___aodiv@divisor+4,w
  7081  044D  022C               	subwf	___aodiv@dividend+4,w
  7082  044E  1D03               	skipz
  7083  044F  2C5E               	goto	u2205
  7084  0450  0823               	movf	___aodiv@divisor+3,w
  7085  0451  022B               	subwf	___aodiv@dividend+3,w
  7086  0452  1D03               	skipz
  7087  0453  2C5E               	goto	u2205
  7088  0454  0822               	movf	___aodiv@divisor+2,w
  7089  0455  022A               	subwf	___aodiv@dividend+2,w
  7090  0456  1D03               	skipz
  7091  0457  2C5E               	goto	u2205
  7092  0458  0821               	movf	___aodiv@divisor+1,w
  7093  0459  0229               	subwf	___aodiv@dividend+1,w
  7094  045A  1D03               	skipz
  7095  045B  2C5E               	goto	u2205
  7096  045C  0820               	movf	___aodiv@divisor,w
  7097  045D  0228               	subwf	___aodiv@dividend,w
  7098  045E                     u2205:	
  7099  045E  1C03               	skipc
  7100  045F  2C71               	goto	l2642
  7101  0460  0820               	movf	___aodiv@divisor,w
  7102  0461  02A8               	subwf	___aodiv@dividend,f
  7103  0462  0821               	movf	___aodiv@divisor+1,w
  7104  0463  3BA9               	subwfb	___aodiv@dividend+1,f
  7105  0464  0822               	movf	___aodiv@divisor+2,w
  7106  0465  3BAA               	subwfb	___aodiv@dividend+2,f
  7107  0466  0823               	movf	___aodiv@divisor+3,w
  7108  0467  3BAB               	subwfb	___aodiv@dividend+3,f
  7109  0468  0824               	movf	___aodiv@divisor+4,w
  7110  0469  3BAC               	subwfb	___aodiv@dividend+4,f
  7111  046A  0825               	movf	___aodiv@divisor+5,w
  7112  046B  3BAD               	subwfb	___aodiv@dividend+5,f
  7113  046C  0826               	movf	___aodiv@divisor+6,w
  7114  046D  3BAE               	subwfb	___aodiv@dividend+6,f
  7115  046E  0827               	movf	___aodiv@divisor+7,w
  7116  046F  3BAF               	subwfb	___aodiv@dividend+7,f
  7117  0470  1473               	bsf	___aodiv@quotient,0
  7118  0471                     l2642:	
  7119  0471  36A7               	lsrf	___aodiv@divisor+7,f
  7120  0472  0CA6               	rrf	___aodiv@divisor+6,f
  7121  0473  0CA5               	rrf	___aodiv@divisor+5,f
  7122  0474  0CA4               	rrf	___aodiv@divisor+4,f
  7123  0475  0CA3               	rrf	___aodiv@divisor+3,f
  7124  0476  0CA2               	rrf	___aodiv@divisor+2,f
  7125  0477  0CA1               	rrf	___aodiv@divisor+1,f
  7126  0478  0CA0               	rrf	___aodiv@divisor,f
  7127  0479  3001               	movlw	1
  7128  047A  02F1               	subwf	___aodiv@counter,f
  7129  047B  1D03               	btfss	3,2
  7130  047C  2C38               	goto	l2634
  7131  047D                     l2644:	
  7132  047D  0872               	movf	___aodiv@sign,w
  7133  047E  1903               	btfsc	3,2
  7134  047F  2C9E               	goto	l617
  7135  0480  09F3               	comf	___aodiv@quotient,f
  7136  0481  09F4               	comf	___aodiv@quotient+1,f
  7137  0482  09F5               	comf	___aodiv@quotient+2,f
  7138  0483  09F6               	comf	___aodiv@quotient+3,f
  7139  0484  09F7               	comf	___aodiv@quotient+4,f
  7140  0485  09F8               	comf	___aodiv@quotient+5,f
  7141  0486  09F9               	comf	___aodiv@quotient+6,f
  7142  0487  09FA               	comf	___aodiv@quotient+7,f
  7143  0488  0AF3               	incf	___aodiv@quotient,f
  7144  0489  1D03               	skipz
  7145  048A  2C9E               	goto	l617
  7146  048B  0AF4               	incf	___aodiv@quotient+1,f
  7147  048C  1D03               	skipz
  7148  048D  2C9E               	goto	l617
  7149  048E  0AF5               	incf	___aodiv@quotient+2,f
  7150  048F  1D03               	skipz
  7151  0490  2C9E               	goto	l617
  7152  0491  0AF6               	incf	___aodiv@quotient+3,f
  7153  0492  1D03               	skipz
  7154  0493  2C9E               	goto	l617
  7155  0494  0AF7               	incf	___aodiv@quotient+4,f
  7156  0495  1D03               	skipz
  7157  0496  2C9E               	goto	l617
  7158  0497  0AF8               	incf	___aodiv@quotient+5,f
  7159  0498  1D03               	skipz
  7160  0499  2C9E               	goto	l617
  7161  049A  0AF9               	incf	___aodiv@quotient+6,f
  7162  049B  1D03               	skipz
  7163  049C  2C9E               	goto	l617
  7164  049D  0AFA               	incf	___aodiv@quotient+7,f
  7165  049E                     l617:	
  7166  049E  0873               	movf	___aodiv@quotient,w
  7167  049F  0020               	movlb	0	; select bank0
  7168  04A0  00A0               	movwf	?___aodiv
  7169  04A1  0874               	movf	___aodiv@quotient+1,w
  7170  04A2  00A1               	movwf	?___aodiv+1
  7171  04A3  0875               	movf	___aodiv@quotient+2,w
  7172  04A4  00A2               	movwf	?___aodiv+2
  7173  04A5  0876               	movf	___aodiv@quotient+3,w
  7174  04A6  00A3               	movwf	?___aodiv+3
  7175  04A7  0877               	movf	___aodiv@quotient+4,w
  7176  04A8  00A4               	movwf	?___aodiv+4
  7177  04A9  0878               	movf	___aodiv@quotient+5,w
  7178  04AA  00A5               	movwf	?___aodiv+5
  7179  04AB  0879               	movf	___aodiv@quotient+6,w
  7180  04AC  00A6               	movwf	?___aodiv+6
  7181  04AD  087A               	movf	___aodiv@quotient+7,w
  7182  04AE  00A7               	movwf	?___aodiv+7
  7183  04AF  0008               	return
  7184  04B0                     __end_of___aodiv:	
  7185                           
  7186                           	psect	text20
  7187  0D94                     __ptext20:	
  7188 ;; *************** function _GPS_SendUBX *****************
  7189 ;; Defined at:
  7190 ;;		line 248 in file "main.c"
  7191 ;; Parameters:    Size  Location     Type
  7192 ;;  data            1    wreg     PTR unsigned char 
  7193 ;;		 -> setNavFlightMode(44), 
  7194 ;; Auto vars:     Size  Location     Type
  7195 ;;  data            1    7[COMMON] PTR unsigned char 
  7196 ;;		 -> setNavFlightMode(44), 
  7197 ;;  i               2    8[COMMON] int 
  7198 ;;  length          2    5[COMMON] int 
  7199 ;; Return value:  Size  Location     Type
  7200 ;;                  1    wreg      void 
  7201 ;; Registers used:
  7202 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7203 ;; Tracked objects:
  7204 ;;		On entry : 0/0
  7205 ;;		On exit  : 0/0
  7206 ;;		Unchanged: 0/0
  7207 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7208 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7209 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7210 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7211 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7212 ;;Total ram usage:        6 bytes
  7213 ;; Hardware stack levels used:    1
  7214 ;; Hardware stack levels required when called:    4
  7215 ;; This function calls:
  7216 ;;		_EUSART_Write
  7217 ;;		_GetLengthUBX
  7218 ;; This function is called by:
  7219 ;;		_SetupGPS
  7220 ;; This function uses a non-reentrant model
  7221 ;;
  7222                           
  7223                           
  7224                           ;psect for function _GPS_SendUBX
  7225  0D94                     _GPS_SendUBX:	
  7226                           
  7227                           ;incstack = 0
  7228                           ; Regs used in _GPS_SendUBX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7229                           ;GPS_SendUBX@data stored from wreg
  7230  0D94  00F7               	movwf	GPS_SendUBX@data
  7231                           
  7232                           ;main.c: 248: void GPS_SendUBX(uint8_t* data);main.c: 249: {;main.c: 253:     for (int i
      +                           = 0, length = GetLengthUBX(data); i < length; i++)
  7233  0D95  01F8               	clrf	GPS_SendUBX@i
  7234  0D96  01F9               	clrf	GPS_SendUBX@i+1
  7235  0D97  0877               	movf	GPS_SendUBX@data,w
  7236  0D98  318D  2500  318D   	fcall	_GetLengthUBX
  7237  0D9B  0871               	movf	?_GetLengthUBX+1,w
  7238  0D9C  00F6               	movwf	GPS_SendUBX@length+1
  7239  0D9D  0870               	movf	?_GetLengthUBX,w
  7240  0D9E  00F5               	movwf	GPS_SendUBX@length
  7241  0D9F                     l2958:	
  7242  0D9F  0879               	movf	GPS_SendUBX@i+1,w
  7243  0DA0  3A80               	xorlw	128
  7244  0DA1  00F4               	movwf	??_GPS_SendUBX
  7245  0DA2  0876               	movf	GPS_SendUBX@length+1,w
  7246  0DA3  3A80               	xorlw	128
  7247  0DA4  0274               	subwf	??_GPS_SendUBX,w
  7248  0DA5  1D03               	skipz
  7249  0DA6  2DA9               	goto	u2755
  7250  0DA7  0875               	movf	GPS_SendUBX@length,w
  7251  0DA8  0278               	subwf	GPS_SendUBX@i,w
  7252  0DA9                     u2755:	
  7253  0DA9  1803               	btfsc	3,0
  7254  0DAA  0008               	return
  7255                           
  7256                           ;main.c: 254:     {;main.c: 256:         EUSART_Write(data[i]);
  7257  0DAB  0878               	movf	GPS_SendUBX@i,w
  7258  0DAC  0777               	addwf	GPS_SendUBX@data,w
  7259  0DAD  00F4               	movwf	??_GPS_SendUBX
  7260  0DAE  0874               	movf	??_GPS_SendUBX,w
  7261  0DAF  0086               	movwf	6
  7262  0DB0  3002               	movlw	2	; select bank4/5
  7263  0DB1  0087               	movwf	7
  7264  0DB2  0801               	movf	1,w
  7265  0DB3  318C  24AC  318D   	fcall	_EUSART_Write
  7266                           
  7267                           ;main.c: 260:     }
  7268  0DB6  3001               	movlw	1
  7269  0DB7  07F8               	addwf	GPS_SendUBX@i,f
  7270  0DB8  3000               	movlw	0
  7271  0DB9  3DF9               	addwfc	GPS_SendUBX@i+1,f
  7272  0DBA  2D9F               	goto	l2958
  7273  0DBB                     __end_of_GPS_SendUBX:	
  7274                           
  7275                           	psect	text21
  7276  0D00                     __ptext21:	
  7277 ;; *************** function _GetLengthUBX *****************
  7278 ;; Defined at:
  7279 ;;		line 238 in file "main.c"
  7280 ;; Parameters:    Size  Location     Type
  7281 ;;  data            1    wreg     PTR unsigned char 
  7282 ;;		 -> setNavFlightMode(44), 
  7283 ;; Auto vars:     Size  Location     Type
  7284 ;;  data            1    3[COMMON] PTR unsigned char 
  7285 ;;		 -> setNavFlightMode(44), 
  7286 ;; Return value:  Size  Location     Type
  7287 ;;                  2    0[COMMON] unsigned int 
  7288 ;; Registers used:
  7289 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  7290 ;; Tracked objects:
  7291 ;;		On entry : 0/0
  7292 ;;		On exit  : 0/0
  7293 ;;		Unchanged: 0/0
  7294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7295 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7296 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7298 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7299 ;;Total ram usage:        4 bytes
  7300 ;; Hardware stack levels used:    1
  7301 ;; Hardware stack levels required when called:    3
  7302 ;; This function calls:
  7303 ;;		Nothing
  7304 ;; This function is called by:
  7305 ;;		_GPS_SendUBX
  7306 ;; This function uses a non-reentrant model
  7307 ;;
  7308                           
  7309                           
  7310                           ;psect for function _GetLengthUBX
  7311  0D00                     _GetLengthUBX:	
  7312                           
  7313                           ;incstack = 0
  7314                           ; Regs used in _GetLengthUBX: [wreg-fsr1h+status,2+status,0]
  7315                           ;GetLengthUBX@data stored from wreg
  7316  0D00  00F3               	movwf	GetLengthUBX@data
  7317                           
  7318                           ;main.c: 238: size_t GetLengthUBX(uint8_t* data);main.c: 239: {;main.c: 243:     return 
      +                          (short)(8 + (short)((short)data[4] + (short)(data[5] << 8)));
  7319  0D01  0873               	movf	GetLengthUBX@data,w
  7320  0D02  3E05               	addlw	5
  7321  0D03  0086               	movwf	6
  7322  0D04  3002               	movlw	2	; select bank4/5
  7323  0D05  0087               	movwf	7
  7324  0D06  0873               	movf	GetLengthUBX@data,w
  7325  0D07  3E04               	addlw	4
  7326  0D08  0084               	movwf	4
  7327  0D09  3002               	movlw	2	; select bank4/5
  7328  0D0A  0085               	movwf	5
  7329  0D0B  0800               	movf	0,w
  7330  0D0C  3E08               	addlw	8
  7331  0D0D  00F0               	movwf	?_GetLengthUBX
  7332  0D0E  3000               	movlw	0
  7333  0D0F  3D01               	addwfc	1,w
  7334  0D10  00F1               	movwf	?_GetLengthUBX+1
  7335  0D11  0008               	return
  7336  0D12                     __end_of_GetLengthUBX:	
  7337                           
  7338                           	psect	text22
  7339  0CAC                     __ptext22:	
  7340 ;; *************** function _EUSART_Write *****************
  7341 ;; Defined at:
  7342 ;;		line 111 in file "mcc_generated_files/eusart.c"
  7343 ;; Parameters:    Size  Location     Type
  7344 ;;  txData          1    wreg     unsigned char 
  7345 ;; Auto vars:     Size  Location     Type
  7346 ;;  txData          1    0[COMMON] unsigned char 
  7347 ;; Return value:  Size  Location     Type
  7348 ;;                  1    wreg      void 
  7349 ;; Registers used:
  7350 ;;		wreg
  7351 ;; Tracked objects:
  7352 ;;		On entry : 0/0
  7353 ;;		On exit  : 0/0
  7354 ;;		Unchanged: 0/0
  7355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7357 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7359 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7360 ;;Total ram usage:        1 bytes
  7361 ;; Hardware stack levels used:    1
  7362 ;; Hardware stack levels required when called:    3
  7363 ;; This function calls:
  7364 ;;		Nothing
  7365 ;; This function is called by:
  7366 ;;		_putch
  7367 ;;		_GPS_SendUBX
  7368 ;; This function uses a non-reentrant model
  7369 ;;
  7370                           
  7371                           
  7372                           ;psect for function _EUSART_Write
  7373  0CAC                     _EUSART_Write:	
  7374                           
  7375                           ;incstack = 0
  7376                           ; Regs used in _EUSART_Write: [wreg]
  7377                           ;EUSART_Write@txData stored from wreg
  7378  0CAC  00F0               	movwf	EUSART_Write@txData
  7379  0CAD                     l112:	
  7380                           ;mcc_generated_files/eusart.c: 114:     {;mcc_generated_files/eusart.c: 115:     }
  7381                           
  7382                           
  7383                           ;mcc_generated_files/eusart.c: 113:     while(0 == PIR1bits.TXIF)
  7384  0CAD  0020               	movlb	0	; select bank0
  7385  0CAE  1E10               	btfss	16,4	;volatile
  7386  0CAF  2CAD               	goto	l112
  7387                           
  7388                           ;mcc_generated_files/eusart.c: 117:     TX1REG = txData;
  7389  0CB0  0870               	movf	EUSART_Write@txData,w
  7390  0CB1  0023               	movlb	3	; select bank3
  7391  0CB2  009A               	movwf	26	;volatile
  7392  0CB3  0008               	return
  7393  0CB4                     __end_of_EUSART_Write:	
  7394                           
  7395                           	psect	text23
  7396  0652                     __ptext23:	
  7397 ;; *************** function _GPS_HasAcknowledged *****************
  7398 ;; Defined at:
  7399 ;;		line 270 in file "main.c"
  7400 ;; Parameters:    Size  Location     Type
  7401 ;;  data            1    wreg     PTR unsigned char 
  7402 ;;		 -> setNavFlightMode(44), 
  7403 ;; Auto vars:     Size  Location     Type
  7404 ;;  data            1   15[BANK0 ] PTR unsigned char 
  7405 ;;		 -> setNavFlightMode(44), 
  7406 ;;  i               1   17[BANK0 ] unsigned char 
  7407 ;;  ackPacket      10    5[BANK0 ] unsigned char [10]
  7408 ;;  startTime       4    0[BANK0 ] unsigned long 
  7409 ;;  ackByteID       1   16[BANK0 ] unsigned char 
  7410 ;;  ackByte         1    4[BANK0 ] unsigned char 
  7411 ;; Return value:  Size  Location     Type
  7412 ;;                  1    wreg      _Bool 
  7413 ;; Registers used:
  7414 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7415 ;; Tracked objects:
  7416 ;;		On entry : 0/0
  7417 ;;		On exit  : 0/0
  7418 ;;		Unchanged: 0/0
  7419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7421 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7422 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7423 ;;      Totals:         4      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7424 ;;Total ram usage:       22 bytes
  7425 ;; Hardware stack levels used:    1
  7426 ;; Hardware stack levels required when called:    4
  7427 ;; This function calls:
  7428 ;;		_EUSART_Read
  7429 ;;		_EUSART_is_rx_ready
  7430 ;; This function is called by:
  7431 ;;		_SetupGPS
  7432 ;; This function uses a non-reentrant model
  7433 ;;
  7434                           
  7435                           
  7436                           ;psect for function _GPS_HasAcknowledged
  7437  0652                     _GPS_HasAcknowledged:	
  7438                           
  7439                           ;incstack = 0
  7440                           ; Regs used in _GPS_HasAcknowledged: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7441                           ;GPS_HasAcknowledged@data stored from wreg
  7442  0652  0020               	movlb	0	; select bank0
  7443  0653  00AF               	movwf	GPS_HasAcknowledged@data
  7444                           
  7445                           ;main.c: 270: _Bool GPS_HasAcknowledged(uint8_t* data);main.c: 271: {;main.c: 276:     u
      +                          int8_t ackPacket[10];;main.c: 277:     unsigned long startTime = ticks;
  7446  0654  0021               	movlb	1	; select bank1
  7447  0655  0827               	movf	(_ticks+3)^(0+128),w
  7448  0656  0020               	movlb	0	; select bank0
  7449  0657  00A3               	movwf	GPS_HasAcknowledged@startTime+3
  7450  0658  0021               	movlb	1	; select bank1
  7451  0659  0826               	movf	(_ticks+2)^(0+128),w
  7452  065A  0020               	movlb	0	; select bank0
  7453  065B  00A2               	movwf	GPS_HasAcknowledged@startTime+2
  7454  065C  0021               	movlb	1	; select bank1
  7455  065D  0825               	movf	(_ticks+1)^(0+128),w
  7456  065E  0020               	movlb	0	; select bank0
  7457  065F  00A1               	movwf	GPS_HasAcknowledged@startTime+1
  7458  0660  0021               	movlb	1	; select bank1
  7459  0661  0824               	movf	_ticks^(0+128),w
  7460  0662  0020               	movlb	0	; select bank0
  7461  0663  00A0               	movwf	GPS_HasAcknowledged@startTime
  7462                           
  7463                           ;main.c: 280:     ackPacket[0] = 0xB5;
  7464  0664  30B5               	movlw	181
  7465  0665  00F0               	movwf	??_GPS_HasAcknowledged
  7466  0666  0870               	movf	??_GPS_HasAcknowledged,w
  7467  0667  00A5               	movwf	GPS_HasAcknowledged@ackPacket
  7468                           
  7469                           ;main.c: 281:     ackPacket[1] = 0x62;
  7470  0668  3062               	movlw	98
  7471  0669  00F0               	movwf	??_GPS_HasAcknowledged
  7472  066A  0870               	movf	??_GPS_HasAcknowledged,w
  7473  066B  00A6               	movwf	GPS_HasAcknowledged@ackPacket+1
  7474                           
  7475                           ;main.c: 282:     ackPacket[2] = 0x05;
  7476  066C  3005               	movlw	5
  7477  066D  00F0               	movwf	??_GPS_HasAcknowledged
  7478  066E  0870               	movf	??_GPS_HasAcknowledged,w
  7479  066F  00A7               	movwf	GPS_HasAcknowledged@ackPacket+2
  7480                           
  7481                           ;main.c: 283:     ackPacket[3] = 0x01;
  7482  0670  01A8               	clrf	GPS_HasAcknowledged@ackPacket+3
  7483  0671  0AA8               	incf	GPS_HasAcknowledged@ackPacket+3,f
  7484                           
  7485                           ;main.c: 284:     ackPacket[4] = 0x02;
  7486  0672  3002               	movlw	2
  7487  0673  00F0               	movwf	??_GPS_HasAcknowledged
  7488  0674  0870               	movf	??_GPS_HasAcknowledged,w
  7489  0675  00A9               	movwf	GPS_HasAcknowledged@ackPacket+4
  7490                           
  7491                           ;main.c: 285:     ackPacket[5] = 0x00;
  7492  0676  01AA               	clrf	GPS_HasAcknowledged@ackPacket+5
  7493                           
  7494                           ;main.c: 286:     ackPacket[6] = data[2];
  7495  0677  082F               	movf	GPS_HasAcknowledged@data,w
  7496  0678  0086               	movwf	6
  7497  0679  3002               	movlw	2	; select bank4/5
  7498  067A  0087               	movwf	7
  7499  067B  3002               	movlw	2	; select bank4/5
  7500  067C  3F42               	moviw [2]fsr1
  7501  067D  00AB               	movwf	GPS_HasAcknowledged@ackPacket+6
  7502                           
  7503                           ;main.c: 287:     ackPacket[7] = data[3];
  7504  067E  082F               	movf	GPS_HasAcknowledged@data,w
  7505  067F  0086               	movwf	6
  7506  0680  3002               	movlw	2	; select bank4/5
  7507  0681  0087               	movwf	7
  7508  0682  3002               	movlw	2	; select bank4/5
  7509  0683  3F43               	moviw [3]fsr1
  7510  0684  00AC               	movwf	GPS_HasAcknowledged@ackPacket+7
  7511                           
  7512                           ;main.c: 288:     ackPacket[8] = 0;
  7513  0685  01AD               	clrf	GPS_HasAcknowledged@ackPacket+8
  7514                           
  7515                           ;main.c: 289:     ackPacket[9] = 0;
  7516  0686  01AE               	clrf	GPS_HasAcknowledged@ackPacket+9
  7517                           
  7518                           ;main.c: 292:     for (uint8_t i = 2; i < 8; i++)
  7519  0687  3002               	movlw	2
  7520  0688  00F0               	movwf	??_GPS_HasAcknowledged
  7521  0689  0870               	movf	??_GPS_HasAcknowledged,w
  7522  068A  00B1               	movwf	GPS_HasAcknowledged@i
  7523  068B                     l2980:	
  7524                           
  7525                           ;main.c: 293:     {;main.c: 294:         ackPacket[8] = ackPacket[8] + ackPacket[i];
  7526  068B  0831               	movf	GPS_HasAcknowledged@i,w
  7527  068C  3E25               	addlw	(low (GPS_HasAcknowledged@ackPacket| 0))& (0+255)
  7528  068D  0086               	movwf	6
  7529  068E  0187               	clrf	7
  7530  068F  082D               	movf	GPS_HasAcknowledged@ackPacket+8,w
  7531  0690  0701               	addwf	1,w
  7532  0691  00F0               	movwf	??_GPS_HasAcknowledged
  7533  0692  0870               	movf	??_GPS_HasAcknowledged,w
  7534  0693  00AD               	movwf	GPS_HasAcknowledged@ackPacket+8
  7535                           
  7536                           ;main.c: 295:         ackPacket[9] = ackPacket[9] + ackPacket[8];
  7537  0694  082E               	movf	GPS_HasAcknowledged@ackPacket+9,w
  7538  0695  072D               	addwf	GPS_HasAcknowledged@ackPacket+8,w
  7539  0696  00F0               	movwf	??_GPS_HasAcknowledged
  7540  0697  0870               	movf	??_GPS_HasAcknowledged,w
  7541  0698  00AE               	movwf	GPS_HasAcknowledged@ackPacket+9
  7542                           
  7543                           ;main.c: 296:     }
  7544  0699  3001               	movlw	1
  7545  069A  00F0               	movwf	??_GPS_HasAcknowledged
  7546  069B  0870               	movf	??_GPS_HasAcknowledged,w
  7547  069C  07B1               	addwf	GPS_HasAcknowledged@i,f
  7548  069D  3008               	movlw	8
  7549  069E  0231               	subwf	GPS_HasAcknowledged@i,w
  7550  069F  1C03               	skipc
  7551  06A0  2E8B               	goto	l2980
  7552  06A1                     l2988:	
  7553                           
  7554                           ;main.c: 299:     uint8_t ackByte;;main.c: 302:     uint8_t ackByteID = 0;
  7555  06A1  01B0               	clrf	GPS_HasAcknowledged@ackByteID
  7556  06A2                     l2990:	
  7557                           
  7558                           ;main.c: 306:     {;main.c: 309:         if (ackByteID > 9)
  7559  06A2  300A               	movlw	10
  7560  06A3  0020               	movlb	0	; select bank0
  7561  06A4  0230               	subwf	GPS_HasAcknowledged@ackByteID,w
  7562  06A5  1C03               	skipc
  7563  06A6  2EA9               	goto	l2996
  7564                           
  7565                           ;main.c: 310:         {;main.c: 313:             return 1;
  7566  06A7  3001               	movlw	1
  7567  06A8  0008               	return
  7568  06A9                     l2996:	
  7569                           
  7570                           ;main.c: 317:         if (ticks - startTime > 3000)
  7571  06A9  0820               	movf	GPS_HasAcknowledged@startTime,w
  7572  06AA  0021               	movlb	1	; select bank1
  7573  06AB  0224               	subwf	_ticks^(0+128),w
  7574  06AC  00F0               	movwf	??_GPS_HasAcknowledged
  7575  06AD  0020               	movlb	0	; select bank0
  7576  06AE  0821               	movf	GPS_HasAcknowledged@startTime+1,w
  7577  06AF  0021               	movlb	1	; select bank1
  7578  06B0  3B25               	subwfb	(_ticks+1)^(0+128),w
  7579  06B1  00F1               	movwf	??_GPS_HasAcknowledged+1
  7580  06B2  0020               	movlb	0	; select bank0
  7581  06B3  0822               	movf	GPS_HasAcknowledged@startTime+2,w
  7582  06B4  0021               	movlb	1	; select bank1
  7583  06B5  3B26               	subwfb	(_ticks+2)^(0+128),w
  7584  06B6  00F2               	movwf	??_GPS_HasAcknowledged+2
  7585  06B7  0020               	movlb	0	; select bank0
  7586  06B8  0823               	movf	GPS_HasAcknowledged@startTime+3,w
  7587  06B9  0021               	movlb	1	; select bank1
  7588  06BA  3B27               	subwfb	(_ticks+3)^(0+128),w
  7589  06BB  00F3               	movwf	??_GPS_HasAcknowledged+3
  7590  06BC  0873               	movf	??_GPS_HasAcknowledged+3,w
  7591  06BD  1D03               	btfss	3,2
  7592  06BE  2EC8               	goto	l2998
  7593  06BF  0872               	movf	??_GPS_HasAcknowledged+2,w
  7594  06C0  1D03               	btfss	3,2
  7595  06C1  2EC8               	goto	l2998
  7596  06C2  30B9               	movlw	185
  7597  06C3  0270               	subwf	??_GPS_HasAcknowledged,w
  7598  06C4  300B               	movlw	11
  7599  06C5  3B71               	subwfb	??_GPS_HasAcknowledged+1,w
  7600  06C6  1C03               	btfss	3,0
  7601  06C7  2ECA               	goto	l3002
  7602  06C8                     l2998:	
  7603                           
  7604                           ;main.c: 318:         {;main.c: 319:             return 0;
  7605  06C8  3000               	movlw	0
  7606  06C9  0008               	return
  7607  06CA                     l3002:	
  7608                           
  7609                           ;main.c: 323:         if (EUSART_is_rx_ready())
  7610  06CA  318C  2482  3186   	fcall	_EUSART_is_rx_ready
  7611  06CD  3A00               	xorlw	0
  7612  06CE  1903               	skipnz
  7613  06CF  2EA2               	goto	l2990
  7614                           
  7615                           ;main.c: 324:         {;main.c: 325:             ackByte = EUSART_Read();
  7616  06D0  318C  24BE  3186   	fcall	_EUSART_Read
  7617  06D3  00F0               	movwf	??_GPS_HasAcknowledged
  7618  06D4  0870               	movf	??_GPS_HasAcknowledged,w
  7619  06D5  0020               	movlb	0	; select bank0
  7620  06D6  00A4               	movwf	GPS_HasAcknowledged@ackByte
  7621                           
  7622                           ;main.c: 328:             if (ackByte == ackPacket[ackByteID]) {
  7623  06D7  0830               	movf	GPS_HasAcknowledged@ackByteID,w
  7624  06D8  3E25               	addlw	(low (GPS_HasAcknowledged@ackPacket| 0))& (0+255)
  7625  06D9  0086               	movwf	6
  7626  06DA  0187               	clrf	7
  7627  06DB  0801               	movf	1,w
  7628  06DC  0624               	xorwf	GPS_HasAcknowledged@ackByte,w
  7629  06DD  1D03               	skipz
  7630  06DE  2EA1               	goto	l2988
  7631                           
  7632                           ;main.c: 329:                 ackByteID++;
  7633  06DF  3001               	movlw	1
  7634  06E0  00F0               	movwf	??_GPS_HasAcknowledged
  7635  06E1  0870               	movf	??_GPS_HasAcknowledged,w
  7636  06E2  07B0               	addwf	GPS_HasAcknowledged@ackByteID,f
  7637                           
  7638                           ;main.c: 330:             }
  7639  06E3  2EA2               	goto	l2990
  7640  06E4                     __end_of_GPS_HasAcknowledged:	
  7641                           
  7642                           	psect	text24
  7643  0C82                     __ptext24:	
  7644 ;; *************** function _EUSART_is_rx_ready *****************
  7645 ;; Defined at:
  7646 ;;		line 83 in file "mcc_generated_files/eusart.c"
  7647 ;; Parameters:    Size  Location     Type
  7648 ;;		None
  7649 ;; Auto vars:     Size  Location     Type
  7650 ;;		None
  7651 ;; Return value:  Size  Location     Type
  7652 ;;                  1    wreg      _Bool 
  7653 ;; Registers used:
  7654 ;;		wreg, status,2, status,0
  7655 ;; Tracked objects:
  7656 ;;		On entry : 0/0
  7657 ;;		On exit  : 0/0
  7658 ;;		Unchanged: 0/0
  7659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7663 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7664 ;;Total ram usage:        0 bytes
  7665 ;; Hardware stack levels used:    1
  7666 ;; Hardware stack levels required when called:    3
  7667 ;; This function calls:
  7668 ;;		Nothing
  7669 ;; This function is called by:
  7670 ;;		_GPS_HasAcknowledged
  7671 ;; This function uses a non-reentrant model
  7672 ;;
  7673                           
  7674                           
  7675                           ;psect for function _EUSART_is_rx_ready
  7676  0C82                     _EUSART_is_rx_ready:	
  7677                           
  7678                           ;mcc_generated_files/eusart.c: 85:     return PIR1bits.RCIF;
  7679                           
  7680                           ;incstack = 0
  7681                           ; Regs used in _EUSART_is_rx_ready: [wreg+status,2+status,0]
  7682  0C82  0020               	movlb	0	; select bank0
  7683  0C83  0E10               	swapf	16,w	;volatile
  7684  0C84  0C89               	rrf	9,f
  7685  0C85  3901               	andlw	1
  7686  0C86  0008               	return
  7687  0C87                     __end_of_EUSART_is_rx_ready:	
  7688                           
  7689                           	psect	text25
  7690  0CD3                     __ptext25:	
  7691 ;; *************** function _SYSTEM_Initialize *****************
  7692 ;; Defined at:
  7693 ;;		line 50 in file "mcc_generated_files/mcc.c"
  7694 ;; Parameters:    Size  Location     Type
  7695 ;;		None
  7696 ;; Auto vars:     Size  Location     Type
  7697 ;;		None
  7698 ;; Return value:  Size  Location     Type
  7699 ;;                  1    wreg      void 
  7700 ;; Registers used:
  7701 ;;		wreg, status,2, status,0, pclath, cstack
  7702 ;; Tracked objects:
  7703 ;;		On entry : 0/0
  7704 ;;		On exit  : 0/0
  7705 ;;		Unchanged: 0/0
  7706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7710 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7711 ;;Total ram usage:        0 bytes
  7712 ;; Hardware stack levels used:    1
  7713 ;; Hardware stack levels required when called:    5
  7714 ;; This function calls:
  7715 ;;		_EUSART_Initialize
  7716 ;;		_OSCILLATOR_Initialize
  7717 ;;		_PIN_MANAGER_Initialize
  7718 ;;		_TMR0_Initialize
  7719 ;; This function is called by:
  7720 ;;		_main
  7721 ;; This function uses a non-reentrant model
  7722 ;;
  7723                           
  7724                           
  7725                           ;psect for function _SYSTEM_Initialize
  7726  0CD3                     _SYSTEM_Initialize:	
  7727                           
  7728                           ;mcc_generated_files/mcc.c: 52:     PIN_MANAGER_Initialize();
  7729                           
  7730                           ;incstack = 0
  7731                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7732  0CD3  318D  25BB  318C   	fcall	_PIN_MANAGER_Initialize
  7733                           
  7734                           ;mcc_generated_files/mcc.c: 53:     OSCILLATOR_Initialize();
  7735  0CD6  318C  249E  318C   	fcall	_OSCILLATOR_Initialize
  7736                           
  7737                           ;mcc_generated_files/mcc.c: 54:     TMR0_Initialize();
  7738  0CD9  318D  2512  318C   	fcall	_TMR0_Initialize
  7739                           
  7740                           ;mcc_generated_files/mcc.c: 55:     EUSART_Initialize();
  7741  0CDC  318C  24C8         	fcall	_EUSART_Initialize
  7742  0CDE  0008               	return
  7743  0CDF                     __end_of_SYSTEM_Initialize:	
  7744                           
  7745                           	psect	text26
  7746  0D12                     __ptext26:	
  7747 ;; *************** function _TMR0_Initialize *****************
  7748 ;; Defined at:
  7749 ;;		line 64 in file "mcc_generated_files/tmr0.c"
  7750 ;; Parameters:    Size  Location     Type
  7751 ;;		None
  7752 ;; Auto vars:     Size  Location     Type
  7753 ;;		None
  7754 ;; Return value:  Size  Location     Type
  7755 ;;                  1    wreg      void 
  7756 ;; Registers used:
  7757 ;;		wreg, status,2, status,0, pclath, cstack
  7758 ;; Tracked objects:
  7759 ;;		On entry : 0/0
  7760 ;;		On exit  : 0/0
  7761 ;;		Unchanged: 0/0
  7762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7765 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7766 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7767 ;;Total ram usage:        1 bytes
  7768 ;; Hardware stack levels used:    1
  7769 ;; Hardware stack levels required when called:    4
  7770 ;; This function calls:
  7771 ;;		_TMR0_SetInterruptHandler
  7772 ;; This function is called by:
  7773 ;;		_SYSTEM_Initialize
  7774 ;; This function uses a non-reentrant model
  7775 ;;
  7776                           
  7777                           
  7778                           ;psect for function _TMR0_Initialize
  7779  0D12                     _TMR0_Initialize:	
  7780                           
  7781                           ;mcc_generated_files/tmr0.c: 69:     OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | (0xD2 
      +                          & 0x3F));
  7782                           
  7783                           ;incstack = 0
  7784                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7785  0D12  0021               	movlb	1	; select bank1
  7786  0D13  0815               	movf	21,w	;volatile
  7787  0D14  39C0               	andlw	192
  7788  0D15  3812               	iorlw	18
  7789  0D16  0095               	movwf	21	;volatile
  7790                           
  7791                           ;mcc_generated_files/tmr0.c: 72:     TMR0 = 0x83;
  7792  0D17  3083               	movlw	131
  7793  0D18  0020               	movlb	0	; select bank0
  7794  0D19  0095               	movwf	21	;volatile
  7795                           
  7796                           ;mcc_generated_files/tmr0.c: 75:     timer0ReloadVal= 131;
  7797  0D1A  3083               	movlw	131
  7798  0D1B  00F2               	movwf	??_TMR0_Initialize
  7799  0D1C  0872               	movf	??_TMR0_Initialize,w
  7800  0D1D  0021               	movlb	1	; select bank1
  7801  0D1E  00EE               	movwf	_timer0ReloadVal^(0+128)	;volatile
  7802                           
  7803                           ;mcc_generated_files/tmr0.c: 78:     INTCONbits.TMR0IF = 0;
  7804  0D1F  110B               	bcf	11,2	;volatile
  7805                           
  7806                           ;mcc_generated_files/tmr0.c: 81:     INTCONbits.TMR0IE = 1;
  7807  0D20  168B               	bsf	11,5	;volatile
  7808                           
  7809                           ;mcc_generated_files/tmr0.c: 84:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  7810  0D21  3003               	movlw	low _TMR0_DefaultInterruptHandler
  7811  0D22  00F0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  7812  0D23  3000               	movlw	high _TMR0_DefaultInterruptHandler
  7813  0D24  00F1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  7814  0D25  318C  248C         	fcall	_TMR0_SetInterruptHandler
  7815  0D27  0008               	return
  7816  0D28                     __end_of_TMR0_Initialize:	
  7817                           
  7818                           	psect	text27
  7819  0C8C                     __ptext27:	
  7820 ;; *************** function _TMR0_SetInterruptHandler *****************
  7821 ;; Defined at:
  7822 ;;		line 125 in file "mcc_generated_files/tmr0.c"
  7823 ;; Parameters:    Size  Location     Type
  7824 ;;  InterruptHan    2    0[COMMON] PTR FTN()void 
  7825 ;;		 -> TMR0_DefaultInterruptHandler(1), TimerISR(1), 
  7826 ;; Auto vars:     Size  Location     Type
  7827 ;;		None
  7828 ;; Return value:  Size  Location     Type
  7829 ;;                  1    wreg      void 
  7830 ;; Registers used:
  7831 ;;		wreg
  7832 ;; Tracked objects:
  7833 ;;		On entry : 0/0
  7834 ;;		On exit  : 0/0
  7835 ;;		Unchanged: 0/0
  7836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7837 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7838 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7840 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7841 ;;Total ram usage:        2 bytes
  7842 ;; Hardware stack levels used:    1
  7843 ;; Hardware stack levels required when called:    3
  7844 ;; This function calls:
  7845 ;;		Nothing
  7846 ;; This function is called by:
  7847 ;;		_main
  7848 ;;		_TMR0_Initialize
  7849 ;; This function uses a non-reentrant model
  7850 ;;
  7851                           
  7852                           
  7853                           ;psect for function _TMR0_SetInterruptHandler
  7854  0C8C                     _TMR0_SetInterruptHandler:	
  7855                           
  7856                           ;mcc_generated_files/tmr0.c: 126:     TMR0_InterruptHandler = InterruptHandler;
  7857                           
  7858                           ;incstack = 0
  7859                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  7860  0C8C  0871               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  7861  0C8D  0021               	movlb	1	; select bank1
  7862  0C8E  00ED               	movwf	(_TMR0_InterruptHandler+1)^(0+128)
  7863  0C8F  0870               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  7864  0C90  00EC               	movwf	_TMR0_InterruptHandler^(0+128)
  7865  0C91  0008               	return
  7866  0C92                     __end_of_TMR0_SetInterruptHandler:	
  7867                           
  7868                           	psect	text28
  7869  0DBB                     __ptext28:	
  7870 ;; *************** function _PIN_MANAGER_Initialize *****************
  7871 ;; Defined at:
  7872 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
  7873 ;; Parameters:    Size  Location     Type
  7874 ;;		None
  7875 ;; Auto vars:     Size  Location     Type
  7876 ;;		None
  7877 ;; Return value:  Size  Location     Type
  7878 ;;                  1    wreg      void 
  7879 ;; Registers used:
  7880 ;;		wreg, status,2
  7881 ;; Tracked objects:
  7882 ;;		On entry : 0/0
  7883 ;;		On exit  : 0/0
  7884 ;;		Unchanged: 0/0
  7885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7887 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7889 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7890 ;;Total ram usage:        0 bytes
  7891 ;; Hardware stack levels used:    1
  7892 ;; Hardware stack levels required when called:    3
  7893 ;; This function calls:
  7894 ;;		Nothing
  7895 ;; This function is called by:
  7896 ;;		_SYSTEM_Initialize
  7897 ;; This function uses a non-reentrant model
  7898 ;;
  7899                           
  7900                           
  7901                           ;psect for function _PIN_MANAGER_Initialize
  7902  0DBB                     _PIN_MANAGER_Initialize:	
  7903                           
  7904                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  7905                           
  7906                           ;incstack = 0
  7907                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  7908  0DBB  0022               	movlb	2	; select bank2
  7909  0DBC  018C               	clrf	12	;volatile
  7910                           
  7911                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  7912  0DBD  018D               	clrf	13	;volatile
  7913                           
  7914                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  7915  0DBE  018E               	clrf	14	;volatile
  7916                           
  7917                           ;mcc_generated_files/pin_manager.c: 69:     TRISA = 0x07;
  7918  0DBF  3007               	movlw	7
  7919  0DC0  0021               	movlb	1	; select bank1
  7920  0DC1  008C               	movwf	12	;volatile
  7921                           
  7922                           ;mcc_generated_files/pin_manager.c: 70:     TRISB = 0x70;
  7923  0DC2  3070               	movlw	112
  7924  0DC3  008D               	movwf	13	;volatile
  7925                           
  7926                           ;mcc_generated_files/pin_manager.c: 71:     TRISC = 0xDF;
  7927  0DC4  30DF               	movlw	223
  7928  0DC5  008E               	movwf	14	;volatile
  7929                           
  7930                           ;mcc_generated_files/pin_manager.c: 76:     ANSELC = 0x4F;
  7931  0DC6  304F               	movlw	79
  7932  0DC7  0023               	movlb	3	; select bank3
  7933  0DC8  008E               	movwf	14	;volatile
  7934                           
  7935                           ;mcc_generated_files/pin_manager.c: 77:     ANSELB = 0xB0;
  7936  0DC9  30B0               	movlw	176
  7937  0DCA  008D               	movwf	13	;volatile
  7938                           
  7939                           ;mcc_generated_files/pin_manager.c: 78:     ANSELA = 0x07;
  7940  0DCB  3007               	movlw	7
  7941  0DCC  008C               	movwf	12	;volatile
  7942                           
  7943                           ;mcc_generated_files/pin_manager.c: 83:     WPUB = 0x00;
  7944  0DCD  0024               	movlb	4	; select bank4
  7945  0DCE  018D               	clrf	13	;volatile
  7946                           
  7947                           ;mcc_generated_files/pin_manager.c: 84:     WPUA = 0x00;
  7948  0DCF  018C               	clrf	12	;volatile
  7949                           
  7950                           ;mcc_generated_files/pin_manager.c: 85:     WPUC = 0x00;
  7951  0DD0  018E               	clrf	14	;volatile
  7952                           
  7953                           ;mcc_generated_files/pin_manager.c: 86:     OPTION_REGbits.nWPUEN = 1;
  7954  0DD1  0021               	movlb	1	; select bank1
  7955  0DD2  1795               	bsf	21,7	;volatile
  7956                           
  7957                           ;mcc_generated_files/pin_manager.c: 91:     ODCONA = 0x00;
  7958  0DD3  0025               	movlb	5	; select bank5
  7959  0DD4  018C               	clrf	12	;volatile
  7960                           
  7961                           ;mcc_generated_files/pin_manager.c: 92:     ODCONB = 0x00;
  7962  0DD5  018D               	clrf	13	;volatile
  7963                           
  7964                           ;mcc_generated_files/pin_manager.c: 93:     ODCONC = 0x00;
  7965  0DD6  018E               	clrf	14	;volatile
  7966                           
  7967                           ;mcc_generated_files/pin_manager.c: 98:     SLRCONA = 0x37;
  7968  0DD7  3037               	movlw	55
  7969  0DD8  0026               	movlb	6	; select bank6
  7970  0DD9  008C               	movwf	12	;volatile
  7971                           
  7972                           ;mcc_generated_files/pin_manager.c: 99:     SLRCONB = 0xF0;
  7973  0DDA  30F0               	movlw	240
  7974  0DDB  008D               	movwf	13	;volatile
  7975                           
  7976                           ;mcc_generated_files/pin_manager.c: 100:     SLRCONC = 0xFF;
  7977  0DDC  30FF               	movlw	255
  7978  0DDD  008E               	movwf	14	;volatile
  7979                           
  7980                           ;mcc_generated_files/pin_manager.c: 109:     RXPPS = 0x0E;
  7981  0DDE  300E               	movlw	14
  7982  0DDF  003C               	movlb	28	; select bank28
  7983  0DE0  00A4               	movwf	36	;volatile
  7984                           
  7985                           ;mcc_generated_files/pin_manager.c: 110:     RB7PPS = 0x12;
  7986  0DE1  3012               	movlw	18
  7987  0DE2  003D               	movlb	29	; select bank29
  7988  0DE3  009F               	movwf	31	;volatile
  7989  0DE4  0008               	return
  7990  0DE5                     __end_of_PIN_MANAGER_Initialize:	
  7991                           
  7992                           	psect	text29
  7993  0C9E                     __ptext29:	
  7994 ;; *************** function _OSCILLATOR_Initialize *****************
  7995 ;; Defined at:
  7996 ;;		line 58 in file "mcc_generated_files/mcc.c"
  7997 ;; Parameters:    Size  Location     Type
  7998 ;;		None
  7999 ;; Auto vars:     Size  Location     Type
  8000 ;;		None
  8001 ;; Return value:  Size  Location     Type
  8002 ;;                  1    wreg      void 
  8003 ;; Registers used:
  8004 ;;		wreg, status,2
  8005 ;; Tracked objects:
  8006 ;;		On entry : 0/0
  8007 ;;		On exit  : 0/0
  8008 ;;		Unchanged: 0/0
  8009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8013 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8014 ;;Total ram usage:        0 bytes
  8015 ;; Hardware stack levels used:    1
  8016 ;; Hardware stack levels required when called:    3
  8017 ;; This function calls:
  8018 ;;		Nothing
  8019 ;; This function is called by:
  8020 ;;		_SYSTEM_Initialize
  8021 ;; This function uses a non-reentrant model
  8022 ;;
  8023                           
  8024                           
  8025                           ;psect for function _OSCILLATOR_Initialize
  8026  0C9E                     _OSCILLATOR_Initialize:	
  8027                           
  8028                           ;mcc_generated_files/mcc.c: 61:     OSCCON = 0x68;
  8029                           
  8030                           ;incstack = 0
  8031                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  8032  0C9E  3068               	movlw	104
  8033  0C9F  0021               	movlb	1	; select bank1
  8034  0CA0  0099               	movwf	25	;volatile
  8035                           
  8036                           ;mcc_generated_files/mcc.c: 63:     OSCTUNE = 0x00;
  8037  0CA1  0198               	clrf	24	;volatile
  8038                           
  8039                           ;mcc_generated_files/mcc.c: 65:     BORCON = 0x00;
  8040  0CA2  0022               	movlb	2	; select bank2
  8041  0CA3  0196               	clrf	22	;volatile
  8042  0CA4  0008               	return
  8043  0CA5                     __end_of_OSCILLATOR_Initialize:	
  8044                           
  8045                           	psect	text30
  8046  0CC8                     __ptext30:	
  8047 ;; *************** function _EUSART_Initialize *****************
  8048 ;; Defined at:
  8049 ;;		line 56 in file "mcc_generated_files/eusart.c"
  8050 ;; Parameters:    Size  Location     Type
  8051 ;;		None
  8052 ;; Auto vars:     Size  Location     Type
  8053 ;;		None
  8054 ;; Return value:  Size  Location     Type
  8055 ;;                  1    wreg      void 
  8056 ;; Registers used:
  8057 ;;		wreg, status,2
  8058 ;; Tracked objects:
  8059 ;;		On entry : 0/0
  8060 ;;		On exit  : 0/0
  8061 ;;		Unchanged: 0/0
  8062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8064 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8066 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8067 ;;Total ram usage:        0 bytes
  8068 ;; Hardware stack levels used:    1
  8069 ;; Hardware stack levels required when called:    3
  8070 ;; This function calls:
  8071 ;;		Nothing
  8072 ;; This function is called by:
  8073 ;;		_SYSTEM_Initialize
  8074 ;; This function uses a non-reentrant model
  8075 ;;
  8076                           
  8077                           
  8078                           ;psect for function _EUSART_Initialize
  8079  0CC8                     _EUSART_Initialize:	
  8080                           
  8081                           ;mcc_generated_files/eusart.c: 61:     BAUD1CON = 0x08;
  8082                           
  8083                           ;incstack = 0
  8084                           ; Regs used in _EUSART_Initialize: [wreg+status,2]
  8085  0CC8  3008               	movlw	8
  8086  0CC9  0023               	movlb	3	; select bank3
  8087  0CCA  009F               	movwf	31	;volatile
  8088                           
  8089                           ;mcc_generated_files/eusart.c: 64:     RC1STA = 0x90;
  8090  0CCB  3090               	movlw	144
  8091  0CCC  009D               	movwf	29	;volatile
  8092                           
  8093                           ;mcc_generated_files/eusart.c: 67:     TX1STA = 0x24;
  8094  0CCD  3024               	movlw	36
  8095  0CCE  009E               	movwf	30	;volatile
  8096                           
  8097                           ;mcc_generated_files/eusart.c: 70:     SPBRGL = 0x67;
  8098  0CCF  3067               	movlw	103
  8099  0CD0  009B               	movwf	27	;volatile
  8100                           
  8101                           ;mcc_generated_files/eusart.c: 73:     SPBRGH = 0x00;
  8102  0CD1  019C               	clrf	28	;volatile
  8103  0CD2  0008               	return
  8104  0CD3                     __end_of_EUSART_Initialize:	
  8105                           
  8106                           	psect	text31
  8107  0193                     __ptext31:	
  8108 ;; *************** function _GetNavData *****************
  8109 ;; Defined at:
  8110 ;;		line 420 in file "main.c"
  8111 ;; Parameters:    Size  Location     Type
  8112 ;;		None
  8113 ;; Auto vars:     Size  Location     Type
  8114 ;;  i               2   11[BANK0 ] int 
  8115 ;;  skip            1    8[BANK0 ] _Bool 
  8116 ;;  byte            1   16[BANK0 ] unsigned char 
  8117 ;;  startTime       4    0[BANK0 ] unsigned long 
  8118 ;;  dataIndex       2   14[BANK0 ] int 
  8119 ;;  dataFieldTyp    2    9[BANK0 ] int 
  8120 ;;  success         1   13[BANK0 ] _Bool 
  8121 ;; Return value:  Size  Location     Type
  8122 ;;                  1    wreg      _Bool 
  8123 ;; Registers used:
  8124 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8125 ;; Tracked objects:
  8126 ;;		On entry : 0/0
  8127 ;;		On exit  : 0/0
  8128 ;;		Unchanged: 0/0
  8129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8131 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8132 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8133 ;;      Totals:         4      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8134 ;;Total ram usage:       21 bytes
  8135 ;; Hardware stack levels used:    1
  8136 ;; Hardware stack levels required when called:    4
  8137 ;; This function calls:
  8138 ;;		_EUSART_Read
  8139 ;; This function is called by:
  8140 ;;		_main
  8141 ;; This function uses a non-reentrant model
  8142 ;;
  8143                           
  8144                           
  8145                           ;psect for function _GetNavData
  8146  0193                     _GetNavData:	
  8147                           
  8148                           ;main.c: 422:     _Bool success = 0;
  8149                           
  8150                           ;incstack = 0
  8151                           ; Regs used in _GetNavData: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8152  0193  0020               	movlb	0	; select bank0
  8153  0194  01AD               	clrf	GetNavData@success
  8154  0195  0022               	movlb	2	; select bank2
  8155  0196  168E               	bsf	14,5	;volatile
  8156                           
  8157                           ;main.c: 429:     unsigned long startTime = ticks;
  8158  0197  0021               	movlb	1	; select bank1
  8159  0198  0827               	movf	(_ticks+3)^(0+128),w
  8160  0199  0020               	movlb	0	; select bank0
  8161  019A  00A3               	movwf	GetNavData@startTime+3
  8162  019B  0021               	movlb	1	; select bank1
  8163  019C  0826               	movf	(_ticks+2)^(0+128),w
  8164  019D  0020               	movlb	0	; select bank0
  8165  019E  00A2               	movwf	GetNavData@startTime+2
  8166  019F  0021               	movlb	1	; select bank1
  8167  01A0  0825               	movf	(_ticks+1)^(0+128),w
  8168  01A1  0020               	movlb	0	; select bank0
  8169  01A2  00A1               	movwf	GetNavData@startTime+1
  8170  01A3  0021               	movlb	1	; select bank1
  8171  01A4  0824               	movf	_ticks^(0+128),w
  8172  01A5  0020               	movlb	0	; select bank0
  8173  01A6  00A0               	movwf	GetNavData@startTime
  8174                           
  8175                           ;main.c: 432:     int dataIndex = 0;
  8176  01A7  01AE               	clrf	GetNavData@dataIndex
  8177  01A8  01AF               	clrf	GetNavData@dataIndex+1
  8178                           
  8179                           ;main.c: 434:     int dataFieldType = 0;
  8180  01A9  01A9               	clrf	GetNavData@dataFieldType
  8181  01AA  01AA               	clrf	GetNavData@dataFieldType+1
  8182  01AB                     l3162:	
  8183                           ;main.c: 436:     while (!success)
  8184                           
  8185                           
  8186                           ;main.c: 436:     while (!success)
  8187  01AB  0020               	movlb	0	; select bank0
  8188  01AC  082D               	movf	GetNavData@success,w
  8189  01AD  1D03               	btfss	3,2
  8190  01AE  2A8A               	goto	l3164
  8191                           
  8192                           ;main.c: 437:     {;main.c: 438:         char byte;;main.c: 441:         if (ticks - sta
      +                          rtTime > 3000)
  8193  01AF  0820               	movf	GetNavData@startTime,w
  8194  01B0  0021               	movlb	1	; select bank1
  8195  01B1  0224               	subwf	_ticks^(0+128),w
  8196  01B2  00F0               	movwf	??_GetNavData
  8197  01B3  0020               	movlb	0	; select bank0
  8198  01B4  0821               	movf	GetNavData@startTime+1,w
  8199  01B5  0021               	movlb	1	; select bank1
  8200  01B6  3B25               	subwfb	(_ticks+1)^(0+128),w
  8201  01B7  00F1               	movwf	??_GetNavData+1
  8202  01B8  0020               	movlb	0	; select bank0
  8203  01B9  0822               	movf	GetNavData@startTime+2,w
  8204  01BA  0021               	movlb	1	; select bank1
  8205  01BB  3B26               	subwfb	(_ticks+2)^(0+128),w
  8206  01BC  00F2               	movwf	??_GetNavData+2
  8207  01BD  0020               	movlb	0	; select bank0
  8208  01BE  0823               	movf	GetNavData@startTime+3,w
  8209  01BF  0021               	movlb	1	; select bank1
  8210  01C0  3B27               	subwfb	(_ticks+3)^(0+128),w
  8211  01C1  00F3               	movwf	??_GetNavData+3
  8212  01C2  0873               	movf	??_GetNavData+3,w
  8213  01C3  1D03               	btfss	3,2
  8214  01C4  2A8A               	goto	l3164
  8215  01C5  0872               	movf	??_GetNavData+2,w
  8216  01C6  1D03               	btfss	3,2
  8217  01C7  2A8A               	goto	l3164
  8218  01C8  30B9               	movlw	185
  8219  01C9  0270               	subwf	??_GetNavData,w
  8220  01CA  300B               	movlw	11
  8221  01CB  3B71               	subwfb	??_GetNavData+1,w
  8222  01CC  1803               	btfsc	3,0
  8223  01CD  2A8A               	goto	l3164
  8224                           
  8225                           ;main.c: 447:         if (EUSART_Read() == '$')
  8226  01CE  318C  24BE  3181   	fcall	_EUSART_Read
  8227  01D1  3A24               	xorlw	36
  8228  01D2  1D03               	skipz
  8229  01D3  29AB               	goto	l3162
  8230                           
  8231                           ;main.c: 448:         {;main.c: 449:             byte = EUSART_Read();
  8232  01D4  318C  24BE  3181   	fcall	_EUSART_Read
  8233  01D7  00F0               	movwf	??_GetNavData
  8234  01D8  0870               	movf	??_GetNavData,w
  8235  01D9  0020               	movlb	0	; select bank0
  8236  01DA  00B0               	movwf	GetNavData@byte
  8237                           
  8238                           ;main.c: 451:             _Bool skip = 1;
  8239  01DB  01A8               	clrf	GetNavData@skip
  8240  01DC  0AA8               	incf	GetNavData@skip,f
  8241                           
  8242                           ;main.c: 452:             switch (byte)
  8243  01DD  29FA               	goto	l3122
  8244  01DE                     l3112:	
  8245                           
  8246                           ;main.c: 455:                 dataFieldType++;
  8247  01DE  3001               	movlw	1
  8248  01DF  07A9               	addwf	GetNavData@dataFieldType,f
  8249  01E0  3000               	movlw	0
  8250  01E1  3DAA               	addwfc	GetNavData@dataFieldType+1,f
  8251                           
  8252                           ;main.c: 456:                 dataIndex = 0;
  8253  01E2  01AE               	clrf	GetNavData@dataIndex
  8254  01E3  01AF               	clrf	GetNavData@dataIndex+1
  8255                           
  8256                           ;main.c: 457:                 break;
  8257  01E4  2A0A               	goto	l3124
  8258  01E5                     l3116:	
  8259                           
  8260                           ;main.c: 459:                 success = dataFieldType > 13;
  8261  01E5  082A               	movf	GetNavData@dataFieldType+1,w
  8262  01E6  3A80               	xorlw	128
  8263  01E7  00F0               	movwf	??_GetNavData
  8264  01E8  3080               	movlw	128
  8265  01E9  0270               	subwf	??_GetNavData,w
  8266  01EA  1D03               	skipz
  8267  01EB  29EE               	goto	u2885
  8268  01EC  300E               	movlw	14
  8269  01ED  0229               	subwf	GetNavData@dataFieldType,w
  8270  01EE                     u2885:	
  8271  01EE  1C03               	btfss	3,0
  8272  01EF  29F2               	goto	u2880
  8273  01F0  3001               	movlw	1
  8274  01F1  29F3               	goto	u2890
  8275  01F2                     u2880:	
  8276  01F2  3000               	movlw	0
  8277  01F3                     u2890:	
  8278  01F3  00F1               	movwf	??_GetNavData+1
  8279  01F4  0871               	movf	??_GetNavData+1,w
  8280  01F5  0020               	movlb	0	; select bank0
  8281  01F6  00AD               	movwf	GetNavData@success
  8282                           
  8283                           ;main.c: 460:                 break;
  8284  01F7  2A0A               	goto	l3124
  8285  01F8                     l3118:	
  8286                           
  8287                           ;main.c: 462:                 skip = 0;
  8288  01F8  01A8               	clrf	GetNavData@skip
  8289                           
  8290                           ;main.c: 463:                 break;
  8291  01F9  2A0A               	goto	l3124
  8292  01FA                     l3122:	
  8293  01FA  0830               	movf	GetNavData@byte,w
  8294  01FB  00F0               	movwf	??_GetNavData
  8295  01FC  01F1               	clrf	??_GetNavData+1
  8296                           
  8297                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8298                           ; Switch size 1, requested type "simple"
  8299                           ; Number of cases is 1, Range of values is 0 to 0
  8300                           ; switch strategies available:
  8301                           ; Name         Instructions Cycles
  8302                           ; simple_byte            4     3 (average)
  8303                           ; direct_byte            8     6 (fixed)
  8304                           ; jumptable            260     6 (fixed)
  8305                           ;	Chosen strategy is simple_byte
  8306  01FD  0871               	movf	??_GetNavData+1,w
  8307  01FE  3A00               	xorlw	0	; case 0
  8308  01FF  1903               	skipnz
  8309  0200  2A02               	goto	l3278
  8310  0201  29F8               	goto	l3118
  8311  0202                     l3278:	
  8312                           
  8313                           ; Switch size 1, requested type "simple"
  8314                           ; Number of cases is 2, Range of values is 10 to 44
  8315                           ; switch strategies available:
  8316                           ; Name         Instructions Cycles
  8317                           ; simple_byte            7     4 (average)
  8318                           ; direct_byte           79     9 (fixed)
  8319                           ; jumptable            263     9 (fixed)
  8320                           ;	Chosen strategy is simple_byte
  8321  0202  0870               	movf	??_GetNavData,w
  8322  0203  3A0A               	xorlw	10	; case 10
  8323  0204  1903               	skipnz
  8324  0205  29E5               	goto	l3116
  8325  0206  3A26               	xorlw	38	; case 44
  8326  0207  1903               	skipnz
  8327  0208  29DE               	goto	l3112
  8328  0209  29F8               	goto	l3118
  8329  020A                     l3124:	
  8330                           
  8331                           ;main.c: 466:             if (!skip)
  8332  020A  0828               	movf	GetNavData@skip,w
  8333  020B  1903               	btfsc	3,2
  8334  020C  2A5F               	goto	l3158
  8335  020D  29AB               	goto	l3162
  8336  020E                     l3128:	
  8337                           
  8338                           ;main.c: 472:                     gps_time[dataIndex] = byte;
  8339  020E  0830               	movf	GetNavData@byte,w
  8340  020F  00F0               	movwf	??_GetNavData
  8341  0210  082E               	movf	GetNavData@dataIndex,w
  8342  0211  3EB1               	addlw	(low (_gps_time| 0))& (0+255)
  8343  0212  2A5A               	goto	L11
  8344  0213                     l3130:	
  8345                           ;main.c: 473:                     break;
  8346                           
  8347                           
  8348                           ;main.c: 475:                     gps_latitude[dataIndex + 1] = byte;
  8349  0213  0830               	movf	GetNavData@byte,w
  8350  0214  00F0               	movwf	??_GetNavData
  8351  0215  082E               	movf	GetNavData@dataIndex,w
  8352  0216  3E51               	addlw	(low ((_gps_latitude| (0+512)+1)))& (0+255)
  8353  0217  2A41               	goto	L13
  8354  0218                     l3132:	
  8355                           ;main.c: 476:                     break;
  8356                           
  8357                           
  8358                           ;main.c: 479:                     gps_latitude[0] = byte == 'N' ? '+' : '-';
  8359  0218  304E               	movlw	78
  8360  0219  0630               	xorwf	GetNavData@byte,w
  8361  021A  1903               	btfsc	3,2
  8362  021B  2A1E               	goto	l3136
  8363  021C  302D               	movlw	45
  8364  021D  2A1F               	goto	L4
  8365  021E                     l3136:	
  8366  021E  302B               	movlw	43
  8367  021F                     L4:	
  8368  021F  00A4               	movwf	_GetNavData$447
  8369  0220  3000               	movlw	0
  8370  0221  00A5               	movwf	_GetNavData$447+1
  8371  0222  0824               	movf	_GetNavData$447,w
  8372  0223  00F0               	movwf	??_GetNavData
  8373  0224  0870               	movf	??_GetNavData,w
  8374  0225  0024               	movlb	4	; select bank4
  8375  0226  00D0               	movwf	_gps_latitude^(0+512)
  8376                           
  8377                           ;main.c: 480:                     break;
  8378  0227  2A84               	goto	l3160
  8379  0228                     l3138:	
  8380                           
  8381                           ;main.c: 482:                     gps_longitude[dataIndex + 1] = byte;
  8382  0228  0830               	movf	GetNavData@byte,w
  8383  0229  00F0               	movwf	??_GetNavData
  8384  022A  082E               	movf	GetNavData@dataIndex,w
  8385  022B  3E41               	addlw	(low ((_gps_longitude| (0+512)+1)))& (0+255)
  8386  022C  2A41               	goto	L13
  8387  022D                     l3140:	
  8388                           ;main.c: 483:                     break;
  8389                           
  8390                           
  8391                           ;main.c: 486:                     gps_longitude[0] = byte == 'E' ? '+' : '-';
  8392  022D  3045               	movlw	69
  8393  022E  0630               	xorwf	GetNavData@byte,w
  8394  022F  1903               	btfsc	3,2
  8395  0230  2A33               	goto	l3144
  8396  0231  302D               	movlw	45
  8397  0232  2A34               	goto	L6
  8398  0233                     l3144:	
  8399  0233  302B               	movlw	43
  8400  0234                     L6:	
  8401  0234  00A6               	movwf	_GetNavData$448
  8402  0235  3000               	movlw	0
  8403  0236  00A7               	movwf	_GetNavData$448+1
  8404  0237  0826               	movf	_GetNavData$448,w
  8405  0238  00F0               	movwf	??_GetNavData
  8406  0239  0870               	movf	??_GetNavData,w
  8407  023A  0024               	movlb	4	; select bank4
  8408  023B  00C0               	movwf	_gps_longitude^(0+512)
  8409                           
  8410                           ;main.c: 487:                     break;
  8411  023C  2A84               	goto	l3160
  8412  023D                     l3146:	
  8413                           
  8414                           ;main.c: 489:                     gps_altitude[dataIndex] = byte;
  8415  023D  0830               	movf	GetNavData@byte,w
  8416  023E  00F0               	movwf	??_GetNavData
  8417  023F  082E               	movf	GetNavData@dataIndex,w
  8418  0240  3E60               	addlw	(low (_gps_altitude| (0+512)))& (0+255)
  8419  0241                     L13:	
  8420  0241  0086               	movwf	6
  8421  0242  3002               	movlw	2	; select bank4/5
  8422  0243  2A4F               	goto	L14
  8423  0244                     l3148:	
  8424                           ;main.c: 490:                     break;
  8425                           
  8426                           
  8427                           ;main.c: 492:                     gps_nav_status[dataIndex] = byte;
  8428  0244  0830               	movf	GetNavData@byte,w
  8429  0245  00F0               	movwf	??_GetNavData
  8430  0246  082E               	movf	GetNavData@dataIndex,w
  8431  0247  3EA0               	addlw	(low (_gps_nav_status| 0))& (0+255)
  8432  0248  2A5A               	goto	L11
  8433  0249                     l3150:	
  8434                           ;main.c: 493:                     break;
  8435                           
  8436                           
  8437                           ;main.c: 495:                     gps_speed_over_ground[dataIndex] = byte;
  8438  0249  0830               	movf	GetNavData@byte,w
  8439  024A  00F0               	movwf	??_GetNavData
  8440  024B  082E               	movf	GetNavData@dataIndex,w
  8441  024C  3EE8               	addlw	(low (_gps_speed_over_ground| (0+256)))& (0+255)
  8442  024D  0086               	movwf	6
  8443  024E  3001               	movlw	1	; select bank3/4
  8444  024F                     L14:	
  8445  024F  0087               	movwf	7
  8446  0250  2A5C               	goto	L10
  8447  0251                     l3152:	
  8448                           ;main.c: 496:                     break;
  8449                           
  8450                           
  8451                           ;main.c: 498:                     gps_course_over_ground[dataIndex] = byte;
  8452  0251  0830               	movf	GetNavData@byte,w
  8453  0252  00F0               	movwf	??_GetNavData
  8454  0253  082E               	movf	GetNavData@dataIndex,w
  8455  0254  3EC3               	addlw	(low (_gps_course_over_ground| 0))& (0+255)
  8456  0255  2A5A               	goto	L11
  8457  0256                     l3154:	
  8458                           ;main.c: 499:                     break;
  8459                           
  8460                           
  8461                           ;main.c: 501:                     gps_vertical_velocity[dataIndex] = byte;
  8462  0256  0830               	movf	GetNavData@byte,w
  8463  0257  00F0               	movwf	??_GetNavData
  8464  0258  082E               	movf	GetNavData@dataIndex,w
  8465  0259  3EBB               	addlw	(low (_gps_vertical_velocity| 0))& (0+255)
  8466  025A                     L11:	
  8467  025A  0086               	movwf	6
  8468  025B  0187               	clrf	7
  8469  025C                     L10:	
  8470  025C  0870               	movf	??_GetNavData,w
  8471  025D  0081               	movwf	1
  8472                           
  8473                           ;main.c: 502:                     break;
  8474  025E  2A84               	goto	l3160
  8475  025F                     l3158:	
  8476                           
  8477                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8478                           ; Switch size 1, requested type "simple"
  8479                           ; Number of cases is 1, Range of values is 0 to 0
  8480                           ; switch strategies available:
  8481                           ; Name         Instructions Cycles
  8482                           ; simple_byte            4     3 (average)
  8483                           ; direct_byte            8     6 (fixed)
  8484                           ; jumptable            260     6 (fixed)
  8485                           ;	Chosen strategy is simple_byte
  8486  025F  082A               	movf	GetNavData@dataFieldType+1,w
  8487  0260  3A00               	xorlw	0	; case 0
  8488  0261  1903               	skipnz
  8489  0262  2A64               	goto	l3280
  8490  0263  2A84               	goto	l3160
  8491  0264                     l3280:	
  8492                           
  8493                           ; Switch size 1, requested type "simple"
  8494                           ; Number of cases is 10, Range of values is 2 to 13
  8495                           ; switch strategies available:
  8496                           ; Name         Instructions Cycles
  8497                           ; simple_byte           31    16 (average)
  8498                           ; direct_byte           33     9 (fixed)
  8499                           ; jumptable            263     9 (fixed)
  8500                           ;	Chosen strategy is simple_byte
  8501  0264  0829               	movf	GetNavData@dataFieldType,w
  8502  0265  3A02               	xorlw	2	; case 2
  8503  0266  1903               	skipnz
  8504  0267  2A0E               	goto	l3128
  8505  0268  3A01               	xorlw	1	; case 3
  8506  0269  1903               	skipnz
  8507  026A  2A13               	goto	l3130
  8508  026B  3A07               	xorlw	7	; case 4
  8509  026C  1903               	skipnz
  8510  026D  2A18               	goto	l3132
  8511  026E  3A01               	xorlw	1	; case 5
  8512  026F  1903               	skipnz
  8513  0270  2A28               	goto	l3138
  8514  0271  3A03               	xorlw	3	; case 6
  8515  0272  1903               	skipnz
  8516  0273  2A2D               	goto	l3140
  8517  0274  3A01               	xorlw	1	; case 7
  8518  0275  1903               	skipnz
  8519  0276  2A3D               	goto	l3146
  8520  0277  3A0F               	xorlw	15	; case 8
  8521  0278  1903               	skipnz
  8522  0279  2A44               	goto	l3148
  8523  027A  3A03               	xorlw	3	; case 11
  8524  027B  1903               	skipnz
  8525  027C  2A49               	goto	l3150
  8526  027D  3A07               	xorlw	7	; case 12
  8527  027E  1903               	skipnz
  8528  027F  2A51               	goto	l3152
  8529  0280  3A01               	xorlw	1	; case 13
  8530  0281  1903               	skipnz
  8531  0282  2A56               	goto	l3154
  8532  0283  2A84               	goto	l3160
  8533  0284                     l3160:	
  8534                           
  8535                           ;main.c: 506:                 dataIndex++;
  8536  0284  3001               	movlw	1
  8537  0285  0020               	movlb	0	; select bank0
  8538  0286  07AE               	addwf	GetNavData@dataIndex,f
  8539  0287  3000               	movlw	0
  8540  0288  3DAF               	addwfc	GetNavData@dataIndex+1,f
  8541  0289  29AB               	goto	l3162
  8542  028A                     l3164:	
  8543                           
  8544                           ;main.c: 513:     if (!success)
  8545  028A  0020               	movlb	0	; select bank0
  8546  028B  082D               	movf	GetNavData@success,w
  8547  028C  1D03               	btfss	3,2
  8548  028D  2ABA               	goto	l303
  8549                           
  8550                           ;main.c: 514:     {;main.c: 516:         for (int i = 0; i < 4; i++)
  8551  028E  01AB               	clrf	GetNavData@i
  8552  028F  01AC               	clrf	GetNavData@i+1
  8553  0290                     l3172:	
  8554                           
  8555                           ;main.c: 517:         {;main.c: 518:             _delay((unsigned long)((250)*(4000000/4
      +                          000.0)));
  8556  0290  3002               	movlw	2
  8557  0291  00F1               	movwf	??_GetNavData+1
  8558  0292  3045               	movlw	69
  8559  0293  00F0               	movwf	??_GetNavData
  8560  0294  30AA               	movlw	170
  8561  0295                     u3017:	
  8562  0295  0B89               	decfsz	9,f
  8563  0296  2A95               	goto	u3017
  8564  0297  0BF0               	decfsz	??_GetNavData,f
  8565  0298  2A95               	goto	u3017
  8566  0299  0BF1               	decfsz	??_GetNavData+1,f
  8567  029A  2A95               	goto	u3017
  8568  029B  0022               	movlb	2	; select bank2
  8569  029C  128E               	bcf	14,5	;volatile
  8570                           
  8571                           ;main.c: 520:             _delay((unsigned long)((250)*(4000000/4000.0)));
  8572  029D  3002               	movlw	2
  8573  029E  00F1               	movwf	??_GetNavData+1
  8574  029F  3045               	movlw	69
  8575  02A0  00F0               	movwf	??_GetNavData
  8576  02A1  30AA               	movlw	170
  8577  02A2                     u3027:	
  8578  02A2  0B89               	decfsz	9,f
  8579  02A3  2AA2               	goto	u3027
  8580  02A4  0BF0               	decfsz	??_GetNavData,f
  8581  02A5  2AA2               	goto	u3027
  8582  02A6  0BF1               	decfsz	??_GetNavData+1,f
  8583  02A7  2AA2               	goto	u3027
  8584  02A8  0022               	movlb	2	; select bank2
  8585  02A9  168E               	bsf	14,5	;volatile
  8586                           
  8587                           ;main.c: 522:         }
  8588  02AA  3001               	movlw	1
  8589  02AB  0020               	movlb	0	; select bank0
  8590  02AC  07AB               	addwf	GetNavData@i,f
  8591  02AD  3000               	movlw	0
  8592  02AE  3DAC               	addwfc	GetNavData@i+1,f
  8593  02AF  082C               	movf	GetNavData@i+1,w
  8594  02B0  3A80               	xorlw	128
  8595  02B1  00F0               	movwf	??_GetNavData
  8596  02B2  3080               	movlw	128
  8597  02B3  0270               	subwf	??_GetNavData,w
  8598  02B4  1D03               	skipz
  8599  02B5  2AB8               	goto	u2955
  8600  02B6  3004               	movlw	4
  8601  02B7  022B               	subwf	GetNavData@i,w
  8602  02B8                     u2955:	
  8603  02B8  1C03               	skipc
  8604  02B9  2A90               	goto	l3172
  8605  02BA                     l303:	
  8606                           ;main.c: 524:     do { LATCbits.LATC5 = 0; } while(0);
  8607                           
  8608  02BA  0022               	movlb	2	; select bank2
  8609  02BB  128E               	bcf	14,5	;volatile
  8610  02BC  0008               	return
  8611  02BD                     __end_of_GetNavData:	
  8612                           
  8613                           	psect	text32
  8614  0CBE                     __ptext32:	
  8615 ;; *************** function _EUSART_Read *****************
  8616 ;; Defined at:
  8617 ;;		line 93 in file "mcc_generated_files/eusart.c"
  8618 ;; Parameters:    Size  Location     Type
  8619 ;;		None
  8620 ;; Auto vars:     Size  Location     Type
  8621 ;;		None
  8622 ;; Return value:  Size  Location     Type
  8623 ;;                  1    wreg      unsigned char 
  8624 ;; Registers used:
  8625 ;;		wreg
  8626 ;; Tracked objects:
  8627 ;;		On entry : 0/0
  8628 ;;		On exit  : 0/0
  8629 ;;		Unchanged: 0/0
  8630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8634 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8635 ;;Total ram usage:        0 bytes
  8636 ;; Hardware stack levels used:    1
  8637 ;; Hardware stack levels required when called:    3
  8638 ;; This function calls:
  8639 ;;		Nothing
  8640 ;; This function is called by:
  8641 ;;		_GPS_HasAcknowledged
  8642 ;;		_GetNavData
  8643 ;;		_getch
  8644 ;; This function uses a non-reentrant model
  8645 ;;
  8646                           
  8647                           
  8648                           ;psect for function _EUSART_Read
  8649  0CBE                     _EUSART_Read:	
  8650  0CBE                     l105:	
  8651                           ;mcc_generated_files/eusart.c: 96:     {;mcc_generated_files/eusart.c: 97:     }
  8652                           
  8653                           ;incstack = 0
  8654                           ; Regs used in _EUSART_Read: [wreg]
  8655                           
  8656                           
  8657                           ;mcc_generated_files/eusart.c: 95:     while(!PIR1bits.RCIF)
  8658  0CBE  0020               	movlb	0	; select bank0
  8659  0CBF  1E90               	btfss	16,5	;volatile
  8660  0CC0  2CBE               	goto	l105
  8661                           
  8662                           ;mcc_generated_files/eusart.c: 100:     if(1 == RC1STAbits.OERR)
  8663  0CC1  0023               	movlb	3	; select bank3
  8664  0CC2  1C9D               	btfss	29,1	;volatile
  8665  0CC3  2CC6               	goto	l2848
  8666                           
  8667                           ;mcc_generated_files/eusart.c: 101:     {;mcc_generated_files/eusart.c: 104:         RC1
      +                          STAbits.CREN = 0;
  8668  0CC4  121D               	bcf	29,4	;volatile
  8669                           
  8670                           ;mcc_generated_files/eusart.c: 105:         RC1STAbits.CREN = 1;
  8671  0CC5  161D               	bsf	29,4	;volatile
  8672  0CC6                     l2848:	
  8673                           
  8674                           ;mcc_generated_files/eusart.c: 108:     return RC1REG;
  8675  0CC6  0819               	movf	25,w	;volatile
  8676  0CC7  0008               	return
  8677  0CC8                     __end_of_EUSART_Read:	
  8678                           
  8679                           	psect	text33
  8680  0F0C                     __ptext33:	
  8681 ;; *************** function _AppendCRC *****************
  8682 ;; Defined at:
  8683 ;;		line 200 in file "main.c"
  8684 ;; Parameters:    Size  Location     Type
  8685 ;;  data            1    wreg     PTR unsigned char 
  8686 ;;		 -> main@message_end(73), main@message_start(70), NULL(0), 
  8687 ;;  crc             2    9[BANK0 ] unsigned short 
  8688 ;; Auto vars:     Size  Location     Type
  8689 ;;  data            1   13[BANK0 ] PTR unsigned char 
  8690 ;;		 -> main@message_end(73), main@message_start(70), NULL(0), 
  8691 ;;  len             2   11[BANK0 ] int 
  8692 ;; Return value:  Size  Location     Type
  8693 ;;                  1    wreg      void 
  8694 ;; Registers used:
  8695 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8696 ;; Tracked objects:
  8697 ;;		On entry : 0/0
  8698 ;;		On exit  : 0/0
  8699 ;;		Unchanged: 0/0
  8700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8701 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8702 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8703 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8704 ;;      Totals:         2       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8705 ;;Total ram usage:        7 bytes
  8706 ;; Hardware stack levels used:    1
  8707 ;; Hardware stack levels required when called:    4
  8708 ;; This function calls:
  8709 ;;		_strlen
  8710 ;; This function is called by:
  8711 ;;		_main
  8712 ;; This function uses a non-reentrant model
  8713 ;;
  8714                           
  8715                           
  8716                           ;psect for function _AppendCRC
  8717  0F0C                     _AppendCRC:	
  8718                           
  8719                           ;incstack = 0
  8720                           ; Regs used in _AppendCRC: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8721                           ;AppendCRC@data stored from wreg
  8722  0F0C  0020               	movlb	0	; select bank0
  8723  0F0D  00AD               	movwf	AppendCRC@data
  8724                           
  8725                           ;main.c: 200: void AppendCRC(char* data, unsigned short crc);main.c: 201: {;main.c: 202:
      +                            int len = strlen(data);
  8726  0F0E  082D               	movf	AppendCRC@data,w
  8727  0F0F  00F0               	movwf	strlen@s
  8728  0F10  39FF               	andlw	255
  8729  0F11  1D03               	skipz
  8730  0F12  3001               	movlw	1
  8731  0F13  00F1               	movwf	strlen@s+1
  8732  0F14  318D  2528  318F   	fcall	_strlen
  8733  0F17  0871               	movf	?_strlen+1,w
  8734  0F18  0020               	movlb	0	; select bank0
  8735  0F19  00AC               	movwf	AppendCRC@len+1
  8736  0F1A  0870               	movf	?_strlen,w
  8737  0F1B  00AB               	movwf	AppendCRC@len
  8738                           
  8739                           ;main.c: 203:  if (len >= 70 - 1)
  8740  0F1C  082C               	movf	AppendCRC@len+1,w
  8741  0F1D  3A80               	xorlw	128
  8742  0F1E  00FC               	movwf	??_AppendCRC
  8743  0F1F  3080               	movlw	128
  8744  0F20  027C               	subwf	??_AppendCRC,w
  8745  0F21  1D03               	skipz
  8746  0F22  2F25               	goto	u2845
  8747  0F23  3045               	movlw	69
  8748  0F24  022B               	subwf	AppendCRC@len,w
  8749  0F25                     u2845:	
  8750  0F25  1C03               	skipc
  8751  0F26  2F2C               	goto	l3058
  8752                           
  8753                           ;main.c: 204:  {;main.c: 206:   len = 70 - 2;
  8754  0F27  3044               	movlw	68
  8755  0F28  0020               	movlb	0	; select bank0
  8756  0F29  00AB               	movwf	AppendCRC@len
  8757  0F2A  3000               	movlw	0
  8758  0F2B  00AC               	movwf	AppendCRC@len+1
  8759  0F2C                     l3058:	
  8760                           
  8761                           ;main.c: 208:  data[len] = (char)(crc >> 8);
  8762  0F2C  0020               	movlb	0	; select bank0
  8763  0F2D  082A               	movf	AppendCRC@crc+1,w
  8764  0F2E  00FC               	movwf	??_AppendCRC
  8765  0F2F  082B               	movf	AppendCRC@len,w
  8766  0F30  072D               	addwf	AppendCRC@data,w
  8767  0F31  00FD               	movwf	??_AppendCRC+1
  8768  0F32  087D               	movf	??_AppendCRC+1,w
  8769  0F33  0086               	movwf	6
  8770  0F34  3001               	movlw	1	; select bank2/3
  8771  0F35  0087               	movwf	7
  8772  0F36  087C               	movf	??_AppendCRC,w
  8773  0F37  0081               	movwf	1
  8774                           
  8775                           ;main.c: 209:  data[len + 1] = (char)(crc);
  8776  0F38  0829               	movf	AppendCRC@crc,w
  8777  0F39  00FC               	movwf	??_AppendCRC
  8778  0F3A  082B               	movf	AppendCRC@len,w
  8779  0F3B  072D               	addwf	AppendCRC@data,w
  8780  0F3C  00FD               	movwf	??_AppendCRC+1
  8781  0F3D  0A7D               	incf	??_AppendCRC+1,w
  8782  0F3E  0086               	movwf	6
  8783  0F3F  3001               	movlw	1	; select bank2/3
  8784  0F40  0087               	movwf	7
  8785  0F41  087C               	movf	??_AppendCRC,w
  8786  0F42  0081               	movwf	1
  8787                           
  8788                           ;main.c: 210:  data[len + 2] = '\n';
  8789  0F43  300A               	movlw	10
  8790  0F44  00FC               	movwf	??_AppendCRC
  8791  0F45  082B               	movf	AppendCRC@len,w
  8792  0F46  072D               	addwf	AppendCRC@data,w
  8793  0F47  00FD               	movwf	??_AppendCRC+1
  8794  0F48  087D               	movf	??_AppendCRC+1,w
  8795  0F49  3E02               	addlw	2
  8796  0F4A  0086               	movwf	6
  8797  0F4B  3001               	movlw	1	; select bank2/3
  8798  0F4C  0087               	movwf	7
  8799  0F4D  087C               	movf	??_AppendCRC,w
  8800  0F4E  0081               	movwf	1
  8801                           
  8802                           ;main.c: 211:  data[len + 3] = '\0';
  8803  0F4F  082B               	movf	AppendCRC@len,w
  8804  0F50  072D               	addwf	AppendCRC@data,w
  8805  0F51  00FC               	movwf	??_AppendCRC
  8806  0F52  087C               	movf	??_AppendCRC,w
  8807  0F53  3E03               	addlw	3
  8808  0F54  0086               	movwf	6
  8809  0F55  3001               	movlw	1	; select bank2/3
  8810  0F56  0087               	movwf	7
  8811  0F57  0181               	clrf	1
  8812  0F58  0008               	return
  8813  0F59                     __end_of_AppendCRC:	
  8814                           
  8815                           	psect	text34
  8816  0D28                     __ptext34:	
  8817 ;; *************** function _strlen *****************
  8818 ;; Defined at:
  8819 ;;		line 12 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\strlen.c"
  8820 ;; Parameters:    Size  Location     Type
  8821 ;;  s               2    0[COMMON] PTR const unsigned char 
  8822 ;;		 -> ?_printf(2), ?_sprintf(2), stoa@nuls(7), dbuf(32), 
  8823 ;;		 -> main@message_end(73), main@message_start(70), NULL(0), gps_vertical_velocity(8), 
  8824 ;;		 -> gps_course_over_ground(8), gps_speed_over_ground(8), gps_altitude(12), gps_longitude(16), 
  8825 ;;		 -> gps_latitude(16), gps_time(10), 
  8826 ;; Auto vars:     Size  Location     Type
  8827 ;;  a               2    2[COMMON] PTR const unsigned char 
  8828 ;;		 -> ?_printf(2), ?_sprintf(2), stoa@nuls(7), dbuf(32), 
  8829 ;;		 -> main@message_end(73), main@message_start(70), NULL(0), gps_vertical_velocity(8), 
  8830 ;;		 -> gps_course_over_ground(8), gps_speed_over_ground(8), gps_altitude(12), gps_longitude(16), 
  8831 ;;		 -> gps_latitude(16), gps_time(10), 
  8832 ;; Return value:  Size  Location     Type
  8833 ;;                  2    0[COMMON] unsigned int 
  8834 ;; Registers used:
  8835 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8836 ;; Tracked objects:
  8837 ;;		On entry : 0/0
  8838 ;;		On exit  : 0/0
  8839 ;;		Unchanged: 0/0
  8840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8841 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8842 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8844 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8845 ;;Total ram usage:        4 bytes
  8846 ;; Hardware stack levels used:    1
  8847 ;; Hardware stack levels required when called:    3
  8848 ;; This function calls:
  8849 ;;		Nothing
  8850 ;; This function is called by:
  8851 ;;		_crc16
  8852 ;;		_TransmitString
  8853 ;;		_AppendCRC
  8854 ;;		_pad
  8855 ;;		_stoa
  8856 ;; This function uses a non-reentrant model
  8857 ;;
  8858                           
  8859                           
  8860                           ;psect for function _strlen
  8861  0D28                     _strlen:	
  8862                           
  8863                           ;incstack = 0
  8864                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  8865  0D28  0871               	movf	strlen@s+1,w
  8866  0D29  00F3               	movwf	strlen@a+1
  8867  0D2A  0870               	movf	strlen@s,w
  8868  0D2B  00F2               	movwf	strlen@a
  8869  0D2C                     l2570:	
  8870  0D2C  0870               	movf	strlen@s,w
  8871  0D2D  0086               	movwf	6
  8872  0D2E  0871               	movf	strlen@s+1,w
  8873  0D2F  0087               	movwf	7
  8874  0D30  0801               	movf	1,w
  8875  0D31  1903               	btfsc	3,2
  8876  0D32  2D38               	goto	l2572
  8877  0D33  3001               	movlw	1
  8878  0D34  07F0               	addwf	strlen@s,f
  8879  0D35  3000               	movlw	0
  8880  0D36  3DF1               	addwfc	strlen@s+1,f
  8881  0D37  2D2C               	goto	l2570
  8882  0D38                     l2572:	
  8883  0D38  0872               	movf	strlen@a,w
  8884  0D39  0270               	subwf	strlen@s,w
  8885  0D3A  00F0               	movwf	?_strlen
  8886  0D3B  0873               	movf	strlen@a+1,w
  8887  0D3C  3B71               	subwfb	strlen@s+1,w
  8888  0D3D  00F1               	movwf	?_strlen+1
  8889  0D3E  0008               	return
  8890  0D3F                     __end_of_strlen:	
  8891                           
  8892                           	psect	intentry
  8893  0004                     __pintentry:	
  8894 ;; *************** function _INTERRUPT_InterruptManager *****************
  8895 ;; Defined at:
  8896 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  8897 ;; Parameters:    Size  Location     Type
  8898 ;;		None
  8899 ;; Auto vars:     Size  Location     Type
  8900 ;;		None
  8901 ;; Return value:  Size  Location     Type
  8902 ;;                  1    wreg      void 
  8903 ;; Registers used:
  8904 ;;		wreg, status,2, status,0, pclath, cstack
  8905 ;; Tracked objects:
  8906 ;;		On entry : 0/0
  8907 ;;		On exit  : 0/0
  8908 ;;		Unchanged: 0/0
  8909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8913 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8914 ;;Total ram usage:        0 bytes
  8915 ;; Hardware stack levels used:    1
  8916 ;; Hardware stack levels required when called:    2
  8917 ;; This function calls:
  8918 ;;		_TMR0_ISR
  8919 ;; This function is called by:
  8920 ;;		Interrupt level 1
  8921 ;; This function uses a non-reentrant model
  8922 ;;
  8923                           
  8924  0004                     _INTERRUPT_InterruptManager:	
  8925                           
  8926                           ;incstack = 0
  8927  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  8928                           
  8929                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  8930  0005  3180               	pagesel	$
  8931                           
  8932                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
  8933  0006  1A8B               	btfsc	11,5	;volatile
  8934  0007  1D0B               	btfss	11,2	;volatile
  8935  0008  280B               	goto	i1l132
  8936                           
  8937                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
  8938  0009  318C  24DF         	fcall	_TMR0_ISR
  8939  000B                     i1l132:	
  8940                           ;mcc_generated_files/interrupt_manager.c: 58:     }
  8941                           
  8942  000B  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  8943  000C  0009               	retfie
  8944  000D                     __end_of_INTERRUPT_InterruptManager:	
  8945                           
  8946                           	psect	text36
  8947  0CDF                     __ptext36:	
  8948 ;; *************** function _TMR0_ISR *****************
  8949 ;; Defined at:
  8950 ;;		line 108 in file "mcc_generated_files/tmr0.c"
  8951 ;; Parameters:    Size  Location     Type
  8952 ;;		None
  8953 ;; Auto vars:     Size  Location     Type
  8954 ;;		None
  8955 ;; Return value:  Size  Location     Type
  8956 ;;                  1    wreg      void 
  8957 ;; Registers used:
  8958 ;;		wreg, status,2, status,0, pclath, cstack
  8959 ;; Tracked objects:
  8960 ;;		On entry : 0/0
  8961 ;;		On exit  : 0/0
  8962 ;;		Unchanged: 0/0
  8963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8967 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8968 ;;Total ram usage:        0 bytes
  8969 ;; Hardware stack levels used:    1
  8970 ;; Hardware stack levels required when called:    1
  8971 ;; This function calls:
  8972 ;;		Absolute function
  8973 ;;		_TMR0_DefaultInterruptHandler
  8974 ;;		_TimerISR
  8975 ;; This function is called by:
  8976 ;;		_INTERRUPT_InterruptManager
  8977 ;; This function uses a non-reentrant model
  8978 ;;
  8979                           
  8980                           
  8981                           ;psect for function _TMR0_ISR
  8982  0CDF                     _TMR0_ISR:	
  8983                           
  8984                           ;mcc_generated_files/tmr0.c: 112:     INTCONbits.TMR0IF = 0;
  8985                           
  8986                           ;incstack = 0
  8987                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
  8988  0CDF  110B               	bcf	11,2	;volatile
  8989                           
  8990                           ;mcc_generated_files/tmr0.c: 114:     TMR0 = timer0ReloadVal;
  8991  0CE0  0021               	movlb	1	; select bank1
  8992  0CE1  086E               	movf	_timer0ReloadVal^(0+128),w	;volatile
  8993  0CE2  0020               	movlb	0	; select bank0
  8994  0CE3  0095               	movwf	21	;volatile
  8995                           
  8996                           ;mcc_generated_files/tmr0.c: 116:     if(TMR0_InterruptHandler)
  8997  0CE4  0021               	movlb	1	; select bank1
  8998  0CE5  086C               	movf	_TMR0_InterruptHandler^(0+128),w
  8999  0CE6  046D               	iorwf	(_TMR0_InterruptHandler+1)^(0+128),w
  9000  0CE7  1903               	btfsc	3,2
  9001  0CE8  0008               	return
  9002                           
  9003                           ;mcc_generated_files/tmr0.c: 117:     {;mcc_generated_files/tmr0.c: 118:         TMR0_In
      +                          terruptHandler();
  9004  0CE9  086D               	movf	(_TMR0_InterruptHandler+1)^(0+128),w
  9005  0CEA  008A               	movwf	10
  9006  0CEB  086C               	movf	_TMR0_InterruptHandler^(0+128),w
  9007  0CEC  000A               	callw
  9008  0CED  318C               	pagesel	$
  9009  0CEE  0008               	return
  9010  0CEF                     __end_of_TMR0_ISR:	
  9011                           
  9012                           	psect	text37
  9013  0003                     __ptext37:	
  9014 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  9015 ;; Defined at:
  9016 ;;		line 129 in file "mcc_generated_files/tmr0.c"
  9017 ;; Parameters:    Size  Location     Type
  9018 ;;		None
  9019 ;; Auto vars:     Size  Location     Type
  9020 ;;		None
  9021 ;; Return value:  Size  Location     Type
  9022 ;;                  1    wreg      void 
  9023 ;; Registers used:
  9024 ;;		None
  9025 ;; Tracked objects:
  9026 ;;		On entry : 0/0
  9027 ;;		On exit  : 0/0
  9028 ;;		Unchanged: 0/0
  9029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9033 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9034 ;;Total ram usage:        0 bytes
  9035 ;; Hardware stack levels used:    1
  9036 ;; This function calls:
  9037 ;;		Nothing
  9038 ;; This function is called by:
  9039 ;;		_TMR0_Initialize
  9040 ;;		_TMR0_ISR
  9041 ;; This function uses a non-reentrant model
  9042 ;;
  9043                           
  9044                           
  9045                           ;psect for function _TMR0_DefaultInterruptHandler
  9046  0003                     _TMR0_DefaultInterruptHandler:	
  9047                           
  9048                           ;incstack = 0
  9049                           ; Regs used in _TMR0_DefaultInterruptHandler: []
  9050  0003  0008               	return
  9051  0004                     __end_of_TMR0_DefaultInterruptHandler:	
  9052                           
  9053                           	psect	text38
  9054  0CB4                     __ptext38:	
  9055 ;; *************** function _TimerISR *****************
  9056 ;; Defined at:
  9057 ;;		line 7 in file "main.c"
  9058 ;; Parameters:    Size  Location     Type
  9059 ;;		None
  9060 ;; Auto vars:     Size  Location     Type
  9061 ;;		None
  9062 ;; Return value:  Size  Location     Type
  9063 ;;                  1    wreg      void 
  9064 ;; Registers used:
  9065 ;;		wreg
  9066 ;; Tracked objects:
  9067 ;;		On entry : 0/0
  9068 ;;		On exit  : 0/0
  9069 ;;		Unchanged: 0/0
  9070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9074 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9075 ;;Total ram usage:        0 bytes
  9076 ;; Hardware stack levels used:    1
  9077 ;; This function calls:
  9078 ;;		Nothing
  9079 ;; This function is called by:
  9080 ;;		_main
  9081 ;;		_TMR0_ISR
  9082 ;; This function uses a non-reentrant model
  9083 ;;
  9084                           
  9085                           
  9086                           ;psect for function _TimerISR
  9087  0CB4                     _TimerISR:	
  9088                           
  9089                           ;main.c: 9:     ticks++;
  9090                           
  9091                           ;incstack = 0
  9092                           ; Regs used in _TimerISR: [wreg]
  9093  0CB4  3001               	movlw	1
  9094  0CB5  0021               	movlb	1	; select bank1
  9095  0CB6  07A4               	addwf	_ticks^(0+128),f
  9096  0CB7  3000               	movlw	0
  9097  0CB8  3DA5               	addwfc	(_ticks+1)^(0+128),f
  9098  0CB9  3000               	movlw	0
  9099  0CBA  3DA6               	addwfc	(_ticks+2)^(0+128),f
  9100  0CBB  3000               	movlw	0
  9101  0CBC  3DA7               	addwfc	(_ticks+3)^(0+128),f
  9102  0CBD  0008               	return
  9103  0CBE                     __end_of_TimerISR:	
  9104  007E                     btemp	set	126	;btemp
  9105  007E                     int$flags	set	126
  9106  007E                     wtemp0	set	126


Data Sizes:
    Strings     192
    Constant    6
    Data        51
    BSS         129
    Persistent  35
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80     26      79
    BANK2            80     73      73
    BANK3            80     70      80
    BANK4            80      0      76
    BANK5            80      0      44
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 73
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK1[2]), stoa@nuls(BANK0[7]), dbuf(BANK4[32]), 
		 -> main@message_end(BANK2[73]), main@message_start(BANK3[70]), NULL(NULL[0]), gps_vertical_velocity(BANK1[8]), 
		 -> gps_course_over_ground(BANK1[8]), gps_speed_over_ground(BANK3[8]), gps_altitude(BANK4[12]), gps_longitude(BANK4[16]), 
		 -> gps_latitude(BANK4[16]), gps_time(BANK1[10]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 73
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK1[2]), stoa@nuls(BANK0[7]), dbuf(BANK4[32]), 
		 -> main@message_end(BANK2[73]), main@message_start(BANK3[70]), NULL(NULL[0]), gps_vertical_velocity(BANK1[8]), 
		 -> gps_course_over_ground(BANK1[8]), gps_speed_over_ground(BANK3[8]), gps_altitude(BANK4[12]), gps_longitude(BANK4[16]), 
		 -> gps_latitude(BANK4[16]), gps_time(BANK1[10]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 26
		 -> STR_6(CODE[26]), STR_5(CODE[26]), STR_4(CODE[26]), STR_3(CODE[26]), 
		 -> STR_2(CODE[26]), STR_1(CODE[26]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK1[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 23
		 -> STR_8(CODE[13]), STR_7(CODE[23]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 73
		 -> main@message_end(BANK2[73]), main@message_start(BANK3[70]), NULL(NULL[0]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK1[2]), 

    f.buffer	PTR unsigned char  size(1) Largest target is 73
		 -> main@message_end(BANK2[73]), main@message_start(BANK3[70]), NULL(NULL[0]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK4[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), NULL(NULL[0]), 

    S902_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 73
		 -> main@message_end(BANK2[73]), main@message_start(BANK3[70]), NULL(NULL[0]), 

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 73
		 -> main@message_end(BANK2[73]), main@message_start(BANK3[70]), NULL(NULL[0]), 

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), sprintf@ap(BANK1[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 26
		 -> STR_8(CODE[13]), STR_7(CODE[23]), STR_6(CODE[26]), STR_5(CODE[26]), 
		 -> STR_4(CODE[26]), STR_3(CODE[26]), STR_2(CODE[26]), STR_1(CODE[26]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 26
		 -> STR_8(CODE[13]), STR_7(CODE[23]), STR_6(CODE[26]), STR_5(CODE[26]), 
		 -> STR_4(CODE[26]), STR_3(CODE[26]), STR_2(CODE[26]), STR_1(CODE[26]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 16
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK1[2]), gps_vertical_velocity(BANK1[8]), gps_course_over_ground(BANK1[8]), 
		 -> gps_speed_over_ground(BANK3[8]), gps_altitude(BANK4[12]), gps_longitude(BANK4[16]), gps_latitude(BANK4[16]), 
		 -> gps_time(BANK1[10]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), sprintf@ap(BANK1[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    stoa@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 16
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK1[2]), gps_vertical_velocity(BANK1[8]), gps_course_over_ground(BANK1[8]), 
		 -> gps_speed_over_ground(BANK3[8]), gps_altitude(BANK4[12]), gps_longitude(BANK4[16]), gps_latitude(BANK4[16]), 
		 -> gps_time(BANK1[10]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 16
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK1[2]), stoa@nuls(BANK0[7]), gps_vertical_velocity(BANK1[8]), 
		 -> gps_course_over_ground(BANK1[8]), gps_speed_over_ground(BANK3[8]), gps_altitude(BANK4[12]), gps_longitude(BANK4[16]), 
		 -> gps_latitude(BANK4[16]), gps_time(BANK1[10]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK4[32]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), TimerISR(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR0_DefaultInterruptHandler(), TimerISR(), 

    main@messages	PTR unsigned char [2] size(1) Largest target is 73
		 -> main@message_end(BANK2[73]), main@message_start(BANK3[70]), NULL(NULL[0]), 

    main@F10217	PTR unsigned char [2] size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    GPS_HasAcknowledged@data	PTR unsigned char  size(1) Largest target is 44
		 -> setNavFlightMode(BANK5[44]), 

    GPS_SendUBX@data	PTR unsigned char  size(1) Largest target is 44
		 -> setNavFlightMode(BANK5[44]), 

    GetLengthUBX@data	PTR unsigned char  size(1) Largest target is 44
		 -> setNavFlightMode(BANK5[44]), 

    AppendCRC@data	PTR unsigned char  size(1) Largest target is 73
		 -> main@message_end(BANK2[73]), main@message_start(BANK3[70]), NULL(NULL[0]), 

    TransmitString@message	PTR unsigned char  size(1) Largest target is 73
		 -> main@message_end(BANK2[73]), main@message_start(BANK3[70]), NULL(NULL[0]), 

    crc16@data	PTR PTR unsigned char  size(1) Largest target is 4
		 -> main@messages(BANK1[2]), 

    crc16@string	PTR unsigned char  size(1) Largest target is 73
		 -> main@message_end(BANK2[73]), main@message_start(BANK3[70]), NULL(NULL[0]), 


Critical Paths under _main in COMMON

    _main->_AppendCRC
    _crc16->_crc_append_byte
    _TransmitString->_TransmitByte
    _TransmitByte->_TransmitBit
    _stoa->_fputc
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART_Write
    _abs->___aomod
    _GPS_SendUBX->_GetLengthUBX
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _AppendCRC->_crc16

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_SetupGPS
    _sprintf->_vfprintf
    _SetupGPS->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->___aodiv
    _dtoa->___aomod
    _pad->_fputs
    _abs->___aomod
    _AppendCRC->_crc16

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               150   150      0   32639
                                             19 BANK1      7     7      0
                                              0 BANK2     73    73      0
                                              0 BANK3     70    70      0
                          _AppendCRC
                         _GetNavData
                  _SYSTEM_Initialize
                           _SetupGPS
           _TMR0_SetInterruptHandler
                     _TransmitString
                              _crc16
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             20    10     10   13290
                                             72 BANK0      1     1      0
                                              0 BANK1     19     9     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _crc16                                               13    11      2    1258
                                              8 COMMON     4     2      2
                                              0 BANK0      9     9      0
                    _crc_append_byte
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _crc_append_byte                                      8     5      3     412
                                              0 COMMON     8     5      3
 ---------------------------------------------------------------------------------
 (1) _TransmitString                                       6     6      0     762
                                              6 COMMON     6     6      0
                       _TransmitByte
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _TransmitByte                                         4     4      0     161
                                              2 COMMON     4     4      0
                        _TransmitBit
 ---------------------------------------------------------------------------------
 (3) _TransmitBit                                          2     2      0      31
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _SetupGPS                                             2     2      0   14588
                                             78 BANK0      2     2      0
                _GPS_HasAcknowledged
                        _GPS_SendUBX
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                               6     4      2   13343
                                             72 BANK0      6     4      2
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     5      3   12716
                                             64 BANK0      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           40    38      2   12072
                                             46 BANK0     18    16      2
                               _dtoa
                              _fputc
                               _stoa
 ---------------------------------------------------------------------------------
 (4) _stoa                                                23    21      2    2785
                                             10 COMMON     2     0      2
                                              0 BANK0     21    21      0
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                30    22      8    6806
                                             16 BANK0     30    22      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    4594
                                              4 BANK0      9     6      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _fputs                                                8     7      1    2031
                                             10 COMMON     4     3      1
                                              0 BANK0      4     4      0
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3    1639
                                              2 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0      62
                                              1 COMMON     1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                              3 COMMON     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             19     3     16     613
                                              0 COMMON     3     3      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             27    11     16     625
                                              0 COMMON    11    11      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (2) _GPS_SendUBX                                          6     6      0     329
                                              4 COMMON     6     6      0
                       _EUSART_Write
                       _GetLengthUBX
 ---------------------------------------------------------------------------------
 (3) _GetLengthUBX                                         4     1      3      98
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (7) _EUSART_Write                                         1     1      0      31
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _GPS_HasAcknowledged                                 22    22      0     916
                                              0 COMMON     4     4      0
                                              0 BANK0     18    18      0
                        _EUSART_Read
                 _EUSART_is_rx_ready
 ---------------------------------------------------------------------------------
 (3) _EUSART_is_rx_ready                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     211
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      1     1      0     211
                                              2 COMMON     1     1      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     211
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GetNavData                                          21    21      0     957
                                              0 COMMON     4     4      0
                                              0 BANK0     17    17      0
                        _EUSART_Read
 ---------------------------------------------------------------------------------
 (3) _EUSART_Read                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _AppendCRC                                            7     5      2     864
                                             12 COMMON     2     2      0
                                              9 BANK0      5     3      2
                              _crc16 (ARG)
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _strlen                                               4     2      2     355
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INTERRUPT_InterruptManager                          0     0      0       0
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (12) _TMR0_ISR                                            0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                           _TimerISR *
 ---------------------------------------------------------------------------------
 (13) _TimerISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AppendCRC
     _crc16 (ARG)
       _crc_append_byte
       _strlen
     _strlen (ARG)
   _GetNavData
     _EUSART_Read
   _SYSTEM_Initialize
     _EUSART_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
   _SetupGPS
     _GPS_HasAcknowledged
       _EUSART_Read
       _EUSART_is_rx_ready
     _GPS_SendUBX
       _EUSART_Write
       _GetLengthUBX
     _printf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART_Write
               _strlen
           _fputc
             _putch
               _EUSART_Write
           _stoa
             _fputc
               _putch
                 _EUSART_Write
             _strlen
   _TMR0_SetInterruptHandler
   _TransmitString
     _TransmitByte
       _TransmitBit
     _strlen
   _crc16
     _crc_append_byte
     _strlen
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _EUSART_Write
             _fputs
               _fputc
                 _putch
                   _EUSART_Write
             _strlen
         _fputc
           _putch
             _EUSART_Write
         _stoa
           _fputc
             _putch
               _EUSART_Write
           _strlen

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _TimerISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     1A      4F       7       98.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50     49      49       9       91.3%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50     46      50      11      100.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      4C      13       95.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0      2C      15       55.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     1BE      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     1BE      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sat Jun 15 18:27:10 2019

                             __CFG_CP$OFF 0000                           GPS_SendUBX@data 0077  
                         _timer0ReloadVal 00EE                               __CFG_LVP$ON 0000  
                                     l112 0CAD                                       l105 0CBE  
                                     l303 02BA                                       l170 0EA3  
                                     l173 0EB7                                       l190 0D5D  
                                     l177 0779                                       l444 0F71  
                                     l452 0088                                       l461 0154  
                                     l453 008F                                       l630 057A  
                                     l447 0F91                                       l617 049E  
                                     l457 00AA                                       l458 00BE  
                                     l484 05CF                                       l493 062A  
                                     _abs 0D3F                                       _pad 0F59  
                            __CFG_BORV$LO 0000                                       wreg 0009  
                            __CFG_IESO$ON 0000                              ?_EUSART_Read 0070  
                            __CFG_ZCD$OFF 0000                                      ?_abs 0073  
                                    l3002 06CA                                      l3112 01DE  
                                    l3130 0213                                      l3122 01FA  
                                    l3050 0E20                                      l3034 0794  
                                    l3140 022D                                      l3132 0218  
                                    l3116 01E5                                      l3124 020A  
                                    l3036 07C6                                      l3150 0249  
                                    l3118 01F8                                      l3038 07CB  
                                    l3152 0251                                      l3144 0233  
                                    l3136 021E                                      l3160 0284  
                                    l3128 020E                                      l3216 06FF  
                                    l3058 0F2C                                      l3154 0256  
                                    l3146 023D                                      l3138 0228  
                                    l3162 01AB                                      l2602 0F9D  
                                    l3172 0290                                      l3148 0244  
                                    l3164 028A                                      l2620 040E  
                                    l2700 00EB                                      l3076 0FAC  
                                    l3236 0758                                      l3158 025F  
                                    l2622 0412                                      l2710 00C6  
                                    l3078 0FCF                                      l3280 0264  
                                    l2632 0429                                      l2616 03E7  
                                    l2560 0EF2                                      l2570 0D2C  
                                    l2642 0471                                      l2634 0438  
                                    l2722 0168                                      l2572 0D38  
                                    l2644 047D                                      l2556 0ECF  
                                    l2732 0180                                      l3278 0202  
                                    l2654 04DA                                      l2582 0D72  
                                    l2718 0160                                      l2822 0389  
                                    l2806 0338                                      l2672 054D  
                                    l2592 0F6F                                      l2728 0173  
                                    l2744 05A8                                      l2816 0368  
                                    l2832 039A                                      l2666 050E  
                                    l2674 0559                                      l2658 0501  
                                    l2690 00A2                                      l2762 05F1  
                                    l2826 038F                                      l2668 051D  
                                    l2588 0F67                                      l2780 063F  
                                    l2772 0601                                      l2764 05FE  
                                    l2932 0EB2                                      l2598 0F73  
                                    l2782 064C                                      l2758 05E0  
                                    l2870 07F7                                      l2854 0D5F  
                                    l2942 0E6F                                      ?_pad 0024  
                                    l2848 0CC6                                      l2696 00B9  
                                    l2776 062E                                      l2980 068B  
                                    l2868 07DA                                      l2990 06A2  
                                    l2958 0D9F                                      l2798 02FE  
                                    l2996 06A9                                      l2988 06A1  
                                    l2998 06C8                                      STR_1 104E  
                                    STR_2 1000                                      STR_3 1082  
                                    STR_4 1034                                      STR_5 1068  
                                    STR_6 101A                                      STR_7 109C  
                                    STR_8 10B3                                      u2105 0F7D  
                                    u2205 045E                                      u2125 0D48  
                                    _LATA 010C                                      _LATB 010D  
                                    u2055 0EF0                                      u3007 0FC7  
                                    _LATC 010E                                      u3017 0295  
                                    u2305 053B                                      u2170 0419  
                                    u3027 02A2                                      u2340 005E  
                                    u2500 0598                                      u2350 005F  
                                    u2425 015E                                      u2445 00DA  
                                    u2455 00E6                                      u2535 05C8  
                                    u2720 0E7A                                      u2730 0E7B  
                                    u2714 0E74                                      u2395 009A  
                                    u2555 05FC                                      u2715 0E73  
                                    u2565 060B                                      u2815 07A4  
                                    u2585 064A                                      u2745 0E8B  
                                    u2825 0783                                      u2755 0DA9  
                                    u2835 0E2A                                      u2845 0F25  
                                    u2695 0EB3                                      u2880 01F2  
                                    u2890 01F3                                      u2955 02B8  
                                    u2885 01EE                                      u2965 076E  
                                    u2977 075C                                      u2987 0D62  
                                    u2997 0D69                                      _TMR0 0015  
                                    _WPUA 020C                                      _WPUB 020D  
                                    _WPUC 020E                              __CFG_WRT$OFF 0000  
                           __CFG_FCMEN$ON 0000                                      abs@a 0073  
                                    _dbuf 0220                         GetNavData@success 002D  
                                    _main 06E4                                      _dtoa 0042  
                    __end_of_GetLengthUBX 0D12                                      _prec 00AC  
                            TransmitBit@b 0071                                      _nout 00A8  
                                    pad@i 0028                                      pad@p 0025  
                                    fsr0h 0005                                      fsr1h 0007  
                                    indf0 0000                                      fsr0l 0004  
                                    indf1 0001                                      fsr1l 0006  
                                    pad@w 002A                                      _stoa 058C  
                                    btemp 007E                             __CFG_BOREN$ON 0000  
                       GPS_SendUBX@length 0075              GPS_HasAcknowledged@startTime 0020  
                                    start 000D                             __CFG_MCLRE$ON 0000  
                              _GetNavData 0193                                     ??_abs 0075  
                                   ??_pad 0027                   __end_of_TMR0_Initialize 0D28  
          ??_TMR0_DefaultInterruptHandler 0070                             ?_EUSART_Write 0070  
          __size_of_OSCILLATOR_Initialize 0007             __end_of_OSCILLATOR_Initialize 0CA5  
                         __end_of___aodiv 04B0                                     ?_main 0070  
                                   ?_dtoa 0030                GPS_HasAcknowledged@ackByte 0024  
                         __end_of___aomod 058C                             __CFG_WDTE$OFF 0000  
                                   ?_stoa 007A                                     i1l132 000B  
                            vfpfcnvrt@fmt 004E                                     _TRISA 008C  
                                   _TRISB 008D                                     _TRISC 008E  
                                   _RXPPS 0E24         __size_of_TMR0_SetInterruptHandler 0006  
               ?_TMR0_SetInterruptHandler 0070                            _GetNavData$447 0024  
                          _GetNavData$448 0026                              main@messages 00E3  
                        __end_of_TMR0_ISR 0CEF                                     _crc16 0771  
                                   _flags 00AE                                     _fputc 0EC6  
                                   _fputs 0D6E                              ?_GPS_SendUBX 0070  
                                   _ticks 00A4                                     pad@fp 002C  
                                   _width 00AA                                     _putch 0C87  
                                   main@i 00E1                                     dtoa@d 0030  
                                   dtoa@i 004C                                     dtoa@n 0044  
                                   dtoa@p 003E                                     dtoa@s 0042  
                                   dtoa@w 0040                         __end_of_BAUD_RATE 10C4  
                                   pclath 000A                       GetNavData@dataIndex 002E  
                 GPS_HasAcknowledged@data 002F                             TransmitByte@i 0074  
                                   stoa@i 002A                                     stoa@l 0033  
                                   stoa@p 0031                                     stoa@s 007A  
                                   stoa@w 002C                                     status 0003  
                                   wtemp0 007E                           __end_of_sprintf 0E10  
                __end_of_MESSAGE_INTERVAL 10C6                           _crc_append_byte 0E95  
                         __initialization 000F                              __end_of_main 0771  
                            __end_of_dtoa 0193                      GPS_HasAcknowledged@i 0031  
                            __end_of_stoa 0652                            ??_EUSART_Write 0070  
                          __CFG_LPBOR$OFF 0000               ?_INTERRUPT_InterruptManager 0070  
                                  ??_main 00DE                                    ??_dtoa 0038  
                                  ??_stoa 0020                        __size_of_AppendCRC 004D  
                          __CFG_PLLEN$OFF 0000                         main@message_start 01A0  
                        __end_of_TimerISR 0CBE                          __end_of_SetupGPS 1000  
                                  ?_crc16 0078                                    ?_fputc 0072  
                                  ?_fputs 007A                                    _ANSELA 018C  
                                  ?_putch 0070                                    _ANSELB 018D  
                                  _ANSELC 018E                __end_of_EUSART_is_rx_ready 0C87  
                                  _BORCON 0116                                    _RC1REG 0199  
                                  _RC1STA 019D                                    _RB7PPS 0E9F  
                                  _ODCONA 028C                                    _ODCONB 028D  
                                  _ODCONC 028E                                    _OSCCON 0099  
                                  u214lld 03E5                                    u225lld 04D8  
                                  _SPBRGH 019C                                    _SPBRGL 019B  
                                  _TX1REG 019A                                    _TX1STA 019E  
                          __CFG_PWRTE$OFF 0000                              vfprintf@cfmt 0066  
                             ?_GetNavData 0070                                 ??___aodiv 0070  
                               ??___aomod 0070                                    crc16@c 0021  
                                  crc16@i 0023                            __CFG_STVREN$ON 0000  
                        ?_TMR0_Initialize 0070                       GetNavData@startTime 0020  
                                  _printf 0CEF                                    pad@buf 0024  
                                  main@id 00DF                                    dtoa@fp 003B  
                                  _strlen 0D28                                    fputc@c 0072  
                                  fputs@c 0020                                    fputs@i 0021  
                                  fputs@s 0023                          ??_TransmitString 0076  
                                  stoa@cp 002F                                    stoa@fp 002E  
                        __end_of_vfprintf 0800  TMR0_SetInterruptHandler@InterruptHandler 0070  
                   __size_of_GetLengthUBX 0012                        __end_of_DELAY_MULT 10C2  
                               ??_sprintf 0068                   __end_of_crc_append_byte 0EC6  
                    __size_of_EUSART_Read 000A                         _SYSTEM_Initialize 0CD3  
                 __end_of__initialization 003E                        ?_SYSTEM_Initialize 0070  
                       __end_of_AppendCRC 0F59                            __pcstackCOMMON 0070  
                            __pidataBANK1 0CA5                              __pidataBANK5 0E3C  
                           __end_of_crc16 07D1                       ??_SYSTEM_Initialize 0073  
                               ?_TMR0_ISR 0070                             __end_of_fputc 0F0C  
                           __end_of_fputs 0D94                             ??_TransmitBit 0070  
                           __end_of_putch 0C8C                              _GetLengthUBX 0D00  
                          _OPTION_REGbits 0095                             _gps_longitude 0240  
                                 ??_crc16 007A                                   ??_fputc 0075  
             __end_of_GPS_HasAcknowledged 06E4                 __end_of_SYSTEM_Initialize 0CDF  
                     __size_of_GetNavData 012A                                   ??_fputs 007B  
                                 ??_putch 0071                                __pbssBANK1 00A0  
                              __pbssBANK3 01E6                                __pbssBANK4 0220  
                    __end_of_EUSART_Write 0CB4                      __size_of_GPS_SendUBX 0027  
                        _setNavFlightMode 02A0                                __pmaintext 06E4  
                               ?_TimerISR 0070                                 ?_SetupGPS 0070  
        __end_of_TMR0_SetInterruptHandler 0C92                                ??_TMR0_ISR 0070  
                         __CFG_PPS1WAY$ON 0000                                __pintentry 0004  
                                 ?_printf 0068                                   ?_strlen 0070  
                         __CFG_WDTCCS$SWC 0000                       __end_of_TransmitBit 0D6E  
                      __size_of_vfpfcnvrt 0100                                   _OSCTUNE 0098  
                                 _SLRCONA 030C                                   _SLRCONB 030D  
                                 _SLRCONC 030E                          ?_crc_append_byte 0070  
                               _BAUD_RATE 10C2                                ??_TimerISR 0070  
                              ??_SetupGPS 006E                                   ___aodiv 03BD  
                                 ___aomod 04B0                          GetLengthUBX@data 0073  
                               ?_vfprintf 0060                                   __ptext1 0DE5  
                                 __ptext2 0771                                   __ptext3 0E95  
                                 __ptext4 0E10                                   __ptext5 0E68  
                                 __ptext6 0D56                                   __ptext7 0FAC  
                                 __ptext8 0CEF                                   __ptext9 07D1  
                         __size_of_printf 0011                           __size_of_strlen 0017  
                   _OSCILLATOR_Initialize 0C9E                              __size_of_abs 0017  
                            __size_of_pad 0053                  ??_PIN_MANAGER_Initialize 0070  
              __size_of_SYSTEM_Initialize 000C                                   _sprintf 0DE5  
                                 clrloop0 0C93                      end_of_initialization 003E  
                                 fputc@fp 0074                                   init_ram 0C98  
                                 fputs@fp 007A                                   initloop 0C99  
                       _EUSART_Initialize 0CC8                       crc_append_byte@data 0072  
                      ?_EUSART_Initialize 0070                              ??_GetNavData 0070  
                       __end_of_vfpfcnvrt 03BD                        _EUSART_is_rx_ready 0C82  
                              main@F10217 01E6                                ??_vfprintf 0063  
                             _TransmitBit 0D56                                   strlen@a 0072  
                                 strlen@s 0070                       ??_EUSART_Initialize 0070  
                _TMR0_SetInterruptHandler 0C8C                       ?_EUSART_is_rx_ready 0070  
                         TransmitString@i 0079                             ?_TransmitByte 0070  
                        __CFG_FOSC$INTOSC 0000                             crc16@segments 0078  
                   __size_of_EUSART_Write 0008                              GPS_SendUBX@i 0078  
                      __end_of_GetNavData 02BD                 __end_of_EUSART_Initialize 0CD3  
                    ??_EUSART_is_rx_ready 0070                            _gps_configured 00B0  
                   TransmitString@message 007B                                 _AppendCRC 0F0C  
                             vfpfcnvrt@ap 004F                               vfpfcnvrt@cp 005D  
                             vfpfcnvrt@fp 005F                               vfpfcnvrt@ll 0055  
                           AppendCRC@data 002D                              _EUSART_Write 0CAC  
                       __size_of_TMR0_ISR 0010                    ?_OSCILLATOR_Initialize 0070  
                          ??_TransmitByte 0072                            __end_of_printf 0D00  
                          __end_of_strlen 0D3F                       start_initialization 000F  
                __size_of_TMR0_Initialize 0016           __size_of_PIN_MANAGER_Initialize 002A  
                             __end_of_abs 0D56                               __end_of_pad 0FAC  
                           ??_EUSART_Read 0070                            _gps_nav_status 00A0  
                             putch@txData 0071                               vfprintf@fmt 0060  
                              ?_AppendCRC 0029                         __size_of_TimerISR 000A  
                             __pdataBANK1 00E5                               __pdataBANK5 02A0  
                       __size_of_SetupGPS 0054                                  ??_printf 006A  
                                ??_strlen 0072                              _gps_altitude 0260  
                             crc16@string 0022                                 ___latbits 0002  
                           __pcstackBANK0 0020                             __pcstackBANK1 00CB  
                           __pcstackBANK2 0120                             __pcstackBANK3 01A0  
                        ___aodiv@dividend 0028                             ??_GPS_SendUBX 0074  
                            _gps_latitude 0250                __size_of_EUSART_Initialize 000B  
                               crc16@data 0020                       __end_of_EUSART_Read 0CC8  
                 __size_of_TransmitString 002C                     _TMR0_InterruptHandler 00EC  
                               __pnvBANK1 00EC              __size_of_GPS_HasAcknowledged 0092  
                  _PIN_MANAGER_Initialize 0DBB                                  ?___aodiv 0020  
                                ?___aomod 0020                          ___aodiv@quotient 0073  
                        crc_append_byte@i 0076              ??_INTERRUPT_InterruptManager 0070  
                       __size_of_vfprintf 002F                                  _BAUD1CON 019F  
                          __size_of_crc16 0060                                  ?_sprintf 00CB  
                          __size_of_fputc 0046                            __size_of_fputs 0026  
                          __size_of_putch 0005                         ??_TMR0_Initialize 0072  
                   _gps_vertical_velocity 00BB                                  _LATAbits 010C  
                                _LATCbits 010E                       __end_of_GPS_SendUBX 0DBB  
                               clear_ram0 0C92                      __end_of_TransmitByte 0E95  
                      crc_append_byte@crc 0070       __size_of_INTERRUPT_InterruptManager 0009  
              ??_TMR0_SetInterruptHandler 0072                                  _PIR1bits 0010  
                   _gps_speed_over_ground 01E8                  __size_of_crc_append_byte 0031  
                    __CFG_WDTCPS$WDTCPS1F 0000                               ??_AppendCRC 007C  
                                _TMR0_ISR 0CDF                              ?_TransmitBit 0070  
                               _vfpfcnvrt 02BD                            GetNavData@byte 0030  
                          GetNavData@skip 0028                      TransmitString@counti 0077  
                             _EUSART_Read 0CBE                              AppendCRC@crc 0029  
                            AppendCRC@len 002B                           main@message_end 0120  
                 GetNavData@dataFieldType 0029                    _gps_course_over_ground 00C3  
                              _DELAY_MULT 10C0                                vfprintf@ap 0062  
                              vfprintf@fp 0065                                  _TimerISR 0CB4  
                                _SetupGPS 0FAC                   ??_OSCILLATOR_Initialize 0070  
                        __size_of___aodiv 00F3                          __size_of___aomod 00DC  
                              ?_vfpfcnvrt 004E                           ___aodiv@divisor 0020  
                         ___aodiv@counter 0071                             ?_GetLengthUBX 0070  
                              sprintf@fmt 00CB                                  crc16@crc 0025  
                                crc16@str 0027                                  _dtoa$592 003C  
                                __ptext10 02BD                                  __ptext11 058C  
                                __ptext20 0D94                                  __ptext12 0042  
                                __ptext21 0D00                                  __ptext13 0F59  
                                __ptext30 0CC8                                  __ptext22 0CAC  
                                __ptext14 0D6E                                  __ptext31 0193  
                                __ptext23 0652                                  __ptext15 0EC6  
                                __ptext32 0CBE                                  __ptext24 0C82  
                                __ptext16 0C87                                  __ptext33 0F0C  
                                __ptext25 0CD3                                  __ptext17 0D3F  
                                __ptext34 0D28                                  __ptext26 0D12  
                                __ptext18 04B0                                  __ptext27 0C8C  
                                __ptext19 03BD                                  __ptext36 0CDF  
                                __ptext28 0DBB                                  __ptext37 0003  
                                __ptext29 0C9E                                  __ptext38 0CB4  
                             _GPS_SendUBX 0D94                               GetNavData@i 002B  
                        __size_of_sprintf 002B               __size_of_EUSART_is_rx_ready 0005  
                          _TransmitString 0E10                             __size_of_main 008D  
                           __size_of_dtoa 0151                                  _gps_time 00B1  
                           __size_of_stoa 00C6      __end_of_TMR0_DefaultInterruptHandler 0004  
   __size_of_TMR0_DefaultInterruptHandler 0001              _TMR0_DefaultInterruptHandler 0003  
                    __CFG_WDTCWS$WDTCWSSW 0000                                _RC1STAbits 019D  
                               stoa@F1139 00E5                                  int$flags 007E  
                                _vfprintf 07D1        __end_of_INTERRUPT_InterruptManager 000D  
              _INTERRUPT_InterruptManager 0004                                 printf@fmt 0068  
                          ??_GetLengthUBX 0073                         ??_crc_append_byte 0073  
                        _MESSAGE_INTERVAL 10C4                          ___aomod@dividend 0028  
                     _GPS_HasAcknowledged 0652                                _INTCONbits 000B  
                          __pstringtext10 109C                            __pstringtext11 10B3  
                          __pstringtext12 0000                    __end_of_TransmitString 0E3C  
                   __size_of_TransmitByte 002D                                  intlevel1 0000  
                               sprintf@ap 00D7                          TransmitByte@byte 0073  
                 ?_PIN_MANAGER_Initialize 0070                         __CFG_CLKOUTEN$OFF 0000  
                    ?_GPS_HasAcknowledged 0070             ?_TMR0_DefaultInterruptHandler 0070  
            GPS_HasAcknowledged@ackByteID 0030              GPS_HasAcknowledged@ackPacket 0025  
                                printf@ap 006D                           ___aomod@divisor 0020  
                             ??_vfpfcnvrt 0050                                  stoa@nuls 0023  
                         ___aomod@counter 0071                             __pstringtext1 10C0  
                           __pstringtext2 10C2                             __pstringtext3 10C4  
                           __pstringtext4 1000                             __pstringtext5 101A  
                           __pstringtext6 1034                             __pstringtext7 104E  
                           __pstringtext8 1068                             __pstringtext9 1082  
                    __size_of_TransmitBit 0018                                _OPTION_REG 0095  
                                sprintf@f 00D9                                  sprintf@s 00D8  
                            _TransmitByte 0E68                           _TMR0_Initialize 0D12  
                              _TX1STAbits 019E                        EUSART_Write@txData 0070  
                            ___aodiv@sign 0072                           ?_TransmitString 0076  
          __end_of_PIN_MANAGER_Initialize 0DE5                     ??_GPS_HasAcknowledged 0070  
                            ___aomod@sign 0072  
