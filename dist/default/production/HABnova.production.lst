

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sat Jun 15 13:43:26 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F1619
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBANK5,global,class=CODE,delta=2
     6                           	psect	stringtext1,global,class=STRCODE,delta=2
     7                           	psect	stringtext2,global,class=STRCODE,delta=2
     8                           	psect	stringtext3,global,class=STRCODE,delta=2
     9                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	stringtext4,global,class=STRCODE,delta=2
    11                           	psect	stringtext5,global,class=STRCODE,delta=2
    12                           	psect	stringtext6,global,class=STRCODE,delta=2
    13                           	psect	stringtext7,global,class=STRCODE,delta=2
    14                           	psect	stringtext8,global,class=STRCODE,delta=2
    15                           	psect	stringtext9,global,class=STRCODE,delta=2
    16                           	psect	stringtext10,global,class=STRCODE,delta=2
    17                           	psect	stringtext11,global,class=STRCODE,delta=2
    18                           	psect	stringtext12,global,class=STRCODE,delta=2
    19                           	psect	cinit,global,class=CODE,merge=1,delta=2
    20                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    21                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    22                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    23                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    24                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    25                           	psect	dataBANK5,global,class=BANK5,space=1,delta=1
    26                           	psect	inittext,global,class=CODE,delta=2
    27                           	psect	clrtext,global,class=CODE,delta=2
    28                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    29                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    30                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    31                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    32                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    33                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    34                           	psect	text1,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text2,local,class=CODE,merge=1,delta=2
    36                           	psect	text3,local,class=CODE,merge=1,delta=2
    37                           	psect	text4,local,class=CODE,merge=1,delta=2
    38                           	psect	text5,local,class=CODE,merge=1,delta=2
    39                           	psect	text6,local,class=CODE,merge=1,delta=2
    40                           	psect	text7,local,class=CODE,merge=1,delta=2
    41                           	psect	text8,local,class=CODE,merge=1,delta=2
    42                           	psect	text9,local,class=CODE,merge=1,delta=2
    43                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    44                           	psect	text11,local,class=CODE,merge=1,delta=2
    45                           	psect	text12,local,class=CODE,merge=1,delta=2
    46                           	psect	text13,local,class=CODE,merge=1,delta=2
    47                           	psect	text14,local,class=CODE,merge=1,delta=2
    48                           	psect	text15,local,class=CODE,merge=1,delta=2
    49                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    50                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    51                           	psect	text18,local,class=CODE,merge=1,delta=2
    52                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    53                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    54                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    55                           	psect	text22,local,class=CODE,merge=1,delta=2
    56                           	psect	text23,local,class=CODE,merge=1,delta=2
    57                           	psect	text24,local,class=CODE,merge=1,delta=2
    58                           	psect	text25,local,class=CODE,merge=1,delta=2
    59                           	psect	text26,local,class=CODE,merge=1,delta=2
    60                           	psect	text27,local,class=CODE,merge=1,delta=2
    61                           	psect	text28,local,class=CODE,merge=1,delta=2
    62                           	psect	text29,local,class=CODE,merge=1,delta=2
    63                           	psect	text30,local,class=CODE,merge=1,delta=2
    64                           	psect	text31,local,class=CODE,merge=1,delta=2
    65                           	psect	text32,local,class=CODE,merge=1,delta=2
    66                           	psect	text33,local,class=CODE,merge=1,delta=2
    67                           	psect	text34,local,class=CODE,merge=1,delta=2
    68                           	psect	text35,local,class=CODE,merge=1,delta=2
    69                           	psect	text36,local,class=CODE,merge=1,delta=2
    70                           	psect	text37,local,class=CODE,merge=1,delta=2,group=2
    71                           	psect	intentry,global,class=CODE,delta=2
    72                           	psect	text39,local,class=CODE,merge=1,delta=2
    73                           	psect	text40,local,class=CODE,merge=1,delta=2
    74                           	psect	text41,local,class=CODE,merge=1,delta=2
    75                           	psect	text42,local,class=CODE,merge=1,delta=2
    76                           	dabs	1,0x7E,2
    77  0000                     
    78                           ; Version 2.05
    79                           ; Generated 20/12/2018 GMT
    80                           ; 
    81                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    82                           ; All rights reserved.
    83                           ; 
    84                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    85                           ; 
    86                           ; Redistribution and use in source and binary forms, with or without modification, are
    87                           ; permitted provided that the following conditions are met:
    88                           ; 
    89                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    90                           ;        conditions and the following disclaimer.
    91                           ; 
    92                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    93                           ;        of conditions and the following disclaimer in the documentation and/or other
    94                           ;        materials provided with the distribution.
    95                           ; 
    96                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    97                           ;        software without specific prior written permission.
    98                           ; 
    99                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   100                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   101                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   102                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   103                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   104                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   105                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   106                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   107                           ; 
   108                           ; 
   109                           ; Code-generator required, PIC16F1619 Definitions
   110                           ; 
   111                           ; SFR Addresses
   112  0000                     	;# 
   113  0001                     	;# 
   114  0002                     	;# 
   115  0003                     	;# 
   116  0004                     	;# 
   117  0005                     	;# 
   118  0006                     	;# 
   119  0007                     	;# 
   120  0008                     	;# 
   121  0009                     	;# 
   122  000A                     	;# 
   123  000B                     	;# 
   124  000C                     	;# 
   125  000D                     	;# 
   126  000E                     	;# 
   127  0010                     	;# 
   128  0011                     	;# 
   129  0012                     	;# 
   130  0013                     	;# 
   131  0014                     	;# 
   132  0015                     	;# 
   133  0016                     	;# 
   134  0016                     	;# 
   135  0017                     	;# 
   136  0018                     	;# 
   137  0019                     	;# 
   138  001A                     	;# 
   139  001A                     	;# 
   140  001B                     	;# 
   141  001B                     	;# 
   142  001C                     	;# 
   143  001D                     	;# 
   144  001E                     	;# 
   145  001F                     	;# 
   146  008C                     	;# 
   147  008D                     	;# 
   148  008E                     	;# 
   149  0090                     	;# 
   150  0091                     	;# 
   151  0092                     	;# 
   152  0093                     	;# 
   153  0094                     	;# 
   154  0095                     	;# 
   155  0096                     	;# 
   156  0098                     	;# 
   157  0099                     	;# 
   158  009A                     	;# 
   159  009B                     	;# 
   160  009B                     	;# 
   161  009C                     	;# 
   162  009D                     	;# 
   163  009E                     	;# 
   164  009F                     	;# 
   165  010C                     	;# 
   166  010D                     	;# 
   167  010E                     	;# 
   168  0111                     	;# 
   169  0112                     	;# 
   170  0113                     	;# 
   171  0114                     	;# 
   172  0115                     	;# 
   173  0116                     	;# 
   174  0117                     	;# 
   175  0118                     	;# 
   176  0119                     	;# 
   177  011C                     	;# 
   178  018C                     	;# 
   179  018D                     	;# 
   180  018E                     	;# 
   181  0191                     	;# 
   182  0191                     	;# 
   183  0192                     	;# 
   184  0193                     	;# 
   185  0193                     	;# 
   186  0194                     	;# 
   187  0195                     	;# 
   188  0196                     	;# 
   189  0197                     	;# 
   190  0199                     	;# 
   191  0199                     	;# 
   192  0199                     	;# 
   193  019A                     	;# 
   194  019A                     	;# 
   195  019A                     	;# 
   196  019B                     	;# 
   197  019B                     	;# 
   198  019B                     	;# 
   199  019B                     	;# 
   200  019B                     	;# 
   201  019C                     	;# 
   202  019C                     	;# 
   203  019C                     	;# 
   204  019D                     	;# 
   205  019D                     	;# 
   206  019D                     	;# 
   207  019E                     	;# 
   208  019E                     	;# 
   209  019E                     	;# 
   210  019F                     	;# 
   211  019F                     	;# 
   212  019F                     	;# 
   213  019F                     	;# 
   214  019F                     	;# 
   215  020C                     	;# 
   216  020D                     	;# 
   217  020E                     	;# 
   218  0211                     	;# 
   219  0211                     	;# 
   220  0212                     	;# 
   221  0212                     	;# 
   222  0213                     	;# 
   223  0213                     	;# 
   224  0214                     	;# 
   225  0214                     	;# 
   226  0215                     	;# 
   227  0215                     	;# 
   228  0215                     	;# 
   229  0215                     	;# 
   230  0216                     	;# 
   231  0216                     	;# 
   232  0217                     	;# 
   233  0217                     	;# 
   234  028C                     	;# 
   235  028D                     	;# 
   236  028E                     	;# 
   237  0291                     	;# 
   238  0291                     	;# 
   239  0292                     	;# 
   240  0293                     	;# 
   241  0294                     	;# 
   242  0298                     	;# 
   243  0298                     	;# 
   244  0299                     	;# 
   245  029A                     	;# 
   246  029B                     	;# 
   247  029E                     	;# 
   248  030C                     	;# 
   249  030D                     	;# 
   250  030E                     	;# 
   251  038C                     	;# 
   252  038D                     	;# 
   253  038E                     	;# 
   254  0391                     	;# 
   255  0392                     	;# 
   256  0393                     	;# 
   257  0394                     	;# 
   258  0395                     	;# 
   259  0396                     	;# 
   260  0397                     	;# 
   261  0398                     	;# 
   262  0399                     	;# 
   263  040E                     	;# 
   264  0413                     	;# 
   265  0413                     	;# 
   266  0414                     	;# 
   267  0414                     	;# 
   268  0415                     	;# 
   269  0416                     	;# 
   270  0417                     	;# 
   271  0418                     	;# 
   272  041A                     	;# 
   273  041A                     	;# 
   274  041B                     	;# 
   275  041B                     	;# 
   276  041C                     	;# 
   277  041D                     	;# 
   278  041E                     	;# 
   279  041F                     	;# 
   280  0493                     	;# 
   281  0494                     	;# 
   282  0495                     	;# 
   283  0496                     	;# 
   284  049A                     	;# 
   285  049B                     	;# 
   286  049C                     	;# 
   287  049D                     	;# 
   288  058C                     	;# 
   289  058C                     	;# 
   290  058D                     	;# 
   291  058E                     	;# 
   292  058E                     	;# 
   293  058F                     	;# 
   294  0590                     	;# 
   295  0590                     	;# 
   296  0591                     	;# 
   297  0592                     	;# 
   298  0592                     	;# 
   299  0593                     	;# 
   300  0594                     	;# 
   301  0594                     	;# 
   302  0595                     	;# 
   303  0596                     	;# 
   304  0596                     	;# 
   305  0597                     	;# 
   306  0598                     	;# 
   307  0599                     	;# 
   308  059A                     	;# 
   309  059B                     	;# 
   310  059B                     	;# 
   311  059C                     	;# 
   312  059D                     	;# 
   313  060C                     	;# 
   314  060C                     	;# 
   315  060D                     	;# 
   316  060E                     	;# 
   317  060F                     	;# 
   318  060F                     	;# 
   319  0610                     	;# 
   320  0611                     	;# 
   321  0612                     	;# 
   322  0613                     	;# 
   323  0614                     	;# 
   324  0617                     	;# 
   325  0617                     	;# 
   326  0618                     	;# 
   327  0619                     	;# 
   328  061A                     	;# 
   329  061A                     	;# 
   330  061B                     	;# 
   331  061C                     	;# 
   332  0691                     	;# 
   333  0692                     	;# 
   334  0693                     	;# 
   335  0694                     	;# 
   336  0695                     	;# 
   337  0696                     	;# 
   338  0697                     	;# 
   339  0699                     	;# 
   340  069A                     	;# 
   341  0711                     	;# 
   342  0712                     	;# 
   343  0713                     	;# 
   344  0714                     	;# 
   345  0715                     	;# 
   346  0718                     	;# 
   347  0718                     	;# 
   348  0719                     	;# 
   349  071A                     	;# 
   350  071A                     	;# 
   351  071B                     	;# 
   352  071C                     	;# 
   353  071D                     	;# 
   354  0791                     	;# 
   355  0791                     	;# 
   356  0792                     	;# 
   357  0793                     	;# 
   358  0793                     	;# 
   359  0794                     	;# 
   360  0795                     	;# 
   361  0795                     	;# 
   362  0796                     	;# 
   363  0797                     	;# 
   364  0797                     	;# 
   365  0798                     	;# 
   366  0799                     	;# 
   367  079A                     	;# 
   368  080C                     	;# 
   369  080C                     	;# 
   370  080D                     	;# 
   371  080E                     	;# 
   372  080E                     	;# 
   373  080F                     	;# 
   374  0810                     	;# 
   375  0810                     	;# 
   376  0811                     	;# 
   377  0812                     	;# 
   378  0812                     	;# 
   379  0813                     	;# 
   380  0814                     	;# 
   381  0815                     	;# 
   382  0816                     	;# 
   383  0817                     	;# 
   384  0818                     	;# 
   385  0819                     	;# 
   386  081A                     	;# 
   387  081A                     	;# 
   388  081B                     	;# 
   389  081C                     	;# 
   390  081C                     	;# 
   391  081D                     	;# 
   392  088C                     	;# 
   393  088D                     	;# 
   394  088E                     	;# 
   395  088F                     	;# 
   396  088F                     	;# 
   397  0890                     	;# 
   398  0891                     	;# 
   399  0892                     	;# 
   400  0893                     	;# 
   401  0893                     	;# 
   402  0894                     	;# 
   403  0895                     	;# 
   404  0896                     	;# 
   405  0897                     	;# 
   406  0897                     	;# 
   407  0898                     	;# 
   408  0899                     	;# 
   409  0D8C                     	;# 
   410  0D8C                     	;# 
   411  0D8D                     	;# 
   412  0D8E                     	;# 
   413  0D8F                     	;# 
   414  0D8F                     	;# 
   415  0D90                     	;# 
   416  0D91                     	;# 
   417  0D92                     	;# 
   418  0D92                     	;# 
   419  0D93                     	;# 
   420  0D94                     	;# 
   421  0D95                     	;# 
   422  0D95                     	;# 
   423  0D96                     	;# 
   424  0D97                     	;# 
   425  0D98                     	;# 
   426  0D99                     	;# 
   427  0D9A                     	;# 
   428  0D9B                     	;# 
   429  0D9C                     	;# 
   430  0D9D                     	;# 
   431  0D9E                     	;# 
   432  0D9E                     	;# 
   433  0D9F                     	;# 
   434  0DA0                     	;# 
   435  0DA1                     	;# 
   436  0DA1                     	;# 
   437  0DA2                     	;# 
   438  0DA3                     	;# 
   439  0DA4                     	;# 
   440  0DA4                     	;# 
   441  0DA5                     	;# 
   442  0DA6                     	;# 
   443  0DA7                     	;# 
   444  0DA7                     	;# 
   445  0DA8                     	;# 
   446  0DA9                     	;# 
   447  0DAA                     	;# 
   448  0DAB                     	;# 
   449  0DAC                     	;# 
   450  0DAD                     	;# 
   451  0DAE                     	;# 
   452  0DAF                     	;# 
   453  0E0F                     	;# 
   454  0E10                     	;# 
   455  0E11                     	;# 
   456  0E12                     	;# 
   457  0E13                     	;# 
   458  0E14                     	;# 
   459  0E15                     	;# 
   460  0E16                     	;# 
   461  0E17                     	;# 
   462  0E18                     	;# 
   463  0E19                     	;# 
   464  0E1A                     	;# 
   465  0E1B                     	;# 
   466  0E1C                     	;# 
   467  0E1D                     	;# 
   468  0E1E                     	;# 
   469  0E1F                     	;# 
   470  0E20                     	;# 
   471  0E21                     	;# 
   472  0E22                     	;# 
   473  0E23                     	;# 
   474  0E24                     	;# 
   475  0E25                     	;# 
   476  0E26                     	;# 
   477  0E27                     	;# 
   478  0E28                     	;# 
   479  0E29                     	;# 
   480  0E2A                     	;# 
   481  0E2B                     	;# 
   482  0E2C                     	;# 
   483  0E2D                     	;# 
   484  0E2E                     	;# 
   485  0E90                     	;# 
   486  0E91                     	;# 
   487  0E92                     	;# 
   488  0E94                     	;# 
   489  0E95                     	;# 
   490  0E9C                     	;# 
   491  0E9D                     	;# 
   492  0E9E                     	;# 
   493  0E9F                     	;# 
   494  0EA0                     	;# 
   495  0EA1                     	;# 
   496  0EA2                     	;# 
   497  0EA3                     	;# 
   498  0EA4                     	;# 
   499  0EA5                     	;# 
   500  0EA6                     	;# 
   501  0EA7                     	;# 
   502  0F0F                     	;# 
   503  0F10                     	;# 
   504  0F11                     	;# 
   505  0F12                     	;# 
   506  0F13                     	;# 
   507  0F14                     	;# 
   508  0F15                     	;# 
   509  0F16                     	;# 
   510  0F17                     	;# 
   511  0F18                     	;# 
   512  0F19                     	;# 
   513  0F1A                     	;# 
   514  0F1B                     	;# 
   515  0F1C                     	;# 
   516  0F1D                     	;# 
   517  0F1E                     	;# 
   518  0F1F                     	;# 
   519  0F20                     	;# 
   520  0F21                     	;# 
   521  0F22                     	;# 
   522  0F23                     	;# 
   523  0F24                     	;# 
   524  0F25                     	;# 
   525  0F26                     	;# 
   526  0F27                     	;# 
   527  0F28                     	;# 
   528  0F29                     	;# 
   529  0F2A                     	;# 
   530  0F2B                     	;# 
   531  0F2C                     	;# 
   532  0F2D                     	;# 
   533  0F2E                     	;# 
   534  0F2F                     	;# 
   535  0F30                     	;# 
   536  0F31                     	;# 
   537  0F32                     	;# 
   538  0F33                     	;# 
   539  0F34                     	;# 
   540  0F35                     	;# 
   541  0F36                     	;# 
   542  0F37                     	;# 
   543  0FE4                     	;# 
   544  0FE5                     	;# 
   545  0FE6                     	;# 
   546  0FE7                     	;# 
   547  0FE8                     	;# 
   548  0FE9                     	;# 
   549  0FEA                     	;# 
   550  0FEB                     	;# 
   551  0FED                     	;# 
   552  0FEE                     	;# 
   553  0FEF                     	;# 
   554  0000                     	;# 
   555  0001                     	;# 
   556  0002                     	;# 
   557  0003                     	;# 
   558  0004                     	;# 
   559  0005                     	;# 
   560  0006                     	;# 
   561  0007                     	;# 
   562  0008                     	;# 
   563  0009                     	;# 
   564  000A                     	;# 
   565  000B                     	;# 
   566  000C                     	;# 
   567  000D                     	;# 
   568  000E                     	;# 
   569  0010                     	;# 
   570  0011                     	;# 
   571  0012                     	;# 
   572  0013                     	;# 
   573  0014                     	;# 
   574  0015                     	;# 
   575  0016                     	;# 
   576  0016                     	;# 
   577  0017                     	;# 
   578  0018                     	;# 
   579  0019                     	;# 
   580  001A                     	;# 
   581  001A                     	;# 
   582  001B                     	;# 
   583  001B                     	;# 
   584  001C                     	;# 
   585  001D                     	;# 
   586  001E                     	;# 
   587  001F                     	;# 
   588  008C                     	;# 
   589  008D                     	;# 
   590  008E                     	;# 
   591  0090                     	;# 
   592  0091                     	;# 
   593  0092                     	;# 
   594  0093                     	;# 
   595  0094                     	;# 
   596  0095                     	;# 
   597  0096                     	;# 
   598  0098                     	;# 
   599  0099                     	;# 
   600  009A                     	;# 
   601  009B                     	;# 
   602  009B                     	;# 
   603  009C                     	;# 
   604  009D                     	;# 
   605  009E                     	;# 
   606  009F                     	;# 
   607  010C                     	;# 
   608  010D                     	;# 
   609  010E                     	;# 
   610  0111                     	;# 
   611  0112                     	;# 
   612  0113                     	;# 
   613  0114                     	;# 
   614  0115                     	;# 
   615  0116                     	;# 
   616  0117                     	;# 
   617  0118                     	;# 
   618  0119                     	;# 
   619  011C                     	;# 
   620  018C                     	;# 
   621  018D                     	;# 
   622  018E                     	;# 
   623  0191                     	;# 
   624  0191                     	;# 
   625  0192                     	;# 
   626  0193                     	;# 
   627  0193                     	;# 
   628  0194                     	;# 
   629  0195                     	;# 
   630  0196                     	;# 
   631  0197                     	;# 
   632  0199                     	;# 
   633  0199                     	;# 
   634  0199                     	;# 
   635  019A                     	;# 
   636  019A                     	;# 
   637  019A                     	;# 
   638  019B                     	;# 
   639  019B                     	;# 
   640  019B                     	;# 
   641  019B                     	;# 
   642  019B                     	;# 
   643  019C                     	;# 
   644  019C                     	;# 
   645  019C                     	;# 
   646  019D                     	;# 
   647  019D                     	;# 
   648  019D                     	;# 
   649  019E                     	;# 
   650  019E                     	;# 
   651  019E                     	;# 
   652  019F                     	;# 
   653  019F                     	;# 
   654  019F                     	;# 
   655  019F                     	;# 
   656  019F                     	;# 
   657  020C                     	;# 
   658  020D                     	;# 
   659  020E                     	;# 
   660  0211                     	;# 
   661  0211                     	;# 
   662  0212                     	;# 
   663  0212                     	;# 
   664  0213                     	;# 
   665  0213                     	;# 
   666  0214                     	;# 
   667  0214                     	;# 
   668  0215                     	;# 
   669  0215                     	;# 
   670  0215                     	;# 
   671  0215                     	;# 
   672  0216                     	;# 
   673  0216                     	;# 
   674  0217                     	;# 
   675  0217                     	;# 
   676  028C                     	;# 
   677  028D                     	;# 
   678  028E                     	;# 
   679  0291                     	;# 
   680  0291                     	;# 
   681  0292                     	;# 
   682  0293                     	;# 
   683  0294                     	;# 
   684  0298                     	;# 
   685  0298                     	;# 
   686  0299                     	;# 
   687  029A                     	;# 
   688  029B                     	;# 
   689  029E                     	;# 
   690  030C                     	;# 
   691  030D                     	;# 
   692  030E                     	;# 
   693  038C                     	;# 
   694  038D                     	;# 
   695  038E                     	;# 
   696  0391                     	;# 
   697  0392                     	;# 
   698  0393                     	;# 
   699  0394                     	;# 
   700  0395                     	;# 
   701  0396                     	;# 
   702  0397                     	;# 
   703  0398                     	;# 
   704  0399                     	;# 
   705  040E                     	;# 
   706  0413                     	;# 
   707  0413                     	;# 
   708  0414                     	;# 
   709  0414                     	;# 
   710  0415                     	;# 
   711  0416                     	;# 
   712  0417                     	;# 
   713  0418                     	;# 
   714  041A                     	;# 
   715  041A                     	;# 
   716  041B                     	;# 
   717  041B                     	;# 
   718  041C                     	;# 
   719  041D                     	;# 
   720  041E                     	;# 
   721  041F                     	;# 
   722  0493                     	;# 
   723  0494                     	;# 
   724  0495                     	;# 
   725  0496                     	;# 
   726  049A                     	;# 
   727  049B                     	;# 
   728  049C                     	;# 
   729  049D                     	;# 
   730  058C                     	;# 
   731  058C                     	;# 
   732  058D                     	;# 
   733  058E                     	;# 
   734  058E                     	;# 
   735  058F                     	;# 
   736  0590                     	;# 
   737  0590                     	;# 
   738  0591                     	;# 
   739  0592                     	;# 
   740  0592                     	;# 
   741  0593                     	;# 
   742  0594                     	;# 
   743  0594                     	;# 
   744  0595                     	;# 
   745  0596                     	;# 
   746  0596                     	;# 
   747  0597                     	;# 
   748  0598                     	;# 
   749  0599                     	;# 
   750  059A                     	;# 
   751  059B                     	;# 
   752  059B                     	;# 
   753  059C                     	;# 
   754  059D                     	;# 
   755  060C                     	;# 
   756  060C                     	;# 
   757  060D                     	;# 
   758  060E                     	;# 
   759  060F                     	;# 
   760  060F                     	;# 
   761  0610                     	;# 
   762  0611                     	;# 
   763  0612                     	;# 
   764  0613                     	;# 
   765  0614                     	;# 
   766  0617                     	;# 
   767  0617                     	;# 
   768  0618                     	;# 
   769  0619                     	;# 
   770  061A                     	;# 
   771  061A                     	;# 
   772  061B                     	;# 
   773  061C                     	;# 
   774  0691                     	;# 
   775  0692                     	;# 
   776  0693                     	;# 
   777  0694                     	;# 
   778  0695                     	;# 
   779  0696                     	;# 
   780  0697                     	;# 
   781  0699                     	;# 
   782  069A                     	;# 
   783  0711                     	;# 
   784  0712                     	;# 
   785  0713                     	;# 
   786  0714                     	;# 
   787  0715                     	;# 
   788  0718                     	;# 
   789  0718                     	;# 
   790  0719                     	;# 
   791  071A                     	;# 
   792  071A                     	;# 
   793  071B                     	;# 
   794  071C                     	;# 
   795  071D                     	;# 
   796  0791                     	;# 
   797  0791                     	;# 
   798  0792                     	;# 
   799  0793                     	;# 
   800  0793                     	;# 
   801  0794                     	;# 
   802  0795                     	;# 
   803  0795                     	;# 
   804  0796                     	;# 
   805  0797                     	;# 
   806  0797                     	;# 
   807  0798                     	;# 
   808  0799                     	;# 
   809  079A                     	;# 
   810  080C                     	;# 
   811  080C                     	;# 
   812  080D                     	;# 
   813  080E                     	;# 
   814  080E                     	;# 
   815  080F                     	;# 
   816  0810                     	;# 
   817  0810                     	;# 
   818  0811                     	;# 
   819  0812                     	;# 
   820  0812                     	;# 
   821  0813                     	;# 
   822  0814                     	;# 
   823  0815                     	;# 
   824  0816                     	;# 
   825  0817                     	;# 
   826  0818                     	;# 
   827  0819                     	;# 
   828  081A                     	;# 
   829  081A                     	;# 
   830  081B                     	;# 
   831  081C                     	;# 
   832  081C                     	;# 
   833  081D                     	;# 
   834  088C                     	;# 
   835  088D                     	;# 
   836  088E                     	;# 
   837  088F                     	;# 
   838  088F                     	;# 
   839  0890                     	;# 
   840  0891                     	;# 
   841  0892                     	;# 
   842  0893                     	;# 
   843  0893                     	;# 
   844  0894                     	;# 
   845  0895                     	;# 
   846  0896                     	;# 
   847  0897                     	;# 
   848  0897                     	;# 
   849  0898                     	;# 
   850  0899                     	;# 
   851  0D8C                     	;# 
   852  0D8C                     	;# 
   853  0D8D                     	;# 
   854  0D8E                     	;# 
   855  0D8F                     	;# 
   856  0D8F                     	;# 
   857  0D90                     	;# 
   858  0D91                     	;# 
   859  0D92                     	;# 
   860  0D92                     	;# 
   861  0D93                     	;# 
   862  0D94                     	;# 
   863  0D95                     	;# 
   864  0D95                     	;# 
   865  0D96                     	;# 
   866  0D97                     	;# 
   867  0D98                     	;# 
   868  0D99                     	;# 
   869  0D9A                     	;# 
   870  0D9B                     	;# 
   871  0D9C                     	;# 
   872  0D9D                     	;# 
   873  0D9E                     	;# 
   874  0D9E                     	;# 
   875  0D9F                     	;# 
   876  0DA0                     	;# 
   877  0DA1                     	;# 
   878  0DA1                     	;# 
   879  0DA2                     	;# 
   880  0DA3                     	;# 
   881  0DA4                     	;# 
   882  0DA4                     	;# 
   883  0DA5                     	;# 
   884  0DA6                     	;# 
   885  0DA7                     	;# 
   886  0DA7                     	;# 
   887  0DA8                     	;# 
   888  0DA9                     	;# 
   889  0DAA                     	;# 
   890  0DAB                     	;# 
   891  0DAC                     	;# 
   892  0DAD                     	;# 
   893  0DAE                     	;# 
   894  0DAF                     	;# 
   895  0E0F                     	;# 
   896  0E10                     	;# 
   897  0E11                     	;# 
   898  0E12                     	;# 
   899  0E13                     	;# 
   900  0E14                     	;# 
   901  0E15                     	;# 
   902  0E16                     	;# 
   903  0E17                     	;# 
   904  0E18                     	;# 
   905  0E19                     	;# 
   906  0E1A                     	;# 
   907  0E1B                     	;# 
   908  0E1C                     	;# 
   909  0E1D                     	;# 
   910  0E1E                     	;# 
   911  0E1F                     	;# 
   912  0E20                     	;# 
   913  0E21                     	;# 
   914  0E22                     	;# 
   915  0E23                     	;# 
   916  0E24                     	;# 
   917  0E25                     	;# 
   918  0E26                     	;# 
   919  0E27                     	;# 
   920  0E28                     	;# 
   921  0E29                     	;# 
   922  0E2A                     	;# 
   923  0E2B                     	;# 
   924  0E2C                     	;# 
   925  0E2D                     	;# 
   926  0E2E                     	;# 
   927  0E90                     	;# 
   928  0E91                     	;# 
   929  0E92                     	;# 
   930  0E94                     	;# 
   931  0E95                     	;# 
   932  0E9C                     	;# 
   933  0E9D                     	;# 
   934  0E9E                     	;# 
   935  0E9F                     	;# 
   936  0EA0                     	;# 
   937  0EA1                     	;# 
   938  0EA2                     	;# 
   939  0EA3                     	;# 
   940  0EA4                     	;# 
   941  0EA5                     	;# 
   942  0EA6                     	;# 
   943  0EA7                     	;# 
   944  0F0F                     	;# 
   945  0F10                     	;# 
   946  0F11                     	;# 
   947  0F12                     	;# 
   948  0F13                     	;# 
   949  0F14                     	;# 
   950  0F15                     	;# 
   951  0F16                     	;# 
   952  0F17                     	;# 
   953  0F18                     	;# 
   954  0F19                     	;# 
   955  0F1A                     	;# 
   956  0F1B                     	;# 
   957  0F1C                     	;# 
   958  0F1D                     	;# 
   959  0F1E                     	;# 
   960  0F1F                     	;# 
   961  0F20                     	;# 
   962  0F21                     	;# 
   963  0F22                     	;# 
   964  0F23                     	;# 
   965  0F24                     	;# 
   966  0F25                     	;# 
   967  0F26                     	;# 
   968  0F27                     	;# 
   969  0F28                     	;# 
   970  0F29                     	;# 
   971  0F2A                     	;# 
   972  0F2B                     	;# 
   973  0F2C                     	;# 
   974  0F2D                     	;# 
   975  0F2E                     	;# 
   976  0F2F                     	;# 
   977  0F30                     	;# 
   978  0F31                     	;# 
   979  0F32                     	;# 
   980  0F33                     	;# 
   981  0F34                     	;# 
   982  0F35                     	;# 
   983  0F36                     	;# 
   984  0F37                     	;# 
   985  0FE4                     	;# 
   986  0FE5                     	;# 
   987  0FE6                     	;# 
   988  0FE7                     	;# 
   989  0FE8                     	;# 
   990  0FE9                     	;# 
   991  0FEA                     	;# 
   992  0FEB                     	;# 
   993  0FED                     	;# 
   994  0FEE                     	;# 
   995  0FEF                     	;# 
   996  0000                     	;# 
   997  0001                     	;# 
   998  0002                     	;# 
   999  0003                     	;# 
  1000  0004                     	;# 
  1001  0005                     	;# 
  1002  0006                     	;# 
  1003  0007                     	;# 
  1004  0008                     	;# 
  1005  0009                     	;# 
  1006  000A                     	;# 
  1007  000B                     	;# 
  1008  000C                     	;# 
  1009  000D                     	;# 
  1010  000E                     	;# 
  1011  0010                     	;# 
  1012  0011                     	;# 
  1013  0012                     	;# 
  1014  0013                     	;# 
  1015  0014                     	;# 
  1016  0015                     	;# 
  1017  0016                     	;# 
  1018  0016                     	;# 
  1019  0017                     	;# 
  1020  0018                     	;# 
  1021  0019                     	;# 
  1022  001A                     	;# 
  1023  001A                     	;# 
  1024  001B                     	;# 
  1025  001B                     	;# 
  1026  001C                     	;# 
  1027  001D                     	;# 
  1028  001E                     	;# 
  1029  001F                     	;# 
  1030  008C                     	;# 
  1031  008D                     	;# 
  1032  008E                     	;# 
  1033  0090                     	;# 
  1034  0091                     	;# 
  1035  0092                     	;# 
  1036  0093                     	;# 
  1037  0094                     	;# 
  1038  0095                     	;# 
  1039  0096                     	;# 
  1040  0098                     	;# 
  1041  0099                     	;# 
  1042  009A                     	;# 
  1043  009B                     	;# 
  1044  009B                     	;# 
  1045  009C                     	;# 
  1046  009D                     	;# 
  1047  009E                     	;# 
  1048  009F                     	;# 
  1049  010C                     	;# 
  1050  010D                     	;# 
  1051  010E                     	;# 
  1052  0111                     	;# 
  1053  0112                     	;# 
  1054  0113                     	;# 
  1055  0114                     	;# 
  1056  0115                     	;# 
  1057  0116                     	;# 
  1058  0117                     	;# 
  1059  0118                     	;# 
  1060  0119                     	;# 
  1061  011C                     	;# 
  1062  018C                     	;# 
  1063  018D                     	;# 
  1064  018E                     	;# 
  1065  0191                     	;# 
  1066  0191                     	;# 
  1067  0192                     	;# 
  1068  0193                     	;# 
  1069  0193                     	;# 
  1070  0194                     	;# 
  1071  0195                     	;# 
  1072  0196                     	;# 
  1073  0197                     	;# 
  1074  0199                     	;# 
  1075  0199                     	;# 
  1076  0199                     	;# 
  1077  019A                     	;# 
  1078  019A                     	;# 
  1079  019A                     	;# 
  1080  019B                     	;# 
  1081  019B                     	;# 
  1082  019B                     	;# 
  1083  019B                     	;# 
  1084  019B                     	;# 
  1085  019C                     	;# 
  1086  019C                     	;# 
  1087  019C                     	;# 
  1088  019D                     	;# 
  1089  019D                     	;# 
  1090  019D                     	;# 
  1091  019E                     	;# 
  1092  019E                     	;# 
  1093  019E                     	;# 
  1094  019F                     	;# 
  1095  019F                     	;# 
  1096  019F                     	;# 
  1097  019F                     	;# 
  1098  019F                     	;# 
  1099  020C                     	;# 
  1100  020D                     	;# 
  1101  020E                     	;# 
  1102  0211                     	;# 
  1103  0211                     	;# 
  1104  0212                     	;# 
  1105  0212                     	;# 
  1106  0213                     	;# 
  1107  0213                     	;# 
  1108  0214                     	;# 
  1109  0214                     	;# 
  1110  0215                     	;# 
  1111  0215                     	;# 
  1112  0215                     	;# 
  1113  0215                     	;# 
  1114  0216                     	;# 
  1115  0216                     	;# 
  1116  0217                     	;# 
  1117  0217                     	;# 
  1118  028C                     	;# 
  1119  028D                     	;# 
  1120  028E                     	;# 
  1121  0291                     	;# 
  1122  0291                     	;# 
  1123  0292                     	;# 
  1124  0293                     	;# 
  1125  0294                     	;# 
  1126  0298                     	;# 
  1127  0298                     	;# 
  1128  0299                     	;# 
  1129  029A                     	;# 
  1130  029B                     	;# 
  1131  029E                     	;# 
  1132  030C                     	;# 
  1133  030D                     	;# 
  1134  030E                     	;# 
  1135  038C                     	;# 
  1136  038D                     	;# 
  1137  038E                     	;# 
  1138  0391                     	;# 
  1139  0392                     	;# 
  1140  0393                     	;# 
  1141  0394                     	;# 
  1142  0395                     	;# 
  1143  0396                     	;# 
  1144  0397                     	;# 
  1145  0398                     	;# 
  1146  0399                     	;# 
  1147  040E                     	;# 
  1148  0413                     	;# 
  1149  0413                     	;# 
  1150  0414                     	;# 
  1151  0414                     	;# 
  1152  0415                     	;# 
  1153  0416                     	;# 
  1154  0417                     	;# 
  1155  0418                     	;# 
  1156  041A                     	;# 
  1157  041A                     	;# 
  1158  041B                     	;# 
  1159  041B                     	;# 
  1160  041C                     	;# 
  1161  041D                     	;# 
  1162  041E                     	;# 
  1163  041F                     	;# 
  1164  0493                     	;# 
  1165  0494                     	;# 
  1166  0495                     	;# 
  1167  0496                     	;# 
  1168  049A                     	;# 
  1169  049B                     	;# 
  1170  049C                     	;# 
  1171  049D                     	;# 
  1172  058C                     	;# 
  1173  058C                     	;# 
  1174  058D                     	;# 
  1175  058E                     	;# 
  1176  058E                     	;# 
  1177  058F                     	;# 
  1178  0590                     	;# 
  1179  0590                     	;# 
  1180  0591                     	;# 
  1181  0592                     	;# 
  1182  0592                     	;# 
  1183  0593                     	;# 
  1184  0594                     	;# 
  1185  0594                     	;# 
  1186  0595                     	;# 
  1187  0596                     	;# 
  1188  0596                     	;# 
  1189  0597                     	;# 
  1190  0598                     	;# 
  1191  0599                     	;# 
  1192  059A                     	;# 
  1193  059B                     	;# 
  1194  059B                     	;# 
  1195  059C                     	;# 
  1196  059D                     	;# 
  1197  060C                     	;# 
  1198  060C                     	;# 
  1199  060D                     	;# 
  1200  060E                     	;# 
  1201  060F                     	;# 
  1202  060F                     	;# 
  1203  0610                     	;# 
  1204  0611                     	;# 
  1205  0612                     	;# 
  1206  0613                     	;# 
  1207  0614                     	;# 
  1208  0617                     	;# 
  1209  0617                     	;# 
  1210  0618                     	;# 
  1211  0619                     	;# 
  1212  061A                     	;# 
  1213  061A                     	;# 
  1214  061B                     	;# 
  1215  061C                     	;# 
  1216  0691                     	;# 
  1217  0692                     	;# 
  1218  0693                     	;# 
  1219  0694                     	;# 
  1220  0695                     	;# 
  1221  0696                     	;# 
  1222  0697                     	;# 
  1223  0699                     	;# 
  1224  069A                     	;# 
  1225  0711                     	;# 
  1226  0712                     	;# 
  1227  0713                     	;# 
  1228  0714                     	;# 
  1229  0715                     	;# 
  1230  0718                     	;# 
  1231  0718                     	;# 
  1232  0719                     	;# 
  1233  071A                     	;# 
  1234  071A                     	;# 
  1235  071B                     	;# 
  1236  071C                     	;# 
  1237  071D                     	;# 
  1238  0791                     	;# 
  1239  0791                     	;# 
  1240  0792                     	;# 
  1241  0793                     	;# 
  1242  0793                     	;# 
  1243  0794                     	;# 
  1244  0795                     	;# 
  1245  0795                     	;# 
  1246  0796                     	;# 
  1247  0797                     	;# 
  1248  0797                     	;# 
  1249  0798                     	;# 
  1250  0799                     	;# 
  1251  079A                     	;# 
  1252  080C                     	;# 
  1253  080C                     	;# 
  1254  080D                     	;# 
  1255  080E                     	;# 
  1256  080E                     	;# 
  1257  080F                     	;# 
  1258  0810                     	;# 
  1259  0810                     	;# 
  1260  0811                     	;# 
  1261  0812                     	;# 
  1262  0812                     	;# 
  1263  0813                     	;# 
  1264  0814                     	;# 
  1265  0815                     	;# 
  1266  0816                     	;# 
  1267  0817                     	;# 
  1268  0818                     	;# 
  1269  0819                     	;# 
  1270  081A                     	;# 
  1271  081A                     	;# 
  1272  081B                     	;# 
  1273  081C                     	;# 
  1274  081C                     	;# 
  1275  081D                     	;# 
  1276  088C                     	;# 
  1277  088D                     	;# 
  1278  088E                     	;# 
  1279  088F                     	;# 
  1280  088F                     	;# 
  1281  0890                     	;# 
  1282  0891                     	;# 
  1283  0892                     	;# 
  1284  0893                     	;# 
  1285  0893                     	;# 
  1286  0894                     	;# 
  1287  0895                     	;# 
  1288  0896                     	;# 
  1289  0897                     	;# 
  1290  0897                     	;# 
  1291  0898                     	;# 
  1292  0899                     	;# 
  1293  0D8C                     	;# 
  1294  0D8C                     	;# 
  1295  0D8D                     	;# 
  1296  0D8E                     	;# 
  1297  0D8F                     	;# 
  1298  0D8F                     	;# 
  1299  0D90                     	;# 
  1300  0D91                     	;# 
  1301  0D92                     	;# 
  1302  0D92                     	;# 
  1303  0D93                     	;# 
  1304  0D94                     	;# 
  1305  0D95                     	;# 
  1306  0D95                     	;# 
  1307  0D96                     	;# 
  1308  0D97                     	;# 
  1309  0D98                     	;# 
  1310  0D99                     	;# 
  1311  0D9A                     	;# 
  1312  0D9B                     	;# 
  1313  0D9C                     	;# 
  1314  0D9D                     	;# 
  1315  0D9E                     	;# 
  1316  0D9E                     	;# 
  1317  0D9F                     	;# 
  1318  0DA0                     	;# 
  1319  0DA1                     	;# 
  1320  0DA1                     	;# 
  1321  0DA2                     	;# 
  1322  0DA3                     	;# 
  1323  0DA4                     	;# 
  1324  0DA4                     	;# 
  1325  0DA5                     	;# 
  1326  0DA6                     	;# 
  1327  0DA7                     	;# 
  1328  0DA7                     	;# 
  1329  0DA8                     	;# 
  1330  0DA9                     	;# 
  1331  0DAA                     	;# 
  1332  0DAB                     	;# 
  1333  0DAC                     	;# 
  1334  0DAD                     	;# 
  1335  0DAE                     	;# 
  1336  0DAF                     	;# 
  1337  0E0F                     	;# 
  1338  0E10                     	;# 
  1339  0E11                     	;# 
  1340  0E12                     	;# 
  1341  0E13                     	;# 
  1342  0E14                     	;# 
  1343  0E15                     	;# 
  1344  0E16                     	;# 
  1345  0E17                     	;# 
  1346  0E18                     	;# 
  1347  0E19                     	;# 
  1348  0E1A                     	;# 
  1349  0E1B                     	;# 
  1350  0E1C                     	;# 
  1351  0E1D                     	;# 
  1352  0E1E                     	;# 
  1353  0E1F                     	;# 
  1354  0E20                     	;# 
  1355  0E21                     	;# 
  1356  0E22                     	;# 
  1357  0E23                     	;# 
  1358  0E24                     	;# 
  1359  0E25                     	;# 
  1360  0E26                     	;# 
  1361  0E27                     	;# 
  1362  0E28                     	;# 
  1363  0E29                     	;# 
  1364  0E2A                     	;# 
  1365  0E2B                     	;# 
  1366  0E2C                     	;# 
  1367  0E2D                     	;# 
  1368  0E2E                     	;# 
  1369  0E90                     	;# 
  1370  0E91                     	;# 
  1371  0E92                     	;# 
  1372  0E94                     	;# 
  1373  0E95                     	;# 
  1374  0E9C                     	;# 
  1375  0E9D                     	;# 
  1376  0E9E                     	;# 
  1377  0E9F                     	;# 
  1378  0EA0                     	;# 
  1379  0EA1                     	;# 
  1380  0EA2                     	;# 
  1381  0EA3                     	;# 
  1382  0EA4                     	;# 
  1383  0EA5                     	;# 
  1384  0EA6                     	;# 
  1385  0EA7                     	;# 
  1386  0F0F                     	;# 
  1387  0F10                     	;# 
  1388  0F11                     	;# 
  1389  0F12                     	;# 
  1390  0F13                     	;# 
  1391  0F14                     	;# 
  1392  0F15                     	;# 
  1393  0F16                     	;# 
  1394  0F17                     	;# 
  1395  0F18                     	;# 
  1396  0F19                     	;# 
  1397  0F1A                     	;# 
  1398  0F1B                     	;# 
  1399  0F1C                     	;# 
  1400  0F1D                     	;# 
  1401  0F1E                     	;# 
  1402  0F1F                     	;# 
  1403  0F20                     	;# 
  1404  0F21                     	;# 
  1405  0F22                     	;# 
  1406  0F23                     	;# 
  1407  0F24                     	;# 
  1408  0F25                     	;# 
  1409  0F26                     	;# 
  1410  0F27                     	;# 
  1411  0F28                     	;# 
  1412  0F29                     	;# 
  1413  0F2A                     	;# 
  1414  0F2B                     	;# 
  1415  0F2C                     	;# 
  1416  0F2D                     	;# 
  1417  0F2E                     	;# 
  1418  0F2F                     	;# 
  1419  0F30                     	;# 
  1420  0F31                     	;# 
  1421  0F32                     	;# 
  1422  0F33                     	;# 
  1423  0F34                     	;# 
  1424  0F35                     	;# 
  1425  0F36                     	;# 
  1426  0F37                     	;# 
  1427  0FE4                     	;# 
  1428  0FE5                     	;# 
  1429  0FE6                     	;# 
  1430  0FE7                     	;# 
  1431  0FE8                     	;# 
  1432  0FE9                     	;# 
  1433  0FEA                     	;# 
  1434  0FEB                     	;# 
  1435  0FED                     	;# 
  1436  0FEE                     	;# 
  1437  0FEF                     	;# 
  1438  0000                     	;# 
  1439  0001                     	;# 
  1440  0002                     	;# 
  1441  0003                     	;# 
  1442  0004                     	;# 
  1443  0005                     	;# 
  1444  0006                     	;# 
  1445  0007                     	;# 
  1446  0008                     	;# 
  1447  0009                     	;# 
  1448  000A                     	;# 
  1449  000B                     	;# 
  1450  000C                     	;# 
  1451  000D                     	;# 
  1452  000E                     	;# 
  1453  0010                     	;# 
  1454  0011                     	;# 
  1455  0012                     	;# 
  1456  0013                     	;# 
  1457  0014                     	;# 
  1458  0015                     	;# 
  1459  0016                     	;# 
  1460  0016                     	;# 
  1461  0017                     	;# 
  1462  0018                     	;# 
  1463  0019                     	;# 
  1464  001A                     	;# 
  1465  001A                     	;# 
  1466  001B                     	;# 
  1467  001B                     	;# 
  1468  001C                     	;# 
  1469  001D                     	;# 
  1470  001E                     	;# 
  1471  001F                     	;# 
  1472  008C                     	;# 
  1473  008D                     	;# 
  1474  008E                     	;# 
  1475  0090                     	;# 
  1476  0091                     	;# 
  1477  0092                     	;# 
  1478  0093                     	;# 
  1479  0094                     	;# 
  1480  0095                     	;# 
  1481  0096                     	;# 
  1482  0098                     	;# 
  1483  0099                     	;# 
  1484  009A                     	;# 
  1485  009B                     	;# 
  1486  009B                     	;# 
  1487  009C                     	;# 
  1488  009D                     	;# 
  1489  009E                     	;# 
  1490  009F                     	;# 
  1491  010C                     	;# 
  1492  010D                     	;# 
  1493  010E                     	;# 
  1494  0111                     	;# 
  1495  0112                     	;# 
  1496  0113                     	;# 
  1497  0114                     	;# 
  1498  0115                     	;# 
  1499  0116                     	;# 
  1500  0117                     	;# 
  1501  0118                     	;# 
  1502  0119                     	;# 
  1503  011C                     	;# 
  1504  018C                     	;# 
  1505  018D                     	;# 
  1506  018E                     	;# 
  1507  0191                     	;# 
  1508  0191                     	;# 
  1509  0192                     	;# 
  1510  0193                     	;# 
  1511  0193                     	;# 
  1512  0194                     	;# 
  1513  0195                     	;# 
  1514  0196                     	;# 
  1515  0197                     	;# 
  1516  0199                     	;# 
  1517  0199                     	;# 
  1518  0199                     	;# 
  1519  019A                     	;# 
  1520  019A                     	;# 
  1521  019A                     	;# 
  1522  019B                     	;# 
  1523  019B                     	;# 
  1524  019B                     	;# 
  1525  019B                     	;# 
  1526  019B                     	;# 
  1527  019C                     	;# 
  1528  019C                     	;# 
  1529  019C                     	;# 
  1530  019D                     	;# 
  1531  019D                     	;# 
  1532  019D                     	;# 
  1533  019E                     	;# 
  1534  019E                     	;# 
  1535  019E                     	;# 
  1536  019F                     	;# 
  1537  019F                     	;# 
  1538  019F                     	;# 
  1539  019F                     	;# 
  1540  019F                     	;# 
  1541  020C                     	;# 
  1542  020D                     	;# 
  1543  020E                     	;# 
  1544  0211                     	;# 
  1545  0211                     	;# 
  1546  0212                     	;# 
  1547  0212                     	;# 
  1548  0213                     	;# 
  1549  0213                     	;# 
  1550  0214                     	;# 
  1551  0214                     	;# 
  1552  0215                     	;# 
  1553  0215                     	;# 
  1554  0215                     	;# 
  1555  0215                     	;# 
  1556  0216                     	;# 
  1557  0216                     	;# 
  1558  0217                     	;# 
  1559  0217                     	;# 
  1560  028C                     	;# 
  1561  028D                     	;# 
  1562  028E                     	;# 
  1563  0291                     	;# 
  1564  0291                     	;# 
  1565  0292                     	;# 
  1566  0293                     	;# 
  1567  0294                     	;# 
  1568  0298                     	;# 
  1569  0298                     	;# 
  1570  0299                     	;# 
  1571  029A                     	;# 
  1572  029B                     	;# 
  1573  029E                     	;# 
  1574  030C                     	;# 
  1575  030D                     	;# 
  1576  030E                     	;# 
  1577  038C                     	;# 
  1578  038D                     	;# 
  1579  038E                     	;# 
  1580  0391                     	;# 
  1581  0392                     	;# 
  1582  0393                     	;# 
  1583  0394                     	;# 
  1584  0395                     	;# 
  1585  0396                     	;# 
  1586  0397                     	;# 
  1587  0398                     	;# 
  1588  0399                     	;# 
  1589  040E                     	;# 
  1590  0413                     	;# 
  1591  0413                     	;# 
  1592  0414                     	;# 
  1593  0414                     	;# 
  1594  0415                     	;# 
  1595  0416                     	;# 
  1596  0417                     	;# 
  1597  0418                     	;# 
  1598  041A                     	;# 
  1599  041A                     	;# 
  1600  041B                     	;# 
  1601  041B                     	;# 
  1602  041C                     	;# 
  1603  041D                     	;# 
  1604  041E                     	;# 
  1605  041F                     	;# 
  1606  0493                     	;# 
  1607  0494                     	;# 
  1608  0495                     	;# 
  1609  0496                     	;# 
  1610  049A                     	;# 
  1611  049B                     	;# 
  1612  049C                     	;# 
  1613  049D                     	;# 
  1614  058C                     	;# 
  1615  058C                     	;# 
  1616  058D                     	;# 
  1617  058E                     	;# 
  1618  058E                     	;# 
  1619  058F                     	;# 
  1620  0590                     	;# 
  1621  0590                     	;# 
  1622  0591                     	;# 
  1623  0592                     	;# 
  1624  0592                     	;# 
  1625  0593                     	;# 
  1626  0594                     	;# 
  1627  0594                     	;# 
  1628  0595                     	;# 
  1629  0596                     	;# 
  1630  0596                     	;# 
  1631  0597                     	;# 
  1632  0598                     	;# 
  1633  0599                     	;# 
  1634  059A                     	;# 
  1635  059B                     	;# 
  1636  059B                     	;# 
  1637  059C                     	;# 
  1638  059D                     	;# 
  1639  060C                     	;# 
  1640  060C                     	;# 
  1641  060D                     	;# 
  1642  060E                     	;# 
  1643  060F                     	;# 
  1644  060F                     	;# 
  1645  0610                     	;# 
  1646  0611                     	;# 
  1647  0612                     	;# 
  1648  0613                     	;# 
  1649  0614                     	;# 
  1650  0617                     	;# 
  1651  0617                     	;# 
  1652  0618                     	;# 
  1653  0619                     	;# 
  1654  061A                     	;# 
  1655  061A                     	;# 
  1656  061B                     	;# 
  1657  061C                     	;# 
  1658  0691                     	;# 
  1659  0692                     	;# 
  1660  0693                     	;# 
  1661  0694                     	;# 
  1662  0695                     	;# 
  1663  0696                     	;# 
  1664  0697                     	;# 
  1665  0699                     	;# 
  1666  069A                     	;# 
  1667  0711                     	;# 
  1668  0712                     	;# 
  1669  0713                     	;# 
  1670  0714                     	;# 
  1671  0715                     	;# 
  1672  0718                     	;# 
  1673  0718                     	;# 
  1674  0719                     	;# 
  1675  071A                     	;# 
  1676  071A                     	;# 
  1677  071B                     	;# 
  1678  071C                     	;# 
  1679  071D                     	;# 
  1680  0791                     	;# 
  1681  0791                     	;# 
  1682  0792                     	;# 
  1683  0793                     	;# 
  1684  0793                     	;# 
  1685  0794                     	;# 
  1686  0795                     	;# 
  1687  0795                     	;# 
  1688  0796                     	;# 
  1689  0797                     	;# 
  1690  0797                     	;# 
  1691  0798                     	;# 
  1692  0799                     	;# 
  1693  079A                     	;# 
  1694  080C                     	;# 
  1695  080C                     	;# 
  1696  080D                     	;# 
  1697  080E                     	;# 
  1698  080E                     	;# 
  1699  080F                     	;# 
  1700  0810                     	;# 
  1701  0810                     	;# 
  1702  0811                     	;# 
  1703  0812                     	;# 
  1704  0812                     	;# 
  1705  0813                     	;# 
  1706  0814                     	;# 
  1707  0815                     	;# 
  1708  0816                     	;# 
  1709  0817                     	;# 
  1710  0818                     	;# 
  1711  0819                     	;# 
  1712  081A                     	;# 
  1713  081A                     	;# 
  1714  081B                     	;# 
  1715  081C                     	;# 
  1716  081C                     	;# 
  1717  081D                     	;# 
  1718  088C                     	;# 
  1719  088D                     	;# 
  1720  088E                     	;# 
  1721  088F                     	;# 
  1722  088F                     	;# 
  1723  0890                     	;# 
  1724  0891                     	;# 
  1725  0892                     	;# 
  1726  0893                     	;# 
  1727  0893                     	;# 
  1728  0894                     	;# 
  1729  0895                     	;# 
  1730  0896                     	;# 
  1731  0897                     	;# 
  1732  0897                     	;# 
  1733  0898                     	;# 
  1734  0899                     	;# 
  1735  0D8C                     	;# 
  1736  0D8C                     	;# 
  1737  0D8D                     	;# 
  1738  0D8E                     	;# 
  1739  0D8F                     	;# 
  1740  0D8F                     	;# 
  1741  0D90                     	;# 
  1742  0D91                     	;# 
  1743  0D92                     	;# 
  1744  0D92                     	;# 
  1745  0D93                     	;# 
  1746  0D94                     	;# 
  1747  0D95                     	;# 
  1748  0D95                     	;# 
  1749  0D96                     	;# 
  1750  0D97                     	;# 
  1751  0D98                     	;# 
  1752  0D99                     	;# 
  1753  0D9A                     	;# 
  1754  0D9B                     	;# 
  1755  0D9C                     	;# 
  1756  0D9D                     	;# 
  1757  0D9E                     	;# 
  1758  0D9E                     	;# 
  1759  0D9F                     	;# 
  1760  0DA0                     	;# 
  1761  0DA1                     	;# 
  1762  0DA1                     	;# 
  1763  0DA2                     	;# 
  1764  0DA3                     	;# 
  1765  0DA4                     	;# 
  1766  0DA4                     	;# 
  1767  0DA5                     	;# 
  1768  0DA6                     	;# 
  1769  0DA7                     	;# 
  1770  0DA7                     	;# 
  1771  0DA8                     	;# 
  1772  0DA9                     	;# 
  1773  0DAA                     	;# 
  1774  0DAB                     	;# 
  1775  0DAC                     	;# 
  1776  0DAD                     	;# 
  1777  0DAE                     	;# 
  1778  0DAF                     	;# 
  1779  0E0F                     	;# 
  1780  0E10                     	;# 
  1781  0E11                     	;# 
  1782  0E12                     	;# 
  1783  0E13                     	;# 
  1784  0E14                     	;# 
  1785  0E15                     	;# 
  1786  0E16                     	;# 
  1787  0E17                     	;# 
  1788  0E18                     	;# 
  1789  0E19                     	;# 
  1790  0E1A                     	;# 
  1791  0E1B                     	;# 
  1792  0E1C                     	;# 
  1793  0E1D                     	;# 
  1794  0E1E                     	;# 
  1795  0E1F                     	;# 
  1796  0E20                     	;# 
  1797  0E21                     	;# 
  1798  0E22                     	;# 
  1799  0E23                     	;# 
  1800  0E24                     	;# 
  1801  0E25                     	;# 
  1802  0E26                     	;# 
  1803  0E27                     	;# 
  1804  0E28                     	;# 
  1805  0E29                     	;# 
  1806  0E2A                     	;# 
  1807  0E2B                     	;# 
  1808  0E2C                     	;# 
  1809  0E2D                     	;# 
  1810  0E2E                     	;# 
  1811  0E90                     	;# 
  1812  0E91                     	;# 
  1813  0E92                     	;# 
  1814  0E94                     	;# 
  1815  0E95                     	;# 
  1816  0E9C                     	;# 
  1817  0E9D                     	;# 
  1818  0E9E                     	;# 
  1819  0E9F                     	;# 
  1820  0EA0                     	;# 
  1821  0EA1                     	;# 
  1822  0EA2                     	;# 
  1823  0EA3                     	;# 
  1824  0EA4                     	;# 
  1825  0EA5                     	;# 
  1826  0EA6                     	;# 
  1827  0EA7                     	;# 
  1828  0F0F                     	;# 
  1829  0F10                     	;# 
  1830  0F11                     	;# 
  1831  0F12                     	;# 
  1832  0F13                     	;# 
  1833  0F14                     	;# 
  1834  0F15                     	;# 
  1835  0F16                     	;# 
  1836  0F17                     	;# 
  1837  0F18                     	;# 
  1838  0F19                     	;# 
  1839  0F1A                     	;# 
  1840  0F1B                     	;# 
  1841  0F1C                     	;# 
  1842  0F1D                     	;# 
  1843  0F1E                     	;# 
  1844  0F1F                     	;# 
  1845  0F20                     	;# 
  1846  0F21                     	;# 
  1847  0F22                     	;# 
  1848  0F23                     	;# 
  1849  0F24                     	;# 
  1850  0F25                     	;# 
  1851  0F26                     	;# 
  1852  0F27                     	;# 
  1853  0F28                     	;# 
  1854  0F29                     	;# 
  1855  0F2A                     	;# 
  1856  0F2B                     	;# 
  1857  0F2C                     	;# 
  1858  0F2D                     	;# 
  1859  0F2E                     	;# 
  1860  0F2F                     	;# 
  1861  0F30                     	;# 
  1862  0F31                     	;# 
  1863  0F32                     	;# 
  1864  0F33                     	;# 
  1865  0F34                     	;# 
  1866  0F35                     	;# 
  1867  0F36                     	;# 
  1868  0F37                     	;# 
  1869  0FE4                     	;# 
  1870  0FE5                     	;# 
  1871  0FE6                     	;# 
  1872  0FE7                     	;# 
  1873  0FE8                     	;# 
  1874  0FE9                     	;# 
  1875  0FEA                     	;# 
  1876  0FEB                     	;# 
  1877  0FED                     	;# 
  1878  0FEE                     	;# 
  1879  0FEF                     	;# 
  1880  0000                     	;# 
  1881  0001                     	;# 
  1882  0002                     	;# 
  1883  0003                     	;# 
  1884  0004                     	;# 
  1885  0005                     	;# 
  1886  0006                     	;# 
  1887  0007                     	;# 
  1888  0008                     	;# 
  1889  0009                     	;# 
  1890  000A                     	;# 
  1891  000B                     	;# 
  1892  000C                     	;# 
  1893  000D                     	;# 
  1894  000E                     	;# 
  1895  0010                     	;# 
  1896  0011                     	;# 
  1897  0012                     	;# 
  1898  0013                     	;# 
  1899  0014                     	;# 
  1900  0015                     	;# 
  1901  0016                     	;# 
  1902  0016                     	;# 
  1903  0017                     	;# 
  1904  0018                     	;# 
  1905  0019                     	;# 
  1906  001A                     	;# 
  1907  001A                     	;# 
  1908  001B                     	;# 
  1909  001B                     	;# 
  1910  001C                     	;# 
  1911  001D                     	;# 
  1912  001E                     	;# 
  1913  001F                     	;# 
  1914  008C                     	;# 
  1915  008D                     	;# 
  1916  008E                     	;# 
  1917  0090                     	;# 
  1918  0091                     	;# 
  1919  0092                     	;# 
  1920  0093                     	;# 
  1921  0094                     	;# 
  1922  0095                     	;# 
  1923  0096                     	;# 
  1924  0098                     	;# 
  1925  0099                     	;# 
  1926  009A                     	;# 
  1927  009B                     	;# 
  1928  009B                     	;# 
  1929  009C                     	;# 
  1930  009D                     	;# 
  1931  009E                     	;# 
  1932  009F                     	;# 
  1933  010C                     	;# 
  1934  010D                     	;# 
  1935  010E                     	;# 
  1936  0111                     	;# 
  1937  0112                     	;# 
  1938  0113                     	;# 
  1939  0114                     	;# 
  1940  0115                     	;# 
  1941  0116                     	;# 
  1942  0117                     	;# 
  1943  0118                     	;# 
  1944  0119                     	;# 
  1945  011C                     	;# 
  1946  018C                     	;# 
  1947  018D                     	;# 
  1948  018E                     	;# 
  1949  0191                     	;# 
  1950  0191                     	;# 
  1951  0192                     	;# 
  1952  0193                     	;# 
  1953  0193                     	;# 
  1954  0194                     	;# 
  1955  0195                     	;# 
  1956  0196                     	;# 
  1957  0197                     	;# 
  1958  0199                     	;# 
  1959  0199                     	;# 
  1960  0199                     	;# 
  1961  019A                     	;# 
  1962  019A                     	;# 
  1963  019A                     	;# 
  1964  019B                     	;# 
  1965  019B                     	;# 
  1966  019B                     	;# 
  1967  019B                     	;# 
  1968  019B                     	;# 
  1969  019C                     	;# 
  1970  019C                     	;# 
  1971  019C                     	;# 
  1972  019D                     	;# 
  1973  019D                     	;# 
  1974  019D                     	;# 
  1975  019E                     	;# 
  1976  019E                     	;# 
  1977  019E                     	;# 
  1978  019F                     	;# 
  1979  019F                     	;# 
  1980  019F                     	;# 
  1981  019F                     	;# 
  1982  019F                     	;# 
  1983  020C                     	;# 
  1984  020D                     	;# 
  1985  020E                     	;# 
  1986  0211                     	;# 
  1987  0211                     	;# 
  1988  0212                     	;# 
  1989  0212                     	;# 
  1990  0213                     	;# 
  1991  0213                     	;# 
  1992  0214                     	;# 
  1993  0214                     	;# 
  1994  0215                     	;# 
  1995  0215                     	;# 
  1996  0215                     	;# 
  1997  0215                     	;# 
  1998  0216                     	;# 
  1999  0216                     	;# 
  2000  0217                     	;# 
  2001  0217                     	;# 
  2002  028C                     	;# 
  2003  028D                     	;# 
  2004  028E                     	;# 
  2005  0291                     	;# 
  2006  0291                     	;# 
  2007  0292                     	;# 
  2008  0293                     	;# 
  2009  0294                     	;# 
  2010  0298                     	;# 
  2011  0298                     	;# 
  2012  0299                     	;# 
  2013  029A                     	;# 
  2014  029B                     	;# 
  2015  029E                     	;# 
  2016  030C                     	;# 
  2017  030D                     	;# 
  2018  030E                     	;# 
  2019  038C                     	;# 
  2020  038D                     	;# 
  2021  038E                     	;# 
  2022  0391                     	;# 
  2023  0392                     	;# 
  2024  0393                     	;# 
  2025  0394                     	;# 
  2026  0395                     	;# 
  2027  0396                     	;# 
  2028  0397                     	;# 
  2029  0398                     	;# 
  2030  0399                     	;# 
  2031  040E                     	;# 
  2032  0413                     	;# 
  2033  0413                     	;# 
  2034  0414                     	;# 
  2035  0414                     	;# 
  2036  0415                     	;# 
  2037  0416                     	;# 
  2038  0417                     	;# 
  2039  0418                     	;# 
  2040  041A                     	;# 
  2041  041A                     	;# 
  2042  041B                     	;# 
  2043  041B                     	;# 
  2044  041C                     	;# 
  2045  041D                     	;# 
  2046  041E                     	;# 
  2047  041F                     	;# 
  2048  0493                     	;# 
  2049  0494                     	;# 
  2050  0495                     	;# 
  2051  0496                     	;# 
  2052  049A                     	;# 
  2053  049B                     	;# 
  2054  049C                     	;# 
  2055  049D                     	;# 
  2056  058C                     	;# 
  2057  058C                     	;# 
  2058  058D                     	;# 
  2059  058E                     	;# 
  2060  058E                     	;# 
  2061  058F                     	;# 
  2062  0590                     	;# 
  2063  0590                     	;# 
  2064  0591                     	;# 
  2065  0592                     	;# 
  2066  0592                     	;# 
  2067  0593                     	;# 
  2068  0594                     	;# 
  2069  0594                     	;# 
  2070  0595                     	;# 
  2071  0596                     	;# 
  2072  0596                     	;# 
  2073  0597                     	;# 
  2074  0598                     	;# 
  2075  0599                     	;# 
  2076  059A                     	;# 
  2077  059B                     	;# 
  2078  059B                     	;# 
  2079  059C                     	;# 
  2080  059D                     	;# 
  2081  060C                     	;# 
  2082  060C                     	;# 
  2083  060D                     	;# 
  2084  060E                     	;# 
  2085  060F                     	;# 
  2086  060F                     	;# 
  2087  0610                     	;# 
  2088  0611                     	;# 
  2089  0612                     	;# 
  2090  0613                     	;# 
  2091  0614                     	;# 
  2092  0617                     	;# 
  2093  0617                     	;# 
  2094  0618                     	;# 
  2095  0619                     	;# 
  2096  061A                     	;# 
  2097  061A                     	;# 
  2098  061B                     	;# 
  2099  061C                     	;# 
  2100  0691                     	;# 
  2101  0692                     	;# 
  2102  0693                     	;# 
  2103  0694                     	;# 
  2104  0695                     	;# 
  2105  0696                     	;# 
  2106  0697                     	;# 
  2107  0699                     	;# 
  2108  069A                     	;# 
  2109  0711                     	;# 
  2110  0712                     	;# 
  2111  0713                     	;# 
  2112  0714                     	;# 
  2113  0715                     	;# 
  2114  0718                     	;# 
  2115  0718                     	;# 
  2116  0719                     	;# 
  2117  071A                     	;# 
  2118  071A                     	;# 
  2119  071B                     	;# 
  2120  071C                     	;# 
  2121  071D                     	;# 
  2122  0791                     	;# 
  2123  0791                     	;# 
  2124  0792                     	;# 
  2125  0793                     	;# 
  2126  0793                     	;# 
  2127  0794                     	;# 
  2128  0795                     	;# 
  2129  0795                     	;# 
  2130  0796                     	;# 
  2131  0797                     	;# 
  2132  0797                     	;# 
  2133  0798                     	;# 
  2134  0799                     	;# 
  2135  079A                     	;# 
  2136  080C                     	;# 
  2137  080C                     	;# 
  2138  080D                     	;# 
  2139  080E                     	;# 
  2140  080E                     	;# 
  2141  080F                     	;# 
  2142  0810                     	;# 
  2143  0810                     	;# 
  2144  0811                     	;# 
  2145  0812                     	;# 
  2146  0812                     	;# 
  2147  0813                     	;# 
  2148  0814                     	;# 
  2149  0815                     	;# 
  2150  0816                     	;# 
  2151  0817                     	;# 
  2152  0818                     	;# 
  2153  0819                     	;# 
  2154  081A                     	;# 
  2155  081A                     	;# 
  2156  081B                     	;# 
  2157  081C                     	;# 
  2158  081C                     	;# 
  2159  081D                     	;# 
  2160  088C                     	;# 
  2161  088D                     	;# 
  2162  088E                     	;# 
  2163  088F                     	;# 
  2164  088F                     	;# 
  2165  0890                     	;# 
  2166  0891                     	;# 
  2167  0892                     	;# 
  2168  0893                     	;# 
  2169  0893                     	;# 
  2170  0894                     	;# 
  2171  0895                     	;# 
  2172  0896                     	;# 
  2173  0897                     	;# 
  2174  0897                     	;# 
  2175  0898                     	;# 
  2176  0899                     	;# 
  2177  0D8C                     	;# 
  2178  0D8C                     	;# 
  2179  0D8D                     	;# 
  2180  0D8E                     	;# 
  2181  0D8F                     	;# 
  2182  0D8F                     	;# 
  2183  0D90                     	;# 
  2184  0D91                     	;# 
  2185  0D92                     	;# 
  2186  0D92                     	;# 
  2187  0D93                     	;# 
  2188  0D94                     	;# 
  2189  0D95                     	;# 
  2190  0D95                     	;# 
  2191  0D96                     	;# 
  2192  0D97                     	;# 
  2193  0D98                     	;# 
  2194  0D99                     	;# 
  2195  0D9A                     	;# 
  2196  0D9B                     	;# 
  2197  0D9C                     	;# 
  2198  0D9D                     	;# 
  2199  0D9E                     	;# 
  2200  0D9E                     	;# 
  2201  0D9F                     	;# 
  2202  0DA0                     	;# 
  2203  0DA1                     	;# 
  2204  0DA1                     	;# 
  2205  0DA2                     	;# 
  2206  0DA3                     	;# 
  2207  0DA4                     	;# 
  2208  0DA4                     	;# 
  2209  0DA5                     	;# 
  2210  0DA6                     	;# 
  2211  0DA7                     	;# 
  2212  0DA7                     	;# 
  2213  0DA8                     	;# 
  2214  0DA9                     	;# 
  2215  0DAA                     	;# 
  2216  0DAB                     	;# 
  2217  0DAC                     	;# 
  2218  0DAD                     	;# 
  2219  0DAE                     	;# 
  2220  0DAF                     	;# 
  2221  0E0F                     	;# 
  2222  0E10                     	;# 
  2223  0E11                     	;# 
  2224  0E12                     	;# 
  2225  0E13                     	;# 
  2226  0E14                     	;# 
  2227  0E15                     	;# 
  2228  0E16                     	;# 
  2229  0E17                     	;# 
  2230  0E18                     	;# 
  2231  0E19                     	;# 
  2232  0E1A                     	;# 
  2233  0E1B                     	;# 
  2234  0E1C                     	;# 
  2235  0E1D                     	;# 
  2236  0E1E                     	;# 
  2237  0E1F                     	;# 
  2238  0E20                     	;# 
  2239  0E21                     	;# 
  2240  0E22                     	;# 
  2241  0E23                     	;# 
  2242  0E24                     	;# 
  2243  0E25                     	;# 
  2244  0E26                     	;# 
  2245  0E27                     	;# 
  2246  0E28                     	;# 
  2247  0E29                     	;# 
  2248  0E2A                     	;# 
  2249  0E2B                     	;# 
  2250  0E2C                     	;# 
  2251  0E2D                     	;# 
  2252  0E2E                     	;# 
  2253  0E90                     	;# 
  2254  0E91                     	;# 
  2255  0E92                     	;# 
  2256  0E94                     	;# 
  2257  0E95                     	;# 
  2258  0E9C                     	;# 
  2259  0E9D                     	;# 
  2260  0E9E                     	;# 
  2261  0E9F                     	;# 
  2262  0EA0                     	;# 
  2263  0EA1                     	;# 
  2264  0EA2                     	;# 
  2265  0EA3                     	;# 
  2266  0EA4                     	;# 
  2267  0EA5                     	;# 
  2268  0EA6                     	;# 
  2269  0EA7                     	;# 
  2270  0F0F                     	;# 
  2271  0F10                     	;# 
  2272  0F11                     	;# 
  2273  0F12                     	;# 
  2274  0F13                     	;# 
  2275  0F14                     	;# 
  2276  0F15                     	;# 
  2277  0F16                     	;# 
  2278  0F17                     	;# 
  2279  0F18                     	;# 
  2280  0F19                     	;# 
  2281  0F1A                     	;# 
  2282  0F1B                     	;# 
  2283  0F1C                     	;# 
  2284  0F1D                     	;# 
  2285  0F1E                     	;# 
  2286  0F1F                     	;# 
  2287  0F20                     	;# 
  2288  0F21                     	;# 
  2289  0F22                     	;# 
  2290  0F23                     	;# 
  2291  0F24                     	;# 
  2292  0F25                     	;# 
  2293  0F26                     	;# 
  2294  0F27                     	;# 
  2295  0F28                     	;# 
  2296  0F29                     	;# 
  2297  0F2A                     	;# 
  2298  0F2B                     	;# 
  2299  0F2C                     	;# 
  2300  0F2D                     	;# 
  2301  0F2E                     	;# 
  2302  0F2F                     	;# 
  2303  0F30                     	;# 
  2304  0F31                     	;# 
  2305  0F32                     	;# 
  2306  0F33                     	;# 
  2307  0F34                     	;# 
  2308  0F35                     	;# 
  2309  0F36                     	;# 
  2310  0F37                     	;# 
  2311  0FE4                     	;# 
  2312  0FE5                     	;# 
  2313  0FE6                     	;# 
  2314  0FE7                     	;# 
  2315  0FE8                     	;# 
  2316  0FE9                     	;# 
  2317  0FEA                     	;# 
  2318  0FEB                     	;# 
  2319  0FED                     	;# 
  2320  0FEE                     	;# 
  2321  0FEF                     	;# 
  2322  0000                     	;# 
  2323  0001                     	;# 
  2324  0002                     	;# 
  2325  0003                     	;# 
  2326  0004                     	;# 
  2327  0005                     	;# 
  2328  0006                     	;# 
  2329  0007                     	;# 
  2330  0008                     	;# 
  2331  0009                     	;# 
  2332  000A                     	;# 
  2333  000B                     	;# 
  2334  000C                     	;# 
  2335  000D                     	;# 
  2336  000E                     	;# 
  2337  0010                     	;# 
  2338  0011                     	;# 
  2339  0012                     	;# 
  2340  0013                     	;# 
  2341  0014                     	;# 
  2342  0015                     	;# 
  2343  0016                     	;# 
  2344  0016                     	;# 
  2345  0017                     	;# 
  2346  0018                     	;# 
  2347  0019                     	;# 
  2348  001A                     	;# 
  2349  001A                     	;# 
  2350  001B                     	;# 
  2351  001B                     	;# 
  2352  001C                     	;# 
  2353  001D                     	;# 
  2354  001E                     	;# 
  2355  001F                     	;# 
  2356  008C                     	;# 
  2357  008D                     	;# 
  2358  008E                     	;# 
  2359  0090                     	;# 
  2360  0091                     	;# 
  2361  0092                     	;# 
  2362  0093                     	;# 
  2363  0094                     	;# 
  2364  0095                     	;# 
  2365  0096                     	;# 
  2366  0098                     	;# 
  2367  0099                     	;# 
  2368  009A                     	;# 
  2369  009B                     	;# 
  2370  009B                     	;# 
  2371  009C                     	;# 
  2372  009D                     	;# 
  2373  009E                     	;# 
  2374  009F                     	;# 
  2375  010C                     	;# 
  2376  010D                     	;# 
  2377  010E                     	;# 
  2378  0111                     	;# 
  2379  0112                     	;# 
  2380  0113                     	;# 
  2381  0114                     	;# 
  2382  0115                     	;# 
  2383  0116                     	;# 
  2384  0117                     	;# 
  2385  0118                     	;# 
  2386  0119                     	;# 
  2387  011C                     	;# 
  2388  018C                     	;# 
  2389  018D                     	;# 
  2390  018E                     	;# 
  2391  0191                     	;# 
  2392  0191                     	;# 
  2393  0192                     	;# 
  2394  0193                     	;# 
  2395  0193                     	;# 
  2396  0194                     	;# 
  2397  0195                     	;# 
  2398  0196                     	;# 
  2399  0197                     	;# 
  2400  0199                     	;# 
  2401  0199                     	;# 
  2402  0199                     	;# 
  2403  019A                     	;# 
  2404  019A                     	;# 
  2405  019A                     	;# 
  2406  019B                     	;# 
  2407  019B                     	;# 
  2408  019B                     	;# 
  2409  019B                     	;# 
  2410  019B                     	;# 
  2411  019C                     	;# 
  2412  019C                     	;# 
  2413  019C                     	;# 
  2414  019D                     	;# 
  2415  019D                     	;# 
  2416  019D                     	;# 
  2417  019E                     	;# 
  2418  019E                     	;# 
  2419  019E                     	;# 
  2420  019F                     	;# 
  2421  019F                     	;# 
  2422  019F                     	;# 
  2423  019F                     	;# 
  2424  019F                     	;# 
  2425  020C                     	;# 
  2426  020D                     	;# 
  2427  020E                     	;# 
  2428  0211                     	;# 
  2429  0211                     	;# 
  2430  0212                     	;# 
  2431  0212                     	;# 
  2432  0213                     	;# 
  2433  0213                     	;# 
  2434  0214                     	;# 
  2435  0214                     	;# 
  2436  0215                     	;# 
  2437  0215                     	;# 
  2438  0215                     	;# 
  2439  0215                     	;# 
  2440  0216                     	;# 
  2441  0216                     	;# 
  2442  0217                     	;# 
  2443  0217                     	;# 
  2444  028C                     	;# 
  2445  028D                     	;# 
  2446  028E                     	;# 
  2447  0291                     	;# 
  2448  0291                     	;# 
  2449  0292                     	;# 
  2450  0293                     	;# 
  2451  0294                     	;# 
  2452  0298                     	;# 
  2453  0298                     	;# 
  2454  0299                     	;# 
  2455  029A                     	;# 
  2456  029B                     	;# 
  2457  029E                     	;# 
  2458  030C                     	;# 
  2459  030D                     	;# 
  2460  030E                     	;# 
  2461  038C                     	;# 
  2462  038D                     	;# 
  2463  038E                     	;# 
  2464  0391                     	;# 
  2465  0392                     	;# 
  2466  0393                     	;# 
  2467  0394                     	;# 
  2468  0395                     	;# 
  2469  0396                     	;# 
  2470  0397                     	;# 
  2471  0398                     	;# 
  2472  0399                     	;# 
  2473  040E                     	;# 
  2474  0413                     	;# 
  2475  0413                     	;# 
  2476  0414                     	;# 
  2477  0414                     	;# 
  2478  0415                     	;# 
  2479  0416                     	;# 
  2480  0417                     	;# 
  2481  0418                     	;# 
  2482  041A                     	;# 
  2483  041A                     	;# 
  2484  041B                     	;# 
  2485  041B                     	;# 
  2486  041C                     	;# 
  2487  041D                     	;# 
  2488  041E                     	;# 
  2489  041F                     	;# 
  2490  0493                     	;# 
  2491  0494                     	;# 
  2492  0495                     	;# 
  2493  0496                     	;# 
  2494  049A                     	;# 
  2495  049B                     	;# 
  2496  049C                     	;# 
  2497  049D                     	;# 
  2498  058C                     	;# 
  2499  058C                     	;# 
  2500  058D                     	;# 
  2501  058E                     	;# 
  2502  058E                     	;# 
  2503  058F                     	;# 
  2504  0590                     	;# 
  2505  0590                     	;# 
  2506  0591                     	;# 
  2507  0592                     	;# 
  2508  0592                     	;# 
  2509  0593                     	;# 
  2510  0594                     	;# 
  2511  0594                     	;# 
  2512  0595                     	;# 
  2513  0596                     	;# 
  2514  0596                     	;# 
  2515  0597                     	;# 
  2516  0598                     	;# 
  2517  0599                     	;# 
  2518  059A                     	;# 
  2519  059B                     	;# 
  2520  059B                     	;# 
  2521  059C                     	;# 
  2522  059D                     	;# 
  2523  060C                     	;# 
  2524  060C                     	;# 
  2525  060D                     	;# 
  2526  060E                     	;# 
  2527  060F                     	;# 
  2528  060F                     	;# 
  2529  0610                     	;# 
  2530  0611                     	;# 
  2531  0612                     	;# 
  2532  0613                     	;# 
  2533  0614                     	;# 
  2534  0617                     	;# 
  2535  0617                     	;# 
  2536  0618                     	;# 
  2537  0619                     	;# 
  2538  061A                     	;# 
  2539  061A                     	;# 
  2540  061B                     	;# 
  2541  061C                     	;# 
  2542  0691                     	;# 
  2543  0692                     	;# 
  2544  0693                     	;# 
  2545  0694                     	;# 
  2546  0695                     	;# 
  2547  0696                     	;# 
  2548  0697                     	;# 
  2549  0699                     	;# 
  2550  069A                     	;# 
  2551  0711                     	;# 
  2552  0712                     	;# 
  2553  0713                     	;# 
  2554  0714                     	;# 
  2555  0715                     	;# 
  2556  0718                     	;# 
  2557  0718                     	;# 
  2558  0719                     	;# 
  2559  071A                     	;# 
  2560  071A                     	;# 
  2561  071B                     	;# 
  2562  071C                     	;# 
  2563  071D                     	;# 
  2564  0791                     	;# 
  2565  0791                     	;# 
  2566  0792                     	;# 
  2567  0793                     	;# 
  2568  0793                     	;# 
  2569  0794                     	;# 
  2570  0795                     	;# 
  2571  0795                     	;# 
  2572  0796                     	;# 
  2573  0797                     	;# 
  2574  0797                     	;# 
  2575  0798                     	;# 
  2576  0799                     	;# 
  2577  079A                     	;# 
  2578  080C                     	;# 
  2579  080C                     	;# 
  2580  080D                     	;# 
  2581  080E                     	;# 
  2582  080E                     	;# 
  2583  080F                     	;# 
  2584  0810                     	;# 
  2585  0810                     	;# 
  2586  0811                     	;# 
  2587  0812                     	;# 
  2588  0812                     	;# 
  2589  0813                     	;# 
  2590  0814                     	;# 
  2591  0815                     	;# 
  2592  0816                     	;# 
  2593  0817                     	;# 
  2594  0818                     	;# 
  2595  0819                     	;# 
  2596  081A                     	;# 
  2597  081A                     	;# 
  2598  081B                     	;# 
  2599  081C                     	;# 
  2600  081C                     	;# 
  2601  081D                     	;# 
  2602  088C                     	;# 
  2603  088D                     	;# 
  2604  088E                     	;# 
  2605  088F                     	;# 
  2606  088F                     	;# 
  2607  0890                     	;# 
  2608  0891                     	;# 
  2609  0892                     	;# 
  2610  0893                     	;# 
  2611  0893                     	;# 
  2612  0894                     	;# 
  2613  0895                     	;# 
  2614  0896                     	;# 
  2615  0897                     	;# 
  2616  0897                     	;# 
  2617  0898                     	;# 
  2618  0899                     	;# 
  2619  0D8C                     	;# 
  2620  0D8C                     	;# 
  2621  0D8D                     	;# 
  2622  0D8E                     	;# 
  2623  0D8F                     	;# 
  2624  0D8F                     	;# 
  2625  0D90                     	;# 
  2626  0D91                     	;# 
  2627  0D92                     	;# 
  2628  0D92                     	;# 
  2629  0D93                     	;# 
  2630  0D94                     	;# 
  2631  0D95                     	;# 
  2632  0D95                     	;# 
  2633  0D96                     	;# 
  2634  0D97                     	;# 
  2635  0D98                     	;# 
  2636  0D99                     	;# 
  2637  0D9A                     	;# 
  2638  0D9B                     	;# 
  2639  0D9C                     	;# 
  2640  0D9D                     	;# 
  2641  0D9E                     	;# 
  2642  0D9E                     	;# 
  2643  0D9F                     	;# 
  2644  0DA0                     	;# 
  2645  0DA1                     	;# 
  2646  0DA1                     	;# 
  2647  0DA2                     	;# 
  2648  0DA3                     	;# 
  2649  0DA4                     	;# 
  2650  0DA4                     	;# 
  2651  0DA5                     	;# 
  2652  0DA6                     	;# 
  2653  0DA7                     	;# 
  2654  0DA7                     	;# 
  2655  0DA8                     	;# 
  2656  0DA9                     	;# 
  2657  0DAA                     	;# 
  2658  0DAB                     	;# 
  2659  0DAC                     	;# 
  2660  0DAD                     	;# 
  2661  0DAE                     	;# 
  2662  0DAF                     	;# 
  2663  0E0F                     	;# 
  2664  0E10                     	;# 
  2665  0E11                     	;# 
  2666  0E12                     	;# 
  2667  0E13                     	;# 
  2668  0E14                     	;# 
  2669  0E15                     	;# 
  2670  0E16                     	;# 
  2671  0E17                     	;# 
  2672  0E18                     	;# 
  2673  0E19                     	;# 
  2674  0E1A                     	;# 
  2675  0E1B                     	;# 
  2676  0E1C                     	;# 
  2677  0E1D                     	;# 
  2678  0E1E                     	;# 
  2679  0E1F                     	;# 
  2680  0E20                     	;# 
  2681  0E21                     	;# 
  2682  0E22                     	;# 
  2683  0E23                     	;# 
  2684  0E24                     	;# 
  2685  0E25                     	;# 
  2686  0E26                     	;# 
  2687  0E27                     	;# 
  2688  0E28                     	;# 
  2689  0E29                     	;# 
  2690  0E2A                     	;# 
  2691  0E2B                     	;# 
  2692  0E2C                     	;# 
  2693  0E2D                     	;# 
  2694  0E2E                     	;# 
  2695  0E90                     	;# 
  2696  0E91                     	;# 
  2697  0E92                     	;# 
  2698  0E94                     	;# 
  2699  0E95                     	;# 
  2700  0E9C                     	;# 
  2701  0E9D                     	;# 
  2702  0E9E                     	;# 
  2703  0E9F                     	;# 
  2704  0EA0                     	;# 
  2705  0EA1                     	;# 
  2706  0EA2                     	;# 
  2707  0EA3                     	;# 
  2708  0EA4                     	;# 
  2709  0EA5                     	;# 
  2710  0EA6                     	;# 
  2711  0EA7                     	;# 
  2712  0F0F                     	;# 
  2713  0F10                     	;# 
  2714  0F11                     	;# 
  2715  0F12                     	;# 
  2716  0F13                     	;# 
  2717  0F14                     	;# 
  2718  0F15                     	;# 
  2719  0F16                     	;# 
  2720  0F17                     	;# 
  2721  0F18                     	;# 
  2722  0F19                     	;# 
  2723  0F1A                     	;# 
  2724  0F1B                     	;# 
  2725  0F1C                     	;# 
  2726  0F1D                     	;# 
  2727  0F1E                     	;# 
  2728  0F1F                     	;# 
  2729  0F20                     	;# 
  2730  0F21                     	;# 
  2731  0F22                     	;# 
  2732  0F23                     	;# 
  2733  0F24                     	;# 
  2734  0F25                     	;# 
  2735  0F26                     	;# 
  2736  0F27                     	;# 
  2737  0F28                     	;# 
  2738  0F29                     	;# 
  2739  0F2A                     	;# 
  2740  0F2B                     	;# 
  2741  0F2C                     	;# 
  2742  0F2D                     	;# 
  2743  0F2E                     	;# 
  2744  0F2F                     	;# 
  2745  0F30                     	;# 
  2746  0F31                     	;# 
  2747  0F32                     	;# 
  2748  0F33                     	;# 
  2749  0F34                     	;# 
  2750  0F35                     	;# 
  2751  0F36                     	;# 
  2752  0F37                     	;# 
  2753  0FE4                     	;# 
  2754  0FE5                     	;# 
  2755  0FE6                     	;# 
  2756  0FE7                     	;# 
  2757  0FE8                     	;# 
  2758  0FE9                     	;# 
  2759  0FEA                     	;# 
  2760  0FEB                     	;# 
  2761  0FED                     	;# 
  2762  0FEE                     	;# 
  2763  0FEF                     	;# 
  2764                           
  2765                           	psect	idataBANK1
  2766  0C6F                     __pidataBANK1:	
  2767                           
  2768                           ;initializer for stoa@F1139
  2769  0C6F  3428               	retlw	40
  2770  0C70  346E               	retlw	110
  2771  0C71  3475               	retlw	117
  2772  0C72  346C               	retlw	108
  2773  0C73  346C               	retlw	108
  2774  0C74  3429               	retlw	41
  2775  0C75  3400               	retlw	0
  2776                           
  2777                           	psect	idataBANK5
  2778  0E0F                     __pidataBANK5:	
  2779                           
  2780                           ;initializer for _setNavFlightMode
  2781  0E0F  34B5               	retlw	181
  2782  0E10  3462               	retlw	98
  2783  0E11  3406               	retlw	6
  2784  0E12  3424               	retlw	36
  2785  0E13  3424               	retlw	36
  2786  0E14  3400               	retlw	0
  2787  0E15  34FF               	retlw	255
  2788  0E16  34FF               	retlw	255
  2789  0E17  3406               	retlw	6
  2790  0E18  3403               	retlw	3
  2791  0E19  3400               	retlw	0
  2792  0E1A  3400               	retlw	0
  2793  0E1B  3400               	retlw	0
  2794  0E1C  3400               	retlw	0
  2795  0E1D  3410               	retlw	16
  2796  0E1E  3427               	retlw	39
  2797  0E1F  3400               	retlw	0
  2798  0E20  3400               	retlw	0
  2799  0E21  3405               	retlw	5
  2800  0E22  3400               	retlw	0
  2801  0E23  34FA               	retlw	250
  2802  0E24  3400               	retlw	0
  2803  0E25  34FA               	retlw	250
  2804  0E26  3400               	retlw	0
  2805  0E27  3464               	retlw	100
  2806  0E28  3400               	retlw	0
  2807  0E29  342C               	retlw	44
  2808  0E2A  3401               	retlw	1
  2809  0E2B  3400               	retlw	0
  2810  0E2C  3400               	retlw	0
  2811  0E2D  3400               	retlw	0
  2812  0E2E  3400               	retlw	0
  2813  0E2F  3400               	retlw	0
  2814  0E30  3400               	retlw	0
  2815  0E31  3400               	retlw	0
  2816  0E32  3400               	retlw	0
  2817  0E33  3400               	retlw	0
  2818  0E34  3400               	retlw	0
  2819  0E35  3400               	retlw	0
  2820  0E36  3400               	retlw	0
  2821  0E37  3400               	retlw	0
  2822  0E38  3400               	retlw	0
  2823  0E39  3416               	retlw	22
  2824  0E3A  34DC               	retlw	220
  2825                           
  2826                           	psect	stringtext1
  2827  10C0                     __pstringtext1:	
  2828  10C0                     _DELAY_MULT:	
  2829  10C0  34E8               	retlw	232
  2830  10C1  3403               	retlw	3
  2831  10C2                     __end_of_DELAY_MULT:	
  2832                           
  2833                           	psect	stringtext2
  2834  10C2                     __pstringtext2:	
  2835  10C2                     _BAUD_RATE:	
  2836  10C2  3432               	retlw	50
  2837  10C3  3400               	retlw	0
  2838  10C4                     __end_of_BAUD_RATE:	
  2839                           
  2840                           	psect	stringtext3
  2841  10C4                     __pstringtext3:	
  2842  10C4                     _MESSAGE_INTERVAL:	
  2843  10C4  3405               	retlw	5
  2844  10C5  3400               	retlw	0
  2845  10C6                     __end_of_MESSAGE_INTERVAL:	
  2846                           
  2847                           	psect	nvBANK1
  2848  00E9                     __pnvBANK1:	
  2849  00E9                     _TMR1_InterruptHandler:	
  2850  00E9                     	ds	2
  2851  00EB                     _timer1ReloadVal:	
  2852  00EB                     	ds	2
  2853  000B                     _INTCONbits	set	11
  2854  0019                     _T1GCONbits	set	25
  2855  0018                     _T1CONbits	set	24
  2856  0018                     _T1CON	set	24
  2857  0016                     _TMR1L	set	22
  2858  0017                     _TMR1H	set	23
  2859  0019                     _T1GCON	set	25
  2860  0010                     _PIR1bits	set	16
  2861  00C0                     _TMR1ON	set	192
  2862  005F                     _GIE	set	95
  2863  005E                     _PEIE	set	94
  2864  0080                     _TMR1IF	set	128
  2865  0090                     _PIE1bits	set	144
  2866  0095                     _OPTION_REGbits	set	149
  2867  008E                     _TRISC	set	142
  2868  008D                     _TRISB	set	141
  2869  008C                     _TRISA	set	140
  2870  0098                     _OSCTUNE	set	152
  2871  0099                     _OSCCON	set	153
  2872  0480                     _TMR1IE	set	1152
  2873  010E                     _LATCbits	set	270
  2874  010C                     _LATAbits	set	268
  2875  010E                     _LATC	set	270
  2876  010D                     _LATB	set	269
  2877  010C                     _LATA	set	268
  2878  0116                     _BORCON	set	278
  2879  019A                     _TX1REG	set	410
  2880  0199                     _RC1REG	set	409
  2881  019D                     _RC1STAbits	set	413
  2882  019E                     _TX1STAbits	set	414
  2883  019C                     _SPBRGH	set	412
  2884  019B                     _SPBRGL	set	411
  2885  019E                     _TX1STA	set	414
  2886  019D                     _RC1STA	set	413
  2887  019F                     _BAUD1CON	set	415
  2888  018C                     _ANSELA	set	396
  2889  018D                     _ANSELB	set	397
  2890  018E                     _ANSELC	set	398
  2891  020E                     _WPUC	set	526
  2892  020C                     _WPUA	set	524
  2893  020D                     _WPUB	set	525
  2894  028E                     _ODCONC	set	654
  2895  028D                     _ODCONB	set	653
  2896  028C                     _ODCONA	set	652
  2897  030E                     _SLRCONC	set	782
  2898  030D                     _SLRCONB	set	781
  2899  030C                     _SLRCONA	set	780
  2900  0E24                     _RXPPS	set	3620
  2901  0E9F                     _RB7PPS	set	3743
  2902                           
  2903                           	psect	stringtext4
  2904  1000                     __pstringtext4:	
  2905  1000                     STR_2:	
  2906  1000  3424               	retlw	36	;'$'
  2907  1001  3450               	retlw	80	;'P'
  2908  1002  3455               	retlw	85	;'U'
  2909  1003  3442               	retlw	66	;'B'
  2910  1004  3458               	retlw	88	;'X'
  2911  1005  342C               	retlw	44	;','
  2912  1006  3434               	retlw	52	;'4'
  2913  1007  3430               	retlw	48	;'0'
  2914  1008  342C               	retlw	44	;','
  2915  1009  3447               	retlw	71	;'G'
  2916  100A  3447               	retlw	71	;'G'
  2917  100B  3441               	retlw	65	;'A'
  2918  100C  342C               	retlw	44	;','
  2919  100D  3430               	retlw	48	;'0'
  2920  100E  342C               	retlw	44	;','
  2921  100F  3430               	retlw	48	;'0'
  2922  1010  342C               	retlw	44	;','
  2923  1011  3430               	retlw	48	;'0'
  2924  1012  342C               	retlw	44	;','
  2925  1013  3430               	retlw	48	;'0'
  2926  1014  342A               	retlw	42	;'*'
  2927  1015  3434               	retlw	52	;'4'
  2928  1016  3434               	retlw	52	;'4'
  2929  1017  340D               	retlw	13
  2930  1018  340A               	retlw	10
  2931  1019  3400               	retlw	0
  2932                           
  2933                           	psect	stringtext5
  2934  101A                     __pstringtext5:	
  2935  101A                     STR_6:	
  2936  101A  3424               	retlw	36	;'$'
  2937  101B  3450               	retlw	80	;'P'
  2938  101C  3455               	retlw	85	;'U'
  2939  101D  3442               	retlw	66	;'B'
  2940  101E  3458               	retlw	88	;'X'
  2941  101F  342C               	retlw	44	;','
  2942  1020  3434               	retlw	52	;'4'
  2943  1021  3430               	retlw	48	;'0'
  2944  1022  342C               	retlw	44	;','
  2945  1023  3452               	retlw	82	;'R'
  2946  1024  344D               	retlw	77	;'M'
  2947  1025  3443               	retlw	67	;'C'
  2948  1026  342C               	retlw	44	;','
  2949  1027  3430               	retlw	48	;'0'
  2950  1028  342C               	retlw	44	;','
  2951  1029  3430               	retlw	48	;'0'
  2952  102A  342C               	retlw	44	;','
  2953  102B  3430               	retlw	48	;'0'
  2954  102C  342C               	retlw	44	;','
  2955  102D  3430               	retlw	48	;'0'
  2956  102E  342A               	retlw	42	;'*'
  2957  102F  3434               	retlw	52	;'4'
  2958  1030  3437               	retlw	55	;'7'
  2959  1031  340D               	retlw	13
  2960  1032  340A               	retlw	10
  2961  1033  3400               	retlw	0
  2962                           
  2963                           	psect	stringtext6
  2964  1034                     __pstringtext6:	
  2965  1034                     STR_4:	
  2966  1034  3424               	retlw	36	;'$'
  2967  1035  3450               	retlw	80	;'P'
  2968  1036  3455               	retlw	85	;'U'
  2969  1037  3442               	retlw	66	;'B'
  2970  1038  3458               	retlw	88	;'X'
  2971  1039  342C               	retlw	44	;','
  2972  103A  3434               	retlw	52	;'4'
  2973  103B  3430               	retlw	48	;'0'
  2974  103C  342C               	retlw	44	;','
  2975  103D  3447               	retlw	71	;'G'
  2976  103E  3453               	retlw	83	;'S'
  2977  103F  3456               	retlw	86	;'V'
  2978  1040  342C               	retlw	44	;','
  2979  1041  3430               	retlw	48	;'0'
  2980  1042  342C               	retlw	44	;','
  2981  1043  3430               	retlw	48	;'0'
  2982  1044  342C               	retlw	44	;','
  2983  1045  3430               	retlw	48	;'0'
  2984  1046  342C               	retlw	44	;','
  2985  1047  3430               	retlw	48	;'0'
  2986  1048  342A               	retlw	42	;'*'
  2987  1049  3435               	retlw	53	;'5'
  2988  104A  3439               	retlw	57	;'9'
  2989  104B  340D               	retlw	13
  2990  104C  340A               	retlw	10
  2991  104D  3400               	retlw	0
  2992                           
  2993                           	psect	stringtext7
  2994  104E                     __pstringtext7:	
  2995  104E                     STR_1:	
  2996  104E  3424               	retlw	36	;'$'
  2997  104F  3450               	retlw	80	;'P'
  2998  1050  3455               	retlw	85	;'U'
  2999  1051  3442               	retlw	66	;'B'
  3000  1052  3458               	retlw	88	;'X'
  3001  1053  342C               	retlw	44	;','
  3002  1054  3434               	retlw	52	;'4'
  3003  1055  3430               	retlw	48	;'0'
  3004  1056  342C               	retlw	44	;','
  3005  1057  3447               	retlw	71	;'G'
  3006  1058  344C               	retlw	76	;'L'
  3007  1059  344C               	retlw	76	;'L'
  3008  105A  342C               	retlw	44	;','
  3009  105B  3430               	retlw	48	;'0'
  3010  105C  342C               	retlw	44	;','
  3011  105D  3430               	retlw	48	;'0'
  3012  105E  342C               	retlw	44	;','
  3013  105F  3430               	retlw	48	;'0'
  3014  1060  342C               	retlw	44	;','
  3015  1061  3430               	retlw	48	;'0'
  3016  1062  342A               	retlw	42	;'*'
  3017  1063  3435               	retlw	53	;'5'
  3018  1064  3443               	retlw	67	;'C'
  3019  1065  340D               	retlw	13
  3020  1066  340A               	retlw	10
  3021  1067  3400               	retlw	0
  3022                           
  3023                           	psect	stringtext8
  3024  1068                     __pstringtext8:	
  3025  1068                     STR_5:	
  3026  1068  3424               	retlw	36	;'$'
  3027  1069  3450               	retlw	80	;'P'
  3028  106A  3455               	retlw	85	;'U'
  3029  106B  3442               	retlw	66	;'B'
  3030  106C  3458               	retlw	88	;'X'
  3031  106D  342C               	retlw	44	;','
  3032  106E  3434               	retlw	52	;'4'
  3033  106F  3430               	retlw	48	;'0'
  3034  1070  342C               	retlw	44	;','
  3035  1071  3447               	retlw	71	;'G'
  3036  1072  3453               	retlw	83	;'S'
  3037  1073  3441               	retlw	65	;'A'
  3038  1074  342C               	retlw	44	;','
  3039  1075  3430               	retlw	48	;'0'
  3040  1076  342C               	retlw	44	;','
  3041  1077  3430               	retlw	48	;'0'
  3042  1078  342C               	retlw	44	;','
  3043  1079  3430               	retlw	48	;'0'
  3044  107A  342C               	retlw	44	;','
  3045  107B  3430               	retlw	48	;'0'
  3046  107C  342A               	retlw	42	;'*'
  3047  107D  3434               	retlw	52	;'4'
  3048  107E  3445               	retlw	69	;'E'
  3049  107F  340D               	retlw	13
  3050  1080  340A               	retlw	10
  3051  1081  3400               	retlw	0
  3052                           
  3053                           	psect	stringtext9
  3054  1082                     __pstringtext9:	
  3055  1082                     STR_3:	
  3056  1082  3424               	retlw	36	;'$'
  3057  1083  3450               	retlw	80	;'P'
  3058  1084  3455               	retlw	85	;'U'
  3059  1085  3442               	retlw	66	;'B'
  3060  1086  3458               	retlw	88	;'X'
  3061  1087  342C               	retlw	44	;','
  3062  1088  3434               	retlw	52	;'4'
  3063  1089  3430               	retlw	48	;'0'
  3064  108A  342C               	retlw	44	;','
  3065  108B  3456               	retlw	86	;'V'
  3066  108C  3454               	retlw	84	;'T'
  3067  108D  3447               	retlw	71	;'G'
  3068  108E  342C               	retlw	44	;','
  3069  108F  3430               	retlw	48	;'0'
  3070  1090  342C               	retlw	44	;','
  3071  1091  3430               	retlw	48	;'0'
  3072  1092  342C               	retlw	44	;','
  3073  1093  3430               	retlw	48	;'0'
  3074  1094  342C               	retlw	44	;','
  3075  1095  3430               	retlw	48	;'0'
  3076  1096  342A               	retlw	42	;'*'
  3077  1097  3435               	retlw	53	;'5'
  3078  1098  3445               	retlw	69	;'E'
  3079  1099  340D               	retlw	13
  3080  109A  340A               	retlw	10
  3081  109B  3400               	retlw	0
  3082                           
  3083                           	psect	stringtext10
  3084  109C                     __pstringtext10:	
  3085  109C                     STR_7:	
  3086  109C  3424               	retlw	36	;'$'
  3087  109D  3424               	retlw	36	;'$'
  3088  109E  3448               	retlw	72	;'H'
  3089  109F  3441               	retlw	65	;'A'
  3090  10A0  3442               	retlw	66	;'B'
  3091  10A1  346E               	retlw	110	;'n'
  3092  10A2  346F               	retlw	111	;'o'
  3093  10A3  3476               	retlw	118	;'v'
  3094  10A4  3461               	retlw	97	;'a'
  3095  10A5  342C               	retlw	44	;','
  3096  10A6  3425               	retlw	37	;'%'
  3097  10A7  3464               	retlw	100	;'d'
  3098  10A8  342C               	retlw	44	;','
  3099  10A9  3425               	retlw	37	;'%'
  3100  10AA  3473               	retlw	115	;'s'
  3101  10AB  342C               	retlw	44	;','
  3102  10AC  3425               	retlw	37	;'%'
  3103  10AD  3473               	retlw	115	;'s'
  3104  10AE  342C               	retlw	44	;','
  3105  10AF  3425               	retlw	37	;'%'
  3106  10B0  3473               	retlw	115	;'s'
  3107  10B1  342C               	retlw	44	;','
  3108  10B2  3400               	retlw	0
  3109                           
  3110                           	psect	stringtext11
  3111  10B3                     __pstringtext11:	
  3112  10B3                     STR_8:	
  3113  10B3  3425               	retlw	37	;'%'
  3114  10B4  3473               	retlw	115	;'s'
  3115  10B5  342C               	retlw	44	;','
  3116  10B6  3425               	retlw	37	;'%'
  3117  10B7  3473               	retlw	115	;'s'
  3118  10B8  342C               	retlw	44	;','
  3119  10B9  3425               	retlw	37	;'%'
  3120  10BA  3473               	retlw	115	;'s'
  3121  10BB  342C               	retlw	44	;','
  3122  10BC  3425               	retlw	37	;'%'
  3123  10BD  3473               	retlw	115	;'s'
  3124  10BE  342A               	retlw	42	;'*'
  3125  10BF  3400               	retlw	0
  3126                           
  3127                           	psect	stringtext12
  3128  0000                     __pstringtext12:	
  3129                           
  3130                           ; #config settings
  3131  0000                     
  3132                           	psect	cinit
  3133  0014                     start_initialization:	
  3134  0014                     __initialization:	
  3135                           
  3136                           ; Initialize objects allocated to BANK1
  3137  0014  306F               	movlw	low __pidataBANK1
  3138  0015  0084               	movwf	4
  3139  0016  308C               	movlw	(high __pidataBANK1)| (0+128)
  3140  0017  0085               	movwf	5
  3141  0018  30E2               	movlw	low __pdataBANK1
  3142  0019  0086               	movwf	6
  3143  001A  3000               	movlw	high __pdataBANK1
  3144  001B  0087               	movwf	7
  3145  001C  3007               	movlw	7
  3146  001D  318C  2462  3180   	fcall	init_ram
  3147                           
  3148                           ; Initialize objects allocated to BANK5
  3149  0020  300F               	movlw	low __pidataBANK5
  3150  0021  0084               	movwf	4
  3151  0022  308E               	movlw	(high __pidataBANK5)| (0+128)
  3152  0023  0085               	movwf	5
  3153  0024  30A0               	movlw	low __pdataBANK5
  3154  0025  0086               	movwf	6
  3155  0026  3002               	movlw	high __pdataBANK5
  3156  0027  0087               	movwf	7
  3157  0028  302C               	movlw	44
  3158  0029  318C  2462  3180   	fcall	init_ram
  3159                           
  3160                           ; Clear objects allocated to COMMON
  3161  002C  01FA               	clrf	__pbssCOMMON& (0+127)
  3162  002D  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
  3163                           
  3164                           ; Clear objects allocated to BANK1
  3165  002E  30A0               	movlw	low __pbssBANK1
  3166  002F  0084               	movwf	4
  3167  0030  3000               	movlw	high __pbssBANK1
  3168  0031  0085               	movwf	5
  3169  0032  3025               	movlw	37
  3170  0033  318C  245C  3180   	fcall	clear_ram0
  3171                           
  3172                           ; Clear objects allocated to BANK3
  3173  0036  30E6               	movlw	low __pbssBANK3
  3174  0037  0084               	movwf	4
  3175  0038  3001               	movlw	high __pbssBANK3
  3176  0039  0085               	movwf	5
  3177  003A  300A               	movlw	10
  3178  003B  318C  245C  3180   	fcall	clear_ram0
  3179                           
  3180                           ; Clear objects allocated to BANK4
  3181  003E  3020               	movlw	low __pbssBANK4
  3182  003F  0084               	movwf	4
  3183  0040  3002               	movlw	high __pbssBANK4
  3184  0041  0085               	movwf	5
  3185  0042  304C               	movlw	76
  3186  0043  318C  245C         	fcall	clear_ram0
  3187  0045                     end_of_initialization:	
  3188                           ;End of C runtime variable initialization code
  3189                           
  3190  0045                     __end_of__initialization:	
  3191  0045  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3192  0046  0020               	movlb	0
  3193  0047  3186  2ED8         	ljmp	_main	;jump to C main() function
  3194                           
  3195                           	psect	bssCOMMON
  3196  007A                     __pbssCOMMON:	
  3197  007A                     _flags:	
  3198  007A                     	ds	2
  3199                           
  3200                           	psect	bssBANK1
  3201  00A0                     __pbssBANK1:	
  3202  00A0                     _gps_nav_status:	
  3203  00A0                     	ds	4
  3204  00A4                     _nout:	
  3205  00A4                     	ds	2
  3206  00A6                     _width:	
  3207  00A6                     	ds	2
  3208  00A8                     _prec:	
  3209  00A8                     	ds	2
  3210  00AA                     _gps_configured:	
  3211  00AA                     	ds	1
  3212  00AB                     _gps_time:	
  3213  00AB                     	ds	10
  3214  00B5                     _gps_vertical_velocity:	
  3215  00B5                     	ds	8
  3216  00BD                     _gps_course_over_ground:	
  3217  00BD                     	ds	8
  3218                           
  3219                           	psect	dataBANK1
  3220  00E2                     __pdataBANK1:	
  3221  00E2                     stoa@F1139:	
  3222  00E2                     	ds	7
  3223                           
  3224                           	psect	bssBANK3
  3225  01E6                     __pbssBANK3:	
  3226  01E6                     main@F10219:	
  3227  01E6                     	ds	2
  3228  01E8                     _gps_speed_over_ground:	
  3229  01E8                     	ds	8
  3230                           
  3231                           	psect	bssBANK4
  3232  0220                     __pbssBANK4:	
  3233  0220                     _dbuf:	
  3234  0220                     	ds	32
  3235  0240                     _gps_longitude:	
  3236  0240                     	ds	16
  3237  0250                     _gps_latitude:	
  3238  0250                     	ds	16
  3239  0260                     _gps_altitude:	
  3240  0260                     	ds	12
  3241                           
  3242                           	psect	dataBANK5
  3243  02A0                     __pdataBANK5:	
  3244  02A0                     _setNavFlightMode:	
  3245  02A0                     	ds	44
  3246                           
  3247                           	psect	inittext
  3248  0C62                     init_ram:	
  3249  0C62  00FE               	movwf	126
  3250  0C63                     initloop:	
  3251  0C63  0012               	moviw fsr0++
  3252  0C64  001E               	movwi fsr1++
  3253  0C65  0BFE               	decfsz	126,f
  3254  0C66  2C63               	goto	initloop
  3255  0C67  3400               	retlw	0
  3256                           
  3257                           	psect	clrtext
  3258  0C5C                     clear_ram0:	
  3259                           ;	Called with FSR0 containing the base address, and
  3260                           ;	WREG with the size to clear
  3261                           
  3262  0C5C  0064               	clrwdt	;clear the watchdog before getting into this loop
  3263  0C5D                     clrloop0:	
  3264  0C5D  0180               	clrf	0	;clear RAM location pointed to by FSR
  3265  0C5E  3101               	addfsr 0,1
  3266  0C5F  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3267  0C60  2C5D               	goto	clrloop0	;have we reached the end yet?
  3268  0C61  3400               	retlw	0	;all done for this memory range, return
  3269                           
  3270                           	psect	cstackBANK3
  3271  01A0                     __pcstackBANK3:	
  3272  01A0                     main@message_start:	
  3273                           
  3274                           ; 70 bytes @ 0x0
  3275  01A0                     	ds	70
  3276                           
  3277                           	psect	cstackBANK2
  3278  0120                     __pcstackBANK2:	
  3279  0120                     main@message_end:	
  3280                           
  3281                           ; 73 bytes @ 0x0
  3282  0120                     	ds	73
  3283                           
  3284                           	psect	cstackBANK1
  3285  00C5                     __pcstackBANK1:	
  3286  00C5                     vfprintf@fp:	
  3287                           
  3288                           ; 1 bytes @ 0x0
  3289  00C5                     	ds	1
  3290  00C6                     vfprintf@cfmt:	
  3291                           
  3292                           ; 2 bytes @ 0x1
  3293  00C6                     	ds	2
  3294  00C8                     ?_printf:	
  3295  00C8                     ?_sprintf:	
  3296                           ; 2 bytes @ 0x3
  3297                           
  3298  00C8                     sprintf@fmt:	
  3299                           ; 2 bytes @ 0x3
  3300                           
  3301  00C8                     printf@fmt:	
  3302                           ; 2 bytes @ 0x3
  3303                           
  3304                           
  3305                           ; 2 bytes @ 0x3
  3306  00C8                     	ds	4
  3307  00CC                     printf@ap:	
  3308                           
  3309                           ; 1 bytes @ 0x7
  3310  00CC                     	ds	1
  3311  00CD                     ??_SetupGPS:	
  3312                           
  3313                           ; 1 bytes @ 0x8
  3314  00CD                     	ds	7
  3315  00D4                     sprintf@ap:	
  3316                           
  3317                           ; 1 bytes @ 0xF
  3318  00D4                     	ds	1
  3319  00D5                     sprintf@s:	
  3320                           
  3321                           ; 1 bytes @ 0x10
  3322  00D5                     	ds	1
  3323  00D6                     sprintf@f:	
  3324                           
  3325                           ; 5 bytes @ 0x11
  3326  00D6                     	ds	5
  3327  00DB                     ??_main:	
  3328                           
  3329                           ; 1 bytes @ 0x16
  3330  00DB                     	ds	1
  3331  00DC                     main@id:	
  3332                           
  3333                           ; 2 bytes @ 0x17
  3334  00DC                     	ds	2
  3335  00DE                     main@i:	
  3336                           
  3337                           ; 2 bytes @ 0x19
  3338  00DE                     	ds	2
  3339  00E0                     main@messages:	
  3340                           
  3341                           ; 2 bytes @ 0x1B
  3342  00E0                     	ds	2
  3343                           
  3344                           	psect	cstackCOMMON
  3345  0070                     __pcstackCOMMON:	
  3346  0070                     ?_PIN_MANAGER_Initialize:	
  3347  0070                     ?_OSCILLATOR_Initialize:	
  3348                           ; 1 bytes @ 0x0
  3349                           
  3350  0070                     ?_TMR1_Initialize:	
  3351                           ; 1 bytes @ 0x0
  3352                           
  3353  0070                     ?_EUSART_Initialize:	
  3354                           ; 1 bytes @ 0x0
  3355                           
  3356  0070                     ?_TMR1_DefaultInterruptHandler:	
  3357                           ; 1 bytes @ 0x0
  3358                           
  3359  0070                     ??_TMR1_DefaultInterruptHandler:	
  3360                           ; 1 bytes @ 0x0
  3361                           
  3362  0070                     ?_TMR1_CallBack:	
  3363                           ; 1 bytes @ 0x0
  3364                           
  3365  0070                     ??_TMR1_CallBack:	
  3366                           ; 1 bytes @ 0x0
  3367                           
  3368  0070                     ?_SYSTEM_Initialize:	
  3369                           ; 1 bytes @ 0x0
  3370                           
  3371  0070                     ?_EUSART_is_rx_ready:	
  3372                           ; 1 bytes @ 0x0
  3373                           
  3374  0070                     ?_EUSART_Read:	
  3375                           ; 1 bytes @ 0x0
  3376                           
  3377  0070                     ?_EUSART_Write:	
  3378                           ; 1 bytes @ 0x0
  3379                           
  3380  0070                     ?_putch:	
  3381                           ; 1 bytes @ 0x0
  3382                           
  3383  0070                     ?_TMR1_StartTimer:	
  3384                           ; 1 bytes @ 0x0
  3385                           
  3386  0070                     ?_TMR1_WriteTimer:	
  3387                           ; 1 bytes @ 0x0
  3388                           
  3389  0070                     ?_TMR1_ISR:	
  3390                           ; 1 bytes @ 0x0
  3391                           
  3392  0070                     ?_INTERRUPT_InterruptManager:	
  3393                           ; 1 bytes @ 0x0
  3394                           
  3395  0070                     ?_TIMER1_Initialize:	
  3396                           ; 1 bytes @ 0x0
  3397                           
  3398  0070                     ?_TransmitBit:	
  3399                           ; 1 bytes @ 0x0
  3400                           
  3401  0070                     ?_TransmitByte:	
  3402                           ; 1 bytes @ 0x0
  3403                           
  3404  0070                     ?_GPS_SendUBX:	
  3405                           ; 1 bytes @ 0x0
  3406                           
  3407  0070                     ?_GPS_HasAcknowledged:	
  3408                           ; 1 bytes @ 0x0
  3409                           
  3410  0070                     ?_SetupGPS:	
  3411                           ; 1 bytes @ 0x0
  3412                           
  3413  0070                     ?_GetNavData:	
  3414                           ; 1 bytes @ 0x0
  3415                           
  3416  0070                     ?_main:	
  3417                           ; 1 bytes @ 0x0
  3418                           
  3419  0070                     TMR1_WriteTimer@timerVal:	
  3420                           ; 1 bytes @ 0x0
  3421                           
  3422                           
  3423                           ; 2 bytes @ 0x0
  3424  0070                     	ds	2
  3425  0072                     ??_PIN_MANAGER_Initialize:	
  3426  0072                     ??_OSCILLATOR_Initialize:	
  3427                           ; 1 bytes @ 0x2
  3428                           
  3429  0072                     ??_EUSART_Initialize:	
  3430                           ; 1 bytes @ 0x2
  3431                           
  3432  0072                     ?_TMR1_SetInterruptHandler:	
  3433                           ; 1 bytes @ 0x2
  3434                           
  3435  0072                     ??_EUSART_is_rx_ready:	
  3436                           ; 1 bytes @ 0x2
  3437                           
  3438  0072                     ??_EUSART_Read:	
  3439                           ; 1 bytes @ 0x2
  3440                           
  3441  0072                     ??_EUSART_Write:	
  3442                           ; 1 bytes @ 0x2
  3443                           
  3444  0072                     ??_TMR1_StartTimer:	
  3445                           ; 1 bytes @ 0x2
  3446                           
  3447  0072                     ??_TMR1_WriteTimer:	
  3448                           ; 1 bytes @ 0x2
  3449                           
  3450  0072                     ??_TMR1_ISR:	
  3451                           ; 1 bytes @ 0x2
  3452                           
  3453  0072                     ??_INTERRUPT_InterruptManager:	
  3454                           ; 1 bytes @ 0x2
  3455                           
  3456  0072                     ??_TIMER1_Initialize:	
  3457                           ; 1 bytes @ 0x2
  3458                           
  3459  0072                     ??_TransmitBit:	
  3460                           ; 1 bytes @ 0x2
  3461                           
  3462  0072                     ??___aodiv:	
  3463                           ; 1 bytes @ 0x2
  3464                           
  3465  0072                     ??___aomod:	
  3466                           ; 1 bytes @ 0x2
  3467                           
  3468  0072                     ?_strlen:	
  3469                           ; 1 bytes @ 0x2
  3470                           
  3471  0072                     ?_TMR1_ReadTimer:	
  3472                           ; 2 bytes @ 0x2
  3473                           
  3474  0072                     ?_crc_append_byte:	
  3475                           ; 2 bytes @ 0x2
  3476                           
  3477  0072                     ?_GetLengthUBX:	
  3478                           ; 2 bytes @ 0x2
  3479                           
  3480  0072                     EUSART_Write@txData:	
  3481                           ; 2 bytes @ 0x2
  3482                           
  3483  0072                     TMR1_SetInterruptHandler@InterruptHandler:	
  3484                           ; 1 bytes @ 0x2
  3485                           
  3486  0072                     crc_append_byte@crc:	
  3487                           ; 2 bytes @ 0x2
  3488                           
  3489  0072                     strlen@s:	
  3490                           ; 2 bytes @ 0x2
  3491                           
  3492                           
  3493                           ; 2 bytes @ 0x2
  3494  0072                     	ds	1
  3495  0073                     ??_putch:	
  3496  0073                     putch@txData:	
  3497                           ; 1 bytes @ 0x3
  3498                           
  3499  0073                     TransmitBit@b:	
  3500                           ; 1 bytes @ 0x3
  3501                           
  3502  0073                     ___aomod@counter:	
  3503                           ; 1 bytes @ 0x3
  3504                           
  3505                           
  3506                           ; 1 bytes @ 0x3
  3507  0073                     	ds	1
  3508  0074                     ??_TMR1_Initialize:	
  3509  0074                     ??_TMR1_SetInterruptHandler:	
  3510                           ; 1 bytes @ 0x4
  3511                           
  3512  0074                     ??_strlen:	
  3513                           ; 1 bytes @ 0x4
  3514                           
  3515  0074                     ??_SYSTEM_Initialize:	
  3516                           ; 1 bytes @ 0x4
  3517                           
  3518  0074                     ??_TMR1_ReadTimer:	
  3519                           ; 1 bytes @ 0x4
  3520                           
  3521  0074                     ??_TransmitByte:	
  3522                           ; 1 bytes @ 0x4
  3523                           
  3524  0074                     ?_fputc:	
  3525                           ; 1 bytes @ 0x4
  3526                           
  3527  0074                     crc_append_byte@data:	
  3528                           ; 2 bytes @ 0x4
  3529                           
  3530  0074                     ___aomod@sign:	
  3531                           ; 1 bytes @ 0x4
  3532                           
  3533  0074                     fputc@c:	
  3534                           ; 1 bytes @ 0x4
  3535                           
  3536  0074                     strlen@a:	
  3537                           ; 2 bytes @ 0x4
  3538                           
  3539                           
  3540                           ; 2 bytes @ 0x4
  3541  0074                     	ds	1
  3542  0075                     ??_crc_append_byte:	
  3543  0075                     ??_GetLengthUBX:	
  3544                           ; 1 bytes @ 0x5
  3545                           
  3546  0075                     ?_abs:	
  3547                           ; 1 bytes @ 0x5
  3548                           
  3549  0075                     TransmitByte@byte:	
  3550                           ; 2 bytes @ 0x5
  3551                           
  3552  0075                     GetLengthUBX@data:	
  3553                           ; 1 bytes @ 0x5
  3554                           
  3555  0075                     abs@a:	
  3556                           ; 1 bytes @ 0x5
  3557                           
  3558                           
  3559                           ; 2 bytes @ 0x5
  3560  0075                     	ds	1
  3561  0076                     ??_GPS_SendUBX:	
  3562  0076                     fputc@fp:	
  3563                           ; 1 bytes @ 0x6
  3564                           
  3565  0076                     TransmitByte@i:	
  3566                           ; 1 bytes @ 0x6
  3567                           
  3568                           
  3569                           ; 2 bytes @ 0x6
  3570  0076                     	ds	1
  3571  0077                     ??_fputs:	
  3572  0077                     ??_abs:	
  3573                           ; 1 bytes @ 0x7
  3574                           
  3575  0077                     ??_stoa:	
  3576                           ; 1 bytes @ 0x7
  3577                           
  3578                           
  3579                           ; 1 bytes @ 0x7
  3580  0077                     	ds	1
  3581  0078                     ?_TransmitString:	
  3582  0078                     ??_TransmitString:	
  3583                           ; 1 bytes @ 0x8
  3584                           
  3585  0078                     crc_append_byte@i:	
  3586                           ; 1 bytes @ 0x8
  3587                           
  3588                           
  3589                           ; 2 bytes @ 0x8
  3590  0078                     	ds	2
  3591                           
  3592                           	psect	cstackBANK0
  3593  0020                     __pcstackBANK0:	
  3594  0020                     ??_fputc:	
  3595  0020                     ?_crc16:	
  3596                           ; 1 bytes @ 0x0
  3597                           
  3598  0020                     ?___aodiv:	
  3599                           ; 2 bytes @ 0x0
  3600                           
  3601  0020                     ?___aomod:	
  3602                           ; 8 bytes @ 0x0
  3603                           
  3604  0020                     TMR1_ReadTimer@readVal:	
  3605                           ; 8 bytes @ 0x0
  3606                           
  3607  0020                     crc16@segments:	
  3608                           ; 2 bytes @ 0x0
  3609                           
  3610  0020                     TransmitString@counti:	
  3611                           ; 2 bytes @ 0x0
  3612                           
  3613  0020                     GPS_SendUBX@length:	
  3614                           ; 2 bytes @ 0x0
  3615                           
  3616  0020                     ___aodiv@divisor:	
  3617                           ; 2 bytes @ 0x0
  3618                           
  3619  0020                     ___aomod@divisor:	
  3620                           ; 8 bytes @ 0x0
  3621                           
  3622                           
  3623                           ; 8 bytes @ 0x0
  3624  0020                     	ds	2
  3625  0022                     ??_crc16:	
  3626  0022                     TMR1_ReadTimer@readValHigh:	
  3627                           ; 1 bytes @ 0x2
  3628                           
  3629  0022                     GPS_SendUBX@data:	
  3630                           ; 1 bytes @ 0x2
  3631                           
  3632  0022                     TransmitString@i:	
  3633                           ; 1 bytes @ 0x2
  3634                           
  3635                           
  3636                           ; 2 bytes @ 0x2
  3637  0022                     	ds	1
  3638  0023                     TMR1_ReadTimer@readValLow:	
  3639  0023                     GPS_SendUBX@i:	
  3640                           ; 1 bytes @ 0x3
  3641                           
  3642                           
  3643                           ; 2 bytes @ 0x3
  3644  0023                     	ds	1
  3645  0024                     ??_GPS_HasAcknowledged:	
  3646  0024                     ??_GetNavData:	
  3647                           ; 1 bytes @ 0x4
  3648                           
  3649  0024                     crc16@data:	
  3650                           ; 1 bytes @ 0x4
  3651                           
  3652  0024                     TransmitString@message:	
  3653                           ; 1 bytes @ 0x4
  3654                           
  3655                           
  3656                           ; 1 bytes @ 0x4
  3657  0024                     	ds	1
  3658  0025                     ?_fputs:	
  3659  0025                     ?_stoa:	
  3660                           ; 2 bytes @ 0x5
  3661                           
  3662  0025                     crc16@c:	
  3663                           ; 2 bytes @ 0x5
  3664                           
  3665  0025                     fputs@fp:	
  3666                           ; 1 bytes @ 0x5
  3667                           
  3668  0025                     stoa@s:	
  3669                           ; 1 bytes @ 0x5
  3670                           
  3671                           
  3672                           ; 2 bytes @ 0x5
  3673  0025                     	ds	1
  3674  0026                     crc16@string:	
  3675  0026                     fputs@c:	
  3676                           ; 1 bytes @ 0x6
  3677                           
  3678                           
  3679                           ; 1 bytes @ 0x6
  3680  0026                     	ds	1
  3681  0027                     crc16@i:	
  3682  0027                     fputs@i:	
  3683                           ; 2 bytes @ 0x7
  3684                           
  3685  0027                     stoa@nuls:	
  3686                           ; 2 bytes @ 0x7
  3687                           
  3688                           
  3689                           ; 7 bytes @ 0x7
  3690  0027                     	ds	1
  3691  0028                     GPS_HasAcknowledged@startTime:	
  3692  0028                     GetNavData@startTime:	
  3693                           ; 4 bytes @ 0x8
  3694                           
  3695  0028                     ___aodiv@dividend:	
  3696                           ; 4 bytes @ 0x8
  3697                           
  3698  0028                     ___aomod@dividend:	
  3699                           ; 8 bytes @ 0x8
  3700                           
  3701                           
  3702                           ; 8 bytes @ 0x8
  3703  0028                     	ds	1
  3704  0029                     fputs@s:	
  3705  0029                     crc16@crc:	
  3706                           ; 1 bytes @ 0x9
  3707                           
  3708                           
  3709                           ; 2 bytes @ 0x9
  3710  0029                     	ds	1
  3711  002A                     ?_pad:	
  3712  002A                     pad@buf:	
  3713                           ; 2 bytes @ 0xA
  3714                           
  3715                           
  3716                           ; 1 bytes @ 0xA
  3717  002A                     	ds	1
  3718  002B                     crc16@str:	
  3719  002B                     pad@p:	
  3720                           ; 2 bytes @ 0xB
  3721                           
  3722                           
  3723                           ; 2 bytes @ 0xB
  3724  002B                     	ds	1
  3725  002C                     GPS_HasAcknowledged@ackByte:	
  3726  002C                     _GetNavData$609:	
  3727                           ; 1 bytes @ 0xC
  3728                           
  3729                           
  3730                           ; 2 bytes @ 0xC
  3731  002C                     	ds	1
  3732  002D                     ?_AppendCRC:	
  3733  002D                     ??_pad:	
  3734                           ; 1 bytes @ 0xD
  3735                           
  3736  002D                     AppendCRC@crc:	
  3737                           ; 1 bytes @ 0xD
  3738                           
  3739  002D                     GPS_HasAcknowledged@ackPacket:	
  3740                           ; 2 bytes @ 0xD
  3741                           
  3742                           
  3743                           ; 10 bytes @ 0xD
  3744  002D                     	ds	1
  3745  002E                     _GetNavData$610:	
  3746  002E                     pad@i:	
  3747                           ; 2 bytes @ 0xE
  3748                           
  3749  002E                     stoa@i:	
  3750                           ; 2 bytes @ 0xE
  3751                           
  3752                           
  3753                           ; 2 bytes @ 0xE
  3754  002E                     	ds	1
  3755  002F                     ??_AppendCRC:	
  3756                           
  3757                           ; 1 bytes @ 0xF
  3758  002F                     	ds	1
  3759  0030                     GetNavData@skip:	
  3760  0030                     ___aodiv@counter:	
  3761                           ; 1 bytes @ 0x10
  3762                           
  3763  0030                     pad@w:	
  3764                           ; 1 bytes @ 0x10
  3765                           
  3766  0030                     stoa@w:	
  3767                           ; 2 bytes @ 0x10
  3768                           
  3769                           
  3770                           ; 2 bytes @ 0x10
  3771  0030                     	ds	1
  3772  0031                     ___aodiv@sign:	
  3773  0031                     AppendCRC@len:	
  3774                           ; 1 bytes @ 0x11
  3775                           
  3776  0031                     GetNavData@dataFieldType:	
  3777                           ; 2 bytes @ 0x11
  3778                           
  3779                           
  3780                           ; 2 bytes @ 0x11
  3781  0031                     	ds	1
  3782  0032                     pad@fp:	
  3783  0032                     stoa@fp:	
  3784                           ; 1 bytes @ 0x12
  3785                           
  3786  0032                     ___aodiv@quotient:	
  3787                           ; 1 bytes @ 0x12
  3788                           
  3789                           
  3790                           ; 8 bytes @ 0x12
  3791  0032                     	ds	1
  3792  0033                     AppendCRC@data:	
  3793  0033                     GetNavData@i:	
  3794                           ; 1 bytes @ 0x13
  3795                           
  3796  0033                     stoa@cp:	
  3797                           ; 2 bytes @ 0x13
  3798                           
  3799                           
  3800                           ; 2 bytes @ 0x13
  3801  0033                     	ds	2
  3802  0035                     GetNavData@success:	
  3803  0035                     stoa@p:	
  3804                           ; 1 bytes @ 0x15
  3805                           
  3806                           
  3807                           ; 2 bytes @ 0x15
  3808  0035                     	ds	1
  3809  0036                     GetNavData@dataIndex:	
  3810                           
  3811                           ; 2 bytes @ 0x16
  3812  0036                     	ds	1
  3813  0037                     GPS_HasAcknowledged@data:	
  3814  0037                     stoa@l:	
  3815                           ; 1 bytes @ 0x17
  3816                           
  3817                           
  3818                           ; 2 bytes @ 0x17
  3819  0037                     	ds	1
  3820  0038                     GPS_HasAcknowledged@ackByteID:	
  3821  0038                     GetNavData@byte:	
  3822                           ; 1 bytes @ 0x18
  3823                           
  3824                           
  3825                           ; 1 bytes @ 0x18
  3826  0038                     	ds	1
  3827  0039                     GPS_HasAcknowledged@i:	
  3828                           
  3829                           ; 1 bytes @ 0x19
  3830  0039                     	ds	1
  3831  003A                     ?_dtoa:	
  3832  003A                     dtoa@d:	
  3833                           ; 2 bytes @ 0x1A
  3834                           
  3835                           
  3836                           ; 8 bytes @ 0x1A
  3837  003A                     	ds	8
  3838  0042                     ??_dtoa:	
  3839                           
  3840                           ; 1 bytes @ 0x22
  3841  0042                     	ds	3
  3842  0045                     dtoa@fp:	
  3843                           
  3844                           ; 1 bytes @ 0x25
  3845  0045                     	ds	1
  3846  0046                     _dtoa$708:	
  3847                           
  3848                           ; 2 bytes @ 0x26
  3849  0046                     	ds	2
  3850  0048                     dtoa@p:	
  3851                           
  3852                           ; 2 bytes @ 0x28
  3853  0048                     	ds	2
  3854  004A                     dtoa@w:	
  3855                           
  3856                           ; 2 bytes @ 0x2A
  3857  004A                     	ds	2
  3858  004C                     dtoa@s:	
  3859                           
  3860                           ; 2 bytes @ 0x2C
  3861  004C                     	ds	2
  3862  004E                     dtoa@n:	
  3863                           
  3864                           ; 8 bytes @ 0x2E
  3865  004E                     	ds	8
  3866  0056                     dtoa@i:	
  3867                           
  3868                           ; 2 bytes @ 0x36
  3869  0056                     	ds	2
  3870  0058                     ?_vfpfcnvrt:	
  3871  0058                     vfpfcnvrt@fmt:	
  3872                           ; 2 bytes @ 0x38
  3873                           
  3874                           
  3875                           ; 1 bytes @ 0x38
  3876  0058                     	ds	1
  3877  0059                     vfpfcnvrt@ap:	
  3878                           
  3879                           ; 1 bytes @ 0x39
  3880  0059                     	ds	1
  3881  005A                     ??_vfpfcnvrt:	
  3882                           
  3883                           ; 1 bytes @ 0x3A
  3884  005A                     	ds	5
  3885  005F                     vfpfcnvrt@ll:	
  3886                           
  3887                           ; 8 bytes @ 0x3F
  3888  005F                     	ds	8
  3889  0067                     vfpfcnvrt@cp:	
  3890                           
  3891                           ; 2 bytes @ 0x47
  3892  0067                     	ds	2
  3893  0069                     vfpfcnvrt@fp:	
  3894                           
  3895                           ; 1 bytes @ 0x49
  3896  0069                     	ds	1
  3897  006A                     ?_vfprintf:	
  3898  006A                     vfprintf@fmt:	
  3899                           ; 2 bytes @ 0x4A
  3900                           
  3901                           
  3902                           ; 2 bytes @ 0x4A
  3903  006A                     	ds	2
  3904  006C                     vfprintf@ap:	
  3905                           
  3906                           ; 1 bytes @ 0x4C
  3907  006C                     	ds	1
  3908  006D                     ??_vfprintf:	
  3909                           
  3910                           ; 1 bytes @ 0x4D
  3911  006D                     	ds	2
  3912  006F                     ??_printf:	
  3913  006F                     ??_sprintf:	
  3914                           ; 1 bytes @ 0x4F
  3915                           
  3916                           
  3917                           ; 1 bytes @ 0x4F
  3918  006F                     	ds	1
  3919                           
  3920                           	psect	maintext
  3921  06D8                     __pmaintext:	
  3922 ;;
  3923 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  3924 ;;
  3925 ;; *************** function _main *****************
  3926 ;; Defined at:
  3927 ;;		line 542 in file "main.c"
  3928 ;; Parameters:    Size  Location     Type
  3929 ;;		None
  3930 ;; Auto vars:     Size  Location     Type
  3931 ;;  i               2   25[BANK1 ] int 
  3932 ;;  message_end    73    0[BANK2 ] unsigned char [73]
  3933 ;;  message_star   70    0[BANK3 ] unsigned char [70]
  3934 ;;  messages        2   27[BANK1 ] PTR unsigned char [2]
  3935 ;;		 -> main@message_end(73), main@message_start(70), NULL(0), 
  3936 ;;  id              2   23[BANK1 ] int 
  3937 ;; Return value:  Size  Location     Type
  3938 ;;                  1    wreg      void 
  3939 ;; Registers used:
  3940 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3941 ;; Tracked objects:
  3942 ;;		On entry : B1F/0
  3943 ;;		On exit  : 0/0
  3944 ;;		Unchanged: 0/0
  3945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3947 ;;      Locals:         0       0       6      73      70       0       0       0       0       0       0       0       
      +0       0
  3948 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3949 ;;      Totals:         0       0       7      73      70       0       0       0       0       0       0       0       
      +0       0
  3950 ;;Total ram usage:      150 bytes
  3951 ;; Hardware stack levels required when called:   14
  3952 ;; This function calls:
  3953 ;;		_AppendCRC
  3954 ;;		_GetNavData
  3955 ;;		_SYSTEM_Initialize
  3956 ;;		_SetupGPS
  3957 ;;		_TIMER1_Initialize
  3958 ;;		_TransmitString
  3959 ;;		_crc16
  3960 ;;		_sprintf
  3961 ;; This function is called by:
  3962 ;;		Startup code after reset
  3963 ;; This function uses a non-reentrant model
  3964 ;;
  3965                           
  3966                           
  3967                           ;psect for function _main
  3968  06D8                     _main:	
  3969                           
  3970                           ;main.c: 546:     SYSTEM_Initialize();
  3971                           
  3972                           ;incstack = 0
  3973                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3974  06D8  318C  24A9  3186   	fcall	_SYSTEM_Initialize
  3975                           
  3976                           ;main.c: 547:     TIMER1_Initialize();
  3977  06DB  318C  249E  3186   	fcall	_TIMER1_Initialize
  3978                           
  3979                           ;main.c: 550:     SetupGPS();
  3980  06DE  318F  27AE  3186   	fcall	_SetupGPS
  3981                           
  3982                           ;main.c: 553:     char message_start[70];;main.c: 554:     char message_end[70 + 3];;mai
      +                          n.c: 556:     char* messages[2] = {message_start, message_end};
  3983  06E1  0021               	movlb	1	; select bank1
  3984  06E2  01E0               	clrf	main@messages^(0+128)
  3985  06E3  01E1               	clrf	(main@messages+1)^(0+128)
  3986  06E4  30A0               	movlw	(low (main@message_start| (0+256)))& (0+255)
  3987  06E5  00DB               	movwf	??_main^(0+128)
  3988  06E6  085B               	movf	??_main^(0+128),w
  3989  06E7  00E0               	movwf	main@messages^(0+128)
  3990  06E8  3020               	movlw	(low (main@message_end| (0+256)))& (0+255)
  3991  06E9  00DB               	movwf	??_main^(0+128)
  3992  06EA  085B               	movf	??_main^(0+128),w
  3993  06EB  00E1               	movwf	(low ((main@messages| 0+1)))^(0+128)
  3994                           
  3995                           ;main.c: 558:     int id = 0;
  3996  06EC  01DC               	clrf	main@id^(0+128)
  3997  06ED  01DD               	clrf	(main@id+1)^(0+128)
  3998  06EE                     l3353:	
  3999                           
  4000                           ;main.c: 560:     {;main.c: 561:         GetNavData();
  4001  06EE  3181  2192  3186   	fcall	_GetNavData
  4002                           
  4003                           ;main.c: 562:         sprintf(messages[0], "$$HABnova,%d,%s,%s,%s,",
  4004  06F1  309C               	movlw	low (STR_7| (0+32768))
  4005  06F2  0021               	movlb	1	; select bank1
  4006  06F3  00C8               	movwf	sprintf@fmt^(0+128)
  4007  06F4  3090               	movlw	high (STR_7| (0+32768))
  4008  06F5  00C9               	movwf	(sprintf@fmt^(0+128)+1)
  4009  06F6  085D               	movf	(main@id+1)^(0+128),w
  4010  06F7  00CB               	movwf	((?_sprintf+1)^(0+128)+2)
  4011  06F8  085C               	movf	main@id^(0+128),w
  4012  06F9  00CA               	movwf	(?_sprintf^(0+128)+2)
  4013  06FA  30AB               	movlw	low _gps_time
  4014  06FB  00CC               	movwf	(low ((?_sprintf| 0+4)))^(0+128)
  4015  06FC  3000               	movlw	high _gps_time
  4016  06FD  00CD               	movwf	((low ((?_sprintf| 0+4))+1))^(0+128)
  4017  06FE  3050               	movlw	low _gps_latitude
  4018  06FF  00CE               	movwf	(low ((?_sprintf| 0+6)))^(0+128)
  4019  0700  3002               	movlw	high _gps_latitude
  4020  0701  00CF               	movwf	((low ((?_sprintf| 0+6))+1))^(0+128)
  4021  0702  3040               	movlw	low _gps_longitude
  4022  0703  00D0               	movwf	(low ((?_sprintf| 0+8)))^(0+128)
  4023  0704  3002               	movlw	high _gps_longitude
  4024  0705  00D1               	movwf	((low ((?_sprintf| 0+8))+1))^(0+128)
  4025  0706  0860               	movf	main@messages^(0+128),w
  4026  0707  318D  25E4  3186   	fcall	_sprintf
  4027                           
  4028                           ;main.c: 565:         sprintf(messages[1], "%s,%s,%s,%s*",
  4029  070A  30B3               	movlw	low (STR_8| (0+32768))
  4030  070B  0021               	movlb	1	; select bank1
  4031  070C  00C8               	movwf	sprintf@fmt^(0+128)
  4032  070D  3090               	movlw	high (STR_8| (0+32768))
  4033  070E  00C9               	movwf	(sprintf@fmt^(0+128)+1)
  4034  070F  3060               	movlw	low _gps_altitude
  4035  0710  00CA               	movwf	(low ((?_sprintf| 0+2)))^(0+128)
  4036  0711  3002               	movlw	high _gps_altitude
  4037  0712  00CB               	movwf	((low ((?_sprintf| 0+2))+1))^(0+128)
  4038  0713  30E8               	movlw	low _gps_speed_over_ground
  4039  0714  00CC               	movwf	(low ((?_sprintf| 0+4)))^(0+128)
  4040  0715  3001               	movlw	high _gps_speed_over_ground
  4041  0716  00CD               	movwf	((low ((?_sprintf| 0+4))+1))^(0+128)
  4042  0717  30BD               	movlw	low _gps_course_over_ground
  4043  0718  00CE               	movwf	(low ((?_sprintf| 0+6)))^(0+128)
  4044  0719  3000               	movlw	high _gps_course_over_ground
  4045  071A  00CF               	movwf	((low ((?_sprintf| 0+6))+1))^(0+128)
  4046  071B  30B5               	movlw	low _gps_vertical_velocity
  4047  071C  00D0               	movwf	(low ((?_sprintf| 0+8)))^(0+128)
  4048  071D  3000               	movlw	high _gps_vertical_velocity
  4049  071E  00D1               	movwf	((low ((?_sprintf| 0+8))+1))^(0+128)
  4050  071F  0861               	movf	(low ((main@messages| 0+1)))^(0+128),w
  4051  0720  318D  25E4  3186   	fcall	_sprintf
  4052                           
  4053                           ;main.c: 569:         id++;
  4054  0723  3001               	movlw	1
  4055  0724  0021               	movlb	1	; select bank1
  4056  0725  07DC               	addwf	main@id^(0+128),f
  4057  0726  3000               	movlw	0
  4058  0727  3DDD               	addwfc	(main@id+1)^(0+128),f
  4059                           
  4060                           ;main.c: 570:         AppendCRC(messages[1], crc16(messages, 2));
  4061  0728  3002               	movlw	2
  4062  0729  0020               	movlb	0	; select bank0
  4063  072A  00A0               	movwf	crc16@segments
  4064  072B  3000               	movlw	0
  4065  072C  00A1               	movwf	crc16@segments+1
  4066  072D  30E0               	movlw	(low (main@messages| 0))& (0+255)
  4067  072E  3187  2761  3186   	fcall	_crc16
  4068  0731  0020               	movlb	0	; select bank0
  4069  0732  0821               	movf	?_crc16+1,w
  4070  0733  00AE               	movwf	AppendCRC@crc+1
  4071  0734  0820               	movf	?_crc16,w
  4072  0735  00AD               	movwf	AppendCRC@crc
  4073  0736  0021               	movlb	1	; select bank1
  4074  0737  0861               	movf	(low ((main@messages| 0+1)))^(0+128),w
  4075  0738  318F  2711  3186   	fcall	_AppendCRC
  4076                           
  4077                           ;main.c: 572:         TransmitString(messages[0]);
  4078  073B  0021               	movlb	1	; select bank1
  4079  073C  0860               	movf	main@messages^(0+128),w
  4080  073D  318E  2668  3186   	fcall	_TransmitString
  4081                           
  4082                           ;main.c: 573:         TransmitString(messages[1]);
  4083  0740  0021               	movlb	1	; select bank1
  4084  0741  0861               	movf	(low ((main@messages| 0+1)))^(0+128),w
  4085  0742  318E  2668  3186   	fcall	_TransmitString
  4086                           
  4087                           ;main.c: 575:         for (int i = 0; i < DELAY_MULT; i++)
  4088  0745  0021               	movlb	1	; select bank1
  4089  0746  01DE               	clrf	main@i^(0+128)
  4090  0747  01DF               	clrf	(main@i+1)^(0+128)
  4091  0748                     l3371:	
  4092                           
  4093                           ;main.c: 576:         {;main.c: 577:             _delay((unsigned long)((MESSAGE_INTERVA
      +                          L)*(4000000/4000.0)));
  4094  0748  3007               	movlw	7
  4095  0749  0021               	movlb	1	; select bank1
  4096  074A  00DB               	movwf	??_main^(0+128)
  4097  074B  307D               	movlw	125
  4098  074C                     u3017:	
  4099  074C  0B89               	decfsz	9,f
  4100  074D  2F4C               	goto	u3017
  4101  074E  0BDB               	decfsz	??_main^(0+128),f
  4102  074F  2F4C               	goto	u3017
  4103                           
  4104                           ;main.c: 578:         }
  4105  0750  3001               	movlw	1
  4106  0751  0021               	movlb	1	; select bank1
  4107  0752  07DE               	addwf	main@i^(0+128),f
  4108  0753  3000               	movlw	0
  4109  0754  3DDF               	addwfc	(main@i+1)^(0+128),f
  4110  0755  085F               	movf	(main@i+1)^(0+128),w
  4111  0756  3A80               	xorlw	128
  4112  0757  00DB               	movwf	??_main^(0+128)
  4113  0758  3083               	movlw	131
  4114  0759  025B               	subwf	??_main^(0+128),w
  4115  075A  1D03               	skipz
  4116  075B  2F5E               	goto	u3005
  4117  075C  30E8               	movlw	232
  4118  075D  025E               	subwf	main@i^(0+128),w
  4119  075E                     u3005:	
  4120  075E  1803               	btfsc	3,0
  4121  075F  2EEE               	goto	l3353
  4122  0760  2F48               	goto	l3371
  4123  0761                     __end_of_main:	
  4124                           
  4125                           	psect	text1
  4126  0DE4                     __ptext1:	
  4127 ;; *************** function _sprintf *****************
  4128 ;; Defined at:
  4129 ;;		line 9 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\nf_sprintf.c"
  4130 ;; Parameters:    Size  Location     Type
  4131 ;;  s               1    wreg     PTR unsigned char 
  4132 ;;		 -> main@message_end(73), main@message_start(70), NULL(0), 
  4133 ;;  fmt             2    3[BANK1 ] PTR const unsigned char 
  4134 ;;		 -> STR_8(13), STR_7(23), 
  4135 ;; Auto vars:     Size  Location     Type
  4136 ;;  s               1   16[BANK1 ] PTR unsigned char 
  4137 ;;		 -> main@message_end(73), main@message_start(70), NULL(0), 
  4138 ;;  f               5   17[BANK1 ] struct _IO_FILE
  4139 ;;  ret             2    0        int 
  4140 ;;  ap              1   15[BANK1 ] PTR void [1]
  4141 ;;		 -> ?_printf(2), ?_sprintf(2), 
  4142 ;; Return value:  Size  Location     Type
  4143 ;;                  2    3[BANK1 ] int 
  4144 ;; Registers used:
  4145 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4146 ;; Tracked objects:
  4147 ;;		On entry : 0/0
  4148 ;;		On exit  : 0/0
  4149 ;;		Unchanged: 0/0
  4150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4151 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
  4152 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
  4153 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4154 ;;      Totals:         0       1      19       0       0       0       0       0       0       0       0       0       
      +0       0
  4155 ;;Total ram usage:       20 bytes
  4156 ;; Hardware stack levels used:    1
  4157 ;; Hardware stack levels required when called:   12
  4158 ;; This function calls:
  4159 ;;		_vfprintf
  4160 ;; This function is called by:
  4161 ;;		_main
  4162 ;; This function uses a non-reentrant model
  4163 ;;
  4164                           
  4165                           
  4166                           ;psect for function _sprintf
  4167  0DE4                     _sprintf:	
  4168                           
  4169                           ;incstack = 0
  4170                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4171                           ;sprintf@s stored from wreg
  4172  0DE4  0021               	movlb	1	; select bank1
  4173  0DE5  00D5               	movwf	sprintf@s^(0+128)
  4174  0DE6  30CA               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  4175  0DE7  0020               	movlb	0	; select bank0
  4176  0DE8  00EF               	movwf	??_sprintf
  4177  0DE9  086F               	movf	??_sprintf,w
  4178  0DEA  0021               	movlb	1	; select bank1
  4179  0DEB  00D4               	movwf	sprintf@ap^(0+128)
  4180  0DEC  0855               	movf	sprintf@s^(0+128),w
  4181  0DED  0020               	movlb	0	; select bank0
  4182  0DEE  00EF               	movwf	??_sprintf
  4183  0DEF  086F               	movf	??_sprintf,w
  4184  0DF0  0021               	movlb	1	; select bank1
  4185  0DF1  00D6               	movwf	sprintf@f^(0+128)
  4186  0DF2  01D7               	clrf	(sprintf@f^(0+128)+1)
  4187  0DF3  01D8               	clrf	((sprintf@f+1)^(0+128)+1)
  4188  0DF4  01D9               	clrf	(sprintf@f^(0+128)+3)
  4189  0DF5  01DA               	clrf	((sprintf@f+1)^(0+128)+3)
  4190  0DF6  0849               	movf	(sprintf@fmt+1)^(0+128),w
  4191  0DF7  0020               	movlb	0	; select bank0
  4192  0DF8  00EB               	movwf	vfprintf@fmt+1
  4193  0DF9  0021               	movlb	1	; select bank1
  4194  0DFA  0848               	movf	sprintf@fmt^(0+128),w
  4195  0DFB  0020               	movlb	0	; select bank0
  4196  0DFC  00EA               	movwf	vfprintf@fmt
  4197  0DFD  30D4               	movlw	(low (sprintf@ap| 0))& (0+255)
  4198  0DFE  00EF               	movwf	??_sprintf
  4199  0DFF  086F               	movf	??_sprintf,w
  4200  0E00  00EC               	movwf	vfprintf@ap
  4201  0E01  30D6               	movlw	(low (sprintf@f| 0))& (0+255)
  4202  0E02  3187  27C1         	fcall	_vfprintf
  4203  0E04  0021               	movlb	1	; select bank1
  4204  0E05  0857               	movf	(sprintf@f^(0+128)+1),w
  4205  0E06  0755               	addwf	sprintf@s^(0+128),w
  4206  0E07  0020               	movlb	0	; select bank0
  4207  0E08  00EF               	movwf	??_sprintf
  4208  0E09  086F               	movf	??_sprintf,w
  4209  0E0A  0086               	movwf	6
  4210  0E0B  3001               	movlw	1	; select bank2/3
  4211  0E0C  0087               	movwf	7
  4212  0E0D  0181               	clrf	1
  4213  0E0E  0008               	return
  4214  0E0F                     __end_of_sprintf:	
  4215                           
  4216                           	psect	text2
  4217  0761                     __ptext2:	
  4218 ;; *************** function _crc16 *****************
  4219 ;; Defined at:
  4220 ;;		line 87 in file "main.c"
  4221 ;; Parameters:    Size  Location     Type
  4222 ;;  data            1    wreg     PTR PTR unsigned char 
  4223 ;;		 -> main@messages(2), 
  4224 ;;  segments        2    0[BANK0 ] int 
  4225 ;; Auto vars:     Size  Location     Type
  4226 ;;  data            1    4[BANK0 ] PTR PTR unsigned char 
  4227 ;;		 -> main@messages(2), 
  4228 ;;  string          1    6[BANK0 ] PTR unsigned char 
  4229 ;;		 -> main@message_end(73), main@message_start(70), NULL(0), 
  4230 ;;  str             2   11[BANK0 ] int 
  4231 ;;  crc             2    9[BANK0 ] unsigned short 
  4232 ;;  i               2    7[BANK0 ] unsigned int 
  4233 ;;  c               1    5[BANK0 ] unsigned char 
  4234 ;; Return value:  Size  Location     Type
  4235 ;;                  2    0[BANK0 ] unsigned short 
  4236 ;; Registers used:
  4237 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4238 ;; Tracked objects:
  4239 ;;		On entry : 0/0
  4240 ;;		On exit  : 0/0
  4241 ;;		Unchanged: 0/0
  4242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4243 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4244 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4245 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4246 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4247 ;;Total ram usage:       13 bytes
  4248 ;; Hardware stack levels used:    1
  4249 ;; Hardware stack levels required when called:    5
  4250 ;; This function calls:
  4251 ;;		_crc_append_byte
  4252 ;;		_strlen
  4253 ;; This function is called by:
  4254 ;;		_main
  4255 ;; This function uses a non-reentrant model
  4256 ;;
  4257                           
  4258                           
  4259                           ;psect for function _crc16
  4260  0761                     _crc16:	
  4261                           
  4262                           ;incstack = 0
  4263                           ; Regs used in _crc16: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4264                           ;crc16@data stored from wreg
  4265  0761  0020               	movlb	0	; select bank0
  4266  0762  00A4               	movwf	crc16@data
  4267                           
  4268                           ;main.c: 87: unsigned short crc16(char** data, int segments);main.c: 88: {;main.c: 89:  
      +                             size_t i;;main.c: 90:  uint16_t crc;;main.c: 91:  uint8_t c;;main.c: 93:  crc = 0xFFF
      +                          F;
  4269  0763  30FF               	movlw	255
  4270  0764  00A9               	movwf	crc16@crc
  4271  0765  30FF               	movlw	255
  4272  0766  00AA               	movwf	crc16@crc+1
  4273                           
  4274                           ;main.c: 95:     for (int str = 0; str < segments; str++)
  4275  0767  01AB               	clrf	crc16@str
  4276  0768  01AC               	clrf	crc16@str+1
  4277  0769                     l256:	
  4278  0769  082C               	movf	crc16@str+1,w
  4279  076A  3A80               	xorlw	128
  4280  076B  00A2               	movwf	??_crc16
  4281  076C  0821               	movf	crc16@segments+1,w
  4282  076D  3A80               	xorlw	128
  4283  076E  0222               	subwf	??_crc16,w
  4284  076F  1D03               	skipz
  4285  0770  2F73               	goto	u2865
  4286  0771  0820               	movf	crc16@segments,w
  4287  0772  022B               	subwf	crc16@str,w
  4288  0773                     u2865:	
  4289  0773  1803               	btfsc	3,0
  4290  0774  2FBB               	goto	l3175
  4291                           
  4292                           ;main.c: 96:     {;main.c: 97:         char* string = data[str];
  4293  0775  0020               	movlb	0	; select bank0
  4294  0776  082B               	movf	crc16@str,w
  4295  0777  0724               	addwf	crc16@data,w
  4296  0778  00A2               	movwf	??_crc16
  4297  0779  0822               	movf	??_crc16,w
  4298  077A  0086               	movwf	6
  4299  077B  0187               	clrf	7
  4300  077C  0801               	movf	1,w
  4301  077D  00A3               	movwf	??_crc16+1
  4302  077E  0823               	movf	??_crc16+1,w
  4303  077F  00A6               	movwf	crc16@string
  4304                           
  4305                           ;main.c: 99:         for (i = 2; i < strlen(string); i++)
  4306  0780  3002               	movlw	2
  4307  0781  00A7               	movwf	crc16@i
  4308  0782  3000               	movlw	0
  4309  0783  00A8               	movwf	crc16@i+1
  4310  0784                     l3171:	
  4311  0784  0826               	movf	crc16@string,w
  4312  0785  00F2               	movwf	strlen@s
  4313  0786  39FF               	andlw	255
  4314  0787  1D03               	skipz
  4315  0788  3001               	movlw	1
  4316  0789  00F3               	movwf	strlen@s+1
  4317  078A  318C  24EB  3187   	fcall	_strlen
  4318  078D  0873               	movf	?_strlen+1,w
  4319  078E  0020               	movlb	0	; select bank0
  4320  078F  0228               	subwf	crc16@i+1,w
  4321  0790  1D03               	skipz
  4322  0791  2F94               	goto	u2855
  4323  0792  0872               	movf	?_strlen,w
  4324  0793  0227               	subwf	crc16@i,w
  4325  0794                     u2855:	
  4326  0794  1803               	btfsc	3,0
  4327  0795  2FB6               	goto	l3173
  4328                           
  4329                           ;main.c: 100:         {;main.c: 101:             c = string[i];
  4330  0796  0827               	movf	crc16@i,w
  4331  0797  0726               	addwf	crc16@string,w
  4332  0798  00A2               	movwf	??_crc16
  4333  0799  0822               	movf	??_crc16,w
  4334  079A  0086               	movwf	6
  4335  079B  3001               	movlw	1	; select bank2/3
  4336  079C  0087               	movwf	7
  4337  079D  0801               	movf	1,w
  4338  079E  00A3               	movwf	??_crc16+1
  4339  079F  0823               	movf	??_crc16+1,w
  4340  07A0  00A5               	movwf	crc16@c
  4341                           
  4342                           ;main.c: 102:             crc = crc_append_byte(crc, c);
  4343  07A1  082A               	movf	crc16@crc+1,w
  4344  07A2  00F3               	movwf	crc_append_byte@crc+1
  4345  07A3  0829               	movf	crc16@crc,w
  4346  07A4  00F2               	movwf	crc_append_byte@crc
  4347  07A5  0825               	movf	crc16@c,w
  4348  07A6  00A2               	movwf	??_crc16
  4349  07A7  0822               	movf	??_crc16,w
  4350  07A8  00F4               	movwf	crc_append_byte@data
  4351  07A9  318E  2698  3187   	fcall	_crc_append_byte
  4352  07AC  0873               	movf	?_crc_append_byte+1,w
  4353  07AD  0020               	movlb	0	; select bank0
  4354  07AE  00AA               	movwf	crc16@crc+1
  4355  07AF  0872               	movf	?_crc_append_byte,w
  4356  07B0  00A9               	movwf	crc16@crc
  4357                           
  4358                           ;main.c: 103:         }
  4359  07B1  3001               	movlw	1
  4360  07B2  07A7               	addwf	crc16@i,f
  4361  07B3  3000               	movlw	0
  4362  07B4  3DA8               	addwfc	crc16@i+1,f
  4363  07B5  2F84               	goto	l3171
  4364  07B6                     l3173:	
  4365                           
  4366                           ;main.c: 104:     }
  4367  07B6  3001               	movlw	1
  4368  07B7  07AB               	addwf	crc16@str,f
  4369  07B8  3000               	movlw	0
  4370  07B9  3DAC               	addwfc	crc16@str+1,f
  4371  07BA  2F69               	goto	l256
  4372  07BB                     l3175:	
  4373                           
  4374                           ;main.c: 105:  return crc;
  4375  07BB  0020               	movlb	0	; select bank0
  4376  07BC  082A               	movf	crc16@crc+1,w
  4377  07BD  00A1               	movwf	?_crc16+1
  4378  07BE  0829               	movf	crc16@crc,w
  4379  07BF  00A0               	movwf	?_crc16
  4380  07C0  0008               	return
  4381  07C1                     __end_of_crc16:	
  4382                           
  4383                           	psect	text3
  4384  0E98                     __ptext3:	
  4385 ;; *************** function _crc_append_byte *****************
  4386 ;; Defined at:
  4387 ;;		line 67 in file "main.c"
  4388 ;; Parameters:    Size  Location     Type
  4389 ;;  crc             2    2[COMMON] unsigned short 
  4390 ;;  data            1    4[COMMON] unsigned char 
  4391 ;; Auto vars:     Size  Location     Type
  4392 ;;  i               2    8[COMMON] int 
  4393 ;; Return value:  Size  Location     Type
  4394 ;;                  2    2[COMMON] unsigned short 
  4395 ;; Registers used:
  4396 ;;		wreg, status,2, status,0
  4397 ;; Tracked objects:
  4398 ;;		On entry : 0/0
  4399 ;;		On exit  : 0/0
  4400 ;;		Unchanged: 0/0
  4401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4402 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4403 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4404 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4405 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4406 ;;Total ram usage:        8 bytes
  4407 ;; Hardware stack levels used:    1
  4408 ;; Hardware stack levels required when called:    4
  4409 ;; This function calls:
  4410 ;;		Nothing
  4411 ;; This function is called by:
  4412 ;;		_crc16
  4413 ;; This function uses a non-reentrant model
  4414 ;;
  4415                           
  4416                           
  4417                           ;psect for function _crc_append_byte
  4418  0E98                     _crc_append_byte:	
  4419                           
  4420                           ;main.c: 67: unsigned short crc_append_byte(uint16_t crc, uint8_t data);main.c: 68: {;ma
      +                          in.c: 69:     int i;;main.c: 70:     crc = crc ^ ((uint16_t)data << 8);
  4421                           
  4422                           ;incstack = 0
  4423                           ; Regs used in _crc_append_byte: [wreg+status,2+status,0]
  4424  0E98  0874               	movf	crc_append_byte@data,w
  4425  0E99  00F5               	movwf	??_crc_append_byte
  4426  0E9A  01F6               	clrf	??_crc_append_byte+1
  4427  0E9B  0875               	movf	??_crc_append_byte,w
  4428  0E9C  00F6               	movwf	??_crc_append_byte+1
  4429  0E9D  01F5               	clrf	??_crc_append_byte
  4430  0E9E  0872               	movf	crc_append_byte@crc,w
  4431  0E9F  0675               	xorwf	??_crc_append_byte,w
  4432  0EA0  00F2               	movwf	crc_append_byte@crc
  4433  0EA1  0873               	movf	crc_append_byte@crc+1,w
  4434  0EA2  0676               	xorwf	??_crc_append_byte+1,w
  4435  0EA3  00F3               	movwf	crc_append_byte@crc+1
  4436                           
  4437                           ;main.c: 71:     for (i = 0; i < 8; i++)
  4438  0EA4  01F8               	clrf	crc_append_byte@i
  4439  0EA5  01F9               	clrf	crc_append_byte@i+1
  4440  0EA6                     l249:	
  4441                           
  4442                           ;main.c: 72:     {;main.c: 73:         if (crc & 0x8000)
  4443  0EA6  1FF3               	btfss	crc_append_byte@crc+1,7
  4444  0EA7  2EB5               	goto	l3057
  4445                           
  4446                           ;main.c: 74:         {;main.c: 75:             crc = (crc << 1) ^ 0x1021;
  4447  0EA8  0873               	movf	crc_append_byte@crc+1,w
  4448  0EA9  00F6               	movwf	??_crc_append_byte+1
  4449  0EAA  0872               	movf	crc_append_byte@crc,w
  4450  0EAB  00F5               	movwf	??_crc_append_byte
  4451  0EAC  35F5               	lslf	??_crc_append_byte,f
  4452  0EAD  0DF6               	rlf	??_crc_append_byte+1,f
  4453  0EAE  3021               	movlw	33
  4454  0EAF  0675               	xorwf	??_crc_append_byte,w
  4455  0EB0  00F2               	movwf	crc_append_byte@crc
  4456  0EB1  3010               	movlw	16
  4457  0EB2  0676               	xorwf	??_crc_append_byte+1,w
  4458  0EB3  00F3               	movwf	crc_append_byte@crc+1
  4459                           
  4460                           ;main.c: 76:         }
  4461  0EB4  2EBA               	goto	l252
  4462  0EB5                     l3057:	
  4463                           
  4464                           ;main.c: 78:         {;main.c: 79:             crc <<= 1;
  4465  0EB5  3001               	movlw	1
  4466  0EB6                     u2735:	
  4467  0EB6  35F2               	lslf	crc_append_byte@crc,f
  4468  0EB7  0DF3               	rlf	crc_append_byte@crc+1,f
  4469  0EB8  0B89               	decfsz	9,f
  4470  0EB9  2EB6               	goto	u2735
  4471  0EBA                     l252:	
  4472                           ;main.c: 80:         }
  4473                           
  4474                           
  4475                           ;main.c: 81:     }
  4476  0EBA  3001               	movlw	1
  4477  0EBB  07F8               	addwf	crc_append_byte@i,f
  4478  0EBC  3000               	movlw	0
  4479  0EBD  3DF9               	addwfc	crc_append_byte@i+1,f
  4480  0EBE  0879               	movf	crc_append_byte@i+1,w
  4481  0EBF  3A80               	xorlw	128
  4482  0EC0  00F5               	movwf	??_crc_append_byte
  4483  0EC1  3080               	movlw	128
  4484  0EC2  0275               	subwf	??_crc_append_byte,w
  4485  0EC3  3008               	movlw	8
  4486  0EC4  1903               	btfsc	3,2
  4487  0EC5  0278               	subwf	crc_append_byte@i,w
  4488  0EC6  1803               	btfsc	3,0
  4489  0EC7  0008               	return
  4490  0EC8  2EA6               	goto	l249
  4491  0EC9                     __end_of_crc_append_byte:	
  4492                           ;main.c: 83:     return crc;
  4493                           
  4494                           
  4495                           	psect	text4
  4496  0E68                     __ptext4:	
  4497 ;; *************** function _TransmitString *****************
  4498 ;; Defined at:
  4499 ;;		line 193 in file "main.c"
  4500 ;; Parameters:    Size  Location     Type
  4501 ;;  message         1    wreg     PTR unsigned char 
  4502 ;;		 -> main@message_end(73), main@message_start(70), NULL(0), 
  4503 ;; Auto vars:     Size  Location     Type
  4504 ;;  message         1    4[BANK0 ] PTR unsigned char 
  4505 ;;		 -> main@message_end(73), main@message_start(70), NULL(0), 
  4506 ;;  i               2    2[BANK0 ] int 
  4507 ;;  counti          2    0[BANK0 ] int 
  4508 ;; Return value:  Size  Location     Type
  4509 ;;                  1    wreg      void 
  4510 ;; Registers used:
  4511 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4512 ;; Tracked objects:
  4513 ;;		On entry : 0/0
  4514 ;;		On exit  : 0/0
  4515 ;;		Unchanged: 0/0
  4516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4518 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4519 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4520 ;;      Totals:         1       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4521 ;;Total ram usage:        6 bytes
  4522 ;; Hardware stack levels used:    1
  4523 ;; Hardware stack levels required when called:    6
  4524 ;; This function calls:
  4525 ;;		_TransmitByte
  4526 ;;		_strlen
  4527 ;; This function is called by:
  4528 ;;		_main
  4529 ;; This function uses a non-reentrant model
  4530 ;;
  4531                           
  4532                           
  4533                           ;psect for function _TransmitString
  4534  0E68                     _TransmitString:	
  4535                           
  4536                           ;incstack = 0
  4537                           ; Regs used in _TransmitString: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4538                           ;TransmitString@message stored from wreg
  4539  0E68  0020               	movlb	0	; select bank0
  4540  0E69  00A4               	movwf	TransmitString@message
  4541                           
  4542                           ;main.c: 193: void TransmitString(char* message);main.c: 194: {;main.c: 198:  for (int i
      +                           = 0, counti = strlen(message); i < counti; i++)
  4543  0E6A  01A2               	clrf	TransmitString@i
  4544  0E6B  01A3               	clrf	TransmitString@i+1
  4545  0E6C  0824               	movf	TransmitString@message,w
  4546  0E6D  00F2               	movwf	strlen@s
  4547  0E6E  39FF               	andlw	255
  4548  0E6F  1D03               	skipz
  4549  0E70  3001               	movlw	1
  4550  0E71  00F3               	movwf	strlen@s+1
  4551  0E72  318C  24EB  318E   	fcall	_strlen
  4552  0E75  0873               	movf	?_strlen+1,w
  4553  0E76  0020               	movlb	0	; select bank0
  4554  0E77  00A1               	movwf	TransmitString@counti+1
  4555  0E78  0872               	movf	?_strlen,w
  4556  0E79  00A0               	movwf	TransmitString@counti
  4557  0E7A                     l3187:	
  4558  0E7A  0823               	movf	TransmitString@i+1,w
  4559  0E7B  3A80               	xorlw	128
  4560  0E7C  00F8               	movwf	??_TransmitString
  4561  0E7D  0821               	movf	TransmitString@counti+1,w
  4562  0E7E  3A80               	xorlw	128
  4563  0E7F  0278               	subwf	??_TransmitString,w
  4564  0E80  1D03               	skipz
  4565  0E81  2E84               	goto	u2875
  4566  0E82  0820               	movf	TransmitString@counti,w
  4567  0E83  0222               	subwf	TransmitString@i,w
  4568  0E84                     u2875:	
  4569  0E84  1803               	btfsc	3,0
  4570  0E85  0008               	return
  4571                           
  4572                           ;main.c: 199:  {;main.c: 200:   TransmitByte(message[i]);
  4573  0E86  0020               	movlb	0	; select bank0
  4574  0E87  0822               	movf	TransmitString@i,w
  4575  0E88  0724               	addwf	TransmitString@message,w
  4576  0E89  00F8               	movwf	??_TransmitString
  4577  0E8A  0878               	movf	??_TransmitString,w
  4578  0E8B  0086               	movwf	6
  4579  0E8C  3001               	movlw	1	; select bank2/3
  4580  0E8D  0087               	movwf	7
  4581  0E8E  0801               	movf	1,w
  4582  0E8F  318E  263B  318E   	fcall	_TransmitByte
  4583                           
  4584                           ;main.c: 201:  }
  4585  0E92  3001               	movlw	1
  4586  0E93  0020               	movlb	0	; select bank0
  4587  0E94  07A2               	addwf	TransmitString@i,f
  4588  0E95  3000               	movlw	0
  4589  0E96  3DA3               	addwfc	TransmitString@i+1,f
  4590  0E97  2E7A               	goto	l3187
  4591  0E98                     __end_of_TransmitString:	
  4592                           
  4593                           	psect	text5
  4594  0E3B                     __ptext5:	
  4595 ;; *************** function _TransmitByte *****************
  4596 ;; Defined at:
  4597 ;;		line 162 in file "main.c"
  4598 ;; Parameters:    Size  Location     Type
  4599 ;;  byte            1    wreg     unsigned char 
  4600 ;; Auto vars:     Size  Location     Type
  4601 ;;  byte            1    5[COMMON] unsigned char 
  4602 ;;  i               2    6[COMMON] int 
  4603 ;; Return value:  Size  Location     Type
  4604 ;;                  1    wreg      void 
  4605 ;; Registers used:
  4606 ;;		wreg, status,2, status,0, pclath, cstack
  4607 ;; Tracked objects:
  4608 ;;		On entry : 0/0
  4609 ;;		On exit  : 0/0
  4610 ;;		Unchanged: 0/0
  4611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4613 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4614 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4615 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4616 ;;Total ram usage:        4 bytes
  4617 ;; Hardware stack levels used:    1
  4618 ;; Hardware stack levels required when called:    5
  4619 ;; This function calls:
  4620 ;;		_TransmitBit
  4621 ;; This function is called by:
  4622 ;;		_TransmitString
  4623 ;; This function uses a non-reentrant model
  4624 ;;
  4625                           
  4626                           
  4627                           ;psect for function _TransmitByte
  4628  0E3B                     _TransmitByte:	
  4629                           
  4630                           ;incstack = 0
  4631                           ; Regs used in _TransmitByte: [wreg+status,2+status,0+pclath+cstack]
  4632                           ;TransmitByte@byte stored from wreg
  4633  0E3B  00F5               	movwf	TransmitByte@byte
  4634                           
  4635                           ;main.c: 162: void TransmitByte(char byte);main.c: 163: {;main.c: 173:     TransmitBit(0
      +                          );
  4636  0E3C  3000               	movlw	0
  4637  0E3D  318D  2519  318E   	fcall	_TransmitBit
  4638                           
  4639                           ;main.c: 178:  for (int i = 0; i < 7; i++)
  4640  0E40  01F6               	clrf	TransmitByte@i
  4641  0E41  01F7               	clrf	TransmitByte@i+1
  4642  0E42                     l3067:	
  4643                           
  4644                           ;main.c: 179:  {;main.c: 180:   TransmitBit((byte >> i) & 1);
  4645  0E42  0875               	movf	TransmitByte@byte,w
  4646  0E43  00F4               	movwf	??_TransmitByte
  4647  0E44  0A76               	incf	TransmitByte@i,w
  4648  0E45  2E47               	goto	u2754
  4649  0E46                     u2755:	
  4650  0E46  36F4               	lsrf	??_TransmitByte,f
  4651  0E47                     u2754:	
  4652  0E47  0B89               	decfsz	9,f
  4653  0E48  2E46               	goto	u2755
  4654  0E49  1C74               	btfss	??_TransmitByte,0
  4655  0E4A  2E4D               	goto	u2760
  4656  0E4B  3001               	movlw	1
  4657  0E4C  2E4E               	goto	u2770
  4658  0E4D                     u2760:	
  4659  0E4D  3000               	movlw	0
  4660  0E4E                     u2770:	
  4661  0E4E  318D  2519  318E   	fcall	_TransmitBit
  4662                           
  4663                           ;main.c: 181:  }
  4664  0E51  3001               	movlw	1
  4665  0E52  07F6               	addwf	TransmitByte@i,f
  4666  0E53  3000               	movlw	0
  4667  0E54  3DF7               	addwfc	TransmitByte@i+1,f
  4668  0E55  0877               	movf	TransmitByte@i+1,w
  4669  0E56  3A80               	xorlw	128
  4670  0E57  00F4               	movwf	??_TransmitByte
  4671  0E58  3080               	movlw	128
  4672  0E59  0274               	subwf	??_TransmitByte,w
  4673  0E5A  1D03               	skipz
  4674  0E5B  2E5E               	goto	u2785
  4675  0E5C  3007               	movlw	7
  4676  0E5D  0276               	subwf	TransmitByte@i,w
  4677  0E5E                     u2785:	
  4678  0E5E  1C03               	skipc
  4679  0E5F  2E42               	goto	l3067
  4680                           
  4681                           ;main.c: 186:  TransmitBit(1);
  4682  0E60  3001               	movlw	1
  4683  0E61  318D  2519  318E   	fcall	_TransmitBit
  4684                           
  4685                           ;main.c: 187:  TransmitBit(1);
  4686  0E64  3001               	movlw	1
  4687  0E65  318D  2519         	fcall	_TransmitBit
  4688  0E67  0008               	return
  4689  0E68                     __end_of_TransmitByte:	
  4690                           
  4691                           	psect	text6
  4692  0D19                     __ptext6:	
  4693 ;; *************** function _TransmitBit *****************
  4694 ;; Defined at:
  4695 ;;		line 140 in file "main.c"
  4696 ;; Parameters:    Size  Location     Type
  4697 ;;  b               1    wreg     _Bool 
  4698 ;; Auto vars:     Size  Location     Type
  4699 ;;  b               1    3[COMMON] _Bool 
  4700 ;; Return value:  Size  Location     Type
  4701 ;;                  1    wreg      void 
  4702 ;; Registers used:
  4703 ;;		wreg, status,2, status,0
  4704 ;; Tracked objects:
  4705 ;;		On entry : 0/0
  4706 ;;		On exit  : 0/0
  4707 ;;		Unchanged: 0/0
  4708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4710 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4711 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4712 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4713 ;;Total ram usage:        2 bytes
  4714 ;; Hardware stack levels used:    1
  4715 ;; Hardware stack levels required when called:    4
  4716 ;; This function calls:
  4717 ;;		Nothing
  4718 ;; This function is called by:
  4719 ;;		_TransmitByte
  4720 ;; This function uses a non-reentrant model
  4721 ;;
  4722                           
  4723                           
  4724                           ;psect for function _TransmitBit
  4725  0D19                     _TransmitBit:	
  4726                           
  4727                           ;incstack = 0
  4728                           ; Regs used in _TransmitBit: [wreg+status,2+status,0]
  4729                           ;TransmitBit@b stored from wreg
  4730  0D19  00F3               	movwf	TransmitBit@b
  4731                           
  4732                           ;main.c: 140: void TransmitBit(_Bool b);main.c: 141: {;main.c: 142:  if (b)
  4733  0D1A  0873               	movf	TransmitBit@b,w
  4734  0D1B  1903               	btfsc	3,2
  4735  0D1C  2D20               	goto	l269
  4736                           
  4737                           ;main.c: 143:  {;main.c: 147:   do { LATAbits.LATA4 = 1; } while(0);
  4738  0D1D  0022               	movlb	2	; select bank2
  4739  0D1E  160C               	bsf	12,4	;volatile
  4740  0D1F  2D22               	goto	l2975
  4741  0D20                     l269:	
  4742                           ;main.c: 151:  {;main.c: 155:   do { LATAbits.LATA4 = 0; } while(0);
  4743                           
  4744  0D20  0022               	movlb	2	; select bank2
  4745  0D21  120C               	bcf	12,4	;volatile
  4746  0D22                     l2975:	
  4747                           
  4748                           ;main.c: 158:  _delay((unsigned long)((((1000 / BAUD_RATE) / 2) * 1000)*(4000000/4000000
      +                          .0)));
  4749  0D22  300D               	movlw	13
  4750  0D23  00F2               	movwf	??_TransmitBit
  4751  0D24  30FC               	movlw	252
  4752  0D25                     u3027:	
  4753  0D25  0B89               	decfsz	9,f
  4754  0D26  2D25               	goto	u3027
  4755  0D27  0BF2               	decfsz	??_TransmitBit,f
  4756  0D28  2D25               	goto	u3027
  4757                           
  4758                           ;main.c: 159:  _delay((unsigned long)((((1000 / BAUD_RATE) / 2) * 1000)*(4000000/4000000
      +                          .0)));
  4759  0D29  300D               	movlw	13
  4760  0D2A  00F2               	movwf	??_TransmitBit
  4761  0D2B  30FC               	movlw	252
  4762  0D2C                     u3037:	
  4763  0D2C  0B89               	decfsz	9,f
  4764  0D2D  2D2C               	goto	u3037
  4765  0D2E  0BF2               	decfsz	??_TransmitBit,f
  4766  0D2F  2D2C               	goto	u3037
  4767  0D30  0008               	return
  4768  0D31                     __end_of_TransmitBit:	
  4769                           
  4770                           	psect	text7
  4771  0C9E                     __ptext7:	
  4772 ;; *************** function _TIMER1_Initialize *****************
  4773 ;; Defined at:
  4774 ;;		line 29 in file "main.c"
  4775 ;; Parameters:    Size  Location     Type
  4776 ;;		None
  4777 ;; Auto vars:     Size  Location     Type
  4778 ;;		None
  4779 ;; Return value:  Size  Location     Type
  4780 ;;                  1    wreg      void 
  4781 ;; Registers used:
  4782 ;;		status,2, status,0, pclath, cstack
  4783 ;; Tracked objects:
  4784 ;;		On entry : 0/0
  4785 ;;		On exit  : 0/0
  4786 ;;		Unchanged: 0/0
  4787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4791 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4792 ;;Total ram usage:        0 bytes
  4793 ;; Hardware stack levels used:    1
  4794 ;; Hardware stack levels required when called:    5
  4795 ;; This function calls:
  4796 ;;		_TMR1_StartTimer
  4797 ;; This function is called by:
  4798 ;;		_main
  4799 ;; This function uses a non-reentrant model
  4800 ;;
  4801                           
  4802                           
  4803                           ;psect for function _TIMER1_Initialize
  4804  0C9E                     _TIMER1_Initialize:	
  4805                           
  4806                           ;main.c: 32:     TMR1IF = 0;
  4807                           
  4808                           ;incstack = 0
  4809                           ; Regs used in _TIMER1_Initialize: [status,2+status,0+pclath+cstack]
  4810  0C9E  0020               	movlb	0	; select bank0
  4811  0C9F  1010               	bcf	16,0	;volatile
  4812                           
  4813                           ;main.c: 33:     TMR1IE = 1;
  4814  0CA0  0021               	movlb	1	; select bank1
  4815  0CA1  1410               	bsf	16,0	;volatile
  4816                           
  4817                           ;main.c: 35:     PEIE = 1;
  4818  0CA2  170B               	bsf	11,6	;volatile
  4819                           
  4820                           ;main.c: 37:     GIE = 1;
  4821  0CA3  178B               	bsf	11,7	;volatile
  4822                           
  4823                           ;main.c: 38:     TMR1ON = 1;
  4824  0CA4  0020               	movlb	0	; select bank0
  4825  0CA5  1418               	bsf	24,0	;volatile
  4826                           
  4827                           ;main.c: 39:     TMR1_StartTimer();
  4828  0CA6  318C  2449         	fcall	_TMR1_StartTimer
  4829  0CA8  0008               	return
  4830  0CA9                     __end_of_TIMER1_Initialize:	
  4831                           
  4832                           	psect	text8
  4833  0C49                     __ptext8:	
  4834 ;; *************** function _TMR1_StartTimer *****************
  4835 ;; Defined at:
  4836 ;;		line 93 in file "mcc_generated_files/tmr1.c"
  4837 ;; Parameters:    Size  Location     Type
  4838 ;;		None
  4839 ;; Auto vars:     Size  Location     Type
  4840 ;;		None
  4841 ;; Return value:  Size  Location     Type
  4842 ;;                  1    wreg      void 
  4843 ;; Registers used:
  4844 ;;		None
  4845 ;; Tracked objects:
  4846 ;;		On entry : 0/0
  4847 ;;		On exit  : 0/0
  4848 ;;		Unchanged: 0/0
  4849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4853 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4854 ;;Total ram usage:        0 bytes
  4855 ;; Hardware stack levels used:    1
  4856 ;; Hardware stack levels required when called:    4
  4857 ;; This function calls:
  4858 ;;		Nothing
  4859 ;; This function is called by:
  4860 ;;		_TIMER1_Initialize
  4861 ;; This function uses a non-reentrant model
  4862 ;;
  4863                           
  4864                           
  4865                           ;psect for function _TMR1_StartTimer
  4866  0C49                     _TMR1_StartTimer:	
  4867                           
  4868                           ;mcc_generated_files/tmr1.c: 96:     T1CONbits.TMR1ON = 1;
  4869                           
  4870                           ;incstack = 0
  4871                           ; Regs used in _TMR1_StartTimer: []
  4872  0C49  0020               	movlb	0	; select bank0
  4873  0C4A  1418               	bsf	24,0	;volatile
  4874  0C4B  0008               	return
  4875  0C4C                     __end_of_TMR1_StartTimer:	
  4876                           
  4877                           	psect	text9
  4878  0FAE                     __ptext9:	
  4879 ;; *************** function _SetupGPS *****************
  4880 ;; Defined at:
  4881 ;;		line 351 in file "main.c"
  4882 ;; Parameters:    Size  Location     Type
  4883 ;;		None
  4884 ;; Auto vars:     Size  Location     Type
  4885 ;;		None
  4886 ;; Return value:  Size  Location     Type
  4887 ;;                  1    wreg      void 
  4888 ;; Registers used:
  4889 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4890 ;; Tracked objects:
  4891 ;;		On entry : 0/0
  4892 ;;		On exit  : 0/0
  4893 ;;		Unchanged: 0/0
  4894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4897 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4898 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4899 ;;Total ram usage:        2 bytes
  4900 ;; Hardware stack levels used:    1
  4901 ;; Hardware stack levels required when called:   13
  4902 ;; This function calls:
  4903 ;;		_GPS_HasAcknowledged
  4904 ;;		_GPS_SendUBX
  4905 ;;		_printf
  4906 ;; This function is called by:
  4907 ;;		_main
  4908 ;; This function uses a non-reentrant model
  4909 ;;
  4910                           
  4911                           
  4912                           ;psect for function _SetupGPS
  4913  0FAE                     _SetupGPS:	
  4914  0FAE                     l3213:	
  4915                           ;main.c: 353:     while (!gps_configured)
  4916                           
  4917                           ;incstack = 0
  4918                           ; Regs used in _SetupGPS: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4919                           
  4920                           
  4921                           ;main.c: 353:     while (!gps_configured)
  4922  0FAE  0021               	movlb	1	; select bank1
  4923  0FAF  082A               	movf	_gps_configured^(0+128),w
  4924  0FB0  1D03               	btfss	3,2
  4925  0FB1  2FD0               	goto	l3215
  4926                           
  4927                           ;main.c: 354:     {;main.c: 356:         do { LATAbits.LATA5 = 0; } while(0);
  4928  0FB2  0022               	movlb	2	; select bank2
  4929  0FB3  128C               	bcf	12,5	;volatile
  4930                           
  4931                           ;main.c: 358:         GPS_SendUBX(setNavFlightMode);
  4932  0FB4  30A0               	movlw	(low (_setNavFlightMode| (0+512)))& (0+255)
  4933  0FB5  318D  25B9  318F   	fcall	_GPS_SendUBX
  4934                           
  4935                           ;main.c: 359:         gps_configured = GPS_HasAcknowledged(setNavFlightMode);
  4936  0FB8  30A0               	movlw	(low (_setNavFlightMode| (0+512)))& (0+255)
  4937  0FB9  3186  264D  318F   	fcall	_GPS_HasAcknowledged
  4938  0FBC  0021               	movlb	1	; select bank1
  4939  0FBD  00CD               	movwf	??_SetupGPS^(0+128)
  4940  0FBE  084D               	movf	??_SetupGPS^(0+128),w
  4941  0FBF  00AA               	movwf	_gps_configured^(0+128)
  4942  0FC0  0022               	movlb	2	; select bank2
  4943  0FC1  168C               	bsf	12,5	;volatile
  4944                           
  4945                           ;main.c: 363:         _delay((unsigned long)((500)*(4000000/4000.0)));
  4946  0FC2  3003               	movlw	3
  4947  0FC3  0021               	movlb	1	; select bank1
  4948  0FC4  00CE               	movwf	(??_SetupGPS^(0+128)+1)
  4949  0FC5  308A               	movlw	138
  4950  0FC6  00CD               	movwf	??_SetupGPS^(0+128)
  4951  0FC7  3055               	movlw	85
  4952  0FC8                     u3047:	
  4953  0FC8  0B89               	decfsz	9,f
  4954  0FC9  2FC8               	goto	u3047
  4955  0FCA  0BCD               	decfsz	??_SetupGPS^(0+128),f
  4956  0FCB  2FC8               	goto	u3047
  4957  0FCC  0BCE               	decfsz	(??_SetupGPS^(0+128)+1),f
  4958  0FCD  2FC8               	goto	u3047
  4959  0FCE  3200               	nop2
  4960  0FCF  2FAE               	goto	l3213
  4961  0FD0                     l3215:	
  4962                           
  4963                           ;main.c: 366:     gps_configured = 0;
  4964  0FD0  01AA               	clrf	_gps_configured^(0+128)
  4965                           
  4966                           ;main.c: 369:     printf("$PUBX,40,GLL,0,0,0,0*5C\r\n");
  4967  0FD1  304E               	movlw	low (STR_1| (0+32768))
  4968  0FD2  00C8               	movwf	printf@fmt^(0+128)
  4969  0FD3  3090               	movlw	high (STR_1| (0+32768))
  4970  0FD4  00C9               	movwf	(printf@fmt^(0+128)+1)
  4971  0FD5  318C  24D6  318F   	fcall	_printf
  4972                           
  4973                           ;main.c: 370:     printf("$PUBX,40,GGA,0,0,0,0*44\r\n");
  4974  0FD8  3000               	movlw	low (STR_2| (0+32768))
  4975  0FD9  0021               	movlb	1	; select bank1
  4976  0FDA  00C8               	movwf	printf@fmt^(0+128)
  4977  0FDB  3090               	movlw	high (STR_2| (0+32768))
  4978  0FDC  00C9               	movwf	(printf@fmt^(0+128)+1)
  4979  0FDD  318C  24D6  318F   	fcall	_printf
  4980                           
  4981                           ;main.c: 371:     printf("$PUBX,40,VTG,0,0,0,0*5E\r\n");
  4982  0FE0  3082               	movlw	low (STR_3| (0+32768))
  4983  0FE1  0021               	movlb	1	; select bank1
  4984  0FE2  00C8               	movwf	printf@fmt^(0+128)
  4985  0FE3  3090               	movlw	high (STR_3| (0+32768))
  4986  0FE4  00C9               	movwf	(printf@fmt^(0+128)+1)
  4987  0FE5  318C  24D6  318F   	fcall	_printf
  4988                           
  4989                           ;main.c: 372:     printf("$PUBX,40,GSV,0,0,0,0*59\r\n");
  4990  0FE8  3034               	movlw	low (STR_4| (0+32768))
  4991  0FE9  0021               	movlb	1	; select bank1
  4992  0FEA  00C8               	movwf	printf@fmt^(0+128)
  4993  0FEB  3090               	movlw	high (STR_4| (0+32768))
  4994  0FEC  00C9               	movwf	(printf@fmt^(0+128)+1)
  4995  0FED  318C  24D6  318F   	fcall	_printf
  4996                           
  4997                           ;main.c: 373:     printf("$PUBX,40,GSA,0,0,0,0*4E\r\n");
  4998  0FF0  3068               	movlw	low (STR_5| (0+32768))
  4999  0FF1  0021               	movlb	1	; select bank1
  5000  0FF2  00C8               	movwf	printf@fmt^(0+128)
  5001  0FF3  3090               	movlw	high (STR_5| (0+32768))
  5002  0FF4  00C9               	movwf	(printf@fmt^(0+128)+1)
  5003  0FF5  318C  24D6  318F   	fcall	_printf
  5004                           
  5005                           ;main.c: 374:     printf("$PUBX,40,RMC,0,0,0,0*47\r\n");
  5006  0FF8  301A               	movlw	low (STR_6| (0+32768))
  5007  0FF9  0021               	movlb	1	; select bank1
  5008  0FFA  00C8               	movwf	printf@fmt^(0+128)
  5009  0FFB  3090               	movlw	high (STR_6| (0+32768))
  5010  0FFC  00C9               	movwf	(printf@fmt^(0+128)+1)
  5011  0FFD  318C  24D6         	fcall	_printf
  5012  0FFF  0008               	return
  5013  1000                     __end_of_SetupGPS:	
  5014                           
  5015                           	psect	text10
  5016  0CD6                     __ptext10:	
  5017 ;; *************** function _printf *****************
  5018 ;; Defined at:
  5019 ;;		line 5 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\printf.c"
  5020 ;; Parameters:    Size  Location     Type
  5021 ;;  fmt             2    3[BANK1 ] PTR const unsigned char 
  5022 ;;		 -> STR_6(26), STR_5(26), STR_4(26), STR_3(26), 
  5023 ;;		 -> STR_2(26), STR_1(26), 
  5024 ;; Auto vars:     Size  Location     Type
  5025 ;;  ret             2    0        int 
  5026 ;;  ap              1    7[BANK1 ] PTR void [1]
  5027 ;;		 -> ?_printf(2), ?_sprintf(2), 
  5028 ;; Return value:  Size  Location     Type
  5029 ;;                  2    3[BANK1 ] int 
  5030 ;; Registers used:
  5031 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5032 ;; Tracked objects:
  5033 ;;		On entry : 0/0
  5034 ;;		On exit  : 0/0
  5035 ;;		Unchanged: 0/0
  5036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5037 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  5038 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5039 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5040 ;;      Totals:         0       1       5       0       0       0       0       0       0       0       0       0       
      +0       0
  5041 ;;Total ram usage:        6 bytes
  5042 ;; Hardware stack levels used:    1
  5043 ;; Hardware stack levels required when called:   12
  5044 ;; This function calls:
  5045 ;;		_vfprintf
  5046 ;; This function is called by:
  5047 ;;		_SetupGPS
  5048 ;; This function uses a non-reentrant model
  5049 ;;
  5050                           
  5051                           
  5052                           ;psect for function _printf
  5053  0CD6                     _printf:	
  5054                           
  5055                           ;incstack = 0
  5056                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5057  0CD6  30CA               	movlw	(low ((?_printf| 0+2)))& (0+255)
  5058  0CD7  0020               	movlb	0	; select bank0
  5059  0CD8  00EF               	movwf	??_printf
  5060  0CD9  086F               	movf	??_printf,w
  5061  0CDA  0021               	movlb	1	; select bank1
  5062  0CDB  00CC               	movwf	printf@ap^(0+128)
  5063  0CDC  0849               	movf	(printf@fmt+1)^(0+128),w
  5064  0CDD  0020               	movlb	0	; select bank0
  5065  0CDE  00EB               	movwf	vfprintf@fmt+1
  5066  0CDF  0021               	movlb	1	; select bank1
  5067  0CE0  0848               	movf	printf@fmt^(0+128),w
  5068  0CE1  0020               	movlb	0	; select bank0
  5069  0CE2  00EA               	movwf	vfprintf@fmt
  5070  0CE3  30CC               	movlw	(low (printf@ap| 0))& (0+255)
  5071  0CE4  00EF               	movwf	??_printf
  5072  0CE5  086F               	movf	??_printf,w
  5073  0CE6  00EC               	movwf	vfprintf@ap
  5074  0CE7  3000               	movlw	0
  5075  0CE8  3187  27C1         	fcall	_vfprintf
  5076  0CEA  0008               	return
  5077  0CEB                     __end_of_printf:	
  5078                           
  5079                           	psect	text11
  5080  07C1                     __ptext11:	
  5081 ;; *************** function _vfprintf *****************
  5082 ;; Defined at:
  5083 ;;		line 1368 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c"
  5084 ;; Parameters:    Size  Location     Type
  5085 ;;  fp              1    wreg     PTR struct _IO_FILE
  5086 ;;		 -> sprintf@f(5), NULL(0), 
  5087 ;;  fmt             2   74[BANK0 ] PTR const unsigned char 
  5088 ;;		 -> STR_8(13), STR_7(23), STR_6(26), STR_5(26), 
  5089 ;;		 -> STR_4(26), STR_3(26), STR_2(26), STR_1(26), 
  5090 ;;  ap              1   76[BANK0 ] PTR PTR void 
  5091 ;;		 -> printf@ap(1), sprintf@ap(1), 
  5092 ;; Auto vars:     Size  Location     Type
  5093 ;;  fp              1    0[BANK1 ] PTR struct _IO_FILE
  5094 ;;		 -> sprintf@f(5), NULL(0), 
  5095 ;;  cfmt            2    1[BANK1 ] PTR unsigned char 
  5096 ;;		 -> STR_8(13), STR_7(23), STR_6(26), STR_5(26), 
  5097 ;;		 -> STR_4(26), STR_3(26), STR_2(26), STR_1(26), 
  5098 ;; Return value:  Size  Location     Type
  5099 ;;                  2   74[BANK0 ] int 
  5100 ;; Registers used:
  5101 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5102 ;; Tracked objects:
  5103 ;;		On entry : 0/0
  5104 ;;		On exit  : 0/0
  5105 ;;		Unchanged: 0/0
  5106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5107 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5108 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5109 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5110 ;;      Totals:         0       5       3       0       0       0       0       0       0       0       0       0       
      +0       0
  5111 ;;Total ram usage:        8 bytes
  5112 ;; Hardware stack levels used:    1
  5113 ;; Hardware stack levels required when called:   11
  5114 ;; This function calls:
  5115 ;;		_vfpfcnvrt
  5116 ;; This function is called by:
  5117 ;;		_sprintf
  5118 ;;		_printf
  5119 ;; This function uses a non-reentrant model
  5120 ;;
  5121                           
  5122                           
  5123                           ;psect for function _vfprintf
  5124  07C1                     _vfprintf:	
  5125                           
  5126                           ;incstack = 0
  5127                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5128                           ;vfprintf@fp stored from wreg
  5129  07C1  0021               	movlb	1	; select bank1
  5130  07C2  00C5               	movwf	vfprintf@fp^(0+128)
  5131                           
  5132                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 1368: int vfprintf(FIL
      +                          E *fp, const char *fmt, va_list ap);K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\comm
      +                          on\doprnt.c: 1369: {;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 13
      +                          71:     char *cfmt;;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 137
      +                          3:     cfmt = (char *)fmt;
  5133  07C3  0020               	movlb	0	; select bank0
  5134  07C4  086B               	movf	vfprintf@fmt+1,w
  5135  07C5  0021               	movlb	1	; select bank1
  5136  07C6  00C7               	movwf	(vfprintf@cfmt+1)^(0+128)
  5137  07C7  0020               	movlb	0	; select bank0
  5138  07C8  086A               	movf	vfprintf@fmt,w
  5139  07C9  0021               	movlb	1	; select bank1
  5140  07CA  00C6               	movwf	vfprintf@cfmt^(0+128)
  5141                           
  5142                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 1374:     nout = 0;
  5143  07CB  01A4               	clrf	_nout^(0+128)
  5144  07CC  01A5               	clrf	(_nout+1)^(0+128)
  5145  07CD                     l2987:	
  5146                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 1375:     while (*cfmt
      +                          ) {
  5147                           
  5148                           
  5149                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 1375:     while (*cfmt
      +                          ) {
  5150  07CD  0846               	movf	vfprintf@cfmt^(0+128),w
  5151  07CE  0084               	movwf	4
  5152  07CF  0847               	movf	(vfprintf@cfmt+1)^(0+128),w
  5153  07D0  0085               	movwf	5
  5154  07D1  0012               	moviw fsr0++
  5155  07D2  1903               	btfsc	3,2
  5156  07D3  2FEB               	goto	l2989
  5157                           
  5158                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 1376:         nout += 
      +                          vfpfcnvrt(fp, &cfmt, ap);
  5159  07D4  30C6               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  5160  07D5  0020               	movlb	0	; select bank0
  5161  07D6  00ED               	movwf	??_vfprintf
  5162  07D7  086D               	movf	??_vfprintf,w
  5163  07D8  00D8               	movwf	vfpfcnvrt@fmt
  5164  07D9  086C               	movf	vfprintf@ap,w
  5165  07DA  00EE               	movwf	??_vfprintf+1
  5166  07DB  086E               	movf	??_vfprintf+1,w
  5167  07DC  00D9               	movwf	vfpfcnvrt@ap
  5168  07DD  0021               	movlb	1	; select bank1
  5169  07DE  0845               	movf	vfprintf@fp^(0+128),w
  5170  07DF  3182  22B8  3187   	fcall	_vfpfcnvrt
  5171  07E2  0020               	movlb	0	; select bank0
  5172  07E3  0858               	movf	?_vfpfcnvrt,w
  5173  07E4  0021               	movlb	1	; select bank1
  5174  07E5  07A4               	addwf	_nout^(0+128),f
  5175  07E6  0020               	movlb	0	; select bank0
  5176  07E7  0859               	movf	?_vfpfcnvrt+1,w
  5177  07E8  0021               	movlb	1	; select bank1
  5178  07E9  3DA5               	addwfc	(_nout+1)^(0+128),f
  5179  07EA  2FCD               	goto	l2987
  5180  07EB                     l2989:	
  5181                           
  5182                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 1378:     return nout;
  5183  07EB  0825               	movf	(_nout+1)^(0+128),w
  5184  07EC  0020               	movlb	0	; select bank0
  5185  07ED  00EB               	movwf	?_vfprintf+1
  5186  07EE  0021               	movlb	1	; select bank1
  5187  07EF  0824               	movf	_nout^(0+128),w
  5188  07F0  0020               	movlb	0	; select bank0
  5189  07F1  00EA               	movwf	?_vfprintf
  5190  07F2  0008               	return
  5191  07F3                     __end_of_vfprintf:	
  5192                           
  5193                           	psect	text12
  5194  02B8                     __ptext12:	
  5195 ;; *************** function _vfpfcnvrt *****************
  5196 ;; Defined at:
  5197 ;;		line 670 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c"
  5198 ;; Parameters:    Size  Location     Type
  5199 ;;  fp              1    wreg     PTR struct _IO_FILE
  5200 ;;		 -> sprintf@f(5), NULL(0), 
  5201 ;;  fmt             1   56[BANK0 ] PTR PTR unsigned char 
  5202 ;;		 -> vfprintf@cfmt(2), 
  5203 ;;  ap              1   57[BANK0 ] PTR PTR void 
  5204 ;;		 -> printf@ap(1), sprintf@ap(1), 
  5205 ;; Auto vars:     Size  Location     Type
  5206 ;;  fp              1   73[BANK0 ] PTR struct _IO_FILE
  5207 ;;		 -> sprintf@f(5), NULL(0), 
  5208 ;;  ll              8   63[BANK0 ] long long 
  5209 ;;  llu             8    0        unsigned long long 
  5210 ;;  f               4    0        unsigned long long 
  5211 ;;  ct              3    0        unsigned char [3]
  5212 ;;  cp              2   71[BANK0 ] PTR unsigned char 
  5213 ;;		 -> ?_printf(2), ?_sprintf(2), gps_vertical_velocity(8), gps_course_over_ground(8), 
  5214 ;;		 -> gps_speed_over_ground(8), gps_altitude(12), gps_longitude(16), gps_latitude(16), 
  5215 ;;		 -> gps_time(10), 
  5216 ;;  vp              2    0        PTR void 
  5217 ;;  i               2    0        int 
  5218 ;;  done            2    0        int 
  5219 ;;  c               1    0        unsigned char 
  5220 ;; Return value:  Size  Location     Type
  5221 ;;                  2   56[BANK0 ] int 
  5222 ;; Registers used:
  5223 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5224 ;; Tracked objects:
  5225 ;;		On entry : 0/0
  5226 ;;		On exit  : 0/0
  5227 ;;		Unchanged: 0/0
  5228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5229 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5230 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5231 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5232 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5233 ;;Total ram usage:       18 bytes
  5234 ;; Hardware stack levels used:    1
  5235 ;; Hardware stack levels required when called:   10
  5236 ;; This function calls:
  5237 ;;		_dtoa
  5238 ;;		_fputc
  5239 ;;		_stoa
  5240 ;; This function is called by:
  5241 ;;		_vfprintf
  5242 ;; This function uses a non-reentrant model
  5243 ;;
  5244                           
  5245                           
  5246                           ;psect for function _vfpfcnvrt
  5247  02B8                     _vfpfcnvrt:	
  5248                           
  5249                           ;incstack = 0
  5250                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5251                           ;vfpfcnvrt@fp stored from wreg
  5252  02B8  0020               	movlb	0	; select bank0
  5253  02B9  00E9               	movwf	vfpfcnvrt@fp
  5254                           
  5255                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 670: static int vfpfcn
      +                          vrt(FILE *fp, char *fmt[], va_list ap);K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\c
      +                          ommon\doprnt.c: 671: {;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 
      +                          672:     char c, *cp, ct[3];;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\dopr
      +                          nt.c: 673:     int done, i;;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprn
      +                          t.c: 674:     long long ll;;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprn
      +                          t.c: 675:     unsigned long long llu;
  5256  02BA  0858               	movf	vfpfcnvrt@fmt,w
  5257  02BB  0086               	movwf	6
  5258  02BC  0187               	clrf	7
  5259  02BD  3F40               	moviw [0]fsr1
  5260  02BE  00DA               	movwf	??_vfpfcnvrt
  5261  02BF  3F41               	moviw [1]fsr1
  5262  02C0  00DB               	movwf	??_vfpfcnvrt+1
  5263  02C1  085A               	movf	??_vfpfcnvrt,w
  5264  02C2  0084               	movwf	4
  5265  02C3  085B               	movf	??_vfpfcnvrt+1,w
  5266  02C4  0085               	movwf	5
  5267  02C5  0012               	moviw fsr0++
  5268  02C6  3A25               	xorlw	37
  5269  02C7  1D03               	btfss	3,2
  5270  02C8  2B95               	goto	l2947
  5271                           
  5272                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 681:         ++*fmt;
  5273  02C9  0858               	movf	vfpfcnvrt@fmt,w
  5274  02CA  0086               	movwf	6
  5275  02CB  0187               	clrf	7
  5276  02CC  3001               	movlw	1
  5277  02CD  0781               	addwf	1,f
  5278  02CE  3141               	addfsr 1,1
  5279  02CF  1803               	skipnc
  5280  02D0  0A81               	incf	1,f
  5281                           
  5282                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 683:         flags = w
      +                          idth = 0;
  5283  02D1  0021               	movlb	1	; select bank1
  5284  02D2  01A6               	clrf	_width^(0+128)
  5285  02D3  01A7               	clrf	(_width+1)^(0+128)
  5286  02D4  01FA               	clrf	_flags
  5287  02D5  01FB               	clrf	_flags+1
  5288                           
  5289                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 684:         prec = -1
      +                          ;
  5290  02D6  30FF               	movlw	255
  5291  02D7  00A8               	movwf	_prec^(0+128)
  5292  02D8  30FF               	movlw	255
  5293  02D9  00A9               	movwf	(_prec^(0+128)+1)
  5294                           
  5295                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 825:         if ((*fmt
      +                          [0] == 'd') || (*fmt[0] == 'i')) {
  5296  02DA  0020               	movlb	0	; select bank0
  5297  02DB  0858               	movf	vfpfcnvrt@fmt,w
  5298  02DC  0086               	movwf	6
  5299  02DD  0187               	clrf	7
  5300  02DE  3F40               	moviw [0]fsr1
  5301  02DF  00DA               	movwf	??_vfpfcnvrt
  5302  02E0  3F41               	moviw [1]fsr1
  5303  02E1  00DB               	movwf	??_vfpfcnvrt+1
  5304  02E2  085A               	movf	??_vfpfcnvrt,w
  5305  02E3  0084               	movwf	4
  5306  02E4  085B               	movf	??_vfpfcnvrt+1,w
  5307  02E5  0085               	movwf	5
  5308  02E6  0012               	moviw fsr0++
  5309  02E7  3A64               	xorlw	100
  5310  02E8  1903               	btfsc	3,2
  5311  02E9  2AF9               	goto	l2913
  5312  02EA  0858               	movf	vfpfcnvrt@fmt,w
  5313  02EB  0086               	movwf	6
  5314  02EC  0187               	clrf	7
  5315  02ED  3F40               	moviw [0]fsr1
  5316  02EE  00DA               	movwf	??_vfpfcnvrt
  5317  02EF  3F41               	moviw [1]fsr1
  5318  02F0  00DB               	movwf	??_vfpfcnvrt+1
  5319  02F1  085A               	movf	??_vfpfcnvrt,w
  5320  02F2  0084               	movwf	4
  5321  02F3  085B               	movf	??_vfpfcnvrt+1,w
  5322  02F4  0085               	movwf	5
  5323  02F5  0012               	moviw fsr0++
  5324  02F6  3A69               	xorlw	105
  5325  02F7  1D03               	btfss	3,2
  5326  02F8  2B33               	goto	l2921
  5327  02F9                     l2913:	
  5328                           
  5329                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 827:             ++*fm
      +                          t;
  5330  02F9  0858               	movf	vfpfcnvrt@fmt,w
  5331  02FA  0086               	movwf	6
  5332  02FB  0187               	clrf	7
  5333  02FC  3001               	movlw	1
  5334  02FD  0781               	addwf	1,f
  5335  02FE  3141               	addfsr 1,1
  5336  02FF  1803               	skipnc
  5337  0300  0A81               	incf	1,f
  5338                           
  5339                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 828:             ll = 
      +                          (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  5340  0301  0859               	movf	vfpfcnvrt@ap,w
  5341  0302  0086               	movwf	6
  5342  0303  0187               	clrf	7
  5343  0304  0801               	movf	1,w
  5344  0305  0084               	movwf	4
  5345  0306  0185               	clrf	5
  5346  0307  3002               	movlw	2
  5347  0308  0781               	addwf	1,f
  5348  0309  3F00               	moviw [0]fsr0
  5349  030A  00DA               	movwf	??_vfpfcnvrt
  5350  030B  3F01               	moviw [1]fsr0
  5351  030C  00DB               	movwf	??_vfpfcnvrt+1
  5352  030D  085A               	movf	??_vfpfcnvrt,w
  5353  030E  00DF               	movwf	vfpfcnvrt@ll
  5354  030F  085B               	movf	??_vfpfcnvrt+1,w
  5355  0310  00E0               	movwf	vfpfcnvrt@ll+1
  5356  0311  0D89               	rlf	9,f
  5357  0312  3B89               	subwfb	9,f
  5358  0313  0989               	comf	9,f
  5359  0314  00E1               	movwf	vfpfcnvrt@ll+2
  5360  0315  00E2               	movwf	vfpfcnvrt@ll+3
  5361  0316  00E3               	movwf	vfpfcnvrt@ll+4
  5362  0317  00E4               	movwf	vfpfcnvrt@ll+5
  5363  0318  00E5               	movwf	vfpfcnvrt@ll+6
  5364  0319  00E6               	movwf	vfpfcnvrt@ll+7
  5365                           
  5366                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 830:             retur
      +                          n dtoa(fp, ll);
  5367  031A  085F               	movf	vfpfcnvrt@ll,w
  5368  031B  00BA               	movwf	dtoa@d
  5369  031C  0860               	movf	vfpfcnvrt@ll+1,w
  5370  031D  00BB               	movwf	dtoa@d+1
  5371  031E  0861               	movf	vfpfcnvrt@ll+2,w
  5372  031F  00BC               	movwf	dtoa@d+2
  5373  0320  0862               	movf	vfpfcnvrt@ll+3,w
  5374  0321  00BD               	movwf	dtoa@d+3
  5375  0322  0863               	movf	vfpfcnvrt@ll+4,w
  5376  0323  00BE               	movwf	dtoa@d+4
  5377  0324  0864               	movf	vfpfcnvrt@ll+5,w
  5378  0325  00BF               	movwf	dtoa@d+5
  5379  0326  0865               	movf	vfpfcnvrt@ll+6,w
  5380  0327  00C0               	movwf	dtoa@d+6
  5381  0328  0866               	movf	vfpfcnvrt@ll+7,w
  5382  0329  00C1               	movwf	dtoa@d+7
  5383  032A  0869               	movf	vfpfcnvrt@fp,w
  5384  032B  3180  2049         	fcall	_dtoa
  5385  032D  0020               	movlb	0	; select bank0
  5386  032E  083B               	movf	?_dtoa+1,w
  5387  032F  00D9               	movwf	?_vfpfcnvrt+1
  5388  0330  083A               	movf	?_dtoa,w
  5389  0331  00D8               	movwf	?_vfpfcnvrt
  5390  0332  0008               	return
  5391  0333                     l2921:	
  5392                           
  5393                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 1149:         if (*fmt
      +                          [0] == 's') {
  5394  0333  0858               	movf	vfpfcnvrt@fmt,w
  5395  0334  0086               	movwf	6
  5396  0335  0187               	clrf	7
  5397  0336  3F40               	moviw [0]fsr1
  5398  0337  00DA               	movwf	??_vfpfcnvrt
  5399  0338  3F41               	moviw [1]fsr1
  5400  0339  00DB               	movwf	??_vfpfcnvrt+1
  5401  033A  085A               	movf	??_vfpfcnvrt,w
  5402  033B  0084               	movwf	4
  5403  033C  085B               	movf	??_vfpfcnvrt+1,w
  5404  033D  0085               	movwf	5
  5405  033E  0012               	moviw fsr0++
  5406  033F  3A73               	xorlw	115
  5407  0340  1D03               	btfss	3,2
  5408  0341  2B63               	goto	l2931
  5409                           
  5410                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 1151:             ++*f
      +                          mt;
  5411  0342  0858               	movf	vfpfcnvrt@fmt,w
  5412  0343  0086               	movwf	6
  5413  0344  0187               	clrf	7
  5414  0345  3001               	movlw	1
  5415  0346  0781               	addwf	1,f
  5416  0347  3141               	addfsr 1,1
  5417  0348  1803               	skipnc
  5418  0349  0A81               	incf	1,f
  5419                           
  5420                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 1152:             cp =
      +                           (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  5421  034A  0859               	movf	vfpfcnvrt@ap,w
  5422  034B  0086               	movwf	6
  5423  034C  0187               	clrf	7
  5424  034D  0801               	movf	1,w
  5425  034E  0084               	movwf	4
  5426  034F  0185               	clrf	5
  5427  0350  3002               	movlw	2
  5428  0351  0781               	addwf	1,f
  5429  0352  3F00               	moviw [0]fsr0
  5430  0353  00E7               	movwf	vfpfcnvrt@cp
  5431  0354  3F01               	moviw [1]fsr0
  5432  0355  00E8               	movwf	vfpfcnvrt@cp+1
  5433                           
  5434                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 1154:             retu
      +                          rn stoa(fp, cp);
  5435  0356  0868               	movf	vfpfcnvrt@cp+1,w
  5436  0357  00A6               	movwf	stoa@s+1
  5437  0358  0867               	movf	vfpfcnvrt@cp,w
  5438  0359  00A5               	movwf	stoa@s
  5439  035A  0869               	movf	vfpfcnvrt@fp,w
  5440  035B  3185  258A         	fcall	_stoa
  5441  035D  0020               	movlb	0	; select bank0
  5442  035E  0826               	movf	?_stoa+1,w
  5443  035F  00D9               	movwf	?_vfpfcnvrt+1
  5444  0360  0825               	movf	?_stoa,w
  5445  0361  00D8               	movwf	?_vfpfcnvrt
  5446  0362  0008               	return
  5447  0363                     l2931:	
  5448                           
  5449                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 1350:         if ((*fm
      +                          t)[0] == '%') {
  5450  0363  0858               	movf	vfpfcnvrt@fmt,w
  5451  0364  0086               	movwf	6
  5452  0365  0187               	clrf	7
  5453  0366  3F40               	moviw [0]fsr1
  5454  0367  00DA               	movwf	??_vfpfcnvrt
  5455  0368  3F41               	moviw [1]fsr1
  5456  0369  00DB               	movwf	??_vfpfcnvrt+1
  5457  036A  085A               	movf	??_vfpfcnvrt,w
  5458  036B  0084               	movwf	4
  5459  036C  085B               	movf	??_vfpfcnvrt+1,w
  5460  036D  0085               	movwf	5
  5461  036E  0012               	moviw fsr0++
  5462  036F  3A25               	xorlw	37
  5463  0370  1D03               	btfss	3,2
  5464  0371  2B8A               	goto	l2941
  5465                           
  5466                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 1351:             ++*f
      +                          mt;
  5467  0372  0858               	movf	vfpfcnvrt@fmt,w
  5468  0373  0086               	movwf	6
  5469  0374  0187               	clrf	7
  5470  0375  3001               	movlw	1
  5471  0376  0781               	addwf	1,f
  5472  0377  3141               	addfsr 1,1
  5473  0378  1803               	skipnc
  5474  0379  0A81               	incf	1,f
  5475                           
  5476                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 1352:             fput
      +                          c((int)'%', fp);
  5477  037A  3025               	movlw	37
  5478  037B  00F4               	movwf	fputc@c
  5479  037C  3000               	movlw	0
  5480  037D  00F5               	movwf	fputc@c+1
  5481  037E  0869               	movf	vfpfcnvrt@fp,w
  5482  037F  00DA               	movwf	??_vfpfcnvrt
  5483  0380  085A               	movf	??_vfpfcnvrt,w
  5484  0381  00F6               	movwf	fputc@fp
  5485  0382  318E  26C9         	fcall	_fputc
  5486  0384                     l2937:	
  5487                           
  5488                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 1353:             retu
      +                          rn 1;
  5489  0384  3001               	movlw	1
  5490  0385  0020               	movlb	0	; select bank0
  5491  0386  00D8               	movwf	?_vfpfcnvrt
  5492  0387  3000               	movlw	0
  5493  0388  00D9               	movwf	?_vfpfcnvrt+1
  5494  0389  0008               	return
  5495  038A                     l2941:	
  5496                           
  5497                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 1357:         ++*fmt;
  5498  038A  0858               	movf	vfpfcnvrt@fmt,w
  5499  038B  0086               	movwf	6
  5500  038C  0187               	clrf	7
  5501  038D  3001               	movlw	1
  5502  038E  0781               	addwf	1,f
  5503  038F  3141               	addfsr 1,1
  5504  0390  1803               	skipnc
  5505  0391  0A81               	incf	1,f
  5506                           
  5507                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 1358:         return 0
      +                          ;
  5508  0392  01D8               	clrf	?_vfpfcnvrt
  5509  0393  01D9               	clrf	?_vfpfcnvrt+1
  5510  0394  0008               	return
  5511  0395                     l2947:	
  5512                           
  5513                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 1362:     fputc((int)(
      +                          *fmt)[0], fp);
  5514  0395  0858               	movf	vfpfcnvrt@fmt,w
  5515  0396  0086               	movwf	6
  5516  0397  0187               	clrf	7
  5517  0398  3F40               	moviw [0]fsr1
  5518  0399  00DA               	movwf	??_vfpfcnvrt
  5519  039A  3F41               	moviw [1]fsr1
  5520  039B  00DB               	movwf	??_vfpfcnvrt+1
  5521  039C  085A               	movf	??_vfpfcnvrt,w
  5522  039D  0084               	movwf	4
  5523  039E  085B               	movf	??_vfpfcnvrt+1,w
  5524  039F  0085               	movwf	5
  5525  03A0  0800               	movf	0,w	;code access
  5526  03A1  00DC               	movwf	??_vfpfcnvrt+2
  5527  03A2  01DD               	clrf	??_vfpfcnvrt+3
  5528  03A3  085C               	movf	??_vfpfcnvrt+2,w
  5529  03A4  00F4               	movwf	fputc@c
  5530  03A5  085D               	movf	??_vfpfcnvrt+3,w
  5531  03A6  00F5               	movwf	fputc@c+1
  5532  03A7  0869               	movf	vfpfcnvrt@fp,w
  5533  03A8  00DE               	movwf	??_vfpfcnvrt+4
  5534  03A9  085E               	movf	??_vfpfcnvrt+4,w
  5535  03AA  00F6               	movwf	fputc@fp
  5536  03AB  318E  26C9  3182   	fcall	_fputc
  5537                           
  5538                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 1363:     ++*fmt;
  5539  03AE  0020               	movlb	0	; select bank0
  5540  03AF  0858               	movf	vfpfcnvrt@fmt,w
  5541  03B0  0086               	movwf	6
  5542  03B1  0187               	clrf	7
  5543  03B2  3001               	movlw	1
  5544  03B3  0781               	addwf	1,f
  5545  03B4  3141               	addfsr 1,1
  5546  03B5  1803               	skipnc
  5547  03B6  0A81               	incf	1,f
  5548  03B7  2B84               	goto	l2937
  5549  03B8                     __end_of_vfpfcnvrt:	
  5550                           
  5551                           	psect	text13
  5552  058A                     __ptext13:	
  5553 ;; *************** function _stoa *****************
  5554 ;; Defined at:
  5555 ;;		line 546 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c"
  5556 ;; Parameters:    Size  Location     Type
  5557 ;;  fp              1    wreg     PTR struct _IO_FILE
  5558 ;;		 -> sprintf@f(5), NULL(0), 
  5559 ;;  s               2    5[BANK0 ] PTR unsigned char 
  5560 ;;		 -> ?_printf(2), ?_sprintf(2), gps_vertical_velocity(8), gps_course_over_ground(8), 
  5561 ;;		 -> gps_speed_over_ground(8), gps_altitude(12), gps_longitude(16), gps_latitude(16), 
  5562 ;;		 -> gps_time(10), 
  5563 ;; Auto vars:     Size  Location     Type
  5564 ;;  fp              1   18[BANK0 ] PTR struct _IO_FILE
  5565 ;;		 -> sprintf@f(5), NULL(0), 
  5566 ;;  nuls            7    7[BANK0 ] unsigned char [7]
  5567 ;;  l               2   23[BANK0 ] int 
  5568 ;;  p               2   21[BANK0 ] int 
  5569 ;;  cp              2   19[BANK0 ] PTR unsigned char 
  5570 ;;		 -> ?_printf(2), ?_sprintf(2), stoa@nuls(7), gps_vertical_velocity(8), 
  5571 ;;		 -> gps_course_over_ground(8), gps_speed_over_ground(8), gps_altitude(12), gps_longitude(16), 
  5572 ;;		 -> gps_latitude(16), gps_time(10), 
  5573 ;;  w               2   16[BANK0 ] int 
  5574 ;;  i               2   14[BANK0 ] int 
  5575 ;; Return value:  Size  Location     Type
  5576 ;;                  2    5[BANK0 ] int 
  5577 ;; Registers used:
  5578 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5579 ;; Tracked objects:
  5580 ;;		On entry : 0/0
  5581 ;;		On exit  : 0/0
  5582 ;;		Unchanged: 0/0
  5583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5584 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5585 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5586 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5587 ;;      Totals:         3      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5588 ;;Total ram usage:       23 bytes
  5589 ;; Hardware stack levels used:    1
  5590 ;; Hardware stack levels required when called:    7
  5591 ;; This function calls:
  5592 ;;		_fputc
  5593 ;;		_strlen
  5594 ;; This function is called by:
  5595 ;;		_vfpfcnvrt
  5596 ;; This function uses a non-reentrant model
  5597 ;;
  5598                           
  5599                           
  5600                           ;psect for function _stoa
  5601  058A                     _stoa:	
  5602                           
  5603                           ;incstack = 0
  5604                           ; Regs used in _stoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5605                           ;stoa@fp stored from wreg
  5606  058A  0020               	movlb	0	; select bank0
  5607  058B  00B2               	movwf	stoa@fp
  5608                           
  5609                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 546: static int stoa(F
      +                          ILE *fp, char *s);K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 547: 
      +                          {;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 548:     char *cp, nu
      +                          ls[] = "(null)";
  5610  058C  30E2               	movlw	low stoa@F1139
  5611  058D  0086               	movwf	6
  5612  058E  3000               	movlw	high stoa@F1139
  5613  058F  0087               	movwf	7
  5614  0590  3027               	movlw	low stoa@nuls
  5615  0591  0084               	movwf	4
  5616  0592  3000               	movlw	high stoa@nuls
  5617  0593  0085               	movwf	5
  5618  0594  3007               	movlw	7
  5619  0595  00F7               	movwf	??_stoa
  5620  0596                     u2540:	
  5621  0596  0016               	moviw fsr1++
  5622  0597  001A               	movwi fsr0++
  5623  0598  0BF7               	decfsz	??_stoa,f
  5624  0599  2D96               	goto	u2540
  5625                           
  5626                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 549:     int i, l, p, 
      +                          w;;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 552:     cp = s;
  5627  059A  0826               	movf	stoa@s+1,w
  5628  059B  00B4               	movwf	stoa@cp+1
  5629  059C  0825               	movf	stoa@s,w
  5630  059D  00B3               	movwf	stoa@cp
  5631                           
  5632                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 553:     if (!cp) {
  5633  059E  0833               	movf	stoa@cp,w
  5634  059F  0434               	iorwf	stoa@cp+1,w
  5635  05A0  1D03               	btfss	3,2
  5636  05A1  2DA6               	goto	l2859
  5637                           
  5638                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 554:         cp = nuls
      +                          ;
  5639  05A2  3027               	movlw	low stoa@nuls
  5640  05A3  00B3               	movwf	stoa@cp
  5641  05A4  3000               	movlw	high stoa@nuls
  5642  05A5  00B4               	movwf	stoa@cp+1
  5643  05A6                     l2859:	
  5644                           
  5645                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 558:     l = strlen(cp
      +                          );
  5646  05A6  0834               	movf	stoa@cp+1,w
  5647  05A7  00F3               	movwf	strlen@s+1
  5648  05A8  0833               	movf	stoa@cp,w
  5649  05A9  00F2               	movwf	strlen@s
  5650  05AA  318C  24EB  3185   	fcall	_strlen
  5651  05AD  0873               	movf	?_strlen+1,w
  5652  05AE  0020               	movlb	0	; select bank0
  5653  05AF  00B8               	movwf	stoa@l+1
  5654  05B0  0872               	movf	?_strlen,w
  5655  05B1  00B7               	movwf	stoa@l
  5656                           
  5657                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 559:     p = prec;
  5658  05B2  0021               	movlb	1	; select bank1
  5659  05B3  0829               	movf	(_prec+1)^(0+128),w
  5660  05B4  0020               	movlb	0	; select bank0
  5661  05B5  00B6               	movwf	stoa@p+1
  5662  05B6  0021               	movlb	1	; select bank1
  5663  05B7  0828               	movf	_prec^(0+128),w
  5664  05B8  0020               	movlb	0	; select bank0
  5665  05B9  00B5               	movwf	stoa@p
  5666                           
  5667                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 560:     l = (!(p < 0)
      +                           && (p < l)) ? p : l;
  5668  05BA  1BB6               	btfsc	stoa@p+1,7
  5669  05BB  2DCD               	goto	l527
  5670  05BC  0836               	movf	stoa@p+1,w
  5671  05BD  3A80               	xorlw	128
  5672  05BE  00F7               	movwf	??_stoa
  5673  05BF  0838               	movf	stoa@l+1,w
  5674  05C0  3A80               	xorlw	128
  5675  05C1  0277               	subwf	??_stoa,w
  5676  05C2  1D03               	skipz
  5677  05C3  2DC6               	goto	u2575
  5678  05C4  0837               	movf	stoa@l,w
  5679  05C5  0235               	subwf	stoa@p,w
  5680  05C6                     u2575:	
  5681  05C6  1803               	btfsc	3,0
  5682  05C7  2DCD               	goto	l527
  5683  05C8  0020               	movlb	0	; select bank0
  5684  05C9  0836               	movf	stoa@p+1,w
  5685  05CA  00B8               	movwf	stoa@l+1
  5686  05CB  0835               	movf	stoa@p,w
  5687  05CC  00B7               	movwf	stoa@l
  5688  05CD                     l527:	
  5689                           
  5690                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 561:     p = l;
  5691  05CD  0020               	movlb	0	; select bank0
  5692  05CE  0838               	movf	stoa@l+1,w
  5693  05CF  00B6               	movwf	stoa@p+1
  5694  05D0  0837               	movf	stoa@l,w
  5695  05D1  00B5               	movwf	stoa@p
  5696                           
  5697                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 562:     w = width;
  5698  05D2  0021               	movlb	1	; select bank1
  5699  05D3  0827               	movf	(_width+1)^(0+128),w
  5700  05D4  0020               	movlb	0	; select bank0
  5701  05D5  00B1               	movwf	stoa@w+1
  5702  05D6  0021               	movlb	1	; select bank1
  5703  05D7  0826               	movf	_width^(0+128),w
  5704  05D8  0020               	movlb	0	; select bank0
  5705  05D9  00B0               	movwf	stoa@w
  5706                           
  5707                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 565:     if (!(flags &
      +                           (1 << 0))) {
  5708  05DA  1C7A               	btfss	_flags,0
  5709  05DB  2DEE               	goto	l2877
  5710  05DC  2DFA               	goto	l2879
  5711  05DD                     l2873:	
  5712                           
  5713                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 567:             fputc
      +                          (' ', fp);
  5714  05DD  3020               	movlw	32
  5715  05DE  00F4               	movwf	fputc@c
  5716  05DF  3000               	movlw	0
  5717  05E0  00F5               	movwf	fputc@c+1
  5718  05E1  0020               	movlb	0	; select bank0
  5719  05E2  0832               	movf	stoa@fp,w
  5720  05E3  00F7               	movwf	??_stoa
  5721  05E4  0877               	movf	??_stoa,w
  5722  05E5  00F6               	movwf	fputc@fp
  5723  05E6  318E  26C9  3185   	fcall	_fputc
  5724                           
  5725                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 568:             ++l;
  5726  05E9  3001               	movlw	1
  5727  05EA  0020               	movlb	0	; select bank0
  5728  05EB  07B7               	addwf	stoa@l,f
  5729  05EC  3000               	movlw	0
  5730  05ED  3DB8               	addwfc	stoa@l+1,f
  5731  05EE                     l2877:	
  5732                           
  5733                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 566:         while (l 
      +                          < w) {
  5734  05EE  0838               	movf	stoa@l+1,w
  5735  05EF  3A80               	xorlw	128
  5736  05F0  00F7               	movwf	??_stoa
  5737  05F1  0831               	movf	stoa@w+1,w
  5738  05F2  3A80               	xorlw	128
  5739  05F3  0277               	subwf	??_stoa,w
  5740  05F4  1D03               	skipz
  5741  05F5  2DF8               	goto	u2595
  5742  05F6  0830               	movf	stoa@w,w
  5743  05F7  0237               	subwf	stoa@l,w
  5744  05F8                     u2595:	
  5745  05F8  1C03               	skipc
  5746  05F9  2DDD               	goto	l2873
  5747  05FA                     l2879:	
  5748                           
  5749                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 573:     i = 0;
  5750  05FA  0020               	movlb	0	; select bank0
  5751  05FB  01AE               	clrf	stoa@i
  5752  05FC  01AF               	clrf	stoa@i+1
  5753  05FD                     l2887:	
  5754                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 574:     while (i < p)
      +                           {
  5755                           
  5756                           
  5757                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 574:     while (i < p)
      +                           {
  5758  05FD  082F               	movf	stoa@i+1,w
  5759  05FE  3A80               	xorlw	128
  5760  05FF  00F7               	movwf	??_stoa
  5761  0600  0836               	movf	stoa@p+1,w
  5762  0601  3A80               	xorlw	128
  5763  0602  0277               	subwf	??_stoa,w
  5764  0603  1D03               	skipz
  5765  0604  2E07               	goto	u2605
  5766  0605  0835               	movf	stoa@p,w
  5767  0606  022E               	subwf	stoa@i,w
  5768  0607                     u2605:	
  5769  0607  1803               	btfsc	3,0
  5770  0608  2E26               	goto	l536
  5771                           
  5772                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 575:         fputc(*cp
      +                          , fp);
  5773  0609  0020               	movlb	0	; select bank0
  5774  060A  0833               	movf	stoa@cp,w
  5775  060B  0086               	movwf	6
  5776  060C  0834               	movf	stoa@cp+1,w
  5777  060D  0087               	movwf	7
  5778  060E  0801               	movf	1,w
  5779  060F  00F7               	movwf	??_stoa
  5780  0610  01F8               	clrf	??_stoa+1
  5781  0611  0877               	movf	??_stoa,w
  5782  0612  00F4               	movwf	fputc@c
  5783  0613  0878               	movf	??_stoa+1,w
  5784  0614  00F5               	movwf	fputc@c+1
  5785  0615  0832               	movf	stoa@fp,w
  5786  0616  00F9               	movwf	??_stoa+2
  5787  0617  0879               	movf	??_stoa+2,w
  5788  0618  00F6               	movwf	fputc@fp
  5789  0619  318E  26C9  3185   	fcall	_fputc
  5790                           
  5791                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 576:         ++cp;
  5792  061C  3001               	movlw	1
  5793  061D  0020               	movlb	0	; select bank0
  5794  061E  07B3               	addwf	stoa@cp,f
  5795  061F  3000               	movlw	0
  5796  0620  3DB4               	addwfc	stoa@cp+1,f
  5797                           
  5798                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 577:         ++i;
  5799  0621  3001               	movlw	1
  5800  0622  07AE               	addwf	stoa@i,f
  5801  0623  3000               	movlw	0
  5802  0624  3DAF               	addwfc	stoa@i+1,f
  5803  0625  2DFD               	goto	l2887
  5804  0626                     l536:	
  5805                           
  5806                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 581:     if (flags & (
      +                          1 << 0)) {
  5807  0626  187A               	btfsc	_flags,0
  5808  0627  2E3A               	goto	l2895
  5809  0628  2E47               	goto	l2897
  5810  0629                     l2891:	
  5811                           
  5812                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 583:             fputc
      +                          (' ', fp);
  5813  0629  3020               	movlw	32
  5814  062A  00F4               	movwf	fputc@c
  5815  062B  3000               	movlw	0
  5816  062C  00F5               	movwf	fputc@c+1
  5817  062D  0020               	movlb	0	; select bank0
  5818  062E  0832               	movf	stoa@fp,w
  5819  062F  00F7               	movwf	??_stoa
  5820  0630  0877               	movf	??_stoa,w
  5821  0631  00F6               	movwf	fputc@fp
  5822  0632  318E  26C9  3185   	fcall	_fputc
  5823                           
  5824                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 584:             ++l;
  5825  0635  3001               	movlw	1
  5826  0636  0020               	movlb	0	; select bank0
  5827  0637  07B7               	addwf	stoa@l,f
  5828  0638  3000               	movlw	0
  5829  0639  3DB8               	addwfc	stoa@l+1,f
  5830  063A                     l2895:	
  5831                           
  5832                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 582:         while (l 
      +                          < w) {
  5833  063A  0020               	movlb	0	; select bank0
  5834  063B  0838               	movf	stoa@l+1,w
  5835  063C  3A80               	xorlw	128
  5836  063D  00F7               	movwf	??_stoa
  5837  063E  0831               	movf	stoa@w+1,w
  5838  063F  3A80               	xorlw	128
  5839  0640  0277               	subwf	??_stoa,w
  5840  0641  1D03               	skipz
  5841  0642  2E45               	goto	u2625
  5842  0643  0830               	movf	stoa@w,w
  5843  0644  0237               	subwf	stoa@l,w
  5844  0645                     u2625:	
  5845  0645  1C03               	skipc
  5846  0646  2E29               	goto	l2891
  5847  0647                     l2897:	
  5848                           
  5849                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 588:     return l;
  5850  0647  0020               	movlb	0	; select bank0
  5851  0648  0838               	movf	stoa@l+1,w
  5852  0649  00A6               	movwf	?_stoa+1
  5853  064A  0837               	movf	stoa@l,w
  5854  064B  00A5               	movwf	?_stoa
  5855  064C  0008               	return
  5856  064D                     __end_of_stoa:	
  5857                           
  5858                           	psect	text14
  5859  0049                     __ptext14:	
  5860 ;; *************** function _dtoa *****************
  5861 ;; Defined at:
  5862 ;;		line 274 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c"
  5863 ;; Parameters:    Size  Location     Type
  5864 ;;  fp              1    wreg     PTR struct _IO_FILE
  5865 ;;		 -> sprintf@f(5), NULL(0), 
  5866 ;;  d               8   26[BANK0 ] long long 
  5867 ;; Auto vars:     Size  Location     Type
  5868 ;;  fp              1   37[BANK0 ] PTR struct _IO_FILE
  5869 ;;		 -> sprintf@f(5), NULL(0), 
  5870 ;;  n               8   46[BANK0 ] long long 
  5871 ;;  i               2   54[BANK0 ] int 
  5872 ;;  s               2   44[BANK0 ] int 
  5873 ;;  w               2   42[BANK0 ] int 
  5874 ;;  p               2   40[BANK0 ] int 
  5875 ;; Return value:  Size  Location     Type
  5876 ;;                  2   26[BANK0 ] int 
  5877 ;; Registers used:
  5878 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5879 ;; Tracked objects:
  5880 ;;		On entry : 0/0
  5881 ;;		On exit  : 0/0
  5882 ;;		Unchanged: 0/0
  5883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5884 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5885 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5886 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5887 ;;      Totals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5888 ;;Total ram usage:       30 bytes
  5889 ;; Hardware stack levels used:    1
  5890 ;; Hardware stack levels required when called:    9
  5891 ;; This function calls:
  5892 ;;		___aodiv
  5893 ;;		___aomod
  5894 ;;		_abs
  5895 ;;		_pad
  5896 ;; This function is called by:
  5897 ;;		_vfpfcnvrt
  5898 ;; This function uses a non-reentrant model
  5899 ;;
  5900                           
  5901                           
  5902                           ;psect for function _dtoa
  5903  0049                     _dtoa:	
  5904                           
  5905                           ;incstack = 0
  5906                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5907                           ;dtoa@fp stored from wreg
  5908  0049  0020               	movlb	0	; select bank0
  5909  004A  00C5               	movwf	dtoa@fp
  5910                           
  5911                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 274: static int dtoa(F
      +                          ILE *fp, long long d);K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 2
      +                          75: {;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 276:     int i, p
      +                          , s, w;;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 277:     long l
      +                          ong n;;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 280:     n = d;
  5912  004B  083A               	movf	dtoa@d,w
  5913  004C  00CE               	movwf	dtoa@n
  5914  004D  083B               	movf	dtoa@d+1,w
  5915  004E  00CF               	movwf	dtoa@n+1
  5916  004F  083C               	movf	dtoa@d+2,w
  5917  0050  00D0               	movwf	dtoa@n+2
  5918  0051  083D               	movf	dtoa@d+3,w
  5919  0052  00D1               	movwf	dtoa@n+3
  5920  0053  083E               	movf	dtoa@d+4,w
  5921  0054  00D2               	movwf	dtoa@n+4
  5922  0055  083F               	movf	dtoa@d+5,w
  5923  0056  00D3               	movwf	dtoa@n+5
  5924  0057  0840               	movf	dtoa@d+6,w
  5925  0058  00D4               	movwf	dtoa@n+6
  5926  0059  0841               	movf	dtoa@d+7,w
  5927  005A  00D5               	movwf	dtoa@n+7
  5928                           
  5929                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 281:     s = n < 0 ? 1
      +                           : 0;
  5930  005B  304E               	movlw	low dtoa@n
  5931  005C  0086               	movwf	6
  5932  005D  3000               	movlw	high dtoa@n
  5933  005E  0087               	movwf	7
  5934  005F  3F47               	moviw [7]fsr1
  5935  0060  00C2               	movwf	??_dtoa
  5936  0061  1FC2               	btfss	??_dtoa,7
  5937  0062  2865               	goto	u2380
  5938  0063  3001               	movlw	1
  5939  0064  2866               	goto	u2390
  5940  0065                     u2380:	
  5941  0065  3000               	movlw	0
  5942  0066                     u2390:	
  5943  0066  0020               	movlb	0	; select bank0
  5944  0067  00C3               	movwf	??_dtoa+1
  5945  0068  01C4               	clrf	??_dtoa+2
  5946  0069  0843               	movf	??_dtoa+1,w
  5947  006A  00CC               	movwf	dtoa@s
  5948  006B  0844               	movf	??_dtoa+2,w
  5949  006C  00CD               	movwf	dtoa@s+1
  5950                           
  5951                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 282:     if (s) {
  5952  006D  084C               	movf	dtoa@s,w
  5953  006E  044D               	iorwf	dtoa@s+1,w
  5954  006F  1903               	btfsc	3,2
  5955  0070  288F               	goto	l495
  5956                           
  5957                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 283:         n = -n;
  5958  0071  09CE               	comf	dtoa@n,f
  5959  0072  09CF               	comf	dtoa@n+1,f
  5960  0073  09D0               	comf	dtoa@n+2,f
  5961  0074  09D1               	comf	dtoa@n+3,f
  5962  0075  09D2               	comf	dtoa@n+4,f
  5963  0076  09D3               	comf	dtoa@n+5,f
  5964  0077  09D4               	comf	dtoa@n+6,f
  5965  0078  09D5               	comf	dtoa@n+7,f
  5966  0079  0ACE               	incf	dtoa@n,f
  5967  007A  1D03               	skipz
  5968  007B  288F               	goto	l495
  5969  007C  0ACF               	incf	dtoa@n+1,f
  5970  007D  1D03               	skipz
  5971  007E  288F               	goto	l495
  5972  007F  0AD0               	incf	dtoa@n+2,f
  5973  0080  1D03               	skipz
  5974  0081  288F               	goto	l495
  5975  0082  0AD1               	incf	dtoa@n+3,f
  5976  0083  1D03               	skipz
  5977  0084  288F               	goto	l495
  5978  0085  0AD2               	incf	dtoa@n+4,f
  5979  0086  1D03               	skipz
  5980  0087  288F               	goto	l495
  5981  0088  0AD3               	incf	dtoa@n+5,f
  5982  0089  1D03               	skipz
  5983  008A  288F               	goto	l495
  5984  008B  0AD4               	incf	dtoa@n+6,f
  5985  008C  1D03               	skipz
  5986  008D  288F               	goto	l495
  5987  008E  0AD5               	incf	dtoa@n+7,f
  5988  008F                     l495:	
  5989                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 284:     }
  5990                           
  5991                           
  5992                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 287:     if (!(prec < 
      +                          0)) {
  5993  008F  0021               	movlb	1	; select bank1
  5994  0090  1BA9               	btfsc	(_prec+1)^(0+128),7
  5995  0091  2896               	goto	l496
  5996                           
  5997                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 288:         flags &= 
      +                          ~(1 << 1);
  5998  0092  30FD               	movlw	253
  5999  0093  05FA               	andwf	_flags,f
  6000  0094  30FF               	movlw	255
  6001  0095  05FB               	andwf	_flags+1,f
  6002  0096                     l496:	
  6003                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 289:     }
  6004                           
  6005                           
  6006                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 290:     p = (0 < prec
      +                          ) ? prec : 1;
  6007  0096  0829               	movf	(_prec+1)^(0+128),w
  6008  0097  3A80               	xorlw	128
  6009  0098  0020               	movlb	0	; select bank0
  6010  0099  00C2               	movwf	??_dtoa
  6011  009A  3080               	movlw	128
  6012  009B  0242               	subwf	??_dtoa,w
  6013  009C  1D03               	skipz
  6014  009D  28A1               	goto	u2435
  6015  009E  3001               	movlw	1
  6016  009F  0021               	movlb	1	; select bank1
  6017  00A0  0228               	subwf	_prec^(0+128),w
  6018  00A1                     u2435:	
  6019  00A1  1803               	skipnc
  6020  00A2  28A9               	goto	l2805
  6021  00A3  3001               	movlw	1
  6022  00A4  0020               	movlb	0	; select bank0
  6023  00A5  00C8               	movwf	dtoa@p
  6024  00A6  3000               	movlw	0
  6025  00A7  00C9               	movwf	dtoa@p+1
  6026  00A8  28B1               	goto	l500
  6027  00A9                     l2805:	
  6028  00A9  0021               	movlb	1	; select bank1
  6029  00AA  0829               	movf	(_prec+1)^(0+128),w
  6030  00AB  0020               	movlb	0	; select bank0
  6031  00AC  00C9               	movwf	dtoa@p+1
  6032  00AD  0021               	movlb	1	; select bank1
  6033  00AE  0828               	movf	_prec^(0+128),w
  6034  00AF  0020               	movlb	0	; select bank0
  6035  00B0  00C8               	movwf	dtoa@p
  6036  00B1                     l500:	
  6037                           
  6038                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 291:     w = width;
  6039  00B1  0021               	movlb	1	; select bank1
  6040  00B2  0827               	movf	(_width+1)^(0+128),w
  6041  00B3  0020               	movlb	0	; select bank0
  6042  00B4  00CB               	movwf	dtoa@w+1
  6043  00B5  0021               	movlb	1	; select bank1
  6044  00B6  0826               	movf	_width^(0+128),w
  6045  00B7  0020               	movlb	0	; select bank0
  6046  00B8  00CA               	movwf	dtoa@w
  6047                           
  6048                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 292:     if (s || (fla
      +                          gs & (1 << 2))) {
  6049  00B9  084C               	movf	dtoa@s,w
  6050  00BA  044D               	iorwf	dtoa@s+1,w
  6051  00BB  1D03               	btfss	3,2
  6052  00BC  28BF               	goto	l2811
  6053  00BD  1D7A               	btfss	_flags,2
  6054  00BE  28C3               	goto	l501
  6055  00BF                     l2811:	
  6056                           
  6057                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 293:         --w;
  6058  00BF  30FF               	movlw	255
  6059  00C0  07CA               	addwf	dtoa@w,f
  6060  00C1  30FF               	movlw	255
  6061  00C2  3DCB               	addwfc	dtoa@w+1,f
  6062  00C3                     l501:	
  6063                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 294:     }
  6064                           
  6065                           
  6066                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 297:     i = sizeof(db
      +                          uf) - 1;
  6067  00C3  301F               	movlw	31
  6068  00C4  00D6               	movwf	dtoa@i
  6069  00C5  3000               	movlw	0
  6070  00C6  00D7               	movwf	dtoa@i+1
  6071                           
  6072                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 298:     dbuf[i] = '\0
      +                          ';
  6073  00C7  0024               	movlb	4	; select bank4
  6074  00C8  01BF               	clrf	(_dbuf^(0+512)+31)
  6075                           
  6076                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 299:     while (!(i < 
      +                          1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6077  00C9  2956               	goto	l504
  6078  00CA                     l2825:	
  6079  00CA  0020               	movlb	0	; select bank0
  6080  00CB  084E               	movf	dtoa@n,w
  6081  00CC  044F               	iorwf	dtoa@n+1,w
  6082  00CD  0450               	iorwf	dtoa@n+2,w
  6083  00CE  0451               	iorwf	dtoa@n+3,w
  6084  00CF  0452               	iorwf	dtoa@n+4,w
  6085  00D0  0453               	iorwf	dtoa@n+5,w
  6086  00D1  0454               	iorwf	dtoa@n+6,w
  6087  00D2  0455               	iorwf	dtoa@n+7,w
  6088  00D3  1D03               	skipz
  6089  00D4  28ED               	goto	l2815
  6090  00D5  0849               	movf	dtoa@p+1,w
  6091  00D6  3A80               	xorlw	128
  6092  00D7  00C2               	movwf	??_dtoa
  6093  00D8  3080               	movlw	128
  6094  00D9  0242               	subwf	??_dtoa,w
  6095  00DA  1D03               	skipz
  6096  00DB  28DE               	goto	u2485
  6097  00DC  3001               	movlw	1
  6098  00DD  0248               	subwf	dtoa@p,w
  6099  00DE                     u2485:	
  6100  00DE  1803               	skipnc
  6101  00DF  28ED               	goto	l2815
  6102  00E0  0020               	movlb	0	; select bank0
  6103  00E1  084B               	movf	dtoa@w+1,w
  6104  00E2  3A80               	xorlw	128
  6105  00E3  00C2               	movwf	??_dtoa
  6106  00E4  3080               	movlw	128
  6107  00E5  0242               	subwf	??_dtoa,w
  6108  00E6  1D03               	skipz
  6109  00E7  28EA               	goto	u2495
  6110  00E8  3001               	movlw	1
  6111  00E9  024A               	subwf	dtoa@w,w
  6112  00EA                     u2495:	
  6113  00EA  1803               	btfsc	3,0
  6114  00EB  1CFA               	btfss	_flags,1
  6115  00EC  2962               	goto	l2833
  6116  00ED                     l2815:	
  6117                           
  6118                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 300:         --i;
  6119  00ED  30FF               	movlw	255
  6120  00EE  0020               	movlb	0	; select bank0
  6121  00EF  07D6               	addwf	dtoa@i,f
  6122  00F0  30FF               	movlw	255
  6123  00F1  3DD7               	addwfc	dtoa@i+1,f
  6124                           
  6125                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 301:         dbuf[i] =
      +                           '0' + abs(n % 10);
  6126  00F2  300A               	movlw	10
  6127  00F3  00A0               	movwf	___aomod@divisor
  6128  00F4  01A1               	clrf	___aomod@divisor+1
  6129  00F5  01A2               	clrf	___aomod@divisor+2
  6130  00F6  01A3               	clrf	___aomod@divisor+3
  6131  00F7  01A4               	clrf	___aomod@divisor+4
  6132  00F8  01A5               	clrf	___aomod@divisor+5
  6133  00F9  01A6               	clrf	___aomod@divisor+6
  6134  00FA  01A7               	clrf	___aomod@divisor+7
  6135  00FB  084E               	movf	dtoa@n,w
  6136  00FC  00A8               	movwf	___aomod@dividend
  6137  00FD  084F               	movf	dtoa@n+1,w
  6138  00FE  00A9               	movwf	___aomod@dividend+1
  6139  00FF  0850               	movf	dtoa@n+2,w
  6140  0100  00AA               	movwf	___aomod@dividend+2
  6141  0101  0851               	movf	dtoa@n+3,w
  6142  0102  00AB               	movwf	___aomod@dividend+3
  6143  0103  0852               	movf	dtoa@n+4,w
  6144  0104  00AC               	movwf	___aomod@dividend+4
  6145  0105  0853               	movf	dtoa@n+5,w
  6146  0106  00AD               	movwf	___aomod@dividend+5
  6147  0107  0854               	movf	dtoa@n+6,w
  6148  0108  00AE               	movwf	___aomod@dividend+6
  6149  0109  0855               	movf	dtoa@n+7,w
  6150  010A  00AF               	movwf	___aomod@dividend+7
  6151  010B  3184  24AE  3180   	fcall	___aomod
  6152  010E  0020               	movlb	0	; select bank0
  6153  010F  0821               	movf	?___aomod+1,w
  6154  0110  00F6               	movwf	abs@a+1
  6155  0111  0820               	movf	?___aomod,w
  6156  0112  00F5               	movwf	abs@a
  6157  0113  318D  2502  3180   	fcall	_abs
  6158  0116  0875               	movf	?_abs,w
  6159  0117  3E30               	addlw	48
  6160  0118  0020               	movlb	0	; select bank0
  6161  0119  00C2               	movwf	??_dtoa
  6162  011A  0856               	movf	dtoa@i,w
  6163  011B  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6164  011C  0086               	movwf	6
  6165  011D  3002               	movlw	2	; select bank4/5
  6166  011E  0087               	movwf	7
  6167  011F  0842               	movf	??_dtoa,w
  6168  0120  0081               	movwf	1
  6169                           
  6170                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 302:         --p;
  6171  0121  30FF               	movlw	255
  6172  0122  07C8               	addwf	dtoa@p,f
  6173  0123  30FF               	movlw	255
  6174  0124  3DC9               	addwfc	dtoa@p+1,f
  6175                           
  6176                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 303:         --w;
  6177  0125  30FF               	movlw	255
  6178  0126  07CA               	addwf	dtoa@w,f
  6179  0127  30FF               	movlw	255
  6180  0128  3DCB               	addwfc	dtoa@w+1,f
  6181                           
  6182                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 304:         n = n / 1
      +                          0;
  6183  0129  300A               	movlw	10
  6184  012A  00A0               	movwf	___aodiv@divisor
  6185  012B  01A1               	clrf	___aodiv@divisor+1
  6186  012C  01A2               	clrf	___aodiv@divisor+2
  6187  012D  01A3               	clrf	___aodiv@divisor+3
  6188  012E  01A4               	clrf	___aodiv@divisor+4
  6189  012F  01A5               	clrf	___aodiv@divisor+5
  6190  0130  01A6               	clrf	___aodiv@divisor+6
  6191  0131  01A7               	clrf	___aodiv@divisor+7
  6192  0132  084E               	movf	dtoa@n,w
  6193  0133  00A8               	movwf	___aodiv@dividend
  6194  0134  084F               	movf	dtoa@n+1,w
  6195  0135  00A9               	movwf	___aodiv@dividend+1
  6196  0136  0850               	movf	dtoa@n+2,w
  6197  0137  00AA               	movwf	___aodiv@dividend+2
  6198  0138  0851               	movf	dtoa@n+3,w
  6199  0139  00AB               	movwf	___aodiv@dividend+3
  6200  013A  0852               	movf	dtoa@n+4,w
  6201  013B  00AC               	movwf	___aodiv@dividend+4
  6202  013C  0853               	movf	dtoa@n+5,w
  6203  013D  00AD               	movwf	___aodiv@dividend+5
  6204  013E  0854               	movf	dtoa@n+6,w
  6205  013F  00AE               	movwf	___aodiv@dividend+6
  6206  0140  0855               	movf	dtoa@n+7,w
  6207  0141  00AF               	movwf	___aodiv@dividend+7
  6208  0142  3183  23B8  3180   	fcall	___aodiv
  6209  0145  0020               	movlb	0	; select bank0
  6210  0146  0820               	movf	?___aodiv,w
  6211  0147  00CE               	movwf	dtoa@n
  6212  0148  0821               	movf	?___aodiv+1,w
  6213  0149  00CF               	movwf	dtoa@n+1
  6214  014A  0822               	movf	?___aodiv+2,w
  6215  014B  00D0               	movwf	dtoa@n+2
  6216  014C  0823               	movf	?___aodiv+3,w
  6217  014D  00D1               	movwf	dtoa@n+3
  6218  014E  0824               	movf	?___aodiv+4,w
  6219  014F  00D2               	movwf	dtoa@n+4
  6220  0150  0825               	movf	?___aodiv+5,w
  6221  0151  00D3               	movwf	dtoa@n+5
  6222  0152  0826               	movf	?___aodiv+6,w
  6223  0153  00D4               	movwf	dtoa@n+6
  6224  0154  0827               	movf	?___aodiv+7,w
  6225  0155  00D5               	movwf	dtoa@n+7
  6226  0156                     l504:	
  6227                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 305:     }
  6228                           
  6229                           
  6230                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 299:     while (!(i < 
      +                          1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6231  0156  0020               	movlb	0	; select bank0
  6232  0157  0857               	movf	dtoa@i+1,w
  6233  0158  3A80               	xorlw	128
  6234  0159  00C2               	movwf	??_dtoa
  6235  015A  3080               	movlw	128
  6236  015B  0242               	subwf	??_dtoa,w
  6237  015C  1D03               	skipz
  6238  015D  2960               	goto	u2465
  6239  015E  3001               	movlw	1
  6240  015F  0256               	subwf	dtoa@i,w
  6241  0160                     u2465:	
  6242  0160  1803               	btfsc	3,0
  6243  0161  28CA               	goto	l2825
  6244  0162                     l2833:	
  6245                           
  6246                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 308:     if (s || (fla
      +                          gs & (1 << 2))) {
  6247  0162  0020               	movlb	0	; select bank0
  6248  0163  084C               	movf	dtoa@s,w
  6249  0164  044D               	iorwf	dtoa@s+1,w
  6250  0165  1D03               	btfss	3,2
  6251  0166  2969               	goto	l2837
  6252  0167  1D7A               	btfss	_flags,2
  6253  0168  2980               	goto	l2847
  6254  0169                     l2837:	
  6255                           
  6256                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 309:         --i;
  6257  0169  30FF               	movlw	255
  6258  016A  07D6               	addwf	dtoa@i,f
  6259  016B  30FF               	movlw	255
  6260  016C  3DD7               	addwfc	dtoa@i+1,f
  6261                           
  6262                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 310:         dbuf[i] =
      +                           s ? '-' : '+';
  6263  016D  084C               	movf	dtoa@s,w
  6264  016E  044D               	iorwf	dtoa@s+1,w
  6265  016F  1D03               	btfss	3,2
  6266  0170  2973               	goto	l2843
  6267  0171  302B               	movlw	43
  6268  0172  2974               	goto	L1
  6269  0173                     l2843:	
  6270  0173  302D               	movlw	45
  6271  0174                     L1:	
  6272  0174  00C6               	movwf	_dtoa$708
  6273  0175  3000               	movlw	0
  6274  0176  00C7               	movwf	_dtoa$708+1
  6275  0177  0846               	movf	_dtoa$708,w
  6276  0178  00C2               	movwf	??_dtoa
  6277  0179  0856               	movf	dtoa@i,w
  6278  017A  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6279  017B  0086               	movwf	6
  6280  017C  3002               	movlw	2	; select bank4/5
  6281  017D  0087               	movwf	7
  6282  017E  0842               	movf	??_dtoa,w
  6283  017F  0081               	movwf	1
  6284  0180                     l2847:	
  6285                           
  6286                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 314:     return pad(fp
      +                          , &dbuf[i], w);
  6287  0180  0856               	movf	dtoa@i,w
  6288  0181  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6289  0182  00C2               	movwf	??_dtoa
  6290  0183  0842               	movf	??_dtoa,w
  6291  0184  00AA               	movwf	pad@buf
  6292  0185  084B               	movf	dtoa@w+1,w
  6293  0186  00AC               	movwf	pad@p+1
  6294  0187  084A               	movf	dtoa@w,w
  6295  0188  00AB               	movwf	pad@p
  6296  0189  0845               	movf	dtoa@fp,w
  6297  018A  318F  275E         	fcall	_pad
  6298  018C  0020               	movlb	0	; select bank0
  6299  018D  082B               	movf	?_pad+1,w
  6300  018E  00BB               	movwf	?_dtoa+1
  6301  018F  082A               	movf	?_pad,w
  6302  0190  00BA               	movwf	?_dtoa
  6303  0191  0008               	return
  6304  0192                     __end_of_dtoa:	
  6305                           
  6306                           	psect	text15
  6307  0F5E                     __ptext15:	
  6308 ;; *************** function _pad *****************
  6309 ;; Defined at:
  6310 ;;		line 72 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c"
  6311 ;; Parameters:    Size  Location     Type
  6312 ;;  fp              1    wreg     PTR struct _IO_FILE
  6313 ;;		 -> sprintf@f(5), NULL(0), 
  6314 ;;  buf             1   10[BANK0 ] PTR unsigned char 
  6315 ;;		 -> dbuf(32), 
  6316 ;;  p               2   11[BANK0 ] int 
  6317 ;; Auto vars:     Size  Location     Type
  6318 ;;  fp              1   18[BANK0 ] PTR struct _IO_FILE
  6319 ;;		 -> sprintf@f(5), NULL(0), 
  6320 ;;  w               2   16[BANK0 ] int 
  6321 ;;  i               2   14[BANK0 ] int 
  6322 ;; Return value:  Size  Location     Type
  6323 ;;                  2   10[BANK0 ] int 
  6324 ;; Registers used:
  6325 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6326 ;; Tracked objects:
  6327 ;;		On entry : 0/0
  6328 ;;		On exit  : 0/0
  6329 ;;		Unchanged: 0/0
  6330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6331 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6332 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6333 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6334 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6335 ;;Total ram usage:        9 bytes
  6336 ;; Hardware stack levels used:    1
  6337 ;; Hardware stack levels required when called:    8
  6338 ;; This function calls:
  6339 ;;		_fputc
  6340 ;;		_fputs
  6341 ;;		_strlen
  6342 ;; This function is called by:
  6343 ;;		_dtoa
  6344 ;; This function uses a non-reentrant model
  6345 ;;
  6346                           
  6347                           
  6348                           ;psect for function _pad
  6349  0F5E                     _pad:	
  6350                           
  6351                           ;incstack = 0
  6352                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6353                           ;pad@fp stored from wreg
  6354  0F5E  0020               	movlb	0	; select bank0
  6355  0F5F  00B2               	movwf	pad@fp
  6356                           
  6357                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 72: static int pad(FIL
      +                          E *fp, char *buf, int p);K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c
      +                          : 73: {;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 74:     int i, 
      +                          w;;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 77:     if (flags & 
      +                          (1 << 0)) {
  6358  0F60  1C7A               	btfss	_flags,0
  6359  0F61  2F6A               	goto	l2703
  6360                           
  6361                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 78:         fputs((con
      +                          st char *)buf, fp);
  6362  0F62  0832               	movf	pad@fp,w
  6363  0F63  00AD               	movwf	??_pad
  6364  0F64  082D               	movf	??_pad,w
  6365  0F65  00A5               	movwf	fputs@fp
  6366  0F66  082A               	movf	pad@buf,w
  6367  0F67  318D  2569  318F   	fcall	_fputs
  6368  0F6A                     l2703:	
  6369                           
  6370                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 82:     w = (p < 0) ? 
      +                          0 : p;
  6371  0F6A  0020               	movlb	0	; select bank0
  6372  0F6B  1BAC               	btfsc	pad@p+1,7
  6373  0F6C  2F72               	goto	l2707
  6374  0F6D  082C               	movf	pad@p+1,w
  6375  0F6E  00B1               	movwf	pad@w+1
  6376  0F6F  082B               	movf	pad@p,w
  6377  0F70  00B0               	movwf	pad@w
  6378  0F71  2F74               	goto	l487
  6379  0F72                     l2707:	
  6380  0F72  01B0               	clrf	pad@w
  6381  0F73  01B1               	clrf	pad@w+1
  6382  0F74                     l487:	
  6383                           
  6384                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  6385  0F74  01AE               	clrf	pad@i
  6386  0F75  01AF               	clrf	pad@i+1
  6387  0F76                     l2713:	
  6388                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 84:     while (i < w) 
      +                          {
  6389                           
  6390                           
  6391                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 84:     while (i < w) 
      +                          {
  6392  0F76  082F               	movf	pad@i+1,w
  6393  0F77  3A80               	xorlw	128
  6394  0F78  00AD               	movwf	??_pad
  6395  0F79  0831               	movf	pad@w+1,w
  6396  0F7A  3A80               	xorlw	128
  6397  0F7B  022D               	subwf	??_pad,w
  6398  0F7C  1D03               	skipz
  6399  0F7D  2F80               	goto	u2145
  6400  0F7E  0830               	movf	pad@w,w
  6401  0F7F  022E               	subwf	pad@i,w
  6402  0F80                     u2145:	
  6403  0F80  1803               	btfsc	3,0
  6404  0F81  2F94               	goto	l490
  6405                           
  6406                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 85:         fputc(' ',
      +                           fp);
  6407  0F82  3020               	movlw	32
  6408  0F83  00F4               	movwf	fputc@c
  6409  0F84  3000               	movlw	0
  6410  0F85  00F5               	movwf	fputc@c+1
  6411  0F86  0020               	movlb	0	; select bank0
  6412  0F87  0832               	movf	pad@fp,w
  6413  0F88  00AD               	movwf	??_pad
  6414  0F89  082D               	movf	??_pad,w
  6415  0F8A  00F6               	movwf	fputc@fp
  6416  0F8B  318E  26C9  318F   	fcall	_fputc
  6417                           
  6418                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 86:         ++i;
  6419  0F8E  3001               	movlw	1
  6420  0F8F  0020               	movlb	0	; select bank0
  6421  0F90  07AE               	addwf	pad@i,f
  6422  0F91  3000               	movlw	0
  6423  0F92  3DAF               	addwfc	pad@i+1,f
  6424  0F93  2F76               	goto	l2713
  6425  0F94                     l490:	
  6426                           
  6427                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 90:     if (!(flags & 
      +                          (1 << 0))) {
  6428  0F94  187A               	btfsc	_flags,0
  6429  0F95  2F9F               	goto	l2717
  6430                           
  6431                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 91:         fputs((con
      +                          st char *)buf, fp);
  6432  0F96  0020               	movlb	0	; select bank0
  6433  0F97  0832               	movf	pad@fp,w
  6434  0F98  00AD               	movwf	??_pad
  6435  0F99  082D               	movf	??_pad,w
  6436  0F9A  00A5               	movwf	fputs@fp
  6437  0F9B  082A               	movf	pad@buf,w
  6438  0F9C  318D  2569  318F   	fcall	_fputs
  6439  0F9F                     l2717:	
  6440                           
  6441                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 94:     return strlen(
      +                          buf) + w;
  6442  0F9F  0020               	movlb	0	; select bank0
  6443  0FA0  082A               	movf	pad@buf,w
  6444  0FA1  00F2               	movwf	strlen@s
  6445  0FA2  3002               	movlw	2
  6446  0FA3  00F3               	movwf	strlen@s+1
  6447  0FA4  318C  24EB         	fcall	_strlen
  6448  0FA6  0020               	movlb	0	; select bank0
  6449  0FA7  0830               	movf	pad@w,w
  6450  0FA8  0772               	addwf	?_strlen,w
  6451  0FA9  00AA               	movwf	?_pad
  6452  0FAA  0831               	movf	pad@w+1,w
  6453  0FAB  3D73               	addwfc	?_strlen+1,w
  6454  0FAC  00AB               	movwf	?_pad+1
  6455  0FAD  0008               	return
  6456  0FAE                     __end_of_pad:	
  6457                           
  6458                           	psect	text16
  6459  0D69                     __ptext16:	
  6460 ;; *************** function _fputs *****************
  6461 ;; Defined at:
  6462 ;;		line 8 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\nf_fputs.c"
  6463 ;; Parameters:    Size  Location     Type
  6464 ;;  s               1    wreg     PTR const unsigned char 
  6465 ;;		 -> dbuf(32), 
  6466 ;;  fp              1    5[BANK0 ] PTR struct _IO_FILE
  6467 ;;		 -> sprintf@f(5), NULL(0), 
  6468 ;; Auto vars:     Size  Location     Type
  6469 ;;  s               1    9[BANK0 ] PTR const unsigned char 
  6470 ;;		 -> dbuf(32), 
  6471 ;;  i               2    7[BANK0 ] int 
  6472 ;;  c               1    6[BANK0 ] unsigned char 
  6473 ;; Return value:  Size  Location     Type
  6474 ;;                  2    5[BANK0 ] int 
  6475 ;; Registers used:
  6476 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6477 ;; Tracked objects:
  6478 ;;		On entry : 0/0
  6479 ;;		On exit  : 0/0
  6480 ;;		Unchanged: 0/0
  6481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6482 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6483 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6484 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6485 ;;      Totals:         3       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6486 ;;Total ram usage:        8 bytes
  6487 ;; Hardware stack levels used:    1
  6488 ;; Hardware stack levels required when called:    7
  6489 ;; This function calls:
  6490 ;;		_fputc
  6491 ;; This function is called by:
  6492 ;;		_pad
  6493 ;; This function uses a non-reentrant model
  6494 ;;
  6495                           
  6496                           
  6497                           ;psect for function _fputs
  6498  0D69                     _fputs:	
  6499                           
  6500                           ;incstack = 0
  6501                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6502                           ;fputs@s stored from wreg
  6503  0D69  0020               	movlb	0	; select bank0
  6504  0D6A  00A9               	movwf	fputs@s
  6505  0D6B  01A7               	clrf	fputs@i
  6506  0D6C  01A8               	clrf	fputs@i+1
  6507  0D6D                     l2697:	
  6508  0D6D  0827               	movf	fputs@i,w
  6509  0D6E  0729               	addwf	fputs@s,w
  6510  0D6F  00F7               	movwf	??_fputs
  6511  0D70  0877               	movf	??_fputs,w
  6512  0D71  0086               	movwf	6
  6513  0D72  3002               	movlw	2	; select bank4/5
  6514  0D73  0087               	movwf	7
  6515  0D74  0801               	movf	1,w
  6516  0D75  00F8               	movwf	??_fputs+1
  6517  0D76  0878               	movf	??_fputs+1,w
  6518  0D77  00A6               	movwf	fputs@c
  6519  0D78  0826               	movf	fputs@c,w
  6520  0D79  1903               	btfsc	3,2
  6521  0D7A  0008               	return
  6522  0D7B  0826               	movf	fputs@c,w
  6523  0D7C  00F7               	movwf	??_fputs
  6524  0D7D  01F8               	clrf	??_fputs+1
  6525  0D7E  0877               	movf	??_fputs,w
  6526  0D7F  00F4               	movwf	fputc@c
  6527  0D80  0878               	movf	??_fputs+1,w
  6528  0D81  00F5               	movwf	fputc@c+1
  6529  0D82  0825               	movf	fputs@fp,w
  6530  0D83  00F9               	movwf	??_fputs+2
  6531  0D84  0879               	movf	??_fputs+2,w
  6532  0D85  00F6               	movwf	fputc@fp
  6533  0D86  318E  26C9  318D   	fcall	_fputc
  6534  0D89  3001               	movlw	1
  6535  0D8A  0020               	movlb	0	; select bank0
  6536  0D8B  07A7               	addwf	fputs@i,f
  6537  0D8C  3000               	movlw	0
  6538  0D8D  3DA8               	addwfc	fputs@i+1,f
  6539  0D8E  2D6D               	goto	l2697
  6540  0D8F                     __end_of_fputs:	
  6541                           
  6542                           	psect	text17
  6543  0EC9                     __ptext17:	
  6544 ;; *************** function _fputc *****************
  6545 ;; Defined at:
  6546 ;;		line 8 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\nf_fputc.c"
  6547 ;; Parameters:    Size  Location     Type
  6548 ;;  c               2    4[COMMON] int 
  6549 ;;  fp              1    6[COMMON] PTR struct _IO_FILE
  6550 ;;		 -> sprintf@f(5), NULL(0), 
  6551 ;; Auto vars:     Size  Location     Type
  6552 ;;		None
  6553 ;; Return value:  Size  Location     Type
  6554 ;;                  2    4[COMMON] int 
  6555 ;; Registers used:
  6556 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6557 ;; Tracked objects:
  6558 ;;		On entry : 0/0
  6559 ;;		On exit  : 0/0
  6560 ;;		Unchanged: 0/0
  6561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6562 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6564 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6565 ;;      Totals:         3       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6566 ;;Total ram usage:        8 bytes
  6567 ;; Hardware stack levels used:    1
  6568 ;; Hardware stack levels required when called:    6
  6569 ;; This function calls:
  6570 ;;		_putch
  6571 ;; This function is called by:
  6572 ;;		_pad
  6573 ;;		_stoa
  6574 ;;		_vfpfcnvrt
  6575 ;;		_fputs
  6576 ;; This function uses a non-reentrant model
  6577 ;;
  6578                           
  6579                           
  6580                           ;psect for function _fputc
  6581  0EC9                     _fputc:	
  6582                           
  6583                           ;incstack = 0
  6584                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6585  0EC9  0876               	movf	fputc@fp,w
  6586  0ECA  1D03               	btfss	3,2
  6587  0ECB  0876               	movf	fputc@fp,w
  6588  0ECC  1D03               	btfss	3,2
  6589  0ECD  2ED2               	goto	l2671
  6590  0ECE  0874               	movf	fputc@c,w
  6591  0ECF  318C  2451         	fcall	_putch
  6592  0ED1  0008               	return
  6593  0ED2                     l2671:	
  6594  0ED2  0876               	movf	fputc@fp,w
  6595  0ED3  3E03               	addlw	3
  6596  0ED4  0086               	movwf	6
  6597  0ED5  0187               	clrf	7
  6598  0ED6  0016               	moviw fsr1++
  6599  0ED7  0401               	iorwf	1,w
  6600  0ED8  1903               	btfsc	3,2
  6601  0ED9  2EF6               	goto	l2675
  6602  0EDA  0876               	movf	fputc@fp,w
  6603  0EDB  3E03               	addlw	3
  6604  0EDC  0086               	movwf	6
  6605  0EDD  0187               	clrf	7
  6606  0EDE  3F40               	moviw [0]fsr1
  6607  0EDF  0020               	movlb	0	; select bank0
  6608  0EE0  00A0               	movwf	??_fputc
  6609  0EE1  3F41               	moviw [1]fsr1
  6610  0EE2  00A1               	movwf	??_fputc+1
  6611  0EE3  0A76               	incf	fputc@fp,w
  6612  0EE4  0086               	movwf	6
  6613  0EE5  0187               	clrf	7
  6614  0EE6  3F40               	moviw [0]fsr1
  6615  0EE7  00A2               	movwf	??_fputc+2
  6616  0EE8  3F41               	moviw [1]fsr1
  6617  0EE9  00A3               	movwf	??_fputc+3
  6618  0EEA  0823               	movf	??_fputc+3,w
  6619  0EEB  3A80               	xorlw	128
  6620  0EEC  00A4               	movwf	??_fputc+4
  6621  0EED  0821               	movf	??_fputc+1,w
  6622  0EEE  3A80               	xorlw	128
  6623  0EEF  0224               	subwf	??_fputc+4,w
  6624  0EF0  1D03               	skipz
  6625  0EF1  2EF4               	goto	u2095
  6626  0EF2  0820               	movf	??_fputc,w
  6627  0EF3  0222               	subwf	??_fputc+2,w
  6628  0EF4                     u2095:	
  6629  0EF4  1803               	skipnc
  6630  0EF5  0008               	return
  6631  0EF6                     l2675:	
  6632  0EF6  0874               	movf	fputc@c,w
  6633  0EF7  0020               	movlb	0	; select bank0
  6634  0EF8  00A0               	movwf	??_fputc
  6635  0EF9  0876               	movf	fputc@fp,w
  6636  0EFA  0086               	movwf	6
  6637  0EFB  0187               	clrf	7
  6638  0EFC  0A76               	incf	fputc@fp,w
  6639  0EFD  0084               	movwf	4
  6640  0EFE  0185               	clrf	5
  6641  0EFF  0800               	movf	0,w
  6642  0F00  0701               	addwf	1,w
  6643  0F01  00A1               	movwf	??_fputc+1
  6644  0F02  0821               	movf	??_fputc+1,w
  6645  0F03  0086               	movwf	6
  6646  0F04  3001               	movlw	1	; select bank2/3
  6647  0F05  0087               	movwf	7
  6648  0F06  0820               	movf	??_fputc,w
  6649  0F07  0081               	movwf	1
  6650  0F08  0A76               	incf	fputc@fp,w
  6651  0F09  0086               	movwf	6
  6652  0F0A  0187               	clrf	7
  6653  0F0B  3001               	movlw	1
  6654  0F0C  0781               	addwf	1,f
  6655  0F0D  3141               	addfsr 1,1
  6656  0F0E  1803               	skipnc
  6657  0F0F  0A81               	incf	1,f
  6658  0F10  0008               	return
  6659  0F11                     __end_of_fputc:	
  6660                           
  6661                           	psect	text18
  6662  0C51                     __ptext18:	
  6663 ;; *************** function _putch *****************
  6664 ;; Defined at:
  6665 ;;		line 125 in file "mcc_generated_files/eusart.c"
  6666 ;; Parameters:    Size  Location     Type
  6667 ;;  txData          1    wreg     unsigned char 
  6668 ;; Auto vars:     Size  Location     Type
  6669 ;;  txData          1    3[COMMON] unsigned char 
  6670 ;; Return value:  Size  Location     Type
  6671 ;;                  1    wreg      void 
  6672 ;; Registers used:
  6673 ;;		wreg, status,2, status,0, pclath, cstack
  6674 ;; Tracked objects:
  6675 ;;		On entry : 0/0
  6676 ;;		On exit  : 0/0
  6677 ;;		Unchanged: 0/0
  6678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6680 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6682 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6683 ;;Total ram usage:        1 bytes
  6684 ;; Hardware stack levels used:    1
  6685 ;; Hardware stack levels required when called:    5
  6686 ;; This function calls:
  6687 ;;		_EUSART_Write
  6688 ;; This function is called by:
  6689 ;;		_fputc
  6690 ;; This function uses a non-reentrant model
  6691 ;;
  6692                           
  6693                           
  6694                           ;psect for function _putch
  6695  0C51                     _putch:	
  6696                           
  6697                           ;incstack = 0
  6698                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  6699                           ;putch@txData stored from wreg
  6700  0C51  00F3               	movwf	putch@txData
  6701                           
  6702                           ;mcc_generated_files/eusart.c: 125: void putch(char txData);mcc_generated_files/eusart.c
      +                          : 126: {;mcc_generated_files/eusart.c: 127:     EUSART_Write(txData);
  6703  0C52  0873               	movf	putch@txData,w
  6704  0C53  318C  2476         	fcall	_EUSART_Write
  6705  0C55  0008               	return
  6706  0C56                     __end_of_putch:	
  6707                           
  6708                           	psect	text19
  6709  0D02                     __ptext19:	
  6710 ;; *************** function _abs *****************
  6711 ;; Defined at:
  6712 ;;		line 1 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\abs.c"
  6713 ;; Parameters:    Size  Location     Type
  6714 ;;  a               2    5[COMMON] int 
  6715 ;; Auto vars:     Size  Location     Type
  6716 ;;		None
  6717 ;; Return value:  Size  Location     Type
  6718 ;;                  2    5[COMMON] int 
  6719 ;; Registers used:
  6720 ;;		wreg, status,2, status,0
  6721 ;; Tracked objects:
  6722 ;;		On entry : 0/0
  6723 ;;		On exit  : 0/0
  6724 ;;		Unchanged: 0/0
  6725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6726 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6727 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6728 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6729 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6730 ;;Total ram usage:        4 bytes
  6731 ;; Hardware stack levels used:    1
  6732 ;; Hardware stack levels required when called:    4
  6733 ;; This function calls:
  6734 ;;		Nothing
  6735 ;; This function is called by:
  6736 ;;		_dtoa
  6737 ;; This function uses a non-reentrant model
  6738 ;;
  6739                           
  6740                           
  6741                           ;psect for function _abs
  6742  0D02                     _abs:	
  6743                           
  6744                           ;incstack = 0
  6745                           ; Regs used in _abs: [wreg+status,2+status,0]
  6746  0D02  0876               	movf	abs@a+1,w
  6747  0D03  3A80               	xorlw	128
  6748  0D04  00F7               	movwf	??_abs
  6749  0D05  3080               	movlw	128
  6750  0D06  0277               	subwf	??_abs,w
  6751  0D07  1D03               	skipz
  6752  0D08  2D0B               	goto	u2165
  6753  0D09  3001               	movlw	1
  6754  0D0A  0275               	subwf	abs@a,w
  6755  0D0B                     u2165:	
  6756  0D0B  1803               	skipnc
  6757  0D0C  0008               	return
  6758  0D0D  0975               	comf	abs@a,w
  6759  0D0E  00F7               	movwf	??_abs
  6760  0D0F  0976               	comf	abs@a+1,w
  6761  0D10  00F8               	movwf	??_abs+1
  6762  0D11  0AF7               	incf	??_abs,f
  6763  0D12  1903               	skipnz
  6764  0D13  0AF8               	incf	??_abs+1,f
  6765  0D14  0877               	movf	??_abs,w
  6766  0D15  00F5               	movwf	?_abs
  6767  0D16  0878               	movf	??_abs+1,w
  6768  0D17  00F6               	movwf	?_abs+1
  6769  0D18  0008               	return
  6770  0D19                     __end_of_abs:	
  6771                           
  6772                           	psect	text20
  6773  04AE                     __ptext20:	
  6774 ;; *************** function ___aomod *****************
  6775 ;; Defined at:
  6776 ;;		line 7 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\aomod.c"
  6777 ;; Parameters:    Size  Location     Type
  6778 ;;  divisor         8    0[BANK0 ] long long 
  6779 ;;  dividend        8    8[BANK0 ] long long 
  6780 ;; Auto vars:     Size  Location     Type
  6781 ;;  sign            1    4[COMMON] unsigned char 
  6782 ;;  counter         1    3[COMMON] unsigned char 
  6783 ;; Return value:  Size  Location     Type
  6784 ;;                  8    0[BANK0 ] long long 
  6785 ;; Registers used:
  6786 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6787 ;; Tracked objects:
  6788 ;;		On entry : 0/0
  6789 ;;		On exit  : 0/0
  6790 ;;		Unchanged: 0/0
  6791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6792 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6793 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6794 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6795 ;;      Totals:         3      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6796 ;;Total ram usage:       19 bytes
  6797 ;; Hardware stack levels used:    1
  6798 ;; Hardware stack levels required when called:    4
  6799 ;; This function calls:
  6800 ;;		Nothing
  6801 ;; This function is called by:
  6802 ;;		_dtoa
  6803 ;; This function uses a non-reentrant model
  6804 ;;
  6805                           
  6806                           
  6807                           ;psect for function ___aomod
  6808  04AE                     ___aomod:	
  6809                           
  6810                           ;incstack = 0
  6811                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  6812  04AE  01F4               	clrf	___aomod@sign
  6813  04AF  3028               	movlw	low ___aomod@dividend
  6814  04B0  0086               	movwf	6
  6815  04B1  3000               	movlw	high ___aomod@dividend
  6816  04B2  0087               	movwf	7
  6817  04B3  3F47               	moviw [7]fsr1
  6818  04B4  00F2               	movwf	??___aomod
  6819  04B5  1FF2               	btfss	??___aomod,7
  6820  04B6  2CD8               	goto	l2769
  6821  04B7  0020               	movlb	0	; select bank0
  6822  04B8  09A8               	comf	___aomod@dividend,f
  6823  04B9  09A9               	comf	___aomod@dividend+1,f
  6824  04BA  09AA               	comf	___aomod@dividend+2,f
  6825  04BB  09AB               	comf	___aomod@dividend+3,f
  6826  04BC  09AC               	comf	___aomod@dividend+4,f
  6827  04BD  09AD               	comf	___aomod@dividend+5,f
  6828  04BE  09AE               	comf	___aomod@dividend+6,f
  6829  04BF  09AF               	comf	___aomod@dividend+7,f
  6830  04C0  0AA8               	incf	___aomod@dividend,f
  6831  04C1  1D03               	skipz
  6832  04C2  2CD6               	goto	u229lld
  6833  04C3  0AA9               	incf	___aomod@dividend+1,f
  6834  04C4  1D03               	skipz
  6835  04C5  2CD6               	goto	u229lld
  6836  04C6  0AAA               	incf	___aomod@dividend+2,f
  6837  04C7  1D03               	skipz
  6838  04C8  2CD6               	goto	u229lld
  6839  04C9  0AAB               	incf	___aomod@dividend+3,f
  6840  04CA  1D03               	skipz
  6841  04CB  2CD6               	goto	u229lld
  6842  04CC  0AAC               	incf	___aomod@dividend+4,f
  6843  04CD  1D03               	skipz
  6844  04CE  2CD6               	goto	u229lld
  6845  04CF  0AAD               	incf	___aomod@dividend+5,f
  6846  04D0  1D03               	skipz
  6847  04D1  2CD6               	goto	u229lld
  6848  04D2  0AAE               	incf	___aomod@dividend+6,f
  6849  04D3  1D03               	skipz
  6850  04D4  2CD6               	goto	u229lld
  6851  04D5  0AAF               	incf	___aomod@dividend+7,f
  6852  04D6                     u229lld:	
  6853  04D6  01F4               	clrf	___aomod@sign
  6854  04D7  0AF4               	incf	___aomod@sign,f
  6855  04D8                     l2769:	
  6856  04D8  3020               	movlw	low ___aomod@divisor
  6857  04D9  0086               	movwf	6
  6858  04DA  3000               	movlw	high ___aomod@divisor
  6859  04DB  0087               	movwf	7
  6860  04DC  3F47               	moviw [7]fsr1
  6861  04DD  00F2               	movwf	??___aomod
  6862  04DE  1FF2               	btfss	??___aomod,7
  6863  04DF  2CFF               	goto	l2773
  6864  04E0  0020               	movlb	0	; select bank0
  6865  04E1  09A0               	comf	___aomod@divisor,f
  6866  04E2  09A1               	comf	___aomod@divisor+1,f
  6867  04E3  09A2               	comf	___aomod@divisor+2,f
  6868  04E4  09A3               	comf	___aomod@divisor+3,f
  6869  04E5  09A4               	comf	___aomod@divisor+4,f
  6870  04E6  09A5               	comf	___aomod@divisor+5,f
  6871  04E7  09A6               	comf	___aomod@divisor+6,f
  6872  04E8  09A7               	comf	___aomod@divisor+7,f
  6873  04E9  0AA0               	incf	___aomod@divisor,f
  6874  04EA  1D03               	skipz
  6875  04EB  2CFF               	goto	l2773
  6876  04EC  0AA1               	incf	___aomod@divisor+1,f
  6877  04ED  1D03               	skipz
  6878  04EE  2CFF               	goto	l2773
  6879  04EF  0AA2               	incf	___aomod@divisor+2,f
  6880  04F0  1D03               	skipz
  6881  04F1  2CFF               	goto	l2773
  6882  04F2  0AA3               	incf	___aomod@divisor+3,f
  6883  04F3  1D03               	skipz
  6884  04F4  2CFF               	goto	l2773
  6885  04F5  0AA4               	incf	___aomod@divisor+4,f
  6886  04F6  1D03               	skipz
  6887  04F7  2CFF               	goto	l2773
  6888  04F8  0AA5               	incf	___aomod@divisor+5,f
  6889  04F9  1D03               	skipz
  6890  04FA  2CFF               	goto	l2773
  6891  04FB  0AA6               	incf	___aomod@divisor+6,f
  6892  04FC  1D03               	skipz
  6893  04FD  2CFF               	goto	l2773
  6894  04FE  0AA7               	incf	___aomod@divisor+7,f
  6895  04FF                     l2773:	
  6896  04FF  0020               	movlb	0	; select bank0
  6897  0500  0820               	movf	___aomod@divisor,w
  6898  0501  0421               	iorwf	___aomod@divisor+1,w
  6899  0502  0422               	iorwf	___aomod@divisor+2,w
  6900  0503  0423               	iorwf	___aomod@divisor+3,w
  6901  0504  0424               	iorwf	___aomod@divisor+4,w
  6902  0505  0425               	iorwf	___aomod@divisor+5,w
  6903  0506  0426               	iorwf	___aomod@divisor+6,w
  6904  0507  0427               	iorwf	___aomod@divisor+7,w
  6905  0508  1903               	skipnz
  6906  0509  2D57               	goto	l2789
  6907  050A  01F3               	clrf	___aomod@counter
  6908  050B  0AF3               	incf	___aomod@counter,f
  6909  050C                     l2781:	
  6910  050C  1BA7               	btfsc	___aomod@divisor+7,7
  6911  050D  2D1B               	goto	l2783
  6912  050E  35A0               	lslf	___aomod@divisor,f
  6913  050F  0DA1               	rlf	___aomod@divisor+1,f
  6914  0510  0DA2               	rlf	___aomod@divisor+2,f
  6915  0511  0DA3               	rlf	___aomod@divisor+3,f
  6916  0512  0DA4               	rlf	___aomod@divisor+4,f
  6917  0513  0DA5               	rlf	___aomod@divisor+5,f
  6918  0514  0DA6               	rlf	___aomod@divisor+6,f
  6919  0515  0DA7               	rlf	___aomod@divisor+7,f
  6920  0516  3001               	movlw	1
  6921  0517  00F2               	movwf	??___aomod
  6922  0518  0872               	movf	??___aomod,w
  6923  0519  07F3               	addwf	___aomod@counter,f
  6924  051A  2D0C               	goto	l2781
  6925  051B                     l2783:	
  6926  051B  0827               	movf	___aomod@divisor+7,w
  6927  051C  022F               	subwf	___aomod@dividend+7,w
  6928  051D  1D03               	skipz
  6929  051E  2D39               	goto	u2345
  6930  051F  0826               	movf	___aomod@divisor+6,w
  6931  0520  022E               	subwf	___aomod@dividend+6,w
  6932  0521  1D03               	skipz
  6933  0522  2D39               	goto	u2345
  6934  0523  0825               	movf	___aomod@divisor+5,w
  6935  0524  022D               	subwf	___aomod@dividend+5,w
  6936  0525  1D03               	skipz
  6937  0526  2D39               	goto	u2345
  6938  0527  0824               	movf	___aomod@divisor+4,w
  6939  0528  022C               	subwf	___aomod@dividend+4,w
  6940  0529  1D03               	skipz
  6941  052A  2D39               	goto	u2345
  6942  052B  0823               	movf	___aomod@divisor+3,w
  6943  052C  022B               	subwf	___aomod@dividend+3,w
  6944  052D  1D03               	skipz
  6945  052E  2D39               	goto	u2345
  6946  052F  0822               	movf	___aomod@divisor+2,w
  6947  0530  022A               	subwf	___aomod@dividend+2,w
  6948  0531  1D03               	skipz
  6949  0532  2D39               	goto	u2345
  6950  0533  0821               	movf	___aomod@divisor+1,w
  6951  0534  0229               	subwf	___aomod@dividend+1,w
  6952  0535  1D03               	skipz
  6953  0536  2D39               	goto	u2345
  6954  0537  0820               	movf	___aomod@divisor,w
  6955  0538  0228               	subwf	___aomod@dividend,w
  6956  0539                     u2345:	
  6957  0539  1C03               	skipc
  6958  053A  2D4B               	goto	l2787
  6959  053B  0820               	movf	___aomod@divisor,w
  6960  053C  02A8               	subwf	___aomod@dividend,f
  6961  053D  0821               	movf	___aomod@divisor+1,w
  6962  053E  3BA9               	subwfb	___aomod@dividend+1,f
  6963  053F  0822               	movf	___aomod@divisor+2,w
  6964  0540  3BAA               	subwfb	___aomod@dividend+2,f
  6965  0541  0823               	movf	___aomod@divisor+3,w
  6966  0542  3BAB               	subwfb	___aomod@dividend+3,f
  6967  0543  0824               	movf	___aomod@divisor+4,w
  6968  0544  3BAC               	subwfb	___aomod@dividend+4,f
  6969  0545  0825               	movf	___aomod@divisor+5,w
  6970  0546  3BAD               	subwfb	___aomod@dividend+5,f
  6971  0547  0826               	movf	___aomod@divisor+6,w
  6972  0548  3BAE               	subwfb	___aomod@dividend+6,f
  6973  0549  0827               	movf	___aomod@divisor+7,w
  6974  054A  3BAF               	subwfb	___aomod@dividend+7,f
  6975  054B                     l2787:	
  6976  054B  36A7               	lsrf	___aomod@divisor+7,f
  6977  054C  0CA6               	rrf	___aomod@divisor+6,f
  6978  054D  0CA5               	rrf	___aomod@divisor+5,f
  6979  054E  0CA4               	rrf	___aomod@divisor+4,f
  6980  054F  0CA3               	rrf	___aomod@divisor+3,f
  6981  0550  0CA2               	rrf	___aomod@divisor+2,f
  6982  0551  0CA1               	rrf	___aomod@divisor+1,f
  6983  0552  0CA0               	rrf	___aomod@divisor,f
  6984  0553  3001               	movlw	1
  6985  0554  02F3               	subwf	___aomod@counter,f
  6986  0555  1D03               	btfss	3,2
  6987  0556  2D1B               	goto	l2783
  6988  0557                     l2789:	
  6989  0557  0874               	movf	___aomod@sign,w
  6990  0558  1903               	btfsc	3,2
  6991  0559  2D78               	goto	l673
  6992  055A  09A8               	comf	___aomod@dividend,f
  6993  055B  09A9               	comf	___aomod@dividend+1,f
  6994  055C  09AA               	comf	___aomod@dividend+2,f
  6995  055D  09AB               	comf	___aomod@dividend+3,f
  6996  055E  09AC               	comf	___aomod@dividend+4,f
  6997  055F  09AD               	comf	___aomod@dividend+5,f
  6998  0560  09AE               	comf	___aomod@dividend+6,f
  6999  0561  09AF               	comf	___aomod@dividend+7,f
  7000  0562  0AA8               	incf	___aomod@dividend,f
  7001  0563  1D03               	skipz
  7002  0564  2D78               	goto	l673
  7003  0565  0AA9               	incf	___aomod@dividend+1,f
  7004  0566  1D03               	skipz
  7005  0567  2D78               	goto	l673
  7006  0568  0AAA               	incf	___aomod@dividend+2,f
  7007  0569  1D03               	skipz
  7008  056A  2D78               	goto	l673
  7009  056B  0AAB               	incf	___aomod@dividend+3,f
  7010  056C  1D03               	skipz
  7011  056D  2D78               	goto	l673
  7012  056E  0AAC               	incf	___aomod@dividend+4,f
  7013  056F  1D03               	skipz
  7014  0570  2D78               	goto	l673
  7015  0571  0AAD               	incf	___aomod@dividend+5,f
  7016  0572  1D03               	skipz
  7017  0573  2D78               	goto	l673
  7018  0574  0AAE               	incf	___aomod@dividend+6,f
  7019  0575  1D03               	skipz
  7020  0576  2D78               	goto	l673
  7021  0577  0AAF               	incf	___aomod@dividend+7,f
  7022  0578                     l673:	
  7023  0578  0020               	movlb	0	; select bank0
  7024  0579  0828               	movf	___aomod@dividend,w
  7025  057A  00A0               	movwf	?___aomod
  7026  057B  0829               	movf	___aomod@dividend+1,w
  7027  057C  00A1               	movwf	?___aomod+1
  7028  057D  082A               	movf	___aomod@dividend+2,w
  7029  057E  00A2               	movwf	?___aomod+2
  7030  057F  082B               	movf	___aomod@dividend+3,w
  7031  0580  00A3               	movwf	?___aomod+3
  7032  0581  082C               	movf	___aomod@dividend+4,w
  7033  0582  00A4               	movwf	?___aomod+4
  7034  0583  082D               	movf	___aomod@dividend+5,w
  7035  0584  00A5               	movwf	?___aomod+5
  7036  0585  082E               	movf	___aomod@dividend+6,w
  7037  0586  00A6               	movwf	?___aomod+6
  7038  0587  082F               	movf	___aomod@dividend+7,w
  7039  0588  00A7               	movwf	?___aomod+7
  7040  0589  0008               	return
  7041  058A                     __end_of___aomod:	
  7042                           
  7043                           	psect	text21
  7044  03B8                     __ptext21:	
  7045 ;; *************** function ___aodiv *****************
  7046 ;; Defined at:
  7047 ;;		line 7 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\aodiv.c"
  7048 ;; Parameters:    Size  Location     Type
  7049 ;;  divisor         8    0[BANK0 ] long long 
  7050 ;;  dividend        8    8[BANK0 ] long long 
  7051 ;; Auto vars:     Size  Location     Type
  7052 ;;  quotient        8   18[BANK0 ] long long 
  7053 ;;  sign            1   17[BANK0 ] unsigned char 
  7054 ;;  counter         1   16[BANK0 ] unsigned char 
  7055 ;; Return value:  Size  Location     Type
  7056 ;;                  8    0[BANK0 ] long long 
  7057 ;; Registers used:
  7058 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7059 ;; Tracked objects:
  7060 ;;		On entry : 0/0
  7061 ;;		On exit  : 0/0
  7062 ;;		Unchanged: 0/0
  7063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7064 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7065 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7066 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7067 ;;      Totals:         1      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7068 ;;Total ram usage:       27 bytes
  7069 ;; Hardware stack levels used:    1
  7070 ;; Hardware stack levels required when called:    4
  7071 ;; This function calls:
  7072 ;;		Nothing
  7073 ;; This function is called by:
  7074 ;;		_dtoa
  7075 ;; This function uses a non-reentrant model
  7076 ;;
  7077                           
  7078                           
  7079                           ;psect for function ___aodiv
  7080  03B8                     ___aodiv:	
  7081                           
  7082                           ;incstack = 0
  7083                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  7084  03B8  0020               	movlb	0	; select bank0
  7085  03B9  01B1               	clrf	___aodiv@sign
  7086  03BA  3020               	movlw	low ___aodiv@divisor
  7087  03BB  0086               	movwf	6
  7088  03BC  3000               	movlw	high ___aodiv@divisor
  7089  03BD  0087               	movwf	7
  7090  03BE  3F47               	moviw [7]fsr1
  7091  03BF  00F2               	movwf	??___aodiv
  7092  03C0  1FF2               	btfss	??___aodiv,7
  7093  03C1  2BE4               	goto	l2731
  7094  03C2  0020               	movlb	0	; select bank0
  7095  03C3  09A0               	comf	___aodiv@divisor,f
  7096  03C4  09A1               	comf	___aodiv@divisor+1,f
  7097  03C5  09A2               	comf	___aodiv@divisor+2,f
  7098  03C6  09A3               	comf	___aodiv@divisor+3,f
  7099  03C7  09A4               	comf	___aodiv@divisor+4,f
  7100  03C8  09A5               	comf	___aodiv@divisor+5,f
  7101  03C9  09A6               	comf	___aodiv@divisor+6,f
  7102  03CA  09A7               	comf	___aodiv@divisor+7,f
  7103  03CB  0AA0               	incf	___aodiv@divisor,f
  7104  03CC  1D03               	skipz
  7105  03CD  2BE1               	goto	u218lld
  7106  03CE  0AA1               	incf	___aodiv@divisor+1,f
  7107  03CF  1D03               	skipz
  7108  03D0  2BE1               	goto	u218lld
  7109  03D1  0AA2               	incf	___aodiv@divisor+2,f
  7110  03D2  1D03               	skipz
  7111  03D3  2BE1               	goto	u218lld
  7112  03D4  0AA3               	incf	___aodiv@divisor+3,f
  7113  03D5  1D03               	skipz
  7114  03D6  2BE1               	goto	u218lld
  7115  03D7  0AA4               	incf	___aodiv@divisor+4,f
  7116  03D8  1D03               	skipz
  7117  03D9  2BE1               	goto	u218lld
  7118  03DA  0AA5               	incf	___aodiv@divisor+5,f
  7119  03DB  1D03               	skipz
  7120  03DC  2BE1               	goto	u218lld
  7121  03DD  0AA6               	incf	___aodiv@divisor+6,f
  7122  03DE  1D03               	skipz
  7123  03DF  2BE1               	goto	u218lld
  7124  03E0  0AA7               	incf	___aodiv@divisor+7,f
  7125  03E1                     u218lld:	
  7126  03E1  0020               	movlb	0	; select bank0
  7127  03E2  01B1               	clrf	___aodiv@sign
  7128  03E3  0AB1               	incf	___aodiv@sign,f
  7129  03E4                     l2731:	
  7130  03E4  3028               	movlw	low ___aodiv@dividend
  7131  03E5  0086               	movwf	6
  7132  03E6  3000               	movlw	high ___aodiv@dividend
  7133  03E7  0087               	movwf	7
  7134  03E8  3F47               	moviw [7]fsr1
  7135  03E9  00F2               	movwf	??___aodiv
  7136  03EA  1FF2               	btfss	??___aodiv,7
  7137  03EB  2C10               	goto	l2737
  7138  03EC  0020               	movlb	0	; select bank0
  7139  03ED  09A8               	comf	___aodiv@dividend,f
  7140  03EE  09A9               	comf	___aodiv@dividend+1,f
  7141  03EF  09AA               	comf	___aodiv@dividend+2,f
  7142  03F0  09AB               	comf	___aodiv@dividend+3,f
  7143  03F1  09AC               	comf	___aodiv@dividend+4,f
  7144  03F2  09AD               	comf	___aodiv@dividend+5,f
  7145  03F3  09AE               	comf	___aodiv@dividend+6,f
  7146  03F4  09AF               	comf	___aodiv@dividend+7,f
  7147  03F5  0AA8               	incf	___aodiv@dividend,f
  7148  03F6  1D03               	skipz
  7149  03F7  2C0B               	goto	l2735
  7150  03F8  0AA9               	incf	___aodiv@dividend+1,f
  7151  03F9  1D03               	skipz
  7152  03FA  2C0B               	goto	l2735
  7153  03FB  0AAA               	incf	___aodiv@dividend+2,f
  7154  03FC  1D03               	skipz
  7155  03FD  2C0B               	goto	l2735
  7156  03FE  0AAB               	incf	___aodiv@dividend+3,f
  7157  03FF  1D03               	skipz
  7158  0400  2C0B               	goto	l2735
  7159  0401  0AAC               	incf	___aodiv@dividend+4,f
  7160  0402  1D03               	skipz
  7161  0403  2C0B               	goto	l2735
  7162  0404  0AAD               	incf	___aodiv@dividend+5,f
  7163  0405  1D03               	skipz
  7164  0406  2C0B               	goto	l2735
  7165  0407  0AAE               	incf	___aodiv@dividend+6,f
  7166  0408  1D03               	skipz
  7167  0409  2C0B               	goto	l2735
  7168  040A  0AAF               	incf	___aodiv@dividend+7,f
  7169  040B                     l2735:	
  7170  040B  3001               	movlw	1
  7171  040C  00F2               	movwf	??___aodiv
  7172  040D  0872               	movf	??___aodiv,w
  7173  040E  0020               	movlb	0	; select bank0
  7174  040F  06B1               	xorwf	___aodiv@sign,f
  7175  0410                     l2737:	
  7176  0410  3032               	movlw	low ___aodiv@quotient
  7177  0411  0086               	movwf	6
  7178  0412  3000               	movlw	high ___aodiv@quotient
  7179  0413  0087               	movwf	7
  7180  0414  3008               	movlw	8
  7181  0415  00F2               	movwf	??___aodiv
  7182  0416  3000               	movlw	0
  7183  0417                     u2210:	
  7184  0417  001E               	movwi fsr1++
  7185  0418  0BF2               	decfsz	??___aodiv,f
  7186  0419  2C17               	goto	u2210
  7187  041A  0020               	movlb	0	; select bank0
  7188  041B  0820               	movf	___aodiv@divisor,w
  7189  041C  0421               	iorwf	___aodiv@divisor+1,w
  7190  041D  0422               	iorwf	___aodiv@divisor+2,w
  7191  041E  0423               	iorwf	___aodiv@divisor+3,w
  7192  041F  0424               	iorwf	___aodiv@divisor+4,w
  7193  0420  0425               	iorwf	___aodiv@divisor+5,w
  7194  0421  0426               	iorwf	___aodiv@divisor+6,w
  7195  0422  0427               	iorwf	___aodiv@divisor+7,w
  7196  0423  1903               	skipnz
  7197  0424  2C7B               	goto	l2759
  7198  0425  01B0               	clrf	___aodiv@counter
  7199  0426  0AB0               	incf	___aodiv@counter,f
  7200  0427                     l2747:	
  7201  0427  1BA7               	btfsc	___aodiv@divisor+7,7
  7202  0428  2C36               	goto	l2749
  7203  0429  35A0               	lslf	___aodiv@divisor,f
  7204  042A  0DA1               	rlf	___aodiv@divisor+1,f
  7205  042B  0DA2               	rlf	___aodiv@divisor+2,f
  7206  042C  0DA3               	rlf	___aodiv@divisor+3,f
  7207  042D  0DA4               	rlf	___aodiv@divisor+4,f
  7208  042E  0DA5               	rlf	___aodiv@divisor+5,f
  7209  042F  0DA6               	rlf	___aodiv@divisor+6,f
  7210  0430  0DA7               	rlf	___aodiv@divisor+7,f
  7211  0431  3001               	movlw	1
  7212  0432  00F2               	movwf	??___aodiv
  7213  0433  0872               	movf	??___aodiv,w
  7214  0434  07B0               	addwf	___aodiv@counter,f
  7215  0435  2C27               	goto	l2747
  7216  0436                     l2749:	
  7217  0436  35B2               	lslf	___aodiv@quotient,f
  7218  0437  0DB3               	rlf	___aodiv@quotient+1,f
  7219  0438  0DB4               	rlf	___aodiv@quotient+2,f
  7220  0439  0DB5               	rlf	___aodiv@quotient+3,f
  7221  043A  0DB6               	rlf	___aodiv@quotient+4,f
  7222  043B  0DB7               	rlf	___aodiv@quotient+5,f
  7223  043C  0DB8               	rlf	___aodiv@quotient+6,f
  7224  043D  0DB9               	rlf	___aodiv@quotient+7,f
  7225  043E  0827               	movf	___aodiv@divisor+7,w
  7226  043F  022F               	subwf	___aodiv@dividend+7,w
  7227  0440  1D03               	skipz
  7228  0441  2C5C               	goto	u2245
  7229  0442  0826               	movf	___aodiv@divisor+6,w
  7230  0443  022E               	subwf	___aodiv@dividend+6,w
  7231  0444  1D03               	skipz
  7232  0445  2C5C               	goto	u2245
  7233  0446  0825               	movf	___aodiv@divisor+5,w
  7234  0447  022D               	subwf	___aodiv@dividend+5,w
  7235  0448  1D03               	skipz
  7236  0449  2C5C               	goto	u2245
  7237  044A  0824               	movf	___aodiv@divisor+4,w
  7238  044B  022C               	subwf	___aodiv@dividend+4,w
  7239  044C  1D03               	skipz
  7240  044D  2C5C               	goto	u2245
  7241  044E  0823               	movf	___aodiv@divisor+3,w
  7242  044F  022B               	subwf	___aodiv@dividend+3,w
  7243  0450  1D03               	skipz
  7244  0451  2C5C               	goto	u2245
  7245  0452  0822               	movf	___aodiv@divisor+2,w
  7246  0453  022A               	subwf	___aodiv@dividend+2,w
  7247  0454  1D03               	skipz
  7248  0455  2C5C               	goto	u2245
  7249  0456  0821               	movf	___aodiv@divisor+1,w
  7250  0457  0229               	subwf	___aodiv@dividend+1,w
  7251  0458  1D03               	skipz
  7252  0459  2C5C               	goto	u2245
  7253  045A  0820               	movf	___aodiv@divisor,w
  7254  045B  0228               	subwf	___aodiv@dividend,w
  7255  045C                     u2245:	
  7256  045C  1C03               	skipc
  7257  045D  2C6F               	goto	l2757
  7258  045E  0820               	movf	___aodiv@divisor,w
  7259  045F  02A8               	subwf	___aodiv@dividend,f
  7260  0460  0821               	movf	___aodiv@divisor+1,w
  7261  0461  3BA9               	subwfb	___aodiv@dividend+1,f
  7262  0462  0822               	movf	___aodiv@divisor+2,w
  7263  0463  3BAA               	subwfb	___aodiv@dividend+2,f
  7264  0464  0823               	movf	___aodiv@divisor+3,w
  7265  0465  3BAB               	subwfb	___aodiv@dividend+3,f
  7266  0466  0824               	movf	___aodiv@divisor+4,w
  7267  0467  3BAC               	subwfb	___aodiv@dividend+4,f
  7268  0468  0825               	movf	___aodiv@divisor+5,w
  7269  0469  3BAD               	subwfb	___aodiv@dividend+5,f
  7270  046A  0826               	movf	___aodiv@divisor+6,w
  7271  046B  3BAE               	subwfb	___aodiv@dividend+6,f
  7272  046C  0827               	movf	___aodiv@divisor+7,w
  7273  046D  3BAF               	subwfb	___aodiv@dividend+7,f
  7274  046E  1432               	bsf	___aodiv@quotient,0
  7275  046F                     l2757:	
  7276  046F  36A7               	lsrf	___aodiv@divisor+7,f
  7277  0470  0CA6               	rrf	___aodiv@divisor+6,f
  7278  0471  0CA5               	rrf	___aodiv@divisor+5,f
  7279  0472  0CA4               	rrf	___aodiv@divisor+4,f
  7280  0473  0CA3               	rrf	___aodiv@divisor+3,f
  7281  0474  0CA2               	rrf	___aodiv@divisor+2,f
  7282  0475  0CA1               	rrf	___aodiv@divisor+1,f
  7283  0476  0CA0               	rrf	___aodiv@divisor,f
  7284  0477  3001               	movlw	1
  7285  0478  02B0               	subwf	___aodiv@counter,f
  7286  0479  1D03               	btfss	3,2
  7287  047A  2C36               	goto	l2749
  7288  047B                     l2759:	
  7289  047B  0831               	movf	___aodiv@sign,w
  7290  047C  1903               	btfsc	3,2
  7291  047D  2C9C               	goto	l660
  7292  047E  09B2               	comf	___aodiv@quotient,f
  7293  047F  09B3               	comf	___aodiv@quotient+1,f
  7294  0480  09B4               	comf	___aodiv@quotient+2,f
  7295  0481  09B5               	comf	___aodiv@quotient+3,f
  7296  0482  09B6               	comf	___aodiv@quotient+4,f
  7297  0483  09B7               	comf	___aodiv@quotient+5,f
  7298  0484  09B8               	comf	___aodiv@quotient+6,f
  7299  0485  09B9               	comf	___aodiv@quotient+7,f
  7300  0486  0AB2               	incf	___aodiv@quotient,f
  7301  0487  1D03               	skipz
  7302  0488  2C9C               	goto	l660
  7303  0489  0AB3               	incf	___aodiv@quotient+1,f
  7304  048A  1D03               	skipz
  7305  048B  2C9C               	goto	l660
  7306  048C  0AB4               	incf	___aodiv@quotient+2,f
  7307  048D  1D03               	skipz
  7308  048E  2C9C               	goto	l660
  7309  048F  0AB5               	incf	___aodiv@quotient+3,f
  7310  0490  1D03               	skipz
  7311  0491  2C9C               	goto	l660
  7312  0492  0AB6               	incf	___aodiv@quotient+4,f
  7313  0493  1D03               	skipz
  7314  0494  2C9C               	goto	l660
  7315  0495  0AB7               	incf	___aodiv@quotient+5,f
  7316  0496  1D03               	skipz
  7317  0497  2C9C               	goto	l660
  7318  0498  0AB8               	incf	___aodiv@quotient+6,f
  7319  0499  1D03               	skipz
  7320  049A  2C9C               	goto	l660
  7321  049B  0AB9               	incf	___aodiv@quotient+7,f
  7322  049C                     l660:	
  7323  049C  0020               	movlb	0	; select bank0
  7324  049D  0832               	movf	___aodiv@quotient,w
  7325  049E  00A0               	movwf	?___aodiv
  7326  049F  0833               	movf	___aodiv@quotient+1,w
  7327  04A0  00A1               	movwf	?___aodiv+1
  7328  04A1  0834               	movf	___aodiv@quotient+2,w
  7329  04A2  00A2               	movwf	?___aodiv+2
  7330  04A3  0835               	movf	___aodiv@quotient+3,w
  7331  04A4  00A3               	movwf	?___aodiv+3
  7332  04A5  0836               	movf	___aodiv@quotient+4,w
  7333  04A6  00A4               	movwf	?___aodiv+4
  7334  04A7  0837               	movf	___aodiv@quotient+5,w
  7335  04A8  00A5               	movwf	?___aodiv+5
  7336  04A9  0838               	movf	___aodiv@quotient+6,w
  7337  04AA  00A6               	movwf	?___aodiv+6
  7338  04AB  0839               	movf	___aodiv@quotient+7,w
  7339  04AC  00A7               	movwf	?___aodiv+7
  7340  04AD  0008               	return
  7341  04AE                     __end_of___aodiv:	
  7342                           
  7343                           	psect	text22
  7344  0DB9                     __ptext22:	
  7345 ;; *************** function _GPS_SendUBX *****************
  7346 ;; Defined at:
  7347 ;;		line 256 in file "main.c"
  7348 ;; Parameters:    Size  Location     Type
  7349 ;;  data            1    wreg     PTR unsigned char 
  7350 ;;		 -> setNavFlightMode(44), 
  7351 ;; Auto vars:     Size  Location     Type
  7352 ;;  data            1    2[BANK0 ] PTR unsigned char 
  7353 ;;		 -> setNavFlightMode(44), 
  7354 ;;  i               2    3[BANK0 ] int 
  7355 ;;  length          2    0[BANK0 ] int 
  7356 ;; Return value:  Size  Location     Type
  7357 ;;                  1    wreg      void 
  7358 ;; Registers used:
  7359 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7360 ;; Tracked objects:
  7361 ;;		On entry : 0/0
  7362 ;;		On exit  : 0/0
  7363 ;;		Unchanged: 0/0
  7364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7366 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7367 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7368 ;;      Totals:         1       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7369 ;;Total ram usage:        6 bytes
  7370 ;; Hardware stack levels used:    1
  7371 ;; Hardware stack levels required when called:    5
  7372 ;; This function calls:
  7373 ;;		_EUSART_Write
  7374 ;;		_GetLengthUBX
  7375 ;; This function is called by:
  7376 ;;		_SetupGPS
  7377 ;; This function uses a non-reentrant model
  7378 ;;
  7379                           
  7380                           
  7381                           ;psect for function _GPS_SendUBX
  7382  0DB9                     _GPS_SendUBX:	
  7383                           
  7384                           ;incstack = 0
  7385                           ; Regs used in _GPS_SendUBX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7386                           ;GPS_SendUBX@data stored from wreg
  7387  0DB9  0020               	movlb	0	; select bank0
  7388  0DBA  00A2               	movwf	GPS_SendUBX@data
  7389                           
  7390                           ;main.c: 256: void GPS_SendUBX(uint8_t* data);main.c: 257: {;main.c: 261:     for (int i
      +                           = 0, length = GetLengthUBX(data); i < length; i++)
  7391  0DBB  01A3               	clrf	GPS_SendUBX@i
  7392  0DBC  01A4               	clrf	GPS_SendUBX@i+1
  7393  0DBD  0822               	movf	GPS_SendUBX@data,w
  7394  0DBE  318C  24C4  318D   	fcall	_GetLengthUBX
  7395  0DC1  0873               	movf	?_GetLengthUBX+1,w
  7396  0DC2  0020               	movlb	0	; select bank0
  7397  0DC3  00A1               	movwf	GPS_SendUBX@length+1
  7398  0DC4  0872               	movf	?_GetLengthUBX,w
  7399  0DC5  00A0               	movwf	GPS_SendUBX@length
  7400  0DC6                     l3083:	
  7401  0DC6  0824               	movf	GPS_SendUBX@i+1,w
  7402  0DC7  3A80               	xorlw	128
  7403  0DC8  00F6               	movwf	??_GPS_SendUBX
  7404  0DC9  0821               	movf	GPS_SendUBX@length+1,w
  7405  0DCA  3A80               	xorlw	128
  7406  0DCB  0276               	subwf	??_GPS_SendUBX,w
  7407  0DCC  1D03               	skipz
  7408  0DCD  2DD0               	goto	u2795
  7409  0DCE  0820               	movf	GPS_SendUBX@length,w
  7410  0DCF  0223               	subwf	GPS_SendUBX@i,w
  7411  0DD0                     u2795:	
  7412  0DD0  1803               	btfsc	3,0
  7413  0DD1  0008               	return
  7414                           
  7415                           ;main.c: 262:     {;main.c: 264:         EUSART_Write(data[i]);
  7416  0DD2  0020               	movlb	0	; select bank0
  7417  0DD3  0823               	movf	GPS_SendUBX@i,w
  7418  0DD4  0722               	addwf	GPS_SendUBX@data,w
  7419  0DD5  00F6               	movwf	??_GPS_SendUBX
  7420  0DD6  0876               	movf	??_GPS_SendUBX,w
  7421  0DD7  0086               	movwf	6
  7422  0DD8  3002               	movlw	2	; select bank4/5
  7423  0DD9  0087               	movwf	7
  7424  0DDA  0801               	movf	1,w
  7425  0DDB  318C  2476  318D   	fcall	_EUSART_Write
  7426                           
  7427                           ;main.c: 268:     }
  7428  0DDE  3001               	movlw	1
  7429  0DDF  0020               	movlb	0	; select bank0
  7430  0DE0  07A3               	addwf	GPS_SendUBX@i,f
  7431  0DE1  3000               	movlw	0
  7432  0DE2  3DA4               	addwfc	GPS_SendUBX@i+1,f
  7433  0DE3  2DC6               	goto	l3083
  7434  0DE4                     __end_of_GPS_SendUBX:	
  7435                           
  7436                           	psect	text23
  7437  0CC4                     __ptext23:	
  7438 ;; *************** function _GetLengthUBX *****************
  7439 ;; Defined at:
  7440 ;;		line 246 in file "main.c"
  7441 ;; Parameters:    Size  Location     Type
  7442 ;;  data            1    wreg     PTR unsigned char 
  7443 ;;		 -> setNavFlightMode(44), 
  7444 ;; Auto vars:     Size  Location     Type
  7445 ;;  data            1    5[COMMON] PTR unsigned char 
  7446 ;;		 -> setNavFlightMode(44), 
  7447 ;; Return value:  Size  Location     Type
  7448 ;;                  2    2[COMMON] unsigned int 
  7449 ;; Registers used:
  7450 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  7451 ;; Tracked objects:
  7452 ;;		On entry : 0/0
  7453 ;;		On exit  : 0/0
  7454 ;;		Unchanged: 0/0
  7455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7456 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7457 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7459 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7460 ;;Total ram usage:        4 bytes
  7461 ;; Hardware stack levels used:    1
  7462 ;; Hardware stack levels required when called:    4
  7463 ;; This function calls:
  7464 ;;		Nothing
  7465 ;; This function is called by:
  7466 ;;		_GPS_SendUBX
  7467 ;; This function uses a non-reentrant model
  7468 ;;
  7469                           
  7470                           
  7471                           ;psect for function _GetLengthUBX
  7472  0CC4                     _GetLengthUBX:	
  7473                           
  7474                           ;incstack = 0
  7475                           ; Regs used in _GetLengthUBX: [wreg-fsr1h+status,2+status,0]
  7476                           ;GetLengthUBX@data stored from wreg
  7477  0CC4  00F5               	movwf	GetLengthUBX@data
  7478                           
  7479                           ;main.c: 246: size_t GetLengthUBX(uint8_t* data);main.c: 247: {;main.c: 251:     return 
      +                          (short)(8 + (short)((short)data[4] + (short)(data[5] << 8)));
  7480  0CC5  0875               	movf	GetLengthUBX@data,w
  7481  0CC6  3E05               	addlw	5
  7482  0CC7  0086               	movwf	6
  7483  0CC8  3002               	movlw	2	; select bank4/5
  7484  0CC9  0087               	movwf	7
  7485  0CCA  0875               	movf	GetLengthUBX@data,w
  7486  0CCB  3E04               	addlw	4
  7487  0CCC  0084               	movwf	4
  7488  0CCD  3002               	movlw	2	; select bank4/5
  7489  0CCE  0085               	movwf	5
  7490  0CCF  0800               	movf	0,w
  7491  0CD0  3E08               	addlw	8
  7492  0CD1  00F2               	movwf	?_GetLengthUBX
  7493  0CD2  3000               	movlw	0
  7494  0CD3  3D01               	addwfc	1,w
  7495  0CD4  00F3               	movwf	?_GetLengthUBX+1
  7496  0CD5  0008               	return
  7497  0CD6                     __end_of_GetLengthUBX:	
  7498                           
  7499                           	psect	text24
  7500  0C76                     __ptext24:	
  7501 ;; *************** function _EUSART_Write *****************
  7502 ;; Defined at:
  7503 ;;		line 111 in file "mcc_generated_files/eusart.c"
  7504 ;; Parameters:    Size  Location     Type
  7505 ;;  txData          1    wreg     unsigned char 
  7506 ;; Auto vars:     Size  Location     Type
  7507 ;;  txData          1    2[COMMON] unsigned char 
  7508 ;; Return value:  Size  Location     Type
  7509 ;;                  1    wreg      void 
  7510 ;; Registers used:
  7511 ;;		wreg
  7512 ;; Tracked objects:
  7513 ;;		On entry : 0/0
  7514 ;;		On exit  : 0/0
  7515 ;;		Unchanged: 0/0
  7516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7518 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7520 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7521 ;;Total ram usage:        1 bytes
  7522 ;; Hardware stack levels used:    1
  7523 ;; Hardware stack levels required when called:    4
  7524 ;; This function calls:
  7525 ;;		Nothing
  7526 ;; This function is called by:
  7527 ;;		_putch
  7528 ;;		_GPS_SendUBX
  7529 ;; This function uses a non-reentrant model
  7530 ;;
  7531                           
  7532                           
  7533                           ;psect for function _EUSART_Write
  7534  0C76                     _EUSART_Write:	
  7535                           
  7536                           ;incstack = 0
  7537                           ; Regs used in _EUSART_Write: [wreg]
  7538                           ;EUSART_Write@txData stored from wreg
  7539  0C76  00F2               	movwf	EUSART_Write@txData
  7540  0C77                     l112:	
  7541                           ;mcc_generated_files/eusart.c: 114:     {;mcc_generated_files/eusart.c: 115:     }
  7542                           
  7543                           
  7544                           ;mcc_generated_files/eusart.c: 113:     while(0 == PIR1bits.TXIF)
  7545  0C77  0020               	movlb	0	; select bank0
  7546  0C78  1E10               	btfss	16,4	;volatile
  7547  0C79  2C77               	goto	l112
  7548                           
  7549                           ;mcc_generated_files/eusart.c: 117:     TX1REG = txData;
  7550  0C7A  0872               	movf	EUSART_Write@txData,w
  7551  0C7B  0023               	movlb	3	; select bank3
  7552  0C7C  009A               	movwf	26	;volatile
  7553  0C7D  0008               	return
  7554  0C7E                     __end_of_EUSART_Write:	
  7555                           
  7556                           	psect	text25
  7557  064D                     __ptext25:	
  7558 ;; *************** function _GPS_HasAcknowledged *****************
  7559 ;; Defined at:
  7560 ;;		line 278 in file "main.c"
  7561 ;; Parameters:    Size  Location     Type
  7562 ;;  data            1    wreg     PTR unsigned char 
  7563 ;;		 -> setNavFlightMode(44), 
  7564 ;; Auto vars:     Size  Location     Type
  7565 ;;  data            1   23[BANK0 ] PTR unsigned char 
  7566 ;;		 -> setNavFlightMode(44), 
  7567 ;;  i               1   25[BANK0 ] unsigned char 
  7568 ;;  ackPacket      10   13[BANK0 ] unsigned char [10]
  7569 ;;  startTime       4    8[BANK0 ] unsigned long 
  7570 ;;  ackByteID       1   24[BANK0 ] unsigned char 
  7571 ;;  ackByte         1   12[BANK0 ] unsigned char 
  7572 ;; Return value:  Size  Location     Type
  7573 ;;                  1    wreg      _Bool 
  7574 ;; Registers used:
  7575 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7576 ;; Tracked objects:
  7577 ;;		On entry : 0/0
  7578 ;;		On exit  : 0/0
  7579 ;;		Unchanged: 0/0
  7580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7582 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7583 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7584 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7585 ;;Total ram usage:       22 bytes
  7586 ;; Hardware stack levels used:    1
  7587 ;; Hardware stack levels required when called:    5
  7588 ;; This function calls:
  7589 ;;		_EUSART_Read
  7590 ;;		_EUSART_is_rx_ready
  7591 ;;		_TMR1_ReadTimer
  7592 ;; This function is called by:
  7593 ;;		_SetupGPS
  7594 ;; This function uses a non-reentrant model
  7595 ;;
  7596                           
  7597                           
  7598                           ;psect for function _GPS_HasAcknowledged
  7599  064D                     _GPS_HasAcknowledged:	
  7600                           
  7601                           ;incstack = 0
  7602                           ; Regs used in _GPS_HasAcknowledged: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7603                           ;GPS_HasAcknowledged@data stored from wreg
  7604  064D  0020               	movlb	0	; select bank0
  7605  064E  00B7               	movwf	GPS_HasAcknowledged@data
  7606                           
  7607                           ;main.c: 278: _Bool GPS_HasAcknowledged(uint8_t* data);main.c: 279: {;main.c: 284:     u
      +                          int8_t ackPacket[10];;main.c: 285:     unsigned long startTime = TMR1_ReadTimer();
  7608  064F  318D  254C  3186   	fcall	_TMR1_ReadTimer
  7609  0652  0872               	movf	?_TMR1_ReadTimer,w
  7610  0653  0020               	movlb	0	; select bank0
  7611  0654  00A8               	movwf	GPS_HasAcknowledged@startTime
  7612  0655  0873               	movf	?_TMR1_ReadTimer+1,w
  7613  0656  00A9               	movwf	GPS_HasAcknowledged@startTime+1
  7614  0657  01AA               	clrf	GPS_HasAcknowledged@startTime+2
  7615  0658  01AB               	clrf	GPS_HasAcknowledged@startTime+3
  7616                           
  7617                           ;main.c: 288:     ackPacket[0] = 0xB5;
  7618  0659  30B5               	movlw	181
  7619  065A  00A4               	movwf	??_GPS_HasAcknowledged
  7620  065B  0824               	movf	??_GPS_HasAcknowledged,w
  7621  065C  00AD               	movwf	GPS_HasAcknowledged@ackPacket
  7622                           
  7623                           ;main.c: 289:     ackPacket[1] = 0x62;
  7624  065D  3062               	movlw	98
  7625  065E  00A4               	movwf	??_GPS_HasAcknowledged
  7626  065F  0824               	movf	??_GPS_HasAcknowledged,w
  7627  0660  00AE               	movwf	GPS_HasAcknowledged@ackPacket+1
  7628                           
  7629                           ;main.c: 290:     ackPacket[2] = 0x05;
  7630  0661  3005               	movlw	5
  7631  0662  00A4               	movwf	??_GPS_HasAcknowledged
  7632  0663  0824               	movf	??_GPS_HasAcknowledged,w
  7633  0664  00AF               	movwf	GPS_HasAcknowledged@ackPacket+2
  7634                           
  7635                           ;main.c: 291:     ackPacket[3] = 0x01;
  7636  0665  01B0               	clrf	GPS_HasAcknowledged@ackPacket+3
  7637  0666  0AB0               	incf	GPS_HasAcknowledged@ackPacket+3,f
  7638                           
  7639                           ;main.c: 292:     ackPacket[4] = 0x02;
  7640  0667  3002               	movlw	2
  7641  0668  00A4               	movwf	??_GPS_HasAcknowledged
  7642  0669  0824               	movf	??_GPS_HasAcknowledged,w
  7643  066A  00B1               	movwf	GPS_HasAcknowledged@ackPacket+4
  7644                           
  7645                           ;main.c: 293:     ackPacket[5] = 0x00;
  7646  066B  01B2               	clrf	GPS_HasAcknowledged@ackPacket+5
  7647                           
  7648                           ;main.c: 294:     ackPacket[6] = data[2];
  7649  066C  0837               	movf	GPS_HasAcknowledged@data,w
  7650  066D  0086               	movwf	6
  7651  066E  3002               	movlw	2	; select bank4/5
  7652  066F  0087               	movwf	7
  7653  0670  3002               	movlw	2	; select bank4/5
  7654  0671  3F42               	moviw [2]fsr1
  7655  0672  00B3               	movwf	GPS_HasAcknowledged@ackPacket+6
  7656                           
  7657                           ;main.c: 295:     ackPacket[7] = data[3];
  7658  0673  0837               	movf	GPS_HasAcknowledged@data,w
  7659  0674  0086               	movwf	6
  7660  0675  3002               	movlw	2	; select bank4/5
  7661  0676  0087               	movwf	7
  7662  0677  3002               	movlw	2	; select bank4/5
  7663  0678  3F43               	moviw [3]fsr1
  7664  0679  00B4               	movwf	GPS_HasAcknowledged@ackPacket+7
  7665                           
  7666                           ;main.c: 296:     ackPacket[8] = 0;
  7667  067A  01B5               	clrf	GPS_HasAcknowledged@ackPacket+8
  7668                           
  7669                           ;main.c: 297:     ackPacket[9] = 0;
  7670  067B  01B6               	clrf	GPS_HasAcknowledged@ackPacket+9
  7671                           
  7672                           ;main.c: 300:     for (uint8_t i = 2; i < 8; i++)
  7673  067C  3002               	movlw	2
  7674  067D  00A4               	movwf	??_GPS_HasAcknowledged
  7675  067E  0824               	movf	??_GPS_HasAcknowledged,w
  7676  067F  00B9               	movwf	GPS_HasAcknowledged@i
  7677  0680                     l3113:	
  7678                           
  7679                           ;main.c: 301:     {;main.c: 302:         ackPacket[8] = ackPacket[8] + ackPacket[i];
  7680  0680  0839               	movf	GPS_HasAcknowledged@i,w
  7681  0681  3E2D               	addlw	(low (GPS_HasAcknowledged@ackPacket| 0))& (0+255)
  7682  0682  0086               	movwf	6
  7683  0683  0187               	clrf	7
  7684  0684  0835               	movf	GPS_HasAcknowledged@ackPacket+8,w
  7685  0685  0701               	addwf	1,w
  7686  0686  00A4               	movwf	??_GPS_HasAcknowledged
  7687  0687  0824               	movf	??_GPS_HasAcknowledged,w
  7688  0688  00B5               	movwf	GPS_HasAcknowledged@ackPacket+8
  7689                           
  7690                           ;main.c: 303:         ackPacket[9] = ackPacket[9] + ackPacket[8];
  7691  0689  0836               	movf	GPS_HasAcknowledged@ackPacket+9,w
  7692  068A  0735               	addwf	GPS_HasAcknowledged@ackPacket+8,w
  7693  068B  00A4               	movwf	??_GPS_HasAcknowledged
  7694  068C  0824               	movf	??_GPS_HasAcknowledged,w
  7695  068D  00B6               	movwf	GPS_HasAcknowledged@ackPacket+9
  7696                           
  7697                           ;main.c: 304:     }
  7698  068E  3001               	movlw	1
  7699  068F  00A4               	movwf	??_GPS_HasAcknowledged
  7700  0690  0824               	movf	??_GPS_HasAcknowledged,w
  7701  0691  07B9               	addwf	GPS_HasAcknowledged@i,f
  7702  0692  3008               	movlw	8
  7703  0693  0239               	subwf	GPS_HasAcknowledged@i,w
  7704  0694  1C03               	skipc
  7705  0695  2E80               	goto	l3113
  7706  0696                     l3121:	
  7707                           
  7708                           ;main.c: 307:     uint8_t ackByte;;main.c: 310:     uint8_t ackByteID = 0;
  7709  0696  01B8               	clrf	GPS_HasAcknowledged@ackByteID
  7710  0697                     l3123:	
  7711                           
  7712                           ;main.c: 314:     {;main.c: 317:         if (ackByteID > 9)
  7713  0697  300A               	movlw	10
  7714  0698  0020               	movlb	0	; select bank0
  7715  0699  0238               	subwf	GPS_HasAcknowledged@ackByteID,w
  7716  069A  1C03               	skipc
  7717  069B  2E9E               	goto	l3129
  7718                           
  7719                           ;main.c: 318:         {;main.c: 321:             return 1;
  7720  069C  3001               	movlw	1
  7721  069D  0008               	return
  7722  069E                     l3129:	
  7723                           
  7724                           ;main.c: 325:         if (TMR1_ReadTimer() - startTime > 3000)
  7725  069E  318D  254C  3186   	fcall	_TMR1_ReadTimer
  7726  06A1  0872               	movf	?_TMR1_ReadTimer,w
  7727  06A2  0020               	movlb	0	; select bank0
  7728  06A3  00A4               	movwf	??_GPS_HasAcknowledged
  7729  06A4  0873               	movf	?_TMR1_ReadTimer+1,w
  7730  06A5  00A5               	movwf	??_GPS_HasAcknowledged+1
  7731  06A6  01A6               	clrf	??_GPS_HasAcknowledged+2
  7732  06A7  01A7               	clrf	??_GPS_HasAcknowledged+3
  7733  06A8  0828               	movf	GPS_HasAcknowledged@startTime,w
  7734  06A9  02A4               	subwf	??_GPS_HasAcknowledged,f
  7735  06AA  0829               	movf	GPS_HasAcknowledged@startTime+1,w
  7736  06AB  3BA5               	subwfb	??_GPS_HasAcknowledged+1,f
  7737  06AC  082A               	movf	GPS_HasAcknowledged@startTime+2,w
  7738  06AD  3BA6               	subwfb	??_GPS_HasAcknowledged+2,f
  7739  06AE  082B               	movf	GPS_HasAcknowledged@startTime+3,w
  7740  06AF  3BA7               	subwfb	??_GPS_HasAcknowledged+3,f
  7741  06B0  0827               	movf	??_GPS_HasAcknowledged+3,w
  7742  06B1  1D03               	btfss	3,2
  7743  06B2  2EBC               	goto	l3131
  7744  06B3  0826               	movf	??_GPS_HasAcknowledged+2,w
  7745  06B4  1D03               	btfss	3,2
  7746  06B5  2EBC               	goto	l3131
  7747  06B6  30B9               	movlw	185
  7748  06B7  0224               	subwf	??_GPS_HasAcknowledged,w
  7749  06B8  300B               	movlw	11
  7750  06B9  3B25               	subwfb	??_GPS_HasAcknowledged+1,w
  7751  06BA  1C03               	btfss	3,0
  7752  06BB  2EBE               	goto	l3135
  7753  06BC                     l3131:	
  7754                           
  7755                           ;main.c: 326:         {;main.c: 327:             return 0;
  7756  06BC  3000               	movlw	0
  7757  06BD  0008               	return
  7758  06BE                     l3135:	
  7759                           
  7760                           ;main.c: 331:         if (EUSART_is_rx_ready())
  7761  06BE  318C  244C  3186   	fcall	_EUSART_is_rx_ready
  7762  06C1  3A00               	xorlw	0
  7763  06C2  1903               	skipnz
  7764  06C3  2E97               	goto	l3123
  7765                           
  7766                           ;main.c: 332:         {;main.c: 333:             ackByte = EUSART_Read();
  7767  06C4  318C  247E  3186   	fcall	_EUSART_Read
  7768  06C7  0020               	movlb	0	; select bank0
  7769  06C8  00A4               	movwf	??_GPS_HasAcknowledged
  7770  06C9  0824               	movf	??_GPS_HasAcknowledged,w
  7771  06CA  00AC               	movwf	GPS_HasAcknowledged@ackByte
  7772                           
  7773                           ;main.c: 336:             if (ackByte == ackPacket[ackByteID]) {
  7774  06CB  0838               	movf	GPS_HasAcknowledged@ackByteID,w
  7775  06CC  3E2D               	addlw	(low (GPS_HasAcknowledged@ackPacket| 0))& (0+255)
  7776  06CD  0086               	movwf	6
  7777  06CE  0187               	clrf	7
  7778  06CF  0801               	movf	1,w
  7779  06D0  062C               	xorwf	GPS_HasAcknowledged@ackByte,w
  7780  06D1  1D03               	skipz
  7781  06D2  2E96               	goto	l3121
  7782                           
  7783                           ;main.c: 337:                 ackByteID++;
  7784  06D3  3001               	movlw	1
  7785  06D4  00A4               	movwf	??_GPS_HasAcknowledged
  7786  06D5  0824               	movf	??_GPS_HasAcknowledged,w
  7787  06D6  07B8               	addwf	GPS_HasAcknowledged@ackByteID,f
  7788                           
  7789                           ;main.c: 338:             }
  7790  06D7  2E97               	goto	l3123
  7791  06D8                     __end_of_GPS_HasAcknowledged:	
  7792                           
  7793                           	psect	text26
  7794  0CA9                     __ptext26:	
  7795 ;; *************** function _SYSTEM_Initialize *****************
  7796 ;; Defined at:
  7797 ;;		line 50 in file "mcc_generated_files/mcc.c"
  7798 ;; Parameters:    Size  Location     Type
  7799 ;;		None
  7800 ;; Auto vars:     Size  Location     Type
  7801 ;;		None
  7802 ;; Return value:  Size  Location     Type
  7803 ;;                  1    wreg      void 
  7804 ;; Registers used:
  7805 ;;		wreg, status,2, status,0, pclath, cstack
  7806 ;; Tracked objects:
  7807 ;;		On entry : 0/0
  7808 ;;		On exit  : 0/0
  7809 ;;		Unchanged: 0/0
  7810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7814 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7815 ;;Total ram usage:        0 bytes
  7816 ;; Hardware stack levels used:    1
  7817 ;; Hardware stack levels required when called:    6
  7818 ;; This function calls:
  7819 ;;		_EUSART_Initialize
  7820 ;;		_OSCILLATOR_Initialize
  7821 ;;		_PIN_MANAGER_Initialize
  7822 ;;		_TMR1_Initialize
  7823 ;; This function is called by:
  7824 ;;		_main
  7825 ;; This function uses a non-reentrant model
  7826 ;;
  7827                           
  7828                           
  7829                           ;psect for function _SYSTEM_Initialize
  7830  0CA9                     _SYSTEM_Initialize:	
  7831                           
  7832                           ;mcc_generated_files/mcc.c: 52:     PIN_MANAGER_Initialize();
  7833                           
  7834                           ;incstack = 0
  7835                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7836  0CA9  318D  258F  318C   	fcall	_PIN_MANAGER_Initialize
  7837                           
  7838                           ;mcc_generated_files/mcc.c: 53:     OSCILLATOR_Initialize();
  7839  0CAC  318C  2468  318C   	fcall	_OSCILLATOR_Initialize
  7840                           
  7841                           ;mcc_generated_files/mcc.c: 54:     TMR1_Initialize();
  7842  0CAF  318D  2531  318C   	fcall	_TMR1_Initialize
  7843                           
  7844                           ;mcc_generated_files/mcc.c: 55:     EUSART_Initialize();
  7845  0CB2  318C  2493         	fcall	_EUSART_Initialize
  7846  0CB4  0008               	return
  7847  0CB5                     __end_of_SYSTEM_Initialize:	
  7848                           
  7849                           	psect	text27
  7850  0D31                     __ptext27:	
  7851 ;; *************** function _TMR1_Initialize *****************
  7852 ;; Defined at:
  7853 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  7854 ;; Parameters:    Size  Location     Type
  7855 ;;		None
  7856 ;; Auto vars:     Size  Location     Type
  7857 ;;		None
  7858 ;; Return value:  Size  Location     Type
  7859 ;;                  1    wreg      void 
  7860 ;; Registers used:
  7861 ;;		wreg, status,2, status,0, pclath, cstack
  7862 ;; Tracked objects:
  7863 ;;		On entry : 0/0
  7864 ;;		On exit  : 0/0
  7865 ;;		Unchanged: 0/0
  7866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7870 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7871 ;;Total ram usage:        0 bytes
  7872 ;; Hardware stack levels used:    1
  7873 ;; Hardware stack levels required when called:    5
  7874 ;; This function calls:
  7875 ;;		_TMR1_SetInterruptHandler
  7876 ;; This function is called by:
  7877 ;;		_SYSTEM_Initialize
  7878 ;; This function uses a non-reentrant model
  7879 ;;
  7880                           
  7881                           
  7882                           ;psect for function _TMR1_Initialize
  7883  0D31                     _TMR1_Initialize:	
  7884                           
  7885                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
  7886                           
  7887                           ;incstack = 0
  7888                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7889  0D31  0020               	movlb	0	; select bank0
  7890  0D32  0199               	clrf	25	;volatile
  7891                           
  7892                           ;mcc_generated_files/tmr1.c: 72:     TMR1H = 0xFF;
  7893  0D33  30FF               	movlw	255
  7894  0D34  0097               	movwf	23	;volatile
  7895                           
  7896                           ;mcc_generated_files/tmr1.c: 75:     TMR1L = 0x06;
  7897  0D35  3006               	movlw	6
  7898  0D36  0096               	movwf	22	;volatile
  7899                           
  7900                           ;mcc_generated_files/tmr1.c: 78:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  7901  0D37  0817               	movf	23,w	;volatile
  7902  0D38  0021               	movlb	1	; select bank1
  7903  0D39  00EC               	movwf	(_timer1ReloadVal+1)^(0+128)	;volatile
  7904  0D3A  0020               	movlb	0	; select bank0
  7905  0D3B  0816               	movf	22,w	;volatile
  7906  0D3C  0021               	movlb	1	; select bank1
  7907  0D3D  00EB               	movwf	_timer1ReloadVal^(0+128)	;volatile
  7908                           
  7909                           ;mcc_generated_files/tmr1.c: 81:     PIR1bits.TMR1IF = 0;
  7910  0D3E  0020               	movlb	0	; select bank0
  7911  0D3F  1010               	bcf	16,0	;volatile
  7912                           
  7913                           ;mcc_generated_files/tmr1.c: 84:     PIE1bits.TMR1IE = 1;
  7914  0D40  0021               	movlb	1	; select bank1
  7915  0D41  1410               	bsf	16,0	;volatile
  7916                           
  7917                           ;mcc_generated_files/tmr1.c: 87:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  7918  0D42  3003               	movlw	low _TMR1_DefaultInterruptHandler
  7919  0D43  00F2               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  7920  0D44  3000               	movlw	high _TMR1_DefaultInterruptHandler
  7921  0D45  00F3               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  7922  0D46  318C  2456         	fcall	_TMR1_SetInterruptHandler
  7923                           
  7924                           ;mcc_generated_files/tmr1.c: 90:     T1CON = 0x21;
  7925  0D48  3021               	movlw	33
  7926  0D49  0020               	movlb	0	; select bank0
  7927  0D4A  0098               	movwf	24	;volatile
  7928  0D4B  0008               	return
  7929  0D4C                     __end_of_TMR1_Initialize:	
  7930                           
  7931                           	psect	text28
  7932  0C56                     __ptext28:	
  7933 ;; *************** function _TMR1_SetInterruptHandler *****************
  7934 ;; Defined at:
  7935 ;;		line 178 in file "mcc_generated_files/tmr1.c"
  7936 ;; Parameters:    Size  Location     Type
  7937 ;;  InterruptHan    2    2[COMMON] PTR FTN()void 
  7938 ;;		 -> TMR1_DefaultInterruptHandler(1), 
  7939 ;; Auto vars:     Size  Location     Type
  7940 ;;		None
  7941 ;; Return value:  Size  Location     Type
  7942 ;;                  1    wreg      void 
  7943 ;; Registers used:
  7944 ;;		wreg
  7945 ;; Tracked objects:
  7946 ;;		On entry : 0/0
  7947 ;;		On exit  : 0/0
  7948 ;;		Unchanged: 0/0
  7949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7950 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7951 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7953 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7954 ;;Total ram usage:        2 bytes
  7955 ;; Hardware stack levels used:    1
  7956 ;; Hardware stack levels required when called:    4
  7957 ;; This function calls:
  7958 ;;		Nothing
  7959 ;; This function is called by:
  7960 ;;		_TMR1_Initialize
  7961 ;; This function uses a non-reentrant model
  7962 ;;
  7963                           
  7964                           
  7965                           ;psect for function _TMR1_SetInterruptHandler
  7966  0C56                     _TMR1_SetInterruptHandler:	
  7967                           
  7968                           ;mcc_generated_files/tmr1.c: 179:     TMR1_InterruptHandler = InterruptHandler;
  7969                           
  7970                           ;incstack = 0
  7971                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
  7972  0C56  0873               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
  7973  0C57  0021               	movlb	1	; select bank1
  7974  0C58  00EA               	movwf	(_TMR1_InterruptHandler+1)^(0+128)
  7975  0C59  0872               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
  7976  0C5A  00E9               	movwf	_TMR1_InterruptHandler^(0+128)
  7977  0C5B  0008               	return
  7978  0C5C                     __end_of_TMR1_SetInterruptHandler:	
  7979                           
  7980                           	psect	text29
  7981  0D8F                     __ptext29:	
  7982 ;; *************** function _PIN_MANAGER_Initialize *****************
  7983 ;; Defined at:
  7984 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
  7985 ;; Parameters:    Size  Location     Type
  7986 ;;		None
  7987 ;; Auto vars:     Size  Location     Type
  7988 ;;		None
  7989 ;; Return value:  Size  Location     Type
  7990 ;;                  1    wreg      void 
  7991 ;; Registers used:
  7992 ;;		wreg, status,2
  7993 ;; Tracked objects:
  7994 ;;		On entry : 0/0
  7995 ;;		On exit  : 0/0
  7996 ;;		Unchanged: 0/0
  7997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8001 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8002 ;;Total ram usage:        0 bytes
  8003 ;; Hardware stack levels used:    1
  8004 ;; Hardware stack levels required when called:    4
  8005 ;; This function calls:
  8006 ;;		Nothing
  8007 ;; This function is called by:
  8008 ;;		_SYSTEM_Initialize
  8009 ;; This function uses a non-reentrant model
  8010 ;;
  8011                           
  8012                           
  8013                           ;psect for function _PIN_MANAGER_Initialize
  8014  0D8F                     _PIN_MANAGER_Initialize:	
  8015                           
  8016                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  8017                           
  8018                           ;incstack = 0
  8019                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  8020  0D8F  0022               	movlb	2	; select bank2
  8021  0D90  018C               	clrf	12	;volatile
  8022                           
  8023                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  8024  0D91  018D               	clrf	13	;volatile
  8025                           
  8026                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  8027  0D92  018E               	clrf	14	;volatile
  8028                           
  8029                           ;mcc_generated_files/pin_manager.c: 69:     TRISA = 0x07;
  8030  0D93  3007               	movlw	7
  8031  0D94  0021               	movlb	1	; select bank1
  8032  0D95  008C               	movwf	12	;volatile
  8033                           
  8034                           ;mcc_generated_files/pin_manager.c: 70:     TRISB = 0x70;
  8035  0D96  3070               	movlw	112
  8036  0D97  008D               	movwf	13	;volatile
  8037                           
  8038                           ;mcc_generated_files/pin_manager.c: 71:     TRISC = 0xDF;
  8039  0D98  30DF               	movlw	223
  8040  0D99  008E               	movwf	14	;volatile
  8041                           
  8042                           ;mcc_generated_files/pin_manager.c: 76:     ANSELC = 0x4F;
  8043  0D9A  304F               	movlw	79
  8044  0D9B  0023               	movlb	3	; select bank3
  8045  0D9C  008E               	movwf	14	;volatile
  8046                           
  8047                           ;mcc_generated_files/pin_manager.c: 77:     ANSELB = 0xB0;
  8048  0D9D  30B0               	movlw	176
  8049  0D9E  008D               	movwf	13	;volatile
  8050                           
  8051                           ;mcc_generated_files/pin_manager.c: 78:     ANSELA = 0x07;
  8052  0D9F  3007               	movlw	7
  8053  0DA0  008C               	movwf	12	;volatile
  8054                           
  8055                           ;mcc_generated_files/pin_manager.c: 83:     WPUB = 0x00;
  8056  0DA1  0024               	movlb	4	; select bank4
  8057  0DA2  018D               	clrf	13	;volatile
  8058                           
  8059                           ;mcc_generated_files/pin_manager.c: 84:     WPUA = 0x00;
  8060  0DA3  018C               	clrf	12	;volatile
  8061                           
  8062                           ;mcc_generated_files/pin_manager.c: 85:     WPUC = 0x00;
  8063  0DA4  018E               	clrf	14	;volatile
  8064                           
  8065                           ;mcc_generated_files/pin_manager.c: 86:     OPTION_REGbits.nWPUEN = 1;
  8066  0DA5  0021               	movlb	1	; select bank1
  8067  0DA6  1795               	bsf	21,7	;volatile
  8068                           
  8069                           ;mcc_generated_files/pin_manager.c: 91:     ODCONA = 0x00;
  8070  0DA7  0025               	movlb	5	; select bank5
  8071  0DA8  018C               	clrf	12	;volatile
  8072                           
  8073                           ;mcc_generated_files/pin_manager.c: 92:     ODCONB = 0x00;
  8074  0DA9  018D               	clrf	13	;volatile
  8075                           
  8076                           ;mcc_generated_files/pin_manager.c: 93:     ODCONC = 0x00;
  8077  0DAA  018E               	clrf	14	;volatile
  8078                           
  8079                           ;mcc_generated_files/pin_manager.c: 98:     SLRCONA = 0x37;
  8080  0DAB  3037               	movlw	55
  8081  0DAC  0026               	movlb	6	; select bank6
  8082  0DAD  008C               	movwf	12	;volatile
  8083                           
  8084                           ;mcc_generated_files/pin_manager.c: 99:     SLRCONB = 0xF0;
  8085  0DAE  30F0               	movlw	240
  8086  0DAF  008D               	movwf	13	;volatile
  8087                           
  8088                           ;mcc_generated_files/pin_manager.c: 100:     SLRCONC = 0xFF;
  8089  0DB0  30FF               	movlw	255
  8090  0DB1  008E               	movwf	14	;volatile
  8091                           
  8092                           ;mcc_generated_files/pin_manager.c: 109:     RXPPS = 0x0E;
  8093  0DB2  300E               	movlw	14
  8094  0DB3  003C               	movlb	28	; select bank28
  8095  0DB4  00A4               	movwf	36	;volatile
  8096                           
  8097                           ;mcc_generated_files/pin_manager.c: 110:     RB7PPS = 0x12;
  8098  0DB5  3012               	movlw	18
  8099  0DB6  003D               	movlb	29	; select bank29
  8100  0DB7  009F               	movwf	31	;volatile
  8101  0DB8  0008               	return
  8102  0DB9                     __end_of_PIN_MANAGER_Initialize:	
  8103                           
  8104                           	psect	text30
  8105  0C68                     __ptext30:	
  8106 ;; *************** function _OSCILLATOR_Initialize *****************
  8107 ;; Defined at:
  8108 ;;		line 58 in file "mcc_generated_files/mcc.c"
  8109 ;; Parameters:    Size  Location     Type
  8110 ;;		None
  8111 ;; Auto vars:     Size  Location     Type
  8112 ;;		None
  8113 ;; Return value:  Size  Location     Type
  8114 ;;                  1    wreg      void 
  8115 ;; Registers used:
  8116 ;;		wreg, status,2
  8117 ;; Tracked objects:
  8118 ;;		On entry : 0/0
  8119 ;;		On exit  : 0/0
  8120 ;;		Unchanged: 0/0
  8121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8125 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8126 ;;Total ram usage:        0 bytes
  8127 ;; Hardware stack levels used:    1
  8128 ;; Hardware stack levels required when called:    4
  8129 ;; This function calls:
  8130 ;;		Nothing
  8131 ;; This function is called by:
  8132 ;;		_SYSTEM_Initialize
  8133 ;; This function uses a non-reentrant model
  8134 ;;
  8135                           
  8136                           
  8137                           ;psect for function _OSCILLATOR_Initialize
  8138  0C68                     _OSCILLATOR_Initialize:	
  8139                           
  8140                           ;mcc_generated_files/mcc.c: 61:     OSCCON = 0x68;
  8141                           
  8142                           ;incstack = 0
  8143                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  8144  0C68  3068               	movlw	104
  8145  0C69  0021               	movlb	1	; select bank1
  8146  0C6A  0099               	movwf	25	;volatile
  8147                           
  8148                           ;mcc_generated_files/mcc.c: 63:     OSCTUNE = 0x00;
  8149  0C6B  0198               	clrf	24	;volatile
  8150                           
  8151                           ;mcc_generated_files/mcc.c: 65:     BORCON = 0x00;
  8152  0C6C  0022               	movlb	2	; select bank2
  8153  0C6D  0196               	clrf	22	;volatile
  8154  0C6E  0008               	return
  8155  0C6F                     __end_of_OSCILLATOR_Initialize:	
  8156                           
  8157                           	psect	text31
  8158  0C93                     __ptext31:	
  8159 ;; *************** function _EUSART_Initialize *****************
  8160 ;; Defined at:
  8161 ;;		line 56 in file "mcc_generated_files/eusart.c"
  8162 ;; Parameters:    Size  Location     Type
  8163 ;;		None
  8164 ;; Auto vars:     Size  Location     Type
  8165 ;;		None
  8166 ;; Return value:  Size  Location     Type
  8167 ;;                  1    wreg      void 
  8168 ;; Registers used:
  8169 ;;		wreg, status,2
  8170 ;; Tracked objects:
  8171 ;;		On entry : 0/0
  8172 ;;		On exit  : 0/0
  8173 ;;		Unchanged: 0/0
  8174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8178 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8179 ;;Total ram usage:        0 bytes
  8180 ;; Hardware stack levels used:    1
  8181 ;; Hardware stack levels required when called:    4
  8182 ;; This function calls:
  8183 ;;		Nothing
  8184 ;; This function is called by:
  8185 ;;		_SYSTEM_Initialize
  8186 ;; This function uses a non-reentrant model
  8187 ;;
  8188                           
  8189                           
  8190                           ;psect for function _EUSART_Initialize
  8191  0C93                     _EUSART_Initialize:	
  8192                           
  8193                           ;mcc_generated_files/eusart.c: 61:     BAUD1CON = 0x08;
  8194                           
  8195                           ;incstack = 0
  8196                           ; Regs used in _EUSART_Initialize: [wreg+status,2]
  8197  0C93  3008               	movlw	8
  8198  0C94  0023               	movlb	3	; select bank3
  8199  0C95  009F               	movwf	31	;volatile
  8200                           
  8201                           ;mcc_generated_files/eusart.c: 64:     RC1STA = 0x90;
  8202  0C96  3090               	movlw	144
  8203  0C97  009D               	movwf	29	;volatile
  8204                           
  8205                           ;mcc_generated_files/eusart.c: 67:     TX1STA = 0x24;
  8206  0C98  3024               	movlw	36
  8207  0C99  009E               	movwf	30	;volatile
  8208                           
  8209                           ;mcc_generated_files/eusart.c: 70:     SPBRGL = 0x67;
  8210  0C9A  3067               	movlw	103
  8211  0C9B  009B               	movwf	27	;volatile
  8212                           
  8213                           ;mcc_generated_files/eusart.c: 73:     SPBRGH = 0x00;
  8214  0C9C  019C               	clrf	28	;volatile
  8215  0C9D  0008               	return
  8216  0C9E                     __end_of_EUSART_Initialize:	
  8217                           
  8218                           	psect	text32
  8219  0192                     __ptext32:	
  8220 ;; *************** function _GetNavData *****************
  8221 ;; Defined at:
  8222 ;;		line 428 in file "main.c"
  8223 ;; Parameters:    Size  Location     Type
  8224 ;;		None
  8225 ;; Auto vars:     Size  Location     Type
  8226 ;;  i               2   19[BANK0 ] int 
  8227 ;;  skip            1   16[BANK0 ] _Bool 
  8228 ;;  byte            1   24[BANK0 ] unsigned char 
  8229 ;;  startTime       4    8[BANK0 ] unsigned long 
  8230 ;;  dataIndex       2   22[BANK0 ] int 
  8231 ;;  dataFieldTyp    2   17[BANK0 ] int 
  8232 ;;  success         1   21[BANK0 ] _Bool 
  8233 ;; Return value:  Size  Location     Type
  8234 ;;                  1    wreg      _Bool 
  8235 ;; Registers used:
  8236 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8237 ;; Tracked objects:
  8238 ;;		On entry : 0/0
  8239 ;;		On exit  : 0/0
  8240 ;;		Unchanged: 0/0
  8241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8243 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8244 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8245 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8246 ;;Total ram usage:       21 bytes
  8247 ;; Hardware stack levels used:    1
  8248 ;; Hardware stack levels required when called:    5
  8249 ;; This function calls:
  8250 ;;		_EUSART_Read
  8251 ;;		_EUSART_is_rx_ready
  8252 ;;		_TMR1_ReadTimer
  8253 ;; This function is called by:
  8254 ;;		_main
  8255 ;; This function uses a non-reentrant model
  8256 ;;
  8257                           
  8258                           
  8259                           ;psect for function _GetNavData
  8260  0192                     _GetNavData:	
  8261                           
  8262                           ;main.c: 430:     _Bool success = 0;
  8263                           
  8264                           ;incstack = 0
  8265                           ; Regs used in _GetNavData: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8266  0192  0020               	movlb	0	; select bank0
  8267  0193  01B5               	clrf	GetNavData@success
  8268  0194  0022               	movlb	2	; select bank2
  8269  0195  168E               	bsf	14,5	;volatile
  8270                           
  8271                           ;main.c: 437:     unsigned long startTime = TMR1_ReadTimer();
  8272  0196  318D  254C  3181   	fcall	_TMR1_ReadTimer
  8273  0199  0872               	movf	?_TMR1_ReadTimer,w
  8274  019A  0020               	movlb	0	; select bank0
  8275  019B  00A8               	movwf	GetNavData@startTime
  8276  019C  0873               	movf	?_TMR1_ReadTimer+1,w
  8277  019D  00A9               	movwf	GetNavData@startTime+1
  8278  019E  01AA               	clrf	GetNavData@startTime+2
  8279  019F  01AB               	clrf	GetNavData@startTime+3
  8280                           
  8281                           ;main.c: 440:     int dataIndex = 0;
  8282  01A0  01B6               	clrf	GetNavData@dataIndex
  8283  01A1  01B7               	clrf	GetNavData@dataIndex+1
  8284                           
  8285                           ;main.c: 442:     int dataFieldType = 0;
  8286  01A2  01B1               	clrf	GetNavData@dataFieldType
  8287  01A3  01B2               	clrf	GetNavData@dataFieldType+1
  8288  01A4                     l3299:	
  8289                           ;main.c: 444:     while (!success)
  8290                           
  8291                           
  8292                           ;main.c: 444:     while (!success)
  8293  01A4  0020               	movlb	0	; select bank0
  8294  01A5  0835               	movf	GetNavData@success,w
  8295  01A6  1D03               	btfss	3,2
  8296  01A7  2A82               	goto	l3301
  8297                           
  8298                           ;main.c: 445:     {;main.c: 446:         char byte;;main.c: 449:         if (TMR1_ReadTi
      +                          mer() - startTime > 3000)
  8299  01A8  318D  254C  3181   	fcall	_TMR1_ReadTimer
  8300  01AB  0872               	movf	?_TMR1_ReadTimer,w
  8301  01AC  0020               	movlb	0	; select bank0
  8302  01AD  00A4               	movwf	??_GetNavData
  8303  01AE  0873               	movf	?_TMR1_ReadTimer+1,w
  8304  01AF  00A5               	movwf	??_GetNavData+1
  8305  01B0  01A6               	clrf	??_GetNavData+2
  8306  01B1  01A7               	clrf	??_GetNavData+3
  8307  01B2  0828               	movf	GetNavData@startTime,w
  8308  01B3  02A4               	subwf	??_GetNavData,f
  8309  01B4  0829               	movf	GetNavData@startTime+1,w
  8310  01B5  3BA5               	subwfb	??_GetNavData+1,f
  8311  01B6  082A               	movf	GetNavData@startTime+2,w
  8312  01B7  3BA6               	subwfb	??_GetNavData+2,f
  8313  01B8  082B               	movf	GetNavData@startTime+3,w
  8314  01B9  3BA7               	subwfb	??_GetNavData+3,f
  8315  01BA  0827               	movf	??_GetNavData+3,w
  8316  01BB  1D03               	btfss	3,2
  8317  01BC  2A82               	goto	l3301
  8318  01BD  0826               	movf	??_GetNavData+2,w
  8319  01BE  1D03               	btfss	3,2
  8320  01BF  2A82               	goto	l3301
  8321  01C0  30B9               	movlw	185
  8322  01C1  0224               	subwf	??_GetNavData,w
  8323  01C2  300B               	movlw	11
  8324  01C3  3B25               	subwfb	??_GetNavData+1,w
  8325  01C4  1803               	btfsc	3,0
  8326  01C5  2A82               	goto	l3301
  8327                           
  8328                           ;main.c: 455:         if (EUSART_is_rx_ready())
  8329  01C6  318C  244C  3181   	fcall	_EUSART_is_rx_ready
  8330  01C9  3A00               	xorlw	0
  8331  01CA  1903               	skipnz
  8332  01CB  29A4               	goto	l3299
  8333                           
  8334                           ;main.c: 456:         {;main.c: 457:             byte = EUSART_Read();
  8335  01CC  318C  247E  3181   	fcall	_EUSART_Read
  8336  01CF  0020               	movlb	0	; select bank0
  8337  01D0  00A4               	movwf	??_GetNavData
  8338  01D1  0824               	movf	??_GetNavData,w
  8339  01D2  00B8               	movwf	GetNavData@byte
  8340                           
  8341                           ;main.c: 459:             _Bool skip = 1;
  8342  01D3  01B0               	clrf	GetNavData@skip
  8343  01D4  0AB0               	incf	GetNavData@skip,f
  8344                           
  8345                           ;main.c: 460:             switch (byte)
  8346  01D5  29F2               	goto	l3259
  8347  01D6                     l3249:	
  8348                           
  8349                           ;main.c: 463:                 dataFieldType++;
  8350  01D6  3001               	movlw	1
  8351  01D7  07B1               	addwf	GetNavData@dataFieldType,f
  8352  01D8  3000               	movlw	0
  8353  01D9  3DB2               	addwfc	GetNavData@dataFieldType+1,f
  8354                           
  8355                           ;main.c: 464:                 dataIndex = 0;
  8356  01DA  01B6               	clrf	GetNavData@dataIndex
  8357  01DB  01B7               	clrf	GetNavData@dataIndex+1
  8358                           
  8359                           ;main.c: 465:                 break;
  8360  01DC  2A02               	goto	l3261
  8361  01DD                     l3253:	
  8362                           
  8363                           ;main.c: 467:                 success = dataFieldType > 13;
  8364  01DD  0832               	movf	GetNavData@dataFieldType+1,w
  8365  01DE  3A80               	xorlw	128
  8366  01DF  00A4               	movwf	??_GetNavData
  8367  01E0  3080               	movlw	128
  8368  01E1  0224               	subwf	??_GetNavData,w
  8369  01E2  1D03               	skipz
  8370  01E3  29E6               	goto	u2925
  8371  01E4  300E               	movlw	14
  8372  01E5  0231               	subwf	GetNavData@dataFieldType,w
  8373  01E6                     u2925:	
  8374  01E6  1C03               	btfss	3,0
  8375  01E7  29EA               	goto	u2920
  8376  01E8  3001               	movlw	1
  8377  01E9  29EB               	goto	u2930
  8378  01EA                     u2920:	
  8379  01EA  3000               	movlw	0
  8380  01EB                     u2930:	
  8381  01EB  0020               	movlb	0	; select bank0
  8382  01EC  00A5               	movwf	??_GetNavData+1
  8383  01ED  0825               	movf	??_GetNavData+1,w
  8384  01EE  00B5               	movwf	GetNavData@success
  8385                           
  8386                           ;main.c: 468:                 break;
  8387  01EF  2A02               	goto	l3261
  8388  01F0                     l3255:	
  8389                           
  8390                           ;main.c: 470:                 skip = 0;
  8391  01F0  01B0               	clrf	GetNavData@skip
  8392                           
  8393                           ;main.c: 471:                 break;
  8394  01F1  2A02               	goto	l3261
  8395  01F2                     l3259:	
  8396  01F2  0838               	movf	GetNavData@byte,w
  8397  01F3  00A4               	movwf	??_GetNavData
  8398  01F4  01A5               	clrf	??_GetNavData+1
  8399                           
  8400                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8401                           ; Switch size 1, requested type "simple"
  8402                           ; Number of cases is 1, Range of values is 0 to 0
  8403                           ; switch strategies available:
  8404                           ; Name         Instructions Cycles
  8405                           ; simple_byte            4     3 (average)
  8406                           ; direct_byte            8     6 (fixed)
  8407                           ; jumptable            260     6 (fixed)
  8408                           ;	Chosen strategy is simple_byte
  8409  01F5  0825               	movf	??_GetNavData+1,w
  8410  01F6  3A00               	xorlw	0	; case 0
  8411  01F7  1903               	skipnz
  8412  01F8  29FA               	goto	l3413
  8413  01F9  29F0               	goto	l3255
  8414  01FA                     l3413:	
  8415                           
  8416                           ; Switch size 1, requested type "simple"
  8417                           ; Number of cases is 2, Range of values is 10 to 44
  8418                           ; switch strategies available:
  8419                           ; Name         Instructions Cycles
  8420                           ; simple_byte            7     4 (average)
  8421                           ; direct_byte           79     9 (fixed)
  8422                           ; jumptable            263     9 (fixed)
  8423                           ;	Chosen strategy is simple_byte
  8424  01FA  0824               	movf	??_GetNavData,w
  8425  01FB  3A0A               	xorlw	10	; case 10
  8426  01FC  1903               	skipnz
  8427  01FD  29DD               	goto	l3253
  8428  01FE  3A26               	xorlw	38	; case 44
  8429  01FF  1903               	skipnz
  8430  0200  29D6               	goto	l3249
  8431  0201  29F0               	goto	l3255
  8432  0202                     l3261:	
  8433                           
  8434                           ;main.c: 474:             if (!skip)
  8435  0202  0830               	movf	GetNavData@skip,w
  8436  0203  1903               	btfsc	3,2
  8437  0204  2A57               	goto	l3295
  8438  0205  29A4               	goto	l3299
  8439  0206                     l3265:	
  8440                           
  8441                           ;main.c: 480:                     gps_time[dataIndex] = byte;
  8442  0206  0838               	movf	GetNavData@byte,w
  8443  0207  00A4               	movwf	??_GetNavData
  8444  0208  0836               	movf	GetNavData@dataIndex,w
  8445  0209  3EAB               	addlw	(low (_gps_time| 0))& (0+255)
  8446  020A  2A52               	goto	L11
  8447  020B                     l3267:	
  8448                           ;main.c: 481:                     break;
  8449                           
  8450                           
  8451                           ;main.c: 483:                     gps_latitude[dataIndex + 1] = byte;
  8452  020B  0838               	movf	GetNavData@byte,w
  8453  020C  00A4               	movwf	??_GetNavData
  8454  020D  0836               	movf	GetNavData@dataIndex,w
  8455  020E  3E51               	addlw	(low ((_gps_latitude| (0+512)+1)))& (0+255)
  8456  020F  2A39               	goto	L13
  8457  0210                     l3269:	
  8458                           ;main.c: 484:                     break;
  8459                           
  8460                           
  8461                           ;main.c: 487:                     gps_latitude[0] = byte == 'N' ? '+' : '-';
  8462  0210  304E               	movlw	78
  8463  0211  0638               	xorwf	GetNavData@byte,w
  8464  0212  1903               	btfsc	3,2
  8465  0213  2A16               	goto	l3273
  8466  0214  302D               	movlw	45
  8467  0215  2A17               	goto	L4
  8468  0216                     l3273:	
  8469  0216  302B               	movlw	43
  8470  0217                     L4:	
  8471  0217  00AC               	movwf	_GetNavData$609
  8472  0218  3000               	movlw	0
  8473  0219  00AD               	movwf	_GetNavData$609+1
  8474  021A  082C               	movf	_GetNavData$609,w
  8475  021B  00A4               	movwf	??_GetNavData
  8476  021C  0824               	movf	??_GetNavData,w
  8477  021D  0024               	movlb	4	; select bank4
  8478  021E  00D0               	movwf	_gps_latitude^(0+512)
  8479                           
  8480                           ;main.c: 488:                     break;
  8481  021F  2A7C               	goto	l3297
  8482  0220                     l3275:	
  8483                           
  8484                           ;main.c: 490:                     gps_longitude[dataIndex + 1] = byte;
  8485  0220  0838               	movf	GetNavData@byte,w
  8486  0221  00A4               	movwf	??_GetNavData
  8487  0222  0836               	movf	GetNavData@dataIndex,w
  8488  0223  3E41               	addlw	(low ((_gps_longitude| (0+512)+1)))& (0+255)
  8489  0224  2A39               	goto	L13
  8490  0225                     l3277:	
  8491                           ;main.c: 491:                     break;
  8492                           
  8493                           
  8494                           ;main.c: 494:                     gps_longitude[0] = byte == 'E' ? '+' : '-';
  8495  0225  3045               	movlw	69
  8496  0226  0638               	xorwf	GetNavData@byte,w
  8497  0227  1903               	btfsc	3,2
  8498  0228  2A2B               	goto	l3281
  8499  0229  302D               	movlw	45
  8500  022A  2A2C               	goto	L6
  8501  022B                     l3281:	
  8502  022B  302B               	movlw	43
  8503  022C                     L6:	
  8504  022C  00AE               	movwf	_GetNavData$610
  8505  022D  3000               	movlw	0
  8506  022E  00AF               	movwf	_GetNavData$610+1
  8507  022F  082E               	movf	_GetNavData$610,w
  8508  0230  00A4               	movwf	??_GetNavData
  8509  0231  0824               	movf	??_GetNavData,w
  8510  0232  0024               	movlb	4	; select bank4
  8511  0233  00C0               	movwf	_gps_longitude^(0+512)
  8512                           
  8513                           ;main.c: 495:                     break;
  8514  0234  2A7C               	goto	l3297
  8515  0235                     l3283:	
  8516                           
  8517                           ;main.c: 497:                     gps_altitude[dataIndex] = byte;
  8518  0235  0838               	movf	GetNavData@byte,w
  8519  0236  00A4               	movwf	??_GetNavData
  8520  0237  0836               	movf	GetNavData@dataIndex,w
  8521  0238  3E60               	addlw	(low (_gps_altitude| (0+512)))& (0+255)
  8522  0239                     L13:	
  8523  0239  0086               	movwf	6
  8524  023A  3002               	movlw	2	; select bank4/5
  8525  023B  2A47               	goto	L14
  8526  023C                     l3285:	
  8527                           ;main.c: 498:                     break;
  8528                           
  8529                           
  8530                           ;main.c: 500:                     gps_nav_status[dataIndex] = byte;
  8531  023C  0838               	movf	GetNavData@byte,w
  8532  023D  00A4               	movwf	??_GetNavData
  8533  023E  0836               	movf	GetNavData@dataIndex,w
  8534  023F  3EA0               	addlw	(low (_gps_nav_status| 0))& (0+255)
  8535  0240  2A52               	goto	L11
  8536  0241                     l3287:	
  8537                           ;main.c: 501:                     break;
  8538                           
  8539                           
  8540                           ;main.c: 503:                     gps_speed_over_ground[dataIndex] = byte;
  8541  0241  0838               	movf	GetNavData@byte,w
  8542  0242  00A4               	movwf	??_GetNavData
  8543  0243  0836               	movf	GetNavData@dataIndex,w
  8544  0244  3EE8               	addlw	(low (_gps_speed_over_ground| (0+256)))& (0+255)
  8545  0245  0086               	movwf	6
  8546  0246  3001               	movlw	1	; select bank3/4
  8547  0247                     L14:	
  8548  0247  0087               	movwf	7
  8549  0248  2A54               	goto	L10
  8550  0249                     l3289:	
  8551                           ;main.c: 504:                     break;
  8552                           
  8553                           
  8554                           ;main.c: 506:                     gps_course_over_ground[dataIndex] = byte;
  8555  0249  0838               	movf	GetNavData@byte,w
  8556  024A  00A4               	movwf	??_GetNavData
  8557  024B  0836               	movf	GetNavData@dataIndex,w
  8558  024C  3EBD               	addlw	(low (_gps_course_over_ground| 0))& (0+255)
  8559  024D  2A52               	goto	L11
  8560  024E                     l3291:	
  8561                           ;main.c: 507:                     break;
  8562                           
  8563                           
  8564                           ;main.c: 509:                     gps_vertical_velocity[dataIndex] = byte;
  8565  024E  0838               	movf	GetNavData@byte,w
  8566  024F  00A4               	movwf	??_GetNavData
  8567  0250  0836               	movf	GetNavData@dataIndex,w
  8568  0251  3EB5               	addlw	(low (_gps_vertical_velocity| 0))& (0+255)
  8569  0252                     L11:	
  8570  0252  0086               	movwf	6
  8571  0253  0187               	clrf	7
  8572  0254                     L10:	
  8573  0254  0824               	movf	??_GetNavData,w
  8574  0255  0081               	movwf	1
  8575                           
  8576                           ;main.c: 510:                     break;
  8577  0256  2A7C               	goto	l3297
  8578  0257                     l3295:	
  8579                           
  8580                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8581                           ; Switch size 1, requested type "simple"
  8582                           ; Number of cases is 1, Range of values is 0 to 0
  8583                           ; switch strategies available:
  8584                           ; Name         Instructions Cycles
  8585                           ; simple_byte            4     3 (average)
  8586                           ; direct_byte            8     6 (fixed)
  8587                           ; jumptable            260     6 (fixed)
  8588                           ;	Chosen strategy is simple_byte
  8589  0257  0832               	movf	GetNavData@dataFieldType+1,w
  8590  0258  3A00               	xorlw	0	; case 0
  8591  0259  1903               	skipnz
  8592  025A  2A5C               	goto	l3415
  8593  025B  2A7C               	goto	l3297
  8594  025C                     l3415:	
  8595                           
  8596                           ; Switch size 1, requested type "simple"
  8597                           ; Number of cases is 10, Range of values is 2 to 13
  8598                           ; switch strategies available:
  8599                           ; Name         Instructions Cycles
  8600                           ; simple_byte           31    16 (average)
  8601                           ; direct_byte           33     9 (fixed)
  8602                           ; jumptable            263     9 (fixed)
  8603                           ;	Chosen strategy is simple_byte
  8604  025C  0831               	movf	GetNavData@dataFieldType,w
  8605  025D  3A02               	xorlw	2	; case 2
  8606  025E  1903               	skipnz
  8607  025F  2A06               	goto	l3265
  8608  0260  3A01               	xorlw	1	; case 3
  8609  0261  1903               	skipnz
  8610  0262  2A0B               	goto	l3267
  8611  0263  3A07               	xorlw	7	; case 4
  8612  0264  1903               	skipnz
  8613  0265  2A10               	goto	l3269
  8614  0266  3A01               	xorlw	1	; case 5
  8615  0267  1903               	skipnz
  8616  0268  2A20               	goto	l3275
  8617  0269  3A03               	xorlw	3	; case 6
  8618  026A  1903               	skipnz
  8619  026B  2A25               	goto	l3277
  8620  026C  3A01               	xorlw	1	; case 7
  8621  026D  1903               	skipnz
  8622  026E  2A35               	goto	l3283
  8623  026F  3A0F               	xorlw	15	; case 8
  8624  0270  1903               	skipnz
  8625  0271  2A3C               	goto	l3285
  8626  0272  3A03               	xorlw	3	; case 11
  8627  0273  1903               	skipnz
  8628  0274  2A41               	goto	l3287
  8629  0275  3A07               	xorlw	7	; case 12
  8630  0276  1903               	skipnz
  8631  0277  2A49               	goto	l3289
  8632  0278  3A01               	xorlw	1	; case 13
  8633  0279  1903               	skipnz
  8634  027A  2A4E               	goto	l3291
  8635  027B  2A7C               	goto	l3297
  8636  027C                     l3297:	
  8637                           
  8638                           ;main.c: 514:                 dataIndex++;
  8639  027C  3001               	movlw	1
  8640  027D  0020               	movlb	0	; select bank0
  8641  027E  07B6               	addwf	GetNavData@dataIndex,f
  8642  027F  3000               	movlw	0
  8643  0280  3DB7               	addwfc	GetNavData@dataIndex+1,f
  8644  0281  29A4               	goto	l3299
  8645  0282                     l3301:	
  8646                           
  8647                           ;main.c: 521:     if (!success)
  8648  0282  0835               	movf	GetNavData@success,w
  8649  0283  1D03               	btfss	3,2
  8650  0284  2AB5               	goto	l382
  8651                           
  8652                           ;main.c: 522:     {;main.c: 524:         for (int i = 0; i < 4; i++)
  8653  0285  01B3               	clrf	GetNavData@i
  8654  0286  01B4               	clrf	GetNavData@i+1
  8655  0287                     l3309:	
  8656                           
  8657                           ;main.c: 525:         {;main.c: 526:             _delay((unsigned long)((250)*(4000000/4
      +                          000.0)));
  8658  0287  3002               	movlw	2
  8659  0288  0020               	movlb	0	; select bank0
  8660  0289  00A5               	movwf	??_GetNavData+1
  8661  028A  3045               	movlw	69
  8662  028B  00A4               	movwf	??_GetNavData
  8663  028C  30A9               	movlw	169
  8664  028D                     u3057:	
  8665  028D  0B89               	decfsz	9,f
  8666  028E  2A8D               	goto	u3057
  8667  028F  0BA4               	decfsz	??_GetNavData,f
  8668  0290  2A8D               	goto	u3057
  8669  0291  0BA5               	decfsz	??_GetNavData+1,f
  8670  0292  2A8D               	goto	u3057
  8671  0293  3200               	nop2
  8672  0294  0022               	movlb	2	; select bank2
  8673  0295  128E               	bcf	14,5	;volatile
  8674                           
  8675                           ;main.c: 528:             _delay((unsigned long)((250)*(4000000/4000.0)));
  8676  0296  3002               	movlw	2
  8677  0297  0020               	movlb	0	; select bank0
  8678  0298  00A5               	movwf	??_GetNavData+1
  8679  0299  3045               	movlw	69
  8680  029A  00A4               	movwf	??_GetNavData
  8681  029B  30A9               	movlw	169
  8682  029C                     u3067:	
  8683  029C  0B89               	decfsz	9,f
  8684  029D  2A9C               	goto	u3067
  8685  029E  0BA4               	decfsz	??_GetNavData,f
  8686  029F  2A9C               	goto	u3067
  8687  02A0  0BA5               	decfsz	??_GetNavData+1,f
  8688  02A1  2A9C               	goto	u3067
  8689  02A2  3200               	nop2
  8690  02A3  0022               	movlb	2	; select bank2
  8691  02A4  168E               	bsf	14,5	;volatile
  8692                           
  8693                           ;main.c: 530:         }
  8694  02A5  3001               	movlw	1
  8695  02A6  0020               	movlb	0	; select bank0
  8696  02A7  07B3               	addwf	GetNavData@i,f
  8697  02A8  3000               	movlw	0
  8698  02A9  3DB4               	addwfc	GetNavData@i+1,f
  8699  02AA  0834               	movf	GetNavData@i+1,w
  8700  02AB  3A80               	xorlw	128
  8701  02AC  00A4               	movwf	??_GetNavData
  8702  02AD  3080               	movlw	128
  8703  02AE  0224               	subwf	??_GetNavData,w
  8704  02AF  1D03               	skipz
  8705  02B0  2AB3               	goto	u2995
  8706  02B1  3004               	movlw	4
  8707  02B2  0233               	subwf	GetNavData@i,w
  8708  02B3                     u2995:	
  8709  02B3  1C03               	skipc
  8710  02B4  2A87               	goto	l3309
  8711  02B5                     l382:	
  8712                           ;main.c: 532:     do { LATCbits.LATC5 = 0; } while(0);
  8713                           
  8714  02B5  0022               	movlb	2	; select bank2
  8715  02B6  128E               	bcf	14,5	;volatile
  8716  02B7  0008               	return
  8717  02B8                     __end_of_GetNavData:	
  8718                           
  8719                           	psect	text33
  8720  0D4C                     __ptext33:	
  8721 ;; *************** function _TMR1_ReadTimer *****************
  8722 ;; Defined at:
  8723 ;;		line 105 in file "mcc_generated_files/tmr1.c"
  8724 ;; Parameters:    Size  Location     Type
  8725 ;;		None
  8726 ;; Auto vars:     Size  Location     Type
  8727 ;;  readVal         2    0[BANK0 ] unsigned short 
  8728 ;;  readValLow      1    3[BANK0 ] unsigned char 
  8729 ;;  readValHigh     1    2[BANK0 ] unsigned char 
  8730 ;; Return value:  Size  Location     Type
  8731 ;;                  2    2[COMMON] unsigned short 
  8732 ;; Registers used:
  8733 ;;		wreg
  8734 ;; Tracked objects:
  8735 ;;		On entry : 0/0
  8736 ;;		On exit  : 0/0
  8737 ;;		Unchanged: 0/0
  8738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8739 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8740 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8741 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8742 ;;      Totals:         7       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8743 ;;Total ram usage:       11 bytes
  8744 ;; Hardware stack levels used:    1
  8745 ;; Hardware stack levels required when called:    4
  8746 ;; This function calls:
  8747 ;;		Nothing
  8748 ;; This function is called by:
  8749 ;;		_GPS_HasAcknowledged
  8750 ;;		_GetNavData
  8751 ;; This function uses a non-reentrant model
  8752 ;;
  8753                           
  8754                           
  8755                           ;psect for function _TMR1_ReadTimer
  8756  0D4C                     _TMR1_ReadTimer:	
  8757                           
  8758                           ;mcc_generated_files/tmr1.c: 107:     uint16_t readVal;;mcc_generated_files/tmr1.c: 108:
      +                               uint8_t readValHigh;;mcc_generated_files/tmr1.c: 109:     uint8_t readValLow;;mcc_g
      +                          enerated_files/tmr1.c: 112:     readValLow = TMR1L;
  8759                           
  8760                           ;incstack = 0
  8761                           ; Regs used in _TMR1_ReadTimer: [wreg]
  8762  0D4C  0020               	movlb	0	; select bank0
  8763  0D4D  0816               	movf	22,w	;volatile
  8764  0D4E  00F4               	movwf	??_TMR1_ReadTimer
  8765  0D4F  0874               	movf	??_TMR1_ReadTimer,w
  8766  0D50  00A3               	movwf	TMR1_ReadTimer@readValLow
  8767                           
  8768                           ;mcc_generated_files/tmr1.c: 113:     readValHigh = TMR1H;
  8769  0D51  0817               	movf	23,w	;volatile
  8770  0D52  00F4               	movwf	??_TMR1_ReadTimer
  8771  0D53  0874               	movf	??_TMR1_ReadTimer,w
  8772  0D54  00A2               	movwf	TMR1_ReadTimer@readValHigh
  8773                           
  8774                           ;mcc_generated_files/tmr1.c: 115:     readVal = ((uint16_t)readValHigh << 8) | readValLo
      +                          w;
  8775  0D55  0823               	movf	TMR1_ReadTimer@readValLow,w
  8776  0D56  00F4               	movwf	??_TMR1_ReadTimer
  8777  0D57  01F5               	clrf	??_TMR1_ReadTimer+1
  8778  0D58  0822               	movf	TMR1_ReadTimer@readValHigh,w
  8779  0D59  00F6               	movwf	??_TMR1_ReadTimer+2
  8780  0D5A  01F7               	clrf	??_TMR1_ReadTimer+3
  8781  0D5B  0876               	movf	??_TMR1_ReadTimer+2,w
  8782  0D5C  00F7               	movwf	??_TMR1_ReadTimer+3
  8783  0D5D  01F6               	clrf	??_TMR1_ReadTimer+2
  8784  0D5E  0874               	movf	??_TMR1_ReadTimer,w
  8785  0D5F  0476               	iorwf	??_TMR1_ReadTimer+2,w
  8786  0D60  00A0               	movwf	TMR1_ReadTimer@readVal
  8787  0D61  0875               	movf	??_TMR1_ReadTimer+1,w
  8788  0D62  0477               	iorwf	??_TMR1_ReadTimer+3,w
  8789  0D63  00A1               	movwf	TMR1_ReadTimer@readVal+1
  8790                           
  8791                           ;mcc_generated_files/tmr1.c: 117:     return readVal;
  8792  0D64  0821               	movf	TMR1_ReadTimer@readVal+1,w
  8793  0D65  00F3               	movwf	?_TMR1_ReadTimer+1
  8794  0D66  0820               	movf	TMR1_ReadTimer@readVal,w
  8795  0D67  00F2               	movwf	?_TMR1_ReadTimer
  8796  0D68  0008               	return
  8797  0D69                     __end_of_TMR1_ReadTimer:	
  8798                           
  8799                           	psect	text34
  8800  0C4C                     __ptext34:	
  8801 ;; *************** function _EUSART_is_rx_ready *****************
  8802 ;; Defined at:
  8803 ;;		line 83 in file "mcc_generated_files/eusart.c"
  8804 ;; Parameters:    Size  Location     Type
  8805 ;;		None
  8806 ;; Auto vars:     Size  Location     Type
  8807 ;;		None
  8808 ;; Return value:  Size  Location     Type
  8809 ;;                  1    wreg      _Bool 
  8810 ;; Registers used:
  8811 ;;		wreg, status,2, status,0
  8812 ;; Tracked objects:
  8813 ;;		On entry : 0/0
  8814 ;;		On exit  : 0/0
  8815 ;;		Unchanged: 0/0
  8816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8817 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8818 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8820 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8821 ;;Total ram usage:        0 bytes
  8822 ;; Hardware stack levels used:    1
  8823 ;; Hardware stack levels required when called:    4
  8824 ;; This function calls:
  8825 ;;		Nothing
  8826 ;; This function is called by:
  8827 ;;		_GPS_HasAcknowledged
  8828 ;;		_GetNavData
  8829 ;; This function uses a non-reentrant model
  8830 ;;
  8831                           
  8832                           
  8833                           ;psect for function _EUSART_is_rx_ready
  8834  0C4C                     _EUSART_is_rx_ready:	
  8835                           
  8836                           ;mcc_generated_files/eusart.c: 85:     return PIR1bits.RCIF;
  8837                           
  8838                           ;incstack = 0
  8839                           ; Regs used in _EUSART_is_rx_ready: [wreg+status,2+status,0]
  8840  0C4C  0020               	movlb	0	; select bank0
  8841  0C4D  0E10               	swapf	16,w	;volatile
  8842  0C4E  0C89               	rrf	9,f
  8843  0C4F  3901               	andlw	1
  8844  0C50  0008               	return
  8845  0C51                     __end_of_EUSART_is_rx_ready:	
  8846                           
  8847                           	psect	text35
  8848  0C7E                     __ptext35:	
  8849 ;; *************** function _EUSART_Read *****************
  8850 ;; Defined at:
  8851 ;;		line 93 in file "mcc_generated_files/eusart.c"
  8852 ;; Parameters:    Size  Location     Type
  8853 ;;		None
  8854 ;; Auto vars:     Size  Location     Type
  8855 ;;		None
  8856 ;; Return value:  Size  Location     Type
  8857 ;;                  1    wreg      unsigned char 
  8858 ;; Registers used:
  8859 ;;		wreg
  8860 ;; Tracked objects:
  8861 ;;		On entry : 0/0
  8862 ;;		On exit  : 0/0
  8863 ;;		Unchanged: 0/0
  8864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8868 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8869 ;;Total ram usage:        0 bytes
  8870 ;; Hardware stack levels used:    1
  8871 ;; Hardware stack levels required when called:    4
  8872 ;; This function calls:
  8873 ;;		Nothing
  8874 ;; This function is called by:
  8875 ;;		_GPS_HasAcknowledged
  8876 ;;		_GetNavData
  8877 ;;		_getch
  8878 ;; This function uses a non-reentrant model
  8879 ;;
  8880                           
  8881                           
  8882                           ;psect for function _EUSART_Read
  8883  0C7E                     _EUSART_Read:	
  8884  0C7E                     l105:	
  8885                           ;mcc_generated_files/eusart.c: 96:     {;mcc_generated_files/eusart.c: 97:     }
  8886                           
  8887                           ;incstack = 0
  8888                           ; Regs used in _EUSART_Read: [wreg]
  8889                           
  8890                           
  8891                           ;mcc_generated_files/eusart.c: 95:     while(!PIR1bits.RCIF)
  8892  0C7E  0020               	movlb	0	; select bank0
  8893  0C7F  1E90               	btfss	16,5	;volatile
  8894  0C80  2C7E               	goto	l105
  8895                           
  8896                           ;mcc_generated_files/eusart.c: 100:     if(1 == RC1STAbits.OERR)
  8897  0C81  0023               	movlb	3	; select bank3
  8898  0C82  1C9D               	btfss	29,1	;volatile
  8899  0C83  2C86               	goto	l2963
  8900                           
  8901                           ;mcc_generated_files/eusart.c: 101:     {;mcc_generated_files/eusart.c: 104:         RC1
      +                          STAbits.CREN = 0;
  8902  0C84  121D               	bcf	29,4	;volatile
  8903                           
  8904                           ;mcc_generated_files/eusart.c: 105:         RC1STAbits.CREN = 1;
  8905  0C85  161D               	bsf	29,4	;volatile
  8906  0C86                     l2963:	
  8907                           
  8908                           ;mcc_generated_files/eusart.c: 108:     return RC1REG;
  8909  0C86  0819               	movf	25,w	;volatile
  8910  0C87  0008               	return
  8911  0C88                     __end_of_EUSART_Read:	
  8912                           
  8913                           	psect	text36
  8914  0F11                     __ptext36:	
  8915 ;; *************** function _AppendCRC *****************
  8916 ;; Defined at:
  8917 ;;		line 208 in file "main.c"
  8918 ;; Parameters:    Size  Location     Type
  8919 ;;  data            1    wreg     PTR unsigned char 
  8920 ;;		 -> main@message_end(73), main@message_start(70), NULL(0), 
  8921 ;;  crc             2   13[BANK0 ] unsigned short 
  8922 ;; Auto vars:     Size  Location     Type
  8923 ;;  data            1   19[BANK0 ] PTR unsigned char 
  8924 ;;		 -> main@message_end(73), main@message_start(70), NULL(0), 
  8925 ;;  len             2   17[BANK0 ] int 
  8926 ;; Return value:  Size  Location     Type
  8927 ;;                  1    wreg      void 
  8928 ;; Registers used:
  8929 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8930 ;; Tracked objects:
  8931 ;;		On entry : 0/0
  8932 ;;		On exit  : 0/0
  8933 ;;		Unchanged: 0/0
  8934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8935 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8936 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8937 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8938 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8939 ;;Total ram usage:        7 bytes
  8940 ;; Hardware stack levels used:    1
  8941 ;; Hardware stack levels required when called:    5
  8942 ;; This function calls:
  8943 ;;		_strlen
  8944 ;; This function is called by:
  8945 ;;		_main
  8946 ;; This function uses a non-reentrant model
  8947 ;;
  8948                           
  8949                           
  8950                           ;psect for function _AppendCRC
  8951  0F11                     _AppendCRC:	
  8952                           
  8953                           ;incstack = 0
  8954                           ; Regs used in _AppendCRC: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8955                           ;AppendCRC@data stored from wreg
  8956  0F11  0020               	movlb	0	; select bank0
  8957  0F12  00B3               	movwf	AppendCRC@data
  8958                           
  8959                           ;main.c: 208: void AppendCRC(char* data, unsigned short crc);main.c: 209: {;main.c: 210:
      +                            int len = strlen(data);
  8960  0F13  0833               	movf	AppendCRC@data,w
  8961  0F14  00F2               	movwf	strlen@s
  8962  0F15  39FF               	andlw	255
  8963  0F16  1D03               	skipz
  8964  0F17  3001               	movlw	1
  8965  0F18  00F3               	movwf	strlen@s+1
  8966  0F19  318C  24EB  318F   	fcall	_strlen
  8967  0F1C  0873               	movf	?_strlen+1,w
  8968  0F1D  0020               	movlb	0	; select bank0
  8969  0F1E  00B2               	movwf	AppendCRC@len+1
  8970  0F1F  0872               	movf	?_strlen,w
  8971  0F20  00B1               	movwf	AppendCRC@len
  8972                           
  8973                           ;main.c: 211:  if (len >= 70 - 1)
  8974  0F21  0832               	movf	AppendCRC@len+1,w
  8975  0F22  3A80               	xorlw	128
  8976  0F23  00AF               	movwf	??_AppendCRC
  8977  0F24  3080               	movlw	128
  8978  0F25  022F               	subwf	??_AppendCRC,w
  8979  0F26  1D03               	skipz
  8980  0F27  2F2A               	goto	u2885
  8981  0F28  3045               	movlw	69
  8982  0F29  0231               	subwf	AppendCRC@len,w
  8983  0F2A                     u2885:	
  8984  0F2A  1C03               	skipc
  8985  0F2B  2F31               	goto	l3195
  8986                           
  8987                           ;main.c: 212:  {;main.c: 214:   len = 70 - 2;
  8988  0F2C  3044               	movlw	68
  8989  0F2D  0020               	movlb	0	; select bank0
  8990  0F2E  00B1               	movwf	AppendCRC@len
  8991  0F2F  3000               	movlw	0
  8992  0F30  00B2               	movwf	AppendCRC@len+1
  8993  0F31                     l3195:	
  8994                           
  8995                           ;main.c: 216:  data[len] = (char)(crc >> 8);
  8996  0F31  0020               	movlb	0	; select bank0
  8997  0F32  082E               	movf	AppendCRC@crc+1,w
  8998  0F33  00AF               	movwf	??_AppendCRC
  8999  0F34  0831               	movf	AppendCRC@len,w
  9000  0F35  0733               	addwf	AppendCRC@data,w
  9001  0F36  00B0               	movwf	??_AppendCRC+1
  9002  0F37  0830               	movf	??_AppendCRC+1,w
  9003  0F38  0086               	movwf	6
  9004  0F39  3001               	movlw	1	; select bank2/3
  9005  0F3A  0087               	movwf	7
  9006  0F3B  082F               	movf	??_AppendCRC,w
  9007  0F3C  0081               	movwf	1
  9008                           
  9009                           ;main.c: 217:  data[len + 1] = (char)(crc);
  9010  0F3D  082D               	movf	AppendCRC@crc,w
  9011  0F3E  00AF               	movwf	??_AppendCRC
  9012  0F3F  0831               	movf	AppendCRC@len,w
  9013  0F40  0733               	addwf	AppendCRC@data,w
  9014  0F41  00B0               	movwf	??_AppendCRC+1
  9015  0F42  0A30               	incf	??_AppendCRC+1,w
  9016  0F43  0086               	movwf	6
  9017  0F44  3001               	movlw	1	; select bank2/3
  9018  0F45  0087               	movwf	7
  9019  0F46  082F               	movf	??_AppendCRC,w
  9020  0F47  0081               	movwf	1
  9021                           
  9022                           ;main.c: 218:  data[len + 2] = '\n';
  9023  0F48  300A               	movlw	10
  9024  0F49  00AF               	movwf	??_AppendCRC
  9025  0F4A  0831               	movf	AppendCRC@len,w
  9026  0F4B  0733               	addwf	AppendCRC@data,w
  9027  0F4C  00B0               	movwf	??_AppendCRC+1
  9028  0F4D  0830               	movf	??_AppendCRC+1,w
  9029  0F4E  3E02               	addlw	2
  9030  0F4F  0086               	movwf	6
  9031  0F50  3001               	movlw	1	; select bank2/3
  9032  0F51  0087               	movwf	7
  9033  0F52  082F               	movf	??_AppendCRC,w
  9034  0F53  0081               	movwf	1
  9035                           
  9036                           ;main.c: 219:  data[len + 3] = '\0';
  9037  0F54  0831               	movf	AppendCRC@len,w
  9038  0F55  0733               	addwf	AppendCRC@data,w
  9039  0F56  00AF               	movwf	??_AppendCRC
  9040  0F57  082F               	movf	??_AppendCRC,w
  9041  0F58  3E03               	addlw	3
  9042  0F59  0086               	movwf	6
  9043  0F5A  3001               	movlw	1	; select bank2/3
  9044  0F5B  0087               	movwf	7
  9045  0F5C  0181               	clrf	1
  9046  0F5D  0008               	return
  9047  0F5E                     __end_of_AppendCRC:	
  9048                           
  9049                           	psect	text37
  9050  0CEB                     __ptext37:	
  9051 ;; *************** function _strlen *****************
  9052 ;; Defined at:
  9053 ;;		line 12 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\strlen.c"
  9054 ;; Parameters:    Size  Location     Type
  9055 ;;  s               2    2[COMMON] PTR const unsigned char 
  9056 ;;		 -> ?_printf(2), ?_sprintf(2), stoa@nuls(7), dbuf(32), 
  9057 ;;		 -> main@message_end(73), main@message_start(70), NULL(0), gps_vertical_velocity(8), 
  9058 ;;		 -> gps_course_over_ground(8), gps_speed_over_ground(8), gps_altitude(12), gps_longitude(16), 
  9059 ;;		 -> gps_latitude(16), gps_time(10), 
  9060 ;; Auto vars:     Size  Location     Type
  9061 ;;  a               2    4[COMMON] PTR const unsigned char 
  9062 ;;		 -> ?_printf(2), ?_sprintf(2), stoa@nuls(7), dbuf(32), 
  9063 ;;		 -> main@message_end(73), main@message_start(70), NULL(0), gps_vertical_velocity(8), 
  9064 ;;		 -> gps_course_over_ground(8), gps_speed_over_ground(8), gps_altitude(12), gps_longitude(16), 
  9065 ;;		 -> gps_latitude(16), gps_time(10), 
  9066 ;; Return value:  Size  Location     Type
  9067 ;;                  2    2[COMMON] unsigned int 
  9068 ;; Registers used:
  9069 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9070 ;; Tracked objects:
  9071 ;;		On entry : 0/0
  9072 ;;		On exit  : 0/0
  9073 ;;		Unchanged: 0/0
  9074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9075 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9076 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9078 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9079 ;;Total ram usage:        4 bytes
  9080 ;; Hardware stack levels used:    1
  9081 ;; Hardware stack levels required when called:    4
  9082 ;; This function calls:
  9083 ;;		Nothing
  9084 ;; This function is called by:
  9085 ;;		_crc16
  9086 ;;		_TransmitString
  9087 ;;		_AppendCRC
  9088 ;;		_pad
  9089 ;;		_stoa
  9090 ;; This function uses a non-reentrant model
  9091 ;;
  9092                           
  9093                           
  9094                           ;psect for function _strlen
  9095  0CEB                     _strlen:	
  9096                           
  9097                           ;incstack = 0
  9098                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  9099  0CEB  0873               	movf	strlen@s+1,w
  9100  0CEC  00F5               	movwf	strlen@a+1
  9101  0CED  0872               	movf	strlen@s,w
  9102  0CEE  00F4               	movwf	strlen@a
  9103  0CEF                     l2685:	
  9104  0CEF  0872               	movf	strlen@s,w
  9105  0CF0  0086               	movwf	6
  9106  0CF1  0873               	movf	strlen@s+1,w
  9107  0CF2  0087               	movwf	7
  9108  0CF3  0801               	movf	1,w
  9109  0CF4  1903               	btfsc	3,2
  9110  0CF5  2CFB               	goto	l2687
  9111  0CF6  3001               	movlw	1
  9112  0CF7  07F2               	addwf	strlen@s,f
  9113  0CF8  3000               	movlw	0
  9114  0CF9  3DF3               	addwfc	strlen@s+1,f
  9115  0CFA  2CEF               	goto	l2685
  9116  0CFB                     l2687:	
  9117  0CFB  0874               	movf	strlen@a,w
  9118  0CFC  0272               	subwf	strlen@s,w
  9119  0CFD  00F2               	movwf	?_strlen
  9120  0CFE  0875               	movf	strlen@a+1,w
  9121  0CFF  3B73               	subwfb	strlen@s+1,w
  9122  0D00  00F3               	movwf	?_strlen+1
  9123  0D01  0008               	return
  9124  0D02                     __end_of_strlen:	
  9125                           
  9126                           	psect	intentry
  9127  0004                     __pintentry:	
  9128 ;; *************** function _INTERRUPT_InterruptManager *****************
  9129 ;; Defined at:
  9130 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  9131 ;; Parameters:    Size  Location     Type
  9132 ;;		None
  9133 ;; Auto vars:     Size  Location     Type
  9134 ;;		None
  9135 ;; Return value:  Size  Location     Type
  9136 ;;                  1    wreg      void 
  9137 ;; Registers used:
  9138 ;;		wreg, status,2, status,0, pclath, cstack
  9139 ;; Tracked objects:
  9140 ;;		On entry : 0/0
  9141 ;;		On exit  : 0/0
  9142 ;;		Unchanged: 0/0
  9143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9147 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9148 ;;Total ram usage:        0 bytes
  9149 ;; Hardware stack levels used:    1
  9150 ;; Hardware stack levels required when called:    3
  9151 ;; This function calls:
  9152 ;;		_TMR1_ISR
  9153 ;; This function is called by:
  9154 ;;		Interrupt level 1
  9155 ;; This function uses a non-reentrant model
  9156 ;;
  9157                           
  9158  0004                     _INTERRUPT_InterruptManager:	
  9159                           
  9160                           ;incstack = 0
  9161  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  9162                           
  9163                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  9164  0005  3180               	pagesel	$
  9165                           
  9166                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.PEIE == 1)
  9167  0006  1F0B               	btfss	11,6	;volatile
  9168  0007  2810               	goto	i1l203
  9169                           
  9170                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
  9171  0008  0021               	movlb	1	; select bank1
  9172  0009  1C10               	btfss	16,0	;volatile
  9173  000A  2810               	goto	i1l203
  9174  000B  0020               	movlb	0	; select bank0
  9175  000C  1C10               	btfss	16,0	;volatile
  9176  000D  2810               	goto	i1l203
  9177                           
  9178                           ;mcc_generated_files/interrupt_manager.c: 58:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 59:             TMR1_ISR();
  9179  000E  3187  27F3         	fcall	_TMR1_ISR
  9180  0010                     i1l203:	
  9181                           ;mcc_generated_files/interrupt_manager.c: 60:         }
  9182                           
  9183  0010  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  9184  0011  0009               	retfie
  9185  0012                     __end_of_INTERRUPT_InterruptManager:	
  9186                           
  9187                           	psect	text39
  9188  07F3                     __ptext39:	
  9189 ;; *************** function _TMR1_ISR *****************
  9190 ;; Defined at:
  9191 ;;		line 157 in file "mcc_generated_files/tmr1.c"
  9192 ;; Parameters:    Size  Location     Type
  9193 ;;		None
  9194 ;; Auto vars:     Size  Location     Type
  9195 ;;		None
  9196 ;; Return value:  Size  Location     Type
  9197 ;;                  1    wreg      void 
  9198 ;; Registers used:
  9199 ;;		wreg, status,2, status,0, pclath, cstack
  9200 ;; Tracked objects:
  9201 ;;		On entry : 0/0
  9202 ;;		On exit  : 0/0
  9203 ;;		Unchanged: 0/0
  9204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9205 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9208 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9209 ;;Total ram usage:        0 bytes
  9210 ;; Hardware stack levels used:    1
  9211 ;; Hardware stack levels required when called:    2
  9212 ;; This function calls:
  9213 ;;		_TMR1_CallBack
  9214 ;;		_TMR1_WriteTimer
  9215 ;; This function is called by:
  9216 ;;		_INTERRUPT_InterruptManager
  9217 ;; This function uses a non-reentrant model
  9218 ;;
  9219                           
  9220                           
  9221                           ;psect for function _TMR1_ISR
  9222  07F3                     _TMR1_ISR:	
  9223                           
  9224                           ;mcc_generated_files/tmr1.c: 161:     PIR1bits.TMR1IF = 0;
  9225                           
  9226                           ;incstack = 0
  9227                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
  9228  07F3  0020               	movlb	0	; select bank0
  9229  07F4  1010               	bcf	16,0	;volatile
  9230                           
  9231                           ;mcc_generated_files/tmr1.c: 162:     TMR1_WriteTimer(timer1ReloadVal);
  9232  07F5  0021               	movlb	1	; select bank1
  9233  07F6  086C               	movf	(_timer1ReloadVal+1)^(0+128),w	;volatile
  9234  07F7  00F1               	movwf	TMR1_WriteTimer@timerVal+1
  9235  07F8  086B               	movf	_timer1ReloadVal^(0+128),w	;volatile
  9236  07F9  00F0               	movwf	TMR1_WriteTimer@timerVal
  9237  07FA  318C  24B5  3187   	fcall	_TMR1_WriteTimer
  9238                           
  9239                           ;mcc_generated_files/tmr1.c: 166:     TMR1_CallBack();
  9240  07FD  318C  2488         	fcall	_TMR1_CallBack
  9241  07FF  0008               	return
  9242  0800                     __end_of_TMR1_ISR:	
  9243                           
  9244                           	psect	text40
  9245  0CB5                     __ptext40:	
  9246 ;; *************** function _TMR1_WriteTimer *****************
  9247 ;; Defined at:
  9248 ;;		line 120 in file "mcc_generated_files/tmr1.c"
  9249 ;; Parameters:    Size  Location     Type
  9250 ;;  timerVal        2    0[COMMON] unsigned short 
  9251 ;; Auto vars:     Size  Location     Type
  9252 ;;		None
  9253 ;; Return value:  Size  Location     Type
  9254 ;;                  1    wreg      void 
  9255 ;; Registers used:
  9256 ;;		wreg, status,2
  9257 ;; Tracked objects:
  9258 ;;		On entry : 0/0
  9259 ;;		On exit  : 0/0
  9260 ;;		Unchanged: 0/0
  9261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9262 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9265 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9266 ;;Total ram usage:        2 bytes
  9267 ;; Hardware stack levels used:    1
  9268 ;; This function calls:
  9269 ;;		Nothing
  9270 ;; This function is called by:
  9271 ;;		_TMR1_ISR
  9272 ;;		_TMR1_Reload
  9273 ;; This function uses a non-reentrant model
  9274 ;;
  9275                           
  9276                           
  9277                           ;psect for function _TMR1_WriteTimer
  9278  0CB5                     _TMR1_WriteTimer:	
  9279                           
  9280                           ;mcc_generated_files/tmr1.c: 120: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 121: {;mcc_generated_files/tmr1.c: 122:     if (T1CONbits.nT1SYNC == 1)
  9281                           
  9282                           ;incstack = 0
  9283                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
  9284  0CB5  0020               	movlb	0	; select bank0
  9285  0CB6  1D18               	btfss	24,2	;volatile
  9286  0CB7  2CBF               	goto	i1l2271
  9287                           
  9288                           ;mcc_generated_files/tmr1.c: 123:     {;mcc_generated_files/tmr1.c: 125:         T1CONbi
      +                          ts.TMR1ON = 0;
  9289  0CB8  1018               	bcf	24,0	;volatile
  9290                           
  9291                           ;mcc_generated_files/tmr1.c: 128:         TMR1H = (timerVal >> 8);
  9292  0CB9  0871               	movf	TMR1_WriteTimer@timerVal+1,w
  9293  0CBA  0097               	movwf	23	;volatile
  9294                           
  9295                           ;mcc_generated_files/tmr1.c: 129:         TMR1L = timerVal;
  9296  0CBB  0870               	movf	TMR1_WriteTimer@timerVal,w
  9297  0CBC  0096               	movwf	22	;volatile
  9298                           
  9299                           ;mcc_generated_files/tmr1.c: 132:         T1CONbits.TMR1ON =1;
  9300  0CBD  1418               	bsf	24,0	;volatile
  9301                           
  9302                           ;mcc_generated_files/tmr1.c: 133:     }
  9303  0CBE  0008               	return
  9304  0CBF                     i1l2271:	
  9305                           
  9306                           ;mcc_generated_files/tmr1.c: 135:     {;mcc_generated_files/tmr1.c: 137:         TMR1H =
      +                           (timerVal >> 8);
  9307  0CBF  0871               	movf	TMR1_WriteTimer@timerVal+1,w
  9308  0CC0  0097               	movwf	23	;volatile
  9309                           
  9310                           ;mcc_generated_files/tmr1.c: 138:         TMR1L = timerVal;
  9311  0CC1  0870               	movf	TMR1_WriteTimer@timerVal,w
  9312  0CC2  0096               	movwf	22	;volatile
  9313  0CC3  0008               	return
  9314  0CC4                     __end_of_TMR1_WriteTimer:	
  9315                           
  9316                           	psect	text41
  9317  0C88                     __ptext41:	
  9318 ;; *************** function _TMR1_CallBack *****************
  9319 ;; Defined at:
  9320 ;;		line 169 in file "mcc_generated_files/tmr1.c"
  9321 ;; Parameters:    Size  Location     Type
  9322 ;;		None
  9323 ;; Auto vars:     Size  Location     Type
  9324 ;;		None
  9325 ;; Return value:  Size  Location     Type
  9326 ;;                  1    wreg      void 
  9327 ;; Registers used:
  9328 ;;		wreg, status,2, status,0, pclath, cstack
  9329 ;; Tracked objects:
  9330 ;;		On entry : 0/0
  9331 ;;		On exit  : 0/0
  9332 ;;		Unchanged: 0/0
  9333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9337 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9338 ;;Total ram usage:        0 bytes
  9339 ;; Hardware stack levels used:    1
  9340 ;; Hardware stack levels required when called:    1
  9341 ;; This function calls:
  9342 ;;		Absolute function
  9343 ;;		_TMR1_DefaultInterruptHandler
  9344 ;; This function is called by:
  9345 ;;		_TMR1_ISR
  9346 ;; This function uses a non-reentrant model
  9347 ;;
  9348                           
  9349                           
  9350                           ;psect for function _TMR1_CallBack
  9351  0C88                     _TMR1_CallBack:	
  9352                           
  9353                           ;mcc_generated_files/tmr1.c: 172:     if(TMR1_InterruptHandler)
  9354                           
  9355                           ;incstack = 0
  9356                           ; Regs used in _TMR1_CallBack: [wreg+status,2+status,0+pclath+cstack]
  9357  0C88  0021               	movlb	1	; select bank1
  9358  0C89  0869               	movf	_TMR1_InterruptHandler^(0+128),w
  9359  0C8A  046A               	iorwf	(_TMR1_InterruptHandler+1)^(0+128),w
  9360  0C8B  1903               	btfsc	3,2
  9361  0C8C  0008               	return
  9362                           
  9363                           ;mcc_generated_files/tmr1.c: 173:     {;mcc_generated_files/tmr1.c: 174:         TMR1_In
      +                          terruptHandler();
  9364  0C8D  086A               	movf	(_TMR1_InterruptHandler+1)^(0+128),w
  9365  0C8E  008A               	movwf	10
  9366  0C8F  0869               	movf	_TMR1_InterruptHandler^(0+128),w
  9367  0C90  000A               	callw
  9368  0C91  318C               	pagesel	$
  9369  0C92  0008               	return
  9370  0C93                     __end_of_TMR1_CallBack:	
  9371                           
  9372                           	psect	text42
  9373  0003                     __ptext42:	
  9374 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  9375 ;; Defined at:
  9376 ;;		line 182 in file "mcc_generated_files/tmr1.c"
  9377 ;; Parameters:    Size  Location     Type
  9378 ;;		None
  9379 ;; Auto vars:     Size  Location     Type
  9380 ;;		None
  9381 ;; Return value:  Size  Location     Type
  9382 ;;                  1    wreg      void 
  9383 ;; Registers used:
  9384 ;;		None
  9385 ;; Tracked objects:
  9386 ;;		On entry : 0/0
  9387 ;;		On exit  : 0/0
  9388 ;;		Unchanged: 0/0
  9389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9393 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9394 ;;Total ram usage:        0 bytes
  9395 ;; Hardware stack levels used:    1
  9396 ;; This function calls:
  9397 ;;		Nothing
  9398 ;; This function is called by:
  9399 ;;		_TMR1_Initialize
  9400 ;;		_TMR1_CallBack
  9401 ;; This function uses a non-reentrant model
  9402 ;;
  9403                           
  9404                           
  9405                           ;psect for function _TMR1_DefaultInterruptHandler
  9406  0003                     _TMR1_DefaultInterruptHandler:	
  9407                           
  9408                           ;incstack = 0
  9409                           ; Regs used in _TMR1_DefaultInterruptHandler: []
  9410  0003  0008               	return
  9411  0004                     __end_of_TMR1_DefaultInterruptHandler:	
  9412  007E                     btemp	set	126	;btemp
  9413  007E                     int$flags	set	126
  9414  007E                     wtemp0	set	126


Data Sizes:
    Strings     192
    Constant    6
    Data        51
    BSS         125
    Persistent  36
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     80      80
    BANK1            80     29      77
    BANK2            80     73      73
    BANK3            80     70      80
    BANK4            80      0      76
    BANK5            80      0      44
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 73
		 -> ?_printf(BANK1[2]), ?_sprintf(BANK1[2]), stoa@nuls(BANK0[7]), dbuf(BANK4[32]), 
		 -> main@message_end(BANK2[73]), main@message_start(BANK3[70]), NULL(NULL[0]), gps_vertical_velocity(BANK1[8]), 
		 -> gps_course_over_ground(BANK1[8]), gps_speed_over_ground(BANK3[8]), gps_altitude(BANK4[12]), gps_longitude(BANK4[16]), 
		 -> gps_latitude(BANK4[16]), gps_time(BANK1[10]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 73
		 -> ?_printf(BANK1[2]), ?_sprintf(BANK1[2]), stoa@nuls(BANK0[7]), dbuf(BANK4[32]), 
		 -> main@message_end(BANK2[73]), main@message_start(BANK3[70]), NULL(NULL[0]), gps_vertical_velocity(BANK1[8]), 
		 -> gps_course_over_ground(BANK1[8]), gps_speed_over_ground(BANK3[8]), gps_altitude(BANK4[12]), gps_longitude(BANK4[16]), 
		 -> gps_latitude(BANK4[16]), gps_time(BANK1[10]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 26
		 -> STR_6(CODE[26]), STR_5(CODE[26]), STR_4(CODE[26]), STR_3(CODE[26]), 
		 -> STR_2(CODE[26]), STR_1(CODE[26]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK1[2]), ?_sprintf(BANK1[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 23
		 -> STR_8(CODE[13]), STR_7(CODE[23]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 73
		 -> main@message_end(BANK2[73]), main@message_start(BANK3[70]), NULL(NULL[0]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK1[2]), ?_sprintf(BANK1[2]), 

    f.buffer	PTR unsigned char  size(1) Largest target is 73
		 -> main@message_end(BANK2[73]), main@message_start(BANK3[70]), NULL(NULL[0]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK4[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), NULL(NULL[0]), 

    S1018_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 73
		 -> main@message_end(BANK2[73]), main@message_start(BANK3[70]), NULL(NULL[0]), 

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 73
		 -> main@message_end(BANK2[73]), main@message_start(BANK3[70]), NULL(NULL[0]), 

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK1[1]), sprintf@ap(BANK1[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 26
		 -> STR_8(CODE[13]), STR_7(CODE[23]), STR_6(CODE[26]), STR_5(CODE[26]), 
		 -> STR_4(CODE[26]), STR_3(CODE[26]), STR_2(CODE[26]), STR_1(CODE[26]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 26
		 -> STR_8(CODE[13]), STR_7(CODE[23]), STR_6(CODE[26]), STR_5(CODE[26]), 
		 -> STR_4(CODE[26]), STR_3(CODE[26]), STR_2(CODE[26]), STR_1(CODE[26]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 16
		 -> ?_printf(BANK1[2]), ?_sprintf(BANK1[2]), gps_vertical_velocity(BANK1[8]), gps_course_over_ground(BANK1[8]), 
		 -> gps_speed_over_ground(BANK3[8]), gps_altitude(BANK4[12]), gps_longitude(BANK4[16]), gps_latitude(BANK4[16]), 
		 -> gps_time(BANK1[10]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK1[1]), sprintf@ap(BANK1[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    stoa@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 16
		 -> ?_printf(BANK1[2]), ?_sprintf(BANK1[2]), gps_vertical_velocity(BANK1[8]), gps_course_over_ground(BANK1[8]), 
		 -> gps_speed_over_ground(BANK3[8]), gps_altitude(BANK4[12]), gps_longitude(BANK4[16]), gps_latitude(BANK4[16]), 
		 -> gps_time(BANK1[10]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 16
		 -> ?_printf(BANK1[2]), ?_sprintf(BANK1[2]), stoa@nuls(BANK0[7]), gps_vertical_velocity(BANK1[8]), 
		 -> gps_course_over_ground(BANK1[8]), gps_speed_over_ground(BANK3[8]), gps_altitude(BANK4[12]), gps_longitude(BANK4[16]), 
		 -> gps_latitude(BANK4[16]), gps_time(BANK1[10]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK4[32]), 

    main@messages	PTR unsigned char [2] size(1) Largest target is 73
		 -> main@message_end(BANK2[73]), main@message_start(BANK3[70]), NULL(NULL[0]), 

    main@F10219	PTR unsigned char [2] size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    GPS_HasAcknowledged@data	PTR unsigned char  size(1) Largest target is 44
		 -> setNavFlightMode(BANK5[44]), 

    GPS_SendUBX@data	PTR unsigned char  size(1) Largest target is 44
		 -> setNavFlightMode(BANK5[44]), 

    GetLengthUBX@data	PTR unsigned char  size(1) Largest target is 44
		 -> setNavFlightMode(BANK5[44]), 

    AppendCRC@data	PTR unsigned char  size(1) Largest target is 73
		 -> main@message_end(BANK2[73]), main@message_start(BANK3[70]), NULL(NULL[0]), 

    TransmitString@message	PTR unsigned char  size(1) Largest target is 73
		 -> main@message_end(BANK2[73]), main@message_start(BANK3[70]), NULL(NULL[0]), 

    crc16@data	PTR PTR unsigned char  size(1) Largest target is 4
		 -> main@messages(BANK1[2]), 

    crc16@string	PTR unsigned char  size(1) Largest target is 73
		 -> main@message_end(BANK2[73]), main@message_start(BANK3[70]), NULL(NULL[0]), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR1_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    _crc16->_crc_append_byte
    _TransmitString->_TransmitByte
    _TransmitByte->_TransmitBit
    _vfpfcnvrt->_stoa
    _stoa->_fputc
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART_Write
    _abs->___aomod
    _GPS_SendUBX->_GetLengthUBX
    _GPS_HasAcknowledged->_TMR1_ReadTimer
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _GetNavData->_TMR1_ReadTimer

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR1_ISR->_TMR1_WriteTimer

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _SetupGPS->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _stoa->_fputc
    _dtoa->___aodiv
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _GPS_HasAcknowledged->_TMR1_ReadTimer
    _GetNavData->_TMR1_ReadTimer
    _AppendCRC->_crc16

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->_vfprintf
    _SetupGPS->_printf
    _printf->_vfprintf

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               150   150      0   32542
                                             22 BANK1      7     7      0
                                              0 BANK2     73    73      0
                                              0 BANK3     70    70      0
                          _AppendCRC
                         _GetNavData
                  _SYSTEM_Initialize
                           _SetupGPS
                  _TIMER1_Initialize
                     _TransmitString
                              _crc16
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             20    10     10   13290
                                             79 BANK0      1     1      0
                                              3 BANK1     19     9     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _crc16                                               13    11      2    1258
                                              0 BANK0     13    11      2
                    _crc_append_byte
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _crc_append_byte                                      8     5      3     412
                                              2 COMMON     8     5      3
 ---------------------------------------------------------------------------------
 (1) _TransmitString                                       6     6      0     762
                                              8 COMMON     1     1      0
                                              0 BANK0      5     5      0
                       _TransmitByte
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _TransmitByte                                         4     4      0     161
                                              4 COMMON     4     4      0
                        _TransmitBit
 ---------------------------------------------------------------------------------
 (3) _TransmitBit                                          2     2      0      31
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _TIMER1_Initialize                                    0     0      0       0
                    _TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (2) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SetupGPS                                             2     2      0   14690
                                              8 BANK1      2     2      0
                _GPS_HasAcknowledged
                        _GPS_SendUBX
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                               6     4      2   13343
                                             79 BANK0      1     1      0
                                              3 BANK1      5     3      2
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     5      3   12716
                                             74 BANK0      5     2      3
                                              0 BANK1      3     3      0
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           40    38      2   12072
                                             56 BANK0     18    16      2
                               _dtoa
                              _fputc
                               _stoa
 ---------------------------------------------------------------------------------
 (4) _stoa                                                23    21      2    2785
                                              7 COMMON     3     3      0
                                              5 BANK0     20    18      2
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                30    22      8    6806
                                             26 BANK0     30    22      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    4594
                                             10 BANK0      9     6      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _fputs                                                8     7      1    2031
                                              7 COMMON     3     3      0
                                              5 BANK0      5     4      1
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3    1639
                                              4 COMMON     3     0      3
                                              0 BANK0      5     5      0
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0      62
                                              3 COMMON     1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                              5 COMMON     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             19     3     16     613
                                              2 COMMON     3     3      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             27    11     16     625
                                              2 COMMON     1     1      0
                                              0 BANK0     26    10     16
 ---------------------------------------------------------------------------------
 (2) _GPS_SendUBX                                          6     6      0     329
                                              6 COMMON     1     1      0
                                              0 BANK0      5     5      0
                       _EUSART_Write
                       _GetLengthUBX
 ---------------------------------------------------------------------------------
 (3) _GetLengthUBX                                         4     1      3      98
                                              2 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (7) _EUSART_Write                                         1     1      0      31
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _GPS_HasAcknowledged                                 22    22      0    1018
                                              4 BANK0     22    22      0
                        _EUSART_Read
                 _EUSART_is_rx_ready
                     _TMR1_ReadTimer
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     121
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     121
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             2     0      2     121
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GetNavData                                          21    21      0    1059
                                              4 BANK0     21    21      0
                        _EUSART_Read
                 _EUSART_is_rx_ready
                     _TMR1_ReadTimer
 ---------------------------------------------------------------------------------
 (3) _TMR1_ReadTimer                                      11     9      2     102
                                              2 COMMON     7     5      2
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (3) _EUSART_is_rx_ready                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EUSART_Read                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _AppendCRC                                            7     5      2     864
                                             13 BANK0      7     5      2
                              _crc16 (ARG)
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _strlen                                               4     2      2     355
                                              2 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INTERRUPT_InterruptManager                          0     0      0     240
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (12) _TMR1_ISR                                            0     0      0     240
                      _TMR1_CallBack
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (13) _TMR1_WriteTimer                                     2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (13) _TMR1_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AppendCRC
     _crc16 (ARG)
       _crc_append_byte
       _strlen
     _strlen (ARG)
   _GetNavData
     _EUSART_Read
     _EUSART_is_rx_ready
     _TMR1_ReadTimer
   _SYSTEM_Initialize
     _EUSART_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
   _SetupGPS
     _GPS_HasAcknowledged
       _EUSART_Read
       _EUSART_is_rx_ready
       _TMR1_ReadTimer
     _GPS_SendUBX
       _EUSART_Write
       _GetLengthUBX
     _printf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART_Write
               _strlen
           _fputc
             _putch
               _EUSART_Write
           _stoa
             _fputc
               _putch
                 _EUSART_Write
             _strlen
   _TIMER1_Initialize
     _TMR1_StartTimer
   _TransmitString
     _TransmitByte
       _TransmitBit
     _strlen
   _crc16
     _crc_append_byte
     _strlen
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _EUSART_Write
             _fputs
               _fputc
                 _putch
                   _EUSART_Write
             _strlen
         _fputc
           _putch
             _EUSART_Write
         _stoa
           _fputc
             _putch
               _EUSART_Write
           _strlen

 _INTERRUPT_InterruptManager (ROOT)
   _TMR1_ISR
     _TMR1_CallBack
       Absolute function(Fake) *
       _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     1D      4D       7       96.3%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50     49      49       9       91.3%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50     46      50      11      100.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      4C      13       95.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0      2C      15       55.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     1BA      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     1BA      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sat Jun 15 13:43:26 2019

                             __CFG_CP$OFF 0000                           GPS_SendUBX@data 0022  
                             __CFG_LVP$ON 0000                                       l112 0C77  
                                     l105 0C7E                                       l500 00B1  
                                     l252 0EBA                                       l501 00C3  
                                     l504 0156                                       l256 0769  
                                     l249 0EA6                                       l269 0D20  
                                     l382 02B5                                       l527 05CD  
                                     l536 0626                                       l490 0F94  
                                     l660 049C                                       l487 0F74  
                                     l495 008F                                       l496 0096  
                                     l673 0578                                       _GIE 005F  
                         _timer1ReloadVal 00EB                                       _abs 0D02  
                                     _pad 0F5E                              __CFG_BORV$LO 0000  
                                     wreg 0009                              __CFG_IESO$ON 0000  
                            ?_EUSART_Read 0070                              __CFG_ZCD$OFF 0000  
                                    ?_abs 0075                                      l3121 0696  
                                    l3113 0680                                      l3131 06BC  
                                    l3123 0697                                      l3301 0282  
                                    l3213 0FAE                                      l3135 06BE  
                                    l3215 0FD0                                      l3129 069E  
                                    l3057 0EB5                                      l3083 0DC6  
                                    l3067 0E42                                      l3171 0784  
                                    l3309 0287                                      l3413 01FA  
                                    l3253 01DD                                      l3261 0202  
                                    l3173 07B6                                      l3415 025C  
                                    l3255 01F0                                      l2703 0F6A  
                                    l3175 07BB                                      l3281 022B  
                                    l3273 0216                                      l3265 0206  
                                    l3249 01D6                                      l2713 0F76  
                                    l3353 06EE                                      l3195 0F31  
                                    l3291 024E                                      l3283 0235  
                                    l3275 0220                                      l3267 020B  
                                    l3259 01F2                                      l2731 03E4  
                                    l2707 0F72                                      l2811 00BF  
                                    l3187 0E7A                                      l3371 0748  
                                    l3285 023C                                      l3277 0225  
                                    l3269 0210                                      l2717 0F9F  
                                    l2805 00A9                                      l3287 0241  
                                    l3295 0257                                      l2735 040B  
                                    l2671 0ED2                                      l2815 00ED  
                                    l3289 0249                                      l3297 027C  
                                    l2737 0410                                      l2825 00CA  
                                    l2833 0162                                      l2921 0333  
                                    l2913 02F9                                      l3299 01A4  
                                    l2747 0427                                      l2675 0EF6  
                                    l2843 0173                                      l2931 0363  
                                    l2685 0CEF                                      l2757 046F  
                                    l2749 0436                                      l2781 050C  
                                    l2773 04FF                                      l2837 0169  
                                    l2941 038A                                      ?_pad 002A  
                                    l2687 0CFB                                      l2759 047B  
                                    l2783 051B                                      l2847 0180  
                                    l2769 04D8                                      l2697 0D6D  
                                    l2873 05DD                                      l2937 0384  
                                    l2963 0C86                                      l2787 054B  
                                    l2891 0629                                      l2859 05A6  
                                    l2947 0395                                      l2789 0557  
                                    l2877 05EE                                      l2895 063A  
                                    l2887 05FD                                      l2879 05FA  
                                    l2975 0D22                                      l2897 0647  
                                    l2987 07CD                                      l2989 07EB  
                                    STR_1 104E                                      STR_2 1000  
                                    STR_3 1082                                      STR_4 1034  
                                    STR_5 1068                                      STR_6 101A  
                                    STR_7 109C                                      STR_8 10B3  
                                    u2210 0417                                      u3005 075E  
                                    _LATA 010C                                      _LATB 010D  
                                    _LATC 010E                                      u2145 0F80  
                                    u3017 074C                                      u3027 0D25  
                                    u2245 045C                                      u2165 0D0B  
                                    u3037 0D2C                                      u2095 0EF4  
                                    u3047 0FC8                                      u3057 028D  
                                    u2345 0539                                      u3067 029C  
                                    u2435 00A1                                      u2380 0065  
                                    u2540 0596                                      u2605 0607  
                                    u2390 0066                                      u2465 0160  
                                    u2625 0645                                      u2485 00DE  
                                    u2495 00EA                                      u2575 05C6  
                                    u2735 0EB6                                      u2920 01EA  
                                    u2760 0E4D                                      u2930 01EB  
                                    u2770 0E4E                                      u2754 0E47  
                                    u2595 05F8                                      u2755 0E46  
                                    _PEIE 005E                                      u2925 01E6  
                                    u2855 0794                                      u2785 0E5E  
                                    u2865 0773                                      u2795 0DD0  
                                    u2875 0E84                                      u2885 0F2A  
                                    u2995 02B3                                      _WPUA 020C  
                                    _WPUB 020D                                      _WPUC 020E  
                            __CFG_WRT$OFF 0000                             __CFG_FCMEN$ON 0000  
                                    abs@a 0075                                      _dbuf 0220  
                       GetNavData@success 0035                                      _main 06D8  
                                    _dtoa 0049                      __end_of_GetLengthUBX 0CD6  
                                    _prec 00A8                              TransmitBit@b 0073  
                                    _nout 00A4                                      pad@i 002E  
                                    pad@p 002B                                      fsr0h 0005  
                                    fsr1h 0007                                      indf0 0000  
                                    fsr0l 0004                                      indf1 0001  
                                    fsr1l 0006                                      pad@w 0030  
                                    _stoa 058A                                      btemp 007E  
                           __CFG_BOREN$ON 0000                         GPS_SendUBX@length 0020  
            GPS_HasAcknowledged@startTime 0028                                      start 0012  
              ??_TMR1_SetInterruptHandler 0074                             __CFG_MCLRE$ON 0000  
                              _GetNavData 0192                                     ??_abs 0077  
                                   ??_pad 002D                             ?_EUSART_Write 0070  
          __size_of_OSCILLATOR_Initialize 0007             __end_of_OSCILLATOR_Initialize 0C6F  
                         __end_of___aodiv 04AE                                     ?_main 0070  
                                   ?_dtoa 003A                GPS_HasAcknowledged@ackByte 002C  
                         __end_of___aomod 058A                             __CFG_WDTE$OFF 0000  
                         _TMR1_StartTimer 0C49                                     ?_stoa 0025  
                                   _T1CON 0018                                     i1l203 0010  
                            vfpfcnvrt@fmt 0058                                     _TMR1H 0017  
                                   _TMR1L 0016                                     _TRISA 008C  
                                   _TRISB 008D                                     _TRISC 008E  
                                   _RXPPS 0E24                            _GetNavData$610 002E  
                          _GetNavData$609 002C                              main@messages 00E0  
                        __end_of_TMR1_ISR 0800                                     _crc16 0761  
                                   _flags 007A                                     _fputc 0EC9  
                                   _fputs 0D69                              ?_GPS_SendUBX 0070  
                                   pad@fp 0032                                     _width 00A6  
                                   _putch 0C51                                     main@i 00DE  
                                   dtoa@d 003A                                     dtoa@i 0056  
                                   dtoa@n 004E                                     dtoa@p 0048  
                                   dtoa@s 004C                                     dtoa@w 004A  
                 __end_of_TMR1_Initialize 0D4C                         __end_of_BAUD_RATE 10C4  
                                   pclath 000A                       GetNavData@dataIndex 0036  
                 GPS_HasAcknowledged@data 0037                             TransmitByte@i 0076  
                                   stoa@i 002E                                     stoa@l 0037  
                                   stoa@p 0035                                     stoa@s 0025  
                                   stoa@w 0030                                     status 0003  
                                   wtemp0 007E                           __end_of_sprintf 0E0F  
                __end_of_MESSAGE_INTERVAL 10C6                           _TMR1_WriteTimer 0CB5  
                         _crc_append_byte 0E98                __size_of_TIMER1_Initialize 000B  
                         __initialization 0014                              __end_of_main 0761  
                            __end_of_dtoa 0192                      GPS_HasAcknowledged@i 0039  
                            __end_of_stoa 064D                            ??_EUSART_Write 0072  
                          __CFG_LPBOR$OFF 0000               ?_INTERRUPT_InterruptManager 0070  
                                  ??_main 00DB                                    ??_dtoa 0042  
                                  ??_stoa 0077                        __size_of_AppendCRC 004D  
                          __CFG_PLLEN$OFF 0000                         main@message_start 01A0  
                        __end_of_SetupGPS 1000                                    ?_crc16 0020  
                                  ?_fputc 0074                                    ?_fputs 0025  
                                  _ANSELA 018C                                    ?_putch 0070  
                                  _ANSELB 018D                                    _ANSELC 018E  
              __end_of_EUSART_is_rx_ready 0C51                                    _BORCON 0116  
                                  _T1GCON 0019                                    _RC1REG 0199  
                                  _RC1STA 019D                   TMR1_WriteTimer@timerVal 0070  
                                  _RB7PPS 0E9F                                    _ODCONA 028C  
                                  _ODCONB 028D                                    _ODCONC 028E  
                                  i1l2271 0CBF                                    _OSCCON 0099  
                                  _TMR1IE 0480                                    u218lld 03E1  
                                  _TMR1IF 0080                                    _SPBRGH 019C  
                                  _TMR1ON 00C0                                    _SPBRGL 019B  
                                  u229lld 04D6                                    _TX1REG 019A  
                                  _TX1STA 019E                            __CFG_PWRTE$OFF 0000  
    __end_of_TMR1_DefaultInterruptHandler 0004     __size_of_TMR1_DefaultInterruptHandler 0001  
            _TMR1_DefaultInterruptHandler 0003                              vfprintf@cfmt 00C6  
                             ?_GetNavData 0070                   __end_of_TMR1_StartTimer 0C4C  
                               ??___aodiv 0072                                 ??___aomod 0072  
                                  crc16@c 0025                                    crc16@i 0027  
                          __CFG_STVREN$ON 0000                       GetNavData@startTime 0028  
                                  _printf 0CD6                                    pad@buf 002A  
                                  main@id 00DC                                    dtoa@fp 0045  
                                  _strlen 0CEB                                    fputc@c 0074  
                                  fputs@c 0026                                    fputs@i 0027  
                                  fputs@s 0029                          ??_TransmitString 0078  
                                  stoa@cp 0033                                    stoa@fp 0032  
                        __end_of_vfprintf 07F3  TMR1_SetInterruptHandler@InterruptHandler 0072  
                   __size_of_GetLengthUBX 0012                        __end_of_DELAY_MULT 10C2  
                               ??_sprintf 006F                   __end_of_TMR1_WriteTimer 0CC4  
                   __end_of_TMR1_CallBack 0C93                          ?_TMR1_Initialize 0070  
                 __end_of_crc_append_byte 0EC9                      __size_of_EUSART_Read 000A  
                       _SYSTEM_Initialize 0CA9                   __end_of__initialization 0045  
                      ?_SYSTEM_Initialize 0070                         __end_of_AppendCRC 0F5E  
                          __pcstackCOMMON 0070                              __pidataBANK1 0C6F  
                            __pidataBANK5 0E0F                             __end_of_crc16 07C1  
                     ??_SYSTEM_Initialize 0074                                 ?_TMR1_ISR 0070  
           ?_TMR1_DefaultInterruptHandler 0070                             __end_of_fputc 0F11  
                           __end_of_fputs 0D8F                             ??_TransmitBit 0072  
                           __end_of_putch 0C56                              _GetLengthUBX 0CC4  
                          _OPTION_REGbits 0095                   __size_of_TMR1_ReadTimer 001D  
                           _gps_longitude 0240                                   ??_crc16 0022  
                                 ??_fputc 0020               __end_of_GPS_HasAcknowledged 06D8  
               __end_of_SYSTEM_Initialize 0CB5                       __size_of_GetNavData 0126  
                                 ??_fputs 0077                                   ??_putch 0073  
                              __pbssBANK1 00A0                                __pbssBANK3 01E6  
                              __pbssBANK4 0220                      __end_of_EUSART_Write 0C7E  
                    __size_of_GPS_SendUBX 002B                          _setNavFlightMode 02A0  
                              __pmaintext 06D8                                 ?_SetupGPS 0070  
                        ?_TMR1_StartTimer 0070                                ??_TMR1_ISR 0072  
                         __CFG_PPS1WAY$ON 0000                                __pintentry 0004  
                                 ?_printf 00C8                                   ?_strlen 0072  
                         __CFG_WDTCCS$SWC 0000                       __end_of_TransmitBit 0D31  
                      __size_of_vfpfcnvrt 0100                                   _OSCTUNE 0098  
                                 _SLRCONA 030C                                   _SLRCONB 030D  
                                 _SLRCONC 030E                          ?_TMR1_WriteTimer 0070  
                        ?_crc_append_byte 0072                                 _BAUD_RATE 10C2  
                              ??_SetupGPS 00CD                                   ___aodiv 03B8  
                                 ___aomod 04AE                          GetLengthUBX@data 0075  
                               ?_vfprintf 006A                  TMR1_ReadTimer@readValLow 0023  
                                 __ptext1 0DE4                                   __ptext2 0761  
                                 __ptext3 0E98                                   __ptext4 0E68  
                                 __ptext5 0E3B                                   __ptext6 0D19  
                                 __ptext7 0C9E                                   __ptext8 0C49  
                                 __ptext9 0FAE                           __size_of_printf 0015  
          ??_TMR1_DefaultInterruptHandler 0070                 TMR1_ReadTimer@readValHigh 0022  
                         __size_of_strlen 0017                                 _T1CONbits 0018  
                   _OSCILLATOR_Initialize 0C68                              __size_of_abs 0017  
                            __size_of_pad 0050         __size_of_TMR1_SetInterruptHandler 0006  
                ??_PIN_MANAGER_Initialize 0072                 ?_TMR1_SetInterruptHandler 0072  
              __size_of_SYSTEM_Initialize 000C                                   _sprintf 0DE4  
                                 clrloop0 0C5D                      end_of_initialization 0045  
                                 fputc@fp 0076                                   init_ram 0C62  
                                 fputs@fp 0025                                   initloop 0C63  
                       _EUSART_Initialize 0C93                       crc_append_byte@data 0074  
                      ?_EUSART_Initialize 0070                              ??_GetNavData 0024  
                       __end_of_vfpfcnvrt 03B8                        _EUSART_is_rx_ready 0C4C  
                              main@F10219 01E6                                ??_vfprintf 006D  
                             _TransmitBit 0D19                                   strlen@a 0074  
                                 strlen@s 0072                       ??_EUSART_Initialize 0072  
                     ?_EUSART_is_rx_ready 0070                           TransmitString@i 0022  
                           ?_TransmitByte 0070                          __CFG_FOSC$INTOSC 0000  
                          _TMR1_ReadTimer 0D4C                             crc16@segments 0020  
                   __size_of_EUSART_Write 0008                              GPS_SendUBX@i 0023  
                      __end_of_GetNavData 02B8                 __end_of_EUSART_Initialize 0C9E  
                    ??_EUSART_is_rx_ready 0072                            _gps_configured 00AA  
                   TransmitString@message 0024                                 _AppendCRC 0F11  
                             vfpfcnvrt@ap 0059                               vfpfcnvrt@cp 0067  
                             vfpfcnvrt@fp 0069                               vfpfcnvrt@ll 005F  
                           AppendCRC@data 0033                              _EUSART_Write 0C76  
                       __size_of_TMR1_ISR 000D                    ?_OSCILLATOR_Initialize 0070  
                  __end_of_TMR1_ReadTimer 0D69                            ??_TransmitByte 0074  
                          __end_of_printf 0CEB                            __end_of_strlen 0D02  
                     start_initialization 0014           __size_of_PIN_MANAGER_Initialize 002A  
                             __end_of_abs 0D19                               __end_of_pad 0FAE  
                           ??_EUSART_Read 0072                            _gps_nav_status 00A0  
                             putch@txData 0073                  __size_of_TMR1_Initialize 001B  
                             vfprintf@fmt 006A                                ?_AppendCRC 002D  
                             __pdataBANK1 00E2                               __pdataBANK5 02A0  
                       __size_of_SetupGPS 0052                    __size_of_TMR1_CallBack 000B  
                                ??_printf 006F                                  ??_strlen 0074  
                         ?_TMR1_ReadTimer 0072                              _gps_altitude 0260  
                             crc16@string 0026                               __pbssCOMMON 007A  
                               ___latbits 0002                             __pcstackBANK0 0020  
                           __pcstackBANK1 00C5                             __pcstackBANK2 0120  
                           __pcstackBANK3 01A0                          ___aodiv@dividend 0028  
                           ??_GPS_SendUBX 0076                              _gps_latitude 0250  
              __size_of_EUSART_Initialize 000B                                 crc16@data 0024  
                     __end_of_EUSART_Read 0C88                   __size_of_TransmitString 0030  
                               __pnvBANK1 00E9              __size_of_GPS_HasAcknowledged 008B  
                  _PIN_MANAGER_Initialize 0D8F          __end_of_TMR1_SetInterruptHandler 0C5C  
                                ?___aodiv 0020                                  ?___aomod 0020  
                        ___aodiv@quotient 0032                          crc_append_byte@i 0078  
            ??_INTERRUPT_InterruptManager 0072                         __size_of_vfprintf 0032  
                                _BAUD1CON 019F                  __size_of_TMR1_StartTimer 0003  
                          __size_of_crc16 0060                                  ?_sprintf 00C8  
                          __size_of_fputc 0048                            __size_of_fputs 0026  
                          __size_of_putch 0005                             _TMR1_CallBack 0C88  
                   _gps_vertical_velocity 00B5                                  _LATAbits 010C  
                                _LATCbits 010E                       __end_of_GPS_SendUBX 0DE4  
                               clear_ram0 0C5C                                  _PIE1bits 0090  
                    __end_of_TransmitByte 0E68                  __size_of_TMR1_WriteTimer 000F  
                      crc_append_byte@crc 0072       __size_of_INTERRUPT_InterruptManager 000E  
                                _PIR1bits 0010                     _gps_speed_over_ground 01E8  
                __size_of_crc_append_byte 0031                      __CFG_WDTCPS$WDTCPS1F 0000  
                             ??_AppendCRC 002F                                  _TMR1_ISR 07F3  
                            ?_TransmitBit 0070                                 _vfpfcnvrt 02B8  
                       ??_TMR1_Initialize 0074                            GetNavData@byte 0038  
                          GetNavData@skip 0030                      TransmitString@counti 0020  
                             _EUSART_Read 0C7E                              AppendCRC@crc 002D  
                            AppendCRC@len 0031                            ?_TMR1_CallBack 0070  
                         main@message_end 0120                   GetNavData@dataFieldType 0031  
                  _gps_course_over_ground 00BD                                _DELAY_MULT 10C0  
                              vfprintf@ap 006C                                vfprintf@fp 00C5  
                                _SetupGPS 0FAE                     TMR1_ReadTimer@readVal 0020  
                 ??_OSCILLATOR_Initialize 0072                          __size_of___aodiv 00F6  
                        __size_of___aomod 00DC                                ?_vfpfcnvrt 0058  
                         ___aodiv@divisor 0020                  _TMR1_SetInterruptHandler 0C56  
                         ___aodiv@counter 0030                             ?_GetLengthUBX 0072  
                   _TMR1_InterruptHandler 00E9                                sprintf@fmt 00C8  
                                crc16@crc 0029                                  crc16@str 002B  
                                _dtoa$708 0046                                  __ptext10 0CD6  
                                __ptext11 07C1                                  __ptext20 04AE  
                                __ptext12 02B8                                  __ptext21 03B8  
                                __ptext13 058A                                _T1GCONbits 0019  
                                __ptext30 0C68                                  __ptext22 0DB9  
                                __ptext14 0049                                  __ptext31 0C93  
                                __ptext23 0CC4                                  __ptext15 0F5E  
                                __ptext40 0CB5                                  __ptext32 0192  
                                __ptext24 0C76                                  __ptext16 0D69  
                                __ptext41 0C88                                  __ptext33 0D4C  
                                __ptext25 064D                                  __ptext17 0EC9  
                                __ptext42 0003                                  __ptext34 0C4C  
                                __ptext26 0CA9                                  __ptext18 0C51  
                                __ptext35 0C7E                                  __ptext27 0D31  
                                __ptext19 0D02                                  __ptext36 0F11  
                                __ptext28 0C56                                  __ptext37 0CEB  
                                __ptext29 0D8F                                  __ptext39 07F3  
                             _GPS_SendUBX 0DB9                         ??_TMR1_StartTimer 0072  
                             GetNavData@i 0033                          __size_of_sprintf 002B  
             __size_of_EUSART_is_rx_ready 0005                            _TransmitString 0E68  
                           __size_of_main 0089                             __size_of_dtoa 0149  
                                _gps_time 00AB                             __size_of_stoa 00C3  
                    __CFG_WDTCWS$WDTCWSSW 0000                                _RC1STAbits 019D  
                               stoa@F1139 00E2                          ??_TMR1_ReadTimer 0074  
                                int$flags 007E                                  _vfprintf 07C1  
      __end_of_INTERRUPT_InterruptManager 0012                _INTERRUPT_InterruptManager 0004  
                               printf@fmt 00C8                         ??_TMR1_WriteTimer 0072  
                          ??_GetLengthUBX 0075                         ??_crc_append_byte 0075  
                        _MESSAGE_INTERVAL 10C4                          ___aomod@dividend 0028  
                     _GPS_HasAcknowledged 064D                                _INTCONbits 000B  
                          __pstringtext10 109C                            __pstringtext11 10B3  
                          __pstringtext12 0000                           ??_TMR1_CallBack 0070  
                  __end_of_TransmitString 0E98                     __size_of_TransmitByte 002D  
                                intlevel1 0000                                 sprintf@ap 00D4  
                        TransmitByte@byte 0075                   ?_PIN_MANAGER_Initialize 0070  
                       __CFG_CLKOUTEN$OFF 0000                      ?_GPS_HasAcknowledged 0070  
            GPS_HasAcknowledged@ackByteID 0038              GPS_HasAcknowledged@ackPacket 002D  
                                printf@ap 00CC                         _TIMER1_Initialize 0C9E  
                         ___aomod@divisor 0020                               ??_vfpfcnvrt 005A  
                                stoa@nuls 0027                           ___aomod@counter 0073  
                      ?_TIMER1_Initialize 0070                             __pstringtext1 10C0  
                           __pstringtext2 10C2                             __pstringtext3 10C4  
                           __pstringtext4 1000                             __pstringtext5 101A  
                           __pstringtext6 1034                             __pstringtext7 104E  
                           __pstringtext8 1068                             __pstringtext9 1082  
                    __size_of_TransmitBit 0018                                  sprintf@f 00D6  
                                sprintf@s 00D5                              _TransmitByte 0E3B  
                     ??_TIMER1_Initialize 0072                                _TX1STAbits 019E  
                      EUSART_Write@txData 0072                              ___aodiv@sign 0031  
                         ?_TransmitString 0078            __end_of_PIN_MANAGER_Initialize 0DB9  
                   ??_GPS_HasAcknowledged 0024                              ___aomod@sign 0074  
                         _TMR1_Initialize 0D31                 __end_of_TIMER1_Initialize 0CA9  
