

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Thu Sep 05 15:26:13 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og9 
     1                           	processor	16F1619
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK2,global,class=CODE,delta=2
     5                           	psect	idataBANK5,global,class=CODE,delta=2
     6                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     7                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1
     8                           	psect	stringtext1,global,class=STRCODE,delta=2
     9                           	psect	stringtext2,global,class=STRCODE,delta=2
    10                           	psect	stringtext3,global,class=STRCODE,delta=2
    11                           	psect	stringtext4,global,class=STRCODE,delta=2
    12                           	psect	stringtext5,global,class=STRCODE,delta=2
    13                           	psect	stringtext6,global,class=STRCODE,delta=2
    14                           	psect	stringtext7,global,class=STRCODE,delta=2
    15                           	psect	stringtext8,global,class=STRCODE,delta=2
    16                           	psect	stringtext9,global,class=STRCODE,delta=2
    17                           	psect	stringtext10,global,class=STRCODE,delta=2
    18                           	psect	stringtext11,global,class=STRCODE,delta=2
    19                           	psect	stringtext12,global,class=STRCODE,delta=2
    20                           	psect	cinit,global,class=CODE,merge=1,delta=2
    21                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    22                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    23                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    24                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    25                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    26                           	psect	dataBANK5,global,class=BANK5,space=1,delta=1
    27                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1
    28                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1
    29                           	psect	inittext,global,class=CODE,delta=2
    30                           	psect	clrtext,global,class=CODE,delta=2
    31                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    32                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    33                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    34                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    35                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    36                           	psect	text1,local,class=CODE,merge=1,delta=2
    37                           	psect	text2,local,class=CODE,merge=1,delta=2
    38                           	psect	text3,local,class=CODE,merge=1,delta=2
    39                           	psect	text4,local,class=CODE,merge=1,delta=2
    40                           	psect	text5,local,class=CODE,merge=1,delta=2
    41                           	psect	text6,local,class=CODE,merge=1,delta=2
    42                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    43                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    44                           	psect	text9,local,class=CODE,merge=1,delta=2
    45                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    46                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    47                           	psect	text12,local,class=CODE,merge=1,delta=2
    48                           	psect	text13,local,class=CODE,merge=1,delta=2
    49                           	psect	text14,local,class=CODE,merge=1,delta=2
    50                           	psect	text15,local,class=CODE,merge=1,delta=2
    51                           	psect	text16,local,class=CODE,merge=1,delta=2
    52                           	psect	text17,local,class=CODE,merge=1,delta=2
    53                           	psect	text18,local,class=CODE,merge=1,delta=2
    54                           	psect	text19,local,class=CODE,merge=1,delta=2
    55                           	psect	text20,local,class=CODE,merge=1,delta=2
    56                           	psect	text21,local,class=CODE,merge=1,delta=2
    57                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    58                           	psect	text23,local,class=CODE,merge=1,delta=2
    59                           	psect	text24,local,class=CODE,merge=1,delta=2,group=1
    60                           	psect	text25,local,class=CODE,merge=1,delta=2
    61                           	psect	text26,local,class=CODE,merge=1,delta=2
    62                           	psect	text27,local,class=CODE,merge=1,delta=2
    63                           	psect	text28,local,class=CODE,merge=1,delta=2
    64                           	psect	text29,local,class=CODE,merge=1,delta=2
    65                           	psect	text30,local,class=CODE,merge=1,delta=2,group=2
    66                           	psect	text31,local,class=CODE,merge=1,delta=2
    67                           	psect	text32,local,class=CODE,merge=1,delta=2
    68                           	psect	text33,local,class=CODE,merge=1,delta=2
    69                           	psect	text34,local,class=CODE,merge=1,delta=2
    70                           	psect	text35,local,class=CODE,merge=1,delta=2
    71                           	psect	text36,local,class=CODE,merge=1,delta=2
    72                           	psect	text37,local,class=CODE,merge=1,delta=2
    73                           	psect	text38,local,class=CODE,merge=1,delta=2
    74                           	psect	text39,local,class=CODE,merge=1,delta=2
    75                           	psect	text40,local,class=CODE,merge=1,delta=2
    76                           	psect	text41,local,class=CODE,merge=1,delta=2
    77                           	psect	text42,local,class=CODE,merge=1,delta=2
    78                           	psect	text43,local,class=CODE,merge=1,delta=2
    79                           	psect	text44,local,class=CODE,merge=1,delta=2
    80                           	psect	text45,local,class=CODE,merge=1,delta=2
    81                           	psect	text46,local,class=CODE,merge=1,delta=2
    82                           	psect	text47,local,class=CODE,merge=1,delta=2
    83                           	psect	text48,local,class=CODE,merge=1,delta=2
    84                           	psect	text49,local,class=CODE,merge=1,delta=2
    85                           	psect	text50,local,class=CODE,merge=1,delta=2
    86                           	psect	text51,local,class=CODE,merge=1,delta=2
    87                           	psect	text52,local,class=CODE,merge=1,delta=2
    88                           	psect	text53,local,class=CODE,merge=1,delta=2
    89                           	psect	text54,local,class=CODE,merge=1,delta=2
    90                           	psect	text55,local,class=CODE,merge=1,delta=2
    91                           	psect	text56,local,class=CODE,merge=1,delta=2
    92                           	psect	text57,local,class=CODE,merge=1,delta=2
    93                           	psect	text58,local,class=CODE,merge=1,delta=2
    94                           	psect	text59,local,class=CODE,merge=1,delta=2
    95                           	psect	text60,local,class=CODE,merge=1,delta=2
    96                           	psect	text61,local,class=CODE,merge=1,delta=2
    97                           	psect	text62,local,class=CODE,merge=1,delta=2
    98                           	psect	text63,local,class=CODE,merge=1,delta=2
    99                           	psect	text64,local,class=CODE,merge=1,delta=2
   100                           	psect	text65,local,class=CODE,merge=1,delta=2
   101                           	psect	intentry,global,class=CODE,delta=2
   102                           	psect	text67,local,class=CODE,merge=1,delta=2
   103                           	psect	text68,local,class=CODE,merge=1,delta=2
   104                           	psect	text69,local,class=CODE,merge=1,delta=2
   105                           	psect	text9_split_1,local,class=CODE,merge=1,delta=2
   106                           	dabs	1,0x7E,2
   107  0000                     
   108                           ; Version 2.05
   109                           ; Generated 20/12/2018 GMT
   110                           ; 
   111                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   112                           ; All rights reserved.
   113                           ; 
   114                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   115                           ; 
   116                           ; Redistribution and use in source and binary forms, with or without modification, are
   117                           ; permitted provided that the following conditions are met:
   118                           ; 
   119                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   120                           ;        conditions and the following disclaimer.
   121                           ; 
   122                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   123                           ;        of conditions and the following disclaimer in the documentation and/or other
   124                           ;        materials provided with the distribution.
   125                           ; 
   126                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   127                           ;        software without specific prior written permission.
   128                           ; 
   129                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   130                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   131                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   132                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   133                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   134                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   135                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   136                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   137                           ; 
   138                           ; 
   139                           ; Code-generator required, PIC16F1619 Definitions
   140                           ; 
   141                           ; SFR Addresses
   142  0000                     	;# 
   143  0001                     	;# 
   144  0002                     	;# 
   145  0003                     	;# 
   146  0004                     	;# 
   147  0005                     	;# 
   148  0006                     	;# 
   149  0007                     	;# 
   150  0008                     	;# 
   151  0009                     	;# 
   152  000A                     	;# 
   153  000B                     	;# 
   154  000C                     	;# 
   155  000D                     	;# 
   156  000E                     	;# 
   157  0010                     	;# 
   158  0011                     	;# 
   159  0012                     	;# 
   160  0013                     	;# 
   161  0014                     	;# 
   162  0015                     	;# 
   163  0016                     	;# 
   164  0016                     	;# 
   165  0017                     	;# 
   166  0018                     	;# 
   167  0019                     	;# 
   168  001A                     	;# 
   169  001A                     	;# 
   170  001B                     	;# 
   171  001B                     	;# 
   172  001C                     	;# 
   173  001D                     	;# 
   174  001E                     	;# 
   175  001F                     	;# 
   176  008C                     	;# 
   177  008D                     	;# 
   178  008E                     	;# 
   179  0090                     	;# 
   180  0091                     	;# 
   181  0092                     	;# 
   182  0093                     	;# 
   183  0094                     	;# 
   184  0095                     	;# 
   185  0096                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009A                     	;# 
   189  009B                     	;# 
   190  009B                     	;# 
   191  009C                     	;# 
   192  009D                     	;# 
   193  009E                     	;# 
   194  009F                     	;# 
   195  010C                     	;# 
   196  010D                     	;# 
   197  010E                     	;# 
   198  0111                     	;# 
   199  0112                     	;# 
   200  0113                     	;# 
   201  0114                     	;# 
   202  0115                     	;# 
   203  0116                     	;# 
   204  0117                     	;# 
   205  0118                     	;# 
   206  0119                     	;# 
   207  011C                     	;# 
   208  018C                     	;# 
   209  018D                     	;# 
   210  018E                     	;# 
   211  0191                     	;# 
   212  0191                     	;# 
   213  0192                     	;# 
   214  0193                     	;# 
   215  0193                     	;# 
   216  0194                     	;# 
   217  0195                     	;# 
   218  0196                     	;# 
   219  0197                     	;# 
   220  0199                     	;# 
   221  0199                     	;# 
   222  0199                     	;# 
   223  019A                     	;# 
   224  019A                     	;# 
   225  019A                     	;# 
   226  019B                     	;# 
   227  019B                     	;# 
   228  019B                     	;# 
   229  019B                     	;# 
   230  019B                     	;# 
   231  019C                     	;# 
   232  019C                     	;# 
   233  019C                     	;# 
   234  019D                     	;# 
   235  019D                     	;# 
   236  019D                     	;# 
   237  019E                     	;# 
   238  019E                     	;# 
   239  019E                     	;# 
   240  019F                     	;# 
   241  019F                     	;# 
   242  019F                     	;# 
   243  019F                     	;# 
   244  019F                     	;# 
   245  020C                     	;# 
   246  020D                     	;# 
   247  020E                     	;# 
   248  0211                     	;# 
   249  0211                     	;# 
   250  0212                     	;# 
   251  0212                     	;# 
   252  0213                     	;# 
   253  0213                     	;# 
   254  0214                     	;# 
   255  0214                     	;# 
   256  0215                     	;# 
   257  0215                     	;# 
   258  0215                     	;# 
   259  0215                     	;# 
   260  0216                     	;# 
   261  0216                     	;# 
   262  0217                     	;# 
   263  0217                     	;# 
   264  028C                     	;# 
   265  028D                     	;# 
   266  028E                     	;# 
   267  0291                     	;# 
   268  0291                     	;# 
   269  0292                     	;# 
   270  0293                     	;# 
   271  0294                     	;# 
   272  0298                     	;# 
   273  0298                     	;# 
   274  0299                     	;# 
   275  029A                     	;# 
   276  029B                     	;# 
   277  029E                     	;# 
   278  030C                     	;# 
   279  030D                     	;# 
   280  030E                     	;# 
   281  038C                     	;# 
   282  038D                     	;# 
   283  038E                     	;# 
   284  0391                     	;# 
   285  0392                     	;# 
   286  0393                     	;# 
   287  0394                     	;# 
   288  0395                     	;# 
   289  0396                     	;# 
   290  0397                     	;# 
   291  0398                     	;# 
   292  0399                     	;# 
   293  040E                     	;# 
   294  0413                     	;# 
   295  0413                     	;# 
   296  0414                     	;# 
   297  0414                     	;# 
   298  0415                     	;# 
   299  0416                     	;# 
   300  0417                     	;# 
   301  0418                     	;# 
   302  041A                     	;# 
   303  041A                     	;# 
   304  041B                     	;# 
   305  041B                     	;# 
   306  041C                     	;# 
   307  041D                     	;# 
   308  041E                     	;# 
   309  041F                     	;# 
   310  0493                     	;# 
   311  0494                     	;# 
   312  0495                     	;# 
   313  0496                     	;# 
   314  049A                     	;# 
   315  049B                     	;# 
   316  049C                     	;# 
   317  049D                     	;# 
   318  058C                     	;# 
   319  058C                     	;# 
   320  058D                     	;# 
   321  058E                     	;# 
   322  058E                     	;# 
   323  058F                     	;# 
   324  0590                     	;# 
   325  0590                     	;# 
   326  0591                     	;# 
   327  0592                     	;# 
   328  0592                     	;# 
   329  0593                     	;# 
   330  0594                     	;# 
   331  0594                     	;# 
   332  0595                     	;# 
   333  0596                     	;# 
   334  0596                     	;# 
   335  0597                     	;# 
   336  0598                     	;# 
   337  0599                     	;# 
   338  059A                     	;# 
   339  059B                     	;# 
   340  059B                     	;# 
   341  059C                     	;# 
   342  059D                     	;# 
   343  060C                     	;# 
   344  060C                     	;# 
   345  060D                     	;# 
   346  060E                     	;# 
   347  060F                     	;# 
   348  060F                     	;# 
   349  0610                     	;# 
   350  0611                     	;# 
   351  0612                     	;# 
   352  0613                     	;# 
   353  0614                     	;# 
   354  0617                     	;# 
   355  0617                     	;# 
   356  0618                     	;# 
   357  0619                     	;# 
   358  061A                     	;# 
   359  061A                     	;# 
   360  061B                     	;# 
   361  061C                     	;# 
   362  0691                     	;# 
   363  0692                     	;# 
   364  0693                     	;# 
   365  0694                     	;# 
   366  0695                     	;# 
   367  0696                     	;# 
   368  0697                     	;# 
   369  0699                     	;# 
   370  069A                     	;# 
   371  0711                     	;# 
   372  0712                     	;# 
   373  0713                     	;# 
   374  0714                     	;# 
   375  0715                     	;# 
   376  0718                     	;# 
   377  0718                     	;# 
   378  0719                     	;# 
   379  071A                     	;# 
   380  071A                     	;# 
   381  071B                     	;# 
   382  071C                     	;# 
   383  071D                     	;# 
   384  0791                     	;# 
   385  0791                     	;# 
   386  0792                     	;# 
   387  0793                     	;# 
   388  0793                     	;# 
   389  0794                     	;# 
   390  0795                     	;# 
   391  0795                     	;# 
   392  0796                     	;# 
   393  0797                     	;# 
   394  0797                     	;# 
   395  0798                     	;# 
   396  0799                     	;# 
   397  079A                     	;# 
   398  080C                     	;# 
   399  080C                     	;# 
   400  080D                     	;# 
   401  080E                     	;# 
   402  080E                     	;# 
   403  080F                     	;# 
   404  0810                     	;# 
   405  0810                     	;# 
   406  0811                     	;# 
   407  0812                     	;# 
   408  0812                     	;# 
   409  0813                     	;# 
   410  0814                     	;# 
   411  0815                     	;# 
   412  0816                     	;# 
   413  0817                     	;# 
   414  0818                     	;# 
   415  0819                     	;# 
   416  081A                     	;# 
   417  081A                     	;# 
   418  081B                     	;# 
   419  081C                     	;# 
   420  081C                     	;# 
   421  081D                     	;# 
   422  088C                     	;# 
   423  088D                     	;# 
   424  088E                     	;# 
   425  088F                     	;# 
   426  088F                     	;# 
   427  0890                     	;# 
   428  0891                     	;# 
   429  0892                     	;# 
   430  0893                     	;# 
   431  0893                     	;# 
   432  0894                     	;# 
   433  0895                     	;# 
   434  0896                     	;# 
   435  0897                     	;# 
   436  0897                     	;# 
   437  0898                     	;# 
   438  0899                     	;# 
   439  0D8C                     	;# 
   440  0D8C                     	;# 
   441  0D8D                     	;# 
   442  0D8E                     	;# 
   443  0D8F                     	;# 
   444  0D8F                     	;# 
   445  0D90                     	;# 
   446  0D91                     	;# 
   447  0D92                     	;# 
   448  0D92                     	;# 
   449  0D93                     	;# 
   450  0D94                     	;# 
   451  0D95                     	;# 
   452  0D95                     	;# 
   453  0D96                     	;# 
   454  0D97                     	;# 
   455  0D98                     	;# 
   456  0D99                     	;# 
   457  0D9A                     	;# 
   458  0D9B                     	;# 
   459  0D9C                     	;# 
   460  0D9D                     	;# 
   461  0D9E                     	;# 
   462  0D9E                     	;# 
   463  0D9F                     	;# 
   464  0DA0                     	;# 
   465  0DA1                     	;# 
   466  0DA1                     	;# 
   467  0DA2                     	;# 
   468  0DA3                     	;# 
   469  0DA4                     	;# 
   470  0DA4                     	;# 
   471  0DA5                     	;# 
   472  0DA6                     	;# 
   473  0DA7                     	;# 
   474  0DA7                     	;# 
   475  0DA8                     	;# 
   476  0DA9                     	;# 
   477  0DAA                     	;# 
   478  0DAB                     	;# 
   479  0DAC                     	;# 
   480  0DAD                     	;# 
   481  0DAE                     	;# 
   482  0DAF                     	;# 
   483  0E0F                     	;# 
   484  0E10                     	;# 
   485  0E11                     	;# 
   486  0E12                     	;# 
   487  0E13                     	;# 
   488  0E14                     	;# 
   489  0E15                     	;# 
   490  0E16                     	;# 
   491  0E17                     	;# 
   492  0E18                     	;# 
   493  0E19                     	;# 
   494  0E1A                     	;# 
   495  0E1B                     	;# 
   496  0E1C                     	;# 
   497  0E1D                     	;# 
   498  0E1E                     	;# 
   499  0E1F                     	;# 
   500  0E20                     	;# 
   501  0E21                     	;# 
   502  0E22                     	;# 
   503  0E23                     	;# 
   504  0E24                     	;# 
   505  0E25                     	;# 
   506  0E26                     	;# 
   507  0E27                     	;# 
   508  0E28                     	;# 
   509  0E29                     	;# 
   510  0E2A                     	;# 
   511  0E2B                     	;# 
   512  0E2C                     	;# 
   513  0E2D                     	;# 
   514  0E2E                     	;# 
   515  0E90                     	;# 
   516  0E91                     	;# 
   517  0E92                     	;# 
   518  0E94                     	;# 
   519  0E95                     	;# 
   520  0E9C                     	;# 
   521  0E9D                     	;# 
   522  0E9E                     	;# 
   523  0E9F                     	;# 
   524  0EA0                     	;# 
   525  0EA1                     	;# 
   526  0EA2                     	;# 
   527  0EA3                     	;# 
   528  0EA4                     	;# 
   529  0EA5                     	;# 
   530  0EA6                     	;# 
   531  0EA7                     	;# 
   532  0F0F                     	;# 
   533  0F10                     	;# 
   534  0F11                     	;# 
   535  0F12                     	;# 
   536  0F13                     	;# 
   537  0F14                     	;# 
   538  0F15                     	;# 
   539  0F16                     	;# 
   540  0F17                     	;# 
   541  0F18                     	;# 
   542  0F19                     	;# 
   543  0F1A                     	;# 
   544  0F1B                     	;# 
   545  0F1C                     	;# 
   546  0F1D                     	;# 
   547  0F1E                     	;# 
   548  0F1F                     	;# 
   549  0F20                     	;# 
   550  0F21                     	;# 
   551  0F22                     	;# 
   552  0F23                     	;# 
   553  0F24                     	;# 
   554  0F25                     	;# 
   555  0F26                     	;# 
   556  0F27                     	;# 
   557  0F28                     	;# 
   558  0F29                     	;# 
   559  0F2A                     	;# 
   560  0F2B                     	;# 
   561  0F2C                     	;# 
   562  0F2D                     	;# 
   563  0F2E                     	;# 
   564  0F2F                     	;# 
   565  0F30                     	;# 
   566  0F31                     	;# 
   567  0F32                     	;# 
   568  0F33                     	;# 
   569  0F34                     	;# 
   570  0F35                     	;# 
   571  0F36                     	;# 
   572  0F37                     	;# 
   573  0FE4                     	;# 
   574  0FE5                     	;# 
   575  0FE6                     	;# 
   576  0FE7                     	;# 
   577  0FE8                     	;# 
   578  0FE9                     	;# 
   579  0FEA                     	;# 
   580  0FEB                     	;# 
   581  0FED                     	;# 
   582  0FEE                     	;# 
   583  0FEF                     	;# 
   584  0000                     	;# 
   585  0001                     	;# 
   586  0002                     	;# 
   587  0003                     	;# 
   588  0004                     	;# 
   589  0005                     	;# 
   590  0006                     	;# 
   591  0007                     	;# 
   592  0008                     	;# 
   593  0009                     	;# 
   594  000A                     	;# 
   595  000B                     	;# 
   596  000C                     	;# 
   597  000D                     	;# 
   598  000E                     	;# 
   599  0010                     	;# 
   600  0011                     	;# 
   601  0012                     	;# 
   602  0013                     	;# 
   603  0014                     	;# 
   604  0015                     	;# 
   605  0016                     	;# 
   606  0016                     	;# 
   607  0017                     	;# 
   608  0018                     	;# 
   609  0019                     	;# 
   610  001A                     	;# 
   611  001A                     	;# 
   612  001B                     	;# 
   613  001B                     	;# 
   614  001C                     	;# 
   615  001D                     	;# 
   616  001E                     	;# 
   617  001F                     	;# 
   618  008C                     	;# 
   619  008D                     	;# 
   620  008E                     	;# 
   621  0090                     	;# 
   622  0091                     	;# 
   623  0092                     	;# 
   624  0093                     	;# 
   625  0094                     	;# 
   626  0095                     	;# 
   627  0096                     	;# 
   628  0098                     	;# 
   629  0099                     	;# 
   630  009A                     	;# 
   631  009B                     	;# 
   632  009B                     	;# 
   633  009C                     	;# 
   634  009D                     	;# 
   635  009E                     	;# 
   636  009F                     	;# 
   637  010C                     	;# 
   638  010D                     	;# 
   639  010E                     	;# 
   640  0111                     	;# 
   641  0112                     	;# 
   642  0113                     	;# 
   643  0114                     	;# 
   644  0115                     	;# 
   645  0116                     	;# 
   646  0117                     	;# 
   647  0118                     	;# 
   648  0119                     	;# 
   649  011C                     	;# 
   650  018C                     	;# 
   651  018D                     	;# 
   652  018E                     	;# 
   653  0191                     	;# 
   654  0191                     	;# 
   655  0192                     	;# 
   656  0193                     	;# 
   657  0193                     	;# 
   658  0194                     	;# 
   659  0195                     	;# 
   660  0196                     	;# 
   661  0197                     	;# 
   662  0199                     	;# 
   663  0199                     	;# 
   664  0199                     	;# 
   665  019A                     	;# 
   666  019A                     	;# 
   667  019A                     	;# 
   668  019B                     	;# 
   669  019B                     	;# 
   670  019B                     	;# 
   671  019B                     	;# 
   672  019B                     	;# 
   673  019C                     	;# 
   674  019C                     	;# 
   675  019C                     	;# 
   676  019D                     	;# 
   677  019D                     	;# 
   678  019D                     	;# 
   679  019E                     	;# 
   680  019E                     	;# 
   681  019E                     	;# 
   682  019F                     	;# 
   683  019F                     	;# 
   684  019F                     	;# 
   685  019F                     	;# 
   686  019F                     	;# 
   687  020C                     	;# 
   688  020D                     	;# 
   689  020E                     	;# 
   690  0211                     	;# 
   691  0211                     	;# 
   692  0212                     	;# 
   693  0212                     	;# 
   694  0213                     	;# 
   695  0213                     	;# 
   696  0214                     	;# 
   697  0214                     	;# 
   698  0215                     	;# 
   699  0215                     	;# 
   700  0215                     	;# 
   701  0215                     	;# 
   702  0216                     	;# 
   703  0216                     	;# 
   704  0217                     	;# 
   705  0217                     	;# 
   706  028C                     	;# 
   707  028D                     	;# 
   708  028E                     	;# 
   709  0291                     	;# 
   710  0291                     	;# 
   711  0292                     	;# 
   712  0293                     	;# 
   713  0294                     	;# 
   714  0298                     	;# 
   715  0298                     	;# 
   716  0299                     	;# 
   717  029A                     	;# 
   718  029B                     	;# 
   719  029E                     	;# 
   720  030C                     	;# 
   721  030D                     	;# 
   722  030E                     	;# 
   723  038C                     	;# 
   724  038D                     	;# 
   725  038E                     	;# 
   726  0391                     	;# 
   727  0392                     	;# 
   728  0393                     	;# 
   729  0394                     	;# 
   730  0395                     	;# 
   731  0396                     	;# 
   732  0397                     	;# 
   733  0398                     	;# 
   734  0399                     	;# 
   735  040E                     	;# 
   736  0413                     	;# 
   737  0413                     	;# 
   738  0414                     	;# 
   739  0414                     	;# 
   740  0415                     	;# 
   741  0416                     	;# 
   742  0417                     	;# 
   743  0418                     	;# 
   744  041A                     	;# 
   745  041A                     	;# 
   746  041B                     	;# 
   747  041B                     	;# 
   748  041C                     	;# 
   749  041D                     	;# 
   750  041E                     	;# 
   751  041F                     	;# 
   752  0493                     	;# 
   753  0494                     	;# 
   754  0495                     	;# 
   755  0496                     	;# 
   756  049A                     	;# 
   757  049B                     	;# 
   758  049C                     	;# 
   759  049D                     	;# 
   760  058C                     	;# 
   761  058C                     	;# 
   762  058D                     	;# 
   763  058E                     	;# 
   764  058E                     	;# 
   765  058F                     	;# 
   766  0590                     	;# 
   767  0590                     	;# 
   768  0591                     	;# 
   769  0592                     	;# 
   770  0592                     	;# 
   771  0593                     	;# 
   772  0594                     	;# 
   773  0594                     	;# 
   774  0595                     	;# 
   775  0596                     	;# 
   776  0596                     	;# 
   777  0597                     	;# 
   778  0598                     	;# 
   779  0599                     	;# 
   780  059A                     	;# 
   781  059B                     	;# 
   782  059B                     	;# 
   783  059C                     	;# 
   784  059D                     	;# 
   785  060C                     	;# 
   786  060C                     	;# 
   787  060D                     	;# 
   788  060E                     	;# 
   789  060F                     	;# 
   790  060F                     	;# 
   791  0610                     	;# 
   792  0611                     	;# 
   793  0612                     	;# 
   794  0613                     	;# 
   795  0614                     	;# 
   796  0617                     	;# 
   797  0617                     	;# 
   798  0618                     	;# 
   799  0619                     	;# 
   800  061A                     	;# 
   801  061A                     	;# 
   802  061B                     	;# 
   803  061C                     	;# 
   804  0691                     	;# 
   805  0692                     	;# 
   806  0693                     	;# 
   807  0694                     	;# 
   808  0695                     	;# 
   809  0696                     	;# 
   810  0697                     	;# 
   811  0699                     	;# 
   812  069A                     	;# 
   813  0711                     	;# 
   814  0712                     	;# 
   815  0713                     	;# 
   816  0714                     	;# 
   817  0715                     	;# 
   818  0718                     	;# 
   819  0718                     	;# 
   820  0719                     	;# 
   821  071A                     	;# 
   822  071A                     	;# 
   823  071B                     	;# 
   824  071C                     	;# 
   825  071D                     	;# 
   826  0791                     	;# 
   827  0791                     	;# 
   828  0792                     	;# 
   829  0793                     	;# 
   830  0793                     	;# 
   831  0794                     	;# 
   832  0795                     	;# 
   833  0795                     	;# 
   834  0796                     	;# 
   835  0797                     	;# 
   836  0797                     	;# 
   837  0798                     	;# 
   838  0799                     	;# 
   839  079A                     	;# 
   840  080C                     	;# 
   841  080C                     	;# 
   842  080D                     	;# 
   843  080E                     	;# 
   844  080E                     	;# 
   845  080F                     	;# 
   846  0810                     	;# 
   847  0810                     	;# 
   848  0811                     	;# 
   849  0812                     	;# 
   850  0812                     	;# 
   851  0813                     	;# 
   852  0814                     	;# 
   853  0815                     	;# 
   854  0816                     	;# 
   855  0817                     	;# 
   856  0818                     	;# 
   857  0819                     	;# 
   858  081A                     	;# 
   859  081A                     	;# 
   860  081B                     	;# 
   861  081C                     	;# 
   862  081C                     	;# 
   863  081D                     	;# 
   864  088C                     	;# 
   865  088D                     	;# 
   866  088E                     	;# 
   867  088F                     	;# 
   868  088F                     	;# 
   869  0890                     	;# 
   870  0891                     	;# 
   871  0892                     	;# 
   872  0893                     	;# 
   873  0893                     	;# 
   874  0894                     	;# 
   875  0895                     	;# 
   876  0896                     	;# 
   877  0897                     	;# 
   878  0897                     	;# 
   879  0898                     	;# 
   880  0899                     	;# 
   881  0D8C                     	;# 
   882  0D8C                     	;# 
   883  0D8D                     	;# 
   884  0D8E                     	;# 
   885  0D8F                     	;# 
   886  0D8F                     	;# 
   887  0D90                     	;# 
   888  0D91                     	;# 
   889  0D92                     	;# 
   890  0D92                     	;# 
   891  0D93                     	;# 
   892  0D94                     	;# 
   893  0D95                     	;# 
   894  0D95                     	;# 
   895  0D96                     	;# 
   896  0D97                     	;# 
   897  0D98                     	;# 
   898  0D99                     	;# 
   899  0D9A                     	;# 
   900  0D9B                     	;# 
   901  0D9C                     	;# 
   902  0D9D                     	;# 
   903  0D9E                     	;# 
   904  0D9E                     	;# 
   905  0D9F                     	;# 
   906  0DA0                     	;# 
   907  0DA1                     	;# 
   908  0DA1                     	;# 
   909  0DA2                     	;# 
   910  0DA3                     	;# 
   911  0DA4                     	;# 
   912  0DA4                     	;# 
   913  0DA5                     	;# 
   914  0DA6                     	;# 
   915  0DA7                     	;# 
   916  0DA7                     	;# 
   917  0DA8                     	;# 
   918  0DA9                     	;# 
   919  0DAA                     	;# 
   920  0DAB                     	;# 
   921  0DAC                     	;# 
   922  0DAD                     	;# 
   923  0DAE                     	;# 
   924  0DAF                     	;# 
   925  0E0F                     	;# 
   926  0E10                     	;# 
   927  0E11                     	;# 
   928  0E12                     	;# 
   929  0E13                     	;# 
   930  0E14                     	;# 
   931  0E15                     	;# 
   932  0E16                     	;# 
   933  0E17                     	;# 
   934  0E18                     	;# 
   935  0E19                     	;# 
   936  0E1A                     	;# 
   937  0E1B                     	;# 
   938  0E1C                     	;# 
   939  0E1D                     	;# 
   940  0E1E                     	;# 
   941  0E1F                     	;# 
   942  0E20                     	;# 
   943  0E21                     	;# 
   944  0E22                     	;# 
   945  0E23                     	;# 
   946  0E24                     	;# 
   947  0E25                     	;# 
   948  0E26                     	;# 
   949  0E27                     	;# 
   950  0E28                     	;# 
   951  0E29                     	;# 
   952  0E2A                     	;# 
   953  0E2B                     	;# 
   954  0E2C                     	;# 
   955  0E2D                     	;# 
   956  0E2E                     	;# 
   957  0E90                     	;# 
   958  0E91                     	;# 
   959  0E92                     	;# 
   960  0E94                     	;# 
   961  0E95                     	;# 
   962  0E9C                     	;# 
   963  0E9D                     	;# 
   964  0E9E                     	;# 
   965  0E9F                     	;# 
   966  0EA0                     	;# 
   967  0EA1                     	;# 
   968  0EA2                     	;# 
   969  0EA3                     	;# 
   970  0EA4                     	;# 
   971  0EA5                     	;# 
   972  0EA6                     	;# 
   973  0EA7                     	;# 
   974  0F0F                     	;# 
   975  0F10                     	;# 
   976  0F11                     	;# 
   977  0F12                     	;# 
   978  0F13                     	;# 
   979  0F14                     	;# 
   980  0F15                     	;# 
   981  0F16                     	;# 
   982  0F17                     	;# 
   983  0F18                     	;# 
   984  0F19                     	;# 
   985  0F1A                     	;# 
   986  0F1B                     	;# 
   987  0F1C                     	;# 
   988  0F1D                     	;# 
   989  0F1E                     	;# 
   990  0F1F                     	;# 
   991  0F20                     	;# 
   992  0F21                     	;# 
   993  0F22                     	;# 
   994  0F23                     	;# 
   995  0F24                     	;# 
   996  0F25                     	;# 
   997  0F26                     	;# 
   998  0F27                     	;# 
   999  0F28                     	;# 
  1000  0F29                     	;# 
  1001  0F2A                     	;# 
  1002  0F2B                     	;# 
  1003  0F2C                     	;# 
  1004  0F2D                     	;# 
  1005  0F2E                     	;# 
  1006  0F2F                     	;# 
  1007  0F30                     	;# 
  1008  0F31                     	;# 
  1009  0F32                     	;# 
  1010  0F33                     	;# 
  1011  0F34                     	;# 
  1012  0F35                     	;# 
  1013  0F36                     	;# 
  1014  0F37                     	;# 
  1015  0FE4                     	;# 
  1016  0FE5                     	;# 
  1017  0FE6                     	;# 
  1018  0FE7                     	;# 
  1019  0FE8                     	;# 
  1020  0FE9                     	;# 
  1021  0FEA                     	;# 
  1022  0FEB                     	;# 
  1023  0FED                     	;# 
  1024  0FEE                     	;# 
  1025  0FEF                     	;# 
  1026  0000                     	;# 
  1027  0001                     	;# 
  1028  0002                     	;# 
  1029  0003                     	;# 
  1030  0004                     	;# 
  1031  0005                     	;# 
  1032  0006                     	;# 
  1033  0007                     	;# 
  1034  0008                     	;# 
  1035  0009                     	;# 
  1036  000A                     	;# 
  1037  000B                     	;# 
  1038  000C                     	;# 
  1039  000D                     	;# 
  1040  000E                     	;# 
  1041  0010                     	;# 
  1042  0011                     	;# 
  1043  0012                     	;# 
  1044  0013                     	;# 
  1045  0014                     	;# 
  1046  0015                     	;# 
  1047  0016                     	;# 
  1048  0016                     	;# 
  1049  0017                     	;# 
  1050  0018                     	;# 
  1051  0019                     	;# 
  1052  001A                     	;# 
  1053  001A                     	;# 
  1054  001B                     	;# 
  1055  001B                     	;# 
  1056  001C                     	;# 
  1057  001D                     	;# 
  1058  001E                     	;# 
  1059  001F                     	;# 
  1060  008C                     	;# 
  1061  008D                     	;# 
  1062  008E                     	;# 
  1063  0090                     	;# 
  1064  0091                     	;# 
  1065  0092                     	;# 
  1066  0093                     	;# 
  1067  0094                     	;# 
  1068  0095                     	;# 
  1069  0096                     	;# 
  1070  0098                     	;# 
  1071  0099                     	;# 
  1072  009A                     	;# 
  1073  009B                     	;# 
  1074  009B                     	;# 
  1075  009C                     	;# 
  1076  009D                     	;# 
  1077  009E                     	;# 
  1078  009F                     	;# 
  1079  010C                     	;# 
  1080  010D                     	;# 
  1081  010E                     	;# 
  1082  0111                     	;# 
  1083  0112                     	;# 
  1084  0113                     	;# 
  1085  0114                     	;# 
  1086  0115                     	;# 
  1087  0116                     	;# 
  1088  0117                     	;# 
  1089  0118                     	;# 
  1090  0119                     	;# 
  1091  011C                     	;# 
  1092  018C                     	;# 
  1093  018D                     	;# 
  1094  018E                     	;# 
  1095  0191                     	;# 
  1096  0191                     	;# 
  1097  0192                     	;# 
  1098  0193                     	;# 
  1099  0193                     	;# 
  1100  0194                     	;# 
  1101  0195                     	;# 
  1102  0196                     	;# 
  1103  0197                     	;# 
  1104  0199                     	;# 
  1105  0199                     	;# 
  1106  0199                     	;# 
  1107  019A                     	;# 
  1108  019A                     	;# 
  1109  019A                     	;# 
  1110  019B                     	;# 
  1111  019B                     	;# 
  1112  019B                     	;# 
  1113  019B                     	;# 
  1114  019B                     	;# 
  1115  019C                     	;# 
  1116  019C                     	;# 
  1117  019C                     	;# 
  1118  019D                     	;# 
  1119  019D                     	;# 
  1120  019D                     	;# 
  1121  019E                     	;# 
  1122  019E                     	;# 
  1123  019E                     	;# 
  1124  019F                     	;# 
  1125  019F                     	;# 
  1126  019F                     	;# 
  1127  019F                     	;# 
  1128  019F                     	;# 
  1129  020C                     	;# 
  1130  020D                     	;# 
  1131  020E                     	;# 
  1132  0211                     	;# 
  1133  0211                     	;# 
  1134  0212                     	;# 
  1135  0212                     	;# 
  1136  0213                     	;# 
  1137  0213                     	;# 
  1138  0214                     	;# 
  1139  0214                     	;# 
  1140  0215                     	;# 
  1141  0215                     	;# 
  1142  0215                     	;# 
  1143  0215                     	;# 
  1144  0216                     	;# 
  1145  0216                     	;# 
  1146  0217                     	;# 
  1147  0217                     	;# 
  1148  028C                     	;# 
  1149  028D                     	;# 
  1150  028E                     	;# 
  1151  0291                     	;# 
  1152  0291                     	;# 
  1153  0292                     	;# 
  1154  0293                     	;# 
  1155  0294                     	;# 
  1156  0298                     	;# 
  1157  0298                     	;# 
  1158  0299                     	;# 
  1159  029A                     	;# 
  1160  029B                     	;# 
  1161  029E                     	;# 
  1162  030C                     	;# 
  1163  030D                     	;# 
  1164  030E                     	;# 
  1165  038C                     	;# 
  1166  038D                     	;# 
  1167  038E                     	;# 
  1168  0391                     	;# 
  1169  0392                     	;# 
  1170  0393                     	;# 
  1171  0394                     	;# 
  1172  0395                     	;# 
  1173  0396                     	;# 
  1174  0397                     	;# 
  1175  0398                     	;# 
  1176  0399                     	;# 
  1177  040E                     	;# 
  1178  0413                     	;# 
  1179  0413                     	;# 
  1180  0414                     	;# 
  1181  0414                     	;# 
  1182  0415                     	;# 
  1183  0416                     	;# 
  1184  0417                     	;# 
  1185  0418                     	;# 
  1186  041A                     	;# 
  1187  041A                     	;# 
  1188  041B                     	;# 
  1189  041B                     	;# 
  1190  041C                     	;# 
  1191  041D                     	;# 
  1192  041E                     	;# 
  1193  041F                     	;# 
  1194  0493                     	;# 
  1195  0494                     	;# 
  1196  0495                     	;# 
  1197  0496                     	;# 
  1198  049A                     	;# 
  1199  049B                     	;# 
  1200  049C                     	;# 
  1201  049D                     	;# 
  1202  058C                     	;# 
  1203  058C                     	;# 
  1204  058D                     	;# 
  1205  058E                     	;# 
  1206  058E                     	;# 
  1207  058F                     	;# 
  1208  0590                     	;# 
  1209  0590                     	;# 
  1210  0591                     	;# 
  1211  0592                     	;# 
  1212  0592                     	;# 
  1213  0593                     	;# 
  1214  0594                     	;# 
  1215  0594                     	;# 
  1216  0595                     	;# 
  1217  0596                     	;# 
  1218  0596                     	;# 
  1219  0597                     	;# 
  1220  0598                     	;# 
  1221  0599                     	;# 
  1222  059A                     	;# 
  1223  059B                     	;# 
  1224  059B                     	;# 
  1225  059C                     	;# 
  1226  059D                     	;# 
  1227  060C                     	;# 
  1228  060C                     	;# 
  1229  060D                     	;# 
  1230  060E                     	;# 
  1231  060F                     	;# 
  1232  060F                     	;# 
  1233  0610                     	;# 
  1234  0611                     	;# 
  1235  0612                     	;# 
  1236  0613                     	;# 
  1237  0614                     	;# 
  1238  0617                     	;# 
  1239  0617                     	;# 
  1240  0618                     	;# 
  1241  0619                     	;# 
  1242  061A                     	;# 
  1243  061A                     	;# 
  1244  061B                     	;# 
  1245  061C                     	;# 
  1246  0691                     	;# 
  1247  0692                     	;# 
  1248  0693                     	;# 
  1249  0694                     	;# 
  1250  0695                     	;# 
  1251  0696                     	;# 
  1252  0697                     	;# 
  1253  0699                     	;# 
  1254  069A                     	;# 
  1255  0711                     	;# 
  1256  0712                     	;# 
  1257  0713                     	;# 
  1258  0714                     	;# 
  1259  0715                     	;# 
  1260  0718                     	;# 
  1261  0718                     	;# 
  1262  0719                     	;# 
  1263  071A                     	;# 
  1264  071A                     	;# 
  1265  071B                     	;# 
  1266  071C                     	;# 
  1267  071D                     	;# 
  1268  0791                     	;# 
  1269  0791                     	;# 
  1270  0792                     	;# 
  1271  0793                     	;# 
  1272  0793                     	;# 
  1273  0794                     	;# 
  1274  0795                     	;# 
  1275  0795                     	;# 
  1276  0796                     	;# 
  1277  0797                     	;# 
  1278  0797                     	;# 
  1279  0798                     	;# 
  1280  0799                     	;# 
  1281  079A                     	;# 
  1282  080C                     	;# 
  1283  080C                     	;# 
  1284  080D                     	;# 
  1285  080E                     	;# 
  1286  080E                     	;# 
  1287  080F                     	;# 
  1288  0810                     	;# 
  1289  0810                     	;# 
  1290  0811                     	;# 
  1291  0812                     	;# 
  1292  0812                     	;# 
  1293  0813                     	;# 
  1294  0814                     	;# 
  1295  0815                     	;# 
  1296  0816                     	;# 
  1297  0817                     	;# 
  1298  0818                     	;# 
  1299  0819                     	;# 
  1300  081A                     	;# 
  1301  081A                     	;# 
  1302  081B                     	;# 
  1303  081C                     	;# 
  1304  081C                     	;# 
  1305  081D                     	;# 
  1306  088C                     	;# 
  1307  088D                     	;# 
  1308  088E                     	;# 
  1309  088F                     	;# 
  1310  088F                     	;# 
  1311  0890                     	;# 
  1312  0891                     	;# 
  1313  0892                     	;# 
  1314  0893                     	;# 
  1315  0893                     	;# 
  1316  0894                     	;# 
  1317  0895                     	;# 
  1318  0896                     	;# 
  1319  0897                     	;# 
  1320  0897                     	;# 
  1321  0898                     	;# 
  1322  0899                     	;# 
  1323  0D8C                     	;# 
  1324  0D8C                     	;# 
  1325  0D8D                     	;# 
  1326  0D8E                     	;# 
  1327  0D8F                     	;# 
  1328  0D8F                     	;# 
  1329  0D90                     	;# 
  1330  0D91                     	;# 
  1331  0D92                     	;# 
  1332  0D92                     	;# 
  1333  0D93                     	;# 
  1334  0D94                     	;# 
  1335  0D95                     	;# 
  1336  0D95                     	;# 
  1337  0D96                     	;# 
  1338  0D97                     	;# 
  1339  0D98                     	;# 
  1340  0D99                     	;# 
  1341  0D9A                     	;# 
  1342  0D9B                     	;# 
  1343  0D9C                     	;# 
  1344  0D9D                     	;# 
  1345  0D9E                     	;# 
  1346  0D9E                     	;# 
  1347  0D9F                     	;# 
  1348  0DA0                     	;# 
  1349  0DA1                     	;# 
  1350  0DA1                     	;# 
  1351  0DA2                     	;# 
  1352  0DA3                     	;# 
  1353  0DA4                     	;# 
  1354  0DA4                     	;# 
  1355  0DA5                     	;# 
  1356  0DA6                     	;# 
  1357  0DA7                     	;# 
  1358  0DA7                     	;# 
  1359  0DA8                     	;# 
  1360  0DA9                     	;# 
  1361  0DAA                     	;# 
  1362  0DAB                     	;# 
  1363  0DAC                     	;# 
  1364  0DAD                     	;# 
  1365  0DAE                     	;# 
  1366  0DAF                     	;# 
  1367  0E0F                     	;# 
  1368  0E10                     	;# 
  1369  0E11                     	;# 
  1370  0E12                     	;# 
  1371  0E13                     	;# 
  1372  0E14                     	;# 
  1373  0E15                     	;# 
  1374  0E16                     	;# 
  1375  0E17                     	;# 
  1376  0E18                     	;# 
  1377  0E19                     	;# 
  1378  0E1A                     	;# 
  1379  0E1B                     	;# 
  1380  0E1C                     	;# 
  1381  0E1D                     	;# 
  1382  0E1E                     	;# 
  1383  0E1F                     	;# 
  1384  0E20                     	;# 
  1385  0E21                     	;# 
  1386  0E22                     	;# 
  1387  0E23                     	;# 
  1388  0E24                     	;# 
  1389  0E25                     	;# 
  1390  0E26                     	;# 
  1391  0E27                     	;# 
  1392  0E28                     	;# 
  1393  0E29                     	;# 
  1394  0E2A                     	;# 
  1395  0E2B                     	;# 
  1396  0E2C                     	;# 
  1397  0E2D                     	;# 
  1398  0E2E                     	;# 
  1399  0E90                     	;# 
  1400  0E91                     	;# 
  1401  0E92                     	;# 
  1402  0E94                     	;# 
  1403  0E95                     	;# 
  1404  0E9C                     	;# 
  1405  0E9D                     	;# 
  1406  0E9E                     	;# 
  1407  0E9F                     	;# 
  1408  0EA0                     	;# 
  1409  0EA1                     	;# 
  1410  0EA2                     	;# 
  1411  0EA3                     	;# 
  1412  0EA4                     	;# 
  1413  0EA5                     	;# 
  1414  0EA6                     	;# 
  1415  0EA7                     	;# 
  1416  0F0F                     	;# 
  1417  0F10                     	;# 
  1418  0F11                     	;# 
  1419  0F12                     	;# 
  1420  0F13                     	;# 
  1421  0F14                     	;# 
  1422  0F15                     	;# 
  1423  0F16                     	;# 
  1424  0F17                     	;# 
  1425  0F18                     	;# 
  1426  0F19                     	;# 
  1427  0F1A                     	;# 
  1428  0F1B                     	;# 
  1429  0F1C                     	;# 
  1430  0F1D                     	;# 
  1431  0F1E                     	;# 
  1432  0F1F                     	;# 
  1433  0F20                     	;# 
  1434  0F21                     	;# 
  1435  0F22                     	;# 
  1436  0F23                     	;# 
  1437  0F24                     	;# 
  1438  0F25                     	;# 
  1439  0F26                     	;# 
  1440  0F27                     	;# 
  1441  0F28                     	;# 
  1442  0F29                     	;# 
  1443  0F2A                     	;# 
  1444  0F2B                     	;# 
  1445  0F2C                     	;# 
  1446  0F2D                     	;# 
  1447  0F2E                     	;# 
  1448  0F2F                     	;# 
  1449  0F30                     	;# 
  1450  0F31                     	;# 
  1451  0F32                     	;# 
  1452  0F33                     	;# 
  1453  0F34                     	;# 
  1454  0F35                     	;# 
  1455  0F36                     	;# 
  1456  0F37                     	;# 
  1457  0FE4                     	;# 
  1458  0FE5                     	;# 
  1459  0FE6                     	;# 
  1460  0FE7                     	;# 
  1461  0FE8                     	;# 
  1462  0FE9                     	;# 
  1463  0FEA                     	;# 
  1464  0FEB                     	;# 
  1465  0FED                     	;# 
  1466  0FEE                     	;# 
  1467  0FEF                     	;# 
  1468  0000                     	;# 
  1469  0001                     	;# 
  1470  0002                     	;# 
  1471  0003                     	;# 
  1472  0004                     	;# 
  1473  0005                     	;# 
  1474  0006                     	;# 
  1475  0007                     	;# 
  1476  0008                     	;# 
  1477  0009                     	;# 
  1478  000A                     	;# 
  1479  000B                     	;# 
  1480  000C                     	;# 
  1481  000D                     	;# 
  1482  000E                     	;# 
  1483  0010                     	;# 
  1484  0011                     	;# 
  1485  0012                     	;# 
  1486  0013                     	;# 
  1487  0014                     	;# 
  1488  0015                     	;# 
  1489  0016                     	;# 
  1490  0016                     	;# 
  1491  0017                     	;# 
  1492  0018                     	;# 
  1493  0019                     	;# 
  1494  001A                     	;# 
  1495  001A                     	;# 
  1496  001B                     	;# 
  1497  001B                     	;# 
  1498  001C                     	;# 
  1499  001D                     	;# 
  1500  001E                     	;# 
  1501  001F                     	;# 
  1502  008C                     	;# 
  1503  008D                     	;# 
  1504  008E                     	;# 
  1505  0090                     	;# 
  1506  0091                     	;# 
  1507  0092                     	;# 
  1508  0093                     	;# 
  1509  0094                     	;# 
  1510  0095                     	;# 
  1511  0096                     	;# 
  1512  0098                     	;# 
  1513  0099                     	;# 
  1514  009A                     	;# 
  1515  009B                     	;# 
  1516  009B                     	;# 
  1517  009C                     	;# 
  1518  009D                     	;# 
  1519  009E                     	;# 
  1520  009F                     	;# 
  1521  010C                     	;# 
  1522  010D                     	;# 
  1523  010E                     	;# 
  1524  0111                     	;# 
  1525  0112                     	;# 
  1526  0113                     	;# 
  1527  0114                     	;# 
  1528  0115                     	;# 
  1529  0116                     	;# 
  1530  0117                     	;# 
  1531  0118                     	;# 
  1532  0119                     	;# 
  1533  011C                     	;# 
  1534  018C                     	;# 
  1535  018D                     	;# 
  1536  018E                     	;# 
  1537  0191                     	;# 
  1538  0191                     	;# 
  1539  0192                     	;# 
  1540  0193                     	;# 
  1541  0193                     	;# 
  1542  0194                     	;# 
  1543  0195                     	;# 
  1544  0196                     	;# 
  1545  0197                     	;# 
  1546  0199                     	;# 
  1547  0199                     	;# 
  1548  0199                     	;# 
  1549  019A                     	;# 
  1550  019A                     	;# 
  1551  019A                     	;# 
  1552  019B                     	;# 
  1553  019B                     	;# 
  1554  019B                     	;# 
  1555  019B                     	;# 
  1556  019B                     	;# 
  1557  019C                     	;# 
  1558  019C                     	;# 
  1559  019C                     	;# 
  1560  019D                     	;# 
  1561  019D                     	;# 
  1562  019D                     	;# 
  1563  019E                     	;# 
  1564  019E                     	;# 
  1565  019E                     	;# 
  1566  019F                     	;# 
  1567  019F                     	;# 
  1568  019F                     	;# 
  1569  019F                     	;# 
  1570  019F                     	;# 
  1571  020C                     	;# 
  1572  020D                     	;# 
  1573  020E                     	;# 
  1574  0211                     	;# 
  1575  0211                     	;# 
  1576  0212                     	;# 
  1577  0212                     	;# 
  1578  0213                     	;# 
  1579  0213                     	;# 
  1580  0214                     	;# 
  1581  0214                     	;# 
  1582  0215                     	;# 
  1583  0215                     	;# 
  1584  0215                     	;# 
  1585  0215                     	;# 
  1586  0216                     	;# 
  1587  0216                     	;# 
  1588  0217                     	;# 
  1589  0217                     	;# 
  1590  028C                     	;# 
  1591  028D                     	;# 
  1592  028E                     	;# 
  1593  0291                     	;# 
  1594  0291                     	;# 
  1595  0292                     	;# 
  1596  0293                     	;# 
  1597  0294                     	;# 
  1598  0298                     	;# 
  1599  0298                     	;# 
  1600  0299                     	;# 
  1601  029A                     	;# 
  1602  029B                     	;# 
  1603  029E                     	;# 
  1604  030C                     	;# 
  1605  030D                     	;# 
  1606  030E                     	;# 
  1607  038C                     	;# 
  1608  038D                     	;# 
  1609  038E                     	;# 
  1610  0391                     	;# 
  1611  0392                     	;# 
  1612  0393                     	;# 
  1613  0394                     	;# 
  1614  0395                     	;# 
  1615  0396                     	;# 
  1616  0397                     	;# 
  1617  0398                     	;# 
  1618  0399                     	;# 
  1619  040E                     	;# 
  1620  0413                     	;# 
  1621  0413                     	;# 
  1622  0414                     	;# 
  1623  0414                     	;# 
  1624  0415                     	;# 
  1625  0416                     	;# 
  1626  0417                     	;# 
  1627  0418                     	;# 
  1628  041A                     	;# 
  1629  041A                     	;# 
  1630  041B                     	;# 
  1631  041B                     	;# 
  1632  041C                     	;# 
  1633  041D                     	;# 
  1634  041E                     	;# 
  1635  041F                     	;# 
  1636  0493                     	;# 
  1637  0494                     	;# 
  1638  0495                     	;# 
  1639  0496                     	;# 
  1640  049A                     	;# 
  1641  049B                     	;# 
  1642  049C                     	;# 
  1643  049D                     	;# 
  1644  058C                     	;# 
  1645  058C                     	;# 
  1646  058D                     	;# 
  1647  058E                     	;# 
  1648  058E                     	;# 
  1649  058F                     	;# 
  1650  0590                     	;# 
  1651  0590                     	;# 
  1652  0591                     	;# 
  1653  0592                     	;# 
  1654  0592                     	;# 
  1655  0593                     	;# 
  1656  0594                     	;# 
  1657  0594                     	;# 
  1658  0595                     	;# 
  1659  0596                     	;# 
  1660  0596                     	;# 
  1661  0597                     	;# 
  1662  0598                     	;# 
  1663  0599                     	;# 
  1664  059A                     	;# 
  1665  059B                     	;# 
  1666  059B                     	;# 
  1667  059C                     	;# 
  1668  059D                     	;# 
  1669  060C                     	;# 
  1670  060C                     	;# 
  1671  060D                     	;# 
  1672  060E                     	;# 
  1673  060F                     	;# 
  1674  060F                     	;# 
  1675  0610                     	;# 
  1676  0611                     	;# 
  1677  0612                     	;# 
  1678  0613                     	;# 
  1679  0614                     	;# 
  1680  0617                     	;# 
  1681  0617                     	;# 
  1682  0618                     	;# 
  1683  0619                     	;# 
  1684  061A                     	;# 
  1685  061A                     	;# 
  1686  061B                     	;# 
  1687  061C                     	;# 
  1688  0691                     	;# 
  1689  0692                     	;# 
  1690  0693                     	;# 
  1691  0694                     	;# 
  1692  0695                     	;# 
  1693  0696                     	;# 
  1694  0697                     	;# 
  1695  0699                     	;# 
  1696  069A                     	;# 
  1697  0711                     	;# 
  1698  0712                     	;# 
  1699  0713                     	;# 
  1700  0714                     	;# 
  1701  0715                     	;# 
  1702  0718                     	;# 
  1703  0718                     	;# 
  1704  0719                     	;# 
  1705  071A                     	;# 
  1706  071A                     	;# 
  1707  071B                     	;# 
  1708  071C                     	;# 
  1709  071D                     	;# 
  1710  0791                     	;# 
  1711  0791                     	;# 
  1712  0792                     	;# 
  1713  0793                     	;# 
  1714  0793                     	;# 
  1715  0794                     	;# 
  1716  0795                     	;# 
  1717  0795                     	;# 
  1718  0796                     	;# 
  1719  0797                     	;# 
  1720  0797                     	;# 
  1721  0798                     	;# 
  1722  0799                     	;# 
  1723  079A                     	;# 
  1724  080C                     	;# 
  1725  080C                     	;# 
  1726  080D                     	;# 
  1727  080E                     	;# 
  1728  080E                     	;# 
  1729  080F                     	;# 
  1730  0810                     	;# 
  1731  0810                     	;# 
  1732  0811                     	;# 
  1733  0812                     	;# 
  1734  0812                     	;# 
  1735  0813                     	;# 
  1736  0814                     	;# 
  1737  0815                     	;# 
  1738  0816                     	;# 
  1739  0817                     	;# 
  1740  0818                     	;# 
  1741  0819                     	;# 
  1742  081A                     	;# 
  1743  081A                     	;# 
  1744  081B                     	;# 
  1745  081C                     	;# 
  1746  081C                     	;# 
  1747  081D                     	;# 
  1748  088C                     	;# 
  1749  088D                     	;# 
  1750  088E                     	;# 
  1751  088F                     	;# 
  1752  088F                     	;# 
  1753  0890                     	;# 
  1754  0891                     	;# 
  1755  0892                     	;# 
  1756  0893                     	;# 
  1757  0893                     	;# 
  1758  0894                     	;# 
  1759  0895                     	;# 
  1760  0896                     	;# 
  1761  0897                     	;# 
  1762  0897                     	;# 
  1763  0898                     	;# 
  1764  0899                     	;# 
  1765  0D8C                     	;# 
  1766  0D8C                     	;# 
  1767  0D8D                     	;# 
  1768  0D8E                     	;# 
  1769  0D8F                     	;# 
  1770  0D8F                     	;# 
  1771  0D90                     	;# 
  1772  0D91                     	;# 
  1773  0D92                     	;# 
  1774  0D92                     	;# 
  1775  0D93                     	;# 
  1776  0D94                     	;# 
  1777  0D95                     	;# 
  1778  0D95                     	;# 
  1779  0D96                     	;# 
  1780  0D97                     	;# 
  1781  0D98                     	;# 
  1782  0D99                     	;# 
  1783  0D9A                     	;# 
  1784  0D9B                     	;# 
  1785  0D9C                     	;# 
  1786  0D9D                     	;# 
  1787  0D9E                     	;# 
  1788  0D9E                     	;# 
  1789  0D9F                     	;# 
  1790  0DA0                     	;# 
  1791  0DA1                     	;# 
  1792  0DA1                     	;# 
  1793  0DA2                     	;# 
  1794  0DA3                     	;# 
  1795  0DA4                     	;# 
  1796  0DA4                     	;# 
  1797  0DA5                     	;# 
  1798  0DA6                     	;# 
  1799  0DA7                     	;# 
  1800  0DA7                     	;# 
  1801  0DA8                     	;# 
  1802  0DA9                     	;# 
  1803  0DAA                     	;# 
  1804  0DAB                     	;# 
  1805  0DAC                     	;# 
  1806  0DAD                     	;# 
  1807  0DAE                     	;# 
  1808  0DAF                     	;# 
  1809  0E0F                     	;# 
  1810  0E10                     	;# 
  1811  0E11                     	;# 
  1812  0E12                     	;# 
  1813  0E13                     	;# 
  1814  0E14                     	;# 
  1815  0E15                     	;# 
  1816  0E16                     	;# 
  1817  0E17                     	;# 
  1818  0E18                     	;# 
  1819  0E19                     	;# 
  1820  0E1A                     	;# 
  1821  0E1B                     	;# 
  1822  0E1C                     	;# 
  1823  0E1D                     	;# 
  1824  0E1E                     	;# 
  1825  0E1F                     	;# 
  1826  0E20                     	;# 
  1827  0E21                     	;# 
  1828  0E22                     	;# 
  1829  0E23                     	;# 
  1830  0E24                     	;# 
  1831  0E25                     	;# 
  1832  0E26                     	;# 
  1833  0E27                     	;# 
  1834  0E28                     	;# 
  1835  0E29                     	;# 
  1836  0E2A                     	;# 
  1837  0E2B                     	;# 
  1838  0E2C                     	;# 
  1839  0E2D                     	;# 
  1840  0E2E                     	;# 
  1841  0E90                     	;# 
  1842  0E91                     	;# 
  1843  0E92                     	;# 
  1844  0E94                     	;# 
  1845  0E95                     	;# 
  1846  0E9C                     	;# 
  1847  0E9D                     	;# 
  1848  0E9E                     	;# 
  1849  0E9F                     	;# 
  1850  0EA0                     	;# 
  1851  0EA1                     	;# 
  1852  0EA2                     	;# 
  1853  0EA3                     	;# 
  1854  0EA4                     	;# 
  1855  0EA5                     	;# 
  1856  0EA6                     	;# 
  1857  0EA7                     	;# 
  1858  0F0F                     	;# 
  1859  0F10                     	;# 
  1860  0F11                     	;# 
  1861  0F12                     	;# 
  1862  0F13                     	;# 
  1863  0F14                     	;# 
  1864  0F15                     	;# 
  1865  0F16                     	;# 
  1866  0F17                     	;# 
  1867  0F18                     	;# 
  1868  0F19                     	;# 
  1869  0F1A                     	;# 
  1870  0F1B                     	;# 
  1871  0F1C                     	;# 
  1872  0F1D                     	;# 
  1873  0F1E                     	;# 
  1874  0F1F                     	;# 
  1875  0F20                     	;# 
  1876  0F21                     	;# 
  1877  0F22                     	;# 
  1878  0F23                     	;# 
  1879  0F24                     	;# 
  1880  0F25                     	;# 
  1881  0F26                     	;# 
  1882  0F27                     	;# 
  1883  0F28                     	;# 
  1884  0F29                     	;# 
  1885  0F2A                     	;# 
  1886  0F2B                     	;# 
  1887  0F2C                     	;# 
  1888  0F2D                     	;# 
  1889  0F2E                     	;# 
  1890  0F2F                     	;# 
  1891  0F30                     	;# 
  1892  0F31                     	;# 
  1893  0F32                     	;# 
  1894  0F33                     	;# 
  1895  0F34                     	;# 
  1896  0F35                     	;# 
  1897  0F36                     	;# 
  1898  0F37                     	;# 
  1899  0FE4                     	;# 
  1900  0FE5                     	;# 
  1901  0FE6                     	;# 
  1902  0FE7                     	;# 
  1903  0FE8                     	;# 
  1904  0FE9                     	;# 
  1905  0FEA                     	;# 
  1906  0FEB                     	;# 
  1907  0FED                     	;# 
  1908  0FEE                     	;# 
  1909  0FEF                     	;# 
  1910  0000                     	;# 
  1911  0001                     	;# 
  1912  0002                     	;# 
  1913  0003                     	;# 
  1914  0004                     	;# 
  1915  0005                     	;# 
  1916  0006                     	;# 
  1917  0007                     	;# 
  1918  0008                     	;# 
  1919  0009                     	;# 
  1920  000A                     	;# 
  1921  000B                     	;# 
  1922  000C                     	;# 
  1923  000D                     	;# 
  1924  000E                     	;# 
  1925  0010                     	;# 
  1926  0011                     	;# 
  1927  0012                     	;# 
  1928  0013                     	;# 
  1929  0014                     	;# 
  1930  0015                     	;# 
  1931  0016                     	;# 
  1932  0016                     	;# 
  1933  0017                     	;# 
  1934  0018                     	;# 
  1935  0019                     	;# 
  1936  001A                     	;# 
  1937  001A                     	;# 
  1938  001B                     	;# 
  1939  001B                     	;# 
  1940  001C                     	;# 
  1941  001D                     	;# 
  1942  001E                     	;# 
  1943  001F                     	;# 
  1944  008C                     	;# 
  1945  008D                     	;# 
  1946  008E                     	;# 
  1947  0090                     	;# 
  1948  0091                     	;# 
  1949  0092                     	;# 
  1950  0093                     	;# 
  1951  0094                     	;# 
  1952  0095                     	;# 
  1953  0096                     	;# 
  1954  0098                     	;# 
  1955  0099                     	;# 
  1956  009A                     	;# 
  1957  009B                     	;# 
  1958  009B                     	;# 
  1959  009C                     	;# 
  1960  009D                     	;# 
  1961  009E                     	;# 
  1962  009F                     	;# 
  1963  010C                     	;# 
  1964  010D                     	;# 
  1965  010E                     	;# 
  1966  0111                     	;# 
  1967  0112                     	;# 
  1968  0113                     	;# 
  1969  0114                     	;# 
  1970  0115                     	;# 
  1971  0116                     	;# 
  1972  0117                     	;# 
  1973  0118                     	;# 
  1974  0119                     	;# 
  1975  011C                     	;# 
  1976  018C                     	;# 
  1977  018D                     	;# 
  1978  018E                     	;# 
  1979  0191                     	;# 
  1980  0191                     	;# 
  1981  0192                     	;# 
  1982  0193                     	;# 
  1983  0193                     	;# 
  1984  0194                     	;# 
  1985  0195                     	;# 
  1986  0196                     	;# 
  1987  0197                     	;# 
  1988  0199                     	;# 
  1989  0199                     	;# 
  1990  0199                     	;# 
  1991  019A                     	;# 
  1992  019A                     	;# 
  1993  019A                     	;# 
  1994  019B                     	;# 
  1995  019B                     	;# 
  1996  019B                     	;# 
  1997  019B                     	;# 
  1998  019B                     	;# 
  1999  019C                     	;# 
  2000  019C                     	;# 
  2001  019C                     	;# 
  2002  019D                     	;# 
  2003  019D                     	;# 
  2004  019D                     	;# 
  2005  019E                     	;# 
  2006  019E                     	;# 
  2007  019E                     	;# 
  2008  019F                     	;# 
  2009  019F                     	;# 
  2010  019F                     	;# 
  2011  019F                     	;# 
  2012  019F                     	;# 
  2013  020C                     	;# 
  2014  020D                     	;# 
  2015  020E                     	;# 
  2016  0211                     	;# 
  2017  0211                     	;# 
  2018  0212                     	;# 
  2019  0212                     	;# 
  2020  0213                     	;# 
  2021  0213                     	;# 
  2022  0214                     	;# 
  2023  0214                     	;# 
  2024  0215                     	;# 
  2025  0215                     	;# 
  2026  0215                     	;# 
  2027  0215                     	;# 
  2028  0216                     	;# 
  2029  0216                     	;# 
  2030  0217                     	;# 
  2031  0217                     	;# 
  2032  028C                     	;# 
  2033  028D                     	;# 
  2034  028E                     	;# 
  2035  0291                     	;# 
  2036  0291                     	;# 
  2037  0292                     	;# 
  2038  0293                     	;# 
  2039  0294                     	;# 
  2040  0298                     	;# 
  2041  0298                     	;# 
  2042  0299                     	;# 
  2043  029A                     	;# 
  2044  029B                     	;# 
  2045  029E                     	;# 
  2046  030C                     	;# 
  2047  030D                     	;# 
  2048  030E                     	;# 
  2049  038C                     	;# 
  2050  038D                     	;# 
  2051  038E                     	;# 
  2052  0391                     	;# 
  2053  0392                     	;# 
  2054  0393                     	;# 
  2055  0394                     	;# 
  2056  0395                     	;# 
  2057  0396                     	;# 
  2058  0397                     	;# 
  2059  0398                     	;# 
  2060  0399                     	;# 
  2061  040E                     	;# 
  2062  0413                     	;# 
  2063  0413                     	;# 
  2064  0414                     	;# 
  2065  0414                     	;# 
  2066  0415                     	;# 
  2067  0416                     	;# 
  2068  0417                     	;# 
  2069  0418                     	;# 
  2070  041A                     	;# 
  2071  041A                     	;# 
  2072  041B                     	;# 
  2073  041B                     	;# 
  2074  041C                     	;# 
  2075  041D                     	;# 
  2076  041E                     	;# 
  2077  041F                     	;# 
  2078  0493                     	;# 
  2079  0494                     	;# 
  2080  0495                     	;# 
  2081  0496                     	;# 
  2082  049A                     	;# 
  2083  049B                     	;# 
  2084  049C                     	;# 
  2085  049D                     	;# 
  2086  058C                     	;# 
  2087  058C                     	;# 
  2088  058D                     	;# 
  2089  058E                     	;# 
  2090  058E                     	;# 
  2091  058F                     	;# 
  2092  0590                     	;# 
  2093  0590                     	;# 
  2094  0591                     	;# 
  2095  0592                     	;# 
  2096  0592                     	;# 
  2097  0593                     	;# 
  2098  0594                     	;# 
  2099  0594                     	;# 
  2100  0595                     	;# 
  2101  0596                     	;# 
  2102  0596                     	;# 
  2103  0597                     	;# 
  2104  0598                     	;# 
  2105  0599                     	;# 
  2106  059A                     	;# 
  2107  059B                     	;# 
  2108  059B                     	;# 
  2109  059C                     	;# 
  2110  059D                     	;# 
  2111  060C                     	;# 
  2112  060C                     	;# 
  2113  060D                     	;# 
  2114  060E                     	;# 
  2115  060F                     	;# 
  2116  060F                     	;# 
  2117  0610                     	;# 
  2118  0611                     	;# 
  2119  0612                     	;# 
  2120  0613                     	;# 
  2121  0614                     	;# 
  2122  0617                     	;# 
  2123  0617                     	;# 
  2124  0618                     	;# 
  2125  0619                     	;# 
  2126  061A                     	;# 
  2127  061A                     	;# 
  2128  061B                     	;# 
  2129  061C                     	;# 
  2130  0691                     	;# 
  2131  0692                     	;# 
  2132  0693                     	;# 
  2133  0694                     	;# 
  2134  0695                     	;# 
  2135  0696                     	;# 
  2136  0697                     	;# 
  2137  0699                     	;# 
  2138  069A                     	;# 
  2139  0711                     	;# 
  2140  0712                     	;# 
  2141  0713                     	;# 
  2142  0714                     	;# 
  2143  0715                     	;# 
  2144  0718                     	;# 
  2145  0718                     	;# 
  2146  0719                     	;# 
  2147  071A                     	;# 
  2148  071A                     	;# 
  2149  071B                     	;# 
  2150  071C                     	;# 
  2151  071D                     	;# 
  2152  0791                     	;# 
  2153  0791                     	;# 
  2154  0792                     	;# 
  2155  0793                     	;# 
  2156  0793                     	;# 
  2157  0794                     	;# 
  2158  0795                     	;# 
  2159  0795                     	;# 
  2160  0796                     	;# 
  2161  0797                     	;# 
  2162  0797                     	;# 
  2163  0798                     	;# 
  2164  0799                     	;# 
  2165  079A                     	;# 
  2166  080C                     	;# 
  2167  080C                     	;# 
  2168  080D                     	;# 
  2169  080E                     	;# 
  2170  080E                     	;# 
  2171  080F                     	;# 
  2172  0810                     	;# 
  2173  0810                     	;# 
  2174  0811                     	;# 
  2175  0812                     	;# 
  2176  0812                     	;# 
  2177  0813                     	;# 
  2178  0814                     	;# 
  2179  0815                     	;# 
  2180  0816                     	;# 
  2181  0817                     	;# 
  2182  0818                     	;# 
  2183  0819                     	;# 
  2184  081A                     	;# 
  2185  081A                     	;# 
  2186  081B                     	;# 
  2187  081C                     	;# 
  2188  081C                     	;# 
  2189  081D                     	;# 
  2190  088C                     	;# 
  2191  088D                     	;# 
  2192  088E                     	;# 
  2193  088F                     	;# 
  2194  088F                     	;# 
  2195  0890                     	;# 
  2196  0891                     	;# 
  2197  0892                     	;# 
  2198  0893                     	;# 
  2199  0893                     	;# 
  2200  0894                     	;# 
  2201  0895                     	;# 
  2202  0896                     	;# 
  2203  0897                     	;# 
  2204  0897                     	;# 
  2205  0898                     	;# 
  2206  0899                     	;# 
  2207  0D8C                     	;# 
  2208  0D8C                     	;# 
  2209  0D8D                     	;# 
  2210  0D8E                     	;# 
  2211  0D8F                     	;# 
  2212  0D8F                     	;# 
  2213  0D90                     	;# 
  2214  0D91                     	;# 
  2215  0D92                     	;# 
  2216  0D92                     	;# 
  2217  0D93                     	;# 
  2218  0D94                     	;# 
  2219  0D95                     	;# 
  2220  0D95                     	;# 
  2221  0D96                     	;# 
  2222  0D97                     	;# 
  2223  0D98                     	;# 
  2224  0D99                     	;# 
  2225  0D9A                     	;# 
  2226  0D9B                     	;# 
  2227  0D9C                     	;# 
  2228  0D9D                     	;# 
  2229  0D9E                     	;# 
  2230  0D9E                     	;# 
  2231  0D9F                     	;# 
  2232  0DA0                     	;# 
  2233  0DA1                     	;# 
  2234  0DA1                     	;# 
  2235  0DA2                     	;# 
  2236  0DA3                     	;# 
  2237  0DA4                     	;# 
  2238  0DA4                     	;# 
  2239  0DA5                     	;# 
  2240  0DA6                     	;# 
  2241  0DA7                     	;# 
  2242  0DA7                     	;# 
  2243  0DA8                     	;# 
  2244  0DA9                     	;# 
  2245  0DAA                     	;# 
  2246  0DAB                     	;# 
  2247  0DAC                     	;# 
  2248  0DAD                     	;# 
  2249  0DAE                     	;# 
  2250  0DAF                     	;# 
  2251  0E0F                     	;# 
  2252  0E10                     	;# 
  2253  0E11                     	;# 
  2254  0E12                     	;# 
  2255  0E13                     	;# 
  2256  0E14                     	;# 
  2257  0E15                     	;# 
  2258  0E16                     	;# 
  2259  0E17                     	;# 
  2260  0E18                     	;# 
  2261  0E19                     	;# 
  2262  0E1A                     	;# 
  2263  0E1B                     	;# 
  2264  0E1C                     	;# 
  2265  0E1D                     	;# 
  2266  0E1E                     	;# 
  2267  0E1F                     	;# 
  2268  0E20                     	;# 
  2269  0E21                     	;# 
  2270  0E22                     	;# 
  2271  0E23                     	;# 
  2272  0E24                     	;# 
  2273  0E25                     	;# 
  2274  0E26                     	;# 
  2275  0E27                     	;# 
  2276  0E28                     	;# 
  2277  0E29                     	;# 
  2278  0E2A                     	;# 
  2279  0E2B                     	;# 
  2280  0E2C                     	;# 
  2281  0E2D                     	;# 
  2282  0E2E                     	;# 
  2283  0E90                     	;# 
  2284  0E91                     	;# 
  2285  0E92                     	;# 
  2286  0E94                     	;# 
  2287  0E95                     	;# 
  2288  0E9C                     	;# 
  2289  0E9D                     	;# 
  2290  0E9E                     	;# 
  2291  0E9F                     	;# 
  2292  0EA0                     	;# 
  2293  0EA1                     	;# 
  2294  0EA2                     	;# 
  2295  0EA3                     	;# 
  2296  0EA4                     	;# 
  2297  0EA5                     	;# 
  2298  0EA6                     	;# 
  2299  0EA7                     	;# 
  2300  0F0F                     	;# 
  2301  0F10                     	;# 
  2302  0F11                     	;# 
  2303  0F12                     	;# 
  2304  0F13                     	;# 
  2305  0F14                     	;# 
  2306  0F15                     	;# 
  2307  0F16                     	;# 
  2308  0F17                     	;# 
  2309  0F18                     	;# 
  2310  0F19                     	;# 
  2311  0F1A                     	;# 
  2312  0F1B                     	;# 
  2313  0F1C                     	;# 
  2314  0F1D                     	;# 
  2315  0F1E                     	;# 
  2316  0F1F                     	;# 
  2317  0F20                     	;# 
  2318  0F21                     	;# 
  2319  0F22                     	;# 
  2320  0F23                     	;# 
  2321  0F24                     	;# 
  2322  0F25                     	;# 
  2323  0F26                     	;# 
  2324  0F27                     	;# 
  2325  0F28                     	;# 
  2326  0F29                     	;# 
  2327  0F2A                     	;# 
  2328  0F2B                     	;# 
  2329  0F2C                     	;# 
  2330  0F2D                     	;# 
  2331  0F2E                     	;# 
  2332  0F2F                     	;# 
  2333  0F30                     	;# 
  2334  0F31                     	;# 
  2335  0F32                     	;# 
  2336  0F33                     	;# 
  2337  0F34                     	;# 
  2338  0F35                     	;# 
  2339  0F36                     	;# 
  2340  0F37                     	;# 
  2341  0FE4                     	;# 
  2342  0FE5                     	;# 
  2343  0FE6                     	;# 
  2344  0FE7                     	;# 
  2345  0FE8                     	;# 
  2346  0FE9                     	;# 
  2347  0FEA                     	;# 
  2348  0FEB                     	;# 
  2349  0FED                     	;# 
  2350  0FEE                     	;# 
  2351  0FEF                     	;# 
  2352  0000                     	;# 
  2353  0001                     	;# 
  2354  0002                     	;# 
  2355  0003                     	;# 
  2356  0004                     	;# 
  2357  0005                     	;# 
  2358  0006                     	;# 
  2359  0007                     	;# 
  2360  0008                     	;# 
  2361  0009                     	;# 
  2362  000A                     	;# 
  2363  000B                     	;# 
  2364  000C                     	;# 
  2365  000D                     	;# 
  2366  000E                     	;# 
  2367  0010                     	;# 
  2368  0011                     	;# 
  2369  0012                     	;# 
  2370  0013                     	;# 
  2371  0014                     	;# 
  2372  0015                     	;# 
  2373  0016                     	;# 
  2374  0016                     	;# 
  2375  0017                     	;# 
  2376  0018                     	;# 
  2377  0019                     	;# 
  2378  001A                     	;# 
  2379  001A                     	;# 
  2380  001B                     	;# 
  2381  001B                     	;# 
  2382  001C                     	;# 
  2383  001D                     	;# 
  2384  001E                     	;# 
  2385  001F                     	;# 
  2386  008C                     	;# 
  2387  008D                     	;# 
  2388  008E                     	;# 
  2389  0090                     	;# 
  2390  0091                     	;# 
  2391  0092                     	;# 
  2392  0093                     	;# 
  2393  0094                     	;# 
  2394  0095                     	;# 
  2395  0096                     	;# 
  2396  0098                     	;# 
  2397  0099                     	;# 
  2398  009A                     	;# 
  2399  009B                     	;# 
  2400  009B                     	;# 
  2401  009C                     	;# 
  2402  009D                     	;# 
  2403  009E                     	;# 
  2404  009F                     	;# 
  2405  010C                     	;# 
  2406  010D                     	;# 
  2407  010E                     	;# 
  2408  0111                     	;# 
  2409  0112                     	;# 
  2410  0113                     	;# 
  2411  0114                     	;# 
  2412  0115                     	;# 
  2413  0116                     	;# 
  2414  0117                     	;# 
  2415  0118                     	;# 
  2416  0119                     	;# 
  2417  011C                     	;# 
  2418  018C                     	;# 
  2419  018D                     	;# 
  2420  018E                     	;# 
  2421  0191                     	;# 
  2422  0191                     	;# 
  2423  0192                     	;# 
  2424  0193                     	;# 
  2425  0193                     	;# 
  2426  0194                     	;# 
  2427  0195                     	;# 
  2428  0196                     	;# 
  2429  0197                     	;# 
  2430  0199                     	;# 
  2431  0199                     	;# 
  2432  0199                     	;# 
  2433  019A                     	;# 
  2434  019A                     	;# 
  2435  019A                     	;# 
  2436  019B                     	;# 
  2437  019B                     	;# 
  2438  019B                     	;# 
  2439  019B                     	;# 
  2440  019B                     	;# 
  2441  019C                     	;# 
  2442  019C                     	;# 
  2443  019C                     	;# 
  2444  019D                     	;# 
  2445  019D                     	;# 
  2446  019D                     	;# 
  2447  019E                     	;# 
  2448  019E                     	;# 
  2449  019E                     	;# 
  2450  019F                     	;# 
  2451  019F                     	;# 
  2452  019F                     	;# 
  2453  019F                     	;# 
  2454  019F                     	;# 
  2455  020C                     	;# 
  2456  020D                     	;# 
  2457  020E                     	;# 
  2458  0211                     	;# 
  2459  0211                     	;# 
  2460  0212                     	;# 
  2461  0212                     	;# 
  2462  0213                     	;# 
  2463  0213                     	;# 
  2464  0214                     	;# 
  2465  0214                     	;# 
  2466  0215                     	;# 
  2467  0215                     	;# 
  2468  0215                     	;# 
  2469  0215                     	;# 
  2470  0216                     	;# 
  2471  0216                     	;# 
  2472  0217                     	;# 
  2473  0217                     	;# 
  2474  028C                     	;# 
  2475  028D                     	;# 
  2476  028E                     	;# 
  2477  0291                     	;# 
  2478  0291                     	;# 
  2479  0292                     	;# 
  2480  0293                     	;# 
  2481  0294                     	;# 
  2482  0298                     	;# 
  2483  0298                     	;# 
  2484  0299                     	;# 
  2485  029A                     	;# 
  2486  029B                     	;# 
  2487  029E                     	;# 
  2488  030C                     	;# 
  2489  030D                     	;# 
  2490  030E                     	;# 
  2491  038C                     	;# 
  2492  038D                     	;# 
  2493  038E                     	;# 
  2494  0391                     	;# 
  2495  0392                     	;# 
  2496  0393                     	;# 
  2497  0394                     	;# 
  2498  0395                     	;# 
  2499  0396                     	;# 
  2500  0397                     	;# 
  2501  0398                     	;# 
  2502  0399                     	;# 
  2503  040E                     	;# 
  2504  0413                     	;# 
  2505  0413                     	;# 
  2506  0414                     	;# 
  2507  0414                     	;# 
  2508  0415                     	;# 
  2509  0416                     	;# 
  2510  0417                     	;# 
  2511  0418                     	;# 
  2512  041A                     	;# 
  2513  041A                     	;# 
  2514  041B                     	;# 
  2515  041B                     	;# 
  2516  041C                     	;# 
  2517  041D                     	;# 
  2518  041E                     	;# 
  2519  041F                     	;# 
  2520  0493                     	;# 
  2521  0494                     	;# 
  2522  0495                     	;# 
  2523  0496                     	;# 
  2524  049A                     	;# 
  2525  049B                     	;# 
  2526  049C                     	;# 
  2527  049D                     	;# 
  2528  058C                     	;# 
  2529  058C                     	;# 
  2530  058D                     	;# 
  2531  058E                     	;# 
  2532  058E                     	;# 
  2533  058F                     	;# 
  2534  0590                     	;# 
  2535  0590                     	;# 
  2536  0591                     	;# 
  2537  0592                     	;# 
  2538  0592                     	;# 
  2539  0593                     	;# 
  2540  0594                     	;# 
  2541  0594                     	;# 
  2542  0595                     	;# 
  2543  0596                     	;# 
  2544  0596                     	;# 
  2545  0597                     	;# 
  2546  0598                     	;# 
  2547  0599                     	;# 
  2548  059A                     	;# 
  2549  059B                     	;# 
  2550  059B                     	;# 
  2551  059C                     	;# 
  2552  059D                     	;# 
  2553  060C                     	;# 
  2554  060C                     	;# 
  2555  060D                     	;# 
  2556  060E                     	;# 
  2557  060F                     	;# 
  2558  060F                     	;# 
  2559  0610                     	;# 
  2560  0611                     	;# 
  2561  0612                     	;# 
  2562  0613                     	;# 
  2563  0614                     	;# 
  2564  0617                     	;# 
  2565  0617                     	;# 
  2566  0618                     	;# 
  2567  0619                     	;# 
  2568  061A                     	;# 
  2569  061A                     	;# 
  2570  061B                     	;# 
  2571  061C                     	;# 
  2572  0691                     	;# 
  2573  0692                     	;# 
  2574  0693                     	;# 
  2575  0694                     	;# 
  2576  0695                     	;# 
  2577  0696                     	;# 
  2578  0697                     	;# 
  2579  0699                     	;# 
  2580  069A                     	;# 
  2581  0711                     	;# 
  2582  0712                     	;# 
  2583  0713                     	;# 
  2584  0714                     	;# 
  2585  0715                     	;# 
  2586  0718                     	;# 
  2587  0718                     	;# 
  2588  0719                     	;# 
  2589  071A                     	;# 
  2590  071A                     	;# 
  2591  071B                     	;# 
  2592  071C                     	;# 
  2593  071D                     	;# 
  2594  0791                     	;# 
  2595  0791                     	;# 
  2596  0792                     	;# 
  2597  0793                     	;# 
  2598  0793                     	;# 
  2599  0794                     	;# 
  2600  0795                     	;# 
  2601  0795                     	;# 
  2602  0796                     	;# 
  2603  0797                     	;# 
  2604  0797                     	;# 
  2605  0798                     	;# 
  2606  0799                     	;# 
  2607  079A                     	;# 
  2608  080C                     	;# 
  2609  080C                     	;# 
  2610  080D                     	;# 
  2611  080E                     	;# 
  2612  080E                     	;# 
  2613  080F                     	;# 
  2614  0810                     	;# 
  2615  0810                     	;# 
  2616  0811                     	;# 
  2617  0812                     	;# 
  2618  0812                     	;# 
  2619  0813                     	;# 
  2620  0814                     	;# 
  2621  0815                     	;# 
  2622  0816                     	;# 
  2623  0817                     	;# 
  2624  0818                     	;# 
  2625  0819                     	;# 
  2626  081A                     	;# 
  2627  081A                     	;# 
  2628  081B                     	;# 
  2629  081C                     	;# 
  2630  081C                     	;# 
  2631  081D                     	;# 
  2632  088C                     	;# 
  2633  088D                     	;# 
  2634  088E                     	;# 
  2635  088F                     	;# 
  2636  088F                     	;# 
  2637  0890                     	;# 
  2638  0891                     	;# 
  2639  0892                     	;# 
  2640  0893                     	;# 
  2641  0893                     	;# 
  2642  0894                     	;# 
  2643  0895                     	;# 
  2644  0896                     	;# 
  2645  0897                     	;# 
  2646  0897                     	;# 
  2647  0898                     	;# 
  2648  0899                     	;# 
  2649  0D8C                     	;# 
  2650  0D8C                     	;# 
  2651  0D8D                     	;# 
  2652  0D8E                     	;# 
  2653  0D8F                     	;# 
  2654  0D8F                     	;# 
  2655  0D90                     	;# 
  2656  0D91                     	;# 
  2657  0D92                     	;# 
  2658  0D92                     	;# 
  2659  0D93                     	;# 
  2660  0D94                     	;# 
  2661  0D95                     	;# 
  2662  0D95                     	;# 
  2663  0D96                     	;# 
  2664  0D97                     	;# 
  2665  0D98                     	;# 
  2666  0D99                     	;# 
  2667  0D9A                     	;# 
  2668  0D9B                     	;# 
  2669  0D9C                     	;# 
  2670  0D9D                     	;# 
  2671  0D9E                     	;# 
  2672  0D9E                     	;# 
  2673  0D9F                     	;# 
  2674  0DA0                     	;# 
  2675  0DA1                     	;# 
  2676  0DA1                     	;# 
  2677  0DA2                     	;# 
  2678  0DA3                     	;# 
  2679  0DA4                     	;# 
  2680  0DA4                     	;# 
  2681  0DA5                     	;# 
  2682  0DA6                     	;# 
  2683  0DA7                     	;# 
  2684  0DA7                     	;# 
  2685  0DA8                     	;# 
  2686  0DA9                     	;# 
  2687  0DAA                     	;# 
  2688  0DAB                     	;# 
  2689  0DAC                     	;# 
  2690  0DAD                     	;# 
  2691  0DAE                     	;# 
  2692  0DAF                     	;# 
  2693  0E0F                     	;# 
  2694  0E10                     	;# 
  2695  0E11                     	;# 
  2696  0E12                     	;# 
  2697  0E13                     	;# 
  2698  0E14                     	;# 
  2699  0E15                     	;# 
  2700  0E16                     	;# 
  2701  0E17                     	;# 
  2702  0E18                     	;# 
  2703  0E19                     	;# 
  2704  0E1A                     	;# 
  2705  0E1B                     	;# 
  2706  0E1C                     	;# 
  2707  0E1D                     	;# 
  2708  0E1E                     	;# 
  2709  0E1F                     	;# 
  2710  0E20                     	;# 
  2711  0E21                     	;# 
  2712  0E22                     	;# 
  2713  0E23                     	;# 
  2714  0E24                     	;# 
  2715  0E25                     	;# 
  2716  0E26                     	;# 
  2717  0E27                     	;# 
  2718  0E28                     	;# 
  2719  0E29                     	;# 
  2720  0E2A                     	;# 
  2721  0E2B                     	;# 
  2722  0E2C                     	;# 
  2723  0E2D                     	;# 
  2724  0E2E                     	;# 
  2725  0E90                     	;# 
  2726  0E91                     	;# 
  2727  0E92                     	;# 
  2728  0E94                     	;# 
  2729  0E95                     	;# 
  2730  0E9C                     	;# 
  2731  0E9D                     	;# 
  2732  0E9E                     	;# 
  2733  0E9F                     	;# 
  2734  0EA0                     	;# 
  2735  0EA1                     	;# 
  2736  0EA2                     	;# 
  2737  0EA3                     	;# 
  2738  0EA4                     	;# 
  2739  0EA5                     	;# 
  2740  0EA6                     	;# 
  2741  0EA7                     	;# 
  2742  0F0F                     	;# 
  2743  0F10                     	;# 
  2744  0F11                     	;# 
  2745  0F12                     	;# 
  2746  0F13                     	;# 
  2747  0F14                     	;# 
  2748  0F15                     	;# 
  2749  0F16                     	;# 
  2750  0F17                     	;# 
  2751  0F18                     	;# 
  2752  0F19                     	;# 
  2753  0F1A                     	;# 
  2754  0F1B                     	;# 
  2755  0F1C                     	;# 
  2756  0F1D                     	;# 
  2757  0F1E                     	;# 
  2758  0F1F                     	;# 
  2759  0F20                     	;# 
  2760  0F21                     	;# 
  2761  0F22                     	;# 
  2762  0F23                     	;# 
  2763  0F24                     	;# 
  2764  0F25                     	;# 
  2765  0F26                     	;# 
  2766  0F27                     	;# 
  2767  0F28                     	;# 
  2768  0F29                     	;# 
  2769  0F2A                     	;# 
  2770  0F2B                     	;# 
  2771  0F2C                     	;# 
  2772  0F2D                     	;# 
  2773  0F2E                     	;# 
  2774  0F2F                     	;# 
  2775  0F30                     	;# 
  2776  0F31                     	;# 
  2777  0F32                     	;# 
  2778  0F33                     	;# 
  2779  0F34                     	;# 
  2780  0F35                     	;# 
  2781  0F36                     	;# 
  2782  0F37                     	;# 
  2783  0FE4                     	;# 
  2784  0FE5                     	;# 
  2785  0FE6                     	;# 
  2786  0FE7                     	;# 
  2787  0FE8                     	;# 
  2788  0FE9                     	;# 
  2789  0FEA                     	;# 
  2790  0FEB                     	;# 
  2791  0FED                     	;# 
  2792  0FEE                     	;# 
  2793  0FEF                     	;# 
  2794  0000                     	;# 
  2795  0001                     	;# 
  2796  0002                     	;# 
  2797  0003                     	;# 
  2798  0004                     	;# 
  2799  0005                     	;# 
  2800  0006                     	;# 
  2801  0007                     	;# 
  2802  0008                     	;# 
  2803  0009                     	;# 
  2804  000A                     	;# 
  2805  000B                     	;# 
  2806  000C                     	;# 
  2807  000D                     	;# 
  2808  000E                     	;# 
  2809  0010                     	;# 
  2810  0011                     	;# 
  2811  0012                     	;# 
  2812  0013                     	;# 
  2813  0014                     	;# 
  2814  0015                     	;# 
  2815  0016                     	;# 
  2816  0016                     	;# 
  2817  0017                     	;# 
  2818  0018                     	;# 
  2819  0019                     	;# 
  2820  001A                     	;# 
  2821  001A                     	;# 
  2822  001B                     	;# 
  2823  001B                     	;# 
  2824  001C                     	;# 
  2825  001D                     	;# 
  2826  001E                     	;# 
  2827  001F                     	;# 
  2828  008C                     	;# 
  2829  008D                     	;# 
  2830  008E                     	;# 
  2831  0090                     	;# 
  2832  0091                     	;# 
  2833  0092                     	;# 
  2834  0093                     	;# 
  2835  0094                     	;# 
  2836  0095                     	;# 
  2837  0096                     	;# 
  2838  0098                     	;# 
  2839  0099                     	;# 
  2840  009A                     	;# 
  2841  009B                     	;# 
  2842  009B                     	;# 
  2843  009C                     	;# 
  2844  009D                     	;# 
  2845  009E                     	;# 
  2846  009F                     	;# 
  2847  010C                     	;# 
  2848  010D                     	;# 
  2849  010E                     	;# 
  2850  0111                     	;# 
  2851  0112                     	;# 
  2852  0113                     	;# 
  2853  0114                     	;# 
  2854  0115                     	;# 
  2855  0116                     	;# 
  2856  0117                     	;# 
  2857  0118                     	;# 
  2858  0119                     	;# 
  2859  011C                     	;# 
  2860  018C                     	;# 
  2861  018D                     	;# 
  2862  018E                     	;# 
  2863  0191                     	;# 
  2864  0191                     	;# 
  2865  0192                     	;# 
  2866  0193                     	;# 
  2867  0193                     	;# 
  2868  0194                     	;# 
  2869  0195                     	;# 
  2870  0196                     	;# 
  2871  0197                     	;# 
  2872  0199                     	;# 
  2873  0199                     	;# 
  2874  0199                     	;# 
  2875  019A                     	;# 
  2876  019A                     	;# 
  2877  019A                     	;# 
  2878  019B                     	;# 
  2879  019B                     	;# 
  2880  019B                     	;# 
  2881  019B                     	;# 
  2882  019B                     	;# 
  2883  019C                     	;# 
  2884  019C                     	;# 
  2885  019C                     	;# 
  2886  019D                     	;# 
  2887  019D                     	;# 
  2888  019D                     	;# 
  2889  019E                     	;# 
  2890  019E                     	;# 
  2891  019E                     	;# 
  2892  019F                     	;# 
  2893  019F                     	;# 
  2894  019F                     	;# 
  2895  019F                     	;# 
  2896  019F                     	;# 
  2897  020C                     	;# 
  2898  020D                     	;# 
  2899  020E                     	;# 
  2900  0211                     	;# 
  2901  0211                     	;# 
  2902  0212                     	;# 
  2903  0212                     	;# 
  2904  0213                     	;# 
  2905  0213                     	;# 
  2906  0214                     	;# 
  2907  0214                     	;# 
  2908  0215                     	;# 
  2909  0215                     	;# 
  2910  0215                     	;# 
  2911  0215                     	;# 
  2912  0216                     	;# 
  2913  0216                     	;# 
  2914  0217                     	;# 
  2915  0217                     	;# 
  2916  028C                     	;# 
  2917  028D                     	;# 
  2918  028E                     	;# 
  2919  0291                     	;# 
  2920  0291                     	;# 
  2921  0292                     	;# 
  2922  0293                     	;# 
  2923  0294                     	;# 
  2924  0298                     	;# 
  2925  0298                     	;# 
  2926  0299                     	;# 
  2927  029A                     	;# 
  2928  029B                     	;# 
  2929  029E                     	;# 
  2930  030C                     	;# 
  2931  030D                     	;# 
  2932  030E                     	;# 
  2933  038C                     	;# 
  2934  038D                     	;# 
  2935  038E                     	;# 
  2936  0391                     	;# 
  2937  0392                     	;# 
  2938  0393                     	;# 
  2939  0394                     	;# 
  2940  0395                     	;# 
  2941  0396                     	;# 
  2942  0397                     	;# 
  2943  0398                     	;# 
  2944  0399                     	;# 
  2945  040E                     	;# 
  2946  0413                     	;# 
  2947  0413                     	;# 
  2948  0414                     	;# 
  2949  0414                     	;# 
  2950  0415                     	;# 
  2951  0416                     	;# 
  2952  0417                     	;# 
  2953  0418                     	;# 
  2954  041A                     	;# 
  2955  041A                     	;# 
  2956  041B                     	;# 
  2957  041B                     	;# 
  2958  041C                     	;# 
  2959  041D                     	;# 
  2960  041E                     	;# 
  2961  041F                     	;# 
  2962  0493                     	;# 
  2963  0494                     	;# 
  2964  0495                     	;# 
  2965  0496                     	;# 
  2966  049A                     	;# 
  2967  049B                     	;# 
  2968  049C                     	;# 
  2969  049D                     	;# 
  2970  058C                     	;# 
  2971  058C                     	;# 
  2972  058D                     	;# 
  2973  058E                     	;# 
  2974  058E                     	;# 
  2975  058F                     	;# 
  2976  0590                     	;# 
  2977  0590                     	;# 
  2978  0591                     	;# 
  2979  0592                     	;# 
  2980  0592                     	;# 
  2981  0593                     	;# 
  2982  0594                     	;# 
  2983  0594                     	;# 
  2984  0595                     	;# 
  2985  0596                     	;# 
  2986  0596                     	;# 
  2987  0597                     	;# 
  2988  0598                     	;# 
  2989  0599                     	;# 
  2990  059A                     	;# 
  2991  059B                     	;# 
  2992  059B                     	;# 
  2993  059C                     	;# 
  2994  059D                     	;# 
  2995  060C                     	;# 
  2996  060C                     	;# 
  2997  060D                     	;# 
  2998  060E                     	;# 
  2999  060F                     	;# 
  3000  060F                     	;# 
  3001  0610                     	;# 
  3002  0611                     	;# 
  3003  0612                     	;# 
  3004  0613                     	;# 
  3005  0614                     	;# 
  3006  0617                     	;# 
  3007  0617                     	;# 
  3008  0618                     	;# 
  3009  0619                     	;# 
  3010  061A                     	;# 
  3011  061A                     	;# 
  3012  061B                     	;# 
  3013  061C                     	;# 
  3014  0691                     	;# 
  3015  0692                     	;# 
  3016  0693                     	;# 
  3017  0694                     	;# 
  3018  0695                     	;# 
  3019  0696                     	;# 
  3020  0697                     	;# 
  3021  0699                     	;# 
  3022  069A                     	;# 
  3023  0711                     	;# 
  3024  0712                     	;# 
  3025  0713                     	;# 
  3026  0714                     	;# 
  3027  0715                     	;# 
  3028  0718                     	;# 
  3029  0718                     	;# 
  3030  0719                     	;# 
  3031  071A                     	;# 
  3032  071A                     	;# 
  3033  071B                     	;# 
  3034  071C                     	;# 
  3035  071D                     	;# 
  3036  0791                     	;# 
  3037  0791                     	;# 
  3038  0792                     	;# 
  3039  0793                     	;# 
  3040  0793                     	;# 
  3041  0794                     	;# 
  3042  0795                     	;# 
  3043  0795                     	;# 
  3044  0796                     	;# 
  3045  0797                     	;# 
  3046  0797                     	;# 
  3047  0798                     	;# 
  3048  0799                     	;# 
  3049  079A                     	;# 
  3050  080C                     	;# 
  3051  080C                     	;# 
  3052  080D                     	;# 
  3053  080E                     	;# 
  3054  080E                     	;# 
  3055  080F                     	;# 
  3056  0810                     	;# 
  3057  0810                     	;# 
  3058  0811                     	;# 
  3059  0812                     	;# 
  3060  0812                     	;# 
  3061  0813                     	;# 
  3062  0814                     	;# 
  3063  0815                     	;# 
  3064  0816                     	;# 
  3065  0817                     	;# 
  3066  0818                     	;# 
  3067  0819                     	;# 
  3068  081A                     	;# 
  3069  081A                     	;# 
  3070  081B                     	;# 
  3071  081C                     	;# 
  3072  081C                     	;# 
  3073  081D                     	;# 
  3074  088C                     	;# 
  3075  088D                     	;# 
  3076  088E                     	;# 
  3077  088F                     	;# 
  3078  088F                     	;# 
  3079  0890                     	;# 
  3080  0891                     	;# 
  3081  0892                     	;# 
  3082  0893                     	;# 
  3083  0893                     	;# 
  3084  0894                     	;# 
  3085  0895                     	;# 
  3086  0896                     	;# 
  3087  0897                     	;# 
  3088  0897                     	;# 
  3089  0898                     	;# 
  3090  0899                     	;# 
  3091  0D8C                     	;# 
  3092  0D8C                     	;# 
  3093  0D8D                     	;# 
  3094  0D8E                     	;# 
  3095  0D8F                     	;# 
  3096  0D8F                     	;# 
  3097  0D90                     	;# 
  3098  0D91                     	;# 
  3099  0D92                     	;# 
  3100  0D92                     	;# 
  3101  0D93                     	;# 
  3102  0D94                     	;# 
  3103  0D95                     	;# 
  3104  0D95                     	;# 
  3105  0D96                     	;# 
  3106  0D97                     	;# 
  3107  0D98                     	;# 
  3108  0D99                     	;# 
  3109  0D9A                     	;# 
  3110  0D9B                     	;# 
  3111  0D9C                     	;# 
  3112  0D9D                     	;# 
  3113  0D9E                     	;# 
  3114  0D9E                     	;# 
  3115  0D9F                     	;# 
  3116  0DA0                     	;# 
  3117  0DA1                     	;# 
  3118  0DA1                     	;# 
  3119  0DA2                     	;# 
  3120  0DA3                     	;# 
  3121  0DA4                     	;# 
  3122  0DA4                     	;# 
  3123  0DA5                     	;# 
  3124  0DA6                     	;# 
  3125  0DA7                     	;# 
  3126  0DA7                     	;# 
  3127  0DA8                     	;# 
  3128  0DA9                     	;# 
  3129  0DAA                     	;# 
  3130  0DAB                     	;# 
  3131  0DAC                     	;# 
  3132  0DAD                     	;# 
  3133  0DAE                     	;# 
  3134  0DAF                     	;# 
  3135  0E0F                     	;# 
  3136  0E10                     	;# 
  3137  0E11                     	;# 
  3138  0E12                     	;# 
  3139  0E13                     	;# 
  3140  0E14                     	;# 
  3141  0E15                     	;# 
  3142  0E16                     	;# 
  3143  0E17                     	;# 
  3144  0E18                     	;# 
  3145  0E19                     	;# 
  3146  0E1A                     	;# 
  3147  0E1B                     	;# 
  3148  0E1C                     	;# 
  3149  0E1D                     	;# 
  3150  0E1E                     	;# 
  3151  0E1F                     	;# 
  3152  0E20                     	;# 
  3153  0E21                     	;# 
  3154  0E22                     	;# 
  3155  0E23                     	;# 
  3156  0E24                     	;# 
  3157  0E25                     	;# 
  3158  0E26                     	;# 
  3159  0E27                     	;# 
  3160  0E28                     	;# 
  3161  0E29                     	;# 
  3162  0E2A                     	;# 
  3163  0E2B                     	;# 
  3164  0E2C                     	;# 
  3165  0E2D                     	;# 
  3166  0E2E                     	;# 
  3167  0E90                     	;# 
  3168  0E91                     	;# 
  3169  0E92                     	;# 
  3170  0E94                     	;# 
  3171  0E95                     	;# 
  3172  0E9C                     	;# 
  3173  0E9D                     	;# 
  3174  0E9E                     	;# 
  3175  0E9F                     	;# 
  3176  0EA0                     	;# 
  3177  0EA1                     	;# 
  3178  0EA2                     	;# 
  3179  0EA3                     	;# 
  3180  0EA4                     	;# 
  3181  0EA5                     	;# 
  3182  0EA6                     	;# 
  3183  0EA7                     	;# 
  3184  0F0F                     	;# 
  3185  0F10                     	;# 
  3186  0F11                     	;# 
  3187  0F12                     	;# 
  3188  0F13                     	;# 
  3189  0F14                     	;# 
  3190  0F15                     	;# 
  3191  0F16                     	;# 
  3192  0F17                     	;# 
  3193  0F18                     	;# 
  3194  0F19                     	;# 
  3195  0F1A                     	;# 
  3196  0F1B                     	;# 
  3197  0F1C                     	;# 
  3198  0F1D                     	;# 
  3199  0F1E                     	;# 
  3200  0F1F                     	;# 
  3201  0F20                     	;# 
  3202  0F21                     	;# 
  3203  0F22                     	;# 
  3204  0F23                     	;# 
  3205  0F24                     	;# 
  3206  0F25                     	;# 
  3207  0F26                     	;# 
  3208  0F27                     	;# 
  3209  0F28                     	;# 
  3210  0F29                     	;# 
  3211  0F2A                     	;# 
  3212  0F2B                     	;# 
  3213  0F2C                     	;# 
  3214  0F2D                     	;# 
  3215  0F2E                     	;# 
  3216  0F2F                     	;# 
  3217  0F30                     	;# 
  3218  0F31                     	;# 
  3219  0F32                     	;# 
  3220  0F33                     	;# 
  3221  0F34                     	;# 
  3222  0F35                     	;# 
  3223  0F36                     	;# 
  3224  0F37                     	;# 
  3225  0FE4                     	;# 
  3226  0FE5                     	;# 
  3227  0FE6                     	;# 
  3228  0FE7                     	;# 
  3229  0FE8                     	;# 
  3230  0FE9                     	;# 
  3231  0FEA                     	;# 
  3232  0FEB                     	;# 
  3233  0FED                     	;# 
  3234  0FEE                     	;# 
  3235  0FEF                     	;# 
  3236  0000                     	;# 
  3237  0001                     	;# 
  3238  0002                     	;# 
  3239  0003                     	;# 
  3240  0004                     	;# 
  3241  0005                     	;# 
  3242  0006                     	;# 
  3243  0007                     	;# 
  3244  0008                     	;# 
  3245  0009                     	;# 
  3246  000A                     	;# 
  3247  000B                     	;# 
  3248  000C                     	;# 
  3249  000D                     	;# 
  3250  000E                     	;# 
  3251  0010                     	;# 
  3252  0011                     	;# 
  3253  0012                     	;# 
  3254  0013                     	;# 
  3255  0014                     	;# 
  3256  0015                     	;# 
  3257  0016                     	;# 
  3258  0016                     	;# 
  3259  0017                     	;# 
  3260  0018                     	;# 
  3261  0019                     	;# 
  3262  001A                     	;# 
  3263  001A                     	;# 
  3264  001B                     	;# 
  3265  001B                     	;# 
  3266  001C                     	;# 
  3267  001D                     	;# 
  3268  001E                     	;# 
  3269  001F                     	;# 
  3270  008C                     	;# 
  3271  008D                     	;# 
  3272  008E                     	;# 
  3273  0090                     	;# 
  3274  0091                     	;# 
  3275  0092                     	;# 
  3276  0093                     	;# 
  3277  0094                     	;# 
  3278  0095                     	;# 
  3279  0096                     	;# 
  3280  0098                     	;# 
  3281  0099                     	;# 
  3282  009A                     	;# 
  3283  009B                     	;# 
  3284  009B                     	;# 
  3285  009C                     	;# 
  3286  009D                     	;# 
  3287  009E                     	;# 
  3288  009F                     	;# 
  3289  010C                     	;# 
  3290  010D                     	;# 
  3291  010E                     	;# 
  3292  0111                     	;# 
  3293  0112                     	;# 
  3294  0113                     	;# 
  3295  0114                     	;# 
  3296  0115                     	;# 
  3297  0116                     	;# 
  3298  0117                     	;# 
  3299  0118                     	;# 
  3300  0119                     	;# 
  3301  011C                     	;# 
  3302  018C                     	;# 
  3303  018D                     	;# 
  3304  018E                     	;# 
  3305  0191                     	;# 
  3306  0191                     	;# 
  3307  0192                     	;# 
  3308  0193                     	;# 
  3309  0193                     	;# 
  3310  0194                     	;# 
  3311  0195                     	;# 
  3312  0196                     	;# 
  3313  0197                     	;# 
  3314  0199                     	;# 
  3315  0199                     	;# 
  3316  0199                     	;# 
  3317  019A                     	;# 
  3318  019A                     	;# 
  3319  019A                     	;# 
  3320  019B                     	;# 
  3321  019B                     	;# 
  3322  019B                     	;# 
  3323  019B                     	;# 
  3324  019B                     	;# 
  3325  019C                     	;# 
  3326  019C                     	;# 
  3327  019C                     	;# 
  3328  019D                     	;# 
  3329  019D                     	;# 
  3330  019D                     	;# 
  3331  019E                     	;# 
  3332  019E                     	;# 
  3333  019E                     	;# 
  3334  019F                     	;# 
  3335  019F                     	;# 
  3336  019F                     	;# 
  3337  019F                     	;# 
  3338  019F                     	;# 
  3339  020C                     	;# 
  3340  020D                     	;# 
  3341  020E                     	;# 
  3342  0211                     	;# 
  3343  0211                     	;# 
  3344  0212                     	;# 
  3345  0212                     	;# 
  3346  0213                     	;# 
  3347  0213                     	;# 
  3348  0214                     	;# 
  3349  0214                     	;# 
  3350  0215                     	;# 
  3351  0215                     	;# 
  3352  0215                     	;# 
  3353  0215                     	;# 
  3354  0216                     	;# 
  3355  0216                     	;# 
  3356  0217                     	;# 
  3357  0217                     	;# 
  3358  028C                     	;# 
  3359  028D                     	;# 
  3360  028E                     	;# 
  3361  0291                     	;# 
  3362  0291                     	;# 
  3363  0292                     	;# 
  3364  0293                     	;# 
  3365  0294                     	;# 
  3366  0298                     	;# 
  3367  0298                     	;# 
  3368  0299                     	;# 
  3369  029A                     	;# 
  3370  029B                     	;# 
  3371  029E                     	;# 
  3372  030C                     	;# 
  3373  030D                     	;# 
  3374  030E                     	;# 
  3375  038C                     	;# 
  3376  038D                     	;# 
  3377  038E                     	;# 
  3378  0391                     	;# 
  3379  0392                     	;# 
  3380  0393                     	;# 
  3381  0394                     	;# 
  3382  0395                     	;# 
  3383  0396                     	;# 
  3384  0397                     	;# 
  3385  0398                     	;# 
  3386  0399                     	;# 
  3387  040E                     	;# 
  3388  0413                     	;# 
  3389  0413                     	;# 
  3390  0414                     	;# 
  3391  0414                     	;# 
  3392  0415                     	;# 
  3393  0416                     	;# 
  3394  0417                     	;# 
  3395  0418                     	;# 
  3396  041A                     	;# 
  3397  041A                     	;# 
  3398  041B                     	;# 
  3399  041B                     	;# 
  3400  041C                     	;# 
  3401  041D                     	;# 
  3402  041E                     	;# 
  3403  041F                     	;# 
  3404  0493                     	;# 
  3405  0494                     	;# 
  3406  0495                     	;# 
  3407  0496                     	;# 
  3408  049A                     	;# 
  3409  049B                     	;# 
  3410  049C                     	;# 
  3411  049D                     	;# 
  3412  058C                     	;# 
  3413  058C                     	;# 
  3414  058D                     	;# 
  3415  058E                     	;# 
  3416  058E                     	;# 
  3417  058F                     	;# 
  3418  0590                     	;# 
  3419  0590                     	;# 
  3420  0591                     	;# 
  3421  0592                     	;# 
  3422  0592                     	;# 
  3423  0593                     	;# 
  3424  0594                     	;# 
  3425  0594                     	;# 
  3426  0595                     	;# 
  3427  0596                     	;# 
  3428  0596                     	;# 
  3429  0597                     	;# 
  3430  0598                     	;# 
  3431  0599                     	;# 
  3432  059A                     	;# 
  3433  059B                     	;# 
  3434  059B                     	;# 
  3435  059C                     	;# 
  3436  059D                     	;# 
  3437  060C                     	;# 
  3438  060C                     	;# 
  3439  060D                     	;# 
  3440  060E                     	;# 
  3441  060F                     	;# 
  3442  060F                     	;# 
  3443  0610                     	;# 
  3444  0611                     	;# 
  3445  0612                     	;# 
  3446  0613                     	;# 
  3447  0614                     	;# 
  3448  0617                     	;# 
  3449  0617                     	;# 
  3450  0618                     	;# 
  3451  0619                     	;# 
  3452  061A                     	;# 
  3453  061A                     	;# 
  3454  061B                     	;# 
  3455  061C                     	;# 
  3456  0691                     	;# 
  3457  0692                     	;# 
  3458  0693                     	;# 
  3459  0694                     	;# 
  3460  0695                     	;# 
  3461  0696                     	;# 
  3462  0697                     	;# 
  3463  0699                     	;# 
  3464  069A                     	;# 
  3465  0711                     	;# 
  3466  0712                     	;# 
  3467  0713                     	;# 
  3468  0714                     	;# 
  3469  0715                     	;# 
  3470  0718                     	;# 
  3471  0718                     	;# 
  3472  0719                     	;# 
  3473  071A                     	;# 
  3474  071A                     	;# 
  3475  071B                     	;# 
  3476  071C                     	;# 
  3477  071D                     	;# 
  3478  0791                     	;# 
  3479  0791                     	;# 
  3480  0792                     	;# 
  3481  0793                     	;# 
  3482  0793                     	;# 
  3483  0794                     	;# 
  3484  0795                     	;# 
  3485  0795                     	;# 
  3486  0796                     	;# 
  3487  0797                     	;# 
  3488  0797                     	;# 
  3489  0798                     	;# 
  3490  0799                     	;# 
  3491  079A                     	;# 
  3492  080C                     	;# 
  3493  080C                     	;# 
  3494  080D                     	;# 
  3495  080E                     	;# 
  3496  080E                     	;# 
  3497  080F                     	;# 
  3498  0810                     	;# 
  3499  0810                     	;# 
  3500  0811                     	;# 
  3501  0812                     	;# 
  3502  0812                     	;# 
  3503  0813                     	;# 
  3504  0814                     	;# 
  3505  0815                     	;# 
  3506  0816                     	;# 
  3507  0817                     	;# 
  3508  0818                     	;# 
  3509  0819                     	;# 
  3510  081A                     	;# 
  3511  081A                     	;# 
  3512  081B                     	;# 
  3513  081C                     	;# 
  3514  081C                     	;# 
  3515  081D                     	;# 
  3516  088C                     	;# 
  3517  088D                     	;# 
  3518  088E                     	;# 
  3519  088F                     	;# 
  3520  088F                     	;# 
  3521  0890                     	;# 
  3522  0891                     	;# 
  3523  0892                     	;# 
  3524  0893                     	;# 
  3525  0893                     	;# 
  3526  0894                     	;# 
  3527  0895                     	;# 
  3528  0896                     	;# 
  3529  0897                     	;# 
  3530  0897                     	;# 
  3531  0898                     	;# 
  3532  0899                     	;# 
  3533  0D8C                     	;# 
  3534  0D8C                     	;# 
  3535  0D8D                     	;# 
  3536  0D8E                     	;# 
  3537  0D8F                     	;# 
  3538  0D8F                     	;# 
  3539  0D90                     	;# 
  3540  0D91                     	;# 
  3541  0D92                     	;# 
  3542  0D92                     	;# 
  3543  0D93                     	;# 
  3544  0D94                     	;# 
  3545  0D95                     	;# 
  3546  0D95                     	;# 
  3547  0D96                     	;# 
  3548  0D97                     	;# 
  3549  0D98                     	;# 
  3550  0D99                     	;# 
  3551  0D9A                     	;# 
  3552  0D9B                     	;# 
  3553  0D9C                     	;# 
  3554  0D9D                     	;# 
  3555  0D9E                     	;# 
  3556  0D9E                     	;# 
  3557  0D9F                     	;# 
  3558  0DA0                     	;# 
  3559  0DA1                     	;# 
  3560  0DA1                     	;# 
  3561  0DA2                     	;# 
  3562  0DA3                     	;# 
  3563  0DA4                     	;# 
  3564  0DA4                     	;# 
  3565  0DA5                     	;# 
  3566  0DA6                     	;# 
  3567  0DA7                     	;# 
  3568  0DA7                     	;# 
  3569  0DA8                     	;# 
  3570  0DA9                     	;# 
  3571  0DAA                     	;# 
  3572  0DAB                     	;# 
  3573  0DAC                     	;# 
  3574  0DAD                     	;# 
  3575  0DAE                     	;# 
  3576  0DAF                     	;# 
  3577  0E0F                     	;# 
  3578  0E10                     	;# 
  3579  0E11                     	;# 
  3580  0E12                     	;# 
  3581  0E13                     	;# 
  3582  0E14                     	;# 
  3583  0E15                     	;# 
  3584  0E16                     	;# 
  3585  0E17                     	;# 
  3586  0E18                     	;# 
  3587  0E19                     	;# 
  3588  0E1A                     	;# 
  3589  0E1B                     	;# 
  3590  0E1C                     	;# 
  3591  0E1D                     	;# 
  3592  0E1E                     	;# 
  3593  0E1F                     	;# 
  3594  0E20                     	;# 
  3595  0E21                     	;# 
  3596  0E22                     	;# 
  3597  0E23                     	;# 
  3598  0E24                     	;# 
  3599  0E25                     	;# 
  3600  0E26                     	;# 
  3601  0E27                     	;# 
  3602  0E28                     	;# 
  3603  0E29                     	;# 
  3604  0E2A                     	;# 
  3605  0E2B                     	;# 
  3606  0E2C                     	;# 
  3607  0E2D                     	;# 
  3608  0E2E                     	;# 
  3609  0E90                     	;# 
  3610  0E91                     	;# 
  3611  0E92                     	;# 
  3612  0E94                     	;# 
  3613  0E95                     	;# 
  3614  0E9C                     	;# 
  3615  0E9D                     	;# 
  3616  0E9E                     	;# 
  3617  0E9F                     	;# 
  3618  0EA0                     	;# 
  3619  0EA1                     	;# 
  3620  0EA2                     	;# 
  3621  0EA3                     	;# 
  3622  0EA4                     	;# 
  3623  0EA5                     	;# 
  3624  0EA6                     	;# 
  3625  0EA7                     	;# 
  3626  0F0F                     	;# 
  3627  0F10                     	;# 
  3628  0F11                     	;# 
  3629  0F12                     	;# 
  3630  0F13                     	;# 
  3631  0F14                     	;# 
  3632  0F15                     	;# 
  3633  0F16                     	;# 
  3634  0F17                     	;# 
  3635  0F18                     	;# 
  3636  0F19                     	;# 
  3637  0F1A                     	;# 
  3638  0F1B                     	;# 
  3639  0F1C                     	;# 
  3640  0F1D                     	;# 
  3641  0F1E                     	;# 
  3642  0F1F                     	;# 
  3643  0F20                     	;# 
  3644  0F21                     	;# 
  3645  0F22                     	;# 
  3646  0F23                     	;# 
  3647  0F24                     	;# 
  3648  0F25                     	;# 
  3649  0F26                     	;# 
  3650  0F27                     	;# 
  3651  0F28                     	;# 
  3652  0F29                     	;# 
  3653  0F2A                     	;# 
  3654  0F2B                     	;# 
  3655  0F2C                     	;# 
  3656  0F2D                     	;# 
  3657  0F2E                     	;# 
  3658  0F2F                     	;# 
  3659  0F30                     	;# 
  3660  0F31                     	;# 
  3661  0F32                     	;# 
  3662  0F33                     	;# 
  3663  0F34                     	;# 
  3664  0F35                     	;# 
  3665  0F36                     	;# 
  3666  0F37                     	;# 
  3667  0FE4                     	;# 
  3668  0FE5                     	;# 
  3669  0FE6                     	;# 
  3670  0FE7                     	;# 
  3671  0FE8                     	;# 
  3672  0FE9                     	;# 
  3673  0FEA                     	;# 
  3674  0FEB                     	;# 
  3675  0FED                     	;# 
  3676  0FEE                     	;# 
  3677  0FEF                     	;# 
  3678  0000                     	;# 
  3679  0001                     	;# 
  3680  0002                     	;# 
  3681  0003                     	;# 
  3682  0004                     	;# 
  3683  0005                     	;# 
  3684  0006                     	;# 
  3685  0007                     	;# 
  3686  0008                     	;# 
  3687  0009                     	;# 
  3688  000A                     	;# 
  3689  000B                     	;# 
  3690  000C                     	;# 
  3691  000D                     	;# 
  3692  000E                     	;# 
  3693  0010                     	;# 
  3694  0011                     	;# 
  3695  0012                     	;# 
  3696  0013                     	;# 
  3697  0014                     	;# 
  3698  0015                     	;# 
  3699  0016                     	;# 
  3700  0016                     	;# 
  3701  0017                     	;# 
  3702  0018                     	;# 
  3703  0019                     	;# 
  3704  001A                     	;# 
  3705  001A                     	;# 
  3706  001B                     	;# 
  3707  001B                     	;# 
  3708  001C                     	;# 
  3709  001D                     	;# 
  3710  001E                     	;# 
  3711  001F                     	;# 
  3712  008C                     	;# 
  3713  008D                     	;# 
  3714  008E                     	;# 
  3715  0090                     	;# 
  3716  0091                     	;# 
  3717  0092                     	;# 
  3718  0093                     	;# 
  3719  0094                     	;# 
  3720  0095                     	;# 
  3721  0096                     	;# 
  3722  0098                     	;# 
  3723  0099                     	;# 
  3724  009A                     	;# 
  3725  009B                     	;# 
  3726  009B                     	;# 
  3727  009C                     	;# 
  3728  009D                     	;# 
  3729  009E                     	;# 
  3730  009F                     	;# 
  3731  010C                     	;# 
  3732  010D                     	;# 
  3733  010E                     	;# 
  3734  0111                     	;# 
  3735  0112                     	;# 
  3736  0113                     	;# 
  3737  0114                     	;# 
  3738  0115                     	;# 
  3739  0116                     	;# 
  3740  0117                     	;# 
  3741  0118                     	;# 
  3742  0119                     	;# 
  3743  011C                     	;# 
  3744  018C                     	;# 
  3745  018D                     	;# 
  3746  018E                     	;# 
  3747  0191                     	;# 
  3748  0191                     	;# 
  3749  0192                     	;# 
  3750  0193                     	;# 
  3751  0193                     	;# 
  3752  0194                     	;# 
  3753  0195                     	;# 
  3754  0196                     	;# 
  3755  0197                     	;# 
  3756  0199                     	;# 
  3757  0199                     	;# 
  3758  0199                     	;# 
  3759  019A                     	;# 
  3760  019A                     	;# 
  3761  019A                     	;# 
  3762  019B                     	;# 
  3763  019B                     	;# 
  3764  019B                     	;# 
  3765  019B                     	;# 
  3766  019B                     	;# 
  3767  019C                     	;# 
  3768  019C                     	;# 
  3769  019C                     	;# 
  3770  019D                     	;# 
  3771  019D                     	;# 
  3772  019D                     	;# 
  3773  019E                     	;# 
  3774  019E                     	;# 
  3775  019E                     	;# 
  3776  019F                     	;# 
  3777  019F                     	;# 
  3778  019F                     	;# 
  3779  019F                     	;# 
  3780  019F                     	;# 
  3781  020C                     	;# 
  3782  020D                     	;# 
  3783  020E                     	;# 
  3784  0211                     	;# 
  3785  0211                     	;# 
  3786  0212                     	;# 
  3787  0212                     	;# 
  3788  0213                     	;# 
  3789  0213                     	;# 
  3790  0214                     	;# 
  3791  0214                     	;# 
  3792  0215                     	;# 
  3793  0215                     	;# 
  3794  0215                     	;# 
  3795  0215                     	;# 
  3796  0216                     	;# 
  3797  0216                     	;# 
  3798  0217                     	;# 
  3799  0217                     	;# 
  3800  028C                     	;# 
  3801  028D                     	;# 
  3802  028E                     	;# 
  3803  0291                     	;# 
  3804  0291                     	;# 
  3805  0292                     	;# 
  3806  0293                     	;# 
  3807  0294                     	;# 
  3808  0298                     	;# 
  3809  0298                     	;# 
  3810  0299                     	;# 
  3811  029A                     	;# 
  3812  029B                     	;# 
  3813  029E                     	;# 
  3814  030C                     	;# 
  3815  030D                     	;# 
  3816  030E                     	;# 
  3817  038C                     	;# 
  3818  038D                     	;# 
  3819  038E                     	;# 
  3820  0391                     	;# 
  3821  0392                     	;# 
  3822  0393                     	;# 
  3823  0394                     	;# 
  3824  0395                     	;# 
  3825  0396                     	;# 
  3826  0397                     	;# 
  3827  0398                     	;# 
  3828  0399                     	;# 
  3829  040E                     	;# 
  3830  0413                     	;# 
  3831  0413                     	;# 
  3832  0414                     	;# 
  3833  0414                     	;# 
  3834  0415                     	;# 
  3835  0416                     	;# 
  3836  0417                     	;# 
  3837  0418                     	;# 
  3838  041A                     	;# 
  3839  041A                     	;# 
  3840  041B                     	;# 
  3841  041B                     	;# 
  3842  041C                     	;# 
  3843  041D                     	;# 
  3844  041E                     	;# 
  3845  041F                     	;# 
  3846  0493                     	;# 
  3847  0494                     	;# 
  3848  0495                     	;# 
  3849  0496                     	;# 
  3850  049A                     	;# 
  3851  049B                     	;# 
  3852  049C                     	;# 
  3853  049D                     	;# 
  3854  058C                     	;# 
  3855  058C                     	;# 
  3856  058D                     	;# 
  3857  058E                     	;# 
  3858  058E                     	;# 
  3859  058F                     	;# 
  3860  0590                     	;# 
  3861  0590                     	;# 
  3862  0591                     	;# 
  3863  0592                     	;# 
  3864  0592                     	;# 
  3865  0593                     	;# 
  3866  0594                     	;# 
  3867  0594                     	;# 
  3868  0595                     	;# 
  3869  0596                     	;# 
  3870  0596                     	;# 
  3871  0597                     	;# 
  3872  0598                     	;# 
  3873  0599                     	;# 
  3874  059A                     	;# 
  3875  059B                     	;# 
  3876  059B                     	;# 
  3877  059C                     	;# 
  3878  059D                     	;# 
  3879  060C                     	;# 
  3880  060C                     	;# 
  3881  060D                     	;# 
  3882  060E                     	;# 
  3883  060F                     	;# 
  3884  060F                     	;# 
  3885  0610                     	;# 
  3886  0611                     	;# 
  3887  0612                     	;# 
  3888  0613                     	;# 
  3889  0614                     	;# 
  3890  0617                     	;# 
  3891  0617                     	;# 
  3892  0618                     	;# 
  3893  0619                     	;# 
  3894  061A                     	;# 
  3895  061A                     	;# 
  3896  061B                     	;# 
  3897  061C                     	;# 
  3898  0691                     	;# 
  3899  0692                     	;# 
  3900  0693                     	;# 
  3901  0694                     	;# 
  3902  0695                     	;# 
  3903  0696                     	;# 
  3904  0697                     	;# 
  3905  0699                     	;# 
  3906  069A                     	;# 
  3907  0711                     	;# 
  3908  0712                     	;# 
  3909  0713                     	;# 
  3910  0714                     	;# 
  3911  0715                     	;# 
  3912  0718                     	;# 
  3913  0718                     	;# 
  3914  0719                     	;# 
  3915  071A                     	;# 
  3916  071A                     	;# 
  3917  071B                     	;# 
  3918  071C                     	;# 
  3919  071D                     	;# 
  3920  0791                     	;# 
  3921  0791                     	;# 
  3922  0792                     	;# 
  3923  0793                     	;# 
  3924  0793                     	;# 
  3925  0794                     	;# 
  3926  0795                     	;# 
  3927  0795                     	;# 
  3928  0796                     	;# 
  3929  0797                     	;# 
  3930  0797                     	;# 
  3931  0798                     	;# 
  3932  0799                     	;# 
  3933  079A                     	;# 
  3934  080C                     	;# 
  3935  080C                     	;# 
  3936  080D                     	;# 
  3937  080E                     	;# 
  3938  080E                     	;# 
  3939  080F                     	;# 
  3940  0810                     	;# 
  3941  0810                     	;# 
  3942  0811                     	;# 
  3943  0812                     	;# 
  3944  0812                     	;# 
  3945  0813                     	;# 
  3946  0814                     	;# 
  3947  0815                     	;# 
  3948  0816                     	;# 
  3949  0817                     	;# 
  3950  0818                     	;# 
  3951  0819                     	;# 
  3952  081A                     	;# 
  3953  081A                     	;# 
  3954  081B                     	;# 
  3955  081C                     	;# 
  3956  081C                     	;# 
  3957  081D                     	;# 
  3958  088C                     	;# 
  3959  088D                     	;# 
  3960  088E                     	;# 
  3961  088F                     	;# 
  3962  088F                     	;# 
  3963  0890                     	;# 
  3964  0891                     	;# 
  3965  0892                     	;# 
  3966  0893                     	;# 
  3967  0893                     	;# 
  3968  0894                     	;# 
  3969  0895                     	;# 
  3970  0896                     	;# 
  3971  0897                     	;# 
  3972  0897                     	;# 
  3973  0898                     	;# 
  3974  0899                     	;# 
  3975  0D8C                     	;# 
  3976  0D8C                     	;# 
  3977  0D8D                     	;# 
  3978  0D8E                     	;# 
  3979  0D8F                     	;# 
  3980  0D8F                     	;# 
  3981  0D90                     	;# 
  3982  0D91                     	;# 
  3983  0D92                     	;# 
  3984  0D92                     	;# 
  3985  0D93                     	;# 
  3986  0D94                     	;# 
  3987  0D95                     	;# 
  3988  0D95                     	;# 
  3989  0D96                     	;# 
  3990  0D97                     	;# 
  3991  0D98                     	;# 
  3992  0D99                     	;# 
  3993  0D9A                     	;# 
  3994  0D9B                     	;# 
  3995  0D9C                     	;# 
  3996  0D9D                     	;# 
  3997  0D9E                     	;# 
  3998  0D9E                     	;# 
  3999  0D9F                     	;# 
  4000  0DA0                     	;# 
  4001  0DA1                     	;# 
  4002  0DA1                     	;# 
  4003  0DA2                     	;# 
  4004  0DA3                     	;# 
  4005  0DA4                     	;# 
  4006  0DA4                     	;# 
  4007  0DA5                     	;# 
  4008  0DA6                     	;# 
  4009  0DA7                     	;# 
  4010  0DA7                     	;# 
  4011  0DA8                     	;# 
  4012  0DA9                     	;# 
  4013  0DAA                     	;# 
  4014  0DAB                     	;# 
  4015  0DAC                     	;# 
  4016  0DAD                     	;# 
  4017  0DAE                     	;# 
  4018  0DAF                     	;# 
  4019  0E0F                     	;# 
  4020  0E10                     	;# 
  4021  0E11                     	;# 
  4022  0E12                     	;# 
  4023  0E13                     	;# 
  4024  0E14                     	;# 
  4025  0E15                     	;# 
  4026  0E16                     	;# 
  4027  0E17                     	;# 
  4028  0E18                     	;# 
  4029  0E19                     	;# 
  4030  0E1A                     	;# 
  4031  0E1B                     	;# 
  4032  0E1C                     	;# 
  4033  0E1D                     	;# 
  4034  0E1E                     	;# 
  4035  0E1F                     	;# 
  4036  0E20                     	;# 
  4037  0E21                     	;# 
  4038  0E22                     	;# 
  4039  0E23                     	;# 
  4040  0E24                     	;# 
  4041  0E25                     	;# 
  4042  0E26                     	;# 
  4043  0E27                     	;# 
  4044  0E28                     	;# 
  4045  0E29                     	;# 
  4046  0E2A                     	;# 
  4047  0E2B                     	;# 
  4048  0E2C                     	;# 
  4049  0E2D                     	;# 
  4050  0E2E                     	;# 
  4051  0E90                     	;# 
  4052  0E91                     	;# 
  4053  0E92                     	;# 
  4054  0E94                     	;# 
  4055  0E95                     	;# 
  4056  0E9C                     	;# 
  4057  0E9D                     	;# 
  4058  0E9E                     	;# 
  4059  0E9F                     	;# 
  4060  0EA0                     	;# 
  4061  0EA1                     	;# 
  4062  0EA2                     	;# 
  4063  0EA3                     	;# 
  4064  0EA4                     	;# 
  4065  0EA5                     	;# 
  4066  0EA6                     	;# 
  4067  0EA7                     	;# 
  4068  0F0F                     	;# 
  4069  0F10                     	;# 
  4070  0F11                     	;# 
  4071  0F12                     	;# 
  4072  0F13                     	;# 
  4073  0F14                     	;# 
  4074  0F15                     	;# 
  4075  0F16                     	;# 
  4076  0F17                     	;# 
  4077  0F18                     	;# 
  4078  0F19                     	;# 
  4079  0F1A                     	;# 
  4080  0F1B                     	;# 
  4081  0F1C                     	;# 
  4082  0F1D                     	;# 
  4083  0F1E                     	;# 
  4084  0F1F                     	;# 
  4085  0F20                     	;# 
  4086  0F21                     	;# 
  4087  0F22                     	;# 
  4088  0F23                     	;# 
  4089  0F24                     	;# 
  4090  0F25                     	;# 
  4091  0F26                     	;# 
  4092  0F27                     	;# 
  4093  0F28                     	;# 
  4094  0F29                     	;# 
  4095  0F2A                     	;# 
  4096  0F2B                     	;# 
  4097  0F2C                     	;# 
  4098  0F2D                     	;# 
  4099  0F2E                     	;# 
  4100  0F2F                     	;# 
  4101  0F30                     	;# 
  4102  0F31                     	;# 
  4103  0F32                     	;# 
  4104  0F33                     	;# 
  4105  0F34                     	;# 
  4106  0F35                     	;# 
  4107  0F36                     	;# 
  4108  0F37                     	;# 
  4109  0FE4                     	;# 
  4110  0FE5                     	;# 
  4111  0FE6                     	;# 
  4112  0FE7                     	;# 
  4113  0FE8                     	;# 
  4114  0FE9                     	;# 
  4115  0FEA                     	;# 
  4116  0FEB                     	;# 
  4117  0FED                     	;# 
  4118  0FEE                     	;# 
  4119  0FEF                     	;# 
  4120  0000                     	;# 
  4121  0001                     	;# 
  4122  0002                     	;# 
  4123  0003                     	;# 
  4124  0004                     	;# 
  4125  0005                     	;# 
  4126  0006                     	;# 
  4127  0007                     	;# 
  4128  0008                     	;# 
  4129  0009                     	;# 
  4130  000A                     	;# 
  4131  000B                     	;# 
  4132  000C                     	;# 
  4133  000D                     	;# 
  4134  000E                     	;# 
  4135  0010                     	;# 
  4136  0011                     	;# 
  4137  0012                     	;# 
  4138  0013                     	;# 
  4139  0014                     	;# 
  4140  0015                     	;# 
  4141  0016                     	;# 
  4142  0016                     	;# 
  4143  0017                     	;# 
  4144  0018                     	;# 
  4145  0019                     	;# 
  4146  001A                     	;# 
  4147  001A                     	;# 
  4148  001B                     	;# 
  4149  001B                     	;# 
  4150  001C                     	;# 
  4151  001D                     	;# 
  4152  001E                     	;# 
  4153  001F                     	;# 
  4154  008C                     	;# 
  4155  008D                     	;# 
  4156  008E                     	;# 
  4157  0090                     	;# 
  4158  0091                     	;# 
  4159  0092                     	;# 
  4160  0093                     	;# 
  4161  0094                     	;# 
  4162  0095                     	;# 
  4163  0096                     	;# 
  4164  0098                     	;# 
  4165  0099                     	;# 
  4166  009A                     	;# 
  4167  009B                     	;# 
  4168  009B                     	;# 
  4169  009C                     	;# 
  4170  009D                     	;# 
  4171  009E                     	;# 
  4172  009F                     	;# 
  4173  010C                     	;# 
  4174  010D                     	;# 
  4175  010E                     	;# 
  4176  0111                     	;# 
  4177  0112                     	;# 
  4178  0113                     	;# 
  4179  0114                     	;# 
  4180  0115                     	;# 
  4181  0116                     	;# 
  4182  0117                     	;# 
  4183  0118                     	;# 
  4184  0119                     	;# 
  4185  011C                     	;# 
  4186  018C                     	;# 
  4187  018D                     	;# 
  4188  018E                     	;# 
  4189  0191                     	;# 
  4190  0191                     	;# 
  4191  0192                     	;# 
  4192  0193                     	;# 
  4193  0193                     	;# 
  4194  0194                     	;# 
  4195  0195                     	;# 
  4196  0196                     	;# 
  4197  0197                     	;# 
  4198  0199                     	;# 
  4199  0199                     	;# 
  4200  0199                     	;# 
  4201  019A                     	;# 
  4202  019A                     	;# 
  4203  019A                     	;# 
  4204  019B                     	;# 
  4205  019B                     	;# 
  4206  019B                     	;# 
  4207  019B                     	;# 
  4208  019B                     	;# 
  4209  019C                     	;# 
  4210  019C                     	;# 
  4211  019C                     	;# 
  4212  019D                     	;# 
  4213  019D                     	;# 
  4214  019D                     	;# 
  4215  019E                     	;# 
  4216  019E                     	;# 
  4217  019E                     	;# 
  4218  019F                     	;# 
  4219  019F                     	;# 
  4220  019F                     	;# 
  4221  019F                     	;# 
  4222  019F                     	;# 
  4223  020C                     	;# 
  4224  020D                     	;# 
  4225  020E                     	;# 
  4226  0211                     	;# 
  4227  0211                     	;# 
  4228  0212                     	;# 
  4229  0212                     	;# 
  4230  0213                     	;# 
  4231  0213                     	;# 
  4232  0214                     	;# 
  4233  0214                     	;# 
  4234  0215                     	;# 
  4235  0215                     	;# 
  4236  0215                     	;# 
  4237  0215                     	;# 
  4238  0216                     	;# 
  4239  0216                     	;# 
  4240  0217                     	;# 
  4241  0217                     	;# 
  4242  028C                     	;# 
  4243  028D                     	;# 
  4244  028E                     	;# 
  4245  0291                     	;# 
  4246  0291                     	;# 
  4247  0292                     	;# 
  4248  0293                     	;# 
  4249  0294                     	;# 
  4250  0298                     	;# 
  4251  0298                     	;# 
  4252  0299                     	;# 
  4253  029A                     	;# 
  4254  029B                     	;# 
  4255  029E                     	;# 
  4256  030C                     	;# 
  4257  030D                     	;# 
  4258  030E                     	;# 
  4259  038C                     	;# 
  4260  038D                     	;# 
  4261  038E                     	;# 
  4262  0391                     	;# 
  4263  0392                     	;# 
  4264  0393                     	;# 
  4265  0394                     	;# 
  4266  0395                     	;# 
  4267  0396                     	;# 
  4268  0397                     	;# 
  4269  0398                     	;# 
  4270  0399                     	;# 
  4271  040E                     	;# 
  4272  0413                     	;# 
  4273  0413                     	;# 
  4274  0414                     	;# 
  4275  0414                     	;# 
  4276  0415                     	;# 
  4277  0416                     	;# 
  4278  0417                     	;# 
  4279  0418                     	;# 
  4280  041A                     	;# 
  4281  041A                     	;# 
  4282  041B                     	;# 
  4283  041B                     	;# 
  4284  041C                     	;# 
  4285  041D                     	;# 
  4286  041E                     	;# 
  4287  041F                     	;# 
  4288  0493                     	;# 
  4289  0494                     	;# 
  4290  0495                     	;# 
  4291  0496                     	;# 
  4292  049A                     	;# 
  4293  049B                     	;# 
  4294  049C                     	;# 
  4295  049D                     	;# 
  4296  058C                     	;# 
  4297  058C                     	;# 
  4298  058D                     	;# 
  4299  058E                     	;# 
  4300  058E                     	;# 
  4301  058F                     	;# 
  4302  0590                     	;# 
  4303  0590                     	;# 
  4304  0591                     	;# 
  4305  0592                     	;# 
  4306  0592                     	;# 
  4307  0593                     	;# 
  4308  0594                     	;# 
  4309  0594                     	;# 
  4310  0595                     	;# 
  4311  0596                     	;# 
  4312  0596                     	;# 
  4313  0597                     	;# 
  4314  0598                     	;# 
  4315  0599                     	;# 
  4316  059A                     	;# 
  4317  059B                     	;# 
  4318  059B                     	;# 
  4319  059C                     	;# 
  4320  059D                     	;# 
  4321  060C                     	;# 
  4322  060C                     	;# 
  4323  060D                     	;# 
  4324  060E                     	;# 
  4325  060F                     	;# 
  4326  060F                     	;# 
  4327  0610                     	;# 
  4328  0611                     	;# 
  4329  0612                     	;# 
  4330  0613                     	;# 
  4331  0614                     	;# 
  4332  0617                     	;# 
  4333  0617                     	;# 
  4334  0618                     	;# 
  4335  0619                     	;# 
  4336  061A                     	;# 
  4337  061A                     	;# 
  4338  061B                     	;# 
  4339  061C                     	;# 
  4340  0691                     	;# 
  4341  0692                     	;# 
  4342  0693                     	;# 
  4343  0694                     	;# 
  4344  0695                     	;# 
  4345  0696                     	;# 
  4346  0697                     	;# 
  4347  0699                     	;# 
  4348  069A                     	;# 
  4349  0711                     	;# 
  4350  0712                     	;# 
  4351  0713                     	;# 
  4352  0714                     	;# 
  4353  0715                     	;# 
  4354  0718                     	;# 
  4355  0718                     	;# 
  4356  0719                     	;# 
  4357  071A                     	;# 
  4358  071A                     	;# 
  4359  071B                     	;# 
  4360  071C                     	;# 
  4361  071D                     	;# 
  4362  0791                     	;# 
  4363  0791                     	;# 
  4364  0792                     	;# 
  4365  0793                     	;# 
  4366  0793                     	;# 
  4367  0794                     	;# 
  4368  0795                     	;# 
  4369  0795                     	;# 
  4370  0796                     	;# 
  4371  0797                     	;# 
  4372  0797                     	;# 
  4373  0798                     	;# 
  4374  0799                     	;# 
  4375  079A                     	;# 
  4376  080C                     	;# 
  4377  080C                     	;# 
  4378  080D                     	;# 
  4379  080E                     	;# 
  4380  080E                     	;# 
  4381  080F                     	;# 
  4382  0810                     	;# 
  4383  0810                     	;# 
  4384  0811                     	;# 
  4385  0812                     	;# 
  4386  0812                     	;# 
  4387  0813                     	;# 
  4388  0814                     	;# 
  4389  0815                     	;# 
  4390  0816                     	;# 
  4391  0817                     	;# 
  4392  0818                     	;# 
  4393  0819                     	;# 
  4394  081A                     	;# 
  4395  081A                     	;# 
  4396  081B                     	;# 
  4397  081C                     	;# 
  4398  081C                     	;# 
  4399  081D                     	;# 
  4400  088C                     	;# 
  4401  088D                     	;# 
  4402  088E                     	;# 
  4403  088F                     	;# 
  4404  088F                     	;# 
  4405  0890                     	;# 
  4406  0891                     	;# 
  4407  0892                     	;# 
  4408  0893                     	;# 
  4409  0893                     	;# 
  4410  0894                     	;# 
  4411  0895                     	;# 
  4412  0896                     	;# 
  4413  0897                     	;# 
  4414  0897                     	;# 
  4415  0898                     	;# 
  4416  0899                     	;# 
  4417  0D8C                     	;# 
  4418  0D8C                     	;# 
  4419  0D8D                     	;# 
  4420  0D8E                     	;# 
  4421  0D8F                     	;# 
  4422  0D8F                     	;# 
  4423  0D90                     	;# 
  4424  0D91                     	;# 
  4425  0D92                     	;# 
  4426  0D92                     	;# 
  4427  0D93                     	;# 
  4428  0D94                     	;# 
  4429  0D95                     	;# 
  4430  0D95                     	;# 
  4431  0D96                     	;# 
  4432  0D97                     	;# 
  4433  0D98                     	;# 
  4434  0D99                     	;# 
  4435  0D9A                     	;# 
  4436  0D9B                     	;# 
  4437  0D9C                     	;# 
  4438  0D9D                     	;# 
  4439  0D9E                     	;# 
  4440  0D9E                     	;# 
  4441  0D9F                     	;# 
  4442  0DA0                     	;# 
  4443  0DA1                     	;# 
  4444  0DA1                     	;# 
  4445  0DA2                     	;# 
  4446  0DA3                     	;# 
  4447  0DA4                     	;# 
  4448  0DA4                     	;# 
  4449  0DA5                     	;# 
  4450  0DA6                     	;# 
  4451  0DA7                     	;# 
  4452  0DA7                     	;# 
  4453  0DA8                     	;# 
  4454  0DA9                     	;# 
  4455  0DAA                     	;# 
  4456  0DAB                     	;# 
  4457  0DAC                     	;# 
  4458  0DAD                     	;# 
  4459  0DAE                     	;# 
  4460  0DAF                     	;# 
  4461  0E0F                     	;# 
  4462  0E10                     	;# 
  4463  0E11                     	;# 
  4464  0E12                     	;# 
  4465  0E13                     	;# 
  4466  0E14                     	;# 
  4467  0E15                     	;# 
  4468  0E16                     	;# 
  4469  0E17                     	;# 
  4470  0E18                     	;# 
  4471  0E19                     	;# 
  4472  0E1A                     	;# 
  4473  0E1B                     	;# 
  4474  0E1C                     	;# 
  4475  0E1D                     	;# 
  4476  0E1E                     	;# 
  4477  0E1F                     	;# 
  4478  0E20                     	;# 
  4479  0E21                     	;# 
  4480  0E22                     	;# 
  4481  0E23                     	;# 
  4482  0E24                     	;# 
  4483  0E25                     	;# 
  4484  0E26                     	;# 
  4485  0E27                     	;# 
  4486  0E28                     	;# 
  4487  0E29                     	;# 
  4488  0E2A                     	;# 
  4489  0E2B                     	;# 
  4490  0E2C                     	;# 
  4491  0E2D                     	;# 
  4492  0E2E                     	;# 
  4493  0E90                     	;# 
  4494  0E91                     	;# 
  4495  0E92                     	;# 
  4496  0E94                     	;# 
  4497  0E95                     	;# 
  4498  0E9C                     	;# 
  4499  0E9D                     	;# 
  4500  0E9E                     	;# 
  4501  0E9F                     	;# 
  4502  0EA0                     	;# 
  4503  0EA1                     	;# 
  4504  0EA2                     	;# 
  4505  0EA3                     	;# 
  4506  0EA4                     	;# 
  4507  0EA5                     	;# 
  4508  0EA6                     	;# 
  4509  0EA7                     	;# 
  4510  0F0F                     	;# 
  4511  0F10                     	;# 
  4512  0F11                     	;# 
  4513  0F12                     	;# 
  4514  0F13                     	;# 
  4515  0F14                     	;# 
  4516  0F15                     	;# 
  4517  0F16                     	;# 
  4518  0F17                     	;# 
  4519  0F18                     	;# 
  4520  0F19                     	;# 
  4521  0F1A                     	;# 
  4522  0F1B                     	;# 
  4523  0F1C                     	;# 
  4524  0F1D                     	;# 
  4525  0F1E                     	;# 
  4526  0F1F                     	;# 
  4527  0F20                     	;# 
  4528  0F21                     	;# 
  4529  0F22                     	;# 
  4530  0F23                     	;# 
  4531  0F24                     	;# 
  4532  0F25                     	;# 
  4533  0F26                     	;# 
  4534  0F27                     	;# 
  4535  0F28                     	;# 
  4536  0F29                     	;# 
  4537  0F2A                     	;# 
  4538  0F2B                     	;# 
  4539  0F2C                     	;# 
  4540  0F2D                     	;# 
  4541  0F2E                     	;# 
  4542  0F2F                     	;# 
  4543  0F30                     	;# 
  4544  0F31                     	;# 
  4545  0F32                     	;# 
  4546  0F33                     	;# 
  4547  0F34                     	;# 
  4548  0F35                     	;# 
  4549  0F36                     	;# 
  4550  0F37                     	;# 
  4551  0FE4                     	;# 
  4552  0FE5                     	;# 
  4553  0FE6                     	;# 
  4554  0FE7                     	;# 
  4555  0FE8                     	;# 
  4556  0FE9                     	;# 
  4557  0FEA                     	;# 
  4558  0FEB                     	;# 
  4559  0FED                     	;# 
  4560  0FEE                     	;# 
  4561  0FEF                     	;# 
  4562                           
  4563                           	psect	idataBANK2
  4564  0002                     __pidataBANK2:	
  4565                           
  4566                           ;initializer for _messages
  4567  0002  3420               	retlw	low (_message_start| (0+768))
  4568  0003  34A0               	retlw	low (_message_end| (0+768))
  4569                           
  4570                           	psect	idataBANK5
  4571  1B8E                     __pidataBANK5:	
  4572                           
  4573                           ;initializer for _setNavFlightMode
  4574  1B8E  34B5               	retlw	181
  4575  1B8F  3462               	retlw	98
  4576  1B90  3406               	retlw	6
  4577  1B91  3424               	retlw	36
  4578  1B92  3424               	retlw	36
  4579  1B93  3400               	retlw	0
  4580  1B94  34FF               	retlw	255
  4581  1B95  34FF               	retlw	255
  4582  1B96  3406               	retlw	6
  4583  1B97  3403               	retlw	3
  4584  1B98  3400               	retlw	0
  4585  1B99  3400               	retlw	0
  4586  1B9A  3400               	retlw	0
  4587  1B9B  3400               	retlw	0
  4588  1B9C  3410               	retlw	16
  4589  1B9D  3427               	retlw	39
  4590  1B9E  3400               	retlw	0
  4591  1B9F  3400               	retlw	0
  4592  1BA0  3405               	retlw	5
  4593  1BA1  3400               	retlw	0
  4594  1BA2  34FA               	retlw	250
  4595  1BA3  3400               	retlw	0
  4596  1BA4  34FA               	retlw	250
  4597  1BA5  3400               	retlw	0
  4598  1BA6  3464               	retlw	100
  4599  1BA7  3400               	retlw	0
  4600  1BA8  342C               	retlw	44
  4601  1BA9  3401               	retlw	1
  4602  1BAA  3400               	retlw	0
  4603  1BAB  3400               	retlw	0
  4604  1BAC  3400               	retlw	0
  4605  1BAD  3400               	retlw	0
  4606  1BAE  3400               	retlw	0
  4607  1BAF  3400               	retlw	0
  4608  1BB0  3400               	retlw	0
  4609  1BB1  3400               	retlw	0
  4610  1BB2  3400               	retlw	0
  4611  1BB3  3400               	retlw	0
  4612  1BB4  3400               	retlw	0
  4613  1BB5  3400               	retlw	0
  4614  1BB6  3400               	retlw	0
  4615  1BB7  3400               	retlw	0
  4616  1BB8  3416               	retlw	22
  4617  1BB9  34DC               	retlw	220
  4618                           
  4619                           	psect	nvBANK1
  4620  00EF                     __pnvBANK1:	
  4621  00EF                     _timer0ReloadVal:	
  4622  00EF                     	ds	1
  4623                           
  4624                           	psect	nvBANK2
  4625  016B                     __pnvBANK2:	
  4626  016B                     _TMR0_InterruptHandler:	
  4627  016B                     	ds	2
  4628  0015                     _TMR0	set	21
  4629  000B                     _INTCONbits	set	11
  4630  0010                     _PIR1bits	set	16
  4631  0095                     _OPTION_REG	set	149
  4632  0095                     _OPTION_REGbits	set	149
  4633  008E                     _TRISC	set	142
  4634  008D                     _TRISB	set	141
  4635  008C                     _TRISA	set	140
  4636  0098                     _OSCTUNE	set	152
  4637  0099                     _OSCCON	set	153
  4638  010E                     _LATCbits	set	270
  4639  010C                     _LATAbits	set	268
  4640  010E                     _LATC	set	270
  4641  010D                     _LATB	set	269
  4642  010C                     _LATA	set	268
  4643  0116                     _BORCON	set	278
  4644  019C                     _SPBRGH	set	412
  4645  019B                     _SPBRGL	set	411
  4646  019E                     _TX1STA	set	414
  4647  019D                     _RC1STA	set	413
  4648  019F                     _BAUD1CON	set	415
  4649  018C                     _ANSELA	set	396
  4650  018D                     _ANSELB	set	397
  4651  018E                     _ANSELC	set	398
  4652  0216                     _SSP1CON2bits	set	534
  4653  0211                     _SSP1BUF	set	529
  4654  0215                     _SSP1CON1bits	set	533
  4655  0212                     _SSP1ADD	set	530
  4656  0216                     _SSP1CON2	set	534
  4657  0215                     _SSP1CON1	set	533
  4658  0214                     _SSP1STAT	set	532
  4659  020E                     _WPUC	set	526
  4660  020C                     _WPUA	set	524
  4661  020D                     _WPUB	set	525
  4662  028E                     _ODCONC	set	654
  4663  028D                     _ODCONB	set	653
  4664  028C                     _ODCONA	set	652
  4665  030E                     _SLRCONC	set	782
  4666  030D                     _SLRCONB	set	781
  4667  030C                     _SLRCONA	set	780
  4668  0E21                     _SSPDATPPS	set	3617
  4669  0E20                     _SSPCLKPPS	set	3616
  4670  0E24                     _RXPPS	set	3620
  4671  0E9C                     _RB4PPS	set	3740
  4672  0E9E                     _RB6PPS	set	3742
  4673  0E9F                     _RB7PPS	set	3743
  4674                           
  4675                           	psect	stringtext1
  4676  1800                     __pstringtext1:	
  4677  1800                     STR_6:	
  4678  1800  3424               	retlw	36	;'$'
  4679  1801  3450               	retlw	80	;'P'
  4680  1802  3455               	retlw	85	;'U'
  4681  1803  3442               	retlw	66	;'B'
  4682  1804  3458               	retlw	88	;'X'
  4683  1805  342C               	retlw	44	;','
  4684  1806  3434               	retlw	52	;'4'
  4685  1807  3430               	retlw	48	;'0'
  4686  1808  342C               	retlw	44	;','
  4687  1809  3452               	retlw	82	;'R'
  4688  180A  344D               	retlw	77	;'M'
  4689  180B  3443               	retlw	67	;'C'
  4690  180C  342C               	retlw	44	;','
  4691  180D  3430               	retlw	48	;'0'
  4692  180E  342C               	retlw	44	;','
  4693  180F  3430               	retlw	48	;'0'
  4694  1810  342C               	retlw	44	;','
  4695  1811  3430               	retlw	48	;'0'
  4696  1812  342C               	retlw	44	;','
  4697  1813  3430               	retlw	48	;'0'
  4698  1814  342A               	retlw	42	;'*'
  4699  1815  3434               	retlw	52	;'4'
  4700  1816  3437               	retlw	55	;'7'
  4701  1817  340D               	retlw	13
  4702  1818  340A               	retlw	10
  4703  1819  3400               	retlw	0
  4704                           
  4705                           	psect	stringtext2
  4706  181A                     __pstringtext2:	
  4707  181A                     STR_4:	
  4708  181A  3424               	retlw	36	;'$'
  4709  181B  3450               	retlw	80	;'P'
  4710  181C  3455               	retlw	85	;'U'
  4711  181D  3442               	retlw	66	;'B'
  4712  181E  3458               	retlw	88	;'X'
  4713  181F  342C               	retlw	44	;','
  4714  1820  3434               	retlw	52	;'4'
  4715  1821  3430               	retlw	48	;'0'
  4716  1822  342C               	retlw	44	;','
  4717  1823  3447               	retlw	71	;'G'
  4718  1824  3453               	retlw	83	;'S'
  4719  1825  3456               	retlw	86	;'V'
  4720  1826  342C               	retlw	44	;','
  4721  1827  3430               	retlw	48	;'0'
  4722  1828  342C               	retlw	44	;','
  4723  1829  3430               	retlw	48	;'0'
  4724  182A  342C               	retlw	44	;','
  4725  182B  3430               	retlw	48	;'0'
  4726  182C  342C               	retlw	44	;','
  4727  182D  3430               	retlw	48	;'0'
  4728  182E  342A               	retlw	42	;'*'
  4729  182F  3435               	retlw	53	;'5'
  4730  1830  3439               	retlw	57	;'9'
  4731  1831  340D               	retlw	13
  4732  1832  340A               	retlw	10
  4733  1833  3400               	retlw	0
  4734                           
  4735                           	psect	stringtext3
  4736  1834                     __pstringtext3:	
  4737  1834                     STR_2:	
  4738  1834  3424               	retlw	36	;'$'
  4739  1835  3450               	retlw	80	;'P'
  4740  1836  3455               	retlw	85	;'U'
  4741  1837  3442               	retlw	66	;'B'
  4742  1838  3458               	retlw	88	;'X'
  4743  1839  342C               	retlw	44	;','
  4744  183A  3434               	retlw	52	;'4'
  4745  183B  3430               	retlw	48	;'0'
  4746  183C  342C               	retlw	44	;','
  4747  183D  3447               	retlw	71	;'G'
  4748  183E  3447               	retlw	71	;'G'
  4749  183F  3441               	retlw	65	;'A'
  4750  1840  342C               	retlw	44	;','
  4751  1841  3430               	retlw	48	;'0'
  4752  1842  342C               	retlw	44	;','
  4753  1843  3430               	retlw	48	;'0'
  4754  1844  342C               	retlw	44	;','
  4755  1845  3430               	retlw	48	;'0'
  4756  1846  342C               	retlw	44	;','
  4757  1847  3430               	retlw	48	;'0'
  4758  1848  342A               	retlw	42	;'*'
  4759  1849  3435               	retlw	53	;'5'
  4760  184A  3441               	retlw	65	;'A'
  4761  184B  340D               	retlw	13
  4762  184C  340A               	retlw	10
  4763  184D  3400               	retlw	0
  4764                           
  4765                           	psect	stringtext4
  4766  184E                     __pstringtext4:	
  4767  184E                     STR_1:	
  4768  184E  3424               	retlw	36	;'$'
  4769  184F  3450               	retlw	80	;'P'
  4770  1850  3455               	retlw	85	;'U'
  4771  1851  3442               	retlw	66	;'B'
  4772  1852  3458               	retlw	88	;'X'
  4773  1853  342C               	retlw	44	;','
  4774  1854  3434               	retlw	52	;'4'
  4775  1855  3430               	retlw	48	;'0'
  4776  1856  342C               	retlw	44	;','
  4777  1857  3447               	retlw	71	;'G'
  4778  1858  344C               	retlw	76	;'L'
  4779  1859  344C               	retlw	76	;'L'
  4780  185A  342C               	retlw	44	;','
  4781  185B  3430               	retlw	48	;'0'
  4782  185C  342C               	retlw	44	;','
  4783  185D  3430               	retlw	48	;'0'
  4784  185E  342C               	retlw	44	;','
  4785  185F  3430               	retlw	48	;'0'
  4786  1860  342C               	retlw	44	;','
  4787  1861  3430               	retlw	48	;'0'
  4788  1862  342A               	retlw	42	;'*'
  4789  1863  3435               	retlw	53	;'5'
  4790  1864  3443               	retlw	67	;'C'
  4791  1865  340D               	retlw	13
  4792  1866  340A               	retlw	10
  4793  1867  3400               	retlw	0
  4794                           
  4795                           	psect	stringtext5
  4796  1868                     __pstringtext5:	
  4797  1868                     STR_5:	
  4798  1868  3424               	retlw	36	;'$'
  4799  1869  3450               	retlw	80	;'P'
  4800  186A  3455               	retlw	85	;'U'
  4801  186B  3442               	retlw	66	;'B'
  4802  186C  3458               	retlw	88	;'X'
  4803  186D  342C               	retlw	44	;','
  4804  186E  3434               	retlw	52	;'4'
  4805  186F  3430               	retlw	48	;'0'
  4806  1870  342C               	retlw	44	;','
  4807  1871  3447               	retlw	71	;'G'
  4808  1872  3453               	retlw	83	;'S'
  4809  1873  3441               	retlw	65	;'A'
  4810  1874  342C               	retlw	44	;','
  4811  1875  3430               	retlw	48	;'0'
  4812  1876  342C               	retlw	44	;','
  4813  1877  3430               	retlw	48	;'0'
  4814  1878  342C               	retlw	44	;','
  4815  1879  3430               	retlw	48	;'0'
  4816  187A  342C               	retlw	44	;','
  4817  187B  3430               	retlw	48	;'0'
  4818  187C  342A               	retlw	42	;'*'
  4819  187D  3434               	retlw	52	;'4'
  4820  187E  3445               	retlw	69	;'E'
  4821  187F  340D               	retlw	13
  4822  1880  340A               	retlw	10
  4823  1881  3400               	retlw	0
  4824                           
  4825                           	psect	stringtext6
  4826  1882                     __pstringtext6:	
  4827  1882                     STR_3:	
  4828  1882  3424               	retlw	36	;'$'
  4829  1883  3450               	retlw	80	;'P'
  4830  1884  3455               	retlw	85	;'U'
  4831  1885  3442               	retlw	66	;'B'
  4832  1886  3458               	retlw	88	;'X'
  4833  1887  342C               	retlw	44	;','
  4834  1888  3434               	retlw	52	;'4'
  4835  1889  3430               	retlw	48	;'0'
  4836  188A  342C               	retlw	44	;','
  4837  188B  3456               	retlw	86	;'V'
  4838  188C  3454               	retlw	84	;'T'
  4839  188D  3447               	retlw	71	;'G'
  4840  188E  342C               	retlw	44	;','
  4841  188F  3430               	retlw	48	;'0'
  4842  1890  342C               	retlw	44	;','
  4843  1891  3430               	retlw	48	;'0'
  4844  1892  342C               	retlw	44	;','
  4845  1893  3430               	retlw	48	;'0'
  4846  1894  342C               	retlw	44	;','
  4847  1895  3430               	retlw	48	;'0'
  4848  1896  342A               	retlw	42	;'*'
  4849  1897  3435               	retlw	53	;'5'
  4850  1898  3445               	retlw	69	;'E'
  4851  1899  340D               	retlw	13
  4852  189A  340A               	retlw	10
  4853  189B  3400               	retlw	0
  4854                           
  4855                           	psect	stringtext7
  4856  189C                     __pstringtext7:	
  4857  189C                     STR_7:	
  4858  189C  3424               	retlw	36	;'$'
  4859  189D  3450               	retlw	80	;'P'
  4860  189E  3455               	retlw	85	;'U'
  4861  189F  3442               	retlw	66	;'B'
  4862  18A0  3458               	retlw	88	;'X'
  4863  18A1  342C               	retlw	44	;','
  4864  18A2  3430               	retlw	48	;'0'
  4865  18A3  3430               	retlw	48	;'0'
  4866  18A4  342A               	retlw	42	;'*'
  4867  18A5  3433               	retlw	51	;'3'
  4868  18A6  3433               	retlw	51	;'3'
  4869  18A7  340D               	retlw	13
  4870  18A8  340A               	retlw	10
  4871  18A9  3400               	retlw	0
  4872                           
  4873                           	psect	stringtext8
  4874  18AA                     __pstringtext8:	
  4875  18AA                     STR_11:	
  4876  18AA  3454               	retlw	84	;'T'
  4877  18AB  3445               	retlw	69	;'E'
  4878  18AC  3453               	retlw	83	;'S'
  4879  18AD  3454               	retlw	84	;'T'
  4880  18AE  342C               	retlw	44	;','
  4881  18AF  3400               	retlw	0
  4882                           
  4883                           	psect	stringtext9
  4884  18B0                     __pstringtext9:	
  4885  18B0                     STR_10:	
  4886  18B0  3454               	retlw	84	;'T'
  4887  18B1  3445               	retlw	69	;'E'
  4888  18B2  3453               	retlw	83	;'S'
  4889  18B3  3454               	retlw	84	;'T'
  4890  18B4  3400               	retlw	0
  4891                           
  4892                           	psect	stringtext10
  4893  18B5                     __pstringtext10:	
  4894  18B5                     STR_8:	
  4895  18B5  3450               	retlw	80	;'P'
  4896  18B6  3455               	retlw	85	;'U'
  4897  18B7  3442               	retlw	66	;'B'
  4898  18B8  3458               	retlw	88	;'X'
  4899  18B9  3400               	retlw	0
  4900                           
  4901                           	psect	stringtext11
  4902  18BA                     __pstringtext11:	
  4903  18BA                     STR_12:	
  4904  18BA  3424               	retlw	36	;'$'
  4905  18BB  3424               	retlw	36	;'$'
  4906  18BC  3400               	retlw	0
  4907                           
  4908                           	psect	stringtext12
  4909  0000                     __pstringtext12:	
  4910  18B5                     
  4911                           ; #config settings
  4912  0000                     
  4913                           	psect	cinit
  4914  000F                     start_initialization:	
  4915  000F                     __initialization:	
  4916                           
  4917                           ; Initialize objects allocated to BANK2
  4918  000F  0022               	movlb	2	; select bank2
  4919  0010  3180  2002  3180   	fcall	__pidataBANK2	;fetch initializer
  4920  0013  00ED               	movwf	__pdataBANK2& (0+127)
  4921  0014  3180  2003  3180   	fcall	__pidataBANK2+1	;fetch initializer
  4922  0017  00EE               	movwf	(__pdataBANK2+1)& (0+127)
  4923                           
  4924                           ; Initialize objects allocated to BANK5
  4925  0018  308E               	movlw	low __pidataBANK5
  4926  0019  0084               	movwf	4
  4927  001A  309B               	movlw	(high __pidataBANK5)| (0+128)
  4928  001B  0085               	movwf	5
  4929  001C  30A0               	movlw	low __pdataBANK5
  4930  001D  0086               	movwf	6
  4931  001E  3002               	movlw	high __pdataBANK5
  4932  001F  0087               	movwf	7
  4933  0020  302C               	movlw	44
  4934  0021  3199  2127  3180   	fcall	init_ram
  4935                           
  4936                           ; Clear objects allocated to BANK1
  4937  0024  0021               	movlb	1	; select bank1
  4938  0025  01EA               	clrf	__pbssBANK1& (0+127)
  4939  0026  01EB               	clrf	(__pbssBANK1+1)& (0+127)
  4940  0027  01EC               	clrf	(__pbssBANK1+2)& (0+127)
  4941  0028  01ED               	clrf	(__pbssBANK1+3)& (0+127)
  4942  0029  01EE               	clrf	(__pbssBANK1+4)& (0+127)
  4943                           
  4944                           ; Clear objects allocated to BANK2
  4945  002A  3058               	movlw	low __pbssBANK2
  4946  002B  0084               	movwf	4
  4947  002C  3001               	movlw	high __pbssBANK2
  4948  002D  0085               	movwf	5
  4949  002E  3013               	movlw	19
  4950  002F  3199  2121  3180   	fcall	clear_ram0
  4951                           
  4952                           ; Clear objects allocated to BANK3
  4953  0032  30A0               	movlw	low __pbssBANK3
  4954  0033  0084               	movwf	4
  4955  0034  3001               	movlw	high __pbssBANK3
  4956  0035  0085               	movwf	5
  4957  0036  3047               	movlw	71
  4958  0037  3199  2121  3180   	fcall	clear_ram0
  4959                           
  4960                           ; Clear objects allocated to BANK4
  4961  003A  3020               	movlw	low __pbssBANK4
  4962  003B  0084               	movwf	4
  4963  003C  3002               	movlw	high __pbssBANK4
  4964  003D  0085               	movwf	5
  4965  003E  3036               	movlw	54
  4966  003F  3199  2121  3180   	fcall	clear_ram0
  4967                           
  4968                           ; Clear objects allocated to BANK6
  4969  0042  3020               	movlw	low __pbssBANK6
  4970  0043  0084               	movwf	4
  4971  0044  3003               	movlw	high __pbssBANK6
  4972  0045  0085               	movwf	5
  4973  0046  3046               	movlw	70
  4974  0047  3199  2121  3180   	fcall	clear_ram0
  4975                           
  4976                           ; Clear objects allocated to BANK7
  4977  004A  30A0               	movlw	low __pbssBANK7
  4978  004B  0084               	movwf	4
  4979  004C  3003               	movlw	high __pbssBANK7
  4980  004D  0085               	movwf	5
  4981  004E  3049               	movlw	73
  4982  004F  3199  2121         	fcall	clear_ram0
  4983  0051                     end_of_initialization:	
  4984                           ;End of C runtime variable initialization code
  4985                           
  4986  0051                     __end_of__initialization:	
  4987  0051  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4988  0052  0020               	movlb	0
  4989  0053  3180  2855         	ljmp	_main	;jump to C main() function
  4990                           
  4991                           	psect	bssBANK1
  4992  00EA                     __pbssBANK1:	
  4993  00EA                     _ticks:	
  4994  00EA                     	ds	4
  4995  00EE                     _gps_configured:	
  4996  00EE                     	ds	1
  4997                           
  4998                           	psect	bssBANK2
  4999  0158                     __pbssBANK2:	
  5000  0158                     GetNavData@F10077:	
  5001  0158                     	ds	7
  5002  015F                     ___g_timeout_start:	
  5003  015F                     	ds	4
  5004  0163                     _id:	
  5005  0163                     	ds	2
  5006  0165                     _checksum:	
  5007  0165                     	ds	6
  5008                           
  5009                           	psect	dataBANK2
  5010  016D                     __pdataBANK2:	
  5011  016D                     _messages:	
  5012  016D                     	ds	2
  5013                           
  5014                           	psect	bssBANK3
  5015  01A0                     __pbssBANK3:	
  5016  01A0                     bme280_get_sensor_data@F273:	
  5017  01A0                     	ds	12
  5018  01AC                     bme280_get_sensor_data@F271:	
  5019  01AC                     	ds	8
  5020  01B4                     _EnvSensor:	
  5021  01B4                     	ds	51
  5022                           
  5023                           	psect	bssBANK4
  5024  0220                     __pbssBANK4:	
  5025  0220                     get_calib_data@F375:	
  5026  0220                     	ds	26
  5027  023A                     main@F10088:	
  5028  023A                     	ds	16
  5029  024A                     GetNavData@F10083:	
  5030  024A                     	ds	12
  5031                           
  5032                           	psect	dataBANK5
  5033  02A0                     __pdataBANK5:	
  5034  02A0                     _setNavFlightMode:	
  5035  02A0                     	ds	44
  5036                           
  5037                           	psect	bssBANK6
  5038  0320                     __pbssBANK6:	
  5039  0320                     _message_start:	
  5040  0320                     	ds	70
  5041                           
  5042                           	psect	bssBANK7
  5043  03A0                     __pbssBANK7:	
  5044  03A0                     _message_end:	
  5045  03A0                     	ds	73
  5046                           
  5047                           	psect	inittext
  5048  1927                     init_ram:	
  5049  1927  00FE               	movwf	126
  5050  1928                     initloop:	
  5051  1928  0012               	moviw fsr0++
  5052  1929  001E               	movwi fsr1++
  5053  192A  0BFE               	decfsz	126,f
  5054  192B  2928               	goto	initloop
  5055  192C  3400               	retlw	0
  5056                           
  5057                           	psect	clrtext
  5058  1921                     clear_ram0:	
  5059                           ;	Called with FSR0 containing the base address, and
  5060                           ;	WREG with the size to clear
  5061                           
  5062  1921  0064               	clrwdt	;clear the watchdog before getting into this loop
  5063  1922                     clrloop0:	
  5064  1922  0180               	clrf	0	;clear RAM location pointed to by FSR
  5065  1923  3101               	addfsr 0,1
  5066  1924  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  5067  1925  2922               	goto	clrloop0	;have we reached the end yet?
  5068  1926  3400               	retlw	0	;all done for this memory range, return
  5069                           
  5070                           	psect	cstackBANK2
  5071  0120                     __pcstackBANK2:	
  5072  0120                     bme280_get_sensor_data@reg_data:	
  5073                           
  5074                           ; 8 bytes @ 0x0
  5075  0120                     	ds	8
  5076  0128                     bme280_get_sensor_data@sensor_comp:	
  5077                           
  5078                           ; 1 bytes @ 0x8
  5079  0128                     	ds	1
  5080  0129                     bme280_get_sensor_data@rslt:	
  5081                           
  5082                           ; 1 bytes @ 0x9
  5083  0129                     	ds	1
  5084  012A                     bme280_get_sensor_data@uncomp_data:	
  5085                           
  5086                           ; 12 bytes @ 0xA
  5087  012A                     	ds	12
  5088  0136                     main@convertedNumber:	
  5089                           
  5090                           ; 16 bytes @ 0x16
  5091  0136                     	ds	16
  5092  0146                     main@end:	
  5093                           
  5094                           ; 2 bytes @ 0x26
  5095  0146                     	ds	2
  5096  0148                     main@i:	
  5097                           
  5098                           ; 2 bytes @ 0x28
  5099  0148                     	ds	2
  5100  014A                     main@sensor_data:	
  5101                           
  5102                           ; 12 bytes @ 0x2A
  5103  014A                     	ds	12
  5104  0156                     main@index:	
  5105                           
  5106                           ; 2 bytes @ 0x36
  5107  0156                     	ds	2
  5108                           
  5109                           	psect	cstackBANK1
  5110  00A0                     __pcstackBANK1:	
  5111  00A0                     ??_put_device_to_sleep:	
  5112                           
  5113                           ; 1 bytes @ 0x0
  5114  00A0                     	ds	2
  5115  00A2                     put_device_to_sleep@reg_data:	
  5116                           
  5117                           ; 4 bytes @ 0x2
  5118  00A2                     	ds	4
  5119  00A6                     put_device_to_sleep@rslt:	
  5120                           
  5121                           ; 1 bytes @ 0x6
  5122  00A6                     	ds	1
  5123  00A7                     put_device_to_sleep@dev:	
  5124                           
  5125                           ; 1 bytes @ 0x7
  5126  00A7                     	ds	1
  5127  00A8                     put_device_to_sleep@settings:	
  5128  00A8                     _compensate_pressure$2353:	
  5129                           ; 5 bytes @ 0x8
  5130                           
  5131                           
  5132                           ; 8 bytes @ 0x8
  5133  00A8                     	ds	5
  5134  00AD                     ?_bme280_set_sensor_settings:	
  5135  00AD                     ?_bme280_set_sensor_mode:	
  5136                           ; 1 bytes @ 0xD
  5137                           
  5138  00AD                     bme280_set_sensor_settings@dev:	
  5139                           ; 1 bytes @ 0xD
  5140                           
  5141  00AD                     bme280_set_sensor_mode@dev:	
  5142                           ; 1 bytes @ 0xD
  5143                           
  5144                           
  5145                           ; 1 bytes @ 0xD
  5146  00AD                     	ds	1
  5147  00AE                     ??_bme280_set_sensor_settings:	
  5148  00AE                     ??_bme280_set_sensor_mode:	
  5149                           ; 1 bytes @ 0xE
  5150                           
  5151                           
  5152                           ; 1 bytes @ 0xE
  5153  00AE                     	ds	2
  5154  00B0                     bme280_set_sensor_settings@desired_settings:	
  5155  00B0                     bme280_set_sensor_mode@sensor_mode:	
  5156                           ; 1 bytes @ 0x10
  5157                           
  5158  00B0                     _compensate_pressure$2354:	
  5159                           ; 1 bytes @ 0x10
  5160                           
  5161                           
  5162                           ; 8 bytes @ 0x10
  5163  00B0                     	ds	1
  5164  00B1                     bme280_set_sensor_settings@sensor_mode:	
  5165  00B1                     bme280_set_sensor_mode@last_set_mode:	
  5166                           ; 1 bytes @ 0x11
  5167                           
  5168                           
  5169                           ; 1 bytes @ 0x11
  5170  00B1                     	ds	1
  5171  00B2                     bme280_set_sensor_settings@rslt:	
  5172  00B2                     bme280_set_sensor_mode@rslt:	
  5173                           ; 1 bytes @ 0x12
  5174                           
  5175                           
  5176                           ; 1 bytes @ 0x12
  5177  00B2                     	ds	1
  5178  00B3                     ??_BME280_Init:	
  5179                           
  5180                           ; 1 bytes @ 0x13
  5181  00B3                     	ds	2
  5182  00B5                     BME280_Init@settings_sel:	
  5183                           
  5184                           ; 1 bytes @ 0x15
  5185  00B5                     	ds	1
  5186  00B6                     BME280_Init@rslt:	
  5187                           
  5188                           ; 1 bytes @ 0x16
  5189  00B6                     	ds	2
  5190  00B8                     compensate_pressure@uncomp_data:	
  5191                           
  5192                           ; 1 bytes @ 0x18
  5193  00B8                     	ds	1
  5194  00B9                     compensate_pressure@pressure_max:	
  5195                           
  5196                           ; 4 bytes @ 0x19
  5197  00B9                     	ds	8
  5198  00C1                     _compensate_pressure$2352:	
  5199                           
  5200                           ; 8 bytes @ 0x21
  5201  00C1                     	ds	8
  5202  00C9                     compensate_pressure@pressure:	
  5203                           
  5204                           ; 4 bytes @ 0x29
  5205  00C9                     	ds	4
  5206  00CD                     compensate_pressure@var2:	
  5207                           
  5208                           ; 8 bytes @ 0x2D
  5209  00CD                     	ds	8
  5210  00D5                     compensate_pressure@var4:	
  5211                           
  5212                           ; 8 bytes @ 0x35
  5213  00D5                     	ds	8
  5214  00DD                     compensate_pressure@var1:	
  5215                           
  5216                           ; 8 bytes @ 0x3D
  5217  00DD                     	ds	8
  5218  00E5                     ??_main:	
  5219                           
  5220                           ; 1 bytes @ 0x45
  5221  00E5                     	ds	5
  5222                           
  5223                           	psect	cstackCOMMON
  5224  0070                     __pcstackCOMMON:	
  5225  0070                     ?_null_ptr_check:	
  5226  0070                     ??_null_ptr_check:	
  5227                           ; 1 bytes @ 0x0
  5228                           
  5229  0070                     ?_interleave_reg_addr:	
  5230                           ; 1 bytes @ 0x0
  5231                           
  5232  0070                     ?_are_settings_changed:	
  5233                           ; 1 bytes @ 0x0
  5234                           
  5235  0070                     ?_parse_device_settings:	
  5236                           ; 1 bytes @ 0x0
  5237                           
  5238  0070                     ?_bme280_parse_sensor_data:	
  5239                           ; 1 bytes @ 0x0
  5240                           
  5241  0070                     ?_fill_osr_press_settings:	
  5242                           ; 1 bytes @ 0x0
  5243                           
  5244  0070                     ?_fill_osr_temp_settings:	
  5245                           ; 1 bytes @ 0x0
  5246                           
  5247  0070                     ?_fill_filter_settings:	
  5248                           ; 1 bytes @ 0x0
  5249                           
  5250  0070                     ?_fill_standby_settings:	
  5251                           ; 1 bytes @ 0x0
  5252                           
  5253  0070                     ?_parse_temp_press_calib_data:	
  5254                           ; 1 bytes @ 0x0
  5255                           
  5256  0070                     ?_parse_humidity_calib_data:	
  5257                           ; 1 bytes @ 0x0
  5258                           
  5259  0070                     ?_PIN_MANAGER_Initialize:	
  5260                           ; 1 bytes @ 0x0
  5261                           
  5262  0070                     ??_PIN_MANAGER_Initialize:	
  5263                           ; 1 bytes @ 0x0
  5264                           
  5265  0070                     ?_OSCILLATOR_Initialize:	
  5266                           ; 1 bytes @ 0x0
  5267                           
  5268  0070                     ??_OSCILLATOR_Initialize:	
  5269                           ; 1 bytes @ 0x0
  5270                           
  5271  0070                     ?_TMR0_Initialize:	
  5272                           ; 1 bytes @ 0x0
  5273                           
  5274  0070                     ?_EUSART_Initialize:	
  5275                           ; 1 bytes @ 0x0
  5276                           
  5277  0070                     ??_EUSART_Initialize:	
  5278                           ; 1 bytes @ 0x0
  5279                           
  5280  0070                     ?_TMR0_ISR:	
  5281                           ; 1 bytes @ 0x0
  5282                           
  5283  0070                     ??_TMR0_ISR:	
  5284                           ; 1 bytes @ 0x0
  5285                           
  5286  0070                     ?_TMR0_SetInterruptHandler:	
  5287                           ; 1 bytes @ 0x0
  5288                           
  5289  0070                     ?_TMR0_DefaultInterruptHandler:	
  5290                           ; 1 bytes @ 0x0
  5291                           
  5292  0070                     ??_TMR0_DefaultInterruptHandler:	
  5293                           ; 1 bytes @ 0x0
  5294                           
  5295  0070                     ?_InitTiming:	
  5296                           ; 1 bytes @ 0x0
  5297                           
  5298  0070                     ?_BME280_Init:	
  5299                           ; 1 bytes @ 0x0
  5300                           
  5301  0070                     ?_TransmitString:	
  5302                           ; 1 bytes @ 0x0
  5303                           
  5304  0070                     ?_I2C_UserAlert:	
  5305                           ; 1 bytes @ 0x0
  5306                           
  5307  0070                     ?_Sleep:	
  5308                           ; 1 bytes @ 0x0
  5309                           
  5310  0070                     ?_SYSTEM_Initialize:	
  5311                           ; 1 bytes @ 0x0
  5312                           
  5313  0070                     ?_INTERRUPT_InterruptManager:	
  5314                           ; 1 bytes @ 0x0
  5315                           
  5316  0070                     ??_INTERRUPT_InterruptManager:	
  5317                           ; 1 bytes @ 0x0
  5318                           
  5319  0070                     ?_main:	
  5320                           ; 1 bytes @ 0x0
  5321                           
  5322  0070                     ?_I2C_Init:	
  5323                           ; 1 bytes @ 0x0
  5324                           
  5325  0070                     ??_I2C_Init:	
  5326                           ; 1 bytes @ 0x0
  5327                           
  5328  0070                     ?_I2C_WriteByte:	
  5329                           ; 1 bytes @ 0x0
  5330                           
  5331  0070                     ?_I2C_ReadByte:	
  5332                           ; 1 bytes @ 0x0
  5333                           
  5334  0070                     ?_I2C_Stop:	
  5335                           ; 1 bytes @ 0x0
  5336                           
  5337  0070                     ?_TimerISR:	
  5338                           ; 1 bytes @ 0x0
  5339                           
  5340  0070                     ??_TimerISR:	
  5341                           ; 1 bytes @ 0x0
  5342                           
  5343  0070                     ?_TransmitBit:	
  5344                           ; 1 bytes @ 0x0
  5345                           
  5346  0070                     ??_TransmitBit:	
  5347                           ; 1 bytes @ 0x0
  5348                           
  5349  0070                     ?_TransmitByte:	
  5350                           ; 1 bytes @ 0x0
  5351                           
  5352  0070                     ??___omul:	
  5353                           ; 1 bytes @ 0x0
  5354                           
  5355  0070                     ?_strlen:	
  5356                           ; 1 bytes @ 0x0
  5357                           
  5358  0070                     ?_Insert:	
  5359                           ; 2 bytes @ 0x0
  5360                           
  5361  0070                     ?___awdiv:	
  5362                           ; 2 bytes @ 0x0
  5363                           
  5364  0070                     ?___awmod:	
  5365                           ; 2 bytes @ 0x0
  5366                           
  5367  0070                     ?___lmul:	
  5368                           ; 2 bytes @ 0x0
  5369                           
  5370  0070                     bme280_parse_sensor_data@uncomp_data:	
  5371                           ; 4 bytes @ 0x0
  5372                           
  5373  0070                     parse_device_settings@settings:	
  5374                           ; 1 bytes @ 0x0
  5375                           
  5376  0070                     interleave_reg_addr@temp_buff:	
  5377                           ; 1 bytes @ 0x0
  5378                           
  5379  0070                     parse_temp_press_calib_data@dev:	
  5380                           ; 1 bytes @ 0x0
  5381                           
  5382  0070                     parse_humidity_calib_data@dev:	
  5383                           ; 1 bytes @ 0x0
  5384                           
  5385  0070                     are_settings_changed@desired_settings:	
  5386                           ; 1 bytes @ 0x0
  5387                           
  5388  0070                     Insert@src:	
  5389                           ; 1 bytes @ 0x0
  5390                           
  5391  0070                     I2C_UserAlert@status:	
  5392                           ; 1 bytes @ 0x0
  5393                           
  5394  0070                     fill_filter_settings@settings:	
  5395                           ; 1 bytes @ 0x0
  5396                           
  5397  0070                     fill_standby_settings@settings:	
  5398                           ; 2 bytes @ 0x0
  5399                           
  5400  0070                     fill_osr_press_settings@settings:	
  5401                           ; 2 bytes @ 0x0
  5402                           
  5403  0070                     fill_osr_temp_settings@settings:	
  5404                           ; 2 bytes @ 0x0
  5405                           
  5406  0070                     TMR0_SetInterruptHandler@InterruptHandler:	
  5407                           ; 2 bytes @ 0x0
  5408                           
  5409  0070                     ___awdiv@divisor:	
  5410                           ; 2 bytes @ 0x0
  5411                           
  5412  0070                     ___awmod@divisor:	
  5413                           ; 2 bytes @ 0x0
  5414                           
  5415  0070                     strlen@s:	
  5416                           ; 2 bytes @ 0x0
  5417                           
  5418  0070                     Sleep@ms:	
  5419                           ; 2 bytes @ 0x0
  5420                           
  5421  0070                     ___lmul@multiplier:	
  5422                           ; 4 bytes @ 0x0
  5423                           
  5424                           
  5425                           ; 4 bytes @ 0x0
  5426  0070                     	ds	1
  5427  0071                     ??_are_settings_changed:	
  5428  0071                     ??_parse_device_settings:	
  5429                           ; 1 bytes @ 0x1
  5430                           
  5431  0071                     ??_bme280_parse_sensor_data:	
  5432                           ; 1 bytes @ 0x1
  5433                           
  5434  0071                     ??_parse_temp_press_calib_data:	
  5435                           ; 1 bytes @ 0x1
  5436                           
  5437  0071                     ??_parse_humidity_calib_data:	
  5438                           ; 1 bytes @ 0x1
  5439                           
  5440  0071                     interleave_reg_addr@reg_data:	
  5441                           ; 1 bytes @ 0x1
  5442                           
  5443  0071                     are_settings_changed@sub_settings:	
  5444                           ; 1 bytes @ 0x1
  5445                           
  5446  0071                     TransmitBit@b:	
  5447                           ; 1 bytes @ 0x1
  5448                           
  5449  0071                     Insert@index:	
  5450                           ; 1 bytes @ 0x1
  5451                           
  5452  0071                     ___omul@product:	
  5453                           ; 2 bytes @ 0x1
  5454                           
  5455                           
  5456                           ; 8 bytes @ 0x1
  5457  0071                     	ds	1
  5458  0072                     ??_fill_osr_press_settings:	
  5459  0072                     ??_fill_osr_temp_settings:	
  5460                           ; 1 bytes @ 0x2
  5461                           
  5462  0072                     ??_fill_filter_settings:	
  5463                           ; 1 bytes @ 0x2
  5464                           
  5465  0072                     ??_fill_standby_settings:	
  5466                           ; 1 bytes @ 0x2
  5467                           
  5468  0072                     ??_TMR0_Initialize:	
  5469                           ; 1 bytes @ 0x2
  5470                           
  5471  0072                     ??_TMR0_SetInterruptHandler:	
  5472                           ; 1 bytes @ 0x2
  5473                           
  5474  0072                     ??_strlen:	
  5475                           ; 1 bytes @ 0x2
  5476                           
  5477  0072                     ??_InitTiming:	
  5478                           ; 1 bytes @ 0x2
  5479                           
  5480  0072                     ??_TransmitByte:	
  5481                           ; 1 bytes @ 0x2
  5482                           
  5483  0072                     interleave_reg_addr@len:	
  5484                           ; 1 bytes @ 0x2
  5485                           
  5486  0072                     parse_temp_press_calib_data@calib_data:	
  5487                           ; 1 bytes @ 0x2
  5488                           
  5489  0072                     are_settings_changed@settings_changed:	
  5490                           ; 1 bytes @ 0x2
  5491                           
  5492  0072                     null_ptr_check@rslt:	
  5493                           ; 1 bytes @ 0x2
  5494                           
  5495  0072                     ___awdiv@dividend:	
  5496                           ; 1 bytes @ 0x2
  5497                           
  5498  0072                     ___awmod@dividend:	
  5499                           ; 2 bytes @ 0x2
  5500                           
  5501                           
  5502                           ; 2 bytes @ 0x2
  5503  0072                     	ds	1
  5504  0073                     ??_interleave_reg_addr:	
  5505  0073                     ??_SYSTEM_Initialize:	
  5506                           ; 1 bytes @ 0x3
  5507                           
  5508  0073                     parse_device_settings@reg_data:	
  5509                           ; 1 bytes @ 0x3
  5510                           
  5511  0073                     parse_temp_press_calib_data@reg_data:	
  5512                           ; 1 bytes @ 0x3
  5513                           
  5514  0073                     null_ptr_check@dev:	
  5515                           ; 1 bytes @ 0x3
  5516                           
  5517  0073                     TransmitByte@byte:	
  5518                           ; 1 bytes @ 0x3
  5519                           
  5520  0073                     Insert@destLimit:	
  5521                           ; 1 bytes @ 0x3
  5522                           
  5523  0073                     strlen@a:	
  5524                           ; 2 bytes @ 0x3
  5525                           
  5526                           
  5527                           ; 2 bytes @ 0x3
  5528  0073                     	ds	1
  5529  0074                     ??_Sleep:	
  5530  0074                     ??___awdiv:	
  5531                           ; 1 bytes @ 0x4
  5532                           
  5533  0074                     ??___awmod:	
  5534                           ; 1 bytes @ 0x4
  5535                           
  5536  0074                     parse_humidity_calib_data@dig_H4_lsb:	
  5537                           ; 1 bytes @ 0x4
  5538                           
  5539  0074                     TransmitByte@i:	
  5540                           ; 2 bytes @ 0x4
  5541                           
  5542  0074                     ___lmul@multiplicand:	
  5543                           ; 2 bytes @ 0x4
  5544                           
  5545                           
  5546                           ; 4 bytes @ 0x4
  5547  0074                     	ds	1
  5548  0075                     ?_ClearString:	
  5549  0075                     ??_Insert:	
  5550                           ; 1 bytes @ 0x5
  5551                           
  5552  0075                     ?_crc16_update:	
  5553                           ; 1 bytes @ 0x5
  5554                           
  5555  0075                     fill_filter_settings@reg_data:	
  5556                           ; 2 bytes @ 0x5
  5557                           
  5558  0075                     fill_standby_settings@reg_data:	
  5559                           ; 1 bytes @ 0x5
  5560                           
  5561  0075                     fill_osr_press_settings@reg_data:	
  5562                           ; 1 bytes @ 0x5
  5563                           
  5564  0075                     fill_osr_temp_settings@reg_data:	
  5565                           ; 1 bytes @ 0x5
  5566                           
  5567  0075                     ___awdiv@counter:	
  5568                           ; 1 bytes @ 0x5
  5569                           
  5570  0075                     ___awmod@counter:	
  5571                           ; 1 bytes @ 0x5
  5572                           
  5573  0075                     ClearString@str:	
  5574                           ; 1 bytes @ 0x5
  5575                           
  5576  0075                     crc16_update@length:	
  5577                           ; 2 bytes @ 0x5
  5578                           
  5579                           
  5580                           ; 2 bytes @ 0x5
  5581  0075                     	ds	1
  5582  0076                     ??_TransmitString:	
  5583  0076                     interleave_reg_addr@reg_addr:	
  5584                           ; 1 bytes @ 0x6
  5585                           
  5586  0076                     ___awdiv@sign:	
  5587                           ; 1 bytes @ 0x6
  5588                           
  5589  0076                     ___awmod@sign:	
  5590                           ; 1 bytes @ 0x6
  5591                           
  5592  0076                     parse_humidity_calib_data@dig_H4_msb:	
  5593                           ; 1 bytes @ 0x6
  5594                           
  5595                           
  5596                           ; 2 bytes @ 0x6
  5597  0076                     	ds	1
  5598  0077                     ??_ClearString:	
  5599  0077                     interleave_reg_addr@index:	
  5600                           ; 1 bytes @ 0x7
  5601                           
  5602  0077                     Insert@temp:	
  5603                           ; 1 bytes @ 0x7
  5604                           
  5605  0077                     crc16_update@wCrc:	
  5606                           ; 1 bytes @ 0x7
  5607                           
  5608  0077                     TransmitString@counti:	
  5609                           ; 2 bytes @ 0x7
  5610                           
  5611  0077                     ___awdiv@quotient:	
  5612                           ; 2 bytes @ 0x7
  5613                           
  5614                           
  5615                           ; 2 bytes @ 0x7
  5616  0077                     	ds	1
  5617  0078                     ??___lmul:	
  5618  0078                     Insert@current:	
  5619                           ; 1 bytes @ 0x8
  5620                           
  5621  0078                     parse_humidity_calib_data@dig_H5_lsb:	
  5622                           ; 1 bytes @ 0x8
  5623                           
  5624  0078                     ClearString@counti:	
  5625                           ; 2 bytes @ 0x8
  5626                           
  5627  0078                     Sleep@start:	
  5628                           ; 2 bytes @ 0x8
  5629                           
  5630  0078                     ___lmul@product:	
  5631                           ; 4 bytes @ 0x8
  5632                           
  5633                           
  5634                           ; 4 bytes @ 0x8
  5635  0078                     	ds	1
  5636  0079                     ?_ReverseString:	
  5637  0079                     ??_crc16_update:	
  5638                           ; 1 bytes @ 0x9
  5639                           
  5640  0079                     ??___aodiv:	
  5641                           ; 1 bytes @ 0x9
  5642                           
  5643  0079                     Insert@dest:	
  5644                           ; 1 bytes @ 0x9
  5645                           
  5646  0079                     ReverseString@str:	
  5647                           ; 1 bytes @ 0x9
  5648                           
  5649  0079                     TransmitString@i:	
  5650                           ; 2 bytes @ 0x9
  5651                           
  5652                           
  5653                           ; 2 bytes @ 0x9
  5654  0079                     	ds	1
  5655  007A                     ??_InsertString:	
  5656  007A                     ?_compensate_pressure:	
  5657                           ; 1 bytes @ 0xA
  5658                           
  5659  007A                     compensate_pressure@calib_data:	
  5660                           ; 4 bytes @ 0xA
  5661                           
  5662  007A                     parse_humidity_calib_data@dig_H5_msb:	
  5663                           ; 1 bytes @ 0xA
  5664                           
  5665  007A                     ClearString@i:	
  5666                           ; 2 bytes @ 0xA
  5667                           
  5668                           
  5669                           ; 2 bytes @ 0xA
  5670  007A                     	ds	1
  5671  007B                     ??_IntToString:	
  5672  007B                     TransmitString@message:	
  5673                           ; 1 bytes @ 0xB
  5674                           
  5675                           
  5676                           ; 1 bytes @ 0xB
  5677  007B                     	ds	1
  5678  007C                     ??_DebugAlert:	
  5679  007C                     ??___aldiv:	
  5680                           ; 1 bytes @ 0xC
  5681                           
  5682  007C                     parse_humidity_calib_data@calib_data:	
  5683                           ; 1 bytes @ 0xC
  5684                           
  5685  007C                     crc16_update@pData:	
  5686                           ; 1 bytes @ 0xC
  5687                           
  5688                           
  5689                           ; 1 bytes @ 0xC
  5690  007C                     	ds	1
  5691  007D                     ??_I2C_UserAlert:	
  5692  007D                     parse_humidity_calib_data@reg_data:	
  5693                           ; 1 bytes @ 0xD
  5694                           
  5695  007D                     I2C_WriteByte@data:	
  5696                           ; 1 bytes @ 0xD
  5697                           
  5698  007D                     crc16_update@i:	
  5699                           ; 1 bytes @ 0xD
  5700                           
  5701                           
  5702                           ; 1 bytes @ 0xD
  5703  007D                     	ds	1
  5704                           
  5705                           	psect	cstackBANK0
  5706  0020                     __pcstackBANK0:	
  5707  0020                     ?_DebugAlert:	
  5708  0020                     ??_ReverseString:	
  5709                           ; 1 bytes @ 0x0
  5710                           
  5711  0020                     ?_crc16:	
  5712                           ; 1 bytes @ 0x0
  5713                           
  5714  0020                     ?_InsertString:	
  5715                           ; 2 bytes @ 0x0
  5716                           
  5717  0020                     ?___aldiv:	
  5718                           ; 2 bytes @ 0x0
  5719                           
  5720  0020                     ?___omul:	
  5721                           ; 4 bytes @ 0x0
  5722                           
  5723  0020                     InsertString@src:	
  5724                           ; 8 bytes @ 0x0
  5725                           
  5726  0020                     crc16@segments:	
  5727                           ; 2 bytes @ 0x0
  5728                           
  5729  0020                     DebugAlert@delay_high:	
  5730                           ; 2 bytes @ 0x0
  5731                           
  5732  0020                     bme280_parse_sensor_data@data_xlsb:	
  5733                           ; 2 bytes @ 0x0
  5734                           
  5735  0020                     ___aldiv@divisor:	
  5736                           ; 4 bytes @ 0x0
  5737                           
  5738  0020                     ___omul@multiplier:	
  5739                           ; 4 bytes @ 0x0
  5740                           
  5741                           
  5742                           ; 8 bytes @ 0x0
  5743  0020                     	ds	2
  5744  0022                     ??_crc16:	
  5745  0022                     InsertString@index:	
  5746                           ; 1 bytes @ 0x2
  5747                           
  5748  0022                     DebugAlert@delay_low:	
  5749                           ; 2 bytes @ 0x2
  5750                           
  5751                           
  5752                           ; 2 bytes @ 0x2
  5753  0022                     	ds	2
  5754  0024                     DebugAlert@num_flashes:	
  5755  0024                     InsertString@destLimit:	
  5756                           ; 1 bytes @ 0x4
  5757                           
  5758  0024                     ReverseString@halfway:	
  5759                           ; 2 bytes @ 0x4
  5760                           
  5761  0024                     crc16@crc:	
  5762                           ; 2 bytes @ 0x4
  5763                           
  5764  0024                     bme280_parse_sensor_data@data_lsb:	
  5765                           ; 2 bytes @ 0x4
  5766                           
  5767  0024                     ___aldiv@dividend:	
  5768                           ; 4 bytes @ 0x4
  5769                           
  5770                           
  5771                           ; 4 bytes @ 0x4
  5772  0024                     	ds	1
  5773  0025                     DebugAlert@i:	
  5774                           
  5775                           ; 2 bytes @ 0x5
  5776  0025                     	ds	1
  5777  0026                     ReverseString@temp:	
  5778  0026                     crc16@data:	
  5779                           ; 1 bytes @ 0x6
  5780                           
  5781  0026                     InsertString@counti:	
  5782                           ; 1 bytes @ 0x6
  5783                           
  5784                           
  5785                           ; 2 bytes @ 0x6
  5786  0026                     	ds	1
  5787  0027                     ??_I2C_ReadByte:	
  5788  0027                     ??_I2C_Stop:	
  5789                           ; 1 bytes @ 0x7
  5790                           
  5791  0027                     ReverseString@opposite:	
  5792                           ; 1 bytes @ 0x7
  5793                           
  5794  0027                     crc16@i:	
  5795                           ; 2 bytes @ 0x7
  5796                           
  5797                           
  5798                           ; 2 bytes @ 0x7
  5799  0027                     	ds	1
  5800  0028                     ___aldiv@counter:	
  5801  0028                     InsertString@i:	
  5802                           ; 1 bytes @ 0x8
  5803                           
  5804  0028                     bme280_parse_sensor_data@data_msb:	
  5805                           ; 2 bytes @ 0x8
  5806                           
  5807  0028                     ___omul@multiplicand:	
  5808                           ; 4 bytes @ 0x8
  5809                           
  5810                           
  5811                           ; 8 bytes @ 0x8
  5812  0028                     	ds	1
  5813  0029                     ___aldiv@sign:	
  5814  0029                     ReverseString@counti:	
  5815                           ; 1 bytes @ 0x9
  5816                           
  5817                           
  5818                           ; 2 bytes @ 0x9
  5819  0029                     	ds	1
  5820  002A                     InsertString@dest:	
  5821  002A                     ___aldiv@quotient:	
  5822                           ; 1 bytes @ 0xA
  5823                           
  5824                           
  5825                           ; 4 bytes @ 0xA
  5826  002A                     	ds	1
  5827  002B                     ??_I2C_WriteByte:	
  5828  002B                     I2C_ReadByte@ackbit:	
  5829                           ; 1 bytes @ 0xB
  5830                           
  5831  002B                     ReverseString@i:	
  5832                           ; 1 bytes @ 0xB
  5833                           
  5834                           
  5835                           ; 2 bytes @ 0xB
  5836  002B                     	ds	1
  5837  002C                     bme280_parse_sensor_data@reg_data:	
  5838  002C                     I2C_ReadByte@rcvdata:	
  5839                           ; 1 bytes @ 0xC
  5840                           
  5841                           
  5842                           ; 1 bytes @ 0xC
  5843  002C                     	ds	1
  5844  002D                     ?_UIntToHexString:	
  5845  002D                     ?_IntToString:	
  5846                           ; 1 bytes @ 0xD
  5847                           
  5848  002D                     IntToString@n:	
  5849                           ; 1 bytes @ 0xD
  5850                           
  5851  002D                     UIntToHexString@n:	
  5852                           ; 2 bytes @ 0xD
  5853                           
  5854                           
  5855                           ; 4 bytes @ 0xD
  5856  002D                     	ds	1
  5857  002E                     ?_compensate_temperature:	
  5858  002E                     compensate_temperature@calib_data:	
  5859                           ; 4 bytes @ 0xE
  5860                           
  5861                           
  5862                           ; 1 bytes @ 0xE
  5863  002E                     	ds	1
  5864  002F                     ?_ReadEnvSensor:	
  5865  002F                     ?_WriteEnvSensor:	
  5866                           ; 1 bytes @ 0xF
  5867                           
  5868  002F                     ReadEnvSensor@dev_id:	
  5869                           ; 1 bytes @ 0xF
  5870                           
  5871  002F                     WriteEnvSensor@dev_id:	
  5872                           ; 1 bytes @ 0xF
  5873                           
  5874  002F                     IntToString@dest:	
  5875                           ; 1 bytes @ 0xF
  5876                           
  5877                           
  5878                           ; 2 bytes @ 0xF
  5879  002F                     	ds	1
  5880  0030                     ?___aodiv:	
  5881  0030                     ReadEnvSensor@reg_addr:	
  5882                           ; 8 bytes @ 0x10
  5883                           
  5884  0030                     WriteEnvSensor@reg_addr:	
  5885                           ; 1 bytes @ 0x10
  5886                           
  5887  0030                     ___aodiv@divisor:	
  5888                           ; 1 bytes @ 0x10
  5889                           
  5890                           
  5891                           ; 8 bytes @ 0x10
  5892  0030                     	ds	1
  5893  0031                     UIntToHexString@dest:	
  5894  0031                     IntToString@sign:	
  5895                           ; 1 bytes @ 0x11
  5896                           
  5897  0031                     WriteEnvSensor@reg_data:	
  5898                           ; 1 bytes @ 0x11
  5899                           
  5900  0031                     ReadEnvSensor@reg_data:	
  5901                           ; 1 bytes @ 0x11
  5902                           
  5903                           
  5904                           ; 2 bytes @ 0x11
  5905  0031                     	ds	1
  5906  0032                     ??_compensate_temperature:	
  5907  0032                     ??_UIntToHexString:	
  5908                           ; 1 bytes @ 0x12
  5909                           
  5910  0032                     IntToString@i:	
  5911                           ; 1 bytes @ 0x12
  5912                           
  5913  0032                     WriteEnvSensor@len:	
  5914                           ; 2 bytes @ 0x12
  5915                           
  5916                           
  5917                           ; 2 bytes @ 0x12
  5918  0032                     	ds	1
  5919  0033                     ReadEnvSensor@len:	
  5920                           
  5921                           ; 2 bytes @ 0x13
  5922  0033                     	ds	1
  5923  0034                     ??_WriteEnvSensor:	
  5924  0034                     _UIntToHexString$1405:	
  5925                           ; 1 bytes @ 0x14
  5926                           
  5927                           
  5928                           ; 4 bytes @ 0x14
  5929  0034                     	ds	1
  5930  0035                     ??_ReadEnvSensor:	
  5931                           
  5932                           ; 1 bytes @ 0x15
  5933  0035                     	ds	3
  5934  0038                     WriteEnvSensor@rslt:	
  5935  0038                     UIntToHexString@remainder:	
  5936                           ; 1 bytes @ 0x18
  5937                           
  5938  0038                     ___aodiv@dividend:	
  5939                           ; 4 bytes @ 0x18
  5940                           
  5941                           
  5942                           ; 8 bytes @ 0x18
  5943  0038                     	ds	1
  5944  0039                     ReadEnvSensor@rslt:	
  5945  0039                     WriteEnvSensor@i:	
  5946                           ; 1 bytes @ 0x19
  5947                           
  5948                           
  5949                           ; 2 bytes @ 0x19
  5950  0039                     	ds	1
  5951  003A                     ReadEnvSensor@i:	
  5952                           
  5953                           ; 2 bytes @ 0x1A
  5954  003A                     	ds	1
  5955  003B                     ?_bme280_set_regs:	
  5956  003B                     bme280_set_regs@reg_data:	
  5957                           ; 1 bytes @ 0x1B
  5958                           
  5959                           
  5960                           ; 1 bytes @ 0x1B
  5961  003B                     	ds	1
  5962  003C                     ?_bme280_get_regs:	
  5963  003C                     bme280_set_regs@len:	
  5964                           ; 1 bytes @ 0x1C
  5965                           
  5966  003C                     bme280_get_regs@reg_data:	
  5967                           ; 1 bytes @ 0x1C
  5968                           
  5969  003C                     UIntToHexString@i:	
  5970                           ; 2 bytes @ 0x1C
  5971                           
  5972  003C                     _compensate_temperature$2351:	
  5973                           ; 4 bytes @ 0x1C
  5974                           
  5975                           
  5976                           ; 4 bytes @ 0x1C
  5977  003C                     	ds	1
  5978  003D                     bme280_set_regs@dev:	
  5979                           
  5980                           ; 1 bytes @ 0x1D
  5981  003D                     	ds	1
  5982  003E                     ?_get_calib_data:	
  5983  003E                     ??_bme280_set_regs:	
  5984                           ; 1 bytes @ 0x1E
  5985                           
  5986  003E                     bme280_get_regs@len:	
  5987                           ; 1 bytes @ 0x1E
  5988                           
  5989                           
  5990                           ; 2 bytes @ 0x1E
  5991  003E                     	ds	2
  5992  0040                     bme280_get_regs@dev:	
  5993  0040                     ___aodiv@counter:	
  5994                           ; 1 bytes @ 0x20
  5995                           
  5996                           
  5997                           ; 1 bytes @ 0x20
  5998  0040                     	ds	1
  5999  0041                     ??_bme280_get_regs:	
  6000  0041                     ___aodiv@sign:	
  6001                           ; 1 bytes @ 0x21
  6002                           
  6003  0041                     bme280_set_regs@temp_buff:	
  6004                           ; 1 bytes @ 0x21
  6005                           
  6006                           
  6007                           ; 20 bytes @ 0x21
  6008  0041                     	ds	1
  6009  0042                     ___aodiv@quotient:	
  6010                           
  6011                           ; 8 bytes @ 0x22
  6012  0042                     	ds	1
  6013  0043                     bme280_get_regs@reg_addr:	
  6014                           
  6015                           ; 1 bytes @ 0x23
  6016  0043                     	ds	1
  6017  0044                     bme280_get_regs@rslt:	
  6018  0044                     compensate_temperature@temperature_max:	
  6019                           ; 1 bytes @ 0x24
  6020                           
  6021                           
  6022                           ; 4 bytes @ 0x24
  6023  0044                     	ds	1
  6024  0045                     ??_get_calib_data:	
  6025  0045                     ?_bme280_get_sensor_mode:	
  6026                           ; 1 bytes @ 0x25
  6027                           
  6028  0045                     bme280_get_sensor_mode@dev:	
  6029                           ; 1 bytes @ 0x25
  6030                           
  6031                           
  6032                           ; 1 bytes @ 0x25
  6033  0045                     	ds	1
  6034  0046                     ??_bme280_get_sensor_mode:	
  6035                           
  6036                           ; 1 bytes @ 0x26
  6037  0046                     	ds	1
  6038  0047                     get_calib_data@calib_data:	
  6039                           
  6040                           ; 26 bytes @ 0x27
  6041  0047                     	ds	1
  6042  0048                     bme280_get_sensor_mode@rslt:	
  6043  0048                     compensate_temperature@var1:	
  6044                           ; 1 bytes @ 0x28
  6045                           
  6046                           
  6047                           ; 4 bytes @ 0x28
  6048  0048                     	ds	1
  6049  0049                     bme280_get_sensor_mode@sensor_mode:	
  6050                           
  6051                           ; 1 bytes @ 0x29
  6052  0049                     	ds	1
  6053  004A                     ??_compensate_pressure:	
  6054                           
  6055                           ; 1 bytes @ 0x2A
  6056  004A                     	ds	2
  6057  004C                     compensate_temperature@uncomp_data:	
  6058                           
  6059                           ; 1 bytes @ 0x2C
  6060  004C                     	ds	1
  6061  004D                     compensate_temperature@var2:	
  6062                           
  6063                           ; 4 bytes @ 0x2D
  6064  004D                     	ds	4
  6065  0051                     compensate_temperature@temperature:	
  6066                           
  6067                           ; 4 bytes @ 0x31
  6068  0051                     	ds	2
  6069  0053                     ?_bme280_soft_reset:	
  6070                           
  6071                           ; 1 bytes @ 0x33
  6072  0053                     	ds	2
  6073  0055                     bme280_set_regs@temp_len:	
  6074                           
  6075                           ; 2 bytes @ 0x35
  6076  0055                     	ds	2
  6077  0057                     bme280_set_regs@reg_addr_cnt:	
  6078                           
  6079                           ; 1 bytes @ 0x37
  6080  0057                     	ds	1
  6081  0058                     bme280_set_regs@rslt:	
  6082                           
  6083                           ; 1 bytes @ 0x38
  6084  0058                     	ds	1
  6085  0059                     bme280_set_regs@reg_addr:	
  6086                           
  6087                           ; 1 bytes @ 0x39
  6088  0059                     	ds	1
  6089  005A                     ??_bme280_soft_reset:	
  6090  005A                     ?_set_filter_standby_settings:	
  6091                           ; 1 bytes @ 0x3A
  6092                           
  6093  005A                     ?_write_power_mode:	
  6094                           ; 1 bytes @ 0x3A
  6095                           
  6096  005A                     ?_set_osr_humidity_settings:	
  6097                           ; 1 bytes @ 0x3A
  6098                           
  6099  005A                     ?_set_osr_press_temp_settings:	
  6100                           ; 1 bytes @ 0x3A
  6101                           
  6102  005A                     write_power_mode@dev:	
  6103                           ; 1 bytes @ 0x3A
  6104                           
  6105  005A                     set_osr_humidity_settings@settings:	
  6106                           ; 1 bytes @ 0x3A
  6107                           
  6108  005A                     set_osr_press_temp_settings@settings:	
  6109                           ; 2 bytes @ 0x3A
  6110                           
  6111  005A                     set_filter_standby_settings@settings:	
  6112                           ; 2 bytes @ 0x3A
  6113                           
  6114                           
  6115                           ; 2 bytes @ 0x3A
  6116  005A                     	ds	1
  6117  005B                     ??_write_power_mode:	
  6118                           
  6119                           ; 1 bytes @ 0x3B
  6120  005B                     	ds	1
  6121  005C                     set_osr_humidity_settings@dev:	
  6122  005C                     set_osr_press_temp_settings@dev:	
  6123                           ; 1 bytes @ 0x3C
  6124                           
  6125  005C                     set_filter_standby_settings@dev:	
  6126                           ; 1 bytes @ 0x3C
  6127                           
  6128                           
  6129                           ; 1 bytes @ 0x3C
  6130  005C                     	ds	1
  6131  005D                     ??_set_filter_standby_settings:	
  6132  005D                     ??_set_osr_humidity_settings:	
  6133                           ; 1 bytes @ 0x3D
  6134                           
  6135  005D                     ??_set_osr_press_temp_settings:	
  6136                           ; 1 bytes @ 0x3D
  6137                           
  6138  005D                     bme280_soft_reset@soft_rst_cmd:	
  6139                           ; 1 bytes @ 0x3D
  6140                           
  6141                           
  6142                           ; 1 bytes @ 0x3D
  6143  005D                     	ds	1
  6144  005E                     ?_bme280_init:	
  6145  005E                     bme280_soft_reset@rslt:	
  6146                           ; 1 bytes @ 0x3E
  6147                           
  6148  005E                     write_power_mode@sensor_mode:	
  6149                           ; 1 bytes @ 0x3E
  6150                           
  6151                           
  6152                           ; 1 bytes @ 0x3E
  6153  005E                     	ds	1
  6154  005F                     bme280_soft_reset@reg_addr:	
  6155  005F                     write_power_mode@rslt:	
  6156                           ; 1 bytes @ 0x3F
  6157                           
  6158                           
  6159                           ; 1 bytes @ 0x3F
  6160  005F                     	ds	1
  6161  0060                     bme280_soft_reset@dev:	
  6162  0060                     set_osr_humidity_settings@ctrl_hum:	
  6163                           ; 1 bytes @ 0x40
  6164                           
  6165  0060                     set_osr_press_temp_settings@desired_settings:	
  6166                           ; 1 bytes @ 0x40
  6167                           
  6168  0060                     set_filter_standby_settings@desired_settings:	
  6169                           ; 1 bytes @ 0x40
  6170                           
  6171  0060                     write_power_mode@reg_addr:	
  6172                           ; 1 bytes @ 0x40
  6173                           
  6174                           
  6175                           ; 1 bytes @ 0x40
  6176  0060                     	ds	1
  6177  0061                     set_osr_humidity_settings@ctrl_meas:	
  6178  0061                     set_osr_press_temp_settings@rslt:	
  6179                           ; 1 bytes @ 0x41
  6180                           
  6181  0061                     set_filter_standby_settings@rslt:	
  6182                           ; 1 bytes @ 0x41
  6183                           
  6184  0061                     write_power_mode@sensor_mode_reg_val:	
  6185                           ; 1 bytes @ 0x41
  6186                           
  6187                           
  6188                           ; 1 bytes @ 0x41
  6189  0061                     	ds	1
  6190  0062                     set_osr_humidity_settings@rslt:	
  6191  0062                     set_osr_press_temp_settings@reg_addr:	
  6192                           ; 1 bytes @ 0x42
  6193                           
  6194  0062                     set_filter_standby_settings@reg_addr:	
  6195                           ; 1 bytes @ 0x42
  6196                           
  6197  0062                     get_calib_data@rslt:	
  6198                           ; 1 bytes @ 0x42
  6199                           
  6200                           
  6201                           ; 1 bytes @ 0x42
  6202  0062                     	ds	1
  6203  0063                     set_osr_humidity_settings@reg_addr:	
  6204  0063                     set_osr_press_temp_settings@reg_data:	
  6205                           ; 1 bytes @ 0x43
  6206                           
  6207  0063                     set_filter_standby_settings@reg_data:	
  6208                           ; 1 bytes @ 0x43
  6209                           
  6210  0063                     get_calib_data@dev:	
  6211                           ; 1 bytes @ 0x43
  6212                           
  6213                           
  6214                           ; 1 bytes @ 0x43
  6215  0063                     	ds	1
  6216  0064                     ?_set_osr_settings:	
  6217  0064                     ?_bme280_compensate_data:	
  6218                           ; 1 bytes @ 0x44
  6219                           
  6220  0064                     ??_bme280_init:	
  6221                           ; 1 bytes @ 0x44
  6222                           
  6223  0064                     bme280_compensate_data@uncomp_data:	
  6224                           ; 1 bytes @ 0x44
  6225                           
  6226  0064                     set_osr_settings@settings:	
  6227                           ; 1 bytes @ 0x44
  6228                           
  6229                           
  6230                           ; 2 bytes @ 0x44
  6231  0064                     	ds	1
  6232  0065                     bme280_compensate_data@comp_data:	
  6233                           
  6234                           ; 1 bytes @ 0x45
  6235  0065                     	ds	1
  6236  0066                     bme280_init@try_count:	
  6237  0066                     bme280_compensate_data@calib_data:	
  6238                           ; 1 bytes @ 0x46
  6239                           
  6240  0066                     set_osr_settings@dev:	
  6241                           ; 1 bytes @ 0x46
  6242                           
  6243                           
  6244                           ; 1 bytes @ 0x46
  6245  0066                     	ds	1
  6246  0067                     ??_set_osr_settings:	
  6247  0067                     ??_bme280_compensate_data:	
  6248                           ; 1 bytes @ 0x47
  6249                           
  6250  0067                     bme280_init@chip_id:	
  6251                           ; 1 bytes @ 0x47
  6252                           
  6253                           
  6254                           ; 1 bytes @ 0x47
  6255  0067                     	ds	1
  6256  0068                     bme280_init@rslt:	
  6257  0068                     bme280_compensate_data@rslt:	
  6258                           ; 1 bytes @ 0x48
  6259                           
  6260                           
  6261                           ; 1 bytes @ 0x48
  6262  0068                     	ds	1
  6263  0069                     ?_put_device_to_sleep:	
  6264  0069                     bme280_init@dev:	
  6265                           ; 1 bytes @ 0x49
  6266                           
  6267  0069                     bme280_compensate_data@sensor_comp:	
  6268                           ; 1 bytes @ 0x49
  6269                           
  6270  0069                     set_osr_settings@rslt:	
  6271                           ; 1 bytes @ 0x49
  6272                           
  6273                           
  6274                           ; 1 bytes @ 0x49
  6275  0069                     	ds	1
  6276  006A                     ?_bme280_get_sensor_data:	
  6277  006A                     bme280_get_sensor_data@comp_data:	
  6278                           ; 1 bytes @ 0x4A
  6279                           
  6280  006A                     set_osr_settings@desired_settings:	
  6281                           ; 1 bytes @ 0x4A
  6282                           
  6283                           
  6284                           ; 1 bytes @ 0x4A
  6285  006A                     	ds	1
  6286  006B                     ?_reload_device_settings:	
  6287  006B                     bme280_get_sensor_data@dev:	
  6288                           ; 1 bytes @ 0x4B
  6289                           
  6290  006B                     reload_device_settings@dev:	
  6291                           ; 1 bytes @ 0x4B
  6292                           
  6293                           
  6294                           ; 1 bytes @ 0x4B
  6295  006B                     	ds	1
  6296  006C                     ??_reload_device_settings:	
  6297  006C                     ??_bme280_get_sensor_data:	
  6298                           ; 1 bytes @ 0x4C
  6299                           
  6300                           
  6301                           ; 1 bytes @ 0x4C
  6302  006C                     	ds	2
  6303  006E                     reload_device_settings@settings:	
  6304                           
  6305                           ; 1 bytes @ 0x4E
  6306  006E                     	ds	1
  6307  006F                     reload_device_settings@rslt:	
  6308                           
  6309                           ; 1 bytes @ 0x4F
  6310  006F                     	ds	1
  6311                           
  6312                           	psect	maintext
  6313  0055                     __pmaintext:	
  6314 ;;
  6315 ;;Main: autosize = 0, tempsize = 5, incstack = 0, save=0
  6316 ;;
  6317 ;; *************** function _main *****************
  6318 ;; Defined at:
  6319 ;;		line 646 in file "main.c"
  6320 ;; Parameters:    Size  Location     Type
  6321 ;;		None
  6322 ;; Auto vars:     Size  Location     Type
  6323 ;;  i               2   40[BANK2 ] int 
  6324 ;;  convertedNum   16   22[BANK2 ] unsigned char [16]
  6325 ;;  sensor_data    12   42[BANK2 ] struct bme280_data
  6326 ;;  index           2   54[BANK2 ] int 
  6327 ;;  end             2   38[BANK2 ] int 
  6328 ;; Return value:  Size  Location     Type
  6329 ;;                  1    wreg      void 
  6330 ;; Registers used:
  6331 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6332 ;; Tracked objects:
  6333 ;;		On entry : B1F/0
  6334 ;;		On exit  : 0/0
  6335 ;;		Unchanged: 0/0
  6336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6338 ;;      Locals:         0       0       0      34       0       0       0       0       0       0       0       0       
      +0       0
  6339 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  6340 ;;      Totals:         0       0       5      34       0       0       0       0       0       0       0       0       
      +0       0
  6341 ;;Total ram usage:       39 bytes
  6342 ;; Hardware stack levels required when called:   16
  6343 ;; This function calls:
  6344 ;;		_BME280_Init
  6345 ;;		_ClearString
  6346 ;;		_InitTiming
  6347 ;;		_Insert
  6348 ;;		_InsertString
  6349 ;;		_IntToString
  6350 ;;		_SYSTEM_Initialize
  6351 ;;		_TransmitString
  6352 ;;		_UIntToHexString
  6353 ;;		_bme280_get_sensor_data
  6354 ;;		_crc16
  6355 ;;		_strlen
  6356 ;; This function is called by:
  6357 ;;		Startup code after reset
  6358 ;; This function uses a non-reentrant model
  6359 ;;
  6360                           
  6361                           
  6362                           ;psect for function _main
  6363  0055                     _main:	
  6364                           
  6365                           ;main.c: 649:     SYSTEM_Initialize();
  6366                           
  6367                           ;incstack = 0
  6368                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6369  0055  3199  215C  3180   	fcall	_SYSTEM_Initialize
  6370                           
  6371                           ;main.c: 650:     InitTiming();
  6372  0058  3199  2134  3180   	fcall	_InitTiming
  6373                           
  6374                           ;main.c: 653:     BME280_Init();
  6375  005B  3191  2191  3180   	fcall	_BME280_Init
  6376                           
  6377                           ;main.c: 655:     ClearString(messages[0]);
  6378  005E  0022               	movlb	2	; select bank2
  6379  005F  086D               	movf	_messages^(0+256),w
  6380  0060  00F5               	movwf	ClearString@str
  6381  0061  3003               	movlw	3
  6382  0062  00F6               	movwf	ClearString@str+1
  6383  0063  319A  226C  3180   	fcall	_ClearString
  6384                           
  6385                           ;main.c: 656:     ClearString(messages[1]);
  6386  0066  0022               	movlb	2	; select bank2
  6387  0067  086E               	movf	(low ((_messages| (0+256)+1)))^0,w
  6388  0068  00F5               	movwf	ClearString@str
  6389  0069  3003               	movlw	3
  6390  006A  00F6               	movwf	ClearString@str+1
  6391  006B  319A  226C  3180   	fcall	_ClearString
  6392  006E                     l4562:	
  6393                           
  6394                           ;main.c: 673:         {;main.c: 675:             struct bme280_data sensor_data;;main.c:
      +                           676:             bme280_get_sensor_data(0x07, &sensor_data, &EnvSensor);
  6395  006E  304A               	movlw	(low (main@sensor_data| (0+256)))& (0+255)
  6396  006F  0021               	movlb	1	; select bank1
  6397  0070  00E5               	movwf	??_main^(0+128)
  6398  0071  0865               	movf	??_main^(0+128),w
  6399  0072  0020               	movlb	0	; select bank0
  6400  0073  00EA               	movwf	bme280_get_sensor_data@comp_data
  6401  0074  30B4               	movlw	(low (_EnvSensor| (0+256)))& (0+255)
  6402  0075  0021               	movlb	1	; select bank1
  6403  0076  00E6               	movwf	(??_main+1)^(0+128)
  6404  0077  0866               	movf	(??_main+1)^(0+128),w
  6405  0078  0020               	movlb	0	; select bank0
  6406  0079  00EB               	movwf	bme280_get_sensor_data@dev
  6407  007A  3007               	movlw	7
  6408  007B  3190  20CC  3180   	fcall	_bme280_get_sensor_data
  6409                           
  6410                           ;main.c: 678:             ClearString(messages[0]);
  6411  007E  0022               	movlb	2	; select bank2
  6412  007F  086D               	movf	_messages^(0+256),w
  6413  0080  00F5               	movwf	ClearString@str
  6414  0081  3003               	movlw	3
  6415  0082  00F6               	movwf	ClearString@str+1
  6416  0083  319A  226C  3180   	fcall	_ClearString
  6417                           
  6418                           ;main.c: 679:             ClearString(messages[1]);
  6419  0086  0022               	movlb	2	; select bank2
  6420  0087  086E               	movf	(low ((_messages| (0+256)+1)))^0,w
  6421  0088  00F5               	movwf	ClearString@str
  6422  0089  3003               	movlw	3
  6423  008A  00F6               	movwf	ClearString@str+1
  6424  008B  319A  226C  3180   	fcall	_ClearString
  6425                           
  6426                           ;main.c: 681:             char convertedNumber[16] = {'\0'};
  6427  008E  3036               	movlw	low main@convertedNumber
  6428  008F  0086               	movwf	6
  6429  0090  3001               	movlw	high main@convertedNumber
  6430  0091  0087               	movwf	7
  6431  0092  3010               	movlw	16
  6432  0093  0021               	movlb	1	; select bank1
  6433  0094  00E5               	movwf	??_main^(0+128)
  6434  0095  3000               	movlw	0
  6435  0096                     u5030:	
  6436  0096  001E               	movwi fsr1++
  6437  0097  0BE5               	decfsz	??_main^(0+128),f
  6438  0098  2896               	goto	u5030
  6439                           
  6440                           ;main.c: 683:             IntToString(sensor_data.temperature, convertedNumber);
  6441  0099  0022               	movlb	2	; select bank2
  6442  009A  084F               	movf	((main@sensor_data+1)^(0+256)+4),w
  6443  009B  0020               	movlb	0	; select bank0
  6444  009C  00AE               	movwf	IntToString@n+1
  6445  009D  0022               	movlb	2	; select bank2
  6446  009E  084E               	movf	(main@sensor_data^(0+256)+4),w
  6447  009F  0020               	movlb	0	; select bank0
  6448  00A0  00AD               	movwf	IntToString@n
  6449  00A1  3036               	movlw	low main@convertedNumber
  6450  00A2  00AF               	movwf	IntToString@dest
  6451  00A3  3001               	movlw	high main@convertedNumber
  6452  00A4  00B0               	movwf	IntToString@dest+1
  6453  00A5  3193  233B  3180   	fcall	_IntToString
  6454                           
  6455                           ;main.c: 684:             int index = strlen(messages[1]);
  6456  00A8  0022               	movlb	2	; select bank2
  6457  00A9  086E               	movf	(low ((_messages| (0+256)+1)))^0,w
  6458  00AA  00F0               	movwf	strlen@s
  6459  00AB  3003               	movlw	3
  6460  00AC  00F1               	movwf	strlen@s+1
  6461  00AD  3199  21A2  3180   	fcall	_strlen
  6462  00B0  0871               	movf	?_strlen+1,w
  6463  00B1  0022               	movlb	2	; select bank2
  6464  00B2  00D7               	movwf	(main@index+1)^(0+256)
  6465  00B3  0870               	movf	?_strlen,w
  6466  00B4  00D6               	movwf	main@index^(0+256)
  6467                           
  6468                           ;main.c: 685:             index = InsertString(messages[1], convertedNumber, index, 70);
  6469  00B5  3036               	movlw	low main@convertedNumber
  6470  00B6  0020               	movlb	0	; select bank0
  6471  00B7  00A0               	movwf	InsertString@src
  6472  00B8  3001               	movlw	high main@convertedNumber
  6473  00B9  00A1               	movwf	InsertString@src+1
  6474  00BA  0022               	movlb	2	; select bank2
  6475  00BB  0857               	movf	(main@index+1)^(0+256),w
  6476  00BC  0020               	movlb	0	; select bank0
  6477  00BD  00A3               	movwf	InsertString@index+1
  6478  00BE  0022               	movlb	2	; select bank2
  6479  00BF  0856               	movf	main@index^(0+256),w
  6480  00C0  0020               	movlb	0	; select bank0
  6481  00C1  00A2               	movwf	InsertString@index
  6482  00C2  3046               	movlw	70
  6483  00C3  00A4               	movwf	InsertString@destLimit
  6484  00C4  3000               	movlw	0
  6485  00C5  00A5               	movwf	InsertString@destLimit+1
  6486  00C6  0022               	movlb	2	; select bank2
  6487  00C7  086E               	movf	(low ((_messages| (0+256)+1)))^0,w
  6488  00C8  319F  275F  3180   	fcall	_InsertString
  6489  00CB  0821               	movf	?_InsertString+1,w
  6490  00CC  0022               	movlb	2	; select bank2
  6491  00CD  00D7               	movwf	(main@index+1)^(0+256)
  6492  00CE  0020               	movlb	0	; select bank0
  6493  00CF  0820               	movf	?_InsertString,w
  6494  00D0  0022               	movlb	2	; select bank2
  6495  00D1  00D6               	movwf	main@index^(0+256)
  6496                           
  6497                           ;main.c: 686:             index = Insert(messages[1], ',', index, 70);
  6498  00D2  302C               	movlw	44
  6499  00D3  0021               	movlb	1	; select bank1
  6500  00D4  00E5               	movwf	??_main^(0+128)
  6501  00D5  0865               	movf	??_main^(0+128),w
  6502  00D6  00F0               	movwf	Insert@src
  6503  00D7  0022               	movlb	2	; select bank2
  6504  00D8  0857               	movf	(main@index+1)^(0+256),w
  6505  00D9  00F2               	movwf	Insert@index+1
  6506  00DA  0856               	movf	main@index^(0+256),w
  6507  00DB  00F1               	movwf	Insert@index
  6508  00DC  3046               	movlw	70
  6509  00DD  00F3               	movwf	Insert@destLimit
  6510  00DE  3000               	movlw	0
  6511  00DF  00F4               	movwf	Insert@destLimit+1
  6512  00E0  086E               	movf	(low ((_messages| (0+256)+1)))^0,w
  6513  00E1  3191  21F9  3180   	fcall	_Insert
  6514  00E4  0871               	movf	?_Insert+1,w
  6515  00E5  0022               	movlb	2	; select bank2
  6516  00E6  00D7               	movwf	(main@index+1)^(0+256)
  6517  00E7  0870               	movf	?_Insert,w
  6518  00E8  00D6               	movwf	main@index^(0+256)
  6519                           
  6520                           ;main.c: 687:             ClearString(convertedNumber);
  6521  00E9  3036               	movlw	low main@convertedNumber
  6522  00EA  00F5               	movwf	ClearString@str
  6523  00EB  3001               	movlw	high main@convertedNumber
  6524  00EC  00F6               	movwf	ClearString@str+1
  6525  00ED  319A  226C  3180   	fcall	_ClearString
  6526                           
  6527                           ;main.c: 688:             IntToString(sensor_data.pressure, convertedNumber);
  6528  00F0  0022               	movlb	2	; select bank2
  6529  00F1  084B               	movf	(main@sensor_data+1)^(0+256),w
  6530  00F2  0020               	movlb	0	; select bank0
  6531  00F3  00AE               	movwf	IntToString@n+1
  6532  00F4  0022               	movlb	2	; select bank2
  6533  00F5  084A               	movf	main@sensor_data^(0+256),w
  6534  00F6  0020               	movlb	0	; select bank0
  6535  00F7  00AD               	movwf	IntToString@n
  6536  00F8  3036               	movlw	low main@convertedNumber
  6537  00F9  00AF               	movwf	IntToString@dest
  6538  00FA  3001               	movlw	high main@convertedNumber
  6539  00FB  00B0               	movwf	IntToString@dest+1
  6540  00FC  3193  233B  3180   	fcall	_IntToString
  6541                           
  6542                           ;main.c: 689:             index = InsertString(messages[1], convertedNumber, index, 70);
  6543  00FF  3036               	movlw	low main@convertedNumber
  6544  0100  00A0               	movwf	InsertString@src
  6545  0101  3001               	movlw	high main@convertedNumber
  6546  0102  00A1               	movwf	InsertString@src+1
  6547  0103  0022               	movlb	2	; select bank2
  6548  0104  0857               	movf	(main@index+1)^(0+256),w
  6549  0105  0020               	movlb	0	; select bank0
  6550  0106  00A3               	movwf	InsertString@index+1
  6551  0107  0022               	movlb	2	; select bank2
  6552  0108  0856               	movf	main@index^(0+256),w
  6553  0109  0020               	movlb	0	; select bank0
  6554  010A  00A2               	movwf	InsertString@index
  6555  010B  3046               	movlw	70
  6556  010C  00A4               	movwf	InsertString@destLimit
  6557  010D  3000               	movlw	0
  6558  010E  00A5               	movwf	InsertString@destLimit+1
  6559  010F  0022               	movlb	2	; select bank2
  6560  0110  086E               	movf	(low ((_messages| (0+256)+1)))^0,w
  6561  0111  319F  275F  3180   	fcall	_InsertString
  6562  0114  0821               	movf	?_InsertString+1,w
  6563  0115  0022               	movlb	2	; select bank2
  6564  0116  00D7               	movwf	(main@index+1)^(0+256)
  6565  0117  0020               	movlb	0	; select bank0
  6566  0118  0820               	movf	?_InsertString,w
  6567  0119  0022               	movlb	2	; select bank2
  6568  011A  00D6               	movwf	main@index^(0+256)
  6569                           
  6570                           ;main.c: 690:             int end = index;
  6571  011B  0857               	movf	(main@index+1)^(0+256),w
  6572  011C  00C7               	movwf	(main@end+1)^(0+256)
  6573  011D  0856               	movf	main@index^(0+256),w
  6574  011E  00C6               	movwf	main@end^(0+256)
  6575                           
  6576                           ;main.c: 693:             index = InsertString(messages[0], "TEST,", 0, 70);
  6577  011F  30AA               	movlw	low (STR_11| (0+32768))
  6578  0120  0020               	movlb	0	; select bank0
  6579  0121  00A0               	movwf	InsertString@src
  6580  0122  3098               	movlw	high (STR_11| (0+32768))
  6581  0123  00A1               	movwf	InsertString@src+1
  6582  0124  3000               	movlw	0
  6583  0125  00A2               	movwf	InsertString@index
  6584  0126  00A3               	movwf	InsertString@index+1
  6585  0127  3046               	movlw	70
  6586  0128  00A4               	movwf	InsertString@destLimit
  6587  0129  3000               	movlw	0
  6588  012A  00A5               	movwf	InsertString@destLimit+1
  6589  012B  0022               	movlb	2	; select bank2
  6590  012C  086D               	movf	_messages^(0+256),w
  6591  012D  319F  275F  3180   	fcall	_InsertString
  6592  0130  0821               	movf	?_InsertString+1,w
  6593  0131  0022               	movlb	2	; select bank2
  6594  0132  00D7               	movwf	(main@index+1)^(0+256)
  6595  0133  0020               	movlb	0	; select bank0
  6596  0134  0820               	movf	?_InsertString,w
  6597  0135  0022               	movlb	2	; select bank2
  6598  0136  00D6               	movwf	main@index^(0+256)
  6599                           
  6600                           ;main.c: 694:             ClearString(convertedNumber);
  6601  0137  3036               	movlw	low main@convertedNumber
  6602  0138  00F5               	movwf	ClearString@str
  6603  0139  3001               	movlw	high main@convertedNumber
  6604  013A  00F6               	movwf	ClearString@str+1
  6605  013B  319A  226C  3180   	fcall	_ClearString
  6606                           
  6607                           ;main.c: 695:             IntToString(id, convertedNumber);
  6608  013E  0022               	movlb	2	; select bank2
  6609  013F  0864               	movf	(_id+1)^(0+256),w
  6610  0140  0020               	movlb	0	; select bank0
  6611  0141  00AE               	movwf	IntToString@n+1
  6612  0142  0022               	movlb	2	; select bank2
  6613  0143  0863               	movf	_id^(0+256),w
  6614  0144  0020               	movlb	0	; select bank0
  6615  0145  00AD               	movwf	IntToString@n
  6616  0146  3036               	movlw	low main@convertedNumber
  6617  0147  00AF               	movwf	IntToString@dest
  6618  0148  3001               	movlw	high main@convertedNumber
  6619  0149  00B0               	movwf	IntToString@dest+1
  6620  014A  3193  233B  3180   	fcall	_IntToString
  6621                           
  6622                           ;main.c: 696:             index = InsertString(messages[0], convertedNumber, index, 70);
  6623  014D  3036               	movlw	low main@convertedNumber
  6624  014E  00A0               	movwf	InsertString@src
  6625  014F  3001               	movlw	high main@convertedNumber
  6626  0150  00A1               	movwf	InsertString@src+1
  6627  0151  0022               	movlb	2	; select bank2
  6628  0152  0857               	movf	(main@index+1)^(0+256),w
  6629  0153  0020               	movlb	0	; select bank0
  6630  0154  00A3               	movwf	InsertString@index+1
  6631  0155  0022               	movlb	2	; select bank2
  6632  0156  0856               	movf	main@index^(0+256),w
  6633  0157  0020               	movlb	0	; select bank0
  6634  0158  00A2               	movwf	InsertString@index
  6635  0159  3046               	movlw	70
  6636  015A  00A4               	movwf	InsertString@destLimit
  6637  015B  3000               	movlw	0
  6638  015C  00A5               	movwf	InsertString@destLimit+1
  6639  015D  0022               	movlb	2	; select bank2
  6640  015E  086D               	movf	_messages^(0+256),w
  6641  015F  319F  275F  3180   	fcall	_InsertString
  6642  0162  0821               	movf	?_InsertString+1,w
  6643  0163  0022               	movlb	2	; select bank2
  6644  0164  00D7               	movwf	(main@index+1)^(0+256)
  6645  0165  0020               	movlb	0	; select bank0
  6646  0166  0820               	movf	?_InsertString,w
  6647  0167  0022               	movlb	2	; select bank2
  6648  0168  00D6               	movwf	main@index^(0+256)
  6649                           
  6650                           ;main.c: 697:             Insert(messages[0], ',', index, 70);
  6651  0169  302C               	movlw	44
  6652  016A  0021               	movlb	1	; select bank1
  6653  016B  00E5               	movwf	??_main^(0+128)
  6654  016C  0865               	movf	??_main^(0+128),w
  6655  016D  00F0               	movwf	Insert@src
  6656  016E  0022               	movlb	2	; select bank2
  6657  016F  0857               	movf	(main@index+1)^(0+256),w
  6658  0170  00F2               	movwf	Insert@index+1
  6659  0171  0856               	movf	main@index^(0+256),w
  6660  0172  00F1               	movwf	Insert@index
  6661  0173  3046               	movlw	70
  6662  0174  00F3               	movwf	Insert@destLimit
  6663  0175  3000               	movlw	0
  6664  0176  00F4               	movwf	Insert@destLimit+1
  6665  0177  086D               	movf	_messages^(0+256),w
  6666  0178  3191  21F9  3180   	fcall	_Insert
  6667                           
  6668                           ;main.c: 699:             UIntToHexString(crc16(messages, 2), checksum);
  6669  017B  3002               	movlw	2
  6670  017C  0020               	movlb	0	; select bank0
  6671  017D  00A0               	movwf	crc16@segments
  6672  017E  3000               	movlw	0
  6673  017F  00A1               	movwf	crc16@segments+1
  6674  0180  306D               	movlw	(low (_messages| (0+256)))& (0+255)
  6675  0181  3187  27BA  3180   	fcall	_crc16
  6676  0184  0820               	movf	?_crc16,w
  6677  0185  0021               	movlb	1	; select bank1
  6678  0186  00E5               	movwf	??_main^(0+128)
  6679  0187  0020               	movlb	0	; select bank0
  6680  0188  0821               	movf	?_crc16+1,w
  6681  0189  0021               	movlb	1	; select bank1
  6682  018A  00E6               	movwf	(??_main^(0+128)+1)
  6683  018B  01E7               	clrf	(??_main^(0+128)+2)
  6684  018C  01E8               	clrf	(??_main^(0+128)+3)
  6685  018D  0868               	movf	(??_main+3)^(0+128),w
  6686  018E  0020               	movlb	0	; select bank0
  6687  018F  00B0               	movwf	UIntToHexString@n+3
  6688  0190  0021               	movlb	1	; select bank1
  6689  0191  0867               	movf	(??_main+2)^(0+128),w
  6690  0192  0020               	movlb	0	; select bank0
  6691  0193  00AF               	movwf	UIntToHexString@n+2
  6692  0194  0021               	movlb	1	; select bank1
  6693  0195  0866               	movf	(??_main+1)^(0+128),w
  6694  0196  0020               	movlb	0	; select bank0
  6695  0197  00AE               	movwf	UIntToHexString@n+1
  6696  0198  0021               	movlb	1	; select bank1
  6697  0199  0865               	movf	??_main^(0+128),w
  6698  019A  0020               	movlb	0	; select bank0
  6699  019B  00AD               	movwf	UIntToHexString@n
  6700  019C  3065               	movlw	(low (_checksum| (0+256)))& (0+255)
  6701  019D  0021               	movlb	1	; select bank1
  6702  019E  00E9               	movwf	(??_main+4)^(0+128)
  6703  019F  0869               	movf	(??_main+4)^(0+128),w
  6704  01A0  0020               	movlb	0	; select bank0
  6705  01A1  00B1               	movwf	UIntToHexString@dest
  6706  01A2  3194  248B  3180   	fcall	_UIntToHexString
  6707                           
  6708                           ;main.c: 702:             InsertString(messages[0], "$$", 0, 70);
  6709  01A5  30BA               	movlw	low (STR_12| (0+32768))
  6710  01A6  00A0               	movwf	InsertString@src
  6711  01A7  3098               	movlw	high (STR_12| (0+32768))
  6712  01A8  00A1               	movwf	InsertString@src+1
  6713  01A9  3000               	movlw	0
  6714  01AA  00A2               	movwf	InsertString@index
  6715  01AB  00A3               	movwf	InsertString@index+1
  6716  01AC  3046               	movlw	70
  6717  01AD  00A4               	movwf	InsertString@destLimit
  6718  01AE  3000               	movlw	0
  6719  01AF  00A5               	movwf	InsertString@destLimit+1
  6720  01B0  0022               	movlb	2	; select bank2
  6721  01B1  086D               	movf	_messages^(0+256),w
  6722  01B2  319F  275F  3180   	fcall	_InsertString
  6723                           
  6724                           ;main.c: 704:             index = Insert(messages[1], '*', end, 70);
  6725  01B5  302A               	movlw	42
  6726  01B6  0021               	movlb	1	; select bank1
  6727  01B7  00E5               	movwf	??_main^(0+128)
  6728  01B8  0865               	movf	??_main^(0+128),w
  6729  01B9  00F0               	movwf	Insert@src
  6730  01BA  0022               	movlb	2	; select bank2
  6731  01BB  0847               	movf	(main@end+1)^(0+256),w
  6732  01BC  00F2               	movwf	Insert@index+1
  6733  01BD  0846               	movf	main@end^(0+256),w
  6734  01BE  00F1               	movwf	Insert@index
  6735  01BF  3046               	movlw	70
  6736  01C0  00F3               	movwf	Insert@destLimit
  6737  01C1  3000               	movlw	0
  6738  01C2  00F4               	movwf	Insert@destLimit+1
  6739  01C3  086E               	movf	(low ((_messages| (0+256)+1)))^0,w
  6740  01C4  3191  21F9  3180   	fcall	_Insert
  6741  01C7  0871               	movf	?_Insert+1,w
  6742  01C8  0022               	movlb	2	; select bank2
  6743  01C9  00D7               	movwf	(main@index+1)^(0+256)
  6744  01CA  0870               	movf	?_Insert,w
  6745  01CB  00D6               	movwf	main@index^(0+256)
  6746                           
  6747                           ;main.c: 705:             index = InsertString(messages[1], checksum, index, 70);
  6748  01CC  3065               	movlw	low _checksum
  6749  01CD  0020               	movlb	0	; select bank0
  6750  01CE  00A0               	movwf	InsertString@src
  6751  01CF  3001               	movlw	high _checksum
  6752  01D0  00A1               	movwf	InsertString@src+1
  6753  01D1  0022               	movlb	2	; select bank2
  6754  01D2  0857               	movf	(main@index+1)^(0+256),w
  6755  01D3  0020               	movlb	0	; select bank0
  6756  01D4  00A3               	movwf	InsertString@index+1
  6757  01D5  0022               	movlb	2	; select bank2
  6758  01D6  0856               	movf	main@index^(0+256),w
  6759  01D7  0020               	movlb	0	; select bank0
  6760  01D8  00A2               	movwf	InsertString@index
  6761  01D9  3046               	movlw	70
  6762  01DA  00A4               	movwf	InsertString@destLimit
  6763  01DB  3000               	movlw	0
  6764  01DC  00A5               	movwf	InsertString@destLimit+1
  6765  01DD  0022               	movlb	2	; select bank2
  6766  01DE  086E               	movf	(low ((_messages| (0+256)+1)))^0,w
  6767  01DF  319F  275F  3180   	fcall	_InsertString
  6768  01E2  0821               	movf	?_InsertString+1,w
  6769  01E3  0022               	movlb	2	; select bank2
  6770  01E4  00D7               	movwf	(main@index+1)^(0+256)
  6771  01E5  0020               	movlb	0	; select bank0
  6772  01E6  0820               	movf	?_InsertString,w
  6773  01E7  0022               	movlb	2	; select bank2
  6774  01E8  00D6               	movwf	main@index^(0+256)
  6775                           
  6776                           ;main.c: 706:             index = Insert(messages[1], '\n', index, 70);
  6777  01E9  300A               	movlw	10
  6778  01EA  0021               	movlb	1	; select bank1
  6779  01EB  00E5               	movwf	??_main^(0+128)
  6780  01EC  0865               	movf	??_main^(0+128),w
  6781  01ED  00F0               	movwf	Insert@src
  6782  01EE  0022               	movlb	2	; select bank2
  6783  01EF  0857               	movf	(main@index+1)^(0+256),w
  6784  01F0  00F2               	movwf	Insert@index+1
  6785  01F1  0856               	movf	main@index^(0+256),w
  6786  01F2  00F1               	movwf	Insert@index
  6787  01F3  3046               	movlw	70
  6788  01F4  00F3               	movwf	Insert@destLimit
  6789  01F5  3000               	movlw	0
  6790  01F6  00F4               	movwf	Insert@destLimit+1
  6791  01F7  086E               	movf	(low ((_messages| (0+256)+1)))^0,w
  6792  01F8  3191  21F9  3180   	fcall	_Insert
  6793  01FB  0871               	movf	?_Insert+1,w
  6794  01FC  0022               	movlb	2	; select bank2
  6795  01FD  00D7               	movwf	(main@index+1)^(0+256)
  6796  01FE  0870               	movf	?_Insert,w
  6797  01FF  00D6               	movwf	main@index^(0+256)
  6798                           
  6799                           ;main.c: 708:             id++;
  6800  0200  3001               	movlw	1
  6801  0201  07E3               	addwf	_id^(0+256),f
  6802  0202  3000               	movlw	0
  6803  0203  3DE4               	addwfc	(_id+1)^(0+256),f
  6804  0204  150C               	bsf	12,2	;volatile
  6805                           
  6806                           ;main.c: 711:             TransmitString(messages[0]);
  6807  0205  086D               	movf	_messages^(0+256),w
  6808  0206  319A  22E3  3180   	fcall	_TransmitString
  6809                           
  6810                           ;main.c: 712:             TransmitString(messages[1]);
  6811  0209  0022               	movlb	2	; select bank2
  6812  020A  086E               	movf	(low ((_messages| (0+256)+1)))^0,w
  6813  020B  319A  22E3  3180   	fcall	_TransmitString
  6814  020E  0022               	movlb	2	; select bank2
  6815  020F  110C               	bcf	12,2	;volatile
  6816                           
  6817                           ;main.c: 722:         for (int i = 0; i < 1000; i++)
  6818  0210  01C8               	clrf	main@i^(0+256)
  6819  0211  01C9               	clrf	(main@i+1)^(0+256)
  6820  0212                     l4622:	
  6821                           
  6822                           ;main.c: 723:         {;main.c: 724:             _delay((unsigned long)((5)*(4000000/400
      +                          0.0)));
  6823  0212  3007               	movlw	7
  6824  0213  0021               	movlb	1	; select bank1
  6825  0214  00E5               	movwf	??_main^(0+128)
  6826  0215  307D               	movlw	125
  6827  0216                     u5057:	
  6828  0216  0B89               	decfsz	9,f
  6829  0217  2A16               	goto	u5057
  6830  0218  0BE5               	decfsz	??_main^(0+128),f
  6831  0219  2A16               	goto	u5057
  6832                           
  6833                           ;main.c: 725:         }
  6834  021A  3001               	movlw	1
  6835  021B  0022               	movlb	2	; select bank2
  6836  021C  07C8               	addwf	main@i^(0+256),f
  6837  021D  3000               	movlw	0
  6838  021E  3DC9               	addwfc	(main@i+1)^(0+256),f
  6839  021F  0849               	movf	(main@i+1)^(0+256),w
  6840  0220  3A80               	xorlw	128
  6841  0221  0021               	movlb	1	; select bank1
  6842  0222  00E5               	movwf	??_main^(0+128)
  6843  0223  3083               	movlw	131
  6844  0224  0265               	subwf	??_main^(0+128),w
  6845  0225  1D03               	skipz
  6846  0226  2A2A               	goto	u5045
  6847  0227  30E8               	movlw	232
  6848  0228  0022               	movlb	2	; select bank2
  6849  0229  0248               	subwf	main@i^(0+256),w
  6850  022A                     u5045:	
  6851  022A  1803               	btfsc	3,0
  6852  022B  286E               	goto	l4562
  6853  022C  2A12               	goto	l4622
  6854  022D                     __end_of_main:	
  6855                           
  6856                           	psect	text1
  6857  07BA                     __ptext1:	
  6858 ;; *************** function _crc16 *****************
  6859 ;; Defined at:
  6860 ;;		line 21 in file "rtty.c"
  6861 ;; Parameters:    Size  Location     Type
  6862 ;;  data            1    wreg     PTR PTR unsigned char 
  6863 ;;		 -> messages(2), 
  6864 ;;  segments        2    0[BANK0 ] int 
  6865 ;; Auto vars:     Size  Location     Type
  6866 ;;  data            1    6[BANK0 ] PTR PTR unsigned char 
  6867 ;;		 -> messages(2), 
  6868 ;;  i               2    7[BANK0 ] int 
  6869 ;;  crc             2    4[BANK0 ] unsigned short 
  6870 ;; Return value:  Size  Location     Type
  6871 ;;                  2    0[BANK0 ] unsigned short 
  6872 ;; Registers used:
  6873 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6874 ;; Tracked objects:
  6875 ;;		On entry : 1F/0
  6876 ;;		On exit  : 1F/0
  6877 ;;		Unchanged: 0/0
  6878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6879 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6880 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6881 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6882 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6883 ;;Total ram usage:        9 bytes
  6884 ;; Hardware stack levels used:    1
  6885 ;; Hardware stack levels required when called:    4
  6886 ;; This function calls:
  6887 ;;		_crc16_update
  6888 ;;		_strlen
  6889 ;; This function is called by:
  6890 ;;		_main
  6891 ;; This function uses a non-reentrant model
  6892 ;;
  6893                           
  6894                           
  6895                           ;psect for function _crc16
  6896  07BA                     _crc16:	
  6897                           
  6898                           ;incstack = 0
  6899                           ; Regs used in _crc16: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6900                           ;crc16@data stored from wreg
  6901  07BA  00A6               	movwf	crc16@data
  6902                           
  6903                           ;rtty.c: 21: uint16_t crc16(char** data, int segments);rtty.c: 22: {;rtty.c: 23:     uin
      +                          t16_t crc = 0xFFFF;
  6904  07BB  30FF               	movlw	255
  6905  07BC  00A4               	movwf	crc16@crc
  6906  07BD  30FF               	movlw	255
  6907  07BE  00A5               	movwf	crc16@crc+1
  6908                           
  6909                           ;rtty.c: 24:     for (int i = 0; i < segments; i++)
  6910  07BF  01A7               	clrf	crc16@i
  6911  07C0  01A8               	clrf	crc16@i+1
  6912  07C1                     l3700:	
  6913  07C1  0828               	movf	crc16@i+1,w
  6914  07C2  3A80               	xorlw	128
  6915  07C3  00A2               	movwf	??_crc16
  6916  07C4  0821               	movf	crc16@segments+1,w
  6917  07C5  3A80               	xorlw	128
  6918  07C6  0222               	subwf	??_crc16,w
  6919  07C7  1D03               	skipz
  6920  07C8  2FCB               	goto	u3775
  6921  07C9  0820               	movf	crc16@segments,w
  6922  07CA  0227               	subwf	crc16@i,w
  6923  07CB                     u3775:	
  6924  07CB  1803               	btfsc	3,0
  6925  07CC  2FF9               	goto	l3702
  6926                           
  6927                           ;rtty.c: 25:     {;rtty.c: 26:         crc = crc16_update(data[i], strlen(data[i]), crc)
      +                          ;
  6928  07CD  0020               	movlb	0	; select bank0
  6929  07CE  0827               	movf	crc16@i,w
  6930  07CF  0726               	addwf	crc16@data,w
  6931  07D0  00A2               	movwf	??_crc16
  6932  07D1  0822               	movf	??_crc16,w
  6933  07D2  0086               	movwf	6
  6934  07D3  3001               	movlw	1	; select bank2/3
  6935  07D4  0087               	movwf	7
  6936  07D5  0801               	movf	1,w
  6937  07D6  00F0               	movwf	strlen@s
  6938  07D7  3003               	movlw	3
  6939  07D8  00F1               	movwf	strlen@s+1
  6940  07D9  3199  21A2  3187   	fcall	_strlen
  6941  07DC  0871               	movf	?_strlen+1,w
  6942  07DD  00F6               	movwf	crc16_update@length+1
  6943  07DE  0870               	movf	?_strlen,w
  6944  07DF  00F5               	movwf	crc16_update@length
  6945  07E0  0020               	movlb	0	; select bank0
  6946  07E1  0825               	movf	crc16@crc+1,w
  6947  07E2  00F8               	movwf	crc16_update@wCrc+1
  6948  07E3  0824               	movf	crc16@crc,w
  6949  07E4  00F7               	movwf	crc16_update@wCrc
  6950  07E5  0827               	movf	crc16@i,w
  6951  07E6  0726               	addwf	crc16@data,w
  6952  07E7  00A3               	movwf	??_crc16+1
  6953  07E8  0823               	movf	??_crc16+1,w
  6954  07E9  0086               	movwf	6
  6955  07EA  3001               	movlw	1	; select bank2/3
  6956  07EB  0087               	movwf	7
  6957  07EC  0801               	movf	1,w
  6958  07ED  319C  24F1  3187   	fcall	_crc16_update
  6959  07F0  0876               	movf	?_crc16_update+1,w
  6960  07F1  00A5               	movwf	crc16@crc+1
  6961  07F2  0875               	movf	?_crc16_update,w
  6962  07F3  00A4               	movwf	crc16@crc
  6963                           
  6964                           ;rtty.c: 27:     }
  6965  07F4  3001               	movlw	1
  6966  07F5  07A7               	addwf	crc16@i,f
  6967  07F6  3000               	movlw	0
  6968  07F7  3DA8               	addwfc	crc16@i+1,f
  6969  07F8  2FC1               	goto	l3700
  6970  07F9                     l3702:	
  6971                           
  6972                           ;rtty.c: 28:     return crc & 0xFFFF;
  6973  07F9  0020               	movlb	0	; select bank0
  6974  07FA  0825               	movf	crc16@crc+1,w
  6975  07FB  00A1               	movwf	?_crc16+1
  6976  07FC  0824               	movf	crc16@crc,w
  6977  07FD  00A0               	movwf	?_crc16
  6978  07FE  0008               	return
  6979  07FF                     __end_of_crc16:	
  6980                           
  6981                           	psect	text2
  6982  1CF1                     __ptext2:	
  6983 ;; *************** function _crc16_update *****************
  6984 ;; Defined at:
  6985 ;;		line 10 in file "rtty.c"
  6986 ;; Parameters:    Size  Location     Type
  6987 ;;  pData           1    wreg     PTR unsigned char 
  6988 ;;		 -> message_end(73), message_start(70), 
  6989 ;;  length          2    5[COMMON] int 
  6990 ;;  wCrc            2    7[COMMON] unsigned short 
  6991 ;; Auto vars:     Size  Location     Type
  6992 ;;  pData           1   12[COMMON] PTR unsigned char 
  6993 ;;		 -> message_end(73), message_start(70), 
  6994 ;;  i               1   13[COMMON] unsigned char 
  6995 ;; Return value:  Size  Location     Type
  6996 ;;                  2    5[COMMON] unsigned short 
  6997 ;; Registers used:
  6998 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6999 ;; Tracked objects:
  7000 ;;		On entry : 1F/0
  7001 ;;		On exit  : 1F/0
  7002 ;;		Unchanged: 1F/0
  7003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7004 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7005 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7006 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7007 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7008 ;;Total ram usage:        9 bytes
  7009 ;; Hardware stack levels used:    1
  7010 ;; Hardware stack levels required when called:    3
  7011 ;; This function calls:
  7012 ;;		Nothing
  7013 ;; This function is called by:
  7014 ;;		_crc16
  7015 ;; This function uses a non-reentrant model
  7016 ;;
  7017                           
  7018                           
  7019                           ;psect for function _crc16_update
  7020  1CF1                     _crc16_update:	
  7021                           
  7022                           ;incstack = 0
  7023                           ; Regs used in _crc16_update: [wreg+fsr1l+fsr1h+status,2+status,0]
  7024                           ;crc16_update@pData stored from wreg
  7025  1CF1  00FC               	movwf	crc16_update@pData
  7026  1CF2                     l3484:	
  7027                           ;rtty.c: 10: uint16_t crc16_update(char* pData, int length, uint16_t wCrc);rtty.c: 11: {
      +                          ;rtty.c: 12:     uint8_t i;;rtty.c: 13:     while (length--) {
  7028                           
  7029                           
  7030                           ;rtty.c: 13:     while (length--) {
  7031  1CF2  30FF               	movlw	255
  7032  1CF3  07F5               	addwf	crc16_update@length,f
  7033  1CF4  30FF               	movlw	255
  7034  1CF5  3DF6               	addwfc	crc16_update@length+1,f
  7035  1CF6  0A75               	incf	crc16_update@length,w
  7036  1CF7  1903               	btfsc	3,2
  7037  1CF8  0A76               	incf	crc16_update@length+1,w
  7038  1CF9  1903               	btfsc	3,2
  7039  1CFA  2D29               	goto	l3486
  7040                           
  7041                           ;rtty.c: 14:         wCrc ^= *(unsigned char *)pData++ << 8;
  7042  1CFB  087C               	movf	crc16_update@pData,w
  7043  1CFC  0086               	movwf	6
  7044  1CFD  3003               	movlw	3	; select bank6/7
  7045  1CFE  0087               	movwf	7
  7046  1CFF  0801               	movf	1,w
  7047  1D00  00F9               	movwf	??_crc16_update
  7048  1D01  01FA               	clrf	??_crc16_update+1
  7049  1D02  0879               	movf	??_crc16_update,w
  7050  1D03  00FA               	movwf	??_crc16_update+1
  7051  1D04  01F9               	clrf	??_crc16_update
  7052  1D05  0879               	movf	??_crc16_update,w
  7053  1D06  06F7               	xorwf	crc16_update@wCrc,f
  7054  1D07  087A               	movf	??_crc16_update+1,w
  7055  1D08  06F8               	xorwf	crc16_update@wCrc+1,f
  7056  1D09  3001               	movlw	1
  7057  1D0A  00F9               	movwf	??_crc16_update
  7058  1D0B  0879               	movf	??_crc16_update,w
  7059  1D0C  07FC               	addwf	crc16_update@pData,f
  7060                           
  7061                           ;rtty.c: 15:         for (i=0; i < 8; i++)
  7062  1D0D  01FD               	clrf	crc16_update@i
  7063  1D0E                     l783:	
  7064                           
  7065                           ;rtty.c: 16:             wCrc = wCrc & 0x8000 ? (wCrc << 1) ^ 0x1021 : wCrc << 1;
  7066  1D0E  1BF8               	btfsc	crc16_update@wCrc+1,7
  7067  1D0F  2D14               	goto	l3480
  7068  1D10  3577               	lslf	crc16_update@wCrc,w
  7069  1D11  00F7               	movwf	crc16_update@wCrc
  7070  1D12  0D78               	rlf	crc16_update@wCrc+1,w
  7071  1D13  2D1F               	goto	L1
  7072  1D14                     l3480:	
  7073  1D14  0878               	movf	crc16_update@wCrc+1,w
  7074  1D15  00FA               	movwf	??_crc16_update+1
  7075  1D16  0877               	movf	crc16_update@wCrc,w
  7076  1D17  00F9               	movwf	??_crc16_update
  7077  1D18  35F9               	lslf	??_crc16_update,f
  7078  1D19  0DFA               	rlf	??_crc16_update+1,f
  7079  1D1A  3021               	movlw	33
  7080  1D1B  0679               	xorwf	??_crc16_update,w
  7081  1D1C  00F7               	movwf	crc16_update@wCrc
  7082  1D1D  3010               	movlw	16
  7083  1D1E  067A               	xorwf	??_crc16_update+1,w
  7084  1D1F                     L1:	
  7085  1D1F  00F8               	movwf	crc16_update@wCrc+1
  7086  1D20  3001               	movlw	1
  7087  1D21  00F9               	movwf	??_crc16_update
  7088  1D22  0879               	movf	??_crc16_update,w
  7089  1D23  07FD               	addwf	crc16_update@i,f
  7090  1D24  3008               	movlw	8
  7091  1D25  027D               	subwf	crc16_update@i,w
  7092  1D26  1803               	btfsc	3,0
  7093  1D27  2CF2               	goto	l3484
  7094  1D28  2D0E               	goto	l783
  7095  1D29                     l3486:	
  7096                           
  7097                           ;rtty.c: 18:     return wCrc;
  7098  1D29  0878               	movf	crc16_update@wCrc+1,w
  7099  1D2A  00F6               	movwf	?_crc16_update+1
  7100  1D2B  0877               	movf	crc16_update@wCrc,w
  7101  1D2C  00F5               	movwf	?_crc16_update
  7102  1D2D  0008               	return
  7103  1D2E                     __end_of_crc16_update:	
  7104                           
  7105                           	psect	text3
  7106  10CC                     __ptext3:	
  7107 ;; *************** function _bme280_get_sensor_data *****************
  7108 ;; Defined at:
  7109 ;;		line 660 in file "BME280_driver/bme280.c"
  7110 ;; Parameters:    Size  Location     Type
  7111 ;;  sensor_comp     1    wreg     unsigned char 
  7112 ;;  comp_data       1   74[BANK0 ] PTR struct bme280_data
  7113 ;;		 -> main@sensor_data(12), 
  7114 ;;  dev             1   75[BANK0 ] PTR struct bme280_dev
  7115 ;;		 -> EnvSensor(51), 
  7116 ;; Auto vars:     Size  Location     Type
  7117 ;;  sensor_comp     1    8[BANK2 ] unsigned char 
  7118 ;;  uncomp_data    12   10[BANK2 ] struct bme280_uncomp_dat
  7119 ;;  reg_data        8    0[BANK2 ] unsigned char [8]
  7120 ;;  rslt            1    9[BANK2 ] char 
  7121 ;; Return value:  Size  Location     Type
  7122 ;;                  1    wreg      char 
  7123 ;; Registers used:
  7124 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7125 ;; Tracked objects:
  7126 ;;		On entry : 1F/0
  7127 ;;		On exit  : 1D/0
  7128 ;;		Unchanged: 0/0
  7129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7130 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7131 ;;      Locals:         0       0       0      22       0       0       0       0       0       0       0       0       
      +0       0
  7132 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7133 ;;      Totals:         0       5       0      22       0       0       0       0       0       0       0       0       
      +0       0
  7134 ;;Total ram usage:       27 bytes
  7135 ;; Hardware stack levels used:    1
  7136 ;; Hardware stack levels required when called:   10
  7137 ;; This function calls:
  7138 ;;		_bme280_compensate_data
  7139 ;;		_bme280_get_regs
  7140 ;;		_bme280_parse_sensor_data
  7141 ;;		_null_ptr_check
  7142 ;; This function is called by:
  7143 ;;		_main
  7144 ;; This function uses a non-reentrant model
  7145 ;;
  7146                           
  7147                           
  7148                           ;psect for function _bme280_get_sensor_data
  7149  10CC                     _bme280_get_sensor_data:	
  7150                           
  7151                           ;incstack = 0
  7152                           ; Regs used in _bme280_get_sensor_data: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7153                           ;bme280_get_sensor_data@sensor_comp stored from wreg
  7154  10CC  0022               	movlb	2	; select bank2
  7155  10CD  00A8               	movwf	bme280_get_sensor_data@sensor_comp^(0+256)
  7156                           
  7157                           ;BME280_driver/bme280.c: 660: int8_t bme280_get_sensor_data(uint8_t sensor_comp, struct 
      +                          bme280_data *comp_data, struct bme280_dev *dev);BME280_driver/bme280.c: 661: {;BME280_dr
      +                          iver/bme280.c: 662:     int8_t rslt;;BME280_driver/bme280.c: 667:     uint8_t reg_data[8
      +                          ] = { 0 };
  7158  10CE  3020               	movlw	low bme280_get_sensor_data@reg_data
  7159  10CF  0086               	movwf	6
  7160  10D0  3001               	movlw	high bme280_get_sensor_data@reg_data
  7161  10D1  0087               	movwf	7
  7162  10D2  3008               	movlw	8
  7163  10D3  0020               	movlb	0	; select bank0
  7164  10D4  00EC               	movwf	??_bme280_get_sensor_data
  7165  10D5  3000               	movlw	0
  7166  10D6                     u4860:	
  7167  10D6  001E               	movwi fsr1++
  7168  10D7  0BEC               	decfsz	??_bme280_get_sensor_data,f
  7169  10D8  28D6               	goto	u4860
  7170                           
  7171                           ;BME280_driver/bme280.c: 668:     struct bme280_uncomp_data uncomp_data = { 0 };
  7172  10D9  30A0               	movlw	low bme280_get_sensor_data@F273
  7173  10DA  0086               	movwf	6
  7174  10DB  3001               	movlw	high bme280_get_sensor_data@F273
  7175  10DC  0087               	movwf	7
  7176  10DD  302A               	movlw	low bme280_get_sensor_data@uncomp_data
  7177  10DE  0084               	movwf	4
  7178  10DF  3001               	movlw	high bme280_get_sensor_data@uncomp_data
  7179  10E0  0085               	movwf	5
  7180  10E1  300C               	movlw	12
  7181  10E2  00EC               	movwf	??_bme280_get_sensor_data
  7182  10E3                     u4870:	
  7183  10E3  0016               	moviw fsr1++
  7184  10E4  001A               	movwi fsr0++
  7185  10E5  0BEC               	decfsz	??_bme280_get_sensor_data,f
  7186  10E6  28E3               	goto	u4870
  7187                           
  7188                           ;BME280_driver/bme280.c: 671:     rslt = null_ptr_check(dev);
  7189  10E7  086B               	movf	bme280_get_sensor_data@dev,w
  7190  10E8  319A  2247  3190   	fcall	_null_ptr_check
  7191  10EB  0020               	movlb	0	; select bank0
  7192  10EC  00EC               	movwf	??_bme280_get_sensor_data
  7193  10ED  086C               	movf	??_bme280_get_sensor_data,w
  7194  10EE  0022               	movlb	2	; select bank2
  7195  10EF  00A9               	movwf	bme280_get_sensor_data@rslt^(0+256)
  7196                           
  7197                           ;BME280_driver/bme280.c: 672:     if ((rslt == 0) && (comp_data != ((void*)0)))
  7198  10F0  0829               	movf	bme280_get_sensor_data@rslt^(0+256),w
  7199  10F1  1D03               	btfss	3,2
  7200  10F2  0008               	return
  7201  10F3  0020               	movlb	0	; select bank0
  7202  10F4  086A               	movf	bme280_get_sensor_data@comp_data,w
  7203  10F5  1903               	btfsc	3,2
  7204  10F6  0008               	return
  7205                           
  7206                           ;BME280_driver/bme280.c: 673:     {;BME280_driver/bme280.c: 675:         rslt = bme280_g
      +                          et_regs(0xF7, reg_data, 8, dev);
  7207  10F7  3020               	movlw	low bme280_get_sensor_data@reg_data
  7208  10F8  00BC               	movwf	bme280_get_regs@reg_data
  7209  10F9  3001               	movlw	high bme280_get_sensor_data@reg_data
  7210  10FA  00BD               	movwf	bme280_get_regs@reg_data+1
  7211  10FB  3008               	movlw	8
  7212  10FC  00BE               	movwf	bme280_get_regs@len
  7213  10FD  3000               	movlw	0
  7214  10FE  00BF               	movwf	bme280_get_regs@len+1
  7215  10FF  086B               	movf	bme280_get_sensor_data@dev,w
  7216  1100  00EC               	movwf	??_bme280_get_sensor_data
  7217  1101  086C               	movf	??_bme280_get_sensor_data,w
  7218  1102  00C0               	movwf	bme280_get_regs@dev
  7219  1103  30F7               	movlw	247
  7220  1104  319D  256F  3190   	fcall	_bme280_get_regs
  7221  1107  00ED               	movwf	??_bme280_get_sensor_data+1
  7222  1108  086D               	movf	??_bme280_get_sensor_data+1,w
  7223  1109  0022               	movlb	2	; select bank2
  7224  110A  00A9               	movwf	bme280_get_sensor_data@rslt^(0+256)
  7225                           
  7226                           ;BME280_driver/bme280.c: 676:         if (rslt == 0)
  7227  110B  0829               	movf	bme280_get_sensor_data@rslt^(0+256),w
  7228  110C  1D03               	btfss	3,2
  7229  110D  0008               	return
  7230                           
  7231                           ;BME280_driver/bme280.c: 677:         {;BME280_driver/bme280.c: 679:             bme280_
      +                          parse_sensor_data(reg_data, &uncomp_data);
  7232  110E  302A               	movlw	(low (bme280_get_sensor_data@uncomp_data| (0+256)))& (0+255)
  7233  110F  0020               	movlb	0	; select bank0
  7234  1110  00EC               	movwf	??_bme280_get_sensor_data
  7235  1111  086C               	movf	??_bme280_get_sensor_data,w
  7236  1112  00F0               	movwf	bme280_parse_sensor_data@uncomp_data
  7237  1113  3020               	movlw	(low (bme280_get_sensor_data@reg_data| (0+256)))& (0+255)
  7238  1114  3183  23CE  3190   	fcall	_bme280_parse_sensor_data
  7239  1117  302A               	movlw	(low (bme280_get_sensor_data@uncomp_data| (0+256)))& (0+255)
  7240  1118  00EC               	movwf	??_bme280_get_sensor_data
  7241  1119  086C               	movf	??_bme280_get_sensor_data,w
  7242  111A  00E4               	movwf	bme280_compensate_data@uncomp_data
  7243  111B  086A               	movf	bme280_get_sensor_data@comp_data,w
  7244  111C  00ED               	movwf	??_bme280_get_sensor_data+1
  7245  111D  086D               	movf	??_bme280_get_sensor_data+1,w
  7246  111E  00E5               	movwf	bme280_compensate_data@comp_data
  7247  111F  086B               	movf	bme280_get_sensor_data@dev,w
  7248  1120  3E09               	addlw	9
  7249  1121  00EE               	movwf	??_bme280_get_sensor_data+2
  7250  1122  086E               	movf	??_bme280_get_sensor_data+2,w
  7251  1123  00E6               	movwf	bme280_compensate_data@calib_data
  7252  1124  0022               	movlb	2	; select bank2
  7253  1125  0828               	movf	bme280_get_sensor_data@sensor_comp^(0+256),w
  7254  1126  3193  23A8         	fcall	_bme280_compensate_data
  7255  1128  0008               	return
  7256  1129                     __end_of_bme280_get_sensor_data:	
  7257                           ;BME280_driver/bme280.c: 687:     else
  7258                           
  7259                           
  7260                           	psect	text4
  7261  03CE                     __ptext4:	
  7262 ;; *************** function _bme280_parse_sensor_data *****************
  7263 ;; Defined at:
  7264 ;;		line 699 in file "BME280_driver/bme280.c"
  7265 ;; Parameters:    Size  Location     Type
  7266 ;;  reg_data        1    wreg     PTR const unsigned char 
  7267 ;;		 -> bme280_get_sensor_data@reg_data(8), 
  7268 ;;  uncomp_data     1    0[COMMON] PTR struct bme280_uncomp
  7269 ;;		 -> bme280_get_sensor_data@uncomp_data(12), 
  7270 ;; Auto vars:     Size  Location     Type
  7271 ;;  reg_data        1   12[BANK0 ] PTR const unsigned char 
  7272 ;;		 -> bme280_get_sensor_data@reg_data(8), 
  7273 ;;  data_msb        4    8[BANK0 ] unsigned long 
  7274 ;;  data_lsb        4    4[BANK0 ] unsigned long 
  7275 ;;  data_xlsb       4    0[BANK0 ] unsigned long 
  7276 ;; Return value:  Size  Location     Type
  7277 ;;                  1    wreg      void 
  7278 ;; Registers used:
  7279 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7280 ;; Tracked objects:
  7281 ;;		On entry : 1F/0
  7282 ;;		On exit  : 1F/0
  7283 ;;		Unchanged: 0/0
  7284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7285 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7286 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7287 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7288 ;;      Totals:         9      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7289 ;;Total ram usage:       22 bytes
  7290 ;; Hardware stack levels used:    1
  7291 ;; Hardware stack levels required when called:    3
  7292 ;; This function calls:
  7293 ;;		Nothing
  7294 ;; This function is called by:
  7295 ;;		_bme280_get_sensor_data
  7296 ;; This function uses a non-reentrant model
  7297 ;;
  7298                           
  7299                           
  7300                           ;psect for function _bme280_parse_sensor_data
  7301  03CE                     _bme280_parse_sensor_data:	
  7302                           
  7303                           ;incstack = 0
  7304                           ; Regs used in _bme280_parse_sensor_data: [wreg+fsr1l+fsr1h+status,2+status,0]
  7305                           ;bme280_parse_sensor_data@reg_data stored from wreg
  7306  03CE  00AC               	movwf	bme280_parse_sensor_data@reg_data
  7307                           
  7308                           ;BME280_driver/bme280.c: 699: void bme280_parse_sensor_data(const uint8_t *reg_data, str
      +                          uct bme280_uncomp_data *uncomp_data);BME280_driver/bme280.c: 700: {;BME280_driver/bme280
      +                          .c: 702:     uint32_t data_xlsb;;BME280_driver/bme280.c: 703:     uint32_t data_lsb;;BME
      +                          280_driver/bme280.c: 704:     uint32_t data_msb;;BME280_driver/bme280.c: 707:     data_m
      +                          sb = (uint32_t)reg_data[0] << 12;
  7309  03CF  082C               	movf	bme280_parse_sensor_data@reg_data,w
  7310  03D0  0086               	movwf	6
  7311  03D1  3001               	movlw	1	; select bank2/3
  7312  03D2  0087               	movwf	7
  7313  03D3  0801               	movf	1,w
  7314  03D4  00F1               	movwf	??_bme280_parse_sensor_data
  7315  03D5  01F2               	clrf	??_bme280_parse_sensor_data+1
  7316  03D6  01F3               	clrf	??_bme280_parse_sensor_data+2
  7317  03D7  01F4               	clrf	??_bme280_parse_sensor_data+3
  7318  03D8  300C               	movlw	12
  7319  03D9                     u3245:	
  7320  03D9  35F1               	lslf	??_bme280_parse_sensor_data,f
  7321  03DA  0DF2               	rlf	??_bme280_parse_sensor_data+1,f
  7322  03DB  0DF3               	rlf	??_bme280_parse_sensor_data+2,f
  7323  03DC  0DF4               	rlf	??_bme280_parse_sensor_data+3,f
  7324  03DD  0B89               	decfsz	9,f
  7325  03DE  2BD9               	goto	u3245
  7326  03DF  0874               	movf	??_bme280_parse_sensor_data+3,w
  7327  03E0  00AB               	movwf	bme280_parse_sensor_data@data_msb+3
  7328  03E1  0873               	movf	??_bme280_parse_sensor_data+2,w
  7329  03E2  00AA               	movwf	bme280_parse_sensor_data@data_msb+2
  7330  03E3  0872               	movf	??_bme280_parse_sensor_data+1,w
  7331  03E4  00A9               	movwf	bme280_parse_sensor_data@data_msb+1
  7332  03E5  0871               	movf	??_bme280_parse_sensor_data,w
  7333  03E6  00A8               	movwf	bme280_parse_sensor_data@data_msb
  7334                           
  7335                           ;BME280_driver/bme280.c: 708:     data_lsb = (uint32_t)reg_data[1] << 4;
  7336  03E7  0A2C               	incf	bme280_parse_sensor_data@reg_data,w
  7337  03E8  0086               	movwf	6
  7338  03E9  3001               	movlw	1	; select bank2/3
  7339  03EA  0087               	movwf	7
  7340  03EB  0801               	movf	1,w
  7341  03EC  00F1               	movwf	??_bme280_parse_sensor_data
  7342  03ED  01F2               	clrf	??_bme280_parse_sensor_data+1
  7343  03EE  01F3               	clrf	??_bme280_parse_sensor_data+2
  7344  03EF  01F4               	clrf	??_bme280_parse_sensor_data+3
  7345  03F0  3004               	movlw	4
  7346  03F1                     u3255:	
  7347  03F1  35F1               	lslf	??_bme280_parse_sensor_data,f
  7348  03F2  0DF2               	rlf	??_bme280_parse_sensor_data+1,f
  7349  03F3  0DF3               	rlf	??_bme280_parse_sensor_data+2,f
  7350  03F4  0DF4               	rlf	??_bme280_parse_sensor_data+3,f
  7351  03F5  0B89               	decfsz	9,f
  7352  03F6  2BF1               	goto	u3255
  7353  03F7  0874               	movf	??_bme280_parse_sensor_data+3,w
  7354  03F8  00A7               	movwf	bme280_parse_sensor_data@data_lsb+3
  7355  03F9  0873               	movf	??_bme280_parse_sensor_data+2,w
  7356  03FA  00A6               	movwf	bme280_parse_sensor_data@data_lsb+2
  7357  03FB  0872               	movf	??_bme280_parse_sensor_data+1,w
  7358  03FC  00A5               	movwf	bme280_parse_sensor_data@data_lsb+1
  7359  03FD  0871               	movf	??_bme280_parse_sensor_data,w
  7360  03FE  00A4               	movwf	bme280_parse_sensor_data@data_lsb
  7361                           
  7362                           ;BME280_driver/bme280.c: 709:     data_xlsb = (uint32_t)reg_data[2] >> 4;
  7363  03FF  082C               	movf	bme280_parse_sensor_data@reg_data,w
  7364  0400  3E02               	addlw	2
  7365  0401  0086               	movwf	6
  7366  0402  3001               	movlw	1	; select bank2/3
  7367  0403  0087               	movwf	7
  7368  0404  0801               	movf	1,w
  7369  0405  00F1               	movwf	??_bme280_parse_sensor_data
  7370  0406  3004               	movlw	4
  7371  0407                     u3265:	
  7372  0407  36F1               	lsrf	??_bme280_parse_sensor_data,f
  7373  0408  0B89               	decfsz	9,f
  7374  0409  2C07               	goto	u3265
  7375  040A  0871               	movf	??_bme280_parse_sensor_data,w
  7376  040B  00F2               	movwf	??_bme280_parse_sensor_data+1
  7377  040C  01F3               	clrf	??_bme280_parse_sensor_data+2
  7378  040D  01F4               	clrf	??_bme280_parse_sensor_data+3
  7379  040E  01F5               	clrf	??_bme280_parse_sensor_data+4
  7380  040F  0875               	movf	??_bme280_parse_sensor_data+4,w
  7381  0410  00A3               	movwf	bme280_parse_sensor_data@data_xlsb+3
  7382  0411  0874               	movf	??_bme280_parse_sensor_data+3,w
  7383  0412  00A2               	movwf	bme280_parse_sensor_data@data_xlsb+2
  7384  0413  0873               	movf	??_bme280_parse_sensor_data+2,w
  7385  0414  00A1               	movwf	bme280_parse_sensor_data@data_xlsb+1
  7386  0415  0872               	movf	??_bme280_parse_sensor_data+1,w
  7387  0416  00A0               	movwf	bme280_parse_sensor_data@data_xlsb
  7388                           
  7389                           ;BME280_driver/bme280.c: 710:     uncomp_data->pressure = data_msb | data_lsb | data_xls
      +                          b;
  7390  0417  0820               	movf	bme280_parse_sensor_data@data_xlsb,w
  7391  0418  00F1               	movwf	??_bme280_parse_sensor_data
  7392  0419  0821               	movf	bme280_parse_sensor_data@data_xlsb+1,w
  7393  041A  00F2               	movwf	??_bme280_parse_sensor_data+1
  7394  041B  0822               	movf	bme280_parse_sensor_data@data_xlsb+2,w
  7395  041C  00F3               	movwf	??_bme280_parse_sensor_data+2
  7396  041D  0823               	movf	bme280_parse_sensor_data@data_xlsb+3,w
  7397  041E  00F4               	movwf	??_bme280_parse_sensor_data+3
  7398  041F  0828               	movf	bme280_parse_sensor_data@data_msb,w
  7399  0420  0424               	iorwf	bme280_parse_sensor_data@data_lsb,w
  7400  0421  00F5               	movwf	??_bme280_parse_sensor_data+4
  7401  0422  0829               	movf	bme280_parse_sensor_data@data_msb+1,w
  7402  0423  0425               	iorwf	bme280_parse_sensor_data@data_lsb+1,w
  7403  0424  00F6               	movwf	??_bme280_parse_sensor_data+5
  7404  0425  082A               	movf	bme280_parse_sensor_data@data_msb+2,w
  7405  0426  0426               	iorwf	bme280_parse_sensor_data@data_lsb+2,w
  7406  0427  00F7               	movwf	??_bme280_parse_sensor_data+6
  7407  0428  082B               	movf	bme280_parse_sensor_data@data_msb+3,w
  7408  0429  0427               	iorwf	bme280_parse_sensor_data@data_lsb+3,w
  7409  042A  00F8               	movwf	??_bme280_parse_sensor_data+7
  7410  042B  0875               	movf	??_bme280_parse_sensor_data+4,w
  7411  042C  04F1               	iorwf	??_bme280_parse_sensor_data,f
  7412  042D  0876               	movf	??_bme280_parse_sensor_data+5,w
  7413  042E  04F2               	iorwf	??_bme280_parse_sensor_data+1,f
  7414  042F  0877               	movf	??_bme280_parse_sensor_data+6,w
  7415  0430  04F3               	iorwf	??_bme280_parse_sensor_data+2,f
  7416  0431  0878               	movf	??_bme280_parse_sensor_data+7,w
  7417  0432  04F4               	iorwf	??_bme280_parse_sensor_data+3,f
  7418  0433  0870               	movf	bme280_parse_sensor_data@uncomp_data,w
  7419  0434  0086               	movwf	6
  7420  0435  3001               	movlw	1	; select bank2/3
  7421  0436  0087               	movwf	7
  7422  0437  0871               	movf	??_bme280_parse_sensor_data,w
  7423  0438  3FC0               	movwi [0]fsr1
  7424  0439  0872               	movf	??_bme280_parse_sensor_data+1,w
  7425  043A  3FC1               	movwi [1]fsr1
  7426  043B  0873               	movf	??_bme280_parse_sensor_data+2,w
  7427  043C  3FC2               	movwi [2]fsr1
  7428  043D  0874               	movf	??_bme280_parse_sensor_data+3,w
  7429  043E  3FC3               	movwi [3]fsr1
  7430                           
  7431                           ;BME280_driver/bme280.c: 713:     data_msb = (uint32_t)reg_data[3] << 12;
  7432  043F  082C               	movf	bme280_parse_sensor_data@reg_data,w
  7433  0440  3E03               	addlw	3
  7434  0441  0086               	movwf	6
  7435  0442  3001               	movlw	1	; select bank2/3
  7436  0443  0087               	movwf	7
  7437  0444  0801               	movf	1,w
  7438  0445  00F1               	movwf	??_bme280_parse_sensor_data
  7439  0446  01F2               	clrf	??_bme280_parse_sensor_data+1
  7440  0447  01F3               	clrf	??_bme280_parse_sensor_data+2
  7441  0448  01F4               	clrf	??_bme280_parse_sensor_data+3
  7442  0449  300C               	movlw	12
  7443  044A                     u3275:	
  7444  044A  35F1               	lslf	??_bme280_parse_sensor_data,f
  7445  044B  0DF2               	rlf	??_bme280_parse_sensor_data+1,f
  7446  044C  0DF3               	rlf	??_bme280_parse_sensor_data+2,f
  7447  044D  0DF4               	rlf	??_bme280_parse_sensor_data+3,f
  7448  044E  0B89               	decfsz	9,f
  7449  044F  2C4A               	goto	u3275
  7450  0450  0874               	movf	??_bme280_parse_sensor_data+3,w
  7451  0451  00AB               	movwf	bme280_parse_sensor_data@data_msb+3
  7452  0452  0873               	movf	??_bme280_parse_sensor_data+2,w
  7453  0453  00AA               	movwf	bme280_parse_sensor_data@data_msb+2
  7454  0454  0872               	movf	??_bme280_parse_sensor_data+1,w
  7455  0455  00A9               	movwf	bme280_parse_sensor_data@data_msb+1
  7456  0456  0871               	movf	??_bme280_parse_sensor_data,w
  7457  0457  00A8               	movwf	bme280_parse_sensor_data@data_msb
  7458                           
  7459                           ;BME280_driver/bme280.c: 714:     data_lsb = (uint32_t)reg_data[4] << 4;
  7460  0458  082C               	movf	bme280_parse_sensor_data@reg_data,w
  7461  0459  3E04               	addlw	4
  7462  045A  0086               	movwf	6
  7463  045B  3001               	movlw	1	; select bank2/3
  7464  045C  0087               	movwf	7
  7465  045D  0801               	movf	1,w
  7466  045E  00F1               	movwf	??_bme280_parse_sensor_data
  7467  045F  01F2               	clrf	??_bme280_parse_sensor_data+1
  7468  0460  01F3               	clrf	??_bme280_parse_sensor_data+2
  7469  0461  01F4               	clrf	??_bme280_parse_sensor_data+3
  7470  0462  3004               	movlw	4
  7471  0463                     u3285:	
  7472  0463  35F1               	lslf	??_bme280_parse_sensor_data,f
  7473  0464  0DF2               	rlf	??_bme280_parse_sensor_data+1,f
  7474  0465  0DF3               	rlf	??_bme280_parse_sensor_data+2,f
  7475  0466  0DF4               	rlf	??_bme280_parse_sensor_data+3,f
  7476  0467  0B89               	decfsz	9,f
  7477  0468  2C63               	goto	u3285
  7478  0469  0874               	movf	??_bme280_parse_sensor_data+3,w
  7479  046A  00A7               	movwf	bme280_parse_sensor_data@data_lsb+3
  7480  046B  0873               	movf	??_bme280_parse_sensor_data+2,w
  7481  046C  00A6               	movwf	bme280_parse_sensor_data@data_lsb+2
  7482  046D  0872               	movf	??_bme280_parse_sensor_data+1,w
  7483  046E  00A5               	movwf	bme280_parse_sensor_data@data_lsb+1
  7484  046F  0871               	movf	??_bme280_parse_sensor_data,w
  7485  0470  00A4               	movwf	bme280_parse_sensor_data@data_lsb
  7486                           
  7487                           ;BME280_driver/bme280.c: 715:     data_xlsb = (uint32_t)reg_data[5] >> 4;
  7488  0471  082C               	movf	bme280_parse_sensor_data@reg_data,w
  7489  0472  3E05               	addlw	5
  7490  0473  0086               	movwf	6
  7491  0474  3001               	movlw	1	; select bank2/3
  7492  0475  0087               	movwf	7
  7493  0476  0801               	movf	1,w
  7494  0477  00F1               	movwf	??_bme280_parse_sensor_data
  7495  0478  3004               	movlw	4
  7496  0479                     u3295:	
  7497  0479  36F1               	lsrf	??_bme280_parse_sensor_data,f
  7498  047A  0B89               	decfsz	9,f
  7499  047B  2C79               	goto	u3295
  7500  047C  0871               	movf	??_bme280_parse_sensor_data,w
  7501  047D  00F2               	movwf	??_bme280_parse_sensor_data+1
  7502  047E  01F3               	clrf	??_bme280_parse_sensor_data+2
  7503  047F  01F4               	clrf	??_bme280_parse_sensor_data+3
  7504  0480  01F5               	clrf	??_bme280_parse_sensor_data+4
  7505  0481  0875               	movf	??_bme280_parse_sensor_data+4,w
  7506  0482  00A3               	movwf	bme280_parse_sensor_data@data_xlsb+3
  7507  0483  0874               	movf	??_bme280_parse_sensor_data+3,w
  7508  0484  00A2               	movwf	bme280_parse_sensor_data@data_xlsb+2
  7509  0485  0873               	movf	??_bme280_parse_sensor_data+2,w
  7510  0486  00A1               	movwf	bme280_parse_sensor_data@data_xlsb+1
  7511  0487  0872               	movf	??_bme280_parse_sensor_data+1,w
  7512  0488  00A0               	movwf	bme280_parse_sensor_data@data_xlsb
  7513                           
  7514                           ;BME280_driver/bme280.c: 716:     uncomp_data->temperature = data_msb | data_lsb | data_
      +                          xlsb;
  7515  0489  0820               	movf	bme280_parse_sensor_data@data_xlsb,w
  7516  048A  00F1               	movwf	??_bme280_parse_sensor_data
  7517  048B  0821               	movf	bme280_parse_sensor_data@data_xlsb+1,w
  7518  048C  00F2               	movwf	??_bme280_parse_sensor_data+1
  7519  048D  0822               	movf	bme280_parse_sensor_data@data_xlsb+2,w
  7520  048E  00F3               	movwf	??_bme280_parse_sensor_data+2
  7521  048F  0823               	movf	bme280_parse_sensor_data@data_xlsb+3,w
  7522  0490  00F4               	movwf	??_bme280_parse_sensor_data+3
  7523  0491  0828               	movf	bme280_parse_sensor_data@data_msb,w
  7524  0492  0424               	iorwf	bme280_parse_sensor_data@data_lsb,w
  7525  0493  00F5               	movwf	??_bme280_parse_sensor_data+4
  7526  0494  0829               	movf	bme280_parse_sensor_data@data_msb+1,w
  7527  0495  0425               	iorwf	bme280_parse_sensor_data@data_lsb+1,w
  7528  0496  00F6               	movwf	??_bme280_parse_sensor_data+5
  7529  0497  082A               	movf	bme280_parse_sensor_data@data_msb+2,w
  7530  0498  0426               	iorwf	bme280_parse_sensor_data@data_lsb+2,w
  7531  0499  00F7               	movwf	??_bme280_parse_sensor_data+6
  7532  049A  082B               	movf	bme280_parse_sensor_data@data_msb+3,w
  7533  049B  0427               	iorwf	bme280_parse_sensor_data@data_lsb+3,w
  7534  049C  00F8               	movwf	??_bme280_parse_sensor_data+7
  7535  049D  0875               	movf	??_bme280_parse_sensor_data+4,w
  7536  049E  04F1               	iorwf	??_bme280_parse_sensor_data,f
  7537  049F  0876               	movf	??_bme280_parse_sensor_data+5,w
  7538  04A0  04F2               	iorwf	??_bme280_parse_sensor_data+1,f
  7539  04A1  0877               	movf	??_bme280_parse_sensor_data+6,w
  7540  04A2  04F3               	iorwf	??_bme280_parse_sensor_data+2,f
  7541  04A3  0878               	movf	??_bme280_parse_sensor_data+7,w
  7542  04A4  04F4               	iorwf	??_bme280_parse_sensor_data+3,f
  7543  04A5  0870               	movf	bme280_parse_sensor_data@uncomp_data,w
  7544  04A6  3E04               	addlw	4
  7545  04A7  0086               	movwf	6
  7546  04A8  3001               	movlw	1	; select bank2/3
  7547  04A9  0087               	movwf	7
  7548  04AA  0871               	movf	??_bme280_parse_sensor_data,w
  7549  04AB  3FC0               	movwi [0]fsr1
  7550  04AC  0872               	movf	??_bme280_parse_sensor_data+1,w
  7551  04AD  3FC1               	movwi [1]fsr1
  7552  04AE  0873               	movf	??_bme280_parse_sensor_data+2,w
  7553  04AF  3FC2               	movwi [2]fsr1
  7554  04B0  0874               	movf	??_bme280_parse_sensor_data+3,w
  7555  04B1  3FC3               	movwi [3]fsr1
  7556                           
  7557                           ;BME280_driver/bme280.c: 719:     data_lsb = (uint32_t)reg_data[6] << 8;
  7558  04B2  082C               	movf	bme280_parse_sensor_data@reg_data,w
  7559  04B3  3E06               	addlw	6
  7560  04B4  0086               	movwf	6
  7561  04B5  3001               	movlw	1	; select bank2/3
  7562  04B6  0087               	movwf	7
  7563  04B7  0801               	movf	1,w
  7564  04B8  00F1               	movwf	??_bme280_parse_sensor_data
  7565  04B9  01F2               	clrf	??_bme280_parse_sensor_data+1
  7566  04BA  01F3               	clrf	??_bme280_parse_sensor_data+2
  7567  04BB  01F4               	clrf	??_bme280_parse_sensor_data+3
  7568  04BC  3008               	movlw	8
  7569  04BD                     u3305:	
  7570  04BD  35F1               	lslf	??_bme280_parse_sensor_data,f
  7571  04BE  0DF2               	rlf	??_bme280_parse_sensor_data+1,f
  7572  04BF  0DF3               	rlf	??_bme280_parse_sensor_data+2,f
  7573  04C0  0DF4               	rlf	??_bme280_parse_sensor_data+3,f
  7574  04C1  0B89               	decfsz	9,f
  7575  04C2  2CBD               	goto	u3305
  7576  04C3  0874               	movf	??_bme280_parse_sensor_data+3,w
  7577  04C4  00A7               	movwf	bme280_parse_sensor_data@data_lsb+3
  7578  04C5  0873               	movf	??_bme280_parse_sensor_data+2,w
  7579  04C6  00A6               	movwf	bme280_parse_sensor_data@data_lsb+2
  7580  04C7  0872               	movf	??_bme280_parse_sensor_data+1,w
  7581  04C8  00A5               	movwf	bme280_parse_sensor_data@data_lsb+1
  7582  04C9  0871               	movf	??_bme280_parse_sensor_data,w
  7583  04CA  00A4               	movwf	bme280_parse_sensor_data@data_lsb
  7584                           
  7585                           ;BME280_driver/bme280.c: 720:     data_msb = (uint32_t)reg_data[7];
  7586  04CB  082C               	movf	bme280_parse_sensor_data@reg_data,w
  7587  04CC  3E07               	addlw	7
  7588  04CD  0086               	movwf	6
  7589  04CE  3001               	movlw	1	; select bank2/3
  7590  04CF  0087               	movwf	7
  7591  04D0  0801               	movf	1,w
  7592  04D1  00F1               	movwf	??_bme280_parse_sensor_data
  7593  04D2  01F2               	clrf	??_bme280_parse_sensor_data+1
  7594  04D3  01F3               	clrf	??_bme280_parse_sensor_data+2
  7595  04D4  01F4               	clrf	??_bme280_parse_sensor_data+3
  7596  04D5  0874               	movf	??_bme280_parse_sensor_data+3,w
  7597  04D6  00AB               	movwf	bme280_parse_sensor_data@data_msb+3
  7598  04D7  0873               	movf	??_bme280_parse_sensor_data+2,w
  7599  04D8  00AA               	movwf	bme280_parse_sensor_data@data_msb+2
  7600  04D9  0872               	movf	??_bme280_parse_sensor_data+1,w
  7601  04DA  00A9               	movwf	bme280_parse_sensor_data@data_msb+1
  7602  04DB  0871               	movf	??_bme280_parse_sensor_data,w
  7603  04DC  00A8               	movwf	bme280_parse_sensor_data@data_msb
  7604                           
  7605                           ;BME280_driver/bme280.c: 721:     uncomp_data->humidity = data_msb | data_lsb;
  7606  04DD  0828               	movf	bme280_parse_sensor_data@data_msb,w
  7607  04DE  0424               	iorwf	bme280_parse_sensor_data@data_lsb,w
  7608  04DF  00F1               	movwf	??_bme280_parse_sensor_data
  7609  04E0  0829               	movf	bme280_parse_sensor_data@data_msb+1,w
  7610  04E1  0425               	iorwf	bme280_parse_sensor_data@data_lsb+1,w
  7611  04E2  00F2               	movwf	??_bme280_parse_sensor_data+1
  7612  04E3  082A               	movf	bme280_parse_sensor_data@data_msb+2,w
  7613  04E4  0426               	iorwf	bme280_parse_sensor_data@data_lsb+2,w
  7614  04E5  00F3               	movwf	??_bme280_parse_sensor_data+2
  7615  04E6  082B               	movf	bme280_parse_sensor_data@data_msb+3,w
  7616  04E7  0427               	iorwf	bme280_parse_sensor_data@data_lsb+3,w
  7617  04E8  00F4               	movwf	??_bme280_parse_sensor_data+3
  7618  04E9  0870               	movf	bme280_parse_sensor_data@uncomp_data,w
  7619  04EA  3E08               	addlw	8
  7620  04EB  0086               	movwf	6
  7621  04EC  3001               	movlw	1	; select bank2/3
  7622  04ED  0087               	movwf	7
  7623  04EE  0871               	movf	??_bme280_parse_sensor_data,w
  7624  04EF  3FC0               	movwi [0]fsr1
  7625  04F0  0872               	movf	??_bme280_parse_sensor_data+1,w
  7626  04F1  3FC1               	movwi [1]fsr1
  7627  04F2  0873               	movf	??_bme280_parse_sensor_data+2,w
  7628  04F3  3FC2               	movwi [2]fsr1
  7629  04F4  0874               	movf	??_bme280_parse_sensor_data+3,w
  7630  04F5  3FC3               	movwi [3]fsr1
  7631  04F6  0008               	return
  7632  04F7                     __end_of_bme280_parse_sensor_data:	
  7633                           
  7634                           	psect	text5
  7635  13A8                     __ptext5:	
  7636 ;; *************** function _bme280_compensate_data *****************
  7637 ;; Defined at:
  7638 ;;		line 729 in file "BME280_driver/bme280.c"
  7639 ;; Parameters:    Size  Location     Type
  7640 ;;  sensor_comp     1    wreg     unsigned char 
  7641 ;;  uncomp_data     1   68[BANK0 ] PTR const struct bme280_
  7642 ;;		 -> bme280_get_sensor_data@uncomp_data(12), 
  7643 ;;  comp_data       1   69[BANK0 ] PTR struct bme280_data
  7644 ;;		 -> main@sensor_data(12), 
  7645 ;;  calib_data      1   70[BANK0 ] PTR struct bme280_calib_
  7646 ;;		 -> EnvSensor(51), 
  7647 ;; Auto vars:     Size  Location     Type
  7648 ;;  sensor_comp     1   73[BANK0 ] unsigned char 
  7649 ;;  rslt            1   72[BANK0 ] char 
  7650 ;; Return value:  Size  Location     Type
  7651 ;;                  1    wreg      char 
  7652 ;; Registers used:
  7653 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7654 ;; Tracked objects:
  7655 ;;		On entry : 1F/2
  7656 ;;		On exit  : 1F/0
  7657 ;;		Unchanged: 0/0
  7658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7659 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7660 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7661 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7662 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7663 ;;Total ram usage:        6 bytes
  7664 ;; Hardware stack levels used:    1
  7665 ;; Hardware stack levels required when called:    5
  7666 ;; This function calls:
  7667 ;;		_compensate_pressure
  7668 ;;		_compensate_temperature
  7669 ;; This function is called by:
  7670 ;;		_bme280_get_sensor_data
  7671 ;; This function uses a non-reentrant model
  7672 ;;
  7673                           
  7674                           
  7675                           ;psect for function _bme280_compensate_data
  7676  13A8                     _bme280_compensate_data:	
  7677                           
  7678                           ;incstack = 0
  7679                           ; Regs used in _bme280_compensate_data: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
  7680                           ;bme280_compensate_data@sensor_comp stored from wreg
  7681  13A8  0020               	movlb	0	; select bank0
  7682  13A9  00E9               	movwf	bme280_compensate_data@sensor_comp
  7683                           
  7684                           ;BME280_driver/bme280.c: 729: int8_t bme280_compensate_data(uint8_t sensor_comp,;BME280_
      +                          driver/bme280.c: 730:                               const struct bme280_uncomp_data *unc
      +                          omp_data,;BME280_driver/bme280.c: 731:                               struct bme280_data 
      +                          *comp_data,;BME280_driver/bme280.c: 732:                               struct bme280_cal
      +                          ib_data *calib_data);BME280_driver/bme280.c: 733: {;BME280_driver/bme280.c: 734:     int
      +                          8_t rslt = 0;
  7685  13AA  01E8               	clrf	bme280_compensate_data@rslt
  7686                           
  7687                           ;BME280_driver/bme280.c: 736:     if ((uncomp_data != ((void*)0)) && (comp_data != ((voi
      +                          d*)0)) && (calib_data != ((void*)0)))
  7688  13AB  0864               	movf	bme280_compensate_data@uncomp_data,w
  7689  13AC  1903               	btfsc	3,2
  7690  13AD  2C13               	goto	l124
  7691  13AE  0865               	movf	bme280_compensate_data@comp_data,w
  7692  13AF  1903               	btfsc	3,2
  7693  13B0  2C13               	goto	l124
  7694  13B1  0866               	movf	bme280_compensate_data@calib_data,w
  7695  13B2  1903               	btfsc	3,2
  7696  13B3  2C13               	goto	l124
  7697                           
  7698                           ;BME280_driver/bme280.c: 737:     {;BME280_driver/bme280.c: 739:         comp_data->temp
      +                          erature = 0;
  7699  13B4  0865               	movf	bme280_compensate_data@comp_data,w
  7700  13B5  3E04               	addlw	4
  7701  13B6  0086               	movwf	6
  7702  13B7  3001               	movlw	1	; select bank2/3
  7703  13B8  0087               	movwf	7
  7704  13B9  3000               	movlw	0
  7705  13BA  3FC0               	movwi [0]fsr1
  7706  13BB  3000               	movlw	0
  7707  13BC  3FC1               	movwi [1]fsr1
  7708  13BD  3FC2               	movwi [2]fsr1
  7709  13BE  3FC3               	movwi [3]fsr1
  7710                           
  7711                           ;BME280_driver/bme280.c: 740:         comp_data->pressure = 0;
  7712  13BF  0865               	movf	bme280_compensate_data@comp_data,w
  7713  13C0  0086               	movwf	6
  7714  13C1  3001               	movlw	1	; select bank2/3
  7715  13C2  0087               	movwf	7
  7716  13C3  3000               	movlw	0
  7717  13C4  3FC0               	movwi [0]fsr1
  7718  13C5  3FC1               	movwi [1]fsr1
  7719  13C6  3FC2               	movwi [2]fsr1
  7720  13C7  3FC3               	movwi [3]fsr1
  7721                           
  7722                           ;BME280_driver/bme280.c: 741:         comp_data->humidity = 0;
  7723  13C8  0865               	movf	bme280_compensate_data@comp_data,w
  7724  13C9  3E08               	addlw	8
  7725  13CA  0086               	movwf	6
  7726  13CB  3001               	movlw	1	; select bank2/3
  7727  13CC  0087               	movwf	7
  7728  13CD  3000               	movlw	0
  7729  13CE  3FC0               	movwi [0]fsr1
  7730  13CF  3000               	movlw	0
  7731  13D0  3FC1               	movwi [1]fsr1
  7732  13D1  3FC2               	movwi [2]fsr1
  7733  13D2  3FC3               	movwi [3]fsr1
  7734                           
  7735                           ;BME280_driver/bme280.c: 744:         if (sensor_comp & (1 | 1 << 1 | 1 << 2))
  7736  13D3  0869               	movf	bme280_compensate_data@sensor_comp,w
  7737  13D4  3907               	andlw	7
  7738  13D5  1903               	btfsc	3,2
  7739  13D6  2BEC               	goto	l4406
  7740                           
  7741                           ;BME280_driver/bme280.c: 745:         {;BME280_driver/bme280.c: 747:             comp_da
      +                          ta->temperature = compensate_temperature(uncomp_data, calib_data);
  7742  13D7  0866               	movf	bme280_compensate_data@calib_data,w
  7743  13D8  00E7               	movwf	??_bme280_compensate_data
  7744  13D9  0867               	movf	??_bme280_compensate_data,w
  7745  13DA  00AE               	movwf	compensate_temperature@calib_data
  7746  13DB  0864               	movf	bme280_compensate_data@uncomp_data,w
  7747  13DC  3182  222D  3193   	fcall	_compensate_temperature
  7748  13DF  0865               	movf	bme280_compensate_data@comp_data,w
  7749  13E0  3E04               	addlw	4
  7750  13E1  0086               	movwf	6
  7751  13E2  3001               	movlw	1	; select bank2/3
  7752  13E3  0087               	movwf	7
  7753  13E4  082E               	movf	?_compensate_temperature,w
  7754  13E5  3FC0               	movwi [0]fsr1
  7755  13E6  082F               	movf	?_compensate_temperature+1,w
  7756  13E7  3FC1               	movwi [1]fsr1
  7757  13E8  0830               	movf	?_compensate_temperature+2,w
  7758  13E9  3FC2               	movwi [2]fsr1
  7759  13EA  0831               	movf	?_compensate_temperature+3,w
  7760  13EB  3FC3               	movwi [3]fsr1
  7761  13EC                     l4406:	
  7762                           
  7763                           ;BME280_driver/bme280.c: 749:         if (sensor_comp & 1)
  7764  13EC  1C69               	btfss	bme280_compensate_data@sensor_comp,0
  7765  13ED  2C03               	goto	l4410
  7766                           
  7767                           ;BME280_driver/bme280.c: 750:         {;BME280_driver/bme280.c: 752:             comp_da
      +                          ta->pressure = compensate_pressure(uncomp_data, calib_data);
  7768  13EE  0866               	movf	bme280_compensate_data@calib_data,w
  7769  13EF  00E7               	movwf	??_bme280_compensate_data
  7770  13F0  0867               	movf	??_bme280_compensate_data,w
  7771  13F1  00FA               	movwf	compensate_pressure@calib_data
  7772  13F2  0864               	movf	bme280_compensate_data@uncomp_data,w
  7773  13F3  3197  275E  3193   	fcall	_compensate_pressure
  7774  13F6  0020               	movlb	0	; select bank0
  7775  13F7  0865               	movf	bme280_compensate_data@comp_data,w
  7776  13F8  0086               	movwf	6
  7777  13F9  3001               	movlw	1	; select bank2/3
  7778  13FA  0087               	movwf	7
  7779  13FB  087A               	movf	?_compensate_pressure,w
  7780  13FC  3FC0               	movwi [0]fsr1
  7781  13FD  087B               	movf	?_compensate_pressure+1,w
  7782  13FE  3FC1               	movwi [1]fsr1
  7783  13FF  087C               	movf	?_compensate_pressure+2,w
  7784  1400  3FC2               	movwi [2]fsr1
  7785  1401  087D               	movf	?_compensate_pressure+3,w
  7786  1402  3FC3               	movwi [3]fsr1
  7787  1403                     l4410:	
  7788                           
  7789                           ;BME280_driver/bme280.c: 754:         if (sensor_comp & 1 << 2)
  7790  1403  1D69               	btfss	bme280_compensate_data@sensor_comp,2
  7791  1404  2C15               	goto	l4414
  7792                           
  7793                           ;BME280_driver/bme280.c: 755:         {;BME280_driver/bme280.c: 761:             comp_da
      +                          ta->humidity = 0xFFFF;
  7794  1405  0865               	movf	bme280_compensate_data@comp_data,w
  7795  1406  3E08               	addlw	8
  7796  1407  0086               	movwf	6
  7797  1408  3001               	movlw	1	; select bank2/3
  7798  1409  0087               	movwf	7
  7799  140A  30FF               	movlw	255
  7800  140B  3FC0               	movwi [0]fsr1
  7801  140C  30FF               	movlw	255
  7802  140D  3FC1               	movwi [1]fsr1
  7803  140E  3000               	movlw	0
  7804  140F  3FC2               	movwi [2]fsr1
  7805  1410  3000               	movlw	0
  7806  1411  3FC3               	movwi [3]fsr1
  7807  1412  2C15               	goto	l4414
  7808  1413                     l124:	
  7809                           ;BME280_driver/bme280.c: 765:     else
  7810                           
  7811                           
  7812                           ;BME280_driver/bme280.c: 766:     {;BME280_driver/bme280.c: 767:         rslt = -1;
  7813  1413  01E8               	clrf	bme280_compensate_data@rslt
  7814  1414  03E8               	decf	bme280_compensate_data@rslt,f
  7815  1415                     l4414:	
  7816                           
  7817                           ;BME280_driver/bme280.c: 770:     return rslt;
  7818  1415  0868               	movf	bme280_compensate_data@rslt,w
  7819  1416  0008               	return
  7820  1417                     __end_of_bme280_compensate_data:	
  7821                           
  7822                           	psect	text6
  7823  022D                     __ptext6:	
  7824 ;; *************** function _compensate_temperature *****************
  7825 ;; Defined at:
  7826 ;;		line 1126 in file "BME280_driver/bme280.c"
  7827 ;; Parameters:    Size  Location     Type
  7828 ;;  uncomp_data     1    wreg     PTR const struct bme280_
  7829 ;;		 -> bme280_get_sensor_data@uncomp_data(12), 
  7830 ;;  calib_data      1   14[BANK0 ] PTR struct bme280_calib_
  7831 ;;		 -> EnvSensor(51), 
  7832 ;; Auto vars:     Size  Location     Type
  7833 ;;  uncomp_data     1   44[BANK0 ] PTR const struct bme280_
  7834 ;;		 -> bme280_get_sensor_data@uncomp_data(12), 
  7835 ;;  temperature     4   49[BANK0 ] long 
  7836 ;;  var2            4   45[BANK0 ] long 
  7837 ;;  var1            4   40[BANK0 ] long 
  7838 ;;  temperature_    4   36[BANK0 ] long 
  7839 ;;  temperature_    4    0        long 
  7840 ;; Return value:  Size  Location     Type
  7841 ;;                  4   14[BANK0 ] long 
  7842 ;; Registers used:
  7843 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7844 ;; Tracked objects:
  7845 ;;		On entry : 1F/0
  7846 ;;		On exit  : 1F/0
  7847 ;;		Unchanged: 0/0
  7848 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7849 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7850 ;;      Locals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7851 ;;      Temps:          0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7852 ;;      Totals:         0      39       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7853 ;;Total ram usage:       39 bytes
  7854 ;; Hardware stack levels used:    1
  7855 ;; Hardware stack levels required when called:    4
  7856 ;; This function calls:
  7857 ;;		___aldiv
  7858 ;;		___lmul
  7859 ;; This function is called by:
  7860 ;;		_bme280_compensate_data
  7861 ;; This function uses a non-reentrant model
  7862 ;;
  7863                           
  7864                           
  7865                           ;psect for function _compensate_temperature
  7866  022D                     _compensate_temperature:	
  7867                           
  7868                           ;incstack = 0
  7869                           ; Regs used in _compensate_temperature: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
  7870                           ;compensate_temperature@uncomp_data stored from wreg
  7871  022D  00CC               	movwf	compensate_temperature@uncomp_data
  7872                           
  7873                           ;BME280_driver/bme280.c: 1133:     int32_t temperature_max = 8500;
  7874  022E  3000               	movlw	0
  7875  022F  00C7               	movwf	compensate_temperature@temperature_max+3
  7876  0230  3000               	movlw	0
  7877  0231  00C6               	movwf	compensate_temperature@temperature_max+2
  7878  0232  3021               	movlw	33
  7879  0233  00C5               	movwf	compensate_temperature@temperature_max+1
  7880  0234  3034               	movlw	52
  7881  0235  00C4               	movwf	compensate_temperature@temperature_max
  7882                           
  7883                           ;BME280_driver/bme280.c: 1135:     var1 = (int32_t)((uncomp_data->temperature / 8) - ((i
      +                          nt32_t)calib_data->dig_T1 * 2));
  7884  0236  082E               	movf	compensate_temperature@calib_data,w
  7885  0237  0086               	movwf	6
  7886  0238  3001               	movlw	1	; select bank2/3
  7887  0239  0087               	movwf	7
  7888  023A  3F40               	moviw [0]fsr1
  7889  023B  00B2               	movwf	??_compensate_temperature
  7890  023C  3F41               	moviw [1]fsr1
  7891  023D  00B3               	movwf	??_compensate_temperature+1
  7892  023E  0832               	movf	??_compensate_temperature,w
  7893  023F  00B4               	movwf	??_compensate_temperature+2
  7894  0240  0833               	movf	??_compensate_temperature+1,w
  7895  0241  00B5               	movwf	??_compensate_temperature+3
  7896  0242  01B6               	clrf	??_compensate_temperature+4
  7897  0243  01B7               	clrf	??_compensate_temperature+5
  7898  0244  3001               	movlw	1
  7899  0245                     u4495:	
  7900  0245  35B4               	lslf	??_compensate_temperature+2,f
  7901  0246  0DB5               	rlf	??_compensate_temperature+3,f
  7902  0247  0DB6               	rlf	??_compensate_temperature+4,f
  7903  0248  0DB7               	rlf	??_compensate_temperature+5,f
  7904  0249  0B89               	decfsz	9,f
  7905  024A  2A45               	goto	u4495
  7906  024B  084C               	movf	compensate_temperature@uncomp_data,w
  7907  024C  3E04               	addlw	4
  7908  024D  0086               	movwf	6
  7909  024E  3001               	movlw	1	; select bank2/3
  7910  024F  0087               	movwf	7
  7911  0250  3F40               	moviw [0]fsr1
  7912  0251  00B8               	movwf	??_compensate_temperature+6
  7913  0252  3F41               	moviw [1]fsr1
  7914  0253  00B9               	movwf	??_compensate_temperature+7
  7915  0254  3F42               	moviw [2]fsr1
  7916  0255  00BA               	movwf	??_compensate_temperature+8
  7917  0256  3F43               	moviw [3]fsr1
  7918  0257  00BB               	movwf	??_compensate_temperature+9
  7919  0258  3003               	movlw	3
  7920  0259                     u4505:	
  7921  0259  36BB               	lsrf	??_compensate_temperature+9,f
  7922  025A  0CBA               	rrf	??_compensate_temperature+8,f
  7923  025B  0CB9               	rrf	??_compensate_temperature+7,f
  7924  025C  0CB8               	rrf	??_compensate_temperature+6,f
  7925  025D  0B89               	decfsz	9,f
  7926  025E  2A59               	goto	u4505
  7927  025F  0834               	movf	??_compensate_temperature+2,w
  7928  0260  02B8               	subwf	??_compensate_temperature+6,f
  7929  0261  0835               	movf	??_compensate_temperature+3,w
  7930  0262  3BB9               	subwfb	??_compensate_temperature+7,f
  7931  0263  0836               	movf	??_compensate_temperature+4,w
  7932  0264  3BBA               	subwfb	??_compensate_temperature+8,f
  7933  0265  0837               	movf	??_compensate_temperature+5,w
  7934  0266  3BBB               	subwfb	??_compensate_temperature+9,f
  7935  0267  083B               	movf	??_compensate_temperature+9,w
  7936  0268  00CB               	movwf	compensate_temperature@var1+3
  7937  0269  083A               	movf	??_compensate_temperature+8,w
  7938  026A  00CA               	movwf	compensate_temperature@var1+2
  7939  026B  0839               	movf	??_compensate_temperature+7,w
  7940  026C  00C9               	movwf	compensate_temperature@var1+1
  7941  026D  0838               	movf	??_compensate_temperature+6,w
  7942  026E  00C8               	movwf	compensate_temperature@var1
  7943                           
  7944                           ;BME280_driver/bme280.c: 1136:     var1 = (var1 * ((int32_t)calib_data->dig_T2)) / 2048;
  7945  026F  3000               	movlw	0
  7946  0270  00A3               	movwf	___aldiv@divisor+3
  7947  0271  3000               	movlw	0
  7948  0272  00A2               	movwf	___aldiv@divisor+2
  7949  0273  3008               	movlw	8
  7950  0274  00A1               	movwf	___aldiv@divisor+1
  7951  0275  3000               	movlw	0
  7952  0276  00A0               	movwf	___aldiv@divisor
  7953  0277  082E               	movf	compensate_temperature@calib_data,w
  7954  0278  3E02               	addlw	2
  7955  0279  0086               	movwf	6
  7956  027A  3001               	movlw	1	; select bank2/3
  7957  027B  0087               	movwf	7
  7958  027C  3F40               	moviw [0]fsr1
  7959  027D  00B2               	movwf	??_compensate_temperature
  7960  027E  3F41               	moviw [1]fsr1
  7961  027F  00B3               	movwf	??_compensate_temperature+1
  7962  0280  0832               	movf	??_compensate_temperature,w
  7963  0281  00F0               	movwf	___lmul@multiplier
  7964  0282  0833               	movf	??_compensate_temperature+1,w
  7965  0283  00F1               	movwf	___lmul@multiplier+1
  7966  0284  0D89               	rlf	9,f
  7967  0285  3B89               	subwfb	9,f
  7968  0286  0989               	comf	9,f
  7969  0287  00F2               	movwf	___lmul@multiplier+2
  7970  0288  00F3               	movwf	___lmul@multiplier+3
  7971  0289  084B               	movf	compensate_temperature@var1+3,w
  7972  028A  00F7               	movwf	___lmul@multiplicand+3
  7973  028B  084A               	movf	compensate_temperature@var1+2,w
  7974  028C  00F6               	movwf	___lmul@multiplicand+2
  7975  028D  0849               	movf	compensate_temperature@var1+1,w
  7976  028E  00F5               	movwf	___lmul@multiplicand+1
  7977  028F  0848               	movf	compensate_temperature@var1,w
  7978  0290  00F4               	movwf	___lmul@multiplicand
  7979  0291  319C  2414  3182   	fcall	___lmul
  7980  0294  0873               	movf	?___lmul+3,w
  7981  0295  00A7               	movwf	___aldiv@dividend+3
  7982  0296  0872               	movf	?___lmul+2,w
  7983  0297  00A6               	movwf	___aldiv@dividend+2
  7984  0298  0871               	movf	?___lmul+1,w
  7985  0299  00A5               	movwf	___aldiv@dividend+1
  7986  029A  0870               	movf	?___lmul,w
  7987  029B  00A4               	movwf	___aldiv@dividend
  7988  029C  3195  2505  3182   	fcall	___aldiv
  7989  029F  0823               	movf	?___aldiv+3,w
  7990  02A0  00CB               	movwf	compensate_temperature@var1+3
  7991  02A1  0822               	movf	?___aldiv+2,w
  7992  02A2  00CA               	movwf	compensate_temperature@var1+2
  7993  02A3  0821               	movf	?___aldiv+1,w
  7994  02A4  00C9               	movwf	compensate_temperature@var1+1
  7995  02A5  0820               	movf	?___aldiv,w
  7996  02A6  00C8               	movwf	compensate_temperature@var1
  7997                           
  7998                           ;BME280_driver/bme280.c: 1137:     var2 = (int32_t)((uncomp_data->temperature / 16) - ((
      +                          int32_t)calib_data->dig_T1));
  7999  02A7  082E               	movf	compensate_temperature@calib_data,w
  8000  02A8  0086               	movwf	6
  8001  02A9  3001               	movlw	1	; select bank2/3
  8002  02AA  0087               	movwf	7
  8003  02AB  3F40               	moviw [0]fsr1
  8004  02AC  00B2               	movwf	??_compensate_temperature
  8005  02AD  3F41               	moviw [1]fsr1
  8006  02AE  00B3               	movwf	??_compensate_temperature+1
  8007  02AF  0832               	movf	??_compensate_temperature,w
  8008  02B0  00B4               	movwf	??_compensate_temperature+2
  8009  02B1  0833               	movf	??_compensate_temperature+1,w
  8010  02B2  00B5               	movwf	??_compensate_temperature+3
  8011  02B3  01B6               	clrf	??_compensate_temperature+4
  8012  02B4  01B7               	clrf	??_compensate_temperature+5
  8013  02B5  084C               	movf	compensate_temperature@uncomp_data,w
  8014  02B6  3E04               	addlw	4
  8015  02B7  0086               	movwf	6
  8016  02B8  3001               	movlw	1	; select bank2/3
  8017  02B9  0087               	movwf	7
  8018  02BA  3F40               	moviw [0]fsr1
  8019  02BB  00B8               	movwf	??_compensate_temperature+6
  8020  02BC  3F41               	moviw [1]fsr1
  8021  02BD  00B9               	movwf	??_compensate_temperature+7
  8022  02BE  3F42               	moviw [2]fsr1
  8023  02BF  00BA               	movwf	??_compensate_temperature+8
  8024  02C0  3F43               	moviw [3]fsr1
  8025  02C1  00BB               	movwf	??_compensate_temperature+9
  8026  02C2  3004               	movlw	4
  8027  02C3                     u4515:	
  8028  02C3  36BB               	lsrf	??_compensate_temperature+9,f
  8029  02C4  0CBA               	rrf	??_compensate_temperature+8,f
  8030  02C5  0CB9               	rrf	??_compensate_temperature+7,f
  8031  02C6  0CB8               	rrf	??_compensate_temperature+6,f
  8032  02C7  0B89               	decfsz	9,f
  8033  02C8  2AC3               	goto	u4515
  8034  02C9  0834               	movf	??_compensate_temperature+2,w
  8035  02CA  02B8               	subwf	??_compensate_temperature+6,f
  8036  02CB  0835               	movf	??_compensate_temperature+3,w
  8037  02CC  3BB9               	subwfb	??_compensate_temperature+7,f
  8038  02CD  0836               	movf	??_compensate_temperature+4,w
  8039  02CE  3BBA               	subwfb	??_compensate_temperature+8,f
  8040  02CF  0837               	movf	??_compensate_temperature+5,w
  8041  02D0  3BBB               	subwfb	??_compensate_temperature+9,f
  8042  02D1  083B               	movf	??_compensate_temperature+9,w
  8043  02D2  00D0               	movwf	compensate_temperature@var2+3
  8044  02D3  083A               	movf	??_compensate_temperature+8,w
  8045  02D4  00CF               	movwf	compensate_temperature@var2+2
  8046  02D5  0839               	movf	??_compensate_temperature+7,w
  8047  02D6  00CE               	movwf	compensate_temperature@var2+1
  8048  02D7  0838               	movf	??_compensate_temperature+6,w
  8049  02D8  00CD               	movwf	compensate_temperature@var2
  8050                           
  8051                           ;BME280_driver/bme280.c: 1138:     var2 = (((var2 * var2) / 4096) * ((int32_t)calib_data
      +                          ->dig_T3)) / 16384;
  8052  02D9  3000               	movlw	0
  8053  02DA  00A3               	movwf	___aldiv@divisor+3
  8054  02DB  3000               	movlw	0
  8055  02DC  00A2               	movwf	___aldiv@divisor+2
  8056  02DD  3010               	movlw	16
  8057  02DE  00A1               	movwf	___aldiv@divisor+1
  8058  02DF  3000               	movlw	0
  8059  02E0  00A0               	movwf	___aldiv@divisor
  8060  02E1  0850               	movf	compensate_temperature@var2+3,w
  8061  02E2  00F3               	movwf	___lmul@multiplier+3
  8062  02E3  084F               	movf	compensate_temperature@var2+2,w
  8063  02E4  00F2               	movwf	___lmul@multiplier+2
  8064  02E5  084E               	movf	compensate_temperature@var2+1,w
  8065  02E6  00F1               	movwf	___lmul@multiplier+1
  8066  02E7  084D               	movf	compensate_temperature@var2,w
  8067  02E8  00F0               	movwf	___lmul@multiplier
  8068  02E9  0850               	movf	compensate_temperature@var2+3,w
  8069  02EA  00F7               	movwf	___lmul@multiplicand+3
  8070  02EB  084F               	movf	compensate_temperature@var2+2,w
  8071  02EC  00F6               	movwf	___lmul@multiplicand+2
  8072  02ED  084E               	movf	compensate_temperature@var2+1,w
  8073  02EE  00F5               	movwf	___lmul@multiplicand+1
  8074  02EF  084D               	movf	compensate_temperature@var2,w
  8075  02F0  00F4               	movwf	___lmul@multiplicand
  8076  02F1  319C  2414  3182   	fcall	___lmul
  8077  02F4  0873               	movf	?___lmul+3,w
  8078  02F5  00A7               	movwf	___aldiv@dividend+3
  8079  02F6  0872               	movf	?___lmul+2,w
  8080  02F7  00A6               	movwf	___aldiv@dividend+2
  8081  02F8  0871               	movf	?___lmul+1,w
  8082  02F9  00A5               	movwf	___aldiv@dividend+1
  8083  02FA  0870               	movf	?___lmul,w
  8084  02FB  00A4               	movwf	___aldiv@dividend
  8085  02FC  3195  2505  3182   	fcall	___aldiv
  8086  02FF  0823               	movf	?___aldiv+3,w
  8087  0300  00BF               	movwf	_compensate_temperature$2351+3
  8088  0301  0822               	movf	?___aldiv+2,w
  8089  0302  00BE               	movwf	_compensate_temperature$2351+2
  8090  0303  0821               	movf	?___aldiv+1,w
  8091  0304  00BD               	movwf	_compensate_temperature$2351+1
  8092  0305  0820               	movf	?___aldiv,w
  8093  0306  00BC               	movwf	_compensate_temperature$2351
  8094                           
  8095                           ;BME280_driver/bme280.c: 1138:     var2 = (((var2 * var2) / 4096) * ((int32_t)calib_data
      +                          ->dig_T3)) / 16384;
  8096  0307  3000               	movlw	0
  8097  0308  00A3               	movwf	___aldiv@divisor+3
  8098  0309  3000               	movlw	0
  8099  030A  00A2               	movwf	___aldiv@divisor+2
  8100  030B  3040               	movlw	64
  8101  030C  00A1               	movwf	___aldiv@divisor+1
  8102  030D  3000               	movlw	0
  8103  030E  00A0               	movwf	___aldiv@divisor
  8104  030F  083F               	movf	_compensate_temperature$2351+3,w
  8105  0310  00F3               	movwf	___lmul@multiplier+3
  8106  0311  083E               	movf	_compensate_temperature$2351+2,w
  8107  0312  00F2               	movwf	___lmul@multiplier+2
  8108  0313  083D               	movf	_compensate_temperature$2351+1,w
  8109  0314  00F1               	movwf	___lmul@multiplier+1
  8110  0315  083C               	movf	_compensate_temperature$2351,w
  8111  0316  00F0               	movwf	___lmul@multiplier
  8112  0317  082E               	movf	compensate_temperature@calib_data,w
  8113  0318  3E04               	addlw	4
  8114  0319  0086               	movwf	6
  8115  031A  3001               	movlw	1	; select bank2/3
  8116  031B  0087               	movwf	7
  8117  031C  3F40               	moviw [0]fsr1
  8118  031D  00B2               	movwf	??_compensate_temperature
  8119  031E  3F41               	moviw [1]fsr1
  8120  031F  00B3               	movwf	??_compensate_temperature+1
  8121  0320  0832               	movf	??_compensate_temperature,w
  8122  0321  00F4               	movwf	___lmul@multiplicand
  8123  0322  0833               	movf	??_compensate_temperature+1,w
  8124  0323  00F5               	movwf	___lmul@multiplicand+1
  8125  0324  0D89               	rlf	9,f
  8126  0325  3B89               	subwfb	9,f
  8127  0326  0989               	comf	9,f
  8128  0327  00F6               	movwf	___lmul@multiplicand+2
  8129  0328  00F7               	movwf	___lmul@multiplicand+3
  8130  0329  319C  2414  3182   	fcall	___lmul
  8131  032C  0873               	movf	?___lmul+3,w
  8132  032D  00A7               	movwf	___aldiv@dividend+3
  8133  032E  0872               	movf	?___lmul+2,w
  8134  032F  00A6               	movwf	___aldiv@dividend+2
  8135  0330  0871               	movf	?___lmul+1,w
  8136  0331  00A5               	movwf	___aldiv@dividend+1
  8137  0332  0870               	movf	?___lmul,w
  8138  0333  00A4               	movwf	___aldiv@dividend
  8139  0334  3195  2505  3182   	fcall	___aldiv
  8140  0337  0823               	movf	?___aldiv+3,w
  8141  0338  00D0               	movwf	compensate_temperature@var2+3
  8142  0339  0822               	movf	?___aldiv+2,w
  8143  033A  00CF               	movwf	compensate_temperature@var2+2
  8144  033B  0821               	movf	?___aldiv+1,w
  8145  033C  00CE               	movwf	compensate_temperature@var2+1
  8146  033D  0820               	movf	?___aldiv,w
  8147  033E  00CD               	movwf	compensate_temperature@var2
  8148                           
  8149                           ;BME280_driver/bme280.c: 1139:     calib_data->t_fine = var1 + var2;
  8150  033F  0848               	movf	compensate_temperature@var1,w
  8151  0340  074D               	addwf	compensate_temperature@var2,w
  8152  0341  00B2               	movwf	??_compensate_temperature
  8153  0342  0849               	movf	compensate_temperature@var1+1,w
  8154  0343  3D4E               	addwfc	compensate_temperature@var2+1,w
  8155  0344  00B3               	movwf	??_compensate_temperature+1
  8156  0345  084A               	movf	compensate_temperature@var1+2,w
  8157  0346  3D4F               	addwfc	compensate_temperature@var2+2,w
  8158  0347  00B4               	movwf	??_compensate_temperature+2
  8159  0348  084B               	movf	compensate_temperature@var1+3,w
  8160  0349  3D50               	addwfc	compensate_temperature@var2+3,w
  8161  034A  00B5               	movwf	??_compensate_temperature+3
  8162  034B  082E               	movf	compensate_temperature@calib_data,w
  8163  034C  3E21               	addlw	33
  8164  034D  0086               	movwf	6
  8165  034E  3001               	movlw	1	; select bank2/3
  8166  034F  0087               	movwf	7
  8167  0350  0832               	movf	??_compensate_temperature,w
  8168  0351  3FC0               	movwi [0]fsr1
  8169  0352  0833               	movf	??_compensate_temperature+1,w
  8170  0353  3FC1               	movwi [1]fsr1
  8171  0354  0834               	movf	??_compensate_temperature+2,w
  8172  0355  3FC2               	movwi [2]fsr1
  8173  0356  0835               	movf	??_compensate_temperature+3,w
  8174  0357  3FC3               	movwi [3]fsr1
  8175                           
  8176                           ;BME280_driver/bme280.c: 1140:     temperature = (calib_data->t_fine * 5 + 128) / 256;
  8177  0358  3000               	movlw	0
  8178  0359  00A3               	movwf	___aldiv@divisor+3
  8179  035A  3000               	movlw	0
  8180  035B  00A2               	movwf	___aldiv@divisor+2
  8181  035C  3001               	movlw	1
  8182  035D  00A1               	movwf	___aldiv@divisor+1
  8183  035E  3000               	movlw	0
  8184  035F  00A0               	movwf	___aldiv@divisor
  8185  0360  3080               	movlw	128
  8186  0361  00B2               	movwf	??_compensate_temperature
  8187  0362  3000               	movlw	0
  8188  0363  00B3               	movwf	??_compensate_temperature+1
  8189  0364  3000               	movlw	0
  8190  0365  00B4               	movwf	??_compensate_temperature+2
  8191  0366  3000               	movlw	0
  8192  0367  00B5               	movwf	??_compensate_temperature+3
  8193  0368  082E               	movf	compensate_temperature@calib_data,w
  8194  0369  3E21               	addlw	33
  8195  036A  0086               	movwf	6
  8196  036B  3001               	movlw	1	; select bank2/3
  8197  036C  0087               	movwf	7
  8198  036D  3F40               	moviw [0]fsr1
  8199  036E  00F0               	movwf	___lmul@multiplier
  8200  036F  3F41               	moviw [1]fsr1
  8201  0370  00F1               	movwf	___lmul@multiplier+1
  8202  0371  3F42               	moviw [2]fsr1
  8203  0372  00F2               	movwf	___lmul@multiplier+2
  8204  0373  3F43               	moviw [3]fsr1
  8205  0374  00F3               	movwf	___lmul@multiplier+3
  8206  0375  3000               	movlw	0
  8207  0376  00F7               	movwf	___lmul@multiplicand+3
  8208  0377  3000               	movlw	0
  8209  0378  00F6               	movwf	___lmul@multiplicand+2
  8210  0379  3000               	movlw	0
  8211  037A  00F5               	movwf	___lmul@multiplicand+1
  8212  037B  3005               	movlw	5
  8213  037C  00F4               	movwf	___lmul@multiplicand
  8214  037D  319C  2414  3182   	fcall	___lmul
  8215  0380  0870               	movf	?___lmul,w
  8216  0381  07B2               	addwf	??_compensate_temperature,f
  8217  0382  0871               	movf	?___lmul+1,w
  8218  0383  3DB3               	addwfc	??_compensate_temperature+1,f
  8219  0384  0872               	movf	?___lmul+2,w
  8220  0385  3DB4               	addwfc	??_compensate_temperature+2,f
  8221  0386  0873               	movf	?___lmul+3,w
  8222  0387  3DB5               	addwfc	??_compensate_temperature+3,f
  8223  0388  0835               	movf	??_compensate_temperature+3,w
  8224  0389  00A7               	movwf	___aldiv@dividend+3
  8225  038A  0834               	movf	??_compensate_temperature+2,w
  8226  038B  00A6               	movwf	___aldiv@dividend+2
  8227  038C  0833               	movf	??_compensate_temperature+1,w
  8228  038D  00A5               	movwf	___aldiv@dividend+1
  8229  038E  0832               	movf	??_compensate_temperature,w
  8230  038F  00A4               	movwf	___aldiv@dividend
  8231  0390  3195  2505  3182   	fcall	___aldiv
  8232  0393  0823               	movf	?___aldiv+3,w
  8233  0394  00D4               	movwf	compensate_temperature@temperature+3
  8234  0395  0822               	movf	?___aldiv+2,w
  8235  0396  00D3               	movwf	compensate_temperature@temperature+2
  8236  0397  0821               	movf	?___aldiv+1,w
  8237  0398  00D2               	movwf	compensate_temperature@temperature+1
  8238  0399  0820               	movf	?___aldiv,w
  8239  039A  00D1               	movwf	compensate_temperature@temperature
  8240                           
  8241                           ;BME280_driver/bme280.c: 1141:     if (temperature < temperature_min)
  8242  039B  1FD4               	btfss	compensate_temperature@temperature+3,7
  8243  039C  2BAF               	goto	l4248
  8244  039D  3060               	movlw	96
  8245  039E  0251               	subwf	compensate_temperature@temperature,w
  8246  039F  30F0               	movlw	240
  8247  03A0  3B52               	subwfb	compensate_temperature@temperature+1,w
  8248  03A1  30FF               	movlw	255
  8249  03A2  3B53               	subwfb	compensate_temperature@temperature+2,w
  8250  03A3  30FF               	movlw	255
  8251  03A4  3B54               	subwfb	compensate_temperature@temperature+3,w
  8252  03A5  1803               	btfsc	3,0
  8253  03A6  2BAF               	goto	l4248
  8254                           
  8255                           ;BME280_driver/bme280.c: 1142:     {;BME280_driver/bme280.c: 1143:         temperature =
      +                           temperature_min;
  8256  03A7  30FF               	movlw	255
  8257  03A8  00D4               	movwf	compensate_temperature@temperature+3
  8258  03A9  30FF               	movlw	255
  8259  03AA  00D3               	movwf	compensate_temperature@temperature+2
  8260  03AB  30F0               	movlw	240
  8261  03AC  00D2               	movwf	compensate_temperature@temperature+1
  8262  03AD  3060               	movlw	96
  8263  03AE  2BC4               	goto	L2
  8264  03AF                     l4248:	
  8265                           ;BME280_driver/bme280.c: 1144:     }
  8266                           
  8267  03AF  1BD4               	btfsc	compensate_temperature@temperature+3,7
  8268  03B0  2BC5               	goto	l183
  8269  03B1  0854               	movf	compensate_temperature@temperature+3,w
  8270  03B2  1D03               	btfss	3,2
  8271  03B3  2BBD               	goto	l4250
  8272  03B4  0853               	movf	compensate_temperature@temperature+2,w
  8273  03B5  1D03               	btfss	3,2
  8274  03B6  2BBD               	goto	l4250
  8275  03B7  3035               	movlw	53
  8276  03B8  0251               	subwf	compensate_temperature@temperature,w
  8277  03B9  3021               	movlw	33
  8278  03BA  3B52               	subwfb	compensate_temperature@temperature+1,w
  8279  03BB  1C03               	btfss	3,0
  8280  03BC  2BC5               	goto	l183
  8281  03BD                     l4250:	
  8282                           
  8283                           ;BME280_driver/bme280.c: 1146:     {;BME280_driver/bme280.c: 1147:         temperature =
      +                           temperature_max;
  8284  03BD  3000               	movlw	0
  8285  03BE  00D4               	movwf	compensate_temperature@temperature+3
  8286  03BF  3000               	movlw	0
  8287  03C0  00D3               	movwf	compensate_temperature@temperature+2
  8288  03C1  3021               	movlw	33
  8289  03C2  00D2               	movwf	compensate_temperature@temperature+1
  8290  03C3  3034               	movlw	52
  8291  03C4                     L2:	
  8292  03C4  00D1               	movwf	compensate_temperature@temperature
  8293  03C5                     l183:	
  8294                           
  8295                           ;BME280_driver/bme280.c: 1150:     return temperature;
  8296  03C5  0854               	movf	compensate_temperature@temperature+3,w
  8297  03C6  00B1               	movwf	?_compensate_temperature+3
  8298  03C7  0853               	movf	compensate_temperature@temperature+2,w
  8299  03C8  00B0               	movwf	?_compensate_temperature+2
  8300  03C9  0852               	movf	compensate_temperature@temperature+1,w
  8301  03CA  00AF               	movwf	?_compensate_temperature+1
  8302  03CB  0851               	movf	compensate_temperature@temperature,w
  8303  03CC  00AE               	movwf	?_compensate_temperature
  8304  03CD  0008               	return
  8305  03CE                     __end_of_compensate_temperature:	
  8306                           
  8307                           	psect	text7
  8308  1C14                     __ptext7:	
  8309 ;; *************** function ___lmul *****************
  8310 ;; Defined at:
  8311 ;;		line 15 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\Umul32.c"
  8312 ;; Parameters:    Size  Location     Type
  8313 ;;  multiplier      4    0[COMMON] unsigned long 
  8314 ;;  multiplicand    4    4[COMMON] unsigned long 
  8315 ;; Auto vars:     Size  Location     Type
  8316 ;;  product         4    8[COMMON] unsigned long 
  8317 ;; Return value:  Size  Location     Type
  8318 ;;                  4    0[COMMON] unsigned long 
  8319 ;; Registers used:
  8320 ;;		wreg, status,2, status,0
  8321 ;; Tracked objects:
  8322 ;;		On entry : 1F/0
  8323 ;;		On exit  : 1F/0
  8324 ;;		Unchanged: 1F/0
  8325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8326 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8327 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8329 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8330 ;;Total ram usage:       12 bytes
  8331 ;; Hardware stack levels used:    1
  8332 ;; Hardware stack levels required when called:    3
  8333 ;; This function calls:
  8334 ;;		Nothing
  8335 ;; This function is called by:
  8336 ;;		_compensate_temperature
  8337 ;; This function uses a non-reentrant model
  8338 ;;
  8339                           
  8340                           
  8341                           ;psect for function ___lmul
  8342  1C14                     ___lmul:	
  8343                           
  8344                           ;incstack = 0
  8345                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  8346  1C14  3000               	movlw	0
  8347  1C15  00FB               	movwf	___lmul@product+3
  8348  1C16  3000               	movlw	0
  8349  1C17  00FA               	movwf	___lmul@product+2
  8350  1C18  3000               	movlw	0
  8351  1C19  00F9               	movwf	___lmul@product+1
  8352  1C1A  3000               	movlw	0
  8353  1C1B  00F8               	movwf	___lmul@product
  8354  1C1C                     l2932:	
  8355  1C1C  1C70               	btfss	___lmul@multiplier,0
  8356  1C1D  2C26               	goto	l2936
  8357  1C1E  0874               	movf	___lmul@multiplicand,w
  8358  1C1F  07F8               	addwf	___lmul@product,f
  8359  1C20  0875               	movf	___lmul@multiplicand+1,w
  8360  1C21  3DF9               	addwfc	___lmul@product+1,f
  8361  1C22  0876               	movf	___lmul@multiplicand+2,w
  8362  1C23  3DFA               	addwfc	___lmul@product+2,f
  8363  1C24  0877               	movf	___lmul@multiplicand+3,w
  8364  1C25  3DFB               	addwfc	___lmul@product+3,f
  8365  1C26                     l2936:	
  8366  1C26  3001               	movlw	1
  8367  1C27                     u2475:	
  8368  1C27  35F4               	lslf	___lmul@multiplicand,f
  8369  1C28  0DF5               	rlf	___lmul@multiplicand+1,f
  8370  1C29  0DF6               	rlf	___lmul@multiplicand+2,f
  8371  1C2A  0DF7               	rlf	___lmul@multiplicand+3,f
  8372  1C2B  0B89               	decfsz	9,f
  8373  1C2C  2C27               	goto	u2475
  8374  1C2D  3001               	movlw	1
  8375  1C2E                     u2485:	
  8376  1C2E  36F3               	lsrf	___lmul@multiplier+3,f
  8377  1C2F  0CF2               	rrf	___lmul@multiplier+2,f
  8378  1C30  0CF1               	rrf	___lmul@multiplier+1,f
  8379  1C31  0CF0               	rrf	___lmul@multiplier,f
  8380  1C32  0B89               	decfsz	9,f
  8381  1C33  2C2E               	goto	u2485
  8382  1C34  0873               	movf	___lmul@multiplier+3,w
  8383  1C35  0472               	iorwf	___lmul@multiplier+2,w
  8384  1C36  0471               	iorwf	___lmul@multiplier+1,w
  8385  1C37  0470               	iorwf	___lmul@multiplier,w
  8386  1C38  1D03               	skipz
  8387  1C39  2C1C               	goto	l2932
  8388  1C3A  087B               	movf	___lmul@product+3,w
  8389  1C3B  00F3               	movwf	?___lmul+3
  8390  1C3C  087A               	movf	___lmul@product+2,w
  8391  1C3D  00F2               	movwf	?___lmul+2
  8392  1C3E  0879               	movf	___lmul@product+1,w
  8393  1C3F  00F1               	movwf	?___lmul+1
  8394  1C40  0878               	movf	___lmul@product,w
  8395  1C41  00F0               	movwf	?___lmul
  8396  1C42  0008               	return
  8397  1C43                     __end_of___lmul:	
  8398                           
  8399                           	psect	text8
  8400  1505                     __ptext8:	
  8401 ;; *************** function ___aldiv *****************
  8402 ;; Defined at:
  8403 ;;		line 5 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\aldiv.c"
  8404 ;; Parameters:    Size  Location     Type
  8405 ;;  divisor         4    0[BANK0 ] long 
  8406 ;;  dividend        4    4[BANK0 ] long 
  8407 ;; Auto vars:     Size  Location     Type
  8408 ;;  quotient        4   10[BANK0 ] long 
  8409 ;;  sign            1    9[BANK0 ] unsigned char 
  8410 ;;  counter         1    8[BANK0 ] unsigned char 
  8411 ;; Return value:  Size  Location     Type
  8412 ;;                  4    0[BANK0 ] long 
  8413 ;; Registers used:
  8414 ;;		wreg, status,2, status,0
  8415 ;; Tracked objects:
  8416 ;;		On entry : 1F/0
  8417 ;;		On exit  : 1F/0
  8418 ;;		Unchanged: 0/0
  8419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8420 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8421 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8422 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8423 ;;      Totals:         1      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8424 ;;Total ram usage:       15 bytes
  8425 ;; Hardware stack levels used:    1
  8426 ;; Hardware stack levels required when called:    3
  8427 ;; This function calls:
  8428 ;;		Nothing
  8429 ;; This function is called by:
  8430 ;;		_compensate_temperature
  8431 ;; This function uses a non-reentrant model
  8432 ;;
  8433                           
  8434                           
  8435                           ;psect for function ___aldiv
  8436  1505                     ___aldiv:	
  8437                           
  8438                           ;incstack = 0
  8439                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  8440  1505  01A9               	clrf	___aldiv@sign
  8441  1506  1FA3               	btfss	___aldiv@divisor+3,7
  8442  1507  2D15               	goto	l963
  8443  1508  09A0               	comf	___aldiv@divisor,f
  8444  1509  09A1               	comf	___aldiv@divisor+1,f
  8445  150A  09A2               	comf	___aldiv@divisor+2,f
  8446  150B  09A3               	comf	___aldiv@divisor+3,f
  8447  150C  0AA0               	incf	___aldiv@divisor,f
  8448  150D  1903               	skipnz
  8449  150E  0AA1               	incf	___aldiv@divisor+1,f
  8450  150F  1903               	skipnz
  8451  1510  0AA2               	incf	___aldiv@divisor+2,f
  8452  1511  1903               	skipnz
  8453  1512  0AA3               	incf	___aldiv@divisor+3,f
  8454  1513  01A9               	clrf	___aldiv@sign
  8455  1514  0AA9               	incf	___aldiv@sign,f
  8456  1515                     l963:	
  8457  1515  1FA7               	btfss	___aldiv@dividend+3,7
  8458  1516  2D26               	goto	l2964
  8459  1517  09A4               	comf	___aldiv@dividend,f
  8460  1518  09A5               	comf	___aldiv@dividend+1,f
  8461  1519  09A6               	comf	___aldiv@dividend+2,f
  8462  151A  09A7               	comf	___aldiv@dividend+3,f
  8463  151B  0AA4               	incf	___aldiv@dividend,f
  8464  151C  1903               	skipnz
  8465  151D  0AA5               	incf	___aldiv@dividend+1,f
  8466  151E  1903               	skipnz
  8467  151F  0AA6               	incf	___aldiv@dividend+2,f
  8468  1520  1903               	skipnz
  8469  1521  0AA7               	incf	___aldiv@dividend+3,f
  8470  1522  3001               	movlw	1
  8471  1523  00FC               	movwf	??___aldiv
  8472  1524  087C               	movf	??___aldiv,w
  8473  1525  06A9               	xorwf	___aldiv@sign,f
  8474  1526                     l2964:	
  8475  1526  3000               	movlw	0
  8476  1527  00AD               	movwf	___aldiv@quotient+3
  8477  1528  3000               	movlw	0
  8478  1529  00AC               	movwf	___aldiv@quotient+2
  8479  152A  3000               	movlw	0
  8480  152B  00AB               	movwf	___aldiv@quotient+1
  8481  152C  3000               	movlw	0
  8482  152D  00AA               	movwf	___aldiv@quotient
  8483  152E  0823               	movf	___aldiv@divisor+3,w
  8484  152F  0422               	iorwf	___aldiv@divisor+2,w
  8485  1530  0421               	iorwf	___aldiv@divisor+1,w
  8486  1531  0420               	iorwf	___aldiv@divisor,w
  8487  1532  1903               	skipnz
  8488  1533  2D6F               	goto	l2986
  8489  1534  01A8               	clrf	___aldiv@counter
  8490  1535  0AA8               	incf	___aldiv@counter,f
  8491  1536                     l2972:	
  8492  1536  1BA3               	btfsc	___aldiv@divisor+3,7
  8493  1537  2D44               	goto	l2974
  8494  1538  3001               	movlw	1
  8495  1539                     u2565:	
  8496  1539  35A0               	lslf	___aldiv@divisor,f
  8497  153A  0DA1               	rlf	___aldiv@divisor+1,f
  8498  153B  0DA2               	rlf	___aldiv@divisor+2,f
  8499  153C  0DA3               	rlf	___aldiv@divisor+3,f
  8500  153D  0B89               	decfsz	9,f
  8501  153E  2D39               	goto	u2565
  8502  153F  3001               	movlw	1
  8503  1540  00FC               	movwf	??___aldiv
  8504  1541  087C               	movf	??___aldiv,w
  8505  1542  07A8               	addwf	___aldiv@counter,f
  8506  1543  2D36               	goto	l2972
  8507  1544                     l2974:	
  8508  1544  3001               	movlw	1
  8509  1545                     u2585:	
  8510  1545  35AA               	lslf	___aldiv@quotient,f
  8511  1546  0DAB               	rlf	___aldiv@quotient+1,f
  8512  1547  0DAC               	rlf	___aldiv@quotient+2,f
  8513  1548  0DAD               	rlf	___aldiv@quotient+3,f
  8514  1549  0B89               	decfsz	9,f
  8515  154A  2D45               	goto	u2585
  8516  154B  0823               	movf	___aldiv@divisor+3,w
  8517  154C  0227               	subwf	___aldiv@dividend+3,w
  8518  154D  1D03               	skipz
  8519  154E  2D59               	goto	u2595
  8520  154F  0822               	movf	___aldiv@divisor+2,w
  8521  1550  0226               	subwf	___aldiv@dividend+2,w
  8522  1551  1D03               	skipz
  8523  1552  2D59               	goto	u2595
  8524  1553  0821               	movf	___aldiv@divisor+1,w
  8525  1554  0225               	subwf	___aldiv@dividend+1,w
  8526  1555  1D03               	skipz
  8527  1556  2D59               	goto	u2595
  8528  1557  0820               	movf	___aldiv@divisor,w
  8529  1558  0224               	subwf	___aldiv@dividend,w
  8530  1559                     u2595:	
  8531  1559  1C03               	skipc
  8532  155A  2D64               	goto	l2982
  8533  155B  0820               	movf	___aldiv@divisor,w
  8534  155C  02A4               	subwf	___aldiv@dividend,f
  8535  155D  0821               	movf	___aldiv@divisor+1,w
  8536  155E  3BA5               	subwfb	___aldiv@dividend+1,f
  8537  155F  0822               	movf	___aldiv@divisor+2,w
  8538  1560  3BA6               	subwfb	___aldiv@dividend+2,f
  8539  1561  0823               	movf	___aldiv@divisor+3,w
  8540  1562  3BA7               	subwfb	___aldiv@dividend+3,f
  8541  1563  142A               	bsf	___aldiv@quotient,0
  8542  1564                     l2982:	
  8543  1564  3001               	movlw	1
  8544  1565                     u2605:	
  8545  1565  36A3               	lsrf	___aldiv@divisor+3,f
  8546  1566  0CA2               	rrf	___aldiv@divisor+2,f
  8547  1567  0CA1               	rrf	___aldiv@divisor+1,f
  8548  1568  0CA0               	rrf	___aldiv@divisor,f
  8549  1569  0B89               	decfsz	9,f
  8550  156A  2D65               	goto	u2605
  8551  156B  3001               	movlw	1
  8552  156C  02A8               	subwf	___aldiv@counter,f
  8553  156D  1D03               	btfss	3,2
  8554  156E  2D44               	goto	l2974
  8555  156F                     l2986:	
  8556  156F  0829               	movf	___aldiv@sign,w
  8557  1570  1903               	btfsc	3,2
  8558  1571  2D7D               	goto	l2990
  8559  1572  09AA               	comf	___aldiv@quotient,f
  8560  1573  09AB               	comf	___aldiv@quotient+1,f
  8561  1574  09AC               	comf	___aldiv@quotient+2,f
  8562  1575  09AD               	comf	___aldiv@quotient+3,f
  8563  1576  0AAA               	incf	___aldiv@quotient,f
  8564  1577  1903               	skipnz
  8565  1578  0AAB               	incf	___aldiv@quotient+1,f
  8566  1579  1903               	skipnz
  8567  157A  0AAC               	incf	___aldiv@quotient+2,f
  8568  157B  1903               	skipnz
  8569  157C  0AAD               	incf	___aldiv@quotient+3,f
  8570  157D                     l2990:	
  8571  157D  082D               	movf	___aldiv@quotient+3,w
  8572  157E  00A3               	movwf	?___aldiv+3
  8573  157F  082C               	movf	___aldiv@quotient+2,w
  8574  1580  00A2               	movwf	?___aldiv+2
  8575  1581  082B               	movf	___aldiv@quotient+1,w
  8576  1582  00A1               	movwf	?___aldiv+1
  8577  1583  082A               	movf	___aldiv@quotient,w
  8578  1584  00A0               	movwf	?___aldiv
  8579  1585  0008               	return
  8580  1586                     __end_of___aldiv:	
  8581                           
  8582                           	psect	text9
  8583  175E                     __ptext9:	
  8584 ;; *************** function _compensate_pressure *****************
  8585 ;; Defined at:
  8586 ;;		line 1159 in file "BME280_driver/bme280.c"
  8587 ;; Parameters:    Size  Location     Type
  8588 ;;  uncomp_data     1    wreg     PTR const struct bme280_
  8589 ;;		 -> bme280_get_sensor_data@uncomp_data(12), 
  8590 ;;  calib_data      1   10[COMMON] PTR const struct bme280_
  8591 ;;		 -> EnvSensor(51), 
  8592 ;; Auto vars:     Size  Location     Type
  8593 ;;  uncomp_data     1   24[BANK1 ] PTR const struct bme280_
  8594 ;;		 -> bme280_get_sensor_data@uncomp_data(12), 
  8595 ;;  var1            8   61[BANK1 ] long long 
  8596 ;;  var4            8   53[BANK1 ] long long 
  8597 ;;  var2            8   45[BANK1 ] long long 
  8598 ;;  var3            8    0        long long 
  8599 ;;  pressure        4   41[BANK1 ] unsigned long 
  8600 ;;  pressure_min    4    0        unsigned long 
  8601 ;;  pressure_max    4   25[BANK1 ] unsigned long 
  8602 ;; Return value:  Size  Location     Type
  8603 ;;                  4   10[COMMON] unsigned long 
  8604 ;; Registers used:
  8605 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8606 ;; Tracked objects:
  8607 ;;		On entry : 1F/0
  8608 ;;		On exit  : 1F/1
  8609 ;;		Unchanged: 0/0
  8610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8611 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8612 ;;      Locals:         0       0      69       0       0       0       0       0       0       0       0       0       
      +0       0
  8613 ;;      Temps:          0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8614 ;;      Totals:         4      26      69       0       0       0       0       0       0       0       0       0       
      +0       0
  8615 ;;Total ram usage:       99 bytes
  8616 ;; Hardware stack levels used:    1
  8617 ;; Hardware stack levels required when called:    4
  8618 ;; This function calls:
  8619 ;;		___aodiv
  8620 ;;		___omul
  8621 ;; This function is called by:
  8622 ;;		_bme280_compensate_data
  8623 ;; This function uses a non-reentrant model
  8624 ;;
  8625                           
  8626                           
  8627                           ;psect for function _compensate_pressure
  8628  175E                     _compensate_pressure:	
  8629                           
  8630                           ;incstack = 0
  8631                           ; Regs used in _compensate_pressure: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8632                           ;compensate_pressure@uncomp_data stored from wreg
  8633  175E  0021               	movlb	1	; select bank1
  8634  175F  00B8               	movwf	compensate_pressure@uncomp_data^(0+128)
  8635                           
  8636                           ;BME280_driver/bme280.c: 1168:     uint32_t pressure_max = 11000000;
  8637  1760  3000               	movlw	0
  8638  1761  00BC               	movwf	(compensate_pressure@pressure_max+3)^(0+128)
  8639  1762  30A7               	movlw	167
  8640  1763  00BB               	movwf	(compensate_pressure@pressure_max+2)^(0+128)
  8641  1764  30D8               	movlw	216
  8642  1765  00BA               	movwf	(compensate_pressure@pressure_max+1)^(0+128)
  8643  1766  30C0               	movlw	192
  8644  1767  00B9               	movwf	compensate_pressure@pressure_max^(0+128)
  8645                           
  8646                           ;BME280_driver/bme280.c: 1170:     var1 = ((int64_t)calib_data->t_fine) - 128000;
  8647  1768  3000               	movlw	0
  8648  1769  0020               	movlb	0	; select bank0
  8649  176A  00CA               	movwf	??_compensate_pressure
  8650  176B  300C               	movlw	12
  8651  176C  00CB               	movwf	??_compensate_pressure+1
  8652  176D  30FE               	movlw	254
  8653  176E  00CC               	movwf	??_compensate_pressure+2
  8654  176F  30FF               	movlw	255
  8655  1770  00CD               	movwf	??_compensate_pressure+3
  8656  1771  30FF               	movlw	255
  8657  1772  00CE               	movwf	??_compensate_pressure+4
  8658  1773  30FF               	movlw	255
  8659  1774  00CF               	movwf	??_compensate_pressure+5
  8660  1775  30FF               	movlw	255
  8661  1776  00D0               	movwf	??_compensate_pressure+6
  8662  1777  30FF               	movlw	255
  8663  1778  00D1               	movwf	??_compensate_pressure+7
  8664  1779  087A               	movf	compensate_pressure@calib_data,w
  8665  177A  3E21               	addlw	33
  8666  177B  0086               	movwf	6
  8667  177C  3001               	movlw	1	; select bank2/3
  8668  177D  0087               	movwf	7
  8669  177E  3F40               	moviw [0]fsr1
  8670  177F  00D2               	movwf	??_compensate_pressure+8
  8671  1780  3F41               	moviw [1]fsr1
  8672  1781  00D3               	movwf	??_compensate_pressure+9
  8673  1782  3F42               	moviw [2]fsr1
  8674  1783  00D4               	movwf	??_compensate_pressure+10
  8675  1784  3F43               	moviw [3]fsr1
  8676  1785  00D5               	movwf	??_compensate_pressure+11
  8677  1786  0852               	movf	??_compensate_pressure+8,w
  8678  1787  00D6               	movwf	??_compensate_pressure+12
  8679  1788  0853               	movf	??_compensate_pressure+9,w
  8680  1789  00D7               	movwf	??_compensate_pressure+13
  8681  178A  0854               	movf	??_compensate_pressure+10,w
  8682  178B  00D8               	movwf	??_compensate_pressure+14
  8683  178C  0855               	movf	??_compensate_pressure+11,w
  8684  178D  00D9               	movwf	??_compensate_pressure+15
  8685  178E  3000               	movlw	0
  8686  178F  1BD9               	btfsc	??_compensate_pressure+15,7
  8687  1790  30FF               	movlw	255
  8688  1791  00DA               	movwf	??_compensate_pressure+16
  8689  1792  00DB               	movwf	??_compensate_pressure+17
  8690  1793  00DC               	movwf	??_compensate_pressure+18
  8691  1794  00DD               	movwf	??_compensate_pressure+19
  8692  1795  0856               	movf	??_compensate_pressure+12,w
  8693  1796  07CA               	addwf	??_compensate_pressure,f
  8694  1797  0857               	movf	??_compensate_pressure+13,w
  8695  1798  3DCB               	addwfc	??_compensate_pressure+1,f
  8696  1799  0858               	movf	??_compensate_pressure+14,w
  8697  179A  3DCC               	addwfc	??_compensate_pressure+2,f
  8698  179B  0859               	movf	??_compensate_pressure+15,w
  8699  179C  3DCD               	addwfc	??_compensate_pressure+3,f
  8700  179D  085A               	movf	??_compensate_pressure+16,w
  8701  179E  3DCE               	addwfc	??_compensate_pressure+4,f
  8702  179F  085B               	movf	??_compensate_pressure+17,w
  8703  17A0  3DCF               	addwfc	??_compensate_pressure+5,f
  8704  17A1  085C               	movf	??_compensate_pressure+18,w
  8705  17A2  3DD0               	addwfc	??_compensate_pressure+6,f
  8706  17A3  085D               	movf	??_compensate_pressure+19,w
  8707  17A4  3DD1               	addwfc	??_compensate_pressure+7,f
  8708  17A5  0851               	movf	??_compensate_pressure+7,w
  8709  17A6  0021               	movlb	1	; select bank1
  8710  17A7  00E4               	movwf	(compensate_pressure@var1+7)^(0+128)
  8711  17A8  0020               	movlb	0	; select bank0
  8712  17A9  0850               	movf	??_compensate_pressure+6,w
  8713  17AA  0021               	movlb	1	; select bank1
  8714  17AB  00E3               	movwf	(compensate_pressure@var1+6)^(0+128)
  8715  17AC  0020               	movlb	0	; select bank0
  8716  17AD  084F               	movf	??_compensate_pressure+5,w
  8717  17AE  0021               	movlb	1	; select bank1
  8718  17AF  00E2               	movwf	(compensate_pressure@var1+5)^(0+128)
  8719  17B0  0020               	movlb	0	; select bank0
  8720  17B1  084E               	movf	??_compensate_pressure+4,w
  8721  17B2  0021               	movlb	1	; select bank1
  8722  17B3  00E1               	movwf	(compensate_pressure@var1+4)^(0+128)
  8723  17B4  0020               	movlb	0	; select bank0
  8724  17B5  084D               	movf	??_compensate_pressure+3,w
  8725  17B6  0021               	movlb	1	; select bank1
  8726  17B7  00E0               	movwf	(compensate_pressure@var1+3)^(0+128)
  8727  17B8  0020               	movlb	0	; select bank0
  8728  17B9  084C               	movf	??_compensate_pressure+2,w
  8729  17BA  0021               	movlb	1	; select bank1
  8730  17BB  00DF               	movwf	(compensate_pressure@var1+2)^(0+128)
  8731  17BC  0020               	movlb	0	; select bank0
  8732  17BD  084B               	movf	??_compensate_pressure+1,w
  8733  17BE  0021               	movlb	1	; select bank1
  8734  17BF  00DE               	movwf	(compensate_pressure@var1+1)^(0+128)
  8735  17C0  0020               	movlb	0	; select bank0
  8736  17C1  084A               	movf	??_compensate_pressure,w
  8737  17C2  0021               	movlb	1	; select bank1
  8738  17C3  00DD               	movwf	compensate_pressure@var1^(0+128)
  8739                           
  8740                           ;BME280_driver/bme280.c: 1171:     var2 = var1 * var1 * (int64_t)calib_data->dig_P6;
  8741  17C4  087A               	movf	compensate_pressure@calib_data,w
  8742  17C5  3E10               	addlw	16
  8743  17C6  0086               	movwf	6
  8744  17C7  3001               	movlw	1	; select bank2/3
  8745  17C8  0087               	movwf	7
  8746  17C9  3F40               	moviw [0]fsr1
  8747  17CA  0020               	movlb	0	; select bank0
  8748  17CB  00CA               	movwf	??_compensate_pressure
  8749  17CC  3F41               	moviw [1]fsr1
  8750  17CD  00CB               	movwf	??_compensate_pressure+1
  8751  17CE  084A               	movf	??_compensate_pressure,w
  8752  17CF  00A0               	movwf	___omul@multiplier
  8753  17D0  084B               	movf	??_compensate_pressure+1,w
  8754  17D1  00A1               	movwf	___omul@multiplier+1
  8755  17D2  0D89               	rlf	9,f
  8756  17D3  3B89               	subwfb	9,f
  8757  17D4  0989               	comf	9,f
  8758  17D5  00A2               	movwf	___omul@multiplier+2
  8759  17D6  00A3               	movwf	___omul@multiplier+3
  8760  17D7  00A4               	movwf	___omul@multiplier+4
  8761  17D8  00A5               	movwf	___omul@multiplier+5
  8762  17D9  00A6               	movwf	___omul@multiplier+6
  8763  17DA  00A7               	movwf	___omul@multiplier+7
  8764  17DB  0021               	movlb	1	; select bank1
  8765  17DC  085D               	movf	compensate_pressure@var1^(0+128),w
  8766  17DD  0020               	movlb	0	; select bank0
  8767  17DE  00A8               	movwf	___omul@multiplicand
  8768  17DF  0021               	movlb	1	; select bank1
  8769  17E0  085E               	movf	(compensate_pressure@var1+1)^(0+128),w
  8770  17E1  0020               	movlb	0	; select bank0
  8771  17E2  00A9               	movwf	___omul@multiplicand+1
  8772  17E3  0021               	movlb	1	; select bank1
  8773  17E4  085F               	movf	(compensate_pressure@var1+2)^(0+128),w
  8774  17E5  0020               	movlb	0	; select bank0
  8775  17E6  00AA               	movwf	___omul@multiplicand+2
  8776  17E7  0021               	movlb	1	; select bank1
  8777  17E8  0860               	movf	(compensate_pressure@var1+3)^(0+128),w
  8778  17E9  0020               	movlb	0	; select bank0
  8779  17EA  00AB               	movwf	___omul@multiplicand+3
  8780  17EB  0021               	movlb	1	; select bank1
  8781  17EC  0861               	movf	(compensate_pressure@var1+4)^(0+128),w
  8782  17ED  0020               	movlb	0	; select bank0
  8783  17EE  00AC               	movwf	___omul@multiplicand+4
  8784  17EF  0021               	movlb	1	; select bank1
  8785  17F0  0862               	movf	(compensate_pressure@var1+5)^(0+128),w
  8786  17F1  0020               	movlb	0	; select bank0
  8787  17F2  00AD               	movwf	___omul@multiplicand+5
  8788  17F3  0021               	movlb	1	; select bank1
  8789  17F4  0863               	movf	(compensate_pressure@var1+6)^(0+128),w
  8790  17F5  0020               	movlb	0	; select bank0
  8791  17F6  00AE               	movwf	___omul@multiplicand+6
  8792  17F7  0021               	movlb	1	; select bank1
  8793  17F8  0864               	movf	(compensate_pressure@var1+7)^(0+128),w
  8794  17F9  0020               	movlb	0	; select bank0
  8795  17FA  00AF               	movwf	___omul@multiplicand+7
  8796  17FB  319E  2638         	fcall	___omul
  8797  17FD  0820               	movf	?___omul,w
  8798  17FE  3188  283A         	ljmp	L8
  8799                           
  8800                           	psect	text10
  8801  1E38                     __ptext10:	
  8802 ;; *************** function ___omul *****************
  8803 ;; Defined at:
  8804 ;;		line 91 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\Umul64.c"
  8805 ;; Parameters:    Size  Location     Type
  8806 ;;  multiplier      8    0[BANK0 ] unsigned long long 
  8807 ;;  multiplicand    8    8[BANK0 ] unsigned long long 
  8808 ;; Auto vars:     Size  Location     Type
  8809 ;;  product         8    1[COMMON] unsigned long long 
  8810 ;; Return value:  Size  Location     Type
  8811 ;;                  8    0[BANK0 ] unsigned long long 
  8812 ;; Registers used:
  8813 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8814 ;; Tracked objects:
  8815 ;;		On entry : 1F/0
  8816 ;;		On exit  : 1F/0
  8817 ;;		Unchanged: 0/0
  8818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8819 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8820 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8821 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8822 ;;      Totals:         9      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8823 ;;Total ram usage:       25 bytes
  8824 ;; Hardware stack levels used:    1
  8825 ;; Hardware stack levels required when called:    3
  8826 ;; This function calls:
  8827 ;;		Nothing
  8828 ;; This function is called by:
  8829 ;;		_compensate_pressure
  8830 ;; This function uses a non-reentrant model
  8831 ;;
  8832                           
  8833                           
  8834                           ;psect for function ___omul
  8835  1E38                     ___omul:	
  8836                           
  8837                           ;incstack = 0
  8838                           ; Regs used in ___omul: [wreg+fsr1l+fsr1h+status,2+status,0]
  8839  1E38  3071               	movlw	low ___omul@product
  8840  1E39  0086               	movwf	6
  8841  1E3A  3000               	movlw	high ___omul@product
  8842  1E3B  0087               	movwf	7
  8843  1E3C  3008               	movlw	8
  8844  1E3D  00F0               	movwf	??___omul
  8845  1E3E  3000               	movlw	0
  8846  1E3F                     u2500:	
  8847  1E3F  001E               	movwi fsr1++
  8848  1E40  0BF0               	decfsz	??___omul,f
  8849  1E41  2E3F               	goto	u2500
  8850  1E42                     l2946:	
  8851  1E42  1C20               	btfss	___omul@multiplier,0
  8852  1E43  2E54               	goto	l2950
  8853  1E44  0828               	movf	___omul@multiplicand,w
  8854  1E45  07F1               	addwf	___omul@product,f
  8855  1E46  0829               	movf	___omul@multiplicand+1,w
  8856  1E47  3DF2               	addwfc	___omul@product+1,f
  8857  1E48  082A               	movf	___omul@multiplicand+2,w
  8858  1E49  3DF3               	addwfc	___omul@product+2,f
  8859  1E4A  082B               	movf	___omul@multiplicand+3,w
  8860  1E4B  3DF4               	addwfc	___omul@product+3,f
  8861  1E4C  082C               	movf	___omul@multiplicand+4,w
  8862  1E4D  3DF5               	addwfc	___omul@product+4,f
  8863  1E4E  082D               	movf	___omul@multiplicand+5,w
  8864  1E4F  3DF6               	addwfc	___omul@product+5,f
  8865  1E50  082E               	movf	___omul@multiplicand+6,w
  8866  1E51  3DF7               	addwfc	___omul@product+6,f
  8867  1E52  082F               	movf	___omul@multiplicand+7,w
  8868  1E53  3DF8               	addwfc	___omul@product+7,f
  8869  1E54                     l2950:	
  8870  1E54  35A8               	lslf	___omul@multiplicand,f
  8871  1E55  0DA9               	rlf	___omul@multiplicand+1,f
  8872  1E56  0DAA               	rlf	___omul@multiplicand+2,f
  8873  1E57  0DAB               	rlf	___omul@multiplicand+3,f
  8874  1E58  0DAC               	rlf	___omul@multiplicand+4,f
  8875  1E59  0DAD               	rlf	___omul@multiplicand+5,f
  8876  1E5A  0DAE               	rlf	___omul@multiplicand+6,f
  8877  1E5B  0DAF               	rlf	___omul@multiplicand+7,f
  8878  1E5C  36A7               	lsrf	___omul@multiplier+7,f
  8879  1E5D  0CA6               	rrf	___omul@multiplier+6,f
  8880  1E5E  0CA5               	rrf	___omul@multiplier+5,f
  8881  1E5F  0CA4               	rrf	___omul@multiplier+4,f
  8882  1E60  0CA3               	rrf	___omul@multiplier+3,f
  8883  1E61  0CA2               	rrf	___omul@multiplier+2,f
  8884  1E62  0CA1               	rrf	___omul@multiplier+1,f
  8885  1E63  0CA0               	rrf	___omul@multiplier,f
  8886  1E64  0820               	movf	___omul@multiplier,w
  8887  1E65  0421               	iorwf	___omul@multiplier+1,w
  8888  1E66  0422               	iorwf	___omul@multiplier+2,w
  8889  1E67  0423               	iorwf	___omul@multiplier+3,w
  8890  1E68  0424               	iorwf	___omul@multiplier+4,w
  8891  1E69  0425               	iorwf	___omul@multiplier+5,w
  8892  1E6A  0426               	iorwf	___omul@multiplier+6,w
  8893  1E6B  0427               	iorwf	___omul@multiplier+7,w
  8894  1E6C  1D03               	skipz
  8895  1E6D  2E42               	goto	l2946
  8896  1E6E  0871               	movf	___omul@product,w
  8897  1E6F  00A0               	movwf	?___omul
  8898  1E70  0872               	movf	___omul@product+1,w
  8899  1E71  00A1               	movwf	?___omul+1
  8900  1E72  0873               	movf	___omul@product+2,w
  8901  1E73  00A2               	movwf	?___omul+2
  8902  1E74  0874               	movf	___omul@product+3,w
  8903  1E75  00A3               	movwf	?___omul+3
  8904  1E76  0875               	movf	___omul@product+4,w
  8905  1E77  00A4               	movwf	?___omul+4
  8906  1E78  0876               	movf	___omul@product+5,w
  8907  1E79  00A5               	movwf	?___omul+5
  8908  1E7A  0877               	movf	___omul@product+6,w
  8909  1E7B  00A6               	movwf	?___omul+6
  8910  1E7C  0878               	movf	___omul@product+7,w
  8911  1E7D  00A7               	movwf	?___omul+7
  8912  1E7E  0008               	return
  8913  1E7F                     __end_of___omul:	
  8914                           
  8915                           	psect	text11
  8916  04F7                     __ptext11:	
  8917 ;; *************** function ___aodiv *****************
  8918 ;; Defined at:
  8919 ;;		line 7 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\aodiv.c"
  8920 ;; Parameters:    Size  Location     Type
  8921 ;;  divisor         8   16[BANK0 ] long long 
  8922 ;;  dividend        8   24[BANK0 ] long long 
  8923 ;; Auto vars:     Size  Location     Type
  8924 ;;  quotient        8   34[BANK0 ] long long 
  8925 ;;  sign            1   33[BANK0 ] unsigned char 
  8926 ;;  counter         1   32[BANK0 ] unsigned char 
  8927 ;; Return value:  Size  Location     Type
  8928 ;;                  8   16[BANK0 ] long long 
  8929 ;; Registers used:
  8930 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8931 ;; Tracked objects:
  8932 ;;		On entry : 1F/0
  8933 ;;		On exit  : 1F/0
  8934 ;;		Unchanged: 0/0
  8935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8936 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8937 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8938 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8939 ;;      Totals:         1      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8940 ;;Total ram usage:       27 bytes
  8941 ;; Hardware stack levels used:    1
  8942 ;; Hardware stack levels required when called:    3
  8943 ;; This function calls:
  8944 ;;		Nothing
  8945 ;; This function is called by:
  8946 ;;		_compensate_pressure
  8947 ;; This function uses a non-reentrant model
  8948 ;;
  8949                           
  8950                           
  8951                           ;psect for function ___aodiv
  8952  04F7                     ___aodiv:	
  8953                           
  8954                           ;incstack = 0
  8955                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  8956  04F7  01C1               	clrf	___aodiv@sign
  8957  04F8  3030               	movlw	low ___aodiv@divisor
  8958  04F9  0086               	movwf	6
  8959  04FA  3000               	movlw	high ___aodiv@divisor
  8960  04FB  0087               	movwf	7
  8961  04FC  3F47               	moviw [7]fsr1
  8962  04FD  00F9               	movwf	??___aodiv
  8963  04FE  1FF9               	btfss	??___aodiv,7
  8964  04FF  2D22               	goto	l3000
  8965  0500  0020               	movlb	0	; select bank0
  8966  0501  09B0               	comf	___aodiv@divisor,f
  8967  0502  09B1               	comf	___aodiv@divisor+1,f
  8968  0503  09B2               	comf	___aodiv@divisor+2,f
  8969  0504  09B3               	comf	___aodiv@divisor+3,f
  8970  0505  09B4               	comf	___aodiv@divisor+4,f
  8971  0506  09B5               	comf	___aodiv@divisor+5,f
  8972  0507  09B6               	comf	___aodiv@divisor+6,f
  8973  0508  09B7               	comf	___aodiv@divisor+7,f
  8974  0509  0AB0               	incf	___aodiv@divisor,f
  8975  050A  1D03               	skipz
  8976  050B  2D1F               	goto	u264lld
  8977  050C  0AB1               	incf	___aodiv@divisor+1,f
  8978  050D  1D03               	skipz
  8979  050E  2D1F               	goto	u264lld
  8980  050F  0AB2               	incf	___aodiv@divisor+2,f
  8981  0510  1D03               	skipz
  8982  0511  2D1F               	goto	u264lld
  8983  0512  0AB3               	incf	___aodiv@divisor+3,f
  8984  0513  1D03               	skipz
  8985  0514  2D1F               	goto	u264lld
  8986  0515  0AB4               	incf	___aodiv@divisor+4,f
  8987  0516  1D03               	skipz
  8988  0517  2D1F               	goto	u264lld
  8989  0518  0AB5               	incf	___aodiv@divisor+5,f
  8990  0519  1D03               	skipz
  8991  051A  2D1F               	goto	u264lld
  8992  051B  0AB6               	incf	___aodiv@divisor+6,f
  8993  051C  1D03               	skipz
  8994  051D  2D1F               	goto	u264lld
  8995  051E  0AB7               	incf	___aodiv@divisor+7,f
  8996  051F                     u264lld:	
  8997  051F  0020               	movlb	0	; select bank0
  8998  0520  01C1               	clrf	___aodiv@sign
  8999  0521  0AC1               	incf	___aodiv@sign,f
  9000  0522                     l3000:	
  9001  0522  3038               	movlw	low ___aodiv@dividend
  9002  0523  0086               	movwf	6
  9003  0524  3000               	movlw	high ___aodiv@dividend
  9004  0525  0087               	movwf	7
  9005  0526  3F47               	moviw [7]fsr1
  9006  0527  00F9               	movwf	??___aodiv
  9007  0528  1FF9               	btfss	??___aodiv,7
  9008  0529  2D4E               	goto	l3006
  9009  052A  0020               	movlb	0	; select bank0
  9010  052B  09B8               	comf	___aodiv@dividend,f
  9011  052C  09B9               	comf	___aodiv@dividend+1,f
  9012  052D  09BA               	comf	___aodiv@dividend+2,f
  9013  052E  09BB               	comf	___aodiv@dividend+3,f
  9014  052F  09BC               	comf	___aodiv@dividend+4,f
  9015  0530  09BD               	comf	___aodiv@dividend+5,f
  9016  0531  09BE               	comf	___aodiv@dividend+6,f
  9017  0532  09BF               	comf	___aodiv@dividend+7,f
  9018  0533  0AB8               	incf	___aodiv@dividend,f
  9019  0534  1D03               	skipz
  9020  0535  2D49               	goto	l3004
  9021  0536  0AB9               	incf	___aodiv@dividend+1,f
  9022  0537  1D03               	skipz
  9023  0538  2D49               	goto	l3004
  9024  0539  0ABA               	incf	___aodiv@dividend+2,f
  9025  053A  1D03               	skipz
  9026  053B  2D49               	goto	l3004
  9027  053C  0ABB               	incf	___aodiv@dividend+3,f
  9028  053D  1D03               	skipz
  9029  053E  2D49               	goto	l3004
  9030  053F  0ABC               	incf	___aodiv@dividend+4,f
  9031  0540  1D03               	skipz
  9032  0541  2D49               	goto	l3004
  9033  0542  0ABD               	incf	___aodiv@dividend+5,f
  9034  0543  1D03               	skipz
  9035  0544  2D49               	goto	l3004
  9036  0545  0ABE               	incf	___aodiv@dividend+6,f
  9037  0546  1D03               	skipz
  9038  0547  2D49               	goto	l3004
  9039  0548  0ABF               	incf	___aodiv@dividend+7,f
  9040  0549                     l3004:	
  9041  0549  3001               	movlw	1
  9042  054A  00F9               	movwf	??___aodiv
  9043  054B  0879               	movf	??___aodiv,w
  9044  054C  0020               	movlb	0	; select bank0
  9045  054D  06C1               	xorwf	___aodiv@sign,f
  9046  054E                     l3006:	
  9047  054E  3042               	movlw	low ___aodiv@quotient
  9048  054F  0086               	movwf	6
  9049  0550  3000               	movlw	high ___aodiv@quotient
  9050  0551  0087               	movwf	7
  9051  0552  3008               	movlw	8
  9052  0553  00F9               	movwf	??___aodiv
  9053  0554  3000               	movlw	0
  9054  0555                     u2670:	
  9055  0555  001E               	movwi fsr1++
  9056  0556  0BF9               	decfsz	??___aodiv,f
  9057  0557  2D55               	goto	u2670
  9058  0558  0020               	movlb	0	; select bank0
  9059  0559  0830               	movf	___aodiv@divisor,w
  9060  055A  0431               	iorwf	___aodiv@divisor+1,w
  9061  055B  0432               	iorwf	___aodiv@divisor+2,w
  9062  055C  0433               	iorwf	___aodiv@divisor+3,w
  9063  055D  0434               	iorwf	___aodiv@divisor+4,w
  9064  055E  0435               	iorwf	___aodiv@divisor+5,w
  9065  055F  0436               	iorwf	___aodiv@divisor+6,w
  9066  0560  0437               	iorwf	___aodiv@divisor+7,w
  9067  0561  1903               	skipnz
  9068  0562  2DB9               	goto	l3028
  9069  0563  01C0               	clrf	___aodiv@counter
  9070  0564  0AC0               	incf	___aodiv@counter,f
  9071  0565                     l3016:	
  9072  0565  1BB7               	btfsc	___aodiv@divisor+7,7
  9073  0566  2D74               	goto	l3018
  9074  0567  35B0               	lslf	___aodiv@divisor,f
  9075  0568  0DB1               	rlf	___aodiv@divisor+1,f
  9076  0569  0DB2               	rlf	___aodiv@divisor+2,f
  9077  056A  0DB3               	rlf	___aodiv@divisor+3,f
  9078  056B  0DB4               	rlf	___aodiv@divisor+4,f
  9079  056C  0DB5               	rlf	___aodiv@divisor+5,f
  9080  056D  0DB6               	rlf	___aodiv@divisor+6,f
  9081  056E  0DB7               	rlf	___aodiv@divisor+7,f
  9082  056F  3001               	movlw	1
  9083  0570  00F9               	movwf	??___aodiv
  9084  0571  0879               	movf	??___aodiv,w
  9085  0572  07C0               	addwf	___aodiv@counter,f
  9086  0573  2D65               	goto	l3016
  9087  0574                     l3018:	
  9088  0574  35C2               	lslf	___aodiv@quotient,f
  9089  0575  0DC3               	rlf	___aodiv@quotient+1,f
  9090  0576  0DC4               	rlf	___aodiv@quotient+2,f
  9091  0577  0DC5               	rlf	___aodiv@quotient+3,f
  9092  0578  0DC6               	rlf	___aodiv@quotient+4,f
  9093  0579  0DC7               	rlf	___aodiv@quotient+5,f
  9094  057A  0DC8               	rlf	___aodiv@quotient+6,f
  9095  057B  0DC9               	rlf	___aodiv@quotient+7,f
  9096  057C  0837               	movf	___aodiv@divisor+7,w
  9097  057D  023F               	subwf	___aodiv@dividend+7,w
  9098  057E  1D03               	skipz
  9099  057F  2D9A               	goto	u2705
  9100  0580  0836               	movf	___aodiv@divisor+6,w
  9101  0581  023E               	subwf	___aodiv@dividend+6,w
  9102  0582  1D03               	skipz
  9103  0583  2D9A               	goto	u2705
  9104  0584  0835               	movf	___aodiv@divisor+5,w
  9105  0585  023D               	subwf	___aodiv@dividend+5,w
  9106  0586  1D03               	skipz
  9107  0587  2D9A               	goto	u2705
  9108  0588  0834               	movf	___aodiv@divisor+4,w
  9109  0589  023C               	subwf	___aodiv@dividend+4,w
  9110  058A  1D03               	skipz
  9111  058B  2D9A               	goto	u2705
  9112  058C  0833               	movf	___aodiv@divisor+3,w
  9113  058D  023B               	subwf	___aodiv@dividend+3,w
  9114  058E  1D03               	skipz
  9115  058F  2D9A               	goto	u2705
  9116  0590  0832               	movf	___aodiv@divisor+2,w
  9117  0591  023A               	subwf	___aodiv@dividend+2,w
  9118  0592  1D03               	skipz
  9119  0593  2D9A               	goto	u2705
  9120  0594  0831               	movf	___aodiv@divisor+1,w
  9121  0595  0239               	subwf	___aodiv@dividend+1,w
  9122  0596  1D03               	skipz
  9123  0597  2D9A               	goto	u2705
  9124  0598  0830               	movf	___aodiv@divisor,w
  9125  0599  0238               	subwf	___aodiv@dividend,w
  9126  059A                     u2705:	
  9127  059A  1C03               	skipc
  9128  059B  2DAD               	goto	l3026
  9129  059C  0830               	movf	___aodiv@divisor,w
  9130  059D  02B8               	subwf	___aodiv@dividend,f
  9131  059E  0831               	movf	___aodiv@divisor+1,w
  9132  059F  3BB9               	subwfb	___aodiv@dividend+1,f
  9133  05A0  0832               	movf	___aodiv@divisor+2,w
  9134  05A1  3BBA               	subwfb	___aodiv@dividend+2,f
  9135  05A2  0833               	movf	___aodiv@divisor+3,w
  9136  05A3  3BBB               	subwfb	___aodiv@dividend+3,f
  9137  05A4  0834               	movf	___aodiv@divisor+4,w
  9138  05A5  3BBC               	subwfb	___aodiv@dividend+4,f
  9139  05A6  0835               	movf	___aodiv@divisor+5,w
  9140  05A7  3BBD               	subwfb	___aodiv@dividend+5,f
  9141  05A8  0836               	movf	___aodiv@divisor+6,w
  9142  05A9  3BBE               	subwfb	___aodiv@dividend+6,f
  9143  05AA  0837               	movf	___aodiv@divisor+7,w
  9144  05AB  3BBF               	subwfb	___aodiv@dividend+7,f
  9145  05AC  1442               	bsf	___aodiv@quotient,0
  9146  05AD                     l3026:	
  9147  05AD  36B7               	lsrf	___aodiv@divisor+7,f
  9148  05AE  0CB6               	rrf	___aodiv@divisor+6,f
  9149  05AF  0CB5               	rrf	___aodiv@divisor+5,f
  9150  05B0  0CB4               	rrf	___aodiv@divisor+4,f
  9151  05B1  0CB3               	rrf	___aodiv@divisor+3,f
  9152  05B2  0CB2               	rrf	___aodiv@divisor+2,f
  9153  05B3  0CB1               	rrf	___aodiv@divisor+1,f
  9154  05B4  0CB0               	rrf	___aodiv@divisor,f
  9155  05B5  3001               	movlw	1
  9156  05B6  02C0               	subwf	___aodiv@counter,f
  9157  05B7  1D03               	btfss	3,2
  9158  05B8  2D74               	goto	l3018
  9159  05B9                     l3028:	
  9160  05B9  0841               	movf	___aodiv@sign,w
  9161  05BA  1903               	btfsc	3,2
  9162  05BB  2DDA               	goto	l998
  9163  05BC  09C2               	comf	___aodiv@quotient,f
  9164  05BD  09C3               	comf	___aodiv@quotient+1,f
  9165  05BE  09C4               	comf	___aodiv@quotient+2,f
  9166  05BF  09C5               	comf	___aodiv@quotient+3,f
  9167  05C0  09C6               	comf	___aodiv@quotient+4,f
  9168  05C1  09C7               	comf	___aodiv@quotient+5,f
  9169  05C2  09C8               	comf	___aodiv@quotient+6,f
  9170  05C3  09C9               	comf	___aodiv@quotient+7,f
  9171  05C4  0AC2               	incf	___aodiv@quotient,f
  9172  05C5  1D03               	skipz
  9173  05C6  2DDA               	goto	l998
  9174  05C7  0AC3               	incf	___aodiv@quotient+1,f
  9175  05C8  1D03               	skipz
  9176  05C9  2DDA               	goto	l998
  9177  05CA  0AC4               	incf	___aodiv@quotient+2,f
  9178  05CB  1D03               	skipz
  9179  05CC  2DDA               	goto	l998
  9180  05CD  0AC5               	incf	___aodiv@quotient+3,f
  9181  05CE  1D03               	skipz
  9182  05CF  2DDA               	goto	l998
  9183  05D0  0AC6               	incf	___aodiv@quotient+4,f
  9184  05D1  1D03               	skipz
  9185  05D2  2DDA               	goto	l998
  9186  05D3  0AC7               	incf	___aodiv@quotient+5,f
  9187  05D4  1D03               	skipz
  9188  05D5  2DDA               	goto	l998
  9189  05D6  0AC8               	incf	___aodiv@quotient+6,f
  9190  05D7  1D03               	skipz
  9191  05D8  2DDA               	goto	l998
  9192  05D9  0AC9               	incf	___aodiv@quotient+7,f
  9193  05DA                     l998:	
  9194  05DA  0020               	movlb	0	; select bank0
  9195  05DB  0842               	movf	___aodiv@quotient,w
  9196  05DC  00B0               	movwf	?___aodiv
  9197  05DD  0843               	movf	___aodiv@quotient+1,w
  9198  05DE  00B1               	movwf	?___aodiv+1
  9199  05DF  0844               	movf	___aodiv@quotient+2,w
  9200  05E0  00B2               	movwf	?___aodiv+2
  9201  05E1  0845               	movf	___aodiv@quotient+3,w
  9202  05E2  00B3               	movwf	?___aodiv+3
  9203  05E3  0846               	movf	___aodiv@quotient+4,w
  9204  05E4  00B4               	movwf	?___aodiv+4
  9205  05E5  0847               	movf	___aodiv@quotient+5,w
  9206  05E6  00B5               	movwf	?___aodiv+5
  9207  05E7  0848               	movf	___aodiv@quotient+6,w
  9208  05E8  00B6               	movwf	?___aodiv+6
  9209  05E9  0849               	movf	___aodiv@quotient+7,w
  9210  05EA  00B7               	movwf	?___aodiv+7
  9211  05EB  0008               	return
  9212  05EC                     __end_of___aodiv:	
  9213                           
  9214                           	psect	text12
  9215  148B                     __ptext12:	
  9216 ;; *************** function _UIntToHexString *****************
  9217 ;; Defined at:
  9218 ;;		line 106 in file "main.c"
  9219 ;; Parameters:    Size  Location     Type
  9220 ;;  n               4   13[BANK0 ] unsigned long 
  9221 ;;  dest            1   17[BANK0 ] PTR unsigned char 
  9222 ;;		 -> checksum(6), 
  9223 ;; Auto vars:     Size  Location     Type
  9224 ;;  remainder       4   24[BANK0 ] unsigned long 
  9225 ;;  i               4   28[BANK0 ] unsigned long 
  9226 ;; Return value:  Size  Location     Type
  9227 ;;                  1    wreg      void 
  9228 ;; Registers used:
  9229 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9230 ;; Tracked objects:
  9231 ;;		On entry : 1F/0
  9232 ;;		On exit  : 1F/0
  9233 ;;		Unchanged: 0/0
  9234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9235 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9236 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9237 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9238 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9239 ;;Total ram usage:       19 bytes
  9240 ;; Hardware stack levels used:    1
  9241 ;; Hardware stack levels required when called:    5
  9242 ;; This function calls:
  9243 ;;		_ReverseString
  9244 ;; This function is called by:
  9245 ;;		_main
  9246 ;; This function uses a non-reentrant model
  9247 ;;
  9248                           
  9249                           
  9250                           ;psect for function _UIntToHexString
  9251  148B                     _UIntToHexString:	
  9252                           
  9253                           ;main.c: 106: void UIntToHexString(uint32_t n, char* dest);main.c: 107: {;main.c: 108:  
      +                             uint32_t i = 0;
  9254                           
  9255                           ;incstack = 0
  9256                           ; Regs used in _UIntToHexString: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9257  148B  3000               	movlw	0
  9258  148C  00BF               	movwf	UIntToHexString@i+3
  9259  148D  3000               	movlw	0
  9260  148E  00BE               	movwf	UIntToHexString@i+2
  9261  148F  3000               	movlw	0
  9262  1490  00BD               	movwf	UIntToHexString@i+1
  9263  1491  3000               	movlw	0
  9264  1492  00BC               	movwf	UIntToHexString@i
  9265  1493                     l470:	
  9266                           ;main.c: 109:     do {
  9267                           
  9268                           
  9269                           ;main.c: 112:         uint32_t remainder = n % 16;
  9270  1493  300F               	movlw	15
  9271  1494  052D               	andwf	UIntToHexString@n,w
  9272  1495  00B8               	movwf	UIntToHexString@remainder
  9273  1496  3000               	movlw	0
  9274  1497  052E               	andwf	UIntToHexString@n+1,w
  9275  1498  00B9               	movwf	UIntToHexString@remainder+1
  9276  1499  3000               	movlw	0
  9277  149A  052F               	andwf	UIntToHexString@n+2,w
  9278  149B  00BA               	movwf	UIntToHexString@remainder+2
  9279  149C  3000               	movlw	0
  9280  149D  0530               	andwf	UIntToHexString@n+3,w
  9281  149E  00BB               	movwf	UIntToHexString@remainder+3
  9282                           
  9283                           ;main.c: 114:         dest[i++] = remainder + (remainder >= 10 ? 55 : '0');
  9284  149F  083B               	movf	UIntToHexString@remainder+3,w
  9285  14A0  1D03               	btfss	3,2
  9286  14A1  2CB4               	goto	l4470
  9287  14A2  083A               	movf	UIntToHexString@remainder+2,w
  9288  14A3  1D03               	btfss	3,2
  9289  14A4  2CB4               	goto	l4470
  9290  14A5  0839               	movf	UIntToHexString@remainder+1,w
  9291  14A6  1D03               	btfss	3,2
  9292  14A7  2CB4               	goto	l4470
  9293  14A8  300A               	movlw	10
  9294  14A9  0238               	subwf	UIntToHexString@remainder,w
  9295  14AA  1803               	btfsc	3,0
  9296  14AB  2CB4               	goto	l4470
  9297  14AC  3000               	movlw	0
  9298  14AD  00B7               	movwf	_UIntToHexString$1405+3
  9299  14AE  3000               	movlw	0
  9300  14AF  00B6               	movwf	_UIntToHexString$1405+2
  9301  14B0  3000               	movlw	0
  9302  14B1  00B5               	movwf	_UIntToHexString$1405+1
  9303  14B2  3030               	movlw	48
  9304  14B3  2CBB               	goto	L4
  9305  14B4                     l4470:	
  9306  14B4  3000               	movlw	0
  9307  14B5  00B7               	movwf	_UIntToHexString$1405+3
  9308  14B6  3000               	movlw	0
  9309  14B7  00B6               	movwf	_UIntToHexString$1405+2
  9310  14B8  3000               	movlw	0
  9311  14B9  00B5               	movwf	_UIntToHexString$1405+1
  9312  14BA  3037               	movlw	55
  9313  14BB                     L4:	
  9314  14BB  00B4               	movwf	_UIntToHexString$1405
  9315  14BC  0834               	movf	_UIntToHexString$1405,w
  9316  14BD  0738               	addwf	UIntToHexString@remainder,w
  9317  14BE  00B2               	movwf	??_UIntToHexString
  9318  14BF  083C               	movf	UIntToHexString@i,w
  9319  14C0  0731               	addwf	UIntToHexString@dest,w
  9320  14C1  00B3               	movwf	??_UIntToHexString+1
  9321  14C2  0833               	movf	??_UIntToHexString+1,w
  9322  14C3  0086               	movwf	6
  9323  14C4  3001               	movlw	1	; select bank2/3
  9324  14C5  0087               	movwf	7
  9325  14C6  0832               	movf	??_UIntToHexString,w
  9326  14C7  0081               	movwf	1
  9327  14C8  3001               	movlw	1
  9328  14C9  07BC               	addwf	UIntToHexString@i,f
  9329  14CA  3000               	movlw	0
  9330  14CB  3DBD               	addwfc	UIntToHexString@i+1,f
  9331  14CC  3000               	movlw	0
  9332  14CD  3DBE               	addwfc	UIntToHexString@i+2,f
  9333  14CE  3000               	movlw	0
  9334  14CF  3DBF               	addwfc	UIntToHexString@i+3,f
  9335                           
  9336                           ;main.c: 116:     } while ((n /= 16) > 0);
  9337  14D0  3004               	movlw	4
  9338  14D1                     u4935:	
  9339  14D1  36B0               	lsrf	UIntToHexString@n+3,f
  9340  14D2  0CAF               	rrf	UIntToHexString@n+2,f
  9341  14D3  0CAE               	rrf	UIntToHexString@n+1,f
  9342  14D4  0CAD               	rrf	UIntToHexString@n,f
  9343  14D5  0B89               	decfsz	9,f
  9344  14D6  2CD1               	goto	u4935
  9345  14D7  0830               	movf	UIntToHexString@n+3,w
  9346  14D8  042F               	iorwf	UIntToHexString@n+2,w
  9347  14D9  042E               	iorwf	UIntToHexString@n+1,w
  9348  14DA  042D               	iorwf	UIntToHexString@n,w
  9349  14DB  1903               	btfsc	3,2
  9350  14DC  2CF1               	goto	l4482
  9351  14DD  2C93               	goto	l470
  9352  14DE                     l4478:	
  9353                           
  9354                           ;main.c: 118:     {;main.c: 119:         dest[i] = '0';
  9355  14DE  3030               	movlw	48
  9356  14DF  00B2               	movwf	??_UIntToHexString
  9357  14E0  083C               	movf	UIntToHexString@i,w
  9358  14E1  0731               	addwf	UIntToHexString@dest,w
  9359  14E2  00B3               	movwf	??_UIntToHexString+1
  9360  14E3  0833               	movf	??_UIntToHexString+1,w
  9361  14E4  0086               	movwf	6
  9362  14E5  3001               	movlw	1	; select bank2/3
  9363  14E6  0087               	movwf	7
  9364  14E7  0832               	movf	??_UIntToHexString,w
  9365  14E8  0081               	movwf	1
  9366                           
  9367                           ;main.c: 120:         i++;
  9368  14E9  3001               	movlw	1
  9369  14EA  07BC               	addwf	UIntToHexString@i,f
  9370  14EB  3000               	movlw	0
  9371  14EC  3DBD               	addwfc	UIntToHexString@i+1,f
  9372  14ED  3000               	movlw	0
  9373  14EE  3DBE               	addwfc	UIntToHexString@i+2,f
  9374  14EF  3000               	movlw	0
  9375  14F0  3DBF               	addwfc	UIntToHexString@i+3,f
  9376  14F1                     l4482:	
  9377                           
  9378                           ;main.c: 117:     while (i < 4)
  9379  14F1  083F               	movf	UIntToHexString@i+3,w
  9380  14F2  1D03               	btfss	3,2
  9381  14F3  2CFE               	goto	l4484
  9382  14F4  083E               	movf	UIntToHexString@i+2,w
  9383  14F5  1D03               	btfss	3,2
  9384  14F6  2CFE               	goto	l4484
  9385  14F7  083D               	movf	UIntToHexString@i+1,w
  9386  14F8  1D03               	btfss	3,2
  9387  14F9  2CFE               	goto	l4484
  9388  14FA  3004               	movlw	4
  9389  14FB  023C               	subwf	UIntToHexString@i,w
  9390  14FC  1C03               	btfss	3,0
  9391  14FD  2CDE               	goto	l4478
  9392  14FE                     l4484:	
  9393                           
  9394                           ;main.c: 122:     ReverseString(dest);
  9395  14FE  0831               	movf	UIntToHexString@dest,w
  9396  14FF  00F9               	movwf	ReverseString@str
  9397  1500  3001               	movlw	1
  9398  1501  00FA               	movwf	ReverseString@str+1
  9399  1502  3192  2262         	fcall	_ReverseString
  9400  1504  0008               	return
  9401  1505                     __end_of_UIntToHexString:	
  9402                           
  9403                           	psect	text13
  9404  1AE3                     __ptext13:	
  9405 ;; *************** function _TransmitString *****************
  9406 ;; Defined at:
  9407 ;;		line 73 in file "rtty.c"
  9408 ;; Parameters:    Size  Location     Type
  9409 ;;  message         1    wreg     PTR unsigned char 
  9410 ;;		 -> message_end(73), message_start(70), 
  9411 ;; Auto vars:     Size  Location     Type
  9412 ;;  message         1   11[COMMON] PTR unsigned char 
  9413 ;;		 -> message_end(73), message_start(70), 
  9414 ;;  i               2    9[COMMON] int 
  9415 ;;  counti          2    7[COMMON] int 
  9416 ;; Return value:  Size  Location     Type
  9417 ;;                  1    wreg      void 
  9418 ;; Registers used:
  9419 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9420 ;; Tracked objects:
  9421 ;;		On entry : 1F/2
  9422 ;;		On exit  : 0/0
  9423 ;;		Unchanged: 0/0
  9424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9426 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9427 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9428 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9429 ;;Total ram usage:        6 bytes
  9430 ;; Hardware stack levels used:    1
  9431 ;; Hardware stack levels required when called:    5
  9432 ;; This function calls:
  9433 ;;		_TransmitByte
  9434 ;;		_strlen
  9435 ;; This function is called by:
  9436 ;;		_main
  9437 ;; This function uses a non-reentrant model
  9438 ;;
  9439                           
  9440                           
  9441                           ;psect for function _TransmitString
  9442  1AE3                     _TransmitString:	
  9443                           
  9444                           ;incstack = 0
  9445                           ; Regs used in _TransmitString: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9446                           ;TransmitString@message stored from wreg
  9447  1AE3  00FB               	movwf	TransmitString@message
  9448                           
  9449                           ;rtty.c: 73: void TransmitString(char* message);rtty.c: 74: {;rtty.c: 78:  for (int i = 
      +                          0, counti = strlen(message); i < counti; i++)
  9450  1AE4  01F9               	clrf	TransmitString@i
  9451  1AE5  01FA               	clrf	TransmitString@i+1
  9452  1AE6  087B               	movf	TransmitString@message,w
  9453  1AE7  00F0               	movwf	strlen@s
  9454  1AE8  3003               	movlw	3
  9455  1AE9  00F1               	movwf	strlen@s+1
  9456  1AEA  3199  21A2  319A   	fcall	_strlen
  9457  1AED  0871               	movf	?_strlen+1,w
  9458  1AEE  00F8               	movwf	TransmitString@counti+1
  9459  1AEF  0870               	movf	?_strlen,w
  9460  1AF0  00F7               	movwf	TransmitString@counti
  9461  1AF1                     l3714:	
  9462  1AF1  087A               	movf	TransmitString@i+1,w
  9463  1AF2  3A80               	xorlw	128
  9464  1AF3  00F6               	movwf	??_TransmitString
  9465  1AF4  0878               	movf	TransmitString@counti+1,w
  9466  1AF5  3A80               	xorlw	128
  9467  1AF6  0276               	subwf	??_TransmitString,w
  9468  1AF7  1D03               	skipz
  9469  1AF8  2AFB               	goto	u3785
  9470  1AF9  0877               	movf	TransmitString@counti,w
  9471  1AFA  0279               	subwf	TransmitString@i,w
  9472  1AFB                     u3785:	
  9473  1AFB  1803               	btfsc	3,0
  9474  1AFC  0008               	return
  9475                           
  9476                           ;rtty.c: 79:  {;rtty.c: 80:   TransmitByte(message[i]);
  9477  1AFD  0879               	movf	TransmitString@i,w
  9478  1AFE  077B               	addwf	TransmitString@message,w
  9479  1AFF  00F6               	movwf	??_TransmitString
  9480  1B00  0876               	movf	??_TransmitString,w
  9481  1B01  0086               	movwf	6
  9482  1B02  3003               	movlw	3	; select bank6/7
  9483  1B03  0087               	movwf	7
  9484  1B04  0801               	movf	1,w
  9485  1B05  319B  23E7  319A   	fcall	_TransmitByte
  9486                           
  9487                           ;rtty.c: 81:  }
  9488  1B08  3001               	movlw	1
  9489  1B09  07F9               	addwf	TransmitString@i,f
  9490  1B0A  3000               	movlw	0
  9491  1B0B  3DFA               	addwfc	TransmitString@i+1,f
  9492  1B0C  2AF1               	goto	l3714
  9493  1B0D                     __end_of_TransmitString:	
  9494                           
  9495                           	psect	text14
  9496  1BE7                     __ptext14:	
  9497 ;; *************** function _TransmitByte *****************
  9498 ;; Defined at:
  9499 ;;		line 51 in file "rtty.c"
  9500 ;; Parameters:    Size  Location     Type
  9501 ;;  byte            1    wreg     unsigned char 
  9502 ;; Auto vars:     Size  Location     Type
  9503 ;;  byte            1    3[COMMON] unsigned char 
  9504 ;;  i               2    4[COMMON] int 
  9505 ;; Return value:  Size  Location     Type
  9506 ;;                  1    wreg      void 
  9507 ;; Registers used:
  9508 ;;		wreg, status,2, status,0, pclath, cstack
  9509 ;; Tracked objects:
  9510 ;;		On entry : 0/2
  9511 ;;		On exit  : 0/0
  9512 ;;		Unchanged: 0/0
  9513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9515 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9516 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9517 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9518 ;;Total ram usage:        4 bytes
  9519 ;; Hardware stack levels used:    1
  9520 ;; Hardware stack levels required when called:    4
  9521 ;; This function calls:
  9522 ;;		_TransmitBit
  9523 ;; This function is called by:
  9524 ;;		_TransmitString
  9525 ;; This function uses a non-reentrant model
  9526 ;;
  9527                           
  9528                           
  9529                           ;psect for function _TransmitByte
  9530  1BE7                     _TransmitByte:	
  9531                           
  9532                           ;incstack = 0
  9533                           ; Regs used in _TransmitByte: [wreg+status,2+status,0+pclath+cstack]
  9534                           ;TransmitByte@byte stored from wreg
  9535  1BE7  00F3               	movwf	TransmitByte@byte
  9536                           
  9537                           ;rtty.c: 51: void TransmitByte(char byte);rtty.c: 52: {;rtty.c: 62:     TransmitBit(0);
  9538  1BE8  3000               	movlw	0
  9539  1BE9  3199  21B9  319B   	fcall	_TransmitBit
  9540                           
  9541                           ;rtty.c: 64:  for (int i = 0; i < 7; i++)
  9542  1BEC  01F4               	clrf	TransmitByte@i
  9543  1BED  01F5               	clrf	TransmitByte@i+1
  9544  1BEE                     l3498:	
  9545                           
  9546                           ;rtty.c: 65:  {;rtty.c: 66:   TransmitBit((byte >> i) & 1);
  9547  1BEE  0873               	movf	TransmitByte@byte,w
  9548  1BEF  00F2               	movwf	??_TransmitByte
  9549  1BF0  0A74               	incf	TransmitByte@i,w
  9550  1BF1  2BF3               	goto	u3444
  9551  1BF2                     u3445:	
  9552  1BF2  36F2               	lsrf	??_TransmitByte,f
  9553  1BF3                     u3444:	
  9554  1BF3  0B89               	decfsz	9,f
  9555  1BF4  2BF2               	goto	u3445
  9556  1BF5  1C72               	btfss	??_TransmitByte,0
  9557  1BF6  2BF9               	goto	u3450
  9558  1BF7  3001               	movlw	1
  9559  1BF8  2BFA               	goto	u3460
  9560  1BF9                     u3450:	
  9561  1BF9  3000               	movlw	0
  9562  1BFA                     u3460:	
  9563  1BFA  3199  21B9  319B   	fcall	_TransmitBit
  9564                           
  9565                           ;rtty.c: 67:  }
  9566  1BFD  3001               	movlw	1
  9567  1BFE  07F4               	addwf	TransmitByte@i,f
  9568  1BFF  3000               	movlw	0
  9569  1C00  3DF5               	addwfc	TransmitByte@i+1,f
  9570  1C01  0875               	movf	TransmitByte@i+1,w
  9571  1C02  3A80               	xorlw	128
  9572  1C03  00F2               	movwf	??_TransmitByte
  9573  1C04  3080               	movlw	128
  9574  1C05  0272               	subwf	??_TransmitByte,w
  9575  1C06  1D03               	skipz
  9576  1C07  2C0A               	goto	u3475
  9577  1C08  3007               	movlw	7
  9578  1C09  0274               	subwf	TransmitByte@i,w
  9579  1C0A                     u3475:	
  9580  1C0A  1C03               	skipc
  9581  1C0B  2BEE               	goto	l3498
  9582                           
  9583                           ;rtty.c: 69:  TransmitBit(1);
  9584  1C0C  3001               	movlw	1
  9585  1C0D  3199  21B9  319B   	fcall	_TransmitBit
  9586                           
  9587                           ;rtty.c: 70:  TransmitBit(1);
  9588  1C10  3001               	movlw	1
  9589  1C11  3199  21B9         	fcall	_TransmitBit
  9590  1C13  0008               	return
  9591  1C14                     __end_of_TransmitByte:	
  9592                           
  9593                           	psect	text15
  9594  19B9                     __ptext15:	
  9595 ;; *************** function _TransmitBit *****************
  9596 ;; Defined at:
  9597 ;;		line 31 in file "rtty.c"
  9598 ;; Parameters:    Size  Location     Type
  9599 ;;  b               1    wreg     _Bool 
  9600 ;; Auto vars:     Size  Location     Type
  9601 ;;  b               1    1[COMMON] _Bool 
  9602 ;; Return value:  Size  Location     Type
  9603 ;;                  1    wreg      void 
  9604 ;; Registers used:
  9605 ;;		wreg, status,2, status,0
  9606 ;; Tracked objects:
  9607 ;;		On entry : 0/2
  9608 ;;		On exit  : 0/0
  9609 ;;		Unchanged: 0/0
  9610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9612 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9613 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9614 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9615 ;;Total ram usage:        2 bytes
  9616 ;; Hardware stack levels used:    1
  9617 ;; Hardware stack levels required when called:    3
  9618 ;; This function calls:
  9619 ;;		Nothing
  9620 ;; This function is called by:
  9621 ;;		_TransmitByte
  9622 ;; This function uses a non-reentrant model
  9623 ;;
  9624                           
  9625                           
  9626                           ;psect for function _TransmitBit
  9627  19B9                     _TransmitBit:	
  9628                           
  9629                           ;incstack = 0
  9630                           ; Regs used in _TransmitBit: [wreg+status,2+status,0]
  9631                           ;TransmitBit@b stored from wreg
  9632  19B9  00F1               	movwf	TransmitBit@b
  9633                           
  9634                           ;rtty.c: 31: void TransmitBit(_Bool b);rtty.c: 32: {;rtty.c: 33:  if (b)
  9635  19BA  0871               	movf	TransmitBit@b,w
  9636  19BB  1903               	btfsc	3,2
  9637  19BC  29C0               	goto	l803
  9638                           
  9639                           ;rtty.c: 34:  {;rtty.c: 35:   do { LATAbits.LATA4 = 1; } while(0);
  9640  19BD  0022               	movlb	2	; select bank2
  9641  19BE  160C               	bsf	12,4	;volatile
  9642  19BF  29C2               	goto	l3196
  9643  19C0                     l803:	
  9644                           ;rtty.c: 38:  {;rtty.c: 39:   do { LATAbits.LATA4 = 0; } while(0);
  9645                           
  9646  19C0  0022               	movlb	2	; select bank2
  9647  19C1  120C               	bcf	12,4	;volatile
  9648  19C2                     l3196:	
  9649                           
  9650                           ;rtty.c: 46:  _delay((unsigned long)((((1000 / 50) / 2) * 1000)*(4000000/4000000.0)));
  9651  19C2  300D               	movlw	13
  9652  19C3  00F0               	movwf	??_TransmitBit
  9653  19C4  30FC               	movlw	252
  9654  19C5                     u5067:	
  9655  19C5  0B89               	decfsz	9,f
  9656  19C6  29C5               	goto	u5067
  9657  19C7  0BF0               	decfsz	??_TransmitBit,f
  9658  19C8  29C5               	goto	u5067
  9659                           
  9660                           ;rtty.c: 47:  _delay((unsigned long)((((1000 / 50) / 2) * 1000)*(4000000/4000000.0)));
  9661  19C9  300D               	movlw	13
  9662  19CA  00F0               	movwf	??_TransmitBit
  9663  19CB  30FC               	movlw	252
  9664  19CC                     u5077:	
  9665  19CC  0B89               	decfsz	9,f
  9666  19CD  29CC               	goto	u5077
  9667  19CE  0BF0               	decfsz	??_TransmitBit,f
  9668  19CF  29CC               	goto	u5077
  9669  19D0  0008               	return
  9670  19D1                     __end_of_TransmitBit:	
  9671                           
  9672                           	psect	text16
  9673  195C                     __ptext16:	
  9674 ;; *************** function _SYSTEM_Initialize *****************
  9675 ;; Defined at:
  9676 ;;		line 50 in file "mcc_generated_files/mcc.c"
  9677 ;; Parameters:    Size  Location     Type
  9678 ;;		None
  9679 ;; Auto vars:     Size  Location     Type
  9680 ;;		None
  9681 ;; Return value:  Size  Location     Type
  9682 ;;                  1    wreg      void 
  9683 ;; Registers used:
  9684 ;;		wreg, status,2, status,0, pclath, cstack
  9685 ;; Tracked objects:
  9686 ;;		On entry : B1F/0
  9687 ;;		On exit  : 1F/3
  9688 ;;		Unchanged: 0/0
  9689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9693 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9694 ;;Total ram usage:        0 bytes
  9695 ;; Hardware stack levels used:    1
  9696 ;; Hardware stack levels required when called:    5
  9697 ;; This function calls:
  9698 ;;		_EUSART_Initialize
  9699 ;;		_OSCILLATOR_Initialize
  9700 ;;		_PIN_MANAGER_Initialize
  9701 ;;		_TMR0_Initialize
  9702 ;; This function is called by:
  9703 ;;		_main
  9704 ;; This function uses a non-reentrant model
  9705 ;;
  9706                           
  9707                           
  9708                           ;psect for function _SYSTEM_Initialize
  9709  195C                     _SYSTEM_Initialize:	
  9710                           
  9711                           ;mcc_generated_files/mcc.c: 52:     PIN_MANAGER_Initialize();
  9712                           
  9713                           ;incstack = 0
  9714                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9715  195C  319A  22B9  3199   	fcall	_PIN_MANAGER_Initialize
  9716                           
  9717                           ;mcc_generated_files/mcc.c: 53:     OSCILLATOR_Initialize();
  9718  195F  3199  212D  3199   	fcall	_OSCILLATOR_Initialize
  9719                           
  9720                           ;mcc_generated_files/mcc.c: 54:     TMR0_Initialize();
  9721  1962  3199  218C  3199   	fcall	_TMR0_Initialize
  9722                           
  9723                           ;mcc_generated_files/mcc.c: 55:     EUSART_Initialize();
  9724  1965  3199  2151         	fcall	_EUSART_Initialize
  9725  1967  0008               	return
  9726  1968                     __end_of_SYSTEM_Initialize:	
  9727                           
  9728                           	psect	text17
  9729  198C                     __ptext17:	
  9730 ;; *************** function _TMR0_Initialize *****************
  9731 ;; Defined at:
  9732 ;;		line 64 in file "mcc_generated_files/tmr0.c"
  9733 ;; Parameters:    Size  Location     Type
  9734 ;;		None
  9735 ;; Auto vars:     Size  Location     Type
  9736 ;;		None
  9737 ;; Return value:  Size  Location     Type
  9738 ;;                  1    wreg      void 
  9739 ;; Registers used:
  9740 ;;		wreg, status,2, status,0, pclath, cstack
  9741 ;; Tracked objects:
  9742 ;;		On entry : B1F/2
  9743 ;;		On exit  : 1F/2
  9744 ;;		Unchanged: 0/0
  9745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9746 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9747 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9748 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9749 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9750 ;;Total ram usage:        1 bytes
  9751 ;; Hardware stack levels used:    1
  9752 ;; Hardware stack levels required when called:    4
  9753 ;; This function calls:
  9754 ;;		_TMR0_SetInterruptHandler
  9755 ;; This function is called by:
  9756 ;;		_SYSTEM_Initialize
  9757 ;; This function uses a non-reentrant model
  9758 ;;
  9759                           
  9760                           
  9761                           ;psect for function _TMR0_Initialize
  9762  198C                     _TMR0_Initialize:	
  9763                           
  9764                           ;mcc_generated_files/tmr0.c: 69:     OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | (0xD2 
      +                          & 0x3F));
  9765                           
  9766                           ;incstack = 0
  9767                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9768  198C  0021               	movlb	1	; select bank1
  9769  198D  0815               	movf	21,w	;volatile
  9770  198E  39C0               	andlw	192
  9771  198F  3812               	iorlw	18
  9772  1990  0095               	movwf	21	;volatile
  9773                           
  9774                           ;mcc_generated_files/tmr0.c: 72:     TMR0 = 0x83;
  9775  1991  3083               	movlw	131
  9776  1992  0020               	movlb	0	; select bank0
  9777  1993  0095               	movwf	21	;volatile
  9778                           
  9779                           ;mcc_generated_files/tmr0.c: 75:     timer0ReloadVal= 131;
  9780  1994  3083               	movlw	131
  9781  1995  00F2               	movwf	??_TMR0_Initialize
  9782  1996  0872               	movf	??_TMR0_Initialize,w
  9783  1997  0021               	movlb	1	; select bank1
  9784  1998  00EF               	movwf	_timer0ReloadVal^(0+128)	;volatile
  9785                           
  9786                           ;mcc_generated_files/tmr0.c: 78:     INTCONbits.TMR0IF = 0;
  9787  1999  110B               	bcf	11,2	;volatile
  9788                           
  9789                           ;mcc_generated_files/tmr0.c: 81:     INTCONbits.TMR0IE = 1;
  9790  199A  168B               	bsf	11,5	;volatile
  9791                           
  9792                           ;mcc_generated_files/tmr0.c: 84:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  9793  199B  30FF               	movlw	low _TMR0_DefaultInterruptHandler
  9794  199C  00F0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  9795  199D  3007               	movlw	high _TMR0_DefaultInterruptHandler
  9796  199E  00F1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  9797  199F  3199  211B         	fcall	_TMR0_SetInterruptHandler
  9798  19A1  0008               	return
  9799  19A2                     __end_of_TMR0_Initialize:	
  9800                           
  9801                           	psect	text18
  9802  1AB9                     __ptext18:	
  9803 ;; *************** function _PIN_MANAGER_Initialize *****************
  9804 ;; Defined at:
  9805 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
  9806 ;; Parameters:    Size  Location     Type
  9807 ;;		None
  9808 ;; Auto vars:     Size  Location     Type
  9809 ;;		None
  9810 ;; Return value:  Size  Location     Type
  9811 ;;                  1    wreg      void 
  9812 ;; Registers used:
  9813 ;;		wreg, status,2
  9814 ;; Tracked objects:
  9815 ;;		On entry : B1F/0
  9816 ;;		On exit  : B1F/1D
  9817 ;;		Unchanged: B00/0
  9818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9822 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9823 ;;Total ram usage:        0 bytes
  9824 ;; Hardware stack levels used:    1
  9825 ;; Hardware stack levels required when called:    3
  9826 ;; This function calls:
  9827 ;;		Nothing
  9828 ;; This function is called by:
  9829 ;;		_SYSTEM_Initialize
  9830 ;; This function uses a non-reentrant model
  9831 ;;
  9832                           
  9833                           
  9834                           ;psect for function _PIN_MANAGER_Initialize
  9835  1AB9                     _PIN_MANAGER_Initialize:	
  9836                           
  9837                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  9838                           
  9839                           ;incstack = 0
  9840                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  9841  1AB9  0022               	movlb	2	; select bank2
  9842  1ABA  018C               	clrf	12	;volatile
  9843                           
  9844                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  9845  1ABB  018D               	clrf	13	;volatile
  9846                           
  9847                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  9848  1ABC  018E               	clrf	14	;volatile
  9849                           
  9850                           ;mcc_generated_files/pin_manager.c: 69:     TRISA = 0x03;
  9851  1ABD  3003               	movlw	3
  9852  1ABE  0021               	movlb	1	; select bank1
  9853  1ABF  008C               	movwf	12	;volatile
  9854                           
  9855                           ;mcc_generated_files/pin_manager.c: 70:     TRISB = 0x70;
  9856  1AC0  3070               	movlw	112
  9857  1AC1  008D               	movwf	13	;volatile
  9858                           
  9859                           ;mcc_generated_files/pin_manager.c: 71:     TRISC = 0xDF;
  9860  1AC2  30DF               	movlw	223
  9861  1AC3  008E               	movwf	14	;volatile
  9862                           
  9863                           ;mcc_generated_files/pin_manager.c: 76:     ANSELC = 0x4F;
  9864  1AC4  304F               	movlw	79
  9865  1AC5  0023               	movlb	3	; select bank3
  9866  1AC6  008E               	movwf	14	;volatile
  9867                           
  9868                           ;mcc_generated_files/pin_manager.c: 77:     ANSELB = 0x80;
  9869  1AC7  3080               	movlw	128
  9870  1AC8  008D               	movwf	13	;volatile
  9871                           
  9872                           ;mcc_generated_files/pin_manager.c: 78:     ANSELA = 0x03;
  9873  1AC9  3003               	movlw	3
  9874  1ACA  008C               	movwf	12	;volatile
  9875                           
  9876                           ;mcc_generated_files/pin_manager.c: 83:     WPUB = 0x00;
  9877  1ACB  0024               	movlb	4	; select bank4
  9878  1ACC  018D               	clrf	13	;volatile
  9879                           
  9880                           ;mcc_generated_files/pin_manager.c: 84:     WPUA = 0x00;
  9881  1ACD  018C               	clrf	12	;volatile
  9882                           
  9883                           ;mcc_generated_files/pin_manager.c: 85:     WPUC = 0x00;
  9884  1ACE  018E               	clrf	14	;volatile
  9885                           
  9886                           ;mcc_generated_files/pin_manager.c: 86:     OPTION_REGbits.nWPUEN = 1;
  9887  1ACF  0021               	movlb	1	; select bank1
  9888  1AD0  1795               	bsf	21,7	;volatile
  9889                           
  9890                           ;mcc_generated_files/pin_manager.c: 91:     ODCONA = 0x00;
  9891  1AD1  0025               	movlb	5	; select bank5
  9892  1AD2  018C               	clrf	12	;volatile
  9893                           
  9894                           ;mcc_generated_files/pin_manager.c: 92:     ODCONB = 0x00;
  9895  1AD3  018D               	clrf	13	;volatile
  9896                           
  9897                           ;mcc_generated_files/pin_manager.c: 93:     ODCONC = 0x00;
  9898  1AD4  018E               	clrf	14	;volatile
  9899                           
  9900                           ;mcc_generated_files/pin_manager.c: 98:     SLRCONA = 0x37;
  9901  1AD5  3037               	movlw	55
  9902  1AD6  0026               	movlb	6	; select bank6
  9903  1AD7  008C               	movwf	12	;volatile
  9904                           
  9905                           ;mcc_generated_files/pin_manager.c: 99:     SLRCONB = 0xF0;
  9906  1AD8  30F0               	movlw	240
  9907  1AD9  008D               	movwf	13	;volatile
  9908                           
  9909                           ;mcc_generated_files/pin_manager.c: 100:     SLRCONC = 0xFF;
  9910  1ADA  30FF               	movlw	255
  9911  1ADB  008E               	movwf	14	;volatile
  9912                           
  9913                           ;mcc_generated_files/pin_manager.c: 109:     RXPPS = 0x0D;
  9914  1ADC  300D               	movlw	13
  9915  1ADD  003C               	movlb	28	; select bank28
  9916  1ADE  00A4               	movwf	36	;volatile
  9917                           
  9918                           ;mcc_generated_files/pin_manager.c: 110:     RB7PPS = 0x12;
  9919  1ADF  3012               	movlw	18
  9920  1AE0  003D               	movlb	29	; select bank29
  9921  1AE1  009F               	movwf	31	;volatile
  9922  1AE2  0008               	return
  9923  1AE3                     __end_of_PIN_MANAGER_Initialize:	
  9924                           
  9925                           	psect	text19
  9926  192D                     __ptext19:	
  9927 ;; *************** function _OSCILLATOR_Initialize *****************
  9928 ;; Defined at:
  9929 ;;		line 58 in file "mcc_generated_files/mcc.c"
  9930 ;; Parameters:    Size  Location     Type
  9931 ;;		None
  9932 ;; Auto vars:     Size  Location     Type
  9933 ;;		None
  9934 ;; Return value:  Size  Location     Type
  9935 ;;                  1    wreg      void 
  9936 ;; Registers used:
  9937 ;;		wreg, status,2
  9938 ;; Tracked objects:
  9939 ;;		On entry : B1F/1D
  9940 ;;		On exit  : B1F/2
  9941 ;;		Unchanged: B00/0
  9942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9946 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9947 ;;Total ram usage:        0 bytes
  9948 ;; Hardware stack levels used:    1
  9949 ;; Hardware stack levels required when called:    3
  9950 ;; This function calls:
  9951 ;;		Nothing
  9952 ;; This function is called by:
  9953 ;;		_SYSTEM_Initialize
  9954 ;; This function uses a non-reentrant model
  9955 ;;
  9956                           
  9957                           
  9958                           ;psect for function _OSCILLATOR_Initialize
  9959  192D                     _OSCILLATOR_Initialize:	
  9960                           
  9961                           ;mcc_generated_files/mcc.c: 61:     OSCCON = 0x68;
  9962                           
  9963                           ;incstack = 0
  9964                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  9965  192D  3068               	movlw	104
  9966  192E  0021               	movlb	1	; select bank1
  9967  192F  0099               	movwf	25	;volatile
  9968                           
  9969                           ;mcc_generated_files/mcc.c: 63:     OSCTUNE = 0x00;
  9970  1930  0198               	clrf	24	;volatile
  9971                           
  9972                           ;mcc_generated_files/mcc.c: 65:     BORCON = 0x00;
  9973  1931  0022               	movlb	2	; select bank2
  9974  1932  0196               	clrf	22	;volatile
  9975  1933  0008               	return
  9976  1934                     __end_of_OSCILLATOR_Initialize:	
  9977                           
  9978                           	psect	text20
  9979  1951                     __ptext20:	
  9980 ;; *************** function _EUSART_Initialize *****************
  9981 ;; Defined at:
  9982 ;;		line 56 in file "mcc_generated_files/eusart.c"
  9983 ;; Parameters:    Size  Location     Type
  9984 ;;		None
  9985 ;; Auto vars:     Size  Location     Type
  9986 ;;		None
  9987 ;; Return value:  Size  Location     Type
  9988 ;;                  1    wreg      void 
  9989 ;; Registers used:
  9990 ;;		wreg, status,2
  9991 ;; Tracked objects:
  9992 ;;		On entry : 1F/2
  9993 ;;		On exit  : 1F/3
  9994 ;;		Unchanged: 0/0
  9995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9996 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9999 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10000 ;;Total ram usage:        0 bytes
 10001 ;; Hardware stack levels used:    1
 10002 ;; Hardware stack levels required when called:    3
 10003 ;; This function calls:
 10004 ;;		Nothing
 10005 ;; This function is called by:
 10006 ;;		_SYSTEM_Initialize
 10007 ;; This function uses a non-reentrant model
 10008 ;;
 10009                           
 10010                           
 10011                           ;psect for function _EUSART_Initialize
 10012  1951                     _EUSART_Initialize:	
 10013                           
 10014                           ;mcc_generated_files/eusart.c: 61:     BAUD1CON = 0x08;
 10015                           
 10016                           ;incstack = 0
 10017                           ; Regs used in _EUSART_Initialize: [wreg+status,2]
 10018  1951  3008               	movlw	8
 10019  1952  0023               	movlb	3	; select bank3
 10020  1953  009F               	movwf	31	;volatile
 10021                           
 10022                           ;mcc_generated_files/eusart.c: 64:     RC1STA = 0x90;
 10023  1954  3090               	movlw	144
 10024  1955  009D               	movwf	29	;volatile
 10025                           
 10026                           ;mcc_generated_files/eusart.c: 67:     TX1STA = 0x24;
 10027  1956  3024               	movlw	36
 10028  1957  009E               	movwf	30	;volatile
 10029                           
 10030                           ;mcc_generated_files/eusart.c: 70:     SPBRGL = 0x67;
 10031  1958  3067               	movlw	103
 10032  1959  009B               	movwf	27	;volatile
 10033                           
 10034                           ;mcc_generated_files/eusart.c: 73:     SPBRGH = 0x00;
 10035  195A  019C               	clrf	28	;volatile
 10036  195B  0008               	return
 10037  195C                     __end_of_EUSART_Initialize:	
 10038                           
 10039                           	psect	text21
 10040  133B                     __ptext21:	
 10041 ;; *************** function _IntToString *****************
 10042 ;; Defined at:
 10043 ;;		line 148 in file "main.c"
 10044 ;; Parameters:    Size  Location     Type
 10045 ;;  n               2   13[BANK0 ] int 
 10046 ;;  dest            2   15[BANK0 ] PTR unsigned char 
 10047 ;;		 -> main@convertedNumber(16), GetNavData@strId(12), 
 10048 ;; Auto vars:     Size  Location     Type
 10049 ;;  i               2   18[BANK0 ] int 
 10050 ;;  sign            1   17[BANK0 ] _Bool 
 10051 ;; Return value:  Size  Location     Type
 10052 ;;                  1    wreg      void 
 10053 ;; Registers used:
 10054 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10055 ;; Tracked objects:
 10056 ;;		On entry : 1F/0
 10057 ;;		On exit  : 1F/0
 10058 ;;		Unchanged: 0/0
 10059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10060 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10061 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10062 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10063 ;;      Totals:         3       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10064 ;;Total ram usage:       10 bytes
 10065 ;; Hardware stack levels used:    1
 10066 ;; Hardware stack levels required when called:    5
 10067 ;; This function calls:
 10068 ;;		_ReverseString
 10069 ;;		___awdiv
 10070 ;;		___awmod
 10071 ;; This function is called by:
 10072 ;;		_main
 10073 ;; This function uses a non-reentrant model
 10074 ;;
 10075                           
 10076                           
 10077                           ;psect for function _IntToString
 10078  133B                     _IntToString:	
 10079                           
 10080                           ;main.c: 148: void IntToString(int n, char* dest);main.c: 149: {;main.c: 150:     int i 
      +                          = 0;
 10081                           
 10082                           ;incstack = 0
 10083                           ; Regs used in _IntToString: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10084  133B  01B2               	clrf	IntToString@i
 10085  133C  01B3               	clrf	IntToString@i+1
 10086                           
 10087                           ;main.c: 151:     _Bool sign = n < 0;
 10088  133D  1FAE               	btfss	IntToString@n+1,7
 10089  133E  2B41               	goto	u4960
 10090  133F  3001               	movlw	1
 10091  1340  2B42               	goto	u4970
 10092  1341                     u4960:	
 10093  1341  3000               	movlw	0
 10094  1342                     u4970:	
 10095  1342  00FB               	movwf	??_IntToString
 10096  1343  087B               	movf	??_IntToString,w
 10097  1344  00B1               	movwf	IntToString@sign
 10098                           
 10099                           ;main.c: 152:     if (sign)
 10100  1345  0831               	movf	IntToString@sign,w
 10101  1346  1903               	btfsc	3,2
 10102  1347  2B4D               	goto	l4494
 10103                           
 10104                           ;main.c: 153:     {;main.c: 155:         n = -n;
 10105  1348  09AD               	comf	IntToString@n,f
 10106  1349  09AE               	comf	IntToString@n+1,f
 10107  134A  0AAD               	incf	IntToString@n,f
 10108  134B  1903               	skipnz
 10109  134C  0AAE               	incf	IntToString@n+1,f
 10110  134D                     l4494:	
 10111                           
 10112                           ;main.c: 161:         dest[i++] = n % 10 + '0';
 10113  134D  300A               	movlw	10
 10114  134E  00F0               	movwf	___awmod@divisor
 10115  134F  3000               	movlw	0
 10116  1350  00F1               	movwf	___awmod@divisor+1
 10117  1351  0020               	movlb	0	; select bank0
 10118  1352  082E               	movf	IntToString@n+1,w
 10119  1353  00F3               	movwf	___awmod@dividend+1
 10120  1354  082D               	movf	IntToString@n,w
 10121  1355  00F2               	movwf	___awmod@dividend
 10122  1356  319D  25F3  3193   	fcall	___awmod
 10123  1359  0870               	movf	?___awmod,w
 10124  135A  3E30               	addlw	48
 10125  135B  00FB               	movwf	??_IntToString
 10126  135C  0832               	movf	IntToString@i,w
 10127  135D  072F               	addwf	IntToString@dest,w
 10128  135E  00FC               	movwf	??_IntToString+1
 10129  135F  0833               	movf	IntToString@i+1,w
 10130  1360  3D30               	addwfc	IntToString@dest+1,w
 10131  1361  00FD               	movwf	??_IntToString+2
 10132  1362  087C               	movf	??_IntToString+1,w
 10133  1363  0086               	movwf	6
 10134  1364  087D               	movf	??_IntToString+2,w
 10135  1365  0087               	movwf	7
 10136  1366  087B               	movf	??_IntToString,w
 10137  1367  0081               	movwf	1
 10138  1368  3001               	movlw	1
 10139  1369  07B2               	addwf	IntToString@i,f
 10140  136A  3000               	movlw	0
 10141  136B  3DB3               	addwfc	IntToString@i+1,f
 10142                           
 10143                           ;main.c: 163:     } while ((n /= 10) > 0);
 10144  136C  300A               	movlw	10
 10145  136D  00F0               	movwf	___awdiv@divisor
 10146  136E  3000               	movlw	0
 10147  136F  00F1               	movwf	___awdiv@divisor+1
 10148  1370  082E               	movf	IntToString@n+1,w
 10149  1371  00F3               	movwf	___awdiv@dividend+1
 10150  1372  082D               	movf	IntToString@n,w
 10151  1373  00F2               	movwf	___awdiv@dividend
 10152  1374  319F  27AF  3193   	fcall	___awdiv
 10153  1377  0871               	movf	?___awdiv+1,w
 10154  1378  00AE               	movwf	IntToString@n+1
 10155  1379  0870               	movf	?___awdiv,w
 10156  137A  00AD               	movwf	IntToString@n
 10157  137B  082E               	movf	IntToString@n+1,w
 10158  137C  3A80               	xorlw	128
 10159  137D  00FB               	movwf	??_IntToString
 10160  137E  3080               	movlw	128
 10161  137F  027B               	subwf	??_IntToString,w
 10162  1380  1D03               	skipz
 10163  1381  2B84               	goto	u4995
 10164  1382  3001               	movlw	1
 10165  1383  022D               	subwf	IntToString@n,w
 10166  1384                     u4995:	
 10167  1384  1803               	skipnc
 10168  1385  2B4D               	goto	l4494
 10169                           
 10170                           ;main.c: 164:     if (sign)
 10171  1386  0020               	movlb	0	; select bank0
 10172  1387  0831               	movf	IntToString@sign,w
 10173  1388  1903               	btfsc	3,2
 10174  1389  2B9A               	goto	l4506
 10175                           
 10176                           ;main.c: 165:     {;main.c: 166:         dest[i++] = '-';
 10177  138A  0832               	movf	IntToString@i,w
 10178  138B  072F               	addwf	IntToString@dest,w
 10179  138C  00FB               	movwf	??_IntToString
 10180  138D  0833               	movf	IntToString@i+1,w
 10181  138E  3D30               	addwfc	IntToString@dest+1,w
 10182  138F  00FC               	movwf	??_IntToString+1
 10183  1390  087B               	movf	??_IntToString,w
 10184  1391  0086               	movwf	6
 10185  1392  087C               	movf	??_IntToString+1,w
 10186  1393  0087               	movwf	7
 10187  1394  302D               	movlw	45
 10188  1395  0081               	movwf	1
 10189  1396  3001               	movlw	1
 10190  1397  07B2               	addwf	IntToString@i,f
 10191  1398  3000               	movlw	0
 10192  1399  3DB3               	addwfc	IntToString@i+1,f
 10193  139A                     l4506:	
 10194                           
 10195                           ;main.c: 168:     dest[i] = '\0';
 10196  139A  0832               	movf	IntToString@i,w
 10197  139B  072F               	addwf	IntToString@dest,w
 10198  139C  0086               	movwf	6
 10199  139D  0833               	movf	IntToString@i+1,w
 10200  139E  3D30               	addwfc	IntToString@dest+1,w
 10201  139F  0087               	movwf	7
 10202  13A0  0181               	clrf	1
 10203                           
 10204                           ;main.c: 170:     ReverseString(dest);
 10205  13A1  0830               	movf	IntToString@dest+1,w
 10206  13A2  00FA               	movwf	ReverseString@str+1
 10207  13A3  082F               	movf	IntToString@dest,w
 10208  13A4  00F9               	movwf	ReverseString@str
 10209  13A5  3192  2262         	fcall	_ReverseString
 10210  13A7  0008               	return
 10211  13A8                     __end_of_IntToString:	
 10212                           
 10213                           	psect	text22
 10214  1DF3                     __ptext22:	
 10215 ;; *************** function ___awmod *****************
 10216 ;; Defined at:
 10217 ;;		line 5 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\awmod.c"
 10218 ;; Parameters:    Size  Location     Type
 10219 ;;  divisor         2    0[COMMON] int 
 10220 ;;  dividend        2    2[COMMON] int 
 10221 ;; Auto vars:     Size  Location     Type
 10222 ;;  sign            1    6[COMMON] unsigned char 
 10223 ;;  counter         1    5[COMMON] unsigned char 
 10224 ;; Return value:  Size  Location     Type
 10225 ;;                  2    0[COMMON] int 
 10226 ;; Registers used:
 10227 ;;		wreg, status,2, status,0
 10228 ;; Tracked objects:
 10229 ;;		On entry : 1F/0
 10230 ;;		On exit  : 1F/0
 10231 ;;		Unchanged: 1F/0
 10232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10233 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10234 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10235 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10236 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10237 ;;Total ram usage:        7 bytes
 10238 ;; Hardware stack levels used:    1
 10239 ;; Hardware stack levels required when called:    3
 10240 ;; This function calls:
 10241 ;;		Nothing
 10242 ;; This function is called by:
 10243 ;;		_IntToString
 10244 ;; This function uses a non-reentrant model
 10245 ;;
 10246                           
 10247                           
 10248                           ;psect for function ___awmod
 10249  1DF3                     ___awmod:	
 10250                           
 10251                           ;incstack = 0
 10252                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 10253  1DF3  01F6               	clrf	___awmod@sign
 10254  1DF4  1FF3               	btfss	___awmod@dividend+1,7
 10255  1DF5  2DFD               	goto	l3514
 10256  1DF6  09F2               	comf	___awmod@dividend,f
 10257  1DF7  09F3               	comf	___awmod@dividend+1,f
 10258  1DF8  0AF2               	incf	___awmod@dividend,f
 10259  1DF9  1903               	skipnz
 10260  1DFA  0AF3               	incf	___awmod@dividend+1,f
 10261  1DFB  01F6               	clrf	___awmod@sign
 10262  1DFC  0AF6               	incf	___awmod@sign,f
 10263  1DFD                     l3514:	
 10264  1DFD  1FF1               	btfss	___awmod@divisor+1,7
 10265  1DFE  2E04               	goto	l3518
 10266  1DFF  09F0               	comf	___awmod@divisor,f
 10267  1E00  09F1               	comf	___awmod@divisor+1,f
 10268  1E01  0AF0               	incf	___awmod@divisor,f
 10269  1E02  1903               	skipnz
 10270  1E03  0AF1               	incf	___awmod@divisor+1,f
 10271  1E04                     l3518:	
 10272  1E04  0870               	movf	___awmod@divisor,w
 10273  1E05  0471               	iorwf	___awmod@divisor+1,w
 10274  1E06  1903               	btfsc	3,2
 10275  1E07  2E2B               	goto	l3536
 10276  1E08  01F5               	clrf	___awmod@counter
 10277  1E09  0AF5               	incf	___awmod@counter,f
 10278  1E0A                     l3526:	
 10279  1E0A  1BF1               	btfsc	___awmod@divisor+1,7
 10280  1E0B  2E16               	goto	l3528
 10281  1E0C  3001               	movlw	1
 10282  1E0D                     u3515:	
 10283  1E0D  35F0               	lslf	___awmod@divisor,f
 10284  1E0E  0DF1               	rlf	___awmod@divisor+1,f
 10285  1E0F  0B89               	decfsz	9,f
 10286  1E10  2E0D               	goto	u3515
 10287  1E11  3001               	movlw	1
 10288  1E12  00F4               	movwf	??___awmod
 10289  1E13  0874               	movf	??___awmod,w
 10290  1E14  07F5               	addwf	___awmod@counter,f
 10291  1E15  2E0A               	goto	l3526
 10292  1E16                     l3528:	
 10293  1E16  0871               	movf	___awmod@divisor+1,w
 10294  1E17  0273               	subwf	___awmod@dividend+1,w
 10295  1E18  1D03               	skipz
 10296  1E19  2E1C               	goto	u3535
 10297  1E1A  0870               	movf	___awmod@divisor,w
 10298  1E1B  0272               	subwf	___awmod@dividend,w
 10299  1E1C                     u3535:	
 10300  1E1C  1C03               	skipc
 10301  1E1D  2E22               	goto	l3532
 10302  1E1E  0870               	movf	___awmod@divisor,w
 10303  1E1F  02F2               	subwf	___awmod@dividend,f
 10304  1E20  0871               	movf	___awmod@divisor+1,w
 10305  1E21  3BF3               	subwfb	___awmod@dividend+1,f
 10306  1E22                     l3532:	
 10307  1E22  3001               	movlw	1
 10308  1E23                     u3545:	
 10309  1E23  36F1               	lsrf	___awmod@divisor+1,f
 10310  1E24  0CF0               	rrf	___awmod@divisor,f
 10311  1E25  0B89               	decfsz	9,f
 10312  1E26  2E23               	goto	u3545
 10313  1E27  3001               	movlw	1
 10314  1E28  02F5               	subwf	___awmod@counter,f
 10315  1E29  1D03               	btfss	3,2
 10316  1E2A  2E16               	goto	l3528
 10317  1E2B                     l3536:	
 10318  1E2B  0876               	movf	___awmod@sign,w
 10319  1E2C  1903               	btfsc	3,2
 10320  1E2D  2E33               	goto	l3540
 10321  1E2E  09F2               	comf	___awmod@dividend,f
 10322  1E2F  09F3               	comf	___awmod@dividend+1,f
 10323  1E30  0AF2               	incf	___awmod@dividend,f
 10324  1E31  1903               	skipnz
 10325  1E32  0AF3               	incf	___awmod@dividend+1,f
 10326  1E33                     l3540:	
 10327  1E33  0873               	movf	___awmod@dividend+1,w
 10328  1E34  00F1               	movwf	?___awmod+1
 10329  1E35  0872               	movf	___awmod@dividend,w
 10330  1E36  00F0               	movwf	?___awmod
 10331  1E37  0008               	return
 10332  1E38                     __end_of___awmod:	
 10333                           
 10334                           	psect	text23
 10335  1262                     __ptext23:	
 10336 ;; *************** function _ReverseString *****************
 10337 ;; Defined at:
 10338 ;;		line 93 in file "main.c"
 10339 ;; Parameters:    Size  Location     Type
 10340 ;;  str             2    9[COMMON] PTR unsigned char 
 10341 ;;		 -> checksum(6), main@convertedNumber(16), GetNavData@strId(12), 
 10342 ;; Auto vars:     Size  Location     Type
 10343 ;;  opposite        2    7[BANK0 ] PTR unsigned char 
 10344 ;;		 -> checksum(6), main@convertedNumber(16), GetNavData@strId(12), 
 10345 ;;  temp            1    6[BANK0 ] unsigned char 
 10346 ;;  i               2   11[BANK0 ] int 
 10347 ;;  halfway         2    4[BANK0 ] int 
 10348 ;;  counti          2    9[BANK0 ] int 
 10349 ;; Return value:  Size  Location     Type
 10350 ;;                  1    wreg      void 
 10351 ;; Registers used:
 10352 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10353 ;; Tracked objects:
 10354 ;;		On entry : 1F/0
 10355 ;;		On exit  : 1F/0
 10356 ;;		Unchanged: 0/0
 10357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10358 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10359 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10360 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10361 ;;      Totals:         2      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10362 ;;Total ram usage:       15 bytes
 10363 ;; Hardware stack levels used:    1
 10364 ;; Hardware stack levels required when called:    4
 10365 ;; This function calls:
 10366 ;;		___awdiv
 10367 ;;		_strlen
 10368 ;; This function is called by:
 10369 ;;		_UIntToHexString
 10370 ;;		_IntToString
 10371 ;; This function uses a non-reentrant model
 10372 ;;
 10373                           
 10374                           
 10375                           ;psect for function _ReverseString
 10376  1262                     _ReverseString:	
 10377                           
 10378                           ;main.c: 93: void ReverseString(char* str);main.c: 94: {;main.c: 95:     int counti = st
      +                          rlen(str);
 10379                           
 10380                           ;incstack = 0
 10381                           ; Regs used in _ReverseString: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10382  1262  087A               	movf	ReverseString@str+1,w
 10383  1263  00F1               	movwf	strlen@s+1
 10384  1264  0879               	movf	ReverseString@str,w
 10385  1265  00F0               	movwf	strlen@s
 10386  1266  3199  21A2  3192   	fcall	_strlen
 10387  1269  0871               	movf	?_strlen+1,w
 10388  126A  0020               	movlb	0	; select bank0
 10389  126B  00AA               	movwf	ReverseString@counti+1
 10390  126C  0870               	movf	?_strlen,w
 10391  126D  00A9               	movwf	ReverseString@counti
 10392                           
 10393                           ;main.c: 96:     for (int i = 0, halfway = counti / 2; i < halfway; i++)
 10394  126E  01AB               	clrf	ReverseString@i
 10395  126F  01AC               	clrf	ReverseString@i+1
 10396  1270  3002               	movlw	2
 10397  1271  00F0               	movwf	___awdiv@divisor
 10398  1272  3000               	movlw	0
 10399  1273  00F1               	movwf	___awdiv@divisor+1
 10400  1274  082A               	movf	ReverseString@counti+1,w
 10401  1275  00F3               	movwf	___awdiv@dividend+1
 10402  1276  0829               	movf	ReverseString@counti,w
 10403  1277  00F2               	movwf	___awdiv@dividend
 10404  1278  319F  27AF  3192   	fcall	___awdiv
 10405  127B  0871               	movf	?___awdiv+1,w
 10406  127C  00A5               	movwf	ReverseString@halfway+1
 10407  127D  0870               	movf	?___awdiv,w
 10408  127E  00A4               	movwf	ReverseString@halfway
 10409  127F                     l4434:	
 10410  127F  082C               	movf	ReverseString@i+1,w
 10411  1280  3A80               	xorlw	128
 10412  1281  00A0               	movwf	??_ReverseString
 10413  1282  0825               	movf	ReverseString@halfway+1,w
 10414  1283  3A80               	xorlw	128
 10415  1284  0220               	subwf	??_ReverseString,w
 10416  1285  1D03               	skipz
 10417  1286  2A89               	goto	u4855
 10418  1287  0824               	movf	ReverseString@halfway,w
 10419  1288  022B               	subwf	ReverseString@i,w
 10420  1289                     u4855:	
 10421  1289  1803               	btfsc	3,0
 10422  128A  2AC5               	goto	l4436
 10423                           
 10424                           ;main.c: 97:     {;main.c: 98:         char temp = str[i];
 10425  128B  0020               	movlb	0	; select bank0
 10426  128C  082B               	movf	ReverseString@i,w
 10427  128D  0779               	addwf	ReverseString@str,w
 10428  128E  0086               	movwf	6
 10429  128F  082C               	movf	ReverseString@i+1,w
 10430  1290  3D7A               	addwfc	ReverseString@str+1,w
 10431  1291  0087               	movwf	7
 10432  1292  0801               	movf	1,w
 10433  1293  00A0               	movwf	??_ReverseString
 10434  1294  0820               	movf	??_ReverseString,w
 10435  1295  00A6               	movwf	ReverseString@temp
 10436                           
 10437                           ;main.c: 99:         char* opposite = str + (counti - 1 - i);
 10438  1296  082B               	movf	ReverseString@i,w
 10439  1297  0279               	subwf	ReverseString@str,w
 10440  1298  00A0               	movwf	??_ReverseString
 10441  1299  082C               	movf	ReverseString@i+1,w
 10442  129A  3B7A               	subwfb	ReverseString@str+1,w
 10443  129B  00A1               	movwf	??_ReverseString+1
 10444  129C  0829               	movf	ReverseString@counti,w
 10445  129D  0720               	addwf	??_ReverseString,w
 10446  129E  00A2               	movwf	??_ReverseString+2
 10447  129F  082A               	movf	ReverseString@counti+1,w
 10448  12A0  3D21               	addwfc	??_ReverseString+1,w
 10449  12A1  00A3               	movwf	??_ReverseString+3
 10450  12A2  0822               	movf	??_ReverseString+2,w
 10451  12A3  3EFF               	addlw	255
 10452  12A4  00A7               	movwf	ReverseString@opposite
 10453  12A5  30FF               	movlw	255
 10454  12A6  3D23               	addwfc	??_ReverseString+3,w
 10455  12A7  00A8               	movwf	ReverseString@opposite+1
 10456                           
 10457                           ;main.c: 100:         str[i] = *opposite;
 10458  12A8  0827               	movf	ReverseString@opposite,w
 10459  12A9  0086               	movwf	6
 10460  12AA  0828               	movf	ReverseString@opposite+1,w
 10461  12AB  0087               	movwf	7
 10462  12AC  0801               	movf	1,w
 10463  12AD  00A0               	movwf	??_ReverseString
 10464  12AE  082B               	movf	ReverseString@i,w
 10465  12AF  0779               	addwf	ReverseString@str,w
 10466  12B0  00A1               	movwf	??_ReverseString+1
 10467  12B1  082C               	movf	ReverseString@i+1,w
 10468  12B2  3D7A               	addwfc	ReverseString@str+1,w
 10469  12B3  00A2               	movwf	??_ReverseString+2
 10470  12B4  0821               	movf	??_ReverseString+1,w
 10471  12B5  0086               	movwf	6
 10472  12B6  0822               	movf	??_ReverseString+2,w
 10473  12B7  0087               	movwf	7
 10474  12B8  0820               	movf	??_ReverseString,w
 10475  12B9  0081               	movwf	1
 10476                           
 10477                           ;main.c: 101:         *opposite = temp;
 10478  12BA  0827               	movf	ReverseString@opposite,w
 10479  12BB  0086               	movwf	6
 10480  12BC  0828               	movf	ReverseString@opposite+1,w
 10481  12BD  0087               	movwf	7
 10482  12BE  0826               	movf	ReverseString@temp,w
 10483  12BF  0081               	movwf	1
 10484                           
 10485                           ;main.c: 102:     }
 10486  12C0  3001               	movlw	1
 10487  12C1  07AB               	addwf	ReverseString@i,f
 10488  12C2  3000               	movlw	0
 10489  12C3  3DAC               	addwfc	ReverseString@i+1,f
 10490  12C4  2A7F               	goto	l4434
 10491  12C5                     l4436:	
 10492                           
 10493                           ;main.c: 103:     str[counti] = '\0';
 10494  12C5  0020               	movlb	0	; select bank0
 10495  12C6  0829               	movf	ReverseString@counti,w
 10496  12C7  0779               	addwf	ReverseString@str,w
 10497  12C8  0086               	movwf	6
 10498  12C9  082A               	movf	ReverseString@counti+1,w
 10499  12CA  3D7A               	addwfc	ReverseString@str+1,w
 10500  12CB  0087               	movwf	7
 10501  12CC  0181               	clrf	1
 10502  12CD  0008               	return
 10503  12CE                     __end_of_ReverseString:	
 10504                           
 10505                           	psect	text24
 10506  1FAF                     __ptext24:	
 10507 ;; *************** function ___awdiv *****************
 10508 ;; Defined at:
 10509 ;;		line 5 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\awdiv.c"
 10510 ;; Parameters:    Size  Location     Type
 10511 ;;  divisor         2    0[COMMON] int 
 10512 ;;  dividend        2    2[COMMON] int 
 10513 ;; Auto vars:     Size  Location     Type
 10514 ;;  quotient        2    7[COMMON] int 
 10515 ;;  sign            1    6[COMMON] unsigned char 
 10516 ;;  counter         1    5[COMMON] unsigned char 
 10517 ;; Return value:  Size  Location     Type
 10518 ;;                  2    0[COMMON] int 
 10519 ;; Registers used:
 10520 ;;		wreg, status,2, status,0
 10521 ;; Tracked objects:
 10522 ;;		On entry : 1F/0
 10523 ;;		On exit  : 1F/0
 10524 ;;		Unchanged: 1F/0
 10525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10526 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10527 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10528 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10529 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10530 ;;Total ram usage:        9 bytes
 10531 ;; Hardware stack levels used:    1
 10532 ;; Hardware stack levels required when called:    3
 10533 ;; This function calls:
 10534 ;;		Nothing
 10535 ;; This function is called by:
 10536 ;;		_ReverseString
 10537 ;;		_IntToString
 10538 ;; This function uses a non-reentrant model
 10539 ;;
 10540                           
 10541                           
 10542                           ;psect for function ___awdiv
 10543  1FAF                     ___awdiv:	
 10544                           
 10545                           ;incstack = 0
 10546                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 10547  1FAF  01F6               	clrf	___awdiv@sign
 10548  1FB0  1FF1               	btfss	___awdiv@divisor+1,7
 10549  1FB1  2FB9               	goto	l3206
 10550  1FB2  09F0               	comf	___awdiv@divisor,f
 10551  1FB3  09F1               	comf	___awdiv@divisor+1,f
 10552  1FB4  0AF0               	incf	___awdiv@divisor,f
 10553  1FB5  1903               	skipnz
 10554  1FB6  0AF1               	incf	___awdiv@divisor+1,f
 10555  1FB7  01F6               	clrf	___awdiv@sign
 10556  1FB8  0AF6               	incf	___awdiv@sign,f
 10557  1FB9                     l3206:	
 10558  1FB9  1FF3               	btfss	___awdiv@dividend+1,7
 10559  1FBA  2FC4               	goto	l3212
 10560  1FBB  09F2               	comf	___awdiv@dividend,f
 10561  1FBC  09F3               	comf	___awdiv@dividend+1,f
 10562  1FBD  0AF2               	incf	___awdiv@dividend,f
 10563  1FBE  1903               	skipnz
 10564  1FBF  0AF3               	incf	___awdiv@dividend+1,f
 10565  1FC0  3001               	movlw	1
 10566  1FC1  00F4               	movwf	??___awdiv
 10567  1FC2  0874               	movf	??___awdiv,w
 10568  1FC3  06F6               	xorwf	___awdiv@sign,f
 10569  1FC4                     l3212:	
 10570  1FC4  01F7               	clrf	___awdiv@quotient
 10571  1FC5  01F8               	clrf	___awdiv@quotient+1
 10572  1FC6  0870               	movf	___awdiv@divisor,w
 10573  1FC7  0471               	iorwf	___awdiv@divisor+1,w
 10574  1FC8  1903               	btfsc	3,2
 10575  1FC9  2FF3               	goto	l3234
 10576  1FCA  01F5               	clrf	___awdiv@counter
 10577  1FCB  0AF5               	incf	___awdiv@counter,f
 10578  1FCC                     l3222:	
 10579  1FCC  1BF1               	btfsc	___awdiv@divisor+1,7
 10580  1FCD  2FD8               	goto	l3224
 10581  1FCE  3001               	movlw	1
 10582  1FCF                     u3005:	
 10583  1FCF  35F0               	lslf	___awdiv@divisor,f
 10584  1FD0  0DF1               	rlf	___awdiv@divisor+1,f
 10585  1FD1  0B89               	decfsz	9,f
 10586  1FD2  2FCF               	goto	u3005
 10587  1FD3  3001               	movlw	1
 10588  1FD4  00F4               	movwf	??___awdiv
 10589  1FD5  0874               	movf	??___awdiv,w
 10590  1FD6  07F5               	addwf	___awdiv@counter,f
 10591  1FD7  2FCC               	goto	l3222
 10592  1FD8                     l3224:	
 10593  1FD8  3001               	movlw	1
 10594  1FD9                     u3025:	
 10595  1FD9  35F7               	lslf	___awdiv@quotient,f
 10596  1FDA  0DF8               	rlf	___awdiv@quotient+1,f
 10597  1FDB  0B89               	decfsz	9,f
 10598  1FDC  2FD9               	goto	u3025
 10599  1FDD  0871               	movf	___awdiv@divisor+1,w
 10600  1FDE  0273               	subwf	___awdiv@dividend+1,w
 10601  1FDF  1D03               	skipz
 10602  1FE0  2FE3               	goto	u3035
 10603  1FE1  0870               	movf	___awdiv@divisor,w
 10604  1FE2  0272               	subwf	___awdiv@dividend,w
 10605  1FE3                     u3035:	
 10606  1FE3  1C03               	skipc
 10607  1FE4  2FEA               	goto	l3230
 10608  1FE5  0870               	movf	___awdiv@divisor,w
 10609  1FE6  02F2               	subwf	___awdiv@dividend,f
 10610  1FE7  0871               	movf	___awdiv@divisor+1,w
 10611  1FE8  3BF3               	subwfb	___awdiv@dividend+1,f
 10612  1FE9  1477               	bsf	___awdiv@quotient,0
 10613  1FEA                     l3230:	
 10614  1FEA  3001               	movlw	1
 10615  1FEB                     u3045:	
 10616  1FEB  36F1               	lsrf	___awdiv@divisor+1,f
 10617  1FEC  0CF0               	rrf	___awdiv@divisor,f
 10618  1FED  0B89               	decfsz	9,f
 10619  1FEE  2FEB               	goto	u3045
 10620  1FEF  3001               	movlw	1
 10621  1FF0  02F5               	subwf	___awdiv@counter,f
 10622  1FF1  1D03               	btfss	3,2
 10623  1FF2  2FD8               	goto	l3224
 10624  1FF3                     l3234:	
 10625  1FF3  0876               	movf	___awdiv@sign,w
 10626  1FF4  1903               	btfsc	3,2
 10627  1FF5  2FFB               	goto	l3238
 10628  1FF6  09F7               	comf	___awdiv@quotient,f
 10629  1FF7  09F8               	comf	___awdiv@quotient+1,f
 10630  1FF8  0AF7               	incf	___awdiv@quotient,f
 10631  1FF9  1903               	skipnz
 10632  1FFA  0AF8               	incf	___awdiv@quotient+1,f
 10633  1FFB                     l3238:	
 10634  1FFB  0878               	movf	___awdiv@quotient+1,w
 10635  1FFC  00F1               	movwf	?___awdiv+1
 10636  1FFD  0877               	movf	___awdiv@quotient,w
 10637  1FFE  00F0               	movwf	?___awdiv
 10638  1FFF  0008               	return
 10639  2000                     __end_of___awdiv:	
 10640                           
 10641                           	psect	text25
 10642  1F5F                     __ptext25:	
 10643 ;; *************** function _InsertString *****************
 10644 ;; Defined at:
 10645 ;;		line 80 in file "main.c"
 10646 ;; Parameters:    Size  Location     Type
 10647 ;;  dest            1    wreg     PTR unsigned char 
 10648 ;;		 -> message_end(73), message_start(70), 
 10649 ;;  src             2    0[BANK0 ] PTR unsigned char 
 10650 ;;		 -> STR_12(3), checksum(6), STR_11(6), main@convertedNumber(16), 
 10651 ;;		 -> GetNavData@strId(12), STR_10(5), 
 10652 ;;  index           2    2[BANK0 ] int 
 10653 ;;  destLimit       2    4[BANK0 ] int 
 10654 ;; Auto vars:     Size  Location     Type
 10655 ;;  dest            1   10[BANK0 ] PTR unsigned char 
 10656 ;;		 -> message_end(73), message_start(70), 
 10657 ;;  i               2    8[BANK0 ] int 
 10658 ;;  counti          2    6[BANK0 ] int 
 10659 ;; Return value:  Size  Location     Type
 10660 ;;                  2    0[BANK0 ] int 
 10661 ;; Registers used:
 10662 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10663 ;; Tracked objects:
 10664 ;;		On entry : 1F/2
 10665 ;;		On exit  : 1F/0
 10666 ;;		Unchanged: 0/0
 10667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10668 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10669 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10670 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10671 ;;      Totals:         1      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10672 ;;Total ram usage:       12 bytes
 10673 ;; Hardware stack levels used:    1
 10674 ;; Hardware stack levels required when called:    4
 10675 ;; This function calls:
 10676 ;;		_Insert
 10677 ;;		_strlen
 10678 ;; This function is called by:
 10679 ;;		_main
 10680 ;; This function uses a non-reentrant model
 10681 ;;
 10682                           
 10683                           
 10684                           ;psect for function _InsertString
 10685  1F5F                     _InsertString:	
 10686                           
 10687                           ;incstack = 0
 10688                           ; Regs used in _InsertString: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10689                           ;InsertString@dest stored from wreg
 10690  1F5F  0020               	movlb	0	; select bank0
 10691  1F60  00AA               	movwf	InsertString@dest
 10692                           
 10693                           ;main.c: 80: int InsertString(char* dest, char* src, int index, int destLimit);main.c: 8
      +                          1: {;main.c: 82:     for (int i = 0, counti = strlen(src); i < counti && index < destLim
      +                          it; i++)
 10694  1F61  01A8               	clrf	InsertString@i
 10695  1F62  01A9               	clrf	InsertString@i+1
 10696  1F63  0821               	movf	InsertString@src+1,w
 10697  1F64  00F1               	movwf	strlen@s+1
 10698  1F65  0820               	movf	InsertString@src,w
 10699  1F66  00F0               	movwf	strlen@s
 10700  1F67  3199  21A2  319F   	fcall	_strlen
 10701  1F6A  0871               	movf	?_strlen+1,w
 10702  1F6B  0020               	movlb	0	; select bank0
 10703  1F6C  00A7               	movwf	InsertString@counti+1
 10704  1F6D  0870               	movf	?_strlen,w
 10705  1F6E  00A6               	movwf	InsertString@counti
 10706  1F6F  2F9D               	goto	l3590
 10707  1F70                     l3592:	
 10708  1F70  0020               	movlb	0	; select bank0
 10709  1F71  0823               	movf	InsertString@index+1,w
 10710  1F72  3A80               	xorlw	128
 10711  1F73  00FA               	movwf	??_InsertString
 10712  1F74  0825               	movf	InsertString@destLimit+1,w
 10713  1F75  3A80               	xorlw	128
 10714  1F76  027A               	subwf	??_InsertString,w
 10715  1F77  1D03               	skipz
 10716  1F78  2F7B               	goto	u3655
 10717  1F79  0824               	movf	InsertString@destLimit,w
 10718  1F7A  0222               	subwf	InsertString@index,w
 10719  1F7B                     u3655:	
 10720  1F7B  1803               	btfsc	3,0
 10721  1F7C  2FA9               	goto	l3594
 10722                           
 10723                           ;main.c: 83:     {;main.c: 85:         Insert(dest, src[i], index++, destLimit);
 10724  1F7D  0020               	movlb	0	; select bank0
 10725  1F7E  0820               	movf	InsertString@src,w
 10726  1F7F  0728               	addwf	InsertString@i,w
 10727  1F80  0084               	movwf	4
 10728  1F81  0821               	movf	InsertString@src+1,w
 10729  1F82  3D29               	addwfc	InsertString@i+1,w
 10730  1F83  0085               	movwf	5
 10731  1F84  0800               	movf	0,w	;code access
 10732  1F85  00FA               	movwf	??_InsertString
 10733  1F86  087A               	movf	??_InsertString,w
 10734  1F87  00F0               	movwf	Insert@src
 10735  1F88  0823               	movf	InsertString@index+1,w
 10736  1F89  00F2               	movwf	Insert@index+1
 10737  1F8A  0822               	movf	InsertString@index,w
 10738  1F8B  00F1               	movwf	Insert@index
 10739  1F8C  0825               	movf	InsertString@destLimit+1,w
 10740  1F8D  00F4               	movwf	Insert@destLimit+1
 10741  1F8E  0824               	movf	InsertString@destLimit,w
 10742  1F8F  00F3               	movwf	Insert@destLimit
 10743  1F90  082A               	movf	InsertString@dest,w
 10744  1F91  3191  21F9  319F   	fcall	_Insert
 10745  1F94  3001               	movlw	1
 10746  1F95  0020               	movlb	0	; select bank0
 10747  1F96  07A2               	addwf	InsertString@index,f
 10748  1F97  3000               	movlw	0
 10749  1F98  3DA3               	addwfc	InsertString@index+1,f
 10750                           
 10751                           ;main.c: 86:     }
 10752  1F99  3001               	movlw	1
 10753  1F9A  07A8               	addwf	InsertString@i,f
 10754  1F9B  3000               	movlw	0
 10755  1F9C  3DA9               	addwfc	InsertString@i+1,f
 10756  1F9D                     l3590:	
 10757  1F9D  0829               	movf	InsertString@i+1,w
 10758  1F9E  3A80               	xorlw	128
 10759  1F9F  00FA               	movwf	??_InsertString
 10760  1FA0  0827               	movf	InsertString@counti+1,w
 10761  1FA1  3A80               	xorlw	128
 10762  1FA2  027A               	subwf	??_InsertString,w
 10763  1FA3  1D03               	skipz
 10764  1FA4  2FA7               	goto	u3645
 10765  1FA5  0826               	movf	InsertString@counti,w
 10766  1FA6  0228               	subwf	InsertString@i,w
 10767  1FA7                     u3645:	
 10768  1FA7  1C03               	btfss	3,0
 10769  1FA8  2F70               	goto	l3592
 10770  1FA9                     l3594:	
 10771                           
 10772                           ;main.c: 87:     return index;
 10773  1FA9  0020               	movlb	0	; select bank0
 10774  1FAA  0823               	movf	InsertString@index+1,w
 10775  1FAB  00A1               	movwf	?_InsertString+1
 10776  1FAC  0822               	movf	InsertString@index,w
 10777  1FAD  00A0               	movwf	?_InsertString
 10778  1FAE  0008               	return
 10779  1FAF                     __end_of_InsertString:	
 10780                           
 10781                           	psect	text26
 10782  11F9                     __ptext26:	
 10783 ;; *************** function _Insert *****************
 10784 ;; Defined at:
 10785 ;;		line 55 in file "main.c"
 10786 ;; Parameters:    Size  Location     Type
 10787 ;;  dest            1    wreg     PTR unsigned char 
 10788 ;;		 -> message_end(73), message_start(70), 
 10789 ;;  src             1    0[COMMON] unsigned char 
 10790 ;;  index           2    1[COMMON] int 
 10791 ;;  destLimit       2    3[COMMON] int 
 10792 ;; Auto vars:     Size  Location     Type
 10793 ;;  dest            1    9[COMMON] PTR unsigned char 
 10794 ;;		 -> message_end(73), message_start(70), 
 10795 ;;  current         1    8[COMMON] unsigned char 
 10796 ;;  temp            1    7[COMMON] unsigned char 
 10797 ;; Return value:  Size  Location     Type
 10798 ;;                  2    0[COMMON] int 
 10799 ;; Registers used:
 10800 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10801 ;; Tracked objects:
 10802 ;;		On entry : 1D/2
 10803 ;;		On exit  : 0/0
 10804 ;;		Unchanged: 0/0
 10805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10806 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10807 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10808 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10809 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10810 ;;Total ram usage:       10 bytes
 10811 ;; Hardware stack levels used:    1
 10812 ;; Hardware stack levels required when called:    3
 10813 ;; This function calls:
 10814 ;;		Nothing
 10815 ;; This function is called by:
 10816 ;;		_InsertString
 10817 ;;		_main
 10818 ;; This function uses a non-reentrant model
 10819 ;;
 10820                           
 10821                           
 10822                           ;psect for function _Insert
 10823  11F9                     _Insert:	
 10824                           
 10825                           ;incstack = 0
 10826                           ; Regs used in _Insert: [wreg+fsr1l+fsr1h+status,2+status,0]
 10827                           ;Insert@dest stored from wreg
 10828  11F9  00F9               	movwf	Insert@dest
 10829                           
 10830                           ;main.c: 58:     temp = dest[index];
 10831  11FA  0871               	movf	Insert@index,w
 10832  11FB  0779               	addwf	Insert@dest,w
 10833  11FC  00F5               	movwf	??_Insert
 10834  11FD  0875               	movf	??_Insert,w
 10835  11FE  0086               	movwf	6
 10836  11FF  3003               	movlw	3	; select bank6/7
 10837  1200  0087               	movwf	7
 10838  1201  0801               	movf	1,w
 10839  1202  00F6               	movwf	??_Insert+1
 10840  1203  0876               	movf	??_Insert+1,w
 10841  1204  00F7               	movwf	Insert@temp
 10842                           
 10843                           ;main.c: 59:     dest[index] = src;
 10844  1205  0870               	movf	Insert@src,w
 10845  1206  00F5               	movwf	??_Insert
 10846  1207  0871               	movf	Insert@index,w
 10847  1208  0779               	addwf	Insert@dest,w
 10848  1209  00F6               	movwf	??_Insert+1
 10849  120A  0876               	movf	??_Insert+1,w
 10850  120B  0086               	movwf	6
 10851  120C  3003               	movlw	3	; select bank6/7
 10852  120D  0087               	movwf	7
 10853  120E  0875               	movf	??_Insert,w
 10854  120F  0081               	movwf	1
 10855                           
 10856                           ;main.c: 60:     if (dest[index + 1] == '\0')
 10857  1210  0871               	movf	Insert@index,w
 10858  1211  0779               	addwf	Insert@dest,w
 10859  1212  00F5               	movwf	??_Insert
 10860  1213  0A75               	incf	??_Insert,w
 10861  1214  0086               	movwf	6
 10862  1215  3003               	movlw	3	; select bank6/7
 10863  1216  0087               	movwf	7
 10864  1217  0801               	movf	1,w
 10865  1218  1D03               	btfss	3,2
 10866  1219  2A21               	goto	l3418
 10867                           
 10868                           ;main.c: 61:     {;main.c: 62:         return index + 1;
 10869  121A  0871               	movf	Insert@index,w
 10870  121B  3E01               	addlw	1
 10871  121C  00F0               	movwf	?_Insert
 10872  121D  3000               	movlw	0
 10873  121E  3D72               	addwfc	Insert@index+1,w
 10874  121F  00F1               	movwf	?_Insert+1
 10875  1220  0008               	return
 10876  1221                     l3418:	
 10877                           
 10878                           ;main.c: 64:     index++;
 10879  1221  3001               	movlw	1
 10880  1222  07F1               	addwf	Insert@index,f
 10881  1223  3000               	movlw	0
 10882  1224  3DF2               	addwfc	Insert@index+1,f
 10883  1225                     l3430:	
 10884                           ;main.c: 65:     while (index < destLimit)
 10885                           
 10886                           
 10887                           ;main.c: 65:     while (index < destLimit)
 10888  1225  0872               	movf	Insert@index+1,w
 10889  1226  3A80               	xorlw	128
 10890  1227  00F5               	movwf	??_Insert
 10891  1228  0874               	movf	Insert@destLimit+1,w
 10892  1229  3A80               	xorlw	128
 10893  122A  0275               	subwf	??_Insert,w
 10894  122B  1D03               	skipz
 10895  122C  2A2F               	goto	u3395
 10896  122D  0873               	movf	Insert@destLimit,w
 10897  122E  0271               	subwf	Insert@index,w
 10898  122F                     u3395:	
 10899  122F  1803               	btfsc	3,0
 10900  1230  2A5D               	goto	l3432
 10901                           
 10902                           ;main.c: 66:     {;main.c: 67:         char current = dest[index];
 10903  1231  0871               	movf	Insert@index,w
 10904  1232  0779               	addwf	Insert@dest,w
 10905  1233  00F5               	movwf	??_Insert
 10906  1234  0875               	movf	??_Insert,w
 10907  1235  0086               	movwf	6
 10908  1236  3003               	movlw	3	; select bank6/7
 10909  1237  0087               	movwf	7
 10910  1238  0801               	movf	1,w
 10911  1239  00F6               	movwf	??_Insert+1
 10912  123A  0876               	movf	??_Insert+1,w
 10913  123B  00F8               	movwf	Insert@current
 10914                           
 10915                           ;main.c: 68:         dest[index] = temp;
 10916  123C  0877               	movf	Insert@temp,w
 10917  123D  00F5               	movwf	??_Insert
 10918  123E  0871               	movf	Insert@index,w
 10919  123F  0779               	addwf	Insert@dest,w
 10920  1240  00F6               	movwf	??_Insert+1
 10921  1241  0876               	movf	??_Insert+1,w
 10922  1242  0086               	movwf	6
 10923  1243  3003               	movlw	3	; select bank6/7
 10924  1244  0087               	movwf	7
 10925  1245  0875               	movf	??_Insert,w
 10926  1246  0081               	movwf	1
 10927                           
 10928                           ;main.c: 69:         temp = current;
 10929  1247  0878               	movf	Insert@current,w
 10930  1248  00F5               	movwf	??_Insert
 10931  1249  0875               	movf	??_Insert,w
 10932  124A  00F7               	movwf	Insert@temp
 10933                           
 10934                           ;main.c: 70:         index++;
 10935  124B  3001               	movlw	1
 10936  124C  07F1               	addwf	Insert@index,f
 10937  124D  3000               	movlw	0
 10938  124E  3DF2               	addwfc	Insert@index+1,f
 10939                           
 10940                           ;main.c: 71:         if (current == '\0')
 10941  124F  0878               	movf	Insert@current,w
 10942  1250  1D03               	btfss	3,2
 10943  1251  2A25               	goto	l3430
 10944                           
 10945                           ;main.c: 72:         {;main.c: 73:             dest[index] = current;
 10946  1252  0878               	movf	Insert@current,w
 10947  1253  00F5               	movwf	??_Insert
 10948  1254  0871               	movf	Insert@index,w
 10949  1255  0779               	addwf	Insert@dest,w
 10950  1256  00F6               	movwf	??_Insert+1
 10951  1257  0876               	movf	??_Insert+1,w
 10952  1258  0086               	movwf	6
 10953  1259  3003               	movlw	3	; select bank6/7
 10954  125A  0087               	movwf	7
 10955  125B  0875               	movf	??_Insert,w
 10956  125C  0081               	movwf	1
 10957  125D                     l3432:	
 10958                           ;main.c: 74:             break;
 10959                           
 10960                           
 10961                           ;main.c: 77:     return index;
 10962  125D  0871               	movf	Insert@index,w
 10963  125E  00F0               	movwf	?_Insert
 10964  125F  0872               	movf	Insert@index+1,w
 10965  1260  00F1               	movwf	?_Insert+1
 10966  1261  0008               	return
 10967  1262                     __end_of_Insert:	
 10968                           
 10969                           	psect	text27
 10970  1934                     __ptext27:	
 10971 ;; *************** function _InitTiming *****************
 10972 ;; Defined at:
 10973 ;;		line 11 in file "timing.c"
 10974 ;; Parameters:    Size  Location     Type
 10975 ;;		None
 10976 ;; Auto vars:     Size  Location     Type
 10977 ;;		None
 10978 ;; Return value:  Size  Location     Type
 10979 ;;                  1    wreg      void 
 10980 ;; Registers used:
 10981 ;;		wreg, status,2, status,0, pclath, cstack
 10982 ;; Tracked objects:
 10983 ;;		On entry : 1F/3
 10984 ;;		On exit  : 1F/2
 10985 ;;		Unchanged: 0/0
 10986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10990 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10991 ;;Total ram usage:        0 bytes
 10992 ;; Hardware stack levels used:    1
 10993 ;; Hardware stack levels required when called:    4
 10994 ;; This function calls:
 10995 ;;		_TMR0_SetInterruptHandler
 10996 ;; This function is called by:
 10997 ;;		_main
 10998 ;; This function uses a non-reentrant model
 10999 ;;
 11000                           
 11001                           
 11002                           ;psect for function _InitTiming
 11003  1934                     _InitTiming:	
 11004                           
 11005                           ;timing.c: 13:     (INTCONbits.GIE = 1);
 11006                           
 11007                           ;incstack = 0
 11008                           ; Regs used in _InitTiming: [wreg+status,2+status,0+pclath+cstack]
 11009  1934  178B               	bsf	11,7	;volatile
 11010                           
 11011                           ;timing.c: 14:     TMR0_SetInterruptHandler(TimerISR);
 11012  1935  303C               	movlw	low _TimerISR
 11013  1936  00F0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 11014  1937  3019               	movlw	high _TimerISR
 11015  1938  00F1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 11016  1939  3199  211B         	fcall	_TMR0_SetInterruptHandler
 11017  193B  0008               	return
 11018  193C                     __end_of_InitTiming:	
 11019                           
 11020                           	psect	text28
 11021  191B                     __ptext28:	
 11022 ;; *************** function _TMR0_SetInterruptHandler *****************
 11023 ;; Defined at:
 11024 ;;		line 125 in file "mcc_generated_files/tmr0.c"
 11025 ;; Parameters:    Size  Location     Type
 11026 ;;  InterruptHan    2    0[COMMON] PTR FTN()void 
 11027 ;;		 -> TimerISR(1), TMR0_DefaultInterruptHandler(1), 
 11028 ;; Auto vars:     Size  Location     Type
 11029 ;;		None
 11030 ;; Return value:  Size  Location     Type
 11031 ;;                  1    wreg      void 
 11032 ;; Registers used:
 11033 ;;		wreg
 11034 ;; Tracked objects:
 11035 ;;		On entry : 1D/1
 11036 ;;		On exit  : 1F/2
 11037 ;;		Unchanged: 0/0
 11038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11039 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11042 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11043 ;;Total ram usage:        2 bytes
 11044 ;; Hardware stack levels used:    1
 11045 ;; Hardware stack levels required when called:    3
 11046 ;; This function calls:
 11047 ;;		Nothing
 11048 ;; This function is called by:
 11049 ;;		_TMR0_Initialize
 11050 ;;		_InitTiming
 11051 ;; This function uses a non-reentrant model
 11052 ;;
 11053                           
 11054                           
 11055                           ;psect for function _TMR0_SetInterruptHandler
 11056  191B                     _TMR0_SetInterruptHandler:	
 11057                           
 11058                           ;mcc_generated_files/tmr0.c: 126:     TMR0_InterruptHandler = InterruptHandler;
 11059                           
 11060                           ;incstack = 0
 11061                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
 11062  191B  0871               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
 11063  191C  0022               	movlb	2	; select bank2
 11064  191D  00EC               	movwf	(_TMR0_InterruptHandler+1)^(0+256)
 11065  191E  0870               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
 11066  191F  00EB               	movwf	_TMR0_InterruptHandler^(0+256)
 11067  1920  0008               	return
 11068  1921                     __end_of_TMR0_SetInterruptHandler:	
 11069                           
 11070                           	psect	text29
 11071  1A6C                     __ptext29:	
 11072 ;; *************** function _ClearString *****************
 11073 ;; Defined at:
 11074 ;;		line 25 in file "main.c"
 11075 ;; Parameters:    Size  Location     Type
 11076 ;;  str             2    5[COMMON] PTR unsigned char 
 11077 ;;		 -> main@convertedNumber(16), GetNavData@data_type(7), message_end(73), message_start(70), 
 11078 ;; Auto vars:     Size  Location     Type
 11079 ;;  i               2   10[COMMON] int 
 11080 ;;  counti          2    8[COMMON] int 
 11081 ;; Return value:  Size  Location     Type
 11082 ;;                  1    wreg      void 
 11083 ;; Registers used:
 11084 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11085 ;; Tracked objects:
 11086 ;;		On entry : 1F/2
 11087 ;;		On exit  : 0/0
 11088 ;;		Unchanged: 0/0
 11089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11090 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11091 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11092 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11093 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11094 ;;Total ram usage:        7 bytes
 11095 ;; Hardware stack levels used:    1
 11096 ;; Hardware stack levels required when called:    4
 11097 ;; This function calls:
 11098 ;;		_strlen
 11099 ;; This function is called by:
 11100 ;;		_main
 11101 ;; This function uses a non-reentrant model
 11102 ;;
 11103                           
 11104                           
 11105                           ;psect for function _ClearString
 11106  1A6C                     _ClearString:	
 11107                           
 11108                           ;main.c: 25: void ClearString(char* str);main.c: 26: {;main.c: 27:     for (int i = 0, c
      +                          ounti = strlen(str); i < counti; i++)
 11109                           
 11110                           ;incstack = 0
 11111                           ; Regs used in _ClearString: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11112  1A6C  01FA               	clrf	ClearString@i
 11113  1A6D  01FB               	clrf	ClearString@i+1
 11114  1A6E  0876               	movf	ClearString@str+1,w
 11115  1A6F  00F1               	movwf	strlen@s+1
 11116  1A70  0875               	movf	ClearString@str,w
 11117  1A71  00F0               	movwf	strlen@s
 11118  1A72  3199  21A2  319A   	fcall	_strlen
 11119  1A75  0871               	movf	?_strlen+1,w
 11120  1A76  00F9               	movwf	ClearString@counti+1
 11121  1A77  0870               	movf	?_strlen,w
 11122  1A78  00F8               	movwf	ClearString@counti
 11123  1A79                     l4462:	
 11124  1A79  087B               	movf	ClearString@i+1,w
 11125  1A7A  3A80               	xorlw	128
 11126  1A7B  00F7               	movwf	??_ClearString
 11127  1A7C  0879               	movf	ClearString@counti+1,w
 11128  1A7D  3A80               	xorlw	128
 11129  1A7E  0277               	subwf	??_ClearString,w
 11130  1A7F  1D03               	skipz
 11131  1A80  2A83               	goto	u4915
 11132  1A81  0878               	movf	ClearString@counti,w
 11133  1A82  027A               	subwf	ClearString@i,w
 11134  1A83                     u4915:	
 11135  1A83  1803               	btfsc	3,0
 11136  1A84  0008               	return
 11137                           
 11138                           ;main.c: 28:     {;main.c: 29:         str[i] = '\0';
 11139  1A85  087A               	movf	ClearString@i,w
 11140  1A86  0775               	addwf	ClearString@str,w
 11141  1A87  0086               	movwf	6
 11142  1A88  087B               	movf	ClearString@i+1,w
 11143  1A89  3D76               	addwfc	ClearString@str+1,w
 11144  1A8A  0087               	movwf	7
 11145  1A8B  0181               	clrf	1
 11146                           
 11147                           ;main.c: 30:     }
 11148  1A8C  3001               	movlw	1
 11149  1A8D  07FA               	addwf	ClearString@i,f
 11150  1A8E  3000               	movlw	0
 11151  1A8F  3DFB               	addwfc	ClearString@i+1,f
 11152  1A90  2A79               	goto	l4462
 11153  1A91                     __end_of_ClearString:	
 11154                           
 11155                           	psect	text30
 11156  19A2                     __ptext30:	
 11157 ;; *************** function _strlen *****************
 11158 ;; Defined at:
 11159 ;;		line 12 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\strlen.c"
 11160 ;; Parameters:    Size  Location     Type
 11161 ;;  s               2    0[COMMON] PTR const unsigned char 
 11162 ;;		 -> STR_12(3), checksum(6), STR_11(6), main@convertedNumber(16), 
 11163 ;;		 -> GetNavData@strId(12), STR_10(5), STR_7(14), GetNavData@data_type(7), 
 11164 ;;		 -> STR_6(26), STR_5(26), STR_4(26), STR_3(26), 
 11165 ;;		 -> STR_2(26), STR_1(26), message_end(73), message_start(70), 
 11166 ;; Auto vars:     Size  Location     Type
 11167 ;;  a               2    3[COMMON] PTR const unsigned char 
 11168 ;;		 -> STR_12(3), checksum(6), STR_11(6), main@convertedNumber(16), 
 11169 ;;		 -> GetNavData@strId(12), STR_10(5), STR_7(14), GetNavData@data_type(7), 
 11170 ;;		 -> STR_6(26), STR_5(26), STR_4(26), STR_3(26), 
 11171 ;;		 -> STR_2(26), STR_1(26), message_end(73), message_start(70), 
 11172 ;; Return value:  Size  Location     Type
 11173 ;;                  2    0[COMMON] unsigned int 
 11174 ;; Registers used:
 11175 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 11176 ;; Tracked objects:
 11177 ;;		On entry : 1D/2
 11178 ;;		On exit  : 1D/0
 11179 ;;		Unchanged: 1D/0
 11180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11181 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11182 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11183 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11184 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11185 ;;Total ram usage:        5 bytes
 11186 ;; Hardware stack levels used:    1
 11187 ;; Hardware stack levels required when called:    3
 11188 ;; This function calls:
 11189 ;;		Nothing
 11190 ;; This function is called by:
 11191 ;;		_ClearString
 11192 ;;		_InsertString
 11193 ;;		_ReverseString
 11194 ;;		_main
 11195 ;;		_crc16
 11196 ;;		_TransmitString
 11197 ;; This function uses a non-reentrant model
 11198 ;;
 11199                           
 11200                           
 11201                           ;psect for function _strlen
 11202  19A2                     _strlen:	
 11203                           
 11204                           ;incstack = 0
 11205                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
 11206  19A2  0871               	movf	strlen@s+1,w
 11207  19A3  00F4               	movwf	strlen@a+1
 11208  19A4  0870               	movf	strlen@s,w
 11209  19A5  00F3               	movwf	strlen@a
 11210  19A6                     l3188:	
 11211  19A6  0870               	movf	strlen@s,w
 11212  19A7  0084               	movwf	4
 11213  19A8  0871               	movf	strlen@s+1,w
 11214  19A9  0085               	movwf	5
 11215  19AA  0012               	moviw fsr0++
 11216  19AB  1903               	btfsc	3,2
 11217  19AC  29B2               	goto	l3190
 11218  19AD  3001               	movlw	1
 11219  19AE  07F0               	addwf	strlen@s,f
 11220  19AF  3000               	movlw	0
 11221  19B0  3DF1               	addwfc	strlen@s+1,f
 11222  19B1  29A6               	goto	l3188
 11223  19B2                     l3190:	
 11224  19B2  0873               	movf	strlen@a,w
 11225  19B3  0270               	subwf	strlen@s,w
 11226  19B4  00F0               	movwf	?_strlen
 11227  19B5  0874               	movf	strlen@a+1,w
 11228  19B6  3B71               	subwfb	strlen@s+1,w
 11229  19B7  00F1               	movwf	?_strlen+1
 11230  19B8  0008               	return
 11231  19B9                     __end_of_strlen:	
 11232                           
 11233                           	psect	text31
 11234  1191                     __ptext31:	
 11235 ;; *************** function _BME280_Init *****************
 11236 ;; Defined at:
 11237 ;;		line 76 in file "bme280_i2c.c"
 11238 ;; Parameters:    Size  Location     Type
 11239 ;;		None
 11240 ;; Auto vars:     Size  Location     Type
 11241 ;;  settings_sel    1   21[BANK1 ] unsigned char 
 11242 ;;  rslt            1   22[BANK1 ] char 
 11243 ;; Return value:  Size  Location     Type
 11244 ;;                  1    wreg      void 
 11245 ;; Registers used:
 11246 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11247 ;; Tracked objects:
 11248 ;;		On entry : 1F/2
 11249 ;;		On exit  : 0/0
 11250 ;;		Unchanged: 0/0
 11251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11253 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11254 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11255 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 11256 ;;Total ram usage:        4 bytes
 11257 ;; Hardware stack levels used:    1
 11258 ;; Hardware stack levels required when called:   15
 11259 ;; This function calls:
 11260 ;;		_DebugAlert
 11261 ;;		_I2C_Init
 11262 ;;		_bme280_init
 11263 ;;		_bme280_set_sensor_mode
 11264 ;;		_bme280_set_sensor_settings
 11265 ;; This function is called by:
 11266 ;;		_main
 11267 ;; This function uses a non-reentrant model
 11268 ;;
 11269                           
 11270                           
 11271                           ;psect for function _BME280_Init
 11272  1191                     _BME280_Init:	
 11273                           
 11274                           ;bme280_i2c.c: 78:     I2C_Init();
 11275                           
 11276                           ;incstack = 0
 11277                           ; Regs used in _BME280_Init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11278  1191  3199  2178  3191   	fcall	_I2C_Init
 11279                           
 11280                           ;bme280_i2c.c: 82:     EnvSensor.dev_id = 0x76;
 11281  1194  3076               	movlw	118
 11282  1195  0021               	movlb	1	; select bank1
 11283  1196  00B3               	movwf	??_BME280_Init^(0+128)
 11284  1197  0833               	movf	??_BME280_Init^(0+128),w
 11285  1198  0023               	movlb	3	; select bank3
 11286  1199  00B5               	movwf	(_EnvSensor^(0+384)+1)
 11287                           
 11288                           ;bme280_i2c.c: 83:     EnvSensor.intf = BME280_I2C_INTF;
 11289  119A  01B6               	clrf	(_EnvSensor^(0+384)+2)
 11290  119B  0AB6               	incf	(_EnvSensor^(0+384)+2),f
 11291                           
 11292                           ;bme280_i2c.c: 84:     EnvSensor.read = ReadEnvSensor;
 11293  119C  30E1               	movlw	low _ReadEnvSensor
 11294  119D  00B7               	movwf	(low ((_EnvSensor| (0+256)+3)))^(0+128)
 11295  119E  3006               	movlw	high _ReadEnvSensor
 11296  119F  00B8               	movwf	((low ((_EnvSensor| (0+256)+3)))^(0+128)+1)
 11297                           
 11298                           ;bme280_i2c.c: 85:     EnvSensor.write = WriteEnvSensor;
 11299  11A0  3017               	movlw	low _WriteEnvSensor
 11300  11A1  00B9               	movwf	(low ((_EnvSensor| (0+256)+5)))^(0+128)
 11301  11A2  3014               	movlw	high _WriteEnvSensor
 11302  11A3  00BA               	movwf	((low ((_EnvSensor| (0+256)+5)))^(0+128)+1)
 11303                           
 11304                           ;bme280_i2c.c: 86:     EnvSensor.delay_ms = Sleep;
 11305  11A4  300D               	movlw	low _Sleep
 11306  11A5  00BB               	movwf	(low ((_EnvSensor| (0+256)+7)))^(0+128)
 11307  11A6  301B               	movlw	high _Sleep
 11308  11A7  00BC               	movwf	((low ((_EnvSensor| (0+256)+7)))^(0+128)+1)
 11309                           
 11310                           ;bme280_i2c.c: 88:     rslt = bme280_init(&EnvSensor);
 11311  11A8  30B4               	movlw	(low (_EnvSensor| (0+256)))& (0+255)
 11312  11A9  3191  2129  3191   	fcall	_bme280_init
 11313  11AC  0021               	movlb	1	; select bank1
 11314  11AD  00B3               	movwf	??_BME280_Init^(0+128)
 11315  11AE  0833               	movf	??_BME280_Init^(0+128),w
 11316  11AF  00B6               	movwf	BME280_Init@rslt^(0+128)
 11317                           
 11318                           ;bme280_i2c.c: 90:     if (rslt == 0){
 11319  11B0  0836               	movf	BME280_Init@rslt^(0+128),w
 11320  11B1  1D03               	btfss	3,2
 11321  11B2  29E7               	goto	l4552
 11322                           
 11323                           ;bme280_i2c.c: 91:         uint8_t settings_sel;;bme280_i2c.c: 94:         EnvSensor.set
      +                          tings.osr_h = 0x01;
 11324  11B3  0023               	movlb	3	; select bank3
 11325  11B4  01E4               	clrf	(_EnvSensor^(0+384)+48)
 11326  11B5  0AE4               	incf	(_EnvSensor^(0+384)+48),f
 11327                           
 11328                           ;bme280_i2c.c: 95:         EnvSensor.settings.osr_p = 0x05;
 11329  11B6  3005               	movlw	5
 11330  11B7  0021               	movlb	1	; select bank1
 11331  11B8  00B3               	movwf	??_BME280_Init^(0+128)
 11332  11B9  0833               	movf	??_BME280_Init^(0+128),w
 11333  11BA  0023               	movlb	3	; select bank3
 11334  11BB  00E2               	movwf	(_EnvSensor^(0+384)+46)
 11335                           
 11336                           ;bme280_i2c.c: 96:         EnvSensor.settings.osr_t = 0x02;
 11337  11BC  3002               	movlw	2
 11338  11BD  0021               	movlb	1	; select bank1
 11339  11BE  00B3               	movwf	??_BME280_Init^(0+128)
 11340  11BF  0833               	movf	??_BME280_Init^(0+128),w
 11341  11C0  0023               	movlb	3	; select bank3
 11342  11C1  00E3               	movwf	(_EnvSensor^(0+384)+47)
 11343                           
 11344                           ;bme280_i2c.c: 97:         EnvSensor.settings.filter = (0x04);
 11345  11C2  3004               	movlw	4
 11346  11C3  0021               	movlb	1	; select bank1
 11347  11C4  00B3               	movwf	??_BME280_Init^(0+128)
 11348  11C5  0833               	movf	??_BME280_Init^(0+128),w
 11349  11C6  0023               	movlb	3	; select bank3
 11350  11C7  00E5               	movwf	(_EnvSensor^(0+384)+49)
 11351                           
 11352                           ;bme280_i2c.c: 98:         EnvSensor.settings.standby_time = (0x01);
 11353  11C8  01E6               	clrf	(_EnvSensor^(0+384)+50)
 11354  11C9  0AE6               	incf	(_EnvSensor^(0+384)+50),f
 11355                           
 11356                           ;bme280_i2c.c: 100:         settings_sel = 1;
 11357  11CA  0021               	movlb	1	; select bank1
 11358  11CB  01B5               	clrf	BME280_Init@settings_sel^(0+128)
 11359  11CC  0AB5               	incf	BME280_Init@settings_sel^(0+128),f
 11360                           
 11361                           ;bme280_i2c.c: 101:         settings_sel |= 1 << 1;
 11362  11CD  14B5               	bsf	BME280_Init@settings_sel^(0+128),1
 11363                           
 11364                           ;bme280_i2c.c: 102:         settings_sel |= 1 << 2;
 11365  11CE  1535               	bsf	BME280_Init@settings_sel^(0+128),2
 11366                           
 11367                           ;bme280_i2c.c: 103:         settings_sel |= 1 << 4;
 11368  11CF  1635               	bsf	BME280_Init@settings_sel^(0+128),4
 11369                           
 11370                           ;bme280_i2c.c: 104:         settings_sel |= 1 << 3;
 11371  11D0  15B5               	bsf	BME280_Init@settings_sel^(0+128),3
 11372  11D1  30B4               	movlw	(low (_EnvSensor| (0+256)))& (0+255)
 11373  11D2  00B3               	movwf	??_BME280_Init^(0+128)
 11374  11D3  0833               	movf	??_BME280_Init^(0+128),w
 11375  11D4  00AD               	movwf	bme280_set_sensor_settings@dev^(0+128)
 11376  11D5  0835               	movf	BME280_Init@settings_sel^(0+128),w
 11377  11D6  3192  22CE  3191   	fcall	_bme280_set_sensor_settings
 11378                           
 11379                           ;bme280_i2c.c: 106:         rslt = bme280_set_sensor_mode(0x03, &EnvSensor);
 11380  11D9  30B4               	movlw	(low (_EnvSensor| (0+256)))& (0+255)
 11381  11DA  00B3               	movwf	??_BME280_Init^(0+128)
 11382  11DB  0833               	movf	??_BME280_Init^(0+128),w
 11383  11DC  00AD               	movwf	bme280_set_sensor_mode@dev^(0+128)
 11384  11DD  3003               	movlw	3
 11385  11DE  3188  2002  3191   	fcall	_bme280_set_sensor_mode
 11386  11E1  00B4               	movwf	(??_BME280_Init+1)^(0+128)
 11387  11E2  0834               	movf	(??_BME280_Init+1)^(0+128),w
 11388  11E3  00B6               	movwf	BME280_Init@rslt^(0+128)
 11389                           
 11390                           ;bme280_i2c.c: 108:         if (rslt == 0)
 11391  11E4  0836               	movf	BME280_Init@rslt^(0+128),w
 11392  11E5  1903               	btfsc	3,2
 11393  11E6  0008               	return
 11394  11E7                     l4552:	
 11395                           
 11396                           ;bme280_i2c.c: 114:     DebugAlert(200, 200, 3);;
 11397  11E7  30C8               	movlw	200
 11398  11E8  0020               	movlb	0	; select bank0
 11399  11E9  00A0               	movwf	DebugAlert@delay_high
 11400  11EA  3000               	movlw	0
 11401  11EB  00A1               	movwf	DebugAlert@delay_high+1
 11402  11EC  30C8               	movlw	200
 11403  11ED  00A2               	movwf	DebugAlert@delay_low
 11404  11EE  3000               	movlw	0
 11405  11EF  00A3               	movwf	DebugAlert@delay_low+1
 11406  11F0  3003               	movlw	3
 11407  11F1  0021               	movlb	1	; select bank1
 11408  11F2  00B3               	movwf	??_BME280_Init^(0+128)
 11409  11F3  0833               	movf	??_BME280_Init^(0+128),w
 11410  11F4  0020               	movlb	0	; select bank0
 11411  11F5  00A4               	movwf	DebugAlert@num_flashes
 11412  11F6  319B  2338         	fcall	_DebugAlert
 11413  11F8  0008               	return
 11414  11F9                     __end_of_BME280_Init:	
 11415                           
 11416                           	psect	text32
 11417  12CE                     __ptext32:	
 11418 ;; *************** function _bme280_set_sensor_settings *****************
 11419 ;; Defined at:
 11420 ;;		line 511 in file "BME280_driver/bme280.c"
 11421 ;; Parameters:    Size  Location     Type
 11422 ;;  desired_sett    1    wreg     unsigned char 
 11423 ;;  dev             1   13[BANK1 ] PTR const struct bme280_
 11424 ;;		 -> EnvSensor(51), 
 11425 ;; Auto vars:     Size  Location     Type
 11426 ;;  desired_sett    1   16[BANK1 ] unsigned char 
 11427 ;;  rslt            1   18[BANK1 ] char 
 11428 ;;  sensor_mode     1   17[BANK1 ] unsigned char 
 11429 ;; Return value:  Size  Location     Type
 11430 ;;                  1    wreg      char 
 11431 ;; Registers used:
 11432 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11433 ;; Tracked objects:
 11434 ;;		On entry : 1F/1
 11435 ;;		On exit  : 1F/1
 11436 ;;		Unchanged: 0/0
 11437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11438 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11439 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 11440 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11441 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 11442 ;;Total ram usage:        6 bytes
 11443 ;; Hardware stack levels used:    1
 11444 ;; Hardware stack levels required when called:   14
 11445 ;; This function calls:
 11446 ;;		_are_settings_changed
 11447 ;;		_bme280_get_sensor_mode
 11448 ;;		_null_ptr_check
 11449 ;;		_put_device_to_sleep
 11450 ;;		_set_filter_standby_settings
 11451 ;;		_set_osr_settings
 11452 ;; This function is called by:
 11453 ;;		_BME280_Init
 11454 ;; This function uses a non-reentrant model
 11455 ;;
 11456                           
 11457                           
 11458                           ;psect for function _bme280_set_sensor_settings
 11459  12CE                     _bme280_set_sensor_settings:	
 11460                           
 11461                           ;incstack = 0
 11462                           ; Regs used in _bme280_set_sensor_settings: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 11463                           ;bme280_set_sensor_settings@desired_settings stored from wreg
 11464  12CE  00B0               	movwf	bme280_set_sensor_settings@desired_settings^(0+128)
 11465                           
 11466                           ;BME280_driver/bme280.c: 511: int8_t bme280_set_sensor_settings(uint8_t desired_settings
      +                          , const struct bme280_dev *dev);BME280_driver/bme280.c: 512: {;BME280_driver/bme280.c: 5
      +                          13:     int8_t rslt;;BME280_driver/bme280.c: 514:     uint8_t sensor_mode;;BME280_driver
      +                          /bme280.c: 517:     rslt = null_ptr_check(dev);
 11467  12CF  082D               	movf	bme280_set_sensor_settings@dev^(0+128),w
 11468  12D0  319A  2247  3192   	fcall	_null_ptr_check
 11469  12D3  0021               	movlb	1	; select bank1
 11470  12D4  00AE               	movwf	??_bme280_set_sensor_settings^(0+128)
 11471  12D5  082E               	movf	??_bme280_set_sensor_settings^(0+128),w
 11472  12D6  00B2               	movwf	bme280_set_sensor_settings@rslt^(0+128)
 11473                           
 11474                           ;BME280_driver/bme280.c: 520:     if (rslt == 0)
 11475  12D7  0832               	movf	bme280_set_sensor_settings@rslt^(0+128),w
 11476  12D8  1D03               	btfss	3,2
 11477  12D9  2B39               	goto	l4364
 11478                           
 11479                           ;BME280_driver/bme280.c: 521:     {;BME280_driver/bme280.c: 522:         rslt = bme280_g
      +                          et_sensor_mode(&sensor_mode, dev);
 11480  12DA  082D               	movf	bme280_set_sensor_settings@dev^(0+128),w
 11481  12DB  00AE               	movwf	??_bme280_set_sensor_settings^(0+128)
 11482  12DC  082E               	movf	??_bme280_set_sensor_settings^(0+128),w
 11483  12DD  0020               	movlb	0	; select bank0
 11484  12DE  00C5               	movwf	bme280_get_sensor_mode@dev
 11485  12DF  30B1               	movlw	(low (bme280_set_sensor_settings@sensor_mode| 0))& (0+255)
 11486  12E0  319B  2363  3192   	fcall	_bme280_get_sensor_mode
 11487  12E3  0021               	movlb	1	; select bank1
 11488  12E4  00AF               	movwf	(??_bme280_set_sensor_settings+1)^(0+128)
 11489  12E5  082F               	movf	(??_bme280_set_sensor_settings+1)^(0+128),w
 11490  12E6  00B2               	movwf	bme280_set_sensor_settings@rslt^(0+128)
 11491                           
 11492                           ;BME280_driver/bme280.c: 523:         if ((rslt == 0) && (sensor_mode != 0x00))
 11493  12E7  0832               	movf	bme280_set_sensor_settings@rslt^(0+128),w
 11494  12E8  1D03               	btfss	3,2
 11495  12E9  2AF4               	goto	l4352
 11496  12EA  0831               	movf	bme280_set_sensor_settings@sensor_mode^(0+128),w
 11497  12EB  1903               	btfsc	3,2
 11498  12EC  2AF4               	goto	l4352
 11499                           
 11500                           ;BME280_driver/bme280.c: 524:         {;BME280_driver/bme280.c: 525:             rslt = 
      +                          put_device_to_sleep(dev);
 11501  12ED  082D               	movf	bme280_set_sensor_settings@dev^(0+128),w
 11502  12EE  319C  24B5  3192   	fcall	_put_device_to_sleep
 11503  12F1  00AE               	movwf	??_bme280_set_sensor_settings^(0+128)
 11504  12F2  082E               	movf	??_bme280_set_sensor_settings^(0+128),w
 11505  12F3  00B2               	movwf	bme280_set_sensor_settings@rslt^(0+128)
 11506  12F4                     l4352:	
 11507                           
 11508                           ;BME280_driver/bme280.c: 527:         if (rslt == 0)
 11509  12F4  0832               	movf	bme280_set_sensor_settings@rslt^(0+128),w
 11510  12F5  1D03               	btfss	3,2
 11511  12F6  2B39               	goto	l4364
 11512                           
 11513                           ;BME280_driver/bme280.c: 528:         {;BME280_driver/bme280.c: 532:             if (are
      +                          _settings_changed(0x07, desired_settings))
 11514  12F7  0830               	movf	bme280_set_sensor_settings@desired_settings^(0+128),w
 11515  12F8  00AE               	movwf	??_bme280_set_sensor_settings^(0+128)
 11516  12F9  082E               	movf	??_bme280_set_sensor_settings^(0+128),w
 11517  12FA  00F0               	movwf	are_settings_changed@desired_settings
 11518  12FB  3007               	movlw	7
 11519  12FC  3199  2146  3192   	fcall	_are_settings_changed
 11520  12FF  3A00               	xorlw	0
 11521  1300  1903               	skipnz
 11522  1301  2B17               	goto	l4358
 11523                           
 11524                           ;BME280_driver/bme280.c: 533:             {;BME280_driver/bme280.c: 534:                
      +                           rslt = set_osr_settings(desired_settings, &dev->settings, dev);
 11525  1302  082D               	movf	bme280_set_sensor_settings@dev^(0+128),w
 11526  1303  3E2E               	addlw	46
 11527  1304  0020               	movlb	0	; select bank0
 11528  1305  00E4               	movwf	set_osr_settings@settings
 11529  1306  3001               	movlw	1
 11530  1307  00E5               	movwf	set_osr_settings@settings+1
 11531  1308  0021               	movlb	1	; select bank1
 11532  1309  082D               	movf	bme280_set_sensor_settings@dev^(0+128),w
 11533  130A  00AE               	movwf	??_bme280_set_sensor_settings^(0+128)
 11534  130B  082E               	movf	??_bme280_set_sensor_settings^(0+128),w
 11535  130C  0020               	movlb	0	; select bank0
 11536  130D  00E6               	movwf	set_osr_settings@dev
 11537  130E  0021               	movlb	1	; select bank1
 11538  130F  0830               	movf	bme280_set_sensor_settings@desired_settings^(0+128),w
 11539  1310  319A  2291  3192   	fcall	_set_osr_settings
 11540  1313  0021               	movlb	1	; select bank1
 11541  1314  00AF               	movwf	(??_bme280_set_sensor_settings+1)^(0+128)
 11542  1315  082F               	movf	(??_bme280_set_sensor_settings+1)^(0+128),w
 11543  1316  00B2               	movwf	bme280_set_sensor_settings@rslt^(0+128)
 11544  1317                     l4358:	
 11545                           
 11546                           ;BME280_driver/bme280.c: 540:             if ((rslt == 0) && are_settings_changed(0x18, 
      +                          desired_settings))
 11547  1317  0832               	movf	bme280_set_sensor_settings@rslt^(0+128),w
 11548  1318  1D03               	btfss	3,2
 11549  1319  2B39               	goto	l4364
 11550  131A  0830               	movf	bme280_set_sensor_settings@desired_settings^(0+128),w
 11551  131B  00AE               	movwf	??_bme280_set_sensor_settings^(0+128)
 11552  131C  082E               	movf	??_bme280_set_sensor_settings^(0+128),w
 11553  131D  00F0               	movwf	are_settings_changed@desired_settings
 11554  131E  3018               	movlw	24
 11555  131F  3199  2146  3192   	fcall	_are_settings_changed
 11556  1322  3A00               	xorlw	0
 11557  1323  1903               	skipnz
 11558  1324  2B39               	goto	l4364
 11559                           
 11560                           ;BME280_driver/bme280.c: 541:             {;BME280_driver/bme280.c: 542:                
      +                           rslt = set_filter_standby_settings(desired_settings, &dev->settings, dev);
 11561  1325  082D               	movf	bme280_set_sensor_settings@dev^(0+128),w
 11562  1326  3E2E               	addlw	46
 11563  1327  0020               	movlb	0	; select bank0
 11564  1328  00DA               	movwf	set_filter_standby_settings@settings
 11565  1329  3001               	movlw	1
 11566  132A  00DB               	movwf	set_filter_standby_settings@settings+1
 11567  132B  0021               	movlb	1	; select bank1
 11568  132C  082D               	movf	bme280_set_sensor_settings@dev^(0+128),w
 11569  132D  00AE               	movwf	??_bme280_set_sensor_settings^(0+128)
 11570  132E  082E               	movf	??_bme280_set_sensor_settings^(0+128),w
 11571  132F  0020               	movlb	0	; select bank0
 11572  1330  00DC               	movwf	set_filter_standby_settings@dev
 11573  1331  0021               	movlb	1	; select bank1
 11574  1332  0830               	movf	bme280_set_sensor_settings@desired_settings^(0+128),w
 11575  1333  319D  25B1         	fcall	_set_filter_standby_settings
 11576  1335  0021               	movlb	1	; select bank1
 11577  1336  00AF               	movwf	(??_bme280_set_sensor_settings+1)^(0+128)
 11578  1337  082F               	movf	(??_bme280_set_sensor_settings+1)^(0+128),w
 11579  1338  00B2               	movwf	bme280_set_sensor_settings@rslt^(0+128)
 11580  1339                     l4364:	
 11581                           
 11582                           ;BME280_driver/bme280.c: 547:     return rslt;
 11583  1339  0832               	movf	bme280_set_sensor_settings@rslt^(0+128),w
 11584  133A  0008               	return
 11585  133B                     __end_of_bme280_set_sensor_settings:	
 11586                           
 11587                           	psect	text33
 11588  1946                     __ptext33:	
 11589 ;; *************** function _are_settings_changed *****************
 11590 ;; Defined at:
 11591 ;;		line 1404 in file "BME280_driver/bme280.c"
 11592 ;; Parameters:    Size  Location     Type
 11593 ;;  sub_settings    1    wreg     unsigned char 
 11594 ;;  desired_sett    1    0[COMMON] unsigned char 
 11595 ;; Auto vars:     Size  Location     Type
 11596 ;;  sub_settings    1    1[COMMON] unsigned char 
 11597 ;;  settings_cha    1    2[COMMON] unsigned char 
 11598 ;; Return value:  Size  Location     Type
 11599 ;;                  1    wreg      unsigned char 
 11600 ;; Registers used:
 11601 ;;		wreg, status,2, status,0
 11602 ;; Tracked objects:
 11603 ;;		On entry : 1F/1
 11604 ;;		On exit  : 1F/1
 11605 ;;		Unchanged: 1F/0
 11606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11607 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11608 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11610 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11611 ;;Total ram usage:        3 bytes
 11612 ;; Hardware stack levels used:    1
 11613 ;; Hardware stack levels required when called:    3
 11614 ;; This function calls:
 11615 ;;		Nothing
 11616 ;; This function is called by:
 11617 ;;		_bme280_set_sensor_settings
 11618 ;; This function uses a non-reentrant model
 11619 ;;
 11620                           
 11621                           
 11622                           ;psect for function _are_settings_changed
 11623  1946                     _are_settings_changed:	
 11624                           
 11625                           ;incstack = 0
 11626                           ; Regs used in _are_settings_changed: [wreg+status,2+status,0]
 11627                           ;are_settings_changed@sub_settings stored from wreg
 11628  1946  00F1               	movwf	are_settings_changed@sub_settings
 11629                           
 11630                           ;BME280_driver/bme280.c: 1408:     if (sub_settings & desired_settings)
 11631  1947  0871               	movf	are_settings_changed@sub_settings,w
 11632  1948  0570               	andwf	are_settings_changed@desired_settings,w
 11633  1949  1903               	btfsc	3,2
 11634  194A  294E               	goto	l4208
 11635                           
 11636                           ;BME280_driver/bme280.c: 1409:     {;BME280_driver/bme280.c: 1411:         settings_chan
      +                          ged = 1;
 11637  194B  01F2               	clrf	are_settings_changed@settings_changed
 11638  194C  0AF2               	incf	are_settings_changed@settings_changed,f
 11639                           
 11640                           ;BME280_driver/bme280.c: 1412:     }
 11641  194D  294F               	goto	l4210
 11642  194E                     l4208:	
 11643                           
 11644                           ;BME280_driver/bme280.c: 1414:     {;BME280_driver/bme280.c: 1416:         settings_chan
      +                          ged = 0;
 11645  194E  01F2               	clrf	are_settings_changed@settings_changed
 11646  194F                     l4210:	
 11647                           
 11648                           ;BME280_driver/bme280.c: 1419:     return settings_changed;
 11649  194F  0872               	movf	are_settings_changed@settings_changed,w
 11650  1950  0008               	return
 11651  1951                     __end_of_are_settings_changed:	
 11652                           
 11653                           	psect	text34
 11654  0802                     __ptext34:	
 11655 ;; *************** function _bme280_set_sensor_mode *****************
 11656 ;; Defined at:
 11657 ;;		line 578 in file "BME280_driver/bme280.c"
 11658 ;; Parameters:    Size  Location     Type
 11659 ;;  sensor_mode     1    wreg     unsigned char 
 11660 ;;  dev             1   13[BANK1 ] PTR const struct bme280_
 11661 ;;		 -> EnvSensor(51), 
 11662 ;; Auto vars:     Size  Location     Type
 11663 ;;  sensor_mode     1   16[BANK1 ] unsigned char 
 11664 ;;  rslt            1   18[BANK1 ] char 
 11665 ;;  last_set_mod    1   17[BANK1 ] unsigned char 
 11666 ;; Return value:  Size  Location     Type
 11667 ;;                  1    wreg      char 
 11668 ;; Registers used:
 11669 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11670 ;; Tracked objects:
 11671 ;;		On entry : 1F/1
 11672 ;;		On exit  : 1F/1
 11673 ;;		Unchanged: 0/0
 11674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11675 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11676 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 11677 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11678 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 11679 ;;Total ram usage:        6 bytes
 11680 ;; Hardware stack levels used:    1
 11681 ;; Hardware stack levels required when called:   14
 11682 ;; This function calls:
 11683 ;;		_bme280_get_sensor_mode
 11684 ;;		_null_ptr_check
 11685 ;;		_put_device_to_sleep
 11686 ;;		_write_power_mode
 11687 ;; This function is called by:
 11688 ;;		_BME280_Init
 11689 ;; This function uses a non-reentrant model
 11690 ;;
 11691                           
 11692                           
 11693                           ;psect for function _bme280_set_sensor_mode
 11694  0802                     _bme280_set_sensor_mode:	
 11695                           
 11696                           ;incstack = 0
 11697                           ; Regs used in _bme280_set_sensor_mode: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
 11698                           ;bme280_set_sensor_mode@sensor_mode stored from wreg
 11699  0802  00B0               	movwf	bme280_set_sensor_mode@sensor_mode^(0+128)
 11700                           
 11701                           ;BME280_driver/bme280.c: 578: int8_t bme280_set_sensor_mode(uint8_t sensor_mode, const s
      +                          truct bme280_dev *dev);BME280_driver/bme280.c: 579: {;BME280_driver/bme280.c: 580:     i
      +                          nt8_t rslt;;BME280_driver/bme280.c: 581:     uint8_t last_set_mode;;BME280_driver/bme280
      +                          .c: 584:     rslt = null_ptr_check(dev);
 11702  0803  082D               	movf	bme280_set_sensor_mode@dev^(0+128),w
 11703  0804  319A  2247  3188   	fcall	_null_ptr_check
 11704  0807  0021               	movlb	1	; select bank1
 11705  0808  00AE               	movwf	??_bme280_set_sensor_mode^(0+128)
 11706  0809  082E               	movf	??_bme280_set_sensor_mode^(0+128),w
 11707  080A  00B2               	movwf	bme280_set_sensor_mode@rslt^(0+128)
 11708                           
 11709                           ;BME280_driver/bme280.c: 585:     if (rslt == 0)
 11710  080B  0832               	movf	bme280_set_sensor_mode@rslt^(0+128),w
 11711  080C  1D03               	btfss	3,2
 11712  080D  2838               	goto	l4384
 11713                           
 11714                           ;BME280_driver/bme280.c: 586:     {;BME280_driver/bme280.c: 587:         rslt = bme280_g
      +                          et_sensor_mode(&last_set_mode, dev);
 11715  080E  082D               	movf	bme280_set_sensor_mode@dev^(0+128),w
 11716  080F  00AE               	movwf	??_bme280_set_sensor_mode^(0+128)
 11717  0810  082E               	movf	??_bme280_set_sensor_mode^(0+128),w
 11718  0811  0020               	movlb	0	; select bank0
 11719  0812  00C5               	movwf	bme280_get_sensor_mode@dev
 11720  0813  30B1               	movlw	(low (bme280_set_sensor_mode@last_set_mode| 0))& (0+255)
 11721  0814  319B  2363  3188   	fcall	_bme280_get_sensor_mode
 11722  0817  0021               	movlb	1	; select bank1
 11723  0818  00AF               	movwf	(??_bme280_set_sensor_mode+1)^(0+128)
 11724  0819  082F               	movf	(??_bme280_set_sensor_mode+1)^(0+128),w
 11725  081A  00B2               	movwf	bme280_set_sensor_mode@rslt^(0+128)
 11726                           
 11727                           ;BME280_driver/bme280.c: 592:         if ((rslt == 0) && (last_set_mode != 0x00))
 11728  081B  0832               	movf	bme280_set_sensor_mode@rslt^(0+128),w
 11729  081C  1D03               	btfss	3,2
 11730  081D  2828               	goto	l4380
 11731  081E  0831               	movf	bme280_set_sensor_mode@last_set_mode^(0+128),w
 11732  081F  1903               	btfsc	3,2
 11733  0820  2828               	goto	l4380
 11734                           
 11735                           ;BME280_driver/bme280.c: 593:         {;BME280_driver/bme280.c: 594:             rslt = 
      +                          put_device_to_sleep(dev);
 11736  0821  082D               	movf	bme280_set_sensor_mode@dev^(0+128),w
 11737  0822  319C  24B5  3188   	fcall	_put_device_to_sleep
 11738  0825  00AE               	movwf	??_bme280_set_sensor_mode^(0+128)
 11739  0826  082E               	movf	??_bme280_set_sensor_mode^(0+128),w
 11740  0827  00B2               	movwf	bme280_set_sensor_mode@rslt^(0+128)
 11741  0828                     l4380:	
 11742                           
 11743                           ;BME280_driver/bme280.c: 598:         if (rslt == 0)
 11744  0828  0832               	movf	bme280_set_sensor_mode@rslt^(0+128),w
 11745  0829  1D03               	btfss	3,2
 11746  082A  2838               	goto	l4384
 11747                           
 11748                           ;BME280_driver/bme280.c: 599:         {;BME280_driver/bme280.c: 600:             rslt = 
      +                          write_power_mode(sensor_mode, dev);
 11749  082B  082D               	movf	bme280_set_sensor_mode@dev^(0+128),w
 11750  082C  00AE               	movwf	??_bme280_set_sensor_mode^(0+128)
 11751  082D  082E               	movf	??_bme280_set_sensor_mode^(0+128),w
 11752  082E  0020               	movlb	0	; select bank0
 11753  082F  00DA               	movwf	write_power_mode@dev
 11754  0830  0021               	movlb	1	; select bank1
 11755  0831  0830               	movf	bme280_set_sensor_mode@sensor_mode^(0+128),w
 11756  0832  319C  2443         	fcall	_write_power_mode
 11757  0834  0021               	movlb	1	; select bank1
 11758  0835  00AF               	movwf	(??_bme280_set_sensor_mode+1)^(0+128)
 11759  0836  082F               	movf	(??_bme280_set_sensor_mode+1)^(0+128),w
 11760  0837  00B2               	movwf	bme280_set_sensor_mode@rslt^(0+128)
 11761  0838                     l4384:	
 11762                           
 11763                           ;BME280_driver/bme280.c: 604:     return rslt;
 11764  0838  0832               	movf	bme280_set_sensor_mode@rslt^(0+128),w
 11765  0839  0008               	return
 11766  083A                     __end_of_bme280_set_sensor_mode:	
 11767                           
 11768                           	psect	text35
 11769  1C43                     __ptext35:	
 11770 ;; *************** function _write_power_mode *****************
 11771 ;; Defined at:
 11772 ;;		line 941 in file "BME280_driver/bme280.c"
 11773 ;; Parameters:    Size  Location     Type
 11774 ;;  sensor_mode     1    wreg     unsigned char 
 11775 ;;  dev             1   58[BANK0 ] PTR const struct bme280_
 11776 ;;		 -> EnvSensor(51), 
 11777 ;; Auto vars:     Size  Location     Type
 11778 ;;  sensor_mode     1   62[BANK0 ] unsigned char 
 11779 ;;  sensor_mode_    1   65[BANK0 ] unsigned char 
 11780 ;;  reg_addr        1   64[BANK0 ] unsigned char 
 11781 ;;  rslt            1   63[BANK0 ] char 
 11782 ;; Return value:  Size  Location     Type
 11783 ;;                  1    wreg      char 
 11784 ;; Registers used:
 11785 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11786 ;; Tracked objects:
 11787 ;;		On entry : 1F/1
 11788 ;;		On exit  : 1F/0
 11789 ;;		Unchanged: 0/0
 11790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11791 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11792 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11793 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11794 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11795 ;;Total ram usage:        8 bytes
 11796 ;; Hardware stack levels used:    1
 11797 ;; Hardware stack levels required when called:   10
 11798 ;; This function calls:
 11799 ;;		_bme280_get_regs
 11800 ;;		_bme280_set_regs
 11801 ;; This function is called by:
 11802 ;;		_bme280_set_sensor_mode
 11803 ;; This function uses a non-reentrant model
 11804 ;;
 11805                           
 11806                           
 11807                           ;psect for function _write_power_mode
 11808  1C43                     _write_power_mode:	
 11809                           
 11810                           ;incstack = 0
 11811                           ; Regs used in _write_power_mode: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11812                           ;write_power_mode@sensor_mode stored from wreg
 11813  1C43  0020               	movlb	0	; select bank0
 11814  1C44  00DE               	movwf	write_power_mode@sensor_mode
 11815                           
 11816                           ;BME280_driver/bme280.c: 941: static int8_t write_power_mode(uint8_t sensor_mode, const 
      +                          struct bme280_dev *dev);BME280_driver/bme280.c: 942: {;BME280_driver/bme280.c: 943:     
      +                          int8_t rslt;;BME280_driver/bme280.c: 944:     uint8_t reg_addr = 0xF4;
 11817  1C45  30F4               	movlw	244
 11818  1C46  00DB               	movwf	??_write_power_mode
 11819  1C47  085B               	movf	??_write_power_mode,w
 11820  1C48  00E0               	movwf	write_power_mode@reg_addr
 11821                           
 11822                           ;BME280_driver/bme280.c: 947:     uint8_t sensor_mode_reg_val;;BME280_driver/bme280.c: 9
      +                          50:     rslt = bme280_get_regs(reg_addr, &sensor_mode_reg_val, 1, dev);
 11823  1C49  3061               	movlw	low write_power_mode@sensor_mode_reg_val
 11824  1C4A  00BC               	movwf	bme280_get_regs@reg_data
 11825  1C4B  3000               	movlw	high write_power_mode@sensor_mode_reg_val
 11826  1C4C  00BD               	movwf	bme280_get_regs@reg_data+1
 11827  1C4D  3001               	movlw	1
 11828  1C4E  00BE               	movwf	bme280_get_regs@len
 11829  1C4F  3000               	movlw	0
 11830  1C50  00BF               	movwf	bme280_get_regs@len+1
 11831  1C51  085A               	movf	write_power_mode@dev,w
 11832  1C52  00DB               	movwf	??_write_power_mode
 11833  1C53  085B               	movf	??_write_power_mode,w
 11834  1C54  00C0               	movwf	bme280_get_regs@dev
 11835  1C55  0860               	movf	write_power_mode@reg_addr,w
 11836  1C56  319D  256F  319C   	fcall	_bme280_get_regs
 11837  1C59  00DC               	movwf	??_write_power_mode+1
 11838  1C5A  085C               	movf	??_write_power_mode+1,w
 11839  1C5B  00DF               	movwf	write_power_mode@rslt
 11840                           
 11841                           ;BME280_driver/bme280.c: 953:     if (rslt == 0)
 11842  1C5C  085F               	movf	write_power_mode@rslt,w
 11843  1C5D  1D03               	btfss	3,2
 11844  1C5E  2C78               	goto	l4224
 11845                           
 11846                           ;BME280_driver/bme280.c: 954:     {;BME280_driver/bme280.c: 955:         sensor_mode_reg
      +                          _val = ((sensor_mode_reg_val & ~( 0x03)) | (sensor_mode & 0x03));
 11847  1C5F  3003               	movlw	3
 11848  1C60  055E               	andwf	write_power_mode@sensor_mode,w
 11849  1C61  00DB               	movwf	??_write_power_mode
 11850  1C62  0861               	movf	write_power_mode@sensor_mode_reg_val,w
 11851  1C63  39FC               	andlw	252
 11852  1C64  045B               	iorwf	??_write_power_mode,w
 11853  1C65  00DC               	movwf	??_write_power_mode+1
 11854  1C66  085C               	movf	??_write_power_mode+1,w
 11855  1C67  00E1               	movwf	write_power_mode@sensor_mode_reg_val
 11856                           
 11857                           ;BME280_driver/bme280.c: 958:         rslt = bme280_set_regs(&reg_addr, &sensor_mode_reg
      +                          _val, 1, dev);
 11858  1C68  3061               	movlw	(low (write_power_mode@sensor_mode_reg_val| 0))& (0+255)
 11859  1C69  00DB               	movwf	??_write_power_mode
 11860  1C6A  085B               	movf	??_write_power_mode,w
 11861  1C6B  00BB               	movwf	bme280_set_regs@reg_data
 11862  1C6C  01BC               	clrf	bme280_set_regs@len
 11863  1C6D  0ABC               	incf	bme280_set_regs@len,f
 11864  1C6E  085A               	movf	write_power_mode@dev,w
 11865  1C6F  00DC               	movwf	??_write_power_mode+1
 11866  1C70  085C               	movf	??_write_power_mode+1,w
 11867  1C71  00BD               	movwf	bme280_set_regs@dev
 11868  1C72  3060               	movlw	(low (write_power_mode@reg_addr| 0))& (0+255)
 11869  1C73  3196  261F         	fcall	_bme280_set_regs
 11870  1C75  00DD               	movwf	??_write_power_mode+2
 11871  1C76  085D               	movf	??_write_power_mode+2,w
 11872  1C77  00DF               	movwf	write_power_mode@rslt
 11873  1C78                     l4224:	
 11874                           
 11875                           ;BME280_driver/bme280.c: 961:     return rslt;
 11876  1C78  085F               	movf	write_power_mode@rslt,w
 11877  1C79  0008               	return
 11878  1C7A                     __end_of_write_power_mode:	
 11879                           
 11880                           	psect	text36
 11881  1CB5                     __ptext36:	
 11882 ;; *************** function _put_device_to_sleep *****************
 11883 ;; Defined at:
 11884 ;;		line 967 in file "BME280_driver/bme280.c"
 11885 ;; Parameters:    Size  Location     Type
 11886 ;;  dev             1    wreg     PTR const struct bme280_
 11887 ;;		 -> EnvSensor(51), 
 11888 ;; Auto vars:     Size  Location     Type
 11889 ;;  dev             1    7[BANK1 ] PTR const struct bme280_
 11890 ;;		 -> EnvSensor(51), 
 11891 ;;  settings        5    8[BANK1 ] struct bme280_settings
 11892 ;;  reg_data        4    2[BANK1 ] unsigned char [4]
 11893 ;;  rslt            1    6[BANK1 ] char 
 11894 ;; Return value:  Size  Location     Type
 11895 ;;                  1    wreg      char 
 11896 ;; Registers used:
 11897 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11898 ;; Tracked objects:
 11899 ;;		On entry : 1F/1
 11900 ;;		On exit  : 1F/1
 11901 ;;		Unchanged: 0/0
 11902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11903 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11904 ;;      Locals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0
 11905 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11906 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
 11907 ;;Total ram usage:       13 bytes
 11908 ;; Hardware stack levels used:    1
 11909 ;; Hardware stack levels required when called:   13
 11910 ;; This function calls:
 11911 ;;		_bme280_get_regs
 11912 ;;		_bme280_soft_reset
 11913 ;;		_parse_device_settings
 11914 ;;		_reload_device_settings
 11915 ;; This function is called by:
 11916 ;;		_bme280_set_sensor_settings
 11917 ;;		_bme280_set_sensor_mode
 11918 ;; This function uses a non-reentrant model
 11919 ;;
 11920                           
 11921                           
 11922                           ;psect for function _put_device_to_sleep
 11923  1CB5                     _put_device_to_sleep:	
 11924                           
 11925                           ;incstack = 0
 11926                           ; Regs used in _put_device_to_sleep: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11927                           ;put_device_to_sleep@dev stored from wreg
 11928  1CB5  00A7               	movwf	put_device_to_sleep@dev^(0+128)
 11929                           
 11930                           ;BME280_driver/bme280.c: 967: static int8_t put_device_to_sleep(const struct bme280_dev 
      +                          *dev);BME280_driver/bme280.c: 968: {;BME280_driver/bme280.c: 969:     int8_t rslt;;BME28
      +                          0_driver/bme280.c: 970:     uint8_t reg_data[4];;BME280_driver/bme280.c: 971:     struct
      +                           bme280_settings settings;;BME280_driver/bme280.c: 973:     rslt = bme280_get_regs(0xF2,
      +                           reg_data, 4, dev);
 11931  1CB6  30A2               	movlw	low put_device_to_sleep@reg_data
 11932  1CB7  0020               	movlb	0	; select bank0
 11933  1CB8  00BC               	movwf	bme280_get_regs@reg_data
 11934  1CB9  3000               	movlw	high put_device_to_sleep@reg_data
 11935  1CBA  00BD               	movwf	bme280_get_regs@reg_data+1
 11936  1CBB  3004               	movlw	4
 11937  1CBC  00BE               	movwf	bme280_get_regs@len
 11938  1CBD  3000               	movlw	0
 11939  1CBE  00BF               	movwf	bme280_get_regs@len+1
 11940  1CBF  0021               	movlb	1	; select bank1
 11941  1CC0  0827               	movf	put_device_to_sleep@dev^(0+128),w
 11942  1CC1  00A0               	movwf	??_put_device_to_sleep^(0+128)
 11943  1CC2  0820               	movf	??_put_device_to_sleep^(0+128),w
 11944  1CC3  0020               	movlb	0	; select bank0
 11945  1CC4  00C0               	movwf	bme280_get_regs@dev
 11946  1CC5  30F2               	movlw	242
 11947  1CC6  319D  256F  319C   	fcall	_bme280_get_regs
 11948  1CC9  0021               	movlb	1	; select bank1
 11949  1CCA  00A1               	movwf	(??_put_device_to_sleep+1)^(0+128)
 11950  1CCB  0821               	movf	(??_put_device_to_sleep+1)^(0+128),w
 11951  1CCC  00A6               	movwf	put_device_to_sleep@rslt^(0+128)
 11952                           
 11953                           ;BME280_driver/bme280.c: 974:     if (rslt == 0)
 11954  1CCD  0826               	movf	put_device_to_sleep@rslt^(0+128),w
 11955  1CCE  1D03               	btfss	3,2
 11956  1CCF  2CEF               	goto	l4198
 11957                           
 11958                           ;BME280_driver/bme280.c: 975:     {;BME280_driver/bme280.c: 976:         parse_device_se
      +                          ttings(reg_data, &settings);
 11959  1CD0  30A8               	movlw	(low (put_device_to_sleep@settings| 0))& (0+255)
 11960  1CD1  00A0               	movwf	??_put_device_to_sleep^(0+128)
 11961  1CD2  0820               	movf	??_put_device_to_sleep^(0+128),w
 11962  1CD3  00F0               	movwf	parse_device_settings@settings
 11963  1CD4  30A2               	movlw	(low (put_device_to_sleep@reg_data| 0))& (0+255)
 11964  1CD5  3190  2074  319C   	fcall	_parse_device_settings
 11965                           
 11966                           ;BME280_driver/bme280.c: 977:         rslt = bme280_soft_reset(dev);
 11967  1CD8  0827               	movf	put_device_to_sleep@dev^(0+128),w
 11968  1CD9  319C  247A  319C   	fcall	_bme280_soft_reset
 11969  1CDC  0021               	movlb	1	; select bank1
 11970  1CDD  00A0               	movwf	??_put_device_to_sleep^(0+128)
 11971  1CDE  0820               	movf	??_put_device_to_sleep^(0+128),w
 11972  1CDF  00A6               	movwf	put_device_to_sleep@rslt^(0+128)
 11973                           
 11974                           ;BME280_driver/bme280.c: 978:         if (rslt == 0)
 11975  1CE0  0826               	movf	put_device_to_sleep@rslt^(0+128),w
 11976  1CE1  1D03               	btfss	3,2
 11977  1CE2  2CEF               	goto	l4198
 11978                           
 11979                           ;BME280_driver/bme280.c: 979:         {;BME280_driver/bme280.c: 980:             rslt = 
      +                          reload_device_settings(&settings, dev);
 11980  1CE3  0827               	movf	put_device_to_sleep@dev^(0+128),w
 11981  1CE4  00A0               	movwf	??_put_device_to_sleep^(0+128)
 11982  1CE5  0820               	movf	??_put_device_to_sleep^(0+128),w
 11983  1CE6  0020               	movlb	0	; select bank0
 11984  1CE7  00EB               	movwf	reload_device_settings@dev
 11985  1CE8  30A8               	movlw	(low (put_device_to_sleep@settings| 0))& (0+255)
 11986  1CE9  319A  2224         	fcall	_reload_device_settings
 11987  1CEB  0021               	movlb	1	; select bank1
 11988  1CEC  00A1               	movwf	(??_put_device_to_sleep+1)^(0+128)
 11989  1CED  0821               	movf	(??_put_device_to_sleep+1)^(0+128),w
 11990  1CEE  00A6               	movwf	put_device_to_sleep@rslt^(0+128)
 11991  1CEF                     l4198:	
 11992                           
 11993                           ;BME280_driver/bme280.c: 984:     return rslt;
 11994  1CEF  0826               	movf	put_device_to_sleep@rslt^(0+128),w
 11995  1CF0  0008               	return
 11996  1CF1                     __end_of_put_device_to_sleep:	
 11997                           
 11998                           	psect	text37
 11999  1A24                     __ptext37:	
 12000 ;; *************** function _reload_device_settings *****************
 12001 ;; Defined at:
 12002 ;;		line 991 in file "BME280_driver/bme280.c"
 12003 ;; Parameters:    Size  Location     Type
 12004 ;;  settings        1    wreg     PTR const struct bme280_
 12005 ;;		 -> put_device_to_sleep@settings(5), 
 12006 ;;  dev             1   75[BANK0 ] PTR const struct bme280_
 12007 ;;		 -> EnvSensor(51), 
 12008 ;; Auto vars:     Size  Location     Type
 12009 ;;  settings        1   78[BANK0 ] PTR const struct bme280_
 12010 ;;		 -> put_device_to_sleep@settings(5), 
 12011 ;;  rslt            1   79[BANK0 ] char 
 12012 ;; Return value:  Size  Location     Type
 12013 ;;                  1    wreg      char 
 12014 ;; Registers used:
 12015 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12016 ;; Tracked objects:
 12017 ;;		On entry : 1F/0
 12018 ;;		On exit  : 1F/0
 12019 ;;		Unchanged: 0/0
 12020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12021 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12022 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12023 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12024 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12025 ;;Total ram usage:        5 bytes
 12026 ;; Hardware stack levels used:    1
 12027 ;; Hardware stack levels required when called:   12
 12028 ;; This function calls:
 12029 ;;		_set_filter_standby_settings
 12030 ;;		_set_osr_settings
 12031 ;; This function is called by:
 12032 ;;		_put_device_to_sleep
 12033 ;; This function uses a non-reentrant model
 12034 ;;
 12035                           
 12036                           
 12037                           ;psect for function _reload_device_settings
 12038  1A24                     _reload_device_settings:	
 12039                           
 12040                           ;incstack = 0
 12041                           ; Regs used in _reload_device_settings: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
 12042                           ;reload_device_settings@settings stored from wreg
 12043  1A24  00EE               	movwf	reload_device_settings@settings
 12044                           
 12045                           ;BME280_driver/bme280.c: 991: static int8_t reload_device_settings(const struct bme280_s
      +                          ettings *settings, const struct bme280_dev *dev);BME280_driver/bme280.c: 992: {;BME280_d
      +                          river/bme280.c: 993:     int8_t rslt;;BME280_driver/bme280.c: 995:     rslt = set_osr_se
      +                          ttings(0x1F, settings, dev);
 12046  1A25  086E               	movf	reload_device_settings@settings,w
 12047  1A26  00E4               	movwf	set_osr_settings@settings
 12048  1A27  3000               	movlw	0
 12049  1A28  00E5               	movwf	set_osr_settings@settings+1
 12050  1A29  086B               	movf	reload_device_settings@dev,w
 12051  1A2A  00EC               	movwf	??_reload_device_settings
 12052  1A2B  086C               	movf	??_reload_device_settings,w
 12053  1A2C  00E6               	movwf	set_osr_settings@dev
 12054  1A2D  301F               	movlw	31
 12055  1A2E  319A  2291  319A   	fcall	_set_osr_settings
 12056  1A31  00ED               	movwf	??_reload_device_settings+1
 12057  1A32  086D               	movf	??_reload_device_settings+1,w
 12058  1A33  00EF               	movwf	reload_device_settings@rslt
 12059                           
 12060                           ;BME280_driver/bme280.c: 996:     if (rslt == 0)
 12061  1A34  086F               	movf	reload_device_settings@rslt,w
 12062  1A35  1D03               	btfss	3,2
 12063  1A36  2A45               	goto	l4102
 12064                           
 12065                           ;BME280_driver/bme280.c: 997:     {;BME280_driver/bme280.c: 998:         rslt = set_filt
      +                          er_standby_settings(0x1F, settings, dev);
 12066  1A37  086E               	movf	reload_device_settings@settings,w
 12067  1A38  00DA               	movwf	set_filter_standby_settings@settings
 12068  1A39  3000               	movlw	0
 12069  1A3A  00DB               	movwf	set_filter_standby_settings@settings+1
 12070  1A3B  086B               	movf	reload_device_settings@dev,w
 12071  1A3C  00EC               	movwf	??_reload_device_settings
 12072  1A3D  086C               	movf	??_reload_device_settings,w
 12073  1A3E  00DC               	movwf	set_filter_standby_settings@dev
 12074  1A3F  301F               	movlw	31
 12075  1A40  319D  25B1         	fcall	_set_filter_standby_settings
 12076  1A42  00ED               	movwf	??_reload_device_settings+1
 12077  1A43  086D               	movf	??_reload_device_settings+1,w
 12078  1A44  00EF               	movwf	reload_device_settings@rslt
 12079  1A45                     l4102:	
 12080                           
 12081                           ;BME280_driver/bme280.c: 1001:     return rslt;
 12082  1A45  086F               	movf	reload_device_settings@rslt,w
 12083  1A46  0008               	return
 12084  1A47                     __end_of_reload_device_settings:	
 12085                           
 12086                           	psect	text38
 12087  1A91                     __ptext38:	
 12088 ;; *************** function _set_osr_settings *****************
 12089 ;; Defined at:
 12090 ;;		line 777 in file "BME280_driver/bme280.c"
 12091 ;; Parameters:    Size  Location     Type
 12092 ;;  desired_sett    1    wreg     unsigned char 
 12093 ;;  settings        2   68[BANK0 ] PTR const struct bme280_
 12094 ;;		 -> EnvSensor(51), put_device_to_sleep@settings(5), 
 12095 ;;  dev             1   70[BANK0 ] PTR const struct bme280_
 12096 ;;		 -> EnvSensor(51), 
 12097 ;; Auto vars:     Size  Location     Type
 12098 ;;  desired_sett    1   74[BANK0 ] unsigned char 
 12099 ;;  rslt            1   73[BANK0 ] char 
 12100 ;; Return value:  Size  Location     Type
 12101 ;;                  1    wreg      char 
 12102 ;; Registers used:
 12103 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12104 ;; Tracked objects:
 12105 ;;		On entry : 1E/1
 12106 ;;		On exit  : 1F/0
 12107 ;;		Unchanged: 0/0
 12108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12109 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12110 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12111 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12112 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12113 ;;Total ram usage:        7 bytes
 12114 ;; Hardware stack levels used:    1
 12115 ;; Hardware stack levels required when called:   11
 12116 ;; This function calls:
 12117 ;;		_set_osr_humidity_settings
 12118 ;;		_set_osr_press_temp_settings
 12119 ;; This function is called by:
 12120 ;;		_bme280_set_sensor_settings
 12121 ;;		_reload_device_settings
 12122 ;; This function uses a non-reentrant model
 12123 ;;
 12124                           
 12125                           
 12126                           ;psect for function _set_osr_settings
 12127  1A91                     _set_osr_settings:	
 12128                           
 12129                           ;incstack = 0
 12130                           ; Regs used in _set_osr_settings: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12131                           ;set_osr_settings@desired_settings stored from wreg
 12132  1A91  0020               	movlb	0	; select bank0
 12133  1A92  00EA               	movwf	set_osr_settings@desired_settings
 12134                           
 12135                           ;BME280_driver/bme280.c: 777: static int8_t set_osr_settings(uint8_t desired_settings,;B
      +                          ME280_driver/bme280.c: 778:                                const struct bme280_settings 
      +                          *settings,;BME280_driver/bme280.c: 779:                                const struct bme2
      +                          80_dev *dev);BME280_driver/bme280.c: 780: {;BME280_driver/bme280.c: 781:     int8_t rslt
      +                           = 1;
 12136  1A93  01E9               	clrf	set_osr_settings@rslt
 12137  1A94  0AE9               	incf	set_osr_settings@rslt,f
 12138                           
 12139                           ;BME280_driver/bme280.c: 783:     if (desired_settings & 1 << 2)
 12140  1A95  1D6A               	btfss	set_osr_settings@desired_settings,2
 12141  1A96  2AA5               	goto	l4056
 12142                           
 12143                           ;BME280_driver/bme280.c: 784:     {;BME280_driver/bme280.c: 785:         rslt = set_osr_
      +                          humidity_settings(settings, dev);
 12144  1A97  0865               	movf	set_osr_settings@settings+1,w
 12145  1A98  00DB               	movwf	set_osr_humidity_settings@settings+1
 12146  1A99  0864               	movf	set_osr_settings@settings,w
 12147  1A9A  00DA               	movwf	set_osr_humidity_settings@settings
 12148  1A9B  0866               	movf	set_osr_settings@dev,w
 12149  1A9C  00E7               	movwf	??_set_osr_settings
 12150  1A9D  0867               	movf	??_set_osr_settings,w
 12151  1A9E  00DC               	movwf	set_osr_humidity_settings@dev
 12152  1A9F  319F  2711  319A   	fcall	_set_osr_humidity_settings
 12153  1AA2  00E8               	movwf	??_set_osr_settings+1
 12154  1AA3  0868               	movf	??_set_osr_settings+1,w
 12155  1AA4  00E9               	movwf	set_osr_settings@rslt
 12156  1AA5                     l4056:	
 12157                           
 12158                           ;BME280_driver/bme280.c: 787:     if (desired_settings & (1 | 1 << 1))
 12159  1AA5  086A               	movf	set_osr_settings@desired_settings,w
 12160  1AA6  3903               	andlw	3
 12161  1AA7  1903               	btfsc	3,2
 12162  1AA8  2AB7               	goto	l4060
 12163                           
 12164                           ;BME280_driver/bme280.c: 788:     {;BME280_driver/bme280.c: 789:         rslt = set_osr_
      +                          press_temp_settings(desired_settings, settings, dev);
 12165  1AA9  0865               	movf	set_osr_settings@settings+1,w
 12166  1AAA  00DB               	movwf	set_osr_press_temp_settings@settings+1
 12167  1AAB  0864               	movf	set_osr_settings@settings,w
 12168  1AAC  00DA               	movwf	set_osr_press_temp_settings@settings
 12169  1AAD  0866               	movf	set_osr_settings@dev,w
 12170  1AAE  00E7               	movwf	??_set_osr_settings
 12171  1AAF  0867               	movf	??_set_osr_settings,w
 12172  1AB0  00DC               	movwf	set_osr_press_temp_settings@dev
 12173  1AB1  086A               	movf	set_osr_settings@desired_settings,w
 12174  1AB2  319D  252E         	fcall	_set_osr_press_temp_settings
 12175  1AB4  00E8               	movwf	??_set_osr_settings+1
 12176  1AB5  0868               	movf	??_set_osr_settings+1,w
 12177  1AB6  00E9               	movwf	set_osr_settings@rslt
 12178  1AB7                     l4060:	
 12179                           
 12180                           ;BME280_driver/bme280.c: 792:     return rslt;
 12181  1AB7  0869               	movf	set_osr_settings@rslt,w
 12182  1AB8  0008               	return
 12183  1AB9                     __end_of_set_osr_settings:	
 12184                           
 12185                           	psect	text39
 12186  1D2E                     __ptext39:	
 12187 ;; *************** function _set_osr_press_temp_settings *****************
 12188 ;; Defined at:
 12189 ;;		line 830 in file "BME280_driver/bme280.c"
 12190 ;; Parameters:    Size  Location     Type
 12191 ;;  desired_sett    1    wreg     unsigned char 
 12192 ;;  settings        2   58[BANK0 ] PTR const struct bme280_
 12193 ;;		 -> EnvSensor(51), put_device_to_sleep@settings(5), 
 12194 ;;  dev             1   60[BANK0 ] PTR const struct bme280_
 12195 ;;		 -> EnvSensor(51), 
 12196 ;; Auto vars:     Size  Location     Type
 12197 ;;  desired_sett    1   64[BANK0 ] unsigned char 
 12198 ;;  reg_data        1   67[BANK0 ] unsigned char 
 12199 ;;  reg_addr        1   66[BANK0 ] unsigned char 
 12200 ;;  rslt            1   65[BANK0 ] char 
 12201 ;; Return value:  Size  Location     Type
 12202 ;;                  1    wreg      char 
 12203 ;; Registers used:
 12204 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12205 ;; Tracked objects:
 12206 ;;		On entry : 1F/0
 12207 ;;		On exit  : 1F/0
 12208 ;;		Unchanged: 0/0
 12209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12210 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12211 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12212 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12213 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12214 ;;Total ram usage:       10 bytes
 12215 ;; Hardware stack levels used:    1
 12216 ;; Hardware stack levels required when called:   10
 12217 ;; This function calls:
 12218 ;;		_bme280_get_regs
 12219 ;;		_bme280_set_regs
 12220 ;;		_fill_osr_press_settings
 12221 ;;		_fill_osr_temp_settings
 12222 ;; This function is called by:
 12223 ;;		_set_osr_settings
 12224 ;; This function uses a non-reentrant model
 12225 ;;
 12226                           
 12227                           
 12228                           ;psect for function _set_osr_press_temp_settings
 12229  1D2E                     _set_osr_press_temp_settings:	
 12230                           
 12231                           ;incstack = 0
 12232                           ; Regs used in _set_osr_press_temp_settings: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 12233                           ;set_osr_press_temp_settings@desired_settings stored from wreg
 12234  1D2E  00E0               	movwf	set_osr_press_temp_settings@desired_settings
 12235                           
 12236                           ;BME280_driver/bme280.c: 830: static int8_t set_osr_press_temp_settings(uint8_t desired_
      +                          settings,;BME280_driver/bme280.c: 831:                                           const s
      +                          truct bme280_settings *settings,;BME280_driver/bme280.c: 832:                           
      +                                          const struct bme280_dev *dev);BME280_driver/bme280.c: 833: {;BME280_driv
      +                          er/bme280.c: 834:     int8_t rslt;;BME280_driver/bme280.c: 835:     uint8_t reg_addr = 0
      +                          xF4;
 12237  1D2F  30F4               	movlw	244
 12238  1D30  00DD               	movwf	??_set_osr_press_temp_settings
 12239  1D31  085D               	movf	??_set_osr_press_temp_settings,w
 12240  1D32  00E2               	movwf	set_osr_press_temp_settings@reg_addr
 12241                           
 12242                           ;BME280_driver/bme280.c: 836:     uint8_t reg_data;;BME280_driver/bme280.c: 838:     rsl
      +                          t = bme280_get_regs(reg_addr, &reg_data, 1, dev);
 12243  1D33  3063               	movlw	low set_osr_press_temp_settings@reg_data
 12244  1D34  00BC               	movwf	bme280_get_regs@reg_data
 12245  1D35  3000               	movlw	high set_osr_press_temp_settings@reg_data
 12246  1D36  00BD               	movwf	bme280_get_regs@reg_data+1
 12247  1D37  3001               	movlw	1
 12248  1D38  00BE               	movwf	bme280_get_regs@len
 12249  1D39  3000               	movlw	0
 12250  1D3A  00BF               	movwf	bme280_get_regs@len+1
 12251  1D3B  085C               	movf	set_osr_press_temp_settings@dev,w
 12252  1D3C  00DD               	movwf	??_set_osr_press_temp_settings
 12253  1D3D  085D               	movf	??_set_osr_press_temp_settings,w
 12254  1D3E  00C0               	movwf	bme280_get_regs@dev
 12255  1D3F  0862               	movf	set_osr_press_temp_settings@reg_addr,w
 12256  1D40  319D  256F  319D   	fcall	_bme280_get_regs
 12257  1D43  00DE               	movwf	??_set_osr_press_temp_settings+1
 12258  1D44  085E               	movf	??_set_osr_press_temp_settings+1,w
 12259  1D45  00E1               	movwf	set_osr_press_temp_settings@rslt
 12260                           
 12261                           ;BME280_driver/bme280.c: 839:     if (rslt == 0)
 12262  1D46  0861               	movf	set_osr_press_temp_settings@rslt,w
 12263  1D47  1D03               	btfss	3,2
 12264  1D48  2D6D               	goto	l4042
 12265                           
 12266                           ;BME280_driver/bme280.c: 840:     {;BME280_driver/bme280.c: 841:         if (desired_set
      +                          tings & 1)
 12267  1D49  1C60               	btfss	set_osr_press_temp_settings@desired_settings,0
 12268  1D4A  2D53               	goto	l4038
 12269                           
 12270                           ;BME280_driver/bme280.c: 842:         {;BME280_driver/bme280.c: 843:             fill_os
      +                          r_press_settings(&reg_data, settings);
 12271  1D4B  085B               	movf	set_osr_press_temp_settings@settings+1,w
 12272  1D4C  00F1               	movwf	fill_osr_press_settings@settings+1
 12273  1D4D  085A               	movf	set_osr_press_temp_settings@settings,w
 12274  1D4E  00F0               	movwf	fill_osr_press_settings@settings
 12275  1D4F  3063               	movlw	(low (set_osr_press_temp_settings@reg_data| 0))& (0+255)
 12276  1D50  3199  21D1  319D   	fcall	_fill_osr_press_settings
 12277  1D53                     l4038:	
 12278                           
 12279                           ;BME280_driver/bme280.c: 845:         if (desired_settings & 1 << 1)
 12280  1D53  1CE0               	btfss	set_osr_press_temp_settings@desired_settings,1
 12281  1D54  2D5D               	goto	l144
 12282                           
 12283                           ;BME280_driver/bme280.c: 846:         {;BME280_driver/bme280.c: 847:             fill_os
      +                          r_temp_settings(&reg_data, settings);
 12284  1D55  085B               	movf	set_osr_press_temp_settings@settings+1,w
 12285  1D56  00F1               	movwf	fill_osr_temp_settings@settings+1
 12286  1D57  085A               	movf	set_osr_press_temp_settings@settings,w
 12287  1D58  00F0               	movwf	fill_osr_temp_settings@settings
 12288  1D59  3063               	movlw	(low (set_osr_press_temp_settings@reg_data| 0))& (0+255)
 12289  1D5A  3190  2005  319D   	fcall	_fill_osr_temp_settings
 12290  1D5D                     l144:	
 12291                           ;BME280_driver/bme280.c: 848:         }
 12292                           
 12293                           
 12294                           ;BME280_driver/bme280.c: 851:         rslt = bme280_set_regs(&reg_addr, &reg_data, 1, de
      +                          v);
 12295  1D5D  3063               	movlw	(low (set_osr_press_temp_settings@reg_data| 0))& (0+255)
 12296  1D5E  00DD               	movwf	??_set_osr_press_temp_settings
 12297  1D5F  085D               	movf	??_set_osr_press_temp_settings,w
 12298  1D60  00BB               	movwf	bme280_set_regs@reg_data
 12299  1D61  01BC               	clrf	bme280_set_regs@len
 12300  1D62  0ABC               	incf	bme280_set_regs@len,f
 12301  1D63  085C               	movf	set_osr_press_temp_settings@dev,w
 12302  1D64  00DE               	movwf	??_set_osr_press_temp_settings+1
 12303  1D65  085E               	movf	??_set_osr_press_temp_settings+1,w
 12304  1D66  00BD               	movwf	bme280_set_regs@dev
 12305  1D67  3062               	movlw	(low (set_osr_press_temp_settings@reg_addr| 0))& (0+255)
 12306  1D68  3196  261F         	fcall	_bme280_set_regs
 12307  1D6A  00DF               	movwf	??_set_osr_press_temp_settings+2
 12308  1D6B  085F               	movf	??_set_osr_press_temp_settings+2,w
 12309  1D6C  00E1               	movwf	set_osr_press_temp_settings@rslt
 12310  1D6D                     l4042:	
 12311                           
 12312                           ;BME280_driver/bme280.c: 854:     return rslt;
 12313  1D6D  0861               	movf	set_osr_press_temp_settings@rslt,w
 12314  1D6E  0008               	return
 12315  1D6F                     __end_of_set_osr_press_temp_settings:	
 12316                           
 12317                           	psect	text40
 12318  1005                     __ptext40:	
 12319 ;; *************** function _fill_osr_temp_settings *****************
 12320 ;; Defined at:
 12321 ;;		line 919 in file "BME280_driver/bme280.c"
 12322 ;; Parameters:    Size  Location     Type
 12323 ;;  reg_data        1    wreg     PTR unsigned char 
 12324 ;;		 -> set_osr_press_temp_settings@reg_data(1), 
 12325 ;;  settings        2    0[COMMON] PTR const struct bme280_
 12326 ;;		 -> EnvSensor(51), put_device_to_sleep@settings(5), 
 12327 ;; Auto vars:     Size  Location     Type
 12328 ;;  reg_data        1    5[COMMON] PTR unsigned char 
 12329 ;;		 -> set_osr_press_temp_settings@reg_data(1), 
 12330 ;; Return value:  Size  Location     Type
 12331 ;;                  1    wreg      void 
 12332 ;; Registers used:
 12333 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12334 ;; Tracked objects:
 12335 ;;		On entry : 1F/0
 12336 ;;		On exit  : 1F/0
 12337 ;;		Unchanged: 1F/0
 12338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12339 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12340 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12341 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12342 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12343 ;;Total ram usage:        6 bytes
 12344 ;; Hardware stack levels used:    1
 12345 ;; Hardware stack levels required when called:    3
 12346 ;; This function calls:
 12347 ;;		Nothing
 12348 ;; This function is called by:
 12349 ;;		_set_osr_press_temp_settings
 12350 ;; This function uses a non-reentrant model
 12351 ;;
 12352                           
 12353                           
 12354                           ;psect for function _fill_osr_temp_settings
 12355  1005                     _fill_osr_temp_settings:	
 12356                           
 12357                           ;incstack = 0
 12358                           ; Regs used in _fill_osr_temp_settings: [wreg+fsr1l+fsr1h+status,2+status,0]
 12359                           ;fill_osr_temp_settings@reg_data stored from wreg
 12360  1005  00F5               	movwf	fill_osr_temp_settings@reg_data
 12361                           
 12362                           ;BME280_driver/bme280.c: 919: static void fill_osr_temp_settings(uint8_t *reg_data, cons
      +                          t struct bme280_settings *settings);BME280_driver/bme280.c: 920: {;BME280_driver/bme280.
      +                          c: 921:     *reg_data = ((*reg_data & ~( 0xE0)) | ((settings->osr_t << 0x05) & 0xE0));
 12363  1006  0870               	movf	fill_osr_temp_settings@settings,w
 12364  1007  0086               	movwf	6
 12365  1008  0871               	movf	fill_osr_temp_settings@settings+1,w
 12366  1009  0087               	movwf	7
 12367  100A  3141               	addfsr 1,1
 12368  100B  0801               	movf	1,w
 12369  100C  00F2               	movwf	??_fill_osr_temp_settings
 12370  100D  3005               	movlw	5
 12371  100E                     u4215:	
 12372  100E  35F2               	lslf	??_fill_osr_temp_settings,f
 12373  100F  0B89               	decfsz	9,f
 12374  1010  280E               	goto	u4215
 12375  1011  30E0               	movlw	224
 12376  1012  0572               	andwf	??_fill_osr_temp_settings,w
 12377  1013  00F3               	movwf	??_fill_osr_temp_settings+1
 12378  1014  0875               	movf	fill_osr_temp_settings@reg_data,w
 12379  1015  0086               	movwf	6
 12380  1016  0187               	clrf	7
 12381  1017  0801               	movf	1,w
 12382  1018  391F               	andlw	31
 12383  1019  0473               	iorwf	??_fill_osr_temp_settings+1,w
 12384  101A  00F4               	movwf	??_fill_osr_temp_settings+2
 12385  101B  0875               	movf	fill_osr_temp_settings@reg_data,w
 12386  101C  0086               	movwf	6
 12387  101D  0187               	clrf	7
 12388  101E  0874               	movf	??_fill_osr_temp_settings+2,w
 12389  101F  0081               	movwf	1
 12390  1020  0008               	return
 12391  1021                     __end_of_fill_osr_temp_settings:	
 12392                           
 12393                           	psect	text41
 12394  19D1                     __ptext41:	
 12395 ;; *************** function _fill_osr_press_settings *****************
 12396 ;; Defined at:
 12397 ;;		line 910 in file "BME280_driver/bme280.c"
 12398 ;; Parameters:    Size  Location     Type
 12399 ;;  reg_data        1    wreg     PTR unsigned char 
 12400 ;;		 -> set_osr_press_temp_settings@reg_data(1), 
 12401 ;;  settings        2    0[COMMON] PTR const struct bme280_
 12402 ;;		 -> EnvSensor(51), put_device_to_sleep@settings(5), 
 12403 ;; Auto vars:     Size  Location     Type
 12404 ;;  reg_data        1    5[COMMON] PTR unsigned char 
 12405 ;;		 -> set_osr_press_temp_settings@reg_data(1), 
 12406 ;; Return value:  Size  Location     Type
 12407 ;;                  1    wreg      void 
 12408 ;; Registers used:
 12409 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12410 ;; Tracked objects:
 12411 ;;		On entry : 1F/0
 12412 ;;		On exit  : 1F/0
 12413 ;;		Unchanged: 1F/0
 12414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12415 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12416 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12417 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12418 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12419 ;;Total ram usage:        6 bytes
 12420 ;; Hardware stack levels used:    1
 12421 ;; Hardware stack levels required when called:    3
 12422 ;; This function calls:
 12423 ;;		Nothing
 12424 ;; This function is called by:
 12425 ;;		_set_osr_press_temp_settings
 12426 ;; This function uses a non-reentrant model
 12427 ;;
 12428                           
 12429                           
 12430                           ;psect for function _fill_osr_press_settings
 12431  19D1                     _fill_osr_press_settings:	
 12432                           
 12433                           ;incstack = 0
 12434                           ; Regs used in _fill_osr_press_settings: [wreg+fsr1l+fsr1h+status,2+status,0]
 12435                           ;fill_osr_press_settings@reg_data stored from wreg
 12436  19D1  00F5               	movwf	fill_osr_press_settings@reg_data
 12437                           
 12438                           ;BME280_driver/bme280.c: 910: static void fill_osr_press_settings(uint8_t *reg_data, con
      +                          st struct bme280_settings *settings);BME280_driver/bme280.c: 911: {;BME280_driver/bme280
      +                          .c: 912:     *reg_data = ((*reg_data & ~( 0x1C)) | ((settings->osr_p << 0x02) & 0x1C));
 12439  19D2  0870               	movf	fill_osr_press_settings@settings,w
 12440  19D3  0086               	movwf	6
 12441  19D4  0871               	movf	fill_osr_press_settings@settings+1,w
 12442  19D5  0087               	movwf	7
 12443  19D6  0801               	movf	1,w
 12444  19D7  00F2               	movwf	??_fill_osr_press_settings
 12445  19D8  3002               	movlw	2
 12446  19D9                     u4205:	
 12447  19D9  35F2               	lslf	??_fill_osr_press_settings,f
 12448  19DA  0B89               	decfsz	9,f
 12449  19DB  29D9               	goto	u4205
 12450  19DC  301C               	movlw	28
 12451  19DD  0572               	andwf	??_fill_osr_press_settings,w
 12452  19DE  00F3               	movwf	??_fill_osr_press_settings+1
 12453  19DF  0875               	movf	fill_osr_press_settings@reg_data,w
 12454  19E0  0086               	movwf	6
 12455  19E1  0187               	clrf	7
 12456  19E2  0801               	movf	1,w
 12457  19E3  39E3               	andlw	227
 12458  19E4  0473               	iorwf	??_fill_osr_press_settings+1,w
 12459  19E5  00F4               	movwf	??_fill_osr_press_settings+2
 12460  19E6  0875               	movf	fill_osr_press_settings@reg_data,w
 12461  19E7  0086               	movwf	6
 12462  19E8  0187               	clrf	7
 12463  19E9  0874               	movf	??_fill_osr_press_settings+2,w
 12464  19EA  0081               	movwf	1
 12465  19EB  0008               	return
 12466  19EC                     __end_of_fill_osr_press_settings:	
 12467                           
 12468                           	psect	text42
 12469  1F11                     __ptext42:	
 12470 ;; *************** function _set_osr_humidity_settings *****************
 12471 ;; Defined at:
 12472 ;;		line 798 in file "BME280_driver/bme280.c"
 12473 ;; Parameters:    Size  Location     Type
 12474 ;;  settings        2   58[BANK0 ] PTR const struct bme280_
 12475 ;;		 -> EnvSensor(51), put_device_to_sleep@settings(5), 
 12476 ;;  dev             1   60[BANK0 ] PTR const struct bme280_
 12477 ;;		 -> EnvSensor(51), 
 12478 ;; Auto vars:     Size  Location     Type
 12479 ;;  reg_addr        1   67[BANK0 ] unsigned char 
 12480 ;;  rslt            1   66[BANK0 ] char 
 12481 ;;  ctrl_meas       1   65[BANK0 ] unsigned char 
 12482 ;;  ctrl_hum        1   64[BANK0 ] unsigned char 
 12483 ;; Return value:  Size  Location     Type
 12484 ;;                  1    wreg      char 
 12485 ;; Registers used:
 12486 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12487 ;; Tracked objects:
 12488 ;;		On entry : 1F/0
 12489 ;;		On exit  : 1F/0
 12490 ;;		Unchanged: 0/0
 12491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12492 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12493 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12494 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12495 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12496 ;;Total ram usage:       10 bytes
 12497 ;; Hardware stack levels used:    1
 12498 ;; Hardware stack levels required when called:   10
 12499 ;; This function calls:
 12500 ;;		_bme280_get_regs
 12501 ;;		_bme280_set_regs
 12502 ;; This function is called by:
 12503 ;;		_set_osr_settings
 12504 ;; This function uses a non-reentrant model
 12505 ;;
 12506                           
 12507                           
 12508                           ;psect for function _set_osr_humidity_settings
 12509  1F11                     _set_osr_humidity_settings:	
 12510                           
 12511                           ;BME280_driver/bme280.c: 798: static int8_t set_osr_humidity_settings(const struct bme28
      +                          0_settings *settings, const struct bme280_dev *dev);BME280_driver/bme280.c: 799: {;BME28
      +                          0_driver/bme280.c: 800:     int8_t rslt;;BME280_driver/bme280.c: 801:     uint8_t ctrl_h
      +                          um;;BME280_driver/bme280.c: 802:     uint8_t ctrl_meas;;BME280_driver/bme280.c: 803:    
      +                           uint8_t reg_addr = 0xF2;
 12512                           
 12513                           ;incstack = 0
 12514                           ; Regs used in _set_osr_humidity_settings: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cs
      +                          tack]
 12515  1F11  30F2               	movlw	242
 12516  1F12  00DD               	movwf	??_set_osr_humidity_settings
 12517  1F13  085D               	movf	??_set_osr_humidity_settings,w
 12518  1F14  00E3               	movwf	set_osr_humidity_settings@reg_addr
 12519                           
 12520                           ;BME280_driver/bme280.c: 805:     ctrl_hum = settings->osr_h & 0x07;
 12521  1F15  085A               	movf	set_osr_humidity_settings@settings,w
 12522  1F16  0086               	movwf	6
 12523  1F17  085B               	movf	set_osr_humidity_settings@settings+1,w
 12524  1F18  0087               	movwf	7
 12525  1F19  3142               	addfsr 1,2
 12526  1F1A  0801               	movf	1,w
 12527  1F1B  3907               	andlw	7
 12528  1F1C  00DD               	movwf	??_set_osr_humidity_settings
 12529  1F1D  085D               	movf	??_set_osr_humidity_settings,w
 12530  1F1E  00E0               	movwf	set_osr_humidity_settings@ctrl_hum
 12531                           
 12532                           ;BME280_driver/bme280.c: 808:     rslt = bme280_set_regs(&reg_addr, &ctrl_hum, 1, dev);
 12533  1F1F  3060               	movlw	(low (set_osr_humidity_settings@ctrl_hum| 0))& (0+255)
 12534  1F20  00DD               	movwf	??_set_osr_humidity_settings
 12535  1F21  085D               	movf	??_set_osr_humidity_settings,w
 12536  1F22  00BB               	movwf	bme280_set_regs@reg_data
 12537  1F23  01BC               	clrf	bme280_set_regs@len
 12538  1F24  0ABC               	incf	bme280_set_regs@len,f
 12539  1F25  085C               	movf	set_osr_humidity_settings@dev,w
 12540  1F26  00DE               	movwf	??_set_osr_humidity_settings+1
 12541  1F27  085E               	movf	??_set_osr_humidity_settings+1,w
 12542  1F28  00BD               	movwf	bme280_set_regs@dev
 12543  1F29  3063               	movlw	(low (set_osr_humidity_settings@reg_addr| 0))& (0+255)
 12544  1F2A  3196  261F  319F   	fcall	_bme280_set_regs
 12545  1F2D  00DF               	movwf	??_set_osr_humidity_settings+2
 12546  1F2E  085F               	movf	??_set_osr_humidity_settings+2,w
 12547  1F2F  00E2               	movwf	set_osr_humidity_settings@rslt
 12548                           
 12549                           ;BME280_driver/bme280.c: 813:     if (rslt == 0)
 12550  1F30  0862               	movf	set_osr_humidity_settings@rslt,w
 12551  1F31  1D03               	btfss	3,2
 12552  1F32  2F5D               	goto	l4024
 12553                           
 12554                           ;BME280_driver/bme280.c: 814:     {;BME280_driver/bme280.c: 815:         reg_addr = 0xF4
      +                          ;
 12555  1F33  30F4               	movlw	244
 12556  1F34  00DD               	movwf	??_set_osr_humidity_settings
 12557  1F35  085D               	movf	??_set_osr_humidity_settings,w
 12558  1F36  00E3               	movwf	set_osr_humidity_settings@reg_addr
 12559                           
 12560                           ;BME280_driver/bme280.c: 816:         rslt = bme280_get_regs(reg_addr, &ctrl_meas, 1, de
      +                          v);
 12561  1F37  3061               	movlw	low set_osr_humidity_settings@ctrl_meas
 12562  1F38  00BC               	movwf	bme280_get_regs@reg_data
 12563  1F39  3000               	movlw	high set_osr_humidity_settings@ctrl_meas
 12564  1F3A  00BD               	movwf	bme280_get_regs@reg_data+1
 12565  1F3B  3001               	movlw	1
 12566  1F3C  00BE               	movwf	bme280_get_regs@len
 12567  1F3D  3000               	movlw	0
 12568  1F3E  00BF               	movwf	bme280_get_regs@len+1
 12569  1F3F  085C               	movf	set_osr_humidity_settings@dev,w
 12570  1F40  00DD               	movwf	??_set_osr_humidity_settings
 12571  1F41  085D               	movf	??_set_osr_humidity_settings,w
 12572  1F42  00C0               	movwf	bme280_get_regs@dev
 12573  1F43  0863               	movf	set_osr_humidity_settings@reg_addr,w
 12574  1F44  319D  256F  319F   	fcall	_bme280_get_regs
 12575  1F47  00DE               	movwf	??_set_osr_humidity_settings+1
 12576  1F48  085E               	movf	??_set_osr_humidity_settings+1,w
 12577  1F49  00E2               	movwf	set_osr_humidity_settings@rslt
 12578                           
 12579                           ;BME280_driver/bme280.c: 817:         if (rslt == 0)
 12580  1F4A  0862               	movf	set_osr_humidity_settings@rslt,w
 12581  1F4B  1D03               	btfss	3,2
 12582  1F4C  2F5D               	goto	l4024
 12583                           
 12584                           ;BME280_driver/bme280.c: 818:         {;BME280_driver/bme280.c: 819:             rslt = 
      +                          bme280_set_regs(&reg_addr, &ctrl_meas, 1, dev);
 12585  1F4D  3061               	movlw	(low (set_osr_humidity_settings@ctrl_meas| 0))& (0+255)
 12586  1F4E  00DD               	movwf	??_set_osr_humidity_settings
 12587  1F4F  085D               	movf	??_set_osr_humidity_settings,w
 12588  1F50  00BB               	movwf	bme280_set_regs@reg_data
 12589  1F51  01BC               	clrf	bme280_set_regs@len
 12590  1F52  0ABC               	incf	bme280_set_regs@len,f
 12591  1F53  085C               	movf	set_osr_humidity_settings@dev,w
 12592  1F54  00DE               	movwf	??_set_osr_humidity_settings+1
 12593  1F55  085E               	movf	??_set_osr_humidity_settings+1,w
 12594  1F56  00BD               	movwf	bme280_set_regs@dev
 12595  1F57  3063               	movlw	(low (set_osr_humidity_settings@reg_addr| 0))& (0+255)
 12596  1F58  3196  261F         	fcall	_bme280_set_regs
 12597  1F5A  00DF               	movwf	??_set_osr_humidity_settings+2
 12598  1F5B  085F               	movf	??_set_osr_humidity_settings+2,w
 12599  1F5C  00E2               	movwf	set_osr_humidity_settings@rslt
 12600  1F5D                     l4024:	
 12601                           
 12602                           ;BME280_driver/bme280.c: 823:     return rslt;
 12603  1F5D  0862               	movf	set_osr_humidity_settings@rslt,w
 12604  1F5E  0008               	return
 12605  1F5F                     __end_of_set_osr_humidity_settings:	
 12606                           
 12607                           	psect	text43
 12608  1DB1                     __ptext43:	
 12609 ;; *************** function _set_filter_standby_settings *****************
 12610 ;; Defined at:
 12611 ;;		line 861 in file "BME280_driver/bme280.c"
 12612 ;; Parameters:    Size  Location     Type
 12613 ;;  desired_sett    1    wreg     unsigned char 
 12614 ;;  settings        2   58[BANK0 ] PTR const struct bme280_
 12615 ;;		 -> EnvSensor(51), put_device_to_sleep@settings(5), 
 12616 ;;  dev             1   60[BANK0 ] PTR const struct bme280_
 12617 ;;		 -> EnvSensor(51), 
 12618 ;; Auto vars:     Size  Location     Type
 12619 ;;  desired_sett    1   64[BANK0 ] unsigned char 
 12620 ;;  reg_data        1   67[BANK0 ] unsigned char 
 12621 ;;  reg_addr        1   66[BANK0 ] unsigned char 
 12622 ;;  rslt            1   65[BANK0 ] char 
 12623 ;; Return value:  Size  Location     Type
 12624 ;;                  1    wreg      char 
 12625 ;; Registers used:
 12626 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12627 ;; Tracked objects:
 12628 ;;		On entry : 1E/1
 12629 ;;		On exit  : 1F/0
 12630 ;;		Unchanged: 0/0
 12631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12632 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12633 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12634 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12635 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12636 ;;Total ram usage:       10 bytes
 12637 ;; Hardware stack levels used:    1
 12638 ;; Hardware stack levels required when called:   10
 12639 ;; This function calls:
 12640 ;;		_bme280_get_regs
 12641 ;;		_bme280_set_regs
 12642 ;;		_fill_filter_settings
 12643 ;;		_fill_standby_settings
 12644 ;; This function is called by:
 12645 ;;		_bme280_set_sensor_settings
 12646 ;;		_reload_device_settings
 12647 ;; This function uses a non-reentrant model
 12648 ;;
 12649                           
 12650                           
 12651                           ;psect for function _set_filter_standby_settings
 12652  1DB1                     _set_filter_standby_settings:	
 12653                           
 12654                           ;incstack = 0
 12655                           ; Regs used in _set_filter_standby_settings: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 12656                           ;set_filter_standby_settings@desired_settings stored from wreg
 12657  1DB1  0020               	movlb	0	; select bank0
 12658  1DB2  00E0               	movwf	set_filter_standby_settings@desired_settings
 12659                           
 12660                           ;BME280_driver/bme280.c: 861: static int8_t set_filter_standby_settings(uint8_t desired_
      +                          settings,;BME280_driver/bme280.c: 862:                                           const s
      +                          truct bme280_settings *settings,;BME280_driver/bme280.c: 863:                           
      +                                          const struct bme280_dev *dev);BME280_driver/bme280.c: 864: {;BME280_driv
      +                          er/bme280.c: 865:     int8_t rslt;;BME280_driver/bme280.c: 866:     uint8_t reg_addr = 0
      +                          xF5;
 12661  1DB3  30F5               	movlw	245
 12662  1DB4  00DD               	movwf	??_set_filter_standby_settings
 12663  1DB5  085D               	movf	??_set_filter_standby_settings,w
 12664  1DB6  00E2               	movwf	set_filter_standby_settings@reg_addr
 12665                           
 12666                           ;BME280_driver/bme280.c: 867:     uint8_t reg_data;;BME280_driver/bme280.c: 869:     rsl
      +                          t = bme280_get_regs(reg_addr, &reg_data, 1, dev);
 12667  1DB7  3063               	movlw	low set_filter_standby_settings@reg_data
 12668  1DB8  00BC               	movwf	bme280_get_regs@reg_data
 12669  1DB9  3000               	movlw	high set_filter_standby_settings@reg_data
 12670  1DBA  00BD               	movwf	bme280_get_regs@reg_data+1
 12671  1DBB  3001               	movlw	1
 12672  1DBC  00BE               	movwf	bme280_get_regs@len
 12673  1DBD  3000               	movlw	0
 12674  1DBE  00BF               	movwf	bme280_get_regs@len+1
 12675  1DBF  085C               	movf	set_filter_standby_settings@dev,w
 12676  1DC0  00DD               	movwf	??_set_filter_standby_settings
 12677  1DC1  085D               	movf	??_set_filter_standby_settings,w
 12678  1DC2  00C0               	movwf	bme280_get_regs@dev
 12679  1DC3  0862               	movf	set_filter_standby_settings@reg_addr,w
 12680  1DC4  319D  256F  319D   	fcall	_bme280_get_regs
 12681  1DC7  00DE               	movwf	??_set_filter_standby_settings+1
 12682  1DC8  085E               	movf	??_set_filter_standby_settings+1,w
 12683  1DC9  00E1               	movwf	set_filter_standby_settings@rslt
 12684                           
 12685                           ;BME280_driver/bme280.c: 870:     if (rslt == 0)
 12686  1DCA  0861               	movf	set_filter_standby_settings@rslt,w
 12687  1DCB  1D03               	btfss	3,2
 12688  1DCC  2DF1               	goto	l4078
 12689                           
 12690                           ;BME280_driver/bme280.c: 871:     {;BME280_driver/bme280.c: 872:         if (desired_set
      +                          tings & 1 << 3)
 12691  1DCD  1DE0               	btfss	set_filter_standby_settings@desired_settings,3
 12692  1DCE  2DD7               	goto	l4074
 12693                           
 12694                           ;BME280_driver/bme280.c: 873:         {;BME280_driver/bme280.c: 874:             fill_fi
      +                          lter_settings(&reg_data, settings);
 12695  1DCF  085B               	movf	set_filter_standby_settings@settings+1,w
 12696  1DD0  00F1               	movwf	fill_filter_settings@settings+1
 12697  1DD1  085A               	movf	set_filter_standby_settings@settings,w
 12698  1DD2  00F0               	movwf	fill_filter_settings@settings
 12699  1DD3  3063               	movlw	(low (set_filter_standby_settings@reg_data| 0))& (0+255)
 12700  1DD4  3199  21EC  319D   	fcall	_fill_filter_settings
 12701  1DD7                     l4074:	
 12702                           
 12703                           ;BME280_driver/bme280.c: 876:         if (desired_settings & 1 << 4)
 12704  1DD7  1E60               	btfss	set_filter_standby_settings@desired_settings,4
 12705  1DD8  2DE1               	goto	l150
 12706                           
 12707                           ;BME280_driver/bme280.c: 877:         {;BME280_driver/bme280.c: 878:             fill_st
      +                          andby_settings(&reg_data, settings);
 12708  1DD9  085B               	movf	set_filter_standby_settings@settings+1,w
 12709  1DDA  00F1               	movwf	fill_standby_settings@settings+1
 12710  1DDB  085A               	movf	set_filter_standby_settings@settings,w
 12711  1DDC  00F0               	movwf	fill_standby_settings@settings
 12712  1DDD  3063               	movlw	(low (set_filter_standby_settings@reg_data| 0))& (0+255)
 12713  1DDE  319A  2208  319D   	fcall	_fill_standby_settings
 12714  1DE1                     l150:	
 12715                           ;BME280_driver/bme280.c: 879:         }
 12716                           
 12717                           
 12718                           ;BME280_driver/bme280.c: 882:         rslt = bme280_set_regs(&reg_addr, &reg_data, 1, de
      +                          v);
 12719  1DE1  3063               	movlw	(low (set_filter_standby_settings@reg_data| 0))& (0+255)
 12720  1DE2  00DD               	movwf	??_set_filter_standby_settings
 12721  1DE3  085D               	movf	??_set_filter_standby_settings,w
 12722  1DE4  00BB               	movwf	bme280_set_regs@reg_data
 12723  1DE5  01BC               	clrf	bme280_set_regs@len
 12724  1DE6  0ABC               	incf	bme280_set_regs@len,f
 12725  1DE7  085C               	movf	set_filter_standby_settings@dev,w
 12726  1DE8  00DE               	movwf	??_set_filter_standby_settings+1
 12727  1DE9  085E               	movf	??_set_filter_standby_settings+1,w
 12728  1DEA  00BD               	movwf	bme280_set_regs@dev
 12729  1DEB  3062               	movlw	(low (set_filter_standby_settings@reg_addr| 0))& (0+255)
 12730  1DEC  3196  261F         	fcall	_bme280_set_regs
 12731  1DEE  00DF               	movwf	??_set_filter_standby_settings+2
 12732  1DEF  085F               	movf	??_set_filter_standby_settings+2,w
 12733  1DF0  00E1               	movwf	set_filter_standby_settings@rslt
 12734  1DF1                     l4078:	
 12735                           
 12736                           ;BME280_driver/bme280.c: 885:     return rslt;
 12737  1DF1  0861               	movf	set_filter_standby_settings@rslt,w
 12738  1DF2  0008               	return
 12739  1DF3                     __end_of_set_filter_standby_settings:	
 12740                           
 12741                           	psect	text44
 12742  1A08                     __ptext44:	
 12743 ;; *************** function _fill_standby_settings *****************
 12744 ;; Defined at:
 12745 ;;		line 901 in file "BME280_driver/bme280.c"
 12746 ;; Parameters:    Size  Location     Type
 12747 ;;  reg_data        1    wreg     PTR unsigned char 
 12748 ;;		 -> set_filter_standby_settings@reg_data(1), 
 12749 ;;  settings        2    0[COMMON] PTR const struct bme280_
 12750 ;;		 -> EnvSensor(51), put_device_to_sleep@settings(5), 
 12751 ;; Auto vars:     Size  Location     Type
 12752 ;;  reg_data        1    5[COMMON] PTR unsigned char 
 12753 ;;		 -> set_filter_standby_settings@reg_data(1), 
 12754 ;; Return value:  Size  Location     Type
 12755 ;;                  1    wreg      void 
 12756 ;; Registers used:
 12757 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12758 ;; Tracked objects:
 12759 ;;		On entry : 1F/0
 12760 ;;		On exit  : 1F/0
 12761 ;;		Unchanged: 1F/0
 12762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12763 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12764 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12765 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12766 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12767 ;;Total ram usage:        6 bytes
 12768 ;; Hardware stack levels used:    1
 12769 ;; Hardware stack levels required when called:    3
 12770 ;; This function calls:
 12771 ;;		Nothing
 12772 ;; This function is called by:
 12773 ;;		_set_filter_standby_settings
 12774 ;; This function uses a non-reentrant model
 12775 ;;
 12776                           
 12777                           
 12778                           ;psect for function _fill_standby_settings
 12779  1A08                     _fill_standby_settings:	
 12780                           
 12781                           ;incstack = 0
 12782                           ; Regs used in _fill_standby_settings: [wreg+fsr1l+fsr1h+status,2+status,0]
 12783                           ;fill_standby_settings@reg_data stored from wreg
 12784  1A08  00F5               	movwf	fill_standby_settings@reg_data
 12785                           
 12786                           ;BME280_driver/bme280.c: 901: static void fill_standby_settings(uint8_t *reg_data, const
      +                           struct bme280_settings *settings);BME280_driver/bme280.c: 902: {;BME280_driver/bme280.c
      +                          : 903:     *reg_data = ((*reg_data & ~( 0xE0)) | ((settings->standby_time << 0x05) & 0xE
      +                          0));
 12787  1A09  0870               	movf	fill_standby_settings@settings,w
 12788  1A0A  0086               	movwf	6
 12789  1A0B  0871               	movf	fill_standby_settings@settings+1,w
 12790  1A0C  0087               	movwf	7
 12791  1A0D  3144               	addfsr 1,4
 12792  1A0E  0801               	movf	1,w
 12793  1A0F  00F2               	movwf	??_fill_standby_settings
 12794  1A10  3005               	movlw	5
 12795  1A11                     u4285:	
 12796  1A11  35F2               	lslf	??_fill_standby_settings,f
 12797  1A12  0B89               	decfsz	9,f
 12798  1A13  2A11               	goto	u4285
 12799  1A14  30E0               	movlw	224
 12800  1A15  0572               	andwf	??_fill_standby_settings,w
 12801  1A16  00F3               	movwf	??_fill_standby_settings+1
 12802  1A17  0875               	movf	fill_standby_settings@reg_data,w
 12803  1A18  0086               	movwf	6
 12804  1A19  0187               	clrf	7
 12805  1A1A  0801               	movf	1,w
 12806  1A1B  391F               	andlw	31
 12807  1A1C  0473               	iorwf	??_fill_standby_settings+1,w
 12808  1A1D  00F4               	movwf	??_fill_standby_settings+2
 12809  1A1E  0875               	movf	fill_standby_settings@reg_data,w
 12810  1A1F  0086               	movwf	6
 12811  1A20  0187               	clrf	7
 12812  1A21  0874               	movf	??_fill_standby_settings+2,w
 12813  1A22  0081               	movwf	1
 12814  1A23  0008               	return
 12815  1A24                     __end_of_fill_standby_settings:	
 12816                           
 12817                           	psect	text45
 12818  19EC                     __ptext45:	
 12819 ;; *************** function _fill_filter_settings *****************
 12820 ;; Defined at:
 12821 ;;		line 892 in file "BME280_driver/bme280.c"
 12822 ;; Parameters:    Size  Location     Type
 12823 ;;  reg_data        1    wreg     PTR unsigned char 
 12824 ;;		 -> set_filter_standby_settings@reg_data(1), 
 12825 ;;  settings        2    0[COMMON] PTR const struct bme280_
 12826 ;;		 -> EnvSensor(51), put_device_to_sleep@settings(5), 
 12827 ;; Auto vars:     Size  Location     Type
 12828 ;;  reg_data        1    5[COMMON] PTR unsigned char 
 12829 ;;		 -> set_filter_standby_settings@reg_data(1), 
 12830 ;; Return value:  Size  Location     Type
 12831 ;;                  1    wreg      void 
 12832 ;; Registers used:
 12833 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12834 ;; Tracked objects:
 12835 ;;		On entry : 1F/0
 12836 ;;		On exit  : 1F/0
 12837 ;;		Unchanged: 1F/0
 12838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12839 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12840 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12841 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12842 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12843 ;;Total ram usage:        6 bytes
 12844 ;; Hardware stack levels used:    1
 12845 ;; Hardware stack levels required when called:    3
 12846 ;; This function calls:
 12847 ;;		Nothing
 12848 ;; This function is called by:
 12849 ;;		_set_filter_standby_settings
 12850 ;; This function uses a non-reentrant model
 12851 ;;
 12852                           
 12853                           
 12854                           ;psect for function _fill_filter_settings
 12855  19EC                     _fill_filter_settings:	
 12856                           
 12857                           ;incstack = 0
 12858                           ; Regs used in _fill_filter_settings: [wreg+fsr1l+fsr1h+status,2+status,0]
 12859                           ;fill_filter_settings@reg_data stored from wreg
 12860  19EC  00F5               	movwf	fill_filter_settings@reg_data
 12861                           
 12862                           ;BME280_driver/bme280.c: 892: static void fill_filter_settings(uint8_t *reg_data, const 
      +                          struct bme280_settings *settings);BME280_driver/bme280.c: 893: {;BME280_driver/bme280.c:
      +                           894:     *reg_data = ((*reg_data & ~( 0x1C)) | ((settings->filter << 0x02) & 0x1C));
 12863  19ED  0870               	movf	fill_filter_settings@settings,w
 12864  19EE  0086               	movwf	6
 12865  19EF  0871               	movf	fill_filter_settings@settings+1,w
 12866  19F0  0087               	movwf	7
 12867  19F1  3143               	addfsr 1,3
 12868  19F2  0801               	movf	1,w
 12869  19F3  00F2               	movwf	??_fill_filter_settings
 12870  19F4  3002               	movlw	2
 12871  19F5                     u4275:	
 12872  19F5  35F2               	lslf	??_fill_filter_settings,f
 12873  19F6  0B89               	decfsz	9,f
 12874  19F7  29F5               	goto	u4275
 12875  19F8  301C               	movlw	28
 12876  19F9  0572               	andwf	??_fill_filter_settings,w
 12877  19FA  00F3               	movwf	??_fill_filter_settings+1
 12878  19FB  0875               	movf	fill_filter_settings@reg_data,w
 12879  19FC  0086               	movwf	6
 12880  19FD  0187               	clrf	7
 12881  19FE  0801               	movf	1,w
 12882  19FF  39E3               	andlw	227
 12883  1A00  0473               	iorwf	??_fill_filter_settings+1,w
 12884  1A01  00F4               	movwf	??_fill_filter_settings+2
 12885  1A02  0875               	movf	fill_filter_settings@reg_data,w
 12886  1A03  0086               	movwf	6
 12887  1A04  0187               	clrf	7
 12888  1A05  0874               	movf	??_fill_filter_settings+2,w
 12889  1A06  0081               	movwf	1
 12890  1A07  0008               	return
 12891  1A08                     __end_of_fill_filter_settings:	
 12892                           
 12893                           	psect	text46
 12894  1074                     __ptext46:	
 12895 ;; *************** function _parse_device_settings *****************
 12896 ;; Defined at:
 12897 ;;		line 929 in file "BME280_driver/bme280.c"
 12898 ;; Parameters:    Size  Location     Type
 12899 ;;  reg_data        1    wreg     PTR const unsigned char 
 12900 ;;		 -> put_device_to_sleep@reg_data(4), bme280_get_sensor_settings@reg_data(4), 
 12901 ;;  settings        1    0[COMMON] PTR struct bme280_settin
 12902 ;;		 -> put_device_to_sleep@settings(5), 
 12903 ;; Auto vars:     Size  Location     Type
 12904 ;;  reg_data        1    3[COMMON] PTR const unsigned char 
 12905 ;;		 -> put_device_to_sleep@reg_data(4), bme280_get_sensor_settings@reg_data(4), 
 12906 ;; Return value:  Size  Location     Type
 12907 ;;                  1    wreg      void 
 12908 ;; Registers used:
 12909 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12910 ;; Tracked objects:
 12911 ;;		On entry : 1F/1
 12912 ;;		On exit  : 1F/1
 12913 ;;		Unchanged: 1F/0
 12914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12915 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12916 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12917 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12918 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12919 ;;Total ram usage:        4 bytes
 12920 ;; Hardware stack levels used:    1
 12921 ;; Hardware stack levels required when called:    3
 12922 ;; This function calls:
 12923 ;;		Nothing
 12924 ;; This function is called by:
 12925 ;;		_put_device_to_sleep
 12926 ;; This function uses a non-reentrant model
 12927 ;;
 12928                           
 12929                           
 12930                           ;psect for function _parse_device_settings
 12931  1074                     _parse_device_settings:	
 12932                           
 12933                           ;incstack = 0
 12934                           ; Regs used in _parse_device_settings: [wreg+fsr1l+fsr1h+status,2+status,0]
 12935                           ;parse_device_settings@reg_data stored from wreg
 12936  1074  00F3               	movwf	parse_device_settings@reg_data
 12937                           
 12938                           ;BME280_driver/bme280.c: 929: static void parse_device_settings(const uint8_t *reg_data,
      +                           struct bme280_settings *settings);BME280_driver/bme280.c: 930: {;BME280_driver/bme280.c
      +                          : 931:     settings->osr_h = (reg_data[0] & ( 0x07));
 12939  1075  0873               	movf	parse_device_settings@reg_data,w
 12940  1076  0086               	movwf	6
 12941  1077  0187               	clrf	7
 12942  1078  0801               	movf	1,w
 12943  1079  3907               	andlw	7
 12944  107A  00F1               	movwf	??_parse_device_settings
 12945  107B  0870               	movf	parse_device_settings@settings,w
 12946  107C  3E02               	addlw	2
 12947  107D  0086               	movwf	6
 12948  107E  0187               	clrf	7
 12949  107F  0871               	movf	??_parse_device_settings,w
 12950  1080  0081               	movwf	1
 12951                           
 12952                           ;BME280_driver/bme280.c: 932:     settings->osr_p = ((reg_data[2] & ( 0x1C)) >> ( 0x02))
      +                          ;
 12953  1081  0873               	movf	parse_device_settings@reg_data,w
 12954  1082  3E02               	addlw	2
 12955  1083  0086               	movwf	6
 12956  1084  0187               	clrf	7
 12957  1085  0801               	movf	1,w
 12958  1086  00F1               	movwf	??_parse_device_settings
 12959  1087  3002               	movlw	2
 12960  1088                     u4355:	
 12961  1088  36F1               	lsrf	??_parse_device_settings,f
 12962  1089  0B89               	decfsz	9,f
 12963  108A  2888               	goto	u4355
 12964  108B  0871               	movf	??_parse_device_settings,w
 12965  108C  3907               	andlw	7
 12966  108D  00F2               	movwf	??_parse_device_settings+1
 12967  108E  0870               	movf	parse_device_settings@settings,w
 12968  108F  0086               	movwf	6
 12969  1090  0187               	clrf	7
 12970  1091  0872               	movf	??_parse_device_settings+1,w
 12971  1092  0081               	movwf	1
 12972                           
 12973                           ;BME280_driver/bme280.c: 933:     settings->osr_t = ((reg_data[2] & ( 0xE0)) >> ( 0x05))
      +                          ;
 12974  1093  0873               	movf	parse_device_settings@reg_data,w
 12975  1094  3E02               	addlw	2
 12976  1095  0086               	movwf	6
 12977  1096  0187               	clrf	7
 12978  1097  0801               	movf	1,w
 12979  1098  00F1               	movwf	??_parse_device_settings
 12980  1099  3005               	movlw	5
 12981  109A                     u4365:	
 12982  109A  36F1               	lsrf	??_parse_device_settings,f
 12983  109B  0B89               	decfsz	9,f
 12984  109C  289A               	goto	u4365
 12985  109D  0871               	movf	??_parse_device_settings,w
 12986  109E  3907               	andlw	7
 12987  109F  00F2               	movwf	??_parse_device_settings+1
 12988  10A0  0A70               	incf	parse_device_settings@settings,w
 12989  10A1  0086               	movwf	6
 12990  10A2  0187               	clrf	7
 12991  10A3  0872               	movf	??_parse_device_settings+1,w
 12992  10A4  0081               	movwf	1
 12993                           
 12994                           ;BME280_driver/bme280.c: 934:     settings->filter = ((reg_data[3] & ( 0x1C)) >> ( 0x02)
      +                          );
 12995  10A5  0873               	movf	parse_device_settings@reg_data,w
 12996  10A6  3E03               	addlw	3
 12997  10A7  0086               	movwf	6
 12998  10A8  0187               	clrf	7
 12999  10A9  0801               	movf	1,w
 13000  10AA  00F1               	movwf	??_parse_device_settings
 13001  10AB  3002               	movlw	2
 13002  10AC                     u4375:	
 13003  10AC  36F1               	lsrf	??_parse_device_settings,f
 13004  10AD  0B89               	decfsz	9,f
 13005  10AE  28AC               	goto	u4375
 13006  10AF  0871               	movf	??_parse_device_settings,w
 13007  10B0  3907               	andlw	7
 13008  10B1  00F2               	movwf	??_parse_device_settings+1
 13009  10B2  0870               	movf	parse_device_settings@settings,w
 13010  10B3  3E03               	addlw	3
 13011  10B4  0086               	movwf	6
 13012  10B5  0187               	clrf	7
 13013  10B6  0872               	movf	??_parse_device_settings+1,w
 13014  10B7  0081               	movwf	1
 13015                           
 13016                           ;BME280_driver/bme280.c: 935:     settings->standby_time = ((reg_data[3] & ( 0xE0)) >> (
      +                           0x05));
 13017  10B8  0873               	movf	parse_device_settings@reg_data,w
 13018  10B9  3E03               	addlw	3
 13019  10BA  0086               	movwf	6
 13020  10BB  0187               	clrf	7
 13021  10BC  0801               	movf	1,w
 13022  10BD  00F1               	movwf	??_parse_device_settings
 13023  10BE  3005               	movlw	5
 13024  10BF                     u4385:	
 13025  10BF  36F1               	lsrf	??_parse_device_settings,f
 13026  10C0  0B89               	decfsz	9,f
 13027  10C1  28BF               	goto	u4385
 13028  10C2  0871               	movf	??_parse_device_settings,w
 13029  10C3  3907               	andlw	7
 13030  10C4  00F2               	movwf	??_parse_device_settings+1
 13031  10C5  0870               	movf	parse_device_settings@settings,w
 13032  10C6  3E04               	addlw	4
 13033  10C7  0086               	movwf	6
 13034  10C8  0187               	clrf	7
 13035  10C9  0872               	movf	??_parse_device_settings+1,w
 13036  10CA  0081               	movwf	1
 13037  10CB  0008               	return
 13038  10CC                     __end_of_parse_device_settings:	
 13039                           
 13040                           	psect	text47
 13041  1B63                     __ptext47:	
 13042 ;; *************** function _bme280_get_sensor_mode *****************
 13043 ;; Defined at:
 13044 ;;		line 610 in file "BME280_driver/bme280.c"
 13045 ;; Parameters:    Size  Location     Type
 13046 ;;  sensor_mode     1    wreg     PTR unsigned char 
 13047 ;;		 -> bme280_set_sensor_mode@last_set_mode(1), bme280_set_sensor_settings@sensor_mode(1), 
 13048 ;;  dev             1   37[BANK0 ] PTR const struct bme280_
 13049 ;;		 -> EnvSensor(51), 
 13050 ;; Auto vars:     Size  Location     Type
 13051 ;;  sensor_mode     1   41[BANK0 ] PTR unsigned char 
 13052 ;;		 -> bme280_set_sensor_mode@last_set_mode(1), bme280_set_sensor_settings@sensor_mode(1), 
 13053 ;;  rslt            1   40[BANK0 ] char 
 13054 ;; Return value:  Size  Location     Type
 13055 ;;                  1    wreg      char 
 13056 ;; Registers used:
 13057 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13058 ;; Tracked objects:
 13059 ;;		On entry : 1F/0
 13060 ;;		On exit  : 1F/0
 13061 ;;		Unchanged: 0/0
 13062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13063 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13064 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13065 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13066 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13067 ;;Total ram usage:        5 bytes
 13068 ;; Hardware stack levels used:    1
 13069 ;; Hardware stack levels required when called:   10
 13070 ;; This function calls:
 13071 ;;		_bme280_get_regs
 13072 ;;		_null_ptr_check
 13073 ;; This function is called by:
 13074 ;;		_bme280_set_sensor_settings
 13075 ;;		_bme280_set_sensor_mode
 13076 ;; This function uses a non-reentrant model
 13077 ;;
 13078                           
 13079                           
 13080                           ;psect for function _bme280_get_sensor_mode
 13081  1B63                     _bme280_get_sensor_mode:	
 13082                           
 13083                           ;incstack = 0
 13084                           ; Regs used in _bme280_get_sensor_mode: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
 13085                           ;bme280_get_sensor_mode@sensor_mode stored from wreg
 13086  1B63  00C9               	movwf	bme280_get_sensor_mode@sensor_mode
 13087                           
 13088                           ;BME280_driver/bme280.c: 610: int8_t bme280_get_sensor_mode(uint8_t *sensor_mode, const 
      +                          struct bme280_dev *dev);BME280_driver/bme280.c: 611: {;BME280_driver/bme280.c: 612:     
      +                          int8_t rslt;;BME280_driver/bme280.c: 615:     rslt = null_ptr_check(dev);
 13089  1B64  0845               	movf	bme280_get_sensor_mode@dev,w
 13090  1B65  319A  2247  319B   	fcall	_null_ptr_check
 13091  1B68  0020               	movlb	0	; select bank0
 13092  1B69  00C6               	movwf	??_bme280_get_sensor_mode
 13093  1B6A  0846               	movf	??_bme280_get_sensor_mode,w
 13094  1B6B  00C8               	movwf	bme280_get_sensor_mode@rslt
 13095                           
 13096                           ;BME280_driver/bme280.c: 616:     if (rslt == 0)
 13097  1B6C  0848               	movf	bme280_get_sensor_mode@rslt,w
 13098  1B6D  1D03               	btfss	3,2
 13099  1B6E  2B8C               	goto	l4184
 13100                           
 13101                           ;BME280_driver/bme280.c: 617:     {;BME280_driver/bme280.c: 619:         rslt = bme280_g
      +                          et_regs(0xF4, sensor_mode, 1, dev);
 13102  1B6F  0849               	movf	bme280_get_sensor_mode@sensor_mode,w
 13103  1B70  00BC               	movwf	bme280_get_regs@reg_data
 13104  1B71  3000               	movlw	0
 13105  1B72  00BD               	movwf	bme280_get_regs@reg_data+1
 13106  1B73  3001               	movlw	1
 13107  1B74  00BE               	movwf	bme280_get_regs@len
 13108  1B75  3000               	movlw	0
 13109  1B76  00BF               	movwf	bme280_get_regs@len+1
 13110  1B77  0845               	movf	bme280_get_sensor_mode@dev,w
 13111  1B78  00C6               	movwf	??_bme280_get_sensor_mode
 13112  1B79  0846               	movf	??_bme280_get_sensor_mode,w
 13113  1B7A  00C0               	movwf	bme280_get_regs@dev
 13114  1B7B  30F4               	movlw	244
 13115  1B7C  319D  256F         	fcall	_bme280_get_regs
 13116  1B7E  00C7               	movwf	??_bme280_get_sensor_mode+1
 13117  1B7F  0847               	movf	??_bme280_get_sensor_mode+1,w
 13118  1B80  00C8               	movwf	bme280_get_sensor_mode@rslt
 13119                           
 13120                           ;BME280_driver/bme280.c: 622:         *sensor_mode = (*sensor_mode & ( 0x03));
 13121  1B81  0849               	movf	bme280_get_sensor_mode@sensor_mode,w
 13122  1B82  0086               	movwf	6
 13123  1B83  0187               	clrf	7
 13124  1B84  0801               	movf	1,w
 13125  1B85  3903               	andlw	3
 13126  1B86  00C6               	movwf	??_bme280_get_sensor_mode
 13127  1B87  0849               	movf	bme280_get_sensor_mode@sensor_mode,w
 13128  1B88  0086               	movwf	6
 13129  1B89  0187               	clrf	7
 13130  1B8A  0846               	movf	??_bme280_get_sensor_mode,w
 13131  1B8B  0081               	movwf	1
 13132  1B8C                     l4184:	
 13133                           
 13134                           ;BME280_driver/bme280.c: 625:     return rslt;
 13135  1B8C  0848               	movf	bme280_get_sensor_mode@rslt,w
 13136  1B8D  0008               	return
 13137  1B8E                     __end_of_bme280_get_sensor_mode:	
 13138                           
 13139                           	psect	text48
 13140  1129                     __ptext48:	
 13141 ;; *************** function _bme280_init *****************
 13142 ;; Defined at:
 13143 ;;		line 357 in file "BME280_driver/bme280.c"
 13144 ;; Parameters:    Size  Location     Type
 13145 ;;  dev             1    wreg     PTR struct bme280_dev
 13146 ;;		 -> EnvSensor(51), 
 13147 ;; Auto vars:     Size  Location     Type
 13148 ;;  dev             1   73[BANK0 ] PTR struct bme280_dev
 13149 ;;		 -> EnvSensor(51), 
 13150 ;;  rslt            1   72[BANK0 ] char 
 13151 ;;  chip_id         1   71[BANK0 ] unsigned char 
 13152 ;;  try_count       1   70[BANK0 ] unsigned char 
 13153 ;; Return value:  Size  Location     Type
 13154 ;;                  1    wreg      char 
 13155 ;; Registers used:
 13156 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13157 ;; Tracked objects:
 13158 ;;		On entry : 1F/3
 13159 ;;		On exit  : 1F/0
 13160 ;;		Unchanged: 0/0
 13161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13163 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13164 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13165 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13166 ;;Total ram usage:        6 bytes
 13167 ;; Hardware stack levels used:    1
 13168 ;; Hardware stack levels required when called:   11
 13169 ;; This function calls:
 13170 ;;		_Sleep
 13171 ;;		_bme280_get_regs
 13172 ;;		_bme280_soft_reset
 13173 ;;		_get_calib_data
 13174 ;;		_null_ptr_check
 13175 ;; This function is called by:
 13176 ;;		_BME280_Init
 13177 ;; This function uses a non-reentrant model
 13178 ;;
 13179                           
 13180                           
 13181                           ;psect for function _bme280_init
 13182  1129                     _bme280_init:	
 13183                           
 13184                           ;incstack = 0
 13185                           ; Regs used in _bme280_init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13186                           ;bme280_init@dev stored from wreg
 13187  1129  0020               	movlb	0	; select bank0
 13188  112A  00E9               	movwf	bme280_init@dev
 13189                           
 13190                           ;BME280_driver/bme280.c: 357: int8_t bme280_init(struct bme280_dev *dev);BME280_driver/b
      +                          me280.c: 358: {;BME280_driver/bme280.c: 359:     int8_t rslt;;BME280_driver/bme280.c: 36
      +                          2:     uint8_t try_count = 5;
 13191  112B  3005               	movlw	5
 13192  112C  00E4               	movwf	??_bme280_init
 13193  112D  0864               	movf	??_bme280_init,w
 13194  112E  00E6               	movwf	bme280_init@try_count
 13195                           
 13196                           ;BME280_driver/bme280.c: 363:     uint8_t chip_id = 0;
 13197  112F  01E7               	clrf	bme280_init@chip_id
 13198                           
 13199                           ;BME280_driver/bme280.c: 366:     rslt = null_ptr_check(dev);
 13200  1130  0869               	movf	bme280_init@dev,w
 13201  1131  319A  2247  3191   	fcall	_null_ptr_check
 13202  1134  0020               	movlb	0	; select bank0
 13203  1135  00E4               	movwf	??_bme280_init
 13204  1136  0864               	movf	??_bme280_init,w
 13205  1137  00E8               	movwf	bme280_init@rslt
 13206                           
 13207                           ;BME280_driver/bme280.c: 369:     if (rslt == 0)
 13208  1138  0868               	movf	bme280_init@rslt,w
 13209  1139  1903               	btfsc	3,2
 13210  113A  2985               	goto	l4332
 13211  113B  298F               	goto	l53
 13212  113C                     l4314:	
 13213                           
 13214                           ;BME280_driver/bme280.c: 372:         {;BME280_driver/bme280.c: 374:             rslt = 
      +                          bme280_get_regs(0xD0, &chip_id, 1, dev);
 13215  113C  3067               	movlw	low bme280_init@chip_id
 13216  113D  00BC               	movwf	bme280_get_regs@reg_data
 13217  113E  3000               	movlw	high bme280_init@chip_id
 13218  113F  00BD               	movwf	bme280_get_regs@reg_data+1
 13219  1140  3001               	movlw	1
 13220  1141  00BE               	movwf	bme280_get_regs@len
 13221  1142  3000               	movlw	0
 13222  1143  00BF               	movwf	bme280_get_regs@len+1
 13223  1144  0869               	movf	bme280_init@dev,w
 13224  1145  00E4               	movwf	??_bme280_init
 13225  1146  0864               	movf	??_bme280_init,w
 13226  1147  00C0               	movwf	bme280_get_regs@dev
 13227  1148  30D0               	movlw	208
 13228  1149  319D  256F  3191   	fcall	_bme280_get_regs
 13229  114C  00E5               	movwf	??_bme280_init+1
 13230  114D  0865               	movf	??_bme280_init+1,w
 13231  114E  00E8               	movwf	bme280_init@rslt
 13232                           
 13233                           ;BME280_driver/bme280.c: 377:             if ((rslt == 0) && (chip_id == 0x60))
 13234  114F  0868               	movf	bme280_init@rslt,w
 13235  1150  1D03               	btfss	3,2
 13236  1151  2970               	goto	l4328
 13237  1152  3060               	movlw	96
 13238  1153  0667               	xorwf	bme280_init@chip_id,w
 13239  1154  1D03               	btfss	3,2
 13240  1155  2970               	goto	l4328
 13241                           
 13242                           ;BME280_driver/bme280.c: 378:             {;BME280_driver/bme280.c: 379:                
      +                           dev->chip_id = chip_id;
 13243  1156  0867               	movf	bme280_init@chip_id,w
 13244  1157  00E4               	movwf	??_bme280_init
 13245  1158  0869               	movf	bme280_init@dev,w
 13246  1159  0086               	movwf	6
 13247  115A  3001               	movlw	1	; select bank2/3
 13248  115B  0087               	movwf	7
 13249  115C  0864               	movf	??_bme280_init,w
 13250  115D  0081               	movwf	1
 13251                           
 13252                           ;BME280_driver/bme280.c: 382:                 rslt = bme280_soft_reset(dev);
 13253  115E  0869               	movf	bme280_init@dev,w
 13254  115F  319C  247A  3191   	fcall	_bme280_soft_reset
 13255  1162  00E4               	movwf	??_bme280_init
 13256  1163  0864               	movf	??_bme280_init,w
 13257  1164  00E8               	movwf	bme280_init@rslt
 13258                           
 13259                           ;BME280_driver/bme280.c: 383:                 if (rslt == 0)
 13260  1165  0868               	movf	bme280_init@rslt,w
 13261  1166  1D03               	btfss	3,2
 13262  1167  2988               	goto	l4334
 13263                           
 13264                           ;BME280_driver/bme280.c: 384:                 {;BME280_driver/bme280.c: 386:            
      +                                   rslt = get_calib_data(dev);
 13265  1168  0869               	movf	bme280_init@dev,w
 13266  1169  319E  267F  3191   	fcall	_get_calib_data
 13267  116C  00E4               	movwf	??_bme280_init
 13268  116D  0864               	movf	??_bme280_init,w
 13269  116E  00E8               	movwf	bme280_init@rslt
 13270  116F  2988               	goto	l4334
 13271  1170                     l4328:	
 13272                           
 13273                           ;BME280_driver/bme280.c: 392:             dev->delay_ms(1);
 13274  1170  3000               	movlw	0
 13275  1171  00F3               	movwf	Sleep@ms+3
 13276  1172  3000               	movlw	0
 13277  1173  00F2               	movwf	Sleep@ms+2
 13278  1174  3000               	movlw	0
 13279  1175  00F1               	movwf	Sleep@ms+1
 13280  1176  3001               	movlw	1
 13281  1177  00F0               	movwf	Sleep@ms
 13282  1178  0869               	movf	bme280_init@dev,w
 13283  1179  3E07               	addlw	7
 13284  117A  0086               	movwf	6
 13285  117B  3001               	movlw	1	; select bank2/3
 13286  117C  0087               	movwf	7
 13287  117D  3F41               	moviw [1]fsr1
 13288  117E  008A               	movwf	10
 13289  117F  3F40               	moviw [0]fsr1
 13290  1180  000A               	callw
 13291  1181  3191               	pagesel	$
 13292                           
 13293                           ;BME280_driver/bme280.c: 393:             --try_count;
 13294  1182  3001               	movlw	1
 13295  1183  0020               	movlb	0	; select bank0
 13296  1184  02E6               	subwf	bme280_init@try_count,f
 13297  1185                     l4332:	
 13298                           
 13299                           ;BME280_driver/bme280.c: 371:         while (try_count)
 13300  1185  0866               	movf	bme280_init@try_count,w
 13301  1186  1D03               	btfss	3,2
 13302  1187  293C               	goto	l4314
 13303  1188                     l4334:	
 13304                           
 13305                           ;BME280_driver/bme280.c: 397:         if (!try_count)
 13306  1188  0866               	movf	bme280_init@try_count,w
 13307  1189  1D03               	btfss	3,2
 13308  118A  298F               	goto	l53
 13309                           
 13310                           ;BME280_driver/bme280.c: 398:         {;BME280_driver/bme280.c: 399:             rslt = 
      +                          -2;
 13311  118B  30FE               	movlw	254
 13312  118C  00E4               	movwf	??_bme280_init
 13313  118D  0864               	movf	??_bme280_init,w
 13314  118E  00E8               	movwf	bme280_init@rslt
 13315  118F                     l53:	
 13316                           ;BME280_driver/bme280.c: 401:     }
 13317                           
 13318                           
 13319                           ;BME280_driver/bme280.c: 403:     return rslt;
 13320  118F  0868               	movf	bme280_init@rslt,w
 13321  1190  0008               	return
 13322  1191                     __end_of_bme280_init:	
 13323                           
 13324                           	psect	text49
 13325  1E7F                     __ptext49:	
 13326 ;; *************** function _get_calib_data *****************
 13327 ;; Defined at:
 13328 ;;		line 1307 in file "BME280_driver/bme280.c"
 13329 ;; Parameters:    Size  Location     Type
 13330 ;;  dev             1    wreg     PTR struct bme280_dev
 13331 ;;		 -> EnvSensor(51), 
 13332 ;; Auto vars:     Size  Location     Type
 13333 ;;  dev             1   67[BANK0 ] PTR struct bme280_dev
 13334 ;;		 -> EnvSensor(51), 
 13335 ;;  calib_data     26   39[BANK0 ] unsigned char [26]
 13336 ;;  rslt            1   66[BANK0 ] char 
 13337 ;;  reg_addr        1    0        unsigned char 
 13338 ;; Return value:  Size  Location     Type
 13339 ;;                  1    wreg      char 
 13340 ;; Registers used:
 13341 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13342 ;; Tracked objects:
 13343 ;;		On entry : 1F/0
 13344 ;;		On exit  : 1F/0
 13345 ;;		Unchanged: 0/0
 13346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13348 ;;      Locals:         0      29       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13349 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13350 ;;      Totals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13351 ;;Total ram usage:       31 bytes
 13352 ;; Hardware stack levels used:    1
 13353 ;; Hardware stack levels required when called:   10
 13354 ;; This function calls:
 13355 ;;		_bme280_get_regs
 13356 ;;		_parse_humidity_calib_data
 13357 ;;		_parse_temp_press_calib_data
 13358 ;; This function is called by:
 13359 ;;		_bme280_init
 13360 ;; This function uses a non-reentrant model
 13361 ;;
 13362                           
 13363                           
 13364                           ;psect for function _get_calib_data
 13365  1E7F                     _get_calib_data:	
 13366                           
 13367                           ;incstack = 0
 13368                           ; Regs used in _get_calib_data: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13369                           ;get_calib_data@dev stored from wreg
 13370  1E7F  00E3               	movwf	get_calib_data@dev
 13371                           
 13372                           ;BME280_driver/bme280.c: 1313:     uint8_t calib_data[26] = { 0 };
 13373  1E80  3047               	movlw	low get_calib_data@calib_data
 13374  1E81  0086               	movwf	6
 13375  1E82  3000               	movlw	high get_calib_data@calib_data
 13376  1E83  0087               	movwf	7
 13377  1E84  301A               	movlw	26
 13378  1E85  00C5               	movwf	??_get_calib_data
 13379  1E86  3000               	movlw	0
 13380  1E87                     u4410:	
 13381  1E87  001E               	movwi fsr1++
 13382  1E88  0BC5               	decfsz	??_get_calib_data,f
 13383  1E89  2E87               	goto	u4410
 13384                           
 13385                           ;BME280_driver/bme280.c: 1316:     rslt = bme280_get_regs(reg_addr, calib_data, 26, dev)
      +                          ;
 13386  1E8A  3047               	movlw	low get_calib_data@calib_data
 13387  1E8B  00BC               	movwf	bme280_get_regs@reg_data
 13388  1E8C  3000               	movlw	high get_calib_data@calib_data
 13389  1E8D  00BD               	movwf	bme280_get_regs@reg_data+1
 13390  1E8E  301A               	movlw	26
 13391  1E8F  00BE               	movwf	bme280_get_regs@len
 13392  1E90  3000               	movlw	0
 13393  1E91  00BF               	movwf	bme280_get_regs@len+1
 13394  1E92  0863               	movf	get_calib_data@dev,w
 13395  1E93  00C5               	movwf	??_get_calib_data
 13396  1E94  0845               	movf	??_get_calib_data,w
 13397  1E95  00C0               	movwf	bme280_get_regs@dev
 13398  1E96  3088               	movlw	136
 13399  1E97  319D  256F  319E   	fcall	_bme280_get_regs
 13400  1E9A  00C6               	movwf	??_get_calib_data+1
 13401  1E9B  0846               	movf	??_get_calib_data+1,w
 13402  1E9C  00E2               	movwf	get_calib_data@rslt
 13403                           
 13404                           ;BME280_driver/bme280.c: 1317:     if (rslt == 0)
 13405  1E9D  0862               	movf	get_calib_data@rslt,w
 13406  1E9E  1D03               	btfss	3,2
 13407  1E9F  2EC5               	goto	l4172
 13408                           
 13409                           ;BME280_driver/bme280.c: 1318:     {;BME280_driver/bme280.c: 1322:         parse_temp_pr
      +                          ess_calib_data(calib_data, dev);
 13410  1EA0  0863               	movf	get_calib_data@dev,w
 13411  1EA1  00C5               	movwf	??_get_calib_data
 13412  1EA2  0845               	movf	??_get_calib_data,w
 13413  1EA3  00F0               	movwf	parse_temp_press_calib_data@dev
 13414  1EA4  3047               	movlw	(low (get_calib_data@calib_data| 0))& (0+255)
 13415  1EA5  3185  25EC  319E   	fcall	_parse_temp_press_calib_data
 13416                           
 13417                           ;BME280_driver/bme280.c: 1326:         rslt = bme280_get_regs(reg_addr, calib_data, 7, d
      +                          ev);
 13418  1EA8  3047               	movlw	low get_calib_data@calib_data
 13419  1EA9  00BC               	movwf	bme280_get_regs@reg_data
 13420  1EAA  3000               	movlw	high get_calib_data@calib_data
 13421  1EAB  00BD               	movwf	bme280_get_regs@reg_data+1
 13422  1EAC  3007               	movlw	7
 13423  1EAD  00BE               	movwf	bme280_get_regs@len
 13424  1EAE  3000               	movlw	0
 13425  1EAF  00BF               	movwf	bme280_get_regs@len+1
 13426  1EB0  0863               	movf	get_calib_data@dev,w
 13427  1EB1  00C5               	movwf	??_get_calib_data
 13428  1EB2  0845               	movf	??_get_calib_data,w
 13429  1EB3  00C0               	movwf	bme280_get_regs@dev
 13430  1EB4  30E1               	movlw	225
 13431  1EB5  319D  256F  319E   	fcall	_bme280_get_regs
 13432  1EB8  00C6               	movwf	??_get_calib_data+1
 13433  1EB9  0846               	movf	??_get_calib_data+1,w
 13434  1EBA  00E2               	movwf	get_calib_data@rslt
 13435                           
 13436                           ;BME280_driver/bme280.c: 1327:         if (rslt == 0)
 13437  1EBB  0862               	movf	get_calib_data@rslt,w
 13438  1EBC  1D03               	btfss	3,2
 13439  1EBD  2EC5               	goto	l4172
 13440                           
 13441                           ;BME280_driver/bme280.c: 1328:         {;BME280_driver/bme280.c: 1332:             parse
      +                          _humidity_calib_data(calib_data, dev);
 13442  1EBE  0863               	movf	get_calib_data@dev,w
 13443  1EBF  00C5               	movwf	??_get_calib_data
 13444  1EC0  0845               	movf	??_get_calib_data,w
 13445  1EC1  00F0               	movwf	parse_humidity_calib_data@dev
 13446  1EC2  3047               	movlw	(low (get_calib_data@calib_data| 0))& (0+255)
 13447  1EC3  3195  2586         	fcall	_parse_humidity_calib_data
 13448  1EC5                     l4172:	
 13449                           
 13450                           ;BME280_driver/bme280.c: 1336:     return rslt;
 13451  1EC5  0862               	movf	get_calib_data@rslt,w
 13452  1EC6  0008               	return
 13453  1EC7                     __end_of_get_calib_data:	
 13454                           
 13455                           	psect	text50
 13456  05EC                     __ptext50:	
 13457 ;; *************** function _parse_temp_press_calib_data *****************
 13458 ;; Defined at:
 13459 ;;		line 1358 in file "BME280_driver/bme280.c"
 13460 ;; Parameters:    Size  Location     Type
 13461 ;;  reg_data        1    wreg     PTR const unsigned char 
 13462 ;;		 -> get_calib_data@calib_data(26), 
 13463 ;;  dev             1    0[COMMON] PTR struct bme280_dev
 13464 ;;		 -> EnvSensor(51), 
 13465 ;; Auto vars:     Size  Location     Type
 13466 ;;  reg_data        1    3[COMMON] PTR const unsigned char 
 13467 ;;		 -> get_calib_data@calib_data(26), 
 13468 ;;  calib_data      1    2[COMMON] PTR struct bme280_calib_
 13469 ;;		 -> EnvSensor.calib_data(37), EnvSensor(51), 
 13470 ;; Return value:  Size  Location     Type
 13471 ;;                  1    wreg      void 
 13472 ;; Registers used:
 13473 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 13474 ;; Tracked objects:
 13475 ;;		On entry : 1F/0
 13476 ;;		On exit  : 1F/0
 13477 ;;		Unchanged: 1F/0
 13478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13479 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13480 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13481 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13482 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13483 ;;Total ram usage:        4 bytes
 13484 ;; Hardware stack levels used:    1
 13485 ;; Hardware stack levels required when called:    3
 13486 ;; This function calls:
 13487 ;;		Nothing
 13488 ;; This function is called by:
 13489 ;;		_get_calib_data
 13490 ;; This function uses a non-reentrant model
 13491 ;;
 13492                           
 13493                           
 13494                           ;psect for function _parse_temp_press_calib_data
 13495  05EC                     _parse_temp_press_calib_data:	
 13496                           
 13497                           ;incstack = 0
 13498                           ; Regs used in _parse_temp_press_calib_data: [wreg-fsr1h+status,2+status,0]
 13499                           ;parse_temp_press_calib_data@reg_data stored from wreg
 13500  05EC  00F3               	movwf	parse_temp_press_calib_data@reg_data
 13501                           
 13502                           ;BME280_driver/bme280.c: 1358: static void parse_temp_press_calib_data(const uint8_t *re
      +                          g_data, struct bme280_dev *dev);BME280_driver/bme280.c: 1359: {;BME280_driver/bme280.c: 
      +                          1360:     struct bme280_calib_data *calib_data = &dev->calib_data;
 13503  05ED  0870               	movf	parse_temp_press_calib_data@dev,w
 13504  05EE  3E09               	addlw	9
 13505  05EF  00F1               	movwf	??_parse_temp_press_calib_data
 13506  05F0  0871               	movf	??_parse_temp_press_calib_data,w
 13507  05F1  00F2               	movwf	parse_temp_press_calib_data@calib_data
 13508                           
 13509                           ;BME280_driver/bme280.c: 1362:     calib_data->dig_T1 = (((uint16_t)reg_data[1] << 8) | 
      +                          (uint16_t)reg_data[0]);
 13510  05F2  0A73               	incf	parse_temp_press_calib_data@reg_data,w
 13511  05F3  0084               	movwf	4
 13512  05F4  0185               	clrf	5
 13513  05F5  0800               	movf	0,w
 13514  05F6  00F1               	movwf	??_parse_temp_press_calib_data
 13515  05F7  0873               	movf	parse_temp_press_calib_data@reg_data,w
 13516  05F8  0084               	movwf	4
 13517  05F9  0185               	clrf	5
 13518  05FA  0872               	movf	parse_temp_press_calib_data@calib_data,w
 13519  05FB  0086               	movwf	6
 13520  05FC  3001               	movlw	1	; select bank2/3
 13521  05FD  0087               	movwf	7
 13522  05FE  0800               	movf	0,w
 13523  05FF  3FC0               	movwi [0]fsr1
 13524  0600  0871               	movf	??_parse_temp_press_calib_data,w
 13525  0601  3FC1               	movwi [1]fsr1
 13526                           
 13527                           ;BME280_driver/bme280.c: 1363:     calib_data->dig_T2 = (int16_t)(((uint16_t)reg_data[3]
      +                           << 8) | (uint16_t)reg_data[2]);
 13528  0602  0873               	movf	parse_temp_press_calib_data@reg_data,w
 13529  0603  3E03               	addlw	3
 13530  0604  0084               	movwf	4
 13531  0605  0185               	clrf	5
 13532  0606  0800               	movf	0,w
 13533  0607  00F1               	movwf	??_parse_temp_press_calib_data
 13534  0608  0873               	movf	parse_temp_press_calib_data@reg_data,w
 13535  0609  3E02               	addlw	2
 13536  060A  0084               	movwf	4
 13537  060B  0185               	clrf	5
 13538  060C  0872               	movf	parse_temp_press_calib_data@calib_data,w
 13539  060D  3E02               	addlw	2
 13540  060E  0086               	movwf	6
 13541  060F  3001               	movlw	1	; select bank2/3
 13542  0610  0087               	movwf	7
 13543  0611  0800               	movf	0,w
 13544  0612  3FC0               	movwi [0]fsr1
 13545  0613  0871               	movf	??_parse_temp_press_calib_data,w
 13546  0614  3FC1               	movwi [1]fsr1
 13547                           
 13548                           ;BME280_driver/bme280.c: 1364:     calib_data->dig_T3 = (int16_t)(((uint16_t)reg_data[5]
      +                           << 8) | (uint16_t)reg_data[4]);
 13549  0615  0873               	movf	parse_temp_press_calib_data@reg_data,w
 13550  0616  3E05               	addlw	5
 13551  0617  0084               	movwf	4
 13552  0618  0185               	clrf	5
 13553  0619  0800               	movf	0,w
 13554  061A  00F1               	movwf	??_parse_temp_press_calib_data
 13555  061B  0873               	movf	parse_temp_press_calib_data@reg_data,w
 13556  061C  3E04               	addlw	4
 13557  061D  0084               	movwf	4
 13558  061E  0185               	clrf	5
 13559  061F  0872               	movf	parse_temp_press_calib_data@calib_data,w
 13560  0620  3E04               	addlw	4
 13561  0621  0086               	movwf	6
 13562  0622  3001               	movlw	1	; select bank2/3
 13563  0623  0087               	movwf	7
 13564  0624  0800               	movf	0,w
 13565  0625  3FC0               	movwi [0]fsr1
 13566  0626  0871               	movf	??_parse_temp_press_calib_data,w
 13567  0627  3FC1               	movwi [1]fsr1
 13568                           
 13569                           ;BME280_driver/bme280.c: 1365:     calib_data->dig_P1 = (((uint16_t)reg_data[7] << 8) | 
      +                          (uint16_t)reg_data[6]);
 13570  0628  0873               	movf	parse_temp_press_calib_data@reg_data,w
 13571  0629  3E07               	addlw	7
 13572  062A  0084               	movwf	4
 13573  062B  0185               	clrf	5
 13574  062C  0800               	movf	0,w
 13575  062D  00F1               	movwf	??_parse_temp_press_calib_data
 13576  062E  0873               	movf	parse_temp_press_calib_data@reg_data,w
 13577  062F  3E06               	addlw	6
 13578  0630  0084               	movwf	4
 13579  0631  0185               	clrf	5
 13580  0632  0872               	movf	parse_temp_press_calib_data@calib_data,w
 13581  0633  3E06               	addlw	6
 13582  0634  0086               	movwf	6
 13583  0635  3001               	movlw	1	; select bank2/3
 13584  0636  0087               	movwf	7
 13585  0637  0800               	movf	0,w
 13586  0638  3FC0               	movwi [0]fsr1
 13587  0639  0871               	movf	??_parse_temp_press_calib_data,w
 13588  063A  3FC1               	movwi [1]fsr1
 13589                           
 13590                           ;BME280_driver/bme280.c: 1366:     calib_data->dig_P2 = (int16_t)(((uint16_t)reg_data[9]
      +                           << 8) | (uint16_t)reg_data[8]);
 13591  063B  0873               	movf	parse_temp_press_calib_data@reg_data,w
 13592  063C  3E09               	addlw	9
 13593  063D  0084               	movwf	4
 13594  063E  0185               	clrf	5
 13595  063F  0800               	movf	0,w
 13596  0640  00F1               	movwf	??_parse_temp_press_calib_data
 13597  0641  0873               	movf	parse_temp_press_calib_data@reg_data,w
 13598  0642  3E08               	addlw	8
 13599  0643  0084               	movwf	4
 13600  0644  0185               	clrf	5
 13601  0645  0872               	movf	parse_temp_press_calib_data@calib_data,w
 13602  0646  3E08               	addlw	8
 13603  0647  0086               	movwf	6
 13604  0648  3001               	movlw	1	; select bank2/3
 13605  0649  0087               	movwf	7
 13606  064A  0800               	movf	0,w
 13607  064B  3FC0               	movwi [0]fsr1
 13608  064C  0871               	movf	??_parse_temp_press_calib_data,w
 13609  064D  3FC1               	movwi [1]fsr1
 13610                           
 13611                           ;BME280_driver/bme280.c: 1367:     calib_data->dig_P3 = (int16_t)(((uint16_t)reg_data[11
      +                          ] << 8) | (uint16_t)reg_data[10]);
 13612  064E  0873               	movf	parse_temp_press_calib_data@reg_data,w
 13613  064F  3E0B               	addlw	11
 13614  0650  0084               	movwf	4
 13615  0651  0185               	clrf	5
 13616  0652  0800               	movf	0,w
 13617  0653  00F1               	movwf	??_parse_temp_press_calib_data
 13618  0654  0873               	movf	parse_temp_press_calib_data@reg_data,w
 13619  0655  3E0A               	addlw	10
 13620  0656  0084               	movwf	4
 13621  0657  0185               	clrf	5
 13622  0658  0872               	movf	parse_temp_press_calib_data@calib_data,w
 13623  0659  3E0A               	addlw	10
 13624  065A  0086               	movwf	6
 13625  065B  3001               	movlw	1	; select bank2/3
 13626  065C  0087               	movwf	7
 13627  065D  0800               	movf	0,w
 13628  065E  3FC0               	movwi [0]fsr1
 13629  065F  0871               	movf	??_parse_temp_press_calib_data,w
 13630  0660  3FC1               	movwi [1]fsr1
 13631                           
 13632                           ;BME280_driver/bme280.c: 1368:     calib_data->dig_P4 = (int16_t)(((uint16_t)reg_data[13
      +                          ] << 8) | (uint16_t)reg_data[12]);
 13633  0661  0873               	movf	parse_temp_press_calib_data@reg_data,w
 13634  0662  3E0D               	addlw	13
 13635  0663  0084               	movwf	4
 13636  0664  0185               	clrf	5
 13637  0665  0800               	movf	0,w
 13638  0666  00F1               	movwf	??_parse_temp_press_calib_data
 13639  0667  0873               	movf	parse_temp_press_calib_data@reg_data,w
 13640  0668  3E0C               	addlw	12
 13641  0669  0084               	movwf	4
 13642  066A  0185               	clrf	5
 13643  066B  0872               	movf	parse_temp_press_calib_data@calib_data,w
 13644  066C  3E0C               	addlw	12
 13645  066D  0086               	movwf	6
 13646  066E  3001               	movlw	1	; select bank2/3
 13647  066F  0087               	movwf	7
 13648  0670  0800               	movf	0,w
 13649  0671  3FC0               	movwi [0]fsr1
 13650  0672  0871               	movf	??_parse_temp_press_calib_data,w
 13651  0673  3FC1               	movwi [1]fsr1
 13652                           
 13653                           ;BME280_driver/bme280.c: 1369:     calib_data->dig_P5 = (int16_t)(((uint16_t)reg_data[15
      +                          ] << 8) | (uint16_t)reg_data[14]);
 13654  0674  0873               	movf	parse_temp_press_calib_data@reg_data,w
 13655  0675  3E0F               	addlw	15
 13656  0676  0084               	movwf	4
 13657  0677  0185               	clrf	5
 13658  0678  0800               	movf	0,w
 13659  0679  00F1               	movwf	??_parse_temp_press_calib_data
 13660  067A  0873               	movf	parse_temp_press_calib_data@reg_data,w
 13661  067B  3E0E               	addlw	14
 13662  067C  0084               	movwf	4
 13663  067D  0185               	clrf	5
 13664  067E  0872               	movf	parse_temp_press_calib_data@calib_data,w
 13665  067F  3E0E               	addlw	14
 13666  0680  0086               	movwf	6
 13667  0681  3001               	movlw	1	; select bank2/3
 13668  0682  0087               	movwf	7
 13669  0683  0800               	movf	0,w
 13670  0684  3FC0               	movwi [0]fsr1
 13671  0685  0871               	movf	??_parse_temp_press_calib_data,w
 13672  0686  3FC1               	movwi [1]fsr1
 13673                           
 13674                           ;BME280_driver/bme280.c: 1370:     calib_data->dig_P6 = (int16_t)(((uint16_t)reg_data[17
      +                          ] << 8) | (uint16_t)reg_data[16]);
 13675  0687  0873               	movf	parse_temp_press_calib_data@reg_data,w
 13676  0688  3E11               	addlw	17
 13677  0689  0084               	movwf	4
 13678  068A  0185               	clrf	5
 13679  068B  0800               	movf	0,w
 13680  068C  00F1               	movwf	??_parse_temp_press_calib_data
 13681  068D  0873               	movf	parse_temp_press_calib_data@reg_data,w
 13682  068E  3E10               	addlw	16
 13683  068F  0084               	movwf	4
 13684  0690  0185               	clrf	5
 13685  0691  0872               	movf	parse_temp_press_calib_data@calib_data,w
 13686  0692  3E10               	addlw	16
 13687  0693  0086               	movwf	6
 13688  0694  3001               	movlw	1	; select bank2/3
 13689  0695  0087               	movwf	7
 13690  0696  0800               	movf	0,w
 13691  0697  3FC0               	movwi [0]fsr1
 13692  0698  0871               	movf	??_parse_temp_press_calib_data,w
 13693  0699  3FC1               	movwi [1]fsr1
 13694                           
 13695                           ;BME280_driver/bme280.c: 1371:     calib_data->dig_P7 = (int16_t)(((uint16_t)reg_data[19
      +                          ] << 8) | (uint16_t)reg_data[18]);
 13696  069A  0873               	movf	parse_temp_press_calib_data@reg_data,w
 13697  069B  3E13               	addlw	19
 13698  069C  0084               	movwf	4
 13699  069D  0185               	clrf	5
 13700  069E  0800               	movf	0,w
 13701  069F  00F1               	movwf	??_parse_temp_press_calib_data
 13702  06A0  0873               	movf	parse_temp_press_calib_data@reg_data,w
 13703  06A1  3E12               	addlw	18
 13704  06A2  0084               	movwf	4
 13705  06A3  0185               	clrf	5
 13706  06A4  0872               	movf	parse_temp_press_calib_data@calib_data,w
 13707  06A5  3E12               	addlw	18
 13708  06A6  0086               	movwf	6
 13709  06A7  3001               	movlw	1	; select bank2/3
 13710  06A8  0087               	movwf	7
 13711  06A9  0800               	movf	0,w
 13712  06AA  3FC0               	movwi [0]fsr1
 13713  06AB  0871               	movf	??_parse_temp_press_calib_data,w
 13714  06AC  3FC1               	movwi [1]fsr1
 13715                           
 13716                           ;BME280_driver/bme280.c: 1372:     calib_data->dig_P8 = (int16_t)(((uint16_t)reg_data[21
      +                          ] << 8) | (uint16_t)reg_data[20]);
 13717  06AD  0873               	movf	parse_temp_press_calib_data@reg_data,w
 13718  06AE  3E15               	addlw	21
 13719  06AF  0084               	movwf	4
 13720  06B0  0185               	clrf	5
 13721  06B1  0800               	movf	0,w
 13722  06B2  00F1               	movwf	??_parse_temp_press_calib_data
 13723  06B3  0873               	movf	parse_temp_press_calib_data@reg_data,w
 13724  06B4  3E14               	addlw	20
 13725  06B5  0084               	movwf	4
 13726  06B6  0185               	clrf	5
 13727  06B7  0872               	movf	parse_temp_press_calib_data@calib_data,w
 13728  06B8  3E14               	addlw	20
 13729  06B9  0086               	movwf	6
 13730  06BA  3001               	movlw	1	; select bank2/3
 13731  06BB  0087               	movwf	7
 13732  06BC  0800               	movf	0,w
 13733  06BD  3FC0               	movwi [0]fsr1
 13734  06BE  0871               	movf	??_parse_temp_press_calib_data,w
 13735  06BF  3FC1               	movwi [1]fsr1
 13736                           
 13737                           ;BME280_driver/bme280.c: 1373:     calib_data->dig_P9 = (int16_t)(((uint16_t)reg_data[23
      +                          ] << 8) | (uint16_t)reg_data[22]);
 13738  06C0  0873               	movf	parse_temp_press_calib_data@reg_data,w
 13739  06C1  3E17               	addlw	23
 13740  06C2  0084               	movwf	4
 13741  06C3  0185               	clrf	5
 13742  06C4  0800               	movf	0,w
 13743  06C5  00F1               	movwf	??_parse_temp_press_calib_data
 13744  06C6  0873               	movf	parse_temp_press_calib_data@reg_data,w
 13745  06C7  3E16               	addlw	22
 13746  06C8  0084               	movwf	4
 13747  06C9  0185               	clrf	5
 13748  06CA  0872               	movf	parse_temp_press_calib_data@calib_data,w
 13749  06CB  3E16               	addlw	22
 13750  06CC  0086               	movwf	6
 13751  06CD  3001               	movlw	1	; select bank2/3
 13752  06CE  0087               	movwf	7
 13753  06CF  0800               	movf	0,w
 13754  06D0  3FC0               	movwi [0]fsr1
 13755  06D1  0871               	movf	??_parse_temp_press_calib_data,w
 13756  06D2  3FC1               	movwi [1]fsr1
 13757                           
 13758                           ;BME280_driver/bme280.c: 1374:     calib_data->dig_H1 = reg_data[25];
 13759  06D3  0873               	movf	parse_temp_press_calib_data@reg_data,w
 13760  06D4  3E19               	addlw	25
 13761  06D5  0086               	movwf	6
 13762  06D6  0187               	clrf	7
 13763  06D7  0801               	movf	1,w
 13764  06D8  00F1               	movwf	??_parse_temp_press_calib_data
 13765  06D9  0872               	movf	parse_temp_press_calib_data@calib_data,w
 13766  06DA  3E18               	addlw	24
 13767  06DB  0086               	movwf	6
 13768  06DC  3001               	movlw	1	; select bank2/3
 13769  06DD  0087               	movwf	7
 13770  06DE  0871               	movf	??_parse_temp_press_calib_data,w
 13771  06DF  0081               	movwf	1
 13772  06E0  0008               	return
 13773  06E1                     __end_of_parse_temp_press_calib_data:	
 13774                           
 13775                           	psect	text51
 13776  1586                     __ptext51:	
 13777 ;; *************** function _parse_humidity_calib_data *****************
 13778 ;; Defined at:
 13779 ;;		line 1381 in file "BME280_driver/bme280.c"
 13780 ;; Parameters:    Size  Location     Type
 13781 ;;  reg_data        1    wreg     PTR const unsigned char 
 13782 ;;		 -> get_calib_data@calib_data(26), 
 13783 ;;  dev             1    0[COMMON] PTR struct bme280_dev
 13784 ;;		 -> EnvSensor(51), 
 13785 ;; Auto vars:     Size  Location     Type
 13786 ;;  reg_data        1   13[COMMON] PTR const unsigned char 
 13787 ;;		 -> get_calib_data@calib_data(26), 
 13788 ;;  dig_H5_msb      2   10[COMMON] short 
 13789 ;;  dig_H5_lsb      2    8[COMMON] short 
 13790 ;;  dig_H4_msb      2    6[COMMON] short 
 13791 ;;  dig_H4_lsb      2    4[COMMON] short 
 13792 ;;  calib_data      1   12[COMMON] PTR struct bme280_calib_
 13793 ;;		 -> EnvSensor.calib_data(37), EnvSensor(51), 
 13794 ;; Return value:  Size  Location     Type
 13795 ;;                  1    wreg      void 
 13796 ;; Registers used:
 13797 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 13798 ;; Tracked objects:
 13799 ;;		On entry : 1F/0
 13800 ;;		On exit  : 1F/0
 13801 ;;		Unchanged: 1F/0
 13802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13803 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13804 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13805 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13806 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13807 ;;Total ram usage:       14 bytes
 13808 ;; Hardware stack levels used:    1
 13809 ;; Hardware stack levels required when called:    3
 13810 ;; This function calls:
 13811 ;;		Nothing
 13812 ;; This function is called by:
 13813 ;;		_get_calib_data
 13814 ;; This function uses a non-reentrant model
 13815 ;;
 13816                           
 13817                           
 13818                           ;psect for function _parse_humidity_calib_data
 13819  1586                     _parse_humidity_calib_data:	
 13820                           
 13821                           ;incstack = 0
 13822                           ; Regs used in _parse_humidity_calib_data: [wreg-fsr1h+status,2+status,0]
 13823                           ;parse_humidity_calib_data@reg_data stored from wreg
 13824  1586  00FD               	movwf	parse_humidity_calib_data@reg_data
 13825                           
 13826                           ;BME280_driver/bme280.c: 1381: static void parse_humidity_calib_data(const uint8_t *reg_
      +                          data, struct bme280_dev *dev);BME280_driver/bme280.c: 1382: {;BME280_driver/bme280.c: 13
      +                          83:     struct bme280_calib_data *calib_data = &dev->calib_data;
 13827  1587  0870               	movf	parse_humidity_calib_data@dev,w
 13828  1588  3E09               	addlw	9
 13829  1589  00F1               	movwf	??_parse_humidity_calib_data
 13830  158A  0871               	movf	??_parse_humidity_calib_data,w
 13831  158B  00FC               	movwf	parse_humidity_calib_data@calib_data
 13832                           
 13833                           ;BME280_driver/bme280.c: 1384:     int16_t dig_H4_lsb;;BME280_driver/bme280.c: 1385:    
      +                           int16_t dig_H4_msb;;BME280_driver/bme280.c: 1386:     int16_t dig_H5_lsb;;BME280_driver
      +                          /bme280.c: 1387:     int16_t dig_H5_msb;;BME280_driver/bme280.c: 1389:     calib_data->d
      +                          ig_H2 = (int16_t)(((uint16_t)reg_data[1] << 8) | (uint16_t)reg_data[0]);
 13834  158C  0A7D               	incf	parse_humidity_calib_data@reg_data,w
 13835  158D  0084               	movwf	4
 13836  158E  0185               	clrf	5
 13837  158F  0800               	movf	0,w
 13838  1590  00F1               	movwf	??_parse_humidity_calib_data
 13839  1591  087D               	movf	parse_humidity_calib_data@reg_data,w
 13840  1592  0084               	movwf	4
 13841  1593  0185               	clrf	5
 13842  1594  087C               	movf	parse_humidity_calib_data@calib_data,w
 13843  1595  3E19               	addlw	25
 13844  1596  0086               	movwf	6
 13845  1597  3001               	movlw	1	; select bank2/3
 13846  1598  0087               	movwf	7
 13847  1599  0800               	movf	0,w
 13848  159A  3FC0               	movwi [0]fsr1
 13849  159B  0871               	movf	??_parse_humidity_calib_data,w
 13850  159C  3FC1               	movwi [1]fsr1
 13851                           
 13852                           ;BME280_driver/bme280.c: 1390:     calib_data->dig_H3 = reg_data[2];
 13853  159D  087D               	movf	parse_humidity_calib_data@reg_data,w
 13854  159E  3E02               	addlw	2
 13855  159F  0086               	movwf	6
 13856  15A0  0187               	clrf	7
 13857  15A1  0801               	movf	1,w
 13858  15A2  00F1               	movwf	??_parse_humidity_calib_data
 13859  15A3  087C               	movf	parse_humidity_calib_data@calib_data,w
 13860  15A4  3E1B               	addlw	27
 13861  15A5  0086               	movwf	6
 13862  15A6  3001               	movlw	1	; select bank2/3
 13863  15A7  0087               	movwf	7
 13864  15A8  0871               	movf	??_parse_humidity_calib_data,w
 13865  15A9  0081               	movwf	1
 13866                           
 13867                           ;BME280_driver/bme280.c: 1391:     dig_H4_msb = (int16_t)(int8_t)reg_data[3] * 16;
 13868  15AA  087D               	movf	parse_humidity_calib_data@reg_data,w
 13869  15AB  3E03               	addlw	3
 13870  15AC  0086               	movwf	6
 13871  15AD  0187               	clrf	7
 13872  15AE  0801               	movf	1,w
 13873  15AF  00F1               	movwf	??_parse_humidity_calib_data
 13874  15B0  01F2               	clrf	??_parse_humidity_calib_data+1
 13875  15B1  1BF1               	btfsc	??_parse_humidity_calib_data,7
 13876  15B2  03F2               	decf	??_parse_humidity_calib_data+1,f
 13877  15B3  0EF1               	swapf	??_parse_humidity_calib_data,f
 13878  15B4  0EF2               	swapf	??_parse_humidity_calib_data+1,f
 13879  15B5  30F0               	movlw	240
 13880  15B6  05F2               	andwf	??_parse_humidity_calib_data+1,f
 13881  15B7  0871               	movf	??_parse_humidity_calib_data,w
 13882  15B8  390F               	andlw	15
 13883  15B9  04F2               	iorwf	??_parse_humidity_calib_data+1,f
 13884  15BA  30F0               	movlw	240
 13885  15BB  05F1               	andwf	??_parse_humidity_calib_data,f
 13886  15BC  0871               	movf	??_parse_humidity_calib_data,w
 13887  15BD  00F6               	movwf	parse_humidity_calib_data@dig_H4_msb
 13888  15BE  0872               	movf	??_parse_humidity_calib_data+1,w
 13889  15BF  00F7               	movwf	parse_humidity_calib_data@dig_H4_msb+1
 13890                           
 13891                           ;BME280_driver/bme280.c: 1392:     dig_H4_lsb = (int16_t)(reg_data[4] & 0x0F);
 13892  15C0  087D               	movf	parse_humidity_calib_data@reg_data,w
 13893  15C1  3E04               	addlw	4
 13894  15C2  0086               	movwf	6
 13895  15C3  0187               	clrf	7
 13896  15C4  0801               	movf	1,w
 13897  15C5  390F               	andlw	15
 13898  15C6  00F1               	movwf	??_parse_humidity_calib_data
 13899  15C7  01F2               	clrf	??_parse_humidity_calib_data+1
 13900  15C8  0871               	movf	??_parse_humidity_calib_data,w
 13901  15C9  00F4               	movwf	parse_humidity_calib_data@dig_H4_lsb
 13902  15CA  0872               	movf	??_parse_humidity_calib_data+1,w
 13903  15CB  00F5               	movwf	parse_humidity_calib_data@dig_H4_lsb+1
 13904                           
 13905                           ;BME280_driver/bme280.c: 1393:     calib_data->dig_H4 = dig_H4_msb | dig_H4_lsb;
 13906  15CC  0874               	movf	parse_humidity_calib_data@dig_H4_lsb,w
 13907  15CD  0476               	iorwf	parse_humidity_calib_data@dig_H4_msb,w
 13908  15CE  00F1               	movwf	??_parse_humidity_calib_data
 13909  15CF  0875               	movf	parse_humidity_calib_data@dig_H4_lsb+1,w
 13910  15D0  0477               	iorwf	parse_humidity_calib_data@dig_H4_msb+1,w
 13911  15D1  00F2               	movwf	??_parse_humidity_calib_data+1
 13912  15D2  087C               	movf	parse_humidity_calib_data@calib_data,w
 13913  15D3  3E1C               	addlw	28
 13914  15D4  0086               	movwf	6
 13915  15D5  3001               	movlw	1	; select bank2/3
 13916  15D6  0087               	movwf	7
 13917  15D7  0871               	movf	??_parse_humidity_calib_data,w
 13918  15D8  3FC0               	movwi [0]fsr1
 13919  15D9  0872               	movf	??_parse_humidity_calib_data+1,w
 13920  15DA  3FC1               	movwi [1]fsr1
 13921                           
 13922                           ;BME280_driver/bme280.c: 1394:     dig_H5_msb = (int16_t)(int8_t)reg_data[5] * 16;
 13923  15DB  087D               	movf	parse_humidity_calib_data@reg_data,w
 13924  15DC  3E05               	addlw	5
 13925  15DD  0086               	movwf	6
 13926  15DE  0187               	clrf	7
 13927  15DF  0801               	movf	1,w
 13928  15E0  00F1               	movwf	??_parse_humidity_calib_data
 13929  15E1  01F2               	clrf	??_parse_humidity_calib_data+1
 13930  15E2  1BF1               	btfsc	??_parse_humidity_calib_data,7
 13931  15E3  03F2               	decf	??_parse_humidity_calib_data+1,f
 13932  15E4  0EF1               	swapf	??_parse_humidity_calib_data,f
 13933  15E5  0EF2               	swapf	??_parse_humidity_calib_data+1,f
 13934  15E6  30F0               	movlw	240
 13935  15E7  05F2               	andwf	??_parse_humidity_calib_data+1,f
 13936  15E8  0871               	movf	??_parse_humidity_calib_data,w
 13937  15E9  390F               	andlw	15
 13938  15EA  04F2               	iorwf	??_parse_humidity_calib_data+1,f
 13939  15EB  30F0               	movlw	240
 13940  15EC  05F1               	andwf	??_parse_humidity_calib_data,f
 13941  15ED  0871               	movf	??_parse_humidity_calib_data,w
 13942  15EE  00FA               	movwf	parse_humidity_calib_data@dig_H5_msb
 13943  15EF  0872               	movf	??_parse_humidity_calib_data+1,w
 13944  15F0  00FB               	movwf	parse_humidity_calib_data@dig_H5_msb+1
 13945                           
 13946                           ;BME280_driver/bme280.c: 1395:     dig_H5_lsb = (int16_t)(reg_data[4] >> 4);
 13947  15F1  087D               	movf	parse_humidity_calib_data@reg_data,w
 13948  15F2  3E04               	addlw	4
 13949  15F3  0086               	movwf	6
 13950  15F4  0187               	clrf	7
 13951  15F5  0801               	movf	1,w
 13952  15F6  00F1               	movwf	??_parse_humidity_calib_data
 13953  15F7  3004               	movlw	4
 13954  15F8                     u4405:	
 13955  15F8  36F1               	lsrf	??_parse_humidity_calib_data,f
 13956  15F9  0B89               	decfsz	9,f
 13957  15FA  2DF8               	goto	u4405
 13958  15FB  0871               	movf	??_parse_humidity_calib_data,w
 13959  15FC  00F2               	movwf	??_parse_humidity_calib_data+1
 13960  15FD  01F3               	clrf	??_parse_humidity_calib_data+2
 13961  15FE  0872               	movf	??_parse_humidity_calib_data+1,w
 13962  15FF  00F8               	movwf	parse_humidity_calib_data@dig_H5_lsb
 13963  1600  0873               	movf	??_parse_humidity_calib_data+2,w
 13964  1601  00F9               	movwf	parse_humidity_calib_data@dig_H5_lsb+1
 13965                           
 13966                           ;BME280_driver/bme280.c: 1396:     calib_data->dig_H5 = dig_H5_msb | dig_H5_lsb;
 13967  1602  0878               	movf	parse_humidity_calib_data@dig_H5_lsb,w
 13968  1603  047A               	iorwf	parse_humidity_calib_data@dig_H5_msb,w
 13969  1604  00F1               	movwf	??_parse_humidity_calib_data
 13970  1605  0879               	movf	parse_humidity_calib_data@dig_H5_lsb+1,w
 13971  1606  047B               	iorwf	parse_humidity_calib_data@dig_H5_msb+1,w
 13972  1607  00F2               	movwf	??_parse_humidity_calib_data+1
 13973  1608  087C               	movf	parse_humidity_calib_data@calib_data,w
 13974  1609  3E1E               	addlw	30
 13975  160A  0086               	movwf	6
 13976  160B  3001               	movlw	1	; select bank2/3
 13977  160C  0087               	movwf	7
 13978  160D  0871               	movf	??_parse_humidity_calib_data,w
 13979  160E  3FC0               	movwi [0]fsr1
 13980  160F  0872               	movf	??_parse_humidity_calib_data+1,w
 13981  1610  3FC1               	movwi [1]fsr1
 13982                           
 13983                           ;BME280_driver/bme280.c: 1397:     calib_data->dig_H6 = (int8_t)reg_data[6];
 13984  1611  087D               	movf	parse_humidity_calib_data@reg_data,w
 13985  1612  3E06               	addlw	6
 13986  1613  0086               	movwf	6
 13987  1614  0187               	clrf	7
 13988  1615  0801               	movf	1,w
 13989  1616  00F1               	movwf	??_parse_humidity_calib_data
 13990  1617  087C               	movf	parse_humidity_calib_data@calib_data,w
 13991  1618  3E20               	addlw	32
 13992  1619  0086               	movwf	6
 13993  161A  3001               	movlw	1	; select bank2/3
 13994  161B  0087               	movwf	7
 13995  161C  0871               	movf	??_parse_humidity_calib_data,w
 13996  161D  0081               	movwf	1
 13997  161E  0008               	return
 13998  161F                     __end_of_parse_humidity_calib_data:	
 13999                           
 14000                           	psect	text52
 14001  1D6F                     __ptext52:	
 14002 ;; *************** function _bme280_get_regs *****************
 14003 ;; Defined at:
 14004 ;;		line 409 in file "BME280_driver/bme280.c"
 14005 ;; Parameters:    Size  Location     Type
 14006 ;;  reg_addr        1    wreg     unsigned char 
 14007 ;;  reg_data        2   28[BANK0 ] PTR unsigned char 
 14008 ;;		 -> get_calib_data@calib_data(26), put_device_to_sleep@reg_data(4), write_power_mode@sensor_mode_reg_val(1), set_fil
      +ter_standby_settings@reg_data(1), 
 14009 ;;		 -> set_osr_press_temp_settings@reg_data(1), set_osr_humidity_settings@ctrl_meas(1), bme280_get_sensor_data@reg_data
      +(8), bme280_set_sensor_mode@last_set_mode(1), 
 14010 ;;		 -> bme280_get_sensor_settings@reg_data(4), bme280_set_sensor_settings@sensor_mode(1), bme280_init@chip_id(1), 
 14011 ;;  len             2   30[BANK0 ] unsigned short 
 14012 ;;  dev             1   32[BANK0 ] PTR const struct bme280_
 14013 ;;		 -> EnvSensor(51), 
 14014 ;; Auto vars:     Size  Location     Type
 14015 ;;  reg_addr        1   35[BANK0 ] unsigned char 
 14016 ;;  rslt            1   36[BANK0 ] char 
 14017 ;; Return value:  Size  Location     Type
 14018 ;;                  1    wreg      char 
 14019 ;; Registers used:
 14020 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14021 ;; Tracked objects:
 14022 ;;		On entry : 1F/0
 14023 ;;		On exit  : 1F/0
 14024 ;;		Unchanged: 0/0
 14025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14026 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14027 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14028 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14029 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14030 ;;Total ram usage:        9 bytes
 14031 ;; Hardware stack levels used:    1
 14032 ;; Hardware stack levels required when called:    9
 14033 ;; This function calls:
 14034 ;;		_ReadEnvSensor
 14035 ;;		_null_ptr_check
 14036 ;; This function is called by:
 14037 ;;		_bme280_init
 14038 ;;		_bme280_get_sensor_mode
 14039 ;;		_bme280_get_sensor_data
 14040 ;;		_set_osr_humidity_settings
 14041 ;;		_set_osr_press_temp_settings
 14042 ;;		_set_filter_standby_settings
 14043 ;;		_write_power_mode
 14044 ;;		_put_device_to_sleep
 14045 ;;		_get_calib_data
 14046 ;; This function uses a non-reentrant model
 14047 ;;
 14048                           
 14049                           
 14050                           ;psect for function _bme280_get_regs
 14051  1D6F                     _bme280_get_regs:	
 14052                           
 14053                           ;incstack = 0
 14054                           ; Regs used in _bme280_get_regs: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14055                           ;bme280_get_regs@reg_addr stored from wreg
 14056  1D6F  00C3               	movwf	bme280_get_regs@reg_addr
 14057                           
 14058                           ;BME280_driver/bme280.c: 409: int8_t bme280_get_regs(uint8_t reg_addr, uint8_t *reg_data
      +                          , uint16_t len, const struct bme280_dev *dev);BME280_driver/bme280.c: 410: {;BME280_driv
      +                          er/bme280.c: 411:     int8_t rslt;;BME280_driver/bme280.c: 414:     rslt = null_ptr_chec
      +                          k(dev);
 14059  1D70  0840               	movf	bme280_get_regs@dev,w
 14060  1D71  319A  2247  319D   	fcall	_null_ptr_check
 14061  1D74  0020               	movlb	0	; select bank0
 14062  1D75  00C1               	movwf	??_bme280_get_regs
 14063  1D76  0841               	movf	??_bme280_get_regs,w
 14064  1D77  00C4               	movwf	bme280_get_regs@rslt
 14065                           
 14066                           ;BME280_driver/bme280.c: 417:     if (rslt == 0)
 14067  1D78  0844               	movf	bme280_get_regs@rslt,w
 14068  1D79  1D03               	btfss	3,2
 14069  1D7A  2DAF               	goto	l63
 14070                           
 14071                           ;BME280_driver/bme280.c: 418:     {;BME280_driver/bme280.c: 420:         if (dev->intf !
      +                          = BME280_I2C_INTF)
 14072  1D7B  0840               	movf	bme280_get_regs@dev,w
 14073  1D7C  3E02               	addlw	2
 14074  1D7D  0086               	movwf	6
 14075  1D7E  3001               	movlw	1	; select bank2/3
 14076  1D7F  0087               	movwf	7
 14077  1D80  0301               	decf	1,w
 14078  1D81  1903               	btfsc	3,2
 14079  1D82  2D88               	goto	l3950
 14080                           
 14081                           ;BME280_driver/bme280.c: 421:         {;BME280_driver/bme280.c: 422:             reg_add
      +                          r = reg_addr | 0x80;
 14082  1D83  0843               	movf	bme280_get_regs@reg_addr,w
 14083  1D84  3880               	iorlw	128
 14084  1D85  00C1               	movwf	??_bme280_get_regs
 14085  1D86  0841               	movf	??_bme280_get_regs,w
 14086  1D87  00C3               	movwf	bme280_get_regs@reg_addr
 14087  1D88                     l3950:	
 14088                           
 14089                           ;BME280_driver/bme280.c: 426:         rslt = dev->read(dev->dev_id, reg_addr, reg_data, 
      +                          len);
 14090  1D88  0840               	movf	bme280_get_regs@dev,w
 14091  1D89  0086               	movwf	6
 14092  1D8A  3001               	movlw	1	; select bank2/3
 14093  1D8B  0087               	movwf	7
 14094  1D8C  3001               	movlw	1	; select bank2/3
 14095  1D8D  3F41               	moviw [1]fsr1
 14096  1D8E  00AF               	movwf	ReadEnvSensor@dev_id
 14097  1D8F  0843               	movf	bme280_get_regs@reg_addr,w
 14098  1D90  00C1               	movwf	??_bme280_get_regs
 14099  1D91  0841               	movf	??_bme280_get_regs,w
 14100  1D92  00B0               	movwf	ReadEnvSensor@reg_addr
 14101  1D93  083D               	movf	bme280_get_regs@reg_data+1,w
 14102  1D94  00B2               	movwf	ReadEnvSensor@reg_data+1
 14103  1D95  083C               	movf	bme280_get_regs@reg_data,w
 14104  1D96  00B1               	movwf	ReadEnvSensor@reg_data
 14105  1D97  083F               	movf	bme280_get_regs@len+1,w
 14106  1D98  00B4               	movwf	ReadEnvSensor@len+1
 14107  1D99  083E               	movf	bme280_get_regs@len,w
 14108  1D9A  00B3               	movwf	ReadEnvSensor@len
 14109  1D9B  0840               	movf	bme280_get_regs@dev,w
 14110  1D9C  3E03               	addlw	3
 14111  1D9D  0086               	movwf	6
 14112  1D9E  3001               	movlw	1	; select bank2/3
 14113  1D9F  0087               	movwf	7
 14114  1DA0  3F41               	moviw [1]fsr1
 14115  1DA1  008A               	movwf	10
 14116  1DA2  3F40               	moviw [0]fsr1
 14117  1DA3  000A               	callw
 14118  1DA4  319D               	pagesel	$
 14119  1DA5  00C2               	movwf	??_bme280_get_regs+1
 14120  1DA6  0842               	movf	??_bme280_get_regs+1,w
 14121  1DA7  00C4               	movwf	bme280_get_regs@rslt
 14122                           
 14123                           ;BME280_driver/bme280.c: 429:         if (rslt != 0)
 14124  1DA8  0844               	movf	bme280_get_regs@rslt,w
 14125  1DA9  1903               	btfsc	3,2
 14126  1DAA  2DAF               	goto	l63
 14127                           
 14128                           ;BME280_driver/bme280.c: 430:         {;BME280_driver/bme280.c: 431:             rslt = 
      +                          -4;
 14129  1DAB  30FC               	movlw	252
 14130  1DAC  00C1               	movwf	??_bme280_get_regs
 14131  1DAD  0841               	movf	??_bme280_get_regs,w
 14132  1DAE  00C4               	movwf	bme280_get_regs@rslt
 14133  1DAF                     l63:	
 14134                           ;BME280_driver/bme280.c: 433:     }
 14135                           
 14136                           
 14137                           ;BME280_driver/bme280.c: 435:     return rslt;
 14138  1DAF  0844               	movf	bme280_get_regs@rslt,w
 14139  1DB0  0008               	return
 14140  1DB1                     __end_of_bme280_get_regs:	
 14141                           
 14142                           	psect	text53
 14143  06E1                     __ptext53:	
 14144 ;; *************** function _ReadEnvSensor *****************
 14145 ;; Defined at:
 14146 ;;		line 117 in file "bme280_i2c.c"
 14147 ;; Parameters:    Size  Location     Type
 14148 ;;  dev_id          1   15[BANK0 ] unsigned char 
 14149 ;;  reg_addr        1   16[BANK0 ] unsigned char 
 14150 ;;  reg_data        2   17[BANK0 ] PTR unsigned char 
 14151 ;;		 -> get_calib_data@calib_data(26), put_device_to_sleep@reg_data(4), write_power_mode@sensor_mode_reg_val(1), set_fil
      +ter_standby_settings@reg_data(1), 
 14152 ;;		 -> set_osr_press_temp_settings@reg_data(1), set_osr_humidity_settings@ctrl_meas(1), bme280_get_sensor_data@reg_data
      +(8), bme280_set_sensor_mode@last_set_mode(1), 
 14153 ;;		 -> bme280_get_sensor_settings@reg_data(4), bme280_set_sensor_settings@sensor_mode(1), bme280_init@chip_id(1), 
 14154 ;;  len             2   19[BANK0 ] unsigned short 
 14155 ;; Auto vars:     Size  Location     Type
 14156 ;;  i               2   26[BANK0 ] int 
 14157 ;;  rslt            1   25[BANK0 ] char 
 14158 ;; Return value:  Size  Location     Type
 14159 ;;                  1    wreg      char 
 14160 ;; Registers used:
 14161 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14162 ;; Tracked objects:
 14163 ;;		On entry : 1F/0
 14164 ;;		On exit  : 1F/0
 14165 ;;		Unchanged: 0/0
 14166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14167 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14168 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14169 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14170 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14171 ;;Total ram usage:       13 bytes
 14172 ;; Hardware stack levels used:    1
 14173 ;; Hardware stack levels required when called:    8
 14174 ;; This function calls:
 14175 ;;		_DebugAlert
 14176 ;;		_I2C_ReadByte
 14177 ;;		_I2C_Stop
 14178 ;;		_I2C_WriteByte
 14179 ;; This function is called by:
 14180 ;;		_BME280_Init
 14181 ;;		_bme280_get_regs
 14182 ;; This function uses a non-reentrant model
 14183 ;;
 14184                           
 14185                           
 14186                           ;psect for function _ReadEnvSensor
 14187  06E1                     _ReadEnvSensor:	
 14188                           
 14189                           ;bme280_i2c.c: 117: int8_t ReadEnvSensor(uint8_t dev_id, uint8_t reg_addr, uint8_t *reg_
      +                          data, uint16_t len);bme280_i2c.c: 118: {;bme280_i2c.c: 119:     int8_t rslt = 0;
 14190                           
 14191                           ;incstack = 0
 14192                           ; Regs used in _ReadEnvSensor: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14193  06E1  01B9               	clrf	ReadEnvSensor@rslt
 14194                           
 14195                           ;bme280_i2c.c: 121:     PIR1bits.SSP1IF = 0;
 14196  06E2  1190               	bcf	16,3	;volatile
 14197                           
 14198                           ;bme280_i2c.c: 124:     SSP1CON2bits.SEN = 1;
 14199  06E3  0024               	movlb	4	; select bank4
 14200  06E4  1416               	bsf	22,0	;volatile
 14201                           
 14202                           ;bme280_i2c.c: 125:     __g_timeout_start = ticks; while (!(PIR1bits.SSP1IF != 0)) { if 
      +                          (ticks - __g_timeout_start > 3000) { DebugAlert(200, 200, 3);; break; } }; PIR1bits.SSP1
      +                          IF = 0;;
 14203  06E5  0021               	movlb	1	; select bank1
 14204  06E6  086D               	movf	(_ticks+3)^(0+128),w
 14205  06E7  0022               	movlb	2	; select bank2
 14206  06E8  00E2               	movwf	(___g_timeout_start+3)^(0+256)
 14207  06E9  0021               	movlb	1	; select bank1
 14208  06EA  086C               	movf	(_ticks+2)^(0+128),w
 14209  06EB  0022               	movlb	2	; select bank2
 14210  06EC  00E1               	movwf	(___g_timeout_start+2)^(0+256)
 14211  06ED  0021               	movlb	1	; select bank1
 14212  06EE  086B               	movf	(_ticks+1)^(0+128),w
 14213  06EF  0022               	movlb	2	; select bank2
 14214  06F0  00E0               	movwf	(___g_timeout_start+1)^(0+256)
 14215  06F1  0021               	movlb	1	; select bank1
 14216  06F2  086A               	movf	_ticks^(0+128),w
 14217  06F3  0022               	movlb	2	; select bank2
 14218  06F4  00DF               	movwf	___g_timeout_start^(0+256)
 14219  06F5                     l727:	
 14220  06F5  0020               	movlb	0	; select bank0
 14221  06F6  1990               	btfsc	16,3	;volatile
 14222  06F7  2F2B               	goto	l730
 14223  06F8  0022               	movlb	2	; select bank2
 14224  06F9  085F               	movf	___g_timeout_start^(0+256),w
 14225  06FA  0021               	movlb	1	; select bank1
 14226  06FB  026A               	subwf	_ticks^(0+128),w
 14227  06FC  0020               	movlb	0	; select bank0
 14228  06FD  00B5               	movwf	??_ReadEnvSensor
 14229  06FE  0022               	movlb	2	; select bank2
 14230  06FF  0860               	movf	(___g_timeout_start+1)^(0+256),w
 14231  0700  0021               	movlb	1	; select bank1
 14232  0701  3B6B               	subwfb	(_ticks+1)^(0+128),w
 14233  0702  0020               	movlb	0	; select bank0
 14234  0703  00B6               	movwf	??_ReadEnvSensor+1
 14235  0704  0022               	movlb	2	; select bank2
 14236  0705  0861               	movf	(___g_timeout_start+2)^(0+256),w
 14237  0706  0021               	movlb	1	; select bank1
 14238  0707  3B6C               	subwfb	(_ticks+2)^(0+128),w
 14239  0708  0020               	movlb	0	; select bank0
 14240  0709  00B7               	movwf	??_ReadEnvSensor+2
 14241  070A  0022               	movlb	2	; select bank2
 14242  070B  0862               	movf	(___g_timeout_start+3)^(0+256),w
 14243  070C  0021               	movlb	1	; select bank1
 14244  070D  3B6D               	subwfb	(_ticks+3)^(0+128),w
 14245  070E  0020               	movlb	0	; select bank0
 14246  070F  00B8               	movwf	??_ReadEnvSensor+3
 14247  0710  0838               	movf	??_ReadEnvSensor+3,w
 14248  0711  1D03               	btfss	3,2
 14249  0712  2F1C               	goto	l3882
 14250  0713  0837               	movf	??_ReadEnvSensor+2,w
 14251  0714  1D03               	btfss	3,2
 14252  0715  2F1C               	goto	l3882
 14253  0716  30B9               	movlw	185
 14254  0717  0235               	subwf	??_ReadEnvSensor,w
 14255  0718  300B               	movlw	11
 14256  0719  3B36               	subwfb	??_ReadEnvSensor+1,w
 14257  071A  1C03               	btfss	3,0
 14258  071B  2EF5               	goto	l727
 14259  071C                     l3882:	
 14260  071C  30C8               	movlw	200
 14261  071D  00A0               	movwf	DebugAlert@delay_high
 14262  071E  3000               	movlw	0
 14263  071F  00A1               	movwf	DebugAlert@delay_high+1
 14264  0720  30C8               	movlw	200
 14265  0721  00A2               	movwf	DebugAlert@delay_low
 14266  0722  3000               	movlw	0
 14267  0723  00A3               	movwf	DebugAlert@delay_low+1
 14268  0724  3003               	movlw	3
 14269  0725  00B5               	movwf	??_ReadEnvSensor
 14270  0726  0835               	movf	??_ReadEnvSensor,w
 14271  0727  00A4               	movwf	DebugAlert@num_flashes
 14272  0728  319B  2338  3186   	fcall	_DebugAlert
 14273  072B                     l730:	
 14274  072B  0020               	movlb	0	; select bank0
 14275  072C  1190               	bcf	16,3	;volatile
 14276                           
 14277                           ;bme280_i2c.c: 128:     I2C_WriteByte(dev_id << 1);
 14278  072D  352F               	lslf	ReadEnvSensor@dev_id,w
 14279  072E  3190  2021  3186   	fcall	_I2C_WriteByte
 14280                           
 14281                           ;bme280_i2c.c: 131:     I2C_WriteByte(reg_addr);
 14282  0731  0020               	movlb	0	; select bank0
 14283  0732  0830               	movf	ReadEnvSensor@reg_addr,w
 14284  0733  3190  2021  3186   	fcall	_I2C_WriteByte
 14285                           
 14286                           ;bme280_i2c.c: 134:     SSP1CON2bits.RSEN = 1;
 14287  0736  0024               	movlb	4	; select bank4
 14288  0737  1496               	bsf	22,1	;volatile
 14289                           
 14290                           ;bme280_i2c.c: 135:     __g_timeout_start = ticks; while (!(PIR1bits.SSP1IF != 0)) { if 
      +                          (ticks - __g_timeout_start > 3000) { DebugAlert(200, 200, 3);; break; } }; PIR1bits.SSP1
      +                          IF = 0;;
 14291  0738  0021               	movlb	1	; select bank1
 14292  0739  086D               	movf	(_ticks+3)^(0+128),w
 14293  073A  0022               	movlb	2	; select bank2
 14294  073B  00E2               	movwf	(___g_timeout_start+3)^(0+256)
 14295  073C  0021               	movlb	1	; select bank1
 14296  073D  086C               	movf	(_ticks+2)^(0+128),w
 14297  073E  0022               	movlb	2	; select bank2
 14298  073F  00E1               	movwf	(___g_timeout_start+2)^(0+256)
 14299  0740  0021               	movlb	1	; select bank1
 14300  0741  086B               	movf	(_ticks+1)^(0+128),w
 14301  0742  0022               	movlb	2	; select bank2
 14302  0743  00E0               	movwf	(___g_timeout_start+1)^(0+256)
 14303  0744  0021               	movlb	1	; select bank1
 14304  0745  086A               	movf	_ticks^(0+128),w
 14305  0746  0022               	movlb	2	; select bank2
 14306  0747  00DF               	movwf	___g_timeout_start^(0+256)
 14307  0748                     l731:	
 14308  0748  0020               	movlb	0	; select bank0
 14309  0749  1990               	btfsc	16,3	;volatile
 14310  074A  2F7E               	goto	l734
 14311  074B  0022               	movlb	2	; select bank2
 14312  074C  085F               	movf	___g_timeout_start^(0+256),w
 14313  074D  0021               	movlb	1	; select bank1
 14314  074E  026A               	subwf	_ticks^(0+128),w
 14315  074F  0020               	movlb	0	; select bank0
 14316  0750  00B5               	movwf	??_ReadEnvSensor
 14317  0751  0022               	movlb	2	; select bank2
 14318  0752  0860               	movf	(___g_timeout_start+1)^(0+256),w
 14319  0753  0021               	movlb	1	; select bank1
 14320  0754  3B6B               	subwfb	(_ticks+1)^(0+128),w
 14321  0755  0020               	movlb	0	; select bank0
 14322  0756  00B6               	movwf	??_ReadEnvSensor+1
 14323  0757  0022               	movlb	2	; select bank2
 14324  0758  0861               	movf	(___g_timeout_start+2)^(0+256),w
 14325  0759  0021               	movlb	1	; select bank1
 14326  075A  3B6C               	subwfb	(_ticks+2)^(0+128),w
 14327  075B  0020               	movlb	0	; select bank0
 14328  075C  00B7               	movwf	??_ReadEnvSensor+2
 14329  075D  0022               	movlb	2	; select bank2
 14330  075E  0862               	movf	(___g_timeout_start+3)^(0+256),w
 14331  075F  0021               	movlb	1	; select bank1
 14332  0760  3B6D               	subwfb	(_ticks+3)^(0+128),w
 14333  0761  0020               	movlb	0	; select bank0
 14334  0762  00B8               	movwf	??_ReadEnvSensor+3
 14335  0763  0838               	movf	??_ReadEnvSensor+3,w
 14336  0764  1D03               	btfss	3,2
 14337  0765  2F6F               	goto	l3892
 14338  0766  0837               	movf	??_ReadEnvSensor+2,w
 14339  0767  1D03               	btfss	3,2
 14340  0768  2F6F               	goto	l3892
 14341  0769  30B9               	movlw	185
 14342  076A  0235               	subwf	??_ReadEnvSensor,w
 14343  076B  300B               	movlw	11
 14344  076C  3B36               	subwfb	??_ReadEnvSensor+1,w
 14345  076D  1C03               	btfss	3,0
 14346  076E  2F48               	goto	l731
 14347  076F                     l3892:	
 14348  076F  30C8               	movlw	200
 14349  0770  00A0               	movwf	DebugAlert@delay_high
 14350  0771  3000               	movlw	0
 14351  0772  00A1               	movwf	DebugAlert@delay_high+1
 14352  0773  30C8               	movlw	200
 14353  0774  00A2               	movwf	DebugAlert@delay_low
 14354  0775  3000               	movlw	0
 14355  0776  00A3               	movwf	DebugAlert@delay_low+1
 14356  0777  3003               	movlw	3
 14357  0778  00B5               	movwf	??_ReadEnvSensor
 14358  0779  0835               	movf	??_ReadEnvSensor,w
 14359  077A  00A4               	movwf	DebugAlert@num_flashes
 14360  077B  319B  2338  3186   	fcall	_DebugAlert
 14361  077E                     l734:	
 14362  077E  0020               	movlb	0	; select bank0
 14363  077F  1190               	bcf	16,3	;volatile
 14364                           
 14365                           ;bme280_i2c.c: 138:     I2C_WriteByte((dev_id << 1) | 0x01);
 14366  0780  1403               	setc
 14367  0781  0D2F               	rlf	ReadEnvSensor@dev_id,w
 14368  0782  3190  2021  3186   	fcall	_I2C_WriteByte
 14369                           
 14370                           ;bme280_i2c.c: 141:     for(int i = 0; i < len; i++){
 14371  0785  0020               	movlb	0	; select bank0
 14372  0786  01BA               	clrf	ReadEnvSensor@i
 14373  0787  01BB               	clrf	ReadEnvSensor@i+1
 14374  0788                     l3906:	
 14375  0788  0834               	movf	ReadEnvSensor@len+1,w
 14376  0789  023B               	subwf	ReadEnvSensor@i+1,w
 14377  078A  1D03               	skipz
 14378  078B  2F8E               	goto	u4045
 14379  078C  0833               	movf	ReadEnvSensor@len,w
 14380  078D  023A               	subwf	ReadEnvSensor@i,w
 14381  078E                     u4045:	
 14382  078E  1803               	btfsc	3,0
 14383  078F  2FB6               	goto	l3908
 14384                           
 14385                           ;bme280_i2c.c: 142:         if(i == len - 1){
 14386  0790  0833               	movf	ReadEnvSensor@len,w
 14387  0791  3EFF               	addlw	255
 14388  0792  00B5               	movwf	??_ReadEnvSensor
 14389  0793  30FF               	movlw	255
 14390  0794  3D34               	addwfc	ReadEnvSensor@len+1,w
 14391  0795  00B6               	movwf	??_ReadEnvSensor+1
 14392  0796  083B               	movf	ReadEnvSensor@i+1,w
 14393  0797  0636               	xorwf	??_ReadEnvSensor+1,w
 14394  0798  1D03               	skipz
 14395  0799  2F9C               	goto	u4035
 14396  079A  083A               	movf	ReadEnvSensor@i,w
 14397  079B  0635               	xorwf	??_ReadEnvSensor,w
 14398  079C                     u4035:	
 14399  079C  1D03               	skipz
 14400  079D  2FA0               	goto	l3902
 14401                           
 14402                           ;bme280_i2c.c: 143:             reg_data[i] = I2C_ReadByte(1);
 14403  079E  3001               	movlw	1
 14404  079F  2FA1               	goto	L5
 14405  07A0                     l3902:	
 14406                           ;bme280_i2c.c: 144:         }
 14407                           
 14408                           
 14409                           ;bme280_i2c.c: 146:             reg_data[i]=I2C_ReadByte(0);
 14410  07A0  3000               	movlw	0
 14411  07A1                     L5:	
 14412  07A1  3196  26BD  3186   	fcall	_I2C_ReadByte
 14413  07A4  00B5               	movwf	??_ReadEnvSensor
 14414  07A5  083A               	movf	ReadEnvSensor@i,w
 14415  07A6  0731               	addwf	ReadEnvSensor@reg_data,w
 14416  07A7  00B6               	movwf	??_ReadEnvSensor+1
 14417  07A8  083B               	movf	ReadEnvSensor@i+1,w
 14418  07A9  3D32               	addwfc	ReadEnvSensor@reg_data+1,w
 14419  07AA  00B7               	movwf	??_ReadEnvSensor+2
 14420  07AB  0836               	movf	??_ReadEnvSensor+1,w
 14421  07AC  0086               	movwf	6
 14422  07AD  0837               	movf	??_ReadEnvSensor+2,w
 14423  07AE  0087               	movwf	7
 14424  07AF  0835               	movf	??_ReadEnvSensor,w
 14425  07B0  0081               	movwf	1
 14426                           
 14427                           ;bme280_i2c.c: 148:     }
 14428  07B1  3001               	movlw	1
 14429  07B2  07BA               	addwf	ReadEnvSensor@i,f
 14430  07B3  3000               	movlw	0
 14431  07B4  3DBB               	addwfc	ReadEnvSensor@i+1,f
 14432  07B5  2F88               	goto	l3906
 14433  07B6                     l3908:	
 14434                           
 14435                           ;bme280_i2c.c: 151:     I2C_Stop();
 14436  07B6  319E  26C7         	fcall	_I2C_Stop
 14437                           
 14438                           ;bme280_i2c.c: 153:     return rslt;
 14439  07B8  0839               	movf	ReadEnvSensor@rslt,w
 14440  07B9  0008               	return
 14441  07BA                     __end_of_ReadEnvSensor:	
 14442                           
 14443                           	psect	text54
 14444  16BD                     __ptext54:	
 14445 ;; *************** function _I2C_ReadByte *****************
 14446 ;; Defined at:
 14447 ;;		line 44 in file "bme280_i2c.c"
 14448 ;; Parameters:    Size  Location     Type
 14449 ;;  ackbit          1    wreg     unsigned char 
 14450 ;; Auto vars:     Size  Location     Type
 14451 ;;  ackbit          1   11[BANK0 ] unsigned char 
 14452 ;;  rcvdata         1   12[BANK0 ] unsigned char 
 14453 ;; Return value:  Size  Location     Type
 14454 ;;                  1    wreg      unsigned char 
 14455 ;; Registers used:
 14456 ;;		wreg, status,2, status,0, pclath, cstack
 14457 ;; Tracked objects:
 14458 ;;		On entry : 1F/0
 14459 ;;		On exit  : 1F/0
 14460 ;;		Unchanged: 0/0
 14461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14463 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14464 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14465 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14466 ;;Total ram usage:        6 bytes
 14467 ;; Hardware stack levels used:    1
 14468 ;; Hardware stack levels required when called:    5
 14469 ;; This function calls:
 14470 ;;		_DebugAlert
 14471 ;; This function is called by:
 14472 ;;		_ReadEnvSensor
 14473 ;; This function uses a non-reentrant model
 14474 ;;
 14475                           
 14476                           
 14477                           ;psect for function _I2C_ReadByte
 14478  16BD                     _I2C_ReadByte:	
 14479                           
 14480                           ;incstack = 0
 14481                           ; Regs used in _I2C_ReadByte: [wreg+status,2+status,0+pclath+cstack]
 14482                           ;I2C_ReadByte@ackbit stored from wreg
 14483  16BD  00AB               	movwf	I2C_ReadByte@ackbit
 14484                           
 14485                           ;bme280_i2c.c: 44: uint8_t I2C_ReadByte(uint8_t ackbit);bme280_i2c.c: 45: {;bme280_i2c.c
      +                          : 46:     uint8_t rcvdata;;bme280_i2c.c: 48:     SSP1CON2bits.RCEN = 1;
 14486  16BE  0024               	movlb	4	; select bank4
 14487  16BF  1596               	bsf	22,3	;volatile
 14488                           
 14489                           ;bme280_i2c.c: 49:     __g_timeout_start = ticks; while (!(PIR1bits.SSP1IF != 0)) { if (
      +                          ticks - __g_timeout_start > 3000) { DebugAlert(200, 200, 3);; break; } }; PIR1bits.SSP1I
      +                          F = 0;;
 14490  16C0  0021               	movlb	1	; select bank1
 14491  16C1  086D               	movf	(_ticks+3)^(0+128),w
 14492  16C2  0022               	movlb	2	; select bank2
 14493  16C3  00E2               	movwf	(___g_timeout_start+3)^(0+256)
 14494  16C4  0021               	movlb	1	; select bank1
 14495  16C5  086C               	movf	(_ticks+2)^(0+128),w
 14496  16C6  0022               	movlb	2	; select bank2
 14497  16C7  00E1               	movwf	(___g_timeout_start+2)^(0+256)
 14498  16C8  0021               	movlb	1	; select bank1
 14499  16C9  086B               	movf	(_ticks+1)^(0+128),w
 14500  16CA  0022               	movlb	2	; select bank2
 14501  16CB  00E0               	movwf	(___g_timeout_start+1)^(0+256)
 14502  16CC  0021               	movlb	1	; select bank1
 14503  16CD  086A               	movf	_ticks^(0+128),w
 14504  16CE  0022               	movlb	2	; select bank2
 14505  16CF  00DF               	movwf	___g_timeout_start^(0+256)
 14506  16D0                     l699:	
 14507  16D0  0020               	movlb	0	; select bank0
 14508  16D1  1990               	btfsc	16,3	;volatile
 14509  16D2  2F06               	goto	l702
 14510  16D3  0022               	movlb	2	; select bank2
 14511  16D4  085F               	movf	___g_timeout_start^(0+256),w
 14512  16D5  0021               	movlb	1	; select bank1
 14513  16D6  026A               	subwf	_ticks^(0+128),w
 14514  16D7  0020               	movlb	0	; select bank0
 14515  16D8  00A7               	movwf	??_I2C_ReadByte
 14516  16D9  0022               	movlb	2	; select bank2
 14517  16DA  0860               	movf	(___g_timeout_start+1)^(0+256),w
 14518  16DB  0021               	movlb	1	; select bank1
 14519  16DC  3B6B               	subwfb	(_ticks+1)^(0+128),w
 14520  16DD  0020               	movlb	0	; select bank0
 14521  16DE  00A8               	movwf	??_I2C_ReadByte+1
 14522  16DF  0022               	movlb	2	; select bank2
 14523  16E0  0861               	movf	(___g_timeout_start+2)^(0+256),w
 14524  16E1  0021               	movlb	1	; select bank1
 14525  16E2  3B6C               	subwfb	(_ticks+2)^(0+128),w
 14526  16E3  0020               	movlb	0	; select bank0
 14527  16E4  00A9               	movwf	??_I2C_ReadByte+2
 14528  16E5  0022               	movlb	2	; select bank2
 14529  16E6  0862               	movf	(___g_timeout_start+3)^(0+256),w
 14530  16E7  0021               	movlb	1	; select bank1
 14531  16E8  3B6D               	subwfb	(_ticks+3)^(0+128),w
 14532  16E9  0020               	movlb	0	; select bank0
 14533  16EA  00AA               	movwf	??_I2C_ReadByte+3
 14534  16EB  082A               	movf	??_I2C_ReadByte+3,w
 14535  16EC  1D03               	btfss	3,2
 14536  16ED  2EF7               	goto	l3832
 14537  16EE  0829               	movf	??_I2C_ReadByte+2,w
 14538  16EF  1D03               	btfss	3,2
 14539  16F0  2EF7               	goto	l3832
 14540  16F1  30B9               	movlw	185
 14541  16F2  0227               	subwf	??_I2C_ReadByte,w
 14542  16F3  300B               	movlw	11
 14543  16F4  3B28               	subwfb	??_I2C_ReadByte+1,w
 14544  16F5  1C03               	btfss	3,0
 14545  16F6  2ED0               	goto	l699
 14546  16F7                     l3832:	
 14547  16F7  30C8               	movlw	200
 14548  16F8  00A0               	movwf	DebugAlert@delay_high
 14549  16F9  3000               	movlw	0
 14550  16FA  00A1               	movwf	DebugAlert@delay_high+1
 14551  16FB  30C8               	movlw	200
 14552  16FC  00A2               	movwf	DebugAlert@delay_low
 14553  16FD  3000               	movlw	0
 14554  16FE  00A3               	movwf	DebugAlert@delay_low+1
 14555  16FF  3003               	movlw	3
 14556  1700  00A7               	movwf	??_I2C_ReadByte
 14557  1701  0827               	movf	??_I2C_ReadByte,w
 14558  1702  00A4               	movwf	DebugAlert@num_flashes
 14559  1703  319B  2338  3196   	fcall	_DebugAlert
 14560  1706                     l702:	
 14561  1706  0020               	movlb	0	; select bank0
 14562  1707  1190               	bcf	16,3	;volatile
 14563                           
 14564                           ;bme280_i2c.c: 51:     rcvdata = SSP1BUF;
 14565  1708  0024               	movlb	4	; select bank4
 14566  1709  0811               	movf	17,w	;volatile
 14567  170A  0020               	movlb	0	; select bank0
 14568  170B  00A7               	movwf	??_I2C_ReadByte
 14569  170C  0827               	movf	??_I2C_ReadByte,w
 14570  170D  00AC               	movwf	I2C_ReadByte@rcvdata
 14571                           
 14572                           ;bme280_i2c.c: 54:     SSP1CON2bits.ACKDT=ackbit;
 14573  170E  0C2B               	rrf	I2C_ReadByte@ackbit,w
 14574  170F  0024               	movlb	4	; select bank4
 14575  1710  1C03               	skipc
 14576  1711  1296               	bcf	22,5	;volatile
 14577  1712  1803               	skipnc
 14578  1713  1696               	bsf	22,5	;volatile
 14579                           
 14580                           ;bme280_i2c.c: 55:     SSP1CON2bits.ACKEN = 1;
 14581  1714  1616               	bsf	22,4	;volatile
 14582                           
 14583                           ;bme280_i2c.c: 56:     __g_timeout_start = ticks; while (!(PIR1bits.SSP1IF != 0)) { if (
      +                          ticks - __g_timeout_start > 3000) { DebugAlert(200, 200, 3);; break; } }; PIR1bits.SSP1I
      +                          F = 0;;
 14584  1715  0021               	movlb	1	; select bank1
 14585  1716  086D               	movf	(_ticks+3)^(0+128),w
 14586  1717  0022               	movlb	2	; select bank2
 14587  1718  00E2               	movwf	(___g_timeout_start+3)^(0+256)
 14588  1719  0021               	movlb	1	; select bank1
 14589  171A  086C               	movf	(_ticks+2)^(0+128),w
 14590  171B  0022               	movlb	2	; select bank2
 14591  171C  00E1               	movwf	(___g_timeout_start+2)^(0+256)
 14592  171D  0021               	movlb	1	; select bank1
 14593  171E  086B               	movf	(_ticks+1)^(0+128),w
 14594  171F  0022               	movlb	2	; select bank2
 14595  1720  00E0               	movwf	(___g_timeout_start+1)^(0+256)
 14596  1721  0021               	movlb	1	; select bank1
 14597  1722  086A               	movf	_ticks^(0+128),w
 14598  1723  0022               	movlb	2	; select bank2
 14599  1724  00DF               	movwf	___g_timeout_start^(0+256)
 14600  1725                     l703:	
 14601  1725  0020               	movlb	0	; select bank0
 14602  1726  1990               	btfsc	16,3	;volatile
 14603  1727  2F5A               	goto	l706
 14604  1728  0022               	movlb	2	; select bank2
 14605  1729  085F               	movf	___g_timeout_start^(0+256),w
 14606  172A  0021               	movlb	1	; select bank1
 14607  172B  026A               	subwf	_ticks^(0+128),w
 14608  172C  0020               	movlb	0	; select bank0
 14609  172D  00A7               	movwf	??_I2C_ReadByte
 14610  172E  0022               	movlb	2	; select bank2
 14611  172F  0860               	movf	(___g_timeout_start+1)^(0+256),w
 14612  1730  0021               	movlb	1	; select bank1
 14613  1731  3B6B               	subwfb	(_ticks+1)^(0+128),w
 14614  1732  0020               	movlb	0	; select bank0
 14615  1733  00A8               	movwf	??_I2C_ReadByte+1
 14616  1734  0022               	movlb	2	; select bank2
 14617  1735  0861               	movf	(___g_timeout_start+2)^(0+256),w
 14618  1736  0021               	movlb	1	; select bank1
 14619  1737  3B6C               	subwfb	(_ticks+2)^(0+128),w
 14620  1738  0020               	movlb	0	; select bank0
 14621  1739  00A9               	movwf	??_I2C_ReadByte+2
 14622  173A  0022               	movlb	2	; select bank2
 14623  173B  0862               	movf	(___g_timeout_start+3)^(0+256),w
 14624  173C  0021               	movlb	1	; select bank1
 14625  173D  3B6D               	subwfb	(_ticks+3)^(0+128),w
 14626  173E  0020               	movlb	0	; select bank0
 14627  173F  00AA               	movwf	??_I2C_ReadByte+3
 14628  1740  082A               	movf	??_I2C_ReadByte+3,w
 14629  1741  1D03               	btfss	3,2
 14630  1742  2F4C               	goto	l3844
 14631  1743  0829               	movf	??_I2C_ReadByte+2,w
 14632  1744  1D03               	btfss	3,2
 14633  1745  2F4C               	goto	l3844
 14634  1746  30B9               	movlw	185
 14635  1747  0227               	subwf	??_I2C_ReadByte,w
 14636  1748  300B               	movlw	11
 14637  1749  3B28               	subwfb	??_I2C_ReadByte+1,w
 14638  174A  1C03               	btfss	3,0
 14639  174B  2F25               	goto	l703
 14640  174C                     l3844:	
 14641  174C  30C8               	movlw	200
 14642  174D  00A0               	movwf	DebugAlert@delay_high
 14643  174E  3000               	movlw	0
 14644  174F  00A1               	movwf	DebugAlert@delay_high+1
 14645  1750  30C8               	movlw	200
 14646  1751  00A2               	movwf	DebugAlert@delay_low
 14647  1752  3000               	movlw	0
 14648  1753  00A3               	movwf	DebugAlert@delay_low+1
 14649  1754  3003               	movlw	3
 14650  1755  00A7               	movwf	??_I2C_ReadByte
 14651  1756  0827               	movf	??_I2C_ReadByte,w
 14652  1757  00A4               	movwf	DebugAlert@num_flashes
 14653  1758  319B  2338         	fcall	_DebugAlert
 14654  175A                     l706:	
 14655  175A  0020               	movlb	0	; select bank0
 14656  175B  1190               	bcf	16,3	;volatile
 14657                           
 14658                           ;bme280_i2c.c: 58:     return (rcvdata);
 14659  175C  082C               	movf	I2C_ReadByte@rcvdata,w
 14660  175D  0008               	return
 14661  175E                     __end_of_I2C_ReadByte:	
 14662                           
 14663                           	psect	text55
 14664  1C7A                     __ptext55:	
 14665 ;; *************** function _bme280_soft_reset *****************
 14666 ;; Defined at:
 14667 ;;		line 631 in file "BME280_driver/bme280.c"
 14668 ;; Parameters:    Size  Location     Type
 14669 ;;  dev             1    wreg     PTR const struct bme280_
 14670 ;;		 -> EnvSensor(51), 
 14671 ;; Auto vars:     Size  Location     Type
 14672 ;;  dev             1   64[BANK0 ] PTR const struct bme280_
 14673 ;;		 -> EnvSensor(51), 
 14674 ;;  reg_addr        1   63[BANK0 ] unsigned char 
 14675 ;;  rslt            1   62[BANK0 ] char 
 14676 ;;  soft_rst_cmd    1   61[BANK0 ] unsigned char 
 14677 ;; Return value:  Size  Location     Type
 14678 ;;                  1    wreg      char 
 14679 ;; Registers used:
 14680 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14681 ;; Tracked objects:
 14682 ;;		On entry : 1E/1
 14683 ;;		On exit  : 1F/0
 14684 ;;		Unchanged: 0/0
 14685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14687 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14688 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14689 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14690 ;;Total ram usage:        7 bytes
 14691 ;; Hardware stack levels used:    1
 14692 ;; Hardware stack levels required when called:   10
 14693 ;; This function calls:
 14694 ;;		_Sleep
 14695 ;;		_bme280_set_regs
 14696 ;;		_null_ptr_check
 14697 ;; This function is called by:
 14698 ;;		_bme280_init
 14699 ;;		_put_device_to_sleep
 14700 ;; This function uses a non-reentrant model
 14701 ;;
 14702                           
 14703                           
 14704                           ;psect for function _bme280_soft_reset
 14705  1C7A                     _bme280_soft_reset:	
 14706                           
 14707                           ;incstack = 0
 14708                           ; Regs used in _bme280_soft_reset: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14709                           ;bme280_soft_reset@dev stored from wreg
 14710  1C7A  0020               	movlb	0	; select bank0
 14711  1C7B  00E0               	movwf	bme280_soft_reset@dev
 14712                           
 14713                           ;BME280_driver/bme280.c: 631: int8_t bme280_soft_reset(const struct bme280_dev *dev);BME
      +                          280_driver/bme280.c: 632: {;BME280_driver/bme280.c: 633:     int8_t rslt;;BME280_driver/
      +                          bme280.c: 634:     uint8_t reg_addr = 0xE0;
 14714  1C7C  30E0               	movlw	224
 14715  1C7D  00DA               	movwf	??_bme280_soft_reset
 14716  1C7E  085A               	movf	??_bme280_soft_reset,w
 14717  1C7F  00DF               	movwf	bme280_soft_reset@reg_addr
 14718                           
 14719                           ;BME280_driver/bme280.c: 637:     uint8_t soft_rst_cmd = 0xB6;
 14720  1C80  30B6               	movlw	182
 14721  1C81  00DA               	movwf	??_bme280_soft_reset
 14722  1C82  085A               	movf	??_bme280_soft_reset,w
 14723  1C83  00DD               	movwf	bme280_soft_reset@soft_rst_cmd
 14724                           
 14725                           ;BME280_driver/bme280.c: 640:     rslt = null_ptr_check(dev);
 14726  1C84  0860               	movf	bme280_soft_reset@dev,w
 14727  1C85  319A  2247  319C   	fcall	_null_ptr_check
 14728  1C88  0020               	movlb	0	; select bank0
 14729  1C89  00DA               	movwf	??_bme280_soft_reset
 14730  1C8A  085A               	movf	??_bme280_soft_reset,w
 14731  1C8B  00DE               	movwf	bme280_soft_reset@rslt
 14732                           
 14733                           ;BME280_driver/bme280.c: 643:     if (rslt == 0)
 14734  1C8C  085E               	movf	bme280_soft_reset@rslt,w
 14735  1C8D  1D03               	btfss	3,2
 14736  1C8E  2CB2               	goto	l4090
 14737                           
 14738                           ;BME280_driver/bme280.c: 644:     {;BME280_driver/bme280.c: 646:         rslt = bme280_s
      +                          et_regs(&reg_addr, &soft_rst_cmd, 1, dev);
 14739  1C8F  305D               	movlw	(low (bme280_soft_reset@soft_rst_cmd| 0))& (0+255)
 14740  1C90  00DA               	movwf	??_bme280_soft_reset
 14741  1C91  085A               	movf	??_bme280_soft_reset,w
 14742  1C92  00BB               	movwf	bme280_set_regs@reg_data
 14743  1C93  01BC               	clrf	bme280_set_regs@len
 14744  1C94  0ABC               	incf	bme280_set_regs@len,f
 14745  1C95  0860               	movf	bme280_soft_reset@dev,w
 14746  1C96  00DB               	movwf	??_bme280_soft_reset+1
 14747  1C97  085B               	movf	??_bme280_soft_reset+1,w
 14748  1C98  00BD               	movwf	bme280_set_regs@dev
 14749  1C99  305F               	movlw	(low (bme280_soft_reset@reg_addr| 0))& (0+255)
 14750  1C9A  3196  261F  319C   	fcall	_bme280_set_regs
 14751  1C9D  00DC               	movwf	??_bme280_soft_reset+2
 14752  1C9E  085C               	movf	??_bme280_soft_reset+2,w
 14753  1C9F  00DE               	movwf	bme280_soft_reset@rslt
 14754                           
 14755                           ;BME280_driver/bme280.c: 649:         dev->delay_ms(2);
 14756  1CA0  3000               	movlw	0
 14757  1CA1  00F3               	movwf	Sleep@ms+3
 14758  1CA2  3000               	movlw	0
 14759  1CA3  00F2               	movwf	Sleep@ms+2
 14760  1CA4  3000               	movlw	0
 14761  1CA5  00F1               	movwf	Sleep@ms+1
 14762  1CA6  3002               	movlw	2
 14763  1CA7  00F0               	movwf	Sleep@ms
 14764  1CA8  0860               	movf	bme280_soft_reset@dev,w
 14765  1CA9  3E07               	addlw	7
 14766  1CAA  0086               	movwf	6
 14767  1CAB  3001               	movlw	1	; select bank2/3
 14768  1CAC  0087               	movwf	7
 14769  1CAD  3F41               	moviw [1]fsr1
 14770  1CAE  008A               	movwf	10
 14771  1CAF  3F40               	moviw [0]fsr1
 14772  1CB0  000A               	callw
 14773  1CB1  319C               	pagesel	$
 14774  1CB2                     l4090:	
 14775                           
 14776                           ;BME280_driver/bme280.c: 652:     return rslt;
 14777  1CB2  0020               	movlb	0	; select bank0
 14778  1CB3  085E               	movf	bme280_soft_reset@rslt,w
 14779  1CB4  0008               	return
 14780  1CB5                     __end_of_bme280_soft_reset:	
 14781                           
 14782                           	psect	text56
 14783  161F                     __ptext56:	
 14784 ;; *************** function _bme280_set_regs *****************
 14785 ;; Defined at:
 14786 ;;		line 442 in file "BME280_driver/bme280.c"
 14787 ;; Parameters:    Size  Location     Type
 14788 ;;  reg_addr        1    wreg     PTR unsigned char 
 14789 ;;		 -> write_power_mode@reg_addr(1), set_filter_standby_settings@reg_addr(1), set_osr_press_temp_settings@reg_addr(1), 
      +set_osr_humidity_settings@reg_addr(1), 
 14790 ;;		 -> bme280_soft_reset@reg_addr(1), 
 14791 ;;  reg_data        1   27[BANK0 ] PTR const unsigned char 
 14792 ;;		 -> write_power_mode@sensor_mode_reg_val(1), set_filter_standby_settings@reg_data(1), set_osr_press_temp_settings@re
      +g_data(1), set_osr_humidity_settings@ctrl_meas(1), 
 14793 ;;		 -> set_osr_humidity_settings@ctrl_hum(1), bme280_soft_reset@soft_rst_cmd(1), 
 14794 ;;  len             1   28[BANK0 ] unsigned char 
 14795 ;;  dev             1   29[BANK0 ] PTR const struct bme280_
 14796 ;;		 -> EnvSensor(51), 
 14797 ;; Auto vars:     Size  Location     Type
 14798 ;;  reg_addr        1   57[BANK0 ] PTR unsigned char 
 14799 ;;		 -> write_power_mode@reg_addr(1), set_filter_standby_settings@reg_addr(1), set_osr_press_temp_settings@reg_addr(1), 
      +set_osr_humidity_settings@reg_addr(1), 
 14800 ;;		 -> bme280_soft_reset@reg_addr(1), 
 14801 ;;  temp_buff      20   33[BANK0 ] unsigned char [20]
 14802 ;;  temp_len        2   53[BANK0 ] unsigned short 
 14803 ;;  rslt            1   56[BANK0 ] char 
 14804 ;;  reg_addr_cnt    1   55[BANK0 ] unsigned char 
 14805 ;; Return value:  Size  Location     Type
 14806 ;;                  1    wreg      char 
 14807 ;; Registers used:
 14808 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14809 ;; Tracked objects:
 14810 ;;		On entry : 1F/0
 14811 ;;		On exit  : 1F/0
 14812 ;;		Unchanged: 0/0
 14813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14814 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14815 ;;      Locals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14816 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14817 ;;      Totals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14818 ;;Total ram usage:       31 bytes
 14819 ;; Hardware stack levels used:    1
 14820 ;; Hardware stack levels required when called:    9
 14821 ;; This function calls:
 14822 ;;		_WriteEnvSensor
 14823 ;;		_interleave_reg_addr
 14824 ;;		_null_ptr_check
 14825 ;; This function is called by:
 14826 ;;		_bme280_soft_reset
 14827 ;;		_set_osr_humidity_settings
 14828 ;;		_set_osr_press_temp_settings
 14829 ;;		_set_filter_standby_settings
 14830 ;;		_write_power_mode
 14831 ;; This function uses a non-reentrant model
 14832 ;;
 14833                           
 14834                           
 14835                           ;psect for function _bme280_set_regs
 14836  161F                     _bme280_set_regs:	
 14837                           
 14838                           ;incstack = 0
 14839                           ; Regs used in _bme280_set_regs: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14840                           ;bme280_set_regs@reg_addr stored from wreg
 14841  161F  00D9               	movwf	bme280_set_regs@reg_addr
 14842                           
 14843                           ;BME280_driver/bme280.c: 442: int8_t bme280_set_regs(uint8_t *reg_addr, const uint8_t *r
      +                          eg_data, uint8_t len, const struct bme280_dev *dev);BME280_driver/bme280.c: 443: {;BME28
      +                          0_driver/bme280.c: 444:     int8_t rslt;;BME280_driver/bme280.c: 445:     uint8_t temp_b
      +                          uff[20];;BME280_driver/bme280.c: 447:     if (len > 10)
 14844  1620  300B               	movlw	11
 14845  1621  023C               	subwf	bme280_set_regs@len,w
 14846  1622  1C03               	skipc
 14847  1623  2E28               	goto	l3962
 14848                           
 14849                           ;BME280_driver/bme280.c: 448:     {;BME280_driver/bme280.c: 449:         len = 10;
 14850  1624  300A               	movlw	10
 14851  1625  00BE               	movwf	??_bme280_set_regs
 14852  1626  083E               	movf	??_bme280_set_regs,w
 14853  1627  00BC               	movwf	bme280_set_regs@len
 14854  1628                     l3962:	
 14855                           
 14856                           ;BME280_driver/bme280.c: 451:     uint16_t temp_len;;BME280_driver/bme280.c: 452:     ui
      +                          nt8_t reg_addr_cnt;;BME280_driver/bme280.c: 455:     rslt = null_ptr_check(dev);
 14857  1628  083D               	movf	bme280_set_regs@dev,w
 14858  1629  319A  2247  3196   	fcall	_null_ptr_check
 14859  162C  0020               	movlb	0	; select bank0
 14860  162D  00BE               	movwf	??_bme280_set_regs
 14861  162E  083E               	movf	??_bme280_set_regs,w
 14862  162F  00D8               	movwf	bme280_set_regs@rslt
 14863                           
 14864                           ;BME280_driver/bme280.c: 458:     if ((rslt == 0) && (reg_addr != ((void*)0)) && (reg_da
      +                          ta != ((void*)0)))
 14865  1630  0858               	movf	bme280_set_regs@rslt,w
 14866  1631  1D03               	btfss	3,2
 14867  1632  2EB9               	goto	l70
 14868  1633  0859               	movf	bme280_set_regs@reg_addr,w
 14869  1634  1903               	btfsc	3,2
 14870  1635  2EB9               	goto	l70
 14871  1636  083B               	movf	bme280_set_regs@reg_data,w
 14872  1637  1903               	btfsc	3,2
 14873  1638  2EB9               	goto	l70
 14874                           
 14875                           ;BME280_driver/bme280.c: 459:     {;BME280_driver/bme280.c: 460:         if (len != 0)
 14876  1639  083C               	movf	bme280_set_regs@len,w
 14877  163A  1903               	btfsc	3,2
 14878  163B  2EB4               	goto	l3998
 14879                           
 14880                           ;BME280_driver/bme280.c: 461:         {;BME280_driver/bme280.c: 462:             temp_bu
      +                          ff[0] = reg_data[0];
 14881  163C  083B               	movf	bme280_set_regs@reg_data,w
 14882  163D  0086               	movwf	6
 14883  163E  0187               	clrf	7
 14884  163F  0801               	movf	1,w
 14885  1640  00BE               	movwf	??_bme280_set_regs
 14886  1641  083E               	movf	??_bme280_set_regs,w
 14887  1642  00C1               	movwf	bme280_set_regs@temp_buff
 14888                           
 14889                           ;BME280_driver/bme280.c: 465:             if (dev->intf != BME280_I2C_INTF)
 14890  1643  083D               	movf	bme280_set_regs@dev,w
 14891  1644  3E02               	addlw	2
 14892  1645  0086               	movwf	6
 14893  1646  3001               	movlw	1	; select bank2/3
 14894  1647  0087               	movwf	7
 14895  1648  0301               	decf	1,w
 14896  1649  1903               	btfsc	3,2
 14897  164A  2E66               	goto	l3984
 14898                           
 14899                           ;BME280_driver/bme280.c: 466:             {;BME280_driver/bme280.c: 467:                
      +                           for (reg_addr_cnt = 0; reg_addr_cnt < len; reg_addr_cnt++)
 14900  164B  01D7               	clrf	bme280_set_regs@reg_addr_cnt
 14901  164C                     l3982:	
 14902  164C  083C               	movf	bme280_set_regs@len,w
 14903  164D  0257               	subwf	bme280_set_regs@reg_addr_cnt,w
 14904  164E  1803               	btfsc	3,0
 14905  164F  2E66               	goto	l3984
 14906                           
 14907                           ;BME280_driver/bme280.c: 468:                 {;BME280_driver/bme280.c: 469:            
      +                                   reg_addr[reg_addr_cnt] = reg_addr[reg_addr_cnt] & 0x7F;
 14908  1650  0857               	movf	bme280_set_regs@reg_addr_cnt,w
 14909  1651  0759               	addwf	bme280_set_regs@reg_addr,w
 14910  1652  00BE               	movwf	??_bme280_set_regs
 14911  1653  083E               	movf	??_bme280_set_regs,w
 14912  1654  0086               	movwf	6
 14913  1655  0187               	clrf	7
 14914  1656  0801               	movf	1,w
 14915  1657  397F               	andlw	127
 14916  1658  00BF               	movwf	??_bme280_set_regs+1
 14917  1659  0857               	movf	bme280_set_regs@reg_addr_cnt,w
 14918  165A  0759               	addwf	bme280_set_regs@reg_addr,w
 14919  165B  00C0               	movwf	??_bme280_set_regs+2
 14920  165C  0840               	movf	??_bme280_set_regs+2,w
 14921  165D  0086               	movwf	6
 14922  165E  0187               	clrf	7
 14923  165F  083F               	movf	??_bme280_set_regs+1,w
 14924  1660  0081               	movwf	1
 14925                           
 14926                           ;BME280_driver/bme280.c: 470:                 }
 14927  1661  3001               	movlw	1
 14928  1662  00BE               	movwf	??_bme280_set_regs
 14929  1663  083E               	movf	??_bme280_set_regs,w
 14930  1664  07D7               	addwf	bme280_set_regs@reg_addr_cnt,f
 14931  1665  2E4C               	goto	l3982
 14932  1666                     l3984:	
 14933                           
 14934                           ;BME280_driver/bme280.c: 474:             if (len > 1)
 14935  1666  3002               	movlw	2
 14936  1667  023C               	subwf	bme280_set_regs@len,w
 14937  1668  1C03               	skipc
 14938  1669  2E85               	goto	l3990
 14939                           
 14940                           ;BME280_driver/bme280.c: 475:             {;BME280_driver/bme280.c: 479:                
      +                           interleave_reg_addr(reg_addr, temp_buff, reg_data, len);
 14941  166A  3041               	movlw	(low (bme280_set_regs@temp_buff| 0))& (0+255)
 14942  166B  00BE               	movwf	??_bme280_set_regs
 14943  166C  083E               	movf	??_bme280_set_regs,w
 14944  166D  00F0               	movwf	interleave_reg_addr@temp_buff
 14945  166E  083B               	movf	bme280_set_regs@reg_data,w
 14946  166F  00BF               	movwf	??_bme280_set_regs+1
 14947  1670  083F               	movf	??_bme280_set_regs+1,w
 14948  1671  00F1               	movwf	interleave_reg_addr@reg_data
 14949  1672  083C               	movf	bme280_set_regs@len,w
 14950  1673  00C0               	movwf	??_bme280_set_regs+2
 14951  1674  0840               	movf	??_bme280_set_regs+2,w
 14952  1675  00F2               	movwf	interleave_reg_addr@len
 14953  1676  0859               	movf	bme280_set_regs@reg_addr,w
 14954  1677  319B  23BA  3196   	fcall	_interleave_reg_addr
 14955                           
 14956                           ;BME280_driver/bme280.c: 480:                 temp_len = ((len * 2) - 1);
 14957  167A  083C               	movf	bme280_set_regs@len,w
 14958  167B  00BE               	movwf	??_bme280_set_regs
 14959  167C  01BF               	clrf	??_bme280_set_regs+1
 14960  167D  35BE               	lslf	??_bme280_set_regs,f
 14961  167E  0DBF               	rlf	??_bme280_set_regs+1,f
 14962  167F  083E               	movf	??_bme280_set_regs,w
 14963  1680  3EFF               	addlw	255
 14964  1681  00D5               	movwf	bme280_set_regs@temp_len
 14965  1682  30FF               	movlw	255
 14966  1683  3D3F               	addwfc	??_bme280_set_regs+1,w
 14967  1684  2E8B               	goto	L6
 14968  1685                     l3990:	
 14969                           ;BME280_driver/bme280.c: 481:             }
 14970                           
 14971                           
 14972                           ;BME280_driver/bme280.c: 483:             {;BME280_driver/bme280.c: 484:                
      +                           temp_len = len;
 14973  1685  083C               	movf	bme280_set_regs@len,w
 14974  1686  00BE               	movwf	??_bme280_set_regs
 14975  1687  01BF               	clrf	??_bme280_set_regs+1
 14976  1688  083E               	movf	??_bme280_set_regs,w
 14977  1689  00D5               	movwf	bme280_set_regs@temp_len
 14978  168A  083F               	movf	??_bme280_set_regs+1,w
 14979  168B                     L6:	
 14980  168B  00D6               	movwf	bme280_set_regs@temp_len+1
 14981                           
 14982                           ;BME280_driver/bme280.c: 486:             rslt = dev->write(dev->dev_id, reg_addr[0], te
      +                          mp_buff, temp_len);
 14983  168C  083D               	movf	bme280_set_regs@dev,w
 14984  168D  0086               	movwf	6
 14985  168E  3001               	movlw	1	; select bank2/3
 14986  168F  0087               	movwf	7
 14987  1690  3001               	movlw	1	; select bank2/3
 14988  1691  3F41               	moviw [1]fsr1
 14989  1692  00AF               	movwf	WriteEnvSensor@dev_id
 14990  1693  0859               	movf	bme280_set_regs@reg_addr,w
 14991  1694  0086               	movwf	6
 14992  1695  0187               	clrf	7
 14993  1696  0801               	movf	1,w
 14994  1697  00BE               	movwf	??_bme280_set_regs
 14995  1698  083E               	movf	??_bme280_set_regs,w
 14996  1699  00B0               	movwf	WriteEnvSensor@reg_addr
 14997  169A  3041               	movlw	(low (bme280_set_regs@temp_buff| 0))& (0+255)
 14998  169B  00BF               	movwf	??_bme280_set_regs+1
 14999  169C  083F               	movf	??_bme280_set_regs+1,w
 15000  169D  00B1               	movwf	WriteEnvSensor@reg_data
 15001  169E  0856               	movf	bme280_set_regs@temp_len+1,w
 15002  169F  00B3               	movwf	WriteEnvSensor@len+1
 15003  16A0  0855               	movf	bme280_set_regs@temp_len,w
 15004  16A1  00B2               	movwf	WriteEnvSensor@len
 15005  16A2  083D               	movf	bme280_set_regs@dev,w
 15006  16A3  3E05               	addlw	5
 15007  16A4  0086               	movwf	6
 15008  16A5  3001               	movlw	1	; select bank2/3
 15009  16A6  0087               	movwf	7
 15010  16A7  3F41               	moviw [1]fsr1
 15011  16A8  008A               	movwf	10
 15012  16A9  3F40               	moviw [0]fsr1
 15013  16AA  000A               	callw
 15014  16AB  3196               	pagesel	$
 15015  16AC  00C0               	movwf	??_bme280_set_regs+2
 15016  16AD  0840               	movf	??_bme280_set_regs+2,w
 15017  16AE  00D8               	movwf	bme280_set_regs@rslt
 15018                           
 15019                           ;BME280_driver/bme280.c: 489:             if (rslt != 0)
 15020  16AF  0858               	movf	bme280_set_regs@rslt,w
 15021  16B0  1903               	btfsc	3,2
 15022  16B1  2EBB               	goto	l4000
 15023                           
 15024                           ;BME280_driver/bme280.c: 490:             {;BME280_driver/bme280.c: 491:                
      +                           rslt = -4;
 15025  16B2  30FC               	movlw	252
 15026  16B3  2EB5               	goto	L7
 15027  16B4                     l3998:	
 15028                           
 15029                           ;BME280_driver/bme280.c: 495:         {;BME280_driver/bme280.c: 496:             rslt = 
      +                          -3;
 15030  16B4  30FD               	movlw	253
 15031  16B5                     L7:	
 15032  16B5  00BE               	movwf	??_bme280_set_regs
 15033  16B6  083E               	movf	??_bme280_set_regs,w
 15034  16B7  00D8               	movwf	bme280_set_regs@rslt
 15035  16B8  2EBB               	goto	l4000
 15036  16B9                     l70:	
 15037                           ;BME280_driver/bme280.c: 499:     else
 15038                           
 15039                           
 15040                           ;BME280_driver/bme280.c: 500:     {;BME280_driver/bme280.c: 501:         rslt = -1;
 15041  16B9  01D8               	clrf	bme280_set_regs@rslt
 15042  16BA  03D8               	decf	bme280_set_regs@rslt,f
 15043  16BB                     l4000:	
 15044                           
 15045                           ;BME280_driver/bme280.c: 504:     return rslt;
 15046  16BB  0858               	movf	bme280_set_regs@rslt,w
 15047  16BC  0008               	return
 15048  16BD                     __end_of_bme280_set_regs:	
 15049                           
 15050                           	psect	text57
 15051  1A47                     __ptext57:	
 15052 ;; *************** function _null_ptr_check *****************
 15053 ;; Defined at:
 15054 ;;		line 1426 in file "BME280_driver/bme280.c"
 15055 ;; Parameters:    Size  Location     Type
 15056 ;;  dev             1    wreg     PTR const struct bme280_
 15057 ;;		 -> EnvSensor(51), 
 15058 ;; Auto vars:     Size  Location     Type
 15059 ;;  dev             1    3[COMMON] PTR const struct bme280_
 15060 ;;		 -> EnvSensor(51), 
 15061 ;;  rslt            1    2[COMMON] char 
 15062 ;; Return value:  Size  Location     Type
 15063 ;;                  1    wreg      char 
 15064 ;; Registers used:
 15065 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 15066 ;; Tracked objects:
 15067 ;;		On entry : 1E/0
 15068 ;;		On exit  : 1E/0
 15069 ;;		Unchanged: 1E/0
 15070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15072 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15073 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15074 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15075 ;;Total ram usage:        4 bytes
 15076 ;; Hardware stack levels used:    1
 15077 ;; Hardware stack levels required when called:    3
 15078 ;; This function calls:
 15079 ;;		Nothing
 15080 ;; This function is called by:
 15081 ;;		_bme280_init
 15082 ;;		_bme280_get_regs
 15083 ;;		_bme280_set_regs
 15084 ;;		_bme280_set_sensor_settings
 15085 ;;		_bme280_set_sensor_mode
 15086 ;;		_bme280_get_sensor_mode
 15087 ;;		_bme280_soft_reset
 15088 ;;		_bme280_get_sensor_data
 15089 ;; This function uses a non-reentrant model
 15090 ;;
 15091                           
 15092                           
 15093                           ;psect for function _null_ptr_check
 15094  1A47                     _null_ptr_check:	
 15095                           
 15096                           ;incstack = 0
 15097                           ; Regs used in _null_ptr_check: [wreg+fsr1l+fsr1h+status,2+status,0]
 15098                           ;null_ptr_check@dev stored from wreg
 15099  1A47  00F3               	movwf	null_ptr_check@dev
 15100                           
 15101                           ;BME280_driver/bme280.c: 1426: static int8_t null_ptr_check(const struct bme280_dev *dev
      +                          );BME280_driver/bme280.c: 1427: {;BME280_driver/bme280.c: 1428:     int8_t rslt;;BME280_
      +                          driver/bme280.c: 1430:     if ((dev == ((void*)0)) || (dev->read == ((void*)0)) || (dev-
      +                          >write == ((void*)0)) || (dev->delay_ms == ((void*)0)))
 15102  1A48  0873               	movf	null_ptr_check@dev,w
 15103  1A49  1903               	btfsc	3,2
 15104  1A4A  2A66               	goto	l234
 15105  1A4B  0873               	movf	null_ptr_check@dev,w
 15106  1A4C  3E03               	addlw	3
 15107  1A4D  0086               	movwf	6
 15108  1A4E  3001               	movlw	1	; select bank2/3
 15109  1A4F  0087               	movwf	7
 15110  1A50  0016               	moviw fsr1++
 15111  1A51  0401               	iorwf	1,w
 15112  1A52  1903               	btfsc	3,2
 15113  1A53  2A66               	goto	l234
 15114  1A54  0873               	movf	null_ptr_check@dev,w
 15115  1A55  3E05               	addlw	5
 15116  1A56  0086               	movwf	6
 15117  1A57  3001               	movlw	1	; select bank2/3
 15118  1A58  0087               	movwf	7
 15119  1A59  0016               	moviw fsr1++
 15120  1A5A  0401               	iorwf	1,w
 15121  1A5B  1903               	btfsc	3,2
 15122  1A5C  2A66               	goto	l234
 15123  1A5D  0873               	movf	null_ptr_check@dev,w
 15124  1A5E  3E07               	addlw	7
 15125  1A5F  0086               	movwf	6
 15126  1A60  3001               	movlw	1	; select bank2/3
 15127  1A61  0087               	movwf	7
 15128  1A62  0016               	moviw fsr1++
 15129  1A63  0401               	iorwf	1,w
 15130  1A64  1D03               	btfss	3,2
 15131  1A65  2A69               	goto	l3858
 15132  1A66                     l234:	
 15133                           
 15134                           ;BME280_driver/bme280.c: 1431:     {;BME280_driver/bme280.c: 1433:         rslt = -1;
 15135  1A66  01F2               	clrf	null_ptr_check@rslt
 15136  1A67  03F2               	decf	null_ptr_check@rslt,f
 15137                           
 15138                           ;BME280_driver/bme280.c: 1434:     }
 15139  1A68  2A6A               	goto	l3860
 15140  1A69                     l3858:	
 15141                           
 15142                           ;BME280_driver/bme280.c: 1436:     {;BME280_driver/bme280.c: 1438:         rslt = 0;
 15143  1A69  01F2               	clrf	null_ptr_check@rslt
 15144  1A6A                     l3860:	
 15145                           
 15146                           ;BME280_driver/bme280.c: 1441:     return rslt;
 15147  1A6A  0872               	movf	null_ptr_check@rslt,w
 15148  1A6B  0008               	return
 15149  1A6C                     __end_of_null_ptr_check:	
 15150                           
 15151                           	psect	text58
 15152  1BBA                     __ptext58:	
 15153 ;; *************** function _interleave_reg_addr *****************
 15154 ;; Defined at:
 15155 ;;		line 1343 in file "BME280_driver/bme280.c"
 15156 ;; Parameters:    Size  Location     Type
 15157 ;;  reg_addr        1    wreg     PTR const unsigned char 
 15158 ;;		 -> write_power_mode@reg_addr(1), set_filter_standby_settings@reg_addr(1), set_osr_press_temp_settings@reg_addr(1), 
      +set_osr_humidity_settings@reg_addr(1), 
 15159 ;;		 -> bme280_soft_reset@reg_addr(1), 
 15160 ;;  temp_buff       1    0[COMMON] PTR unsigned char 
 15161 ;;		 -> bme280_set_regs@temp_buff(20), 
 15162 ;;  reg_data        1    1[COMMON] PTR const unsigned char 
 15163 ;;		 -> write_power_mode@sensor_mode_reg_val(1), set_filter_standby_settings@reg_data(1), set_osr_press_temp_settings@re
      +g_data(1), set_osr_humidity_settings@ctrl_meas(1), 
 15164 ;;		 -> set_osr_humidity_settings@ctrl_hum(1), bme280_soft_reset@soft_rst_cmd(1), 
 15165 ;;  len             1    2[COMMON] unsigned char 
 15166 ;; Auto vars:     Size  Location     Type
 15167 ;;  reg_addr        1    6[COMMON] PTR const unsigned char 
 15168 ;;		 -> write_power_mode@reg_addr(1), set_filter_standby_settings@reg_addr(1), set_osr_press_temp_settings@reg_addr(1), 
      +set_osr_humidity_settings@reg_addr(1), 
 15169 ;;		 -> bme280_soft_reset@reg_addr(1), 
 15170 ;;  index           1    7[COMMON] unsigned char 
 15171 ;; Return value:  Size  Location     Type
 15172 ;;                  1    wreg      void 
 15173 ;; Registers used:
 15174 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 15175 ;; Tracked objects:
 15176 ;;		On entry : 1F/0
 15177 ;;		On exit  : 1F/0
 15178 ;;		Unchanged: 1F/0
 15179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15180 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15181 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15182 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15183 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15184 ;;Total ram usage:        8 bytes
 15185 ;; Hardware stack levels used:    1
 15186 ;; Hardware stack levels required when called:    3
 15187 ;; This function calls:
 15188 ;;		Nothing
 15189 ;; This function is called by:
 15190 ;;		_bme280_set_regs
 15191 ;; This function uses a non-reentrant model
 15192 ;;
 15193                           
 15194                           
 15195                           ;psect for function _interleave_reg_addr
 15196  1BBA                     _interleave_reg_addr:	
 15197                           
 15198                           ;incstack = 0
 15199                           ; Regs used in _interleave_reg_addr: [wreg+fsr1l+fsr1h+status,2+status,0]
 15200                           ;interleave_reg_addr@reg_addr stored from wreg
 15201  1BBA  00F6               	movwf	interleave_reg_addr@reg_addr
 15202                           
 15203                           ;BME280_driver/bme280.c: 1343: static void interleave_reg_addr(const uint8_t *reg_addr, 
      +                          uint8_t *temp_buff, const uint8_t *reg_data, uint8_t len);BME280_driver/bme280.c: 1344: 
      +                          {;BME280_driver/bme280.c: 1345:     uint8_t index;;BME280_driver/bme280.c: 1347:     for
      +                           (index = 1; index < len; index++)
 15204  1BBB  01F7               	clrf	interleave_reg_addr@index
 15205  1BBC  0AF7               	incf	interleave_reg_addr@index,f
 15206  1BBD                     l3870:	
 15207  1BBD  0872               	movf	interleave_reg_addr@len,w
 15208  1BBE  0277               	subwf	interleave_reg_addr@index,w
 15209  1BBF  1803               	btfsc	3,0
 15210  1BC0  0008               	return
 15211                           
 15212                           ;BME280_driver/bme280.c: 1348:     {;BME280_driver/bme280.c: 1349:         temp_buff[(in
      +                          dex * 2) - 1] = reg_addr[index];
 15213  1BC1  0877               	movf	interleave_reg_addr@index,w
 15214  1BC2  0776               	addwf	interleave_reg_addr@reg_addr,w
 15215  1BC3  00F3               	movwf	??_interleave_reg_addr
 15216  1BC4  0873               	movf	??_interleave_reg_addr,w
 15217  1BC5  0086               	movwf	6
 15218  1BC6  0187               	clrf	7
 15219  1BC7  0801               	movf	1,w
 15220  1BC8  00F4               	movwf	??_interleave_reg_addr+1
 15221  1BC9  3577               	lslf	interleave_reg_addr@index,w
 15222  1BCA  0770               	addwf	interleave_reg_addr@temp_buff,w
 15223  1BCB  00F5               	movwf	??_interleave_reg_addr+2
 15224  1BCC  0875               	movf	??_interleave_reg_addr+2,w
 15225  1BCD  3EFF               	addlw	-1
 15226  1BCE  0086               	movwf	6
 15227  1BCF  0187               	clrf	7
 15228  1BD0  0874               	movf	??_interleave_reg_addr+1,w
 15229  1BD1  0081               	movwf	1
 15230                           
 15231                           ;BME280_driver/bme280.c: 1350:         temp_buff[index * 2] = reg_data[index];
 15232  1BD2  0877               	movf	interleave_reg_addr@index,w
 15233  1BD3  0771               	addwf	interleave_reg_addr@reg_data,w
 15234  1BD4  00F3               	movwf	??_interleave_reg_addr
 15235  1BD5  0873               	movf	??_interleave_reg_addr,w
 15236  1BD6  0086               	movwf	6
 15237  1BD7  0187               	clrf	7
 15238  1BD8  0801               	movf	1,w
 15239  1BD9  00F4               	movwf	??_interleave_reg_addr+1
 15240  1BDA  3577               	lslf	interleave_reg_addr@index,w
 15241  1BDB  0770               	addwf	interleave_reg_addr@temp_buff,w
 15242  1BDC  00F5               	movwf	??_interleave_reg_addr+2
 15243  1BDD  0875               	movf	??_interleave_reg_addr+2,w
 15244  1BDE  0086               	movwf	6
 15245  1BDF  0187               	clrf	7
 15246  1BE0  0874               	movf	??_interleave_reg_addr+1,w
 15247  1BE1  0081               	movwf	1
 15248                           
 15249                           ;BME280_driver/bme280.c: 1351:     }
 15250  1BE2  3001               	movlw	1
 15251  1BE3  00F3               	movwf	??_interleave_reg_addr
 15252  1BE4  0873               	movf	??_interleave_reg_addr,w
 15253  1BE5  07F7               	addwf	interleave_reg_addr@index,f
 15254  1BE6  2BBD               	goto	l3870
 15255  1BE7                     __end_of_interleave_reg_addr:	
 15256                           
 15257                           	psect	text59
 15258  1417                     __ptext59:	
 15259 ;; *************** function _WriteEnvSensor *****************
 15260 ;; Defined at:
 15261 ;;		line 156 in file "bme280_i2c.c"
 15262 ;; Parameters:    Size  Location     Type
 15263 ;;  dev_id          1   15[BANK0 ] unsigned char 
 15264 ;;  reg_addr        1   16[BANK0 ] unsigned char 
 15265 ;;  reg_data        1   17[BANK0 ] PTR unsigned char 
 15266 ;;		 -> bme280_set_regs@temp_buff(20), 
 15267 ;;  len             2   18[BANK0 ] unsigned short 
 15268 ;; Auto vars:     Size  Location     Type
 15269 ;;  i               2   25[BANK0 ] int 
 15270 ;;  rslt            1   24[BANK0 ] char 
 15271 ;; Return value:  Size  Location     Type
 15272 ;;                  1    wreg      char 
 15273 ;; Registers used:
 15274 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15275 ;; Tracked objects:
 15276 ;;		On entry : 1F/0
 15277 ;;		On exit  : 1F/0
 15278 ;;		Unchanged: 0/0
 15279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15280 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15281 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15282 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15283 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15284 ;;Total ram usage:       12 bytes
 15285 ;; Hardware stack levels used:    1
 15286 ;; Hardware stack levels required when called:    8
 15287 ;; This function calls:
 15288 ;;		_DebugAlert
 15289 ;;		_I2C_Stop
 15290 ;;		_I2C_WriteByte
 15291 ;; This function is called by:
 15292 ;;		_BME280_Init
 15293 ;;		_bme280_set_regs
 15294 ;; This function uses a non-reentrant model
 15295 ;;
 15296                           
 15297                           
 15298                           ;psect for function _WriteEnvSensor
 15299  1417                     _WriteEnvSensor:	
 15300                           
 15301                           ;bme280_i2c.c: 156: int8_t WriteEnvSensor(uint8_t dev_id, uint8_t reg_addr, uint8_t *reg
      +                          _data, uint16_t len);bme280_i2c.c: 157: {;bme280_i2c.c: 158:     int8_t rslt = 0;
 15302                           
 15303                           ;incstack = 0
 15304                           ; Regs used in _WriteEnvSensor: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15305  1417  01B8               	clrf	WriteEnvSensor@rslt
 15306                           
 15307                           ;bme280_i2c.c: 160:     PIR1bits.SSP1IF = 0;
 15308  1418  1190               	bcf	16,3	;volatile
 15309                           
 15310                           ;bme280_i2c.c: 163:     SSP1CON2bits.SEN = 1;
 15311  1419  0024               	movlb	4	; select bank4
 15312  141A  1416               	bsf	22,0	;volatile
 15313                           
 15314                           ;bme280_i2c.c: 164:     __g_timeout_start = ticks; while (!(PIR1bits.SSP1IF != 0)) { if 
      +                          (ticks - __g_timeout_start > 3000) { DebugAlert(200, 200, 3);; break; } }; PIR1bits.SSP1
      +                          IF = 0;;
 15315  141B  0021               	movlb	1	; select bank1
 15316  141C  086D               	movf	(_ticks+3)^(0+128),w
 15317  141D  0022               	movlb	2	; select bank2
 15318  141E  00E2               	movwf	(___g_timeout_start+3)^(0+256)
 15319  141F  0021               	movlb	1	; select bank1
 15320  1420  086C               	movf	(_ticks+2)^(0+128),w
 15321  1421  0022               	movlb	2	; select bank2
 15322  1422  00E1               	movwf	(___g_timeout_start+2)^(0+256)
 15323  1423  0021               	movlb	1	; select bank1
 15324  1424  086B               	movf	(_ticks+1)^(0+128),w
 15325  1425  0022               	movlb	2	; select bank2
 15326  1426  00E0               	movwf	(___g_timeout_start+1)^(0+256)
 15327  1427  0021               	movlb	1	; select bank1
 15328  1428  086A               	movf	_ticks^(0+128),w
 15329  1429  0022               	movlb	2	; select bank2
 15330  142A  00DF               	movwf	___g_timeout_start^(0+256)
 15331  142B                     l743:	
 15332  142B  0020               	movlb	0	; select bank0
 15333  142C  1990               	btfsc	16,3	;volatile
 15334  142D  2C61               	goto	l746
 15335  142E  0022               	movlb	2	; select bank2
 15336  142F  085F               	movf	___g_timeout_start^(0+256),w
 15337  1430  0021               	movlb	1	; select bank1
 15338  1431  026A               	subwf	_ticks^(0+128),w
 15339  1432  0020               	movlb	0	; select bank0
 15340  1433  00B4               	movwf	??_WriteEnvSensor
 15341  1434  0022               	movlb	2	; select bank2
 15342  1435  0860               	movf	(___g_timeout_start+1)^(0+256),w
 15343  1436  0021               	movlb	1	; select bank1
 15344  1437  3B6B               	subwfb	(_ticks+1)^(0+128),w
 15345  1438  0020               	movlb	0	; select bank0
 15346  1439  00B5               	movwf	??_WriteEnvSensor+1
 15347  143A  0022               	movlb	2	; select bank2
 15348  143B  0861               	movf	(___g_timeout_start+2)^(0+256),w
 15349  143C  0021               	movlb	1	; select bank1
 15350  143D  3B6C               	subwfb	(_ticks+2)^(0+128),w
 15351  143E  0020               	movlb	0	; select bank0
 15352  143F  00B6               	movwf	??_WriteEnvSensor+2
 15353  1440  0022               	movlb	2	; select bank2
 15354  1441  0862               	movf	(___g_timeout_start+3)^(0+256),w
 15355  1442  0021               	movlb	1	; select bank1
 15356  1443  3B6D               	subwfb	(_ticks+3)^(0+128),w
 15357  1444  0020               	movlb	0	; select bank0
 15358  1445  00B7               	movwf	??_WriteEnvSensor+3
 15359  1446  0837               	movf	??_WriteEnvSensor+3,w
 15360  1447  1D03               	btfss	3,2
 15361  1448  2C52               	goto	l3924
 15362  1449  0836               	movf	??_WriteEnvSensor+2,w
 15363  144A  1D03               	btfss	3,2
 15364  144B  2C52               	goto	l3924
 15365  144C  30B9               	movlw	185
 15366  144D  0234               	subwf	??_WriteEnvSensor,w
 15367  144E  300B               	movlw	11
 15368  144F  3B35               	subwfb	??_WriteEnvSensor+1,w
 15369  1450  1C03               	btfss	3,0
 15370  1451  2C2B               	goto	l743
 15371  1452                     l3924:	
 15372  1452  30C8               	movlw	200
 15373  1453  00A0               	movwf	DebugAlert@delay_high
 15374  1454  3000               	movlw	0
 15375  1455  00A1               	movwf	DebugAlert@delay_high+1
 15376  1456  30C8               	movlw	200
 15377  1457  00A2               	movwf	DebugAlert@delay_low
 15378  1458  3000               	movlw	0
 15379  1459  00A3               	movwf	DebugAlert@delay_low+1
 15380  145A  3003               	movlw	3
 15381  145B  00B4               	movwf	??_WriteEnvSensor
 15382  145C  0834               	movf	??_WriteEnvSensor,w
 15383  145D  00A4               	movwf	DebugAlert@num_flashes
 15384  145E  319B  2338  3194   	fcall	_DebugAlert
 15385  1461                     l746:	
 15386  1461  0020               	movlb	0	; select bank0
 15387  1462  1190               	bcf	16,3	;volatile
 15388                           
 15389                           ;bme280_i2c.c: 167:     I2C_WriteByte(dev_id<<1);
 15390  1463  352F               	lslf	WriteEnvSensor@dev_id,w
 15391  1464  3190  2021  3194   	fcall	_I2C_WriteByte
 15392                           
 15393                           ;bme280_i2c.c: 170:     I2C_WriteByte(reg_addr);
 15394  1467  0020               	movlb	0	; select bank0
 15395  1468  0830               	movf	WriteEnvSensor@reg_addr,w
 15396  1469  3190  2021  3194   	fcall	_I2C_WriteByte
 15397                           
 15398                           ;bme280_i2c.c: 172:     for(int i = 0; i < len; i++){
 15399  146C  0020               	movlb	0	; select bank0
 15400  146D  01B9               	clrf	WriteEnvSensor@i
 15401  146E  01BA               	clrf	WriteEnvSensor@i+1
 15402  146F                     l3934:	
 15403  146F  0833               	movf	WriteEnvSensor@len+1,w
 15404  1470  023A               	subwf	WriteEnvSensor@i+1,w
 15405  1471  1D03               	skipz
 15406  1472  2C75               	goto	u4075
 15407  1473  0832               	movf	WriteEnvSensor@len,w
 15408  1474  0239               	subwf	WriteEnvSensor@i,w
 15409  1475                     u4075:	
 15410  1475  1803               	btfsc	3,0
 15411  1476  2C87               	goto	l3936
 15412                           
 15413                           ;bme280_i2c.c: 173:         I2C_WriteByte(reg_data[i]);
 15414  1477  0839               	movf	WriteEnvSensor@i,w
 15415  1478  0731               	addwf	WriteEnvSensor@reg_data,w
 15416  1479  00B4               	movwf	??_WriteEnvSensor
 15417  147A  0834               	movf	??_WriteEnvSensor,w
 15418  147B  0086               	movwf	6
 15419  147C  0187               	clrf	7
 15420  147D  0801               	movf	1,w
 15421  147E  3190  2021  3194   	fcall	_I2C_WriteByte
 15422                           
 15423                           ;bme280_i2c.c: 174:     }
 15424  1481  3001               	movlw	1
 15425  1482  0020               	movlb	0	; select bank0
 15426  1483  07B9               	addwf	WriteEnvSensor@i,f
 15427  1484  3000               	movlw	0
 15428  1485  3DBA               	addwfc	WriteEnvSensor@i+1,f
 15429  1486  2C6F               	goto	l3934
 15430  1487                     l3936:	
 15431                           
 15432                           ;bme280_i2c.c: 176:     I2C_Stop();
 15433  1487  319E  26C7         	fcall	_I2C_Stop
 15434                           
 15435                           ;bme280_i2c.c: 178:     return rslt;
 15436  1489  0838               	movf	WriteEnvSensor@rslt,w
 15437  148A  0008               	return
 15438  148B                     __end_of_WriteEnvSensor:	
 15439                           
 15440                           	psect	text60
 15441  1021                     __ptext60:	
 15442 ;; *************** function _I2C_WriteByte *****************
 15443 ;; Defined at:
 15444 ;;		line 31 in file "bme280_i2c.c"
 15445 ;; Parameters:    Size  Location     Type
 15446 ;;  data            1    wreg     unsigned char 
 15447 ;; Auto vars:     Size  Location     Type
 15448 ;;  data            1   13[COMMON] unsigned char 
 15449 ;; Return value:  Size  Location     Type
 15450 ;;                  1    wreg      void 
 15451 ;; Registers used:
 15452 ;;		wreg, status,2, status,0, pclath, cstack
 15453 ;; Tracked objects:
 15454 ;;		On entry : 1F/0
 15455 ;;		On exit  : 1B/0
 15456 ;;		Unchanged: 0/0
 15457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15459 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15460 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15461 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15462 ;;Total ram usage:        5 bytes
 15463 ;; Hardware stack levels used:    1
 15464 ;; Hardware stack levels required when called:    7
 15465 ;; This function calls:
 15466 ;;		_DebugAlert
 15467 ;;		_I2C_UserAlert
 15468 ;; This function is called by:
 15469 ;;		_ReadEnvSensor
 15470 ;;		_WriteEnvSensor
 15471 ;; This function uses a non-reentrant model
 15472 ;;
 15473                           
 15474                           
 15475                           ;psect for function _I2C_WriteByte
 15476  1021                     _I2C_WriteByte:	
 15477                           
 15478                           ;incstack = 0
 15479                           ; Regs used in _I2C_WriteByte: [wreg+status,2+status,0+pclath+cstack]
 15480                           ;I2C_WriteByte@data stored from wreg
 15481  1021  00FD               	movwf	I2C_WriteByte@data
 15482                           
 15483                           ;bme280_i2c.c: 31: void I2C_WriteByte(uint8_t data);bme280_i2c.c: 32: {;bme280_i2c.c: 33
      +                          :     SSP1BUF = data;
 15484  1022  087D               	movf	I2C_WriteByte@data,w
 15485  1023  0024               	movlb	4	; select bank4
 15486  1024  0091               	movwf	17	;volatile
 15487                           
 15488                           ;bme280_i2c.c: 34:     __g_timeout_start = ticks; while (!(PIR1bits.SSP1IF != 0)) { if (
      +                          ticks - __g_timeout_start > 3000) { DebugAlert(200, 200, 3);; break; } }; PIR1bits.SSP1I
      +                          F = 0;;
 15489  1025  0021               	movlb	1	; select bank1
 15490  1026  086D               	movf	(_ticks+3)^(0+128),w
 15491  1027  0022               	movlb	2	; select bank2
 15492  1028  00E2               	movwf	(___g_timeout_start+3)^(0+256)
 15493  1029  0021               	movlb	1	; select bank1
 15494  102A  086C               	movf	(_ticks+2)^(0+128),w
 15495  102B  0022               	movlb	2	; select bank2
 15496  102C  00E1               	movwf	(___g_timeout_start+2)^(0+256)
 15497  102D  0021               	movlb	1	; select bank1
 15498  102E  086B               	movf	(_ticks+1)^(0+128),w
 15499  102F  0022               	movlb	2	; select bank2
 15500  1030  00E0               	movwf	(___g_timeout_start+1)^(0+256)
 15501  1031  0021               	movlb	1	; select bank1
 15502  1032  086A               	movf	_ticks^(0+128),w
 15503  1033  0022               	movlb	2	; select bank2
 15504  1034  00DF               	movwf	___g_timeout_start^(0+256)
 15505  1035                     l691:	
 15506  1035  0020               	movlb	0	; select bank0
 15507  1036  1990               	btfsc	16,3	;volatile
 15508  1037  286B               	goto	l694
 15509  1038  0022               	movlb	2	; select bank2
 15510  1039  085F               	movf	___g_timeout_start^(0+256),w
 15511  103A  0021               	movlb	1	; select bank1
 15512  103B  026A               	subwf	_ticks^(0+128),w
 15513  103C  0020               	movlb	0	; select bank0
 15514  103D  00AB               	movwf	??_I2C_WriteByte
 15515  103E  0022               	movlb	2	; select bank2
 15516  103F  0860               	movf	(___g_timeout_start+1)^(0+256),w
 15517  1040  0021               	movlb	1	; select bank1
 15518  1041  3B6B               	subwfb	(_ticks+1)^(0+128),w
 15519  1042  0020               	movlb	0	; select bank0
 15520  1043  00AC               	movwf	??_I2C_WriteByte+1
 15521  1044  0022               	movlb	2	; select bank2
 15522  1045  0861               	movf	(___g_timeout_start+2)^(0+256),w
 15523  1046  0021               	movlb	1	; select bank1
 15524  1047  3B6C               	subwfb	(_ticks+2)^(0+128),w
 15525  1048  0020               	movlb	0	; select bank0
 15526  1049  00AD               	movwf	??_I2C_WriteByte+2
 15527  104A  0022               	movlb	2	; select bank2
 15528  104B  0862               	movf	(___g_timeout_start+3)^(0+256),w
 15529  104C  0021               	movlb	1	; select bank1
 15530  104D  3B6D               	subwfb	(_ticks+3)^(0+128),w
 15531  104E  0020               	movlb	0	; select bank0
 15532  104F  00AE               	movwf	??_I2C_WriteByte+3
 15533  1050  082E               	movf	??_I2C_WriteByte+3,w
 15534  1051  1D03               	btfss	3,2
 15535  1052  285C               	goto	l3820
 15536  1053  082D               	movf	??_I2C_WriteByte+2,w
 15537  1054  1D03               	btfss	3,2
 15538  1055  285C               	goto	l3820
 15539  1056  30B9               	movlw	185
 15540  1057  022B               	subwf	??_I2C_WriteByte,w
 15541  1058  300B               	movlw	11
 15542  1059  3B2C               	subwfb	??_I2C_WriteByte+1,w
 15543  105A  1C03               	btfss	3,0
 15544  105B  2835               	goto	l691
 15545  105C                     l3820:	
 15546  105C  30C8               	movlw	200
 15547  105D  00A0               	movwf	DebugAlert@delay_high
 15548  105E  3000               	movlw	0
 15549  105F  00A1               	movwf	DebugAlert@delay_high+1
 15550  1060  30C8               	movlw	200
 15551  1061  00A2               	movwf	DebugAlert@delay_low
 15552  1062  3000               	movlw	0
 15553  1063  00A3               	movwf	DebugAlert@delay_low+1
 15554  1064  3003               	movlw	3
 15555  1065  00AB               	movwf	??_I2C_WriteByte
 15556  1066  082B               	movf	??_I2C_WriteByte,w
 15557  1067  00A4               	movwf	DebugAlert@num_flashes
 15558  1068  319B  2338  3190   	fcall	_DebugAlert
 15559  106B                     l694:	
 15560  106B  0020               	movlb	0	; select bank0
 15561  106C  1190               	bcf	16,3	;volatile
 15562                           
 15563                           ;bme280_i2c.c: 37:     if(SSP1CON2bits.ACKSTAT!=0){
 15564  106D  0024               	movlb	4	; select bank4
 15565  106E  1F16               	btfss	22,6	;volatile
 15566  106F  0008               	return
 15567                           
 15568                           ;bme280_i2c.c: 38:         I2C_UserAlert(I2C_ERROR_WRITE_NO_ACK);
 15569  1070  3001               	movlw	1
 15570  1071  3190  2002         	fcall	_I2C_UserAlert
 15571  1073  0008               	return
 15572  1074                     __end_of_I2C_WriteByte:	
 15573                           
 15574                           	psect	text61
 15575  1002                     __ptext61:	
 15576 ;; *************** function _I2C_UserAlert *****************
 15577 ;; Defined at:
 15578 ;;		line 67 in file "bme280_i2c.c"
 15579 ;; Parameters:    Size  Location     Type
 15580 ;;  status          1    wreg     enum E10053
 15581 ;; Auto vars:     Size  Location     Type
 15582 ;;  status          1    0[COMMON] enum E10053
 15583 ;; Return value:  Size  Location     Type
 15584 ;;                  1    wreg      void 
 15585 ;; Registers used:
 15586 ;;		wreg, status,2, status,0, pclath, cstack
 15587 ;; Tracked objects:
 15588 ;;		On entry : 1F/4
 15589 ;;		On exit  : 1F/0
 15590 ;;		Unchanged: 0/0
 15591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15595 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15596 ;;Total ram usage:        0 bytes
 15597 ;; Hardware stack levels used:    1
 15598 ;; Hardware stack levels required when called:    6
 15599 ;; This function calls:
 15600 ;;		_I2C_Stop
 15601 ;; This function is called by:
 15602 ;;		_I2C_WriteByte
 15603 ;; This function uses a non-reentrant model
 15604 ;;
 15605                           
 15606                           
 15607                           ;psect for function _I2C_UserAlert
 15608  1002                     _I2C_UserAlert:	
 15609                           
 15610                           ;bme280_i2c.c: 67: void I2C_UserAlert(I2C_ERROR status);bme280_i2c.c: 68: {;bme280_i2c.c
      +                          : 69:     I2C_Stop();
 15611                           
 15612                           ;incstack = 0
 15613                           ; Regs used in _I2C_UserAlert: [wreg+status,2+status,0+pclath+cstack]
 15614  1002  319E  26C7         	fcall	_I2C_Stop
 15615  1004  0008               	return
 15616  1005                     __end_of_I2C_UserAlert:	
 15617                           
 15618                           	psect	text62
 15619  1EC7                     __ptext62:	
 15620 ;; *************** function _I2C_Stop *****************
 15621 ;; Defined at:
 15622 ;;		line 61 in file "bme280_i2c.c"
 15623 ;; Parameters:    Size  Location     Type
 15624 ;;		None
 15625 ;; Auto vars:     Size  Location     Type
 15626 ;;		None
 15627 ;; Return value:  Size  Location     Type
 15628 ;;                  1    wreg      void 
 15629 ;; Registers used:
 15630 ;;		wreg, status,2, status,0, pclath, cstack
 15631 ;; Tracked objects:
 15632 ;;		On entry : 1B/0
 15633 ;;		On exit  : 1F/0
 15634 ;;		Unchanged: 0/0
 15635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15638 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15639 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15640 ;;Total ram usage:        4 bytes
 15641 ;; Hardware stack levels used:    1
 15642 ;; Hardware stack levels required when called:    5
 15643 ;; This function calls:
 15644 ;;		_DebugAlert
 15645 ;; This function is called by:
 15646 ;;		_I2C_UserAlert
 15647 ;;		_ReadEnvSensor
 15648 ;;		_WriteEnvSensor
 15649 ;; This function uses a non-reentrant model
 15650 ;;
 15651                           
 15652                           
 15653                           ;psect for function _I2C_Stop
 15654  1EC7                     _I2C_Stop:	
 15655                           
 15656                           ;bme280_i2c.c: 63:     SSP1CON2bits.PEN = 1;
 15657                           
 15658                           ;incstack = 0
 15659                           ; Regs used in _I2C_Stop: [wreg+status,2+status,0+pclath+cstack]
 15660  1EC7  0024               	movlb	4	; select bank4
 15661  1EC8  1516               	bsf	22,2	;volatile
 15662                           
 15663                           ;bme280_i2c.c: 64:     __g_timeout_start = ticks; while (!(PIR1bits.SSP1IF != 0)) { if (
      +                          ticks - __g_timeout_start > 3000) { DebugAlert(200, 200, 3);; break; } }; PIR1bits.SSP1I
      +                          F = 0;;
 15664  1EC9  0021               	movlb	1	; select bank1
 15665  1ECA  086D               	movf	(_ticks+3)^(0+128),w
 15666  1ECB  0022               	movlb	2	; select bank2
 15667  1ECC  00E2               	movwf	(___g_timeout_start+3)^(0+256)
 15668  1ECD  0021               	movlb	1	; select bank1
 15669  1ECE  086C               	movf	(_ticks+2)^(0+128),w
 15670  1ECF  0022               	movlb	2	; select bank2
 15671  1ED0  00E1               	movwf	(___g_timeout_start+2)^(0+256)
 15672  1ED1  0021               	movlb	1	; select bank1
 15673  1ED2  086B               	movf	(_ticks+1)^(0+128),w
 15674  1ED3  0022               	movlb	2	; select bank2
 15675  1ED4  00E0               	movwf	(___g_timeout_start+1)^(0+256)
 15676  1ED5  0021               	movlb	1	; select bank1
 15677  1ED6  086A               	movf	_ticks^(0+128),w
 15678  1ED7  0022               	movlb	2	; select bank2
 15679  1ED8  00DF               	movwf	___g_timeout_start^(0+256)
 15680  1ED9                     l710:	
 15681  1ED9  0020               	movlb	0	; select bank0
 15682  1EDA  1990               	btfsc	16,3	;volatile
 15683  1EDB  2F0E               	goto	l713
 15684  1EDC  0022               	movlb	2	; select bank2
 15685  1EDD  085F               	movf	___g_timeout_start^(0+256),w
 15686  1EDE  0021               	movlb	1	; select bank1
 15687  1EDF  026A               	subwf	_ticks^(0+128),w
 15688  1EE0  0020               	movlb	0	; select bank0
 15689  1EE1  00A7               	movwf	??_I2C_Stop
 15690  1EE2  0022               	movlb	2	; select bank2
 15691  1EE3  0860               	movf	(___g_timeout_start+1)^(0+256),w
 15692  1EE4  0021               	movlb	1	; select bank1
 15693  1EE5  3B6B               	subwfb	(_ticks+1)^(0+128),w
 15694  1EE6  0020               	movlb	0	; select bank0
 15695  1EE7  00A8               	movwf	??_I2C_Stop+1
 15696  1EE8  0022               	movlb	2	; select bank2
 15697  1EE9  0861               	movf	(___g_timeout_start+2)^(0+256),w
 15698  1EEA  0021               	movlb	1	; select bank1
 15699  1EEB  3B6C               	subwfb	(_ticks+2)^(0+128),w
 15700  1EEC  0020               	movlb	0	; select bank0
 15701  1EED  00A9               	movwf	??_I2C_Stop+2
 15702  1EEE  0022               	movlb	2	; select bank2
 15703  1EEF  0862               	movf	(___g_timeout_start+3)^(0+256),w
 15704  1EF0  0021               	movlb	1	; select bank1
 15705  1EF1  3B6D               	subwfb	(_ticks+3)^(0+128),w
 15706  1EF2  0020               	movlb	0	; select bank0
 15707  1EF3  00AA               	movwf	??_I2C_Stop+3
 15708  1EF4  082A               	movf	??_I2C_Stop+3,w
 15709  1EF5  1D03               	btfss	3,2
 15710  1EF6  2F00               	goto	l3812
 15711  1EF7  0829               	movf	??_I2C_Stop+2,w
 15712  1EF8  1D03               	btfss	3,2
 15713  1EF9  2F00               	goto	l3812
 15714  1EFA  30B9               	movlw	185
 15715  1EFB  0227               	subwf	??_I2C_Stop,w
 15716  1EFC  300B               	movlw	11
 15717  1EFD  3B28               	subwfb	??_I2C_Stop+1,w
 15718  1EFE  1C03               	btfss	3,0
 15719  1EFF  2ED9               	goto	l710
 15720  1F00                     l3812:	
 15721  1F00  30C8               	movlw	200
 15722  1F01  00A0               	movwf	DebugAlert@delay_high
 15723  1F02  3000               	movlw	0
 15724  1F03  00A1               	movwf	DebugAlert@delay_high+1
 15725  1F04  30C8               	movlw	200
 15726  1F05  00A2               	movwf	DebugAlert@delay_low
 15727  1F06  3000               	movlw	0
 15728  1F07  00A3               	movwf	DebugAlert@delay_low+1
 15729  1F08  3003               	movlw	3
 15730  1F09  00A7               	movwf	??_I2C_Stop
 15731  1F0A  0827               	movf	??_I2C_Stop,w
 15732  1F0B  00A4               	movwf	DebugAlert@num_flashes
 15733  1F0C  319B  2338         	fcall	_DebugAlert
 15734  1F0E                     l713:	
 15735  1F0E  0020               	movlb	0	; select bank0
 15736  1F0F  1190               	bcf	16,3	;volatile
 15737  1F10  0008               	return
 15738  1F11                     __end_of_I2C_Stop:	
 15739                           
 15740                           	psect	text63
 15741  1B38                     __ptext63:	
 15742 ;; *************** function _DebugAlert *****************
 15743 ;; Defined at:
 15744 ;;		line 4 in file "debug.c"
 15745 ;; Parameters:    Size  Location     Type
 15746 ;;  delay_high      2    0[BANK0 ] unsigned int 
 15747 ;;  delay_low       2    2[BANK0 ] unsigned int 
 15748 ;;  num_flashes     1    4[BANK0 ] unsigned char 
 15749 ;; Auto vars:     Size  Location     Type
 15750 ;;  i               2    5[BANK0 ] int 
 15751 ;; Return value:  Size  Location     Type
 15752 ;;                  1    wreg      void 
 15753 ;; Registers used:
 15754 ;;		wreg, status,2, status,0, pclath, cstack
 15755 ;; Tracked objects:
 15756 ;;		On entry : 1F/0
 15757 ;;		On exit  : 0/0
 15758 ;;		Unchanged: 0/0
 15759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15760 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15761 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15762 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15763 ;;      Totals:         1       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15764 ;;Total ram usage:        8 bytes
 15765 ;; Hardware stack levels used:    1
 15766 ;; Hardware stack levels required when called:    4
 15767 ;; This function calls:
 15768 ;;		_Sleep
 15769 ;; This function is called by:
 15770 ;;		_I2C_WriteByte
 15771 ;;		_I2C_ReadByte
 15772 ;;		_I2C_Stop
 15773 ;;		_BME280_Init
 15774 ;;		_ReadEnvSensor
 15775 ;;		_WriteEnvSensor
 15776 ;; This function uses a non-reentrant model
 15777 ;;
 15778                           
 15779                           
 15780                           ;psect for function _DebugAlert
 15781  1B38                     _DebugAlert:	
 15782                           
 15783                           ;debug.c: 4: void DebugAlert(unsigned int delay_high, unsigned int delay_low, uint8_t nu
      +                          m_flashes);debug.c: 5: {;debug.c: 7:     for (int i = 0; i < num_flashes; i++)
 15784                           
 15785                           ;incstack = 0
 15786                           ; Regs used in _DebugAlert: [wreg+status,2+status,0+pclath+cstack]
 15787  1B38  01A5               	clrf	DebugAlert@i
 15788  1B39  01A6               	clrf	DebugAlert@i+1
 15789  1B3A                     l3804:	
 15790  1B3A  0826               	movf	DebugAlert@i+1,w
 15791  1B3B  3A80               	xorlw	128
 15792  1B3C  00FC               	movwf	??_DebugAlert
 15793  1B3D  3080               	movlw	128
 15794  1B3E  027C               	subwf	??_DebugAlert,w
 15795  1B3F  1D03               	skipz
 15796  1B40  2B43               	goto	u3845
 15797  1B41  0824               	movf	DebugAlert@num_flashes,w
 15798  1B42  0225               	subwf	DebugAlert@i,w
 15799  1B43                     u3845:	
 15800  1B43  1803               	btfsc	3,0
 15801  1B44  0008               	return
 15802                           
 15803                           ;debug.c: 8:     {;debug.c: 9:         do { LATCbits.LATC5 = 1; } while(0);
 15804  1B45  0022               	movlb	2	; select bank2
 15805  1B46  168E               	bsf	14,5	;volatile
 15806                           
 15807                           ;debug.c: 10:         Sleep(delay_high);
 15808  1B47  0020               	movlb	0	; select bank0
 15809  1B48  0820               	movf	DebugAlert@delay_high,w
 15810  1B49  00F0               	movwf	Sleep@ms
 15811  1B4A  0821               	movf	DebugAlert@delay_high+1,w
 15812  1B4B  00F1               	movwf	Sleep@ms+1
 15813  1B4C  01F2               	clrf	Sleep@ms+2
 15814  1B4D  01F3               	clrf	Sleep@ms+3
 15815  1B4E  319B  230D  319B   	fcall	_Sleep
 15816  1B51  0022               	movlb	2	; select bank2
 15817  1B52  128E               	bcf	14,5	;volatile
 15818                           
 15819                           ;debug.c: 12:         Sleep(delay_low);
 15820  1B53  0020               	movlb	0	; select bank0
 15821  1B54  0822               	movf	DebugAlert@delay_low,w
 15822  1B55  00F0               	movwf	Sleep@ms
 15823  1B56  0823               	movf	DebugAlert@delay_low+1,w
 15824  1B57  00F1               	movwf	Sleep@ms+1
 15825  1B58  01F2               	clrf	Sleep@ms+2
 15826  1B59  01F3               	clrf	Sleep@ms+3
 15827  1B5A  319B  230D  319B   	fcall	_Sleep
 15828                           
 15829                           ;debug.c: 13:     }
 15830  1B5D  3001               	movlw	1
 15831  1B5E  0020               	movlb	0	; select bank0
 15832  1B5F  07A5               	addwf	DebugAlert@i,f
 15833  1B60  3000               	movlw	0
 15834  1B61  3DA6               	addwfc	DebugAlert@i+1,f
 15835  1B62  2B3A               	goto	l3804
 15836  1B63                     __end_of_DebugAlert:	
 15837                           
 15838                           	psect	text64
 15839  1B0D                     __ptext64:	
 15840 ;; *************** function _Sleep *****************
 15841 ;; Defined at:
 15842 ;;		line 17 in file "timing.c"
 15843 ;; Parameters:    Size  Location     Type
 15844 ;;  ms              4    0[COMMON] unsigned long 
 15845 ;; Auto vars:     Size  Location     Type
 15846 ;;  start           4    8[COMMON] unsigned long 
 15847 ;; Return value:  Size  Location     Type
 15848 ;;                  1    wreg      void 
 15849 ;; Registers used:
 15850 ;;		wreg
 15851 ;; Tracked objects:
 15852 ;;		On entry : 1F/0
 15853 ;;		On exit  : 1F/1
 15854 ;;		Unchanged: 0/0
 15855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15856 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15857 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15858 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15859 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15860 ;;Total ram usage:       12 bytes
 15861 ;; Hardware stack levels used:    1
 15862 ;; Hardware stack levels required when called:    3
 15863 ;; This function calls:
 15864 ;;		Nothing
 15865 ;; This function is called by:
 15866 ;;		_BME280_Init
 15867 ;;		_DebugAlert
 15868 ;;		_bme280_soft_reset
 15869 ;;		_bme280_init
 15870 ;; This function uses a non-reentrant model
 15871 ;;
 15872                           
 15873                           
 15874                           ;psect for function _Sleep
 15875  1B0D                     _Sleep:	
 15876                           
 15877                           ;timing.c: 17: void Sleep(uint32_t ms);timing.c: 18: {;timing.c: 19:     unsigned long s
      +                          tart = ticks;
 15878                           
 15879                           ;incstack = 0
 15880                           ; Regs used in _Sleep: [wreg]
 15881  1B0D  0021               	movlb	1	; select bank1
 15882  1B0E  086D               	movf	(_ticks+3)^(0+128),w
 15883  1B0F  00FB               	movwf	Sleep@start+3
 15884  1B10  086C               	movf	(_ticks+2)^(0+128),w
 15885  1B11  00FA               	movwf	Sleep@start+2
 15886  1B12  086B               	movf	(_ticks+1)^(0+128),w
 15887  1B13  00F9               	movwf	Sleep@start+1
 15888  1B14  086A               	movf	_ticks^(0+128),w
 15889  1B15  00F8               	movwf	Sleep@start
 15890  1B16                     l767:	
 15891                           ;timing.c: 23:     }
 15892                           
 15893                           ;timing.c: 20:     while (ticks - start < ms)
 15894                           
 15895                           
 15896                           ;timing.c: 20:     while (ticks - start < ms)
 15897  1B16  0878               	movf	Sleep@start,w
 15898  1B17  0021               	movlb	1	; select bank1
 15899  1B18  026A               	subwf	_ticks^(0+128),w
 15900  1B19  00F4               	movwf	??_Sleep
 15901  1B1A  0879               	movf	Sleep@start+1,w
 15902  1B1B  3B6B               	subwfb	(_ticks+1)^(0+128),w
 15903  1B1C  00F5               	movwf	??_Sleep+1
 15904  1B1D  087A               	movf	Sleep@start+2,w
 15905  1B1E  3B6C               	subwfb	(_ticks+2)^(0+128),w
 15906  1B1F  00F6               	movwf	??_Sleep+2
 15907  1B20  087B               	movf	Sleep@start+3,w
 15908  1B21  3B6D               	subwfb	(_ticks+3)^(0+128),w
 15909  1B22  00F7               	movwf	??_Sleep+3
 15910  1B23  0873               	movf	Sleep@ms+3,w
 15911  1B24  0277               	subwf	??_Sleep+3,w
 15912  1B25  1D03               	skipz
 15913  1B26  2B31               	goto	u3835
 15914  1B27  0872               	movf	Sleep@ms+2,w
 15915  1B28  0276               	subwf	??_Sleep+2,w
 15916  1B29  1D03               	skipz
 15917  1B2A  2B31               	goto	u3835
 15918  1B2B  0871               	movf	Sleep@ms+1,w
 15919  1B2C  0275               	subwf	??_Sleep+1,w
 15920  1B2D  1D03               	skipz
 15921  1B2E  2B31               	goto	u3835
 15922  1B2F  0870               	movf	Sleep@ms,w
 15923  1B30  0274               	subwf	??_Sleep,w
 15924  1B31                     u3835:	
 15925  1B31  1803               	btfsc	3,0
 15926  1B32  0008               	return
 15927                           
 15928                           ;timing.c: 21:     {;timing.c: 22:         _delay((unsigned long)((1)*(4000000/4000.0)))
      +                          ;
 15929  1B33  30C8               	movlw	200
 15930  1B34                     u5087:	
 15931  1B34  3200               	nop2
 15932  1B35  0B89               	decfsz	9,f
 15933  1B36  2B34               	goto	u5087
 15934  1B37  2B16               	goto	l767
 15935  1B38                     __end_of_Sleep:	
 15936                           
 15937                           	psect	text65
 15938  1978                     __ptext65:	
 15939 ;; *************** function _I2C_Init *****************
 15940 ;; Defined at:
 15941 ;;		line 16 in file "bme280_i2c.c"
 15942 ;; Parameters:    Size  Location     Type
 15943 ;;		None
 15944 ;; Auto vars:     Size  Location     Type
 15945 ;;		None
 15946 ;; Return value:  Size  Location     Type
 15947 ;;                  1    wreg      void 
 15948 ;; Registers used:
 15949 ;;		wreg, status,2
 15950 ;; Tracked objects:
 15951 ;;		On entry : 1F/2
 15952 ;;		On exit  : 1F/4
 15953 ;;		Unchanged: 0/0
 15954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15958 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15959 ;;Total ram usage:        0 bytes
 15960 ;; Hardware stack levels used:    1
 15961 ;; Hardware stack levels required when called:    3
 15962 ;; This function calls:
 15963 ;;		Nothing
 15964 ;; This function is called by:
 15965 ;;		_BME280_Init
 15966 ;; This function uses a non-reentrant model
 15967 ;;
 15968                           
 15969                           
 15970                           ;psect for function _I2C_Init
 15971  1978                     _I2C_Init:	
 15972                           
 15973                           ;bme280_i2c.c: 18:     SSPCLKPPS = 0x0E;
 15974                           
 15975                           ;incstack = 0
 15976                           ; Regs used in _I2C_Init: [wreg+status,2]
 15977  1978  300E               	movlw	14
 15978  1979  003C               	movlb	28	; select bank28
 15979  197A  00A0               	movwf	32	;volatile
 15980                           
 15981                           ;bme280_i2c.c: 19:     SSPDATPPS = 0x0C;
 15982  197B  300C               	movlw	12
 15983  197C  00A1               	movwf	33	;volatile
 15984                           
 15985                           ;bme280_i2c.c: 20:     RB6PPS = 0x10;
 15986  197D  3010               	movlw	16
 15987  197E  003D               	movlb	29	; select bank29
 15988  197F  009E               	movwf	30	;volatile
 15989                           
 15990                           ;bme280_i2c.c: 21:     RB4PPS = 0x11;
 15991  1980  3011               	movlw	17
 15992  1981  009C               	movwf	28	;volatile
 15993                           
 15994                           ;bme280_i2c.c: 23:     SSP1STAT = 0x80;
 15995  1982  3080               	movlw	128
 15996  1983  0024               	movlb	4	; select bank4
 15997  1984  0094               	movwf	20	;volatile
 15998                           
 15999                           ;bme280_i2c.c: 24:     SSP1CON1 = 0x28;
 16000  1985  3028               	movlw	40
 16001  1986  0095               	movwf	21	;volatile
 16002                           
 16003                           ;bme280_i2c.c: 25:     SSP1CON2 = 0x00;
 16004  1987  0196               	clrf	22	;volatile
 16005                           
 16006                           ;bme280_i2c.c: 26:     SSP1ADD = 0x4f;
 16007  1988  304F               	movlw	79
 16008  1989  0092               	movwf	18	;volatile
 16009                           
 16010                           ;bme280_i2c.c: 28:     SSP1CON1bits.SSPEN = 1;
 16011  198A  1695               	bsf	21,5	;volatile
 16012  198B  0008               	return
 16013  198C                     __end_of_I2C_Init:	
 16014                           
 16015                           	psect	intentry
 16016  0004                     __pintentry:	
 16017 ;; *************** function _INTERRUPT_InterruptManager *****************
 16018 ;; Defined at:
 16019 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 16020 ;; Parameters:    Size  Location     Type
 16021 ;;		None
 16022 ;; Auto vars:     Size  Location     Type
 16023 ;;		None
 16024 ;; Return value:  Size  Location     Type
 16025 ;;                  1    wreg      void 
 16026 ;; Registers used:
 16027 ;;		wreg, status,2, status,0, pclath, cstack
 16028 ;; Tracked objects:
 16029 ;;		On entry : 0/0
 16030 ;;		On exit  : 0/0
 16031 ;;		Unchanged: 0/0
 16032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16036 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16037 ;;Total ram usage:        0 bytes
 16038 ;; Hardware stack levels used:    1
 16039 ;; Hardware stack levels required when called:    2
 16040 ;; This function calls:
 16041 ;;		_TMR0_ISR
 16042 ;; This function is called by:
 16043 ;;		Interrupt level 1
 16044 ;; This function uses a non-reentrant model
 16045 ;;
 16046                           
 16047  0004                     _INTERRUPT_InterruptManager:	
 16048                           
 16049                           ;incstack = 0
 16050  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 16051                           
 16052                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
 16053  0005  3180               	pagesel	$
 16054                           
 16055                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
 16056  0006  1A8B               	btfsc	11,5	;volatile
 16057  0007  1D0B               	btfss	11,2	;volatile
 16058  0008  280B               	goto	i1l362
 16059                           
 16060                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
 16061  0009  3199  2168         	fcall	_TMR0_ISR
 16062  000B                     i1l362:	
 16063                           ;mcc_generated_files/interrupt_manager.c: 58:     }
 16064                           
 16065  000B  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 16066  000C  0009               	retfie
 16067  000D                     __end_of_INTERRUPT_InterruptManager:	
 16068                           
 16069                           	psect	text67
 16070  1968                     __ptext67:	
 16071 ;; *************** function _TMR0_ISR *****************
 16072 ;; Defined at:
 16073 ;;		line 108 in file "mcc_generated_files/tmr0.c"
 16074 ;; Parameters:    Size  Location     Type
 16075 ;;		None
 16076 ;; Auto vars:     Size  Location     Type
 16077 ;;		None
 16078 ;; Return value:  Size  Location     Type
 16079 ;;                  1    wreg      void 
 16080 ;; Registers used:
 16081 ;;		wreg, status,2, status,0, pclath, cstack
 16082 ;; Tracked objects:
 16083 ;;		On entry : 0/0
 16084 ;;		On exit  : 0/0
 16085 ;;		Unchanged: 0/0
 16086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16090 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16091 ;;Total ram usage:        0 bytes
 16092 ;; Hardware stack levels used:    1
 16093 ;; Hardware stack levels required when called:    1
 16094 ;; This function calls:
 16095 ;;		Absolute function
 16096 ;;		_TMR0_DefaultInterruptHandler
 16097 ;;		_TimerISR
 16098 ;; This function is called by:
 16099 ;;		_INTERRUPT_InterruptManager
 16100 ;; This function uses a non-reentrant model
 16101 ;;
 16102                           
 16103                           
 16104                           ;psect for function _TMR0_ISR
 16105  1968                     _TMR0_ISR:	
 16106                           
 16107                           ;mcc_generated_files/tmr0.c: 112:     INTCONbits.TMR0IF = 0;
 16108                           
 16109                           ;incstack = 0
 16110                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
 16111  1968  110B               	bcf	11,2	;volatile
 16112                           
 16113                           ;mcc_generated_files/tmr0.c: 114:     TMR0 = timer0ReloadVal;
 16114  1969  0021               	movlb	1	; select bank1
 16115  196A  086F               	movf	_timer0ReloadVal^(0+128),w	;volatile
 16116  196B  0020               	movlb	0	; select bank0
 16117  196C  0095               	movwf	21	;volatile
 16118                           
 16119                           ;mcc_generated_files/tmr0.c: 116:     if(TMR0_InterruptHandler)
 16120  196D  0022               	movlb	2	; select bank2
 16121  196E  086B               	movf	_TMR0_InterruptHandler^(0+256),w
 16122  196F  046C               	iorwf	(_TMR0_InterruptHandler+1)^(0+256),w
 16123  1970  1903               	btfsc	3,2
 16124  1971  0008               	return
 16125                           
 16126                           ;mcc_generated_files/tmr0.c: 117:     {;mcc_generated_files/tmr0.c: 118:         TMR0_In
      +                          terruptHandler();
 16127  1972  086C               	movf	(_TMR0_InterruptHandler+1)^(0+256),w
 16128  1973  008A               	movwf	10
 16129  1974  086B               	movf	_TMR0_InterruptHandler^(0+256),w
 16130  1975  000A               	callw
 16131  1976  3199               	pagesel	$
 16132  1977  0008               	return
 16133  1978                     __end_of_TMR0_ISR:	
 16134                           
 16135                           	psect	text68
 16136  07FF                     __ptext68:	
 16137 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 16138 ;; Defined at:
 16139 ;;		line 129 in file "mcc_generated_files/tmr0.c"
 16140 ;; Parameters:    Size  Location     Type
 16141 ;;		None
 16142 ;; Auto vars:     Size  Location     Type
 16143 ;;		None
 16144 ;; Return value:  Size  Location     Type
 16145 ;;                  1    wreg      void 
 16146 ;; Registers used:
 16147 ;;		None
 16148 ;; Tracked objects:
 16149 ;;		On entry : 1F/2
 16150 ;;		On exit  : 1F/2
 16151 ;;		Unchanged: 1F/0
 16152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16156 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16157 ;;Total ram usage:        0 bytes
 16158 ;; Hardware stack levels used:    1
 16159 ;; This function calls:
 16160 ;;		Nothing
 16161 ;; This function is called by:
 16162 ;;		_TMR0_Initialize
 16163 ;;		_TMR0_ISR
 16164 ;; This function uses a non-reentrant model
 16165 ;;
 16166                           
 16167                           
 16168                           ;psect for function _TMR0_DefaultInterruptHandler
 16169  07FF                     _TMR0_DefaultInterruptHandler:	
 16170                           
 16171                           ;incstack = 0
 16172                           ; Regs used in _TMR0_DefaultInterruptHandler: []
 16173  07FF  0008               	return
 16174  0800                     __end_of_TMR0_DefaultInterruptHandler:	
 16175                           
 16176                           	psect	text69
 16177  193C                     __ptext69:	
 16178 ;; *************** function _TimerISR *****************
 16179 ;; Defined at:
 16180 ;;		line 6 in file "timing.c"
 16181 ;; Parameters:    Size  Location     Type
 16182 ;;		None
 16183 ;; Auto vars:     Size  Location     Type
 16184 ;;		None
 16185 ;; Return value:  Size  Location     Type
 16186 ;;                  1    wreg      void 
 16187 ;; Registers used:
 16188 ;;		wreg
 16189 ;; Tracked objects:
 16190 ;;		On entry : 1F/2
 16191 ;;		On exit  : 1F/1
 16192 ;;		Unchanged: 0/0
 16193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16194 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16195 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16197 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16198 ;;Total ram usage:        0 bytes
 16199 ;; Hardware stack levels used:    1
 16200 ;; This function calls:
 16201 ;;		Nothing
 16202 ;; This function is called by:
 16203 ;;		_InitTiming
 16204 ;;		_TMR0_ISR
 16205 ;; This function uses a non-reentrant model
 16206 ;;
 16207                           
 16208                           
 16209                           ;psect for function _TimerISR
 16210  193C                     _TimerISR:	
 16211                           
 16212                           ;timing.c: 8:     ticks++;
 16213                           
 16214                           ;incstack = 0
 16215                           ; Regs used in _TimerISR: [wreg]
 16216  193C  3001               	movlw	1
 16217  193D  0021               	movlb	1	; select bank1
 16218  193E  07EA               	addwf	_ticks^(0+128),f
 16219  193F  3000               	movlw	0
 16220  1940  3DEB               	addwfc	(_ticks+1)^(0+128),f
 16221  1941  3000               	movlw	0
 16222  1942  3DEC               	addwfc	(_ticks+2)^(0+128),f
 16223  1943  3000               	movlw	0
 16224  1944  3DED               	addwfc	(_ticks+3)^(0+128),f
 16225  1945  0008               	return
 16226  1946                     __end_of_TimerISR:	
 16227  007E                     btemp	set	126	;btemp
 16228  007E                     int$flags	set	126
 16229  007E                     wtemp0	set	126
 16230                           
 16231                           	psect	text9_split_1
 16232  083A                     L8:	
 16233  083A  0021               	movlb	1	; select bank1
 16234  083B  00C1               	movwf	_compensate_pressure$2352^(0+128)
 16235  083C  0020               	movlb	0	; select bank0
 16236  083D  0821               	movf	?___omul+1,w
 16237  083E  0021               	movlb	1	; select bank1
 16238  083F  00C2               	movwf	(_compensate_pressure$2352+1)^(0+128)
 16239  0840  0020               	movlb	0	; select bank0
 16240  0841  0822               	movf	?___omul+2,w
 16241  0842  0021               	movlb	1	; select bank1
 16242  0843  00C3               	movwf	(_compensate_pressure$2352+2)^(0+128)
 16243  0844  0020               	movlb	0	; select bank0
 16244  0845  0823               	movf	?___omul+3,w
 16245  0846  0021               	movlb	1	; select bank1
 16246  0847  00C4               	movwf	(_compensate_pressure$2352+3)^(0+128)
 16247  0848  0020               	movlb	0	; select bank0
 16248  0849  0824               	movf	?___omul+4,w
 16249  084A  0021               	movlb	1	; select bank1
 16250  084B  00C5               	movwf	(_compensate_pressure$2352+4)^(0+128)
 16251  084C  0020               	movlb	0	; select bank0
 16252  084D  0825               	movf	?___omul+5,w
 16253  084E  0021               	movlb	1	; select bank1
 16254  084F  00C6               	movwf	(_compensate_pressure$2352+5)^(0+128)
 16255  0850  0020               	movlb	0	; select bank0
 16256  0851  0826               	movf	?___omul+6,w
 16257  0852  0021               	movlb	1	; select bank1
 16258  0853  00C7               	movwf	(_compensate_pressure$2352+6)^(0+128)
 16259  0854  0020               	movlb	0	; select bank0
 16260  0855  0827               	movf	?___omul+7,w
 16261  0856  0021               	movlb	1	; select bank1
 16262  0857  00C8               	movwf	(_compensate_pressure$2352+7)^(0+128)
 16263                           
 16264                           ;BME280_driver/bme280.c: 1171:     var2 = var1 * var1 * (int64_t)calib_data->dig_P6;
 16265  0858  0841               	movf	_compensate_pressure$2352^(0+128),w
 16266  0859  0020               	movlb	0	; select bank0
 16267  085A  00A0               	movwf	___omul@multiplier
 16268  085B  0021               	movlb	1	; select bank1
 16269  085C  0842               	movf	(_compensate_pressure$2352+1)^(0+128),w
 16270  085D  0020               	movlb	0	; select bank0
 16271  085E  00A1               	movwf	___omul@multiplier+1
 16272  085F  0021               	movlb	1	; select bank1
 16273  0860  0843               	movf	(_compensate_pressure$2352+2)^(0+128),w
 16274  0861  0020               	movlb	0	; select bank0
 16275  0862  00A2               	movwf	___omul@multiplier+2
 16276  0863  0021               	movlb	1	; select bank1
 16277  0864  0844               	movf	(_compensate_pressure$2352+3)^(0+128),w
 16278  0865  0020               	movlb	0	; select bank0
 16279  0866  00A3               	movwf	___omul@multiplier+3
 16280  0867  0021               	movlb	1	; select bank1
 16281  0868  0845               	movf	(_compensate_pressure$2352+4)^(0+128),w
 16282  0869  0020               	movlb	0	; select bank0
 16283  086A  00A4               	movwf	___omul@multiplier+4
 16284  086B  0021               	movlb	1	; select bank1
 16285  086C  0846               	movf	(_compensate_pressure$2352+5)^(0+128),w
 16286  086D  0020               	movlb	0	; select bank0
 16287  086E  00A5               	movwf	___omul@multiplier+5
 16288  086F  0021               	movlb	1	; select bank1
 16289  0870  0847               	movf	(_compensate_pressure$2352+6)^(0+128),w
 16290  0871  0020               	movlb	0	; select bank0
 16291  0872  00A6               	movwf	___omul@multiplier+6
 16292  0873  0021               	movlb	1	; select bank1
 16293  0874  0848               	movf	(_compensate_pressure$2352+7)^(0+128),w
 16294  0875  0020               	movlb	0	; select bank0
 16295  0876  00A7               	movwf	___omul@multiplier+7
 16296  0877  0021               	movlb	1	; select bank1
 16297  0878  085D               	movf	compensate_pressure@var1^(0+128),w
 16298  0879  0020               	movlb	0	; select bank0
 16299  087A  00A8               	movwf	___omul@multiplicand
 16300  087B  0021               	movlb	1	; select bank1
 16301  087C  085E               	movf	(compensate_pressure@var1+1)^(0+128),w
 16302  087D  0020               	movlb	0	; select bank0
 16303  087E  00A9               	movwf	___omul@multiplicand+1
 16304  087F  0021               	movlb	1	; select bank1
 16305  0880  085F               	movf	(compensate_pressure@var1+2)^(0+128),w
 16306  0881  0020               	movlb	0	; select bank0
 16307  0882  00AA               	movwf	___omul@multiplicand+2
 16308  0883  0021               	movlb	1	; select bank1
 16309  0884  0860               	movf	(compensate_pressure@var1+3)^(0+128),w
 16310  0885  0020               	movlb	0	; select bank0
 16311  0886  00AB               	movwf	___omul@multiplicand+3
 16312  0887  0021               	movlb	1	; select bank1
 16313  0888  0861               	movf	(compensate_pressure@var1+4)^(0+128),w
 16314  0889  0020               	movlb	0	; select bank0
 16315  088A  00AC               	movwf	___omul@multiplicand+4
 16316  088B  0021               	movlb	1	; select bank1
 16317  088C  0862               	movf	(compensate_pressure@var1+5)^(0+128),w
 16318  088D  0020               	movlb	0	; select bank0
 16319  088E  00AD               	movwf	___omul@multiplicand+5
 16320  088F  0021               	movlb	1	; select bank1
 16321  0890  0863               	movf	(compensate_pressure@var1+6)^(0+128),w
 16322  0891  0020               	movlb	0	; select bank0
 16323  0892  00AE               	movwf	___omul@multiplicand+6
 16324  0893  0021               	movlb	1	; select bank1
 16325  0894  0864               	movf	(compensate_pressure@var1+7)^(0+128),w
 16326  0895  0020               	movlb	0	; select bank0
 16327  0896  00AF               	movwf	___omul@multiplicand+7
 16328  0897  319E  2638  3188   	fcall	___omul
 16329  089A  0820               	movf	?___omul,w
 16330  089B  0021               	movlb	1	; select bank1
 16331  089C  00CD               	movwf	compensate_pressure@var2^(0+128)
 16332  089D  0020               	movlb	0	; select bank0
 16333  089E  0821               	movf	?___omul+1,w
 16334  089F  0021               	movlb	1	; select bank1
 16335  08A0  00CE               	movwf	(compensate_pressure@var2+1)^(0+128)
 16336  08A1  0020               	movlb	0	; select bank0
 16337  08A2  0822               	movf	?___omul+2,w
 16338  08A3  0021               	movlb	1	; select bank1
 16339  08A4  00CF               	movwf	(compensate_pressure@var2+2)^(0+128)
 16340  08A5  0020               	movlb	0	; select bank0
 16341  08A6  0823               	movf	?___omul+3,w
 16342  08A7  0021               	movlb	1	; select bank1
 16343  08A8  00D0               	movwf	(compensate_pressure@var2+3)^(0+128)
 16344  08A9  0020               	movlb	0	; select bank0
 16345  08AA  0824               	movf	?___omul+4,w
 16346  08AB  0021               	movlb	1	; select bank1
 16347  08AC  00D1               	movwf	(compensate_pressure@var2+4)^(0+128)
 16348  08AD  0020               	movlb	0	; select bank0
 16349  08AE  0825               	movf	?___omul+5,w
 16350  08AF  0021               	movlb	1	; select bank1
 16351  08B0  00D2               	movwf	(compensate_pressure@var2+5)^(0+128)
 16352  08B1  0020               	movlb	0	; select bank0
 16353  08B2  0826               	movf	?___omul+6,w
 16354  08B3  0021               	movlb	1	; select bank1
 16355  08B4  00D3               	movwf	(compensate_pressure@var2+6)^(0+128)
 16356  08B5  0020               	movlb	0	; select bank0
 16357  08B6  0827               	movf	?___omul+7,w
 16358  08B7  0021               	movlb	1	; select bank1
 16359  08B8  00D4               	movwf	(compensate_pressure@var2+7)^(0+128)
 16360                           
 16361                           ;BME280_driver/bme280.c: 1172:     var2 = var2 + ((var1 * (int64_t)calib_data->dig_P5) *
      +                           131072);
 16362  08B9  30CD               	movlw	low compensate_pressure@var2
 16363  08BA  0086               	movwf	6
 16364  08BB  3000               	movlw	high compensate_pressure@var2
 16365  08BC  0087               	movwf	7
 16366  08BD  3F40               	moviw [0]fsr1
 16367  08BE  0020               	movlb	0	; select bank0
 16368  08BF  00CA               	movwf	??_compensate_pressure
 16369  08C0  3F41               	moviw [1]fsr1
 16370  08C1  00CB               	movwf	??_compensate_pressure+1
 16371  08C2  3F42               	moviw [2]fsr1
 16372  08C3  00CC               	movwf	??_compensate_pressure+2
 16373  08C4  3F43               	moviw [3]fsr1
 16374  08C5  00CD               	movwf	??_compensate_pressure+3
 16375  08C6  3F44               	moviw [4]fsr1
 16376  08C7  00CE               	movwf	??_compensate_pressure+4
 16377  08C8  3F45               	moviw [5]fsr1
 16378  08C9  00CF               	movwf	??_compensate_pressure+5
 16379  08CA  3F46               	moviw [6]fsr1
 16380  08CB  00D0               	movwf	??_compensate_pressure+6
 16381  08CC  3F47               	moviw [7]fsr1
 16382  08CD  00D1               	movwf	??_compensate_pressure+7
 16383  08CE  087A               	movf	compensate_pressure@calib_data,w
 16384  08CF  3E0E               	addlw	14
 16385  08D0  0086               	movwf	6
 16386  08D1  3001               	movlw	1	; select bank2/3
 16387  08D2  0087               	movwf	7
 16388  08D3  3F40               	moviw [0]fsr1
 16389  08D4  00D2               	movwf	??_compensate_pressure+8
 16390  08D5  3F41               	moviw [1]fsr1
 16391  08D6  00D3               	movwf	??_compensate_pressure+9
 16392  08D7  0852               	movf	??_compensate_pressure+8,w
 16393  08D8  00A0               	movwf	___omul@multiplier
 16394  08D9  0853               	movf	??_compensate_pressure+9,w
 16395  08DA  00A1               	movwf	___omul@multiplier+1
 16396  08DB  0D89               	rlf	9,f
 16397  08DC  3B89               	subwfb	9,f
 16398  08DD  0989               	comf	9,f
 16399  08DE  00A2               	movwf	___omul@multiplier+2
 16400  08DF  00A3               	movwf	___omul@multiplier+3
 16401  08E0  00A4               	movwf	___omul@multiplier+4
 16402  08E1  00A5               	movwf	___omul@multiplier+5
 16403  08E2  00A6               	movwf	___omul@multiplier+6
 16404  08E3  00A7               	movwf	___omul@multiplier+7
 16405  08E4  0021               	movlb	1	; select bank1
 16406  08E5  085D               	movf	compensate_pressure@var1^(0+128),w
 16407  08E6  0020               	movlb	0	; select bank0
 16408  08E7  00A8               	movwf	___omul@multiplicand
 16409  08E8  0021               	movlb	1	; select bank1
 16410  08E9  085E               	movf	(compensate_pressure@var1+1)^(0+128),w
 16411  08EA  0020               	movlb	0	; select bank0
 16412  08EB  00A9               	movwf	___omul@multiplicand+1
 16413  08EC  0021               	movlb	1	; select bank1
 16414  08ED  085F               	movf	(compensate_pressure@var1+2)^(0+128),w
 16415  08EE  0020               	movlb	0	; select bank0
 16416  08EF  00AA               	movwf	___omul@multiplicand+2
 16417  08F0  0021               	movlb	1	; select bank1
 16418  08F1  0860               	movf	(compensate_pressure@var1+3)^(0+128),w
 16419  08F2  0020               	movlb	0	; select bank0
 16420  08F3  00AB               	movwf	___omul@multiplicand+3
 16421  08F4  0021               	movlb	1	; select bank1
 16422  08F5  0861               	movf	(compensate_pressure@var1+4)^(0+128),w
 16423  08F6  0020               	movlb	0	; select bank0
 16424  08F7  00AC               	movwf	___omul@multiplicand+4
 16425  08F8  0021               	movlb	1	; select bank1
 16426  08F9  0862               	movf	(compensate_pressure@var1+5)^(0+128),w
 16427  08FA  0020               	movlb	0	; select bank0
 16428  08FB  00AD               	movwf	___omul@multiplicand+5
 16429  08FC  0021               	movlb	1	; select bank1
 16430  08FD  0863               	movf	(compensate_pressure@var1+6)^(0+128),w
 16431  08FE  0020               	movlb	0	; select bank0
 16432  08FF  00AE               	movwf	___omul@multiplicand+6
 16433  0900  0021               	movlb	1	; select bank1
 16434  0901  0864               	movf	(compensate_pressure@var1+7)^(0+128),w
 16435  0902  0020               	movlb	0	; select bank0
 16436  0903  00AF               	movwf	___omul@multiplicand+7
 16437  0904  319E  2638  3188   	fcall	___omul
 16438  0907  3020               	movlw	low ?___omul
 16439  0908  0086               	movwf	6
 16440  0909  3000               	movlw	high ?___omul
 16441  090A  0087               	movwf	7
 16442  090B  3F40               	moviw [0]fsr1
 16443  090C  00D4               	movwf	??_compensate_pressure+10
 16444  090D  3F41               	moviw [1]fsr1
 16445  090E  00D5               	movwf	??_compensate_pressure+11
 16446  090F  3F42               	moviw [2]fsr1
 16447  0910  00D6               	movwf	??_compensate_pressure+12
 16448  0911  3F43               	moviw [3]fsr1
 16449  0912  00D7               	movwf	??_compensate_pressure+13
 16450  0913  3F44               	moviw [4]fsr1
 16451  0914  00D8               	movwf	??_compensate_pressure+14
 16452  0915  3F45               	moviw [5]fsr1
 16453  0916  00D9               	movwf	??_compensate_pressure+15
 16454  0917  3F46               	moviw [6]fsr1
 16455  0918  00DA               	movwf	??_compensate_pressure+16
 16456  0919  3F47               	moviw [7]fsr1
 16457  091A  00DB               	movwf	??_compensate_pressure+17
 16458  091B  3011               	movlw	17
 16459  091C                     u4545:	
 16460  091C  0020               	movlb	0	; select bank0
 16461  091D  35D4               	lslf	??_compensate_pressure+10,f
 16462  091E  0DD5               	rlf	??_compensate_pressure+11,f
 16463  091F  0DD6               	rlf	??_compensate_pressure+12,f
 16464  0920  0DD7               	rlf	??_compensate_pressure+13,f
 16465  0921  0DD8               	rlf	??_compensate_pressure+14,f
 16466  0922  0DD9               	rlf	??_compensate_pressure+15,f
 16467  0923  0DDA               	rlf	??_compensate_pressure+16,f
 16468  0924  0DDB               	rlf	??_compensate_pressure+17,f
 16469  0925  0B89               	decfsz	9,f
 16470  0926  291C               	goto	u4545
 16471  0927  0020               	movlb	0	; select bank0
 16472  0928  0854               	movf	??_compensate_pressure+10,w
 16473  0929  07CA               	addwf	??_compensate_pressure,f
 16474  092A  0855               	movf	??_compensate_pressure+11,w
 16475  092B  3DCB               	addwfc	??_compensate_pressure+1,f
 16476  092C  0856               	movf	??_compensate_pressure+12,w
 16477  092D  3DCC               	addwfc	??_compensate_pressure+2,f
 16478  092E  0857               	movf	??_compensate_pressure+13,w
 16479  092F  3DCD               	addwfc	??_compensate_pressure+3,f
 16480  0930  0858               	movf	??_compensate_pressure+14,w
 16481  0931  3DCE               	addwfc	??_compensate_pressure+4,f
 16482  0932  0859               	movf	??_compensate_pressure+15,w
 16483  0933  3DCF               	addwfc	??_compensate_pressure+5,f
 16484  0934  085A               	movf	??_compensate_pressure+16,w
 16485  0935  3DD0               	addwfc	??_compensate_pressure+6,f
 16486  0936  085B               	movf	??_compensate_pressure+17,w
 16487  0937  3DD1               	addwfc	??_compensate_pressure+7,f
 16488  0938  0851               	movf	??_compensate_pressure+7,w
 16489  0939  0021               	movlb	1	; select bank1
 16490  093A  00D4               	movwf	(compensate_pressure@var2+7)^(0+128)
 16491  093B  0020               	movlb	0	; select bank0
 16492  093C  0850               	movf	??_compensate_pressure+6,w
 16493  093D  0021               	movlb	1	; select bank1
 16494  093E  00D3               	movwf	(compensate_pressure@var2+6)^(0+128)
 16495  093F  0020               	movlb	0	; select bank0
 16496  0940  084F               	movf	??_compensate_pressure+5,w
 16497  0941  0021               	movlb	1	; select bank1
 16498  0942  00D2               	movwf	(compensate_pressure@var2+5)^(0+128)
 16499  0943  0020               	movlb	0	; select bank0
 16500  0944  084E               	movf	??_compensate_pressure+4,w
 16501  0945  0021               	movlb	1	; select bank1
 16502  0946  00D1               	movwf	(compensate_pressure@var2+4)^(0+128)
 16503  0947  0020               	movlb	0	; select bank0
 16504  0948  084D               	movf	??_compensate_pressure+3,w
 16505  0949  0021               	movlb	1	; select bank1
 16506  094A  00D0               	movwf	(compensate_pressure@var2+3)^(0+128)
 16507  094B  0020               	movlb	0	; select bank0
 16508  094C  084C               	movf	??_compensate_pressure+2,w
 16509  094D  0021               	movlb	1	; select bank1
 16510  094E  00CF               	movwf	(compensate_pressure@var2+2)^(0+128)
 16511  094F  0020               	movlb	0	; select bank0
 16512  0950  084B               	movf	??_compensate_pressure+1,w
 16513  0951  0021               	movlb	1	; select bank1
 16514  0952  00CE               	movwf	(compensate_pressure@var2+1)^(0+128)
 16515  0953  0020               	movlb	0	; select bank0
 16516  0954  084A               	movf	??_compensate_pressure,w
 16517  0955  0021               	movlb	1	; select bank1
 16518  0956  00CD               	movwf	compensate_pressure@var2^(0+128)
 16519                           
 16520                           ;BME280_driver/bme280.c: 1173:     var2 = var2 + (((int64_t)calib_data->dig_P4) * 343597
      +                          38368);
 16521  0957  30CD               	movlw	low compensate_pressure@var2
 16522  0958  0086               	movwf	6
 16523  0959  3000               	movlw	high compensate_pressure@var2
 16524  095A  0087               	movwf	7
 16525  095B  3F40               	moviw [0]fsr1
 16526  095C  0020               	movlb	0	; select bank0
 16527  095D  00CA               	movwf	??_compensate_pressure
 16528  095E  3F41               	moviw [1]fsr1
 16529  095F  00CB               	movwf	??_compensate_pressure+1
 16530  0960  3F42               	moviw [2]fsr1
 16531  0961  00CC               	movwf	??_compensate_pressure+2
 16532  0962  3F43               	moviw [3]fsr1
 16533  0963  00CD               	movwf	??_compensate_pressure+3
 16534  0964  3F44               	moviw [4]fsr1
 16535  0965  00CE               	movwf	??_compensate_pressure+4
 16536  0966  3F45               	moviw [5]fsr1
 16537  0967  00CF               	movwf	??_compensate_pressure+5
 16538  0968  3F46               	moviw [6]fsr1
 16539  0969  00D0               	movwf	??_compensate_pressure+6
 16540  096A  3F47               	moviw [7]fsr1
 16541  096B  00D1               	movwf	??_compensate_pressure+7
 16542  096C  087A               	movf	compensate_pressure@calib_data,w
 16543  096D  3E0C               	addlw	12
 16544  096E  0086               	movwf	6
 16545  096F  3001               	movlw	1	; select bank2/3
 16546  0970  0087               	movwf	7
 16547  0971  3F40               	moviw [0]fsr1
 16548  0972  00D2               	movwf	??_compensate_pressure+8
 16549  0973  3F41               	moviw [1]fsr1
 16550  0974  00D3               	movwf	??_compensate_pressure+9
 16551  0975  0852               	movf	??_compensate_pressure+8,w
 16552  0976  00D4               	movwf	??_compensate_pressure+10
 16553  0977  0853               	movf	??_compensate_pressure+9,w
 16554  0978  00D5               	movwf	??_compensate_pressure+11
 16555  0979  3000               	movlw	0
 16556  097A  1BD5               	btfsc	??_compensate_pressure+11,7
 16557  097B  30FF               	movlw	255
 16558  097C  00D6               	movwf	??_compensate_pressure+12
 16559  097D  00D7               	movwf	??_compensate_pressure+13
 16560  097E  00D8               	movwf	??_compensate_pressure+14
 16561  097F  00D9               	movwf	??_compensate_pressure+15
 16562  0980  00DA               	movwf	??_compensate_pressure+16
 16563  0981  00DB               	movwf	??_compensate_pressure+17
 16564  0982  3023               	movlw	35
 16565  0983                     u4555:	
 16566  0983  0020               	movlb	0	; select bank0
 16567  0984  35D4               	lslf	??_compensate_pressure+10,f
 16568  0985  0DD5               	rlf	??_compensate_pressure+11,f
 16569  0986  0DD6               	rlf	??_compensate_pressure+12,f
 16570  0987  0DD7               	rlf	??_compensate_pressure+13,f
 16571  0988  0DD8               	rlf	??_compensate_pressure+14,f
 16572  0989  0DD9               	rlf	??_compensate_pressure+15,f
 16573  098A  0DDA               	rlf	??_compensate_pressure+16,f
 16574  098B  0DDB               	rlf	??_compensate_pressure+17,f
 16575  098C  0B89               	decfsz	9,f
 16576  098D  2983               	goto	u4555
 16577  098E  0020               	movlb	0	; select bank0
 16578  098F  0854               	movf	??_compensate_pressure+10,w
 16579  0990  07CA               	addwf	??_compensate_pressure,f
 16580  0991  0855               	movf	??_compensate_pressure+11,w
 16581  0992  3DCB               	addwfc	??_compensate_pressure+1,f
 16582  0993  0856               	movf	??_compensate_pressure+12,w
 16583  0994  3DCC               	addwfc	??_compensate_pressure+2,f
 16584  0995  0857               	movf	??_compensate_pressure+13,w
 16585  0996  3DCD               	addwfc	??_compensate_pressure+3,f
 16586  0997  0858               	movf	??_compensate_pressure+14,w
 16587  0998  3DCE               	addwfc	??_compensate_pressure+4,f
 16588  0999  0859               	movf	??_compensate_pressure+15,w
 16589  099A  3DCF               	addwfc	??_compensate_pressure+5,f
 16590  099B  085A               	movf	??_compensate_pressure+16,w
 16591  099C  3DD0               	addwfc	??_compensate_pressure+6,f
 16592  099D  085B               	movf	??_compensate_pressure+17,w
 16593  099E  3DD1               	addwfc	??_compensate_pressure+7,f
 16594  099F  0851               	movf	??_compensate_pressure+7,w
 16595  09A0  0021               	movlb	1	; select bank1
 16596  09A1  00D4               	movwf	(compensate_pressure@var2+7)^(0+128)
 16597  09A2  0020               	movlb	0	; select bank0
 16598  09A3  0850               	movf	??_compensate_pressure+6,w
 16599  09A4  0021               	movlb	1	; select bank1
 16600  09A5  00D3               	movwf	(compensate_pressure@var2+6)^(0+128)
 16601  09A6  0020               	movlb	0	; select bank0
 16602  09A7  084F               	movf	??_compensate_pressure+5,w
 16603  09A8  0021               	movlb	1	; select bank1
 16604  09A9  00D2               	movwf	(compensate_pressure@var2+5)^(0+128)
 16605  09AA  0020               	movlb	0	; select bank0
 16606  09AB  084E               	movf	??_compensate_pressure+4,w
 16607  09AC  0021               	movlb	1	; select bank1
 16608  09AD  00D1               	movwf	(compensate_pressure@var2+4)^(0+128)
 16609  09AE  0020               	movlb	0	; select bank0
 16610  09AF  084D               	movf	??_compensate_pressure+3,w
 16611  09B0  0021               	movlb	1	; select bank1
 16612  09B1  00D0               	movwf	(compensate_pressure@var2+3)^(0+128)
 16613  09B2  0020               	movlb	0	; select bank0
 16614  09B3  084C               	movf	??_compensate_pressure+2,w
 16615  09B4  0021               	movlb	1	; select bank1
 16616  09B5  00CF               	movwf	(compensate_pressure@var2+2)^(0+128)
 16617  09B6  0020               	movlb	0	; select bank0
 16618  09B7  084B               	movf	??_compensate_pressure+1,w
 16619  09B8  0021               	movlb	1	; select bank1
 16620  09B9  00CE               	movwf	(compensate_pressure@var2+1)^(0+128)
 16621  09BA  0020               	movlb	0	; select bank0
 16622  09BB  084A               	movf	??_compensate_pressure,w
 16623  09BC  0021               	movlb	1	; select bank1
 16624  09BD  00CD               	movwf	compensate_pressure@var2^(0+128)
 16625                           
 16626                           ;BME280_driver/bme280.c: 1174:     var1 = ((var1 * var1 * (int64_t)calib_data->dig_P3) /
      +                           256) + ((var1 * ((int64_t)calib_data->dig_P2) * 4096));
 16627  09BE  087A               	movf	compensate_pressure@calib_data,w
 16628  09BF  3E0A               	addlw	10
 16629  09C0  0086               	movwf	6
 16630  09C1  3001               	movlw	1	; select bank2/3
 16631  09C2  0087               	movwf	7
 16632  09C3  3F40               	moviw [0]fsr1
 16633  09C4  0020               	movlb	0	; select bank0
 16634  09C5  00CA               	movwf	??_compensate_pressure
 16635  09C6  3F41               	moviw [1]fsr1
 16636  09C7  00CB               	movwf	??_compensate_pressure+1
 16637  09C8  084A               	movf	??_compensate_pressure,w
 16638  09C9  00A0               	movwf	___omul@multiplier
 16639  09CA  084B               	movf	??_compensate_pressure+1,w
 16640  09CB  00A1               	movwf	___omul@multiplier+1
 16641  09CC  0D89               	rlf	9,f
 16642  09CD  3B89               	subwfb	9,f
 16643  09CE  0989               	comf	9,f
 16644  09CF  00A2               	movwf	___omul@multiplier+2
 16645  09D0  00A3               	movwf	___omul@multiplier+3
 16646  09D1  00A4               	movwf	___omul@multiplier+4
 16647  09D2  00A5               	movwf	___omul@multiplier+5
 16648  09D3  00A6               	movwf	___omul@multiplier+6
 16649  09D4  00A7               	movwf	___omul@multiplier+7
 16650  09D5  0021               	movlb	1	; select bank1
 16651  09D6  085D               	movf	compensate_pressure@var1^(0+128),w
 16652  09D7  0020               	movlb	0	; select bank0
 16653  09D8  00A8               	movwf	___omul@multiplicand
 16654  09D9  0021               	movlb	1	; select bank1
 16655  09DA  085E               	movf	(compensate_pressure@var1+1)^(0+128),w
 16656  09DB  0020               	movlb	0	; select bank0
 16657  09DC  00A9               	movwf	___omul@multiplicand+1
 16658  09DD  0021               	movlb	1	; select bank1
 16659  09DE  085F               	movf	(compensate_pressure@var1+2)^(0+128),w
 16660  09DF  0020               	movlb	0	; select bank0
 16661  09E0  00AA               	movwf	___omul@multiplicand+2
 16662  09E1  0021               	movlb	1	; select bank1
 16663  09E2  0860               	movf	(compensate_pressure@var1+3)^(0+128),w
 16664  09E3  0020               	movlb	0	; select bank0
 16665  09E4  00AB               	movwf	___omul@multiplicand+3
 16666  09E5  0021               	movlb	1	; select bank1
 16667  09E6  0861               	movf	(compensate_pressure@var1+4)^(0+128),w
 16668  09E7  0020               	movlb	0	; select bank0
 16669  09E8  00AC               	movwf	___omul@multiplicand+4
 16670  09E9  0021               	movlb	1	; select bank1
 16671  09EA  0862               	movf	(compensate_pressure@var1+5)^(0+128),w
 16672  09EB  0020               	movlb	0	; select bank0
 16673  09EC  00AD               	movwf	___omul@multiplicand+5
 16674  09ED  0021               	movlb	1	; select bank1
 16675  09EE  0863               	movf	(compensate_pressure@var1+6)^(0+128),w
 16676  09EF  0020               	movlb	0	; select bank0
 16677  09F0  00AE               	movwf	___omul@multiplicand+6
 16678  09F1  0021               	movlb	1	; select bank1
 16679  09F2  0864               	movf	(compensate_pressure@var1+7)^(0+128),w
 16680  09F3  0020               	movlb	0	; select bank0
 16681  09F4  00AF               	movwf	___omul@multiplicand+7
 16682  09F5  319E  2638  3188   	fcall	___omul
 16683  09F8  0820               	movf	?___omul,w
 16684  09F9  0021               	movlb	1	; select bank1
 16685  09FA  00C1               	movwf	_compensate_pressure$2352^(0+128)
 16686  09FB  0020               	movlb	0	; select bank0
 16687  09FC  0821               	movf	?___omul+1,w
 16688  09FD  0021               	movlb	1	; select bank1
 16689  09FE  00C2               	movwf	(_compensate_pressure$2352+1)^(0+128)
 16690  09FF  0020               	movlb	0	; select bank0
 16691  0A00  0822               	movf	?___omul+2,w
 16692  0A01  0021               	movlb	1	; select bank1
 16693  0A02  00C3               	movwf	(_compensate_pressure$2352+2)^(0+128)
 16694  0A03  0020               	movlb	0	; select bank0
 16695  0A04  0823               	movf	?___omul+3,w
 16696  0A05  0021               	movlb	1	; select bank1
 16697  0A06  00C4               	movwf	(_compensate_pressure$2352+3)^(0+128)
 16698  0A07  0020               	movlb	0	; select bank0
 16699  0A08  0824               	movf	?___omul+4,w
 16700  0A09  0021               	movlb	1	; select bank1
 16701  0A0A  00C5               	movwf	(_compensate_pressure$2352+4)^(0+128)
 16702  0A0B  0020               	movlb	0	; select bank0
 16703  0A0C  0825               	movf	?___omul+5,w
 16704  0A0D  0021               	movlb	1	; select bank1
 16705  0A0E  00C6               	movwf	(_compensate_pressure$2352+5)^(0+128)
 16706  0A0F  0020               	movlb	0	; select bank0
 16707  0A10  0826               	movf	?___omul+6,w
 16708  0A11  0021               	movlb	1	; select bank1
 16709  0A12  00C7               	movwf	(_compensate_pressure$2352+6)^(0+128)
 16710  0A13  0020               	movlb	0	; select bank0
 16711  0A14  0827               	movf	?___omul+7,w
 16712  0A15  0021               	movlb	1	; select bank1
 16713  0A16  00C8               	movwf	(_compensate_pressure$2352+7)^(0+128)
 16714                           
 16715                           ;BME280_driver/bme280.c: 1174:     var1 = ((var1 * var1 * (int64_t)calib_data->dig_P3) /
      +                           256) + ((var1 * ((int64_t)calib_data->dig_P2) * 4096));
 16716  0A17  087A               	movf	compensate_pressure@calib_data,w
 16717  0A18  3E08               	addlw	8
 16718  0A19  0086               	movwf	6
 16719  0A1A  3001               	movlw	1	; select bank2/3
 16720  0A1B  0087               	movwf	7
 16721  0A1C  3F40               	moviw [0]fsr1
 16722  0A1D  0020               	movlb	0	; select bank0
 16723  0A1E  00CA               	movwf	??_compensate_pressure
 16724  0A1F  3F41               	moviw [1]fsr1
 16725  0A20  00CB               	movwf	??_compensate_pressure+1
 16726  0A21  084A               	movf	??_compensate_pressure,w
 16727  0A22  00A0               	movwf	___omul@multiplier
 16728  0A23  084B               	movf	??_compensate_pressure+1,w
 16729  0A24  00A1               	movwf	___omul@multiplier+1
 16730  0A25  0D89               	rlf	9,f
 16731  0A26  3B89               	subwfb	9,f
 16732  0A27  0989               	comf	9,f
 16733  0A28  00A2               	movwf	___omul@multiplier+2
 16734  0A29  00A3               	movwf	___omul@multiplier+3
 16735  0A2A  00A4               	movwf	___omul@multiplier+4
 16736  0A2B  00A5               	movwf	___omul@multiplier+5
 16737  0A2C  00A6               	movwf	___omul@multiplier+6
 16738  0A2D  00A7               	movwf	___omul@multiplier+7
 16739  0A2E  0021               	movlb	1	; select bank1
 16740  0A2F  085D               	movf	compensate_pressure@var1^(0+128),w
 16741  0A30  0020               	movlb	0	; select bank0
 16742  0A31  00A8               	movwf	___omul@multiplicand
 16743  0A32  0021               	movlb	1	; select bank1
 16744  0A33  085E               	movf	(compensate_pressure@var1+1)^(0+128),w
 16745  0A34  0020               	movlb	0	; select bank0
 16746  0A35  00A9               	movwf	___omul@multiplicand+1
 16747  0A36  0021               	movlb	1	; select bank1
 16748  0A37  085F               	movf	(compensate_pressure@var1+2)^(0+128),w
 16749  0A38  0020               	movlb	0	; select bank0
 16750  0A39  00AA               	movwf	___omul@multiplicand+2
 16751  0A3A  0021               	movlb	1	; select bank1
 16752  0A3B  0860               	movf	(compensate_pressure@var1+3)^(0+128),w
 16753  0A3C  0020               	movlb	0	; select bank0
 16754  0A3D  00AB               	movwf	___omul@multiplicand+3
 16755  0A3E  0021               	movlb	1	; select bank1
 16756  0A3F  0861               	movf	(compensate_pressure@var1+4)^(0+128),w
 16757  0A40  0020               	movlb	0	; select bank0
 16758  0A41  00AC               	movwf	___omul@multiplicand+4
 16759  0A42  0021               	movlb	1	; select bank1
 16760  0A43  0862               	movf	(compensate_pressure@var1+5)^(0+128),w
 16761  0A44  0020               	movlb	0	; select bank0
 16762  0A45  00AD               	movwf	___omul@multiplicand+5
 16763  0A46  0021               	movlb	1	; select bank1
 16764  0A47  0863               	movf	(compensate_pressure@var1+6)^(0+128),w
 16765  0A48  0020               	movlb	0	; select bank0
 16766  0A49  00AE               	movwf	___omul@multiplicand+6
 16767  0A4A  0021               	movlb	1	; select bank1
 16768  0A4B  0864               	movf	(compensate_pressure@var1+7)^(0+128),w
 16769  0A4C  0020               	movlb	0	; select bank0
 16770  0A4D  00AF               	movwf	___omul@multiplicand+7
 16771  0A4E  319E  2638  3188   	fcall	___omul
 16772  0A51  3020               	movlw	low ?___omul
 16773  0A52  0086               	movwf	6
 16774  0A53  3000               	movlw	high ?___omul
 16775  0A54  0087               	movwf	7
 16776  0A55  3F40               	moviw [0]fsr1
 16777  0A56  00CC               	movwf	??_compensate_pressure+2
 16778  0A57  3F41               	moviw [1]fsr1
 16779  0A58  00CD               	movwf	??_compensate_pressure+3
 16780  0A59  3F42               	moviw [2]fsr1
 16781  0A5A  00CE               	movwf	??_compensate_pressure+4
 16782  0A5B  3F43               	moviw [3]fsr1
 16783  0A5C  00CF               	movwf	??_compensate_pressure+5
 16784  0A5D  3F44               	moviw [4]fsr1
 16785  0A5E  00D0               	movwf	??_compensate_pressure+6
 16786  0A5F  3F45               	moviw [5]fsr1
 16787  0A60  00D1               	movwf	??_compensate_pressure+7
 16788  0A61  3F46               	moviw [6]fsr1
 16789  0A62  00D2               	movwf	??_compensate_pressure+8
 16790  0A63  3F47               	moviw [7]fsr1
 16791  0A64  00D3               	movwf	??_compensate_pressure+9
 16792  0A65  300C               	movlw	12
 16793  0A66                     u4565:	
 16794  0A66  0020               	movlb	0	; select bank0
 16795  0A67  35CC               	lslf	??_compensate_pressure+2,f
 16796  0A68  0DCD               	rlf	??_compensate_pressure+3,f
 16797  0A69  0DCE               	rlf	??_compensate_pressure+4,f
 16798  0A6A  0DCF               	rlf	??_compensate_pressure+5,f
 16799  0A6B  0DD0               	rlf	??_compensate_pressure+6,f
 16800  0A6C  0DD1               	rlf	??_compensate_pressure+7,f
 16801  0A6D  0DD2               	rlf	??_compensate_pressure+8,f
 16802  0A6E  0DD3               	rlf	??_compensate_pressure+9,f
 16803  0A6F  0B89               	decfsz	9,f
 16804  0A70  2A66               	goto	u4565
 16805  0A71  3000               	movlw	0
 16806  0A72  0020               	movlb	0	; select bank0
 16807  0A73  00B7               	movwf	___aodiv@divisor+7
 16808  0A74  3000               	movlw	0
 16809  0A75  00B6               	movwf	___aodiv@divisor+6
 16810  0A76  3000               	movlw	0
 16811  0A77  00B5               	movwf	___aodiv@divisor+5
 16812  0A78  3000               	movlw	0
 16813  0A79  00B4               	movwf	___aodiv@divisor+4
 16814  0A7A  3000               	movlw	0
 16815  0A7B  00B3               	movwf	___aodiv@divisor+3
 16816  0A7C  3000               	movlw	0
 16817  0A7D  00B2               	movwf	___aodiv@divisor+2
 16818  0A7E  3001               	movlw	1
 16819  0A7F  00B1               	movwf	___aodiv@divisor+1
 16820  0A80  3000               	movlw	0
 16821  0A81  00B0               	movwf	___aodiv@divisor
 16822  0A82  0021               	movlb	1	; select bank1
 16823  0A83  0841               	movf	_compensate_pressure$2352^(0+128),w
 16824  0A84  0020               	movlb	0	; select bank0
 16825  0A85  00A0               	movwf	___omul@multiplier
 16826  0A86  0021               	movlb	1	; select bank1
 16827  0A87  0842               	movf	(_compensate_pressure$2352+1)^(0+128),w
 16828  0A88  0020               	movlb	0	; select bank0
 16829  0A89  00A1               	movwf	___omul@multiplier+1
 16830  0A8A  0021               	movlb	1	; select bank1
 16831  0A8B  0843               	movf	(_compensate_pressure$2352+2)^(0+128),w
 16832  0A8C  0020               	movlb	0	; select bank0
 16833  0A8D  00A2               	movwf	___omul@multiplier+2
 16834  0A8E  0021               	movlb	1	; select bank1
 16835  0A8F  0844               	movf	(_compensate_pressure$2352+3)^(0+128),w
 16836  0A90  0020               	movlb	0	; select bank0
 16837  0A91  00A3               	movwf	___omul@multiplier+3
 16838  0A92  0021               	movlb	1	; select bank1
 16839  0A93  0845               	movf	(_compensate_pressure$2352+4)^(0+128),w
 16840  0A94  0020               	movlb	0	; select bank0
 16841  0A95  00A4               	movwf	___omul@multiplier+4
 16842  0A96  0021               	movlb	1	; select bank1
 16843  0A97  0846               	movf	(_compensate_pressure$2352+5)^(0+128),w
 16844  0A98  0020               	movlb	0	; select bank0
 16845  0A99  00A5               	movwf	___omul@multiplier+5
 16846  0A9A  0021               	movlb	1	; select bank1
 16847  0A9B  0847               	movf	(_compensate_pressure$2352+6)^(0+128),w
 16848  0A9C  0020               	movlb	0	; select bank0
 16849  0A9D  00A6               	movwf	___omul@multiplier+6
 16850  0A9E  0021               	movlb	1	; select bank1
 16851  0A9F  0848               	movf	(_compensate_pressure$2352+7)^(0+128),w
 16852  0AA0  0020               	movlb	0	; select bank0
 16853  0AA1  00A7               	movwf	___omul@multiplier+7
 16854  0AA2  0021               	movlb	1	; select bank1
 16855  0AA3  085D               	movf	compensate_pressure@var1^(0+128),w
 16856  0AA4  0020               	movlb	0	; select bank0
 16857  0AA5  00A8               	movwf	___omul@multiplicand
 16858  0AA6  0021               	movlb	1	; select bank1
 16859  0AA7  085E               	movf	(compensate_pressure@var1+1)^(0+128),w
 16860  0AA8  0020               	movlb	0	; select bank0
 16861  0AA9  00A9               	movwf	___omul@multiplicand+1
 16862  0AAA  0021               	movlb	1	; select bank1
 16863  0AAB  085F               	movf	(compensate_pressure@var1+2)^(0+128),w
 16864  0AAC  0020               	movlb	0	; select bank0
 16865  0AAD  00AA               	movwf	___omul@multiplicand+2
 16866  0AAE  0021               	movlb	1	; select bank1
 16867  0AAF  0860               	movf	(compensate_pressure@var1+3)^(0+128),w
 16868  0AB0  0020               	movlb	0	; select bank0
 16869  0AB1  00AB               	movwf	___omul@multiplicand+3
 16870  0AB2  0021               	movlb	1	; select bank1
 16871  0AB3  0861               	movf	(compensate_pressure@var1+4)^(0+128),w
 16872  0AB4  0020               	movlb	0	; select bank0
 16873  0AB5  00AC               	movwf	___omul@multiplicand+4
 16874  0AB6  0021               	movlb	1	; select bank1
 16875  0AB7  0862               	movf	(compensate_pressure@var1+5)^(0+128),w
 16876  0AB8  0020               	movlb	0	; select bank0
 16877  0AB9  00AD               	movwf	___omul@multiplicand+5
 16878  0ABA  0021               	movlb	1	; select bank1
 16879  0ABB  0863               	movf	(compensate_pressure@var1+6)^(0+128),w
 16880  0ABC  0020               	movlb	0	; select bank0
 16881  0ABD  00AE               	movwf	___omul@multiplicand+6
 16882  0ABE  0021               	movlb	1	; select bank1
 16883  0ABF  0864               	movf	(compensate_pressure@var1+7)^(0+128),w
 16884  0AC0  0020               	movlb	0	; select bank0
 16885  0AC1  00AF               	movwf	___omul@multiplicand+7
 16886  0AC2  319E  2638  3188   	fcall	___omul
 16887  0AC5  0820               	movf	?___omul,w
 16888  0AC6  00B8               	movwf	___aodiv@dividend
 16889  0AC7  0821               	movf	?___omul+1,w
 16890  0AC8  00B9               	movwf	___aodiv@dividend+1
 16891  0AC9  0822               	movf	?___omul+2,w
 16892  0ACA  00BA               	movwf	___aodiv@dividend+2
 16893  0ACB  0823               	movf	?___omul+3,w
 16894  0ACC  00BB               	movwf	___aodiv@dividend+3
 16895  0ACD  0824               	movf	?___omul+4,w
 16896  0ACE  00BC               	movwf	___aodiv@dividend+4
 16897  0ACF  0825               	movf	?___omul+5,w
 16898  0AD0  00BD               	movwf	___aodiv@dividend+5
 16899  0AD1  0826               	movf	?___omul+6,w
 16900  0AD2  00BE               	movwf	___aodiv@dividend+6
 16901  0AD3  0827               	movf	?___omul+7,w
 16902  0AD4  00BF               	movwf	___aodiv@dividend+7
 16903  0AD5  3184  24F7  3188   	fcall	___aodiv
 16904  0AD8  3030               	movlw	low ?___aodiv
 16905  0AD9  0086               	movwf	6
 16906  0ADA  3000               	movlw	high ?___aodiv
 16907  0ADB  0087               	movwf	7
 16908  0ADC  3F40               	moviw [0]fsr1
 16909  0ADD  07CC               	addwf	??_compensate_pressure+2,f
 16910  0ADE  3F41               	moviw [1]fsr1
 16911  0ADF  3DCD               	addwfc	??_compensate_pressure+3,f
 16912  0AE0  3F42               	moviw [2]fsr1
 16913  0AE1  3DCE               	addwfc	??_compensate_pressure+4,f
 16914  0AE2  3F43               	moviw [3]fsr1
 16915  0AE3  3DCF               	addwfc	??_compensate_pressure+5,f
 16916  0AE4  3F44               	moviw [4]fsr1
 16917  0AE5  3DD0               	addwfc	??_compensate_pressure+6,f
 16918  0AE6  3F45               	moviw [5]fsr1
 16919  0AE7  3DD1               	addwfc	??_compensate_pressure+7,f
 16920  0AE8  3F46               	moviw [6]fsr1
 16921  0AE9  3DD2               	addwfc	??_compensate_pressure+8,f
 16922  0AEA  3F47               	moviw [7]fsr1
 16923  0AEB  3DD3               	addwfc	??_compensate_pressure+9,f
 16924  0AEC  0853               	movf	??_compensate_pressure+9,w
 16925  0AED  0021               	movlb	1	; select bank1
 16926  0AEE  00E4               	movwf	(compensate_pressure@var1+7)^(0+128)
 16927  0AEF  0020               	movlb	0	; select bank0
 16928  0AF0  0852               	movf	??_compensate_pressure+8,w
 16929  0AF1  0021               	movlb	1	; select bank1
 16930  0AF2  00E3               	movwf	(compensate_pressure@var1+6)^(0+128)
 16931  0AF3  0020               	movlb	0	; select bank0
 16932  0AF4  0851               	movf	??_compensate_pressure+7,w
 16933  0AF5  0021               	movlb	1	; select bank1
 16934  0AF6  00E2               	movwf	(compensate_pressure@var1+5)^(0+128)
 16935  0AF7  0020               	movlb	0	; select bank0
 16936  0AF8  0850               	movf	??_compensate_pressure+6,w
 16937  0AF9  0021               	movlb	1	; select bank1
 16938  0AFA  00E1               	movwf	(compensate_pressure@var1+4)^(0+128)
 16939  0AFB  0020               	movlb	0	; select bank0
 16940  0AFC  084F               	movf	??_compensate_pressure+5,w
 16941  0AFD  0021               	movlb	1	; select bank1
 16942  0AFE  00E0               	movwf	(compensate_pressure@var1+3)^(0+128)
 16943  0AFF  0020               	movlb	0	; select bank0
 16944  0B00  084E               	movf	??_compensate_pressure+4,w
 16945  0B01  0021               	movlb	1	; select bank1
 16946  0B02  00DF               	movwf	(compensate_pressure@var1+2)^(0+128)
 16947  0B03  0020               	movlb	0	; select bank0
 16948  0B04  084D               	movf	??_compensate_pressure+3,w
 16949  0B05  0021               	movlb	1	; select bank1
 16950  0B06  00DE               	movwf	(compensate_pressure@var1+1)^(0+128)
 16951  0B07  0020               	movlb	0	; select bank0
 16952  0B08  084C               	movf	??_compensate_pressure+2,w
 16953  0B09  0021               	movlb	1	; select bank1
 16954  0B0A  00DD               	movwf	compensate_pressure@var1^(0+128)
 16955                           
 16956                           ;BME280_driver/bme280.c: 1176:     var1 = (var3 + var1) * ((int64_t)calib_data->dig_P1) 
      +                          / 8589934592;
 16957  0B0B  3000               	movlw	0
 16958  0B0C  0020               	movlb	0	; select bank0
 16959  0B0D  00B7               	movwf	___aodiv@divisor+7
 16960  0B0E  3000               	movlw	0
 16961  0B0F  00B6               	movwf	___aodiv@divisor+6
 16962  0B10  3000               	movlw	0
 16963  0B11  00B5               	movwf	___aodiv@divisor+5
 16964  0B12  3002               	movlw	2
 16965  0B13  00B4               	movwf	___aodiv@divisor+4
 16966  0B14  3000               	movlw	0
 16967  0B15  00B3               	movwf	___aodiv@divisor+3
 16968  0B16  3000               	movlw	0
 16969  0B17  00B2               	movwf	___aodiv@divisor+2
 16970  0B18  3000               	movlw	0
 16971  0B19  00B1               	movwf	___aodiv@divisor+1
 16972  0B1A  3000               	movlw	0
 16973  0B1B  00B0               	movwf	___aodiv@divisor
 16974  0B1C  3000               	movlw	0
 16975  0B1D  00CA               	movwf	??_compensate_pressure
 16976  0B1E  3000               	movlw	0
 16977  0B1F  00CB               	movwf	??_compensate_pressure+1
 16978  0B20  3000               	movlw	0
 16979  0B21  00CC               	movwf	??_compensate_pressure+2
 16980  0B22  3000               	movlw	0
 16981  0B23  00CD               	movwf	??_compensate_pressure+3
 16982  0B24  3000               	movlw	0
 16983  0B25  00CE               	movwf	??_compensate_pressure+4
 16984  0B26  3080               	movlw	128
 16985  0B27  00CF               	movwf	??_compensate_pressure+5
 16986  0B28  3000               	movlw	0
 16987  0B29  00D0               	movwf	??_compensate_pressure+6
 16988  0B2A  3000               	movlw	0
 16989  0B2B  00D1               	movwf	??_compensate_pressure+7
 16990  0B2C  30DD               	movlw	low compensate_pressure@var1
 16991  0B2D  0086               	movwf	6
 16992  0B2E  3000               	movlw	high compensate_pressure@var1
 16993  0B2F  0087               	movwf	7
 16994  0B30  3F40               	moviw [0]fsr1
 16995  0B31  07CA               	addwf	??_compensate_pressure,f
 16996  0B32  3F41               	moviw [1]fsr1
 16997  0B33  3DCB               	addwfc	??_compensate_pressure+1,f
 16998  0B34  3F42               	moviw [2]fsr1
 16999  0B35  3DCC               	addwfc	??_compensate_pressure+2,f
 17000  0B36  3F43               	moviw [3]fsr1
 17001  0B37  3DCD               	addwfc	??_compensate_pressure+3,f
 17002  0B38  3F44               	moviw [4]fsr1
 17003  0B39  3DCE               	addwfc	??_compensate_pressure+4,f
 17004  0B3A  3F45               	moviw [5]fsr1
 17005  0B3B  3DCF               	addwfc	??_compensate_pressure+5,f
 17006  0B3C  3F46               	moviw [6]fsr1
 17007  0B3D  3DD0               	addwfc	??_compensate_pressure+6,f
 17008  0B3E  3F47               	moviw [7]fsr1
 17009  0B3F  3DD1               	addwfc	??_compensate_pressure+7,f
 17010  0B40  0851               	movf	??_compensate_pressure+7,w
 17011  0B41  00A7               	movwf	___omul@multiplier+7
 17012  0B42  0850               	movf	??_compensate_pressure+6,w
 17013  0B43  00A6               	movwf	___omul@multiplier+6
 17014  0B44  084F               	movf	??_compensate_pressure+5,w
 17015  0B45  00A5               	movwf	___omul@multiplier+5
 17016  0B46  084E               	movf	??_compensate_pressure+4,w
 17017  0B47  00A4               	movwf	___omul@multiplier+4
 17018  0B48  084D               	movf	??_compensate_pressure+3,w
 17019  0B49  00A3               	movwf	___omul@multiplier+3
 17020  0B4A  084C               	movf	??_compensate_pressure+2,w
 17021  0B4B  00A2               	movwf	___omul@multiplier+2
 17022  0B4C  084B               	movf	??_compensate_pressure+1,w
 17023  0B4D  00A1               	movwf	___omul@multiplier+1
 17024  0B4E  084A               	movf	??_compensate_pressure,w
 17025  0B4F  00A0               	movwf	___omul@multiplier
 17026  0B50  087A               	movf	compensate_pressure@calib_data,w
 17027  0B51  3E06               	addlw	6
 17028  0B52  0086               	movwf	6
 17029  0B53  3001               	movlw	1	; select bank2/3
 17030  0B54  0087               	movwf	7
 17031  0B55  3F40               	moviw [0]fsr1
 17032  0B56  00A8               	movwf	___omul@multiplicand
 17033  0B57  3F41               	moviw [1]fsr1
 17034  0B58  00A9               	movwf	___omul@multiplicand+1
 17035  0B59  01AA               	clrf	___omul@multiplicand+2
 17036  0B5A  01AB               	clrf	___omul@multiplicand+3
 17037  0B5B  01AC               	clrf	___omul@multiplicand+4
 17038  0B5C  01AD               	clrf	___omul@multiplicand+5
 17039  0B5D  01AE               	clrf	___omul@multiplicand+6
 17040  0B5E  01AF               	clrf	___omul@multiplicand+7
 17041  0B5F  319E  2638  3188   	fcall	___omul
 17042  0B62  0820               	movf	?___omul,w
 17043  0B63  00B8               	movwf	___aodiv@dividend
 17044  0B64  0821               	movf	?___omul+1,w
 17045  0B65  00B9               	movwf	___aodiv@dividend+1
 17046  0B66  0822               	movf	?___omul+2,w
 17047  0B67  00BA               	movwf	___aodiv@dividend+2
 17048  0B68  0823               	movf	?___omul+3,w
 17049  0B69  00BB               	movwf	___aodiv@dividend+3
 17050  0B6A  0824               	movf	?___omul+4,w
 17051  0B6B  00BC               	movwf	___aodiv@dividend+4
 17052  0B6C  0825               	movf	?___omul+5,w
 17053  0B6D  00BD               	movwf	___aodiv@dividend+5
 17054  0B6E  0826               	movf	?___omul+6,w
 17055  0B6F  00BE               	movwf	___aodiv@dividend+6
 17056  0B70  0827               	movf	?___omul+7,w
 17057  0B71  00BF               	movwf	___aodiv@dividend+7
 17058  0B72  3184  24F7  3188   	fcall	___aodiv
 17059  0B75  0830               	movf	?___aodiv,w
 17060  0B76  0021               	movlb	1	; select bank1
 17061  0B77  00DD               	movwf	compensate_pressure@var1^(0+128)
 17062  0B78  0020               	movlb	0	; select bank0
 17063  0B79  0831               	movf	?___aodiv+1,w
 17064  0B7A  0021               	movlb	1	; select bank1
 17065  0B7B  00DE               	movwf	(compensate_pressure@var1+1)^(0+128)
 17066  0B7C  0020               	movlb	0	; select bank0
 17067  0B7D  0832               	movf	?___aodiv+2,w
 17068  0B7E  0021               	movlb	1	; select bank1
 17069  0B7F  00DF               	movwf	(compensate_pressure@var1+2)^(0+128)
 17070  0B80  0020               	movlb	0	; select bank0
 17071  0B81  0833               	movf	?___aodiv+3,w
 17072  0B82  0021               	movlb	1	; select bank1
 17073  0B83  00E0               	movwf	(compensate_pressure@var1+3)^(0+128)
 17074  0B84  0020               	movlb	0	; select bank0
 17075  0B85  0834               	movf	?___aodiv+4,w
 17076  0B86  0021               	movlb	1	; select bank1
 17077  0B87  00E1               	movwf	(compensate_pressure@var1+4)^(0+128)
 17078  0B88  0020               	movlb	0	; select bank0
 17079  0B89  0835               	movf	?___aodiv+5,w
 17080  0B8A  0021               	movlb	1	; select bank1
 17081  0B8B  00E2               	movwf	(compensate_pressure@var1+5)^(0+128)
 17082  0B8C  0020               	movlb	0	; select bank0
 17083  0B8D  0836               	movf	?___aodiv+6,w
 17084  0B8E  0021               	movlb	1	; select bank1
 17085  0B8F  00E3               	movwf	(compensate_pressure@var1+6)^(0+128)
 17086  0B90  0020               	movlb	0	; select bank0
 17087  0B91  0837               	movf	?___aodiv+7,w
 17088  0B92  0021               	movlb	1	; select bank1
 17089  0B93  00E4               	movwf	(compensate_pressure@var1+7)^(0+128)
 17090                           
 17091                           ;BME280_driver/bme280.c: 1179:     if (var1 != 0)
 17092  0B94  085D               	movf	compensate_pressure@var1^(0+128),w
 17093  0B95  045E               	iorwf	(compensate_pressure@var1+1)^(0+128),w
 17094  0B96  045F               	iorwf	(compensate_pressure@var1+2)^(0+128),w
 17095  0B97  0460               	iorwf	(compensate_pressure@var1+3)^(0+128),w
 17096  0B98  0461               	iorwf	(compensate_pressure@var1+4)^(0+128),w
 17097  0B99  0462               	iorwf	(compensate_pressure@var1+5)^(0+128),w
 17098  0B9A  0463               	iorwf	(compensate_pressure@var1+6)^(0+128),w
 17099  0B9B  0464               	iorwf	(compensate_pressure@var1+7)^(0+128),w
 17100  0B9C  1903               	skipnz
 17101  0B9D  2FDE               	goto	l4294
 17102                           
 17103                           ;BME280_driver/bme280.c: 1180:     {;BME280_driver/bme280.c: 1181:         var4 = 104857
      +                          6 - uncomp_data->pressure;
 17104  0B9E  0838               	movf	compensate_pressure@uncomp_data^(0+128),w
 17105  0B9F  0086               	movwf	6
 17106  0BA0  3001               	movlw	1	; select bank2/3
 17107  0BA1  0087               	movwf	7
 17108  0BA2  3F40               	moviw [0]fsr1
 17109  0BA3  0020               	movlb	0	; select bank0
 17110  0BA4  00CA               	movwf	??_compensate_pressure
 17111  0BA5  3F41               	moviw [1]fsr1
 17112  0BA6  00CB               	movwf	??_compensate_pressure+1
 17113  0BA7  3F42               	moviw [2]fsr1
 17114  0BA8  00CC               	movwf	??_compensate_pressure+2
 17115  0BA9  3F43               	moviw [3]fsr1
 17116  0BAA  00CD               	movwf	??_compensate_pressure+3
 17117  0BAB  3000               	movlw	0
 17118  0BAC  00CE               	movwf	??_compensate_pressure+4
 17119  0BAD  3000               	movlw	0
 17120  0BAE  00CF               	movwf	??_compensate_pressure+5
 17121  0BAF  3010               	movlw	16
 17122  0BB0  00D0               	movwf	??_compensate_pressure+6
 17123  0BB1  3000               	movlw	0
 17124  0BB2  00D1               	movwf	??_compensate_pressure+7
 17125  0BB3  084A               	movf	??_compensate_pressure,w
 17126  0BB4  02CE               	subwf	??_compensate_pressure+4,f
 17127  0BB5  084B               	movf	??_compensate_pressure+1,w
 17128  0BB6  3BCF               	subwfb	??_compensate_pressure+5,f
 17129  0BB7  084C               	movf	??_compensate_pressure+2,w
 17130  0BB8  3BD0               	subwfb	??_compensate_pressure+6,f
 17131  0BB9  084D               	movf	??_compensate_pressure+3,w
 17132  0BBA  3BD1               	subwfb	??_compensate_pressure+7,f
 17133  0BBB  084E               	movf	??_compensate_pressure+4,w
 17134  0BBC  00D2               	movwf	??_compensate_pressure+8
 17135  0BBD  084F               	movf	??_compensate_pressure+5,w
 17136  0BBE  00D3               	movwf	??_compensate_pressure+9
 17137  0BBF  0850               	movf	??_compensate_pressure+6,w
 17138  0BC0  00D4               	movwf	??_compensate_pressure+10
 17139  0BC1  0851               	movf	??_compensate_pressure+7,w
 17140  0BC2  00D5               	movwf	??_compensate_pressure+11
 17141  0BC3  01D6               	clrf	??_compensate_pressure+12
 17142  0BC4  01D7               	clrf	??_compensate_pressure+13
 17143  0BC5  01D8               	clrf	??_compensate_pressure+14
 17144  0BC6  01D9               	clrf	??_compensate_pressure+15
 17145  0BC7  0859               	movf	??_compensate_pressure+15,w
 17146  0BC8  0021               	movlb	1	; select bank1
 17147  0BC9  00DC               	movwf	(compensate_pressure@var4+7)^(0+128)
 17148  0BCA  0020               	movlb	0	; select bank0
 17149  0BCB  0858               	movf	??_compensate_pressure+14,w
 17150  0BCC  0021               	movlb	1	; select bank1
 17151  0BCD  00DB               	movwf	(compensate_pressure@var4+6)^(0+128)
 17152  0BCE  0020               	movlb	0	; select bank0
 17153  0BCF  0857               	movf	??_compensate_pressure+13,w
 17154  0BD0  0021               	movlb	1	; select bank1
 17155  0BD1  00DA               	movwf	(compensate_pressure@var4+5)^(0+128)
 17156  0BD2  0020               	movlb	0	; select bank0
 17157  0BD3  0856               	movf	??_compensate_pressure+12,w
 17158  0BD4  0021               	movlb	1	; select bank1
 17159  0BD5  00D9               	movwf	(compensate_pressure@var4+4)^(0+128)
 17160  0BD6  0020               	movlb	0	; select bank0
 17161  0BD7  0855               	movf	??_compensate_pressure+11,w
 17162  0BD8  0021               	movlb	1	; select bank1
 17163  0BD9  00D8               	movwf	(compensate_pressure@var4+3)^(0+128)
 17164  0BDA  0020               	movlb	0	; select bank0
 17165  0BDB  0854               	movf	??_compensate_pressure+10,w
 17166  0BDC  0021               	movlb	1	; select bank1
 17167  0BDD  00D7               	movwf	(compensate_pressure@var4+2)^(0+128)
 17168  0BDE  0020               	movlb	0	; select bank0
 17169  0BDF  0853               	movf	??_compensate_pressure+9,w
 17170  0BE0  0021               	movlb	1	; select bank1
 17171  0BE1  00D6               	movwf	(compensate_pressure@var4+1)^(0+128)
 17172  0BE2  0020               	movlb	0	; select bank0
 17173  0BE3  0852               	movf	??_compensate_pressure+8,w
 17174  0BE4  0021               	movlb	1	; select bank1
 17175  0BE5  00D5               	movwf	compensate_pressure@var4^(0+128)
 17176                           
 17177                           ;BME280_driver/bme280.c: 1182:         var4 = (((var4 * 2147483648LL) - var2) * 3125) / 
      +                          var1;
 17178  0BE6  085D               	movf	compensate_pressure@var1^(0+128),w
 17179  0BE7  0020               	movlb	0	; select bank0
 17180  0BE8  00B0               	movwf	___aodiv@divisor
 17181  0BE9  0021               	movlb	1	; select bank1
 17182  0BEA  085E               	movf	(compensate_pressure@var1+1)^(0+128),w
 17183  0BEB  0020               	movlb	0	; select bank0
 17184  0BEC  00B1               	movwf	___aodiv@divisor+1
 17185  0BED  0021               	movlb	1	; select bank1
 17186  0BEE  085F               	movf	(compensate_pressure@var1+2)^(0+128),w
 17187  0BEF  0020               	movlb	0	; select bank0
 17188  0BF0  00B2               	movwf	___aodiv@divisor+2
 17189  0BF1  0021               	movlb	1	; select bank1
 17190  0BF2  0860               	movf	(compensate_pressure@var1+3)^(0+128),w
 17191  0BF3  0020               	movlb	0	; select bank0
 17192  0BF4  00B3               	movwf	___aodiv@divisor+3
 17193  0BF5  0021               	movlb	1	; select bank1
 17194  0BF6  0861               	movf	(compensate_pressure@var1+4)^(0+128),w
 17195  0BF7  0020               	movlb	0	; select bank0
 17196  0BF8  00B4               	movwf	___aodiv@divisor+4
 17197  0BF9  0021               	movlb	1	; select bank1
 17198  0BFA  0862               	movf	(compensate_pressure@var1+5)^(0+128),w
 17199  0BFB  0020               	movlb	0	; select bank0
 17200  0BFC  00B5               	movwf	___aodiv@divisor+5
 17201  0BFD  0021               	movlb	1	; select bank1
 17202  0BFE  0863               	movf	(compensate_pressure@var1+6)^(0+128),w
 17203  0BFF  0020               	movlb	0	; select bank0
 17204  0C00  00B6               	movwf	___aodiv@divisor+6
 17205  0C01  0021               	movlb	1	; select bank1
 17206  0C02  0864               	movf	(compensate_pressure@var1+7)^(0+128),w
 17207  0C03  0020               	movlb	0	; select bank0
 17208  0C04  00B7               	movwf	___aodiv@divisor+7
 17209  0C05  30D5               	movlw	low compensate_pressure@var4
 17210  0C06  0086               	movwf	6
 17211  0C07  3000               	movlw	high compensate_pressure@var4
 17212  0C08  0087               	movwf	7
 17213  0C09  3F40               	moviw [0]fsr1
 17214  0C0A  00CA               	movwf	??_compensate_pressure
 17215  0C0B  3F41               	moviw [1]fsr1
 17216  0C0C  00CB               	movwf	??_compensate_pressure+1
 17217  0C0D  3F42               	moviw [2]fsr1
 17218  0C0E  00CC               	movwf	??_compensate_pressure+2
 17219  0C0F  3F43               	moviw [3]fsr1
 17220  0C10  00CD               	movwf	??_compensate_pressure+3
 17221  0C11  3F44               	moviw [4]fsr1
 17222  0C12  00CE               	movwf	??_compensate_pressure+4
 17223  0C13  3F45               	moviw [5]fsr1
 17224  0C14  00CF               	movwf	??_compensate_pressure+5
 17225  0C15  3F46               	moviw [6]fsr1
 17226  0C16  00D0               	movwf	??_compensate_pressure+6
 17227  0C17  3F47               	moviw [7]fsr1
 17228  0C18  00D1               	movwf	??_compensate_pressure+7
 17229  0C19  301F               	movlw	31
 17230  0C1A                     u4585:	
 17231  0C1A  0020               	movlb	0	; select bank0
 17232  0C1B  35CA               	lslf	??_compensate_pressure,f
 17233  0C1C  0DCB               	rlf	??_compensate_pressure+1,f
 17234  0C1D  0DCC               	rlf	??_compensate_pressure+2,f
 17235  0C1E  0DCD               	rlf	??_compensate_pressure+3,f
 17236  0C1F  0DCE               	rlf	??_compensate_pressure+4,f
 17237  0C20  0DCF               	rlf	??_compensate_pressure+5,f
 17238  0C21  0DD0               	rlf	??_compensate_pressure+6,f
 17239  0C22  0DD1               	rlf	??_compensate_pressure+7,f
 17240  0C23  0B89               	decfsz	9,f
 17241  0C24  2C1A               	goto	u4585
 17242  0C25  0021               	movlb	1	; select bank1
 17243  0C26  084D               	movf	compensate_pressure@var2^(0+128),w
 17244  0C27  0020               	movlb	0	; select bank0
 17245  0C28  02CA               	subwf	??_compensate_pressure,f
 17246  0C29  0021               	movlb	1	; select bank1
 17247  0C2A  084E               	movf	(compensate_pressure@var2+1)^(0+128),w
 17248  0C2B  0020               	movlb	0	; select bank0
 17249  0C2C  3BCB               	subwfb	??_compensate_pressure+1,f
 17250  0C2D  0021               	movlb	1	; select bank1
 17251  0C2E  084F               	movf	(compensate_pressure@var2+2)^(0+128),w
 17252  0C2F  0020               	movlb	0	; select bank0
 17253  0C30  3BCC               	subwfb	??_compensate_pressure+2,f
 17254  0C31  0021               	movlb	1	; select bank1
 17255  0C32  0850               	movf	(compensate_pressure@var2+3)^(0+128),w
 17256  0C33  0020               	movlb	0	; select bank0
 17257  0C34  3BCD               	subwfb	??_compensate_pressure+3,f
 17258  0C35  0021               	movlb	1	; select bank1
 17259  0C36  0851               	movf	(compensate_pressure@var2+4)^(0+128),w
 17260  0C37  0020               	movlb	0	; select bank0
 17261  0C38  3BCE               	subwfb	??_compensate_pressure+4,f
 17262  0C39  0021               	movlb	1	; select bank1
 17263  0C3A  0852               	movf	(compensate_pressure@var2+5)^(0+128),w
 17264  0C3B  0020               	movlb	0	; select bank0
 17265  0C3C  3BCF               	subwfb	??_compensate_pressure+5,f
 17266  0C3D  0021               	movlb	1	; select bank1
 17267  0C3E  0853               	movf	(compensate_pressure@var2+6)^(0+128),w
 17268  0C3F  0020               	movlb	0	; select bank0
 17269  0C40  3BD0               	subwfb	??_compensate_pressure+6,f
 17270  0C41  0021               	movlb	1	; select bank1
 17271  0C42  0854               	movf	(compensate_pressure@var2+7)^(0+128),w
 17272  0C43  0020               	movlb	0	; select bank0
 17273  0C44  3BD1               	subwfb	??_compensate_pressure+7,f
 17274  0C45  0851               	movf	??_compensate_pressure+7,w
 17275  0C46  00A7               	movwf	___omul@multiplier+7
 17276  0C47  0850               	movf	??_compensate_pressure+6,w
 17277  0C48  00A6               	movwf	___omul@multiplier+6
 17278  0C49  084F               	movf	??_compensate_pressure+5,w
 17279  0C4A  00A5               	movwf	___omul@multiplier+5
 17280  0C4B  084E               	movf	??_compensate_pressure+4,w
 17281  0C4C  00A4               	movwf	___omul@multiplier+4
 17282  0C4D  084D               	movf	??_compensate_pressure+3,w
 17283  0C4E  00A3               	movwf	___omul@multiplier+3
 17284  0C4F  084C               	movf	??_compensate_pressure+2,w
 17285  0C50  00A2               	movwf	___omul@multiplier+2
 17286  0C51  084B               	movf	??_compensate_pressure+1,w
 17287  0C52  00A1               	movwf	___omul@multiplier+1
 17288  0C53  084A               	movf	??_compensate_pressure,w
 17289  0C54  00A0               	movwf	___omul@multiplier
 17290  0C55  3000               	movlw	0
 17291  0C56  00AF               	movwf	___omul@multiplicand+7
 17292  0C57  3000               	movlw	0
 17293  0C58  00AE               	movwf	___omul@multiplicand+6
 17294  0C59  3000               	movlw	0
 17295  0C5A  00AD               	movwf	___omul@multiplicand+5
 17296  0C5B  3000               	movlw	0
 17297  0C5C  00AC               	movwf	___omul@multiplicand+4
 17298  0C5D  3000               	movlw	0
 17299  0C5E  00AB               	movwf	___omul@multiplicand+3
 17300  0C5F  3000               	movlw	0
 17301  0C60  00AA               	movwf	___omul@multiplicand+2
 17302  0C61  300C               	movlw	12
 17303  0C62  00A9               	movwf	___omul@multiplicand+1
 17304  0C63  3035               	movlw	53
 17305  0C64  00A8               	movwf	___omul@multiplicand
 17306  0C65  319E  2638  3188   	fcall	___omul
 17307  0C68  0820               	movf	?___omul,w
 17308  0C69  00B8               	movwf	___aodiv@dividend
 17309  0C6A  0821               	movf	?___omul+1,w
 17310  0C6B  00B9               	movwf	___aodiv@dividend+1
 17311  0C6C  0822               	movf	?___omul+2,w
 17312  0C6D  00BA               	movwf	___aodiv@dividend+2
 17313  0C6E  0823               	movf	?___omul+3,w
 17314  0C6F  00BB               	movwf	___aodiv@dividend+3
 17315  0C70  0824               	movf	?___omul+4,w
 17316  0C71  00BC               	movwf	___aodiv@dividend+4
 17317  0C72  0825               	movf	?___omul+5,w
 17318  0C73  00BD               	movwf	___aodiv@dividend+5
 17319  0C74  0826               	movf	?___omul+6,w
 17320  0C75  00BE               	movwf	___aodiv@dividend+6
 17321  0C76  0827               	movf	?___omul+7,w
 17322  0C77  00BF               	movwf	___aodiv@dividend+7
 17323  0C78  3184  24F7  3188   	fcall	___aodiv
 17324  0C7B  0830               	movf	?___aodiv,w
 17325  0C7C  0021               	movlb	1	; select bank1
 17326  0C7D  00D5               	movwf	compensate_pressure@var4^(0+128)
 17327  0C7E  0020               	movlb	0	; select bank0
 17328  0C7F  0831               	movf	?___aodiv+1,w
 17329  0C80  0021               	movlb	1	; select bank1
 17330  0C81  00D6               	movwf	(compensate_pressure@var4+1)^(0+128)
 17331  0C82  0020               	movlb	0	; select bank0
 17332  0C83  0832               	movf	?___aodiv+2,w
 17333  0C84  0021               	movlb	1	; select bank1
 17334  0C85  00D7               	movwf	(compensate_pressure@var4+2)^(0+128)
 17335  0C86  0020               	movlb	0	; select bank0
 17336  0C87  0833               	movf	?___aodiv+3,w
 17337  0C88  0021               	movlb	1	; select bank1
 17338  0C89  00D8               	movwf	(compensate_pressure@var4+3)^(0+128)
 17339  0C8A  0020               	movlb	0	; select bank0
 17340  0C8B  0834               	movf	?___aodiv+4,w
 17341  0C8C  0021               	movlb	1	; select bank1
 17342  0C8D  00D9               	movwf	(compensate_pressure@var4+4)^(0+128)
 17343  0C8E  0020               	movlb	0	; select bank0
 17344  0C8F  0835               	movf	?___aodiv+5,w
 17345  0C90  0021               	movlb	1	; select bank1
 17346  0C91  00DA               	movwf	(compensate_pressure@var4+5)^(0+128)
 17347  0C92  0020               	movlb	0	; select bank0
 17348  0C93  0836               	movf	?___aodiv+6,w
 17349  0C94  0021               	movlb	1	; select bank1
 17350  0C95  00DB               	movwf	(compensate_pressure@var4+6)^(0+128)
 17351  0C96  0020               	movlb	0	; select bank0
 17352  0C97  0837               	movf	?___aodiv+7,w
 17353  0C98  0021               	movlb	1	; select bank1
 17354  0C99  00DC               	movwf	(compensate_pressure@var4+7)^(0+128)
 17355                           
 17356                           ;BME280_driver/bme280.c: 1183:         var1 = (((int64_t)calib_data->dig_P9) * (var4 / 8
      +                          192) * (var4 / 8192)) / 33554432;
 17357  0C9A  087A               	movf	compensate_pressure@calib_data,w
 17358  0C9B  3E16               	addlw	22
 17359  0C9C  0086               	movwf	6
 17360  0C9D  3001               	movlw	1	; select bank2/3
 17361  0C9E  0087               	movwf	7
 17362  0C9F  3F40               	moviw [0]fsr1
 17363  0CA0  0020               	movlb	0	; select bank0
 17364  0CA1  00CA               	movwf	??_compensate_pressure
 17365  0CA2  3F41               	moviw [1]fsr1
 17366  0CA3  00CB               	movwf	??_compensate_pressure+1
 17367  0CA4  084A               	movf	??_compensate_pressure,w
 17368  0CA5  00A0               	movwf	___omul@multiplier
 17369  0CA6  084B               	movf	??_compensate_pressure+1,w
 17370  0CA7  00A1               	movwf	___omul@multiplier+1
 17371  0CA8  0D89               	rlf	9,f
 17372  0CA9  3B89               	subwfb	9,f
 17373  0CAA  0989               	comf	9,f
 17374  0CAB  00A2               	movwf	___omul@multiplier+2
 17375  0CAC  00A3               	movwf	___omul@multiplier+3
 17376  0CAD  00A4               	movwf	___omul@multiplier+4
 17377  0CAE  00A5               	movwf	___omul@multiplier+5
 17378  0CAF  00A6               	movwf	___omul@multiplier+6
 17379  0CB0  00A7               	movwf	___omul@multiplier+7
 17380  0CB1  3000               	movlw	0
 17381  0CB2  00B7               	movwf	___aodiv@divisor+7
 17382  0CB3  3000               	movlw	0
 17383  0CB4  00B6               	movwf	___aodiv@divisor+6
 17384  0CB5  3000               	movlw	0
 17385  0CB6  00B5               	movwf	___aodiv@divisor+5
 17386  0CB7  3000               	movlw	0
 17387  0CB8  00B4               	movwf	___aodiv@divisor+4
 17388  0CB9  3000               	movlw	0
 17389  0CBA  00B3               	movwf	___aodiv@divisor+3
 17390  0CBB  3000               	movlw	0
 17391  0CBC  00B2               	movwf	___aodiv@divisor+2
 17392  0CBD  3020               	movlw	32
 17393  0CBE  00B1               	movwf	___aodiv@divisor+1
 17394  0CBF  3000               	movlw	0
 17395  0CC0  00B0               	movwf	___aodiv@divisor
 17396  0CC1  0021               	movlb	1	; select bank1
 17397  0CC2  0855               	movf	compensate_pressure@var4^(0+128),w
 17398  0CC3  0020               	movlb	0	; select bank0
 17399  0CC4  00B8               	movwf	___aodiv@dividend
 17400  0CC5  0021               	movlb	1	; select bank1
 17401  0CC6  0856               	movf	(compensate_pressure@var4+1)^(0+128),w
 17402  0CC7  0020               	movlb	0	; select bank0
 17403  0CC8  00B9               	movwf	___aodiv@dividend+1
 17404  0CC9  0021               	movlb	1	; select bank1
 17405  0CCA  0857               	movf	(compensate_pressure@var4+2)^(0+128),w
 17406  0CCB  0020               	movlb	0	; select bank0
 17407  0CCC  00BA               	movwf	___aodiv@dividend+2
 17408  0CCD  0021               	movlb	1	; select bank1
 17409  0CCE  0858               	movf	(compensate_pressure@var4+3)^(0+128),w
 17410  0CCF  0020               	movlb	0	; select bank0
 17411  0CD0  00BB               	movwf	___aodiv@dividend+3
 17412  0CD1  0021               	movlb	1	; select bank1
 17413  0CD2  0859               	movf	(compensate_pressure@var4+4)^(0+128),w
 17414  0CD3  0020               	movlb	0	; select bank0
 17415  0CD4  00BC               	movwf	___aodiv@dividend+4
 17416  0CD5  0021               	movlb	1	; select bank1
 17417  0CD6  085A               	movf	(compensate_pressure@var4+5)^(0+128),w
 17418  0CD7  0020               	movlb	0	; select bank0
 17419  0CD8  00BD               	movwf	___aodiv@dividend+5
 17420  0CD9  0021               	movlb	1	; select bank1
 17421  0CDA  085B               	movf	(compensate_pressure@var4+6)^(0+128),w
 17422  0CDB  0020               	movlb	0	; select bank0
 17423  0CDC  00BE               	movwf	___aodiv@dividend+6
 17424  0CDD  0021               	movlb	1	; select bank1
 17425  0CDE  085C               	movf	(compensate_pressure@var4+7)^(0+128),w
 17426  0CDF  0020               	movlb	0	; select bank0
 17427  0CE0  00BF               	movwf	___aodiv@dividend+7
 17428  0CE1  3184  24F7  3188   	fcall	___aodiv
 17429  0CE4  0830               	movf	?___aodiv,w
 17430  0CE5  00A8               	movwf	___omul@multiplicand
 17431  0CE6  0831               	movf	?___aodiv+1,w
 17432  0CE7  00A9               	movwf	___omul@multiplicand+1
 17433  0CE8  0832               	movf	?___aodiv+2,w
 17434  0CE9  00AA               	movwf	___omul@multiplicand+2
 17435  0CEA  0833               	movf	?___aodiv+3,w
 17436  0CEB  00AB               	movwf	___omul@multiplicand+3
 17437  0CEC  0834               	movf	?___aodiv+4,w
 17438  0CED  00AC               	movwf	___omul@multiplicand+4
 17439  0CEE  0835               	movf	?___aodiv+5,w
 17440  0CEF  00AD               	movwf	___omul@multiplicand+5
 17441  0CF0  0836               	movf	?___aodiv+6,w
 17442  0CF1  00AE               	movwf	___omul@multiplicand+6
 17443  0CF2  0837               	movf	?___aodiv+7,w
 17444  0CF3  00AF               	movwf	___omul@multiplicand+7
 17445  0CF4  319E  2638  3188   	fcall	___omul
 17446  0CF7  0820               	movf	?___omul,w
 17447  0CF8  0021               	movlb	1	; select bank1
 17448  0CF9  00C1               	movwf	_compensate_pressure$2352^(0+128)
 17449  0CFA  0020               	movlb	0	; select bank0
 17450  0CFB  0821               	movf	?___omul+1,w
 17451  0CFC  0021               	movlb	1	; select bank1
 17452  0CFD  00C2               	movwf	(_compensate_pressure$2352+1)^(0+128)
 17453  0CFE  0020               	movlb	0	; select bank0
 17454  0CFF  0822               	movf	?___omul+2,w
 17455  0D00  0021               	movlb	1	; select bank1
 17456  0D01  00C3               	movwf	(_compensate_pressure$2352+2)^(0+128)
 17457  0D02  0020               	movlb	0	; select bank0
 17458  0D03  0823               	movf	?___omul+3,w
 17459  0D04  0021               	movlb	1	; select bank1
 17460  0D05  00C4               	movwf	(_compensate_pressure$2352+3)^(0+128)
 17461  0D06  0020               	movlb	0	; select bank0
 17462  0D07  0824               	movf	?___omul+4,w
 17463  0D08  0021               	movlb	1	; select bank1
 17464  0D09  00C5               	movwf	(_compensate_pressure$2352+4)^(0+128)
 17465  0D0A  0020               	movlb	0	; select bank0
 17466  0D0B  0825               	movf	?___omul+5,w
 17467  0D0C  0021               	movlb	1	; select bank1
 17468  0D0D  00C6               	movwf	(_compensate_pressure$2352+5)^(0+128)
 17469  0D0E  0020               	movlb	0	; select bank0
 17470  0D0F  0826               	movf	?___omul+6,w
 17471  0D10  0021               	movlb	1	; select bank1
 17472  0D11  00C7               	movwf	(_compensate_pressure$2352+6)^(0+128)
 17473  0D12  0020               	movlb	0	; select bank0
 17474  0D13  0827               	movf	?___omul+7,w
 17475  0D14  0021               	movlb	1	; select bank1
 17476  0D15  00C8               	movwf	(_compensate_pressure$2352+7)^(0+128)
 17477                           
 17478                           ;BME280_driver/bme280.c: 1183:         var1 = (((int64_t)calib_data->dig_P9) * (var4 / 8
      +                          192) * (var4 / 8192)) / 33554432;
 17479  0D16  0841               	movf	_compensate_pressure$2352^(0+128),w
 17480  0D17  0020               	movlb	0	; select bank0
 17481  0D18  00A0               	movwf	___omul@multiplier
 17482  0D19  0021               	movlb	1	; select bank1
 17483  0D1A  0842               	movf	(_compensate_pressure$2352+1)^(0+128),w
 17484  0D1B  0020               	movlb	0	; select bank0
 17485  0D1C  00A1               	movwf	___omul@multiplier+1
 17486  0D1D  0021               	movlb	1	; select bank1
 17487  0D1E  0843               	movf	(_compensate_pressure$2352+2)^(0+128),w
 17488  0D1F  0020               	movlb	0	; select bank0
 17489  0D20  00A2               	movwf	___omul@multiplier+2
 17490  0D21  0021               	movlb	1	; select bank1
 17491  0D22  0844               	movf	(_compensate_pressure$2352+3)^(0+128),w
 17492  0D23  0020               	movlb	0	; select bank0
 17493  0D24  00A3               	movwf	___omul@multiplier+3
 17494  0D25  0021               	movlb	1	; select bank1
 17495  0D26  0845               	movf	(_compensate_pressure$2352+4)^(0+128),w
 17496  0D27  0020               	movlb	0	; select bank0
 17497  0D28  00A4               	movwf	___omul@multiplier+4
 17498  0D29  0021               	movlb	1	; select bank1
 17499  0D2A  0846               	movf	(_compensate_pressure$2352+5)^(0+128),w
 17500  0D2B  0020               	movlb	0	; select bank0
 17501  0D2C  00A5               	movwf	___omul@multiplier+5
 17502  0D2D  0021               	movlb	1	; select bank1
 17503  0D2E  0847               	movf	(_compensate_pressure$2352+6)^(0+128),w
 17504  0D2F  0020               	movlb	0	; select bank0
 17505  0D30  00A6               	movwf	___omul@multiplier+6
 17506  0D31  0021               	movlb	1	; select bank1
 17507  0D32  0848               	movf	(_compensate_pressure$2352+7)^(0+128),w
 17508  0D33  0020               	movlb	0	; select bank0
 17509  0D34  00A7               	movwf	___omul@multiplier+7
 17510  0D35  3000               	movlw	0
 17511  0D36  00B7               	movwf	___aodiv@divisor+7
 17512  0D37  3000               	movlw	0
 17513  0D38  00B6               	movwf	___aodiv@divisor+6
 17514  0D39  3000               	movlw	0
 17515  0D3A  00B5               	movwf	___aodiv@divisor+5
 17516  0D3B  3000               	movlw	0
 17517  0D3C  00B4               	movwf	___aodiv@divisor+4
 17518  0D3D  3000               	movlw	0
 17519  0D3E  00B3               	movwf	___aodiv@divisor+3
 17520  0D3F  3000               	movlw	0
 17521  0D40  00B2               	movwf	___aodiv@divisor+2
 17522  0D41  3020               	movlw	32
 17523  0D42  00B1               	movwf	___aodiv@divisor+1
 17524  0D43  3000               	movlw	0
 17525  0D44  00B0               	movwf	___aodiv@divisor
 17526  0D45  0021               	movlb	1	; select bank1
 17527  0D46  0855               	movf	compensate_pressure@var4^(0+128),w
 17528  0D47  0020               	movlb	0	; select bank0
 17529  0D48  00B8               	movwf	___aodiv@dividend
 17530  0D49  0021               	movlb	1	; select bank1
 17531  0D4A  0856               	movf	(compensate_pressure@var4+1)^(0+128),w
 17532  0D4B  0020               	movlb	0	; select bank0
 17533  0D4C  00B9               	movwf	___aodiv@dividend+1
 17534  0D4D  0021               	movlb	1	; select bank1
 17535  0D4E  0857               	movf	(compensate_pressure@var4+2)^(0+128),w
 17536  0D4F  0020               	movlb	0	; select bank0
 17537  0D50  00BA               	movwf	___aodiv@dividend+2
 17538  0D51  0021               	movlb	1	; select bank1
 17539  0D52  0858               	movf	(compensate_pressure@var4+3)^(0+128),w
 17540  0D53  0020               	movlb	0	; select bank0
 17541  0D54  00BB               	movwf	___aodiv@dividend+3
 17542  0D55  0021               	movlb	1	; select bank1
 17543  0D56  0859               	movf	(compensate_pressure@var4+4)^(0+128),w
 17544  0D57  0020               	movlb	0	; select bank0
 17545  0D58  00BC               	movwf	___aodiv@dividend+4
 17546  0D59  0021               	movlb	1	; select bank1
 17547  0D5A  085A               	movf	(compensate_pressure@var4+5)^(0+128),w
 17548  0D5B  0020               	movlb	0	; select bank0
 17549  0D5C  00BD               	movwf	___aodiv@dividend+5
 17550  0D5D  0021               	movlb	1	; select bank1
 17551  0D5E  085B               	movf	(compensate_pressure@var4+6)^(0+128),w
 17552  0D5F  0020               	movlb	0	; select bank0
 17553  0D60  00BE               	movwf	___aodiv@dividend+6
 17554  0D61  0021               	movlb	1	; select bank1
 17555  0D62  085C               	movf	(compensate_pressure@var4+7)^(0+128),w
 17556  0D63  0020               	movlb	0	; select bank0
 17557  0D64  00BF               	movwf	___aodiv@dividend+7
 17558  0D65  3184  24F7  3188   	fcall	___aodiv
 17559  0D68  0830               	movf	?___aodiv,w
 17560  0D69  00A8               	movwf	___omul@multiplicand
 17561  0D6A  0831               	movf	?___aodiv+1,w
 17562  0D6B  00A9               	movwf	___omul@multiplicand+1
 17563  0D6C  0832               	movf	?___aodiv+2,w
 17564  0D6D  00AA               	movwf	___omul@multiplicand+2
 17565  0D6E  0833               	movf	?___aodiv+3,w
 17566  0D6F  00AB               	movwf	___omul@multiplicand+3
 17567  0D70  0834               	movf	?___aodiv+4,w
 17568  0D71  00AC               	movwf	___omul@multiplicand+4
 17569  0D72  0835               	movf	?___aodiv+5,w
 17570  0D73  00AD               	movwf	___omul@multiplicand+5
 17571  0D74  0836               	movf	?___aodiv+6,w
 17572  0D75  00AE               	movwf	___omul@multiplicand+6
 17573  0D76  0837               	movf	?___aodiv+7,w
 17574  0D77  00AF               	movwf	___omul@multiplicand+7
 17575  0D78  319E  2638  3188   	fcall	___omul
 17576  0D7B  0820               	movf	?___omul,w
 17577  0D7C  0021               	movlb	1	; select bank1
 17578  0D7D  00A8               	movwf	_compensate_pressure$2353^(0+128)
 17579  0D7E  0020               	movlb	0	; select bank0
 17580  0D7F  0821               	movf	?___omul+1,w
 17581  0D80  0021               	movlb	1	; select bank1
 17582  0D81  00A9               	movwf	(_compensate_pressure$2353+1)^(0+128)
 17583  0D82  0020               	movlb	0	; select bank0
 17584  0D83  0822               	movf	?___omul+2,w
 17585  0D84  0021               	movlb	1	; select bank1
 17586  0D85  00AA               	movwf	(_compensate_pressure$2353+2)^(0+128)
 17587  0D86  0020               	movlb	0	; select bank0
 17588  0D87  0823               	movf	?___omul+3,w
 17589  0D88  0021               	movlb	1	; select bank1
 17590  0D89  00AB               	movwf	(_compensate_pressure$2353+3)^(0+128)
 17591  0D8A  0020               	movlb	0	; select bank0
 17592  0D8B  0824               	movf	?___omul+4,w
 17593  0D8C  0021               	movlb	1	; select bank1
 17594  0D8D  00AC               	movwf	(_compensate_pressure$2353+4)^(0+128)
 17595  0D8E  0020               	movlb	0	; select bank0
 17596  0D8F  0825               	movf	?___omul+5,w
 17597  0D90  0021               	movlb	1	; select bank1
 17598  0D91  00AD               	movwf	(_compensate_pressure$2353+5)^(0+128)
 17599  0D92  0020               	movlb	0	; select bank0
 17600  0D93  0826               	movf	?___omul+6,w
 17601  0D94  0021               	movlb	1	; select bank1
 17602  0D95  00AE               	movwf	(_compensate_pressure$2353+6)^(0+128)
 17603  0D96  0020               	movlb	0	; select bank0
 17604  0D97  0827               	movf	?___omul+7,w
 17605  0D98  0021               	movlb	1	; select bank1
 17606  0D99  00AF               	movwf	(_compensate_pressure$2353+7)^(0+128)
 17607                           
 17608                           ;BME280_driver/bme280.c: 1183:         var1 = (((int64_t)calib_data->dig_P9) * (var4 / 8
      +                          192) * (var4 / 8192)) / 33554432;
 17609  0D9A  3000               	movlw	0
 17610  0D9B  0020               	movlb	0	; select bank0
 17611  0D9C  00B7               	movwf	___aodiv@divisor+7
 17612  0D9D  3000               	movlw	0
 17613  0D9E  00B6               	movwf	___aodiv@divisor+6
 17614  0D9F  3000               	movlw	0
 17615  0DA0  00B5               	movwf	___aodiv@divisor+5
 17616  0DA1  3000               	movlw	0
 17617  0DA2  00B4               	movwf	___aodiv@divisor+4
 17618  0DA3  3002               	movlw	2
 17619  0DA4  00B3               	movwf	___aodiv@divisor+3
 17620  0DA5  3000               	movlw	0
 17621  0DA6  00B2               	movwf	___aodiv@divisor+2
 17622  0DA7  3000               	movlw	0
 17623  0DA8  00B1               	movwf	___aodiv@divisor+1
 17624  0DA9  3000               	movlw	0
 17625  0DAA  00B0               	movwf	___aodiv@divisor
 17626  0DAB  0021               	movlb	1	; select bank1
 17627  0DAC  0828               	movf	_compensate_pressure$2353^(0+128),w
 17628  0DAD  0020               	movlb	0	; select bank0
 17629  0DAE  00B8               	movwf	___aodiv@dividend
 17630  0DAF  0021               	movlb	1	; select bank1
 17631  0DB0  0829               	movf	(_compensate_pressure$2353+1)^(0+128),w
 17632  0DB1  0020               	movlb	0	; select bank0
 17633  0DB2  00B9               	movwf	___aodiv@dividend+1
 17634  0DB3  0021               	movlb	1	; select bank1
 17635  0DB4  082A               	movf	(_compensate_pressure$2353+2)^(0+128),w
 17636  0DB5  0020               	movlb	0	; select bank0
 17637  0DB6  00BA               	movwf	___aodiv@dividend+2
 17638  0DB7  0021               	movlb	1	; select bank1
 17639  0DB8  082B               	movf	(_compensate_pressure$2353+3)^(0+128),w
 17640  0DB9  0020               	movlb	0	; select bank0
 17641  0DBA  00BB               	movwf	___aodiv@dividend+3
 17642  0DBB  0021               	movlb	1	; select bank1
 17643  0DBC  082C               	movf	(_compensate_pressure$2353+4)^(0+128),w
 17644  0DBD  0020               	movlb	0	; select bank0
 17645  0DBE  00BC               	movwf	___aodiv@dividend+4
 17646  0DBF  0021               	movlb	1	; select bank1
 17647  0DC0  082D               	movf	(_compensate_pressure$2353+5)^(0+128),w
 17648  0DC1  0020               	movlb	0	; select bank0
 17649  0DC2  00BD               	movwf	___aodiv@dividend+5
 17650  0DC3  0021               	movlb	1	; select bank1
 17651  0DC4  082E               	movf	(_compensate_pressure$2353+6)^(0+128),w
 17652  0DC5  0020               	movlb	0	; select bank0
 17653  0DC6  00BE               	movwf	___aodiv@dividend+6
 17654  0DC7  0021               	movlb	1	; select bank1
 17655  0DC8  082F               	movf	(_compensate_pressure$2353+7)^(0+128),w
 17656  0DC9  0020               	movlb	0	; select bank0
 17657  0DCA  00BF               	movwf	___aodiv@dividend+7
 17658  0DCB  3184  24F7  3188   	fcall	___aodiv
 17659  0DCE  0830               	movf	?___aodiv,w
 17660  0DCF  0021               	movlb	1	; select bank1
 17661  0DD0  00DD               	movwf	compensate_pressure@var1^(0+128)
 17662  0DD1  0020               	movlb	0	; select bank0
 17663  0DD2  0831               	movf	?___aodiv+1,w
 17664  0DD3  0021               	movlb	1	; select bank1
 17665  0DD4  00DE               	movwf	(compensate_pressure@var1+1)^(0+128)
 17666  0DD5  0020               	movlb	0	; select bank0
 17667  0DD6  0832               	movf	?___aodiv+2,w
 17668  0DD7  0021               	movlb	1	; select bank1
 17669  0DD8  00DF               	movwf	(compensate_pressure@var1+2)^(0+128)
 17670  0DD9  0020               	movlb	0	; select bank0
 17671  0DDA  0833               	movf	?___aodiv+3,w
 17672  0DDB  0021               	movlb	1	; select bank1
 17673  0DDC  00E0               	movwf	(compensate_pressure@var1+3)^(0+128)
 17674  0DDD  0020               	movlb	0	; select bank0
 17675  0DDE  0834               	movf	?___aodiv+4,w
 17676  0DDF  0021               	movlb	1	; select bank1
 17677  0DE0  00E1               	movwf	(compensate_pressure@var1+4)^(0+128)
 17678  0DE1  0020               	movlb	0	; select bank0
 17679  0DE2  0835               	movf	?___aodiv+5,w
 17680  0DE3  0021               	movlb	1	; select bank1
 17681  0DE4  00E2               	movwf	(compensate_pressure@var1+5)^(0+128)
 17682  0DE5  0020               	movlb	0	; select bank0
 17683  0DE6  0836               	movf	?___aodiv+6,w
 17684  0DE7  0021               	movlb	1	; select bank1
 17685  0DE8  00E3               	movwf	(compensate_pressure@var1+6)^(0+128)
 17686  0DE9  0020               	movlb	0	; select bank0
 17687  0DEA  0837               	movf	?___aodiv+7,w
 17688  0DEB  0021               	movlb	1	; select bank1
 17689  0DEC  00E4               	movwf	(compensate_pressure@var1+7)^(0+128)
 17690                           
 17691                           ;BME280_driver/bme280.c: 1184:         var2 = (((int64_t)calib_data->dig_P8) * var4) / 5
      +                          24288;
 17692  0DED  3000               	movlw	0
 17693  0DEE  0020               	movlb	0	; select bank0
 17694  0DEF  00B7               	movwf	___aodiv@divisor+7
 17695  0DF0  3000               	movlw	0
 17696  0DF1  00B6               	movwf	___aodiv@divisor+6
 17697  0DF2  3000               	movlw	0
 17698  0DF3  00B5               	movwf	___aodiv@divisor+5
 17699  0DF4  3000               	movlw	0
 17700  0DF5  00B4               	movwf	___aodiv@divisor+4
 17701  0DF6  3000               	movlw	0
 17702  0DF7  00B3               	movwf	___aodiv@divisor+3
 17703  0DF8  3008               	movlw	8
 17704  0DF9  00B2               	movwf	___aodiv@divisor+2
 17705  0DFA  3000               	movlw	0
 17706  0DFB  00B1               	movwf	___aodiv@divisor+1
 17707  0DFC  3000               	movlw	0
 17708  0DFD  00B0               	movwf	___aodiv@divisor
 17709  0DFE  087A               	movf	compensate_pressure@calib_data,w
 17710  0DFF  3E14               	addlw	20
 17711  0E00  0086               	movwf	6
 17712  0E01  3001               	movlw	1	; select bank2/3
 17713  0E02  0087               	movwf	7
 17714  0E03  3F40               	moviw [0]fsr1
 17715  0E04  00CA               	movwf	??_compensate_pressure
 17716  0E05  3F41               	moviw [1]fsr1
 17717  0E06  00CB               	movwf	??_compensate_pressure+1
 17718  0E07  084A               	movf	??_compensate_pressure,w
 17719  0E08  00A0               	movwf	___omul@multiplier
 17720  0E09  084B               	movf	??_compensate_pressure+1,w
 17721  0E0A  00A1               	movwf	___omul@multiplier+1
 17722  0E0B  0D89               	rlf	9,f
 17723  0E0C  3B89               	subwfb	9,f
 17724  0E0D  0989               	comf	9,f
 17725  0E0E  00A2               	movwf	___omul@multiplier+2
 17726  0E0F  00A3               	movwf	___omul@multiplier+3
 17727  0E10  00A4               	movwf	___omul@multiplier+4
 17728  0E11  00A5               	movwf	___omul@multiplier+5
 17729  0E12  00A6               	movwf	___omul@multiplier+6
 17730  0E13  00A7               	movwf	___omul@multiplier+7
 17731  0E14  0021               	movlb	1	; select bank1
 17732  0E15  0855               	movf	compensate_pressure@var4^(0+128),w
 17733  0E16  0020               	movlb	0	; select bank0
 17734  0E17  00A8               	movwf	___omul@multiplicand
 17735  0E18  0021               	movlb	1	; select bank1
 17736  0E19  0856               	movf	(compensate_pressure@var4+1)^(0+128),w
 17737  0E1A  0020               	movlb	0	; select bank0
 17738  0E1B  00A9               	movwf	___omul@multiplicand+1
 17739  0E1C  0021               	movlb	1	; select bank1
 17740  0E1D  0857               	movf	(compensate_pressure@var4+2)^(0+128),w
 17741  0E1E  0020               	movlb	0	; select bank0
 17742  0E1F  00AA               	movwf	___omul@multiplicand+2
 17743  0E20  0021               	movlb	1	; select bank1
 17744  0E21  0858               	movf	(compensate_pressure@var4+3)^(0+128),w
 17745  0E22  0020               	movlb	0	; select bank0
 17746  0E23  00AB               	movwf	___omul@multiplicand+3
 17747  0E24  0021               	movlb	1	; select bank1
 17748  0E25  0859               	movf	(compensate_pressure@var4+4)^(0+128),w
 17749  0E26  0020               	movlb	0	; select bank0
 17750  0E27  00AC               	movwf	___omul@multiplicand+4
 17751  0E28  0021               	movlb	1	; select bank1
 17752  0E29  085A               	movf	(compensate_pressure@var4+5)^(0+128),w
 17753  0E2A  0020               	movlb	0	; select bank0
 17754  0E2B  00AD               	movwf	___omul@multiplicand+5
 17755  0E2C  0021               	movlb	1	; select bank1
 17756  0E2D  085B               	movf	(compensate_pressure@var4+6)^(0+128),w
 17757  0E2E  0020               	movlb	0	; select bank0
 17758  0E2F  00AE               	movwf	___omul@multiplicand+6
 17759  0E30  0021               	movlb	1	; select bank1
 17760  0E31  085C               	movf	(compensate_pressure@var4+7)^(0+128),w
 17761  0E32  0020               	movlb	0	; select bank0
 17762  0E33  00AF               	movwf	___omul@multiplicand+7
 17763  0E34  319E  2638  3188   	fcall	___omul
 17764  0E37  0820               	movf	?___omul,w
 17765  0E38  00B8               	movwf	___aodiv@dividend
 17766  0E39  0821               	movf	?___omul+1,w
 17767  0E3A  00B9               	movwf	___aodiv@dividend+1
 17768  0E3B  0822               	movf	?___omul+2,w
 17769  0E3C  00BA               	movwf	___aodiv@dividend+2
 17770  0E3D  0823               	movf	?___omul+3,w
 17771  0E3E  00BB               	movwf	___aodiv@dividend+3
 17772  0E3F  0824               	movf	?___omul+4,w
 17773  0E40  00BC               	movwf	___aodiv@dividend+4
 17774  0E41  0825               	movf	?___omul+5,w
 17775  0E42  00BD               	movwf	___aodiv@dividend+5
 17776  0E43  0826               	movf	?___omul+6,w
 17777  0E44  00BE               	movwf	___aodiv@dividend+6
 17778  0E45  0827               	movf	?___omul+7,w
 17779  0E46  00BF               	movwf	___aodiv@dividend+7
 17780  0E47  3184  24F7  3188   	fcall	___aodiv
 17781  0E4A  0830               	movf	?___aodiv,w
 17782  0E4B  0021               	movlb	1	; select bank1
 17783  0E4C  00CD               	movwf	compensate_pressure@var2^(0+128)
 17784  0E4D  0020               	movlb	0	; select bank0
 17785  0E4E  0831               	movf	?___aodiv+1,w
 17786  0E4F  0021               	movlb	1	; select bank1
 17787  0E50  00CE               	movwf	(compensate_pressure@var2+1)^(0+128)
 17788  0E51  0020               	movlb	0	; select bank0
 17789  0E52  0832               	movf	?___aodiv+2,w
 17790  0E53  0021               	movlb	1	; select bank1
 17791  0E54  00CF               	movwf	(compensate_pressure@var2+2)^(0+128)
 17792  0E55  0020               	movlb	0	; select bank0
 17793  0E56  0833               	movf	?___aodiv+3,w
 17794  0E57  0021               	movlb	1	; select bank1
 17795  0E58  00D0               	movwf	(compensate_pressure@var2+3)^(0+128)
 17796  0E59  0020               	movlb	0	; select bank0
 17797  0E5A  0834               	movf	?___aodiv+4,w
 17798  0E5B  0021               	movlb	1	; select bank1
 17799  0E5C  00D1               	movwf	(compensate_pressure@var2+4)^(0+128)
 17800  0E5D  0020               	movlb	0	; select bank0
 17801  0E5E  0835               	movf	?___aodiv+5,w
 17802  0E5F  0021               	movlb	1	; select bank1
 17803  0E60  00D2               	movwf	(compensate_pressure@var2+5)^(0+128)
 17804  0E61  0020               	movlb	0	; select bank0
 17805  0E62  0836               	movf	?___aodiv+6,w
 17806  0E63  0021               	movlb	1	; select bank1
 17807  0E64  00D3               	movwf	(compensate_pressure@var2+6)^(0+128)
 17808  0E65  0020               	movlb	0	; select bank0
 17809  0E66  0837               	movf	?___aodiv+7,w
 17810  0E67  0021               	movlb	1	; select bank1
 17811  0E68  00D4               	movwf	(compensate_pressure@var2+7)^(0+128)
 17812                           
 17813                           ;BME280_driver/bme280.c: 1185:         var4 = ((var4 + var1 + var2) / 256) + (((int64_t)
      +                          calib_data->dig_P7) * 16);
 17814  0E69  087A               	movf	compensate_pressure@calib_data,w
 17815  0E6A  3E12               	addlw	18
 17816  0E6B  0086               	movwf	6
 17817  0E6C  3001               	movlw	1	; select bank2/3
 17818  0E6D  0087               	movwf	7
 17819  0E6E  3F40               	moviw [0]fsr1
 17820  0E6F  0020               	movlb	0	; select bank0
 17821  0E70  00CA               	movwf	??_compensate_pressure
 17822  0E71  3F41               	moviw [1]fsr1
 17823  0E72  00CB               	movwf	??_compensate_pressure+1
 17824  0E73  084A               	movf	??_compensate_pressure,w
 17825  0E74  00CC               	movwf	??_compensate_pressure+2
 17826  0E75  084B               	movf	??_compensate_pressure+1,w
 17827  0E76  00CD               	movwf	??_compensate_pressure+3
 17828  0E77  3000               	movlw	0
 17829  0E78  1BCD               	btfsc	??_compensate_pressure+3,7
 17830  0E79  30FF               	movlw	255
 17831  0E7A  00CE               	movwf	??_compensate_pressure+4
 17832  0E7B  00CF               	movwf	??_compensate_pressure+5
 17833  0E7C  00D0               	movwf	??_compensate_pressure+6
 17834  0E7D  00D1               	movwf	??_compensate_pressure+7
 17835  0E7E  00D2               	movwf	??_compensate_pressure+8
 17836  0E7F  00D3               	movwf	??_compensate_pressure+9
 17837  0E80  3004               	movlw	4
 17838  0E81                     u4595:	
 17839  0E81  0020               	movlb	0	; select bank0
 17840  0E82  35CC               	lslf	??_compensate_pressure+2,f
 17841  0E83  0DCD               	rlf	??_compensate_pressure+3,f
 17842  0E84  0DCE               	rlf	??_compensate_pressure+4,f
 17843  0E85  0DCF               	rlf	??_compensate_pressure+5,f
 17844  0E86  0DD0               	rlf	??_compensate_pressure+6,f
 17845  0E87  0DD1               	rlf	??_compensate_pressure+7,f
 17846  0E88  0DD2               	rlf	??_compensate_pressure+8,f
 17847  0E89  0DD3               	rlf	??_compensate_pressure+9,f
 17848  0E8A  0B89               	decfsz	9,f
 17849  0E8B  2E81               	goto	u4595
 17850  0E8C  3000               	movlw	0
 17851  0E8D  0020               	movlb	0	; select bank0
 17852  0E8E  00B7               	movwf	___aodiv@divisor+7
 17853  0E8F  3000               	movlw	0
 17854  0E90  00B6               	movwf	___aodiv@divisor+6
 17855  0E91  3000               	movlw	0
 17856  0E92  00B5               	movwf	___aodiv@divisor+5
 17857  0E93  3000               	movlw	0
 17858  0E94  00B4               	movwf	___aodiv@divisor+4
 17859  0E95  3000               	movlw	0
 17860  0E96  00B3               	movwf	___aodiv@divisor+3
 17861  0E97  3000               	movlw	0
 17862  0E98  00B2               	movwf	___aodiv@divisor+2
 17863  0E99  3001               	movlw	1
 17864  0E9A  00B1               	movwf	___aodiv@divisor+1
 17865  0E9B  3000               	movlw	0
 17866  0E9C  00B0               	movwf	___aodiv@divisor
 17867  0E9D  30CD               	movlw	low compensate_pressure@var2
 17868  0E9E  0086               	movwf	6
 17869  0E9F  3000               	movlw	high compensate_pressure@var2
 17870  0EA0  0087               	movwf	7
 17871  0EA1  3F40               	moviw [0]fsr1
 17872  0EA2  00D4               	movwf	??_compensate_pressure+10
 17873  0EA3  3F41               	moviw [1]fsr1
 17874  0EA4  00D5               	movwf	??_compensate_pressure+11
 17875  0EA5  3F42               	moviw [2]fsr1
 17876  0EA6  00D6               	movwf	??_compensate_pressure+12
 17877  0EA7  3F43               	moviw [3]fsr1
 17878  0EA8  00D7               	movwf	??_compensate_pressure+13
 17879  0EA9  3F44               	moviw [4]fsr1
 17880  0EAA  00D8               	movwf	??_compensate_pressure+14
 17881  0EAB  3F45               	moviw [5]fsr1
 17882  0EAC  00D9               	movwf	??_compensate_pressure+15
 17883  0EAD  3F46               	moviw [6]fsr1
 17884  0EAE  00DA               	movwf	??_compensate_pressure+16
 17885  0EAF  3F47               	moviw [7]fsr1
 17886  0EB0  00DB               	movwf	??_compensate_pressure+17
 17887  0EB1  0021               	movlb	1	; select bank1
 17888  0EB2  0855               	movf	compensate_pressure@var4^(0+128),w
 17889  0EB3  075D               	addwf	compensate_pressure@var1^(0+128),w
 17890  0EB4  0020               	movlb	0	; select bank0
 17891  0EB5  00DC               	movwf	??_compensate_pressure+18
 17892  0EB6  0021               	movlb	1	; select bank1
 17893  0EB7  0856               	movf	(compensate_pressure@var4+1)^(0+128),w
 17894  0EB8  3D5E               	addwfc	(compensate_pressure@var1+1)^(0+128),w
 17895  0EB9  0020               	movlb	0	; select bank0
 17896  0EBA  00DD               	movwf	??_compensate_pressure+19
 17897  0EBB  0021               	movlb	1	; select bank1
 17898  0EBC  0857               	movf	(compensate_pressure@var4+2)^(0+128),w
 17899  0EBD  3D5F               	addwfc	(compensate_pressure@var1+2)^(0+128),w
 17900  0EBE  0020               	movlb	0	; select bank0
 17901  0EBF  00DE               	movwf	??_compensate_pressure+20
 17902  0EC0  0021               	movlb	1	; select bank1
 17903  0EC1  0858               	movf	(compensate_pressure@var4+3)^(0+128),w
 17904  0EC2  3D60               	addwfc	(compensate_pressure@var1+3)^(0+128),w
 17905  0EC3  0020               	movlb	0	; select bank0
 17906  0EC4  00DF               	movwf	??_compensate_pressure+21
 17907  0EC5  0021               	movlb	1	; select bank1
 17908  0EC6  0859               	movf	(compensate_pressure@var4+4)^(0+128),w
 17909  0EC7  3D61               	addwfc	(compensate_pressure@var1+4)^(0+128),w
 17910  0EC8  0020               	movlb	0	; select bank0
 17911  0EC9  00E0               	movwf	??_compensate_pressure+22
 17912  0ECA  0021               	movlb	1	; select bank1
 17913  0ECB  085A               	movf	(compensate_pressure@var4+5)^(0+128),w
 17914  0ECC  3D62               	addwfc	(compensate_pressure@var1+5)^(0+128),w
 17915  0ECD  0020               	movlb	0	; select bank0
 17916  0ECE  00E1               	movwf	??_compensate_pressure+23
 17917  0ECF  0021               	movlb	1	; select bank1
 17918  0ED0  085B               	movf	(compensate_pressure@var4+6)^(0+128),w
 17919  0ED1  3D63               	addwfc	(compensate_pressure@var1+6)^(0+128),w
 17920  0ED2  0020               	movlb	0	; select bank0
 17921  0ED3  00E2               	movwf	??_compensate_pressure+24
 17922  0ED4  0021               	movlb	1	; select bank1
 17923  0ED5  085C               	movf	(compensate_pressure@var4+7)^(0+128),w
 17924  0ED6  3D64               	addwfc	(compensate_pressure@var1+7)^(0+128),w
 17925  0ED7  0020               	movlb	0	; select bank0
 17926  0ED8  00E3               	movwf	??_compensate_pressure+25
 17927  0ED9  085C               	movf	??_compensate_pressure+18,w
 17928  0EDA  07D4               	addwf	??_compensate_pressure+10,f
 17929  0EDB  085D               	movf	??_compensate_pressure+19,w
 17930  0EDC  3DD5               	addwfc	??_compensate_pressure+11,f
 17931  0EDD  085E               	movf	??_compensate_pressure+20,w
 17932  0EDE  3DD6               	addwfc	??_compensate_pressure+12,f
 17933  0EDF  085F               	movf	??_compensate_pressure+21,w
 17934  0EE0  3DD7               	addwfc	??_compensate_pressure+13,f
 17935  0EE1  0860               	movf	??_compensate_pressure+22,w
 17936  0EE2  3DD8               	addwfc	??_compensate_pressure+14,f
 17937  0EE3  0861               	movf	??_compensate_pressure+23,w
 17938  0EE4  3DD9               	addwfc	??_compensate_pressure+15,f
 17939  0EE5  0862               	movf	??_compensate_pressure+24,w
 17940  0EE6  3DDA               	addwfc	??_compensate_pressure+16,f
 17941  0EE7  0863               	movf	??_compensate_pressure+25,w
 17942  0EE8  3DDB               	addwfc	??_compensate_pressure+17,f
 17943  0EE9  085B               	movf	??_compensate_pressure+17,w
 17944  0EEA  00BF               	movwf	___aodiv@dividend+7
 17945  0EEB  085A               	movf	??_compensate_pressure+16,w
 17946  0EEC  00BE               	movwf	___aodiv@dividend+6
 17947  0EED  0859               	movf	??_compensate_pressure+15,w
 17948  0EEE  00BD               	movwf	___aodiv@dividend+5
 17949  0EEF  0858               	movf	??_compensate_pressure+14,w
 17950  0EF0  00BC               	movwf	___aodiv@dividend+4
 17951  0EF1  0857               	movf	??_compensate_pressure+13,w
 17952  0EF2  00BB               	movwf	___aodiv@dividend+3
 17953  0EF3  0856               	movf	??_compensate_pressure+12,w
 17954  0EF4  00BA               	movwf	___aodiv@dividend+2
 17955  0EF5  0855               	movf	??_compensate_pressure+11,w
 17956  0EF6  00B9               	movwf	___aodiv@dividend+1
 17957  0EF7  0854               	movf	??_compensate_pressure+10,w
 17958  0EF8  00B8               	movwf	___aodiv@dividend
 17959  0EF9  3184  24F7  3188   	fcall	___aodiv
 17960  0EFC  3030               	movlw	low ?___aodiv
 17961  0EFD  0086               	movwf	6
 17962  0EFE  3000               	movlw	high ?___aodiv
 17963  0EFF  0087               	movwf	7
 17964  0F00  3F40               	moviw [0]fsr1
 17965  0F01  07CC               	addwf	??_compensate_pressure+2,f
 17966  0F02  3F41               	moviw [1]fsr1
 17967  0F03  3DCD               	addwfc	??_compensate_pressure+3,f
 17968  0F04  3F42               	moviw [2]fsr1
 17969  0F05  3DCE               	addwfc	??_compensate_pressure+4,f
 17970  0F06  3F43               	moviw [3]fsr1
 17971  0F07  3DCF               	addwfc	??_compensate_pressure+5,f
 17972  0F08  3F44               	moviw [4]fsr1
 17973  0F09  3DD0               	addwfc	??_compensate_pressure+6,f
 17974  0F0A  3F45               	moviw [5]fsr1
 17975  0F0B  3DD1               	addwfc	??_compensate_pressure+7,f
 17976  0F0C  3F46               	moviw [6]fsr1
 17977  0F0D  3DD2               	addwfc	??_compensate_pressure+8,f
 17978  0F0E  3F47               	moviw [7]fsr1
 17979  0F0F  3DD3               	addwfc	??_compensate_pressure+9,f
 17980  0F10  0853               	movf	??_compensate_pressure+9,w
 17981  0F11  0021               	movlb	1	; select bank1
 17982  0F12  00DC               	movwf	(compensate_pressure@var4+7)^(0+128)
 17983  0F13  0020               	movlb	0	; select bank0
 17984  0F14  0852               	movf	??_compensate_pressure+8,w
 17985  0F15  0021               	movlb	1	; select bank1
 17986  0F16  00DB               	movwf	(compensate_pressure@var4+6)^(0+128)
 17987  0F17  0020               	movlb	0	; select bank0
 17988  0F18  0851               	movf	??_compensate_pressure+7,w
 17989  0F19  0021               	movlb	1	; select bank1
 17990  0F1A  00DA               	movwf	(compensate_pressure@var4+5)^(0+128)
 17991  0F1B  0020               	movlb	0	; select bank0
 17992  0F1C  0850               	movf	??_compensate_pressure+6,w
 17993  0F1D  0021               	movlb	1	; select bank1
 17994  0F1E  00D9               	movwf	(compensate_pressure@var4+4)^(0+128)
 17995  0F1F  0020               	movlb	0	; select bank0
 17996  0F20  084F               	movf	??_compensate_pressure+5,w
 17997  0F21  0021               	movlb	1	; select bank1
 17998  0F22  00D8               	movwf	(compensate_pressure@var4+3)^(0+128)
 17999  0F23  0020               	movlb	0	; select bank0
 18000  0F24  084E               	movf	??_compensate_pressure+4,w
 18001  0F25  0021               	movlb	1	; select bank1
 18002  0F26  00D7               	movwf	(compensate_pressure@var4+2)^(0+128)
 18003  0F27  0020               	movlb	0	; select bank0
 18004  0F28  084D               	movf	??_compensate_pressure+3,w
 18005  0F29  0021               	movlb	1	; select bank1
 18006  0F2A  00D6               	movwf	(compensate_pressure@var4+1)^(0+128)
 18007  0F2B  0020               	movlb	0	; select bank0
 18008  0F2C  084C               	movf	??_compensate_pressure+2,w
 18009  0F2D  0021               	movlb	1	; select bank1
 18010  0F2E  00D5               	movwf	compensate_pressure@var4^(0+128)
 18011                           
 18012                           ;BME280_driver/bme280.c: 1186:         pressure = (uint32_t)(((var4 / 2) * 100) / 128);
 18013  0F2F  3002               	movlw	2
 18014  0F30  0020               	movlb	0	; select bank0
 18015  0F31  00B0               	movwf	___aodiv@divisor
 18016  0F32  01B1               	clrf	___aodiv@divisor+1
 18017  0F33  01B2               	clrf	___aodiv@divisor+2
 18018  0F34  01B3               	clrf	___aodiv@divisor+3
 18019  0F35  01B4               	clrf	___aodiv@divisor+4
 18020  0F36  01B5               	clrf	___aodiv@divisor+5
 18021  0F37  01B6               	clrf	___aodiv@divisor+6
 18022  0F38  01B7               	clrf	___aodiv@divisor+7
 18023  0F39  0021               	movlb	1	; select bank1
 18024  0F3A  0855               	movf	compensate_pressure@var4^(0+128),w
 18025  0F3B  0020               	movlb	0	; select bank0
 18026  0F3C  00B8               	movwf	___aodiv@dividend
 18027  0F3D  0021               	movlb	1	; select bank1
 18028  0F3E  0856               	movf	(compensate_pressure@var4+1)^(0+128),w
 18029  0F3F  0020               	movlb	0	; select bank0
 18030  0F40  00B9               	movwf	___aodiv@dividend+1
 18031  0F41  0021               	movlb	1	; select bank1
 18032  0F42  0857               	movf	(compensate_pressure@var4+2)^(0+128),w
 18033  0F43  0020               	movlb	0	; select bank0
 18034  0F44  00BA               	movwf	___aodiv@dividend+2
 18035  0F45  0021               	movlb	1	; select bank1
 18036  0F46  0858               	movf	(compensate_pressure@var4+3)^(0+128),w
 18037  0F47  0020               	movlb	0	; select bank0
 18038  0F48  00BB               	movwf	___aodiv@dividend+3
 18039  0F49  0021               	movlb	1	; select bank1
 18040  0F4A  0859               	movf	(compensate_pressure@var4+4)^(0+128),w
 18041  0F4B  0020               	movlb	0	; select bank0
 18042  0F4C  00BC               	movwf	___aodiv@dividend+4
 18043  0F4D  0021               	movlb	1	; select bank1
 18044  0F4E  085A               	movf	(compensate_pressure@var4+5)^(0+128),w
 18045  0F4F  0020               	movlb	0	; select bank0
 18046  0F50  00BD               	movwf	___aodiv@dividend+5
 18047  0F51  0021               	movlb	1	; select bank1
 18048  0F52  085B               	movf	(compensate_pressure@var4+6)^(0+128),w
 18049  0F53  0020               	movlb	0	; select bank0
 18050  0F54  00BE               	movwf	___aodiv@dividend+6
 18051  0F55  0021               	movlb	1	; select bank1
 18052  0F56  085C               	movf	(compensate_pressure@var4+7)^(0+128),w
 18053  0F57  0020               	movlb	0	; select bank0
 18054  0F58  00BF               	movwf	___aodiv@dividend+7
 18055  0F59  3184  24F7  3188   	fcall	___aodiv
 18056  0F5C  0830               	movf	?___aodiv,w
 18057  0F5D  00A0               	movwf	___omul@multiplier
 18058  0F5E  0831               	movf	?___aodiv+1,w
 18059  0F5F  00A1               	movwf	___omul@multiplier+1
 18060  0F60  0832               	movf	?___aodiv+2,w
 18061  0F61  00A2               	movwf	___omul@multiplier+2
 18062  0F62  0833               	movf	?___aodiv+3,w
 18063  0F63  00A3               	movwf	___omul@multiplier+3
 18064  0F64  0834               	movf	?___aodiv+4,w
 18065  0F65  00A4               	movwf	___omul@multiplier+4
 18066  0F66  0835               	movf	?___aodiv+5,w
 18067  0F67  00A5               	movwf	___omul@multiplier+5
 18068  0F68  0836               	movf	?___aodiv+6,w
 18069  0F69  00A6               	movwf	___omul@multiplier+6
 18070  0F6A  0837               	movf	?___aodiv+7,w
 18071  0F6B  00A7               	movwf	___omul@multiplier+7
 18072  0F6C  3064               	movlw	100
 18073  0F6D  00A8               	movwf	___omul@multiplicand
 18074  0F6E  01A9               	clrf	___omul@multiplicand+1
 18075  0F6F  01AA               	clrf	___omul@multiplicand+2
 18076  0F70  01AB               	clrf	___omul@multiplicand+3
 18077  0F71  01AC               	clrf	___omul@multiplicand+4
 18078  0F72  01AD               	clrf	___omul@multiplicand+5
 18079  0F73  01AE               	clrf	___omul@multiplicand+6
 18080  0F74  01AF               	clrf	___omul@multiplicand+7
 18081  0F75  319E  2638  3188   	fcall	___omul
 18082  0F78  0820               	movf	?___omul,w
 18083  0F79  0021               	movlb	1	; select bank1
 18084  0F7A  00B0               	movwf	_compensate_pressure$2354^(0+128)
 18085  0F7B  0020               	movlb	0	; select bank0
 18086  0F7C  0821               	movf	?___omul+1,w
 18087  0F7D  0021               	movlb	1	; select bank1
 18088  0F7E  00B1               	movwf	(_compensate_pressure$2354+1)^(0+128)
 18089  0F7F  0020               	movlb	0	; select bank0
 18090  0F80  0822               	movf	?___omul+2,w
 18091  0F81  0021               	movlb	1	; select bank1
 18092  0F82  00B2               	movwf	(_compensate_pressure$2354+2)^(0+128)
 18093  0F83  0020               	movlb	0	; select bank0
 18094  0F84  0823               	movf	?___omul+3,w
 18095  0F85  0021               	movlb	1	; select bank1
 18096  0F86  00B3               	movwf	(_compensate_pressure$2354+3)^(0+128)
 18097  0F87  0020               	movlb	0	; select bank0
 18098  0F88  0824               	movf	?___omul+4,w
 18099  0F89  0021               	movlb	1	; select bank1
 18100  0F8A  00B4               	movwf	(_compensate_pressure$2354+4)^(0+128)
 18101  0F8B  0020               	movlb	0	; select bank0
 18102  0F8C  0825               	movf	?___omul+5,w
 18103  0F8D  0021               	movlb	1	; select bank1
 18104  0F8E  00B5               	movwf	(_compensate_pressure$2354+5)^(0+128)
 18105  0F8F  0020               	movlb	0	; select bank0
 18106  0F90  0826               	movf	?___omul+6,w
 18107  0F91  0021               	movlb	1	; select bank1
 18108  0F92  00B6               	movwf	(_compensate_pressure$2354+6)^(0+128)
 18109  0F93  0020               	movlb	0	; select bank0
 18110  0F94  0827               	movf	?___omul+7,w
 18111  0F95  0021               	movlb	1	; select bank1
 18112  0F96  00B7               	movwf	(_compensate_pressure$2354+7)^(0+128)
 18113                           
 18114                           ;BME280_driver/bme280.c: 1186:         pressure = (uint32_t)(((var4 / 2) * 100) / 128);
 18115  0F97  3080               	movlw	128
 18116  0F98  0020               	movlb	0	; select bank0
 18117  0F99  00B0               	movwf	___aodiv@divisor
 18118  0F9A  01B1               	clrf	___aodiv@divisor+1
 18119  0F9B  01B2               	clrf	___aodiv@divisor+2
 18120  0F9C  01B3               	clrf	___aodiv@divisor+3
 18121  0F9D  01B4               	clrf	___aodiv@divisor+4
 18122  0F9E  01B5               	clrf	___aodiv@divisor+5
 18123  0F9F  01B6               	clrf	___aodiv@divisor+6
 18124  0FA0  01B7               	clrf	___aodiv@divisor+7
 18125  0FA1  0021               	movlb	1	; select bank1
 18126  0FA2  0830               	movf	_compensate_pressure$2354^(0+128),w
 18127  0FA3  0020               	movlb	0	; select bank0
 18128  0FA4  00B8               	movwf	___aodiv@dividend
 18129  0FA5  0021               	movlb	1	; select bank1
 18130  0FA6  0831               	movf	(_compensate_pressure$2354+1)^(0+128),w
 18131  0FA7  0020               	movlb	0	; select bank0
 18132  0FA8  00B9               	movwf	___aodiv@dividend+1
 18133  0FA9  0021               	movlb	1	; select bank1
 18134  0FAA  0832               	movf	(_compensate_pressure$2354+2)^(0+128),w
 18135  0FAB  0020               	movlb	0	; select bank0
 18136  0FAC  00BA               	movwf	___aodiv@dividend+2
 18137  0FAD  0021               	movlb	1	; select bank1
 18138  0FAE  0833               	movf	(_compensate_pressure$2354+3)^(0+128),w
 18139  0FAF  0020               	movlb	0	; select bank0
 18140  0FB0  00BB               	movwf	___aodiv@dividend+3
 18141  0FB1  0021               	movlb	1	; select bank1
 18142  0FB2  0834               	movf	(_compensate_pressure$2354+4)^(0+128),w
 18143  0FB3  0020               	movlb	0	; select bank0
 18144  0FB4  00BC               	movwf	___aodiv@dividend+4
 18145  0FB5  0021               	movlb	1	; select bank1
 18146  0FB6  0835               	movf	(_compensate_pressure$2354+5)^(0+128),w
 18147  0FB7  0020               	movlb	0	; select bank0
 18148  0FB8  00BD               	movwf	___aodiv@dividend+5
 18149  0FB9  0021               	movlb	1	; select bank1
 18150  0FBA  0836               	movf	(_compensate_pressure$2354+6)^(0+128),w
 18151  0FBB  0020               	movlb	0	; select bank0
 18152  0FBC  00BE               	movwf	___aodiv@dividend+6
 18153  0FBD  0021               	movlb	1	; select bank1
 18154  0FBE  0837               	movf	(_compensate_pressure$2354+7)^(0+128),w
 18155  0FBF  0020               	movlb	0	; select bank0
 18156  0FC0  00BF               	movwf	___aodiv@dividend+7
 18157  0FC1  3184  24F7  3188   	fcall	___aodiv
 18158  0FC4  0833               	movf	?___aodiv+3,w
 18159  0FC5  0021               	movlb	1	; select bank1
 18160  0FC6  00CC               	movwf	(compensate_pressure@pressure+3)^(0+128)
 18161  0FC7  0020               	movlb	0	; select bank0
 18162  0FC8  0832               	movf	?___aodiv+2,w
 18163  0FC9  0021               	movlb	1	; select bank1
 18164  0FCA  00CB               	movwf	(compensate_pressure@pressure+2)^(0+128)
 18165  0FCB  0020               	movlb	0	; select bank0
 18166  0FCC  0831               	movf	?___aodiv+1,w
 18167  0FCD  0021               	movlb	1	; select bank1
 18168  0FCE  00CA               	movwf	(compensate_pressure@pressure+1)^(0+128)
 18169  0FCF  0020               	movlb	0	; select bank0
 18170  0FD0  0830               	movf	?___aodiv,w
 18171  0FD1  0021               	movlb	1	; select bank1
 18172  0FD2  00C9               	movwf	compensate_pressure@pressure^(0+128)
 18173                           
 18174                           ;BME280_driver/bme280.c: 1187:         if (pressure < pressure_min)
 18175  0FD3  084C               	movf	(compensate_pressure@pressure+3)^(0+128),w
 18176  0FD4  1D03               	btfss	3,2
 18177  0FD5  2FE4               	goto	l4296
 18178  0FD6  30C0               	movlw	192
 18179  0FD7  0249               	subwf	compensate_pressure@pressure^(0+128),w
 18180  0FD8  30C6               	movlw	198
 18181  0FD9  3B4A               	subwfb	(compensate_pressure@pressure+1)^(0+128),w
 18182  0FDA  302D               	movlw	45
 18183  0FDB  3B4B               	subwfb	(compensate_pressure@pressure+2)^(0+128),w
 18184  0FDC  1803               	btfsc	3,0
 18185  0FDD  2FE4               	goto	l4296
 18186  0FDE                     l4294:	
 18187                           
 18188                           ;BME280_driver/bme280.c: 1188:         {;BME280_driver/bme280.c: 1189:             press
      +                          ure = pressure_min;
 18189  0FDE  3000               	movlw	0
 18190  0FDF  00CC               	movwf	(compensate_pressure@pressure+3)^(0+128)
 18191  0FE0  302D               	movlw	45
 18192  0FE1  00CB               	movwf	(compensate_pressure@pressure+2)^(0+128)
 18193  0FE2  30C6               	movlw	198
 18194  0FE3  2FF4               	goto	L3
 18195  0FE4                     l4296:	
 18196                           ;BME280_driver/bme280.c: 1190:         }
 18197                           
 18198  0FE4  084C               	movf	(compensate_pressure@pressure+3)^(0+128),w
 18199  0FE5  1D03               	btfss	3,2
 18200  0FE6  2FEF               	goto	l4298
 18201  0FE7  30C1               	movlw	193
 18202  0FE8  0249               	subwf	compensate_pressure@pressure^(0+128),w
 18203  0FE9  30D8               	movlw	216
 18204  0FEA  3B4A               	subwfb	(compensate_pressure@pressure+1)^(0+128),w
 18205  0FEB  30A7               	movlw	167
 18206  0FEC  3B4B               	subwfb	(compensate_pressure@pressure+2)^(0+128),w
 18207  0FED  1C03               	btfss	3,0
 18208  0FEE  2FF7               	goto	l192
 18209  0FEF                     l4298:	
 18210                           
 18211                           ;BME280_driver/bme280.c: 1192:         {;BME280_driver/bme280.c: 1193:             press
      +                          ure = pressure_max;
 18212  0FEF  3000               	movlw	0
 18213  0FF0  00CC               	movwf	(compensate_pressure@pressure+3)^(0+128)
 18214  0FF1  30A7               	movlw	167
 18215  0FF2  00CB               	movwf	(compensate_pressure@pressure+2)^(0+128)
 18216  0FF3  30D8               	movlw	216
 18217  0FF4                     L3:	
 18218  0FF4  00CA               	movwf	(compensate_pressure@pressure+1)^(0+128)
 18219  0FF5  30C0               	movlw	192
 18220  0FF6  00C9               	movwf	compensate_pressure@pressure^(0+128)
 18221  0FF7                     l192:	
 18222                           ;BME280_driver/bme280.c: 1199:     }
 18223                           
 18224                           
 18225                           ;BME280_driver/bme280.c: 1201:     return pressure;
 18226  0FF7  084C               	movf	(compensate_pressure@pressure+3)^(0+128),w
 18227  0FF8  00FD               	movwf	?_compensate_pressure+3
 18228  0FF9  084B               	movf	(compensate_pressure@pressure+2)^(0+128),w
 18229  0FFA  00FC               	movwf	?_compensate_pressure+2
 18230  0FFB  084A               	movf	(compensate_pressure@pressure+1)^(0+128),w
 18231  0FFC  00FB               	movwf	?_compensate_pressure+1
 18232  0FFD  0849               	movf	compensate_pressure@pressure^(0+128),w
 18233  0FFE  00FA               	movwf	?_compensate_pressure
 18234  0FFF  0008               	return
 18235  1000                     __end_of_compensate_pressure:	


Data Sizes:
    Strings     189
    Constant    0
    Data        46
    BSS         292
    Persistent  35
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80     74      80
    BANK2            80     56      79
    BANK3            80      0      71
    BANK4            80      0      54
    BANK5            80      0      44
    BANK6            80      0      70
    BANK7            80      0      73
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    put_device_to_sleep@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 0
		 -> Sleep(), 

    put_device_to_sleep@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 0
		 -> WriteEnvSensor(), 

    put_device_to_sleep@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 0
		 -> ReadEnvSensor(), 

    get_calib_data@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 0
		 -> Sleep(), 

    get_calib_data@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 0
		 -> WriteEnvSensor(), 

    get_calib_data@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 0
		 -> ReadEnvSensor(), 

    S54$4$2	PTR unsigned char  size(1) Largest target is 20
		 -> bme280_set_regs@temp_buff(BANK0[20]), 

    S54$3$2	PTR unsigned char  size(2) Largest target is 26
		 -> get_calib_data@calib_data(BANK0[26]), put_device_to_sleep@reg_data(BANK1[4]), write_power_mode@sensor_mode_reg_val(BANK0[1]), set_filter_standby_settings@reg_data(BANK0[1]), 
		 -> set_osr_press_temp_settings@reg_data(BANK0[1]), set_osr_humidity_settings@ctrl_meas(BANK0[1]), bme280_get_sensor_data@reg_data(BANK2[8]), bme280_set_sensor_mode@last_set_mode(BANK1[1]), 
		 -> bme280_get_sensor_settings@reg_data(COMMON[4]), bme280_set_sensor_settings@sensor_mode(BANK1[1]), bme280_init@chip_id(BANK0[1]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 73
		 -> STR_12(CODE[3]), checksum(BANK2[6]), STR_11(CODE[6]), main@convertedNumber(BANK2[16]), 
		 -> GetNavData@strId(COMMON[12]), STR_10(CODE[5]), STR_7(CODE[14]), GetNavData@data_type(COMMON[7]), 
		 -> STR_6(CODE[26]), STR_5(CODE[26]), STR_4(CODE[26]), STR_3(CODE[26]), 
		 -> STR_2(CODE[26]), STR_1(CODE[26]), message_end(BANK7[73]), message_start(BANK6[70]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 73
		 -> STR_12(CODE[3]), checksum(BANK2[6]), STR_11(CODE[6]), main@convertedNumber(BANK2[16]), 
		 -> GetNavData@strId(COMMON[12]), STR_10(CODE[5]), STR_7(CODE[14]), GetNavData@data_type(COMMON[7]), 
		 -> STR_6(CODE[26]), STR_5(CODE[26]), STR_4(CODE[26]), STR_3(CODE[26]), 
		 -> STR_2(CODE[26]), STR_1(CODE[26]), message_end(BANK7[73]), message_start(BANK6[70]), 

    TransmitString@message	PTR unsigned char  size(1) Largest target is 73
		 -> message_end(BANK7[73]), message_start(BANK6[70]), 

    crc16@data	PTR PTR unsigned char  size(1) Largest target is 2
		 -> messages(BANK2[2]), 

    crc16_update@pData	PTR unsigned char  size(1) Largest target is 73
		 -> message_end(BANK7[73]), message_start(BANK6[70]), 

    WriteEnvSensor@reg_data	PTR unsigned char  size(1) Largest target is 20
		 -> bme280_set_regs@temp_buff(BANK0[20]), 

    ReadEnvSensor@reg_data	PTR unsigned char  size(2) Largest target is 26
		 -> get_calib_data@calib_data(BANK0[26]), put_device_to_sleep@reg_data(BANK1[4]), write_power_mode@sensor_mode_reg_val(BANK0[1]), set_filter_standby_settings@reg_data(BANK0[1]), 
		 -> set_osr_press_temp_settings@reg_data(BANK0[1]), set_osr_humidity_settings@ctrl_meas(BANK0[1]), bme280_get_sensor_data@reg_data(BANK2[8]), bme280_set_sensor_mode@last_set_mode(BANK1[1]), 
		 -> bme280_get_sensor_settings@reg_data(COMMON[4]), bme280_set_sensor_settings@sensor_mode(BANK1[1]), bme280_init@chip_id(BANK0[1]), 

    messages	PTR unsigned char [2] size(1) Largest target is 73
		 -> message_end(BANK7[73]), message_start(BANK6[70]), 

    IntToString@dest	PTR unsigned char  size(2) Largest target is 16
		 -> main@convertedNumber(BANK2[16]), GetNavData@strId(COMMON[12]), 

    UIntToHexString@dest	PTR unsigned char  size(1) Largest target is 6
		 -> checksum(BANK2[6]), 

    ReverseString@opposite	PTR unsigned char  size(2) Largest target is 16
		 -> checksum(BANK2[6]), main@convertedNumber(BANK2[16]), GetNavData@strId(COMMON[12]), 

    ReverseString@str	PTR unsigned char  size(2) Largest target is 16
		 -> checksum(BANK2[6]), main@convertedNumber(BANK2[16]), GetNavData@strId(COMMON[12]), 

    InsertString@dest	PTR unsigned char  size(1) Largest target is 73
		 -> message_end(BANK7[73]), message_start(BANK6[70]), 

    InsertString@src	PTR unsigned char  size(2) Largest target is 16
		 -> STR_12(CODE[3]), checksum(BANK2[6]), STR_11(CODE[6]), main@convertedNumber(BANK2[16]), 
		 -> GetNavData@strId(COMMON[12]), STR_10(CODE[5]), 

    Insert@dest	PTR unsigned char  size(1) Largest target is 73
		 -> message_end(BANK7[73]), message_start(BANK6[70]), 

    ClearString@str	PTR unsigned char  size(2) Largest target is 73
		 -> main@convertedNumber(BANK2[16]), GetNavData@data_type(COMMON[7]), message_end(BANK7[73]), message_start(BANK6[70]), 

    EnvSensor.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> Sleep(), 

    EnvSensor.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> WriteEnvSensor(), 

    EnvSensor.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> ReadEnvSensor(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TimerISR(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TimerISR(), Absolute function(), TMR0_DefaultInterruptHandler(), 

    null_ptr_check@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> Sleep(), 

    null_ptr_check@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> WriteEnvSensor(), 

    null_ptr_check@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> ReadEnvSensor(), 

    null_ptr_check@dev	PTR const struct bme280_dev size(1) Largest target is 51
		 -> EnvSensor(BANK3[51]), 

    parse_humidity_calib_data@reg_data	PTR const unsigned char  size(1) Largest target is 26
		 -> get_calib_data@calib_data(BANK0[26]), 

    parse_humidity_calib_data@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> Sleep(), 

    parse_humidity_calib_data@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> WriteEnvSensor(), 

    parse_humidity_calib_data@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> ReadEnvSensor(), 

    parse_humidity_calib_data@dev	PTR struct bme280_dev size(1) Largest target is 51
		 -> EnvSensor(BANK3[51]), 

    parse_humidity_calib_data@calib_data	PTR struct bme280_calib_data size(1) Largest target is 51
		 -> EnvSensor.calib_data(BANK3[37]), EnvSensor(BANK3[51]), 

    parse_temp_press_calib_data@reg_data	PTR const unsigned char  size(1) Largest target is 26
		 -> get_calib_data@calib_data(BANK0[26]), 

    parse_temp_press_calib_data@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> Sleep(), 

    parse_temp_press_calib_data@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> WriteEnvSensor(), 

    parse_temp_press_calib_data@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> ReadEnvSensor(), 

    parse_temp_press_calib_data@dev	PTR struct bme280_dev size(1) Largest target is 51
		 -> EnvSensor(BANK3[51]), 

    parse_temp_press_calib_data@calib_data	PTR struct bme280_calib_data size(1) Largest target is 51
		 -> EnvSensor.calib_data(BANK3[37]), EnvSensor(BANK3[51]), 

    interleave_reg_addr@reg_data	PTR const unsigned char  size(1) Largest target is 1
		 -> write_power_mode@sensor_mode_reg_val(BANK0[1]), set_filter_standby_settings@reg_data(BANK0[1]), set_osr_press_temp_settings@reg_data(BANK0[1]), set_osr_humidity_settings@ctrl_meas(BANK0[1]), 
		 -> set_osr_humidity_settings@ctrl_hum(BANK0[1]), bme280_soft_reset@soft_rst_cmd(BANK0[1]), 

    interleave_reg_addr@reg_addr	PTR const unsigned char  size(1) Largest target is 1
		 -> write_power_mode@reg_addr(BANK0[1]), set_filter_standby_settings@reg_addr(BANK0[1]), set_osr_press_temp_settings@reg_addr(BANK0[1]), set_osr_humidity_settings@reg_addr(BANK0[1]), 
		 -> bme280_soft_reset@reg_addr(BANK0[1]), 

    interleave_reg_addr@temp_buff	PTR unsigned char  size(1) Largest target is 20
		 -> bme280_set_regs@temp_buff(BANK0[20]), 

    get_calib_data@dev	PTR struct bme280_dev size(1) Largest target is 51
		 -> EnvSensor(BANK3[51]), 

    compensate_pressure@uncomp_data	PTR const struct bme280_uncomp_data size(1) Largest target is 12
		 -> bme280_get_sensor_data@uncomp_data(BANK2[12]), 

    compensate_pressure@calib_data	PTR const struct bme280_calib_data size(1) Largest target is 51
		 -> EnvSensor(BANK3[51]), 

    compensate_temperature@calib_data	PTR struct bme280_calib_data size(1) Largest target is 51
		 -> EnvSensor(BANK3[51]), 

    compensate_temperature@uncomp_data	PTR const struct bme280_uncomp_data size(1) Largest target is 12
		 -> bme280_get_sensor_data@uncomp_data(BANK2[12]), 

    reload_device_settings@dev	PTR const struct bme280_dev size(1) Largest target is 51
		 -> EnvSensor(BANK3[51]), 

    reload_device_settings@settings	PTR const struct bme280_settings size(1) Largest target is 5
		 -> put_device_to_sleep@settings(BANK1[5]), 

    put_device_to_sleep@dev	PTR const struct bme280_dev size(1) Largest target is 51
		 -> EnvSensor(BANK3[51]), 

    write_power_mode@dev	PTR const struct bme280_dev size(1) Largest target is 51
		 -> EnvSensor(BANK3[51]), 

    parse_device_settings@reg_data	PTR const unsigned char  size(1) Largest target is 4
		 -> put_device_to_sleep@reg_data(BANK1[4]), bme280_get_sensor_settings@reg_data(COMMON[4]), 

    parse_device_settings@settings	PTR struct bme280_settings size(1) Largest target is 5
		 -> put_device_to_sleep@settings(BANK1[5]), 

    fill_osr_temp_settings@settings	PTR const struct bme280_settings size(2) Largest target is 51
		 -> EnvSensor(BANK3[51]), put_device_to_sleep@settings(BANK1[5]), 

    fill_osr_temp_settings@reg_data	PTR unsigned char  size(1) Largest target is 1
		 -> set_osr_press_temp_settings@reg_data(BANK0[1]), 

    fill_osr_press_settings@settings	PTR const struct bme280_settings size(2) Largest target is 51
		 -> EnvSensor(BANK3[51]), put_device_to_sleep@settings(BANK1[5]), 

    fill_osr_press_settings@reg_data	PTR unsigned char  size(1) Largest target is 1
		 -> set_osr_press_temp_settings@reg_data(BANK0[1]), 

    fill_standby_settings@settings	PTR const struct bme280_settings size(2) Largest target is 51
		 -> EnvSensor(BANK3[51]), put_device_to_sleep@settings(BANK1[5]), 

    fill_standby_settings@reg_data	PTR unsigned char  size(1) Largest target is 1
		 -> set_filter_standby_settings@reg_data(BANK0[1]), 

    fill_filter_settings@settings	PTR const struct bme280_settings size(2) Largest target is 51
		 -> EnvSensor(BANK3[51]), put_device_to_sleep@settings(BANK1[5]), 

    fill_filter_settings@reg_data	PTR unsigned char  size(1) Largest target is 1
		 -> set_filter_standby_settings@reg_data(BANK0[1]), 

    set_filter_standby_settings@settings	PTR const struct bme280_settings size(2) Largest target is 51
		 -> EnvSensor(BANK3[51]), put_device_to_sleep@settings(BANK1[5]), 

    set_filter_standby_settings@dev	PTR const struct bme280_dev size(1) Largest target is 51
		 -> EnvSensor(BANK3[51]), 

    set_osr_press_temp_settings@settings	PTR const struct bme280_settings size(2) Largest target is 51
		 -> EnvSensor(BANK3[51]), put_device_to_sleep@settings(BANK1[5]), 

    set_osr_press_temp_settings@dev	PTR const struct bme280_dev size(1) Largest target is 51
		 -> EnvSensor(BANK3[51]), 

    set_osr_humidity_settings@dev	PTR const struct bme280_dev size(1) Largest target is 51
		 -> EnvSensor(BANK3[51]), 

    set_osr_humidity_settings@settings	PTR const struct bme280_settings size(2) Largest target is 51
		 -> EnvSensor(BANK3[51]), put_device_to_sleep@settings(BANK1[5]), 

    set_osr_settings@dev	PTR const struct bme280_dev size(1) Largest target is 51
		 -> EnvSensor(BANK3[51]), 

    set_osr_settings@settings	PTR const struct bme280_settings size(2) Largest target is 51
		 -> EnvSensor(BANK3[51]), put_device_to_sleep@settings(BANK1[5]), 

    bme280_compensate_data@calib_data	PTR struct bme280_calib_data size(1) Largest target is 51
		 -> EnvSensor(BANK3[51]), 

    bme280_compensate_data@comp_data	PTR struct bme280_data size(1) Largest target is 12
		 -> main@sensor_data(BANK2[12]), 

    bme280_compensate_data@uncomp_data	PTR const struct bme280_uncomp_data size(1) Largest target is 12
		 -> bme280_get_sensor_data@uncomp_data(BANK2[12]), 

    bme280_parse_sensor_data@uncomp_data	PTR struct bme280_uncomp_data size(1) Largest target is 12
		 -> bme280_get_sensor_data@uncomp_data(BANK2[12]), 

    bme280_parse_sensor_data@reg_data	PTR const unsigned char  size(1) Largest target is 8
		 -> bme280_get_sensor_data@reg_data(BANK2[8]), 

    bme280_get_sensor_data@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> Sleep(), 

    bme280_get_sensor_data@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> WriteEnvSensor(), 

    bme280_get_sensor_data@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> ReadEnvSensor(), 

    bme280_get_sensor_data@comp_data	PTR struct bme280_data size(1) Largest target is 12
		 -> main@sensor_data(BANK2[12]), 

    bme280_get_sensor_data@dev	PTR struct bme280_dev size(1) Largest target is 51
		 -> EnvSensor(BANK3[51]), 

    bme280_soft_reset@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> Sleep(), 

    bme280_soft_reset@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> WriteEnvSensor(), 

    bme280_soft_reset@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> ReadEnvSensor(), 

    bme280_soft_reset@dev	PTR const struct bme280_dev size(1) Largest target is 51
		 -> EnvSensor(BANK3[51]), 

    bme280_get_sensor_mode@sensor_mode	PTR unsigned char  size(1) Largest target is 1
		 -> bme280_set_sensor_mode@last_set_mode(BANK1[1]), bme280_set_sensor_settings@sensor_mode(BANK1[1]), 

    bme280_get_sensor_mode@dev	PTR const struct bme280_dev size(1) Largest target is 51
		 -> EnvSensor(BANK3[51]), 

    bme280_set_sensor_mode@dev	PTR const struct bme280_dev size(1) Largest target is 51
		 -> EnvSensor(BANK3[51]), 

    bme280_get_sensor_settings@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> Sleep(), 

    bme280_get_sensor_settings@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> WriteEnvSensor(), 

    bme280_get_sensor_settings@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> ReadEnvSensor(), 

    bme280_set_sensor_settings@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> Sleep(), 

    bme280_set_sensor_settings@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> WriteEnvSensor(), 

    bme280_set_sensor_settings@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> ReadEnvSensor(), 

    bme280_set_sensor_settings@dev	PTR const struct bme280_dev size(1) Largest target is 51
		 -> EnvSensor(BANK3[51]), 

    bme280_set_regs@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> Sleep(), 

    bme280_set_regs@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> WriteEnvSensor(), 

    bme280_set_regs@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> ReadEnvSensor(), 

    bme280_set_regs@reg_data	PTR const unsigned char  size(1) Largest target is 1
		 -> write_power_mode@sensor_mode_reg_val(BANK0[1]), set_filter_standby_settings@reg_data(BANK0[1]), set_osr_press_temp_settings@reg_data(BANK0[1]), set_osr_humidity_settings@ctrl_meas(BANK0[1]), 
		 -> set_osr_humidity_settings@ctrl_hum(BANK0[1]), bme280_soft_reset@soft_rst_cmd(BANK0[1]), 

    bme280_set_regs@reg_addr	PTR unsigned char  size(1) Largest target is 1
		 -> write_power_mode@reg_addr(BANK0[1]), set_filter_standby_settings@reg_addr(BANK0[1]), set_osr_press_temp_settings@reg_addr(BANK0[1]), set_osr_humidity_settings@reg_addr(BANK0[1]), 
		 -> bme280_soft_reset@reg_addr(BANK0[1]), 

    bme280_set_regs@dev	PTR const struct bme280_dev size(1) Largest target is 51
		 -> EnvSensor(BANK3[51]), 

    bme280_get_regs@reg_data	PTR unsigned char  size(2) Largest target is 26
		 -> get_calib_data@calib_data(BANK0[26]), put_device_to_sleep@reg_data(BANK1[4]), write_power_mode@sensor_mode_reg_val(BANK0[1]), set_filter_standby_settings@reg_data(BANK0[1]), 
		 -> set_osr_press_temp_settings@reg_data(BANK0[1]), set_osr_humidity_settings@ctrl_meas(BANK0[1]), bme280_get_sensor_data@reg_data(BANK2[8]), bme280_set_sensor_mode@last_set_mode(BANK1[1]), 
		 -> bme280_get_sensor_settings@reg_data(COMMON[4]), bme280_set_sensor_settings@sensor_mode(BANK1[1]), bme280_init@chip_id(BANK0[1]), 

    bme280_get_regs@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> Sleep(), 

    bme280_get_regs@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> WriteEnvSensor(), 

    bme280_get_regs@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> ReadEnvSensor(), 

    bme280_get_regs@dev	PTR const struct bme280_dev size(1) Largest target is 51
		 -> EnvSensor(BANK3[51]), 

    S54bme280_dev$delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> Sleep(), 

    bme280_init@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> Sleep(), 

    S54bme280_dev$write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> WriteEnvSensor(), 

    bme280_init@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> WriteEnvSensor(), 

    S54bme280_dev$read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> ReadEnvSensor(), 

    bme280_init@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> ReadEnvSensor(), 

    bme280_init@dev	PTR struct bme280_dev size(1) Largest target is 51
		 -> EnvSensor(BANK3[51]), 


Critical Paths under _main in COMMON

    _main->_IntToString
    _crc16->_crc16_update
    _crc16_update->_strlen
    _bme280_compensate_data->_compensate_pressure
    _compensate_temperature->___aldiv
    ___aldiv->___lmul
    _compensate_pressure->___aodiv
    ___aodiv->___omul
    _TransmitString->_TransmitByte
    _TransmitByte->_TransmitBit
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _IntToString->_ReverseString
    _ReverseString->___awdiv
    _InsertString->_Insert
    _InitTiming->_TMR0_SetInterruptHandler
    _ClearString->_strlen
    _get_calib_data->_parse_humidity_calib_data
    _ReadEnvSensor->_I2C_WriteByte
    _I2C_ReadByte->_DebugAlert
    _WriteEnvSensor->_I2C_WriteByte
    _I2C_WriteByte->_DebugAlert
    _I2C_Stop->_DebugAlert
    _DebugAlert->_Sleep

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    None.

Critical Paths under _main in BANK0

    _bme280_get_sensor_data->_bme280_compensate_data
    _bme280_compensate_data->_compensate_pressure
    _compensate_temperature->___aldiv
    _compensate_pressure->___aodiv
    ___aodiv->___omul
    _UIntToHexString->_ReverseString
    _IntToString->_ReverseString
    _write_power_mode->_bme280_set_regs
    _put_device_to_sleep->_reload_device_settings
    _reload_device_settings->_set_osr_settings
    _set_osr_settings->_set_osr_humidity_settings
    _set_osr_settings->_set_osr_press_temp_settings
    _set_osr_press_temp_settings->_bme280_set_regs
    _set_osr_humidity_settings->_bme280_set_regs
    _set_filter_standby_settings->_bme280_set_regs
    _bme280_get_sensor_mode->_bme280_get_regs
    _bme280_init->_get_calib_data
    _get_calib_data->_bme280_get_regs
    _bme280_get_regs->_ReadEnvSensor
    _ReadEnvSensor->_I2C_WriteByte
    _I2C_ReadByte->_DebugAlert
    _bme280_soft_reset->_bme280_set_regs
    _bme280_set_regs->_WriteEnvSensor
    _WriteEnvSensor->_I2C_WriteByte
    _I2C_UserAlert->_I2C_Stop
    _I2C_Stop->_DebugAlert

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _bme280_compensate_data->_compensate_pressure
    _BME280_Init->_bme280_set_sensor_mode
    _BME280_Init->_bme280_set_sensor_settings
    _bme280_set_sensor_settings->_put_device_to_sleep
    _bme280_set_sensor_mode->_put_device_to_sleep

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_bme280_get_sensor_data

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                39    39      0  577675
                                             69 BANK1      5     5      0
                                             22 BANK2     34    34      0
                        _BME280_Init
                        _ClearString
                         _InitTiming
                             _Insert
                       _InsertString
                        _IntToString
                  _SYSTEM_Initialize
                     _TransmitString
                    _UIntToHexString
             _bme280_get_sensor_data
                              _crc16
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _crc16                                                9     7      2    1454
                                              0 BANK0      9     7      2
                       _crc16_update
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _crc16_update                                         9     5      4     367
                                              5 COMMON     9     5      4
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (1) _bme280_get_sensor_data                              27    25      2   31150
                                             74 BANK0      5     3      2
                                              0 BANK2     22    22      0
             _bme280_compensate_data
                    _bme280_get_regs
           _bme280_parse_sensor_data
                     _null_ptr_check
 ---------------------------------------------------------------------------------
 (2) _bme280_parse_sensor_data                            22    21      1     535
                                              0 COMMON     9     8      1
                                              0 BANK0     13    13      0
 ---------------------------------------------------------------------------------
 (2) _bme280_compensate_data                               6     3      3   10812
                                             68 BANK0      6     3      3
                _compensate_pressure
             _compensate_temperature
 ---------------------------------------------------------------------------------
 (3) _compensate_temperature                              39    35      4    4683
                                             14 BANK0     39    35      4
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8    1708
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             15     7      8    2168
                                             12 COMMON     1     1      0
                                              0 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _compensate_pressure                                 99    95      4    5326
                                             10 COMMON     4     0      4
                                             42 BANK0     26    26      0
                                              0 BANK1     69    69      0
                            ___aodiv
                             ___omul
 ---------------------------------------------------------------------------------
 (4) ___omul                                              25     9     16    1916
                                              0 COMMON     9     9      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (4) ___aodiv                                             27    11     16    1820
                                              9 COMMON     1     1      0
                                             16 BANK0     26    10     16
                             ___omul (ARG)
 ---------------------------------------------------------------------------------
 (1) _UIntToHexString                                     19    14      5    2697
                                             13 BANK0     19    14      5
                      _ReverseString
                              _crc16 (ARG)
 ---------------------------------------------------------------------------------
 (1) _TransmitString                                       6     6      0    1089
                                              6 COMMON     6     6      0
                       _TransmitByte
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _TransmitByte                                         4     4      0     112
                                              2 COMMON     4     4      0
                        _TransmitBit
 ---------------------------------------------------------------------------------
 (3) _TransmitBit                                          2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     174
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      1     1      0     174
                                              2 COMMON     1     1      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _IntToString                                         10     6      4    4717
                                             11 COMMON     3     3      0
                                             13 BANK0      7     3      4
                      _ReverseString
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) _ReverseString                                       15    13      2    2158
                                              9 COMMON     2     0      2
                                              0 BANK0     13    13      0
                            ___awdiv
                             _strlen
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     730
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _InsertString                                        12     6      6    5271
                                             10 COMMON     1     1      0
                                              0 BANK0     11     5      6
                             _Insert
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _Insert                                              10     5      5    2217
                                              0 COMMON    10     5      5
 ---------------------------------------------------------------------------------
 (1) _InitTiming                                           0     0      0     174
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2     174
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _ClearString                                          7     5      2    1310
                                              5 COMMON     7     5      2
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _strlen                                               5     3      2     798
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _BME280_Init                                          4     4      0  525810
                                             19 BANK1      4     4      0
                         _DebugAlert
                           _I2C_Init
                        _bme280_init
             _bme280_set_sensor_mode
         _bme280_set_sensor_settings
 ---------------------------------------------------------------------------------
 (2) _bme280_set_sensor_settings                           6     5      1  267982
                                             13 BANK1      6     5      1
               _are_settings_changed
             _bme280_get_sensor_mode
                     _null_ptr_check
                _put_device_to_sleep
        _set_filter_standby_settings
                   _set_osr_settings
 ---------------------------------------------------------------------------------
 (3) _are_settings_changed                                 3     2      1     282
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (2) _bme280_set_sensor_mode                               6     5      1  196836
                                             13 BANK1      6     5      1
             _bme280_get_sensor_mode
                     _null_ptr_check
                _put_device_to_sleep
                   _write_power_mode
 ---------------------------------------------------------------------------------
 (3) _write_power_mode                                     8     7      1   34159
                                             58 BANK0      8     7      1
                    _bme280_get_regs
                    _bme280_set_regs
 ---------------------------------------------------------------------------------
 (3) _put_device_to_sleep                                 13    13      0  141656
                                              0 BANK1     13    13      0
                    _bme280_get_regs
                  _bme280_soft_reset
              _parse_device_settings
             _reload_device_settings
 ---------------------------------------------------------------------------------
 (4) _reload_device_settings                               5     4      1  105121
                                             75 BANK0      5     4      1
        _set_filter_standby_settings
                   _set_osr_settings
 ---------------------------------------------------------------------------------
 (3) _set_osr_settings                                     7     4      3   69797
                                             68 BANK0      7     4      3
          _set_osr_humidity_settings
        _set_osr_press_temp_settings
 ---------------------------------------------------------------------------------
 (4) _set_osr_press_temp_settings                         10     7      3   34826
                                             58 BANK0     10     7      3
                    _bme280_get_regs
                    _bme280_set_regs
            _fill_osr_press_settings
             _fill_osr_temp_settings
 ---------------------------------------------------------------------------------
 (5) _fill_osr_temp_settings                               6     4      2     219
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (5) _fill_osr_press_settings                              6     4      2     219
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (4) _set_osr_humidity_settings                           10     7      3   34354
                                             58 BANK0     10     7      3
                    _bme280_get_regs
                    _bme280_set_regs
 ---------------------------------------------------------------------------------
 (3) _set_filter_standby_settings                         10     7      3   35006
                                             58 BANK0     10     7      3
                    _bme280_get_regs
                    _bme280_set_regs
               _fill_filter_settings
              _fill_standby_settings
 ---------------------------------------------------------------------------------
 (4) _fill_standby_settings                                6     4      2     219
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (4) _fill_filter_settings                                 6     4      2     219
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (4) _parse_device_settings                                4     3      1     542
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (3) _bme280_get_sensor_mode                               5     4      1   19638
                                             37 BANK0      5     4      1
                    _bme280_get_regs
                     _null_ptr_check
 ---------------------------------------------------------------------------------
 (2) _bme280_init                                          6     6      0   58207
                                             68 BANK0      6     6      0
                              _Sleep *
                    _bme280_get_regs
                  _bme280_soft_reset
                     _get_calib_data
                     _null_ptr_check
 ---------------------------------------------------------------------------------
 (3) _get_calib_data                                      31    31      0   20896
                                             37 BANK0     31    31      0
                    _bme280_get_regs
          _parse_humidity_calib_data
        _parse_temp_press_calib_data
 ---------------------------------------------------------------------------------
 (4) _parse_temp_press_calib_data                          4     3      1    1338
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (4) _parse_humidity_calib_data                           14    13      1     699
                                              0 COMMON    14    13      1
 ---------------------------------------------------------------------------------
 (2) _bme280_get_regs                                      9     4      5   18244
                                             28 BANK0      9     4      5
                      _ReadEnvSensor *
                     _null_ptr_check
 ---------------------------------------------------------------------------------
 (3) _ReadEnvSensor                                       13     7      6   14062
                                             15 BANK0     13     7      6
                         _DebugAlert
                       _I2C_ReadByte
                           _I2C_Stop
                      _I2C_WriteByte
 ---------------------------------------------------------------------------------
 (4) _I2C_ReadByte                                         6     6      0    2730
                                              7 BANK0      6     6      0
                         _DebugAlert
 ---------------------------------------------------------------------------------
 (4) _bme280_soft_reset                                    7     7      0   17186
                                             58 BANK0      7     7      0
                              _Sleep *
                    _bme280_set_regs
                     _null_ptr_check
 ---------------------------------------------------------------------------------
 (5) _bme280_set_regs                                     31    28      3   15470
                                             27 BANK0     31    28      3
                     _WriteEnvSensor *
                _interleave_reg_addr
                     _null_ptr_check
 ---------------------------------------------------------------------------------
 (2) _null_ptr_check                                       4     4      0     919
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (6) _interleave_reg_addr                                  8     5      3     622
                                              0 COMMON     8     5      3
 ---------------------------------------------------------------------------------
 (6) _WriteEnvSensor                                      12     7      5   11177
                                             15 BANK0     12     7      5
                         _DebugAlert
                           _I2C_Stop
                      _I2C_WriteByte
 ---------------------------------------------------------------------------------
 (4) _I2C_WriteByte                                        5     5      0    5361
                                             13 COMMON     1     1      0
                                             11 BANK0      4     4      0
                         _DebugAlert
                      _I2C_UserAlert
 ---------------------------------------------------------------------------------
 (5) _I2C_UserAlert                                        1     1      0    2665
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (6) _I2C_Stop                                             4     4      0    2665
                                              7 BANK0      4     4      0
                         _DebugAlert
 ---------------------------------------------------------------------------------
 (7) _DebugAlert                                           8     3      5    2665
                                             12 COMMON     1     1      0
                                              0 BANK0      7     2      5
                              _Sleep
 ---------------------------------------------------------------------------------
 (8) _Sleep                                               12     8      4     375
                                              0 COMMON    12     8      4
 ---------------------------------------------------------------------------------
 (2) _I2C_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INTERRUPT_InterruptManager                          0     0      0       0
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (15) _TMR0_ISR                                            0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                           _TimerISR *
 ---------------------------------------------------------------------------------
 (16) _TimerISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BME280_Init
     _DebugAlert
       _Sleep
     _I2C_Init
     _bme280_init
       _Sleep *
       _bme280_get_regs *
         _ReadEnvSensor *
           _DebugAlert
             _Sleep
           _I2C_ReadByte
             _DebugAlert
               _Sleep
           _I2C_Stop
             _DebugAlert
               _Sleep
           _I2C_WriteByte
             _DebugAlert
               _Sleep
             _I2C_UserAlert
               _I2C_Stop
                 _DebugAlert
                   _Sleep
         _null_ptr_check *
       _bme280_soft_reset *
         _Sleep *
         _bme280_set_regs *
           _WriteEnvSensor *
             _DebugAlert
               _Sleep
             _I2C_Stop
               _DebugAlert
                 _Sleep
             _I2C_WriteByte
               _DebugAlert
                 _Sleep
               _I2C_UserAlert
                 _I2C_Stop
                   _DebugAlert
                     _Sleep
           _interleave_reg_addr *
           _null_ptr_check *
         _null_ptr_check *
       _get_calib_data *
         _bme280_get_regs
           _ReadEnvSensor *
             _DebugAlert
               _Sleep
             _I2C_ReadByte
               _DebugAlert
                 _Sleep
             _I2C_Stop
               _DebugAlert
                 _Sleep
             _I2C_WriteByte
               _DebugAlert
                 _Sleep
               _I2C_UserAlert
                 _I2C_Stop
                   _DebugAlert
                     _Sleep
           _null_ptr_check *
         _parse_humidity_calib_data
         _parse_temp_press_calib_data
       _null_ptr_check *
     _bme280_set_sensor_mode
       _bme280_get_sensor_mode
         _bme280_get_regs
           _ReadEnvSensor *
             _DebugAlert
               _Sleep
             _I2C_ReadByte
               _DebugAlert
                 _Sleep
             _I2C_Stop
               _DebugAlert
                 _Sleep
             _I2C_WriteByte
               _DebugAlert
                 _Sleep
               _I2C_UserAlert
                 _I2C_Stop
                   _DebugAlert
                     _Sleep
           _null_ptr_check *
         _null_ptr_check
       _null_ptr_check
       _put_device_to_sleep
         _bme280_get_regs
           _ReadEnvSensor *
             _DebugAlert
               _Sleep
             _I2C_ReadByte
               _DebugAlert
                 _Sleep
             _I2C_Stop
               _DebugAlert
                 _Sleep
             _I2C_WriteByte
               _DebugAlert
                 _Sleep
               _I2C_UserAlert
                 _I2C_Stop
                   _DebugAlert
                     _Sleep
           _null_ptr_check *
         _bme280_soft_reset
           _Sleep *
           _bme280_set_regs *
             _WriteEnvSensor *
               _DebugAlert
                 _Sleep
               _I2C_Stop
                 _DebugAlert
                   _Sleep
               _I2C_WriteByte
                 _DebugAlert
                   _Sleep
                 _I2C_UserAlert
                   _I2C_Stop
                     _DebugAlert
                       _Sleep
             _interleave_reg_addr *
             _null_ptr_check *
           _null_ptr_check *
         _parse_device_settings
         _reload_device_settings
           _set_filter_standby_settings
             _bme280_get_regs
               _ReadEnvSensor *
                 _DebugAlert
                   _Sleep
                 _I2C_ReadByte
                   _DebugAlert
                     _Sleep
                 _I2C_Stop
                   _DebugAlert
                     _Sleep
                 _I2C_WriteByte
                   _DebugAlert
                     _Sleep
                   _I2C_UserAlert
                     _I2C_Stop
                       _DebugAlert
                         _Sleep
               _null_ptr_check *
             _bme280_set_regs
               _WriteEnvSensor *
                 _DebugAlert
                   _Sleep
                 _I2C_Stop
                   _DebugAlert
                     _Sleep
                 _I2C_WriteByte
                   _DebugAlert
                     _Sleep
                   _I2C_UserAlert
                     _I2C_Stop
                       _DebugAlert
                         _Sleep
               _interleave_reg_addr *
               _null_ptr_check *
             _fill_filter_settings
             _fill_standby_settings
           _set_osr_settings
             _set_osr_humidity_settings
               _bme280_get_regs
                 _ReadEnvSensor *
                   _DebugAlert
                     _Sleep
                   _I2C_ReadByte
                     _DebugAlert
                       _Sleep
                   _I2C_Stop
                     _DebugAlert
                       _Sleep
                   _I2C_WriteByte
                     _DebugAlert
                       _Sleep
                     _I2C_UserAlert
                       _I2C_Stop
                         _DebugAlert
                           _Sleep
                 _null_ptr_check *
               _bme280_set_regs
                 _WriteEnvSensor *
                   _DebugAlert
                     _Sleep
                   _I2C_Stop
                     _DebugAlert
                       _Sleep
                   _I2C_WriteByte
                     _DebugAlert
                       _Sleep
                     _I2C_UserAlert
                       _I2C_Stop
                         _DebugAlert
                           _Sleep
                 _interleave_reg_addr *
                 _null_ptr_check *
             _set_osr_press_temp_settings
               _bme280_get_regs
                 _ReadEnvSensor *
                   _DebugAlert
                     _Sleep
                   _I2C_ReadByte
                     _DebugAlert
                       _Sleep
                   _I2C_Stop
                     _DebugAlert
                       _Sleep
                   _I2C_WriteByte
                     _DebugAlert
                       _Sleep
                     _I2C_UserAlert
                       _I2C_Stop
                         _DebugAlert
                           _Sleep
                 _null_ptr_check *
               _bme280_set_regs
                 _WriteEnvSensor *
                   _DebugAlert
                     _Sleep
                   _I2C_Stop
                     _DebugAlert
                       _Sleep
                   _I2C_WriteByte
                     _DebugAlert
                       _Sleep
                     _I2C_UserAlert
                       _I2C_Stop
                         _DebugAlert
                           _Sleep
                 _interleave_reg_addr *
                 _null_ptr_check *
               _fill_osr_press_settings
               _fill_osr_temp_settings
       _write_power_mode
         _bme280_get_regs
           _ReadEnvSensor *
             _DebugAlert
               _Sleep
             _I2C_ReadByte
               _DebugAlert
                 _Sleep
             _I2C_Stop
               _DebugAlert
                 _Sleep
             _I2C_WriteByte
               _DebugAlert
                 _Sleep
               _I2C_UserAlert
                 _I2C_Stop
                   _DebugAlert
                     _Sleep
           _null_ptr_check *
         _bme280_set_regs
           _WriteEnvSensor *
             _DebugAlert
               _Sleep
             _I2C_Stop
               _DebugAlert
                 _Sleep
             _I2C_WriteByte
               _DebugAlert
                 _Sleep
               _I2C_UserAlert
                 _I2C_Stop
                   _DebugAlert
                     _Sleep
           _interleave_reg_addr *
           _null_ptr_check *
     _bme280_set_sensor_settings
       _are_settings_changed
       _bme280_get_sensor_mode
         _bme280_get_regs
           _ReadEnvSensor *
             _DebugAlert
               _Sleep
             _I2C_ReadByte
               _DebugAlert
                 _Sleep
             _I2C_Stop
               _DebugAlert
                 _Sleep
             _I2C_WriteByte
               _DebugAlert
                 _Sleep
               _I2C_UserAlert
                 _I2C_Stop
                   _DebugAlert
                     _Sleep
           _null_ptr_check *
         _null_ptr_check
       _null_ptr_check
       _put_device_to_sleep
         _bme280_get_regs
           _ReadEnvSensor *
             _DebugAlert
               _Sleep
             _I2C_ReadByte
               _DebugAlert
                 _Sleep
             _I2C_Stop
               _DebugAlert
                 _Sleep
             _I2C_WriteByte
               _DebugAlert
                 _Sleep
               _I2C_UserAlert
                 _I2C_Stop
                   _DebugAlert
                     _Sleep
           _null_ptr_check *
         _bme280_soft_reset
           _Sleep *
           _bme280_set_regs *
             _WriteEnvSensor *
               _DebugAlert
                 _Sleep
               _I2C_Stop
                 _DebugAlert
                   _Sleep
               _I2C_WriteByte
                 _DebugAlert
                   _Sleep
                 _I2C_UserAlert
                   _I2C_Stop
                     _DebugAlert
                       _Sleep
             _interleave_reg_addr *
             _null_ptr_check *
           _null_ptr_check *
         _parse_device_settings
         _reload_device_settings
           _set_filter_standby_settings
             _bme280_get_regs
               _ReadEnvSensor *
                 _DebugAlert
                   _Sleep
                 _I2C_ReadByte
                   _DebugAlert
                     _Sleep
                 _I2C_Stop
                   _DebugAlert
                     _Sleep
                 _I2C_WriteByte
                   _DebugAlert
                     _Sleep
                   _I2C_UserAlert
                     _I2C_Stop
                       _DebugAlert
                         _Sleep
               _null_ptr_check *
             _bme280_set_regs
               _WriteEnvSensor *
                 _DebugAlert
                   _Sleep
                 _I2C_Stop
                   _DebugAlert
                     _Sleep
                 _I2C_WriteByte
                   _DebugAlert
                     _Sleep
                   _I2C_UserAlert
                     _I2C_Stop
                       _DebugAlert
                         _Sleep
               _interleave_reg_addr *
               _null_ptr_check *
             _fill_filter_settings
             _fill_standby_settings
           _set_osr_settings
             _set_osr_humidity_settings
               _bme280_get_regs
                 _ReadEnvSensor *
                   _DebugAlert
                     _Sleep
                   _I2C_ReadByte
                     _DebugAlert
                       _Sleep
                   _I2C_Stop
                     _DebugAlert
                       _Sleep
                   _I2C_WriteByte
                     _DebugAlert
                       _Sleep
                     _I2C_UserAlert
                       _I2C_Stop
                         _DebugAlert
                           _Sleep
                 _null_ptr_check *
               _bme280_set_regs
                 _WriteEnvSensor *
                   _DebugAlert
                     _Sleep
                   _I2C_Stop
                     _DebugAlert
                       _Sleep
                   _I2C_WriteByte
                     _DebugAlert
                       _Sleep
                     _I2C_UserAlert
                       _I2C_Stop
                         _DebugAlert
                           _Sleep
                 _interleave_reg_addr *
                 _null_ptr_check *
             _set_osr_press_temp_settings
               _bme280_get_regs
                 _ReadEnvSensor *
                   _DebugAlert
                     _Sleep
                   _I2C_ReadByte
                     _DebugAlert
                       _Sleep
                   _I2C_Stop
                     _DebugAlert
                       _Sleep
                   _I2C_WriteByte
                     _DebugAlert
                       _Sleep
                     _I2C_UserAlert
                       _I2C_Stop
                         _DebugAlert
                           _Sleep
                 _null_ptr_check *
               _bme280_set_regs
                 _WriteEnvSensor *
                   _DebugAlert
                     _Sleep
                   _I2C_Stop
                     _DebugAlert
                       _Sleep
                   _I2C_WriteByte
                     _DebugAlert
                       _Sleep
                     _I2C_UserAlert
                       _I2C_Stop
                         _DebugAlert
                           _Sleep
                 _interleave_reg_addr *
                 _null_ptr_check *
               _fill_osr_press_settings
               _fill_osr_temp_settings
       _set_filter_standby_settings
         _bme280_get_regs
           _ReadEnvSensor *
             _DebugAlert
               _Sleep
             _I2C_ReadByte
               _DebugAlert
                 _Sleep
             _I2C_Stop
               _DebugAlert
                 _Sleep
             _I2C_WriteByte
               _DebugAlert
                 _Sleep
               _I2C_UserAlert
                 _I2C_Stop
                   _DebugAlert
                     _Sleep
           _null_ptr_check *
         _bme280_set_regs
           _WriteEnvSensor *
             _DebugAlert
               _Sleep
             _I2C_Stop
               _DebugAlert
                 _Sleep
             _I2C_WriteByte
               _DebugAlert
                 _Sleep
               _I2C_UserAlert
                 _I2C_Stop
                   _DebugAlert
                     _Sleep
           _interleave_reg_addr *
           _null_ptr_check *
         _fill_filter_settings
         _fill_standby_settings
       _set_osr_settings
         _set_osr_humidity_settings
           _bme280_get_regs
             _ReadEnvSensor *
               _DebugAlert
                 _Sleep
               _I2C_ReadByte
                 _DebugAlert
                   _Sleep
               _I2C_Stop
                 _DebugAlert
                   _Sleep
               _I2C_WriteByte
                 _DebugAlert
                   _Sleep
                 _I2C_UserAlert
                   _I2C_Stop
                     _DebugAlert
                       _Sleep
             _null_ptr_check *
           _bme280_set_regs
             _WriteEnvSensor *
               _DebugAlert
                 _Sleep
               _I2C_Stop
                 _DebugAlert
                   _Sleep
               _I2C_WriteByte
                 _DebugAlert
                   _Sleep
                 _I2C_UserAlert
                   _I2C_Stop
                     _DebugAlert
                       _Sleep
             _interleave_reg_addr *
             _null_ptr_check *
         _set_osr_press_temp_settings
           _bme280_get_regs
             _ReadEnvSensor *
               _DebugAlert
                 _Sleep
               _I2C_ReadByte
                 _DebugAlert
                   _Sleep
               _I2C_Stop
                 _DebugAlert
                   _Sleep
               _I2C_WriteByte
                 _DebugAlert
                   _Sleep
                 _I2C_UserAlert
                   _I2C_Stop
                     _DebugAlert
                       _Sleep
             _null_ptr_check *
           _bme280_set_regs
             _WriteEnvSensor *
               _DebugAlert
                 _Sleep
               _I2C_Stop
                 _DebugAlert
                   _Sleep
               _I2C_WriteByte
                 _DebugAlert
                   _Sleep
                 _I2C_UserAlert
                   _I2C_Stop
                     _DebugAlert
                       _Sleep
             _interleave_reg_addr *
             _null_ptr_check *
           _fill_osr_press_settings
           _fill_osr_temp_settings
   _ClearString
     _strlen
   _InitTiming
     _TMR0_SetInterruptHandler
   _Insert
   _InsertString
     _Insert
     _strlen
   _IntToString
     _ReverseString
       ___awdiv
       _strlen
     ___awdiv
     ___awmod
   _SYSTEM_Initialize
     _EUSART_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
   _TransmitString
     _TransmitByte
       _TransmitBit
     _strlen
   _UIntToHexString
     _ReverseString
       ___awdiv
       _strlen
     _crc16 (ARG)
       _crc16_update
         _strlen (ARG)
       _strlen
   _bme280_get_sensor_data
     _bme280_compensate_data
       _compensate_pressure
         ___aodiv
           ___omul (ARG)
         ___omul
       _compensate_temperature
         ___aldiv
           ___lmul (ARG)
         ___lmul
     _bme280_get_regs
       _ReadEnvSensor *
         _DebugAlert
           _Sleep
         _I2C_ReadByte
           _DebugAlert
             _Sleep
         _I2C_Stop
           _DebugAlert
             _Sleep
         _I2C_WriteByte
           _DebugAlert
             _Sleep
           _I2C_UserAlert
             _I2C_Stop
               _DebugAlert
                 _Sleep
       _null_ptr_check *
     _bme280_parse_sensor_data
     _null_ptr_check
   _crc16
     _crc16_update
       _strlen (ARG)
     _strlen
   _strlen

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _TimerISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     4A      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50     38      4F       9       98.8%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      47      11       88.8%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      36      13       67.5%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0      2C      15       55.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0      46      17       87.5%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0      49      19       91.3%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     235      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     235      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Thu Sep 05 15:26:13 2019

                        __end_of_ClearString 1A91                                  __CFG_CP$OFF 0000  
           bme280_parse_sensor_data@data_lsb 0024             bme280_parse_sensor_data@data_msb 0028  
                                         l53 118F                                           l70 16B9  
                                         l63 1DAF                                 ___awdiv@sign 0076  
                                         _id 0163                              _timer0ReloadVal 00EF  
                 ?_set_osr_humidity_settings 005A             __end_of_bme280_parse_sensor_data 04F7  
                                __CFG_LVP$ON 0000                                          l124 1413  
                                        l150 1DE1                                          l144 1D5D  
                                        l234 1A66                                          l183 03C5  
                                        l192 0FF7                                          l710 1ED9  
                                        l702 1706                                          l470 1493  
                                        l703 1725                                          l713 1F0E  
                                        l706 175A                                          l730 072B  
                                        l731 0748                                          l803 19C0  
                                        l734 077E                                          l743 142B  
                                        l727 06F5                                          l746 1461  
                                        l691 1035                                          l694 106B  
                                        l767 1B16                                          l783 1D0E  
                                        l699 16D0                                          l963 1515  
                                        l998 05DA            bme280_parse_sensor_data@data_xlsb 0020  
            __size_of_fill_osr_temp_settings 001C                                 ___awmod@sign 0076  
                               __CFG_BORV$LO 0000                                          wreg 0009  
                               __CFG_IESO$ON 0000             bme280_parse_sensor_data@reg_data 002C  
                             bme280_init@dev 0069              __size_of_compensate_temperature 01A1  
                          ___g_timeout_start 015F                               ReverseString@i 002B  
                               __CFG_ZCD$OFF 0000                                   _DebugAlert 1B38  
                                       l3000 0522                                         l3004 0549  
                                       l3006 054E                                         l4000 16BB  
                                       l3016 0565                                         l3026 05AD  
                                       l3018 0574                                         l3212 1FC4  
                                       l3028 05B9                                         l4102 1A45  
                                       l3230 1FEA                                         l3222 1FCC  
                                       l3206 1FB9                                         l4024 1F5D  
                                       l3224 1FD8                                         l4042 1D6D  
                                       l4210 194F                                         l3234 1FF3  
                                       l4060 1AB7                                         l4038 1D53  
                                       l3190 19B2                                         l3430 1225  
                                       l3238 1FFB                        __size_of_crc16_update 003D  
                                       l4056 1AA5                                         l4224 1C78  
                                       l4208 194E                                         l3432 125D  
                                       l4090 1CB2                                         l4314 113C  
                                       l4074 1DD7                                         l3418 1221  
                                       l3514 1DFD                                         l4250 03BD  
                                       l4410 1403                                         l4172 1EC5  
                                       l4332 1185                                         l3188 19A6  
                                       l3540 1E33                                         l3532 1E22  
                                       l3196 19C2                                         l3700 07C1  
                                       l4334 1188                                         l4078 1DF1  
                                       l3526 1E0A                                         l3518 1E04  
                                       l4414 1415                                         l4406 13EC  
                                       l3702 07F9                                         l4328 1170  
                                       l4184 1B8C                                         l4352 12F4  
                                       l3528 1E16                                         l3536 1E2B  
                                       l4248 03AF                                         l3480 1D14  
                                       l4434 127F                                         l4506 139A  
                                       l3714 1AF1                                         l3804 1B3A  
                                       l3812 1F00                                         l3820 105C  
                                       l4380 0828                                         l4364 1339  
                                       l4436 12C5                                         l2932 1C1C  
                                       l3484 1CF2                                         l3902 07A0  
                                       l4198 1CEF                                         l4358 1317  
                                       l4462 1A79                                         l3590 1F9D  
                                       l4470 14B4                                         l2950 1E54  
                                       l4294 0FDE                                         l3486 1D29  
                                       l4622 0212                                         l3832 16F7  
                                       l4384 0838                                         l4552 11E7  
                                       l3592 1F70                                         l4296 0FE4  
                                       l2936 1C26                                         l3906 0788  
                                       l3594 1FA9                                         l3498 1BEE  
                                       l4482 14F1                                         l2946 1E42  
                                       l4298 0FEF                                         l4562 006E  
                                       l3924 1452                                         l3860 1A6A  
                                       l3844 174C                                         l3908 07B6  
                                       l4484 14FE                                         l2972 1536  
                                       l2964 1526                                         l3934 146F  
                                       l3870 1BBD                                         l3950 1D88  
                                       l4494 134D                                         l4478 14DE  
                                       l2990 157D                                         l2982 1564  
                                       l2974 1544                                         l3936 1487  
                                       l3858 1A69                                         l3962 1628  
                                       l3882 071C                                         l2986 156F  
                                       l3892 076F                                         l3990 1685  
                                       l3982 164C                                         l3984 1666  
                                       l3998 16B4                                         STR_1 184E  
                                       STR_2 1834                                         STR_3 1882  
                                       STR_4 181A                                         STR_5 1868  
                                       STR_6 1800                                         STR_7 189C  
                                       STR_8 18B5                                         u3005 1FCF  
                                       _LATA 010C                                         _LATB 010D  
                                       _LATC 010E                                         u3025 1FD9  
                                       u3035 1FE3                                         u2500 1E3F  
                                       u3045 1FEB                                         u3305 04BD  
                                       u4035 079C                                         u4045 078E  
                                       u4205 19D9                                         u2605 1565  
                                       u3245 03D9                                         u5030 0096  
                                       u4215 100E                                         u3255 03F1  
                                       u2705 059A                                         u3265 0407  
                                       u4410 1E87                                         u3450 1BF9  
                                       u4075 1475                                         u3515 1E0D  
                                       u2475 1C27                                         u3275 044A  
                                       u3460 1BFA                                         u3444 1BF3  
                                       u4405 15F8                                         u3445 1BF2  
                                       u2565 1539                                         u2485 1C2E  
                                       u3285 0463                                         u5045 022A  
                                       u2670 0555                                         u3535 1E1C  
                                       u3295 0479                                         u3545 1E23  
                                       u2585 1545                                         u4505 0259  
                                       u5057 0216                                         u4355 1088  
                                       u4275 19F5                                         u3395 122F  
                                       u5067 19C5                                         u3475 1C0A  
                                       u2595 1559                                         u4515 02C3  
                                       u4365 109A                                         u4285 1A11  
                                       u3645 1FA7                                         u5077 19CC  
                                       u5087 1B34                                         u4375 10AC  
                                       u3655 1F7B                                         u4385 10BF  
                                       u4545 091C                                         u3835 1B31  
                                       u4555 0983                                         u3845 1B43  
                                       u4565 0A66                                         u4495 0245  
                                       u3775 07CB                                         u3785 1AFB  
                                       u4585 0C1A                                         u4915 1A83  
                                       u4595 0E81                                         u4860 10D6  
                                       u4870 10E3                                         u4855 1289  
                                       u4935 14D1                                         u4960 1341  
                                       u4970 1342                                         u4995 1384  
                                       _TMR0 0015                                         _WPUA 020C  
                                       _WPUB 020D                                         _WPUC 020E  
                     ??_fill_filter_settings 0072                    __size_of_write_power_mode 0037  
                     WriteEnvSensor@reg_addr 0030          bme280_parse_sensor_data@uncomp_data 0070  
                     WriteEnvSensor@reg_data 0031            bme280_get_sensor_data@uncomp_data 012A  
                               __CFG_WRT$OFF 0000                                __CFG_FCMEN$ON 0000  
            __size_of_bme280_set_sensor_mode 0038                    __size_of_set_osr_settings 0028  
                      __size_of_I2C_ReadByte 00A1                          _put_device_to_sleep 1CB5  
                                       _main 0055                             __end_of_I2C_Init 198C  
                               TransmitBit@b 0071                                         fsr0h 0005  
                                       fsr1h 0007                                         indf0 0000  
                                       fsr0l 0004                                         indf1 0001  
                                       fsr1l 0006                                         btemp 007E  
                     interleave_reg_addr@len 0072                             __end_of_I2C_Stop 1F11  
       are_settings_changed@desired_settings 0070                  put_device_to_sleep@reg_data 00A2  
                              __CFG_BOREN$ON 0000                                         start 000D  
                       bme280_soft_reset@dev 0060                  __end_of_compensate_pressure 1000  
                              __CFG_MCLRE$ON 0000               reload_device_settings@settings 006E  
                    ??_fill_standby_settings 0072                                ??_IntToString 007B  
                put_device_to_sleep@settings 00A8                                _ReadEnvSensor 06E1  
                            bme280_init@rslt 0068                      __end_of_TMR0_Initialize 19A2  
             ??_TMR0_DefaultInterruptHandler 0070               __size_of_OSCILLATOR_Initialize 0007  
              __end_of_OSCILLATOR_Initialize 1934                         ?_put_device_to_sleep 0069  
                            __end_of___aldiv 1586                              __end_of___aodiv 05EC  
                      ReverseString@opposite 0027                                        ?_main 0070  
                            __end_of___awdiv 2000                                        STR_10 18B0  
                                      STR_11 18AA                                        STR_12 18BA  
                              __CFG_WDTE$OFF 0000                              __end_of___awmod 1E38  
                     _bme280_compensate_data 13A8                              ___awdiv@divisor 0070  
                                      i1l362 000B                              ___awdiv@counter 0075  
                               _crc16_update 1CF1                                   Insert@dest 0079  
                          _bme280_soft_reset 1C7A                                        _TRISA 008C  
                                      _TRISB 008D                                        _TRISC 008E  
                                      _RXPPS 0E24                                   Insert@temp 0077  
          __size_of_TMR0_SetInterruptHandler 0006                     __size_of_bme280_get_regs 0042  
                        ___lmul@multiplicand 0074                    ?_TMR0_SetInterruptHandler 0070  
                                      _Sleep 1B0D                             __end_of_TMR0_ISR 1978  
             compensate_pressure@uncomp_data 00B8                   bme280_compensate_data@rslt 0068  
                         ?_bme280_soft_reset 0053                                 _I2C_ReadByte 16BD  
                   UIntToHexString@remainder 0038                                        _crc16 07BA  
                           crc16_update@wCrc 0077                             ?_UIntToHexString 002D  
                                      _ticks 00EA                                        main@i 0148  
                                      pclath 000A                                TransmitByte@i 0074  
              __size_of_are_settings_changed 000B                          ??_bme280_soft_reset 005A  
                                      status 0003                                        wtemp0 007E  
                                _ClearString 1A6C                     __size_of_bme280_set_regs 009E  
                           ??_get_calib_data 0045                       put_device_to_sleep@dev 00A7  
                      bme280_soft_reset@rslt 005E                       _fill_osr_temp_settings 1005  
 bme280_set_sensor_settings@desired_settings 00B0                bme280_set_sensor_settings@dev 00AD  
                            __initialization 000F                        DebugAlert@num_flashes 0024  
                     _compensate_temperature 022D                                   _InitTiming 1934  
          parse_humidity_calib_data@reg_data 007D                               ?_ReadEnvSensor 002F  
                               __end_of_main 022D                               __CFG_LPBOR$OFF 0000  
                ?_INTERRUPT_InterruptManager 0070                       _bme280_set_sensor_mode 0802  
                      ??_put_device_to_sleep 00A0                      ?_bme280_get_sensor_data 006A  
                  __end_of_bme280_soft_reset 1CB5                      ?_bme280_get_sensor_mode 0045  
                                     ??_main 00E5                        __end_of_ReverseString 12CE  
                        __end_of_IntToString 13A8                       __size_of_I2C_UserAlert 0003  
                    __size_of_WriteEnvSensor 0074                             ??_null_ptr_check 0070  
            bme280_compensate_data@comp_data 0065            bme280_set_sensor_mode@sensor_mode 00B0  
                           ReverseString@str 0079                               __CFG_PLLEN$OFF 0000  
                           __end_of_TimerISR 1946              compensate_pressure@pressure_max 00B9  
                  bme280_get_sensor_data@dev 006B                        ReadEnvSensor@reg_addr 0030  
                              ?_InsertString 0020                        ReadEnvSensor@reg_data 0031  
        write_power_mode@sensor_mode_reg_val 0061                                       ?_Sleep 0070  
                   _bme280_parse_sensor_data 03CE                                       ?_crc16 0020  
                                 Sleep@start 0078                       __size_of_I2C_WriteByte 0053  
                           ___awdiv@dividend 0072                                  ?_DebugAlert 0020  
                                     _ANSELA 018C                                       _ANSELB 018D  
                                     _ANSELC 018E                                       _BORCON 0116  
                                     _RC1STA 019D                     ??_reload_device_settings 006C  
                                     _RB4PPS 0E9C                                       _RB6PPS 0E9E  
                                     _RB7PPS 0E9F                                       _ODCONA 028C  
                                     _ODCONB 028D                                       _ODCONC 028E  
                                     _OSCCON 0099                                       _SPBRGH 019C  
                                     _SPBRGL 019B                                       u264lld 051F  
                                     _TX1STA 019E                          I2C_ReadByte@rcvdata 002C  
                                Insert@index 0071                 __size_of_interleave_reg_addr 002D  
                  bme280_get_sensor_mode@dev 0045                    bme280_set_sensor_mode@dev 00AD  
                             __CFG_PWRTE$OFF 0000                   ?_parse_humidity_calib_data 0070  
                                     _Insert 11F9                 fill_filter_settings@reg_data 0075  
                                     ___lmul 1C14                            crc16_update@pData 007C  
                                     ___omul 1E38                                    ??___aldiv 007C  
                                  ??___aodiv 0079                                    ??___awdiv 0074  
                                     crc16@i 0027                               __CFG_STVREN$ON 0000  
                                  ??___awmod 0074                 parse_humidity_calib_data@dev 0070  
             __end_of_bme280_get_sensor_data 1129                          DebugAlert@delay_low 0022  
             __end_of_bme280_get_sensor_mode 1B8E                             ?_TMR0_Initialize 0070  
             fill_osr_temp_settings@reg_data 0075                  compensate_pressure@pressure 00C9  
                           ___awdiv@quotient 0077                              ___awmod@divisor 0070  
               fill_filter_settings@settings 0070                              ___awmod@counter 0075  
                                     _strlen 19A2                     interleave_reg_addr@index 0077  
                          get_calib_data@dev 0063                                 IntToString@i 0032  
                               IntToString@n 002D                              InsertString@src 0020  
                                  ?_I2C_Init 0070                      compensate_pressure@var1 00DD  
                    compensate_pressure@var2 00CD                      compensate_pressure@var4 00D5  
                             ??_InsertString 007A                                    ?_I2C_Stop 0070  
             fill_osr_temp_settings@settings 0070                             ??_TransmitString 0076  
                        write_power_mode@dev 005A     TMR0_SetInterruptHandler@InterruptHandler 0070  
                    put_device_to_sleep@rslt 00A6                            ??_bme280_get_regs 0041  
                           _write_power_mode 1C43             bme280_compensate_data@calib_data 0066  
               interleave_reg_addr@temp_buff 0070                            _SYSTEM_Initialize 195C  
                    __end_of__initialization 0051                             _set_osr_settings 1A91  
                              _I2C_UserAlert 1002                           ?_SYSTEM_Initialize 0070  
                        main@convertedNumber 0136                         _UIntToHexString$1405 0034  
           compensate_temperature@calib_data 002E              set_filter_standby_settings@rslt 0061  
                            ??_ReadEnvSensor 0035                          ReverseString@counti 0029  
             bme280_set_sensor_settings@rslt 00B2                                ??_bme280_init 0064  
                   get_calib_data@calib_data 0047                               __pcstackCOMMON 0070  
                                ?_InitTiming 0070                                __end_of_Sleep 1B38  
                              _I2C_WriteByte 1021             __size_of_fill_osr_press_settings 001B  
                               __pidataBANK2 0002                                 __pidataBANK5 1B8E  
                          ??_bme280_set_regs 003E                                __end_of_crc16 07FF  
                        ??_SYSTEM_Initialize 0073                                  _IntToString 133B  
                                  ?_TMR0_ISR 0070             set_osr_settings@desired_settings 006A  
                              ??_TransmitBit 0070                          __size_of_DebugAlert 002B  
                 __size_of_bme280_soft_reset 003B                  ??_set_osr_humidity_settings 005D  
                      _parse_device_settings 1074                                   ??_I2C_Init 0070  
                             _OPTION_REGbits 0095                                   ??_I2C_Stop 0027  
           are_settings_changed@sub_settings 0071                                      ??_Sleep 0074  
                        set_osr_settings@dev 0066                                      ??_crc16 0022  
                  __end_of_SYSTEM_Initialize 1968                                   __pbssBANK1 00EA  
                                 __pbssBANK2 0158                                   __pbssBANK3 01A0  
                                 __pbssBANK4 0220                                   __pbssBANK6 0320  
                                 __pbssBANK7 03A0                                ??_BME280_Init 00B3  
            __size_of_reload_device_settings 0023                  interleave_reg_addr@reg_addr 0076  
                             ?_I2C_UserAlert 0070                            ReverseString@temp 0026  
                interleave_reg_addr@reg_data 0071                        InsertString@destLimit 0024  
                           _setNavFlightMode 02A0                                      ?_Insert 0070  
                                 __pmaintext 0055                                    ?_TimerISR 0070  
                             ?_I2C_WriteByte 0070               set_osr_press_temp_settings@dev 005C  
           __end_of_TMR0_SetInterruptHandler 1921                                      ?___lmul 0070  
                                    ?___omul 0020                                   ??_TMR0_ISR 0070  
             __size_of_fill_standby_settings 001C                              __CFG_PPS1WAY$ON 0000  
              __end_of_fill_standby_settings 1A24                                   __pintentry 0004  
                    ?_bme280_compensate_data 0064  set_filter_standby_settings@desired_settings 0060  
                        ___omul@multiplicand 0028                               ___lmul@product 0078  
                           ReadEnvSensor@len 0033                          __end_of_bme280_init 1191  
                             _WriteEnvSensor 1417                                      ?_strlen 0070  
               ??_bme280_set_sensor_settings 00AE                              __CFG_WDTCCS$SWC 0000  
                        __end_of_TransmitBit 19D1                                      _OSCTUNE 0098  
               ?_parse_temp_press_calib_data 0070                                      _SSP1ADD 0212  
                                    _SLRCONA 030C                                      _SLRCONB 030D  
                                    _SLRCONC 030E                                      _SSP1BUF 0211  
              set_osr_humidity_settings@rslt 0062                          __size_of_InitTiming 0008  
                    ?_fill_osr_temp_settings 0070                 ?_set_osr_press_temp_settings 005A  
                  _set_osr_humidity_settings 1F11                                 ?_ClearString 0075  
              __size_of_fill_filter_settings 001C                 set_osr_humidity_settings@dev 005C  
                    ?_compensate_temperature 002E                bme280_soft_reset@soft_rst_cmd 005D  
                                    Sleep@ms 0070                         __end_of_InsertString 1FAF  
                        __end_of_BME280_Init 11F9                              __size_of_Insert 0069  
                                 ??_TimerISR 0070                      ?_bme280_set_sensor_mode 00AD  
             __end_of_bme280_compensate_data 1417                                      ___aldiv 1505  
                                    ___aodiv 04F7                                      ___awdiv 1FAF  
                            __size_of___lmul 002F                                      ___awmod 1DF3  
                            __size_of___omul 0047                 __end_of_are_settings_changed 1951  
                     __end_of_WriteEnvSensor 148B                 __size_of_compensate_pressure F8A2  
                     _reload_device_settings 1A24                   ??_bme280_parse_sensor_data 0071  
                     ?_parse_device_settings 0070                           crc16_update@length 0075  
                                    __ptext1 07BA                                      __ptext2 1CF1  
                                    __ptext3 10CC                                      __ptext4 03CE  
                                    __ptext5 13A8                                      __ptext6 022D  
                                    __ptext7 1C14                                      __ptext8 1505  
                                    __ptext9 175E          parse_humidity_calib_data@dig_H4_lsb 0074  
        parse_humidity_calib_data@dig_H4_msb 0076          parse_humidity_calib_data@dig_H5_lsb 0078  
        parse_humidity_calib_data@dig_H5_msb 007A                         DebugAlert@delay_high 0020  
        parse_humidity_calib_data@calib_data 007C                              __size_of_strlen 0017  
                        _interleave_reg_addr 1BBA                        _OSCILLATOR_Initialize 192D  
                           ___awmod@dividend 0072                                _message_start 0320  
                           ___aldiv@dividend 0024                     ??_PIN_MANAGER_Initialize 0070  
                         get_calib_data@F375 0220                    reload_device_settings@dev 006B  
             __end_of_fill_osr_temp_settings 1021                                      main@end 0146  
                 __size_of_SYSTEM_Initialize 000C                                      clrloop0 1922  
                               ??_DebugAlert 007C                ??_parse_temp_press_calib_data 0071  
                            ??_I2C_UserAlert 007D                         end_of_initialization 0051  
            bme280_get_sensor_data@comp_data 006A                           get_calib_data@rslt 0062  
                           InsertString@dest 002A        bme280_set_sensor_settings@sensor_mode 00B1  
                             ___omul@product 0071                                      init_ram 1927  
             __end_of_compensate_temperature 03CE                                      initloop 1928  
              ??_set_osr_press_temp_settings 005D                         ?_interleave_reg_addr 0070  
                   __size_of_UIntToHexString 007A                            _EUSART_Initialize 1951  
                            ??_I2C_WriteByte 002B               __end_of_bme280_set_sensor_mode 083A  
                ??_parse_humidity_calib_data 0071                      _fill_osr_press_settings 19D1  
                         ?_EUSART_Initialize 0070                  __end_of_put_device_to_sleep 1CF1  
                       write_power_mode@rslt 005F                                  _bme280_init 1129  
                   write_power_mode@reg_addr 0060                             ___aldiv@quotient 002A  
                 reload_device_settings@rslt 006F            compensate_temperature@temperature 0051  
                                    psplit$0 2A0067                                   main@F10088 023A  
                             ClearString@str 0075                              ?_WriteEnvSensor 002F  
                                _TransmitBit 19B9                                      strlen@a 0073  
                   __end_of_write_power_mode 1C7A                                      strlen@s 0070  
                        ??_EUSART_Initialize 0070                           __end_of_DebugAlert 1B63  
                   _TMR0_SetInterruptHandler 191B                     __end_of_set_osr_settings 1AB9  
                                  _SSPDATPPS 0E21                              _bme280_get_regs 1D6F  
                                  _SSPCLKPPS 0E20                           bme280_get_regs@dev 0040  
                            WriteEnvSensor@i 0039                           bme280_get_regs@len 003E  
                            TransmitString@i 0079                                ?_TransmitByte 0070  
                           __CFG_FOSC$INTOSC 0000                                crc16@segments 0020  
            fill_osr_press_settings@reg_data 0075                            __size_of_I2C_Init 0014  
                          __size_of_I2C_Stop 004A                 ?_set_filter_standby_settings 005A  
            fill_osr_press_settings@settings 0070                              _bme280_set_regs 161F  
                                _BME280_Init 1191                    __end_of_EUSART_Initialize 195C  
                       bme280_init@try_count 0066                        ??_interleave_reg_addr 0073  
                  bme280_soft_reset@reg_addr 005F            compensate_temperature@uncomp_data 004C  
                             _gps_configured 00EE                         ReverseString@halfway 0024  
                     __size_of_ReverseString 006C                        TransmitString@message 007B  
                               ??_InitTiming 0072         __size_of_parse_temp_press_calib_data 00F5  
                             __end_of_Insert 1262                                 ?_IntToString 002D  
                             __end_of___lmul 1C43                               __end_of___omul 1E7F  
                    __size_of_get_calib_data 0048                                    Insert@src 0070  
       __size_of_set_osr_press_temp_settings 0041                            __size_of_TMR0_ISR 0010  
         __end_of_bme280_set_sensor_settings 133B                   _bme280_set_sensor_settings 12CE  
                     ?_OSCILLATOR_Initialize 0070               parse_temp_press_calib_data@dev 0070  
                                  _EnvSensor 01B4                     bme280_set_regs@temp_buff 0041  
                             ??_TransmitByte 0072                    _parse_humidity_calib_data 1586  
                             __end_of_strlen 19B9                          start_initialization 000F  
                        UIntToHexString@dest 0031                     __size_of_TMR0_Initialize 0016  
            __size_of_PIN_MANAGER_Initialize 002A        parse_temp_press_calib_data@calib_data 0072  
                           UIntToHexString@i 003C                             UIntToHexString@n 002D  
                         __end_of_InitTiming 193C                         _are_settings_changed 1946  
                         I2C_ReadByte@ackbit 002B                      __size_of_null_ptr_check 0025  
                          pnum$text9_split_1 0067                        __size_of_InsertString 0050  
              ??_set_filter_standby_settings 005D                            ___omul@multiplier 0020  
                  ??_fill_osr_press_settings 0072                         __size_of_ClearString 0025  
                                   ??_Insert 0075                           bme280_init@chip_id 0067  
                      __end_of_ReadEnvSensor 07BA                         set_osr_settings@rslt 0069  
                                   ??___lmul 0078                                     ??___omul 0070  
         __size_of_set_osr_humidity_settings 004E                      __end_of_bme280_get_regs 1DB1  
                            BME280_Init@rslt 00B6                            ??_UIntToHexString 0032  
                          __size_of_TimerISR 000A                                  __pdataBANK2 016D  
                                __pdataBANK5 02A0                           null_ptr_check@rslt 0072  
                               ClearString@i 007A                                     ??_strlen 0072  
                              ?_crc16_update 0075                   compensate_temperature@var1 0048  
                 compensate_temperature@var2 004D        compensate_temperature@temperature_max 0044  
                              _ReverseString 1262                                    ___latbits 0002  
                              __pcstackBANK0 0020                                __pcstackBANK1 00A0  
                              __pcstackBANK2 0120                                ?_I2C_ReadByte 0070  
                           ___aodiv@dividend 0038                      __end_of_bme280_set_regs 16BD  
                               _InsertString 1F5F                                crc16_update@i 007D  
                   _compensate_pressure$2352 00C1                     _compensate_pressure$2353 00A8  
                   _compensate_pressure$2354 00B0                        ?_are_settings_changed 0070  
                        _compensate_pressure 175E                   __size_of_EUSART_Initialize 000B  
        bme280_set_sensor_mode@last_set_mode 00B1            set_osr_humidity_settings@ctrl_hum 0060  
                                  crc16@data 0026                      __size_of_TransmitString 002A  
                      _TMR0_InterruptHandler 016B                                    __pnvBANK1 00EF  
                                  __pnvBANK2 016B            set_osr_humidity_settings@reg_addr 0063  
                   set_osr_settings@settings 0064                     ??_bme280_get_sensor_data 006C  
                   ??_bme280_get_sensor_mode 0046                       _PIN_MANAGER_Initialize 1AB9  
                    ?_reload_device_settings 006B                      ??_parse_device_settings 0071  
                                   ?___aldiv 0020                                     ?___aodiv 0030  
                                   ?___awdiv 0070                             ___aodiv@quotient 0042  
                                   ?___awmod 0070          set_filter_standby_settings@reg_addr 0062  
        set_filter_standby_settings@reg_data 0063            set_osr_humidity_settings@settings 005A  
            set_osr_press_temp_settings@rslt 0061                         ?_compensate_pressure 007A  
       __size_of_set_filter_standby_settings 0042            __end_of_set_osr_humidity_settings 1F5F  
               ??_INTERRUPT_InterruptManager 0070                        _fill_standby_settings 1A08  
               __end_of_fill_filter_settings 1A08                               ??_crc16_update 0079  
            __end_of_fill_osr_press_settings 19EC                               ?_ReverseString 0079  
                                   _BAUD1CON 019F          set_filter_standby_settings@settings 005A  
                                   _I2C_Init 1978                                     _I2C_Stop 1EC7  
                             ??_I2C_ReadByte 0027                            ReadEnvSensor@rslt 0039  
                             __size_of_Sleep 002B                               __size_of_crc16 0045  
set_osr_press_temp_settings@desired_settings 0060                              ___aldiv@divisor 0020  
                          ??_TMR0_Initialize 0072                              ___aldiv@counter 0028  
                                   _LATAbits 010C                                     _LATCbits 010E  
                    BME280_Init@settings_sel 00B5                                    clear_ram0 1921  
                       __end_of_TransmitByte 1C14               __end_of_reload_device_settings 1A47  
        __size_of_INTERRUPT_InterruptManager 0009          parse_temp_press_calib_data@reg_data 0073  
                           ??_WriteEnvSensor 0034                   ??_TMR0_SetInterruptHandler 0072  
                                   _PIR1bits 0010                                 ?_bme280_init 005E  
                                DebugAlert@i 0025               bme280_get_sensor_data@reg_data 0120  
                       __CFG_WDTCPS$WDTCPS1F 0000                                     _SSP1CON1 0215  
                                   _SSP1CON2 0216                                     _TMR0_ISR 1968  
                      ??_compensate_pressure 004A                                     _SSP1STAT 0214  
                           ?_bme280_get_regs 003C                               _get_calib_data 1E7F  
                               ?_TransmitBit 0070                         __size_of_IntToString 006D  
                          ?_write_power_mode 005A                                Insert@current 0078  
                          ?_set_osr_settings 0064                         WriteEnvSensor@dev_id 002F  
                         ??_write_power_mode 005B                                    main@index 0156  
                         ??_set_osr_settings 0067                         TransmitString@counti 0077  
                    bme280_get_regs@reg_addr 0043                      bme280_set_regs@reg_addr 0059  
                    bme280_get_regs@reg_data 003C                      bme280_set_regs@reg_data 003B  
                           ?_bme280_set_regs 003B            bme280_get_sensor_mode@sensor_mode 0049  
                     ??_are_settings_changed 0071                            ___lmul@multiplier 0070  
                    bme280_set_regs@temp_len 0055            __size_of_bme280_parse_sensor_data 0129  
                  ?_bme280_parse_sensor_data 0070                               _null_ptr_check 1A47  
         __size_of_parse_humidity_calib_data 0099                                 ?_BME280_Init 0070  
                      __end_of_I2C_UserAlert 1005                          ReadEnvSensor@dev_id 002F  
                bme280_set_regs@reg_addr_cnt 0057                           InsertString@counti 0026  
                            IntToString@dest 002F                              IntToString@sign 0031  
            __size_of_bme280_get_sensor_data 005D                          bme280_set_regs@rslt 0058  
            __size_of_bme280_get_sensor_mode 002B                        __end_of_I2C_WriteByte 1074  
                                   _TimerISR 193C                       __end_of_get_calib_data 1EC7  
                          null_ptr_check@dev 0073                                InsertString@i 0028  
                    ??_OSCILLATOR_Initialize 0070                             __size_of___aldiv 0081  
                           __size_of___aodiv 00F5                             __size_of___awdiv 0051  
                     ?_fill_standby_settings 0070                             __size_of___awmod 0045  
                            ??_ReverseString 0020                              ___aodiv@divisor 0030  
               __size_of_put_device_to_sleep 003C                              ___aodiv@counter 0040  
                ?_bme280_set_sensor_settings 00AD                            ClearString@counti 0078  
                                   crc16@crc 0024                                     _checksum 0165  
        __end_of_parse_temp_press_calib_data 06E1                  _parse_temp_press_calib_data 05EC  
                        I2C_UserAlert@status 0070               set_filter_standby_settings@dev 005C  
                             ReadEnvSensor@i 003A                                     __ptext10 1E38  
                                   __ptext11 04F7                                     __ptext20 1951  
                                   __ptext12 148B                                     __ptext21 133B  
                                   __ptext13 1AE3                                     __ptext30 19A2  
                                   __ptext22 1DF3                                     __ptext14 1BE7  
                                   __ptext31 1191                                     __ptext23 1262  
                                   __ptext15 19B9                                     __ptext40 1005  
                                   __ptext32 12CE                                     __ptext24 1FAF  
                                   __ptext16 195C                                     __ptext41 19D1  
                                   __ptext33 1946                                     __ptext25 1F5F  
                                   __ptext17 198C                                     __ptext50 05EC  
                                   __ptext42 1F11                                     __ptext34 0802  
                                   __ptext26 11F9                                     __ptext18 1AB9  
                                   __ptext51 1586                                     __ptext43 1DB1  
                                   __ptext35 1C43                                     __ptext27 1934  
                                   __ptext19 192D                                     __ptext60 1021  
                                   __ptext52 1D6F                                     __ptext44 1A08  
                                   __ptext36 1CB5                                     __ptext28 191B  
                                   __ptext61 1002                                     __ptext53 06E1  
                                   __ptext45 19EC                                     __ptext37 1A24  
                                   __ptext29 1A6C                                     __ptext62 1EC7  
                                   __ptext54 16BD                                     __ptext46 1074  
                                   __ptext38 1A91                                     __ptext63 1B38  
                                   __ptext55 1C7A                                     __ptext47 1B63  
                                   __ptext39 1D2E                                     __ptext64 1B0D  
                                   __ptext56 161F                                     __ptext48 1129  
                                   __ptext65 1978                                     __ptext57 1A47  
                                   __ptext49 1E7F                                     __ptext58 1BBA  
                                   __ptext67 1968                                     __ptext59 1417  
                                   __ptext68 07FF                                     __ptext69 193C  
                __end_of_interleave_reg_addr 1BE7                                 _SSP1CON1bits 0215  
                     __end_of_null_ptr_check 1A6C                                 _SSP1CON2bits 0216  
        __end_of_set_osr_press_temp_settings 1D6F                  _set_osr_press_temp_settings 1D2E  
              compensate_pressure@calib_data 007A                              _UIntToHexString 148B  
                             _TransmitString 1AE3                                __size_of_main 01D8  
                                  pnum$text9 002A            bme280_compensate_data@sensor_comp 0069  
                   ??_bme280_compensate_data 0067                         _fill_filter_settings 19EC  
          __end_of_parse_humidity_calib_data 161F                                  _message_end 03A0  
                       __end_of_crc16_update 1D2E                                     _messages 016D  
       __end_of_TMR0_DefaultInterruptHandler 0800        __size_of_TMR0_DefaultInterruptHandler 0001  
               _TMR0_DefaultInterruptHandler 07FF                         __CFG_WDTCWS$WDTCWSSW 0000  
                       __end_of_I2C_ReadByte 175E                              ?_get_calib_data 003E  
                _compensate_temperature$2351 003C                                     int$flags 007E  
         __end_of_INTERRUPT_InterruptManager 000D                   _INTERRUPT_InterruptManager 0004  
                            main@sensor_data 014A                     ??_fill_osr_temp_settings 0072  
                                 _INTCONbits 000B                       _bme280_get_sensor_data 10CC  
                          InsertString@index 0022                       _bme280_get_sensor_mode 1B63  
         set_osr_humidity_settings@ctrl_meas 0061                           bme280_set_regs@dev 003D  
                         bme280_set_regs@len 003C                parse_device_settings@reg_data 0073  
                             __pstringtext10 18B5                               __pstringtext11 18BA  
                             __pstringtext12 0000                     ??_compensate_temperature 0032  
          bme280_compensate_data@uncomp_data 0064                              ?_null_ptr_check 0070  
                 bme280_get_sensor_data@F271 01AC                   bme280_get_sensor_data@F273 01A0  
                     __end_of_TransmitString 1B0D                        __size_of_TransmitByte 002D  
                                   intlevel1 0000                     ??_bme280_set_sensor_mode 00AE  
                           TransmitByte@byte 0073                parse_device_settings@settings 0070  
              fill_standby_settings@reg_data 0075                                ??_ClearString 0077  
                      ?_fill_filter_settings 0070                      ?_PIN_MANAGER_Initialize 0070  
                 bme280_get_sensor_data@rslt 0129                            __CFG_CLKOUTEN$OFF 0000  
              ?_TMR0_DefaultInterruptHandler 0070                fill_standby_settings@settings 0070  
                         WriteEnvSensor@rslt 0038                         __size_of_bme280_init 0068  
             __size_of_parse_device_settings 0058                __end_of_parse_device_settings 10CC  
                              __pstringtext1 1800                                __pstringtext2 181A  
                              __pstringtext3 1834                                __pstringtext4 184E  
                              __pstringtext5 1868                                __pstringtext6 1882  
                              __pstringtext7 189C                                __pstringtext8 18AA  
                              __pstringtext9 18B0                         __size_of_TransmitBit 0018  
                                 _OPTION_REG 0095                                 _TransmitByte 1BE7  
                            _TMR0_Initialize 198C         are_settings_changed@settings_changed 0072  
                               ___aldiv@sign 0029                      __end_of_UIntToHexString 1505  
                          WriteEnvSensor@len 0032                             GetNavData@F10083 024A  
                           GetNavData@F10077 0158          __end_of_set_filter_standby_settings 1DF3  
                _set_filter_standby_settings 1DB1                   bme280_get_sensor_mode@rslt 0048  
                     __size_of_ReadEnvSensor 00D9                     ?_fill_osr_press_settings 0070  
                 bme280_set_sensor_mode@rslt 00B2                                 ___aodiv@sign 0041  
                            ?_TransmitString 0070               __end_of_PIN_MANAGER_Initialize 1AE3  
                            Insert@destLimit 0073          set_osr_press_temp_settings@reg_addr 0062  
        set_osr_press_temp_settings@reg_data 0063                          bme280_get_regs@rslt 0044  
                          I2C_WriteByte@data 007D              __size_of_bme280_compensate_data 006F  
                       __size_of_BME280_Init 0068          __size_of_bme280_set_sensor_settings 006D  
          bme280_get_sensor_data@sensor_comp 0128                  write_power_mode@sensor_mode 005E  
        set_osr_press_temp_settings@settings 005A  
