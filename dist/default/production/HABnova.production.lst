

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sun Jul 28 20:54:25 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F1619
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBANK3,global,class=CODE,delta=2
     6                           	psect	stringtext1,global,class=STRCODE,delta=2
     7                           	psect	stringtext2,global,class=STRCODE,delta=2
     8                           	psect	stringtext3,global,class=STRCODE,delta=2
     9                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	stringtext4,global,class=STRCODE,delta=2
    11                           	psect	stringtext5,global,class=STRCODE,delta=2
    12                           	psect	stringtext6,global,class=STRCODE,delta=2
    13                           	psect	stringtext7,global,class=STRCODE,delta=2
    14                           	psect	stringtext8,global,class=STRCODE,delta=2
    15                           	psect	stringtext9,global,class=STRCODE,delta=2
    16                           	psect	stringtext10,global,class=STRCODE,delta=2
    17                           	psect	stringtext11,global,class=STRCODE,delta=2
    18                           	psect	stringtext12,global,class=STRCODE,delta=2
    19                           	psect	stringtext13,global,class=STRCODE,delta=2
    20                           	psect	stringtext14,global,class=STRCODE,delta=2
    21                           	psect	cinit,global,class=CODE,merge=1,delta=2
    22                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    23                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    24                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    25                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    26                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    27                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    28                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    29                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    30                           	psect	inittext,global,class=CODE,delta=2
    31                           	psect	clrtext,global,class=CODE,delta=2
    32                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    33                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    34                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    35                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    36                           	psect	text1,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text4,local,class=CODE,merge=1,delta=2
    40                           	psect	text5,local,class=CODE,merge=1,delta=2
    41                           	psect	text6,local,class=CODE,merge=1,delta=2
    42                           	psect	text7,local,class=CODE,merge=1,delta=2
    43                           	psect	text8,local,class=CODE,merge=1,delta=2
    44                           	psect	text9,local,class=CODE,merge=1,delta=2
    45                           	psect	text10,local,class=CODE,merge=1,delta=2
    46                           	psect	text11,local,class=CODE,merge=1,delta=2
    47                           	psect	text12,local,class=CODE,merge=1,delta=2
    48                           	psect	text13,local,class=CODE,merge=1,delta=2
    49                           	psect	text14,local,class=CODE,merge=1,delta=2
    50                           	psect	text15,local,class=CODE,merge=1,delta=2
    51                           	psect	text16,local,class=CODE,merge=1,delta=2
    52                           	psect	text17,local,class=CODE,merge=1,delta=2
    53                           	psect	text18,local,class=CODE,merge=1,delta=2
    54                           	psect	text19,local,class=CODE,merge=1,delta=2
    55                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    56                           	psect	text21,local,class=CODE,merge=1,delta=2
    57                           	psect	text22,local,class=CODE,merge=1,delta=2
    58                           	psect	text23,local,class=CODE,merge=1,delta=2
    59                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    60                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    61                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    62                           	psect	text27,local,class=CODE,merge=1,delta=2,group=2
    63                           	psect	text28,local,class=CODE,merge=1,delta=2
    64                           	psect	text29,local,class=CODE,merge=1,delta=2
    65                           	psect	text30,local,class=CODE,merge=1,delta=2
    66                           	psect	text31,local,class=CODE,merge=1,delta=2,group=2
    67                           	psect	text32,local,class=CODE,merge=1,delta=2,group=2
    68                           	psect	text33,local,class=CODE,merge=1,delta=2,group=2
    69                           	psect	text34,local,class=CODE,merge=1,delta=2
    70                           	psect	text35,local,class=CODE,merge=1,delta=2
    71                           	psect	text36,local,class=CODE,merge=1,delta=2,group=2
    72                           	psect	text37,local,class=CODE,merge=1,delta=2,group=1
    73                           	psect	text38,local,class=CODE,merge=1,delta=2,group=1
    74                           	psect	text39,local,class=CODE,merge=1,delta=2,group=2
    75                           	psect	text40,local,class=CODE,merge=1,delta=2,group=2
    76                           	psect	text41,local,class=CODE,merge=1,delta=2,group=2
    77                           	psect	text42,local,class=CODE,merge=1,delta=2,group=1
    78                           	psect	text43,local,class=CODE,merge=1,delta=2
    79                           	psect	text44,local,class=CODE,merge=1,delta=2
    80                           	psect	text45,local,class=CODE,merge=1,delta=2
    81                           	psect	intentry,global,class=CODE,delta=2
    82                           	psect	text47,local,class=CODE,merge=1,delta=2
    83                           	psect	text48,local,class=CODE,merge=1,delta=2
    84                           	psect	text49,local,class=CODE,merge=1,delta=2
    85                           	dabs	1,0x7E,2
    86  0000                     
    87                           ; Version 2.05
    88                           ; Generated 20/12/2018 GMT
    89                           ; 
    90                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    91                           ; All rights reserved.
    92                           ; 
    93                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    94                           ; 
    95                           ; Redistribution and use in source and binary forms, with or without modification, are
    96                           ; permitted provided that the following conditions are met:
    97                           ; 
    98                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    99                           ;        conditions and the following disclaimer.
   100                           ; 
   101                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   102                           ;        of conditions and the following disclaimer in the documentation and/or other
   103                           ;        materials provided with the distribution.
   104                           ; 
   105                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   106                           ;        software without specific prior written permission.
   107                           ; 
   108                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   109                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   110                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   111                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   112                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   113                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   114                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   115                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   116                           ; 
   117                           ; 
   118                           ; Code-generator required, PIC16F1619 Definitions
   119                           ; 
   120                           ; SFR Addresses
   121  0000                     	;# 
   122  0001                     	;# 
   123  0002                     	;# 
   124  0003                     	;# 
   125  0004                     	;# 
   126  0005                     	;# 
   127  0006                     	;# 
   128  0007                     	;# 
   129  0008                     	;# 
   130  0009                     	;# 
   131  000A                     	;# 
   132  000B                     	;# 
   133  000C                     	;# 
   134  000D                     	;# 
   135  000E                     	;# 
   136  0010                     	;# 
   137  0011                     	;# 
   138  0012                     	;# 
   139  0013                     	;# 
   140  0014                     	;# 
   141  0015                     	;# 
   142  0016                     	;# 
   143  0016                     	;# 
   144  0017                     	;# 
   145  0018                     	;# 
   146  0019                     	;# 
   147  001A                     	;# 
   148  001A                     	;# 
   149  001B                     	;# 
   150  001B                     	;# 
   151  001C                     	;# 
   152  001D                     	;# 
   153  001E                     	;# 
   154  001F                     	;# 
   155  008C                     	;# 
   156  008D                     	;# 
   157  008E                     	;# 
   158  0090                     	;# 
   159  0091                     	;# 
   160  0092                     	;# 
   161  0093                     	;# 
   162  0094                     	;# 
   163  0095                     	;# 
   164  0096                     	;# 
   165  0098                     	;# 
   166  0099                     	;# 
   167  009A                     	;# 
   168  009B                     	;# 
   169  009B                     	;# 
   170  009C                     	;# 
   171  009D                     	;# 
   172  009E                     	;# 
   173  009F                     	;# 
   174  010C                     	;# 
   175  010D                     	;# 
   176  010E                     	;# 
   177  0111                     	;# 
   178  0112                     	;# 
   179  0113                     	;# 
   180  0114                     	;# 
   181  0115                     	;# 
   182  0116                     	;# 
   183  0117                     	;# 
   184  0118                     	;# 
   185  0119                     	;# 
   186  011C                     	;# 
   187  018C                     	;# 
   188  018D                     	;# 
   189  018E                     	;# 
   190  0191                     	;# 
   191  0191                     	;# 
   192  0192                     	;# 
   193  0193                     	;# 
   194  0193                     	;# 
   195  0194                     	;# 
   196  0195                     	;# 
   197  0196                     	;# 
   198  0197                     	;# 
   199  0199                     	;# 
   200  0199                     	;# 
   201  0199                     	;# 
   202  019A                     	;# 
   203  019A                     	;# 
   204  019A                     	;# 
   205  019B                     	;# 
   206  019B                     	;# 
   207  019B                     	;# 
   208  019B                     	;# 
   209  019B                     	;# 
   210  019C                     	;# 
   211  019C                     	;# 
   212  019C                     	;# 
   213  019D                     	;# 
   214  019D                     	;# 
   215  019D                     	;# 
   216  019E                     	;# 
   217  019E                     	;# 
   218  019E                     	;# 
   219  019F                     	;# 
   220  019F                     	;# 
   221  019F                     	;# 
   222  019F                     	;# 
   223  019F                     	;# 
   224  020C                     	;# 
   225  020D                     	;# 
   226  020E                     	;# 
   227  0211                     	;# 
   228  0211                     	;# 
   229  0212                     	;# 
   230  0212                     	;# 
   231  0213                     	;# 
   232  0213                     	;# 
   233  0214                     	;# 
   234  0214                     	;# 
   235  0215                     	;# 
   236  0215                     	;# 
   237  0215                     	;# 
   238  0215                     	;# 
   239  0216                     	;# 
   240  0216                     	;# 
   241  0217                     	;# 
   242  0217                     	;# 
   243  028C                     	;# 
   244  028D                     	;# 
   245  028E                     	;# 
   246  0291                     	;# 
   247  0291                     	;# 
   248  0292                     	;# 
   249  0293                     	;# 
   250  0294                     	;# 
   251  0298                     	;# 
   252  0298                     	;# 
   253  0299                     	;# 
   254  029A                     	;# 
   255  029B                     	;# 
   256  029E                     	;# 
   257  030C                     	;# 
   258  030D                     	;# 
   259  030E                     	;# 
   260  038C                     	;# 
   261  038D                     	;# 
   262  038E                     	;# 
   263  0391                     	;# 
   264  0392                     	;# 
   265  0393                     	;# 
   266  0394                     	;# 
   267  0395                     	;# 
   268  0396                     	;# 
   269  0397                     	;# 
   270  0398                     	;# 
   271  0399                     	;# 
   272  040E                     	;# 
   273  0413                     	;# 
   274  0413                     	;# 
   275  0414                     	;# 
   276  0414                     	;# 
   277  0415                     	;# 
   278  0416                     	;# 
   279  0417                     	;# 
   280  0418                     	;# 
   281  041A                     	;# 
   282  041A                     	;# 
   283  041B                     	;# 
   284  041B                     	;# 
   285  041C                     	;# 
   286  041D                     	;# 
   287  041E                     	;# 
   288  041F                     	;# 
   289  0493                     	;# 
   290  0494                     	;# 
   291  0495                     	;# 
   292  0496                     	;# 
   293  049A                     	;# 
   294  049B                     	;# 
   295  049C                     	;# 
   296  049D                     	;# 
   297  058C                     	;# 
   298  058C                     	;# 
   299  058D                     	;# 
   300  058E                     	;# 
   301  058E                     	;# 
   302  058F                     	;# 
   303  0590                     	;# 
   304  0590                     	;# 
   305  0591                     	;# 
   306  0592                     	;# 
   307  0592                     	;# 
   308  0593                     	;# 
   309  0594                     	;# 
   310  0594                     	;# 
   311  0595                     	;# 
   312  0596                     	;# 
   313  0596                     	;# 
   314  0597                     	;# 
   315  0598                     	;# 
   316  0599                     	;# 
   317  059A                     	;# 
   318  059B                     	;# 
   319  059B                     	;# 
   320  059C                     	;# 
   321  059D                     	;# 
   322  060C                     	;# 
   323  060C                     	;# 
   324  060D                     	;# 
   325  060E                     	;# 
   326  060F                     	;# 
   327  060F                     	;# 
   328  0610                     	;# 
   329  0611                     	;# 
   330  0612                     	;# 
   331  0613                     	;# 
   332  0614                     	;# 
   333  0617                     	;# 
   334  0617                     	;# 
   335  0618                     	;# 
   336  0619                     	;# 
   337  061A                     	;# 
   338  061A                     	;# 
   339  061B                     	;# 
   340  061C                     	;# 
   341  0691                     	;# 
   342  0692                     	;# 
   343  0693                     	;# 
   344  0694                     	;# 
   345  0695                     	;# 
   346  0696                     	;# 
   347  0697                     	;# 
   348  0699                     	;# 
   349  069A                     	;# 
   350  0711                     	;# 
   351  0712                     	;# 
   352  0713                     	;# 
   353  0714                     	;# 
   354  0715                     	;# 
   355  0718                     	;# 
   356  0718                     	;# 
   357  0719                     	;# 
   358  071A                     	;# 
   359  071A                     	;# 
   360  071B                     	;# 
   361  071C                     	;# 
   362  071D                     	;# 
   363  0791                     	;# 
   364  0791                     	;# 
   365  0792                     	;# 
   366  0793                     	;# 
   367  0793                     	;# 
   368  0794                     	;# 
   369  0795                     	;# 
   370  0795                     	;# 
   371  0796                     	;# 
   372  0797                     	;# 
   373  0797                     	;# 
   374  0798                     	;# 
   375  0799                     	;# 
   376  079A                     	;# 
   377  080C                     	;# 
   378  080C                     	;# 
   379  080D                     	;# 
   380  080E                     	;# 
   381  080E                     	;# 
   382  080F                     	;# 
   383  0810                     	;# 
   384  0810                     	;# 
   385  0811                     	;# 
   386  0812                     	;# 
   387  0812                     	;# 
   388  0813                     	;# 
   389  0814                     	;# 
   390  0815                     	;# 
   391  0816                     	;# 
   392  0817                     	;# 
   393  0818                     	;# 
   394  0819                     	;# 
   395  081A                     	;# 
   396  081A                     	;# 
   397  081B                     	;# 
   398  081C                     	;# 
   399  081C                     	;# 
   400  081D                     	;# 
   401  088C                     	;# 
   402  088D                     	;# 
   403  088E                     	;# 
   404  088F                     	;# 
   405  088F                     	;# 
   406  0890                     	;# 
   407  0891                     	;# 
   408  0892                     	;# 
   409  0893                     	;# 
   410  0893                     	;# 
   411  0894                     	;# 
   412  0895                     	;# 
   413  0896                     	;# 
   414  0897                     	;# 
   415  0897                     	;# 
   416  0898                     	;# 
   417  0899                     	;# 
   418  0D8C                     	;# 
   419  0D8C                     	;# 
   420  0D8D                     	;# 
   421  0D8E                     	;# 
   422  0D8F                     	;# 
   423  0D8F                     	;# 
   424  0D90                     	;# 
   425  0D91                     	;# 
   426  0D92                     	;# 
   427  0D92                     	;# 
   428  0D93                     	;# 
   429  0D94                     	;# 
   430  0D95                     	;# 
   431  0D95                     	;# 
   432  0D96                     	;# 
   433  0D97                     	;# 
   434  0D98                     	;# 
   435  0D99                     	;# 
   436  0D9A                     	;# 
   437  0D9B                     	;# 
   438  0D9C                     	;# 
   439  0D9D                     	;# 
   440  0D9E                     	;# 
   441  0D9E                     	;# 
   442  0D9F                     	;# 
   443  0DA0                     	;# 
   444  0DA1                     	;# 
   445  0DA1                     	;# 
   446  0DA2                     	;# 
   447  0DA3                     	;# 
   448  0DA4                     	;# 
   449  0DA4                     	;# 
   450  0DA5                     	;# 
   451  0DA6                     	;# 
   452  0DA7                     	;# 
   453  0DA7                     	;# 
   454  0DA8                     	;# 
   455  0DA9                     	;# 
   456  0DAA                     	;# 
   457  0DAB                     	;# 
   458  0DAC                     	;# 
   459  0DAD                     	;# 
   460  0DAE                     	;# 
   461  0DAF                     	;# 
   462  0E0F                     	;# 
   463  0E10                     	;# 
   464  0E11                     	;# 
   465  0E12                     	;# 
   466  0E13                     	;# 
   467  0E14                     	;# 
   468  0E15                     	;# 
   469  0E16                     	;# 
   470  0E17                     	;# 
   471  0E18                     	;# 
   472  0E19                     	;# 
   473  0E1A                     	;# 
   474  0E1B                     	;# 
   475  0E1C                     	;# 
   476  0E1D                     	;# 
   477  0E1E                     	;# 
   478  0E1F                     	;# 
   479  0E20                     	;# 
   480  0E21                     	;# 
   481  0E22                     	;# 
   482  0E23                     	;# 
   483  0E24                     	;# 
   484  0E25                     	;# 
   485  0E26                     	;# 
   486  0E27                     	;# 
   487  0E28                     	;# 
   488  0E29                     	;# 
   489  0E2A                     	;# 
   490  0E2B                     	;# 
   491  0E2C                     	;# 
   492  0E2D                     	;# 
   493  0E2E                     	;# 
   494  0E90                     	;# 
   495  0E91                     	;# 
   496  0E92                     	;# 
   497  0E94                     	;# 
   498  0E95                     	;# 
   499  0E9C                     	;# 
   500  0E9D                     	;# 
   501  0E9E                     	;# 
   502  0E9F                     	;# 
   503  0EA0                     	;# 
   504  0EA1                     	;# 
   505  0EA2                     	;# 
   506  0EA3                     	;# 
   507  0EA4                     	;# 
   508  0EA5                     	;# 
   509  0EA6                     	;# 
   510  0EA7                     	;# 
   511  0F0F                     	;# 
   512  0F10                     	;# 
   513  0F11                     	;# 
   514  0F12                     	;# 
   515  0F13                     	;# 
   516  0F14                     	;# 
   517  0F15                     	;# 
   518  0F16                     	;# 
   519  0F17                     	;# 
   520  0F18                     	;# 
   521  0F19                     	;# 
   522  0F1A                     	;# 
   523  0F1B                     	;# 
   524  0F1C                     	;# 
   525  0F1D                     	;# 
   526  0F1E                     	;# 
   527  0F1F                     	;# 
   528  0F20                     	;# 
   529  0F21                     	;# 
   530  0F22                     	;# 
   531  0F23                     	;# 
   532  0F24                     	;# 
   533  0F25                     	;# 
   534  0F26                     	;# 
   535  0F27                     	;# 
   536  0F28                     	;# 
   537  0F29                     	;# 
   538  0F2A                     	;# 
   539  0F2B                     	;# 
   540  0F2C                     	;# 
   541  0F2D                     	;# 
   542  0F2E                     	;# 
   543  0F2F                     	;# 
   544  0F30                     	;# 
   545  0F31                     	;# 
   546  0F32                     	;# 
   547  0F33                     	;# 
   548  0F34                     	;# 
   549  0F35                     	;# 
   550  0F36                     	;# 
   551  0F37                     	;# 
   552  0FE4                     	;# 
   553  0FE5                     	;# 
   554  0FE6                     	;# 
   555  0FE7                     	;# 
   556  0FE8                     	;# 
   557  0FE9                     	;# 
   558  0FEA                     	;# 
   559  0FEB                     	;# 
   560  0FED                     	;# 
   561  0FEE                     	;# 
   562  0FEF                     	;# 
   563  0000                     	;# 
   564  0001                     	;# 
   565  0002                     	;# 
   566  0003                     	;# 
   567  0004                     	;# 
   568  0005                     	;# 
   569  0006                     	;# 
   570  0007                     	;# 
   571  0008                     	;# 
   572  0009                     	;# 
   573  000A                     	;# 
   574  000B                     	;# 
   575  000C                     	;# 
   576  000D                     	;# 
   577  000E                     	;# 
   578  0010                     	;# 
   579  0011                     	;# 
   580  0012                     	;# 
   581  0013                     	;# 
   582  0014                     	;# 
   583  0015                     	;# 
   584  0016                     	;# 
   585  0016                     	;# 
   586  0017                     	;# 
   587  0018                     	;# 
   588  0019                     	;# 
   589  001A                     	;# 
   590  001A                     	;# 
   591  001B                     	;# 
   592  001B                     	;# 
   593  001C                     	;# 
   594  001D                     	;# 
   595  001E                     	;# 
   596  001F                     	;# 
   597  008C                     	;# 
   598  008D                     	;# 
   599  008E                     	;# 
   600  0090                     	;# 
   601  0091                     	;# 
   602  0092                     	;# 
   603  0093                     	;# 
   604  0094                     	;# 
   605  0095                     	;# 
   606  0096                     	;# 
   607  0098                     	;# 
   608  0099                     	;# 
   609  009A                     	;# 
   610  009B                     	;# 
   611  009B                     	;# 
   612  009C                     	;# 
   613  009D                     	;# 
   614  009E                     	;# 
   615  009F                     	;# 
   616  010C                     	;# 
   617  010D                     	;# 
   618  010E                     	;# 
   619  0111                     	;# 
   620  0112                     	;# 
   621  0113                     	;# 
   622  0114                     	;# 
   623  0115                     	;# 
   624  0116                     	;# 
   625  0117                     	;# 
   626  0118                     	;# 
   627  0119                     	;# 
   628  011C                     	;# 
   629  018C                     	;# 
   630  018D                     	;# 
   631  018E                     	;# 
   632  0191                     	;# 
   633  0191                     	;# 
   634  0192                     	;# 
   635  0193                     	;# 
   636  0193                     	;# 
   637  0194                     	;# 
   638  0195                     	;# 
   639  0196                     	;# 
   640  0197                     	;# 
   641  0199                     	;# 
   642  0199                     	;# 
   643  0199                     	;# 
   644  019A                     	;# 
   645  019A                     	;# 
   646  019A                     	;# 
   647  019B                     	;# 
   648  019B                     	;# 
   649  019B                     	;# 
   650  019B                     	;# 
   651  019B                     	;# 
   652  019C                     	;# 
   653  019C                     	;# 
   654  019C                     	;# 
   655  019D                     	;# 
   656  019D                     	;# 
   657  019D                     	;# 
   658  019E                     	;# 
   659  019E                     	;# 
   660  019E                     	;# 
   661  019F                     	;# 
   662  019F                     	;# 
   663  019F                     	;# 
   664  019F                     	;# 
   665  019F                     	;# 
   666  020C                     	;# 
   667  020D                     	;# 
   668  020E                     	;# 
   669  0211                     	;# 
   670  0211                     	;# 
   671  0212                     	;# 
   672  0212                     	;# 
   673  0213                     	;# 
   674  0213                     	;# 
   675  0214                     	;# 
   676  0214                     	;# 
   677  0215                     	;# 
   678  0215                     	;# 
   679  0215                     	;# 
   680  0215                     	;# 
   681  0216                     	;# 
   682  0216                     	;# 
   683  0217                     	;# 
   684  0217                     	;# 
   685  028C                     	;# 
   686  028D                     	;# 
   687  028E                     	;# 
   688  0291                     	;# 
   689  0291                     	;# 
   690  0292                     	;# 
   691  0293                     	;# 
   692  0294                     	;# 
   693  0298                     	;# 
   694  0298                     	;# 
   695  0299                     	;# 
   696  029A                     	;# 
   697  029B                     	;# 
   698  029E                     	;# 
   699  030C                     	;# 
   700  030D                     	;# 
   701  030E                     	;# 
   702  038C                     	;# 
   703  038D                     	;# 
   704  038E                     	;# 
   705  0391                     	;# 
   706  0392                     	;# 
   707  0393                     	;# 
   708  0394                     	;# 
   709  0395                     	;# 
   710  0396                     	;# 
   711  0397                     	;# 
   712  0398                     	;# 
   713  0399                     	;# 
   714  040E                     	;# 
   715  0413                     	;# 
   716  0413                     	;# 
   717  0414                     	;# 
   718  0414                     	;# 
   719  0415                     	;# 
   720  0416                     	;# 
   721  0417                     	;# 
   722  0418                     	;# 
   723  041A                     	;# 
   724  041A                     	;# 
   725  041B                     	;# 
   726  041B                     	;# 
   727  041C                     	;# 
   728  041D                     	;# 
   729  041E                     	;# 
   730  041F                     	;# 
   731  0493                     	;# 
   732  0494                     	;# 
   733  0495                     	;# 
   734  0496                     	;# 
   735  049A                     	;# 
   736  049B                     	;# 
   737  049C                     	;# 
   738  049D                     	;# 
   739  058C                     	;# 
   740  058C                     	;# 
   741  058D                     	;# 
   742  058E                     	;# 
   743  058E                     	;# 
   744  058F                     	;# 
   745  0590                     	;# 
   746  0590                     	;# 
   747  0591                     	;# 
   748  0592                     	;# 
   749  0592                     	;# 
   750  0593                     	;# 
   751  0594                     	;# 
   752  0594                     	;# 
   753  0595                     	;# 
   754  0596                     	;# 
   755  0596                     	;# 
   756  0597                     	;# 
   757  0598                     	;# 
   758  0599                     	;# 
   759  059A                     	;# 
   760  059B                     	;# 
   761  059B                     	;# 
   762  059C                     	;# 
   763  059D                     	;# 
   764  060C                     	;# 
   765  060C                     	;# 
   766  060D                     	;# 
   767  060E                     	;# 
   768  060F                     	;# 
   769  060F                     	;# 
   770  0610                     	;# 
   771  0611                     	;# 
   772  0612                     	;# 
   773  0613                     	;# 
   774  0614                     	;# 
   775  0617                     	;# 
   776  0617                     	;# 
   777  0618                     	;# 
   778  0619                     	;# 
   779  061A                     	;# 
   780  061A                     	;# 
   781  061B                     	;# 
   782  061C                     	;# 
   783  0691                     	;# 
   784  0692                     	;# 
   785  0693                     	;# 
   786  0694                     	;# 
   787  0695                     	;# 
   788  0696                     	;# 
   789  0697                     	;# 
   790  0699                     	;# 
   791  069A                     	;# 
   792  0711                     	;# 
   793  0712                     	;# 
   794  0713                     	;# 
   795  0714                     	;# 
   796  0715                     	;# 
   797  0718                     	;# 
   798  0718                     	;# 
   799  0719                     	;# 
   800  071A                     	;# 
   801  071A                     	;# 
   802  071B                     	;# 
   803  071C                     	;# 
   804  071D                     	;# 
   805  0791                     	;# 
   806  0791                     	;# 
   807  0792                     	;# 
   808  0793                     	;# 
   809  0793                     	;# 
   810  0794                     	;# 
   811  0795                     	;# 
   812  0795                     	;# 
   813  0796                     	;# 
   814  0797                     	;# 
   815  0797                     	;# 
   816  0798                     	;# 
   817  0799                     	;# 
   818  079A                     	;# 
   819  080C                     	;# 
   820  080C                     	;# 
   821  080D                     	;# 
   822  080E                     	;# 
   823  080E                     	;# 
   824  080F                     	;# 
   825  0810                     	;# 
   826  0810                     	;# 
   827  0811                     	;# 
   828  0812                     	;# 
   829  0812                     	;# 
   830  0813                     	;# 
   831  0814                     	;# 
   832  0815                     	;# 
   833  0816                     	;# 
   834  0817                     	;# 
   835  0818                     	;# 
   836  0819                     	;# 
   837  081A                     	;# 
   838  081A                     	;# 
   839  081B                     	;# 
   840  081C                     	;# 
   841  081C                     	;# 
   842  081D                     	;# 
   843  088C                     	;# 
   844  088D                     	;# 
   845  088E                     	;# 
   846  088F                     	;# 
   847  088F                     	;# 
   848  0890                     	;# 
   849  0891                     	;# 
   850  0892                     	;# 
   851  0893                     	;# 
   852  0893                     	;# 
   853  0894                     	;# 
   854  0895                     	;# 
   855  0896                     	;# 
   856  0897                     	;# 
   857  0897                     	;# 
   858  0898                     	;# 
   859  0899                     	;# 
   860  0D8C                     	;# 
   861  0D8C                     	;# 
   862  0D8D                     	;# 
   863  0D8E                     	;# 
   864  0D8F                     	;# 
   865  0D8F                     	;# 
   866  0D90                     	;# 
   867  0D91                     	;# 
   868  0D92                     	;# 
   869  0D92                     	;# 
   870  0D93                     	;# 
   871  0D94                     	;# 
   872  0D95                     	;# 
   873  0D95                     	;# 
   874  0D96                     	;# 
   875  0D97                     	;# 
   876  0D98                     	;# 
   877  0D99                     	;# 
   878  0D9A                     	;# 
   879  0D9B                     	;# 
   880  0D9C                     	;# 
   881  0D9D                     	;# 
   882  0D9E                     	;# 
   883  0D9E                     	;# 
   884  0D9F                     	;# 
   885  0DA0                     	;# 
   886  0DA1                     	;# 
   887  0DA1                     	;# 
   888  0DA2                     	;# 
   889  0DA3                     	;# 
   890  0DA4                     	;# 
   891  0DA4                     	;# 
   892  0DA5                     	;# 
   893  0DA6                     	;# 
   894  0DA7                     	;# 
   895  0DA7                     	;# 
   896  0DA8                     	;# 
   897  0DA9                     	;# 
   898  0DAA                     	;# 
   899  0DAB                     	;# 
   900  0DAC                     	;# 
   901  0DAD                     	;# 
   902  0DAE                     	;# 
   903  0DAF                     	;# 
   904  0E0F                     	;# 
   905  0E10                     	;# 
   906  0E11                     	;# 
   907  0E12                     	;# 
   908  0E13                     	;# 
   909  0E14                     	;# 
   910  0E15                     	;# 
   911  0E16                     	;# 
   912  0E17                     	;# 
   913  0E18                     	;# 
   914  0E19                     	;# 
   915  0E1A                     	;# 
   916  0E1B                     	;# 
   917  0E1C                     	;# 
   918  0E1D                     	;# 
   919  0E1E                     	;# 
   920  0E1F                     	;# 
   921  0E20                     	;# 
   922  0E21                     	;# 
   923  0E22                     	;# 
   924  0E23                     	;# 
   925  0E24                     	;# 
   926  0E25                     	;# 
   927  0E26                     	;# 
   928  0E27                     	;# 
   929  0E28                     	;# 
   930  0E29                     	;# 
   931  0E2A                     	;# 
   932  0E2B                     	;# 
   933  0E2C                     	;# 
   934  0E2D                     	;# 
   935  0E2E                     	;# 
   936  0E90                     	;# 
   937  0E91                     	;# 
   938  0E92                     	;# 
   939  0E94                     	;# 
   940  0E95                     	;# 
   941  0E9C                     	;# 
   942  0E9D                     	;# 
   943  0E9E                     	;# 
   944  0E9F                     	;# 
   945  0EA0                     	;# 
   946  0EA1                     	;# 
   947  0EA2                     	;# 
   948  0EA3                     	;# 
   949  0EA4                     	;# 
   950  0EA5                     	;# 
   951  0EA6                     	;# 
   952  0EA7                     	;# 
   953  0F0F                     	;# 
   954  0F10                     	;# 
   955  0F11                     	;# 
   956  0F12                     	;# 
   957  0F13                     	;# 
   958  0F14                     	;# 
   959  0F15                     	;# 
   960  0F16                     	;# 
   961  0F17                     	;# 
   962  0F18                     	;# 
   963  0F19                     	;# 
   964  0F1A                     	;# 
   965  0F1B                     	;# 
   966  0F1C                     	;# 
   967  0F1D                     	;# 
   968  0F1E                     	;# 
   969  0F1F                     	;# 
   970  0F20                     	;# 
   971  0F21                     	;# 
   972  0F22                     	;# 
   973  0F23                     	;# 
   974  0F24                     	;# 
   975  0F25                     	;# 
   976  0F26                     	;# 
   977  0F27                     	;# 
   978  0F28                     	;# 
   979  0F29                     	;# 
   980  0F2A                     	;# 
   981  0F2B                     	;# 
   982  0F2C                     	;# 
   983  0F2D                     	;# 
   984  0F2E                     	;# 
   985  0F2F                     	;# 
   986  0F30                     	;# 
   987  0F31                     	;# 
   988  0F32                     	;# 
   989  0F33                     	;# 
   990  0F34                     	;# 
   991  0F35                     	;# 
   992  0F36                     	;# 
   993  0F37                     	;# 
   994  0FE4                     	;# 
   995  0FE5                     	;# 
   996  0FE6                     	;# 
   997  0FE7                     	;# 
   998  0FE8                     	;# 
   999  0FE9                     	;# 
  1000  0FEA                     	;# 
  1001  0FEB                     	;# 
  1002  0FED                     	;# 
  1003  0FEE                     	;# 
  1004  0FEF                     	;# 
  1005  0000                     	;# 
  1006  0001                     	;# 
  1007  0002                     	;# 
  1008  0003                     	;# 
  1009  0004                     	;# 
  1010  0005                     	;# 
  1011  0006                     	;# 
  1012  0007                     	;# 
  1013  0008                     	;# 
  1014  0009                     	;# 
  1015  000A                     	;# 
  1016  000B                     	;# 
  1017  000C                     	;# 
  1018  000D                     	;# 
  1019  000E                     	;# 
  1020  0010                     	;# 
  1021  0011                     	;# 
  1022  0012                     	;# 
  1023  0013                     	;# 
  1024  0014                     	;# 
  1025  0015                     	;# 
  1026  0016                     	;# 
  1027  0016                     	;# 
  1028  0017                     	;# 
  1029  0018                     	;# 
  1030  0019                     	;# 
  1031  001A                     	;# 
  1032  001A                     	;# 
  1033  001B                     	;# 
  1034  001B                     	;# 
  1035  001C                     	;# 
  1036  001D                     	;# 
  1037  001E                     	;# 
  1038  001F                     	;# 
  1039  008C                     	;# 
  1040  008D                     	;# 
  1041  008E                     	;# 
  1042  0090                     	;# 
  1043  0091                     	;# 
  1044  0092                     	;# 
  1045  0093                     	;# 
  1046  0094                     	;# 
  1047  0095                     	;# 
  1048  0096                     	;# 
  1049  0098                     	;# 
  1050  0099                     	;# 
  1051  009A                     	;# 
  1052  009B                     	;# 
  1053  009B                     	;# 
  1054  009C                     	;# 
  1055  009D                     	;# 
  1056  009E                     	;# 
  1057  009F                     	;# 
  1058  010C                     	;# 
  1059  010D                     	;# 
  1060  010E                     	;# 
  1061  0111                     	;# 
  1062  0112                     	;# 
  1063  0113                     	;# 
  1064  0114                     	;# 
  1065  0115                     	;# 
  1066  0116                     	;# 
  1067  0117                     	;# 
  1068  0118                     	;# 
  1069  0119                     	;# 
  1070  011C                     	;# 
  1071  018C                     	;# 
  1072  018D                     	;# 
  1073  018E                     	;# 
  1074  0191                     	;# 
  1075  0191                     	;# 
  1076  0192                     	;# 
  1077  0193                     	;# 
  1078  0193                     	;# 
  1079  0194                     	;# 
  1080  0195                     	;# 
  1081  0196                     	;# 
  1082  0197                     	;# 
  1083  0199                     	;# 
  1084  0199                     	;# 
  1085  0199                     	;# 
  1086  019A                     	;# 
  1087  019A                     	;# 
  1088  019A                     	;# 
  1089  019B                     	;# 
  1090  019B                     	;# 
  1091  019B                     	;# 
  1092  019B                     	;# 
  1093  019B                     	;# 
  1094  019C                     	;# 
  1095  019C                     	;# 
  1096  019C                     	;# 
  1097  019D                     	;# 
  1098  019D                     	;# 
  1099  019D                     	;# 
  1100  019E                     	;# 
  1101  019E                     	;# 
  1102  019E                     	;# 
  1103  019F                     	;# 
  1104  019F                     	;# 
  1105  019F                     	;# 
  1106  019F                     	;# 
  1107  019F                     	;# 
  1108  020C                     	;# 
  1109  020D                     	;# 
  1110  020E                     	;# 
  1111  0211                     	;# 
  1112  0211                     	;# 
  1113  0212                     	;# 
  1114  0212                     	;# 
  1115  0213                     	;# 
  1116  0213                     	;# 
  1117  0214                     	;# 
  1118  0214                     	;# 
  1119  0215                     	;# 
  1120  0215                     	;# 
  1121  0215                     	;# 
  1122  0215                     	;# 
  1123  0216                     	;# 
  1124  0216                     	;# 
  1125  0217                     	;# 
  1126  0217                     	;# 
  1127  028C                     	;# 
  1128  028D                     	;# 
  1129  028E                     	;# 
  1130  0291                     	;# 
  1131  0291                     	;# 
  1132  0292                     	;# 
  1133  0293                     	;# 
  1134  0294                     	;# 
  1135  0298                     	;# 
  1136  0298                     	;# 
  1137  0299                     	;# 
  1138  029A                     	;# 
  1139  029B                     	;# 
  1140  029E                     	;# 
  1141  030C                     	;# 
  1142  030D                     	;# 
  1143  030E                     	;# 
  1144  038C                     	;# 
  1145  038D                     	;# 
  1146  038E                     	;# 
  1147  0391                     	;# 
  1148  0392                     	;# 
  1149  0393                     	;# 
  1150  0394                     	;# 
  1151  0395                     	;# 
  1152  0396                     	;# 
  1153  0397                     	;# 
  1154  0398                     	;# 
  1155  0399                     	;# 
  1156  040E                     	;# 
  1157  0413                     	;# 
  1158  0413                     	;# 
  1159  0414                     	;# 
  1160  0414                     	;# 
  1161  0415                     	;# 
  1162  0416                     	;# 
  1163  0417                     	;# 
  1164  0418                     	;# 
  1165  041A                     	;# 
  1166  041A                     	;# 
  1167  041B                     	;# 
  1168  041B                     	;# 
  1169  041C                     	;# 
  1170  041D                     	;# 
  1171  041E                     	;# 
  1172  041F                     	;# 
  1173  0493                     	;# 
  1174  0494                     	;# 
  1175  0495                     	;# 
  1176  0496                     	;# 
  1177  049A                     	;# 
  1178  049B                     	;# 
  1179  049C                     	;# 
  1180  049D                     	;# 
  1181  058C                     	;# 
  1182  058C                     	;# 
  1183  058D                     	;# 
  1184  058E                     	;# 
  1185  058E                     	;# 
  1186  058F                     	;# 
  1187  0590                     	;# 
  1188  0590                     	;# 
  1189  0591                     	;# 
  1190  0592                     	;# 
  1191  0592                     	;# 
  1192  0593                     	;# 
  1193  0594                     	;# 
  1194  0594                     	;# 
  1195  0595                     	;# 
  1196  0596                     	;# 
  1197  0596                     	;# 
  1198  0597                     	;# 
  1199  0598                     	;# 
  1200  0599                     	;# 
  1201  059A                     	;# 
  1202  059B                     	;# 
  1203  059B                     	;# 
  1204  059C                     	;# 
  1205  059D                     	;# 
  1206  060C                     	;# 
  1207  060C                     	;# 
  1208  060D                     	;# 
  1209  060E                     	;# 
  1210  060F                     	;# 
  1211  060F                     	;# 
  1212  0610                     	;# 
  1213  0611                     	;# 
  1214  0612                     	;# 
  1215  0613                     	;# 
  1216  0614                     	;# 
  1217  0617                     	;# 
  1218  0617                     	;# 
  1219  0618                     	;# 
  1220  0619                     	;# 
  1221  061A                     	;# 
  1222  061A                     	;# 
  1223  061B                     	;# 
  1224  061C                     	;# 
  1225  0691                     	;# 
  1226  0692                     	;# 
  1227  0693                     	;# 
  1228  0694                     	;# 
  1229  0695                     	;# 
  1230  0696                     	;# 
  1231  0697                     	;# 
  1232  0699                     	;# 
  1233  069A                     	;# 
  1234  0711                     	;# 
  1235  0712                     	;# 
  1236  0713                     	;# 
  1237  0714                     	;# 
  1238  0715                     	;# 
  1239  0718                     	;# 
  1240  0718                     	;# 
  1241  0719                     	;# 
  1242  071A                     	;# 
  1243  071A                     	;# 
  1244  071B                     	;# 
  1245  071C                     	;# 
  1246  071D                     	;# 
  1247  0791                     	;# 
  1248  0791                     	;# 
  1249  0792                     	;# 
  1250  0793                     	;# 
  1251  0793                     	;# 
  1252  0794                     	;# 
  1253  0795                     	;# 
  1254  0795                     	;# 
  1255  0796                     	;# 
  1256  0797                     	;# 
  1257  0797                     	;# 
  1258  0798                     	;# 
  1259  0799                     	;# 
  1260  079A                     	;# 
  1261  080C                     	;# 
  1262  080C                     	;# 
  1263  080D                     	;# 
  1264  080E                     	;# 
  1265  080E                     	;# 
  1266  080F                     	;# 
  1267  0810                     	;# 
  1268  0810                     	;# 
  1269  0811                     	;# 
  1270  0812                     	;# 
  1271  0812                     	;# 
  1272  0813                     	;# 
  1273  0814                     	;# 
  1274  0815                     	;# 
  1275  0816                     	;# 
  1276  0817                     	;# 
  1277  0818                     	;# 
  1278  0819                     	;# 
  1279  081A                     	;# 
  1280  081A                     	;# 
  1281  081B                     	;# 
  1282  081C                     	;# 
  1283  081C                     	;# 
  1284  081D                     	;# 
  1285  088C                     	;# 
  1286  088D                     	;# 
  1287  088E                     	;# 
  1288  088F                     	;# 
  1289  088F                     	;# 
  1290  0890                     	;# 
  1291  0891                     	;# 
  1292  0892                     	;# 
  1293  0893                     	;# 
  1294  0893                     	;# 
  1295  0894                     	;# 
  1296  0895                     	;# 
  1297  0896                     	;# 
  1298  0897                     	;# 
  1299  0897                     	;# 
  1300  0898                     	;# 
  1301  0899                     	;# 
  1302  0D8C                     	;# 
  1303  0D8C                     	;# 
  1304  0D8D                     	;# 
  1305  0D8E                     	;# 
  1306  0D8F                     	;# 
  1307  0D8F                     	;# 
  1308  0D90                     	;# 
  1309  0D91                     	;# 
  1310  0D92                     	;# 
  1311  0D92                     	;# 
  1312  0D93                     	;# 
  1313  0D94                     	;# 
  1314  0D95                     	;# 
  1315  0D95                     	;# 
  1316  0D96                     	;# 
  1317  0D97                     	;# 
  1318  0D98                     	;# 
  1319  0D99                     	;# 
  1320  0D9A                     	;# 
  1321  0D9B                     	;# 
  1322  0D9C                     	;# 
  1323  0D9D                     	;# 
  1324  0D9E                     	;# 
  1325  0D9E                     	;# 
  1326  0D9F                     	;# 
  1327  0DA0                     	;# 
  1328  0DA1                     	;# 
  1329  0DA1                     	;# 
  1330  0DA2                     	;# 
  1331  0DA3                     	;# 
  1332  0DA4                     	;# 
  1333  0DA4                     	;# 
  1334  0DA5                     	;# 
  1335  0DA6                     	;# 
  1336  0DA7                     	;# 
  1337  0DA7                     	;# 
  1338  0DA8                     	;# 
  1339  0DA9                     	;# 
  1340  0DAA                     	;# 
  1341  0DAB                     	;# 
  1342  0DAC                     	;# 
  1343  0DAD                     	;# 
  1344  0DAE                     	;# 
  1345  0DAF                     	;# 
  1346  0E0F                     	;# 
  1347  0E10                     	;# 
  1348  0E11                     	;# 
  1349  0E12                     	;# 
  1350  0E13                     	;# 
  1351  0E14                     	;# 
  1352  0E15                     	;# 
  1353  0E16                     	;# 
  1354  0E17                     	;# 
  1355  0E18                     	;# 
  1356  0E19                     	;# 
  1357  0E1A                     	;# 
  1358  0E1B                     	;# 
  1359  0E1C                     	;# 
  1360  0E1D                     	;# 
  1361  0E1E                     	;# 
  1362  0E1F                     	;# 
  1363  0E20                     	;# 
  1364  0E21                     	;# 
  1365  0E22                     	;# 
  1366  0E23                     	;# 
  1367  0E24                     	;# 
  1368  0E25                     	;# 
  1369  0E26                     	;# 
  1370  0E27                     	;# 
  1371  0E28                     	;# 
  1372  0E29                     	;# 
  1373  0E2A                     	;# 
  1374  0E2B                     	;# 
  1375  0E2C                     	;# 
  1376  0E2D                     	;# 
  1377  0E2E                     	;# 
  1378  0E90                     	;# 
  1379  0E91                     	;# 
  1380  0E92                     	;# 
  1381  0E94                     	;# 
  1382  0E95                     	;# 
  1383  0E9C                     	;# 
  1384  0E9D                     	;# 
  1385  0E9E                     	;# 
  1386  0E9F                     	;# 
  1387  0EA0                     	;# 
  1388  0EA1                     	;# 
  1389  0EA2                     	;# 
  1390  0EA3                     	;# 
  1391  0EA4                     	;# 
  1392  0EA5                     	;# 
  1393  0EA6                     	;# 
  1394  0EA7                     	;# 
  1395  0F0F                     	;# 
  1396  0F10                     	;# 
  1397  0F11                     	;# 
  1398  0F12                     	;# 
  1399  0F13                     	;# 
  1400  0F14                     	;# 
  1401  0F15                     	;# 
  1402  0F16                     	;# 
  1403  0F17                     	;# 
  1404  0F18                     	;# 
  1405  0F19                     	;# 
  1406  0F1A                     	;# 
  1407  0F1B                     	;# 
  1408  0F1C                     	;# 
  1409  0F1D                     	;# 
  1410  0F1E                     	;# 
  1411  0F1F                     	;# 
  1412  0F20                     	;# 
  1413  0F21                     	;# 
  1414  0F22                     	;# 
  1415  0F23                     	;# 
  1416  0F24                     	;# 
  1417  0F25                     	;# 
  1418  0F26                     	;# 
  1419  0F27                     	;# 
  1420  0F28                     	;# 
  1421  0F29                     	;# 
  1422  0F2A                     	;# 
  1423  0F2B                     	;# 
  1424  0F2C                     	;# 
  1425  0F2D                     	;# 
  1426  0F2E                     	;# 
  1427  0F2F                     	;# 
  1428  0F30                     	;# 
  1429  0F31                     	;# 
  1430  0F32                     	;# 
  1431  0F33                     	;# 
  1432  0F34                     	;# 
  1433  0F35                     	;# 
  1434  0F36                     	;# 
  1435  0F37                     	;# 
  1436  0FE4                     	;# 
  1437  0FE5                     	;# 
  1438  0FE6                     	;# 
  1439  0FE7                     	;# 
  1440  0FE8                     	;# 
  1441  0FE9                     	;# 
  1442  0FEA                     	;# 
  1443  0FEB                     	;# 
  1444  0FED                     	;# 
  1445  0FEE                     	;# 
  1446  0FEF                     	;# 
  1447  0000                     	;# 
  1448  0001                     	;# 
  1449  0002                     	;# 
  1450  0003                     	;# 
  1451  0004                     	;# 
  1452  0005                     	;# 
  1453  0006                     	;# 
  1454  0007                     	;# 
  1455  0008                     	;# 
  1456  0009                     	;# 
  1457  000A                     	;# 
  1458  000B                     	;# 
  1459  000C                     	;# 
  1460  000D                     	;# 
  1461  000E                     	;# 
  1462  0010                     	;# 
  1463  0011                     	;# 
  1464  0012                     	;# 
  1465  0013                     	;# 
  1466  0014                     	;# 
  1467  0015                     	;# 
  1468  0016                     	;# 
  1469  0016                     	;# 
  1470  0017                     	;# 
  1471  0018                     	;# 
  1472  0019                     	;# 
  1473  001A                     	;# 
  1474  001A                     	;# 
  1475  001B                     	;# 
  1476  001B                     	;# 
  1477  001C                     	;# 
  1478  001D                     	;# 
  1479  001E                     	;# 
  1480  001F                     	;# 
  1481  008C                     	;# 
  1482  008D                     	;# 
  1483  008E                     	;# 
  1484  0090                     	;# 
  1485  0091                     	;# 
  1486  0092                     	;# 
  1487  0093                     	;# 
  1488  0094                     	;# 
  1489  0095                     	;# 
  1490  0096                     	;# 
  1491  0098                     	;# 
  1492  0099                     	;# 
  1493  009A                     	;# 
  1494  009B                     	;# 
  1495  009B                     	;# 
  1496  009C                     	;# 
  1497  009D                     	;# 
  1498  009E                     	;# 
  1499  009F                     	;# 
  1500  010C                     	;# 
  1501  010D                     	;# 
  1502  010E                     	;# 
  1503  0111                     	;# 
  1504  0112                     	;# 
  1505  0113                     	;# 
  1506  0114                     	;# 
  1507  0115                     	;# 
  1508  0116                     	;# 
  1509  0117                     	;# 
  1510  0118                     	;# 
  1511  0119                     	;# 
  1512  011C                     	;# 
  1513  018C                     	;# 
  1514  018D                     	;# 
  1515  018E                     	;# 
  1516  0191                     	;# 
  1517  0191                     	;# 
  1518  0192                     	;# 
  1519  0193                     	;# 
  1520  0193                     	;# 
  1521  0194                     	;# 
  1522  0195                     	;# 
  1523  0196                     	;# 
  1524  0197                     	;# 
  1525  0199                     	;# 
  1526  0199                     	;# 
  1527  0199                     	;# 
  1528  019A                     	;# 
  1529  019A                     	;# 
  1530  019A                     	;# 
  1531  019B                     	;# 
  1532  019B                     	;# 
  1533  019B                     	;# 
  1534  019B                     	;# 
  1535  019B                     	;# 
  1536  019C                     	;# 
  1537  019C                     	;# 
  1538  019C                     	;# 
  1539  019D                     	;# 
  1540  019D                     	;# 
  1541  019D                     	;# 
  1542  019E                     	;# 
  1543  019E                     	;# 
  1544  019E                     	;# 
  1545  019F                     	;# 
  1546  019F                     	;# 
  1547  019F                     	;# 
  1548  019F                     	;# 
  1549  019F                     	;# 
  1550  020C                     	;# 
  1551  020D                     	;# 
  1552  020E                     	;# 
  1553  0211                     	;# 
  1554  0211                     	;# 
  1555  0212                     	;# 
  1556  0212                     	;# 
  1557  0213                     	;# 
  1558  0213                     	;# 
  1559  0214                     	;# 
  1560  0214                     	;# 
  1561  0215                     	;# 
  1562  0215                     	;# 
  1563  0215                     	;# 
  1564  0215                     	;# 
  1565  0216                     	;# 
  1566  0216                     	;# 
  1567  0217                     	;# 
  1568  0217                     	;# 
  1569  028C                     	;# 
  1570  028D                     	;# 
  1571  028E                     	;# 
  1572  0291                     	;# 
  1573  0291                     	;# 
  1574  0292                     	;# 
  1575  0293                     	;# 
  1576  0294                     	;# 
  1577  0298                     	;# 
  1578  0298                     	;# 
  1579  0299                     	;# 
  1580  029A                     	;# 
  1581  029B                     	;# 
  1582  029E                     	;# 
  1583  030C                     	;# 
  1584  030D                     	;# 
  1585  030E                     	;# 
  1586  038C                     	;# 
  1587  038D                     	;# 
  1588  038E                     	;# 
  1589  0391                     	;# 
  1590  0392                     	;# 
  1591  0393                     	;# 
  1592  0394                     	;# 
  1593  0395                     	;# 
  1594  0396                     	;# 
  1595  0397                     	;# 
  1596  0398                     	;# 
  1597  0399                     	;# 
  1598  040E                     	;# 
  1599  0413                     	;# 
  1600  0413                     	;# 
  1601  0414                     	;# 
  1602  0414                     	;# 
  1603  0415                     	;# 
  1604  0416                     	;# 
  1605  0417                     	;# 
  1606  0418                     	;# 
  1607  041A                     	;# 
  1608  041A                     	;# 
  1609  041B                     	;# 
  1610  041B                     	;# 
  1611  041C                     	;# 
  1612  041D                     	;# 
  1613  041E                     	;# 
  1614  041F                     	;# 
  1615  0493                     	;# 
  1616  0494                     	;# 
  1617  0495                     	;# 
  1618  0496                     	;# 
  1619  049A                     	;# 
  1620  049B                     	;# 
  1621  049C                     	;# 
  1622  049D                     	;# 
  1623  058C                     	;# 
  1624  058C                     	;# 
  1625  058D                     	;# 
  1626  058E                     	;# 
  1627  058E                     	;# 
  1628  058F                     	;# 
  1629  0590                     	;# 
  1630  0590                     	;# 
  1631  0591                     	;# 
  1632  0592                     	;# 
  1633  0592                     	;# 
  1634  0593                     	;# 
  1635  0594                     	;# 
  1636  0594                     	;# 
  1637  0595                     	;# 
  1638  0596                     	;# 
  1639  0596                     	;# 
  1640  0597                     	;# 
  1641  0598                     	;# 
  1642  0599                     	;# 
  1643  059A                     	;# 
  1644  059B                     	;# 
  1645  059B                     	;# 
  1646  059C                     	;# 
  1647  059D                     	;# 
  1648  060C                     	;# 
  1649  060C                     	;# 
  1650  060D                     	;# 
  1651  060E                     	;# 
  1652  060F                     	;# 
  1653  060F                     	;# 
  1654  0610                     	;# 
  1655  0611                     	;# 
  1656  0612                     	;# 
  1657  0613                     	;# 
  1658  0614                     	;# 
  1659  0617                     	;# 
  1660  0617                     	;# 
  1661  0618                     	;# 
  1662  0619                     	;# 
  1663  061A                     	;# 
  1664  061A                     	;# 
  1665  061B                     	;# 
  1666  061C                     	;# 
  1667  0691                     	;# 
  1668  0692                     	;# 
  1669  0693                     	;# 
  1670  0694                     	;# 
  1671  0695                     	;# 
  1672  0696                     	;# 
  1673  0697                     	;# 
  1674  0699                     	;# 
  1675  069A                     	;# 
  1676  0711                     	;# 
  1677  0712                     	;# 
  1678  0713                     	;# 
  1679  0714                     	;# 
  1680  0715                     	;# 
  1681  0718                     	;# 
  1682  0718                     	;# 
  1683  0719                     	;# 
  1684  071A                     	;# 
  1685  071A                     	;# 
  1686  071B                     	;# 
  1687  071C                     	;# 
  1688  071D                     	;# 
  1689  0791                     	;# 
  1690  0791                     	;# 
  1691  0792                     	;# 
  1692  0793                     	;# 
  1693  0793                     	;# 
  1694  0794                     	;# 
  1695  0795                     	;# 
  1696  0795                     	;# 
  1697  0796                     	;# 
  1698  0797                     	;# 
  1699  0797                     	;# 
  1700  0798                     	;# 
  1701  0799                     	;# 
  1702  079A                     	;# 
  1703  080C                     	;# 
  1704  080C                     	;# 
  1705  080D                     	;# 
  1706  080E                     	;# 
  1707  080E                     	;# 
  1708  080F                     	;# 
  1709  0810                     	;# 
  1710  0810                     	;# 
  1711  0811                     	;# 
  1712  0812                     	;# 
  1713  0812                     	;# 
  1714  0813                     	;# 
  1715  0814                     	;# 
  1716  0815                     	;# 
  1717  0816                     	;# 
  1718  0817                     	;# 
  1719  0818                     	;# 
  1720  0819                     	;# 
  1721  081A                     	;# 
  1722  081A                     	;# 
  1723  081B                     	;# 
  1724  081C                     	;# 
  1725  081C                     	;# 
  1726  081D                     	;# 
  1727  088C                     	;# 
  1728  088D                     	;# 
  1729  088E                     	;# 
  1730  088F                     	;# 
  1731  088F                     	;# 
  1732  0890                     	;# 
  1733  0891                     	;# 
  1734  0892                     	;# 
  1735  0893                     	;# 
  1736  0893                     	;# 
  1737  0894                     	;# 
  1738  0895                     	;# 
  1739  0896                     	;# 
  1740  0897                     	;# 
  1741  0897                     	;# 
  1742  0898                     	;# 
  1743  0899                     	;# 
  1744  0D8C                     	;# 
  1745  0D8C                     	;# 
  1746  0D8D                     	;# 
  1747  0D8E                     	;# 
  1748  0D8F                     	;# 
  1749  0D8F                     	;# 
  1750  0D90                     	;# 
  1751  0D91                     	;# 
  1752  0D92                     	;# 
  1753  0D92                     	;# 
  1754  0D93                     	;# 
  1755  0D94                     	;# 
  1756  0D95                     	;# 
  1757  0D95                     	;# 
  1758  0D96                     	;# 
  1759  0D97                     	;# 
  1760  0D98                     	;# 
  1761  0D99                     	;# 
  1762  0D9A                     	;# 
  1763  0D9B                     	;# 
  1764  0D9C                     	;# 
  1765  0D9D                     	;# 
  1766  0D9E                     	;# 
  1767  0D9E                     	;# 
  1768  0D9F                     	;# 
  1769  0DA0                     	;# 
  1770  0DA1                     	;# 
  1771  0DA1                     	;# 
  1772  0DA2                     	;# 
  1773  0DA3                     	;# 
  1774  0DA4                     	;# 
  1775  0DA4                     	;# 
  1776  0DA5                     	;# 
  1777  0DA6                     	;# 
  1778  0DA7                     	;# 
  1779  0DA7                     	;# 
  1780  0DA8                     	;# 
  1781  0DA9                     	;# 
  1782  0DAA                     	;# 
  1783  0DAB                     	;# 
  1784  0DAC                     	;# 
  1785  0DAD                     	;# 
  1786  0DAE                     	;# 
  1787  0DAF                     	;# 
  1788  0E0F                     	;# 
  1789  0E10                     	;# 
  1790  0E11                     	;# 
  1791  0E12                     	;# 
  1792  0E13                     	;# 
  1793  0E14                     	;# 
  1794  0E15                     	;# 
  1795  0E16                     	;# 
  1796  0E17                     	;# 
  1797  0E18                     	;# 
  1798  0E19                     	;# 
  1799  0E1A                     	;# 
  1800  0E1B                     	;# 
  1801  0E1C                     	;# 
  1802  0E1D                     	;# 
  1803  0E1E                     	;# 
  1804  0E1F                     	;# 
  1805  0E20                     	;# 
  1806  0E21                     	;# 
  1807  0E22                     	;# 
  1808  0E23                     	;# 
  1809  0E24                     	;# 
  1810  0E25                     	;# 
  1811  0E26                     	;# 
  1812  0E27                     	;# 
  1813  0E28                     	;# 
  1814  0E29                     	;# 
  1815  0E2A                     	;# 
  1816  0E2B                     	;# 
  1817  0E2C                     	;# 
  1818  0E2D                     	;# 
  1819  0E2E                     	;# 
  1820  0E90                     	;# 
  1821  0E91                     	;# 
  1822  0E92                     	;# 
  1823  0E94                     	;# 
  1824  0E95                     	;# 
  1825  0E9C                     	;# 
  1826  0E9D                     	;# 
  1827  0E9E                     	;# 
  1828  0E9F                     	;# 
  1829  0EA0                     	;# 
  1830  0EA1                     	;# 
  1831  0EA2                     	;# 
  1832  0EA3                     	;# 
  1833  0EA4                     	;# 
  1834  0EA5                     	;# 
  1835  0EA6                     	;# 
  1836  0EA7                     	;# 
  1837  0F0F                     	;# 
  1838  0F10                     	;# 
  1839  0F11                     	;# 
  1840  0F12                     	;# 
  1841  0F13                     	;# 
  1842  0F14                     	;# 
  1843  0F15                     	;# 
  1844  0F16                     	;# 
  1845  0F17                     	;# 
  1846  0F18                     	;# 
  1847  0F19                     	;# 
  1848  0F1A                     	;# 
  1849  0F1B                     	;# 
  1850  0F1C                     	;# 
  1851  0F1D                     	;# 
  1852  0F1E                     	;# 
  1853  0F1F                     	;# 
  1854  0F20                     	;# 
  1855  0F21                     	;# 
  1856  0F22                     	;# 
  1857  0F23                     	;# 
  1858  0F24                     	;# 
  1859  0F25                     	;# 
  1860  0F26                     	;# 
  1861  0F27                     	;# 
  1862  0F28                     	;# 
  1863  0F29                     	;# 
  1864  0F2A                     	;# 
  1865  0F2B                     	;# 
  1866  0F2C                     	;# 
  1867  0F2D                     	;# 
  1868  0F2E                     	;# 
  1869  0F2F                     	;# 
  1870  0F30                     	;# 
  1871  0F31                     	;# 
  1872  0F32                     	;# 
  1873  0F33                     	;# 
  1874  0F34                     	;# 
  1875  0F35                     	;# 
  1876  0F36                     	;# 
  1877  0F37                     	;# 
  1878  0FE4                     	;# 
  1879  0FE5                     	;# 
  1880  0FE6                     	;# 
  1881  0FE7                     	;# 
  1882  0FE8                     	;# 
  1883  0FE9                     	;# 
  1884  0FEA                     	;# 
  1885  0FEB                     	;# 
  1886  0FED                     	;# 
  1887  0FEE                     	;# 
  1888  0FEF                     	;# 
  1889  0000                     	;# 
  1890  0001                     	;# 
  1891  0002                     	;# 
  1892  0003                     	;# 
  1893  0004                     	;# 
  1894  0005                     	;# 
  1895  0006                     	;# 
  1896  0007                     	;# 
  1897  0008                     	;# 
  1898  0009                     	;# 
  1899  000A                     	;# 
  1900  000B                     	;# 
  1901  000C                     	;# 
  1902  000D                     	;# 
  1903  000E                     	;# 
  1904  0010                     	;# 
  1905  0011                     	;# 
  1906  0012                     	;# 
  1907  0013                     	;# 
  1908  0014                     	;# 
  1909  0015                     	;# 
  1910  0016                     	;# 
  1911  0016                     	;# 
  1912  0017                     	;# 
  1913  0018                     	;# 
  1914  0019                     	;# 
  1915  001A                     	;# 
  1916  001A                     	;# 
  1917  001B                     	;# 
  1918  001B                     	;# 
  1919  001C                     	;# 
  1920  001D                     	;# 
  1921  001E                     	;# 
  1922  001F                     	;# 
  1923  008C                     	;# 
  1924  008D                     	;# 
  1925  008E                     	;# 
  1926  0090                     	;# 
  1927  0091                     	;# 
  1928  0092                     	;# 
  1929  0093                     	;# 
  1930  0094                     	;# 
  1931  0095                     	;# 
  1932  0096                     	;# 
  1933  0098                     	;# 
  1934  0099                     	;# 
  1935  009A                     	;# 
  1936  009B                     	;# 
  1937  009B                     	;# 
  1938  009C                     	;# 
  1939  009D                     	;# 
  1940  009E                     	;# 
  1941  009F                     	;# 
  1942  010C                     	;# 
  1943  010D                     	;# 
  1944  010E                     	;# 
  1945  0111                     	;# 
  1946  0112                     	;# 
  1947  0113                     	;# 
  1948  0114                     	;# 
  1949  0115                     	;# 
  1950  0116                     	;# 
  1951  0117                     	;# 
  1952  0118                     	;# 
  1953  0119                     	;# 
  1954  011C                     	;# 
  1955  018C                     	;# 
  1956  018D                     	;# 
  1957  018E                     	;# 
  1958  0191                     	;# 
  1959  0191                     	;# 
  1960  0192                     	;# 
  1961  0193                     	;# 
  1962  0193                     	;# 
  1963  0194                     	;# 
  1964  0195                     	;# 
  1965  0196                     	;# 
  1966  0197                     	;# 
  1967  0199                     	;# 
  1968  0199                     	;# 
  1969  0199                     	;# 
  1970  019A                     	;# 
  1971  019A                     	;# 
  1972  019A                     	;# 
  1973  019B                     	;# 
  1974  019B                     	;# 
  1975  019B                     	;# 
  1976  019B                     	;# 
  1977  019B                     	;# 
  1978  019C                     	;# 
  1979  019C                     	;# 
  1980  019C                     	;# 
  1981  019D                     	;# 
  1982  019D                     	;# 
  1983  019D                     	;# 
  1984  019E                     	;# 
  1985  019E                     	;# 
  1986  019E                     	;# 
  1987  019F                     	;# 
  1988  019F                     	;# 
  1989  019F                     	;# 
  1990  019F                     	;# 
  1991  019F                     	;# 
  1992  020C                     	;# 
  1993  020D                     	;# 
  1994  020E                     	;# 
  1995  0211                     	;# 
  1996  0211                     	;# 
  1997  0212                     	;# 
  1998  0212                     	;# 
  1999  0213                     	;# 
  2000  0213                     	;# 
  2001  0214                     	;# 
  2002  0214                     	;# 
  2003  0215                     	;# 
  2004  0215                     	;# 
  2005  0215                     	;# 
  2006  0215                     	;# 
  2007  0216                     	;# 
  2008  0216                     	;# 
  2009  0217                     	;# 
  2010  0217                     	;# 
  2011  028C                     	;# 
  2012  028D                     	;# 
  2013  028E                     	;# 
  2014  0291                     	;# 
  2015  0291                     	;# 
  2016  0292                     	;# 
  2017  0293                     	;# 
  2018  0294                     	;# 
  2019  0298                     	;# 
  2020  0298                     	;# 
  2021  0299                     	;# 
  2022  029A                     	;# 
  2023  029B                     	;# 
  2024  029E                     	;# 
  2025  030C                     	;# 
  2026  030D                     	;# 
  2027  030E                     	;# 
  2028  038C                     	;# 
  2029  038D                     	;# 
  2030  038E                     	;# 
  2031  0391                     	;# 
  2032  0392                     	;# 
  2033  0393                     	;# 
  2034  0394                     	;# 
  2035  0395                     	;# 
  2036  0396                     	;# 
  2037  0397                     	;# 
  2038  0398                     	;# 
  2039  0399                     	;# 
  2040  040E                     	;# 
  2041  0413                     	;# 
  2042  0413                     	;# 
  2043  0414                     	;# 
  2044  0414                     	;# 
  2045  0415                     	;# 
  2046  0416                     	;# 
  2047  0417                     	;# 
  2048  0418                     	;# 
  2049  041A                     	;# 
  2050  041A                     	;# 
  2051  041B                     	;# 
  2052  041B                     	;# 
  2053  041C                     	;# 
  2054  041D                     	;# 
  2055  041E                     	;# 
  2056  041F                     	;# 
  2057  0493                     	;# 
  2058  0494                     	;# 
  2059  0495                     	;# 
  2060  0496                     	;# 
  2061  049A                     	;# 
  2062  049B                     	;# 
  2063  049C                     	;# 
  2064  049D                     	;# 
  2065  058C                     	;# 
  2066  058C                     	;# 
  2067  058D                     	;# 
  2068  058E                     	;# 
  2069  058E                     	;# 
  2070  058F                     	;# 
  2071  0590                     	;# 
  2072  0590                     	;# 
  2073  0591                     	;# 
  2074  0592                     	;# 
  2075  0592                     	;# 
  2076  0593                     	;# 
  2077  0594                     	;# 
  2078  0594                     	;# 
  2079  0595                     	;# 
  2080  0596                     	;# 
  2081  0596                     	;# 
  2082  0597                     	;# 
  2083  0598                     	;# 
  2084  0599                     	;# 
  2085  059A                     	;# 
  2086  059B                     	;# 
  2087  059B                     	;# 
  2088  059C                     	;# 
  2089  059D                     	;# 
  2090  060C                     	;# 
  2091  060C                     	;# 
  2092  060D                     	;# 
  2093  060E                     	;# 
  2094  060F                     	;# 
  2095  060F                     	;# 
  2096  0610                     	;# 
  2097  0611                     	;# 
  2098  0612                     	;# 
  2099  0613                     	;# 
  2100  0614                     	;# 
  2101  0617                     	;# 
  2102  0617                     	;# 
  2103  0618                     	;# 
  2104  0619                     	;# 
  2105  061A                     	;# 
  2106  061A                     	;# 
  2107  061B                     	;# 
  2108  061C                     	;# 
  2109  0691                     	;# 
  2110  0692                     	;# 
  2111  0693                     	;# 
  2112  0694                     	;# 
  2113  0695                     	;# 
  2114  0696                     	;# 
  2115  0697                     	;# 
  2116  0699                     	;# 
  2117  069A                     	;# 
  2118  0711                     	;# 
  2119  0712                     	;# 
  2120  0713                     	;# 
  2121  0714                     	;# 
  2122  0715                     	;# 
  2123  0718                     	;# 
  2124  0718                     	;# 
  2125  0719                     	;# 
  2126  071A                     	;# 
  2127  071A                     	;# 
  2128  071B                     	;# 
  2129  071C                     	;# 
  2130  071D                     	;# 
  2131  0791                     	;# 
  2132  0791                     	;# 
  2133  0792                     	;# 
  2134  0793                     	;# 
  2135  0793                     	;# 
  2136  0794                     	;# 
  2137  0795                     	;# 
  2138  0795                     	;# 
  2139  0796                     	;# 
  2140  0797                     	;# 
  2141  0797                     	;# 
  2142  0798                     	;# 
  2143  0799                     	;# 
  2144  079A                     	;# 
  2145  080C                     	;# 
  2146  080C                     	;# 
  2147  080D                     	;# 
  2148  080E                     	;# 
  2149  080E                     	;# 
  2150  080F                     	;# 
  2151  0810                     	;# 
  2152  0810                     	;# 
  2153  0811                     	;# 
  2154  0812                     	;# 
  2155  0812                     	;# 
  2156  0813                     	;# 
  2157  0814                     	;# 
  2158  0815                     	;# 
  2159  0816                     	;# 
  2160  0817                     	;# 
  2161  0818                     	;# 
  2162  0819                     	;# 
  2163  081A                     	;# 
  2164  081A                     	;# 
  2165  081B                     	;# 
  2166  081C                     	;# 
  2167  081C                     	;# 
  2168  081D                     	;# 
  2169  088C                     	;# 
  2170  088D                     	;# 
  2171  088E                     	;# 
  2172  088F                     	;# 
  2173  088F                     	;# 
  2174  0890                     	;# 
  2175  0891                     	;# 
  2176  0892                     	;# 
  2177  0893                     	;# 
  2178  0893                     	;# 
  2179  0894                     	;# 
  2180  0895                     	;# 
  2181  0896                     	;# 
  2182  0897                     	;# 
  2183  0897                     	;# 
  2184  0898                     	;# 
  2185  0899                     	;# 
  2186  0D8C                     	;# 
  2187  0D8C                     	;# 
  2188  0D8D                     	;# 
  2189  0D8E                     	;# 
  2190  0D8F                     	;# 
  2191  0D8F                     	;# 
  2192  0D90                     	;# 
  2193  0D91                     	;# 
  2194  0D92                     	;# 
  2195  0D92                     	;# 
  2196  0D93                     	;# 
  2197  0D94                     	;# 
  2198  0D95                     	;# 
  2199  0D95                     	;# 
  2200  0D96                     	;# 
  2201  0D97                     	;# 
  2202  0D98                     	;# 
  2203  0D99                     	;# 
  2204  0D9A                     	;# 
  2205  0D9B                     	;# 
  2206  0D9C                     	;# 
  2207  0D9D                     	;# 
  2208  0D9E                     	;# 
  2209  0D9E                     	;# 
  2210  0D9F                     	;# 
  2211  0DA0                     	;# 
  2212  0DA1                     	;# 
  2213  0DA1                     	;# 
  2214  0DA2                     	;# 
  2215  0DA3                     	;# 
  2216  0DA4                     	;# 
  2217  0DA4                     	;# 
  2218  0DA5                     	;# 
  2219  0DA6                     	;# 
  2220  0DA7                     	;# 
  2221  0DA7                     	;# 
  2222  0DA8                     	;# 
  2223  0DA9                     	;# 
  2224  0DAA                     	;# 
  2225  0DAB                     	;# 
  2226  0DAC                     	;# 
  2227  0DAD                     	;# 
  2228  0DAE                     	;# 
  2229  0DAF                     	;# 
  2230  0E0F                     	;# 
  2231  0E10                     	;# 
  2232  0E11                     	;# 
  2233  0E12                     	;# 
  2234  0E13                     	;# 
  2235  0E14                     	;# 
  2236  0E15                     	;# 
  2237  0E16                     	;# 
  2238  0E17                     	;# 
  2239  0E18                     	;# 
  2240  0E19                     	;# 
  2241  0E1A                     	;# 
  2242  0E1B                     	;# 
  2243  0E1C                     	;# 
  2244  0E1D                     	;# 
  2245  0E1E                     	;# 
  2246  0E1F                     	;# 
  2247  0E20                     	;# 
  2248  0E21                     	;# 
  2249  0E22                     	;# 
  2250  0E23                     	;# 
  2251  0E24                     	;# 
  2252  0E25                     	;# 
  2253  0E26                     	;# 
  2254  0E27                     	;# 
  2255  0E28                     	;# 
  2256  0E29                     	;# 
  2257  0E2A                     	;# 
  2258  0E2B                     	;# 
  2259  0E2C                     	;# 
  2260  0E2D                     	;# 
  2261  0E2E                     	;# 
  2262  0E90                     	;# 
  2263  0E91                     	;# 
  2264  0E92                     	;# 
  2265  0E94                     	;# 
  2266  0E95                     	;# 
  2267  0E9C                     	;# 
  2268  0E9D                     	;# 
  2269  0E9E                     	;# 
  2270  0E9F                     	;# 
  2271  0EA0                     	;# 
  2272  0EA1                     	;# 
  2273  0EA2                     	;# 
  2274  0EA3                     	;# 
  2275  0EA4                     	;# 
  2276  0EA5                     	;# 
  2277  0EA6                     	;# 
  2278  0EA7                     	;# 
  2279  0F0F                     	;# 
  2280  0F10                     	;# 
  2281  0F11                     	;# 
  2282  0F12                     	;# 
  2283  0F13                     	;# 
  2284  0F14                     	;# 
  2285  0F15                     	;# 
  2286  0F16                     	;# 
  2287  0F17                     	;# 
  2288  0F18                     	;# 
  2289  0F19                     	;# 
  2290  0F1A                     	;# 
  2291  0F1B                     	;# 
  2292  0F1C                     	;# 
  2293  0F1D                     	;# 
  2294  0F1E                     	;# 
  2295  0F1F                     	;# 
  2296  0F20                     	;# 
  2297  0F21                     	;# 
  2298  0F22                     	;# 
  2299  0F23                     	;# 
  2300  0F24                     	;# 
  2301  0F25                     	;# 
  2302  0F26                     	;# 
  2303  0F27                     	;# 
  2304  0F28                     	;# 
  2305  0F29                     	;# 
  2306  0F2A                     	;# 
  2307  0F2B                     	;# 
  2308  0F2C                     	;# 
  2309  0F2D                     	;# 
  2310  0F2E                     	;# 
  2311  0F2F                     	;# 
  2312  0F30                     	;# 
  2313  0F31                     	;# 
  2314  0F32                     	;# 
  2315  0F33                     	;# 
  2316  0F34                     	;# 
  2317  0F35                     	;# 
  2318  0F36                     	;# 
  2319  0F37                     	;# 
  2320  0FE4                     	;# 
  2321  0FE5                     	;# 
  2322  0FE6                     	;# 
  2323  0FE7                     	;# 
  2324  0FE8                     	;# 
  2325  0FE9                     	;# 
  2326  0FEA                     	;# 
  2327  0FEB                     	;# 
  2328  0FED                     	;# 
  2329  0FEE                     	;# 
  2330  0FEF                     	;# 
  2331  0000                     	;# 
  2332  0001                     	;# 
  2333  0002                     	;# 
  2334  0003                     	;# 
  2335  0004                     	;# 
  2336  0005                     	;# 
  2337  0006                     	;# 
  2338  0007                     	;# 
  2339  0008                     	;# 
  2340  0009                     	;# 
  2341  000A                     	;# 
  2342  000B                     	;# 
  2343  000C                     	;# 
  2344  000D                     	;# 
  2345  000E                     	;# 
  2346  0010                     	;# 
  2347  0011                     	;# 
  2348  0012                     	;# 
  2349  0013                     	;# 
  2350  0014                     	;# 
  2351  0015                     	;# 
  2352  0016                     	;# 
  2353  0016                     	;# 
  2354  0017                     	;# 
  2355  0018                     	;# 
  2356  0019                     	;# 
  2357  001A                     	;# 
  2358  001A                     	;# 
  2359  001B                     	;# 
  2360  001B                     	;# 
  2361  001C                     	;# 
  2362  001D                     	;# 
  2363  001E                     	;# 
  2364  001F                     	;# 
  2365  008C                     	;# 
  2366  008D                     	;# 
  2367  008E                     	;# 
  2368  0090                     	;# 
  2369  0091                     	;# 
  2370  0092                     	;# 
  2371  0093                     	;# 
  2372  0094                     	;# 
  2373  0095                     	;# 
  2374  0096                     	;# 
  2375  0098                     	;# 
  2376  0099                     	;# 
  2377  009A                     	;# 
  2378  009B                     	;# 
  2379  009B                     	;# 
  2380  009C                     	;# 
  2381  009D                     	;# 
  2382  009E                     	;# 
  2383  009F                     	;# 
  2384  010C                     	;# 
  2385  010D                     	;# 
  2386  010E                     	;# 
  2387  0111                     	;# 
  2388  0112                     	;# 
  2389  0113                     	;# 
  2390  0114                     	;# 
  2391  0115                     	;# 
  2392  0116                     	;# 
  2393  0117                     	;# 
  2394  0118                     	;# 
  2395  0119                     	;# 
  2396  011C                     	;# 
  2397  018C                     	;# 
  2398  018D                     	;# 
  2399  018E                     	;# 
  2400  0191                     	;# 
  2401  0191                     	;# 
  2402  0192                     	;# 
  2403  0193                     	;# 
  2404  0193                     	;# 
  2405  0194                     	;# 
  2406  0195                     	;# 
  2407  0196                     	;# 
  2408  0197                     	;# 
  2409  0199                     	;# 
  2410  0199                     	;# 
  2411  0199                     	;# 
  2412  019A                     	;# 
  2413  019A                     	;# 
  2414  019A                     	;# 
  2415  019B                     	;# 
  2416  019B                     	;# 
  2417  019B                     	;# 
  2418  019B                     	;# 
  2419  019B                     	;# 
  2420  019C                     	;# 
  2421  019C                     	;# 
  2422  019C                     	;# 
  2423  019D                     	;# 
  2424  019D                     	;# 
  2425  019D                     	;# 
  2426  019E                     	;# 
  2427  019E                     	;# 
  2428  019E                     	;# 
  2429  019F                     	;# 
  2430  019F                     	;# 
  2431  019F                     	;# 
  2432  019F                     	;# 
  2433  019F                     	;# 
  2434  020C                     	;# 
  2435  020D                     	;# 
  2436  020E                     	;# 
  2437  0211                     	;# 
  2438  0211                     	;# 
  2439  0212                     	;# 
  2440  0212                     	;# 
  2441  0213                     	;# 
  2442  0213                     	;# 
  2443  0214                     	;# 
  2444  0214                     	;# 
  2445  0215                     	;# 
  2446  0215                     	;# 
  2447  0215                     	;# 
  2448  0215                     	;# 
  2449  0216                     	;# 
  2450  0216                     	;# 
  2451  0217                     	;# 
  2452  0217                     	;# 
  2453  028C                     	;# 
  2454  028D                     	;# 
  2455  028E                     	;# 
  2456  0291                     	;# 
  2457  0291                     	;# 
  2458  0292                     	;# 
  2459  0293                     	;# 
  2460  0294                     	;# 
  2461  0298                     	;# 
  2462  0298                     	;# 
  2463  0299                     	;# 
  2464  029A                     	;# 
  2465  029B                     	;# 
  2466  029E                     	;# 
  2467  030C                     	;# 
  2468  030D                     	;# 
  2469  030E                     	;# 
  2470  038C                     	;# 
  2471  038D                     	;# 
  2472  038E                     	;# 
  2473  0391                     	;# 
  2474  0392                     	;# 
  2475  0393                     	;# 
  2476  0394                     	;# 
  2477  0395                     	;# 
  2478  0396                     	;# 
  2479  0397                     	;# 
  2480  0398                     	;# 
  2481  0399                     	;# 
  2482  040E                     	;# 
  2483  0413                     	;# 
  2484  0413                     	;# 
  2485  0414                     	;# 
  2486  0414                     	;# 
  2487  0415                     	;# 
  2488  0416                     	;# 
  2489  0417                     	;# 
  2490  0418                     	;# 
  2491  041A                     	;# 
  2492  041A                     	;# 
  2493  041B                     	;# 
  2494  041B                     	;# 
  2495  041C                     	;# 
  2496  041D                     	;# 
  2497  041E                     	;# 
  2498  041F                     	;# 
  2499  0493                     	;# 
  2500  0494                     	;# 
  2501  0495                     	;# 
  2502  0496                     	;# 
  2503  049A                     	;# 
  2504  049B                     	;# 
  2505  049C                     	;# 
  2506  049D                     	;# 
  2507  058C                     	;# 
  2508  058C                     	;# 
  2509  058D                     	;# 
  2510  058E                     	;# 
  2511  058E                     	;# 
  2512  058F                     	;# 
  2513  0590                     	;# 
  2514  0590                     	;# 
  2515  0591                     	;# 
  2516  0592                     	;# 
  2517  0592                     	;# 
  2518  0593                     	;# 
  2519  0594                     	;# 
  2520  0594                     	;# 
  2521  0595                     	;# 
  2522  0596                     	;# 
  2523  0596                     	;# 
  2524  0597                     	;# 
  2525  0598                     	;# 
  2526  0599                     	;# 
  2527  059A                     	;# 
  2528  059B                     	;# 
  2529  059B                     	;# 
  2530  059C                     	;# 
  2531  059D                     	;# 
  2532  060C                     	;# 
  2533  060C                     	;# 
  2534  060D                     	;# 
  2535  060E                     	;# 
  2536  060F                     	;# 
  2537  060F                     	;# 
  2538  0610                     	;# 
  2539  0611                     	;# 
  2540  0612                     	;# 
  2541  0613                     	;# 
  2542  0614                     	;# 
  2543  0617                     	;# 
  2544  0617                     	;# 
  2545  0618                     	;# 
  2546  0619                     	;# 
  2547  061A                     	;# 
  2548  061A                     	;# 
  2549  061B                     	;# 
  2550  061C                     	;# 
  2551  0691                     	;# 
  2552  0692                     	;# 
  2553  0693                     	;# 
  2554  0694                     	;# 
  2555  0695                     	;# 
  2556  0696                     	;# 
  2557  0697                     	;# 
  2558  0699                     	;# 
  2559  069A                     	;# 
  2560  0711                     	;# 
  2561  0712                     	;# 
  2562  0713                     	;# 
  2563  0714                     	;# 
  2564  0715                     	;# 
  2565  0718                     	;# 
  2566  0718                     	;# 
  2567  0719                     	;# 
  2568  071A                     	;# 
  2569  071A                     	;# 
  2570  071B                     	;# 
  2571  071C                     	;# 
  2572  071D                     	;# 
  2573  0791                     	;# 
  2574  0791                     	;# 
  2575  0792                     	;# 
  2576  0793                     	;# 
  2577  0793                     	;# 
  2578  0794                     	;# 
  2579  0795                     	;# 
  2580  0795                     	;# 
  2581  0796                     	;# 
  2582  0797                     	;# 
  2583  0797                     	;# 
  2584  0798                     	;# 
  2585  0799                     	;# 
  2586  079A                     	;# 
  2587  080C                     	;# 
  2588  080C                     	;# 
  2589  080D                     	;# 
  2590  080E                     	;# 
  2591  080E                     	;# 
  2592  080F                     	;# 
  2593  0810                     	;# 
  2594  0810                     	;# 
  2595  0811                     	;# 
  2596  0812                     	;# 
  2597  0812                     	;# 
  2598  0813                     	;# 
  2599  0814                     	;# 
  2600  0815                     	;# 
  2601  0816                     	;# 
  2602  0817                     	;# 
  2603  0818                     	;# 
  2604  0819                     	;# 
  2605  081A                     	;# 
  2606  081A                     	;# 
  2607  081B                     	;# 
  2608  081C                     	;# 
  2609  081C                     	;# 
  2610  081D                     	;# 
  2611  088C                     	;# 
  2612  088D                     	;# 
  2613  088E                     	;# 
  2614  088F                     	;# 
  2615  088F                     	;# 
  2616  0890                     	;# 
  2617  0891                     	;# 
  2618  0892                     	;# 
  2619  0893                     	;# 
  2620  0893                     	;# 
  2621  0894                     	;# 
  2622  0895                     	;# 
  2623  0896                     	;# 
  2624  0897                     	;# 
  2625  0897                     	;# 
  2626  0898                     	;# 
  2627  0899                     	;# 
  2628  0D8C                     	;# 
  2629  0D8C                     	;# 
  2630  0D8D                     	;# 
  2631  0D8E                     	;# 
  2632  0D8F                     	;# 
  2633  0D8F                     	;# 
  2634  0D90                     	;# 
  2635  0D91                     	;# 
  2636  0D92                     	;# 
  2637  0D92                     	;# 
  2638  0D93                     	;# 
  2639  0D94                     	;# 
  2640  0D95                     	;# 
  2641  0D95                     	;# 
  2642  0D96                     	;# 
  2643  0D97                     	;# 
  2644  0D98                     	;# 
  2645  0D99                     	;# 
  2646  0D9A                     	;# 
  2647  0D9B                     	;# 
  2648  0D9C                     	;# 
  2649  0D9D                     	;# 
  2650  0D9E                     	;# 
  2651  0D9E                     	;# 
  2652  0D9F                     	;# 
  2653  0DA0                     	;# 
  2654  0DA1                     	;# 
  2655  0DA1                     	;# 
  2656  0DA2                     	;# 
  2657  0DA3                     	;# 
  2658  0DA4                     	;# 
  2659  0DA4                     	;# 
  2660  0DA5                     	;# 
  2661  0DA6                     	;# 
  2662  0DA7                     	;# 
  2663  0DA7                     	;# 
  2664  0DA8                     	;# 
  2665  0DA9                     	;# 
  2666  0DAA                     	;# 
  2667  0DAB                     	;# 
  2668  0DAC                     	;# 
  2669  0DAD                     	;# 
  2670  0DAE                     	;# 
  2671  0DAF                     	;# 
  2672  0E0F                     	;# 
  2673  0E10                     	;# 
  2674  0E11                     	;# 
  2675  0E12                     	;# 
  2676  0E13                     	;# 
  2677  0E14                     	;# 
  2678  0E15                     	;# 
  2679  0E16                     	;# 
  2680  0E17                     	;# 
  2681  0E18                     	;# 
  2682  0E19                     	;# 
  2683  0E1A                     	;# 
  2684  0E1B                     	;# 
  2685  0E1C                     	;# 
  2686  0E1D                     	;# 
  2687  0E1E                     	;# 
  2688  0E1F                     	;# 
  2689  0E20                     	;# 
  2690  0E21                     	;# 
  2691  0E22                     	;# 
  2692  0E23                     	;# 
  2693  0E24                     	;# 
  2694  0E25                     	;# 
  2695  0E26                     	;# 
  2696  0E27                     	;# 
  2697  0E28                     	;# 
  2698  0E29                     	;# 
  2699  0E2A                     	;# 
  2700  0E2B                     	;# 
  2701  0E2C                     	;# 
  2702  0E2D                     	;# 
  2703  0E2E                     	;# 
  2704  0E90                     	;# 
  2705  0E91                     	;# 
  2706  0E92                     	;# 
  2707  0E94                     	;# 
  2708  0E95                     	;# 
  2709  0E9C                     	;# 
  2710  0E9D                     	;# 
  2711  0E9E                     	;# 
  2712  0E9F                     	;# 
  2713  0EA0                     	;# 
  2714  0EA1                     	;# 
  2715  0EA2                     	;# 
  2716  0EA3                     	;# 
  2717  0EA4                     	;# 
  2718  0EA5                     	;# 
  2719  0EA6                     	;# 
  2720  0EA7                     	;# 
  2721  0F0F                     	;# 
  2722  0F10                     	;# 
  2723  0F11                     	;# 
  2724  0F12                     	;# 
  2725  0F13                     	;# 
  2726  0F14                     	;# 
  2727  0F15                     	;# 
  2728  0F16                     	;# 
  2729  0F17                     	;# 
  2730  0F18                     	;# 
  2731  0F19                     	;# 
  2732  0F1A                     	;# 
  2733  0F1B                     	;# 
  2734  0F1C                     	;# 
  2735  0F1D                     	;# 
  2736  0F1E                     	;# 
  2737  0F1F                     	;# 
  2738  0F20                     	;# 
  2739  0F21                     	;# 
  2740  0F22                     	;# 
  2741  0F23                     	;# 
  2742  0F24                     	;# 
  2743  0F25                     	;# 
  2744  0F26                     	;# 
  2745  0F27                     	;# 
  2746  0F28                     	;# 
  2747  0F29                     	;# 
  2748  0F2A                     	;# 
  2749  0F2B                     	;# 
  2750  0F2C                     	;# 
  2751  0F2D                     	;# 
  2752  0F2E                     	;# 
  2753  0F2F                     	;# 
  2754  0F30                     	;# 
  2755  0F31                     	;# 
  2756  0F32                     	;# 
  2757  0F33                     	;# 
  2758  0F34                     	;# 
  2759  0F35                     	;# 
  2760  0F36                     	;# 
  2761  0F37                     	;# 
  2762  0FE4                     	;# 
  2763  0FE5                     	;# 
  2764  0FE6                     	;# 
  2765  0FE7                     	;# 
  2766  0FE8                     	;# 
  2767  0FE9                     	;# 
  2768  0FEA                     	;# 
  2769  0FEB                     	;# 
  2770  0FED                     	;# 
  2771  0FEE                     	;# 
  2772  0FEF                     	;# 
  2773                           
  2774                           	psect	idataBANK1
  2775  0880                     __pidataBANK1:	
  2776                           
  2777                           ;initializer for stoa@F1139
  2778  0880  3428               	retlw	40
  2779  0881  346E               	retlw	110
  2780  0882  3475               	retlw	117
  2781  0883  346C               	retlw	108
  2782  0884  346C               	retlw	108
  2783  0885  3429               	retlw	41
  2784  0886  3400               	retlw	0
  2785                           
  2786                           ;initializer for _messages
  2787  0887  3420               	retlw	low (_message_start| (0+512))
  2788  0888  34A0               	retlw	low (_message_end| (0+512))
  2789                           
  2790                           	psect	idataBANK3
  2791  0AEB                     __pidataBANK3:	
  2792                           
  2793                           ;initializer for _setNavFlightMode
  2794  0AEB  34B5               	retlw	181
  2795  0AEC  3462               	retlw	98
  2796  0AED  3406               	retlw	6
  2797  0AEE  3424               	retlw	36
  2798  0AEF  3424               	retlw	36
  2799  0AF0  3400               	retlw	0
  2800  0AF1  34FF               	retlw	255
  2801  0AF2  34FF               	retlw	255
  2802  0AF3  3406               	retlw	6
  2803  0AF4  3403               	retlw	3
  2804  0AF5  3400               	retlw	0
  2805  0AF6  3400               	retlw	0
  2806  0AF7  3400               	retlw	0
  2807  0AF8  3400               	retlw	0
  2808  0AF9  3410               	retlw	16
  2809  0AFA  3427               	retlw	39
  2810  0AFB  3400               	retlw	0
  2811  0AFC  3400               	retlw	0
  2812  0AFD  3405               	retlw	5
  2813  0AFE  3400               	retlw	0
  2814  0AFF  34FA               	retlw	250
  2815  0B00  3400               	retlw	0
  2816  0B01  34FA               	retlw	250
  2817  0B02  3400               	retlw	0
  2818  0B03  3464               	retlw	100
  2819  0B04  3400               	retlw	0
  2820  0B05  342C               	retlw	44
  2821  0B06  3401               	retlw	1
  2822  0B07  3400               	retlw	0
  2823  0B08  3400               	retlw	0
  2824  0B09  3400               	retlw	0
  2825  0B0A  3400               	retlw	0
  2826  0B0B  3400               	retlw	0
  2827  0B0C  3400               	retlw	0
  2828  0B0D  3400               	retlw	0
  2829  0B0E  3400               	retlw	0
  2830  0B0F  3400               	retlw	0
  2831  0B10  3400               	retlw	0
  2832  0B11  3400               	retlw	0
  2833  0B12  3400               	retlw	0
  2834  0B13  3400               	retlw	0
  2835  0B14  3400               	retlw	0
  2836  0B15  3416               	retlw	22
  2837  0B16  34DC               	retlw	220
  2838                           
  2839                           	psect	stringtext1
  2840  10D1                     __pstringtext1:	
  2841  10D1                     _DELAY_MULT:	
  2842  10D1  34E8               	retlw	232
  2843  10D2  3403               	retlw	3
  2844  10D3                     __end_of_DELAY_MULT:	
  2845                           
  2846                           	psect	stringtext2
  2847  10D3                     __pstringtext2:	
  2848  10D3                     _BAUD_RATE:	
  2849  10D3  3432               	retlw	50
  2850  10D4  3400               	retlw	0
  2851  10D5                     __end_of_BAUD_RATE:	
  2852                           
  2853                           	psect	stringtext3
  2854  10D5                     __pstringtext3:	
  2855  10D5                     _MESSAGE_INTERVAL:	
  2856  10D5  3405               	retlw	5
  2857  10D6  3400               	retlw	0
  2858  10D7                     __end_of_MESSAGE_INTERVAL:	
  2859                           
  2860                           	psect	nvBANK1
  2861  00EB                     __pnvBANK1:	
  2862  00EB                     _TMR0_InterruptHandler:	
  2863  00EB                     	ds	2
  2864  00ED                     _timer0ReloadVal:	
  2865  00ED                     	ds	1
  2866  0015                     _TMR0	set	21
  2867  000B                     _INTCONbits	set	11
  2868  0010                     _PIR1bits	set	16
  2869  0095                     _OPTION_REG	set	149
  2870  0095                     _OPTION_REGbits	set	149
  2871  008E                     _TRISC	set	142
  2872  008D                     _TRISB	set	141
  2873  008C                     _TRISA	set	140
  2874  0098                     _OSCTUNE	set	152
  2875  0099                     _OSCCON	set	153
  2876  010C                     _LATAbits	set	268
  2877  010E                     _LATCbits	set	270
  2878  010E                     _LATC	set	270
  2879  010D                     _LATB	set	269
  2880  010C                     _LATA	set	268
  2881  0116                     _BORCON	set	278
  2882  019A                     _TX1REG	set	410
  2883  0199                     _RC1REG	set	409
  2884  019D                     _RC1STAbits	set	413
  2885  019E                     _TX1STAbits	set	414
  2886  019C                     _SPBRGH	set	412
  2887  019B                     _SPBRGL	set	411
  2888  019E                     _TX1STA	set	414
  2889  019D                     _RC1STA	set	413
  2890  019F                     _BAUD1CON	set	415
  2891  018C                     _ANSELA	set	396
  2892  018D                     _ANSELB	set	397
  2893  018E                     _ANSELC	set	398
  2894  020E                     _WPUC	set	526
  2895  020C                     _WPUA	set	524
  2896  020D                     _WPUB	set	525
  2897  028E                     _ODCONC	set	654
  2898  028D                     _ODCONB	set	653
  2899  028C                     _ODCONA	set	652
  2900  030E                     _SLRCONC	set	782
  2901  030D                     _SLRCONB	set	781
  2902  030C                     _SLRCONA	set	780
  2903  0E24                     _RXPPS	set	3620
  2904  0E9F                     _RB7PPS	set	3743
  2905                           
  2906                           	psect	stringtext4
  2907  1000                     __pstringtext4:	
  2908  1000                     STR_2:	
  2909  1000  3424               	retlw	36	;'$'
  2910  1001  3450               	retlw	80	;'P'
  2911  1002  3455               	retlw	85	;'U'
  2912  1003  3442               	retlw	66	;'B'
  2913  1004  3458               	retlw	88	;'X'
  2914  1005  342C               	retlw	44	;','
  2915  1006  3434               	retlw	52	;'4'
  2916  1007  3430               	retlw	48	;'0'
  2917  1008  342C               	retlw	44	;','
  2918  1009  345A               	retlw	90	;'Z'
  2919  100A  3444               	retlw	68	;'D'
  2920  100B  3441               	retlw	65	;'A'
  2921  100C  342C               	retlw	44	;','
  2922  100D  3430               	retlw	48	;'0'
  2923  100E  342C               	retlw	44	;','
  2924  100F  3430               	retlw	48	;'0'
  2925  1010  342C               	retlw	44	;','
  2926  1011  3430               	retlw	48	;'0'
  2927  1012  342C               	retlw	44	;','
  2928  1013  3430               	retlw	48	;'0'
  2929  1014  342A               	retlw	42	;'*'
  2930  1015  3434               	retlw	52	;'4'
  2931  1016  3434               	retlw	52	;'4'
  2932  1017  340D               	retlw	13
  2933  1018  340A               	retlw	10
  2934  1019  3400               	retlw	0
  2935                           
  2936                           	psect	stringtext5
  2937  101A                     __pstringtext5:	
  2938  101A                     STR_6:	
  2939  101A  3424               	retlw	36	;'$'
  2940  101B  3450               	retlw	80	;'P'
  2941  101C  3455               	retlw	85	;'U'
  2942  101D  3442               	retlw	66	;'B'
  2943  101E  3458               	retlw	88	;'X'
  2944  101F  342C               	retlw	44	;','
  2945  1020  3434               	retlw	52	;'4'
  2946  1021  3430               	retlw	48	;'0'
  2947  1022  342C               	retlw	44	;','
  2948  1023  3452               	retlw	82	;'R'
  2949  1024  344D               	retlw	77	;'M'
  2950  1025  3443               	retlw	67	;'C'
  2951  1026  342C               	retlw	44	;','
  2952  1027  3430               	retlw	48	;'0'
  2953  1028  342C               	retlw	44	;','
  2954  1029  3430               	retlw	48	;'0'
  2955  102A  342C               	retlw	44	;','
  2956  102B  3430               	retlw	48	;'0'
  2957  102C  342C               	retlw	44	;','
  2958  102D  3430               	retlw	48	;'0'
  2959  102E  342A               	retlw	42	;'*'
  2960  102F  3434               	retlw	52	;'4'
  2961  1030  3437               	retlw	55	;'7'
  2962  1031  340D               	retlw	13
  2963  1032  340A               	retlw	10
  2964  1033  3400               	retlw	0
  2965                           
  2966                           	psect	stringtext6
  2967  1034                     __pstringtext6:	
  2968  1034                     STR_4:	
  2969  1034  3424               	retlw	36	;'$'
  2970  1035  3450               	retlw	80	;'P'
  2971  1036  3455               	retlw	85	;'U'
  2972  1037  3442               	retlw	66	;'B'
  2973  1038  3458               	retlw	88	;'X'
  2974  1039  342C               	retlw	44	;','
  2975  103A  3434               	retlw	52	;'4'
  2976  103B  3430               	retlw	48	;'0'
  2977  103C  342C               	retlw	44	;','
  2978  103D  3447               	retlw	71	;'G'
  2979  103E  3453               	retlw	83	;'S'
  2980  103F  3456               	retlw	86	;'V'
  2981  1040  342C               	retlw	44	;','
  2982  1041  3430               	retlw	48	;'0'
  2983  1042  342C               	retlw	44	;','
  2984  1043  3430               	retlw	48	;'0'
  2985  1044  342C               	retlw	44	;','
  2986  1045  3430               	retlw	48	;'0'
  2987  1046  342C               	retlw	44	;','
  2988  1047  3430               	retlw	48	;'0'
  2989  1048  342A               	retlw	42	;'*'
  2990  1049  3435               	retlw	53	;'5'
  2991  104A  3439               	retlw	57	;'9'
  2992  104B  340D               	retlw	13
  2993  104C  340A               	retlw	10
  2994  104D  3400               	retlw	0
  2995                           
  2996                           	psect	stringtext7
  2997  104E                     __pstringtext7:	
  2998  104E                     STR_1:	
  2999  104E  3424               	retlw	36	;'$'
  3000  104F  3450               	retlw	80	;'P'
  3001  1050  3455               	retlw	85	;'U'
  3002  1051  3442               	retlw	66	;'B'
  3003  1052  3458               	retlw	88	;'X'
  3004  1053  342C               	retlw	44	;','
  3005  1054  3434               	retlw	52	;'4'
  3006  1055  3430               	retlw	48	;'0'
  3007  1056  342C               	retlw	44	;','
  3008  1057  3447               	retlw	71	;'G'
  3009  1058  344C               	retlw	76	;'L'
  3010  1059  344C               	retlw	76	;'L'
  3011  105A  342C               	retlw	44	;','
  3012  105B  3430               	retlw	48	;'0'
  3013  105C  342C               	retlw	44	;','
  3014  105D  3430               	retlw	48	;'0'
  3015  105E  342C               	retlw	44	;','
  3016  105F  3430               	retlw	48	;'0'
  3017  1060  342C               	retlw	44	;','
  3018  1061  3430               	retlw	48	;'0'
  3019  1062  342A               	retlw	42	;'*'
  3020  1063  3435               	retlw	53	;'5'
  3021  1064  3443               	retlw	67	;'C'
  3022  1065  340D               	retlw	13
  3023  1066  340A               	retlw	10
  3024  1067  3400               	retlw	0
  3025                           
  3026                           	psect	stringtext8
  3027  1068                     __pstringtext8:	
  3028  1068                     STR_5:	
  3029  1068  3424               	retlw	36	;'$'
  3030  1069  3450               	retlw	80	;'P'
  3031  106A  3455               	retlw	85	;'U'
  3032  106B  3442               	retlw	66	;'B'
  3033  106C  3458               	retlw	88	;'X'
  3034  106D  342C               	retlw	44	;','
  3035  106E  3434               	retlw	52	;'4'
  3036  106F  3430               	retlw	48	;'0'
  3037  1070  342C               	retlw	44	;','
  3038  1071  3447               	retlw	71	;'G'
  3039  1072  3453               	retlw	83	;'S'
  3040  1073  3441               	retlw	65	;'A'
  3041  1074  342C               	retlw	44	;','
  3042  1075  3430               	retlw	48	;'0'
  3043  1076  342C               	retlw	44	;','
  3044  1077  3430               	retlw	48	;'0'
  3045  1078  342C               	retlw	44	;','
  3046  1079  3430               	retlw	48	;'0'
  3047  107A  342C               	retlw	44	;','
  3048  107B  3430               	retlw	48	;'0'
  3049  107C  342A               	retlw	42	;'*'
  3050  107D  3434               	retlw	52	;'4'
  3051  107E  3445               	retlw	69	;'E'
  3052  107F  340D               	retlw	13
  3053  1080  340A               	retlw	10
  3054  1081  3400               	retlw	0
  3055                           
  3056                           	psect	stringtext9
  3057  1082                     __pstringtext9:	
  3058  1082                     STR_3:	
  3059  1082  3424               	retlw	36	;'$'
  3060  1083  3450               	retlw	80	;'P'
  3061  1084  3455               	retlw	85	;'U'
  3062  1085  3442               	retlw	66	;'B'
  3063  1086  3458               	retlw	88	;'X'
  3064  1087  342C               	retlw	44	;','
  3065  1088  3434               	retlw	52	;'4'
  3066  1089  3430               	retlw	48	;'0'
  3067  108A  342C               	retlw	44	;','
  3068  108B  3456               	retlw	86	;'V'
  3069  108C  3454               	retlw	84	;'T'
  3070  108D  3447               	retlw	71	;'G'
  3071  108E  342C               	retlw	44	;','
  3072  108F  3430               	retlw	48	;'0'
  3073  1090  342C               	retlw	44	;','
  3074  1091  3430               	retlw	48	;'0'
  3075  1092  342C               	retlw	44	;','
  3076  1093  3430               	retlw	48	;'0'
  3077  1094  342C               	retlw	44	;','
  3078  1095  3430               	retlw	48	;'0'
  3079  1096  342A               	retlw	42	;'*'
  3080  1097  3435               	retlw	53	;'5'
  3081  1098  3445               	retlw	69	;'E'
  3082  1099  340D               	retlw	13
  3083  109A  340A               	retlw	10
  3084  109B  3400               	retlw	0
  3085                           
  3086                           	psect	stringtext10
  3087  109C                     __pstringtext10:	
  3088  109C                     STR_8:	
  3089  109C  3424               	retlw	36	;'$'
  3090  109D  3424               	retlw	36	;'$'
  3091  109E  3454               	retlw	84	;'T'
  3092  109F  3445               	retlw	69	;'E'
  3093  10A0  3453               	retlw	83	;'S'
  3094  10A1  3454               	retlw	84	;'T'
  3095  10A2  342C               	retlw	44	;','
  3096  10A3  3425               	retlw	37	;'%'
  3097  10A4  3464               	retlw	100	;'d'
  3098  10A5  342C               	retlw	44	;','
  3099  10A6  3425               	retlw	37	;'%'
  3100  10A7  3473               	retlw	115	;'s'
  3101  10A8  342C               	retlw	44	;','
  3102  10A9  3425               	retlw	37	;'%'
  3103  10AA  3473               	retlw	115	;'s'
  3104  10AB  342C               	retlw	44	;','
  3105  10AC  3425               	retlw	37	;'%'
  3106  10AD  3473               	retlw	115	;'s'
  3107  10AE  342C               	retlw	44	;','
  3108  10AF  3400               	retlw	0
  3109                           
  3110                           	psect	stringtext11
  3111  10B0                     __pstringtext11:	
  3112  10B0                     STR_7:	
  3113  10B0  3424               	retlw	36	;'$'
  3114  10B1  3450               	retlw	80	;'P'
  3115  10B2  3455               	retlw	85	;'U'
  3116  10B3  3442               	retlw	66	;'B'
  3117  10B4  3458               	retlw	88	;'X'
  3118  10B5  342C               	retlw	44	;','
  3119  10B6  3430               	retlw	48	;'0'
  3120  10B7  3430               	retlw	48	;'0'
  3121  10B8  342A               	retlw	42	;'*'
  3122  10B9  3433               	retlw	51	;'3'
  3123  10BA  3433               	retlw	51	;'3'
  3124  10BB  340D               	retlw	13
  3125  10BC  340A               	retlw	10
  3126  10BD  3400               	retlw	0
  3127                           
  3128                           	psect	stringtext12
  3129  10BE                     __pstringtext12:	
  3130  10BE                     STR_9:	
  3131  10BE  3425               	retlw	37	;'%'
  3132  10BF  3473               	retlw	115	;'s'
  3133  10C0  342C               	retlw	44	;','
  3134  10C1  3425               	retlw	37	;'%'
  3135  10C2  3473               	retlw	115	;'s'
  3136  10C3  342C               	retlw	44	;','
  3137  10C4  3425               	retlw	37	;'%'
  3138  10C5  3473               	retlw	115	;'s'
  3139  10C6  342C               	retlw	44	;','
  3140  10C7  3425               	retlw	37	;'%'
  3141  10C8  3473               	retlw	115	;'s'
  3142  10C9  3400               	retlw	0
  3143                           
  3144                           	psect	stringtext13
  3145  10CA                     __pstringtext13:	
  3146  10CA                     STR_10:	
  3147  10CA  342A               	retlw	42	;'*'
  3148  10CB  3425               	retlw	37	;'%'
  3149  10CC  3430               	retlw	48	;'0'
  3150  10CD  3434               	retlw	52	;'4'
  3151  10CE  3458               	retlw	88	;'X'
  3152  10CF  340A               	retlw	10
  3153  10D0  3400               	retlw	0
  3154                           
  3155                           	psect	stringtext14
  3156  0000                     __pstringtext14:	
  3157                           
  3158                           ; #config settings
  3159  0000                     
  3160                           	psect	cinit
  3161  000F                     start_initialization:	
  3162  000F                     __initialization:	
  3163                           
  3164                           ; Initialize objects allocated to BANK1
  3165  000F  3080               	movlw	low __pidataBANK1
  3166  0010  0084               	movwf	4
  3167  0011  3088               	movlw	(high __pidataBANK1)| (0+128)
  3168  0012  0085               	movwf	5
  3169  0013  30E2               	movlw	low __pdataBANK1
  3170  0014  0086               	movwf	6
  3171  0015  3000               	movlw	high __pdataBANK1
  3172  0016  0087               	movwf	7
  3173  0017  3009               	movlw	9
  3174  0018  3188  206B  3180   	fcall	init_ram
  3175                           
  3176                           ; Initialize objects allocated to BANK3
  3177  001B  30EB               	movlw	low __pidataBANK3
  3178  001C  0084               	movwf	4
  3179  001D  308A               	movlw	(high __pidataBANK3)| (0+128)
  3180  001E  0085               	movwf	5
  3181  001F  30A0               	movlw	low __pdataBANK3
  3182  0020  0086               	movwf	6
  3183  0021  3001               	movlw	high __pdataBANK3
  3184  0022  0087               	movwf	7
  3185  0023  302C               	movlw	44
  3186  0024  3188  206B  3180   	fcall	init_ram
  3187                           
  3188                           ; Clear objects allocated to BANK0
  3189  0027  01ED               	clrf	__pbssBANK0& (0+127)
  3190  0028  01EE               	clrf	(__pbssBANK0+1)& (0+127)
  3191  0029  01EF               	clrf	(__pbssBANK0+2)& (0+127)
  3192                           
  3193                           ; Clear objects allocated to BANK1
  3194  002A  30CE               	movlw	low __pbssBANK1
  3195  002B  0084               	movwf	4
  3196  002C  3000               	movlw	high __pbssBANK1
  3197  002D  0085               	movwf	5
  3198  002E  3014               	movlw	20
  3199  002F  3188  2065  3180   	fcall	clear_ram0
  3200                           
  3201                           ; Clear objects allocated to BANK2
  3202  0032  3020               	movlw	low __pbssBANK2
  3203  0033  0084               	movwf	4
  3204  0034  3001               	movlw	high __pbssBANK2
  3205  0035  0085               	movwf	5
  3206  0036  304E               	movlw	78
  3207  0037  3188  2065  3180   	fcall	clear_ram0
  3208                           
  3209                           ; Clear objects allocated to BANK3
  3210  003A  30CC               	movlw	low __pbssBANK3
  3211  003B  0084               	movwf	4
  3212  003C  3001               	movlw	high __pbssBANK3
  3213  003D  0085               	movwf	5
  3214  003E  3020               	movlw	32
  3215  003F  3188  2065  3180   	fcall	clear_ram0
  3216                           
  3217                           ; Clear objects allocated to BANK4
  3218  0042  3020               	movlw	low __pbssBANK4
  3219  0043  0084               	movwf	4
  3220  0044  3002               	movlw	high __pbssBANK4
  3221  0045  0085               	movwf	5
  3222  0046  3046               	movlw	70
  3223  0047  3188  2065  3180   	fcall	clear_ram0
  3224                           
  3225                           ; Clear objects allocated to BANK5
  3226  004A  30A0               	movlw	low __pbssBANK5
  3227  004B  0084               	movwf	4
  3228  004C  3002               	movlw	high __pbssBANK5
  3229  004D  0085               	movwf	5
  3230  004E  3049               	movlw	73
  3231  004F  3188  2065         	fcall	clear_ram0
  3232  0051                     end_of_initialization:	
  3233                           ;End of C runtime variable initialization code
  3234                           
  3235  0051                     __end_of__initialization:	
  3236  0051  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3237  0052  0020               	movlb	0
  3238  0053  3187  2F50         	ljmp	_main	;jump to C main() function
  3239                           
  3240                           	psect	bssBANK0
  3241  006D                     __pbssBANK0:	
  3242  006D                     _flags:	
  3243  006D                     	ds	2
  3244  006F                     _gps_configured:	
  3245  006F                     	ds	1
  3246                           
  3247                           	psect	bssBANK1
  3248  00CE                     __pbssBANK1:	
  3249  00CE                     _gps_nav_status:	
  3250  00CE                     	ds	4
  3251  00D2                     _ticks:	
  3252  00D2                     	ds	4
  3253  00D6                     _nout:	
  3254  00D6                     	ds	2
  3255  00D8                     _width:	
  3256  00D8                     	ds	2
  3257  00DA                     _prec:	
  3258  00DA                     	ds	2
  3259  00DC                     _checksum:	
  3260  00DC                     	ds	6
  3261                           
  3262                           	psect	dataBANK1
  3263  00E2                     __pdataBANK1:	
  3264  00E2                     stoa@F1139:	
  3265  00E2                     	ds	7
  3266  00E9                     _messages:	
  3267  00E9                     	ds	2
  3268                           
  3269                           	psect	bssBANK2
  3270  0120                     __pbssBANK2:	
  3271  0120                     _gps_longitude:	
  3272  0120                     	ds	16
  3273  0130                     _gps_latitude:	
  3274  0130                     	ds	16
  3275  0140                     _gps_altitude:	
  3276  0140                     	ds	12
  3277  014C                     _gps_time:	
  3278  014C                     	ds	10
  3279  0156                     _gps_vertical_velocity:	
  3280  0156                     	ds	8
  3281  015E                     _gps_course_over_ground:	
  3282  015E                     	ds	8
  3283  0166                     _gps_speed_over_ground:	
  3284  0166                     	ds	8
  3285                           
  3286                           	psect	bssBANK3
  3287  01CC                     __pbssBANK3:	
  3288  01CC                     _dbuf:	
  3289  01CC                     	ds	32
  3290                           
  3291                           	psect	dataBANK3
  3292  01A0                     __pdataBANK3:	
  3293  01A0                     _setNavFlightMode:	
  3294  01A0                     	ds	44
  3295                           
  3296                           	psect	bssBANK4
  3297  0220                     __pbssBANK4:	
  3298  0220                     _message_start:	
  3299  0220                     	ds	70
  3300                           
  3301                           	psect	bssBANK5
  3302  02A0                     __pbssBANK5:	
  3303  02A0                     _message_end:	
  3304  02A0                     	ds	73
  3305                           
  3306                           	psect	inittext
  3307  086B                     init_ram:	
  3308  086B  00FE               	movwf	126
  3309  086C                     initloop:	
  3310  086C  0012               	moviw fsr0++
  3311  086D  001E               	movwi fsr1++
  3312  086E  0BFE               	decfsz	126,f
  3313  086F  286C               	goto	initloop
  3314  0870  3400               	retlw	0
  3315                           
  3316                           	psect	clrtext
  3317  0865                     clear_ram0:	
  3318                           ;	Called with FSR0 containing the base address, and
  3319                           ;	WREG with the size to clear
  3320                           
  3321  0865  0064               	clrwdt	;clear the watchdog before getting into this loop
  3322  0866                     clrloop0:	
  3323  0866  0180               	clrf	0	;clear RAM location pointed to by FSR
  3324  0867  3101               	addfsr 0,1
  3325  0868  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3326  0869  2866               	goto	clrloop0	;have we reached the end yet?
  3327  086A  3400               	retlw	0	;all done for this memory range, return
  3328                           
  3329                           	psect	cstackBANK1
  3330  00A0                     __pcstackBANK1:	
  3331  00A0                     vfpfcnvrt@ll:	
  3332                           
  3333                           ; 8 bytes @ 0x0
  3334  00A0                     	ds	8
  3335  00A8                     vfpfcnvrt@llu:	
  3336                           
  3337                           ; 8 bytes @ 0x8
  3338  00A8                     	ds	8
  3339  00B0                     vfpfcnvrt@cp:	
  3340                           
  3341                           ; 2 bytes @ 0x10
  3342  00B0                     	ds	2
  3343  00B2                     vfpfcnvrt@c:	
  3344                           
  3345                           ; 1 bytes @ 0x12
  3346  00B2                     	ds	1
  3347  00B3                     vfpfcnvrt@done:	
  3348                           
  3349                           ; 2 bytes @ 0x13
  3350  00B3                     	ds	2
  3351  00B5                     _vfpfcnvrt$660:	
  3352                           
  3353                           ; 2 bytes @ 0x15
  3354  00B5                     	ds	2
  3355  00B7                     vfpfcnvrt@fp:	
  3356                           
  3357                           ; 1 bytes @ 0x17
  3358  00B7                     	ds	1
  3359  00B8                     ?_sprintf:	
  3360  00B8                     sprintf@s:	
  3361                           ; 2 bytes @ 0x18
  3362                           
  3363                           
  3364                           ; 2 bytes @ 0x18
  3365  00B8                     	ds	2
  3366  00BA                     sprintf@fmt:	
  3367  00BA                     GetNavData@startTime:	
  3368                           ; 2 bytes @ 0x1A
  3369                           
  3370                           
  3371                           ; 4 bytes @ 0x1A
  3372  00BA                     	ds	4
  3373  00BE                     _GetNavData$504:	
  3374                           
  3375                           ; 2 bytes @ 0x1E
  3376  00BE                     	ds	2
  3377  00C0                     _GetNavData$505:	
  3378                           
  3379                           ; 2 bytes @ 0x20
  3380  00C0                     	ds	2
  3381  00C2                     GetNavData@skip:	
  3382                           
  3383                           ; 1 bytes @ 0x22
  3384  00C2                     	ds	1
  3385  00C3                     GetNavData@dataFieldType:	
  3386                           
  3387                           ; 2 bytes @ 0x23
  3388  00C3                     	ds	2
  3389  00C5                     GetNavData@success:	
  3390                           
  3391                           ; 1 bytes @ 0x25
  3392  00C5                     	ds	1
  3393  00C6                     GetNavData@dataIndex:	
  3394                           
  3395                           ; 2 bytes @ 0x26
  3396  00C6                     	ds	2
  3397  00C8                     GetNavData@byte:	
  3398                           
  3399                           ; 1 bytes @ 0x28
  3400  00C8                     	ds	1
  3401  00C9                     ??_main:	
  3402                           
  3403                           ; 1 bytes @ 0x29
  3404  00C9                     	ds	1
  3405  00CA                     main@id:	
  3406                           
  3407                           ; 2 bytes @ 0x2A
  3408  00CA                     	ds	2
  3409  00CC                     main@i:	
  3410                           
  3411                           ; 2 bytes @ 0x2C
  3412  00CC                     	ds	2
  3413                           
  3414                           	psect	cstackCOMMON
  3415  0070                     __pcstackCOMMON:	
  3416  0070                     ?_PIN_MANAGER_Initialize:	
  3417  0070                     ??_PIN_MANAGER_Initialize:	
  3418                           ; 1 bytes @ 0x0
  3419                           
  3420  0070                     ?_OSCILLATOR_Initialize:	
  3421                           ; 1 bytes @ 0x0
  3422                           
  3423  0070                     ??_OSCILLATOR_Initialize:	
  3424                           ; 1 bytes @ 0x0
  3425                           
  3426  0070                     ?_TMR0_Initialize:	
  3427                           ; 1 bytes @ 0x0
  3428                           
  3429  0070                     ?_EUSART_Initialize:	
  3430                           ; 1 bytes @ 0x0
  3431                           
  3432  0070                     ??_EUSART_Initialize:	
  3433                           ; 1 bytes @ 0x0
  3434                           
  3435  0070                     ?_TMR0_ISR:	
  3436                           ; 1 bytes @ 0x0
  3437                           
  3438  0070                     ??_TMR0_ISR:	
  3439                           ; 1 bytes @ 0x0
  3440                           
  3441  0070                     ?_TMR0_SetInterruptHandler:	
  3442                           ; 1 bytes @ 0x0
  3443                           
  3444  0070                     ?_TMR0_DefaultInterruptHandler:	
  3445                           ; 1 bytes @ 0x0
  3446                           
  3447  0070                     ??_TMR0_DefaultInterruptHandler:	
  3448                           ; 1 bytes @ 0x0
  3449                           
  3450  0070                     ?_SYSTEM_Initialize:	
  3451                           ; 1 bytes @ 0x0
  3452                           
  3453  0070                     ?_EUSART_is_rx_ready:	
  3454                           ; 1 bytes @ 0x0
  3455                           
  3456  0070                     ??_EUSART_is_rx_ready:	
  3457                           ; 1 bytes @ 0x0
  3458                           
  3459  0070                     ?_EUSART_Read:	
  3460                           ; 1 bytes @ 0x0
  3461                           
  3462  0070                     ??_EUSART_Read:	
  3463                           ; 1 bytes @ 0x0
  3464                           
  3465  0070                     ?_EUSART_Write:	
  3466                           ; 1 bytes @ 0x0
  3467                           
  3468  0070                     ??_EUSART_Write:	
  3469                           ; 1 bytes @ 0x0
  3470                           
  3471  0070                     ?_putch:	
  3472                           ; 1 bytes @ 0x0
  3473                           
  3474  0070                     ?_INTERRUPT_InterruptManager:	
  3475                           ; 1 bytes @ 0x0
  3476                           
  3477  0070                     ??_INTERRUPT_InterruptManager:	
  3478                           ; 1 bytes @ 0x0
  3479                           
  3480  0070                     ?_TimerISR:	
  3481                           ; 1 bytes @ 0x0
  3482                           
  3483  0070                     ??_TimerISR:	
  3484                           ; 1 bytes @ 0x0
  3485                           
  3486  0070                     ?_FlashError:	
  3487                           ; 1 bytes @ 0x0
  3488                           
  3489  0070                     ??_FlashError:	
  3490                           ; 1 bytes @ 0x0
  3491                           
  3492  0070                     ?_TransmitBit:	
  3493                           ; 1 bytes @ 0x0
  3494                           
  3495  0070                     ??_TransmitBit:	
  3496                           ; 1 bytes @ 0x0
  3497                           
  3498  0070                     ?_TransmitByte:	
  3499                           ; 1 bytes @ 0x0
  3500                           
  3501  0070                     ?_TransmitString:	
  3502                           ; 1 bytes @ 0x0
  3503                           
  3504  0070                     ?_GPS_SendUBX:	
  3505                           ; 1 bytes @ 0x0
  3506                           
  3507  0070                     ?_GPS_HasAcknowledged:	
  3508                           ; 1 bytes @ 0x0
  3509                           
  3510  0070                     ??_GPS_HasAcknowledged:	
  3511                           ; 1 bytes @ 0x0
  3512                           
  3513  0070                     ?_SetupGPS:	
  3514                           ; 1 bytes @ 0x0
  3515                           
  3516  0070                     ?_GetNavData:	
  3517                           ; 1 bytes @ 0x0
  3518                           
  3519  0070                     ?_main:	
  3520                           ; 1 bytes @ 0x0
  3521                           
  3522  0070                     ??___aodiv:	
  3523                           ; 1 bytes @ 0x0
  3524                           
  3525  0070                     ??___aomod:	
  3526                           ; 1 bytes @ 0x0
  3527                           
  3528  0070                     ?_strlen:	
  3529                           ; 1 bytes @ 0x0
  3530                           
  3531  0070                     ?_isupper:	
  3532                           ; 2 bytes @ 0x0
  3533                           
  3534  0070                     ?_isalpha:	
  3535                           ; 2 bytes @ 0x0
  3536                           
  3537  0070                     ?_isdigit:	
  3538                           ; 2 bytes @ 0x0
  3539                           
  3540  0070                     ?_isspace:	
  3541                           ; 2 bytes @ 0x0
  3542                           
  3543  0070                     ?_islower:	
  3544                           ; 2 bytes @ 0x0
  3545                           
  3546  0070                     ?_crc_append_byte:	
  3547                           ; 2 bytes @ 0x0
  3548                           
  3549  0070                     ?_GetLengthUBX:	
  3550                           ; 2 bytes @ 0x0
  3551                           
  3552  0070                     ?___wmul:	
  3553                           ; 2 bytes @ 0x0
  3554                           
  3555  0070                     EUSART_Write@txData:	
  3556                           ; 2 bytes @ 0x0
  3557                           
  3558  0070                     TMR0_SetInterruptHandler@InterruptHandler:	
  3559                           ; 1 bytes @ 0x0
  3560                           
  3561  0070                     crc_append_byte@crc:	
  3562                           ; 2 bytes @ 0x0
  3563                           
  3564  0070                     ___wmul@multiplier:	
  3565                           ; 2 bytes @ 0x0
  3566                           
  3567  0070                     isalpha@c:	
  3568                           ; 2 bytes @ 0x0
  3569                           
  3570  0070                     isdigit@c:	
  3571                           ; 2 bytes @ 0x0
  3572                           
  3573  0070                     isspace@c:	
  3574                           ; 2 bytes @ 0x0
  3575                           
  3576  0070                     isupper@c:	
  3577                           ; 2 bytes @ 0x0
  3578                           
  3579  0070                     strlen@s:	
  3580                           ; 2 bytes @ 0x0
  3581                           
  3582  0070                     islower@c:	
  3583                           ; 2 bytes @ 0x0
  3584                           
  3585                           
  3586                           ; 2 bytes @ 0x0
  3587  0070                     	ds	1
  3588  0071                     ??_putch:	
  3589  0071                     putch@txData:	
  3590                           ; 1 bytes @ 0x1
  3591                           
  3592  0071                     TransmitBit@b:	
  3593                           ; 1 bytes @ 0x1
  3594                           
  3595  0071                     ___aodiv@counter:	
  3596                           ; 1 bytes @ 0x1
  3597                           
  3598  0071                     ___aomod@counter:	
  3599                           ; 1 bytes @ 0x1
  3600                           
  3601                           
  3602                           ; 1 bytes @ 0x1
  3603  0071                     	ds	1
  3604  0072                     ??_TMR0_Initialize:	
  3605  0072                     ??_TMR0_SetInterruptHandler:	
  3606                           ; 1 bytes @ 0x2
  3607                           
  3608  0072                     ??_strlen:	
  3609                           ; 1 bytes @ 0x2
  3610                           
  3611  0072                     ??_isupper:	
  3612                           ; 1 bytes @ 0x2
  3613                           
  3614  0072                     ??_isalpha:	
  3615                           ; 1 bytes @ 0x2
  3616                           
  3617  0072                     ??_isdigit:	
  3618                           ; 1 bytes @ 0x2
  3619                           
  3620  0072                     ??_isspace:	
  3621                           ; 1 bytes @ 0x2
  3622                           
  3623  0072                     ??_islower:	
  3624                           ; 1 bytes @ 0x2
  3625                           
  3626  0072                     ??_TransmitByte:	
  3627                           ; 1 bytes @ 0x2
  3628                           
  3629  0072                     ?_fputc:	
  3630                           ; 1 bytes @ 0x2
  3631                           
  3632  0072                     crc_append_byte@data:	
  3633                           ; 2 bytes @ 0x2
  3634                           
  3635  0072                     ___aodiv@sign:	
  3636                           ; 1 bytes @ 0x2
  3637                           
  3638  0072                     ___aomod@sign:	
  3639                           ; 1 bytes @ 0x2
  3640                           
  3641  0072                     FlashError@i:	
  3642                           ; 1 bytes @ 0x2
  3643                           
  3644  0072                     ___wmul@multiplicand:	
  3645                           ; 2 bytes @ 0x2
  3646                           
  3647  0072                     fputc@c:	
  3648                           ; 2 bytes @ 0x2
  3649                           
  3650  0072                     strlen@a:	
  3651                           ; 2 bytes @ 0x2
  3652                           
  3653                           
  3654                           ; 2 bytes @ 0x2
  3655  0072                     	ds	1
  3656  0073                     ??_SYSTEM_Initialize:	
  3657  0073                     ??_crc_append_byte:	
  3658                           ; 1 bytes @ 0x3
  3659                           
  3660  0073                     ??_GetLengthUBX:	
  3661                           ; 1 bytes @ 0x3
  3662                           
  3663  0073                     ?_abs:	
  3664                           ; 1 bytes @ 0x3
  3665                           
  3666  0073                     TransmitByte@byte:	
  3667                           ; 2 bytes @ 0x3
  3668                           
  3669  0073                     GetLengthUBX@data:	
  3670                           ; 1 bytes @ 0x3
  3671                           
  3672  0073                     abs@a:	
  3673                           ; 1 bytes @ 0x3
  3674                           
  3675  0073                     ___aodiv@quotient:	
  3676                           ; 2 bytes @ 0x3
  3677                           
  3678                           
  3679                           ; 8 bytes @ 0x3
  3680  0073                     	ds	1
  3681  0074                     ?_strcpy:	
  3682  0074                     ??_GPS_SendUBX:	
  3683                           ; 1 bytes @ 0x4
  3684                           
  3685  0074                     ??___wmul:	
  3686                           ; 1 bytes @ 0x4
  3687                           
  3688  0074                     _isspace$984:	
  3689                           ; 1 bytes @ 0x4
  3690                           
  3691  0074                     fputc@fp:	
  3692                           ; 1 bytes @ 0x4
  3693                           
  3694  0074                     strcpy@src:	
  3695                           ; 1 bytes @ 0x4
  3696                           
  3697  0074                     TransmitByte@i:	
  3698                           ; 1 bytes @ 0x4
  3699                           
  3700  0074                     ___wmul@product:	
  3701                           ; 2 bytes @ 0x4
  3702                           
  3703                           
  3704                           ; 2 bytes @ 0x4
  3705  0074                     	ds	1
  3706  0075                     ??_fputc:	
  3707  0075                     ??_abs:	
  3708                           ; 1 bytes @ 0x5
  3709                           
  3710  0075                     ??_strcpy:	
  3711                           ; 1 bytes @ 0x5
  3712                           
  3713  0075                     GPS_SendUBX@length:	
  3714                           ; 1 bytes @ 0x5
  3715                           
  3716                           
  3717                           ; 2 bytes @ 0x5
  3718  0075                     	ds	1
  3719  0076                     ??_TransmitString:	
  3720  0076                     ?_toupper:	
  3721                           ; 1 bytes @ 0x6
  3722                           
  3723  0076                     ?_atoi:	
  3724                           ; 2 bytes @ 0x6
  3725                           
  3726  0076                     strcpy@s:	
  3727                           ; 2 bytes @ 0x6
  3728                           
  3729  0076                     crc_append_byte@i:	
  3730                           ; 1 bytes @ 0x6
  3731                           
  3732  0076                     atoi@s:	
  3733                           ; 2 bytes @ 0x6
  3734                           
  3735  0076                     toupper@c:	
  3736                           ; 2 bytes @ 0x6
  3737                           
  3738                           
  3739                           ; 2 bytes @ 0x6
  3740  0076                     	ds	1
  3741  0077                     strcpy@d:	
  3742  0077                     TransmitString@counti:	
  3743                           ; 1 bytes @ 0x7
  3744                           
  3745  0077                     GPS_SendUBX@i:	
  3746                           ; 2 bytes @ 0x7
  3747                           
  3748                           
  3749                           ; 2 bytes @ 0x7
  3750  0077                     	ds	1
  3751  0078                     ??_toupper:	
  3752  0078                     ??_atoi:	
  3753                           ; 1 bytes @ 0x8
  3754                           
  3755  0078                     ?_crc16:	
  3756                           ; 1 bytes @ 0x8
  3757                           
  3758  0078                     strcpy@dest:	
  3759                           ; 2 bytes @ 0x8
  3760                           
  3761  0078                     crc16@segments:	
  3762                           ; 1 bytes @ 0x8
  3763                           
  3764                           
  3765                           ; 2 bytes @ 0x8
  3766  0078                     	ds	1
  3767  0079                     ?_strcat:	
  3768  0079                     GPS_SendUBX@data:	
  3769                           ; 1 bytes @ 0x9
  3770                           
  3771  0079                     strcat@src:	
  3772                           ; 1 bytes @ 0x9
  3773                           
  3774  0079                     TransmitString@i:	
  3775                           ; 1 bytes @ 0x9
  3776                           
  3777                           
  3778                           ; 2 bytes @ 0x9
  3779  0079                     	ds	1
  3780  007A                     ??_strcat:	
  3781  007A                     ??_crc16:	
  3782                           ; 1 bytes @ 0xA
  3783                           
  3784  007A                     ?_fputs:	
  3785                           ; 1 bytes @ 0xA
  3786                           
  3787  007A                     ?_stoa:	
  3788                           ; 2 bytes @ 0xA
  3789                           
  3790  007A                     fputs@fp:	
  3791                           ; 2 bytes @ 0xA
  3792                           
  3793  007A                     stoa@s:	
  3794                           ; 1 bytes @ 0xA
  3795                           
  3796                           
  3797                           ; 2 bytes @ 0xA
  3798  007A                     	ds	1
  3799  007B                     ??_fputs:	
  3800  007B                     TransmitString@message:	
  3801                           ; 1 bytes @ 0xB
  3802                           
  3803                           
  3804                           ; 1 bytes @ 0xB
  3805  007B                     	ds	1
  3806  007C                     _toupper$1084:	
  3807                           
  3808                           ; 2 bytes @ 0xC
  3809  007C                     	ds	1
  3810  007D                     strcat@dest:	
  3811                           
  3812                           ; 1 bytes @ 0xD
  3813  007D                     	ds	1
  3814                           
  3815                           	psect	cstackBANK0
  3816  0020                     __pcstackBANK0:	
  3817  0020                     ??_stoa:	
  3818  0020                     ?___aodiv:	
  3819                           ; 1 bytes @ 0x0
  3820                           
  3821  0020                     ?___aomod:	
  3822                           ; 8 bytes @ 0x0
  3823                           
  3824  0020                     fputs@c:	
  3825                           ; 8 bytes @ 0x0
  3826                           
  3827  0020                     crc16@len:	
  3828                           ; 1 bytes @ 0x0
  3829                           
  3830  0020                     atoi@neg:	
  3831                           ; 2 bytes @ 0x0
  3832                           
  3833  0020                     GPS_HasAcknowledged@startTime:	
  3834                           ; 2 bytes @ 0x0
  3835                           
  3836  0020                     ___aodiv@divisor:	
  3837                           ; 4 bytes @ 0x0
  3838                           
  3839  0020                     ___aomod@divisor:	
  3840                           ; 8 bytes @ 0x0
  3841                           
  3842                           
  3843                           ; 8 bytes @ 0x0
  3844  0020                     	ds	1
  3845  0021                     fputs@i:	
  3846                           
  3847                           ; 2 bytes @ 0x1
  3848  0021                     	ds	1
  3849  0022                     crc16@data:	
  3850  0022                     _atoi$957:	
  3851                           ; 1 bytes @ 0x2
  3852                           
  3853                           
  3854                           ; 2 bytes @ 0x2
  3855  0022                     	ds	1
  3856  0023                     crc16@c:	
  3857  0023                     fputs@s:	
  3858                           ; 1 bytes @ 0x3
  3859                           
  3860  0023                     stoa@nuls:	
  3861                           ; 1 bytes @ 0x3
  3862                           
  3863                           
  3864                           ; 7 bytes @ 0x3
  3865  0023                     	ds	1
  3866  0024                     ?_pad:	
  3867  0024                     GPS_HasAcknowledged@ackByte:	
  3868                           ; 2 bytes @ 0x4
  3869                           
  3870  0024                     pad@buf:	
  3871                           ; 1 bytes @ 0x4
  3872                           
  3873  0024                     crc16@crc:	
  3874                           ; 1 bytes @ 0x4
  3875                           
  3876  0024                     _atoi$959:	
  3877                           ; 2 bytes @ 0x4
  3878                           
  3879                           
  3880                           ; 2 bytes @ 0x4
  3881  0024                     	ds	1
  3882  0025                     pad@p:	
  3883  0025                     GPS_HasAcknowledged@ackPacket:	
  3884                           ; 2 bytes @ 0x5
  3885                           
  3886                           
  3887                           ; 10 bytes @ 0x5
  3888  0025                     	ds	1
  3889  0026                     _atoi$958:	
  3890  0026                     crc16@str:	
  3891                           ; 1 bytes @ 0x6
  3892                           
  3893                           
  3894                           ; 2 bytes @ 0x6
  3895  0026                     	ds	1
  3896  0027                     ??_pad:	
  3897  0027                     atoi@n:	
  3898                           ; 1 bytes @ 0x7
  3899                           
  3900                           
  3901                           ; 2 bytes @ 0x7
  3902  0027                     	ds	1
  3903  0028                     crc16@string:	
  3904  0028                     pad@i:	
  3905                           ; 1 bytes @ 0x8
  3906                           
  3907  0028                     ___aodiv@dividend:	
  3908                           ; 2 bytes @ 0x8
  3909                           
  3910  0028                     ___aomod@dividend:	
  3911                           ; 8 bytes @ 0x8
  3912                           
  3913                           
  3914                           ; 8 bytes @ 0x8
  3915  0028                     	ds	1
  3916  0029                     crc16@i:	
  3917                           
  3918                           ; 2 bytes @ 0x9
  3919  0029                     	ds	1
  3920  002A                     pad@w:	
  3921  002A                     stoa@i:	
  3922                           ; 2 bytes @ 0xA
  3923                           
  3924                           
  3925                           ; 2 bytes @ 0xA
  3926  002A                     	ds	2
  3927  002C                     pad@fp:	
  3928  002C                     stoa@w:	
  3929                           ; 1 bytes @ 0xC
  3930                           
  3931                           
  3932                           ; 2 bytes @ 0xC
  3933  002C                     	ds	1
  3934  002D                     ?_xtoa:	
  3935  002D                     xtoa@d:	
  3936                           ; 2 bytes @ 0xD
  3937                           
  3938                           
  3939                           ; 8 bytes @ 0xD
  3940  002D                     	ds	1
  3941  002E                     stoa@fp:	
  3942                           
  3943                           ; 1 bytes @ 0xE
  3944  002E                     	ds	1
  3945  002F                     GPS_HasAcknowledged@data:	
  3946  002F                     stoa@cp:	
  3947                           ; 1 bytes @ 0xF
  3948                           
  3949                           
  3950                           ; 2 bytes @ 0xF
  3951  002F                     	ds	1
  3952  0030                     ?_dtoa:	
  3953  0030                     GPS_HasAcknowledged@ackByteID:	
  3954                           ; 2 bytes @ 0x10
  3955                           
  3956  0030                     dtoa@d:	
  3957                           ; 1 bytes @ 0x10
  3958                           
  3959                           
  3960                           ; 8 bytes @ 0x10
  3961  0030                     	ds	1
  3962  0031                     GPS_HasAcknowledged@i:	
  3963  0031                     stoa@p:	
  3964                           ; 1 bytes @ 0x11
  3965                           
  3966                           
  3967                           ; 2 bytes @ 0x11
  3968  0031                     	ds	2
  3969  0033                     stoa@l:	
  3970                           
  3971                           ; 2 bytes @ 0x13
  3972  0033                     	ds	2
  3973  0035                     xtoa@x:	
  3974                           
  3975                           ; 1 bytes @ 0x15
  3976  0035                     	ds	1
  3977  0036                     ??_xtoa:	
  3978                           
  3979                           ; 1 bytes @ 0x16
  3980  0036                     	ds	2
  3981  0038                     ??_dtoa:	
  3982                           
  3983                           ; 1 bytes @ 0x18
  3984  0038                     	ds	3
  3985  003B                     dtoa@fp:	
  3986                           
  3987                           ; 1 bytes @ 0x1B
  3988  003B                     	ds	1
  3989  003C                     _dtoa$623:	
  3990                           
  3991                           ; 2 bytes @ 0x1C
  3992  003C                     	ds	2
  3993  003E                     xtoa@fp:	
  3994  003E                     dtoa@p:	
  3995                           ; 1 bytes @ 0x1E
  3996                           
  3997                           
  3998                           ; 2 bytes @ 0x1E
  3999  003E                     	ds	1
  4000  003F                     _xtoa$645:	
  4001                           
  4002                           ; 2 bytes @ 0x1F
  4003  003F                     	ds	1
  4004  0040                     dtoa@w:	
  4005                           
  4006                           ; 2 bytes @ 0x20
  4007  0040                     	ds	1
  4008  0041                     _xtoa$646:	
  4009                           
  4010                           ; 2 bytes @ 0x21
  4011  0041                     	ds	1
  4012  0042                     dtoa@s:	
  4013                           
  4014                           ; 2 bytes @ 0x22
  4015  0042                     	ds	1
  4016  0043                     xtoa@p:	
  4017                           
  4018                           ; 2 bytes @ 0x23
  4019  0043                     	ds	1
  4020  0044                     dtoa@n:	
  4021                           
  4022                           ; 8 bytes @ 0x24
  4023  0044                     	ds	1
  4024  0045                     xtoa@w:	
  4025                           
  4026                           ; 2 bytes @ 0x25
  4027  0045                     	ds	2
  4028  0047                     xtoa@n:	
  4029                           
  4030                           ; 8 bytes @ 0x27
  4031  0047                     	ds	5
  4032  004C                     dtoa@i:	
  4033                           
  4034                           ; 2 bytes @ 0x2C
  4035  004C                     	ds	3
  4036  004F                     xtoa@i:	
  4037                           
  4038                           ; 2 bytes @ 0x2F
  4039  004F                     	ds	2
  4040  0051                     xtoa@c:	
  4041                           
  4042                           ; 2 bytes @ 0x31
  4043  0051                     	ds	2
  4044  0053                     ?_vfpfcnvrt:	
  4045  0053                     vfpfcnvrt@fmt:	
  4046                           ; 2 bytes @ 0x33
  4047                           
  4048                           
  4049                           ; 1 bytes @ 0x33
  4050  0053                     	ds	1
  4051  0054                     vfpfcnvrt@ap:	
  4052                           
  4053                           ; 1 bytes @ 0x34
  4054  0054                     	ds	1
  4055  0055                     ??_vfpfcnvrt:	
  4056                           
  4057                           ; 1 bytes @ 0x35
  4058  0055                     	ds	6
  4059  005B                     ?_vfprintf:	
  4060  005B                     vfprintf@fmt:	
  4061                           ; 2 bytes @ 0x3B
  4062                           
  4063                           
  4064                           ; 2 bytes @ 0x3B
  4065  005B                     	ds	2
  4066  005D                     vfprintf@ap:	
  4067                           
  4068                           ; 1 bytes @ 0x3D
  4069  005D                     	ds	1
  4070  005E                     ??_vfprintf:	
  4071                           
  4072                           ; 1 bytes @ 0x3E
  4073  005E                     	ds	2
  4074  0060                     vfprintf@fp:	
  4075                           
  4076                           ; 1 bytes @ 0x40
  4077  0060                     	ds	1
  4078  0061                     vfprintf@cfmt:	
  4079                           
  4080                           ; 2 bytes @ 0x41
  4081  0061                     	ds	2
  4082  0063                     ??_sprintf:	
  4083  0063                     ?_printf:	
  4084                           ; 1 bytes @ 0x43
  4085                           
  4086  0063                     printf@fmt:	
  4087                           ; 2 bytes @ 0x43
  4088                           
  4089                           
  4090                           ; 2 bytes @ 0x43
  4091  0063                     	ds	2
  4092  0065                     ??_printf:	
  4093                           
  4094                           ; 1 bytes @ 0x45
  4095  0065                     	ds	1
  4096  0066                     sprintf@ap:	
  4097                           
  4098                           ; 1 bytes @ 0x46
  4099  0066                     	ds	1
  4100  0067                     sprintf@f:	
  4101                           
  4102                           ; 6 bytes @ 0x47
  4103  0067                     	ds	1
  4104  0068                     printf@ap:	
  4105                           
  4106                           ; 1 bytes @ 0x48
  4107  0068                     	ds	1
  4108  0069                     ??_SetupGPS:	
  4109  0069                     ??_GetNavData:	
  4110                           ; 1 bytes @ 0x49
  4111                           
  4112                           
  4113                           ; 1 bytes @ 0x49
  4114  0069                     	ds	4
  4115                           
  4116                           	psect	maintext
  4117  0750                     __pmaintext:	
  4118 ;;
  4119 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  4120 ;;
  4121 ;; *************** function _main *****************
  4122 ;; Defined at:
  4123 ;;		line 456 in file "main.c"
  4124 ;; Parameters:    Size  Location     Type
  4125 ;;		None
  4126 ;; Auto vars:     Size  Location     Type
  4127 ;;  i               2   44[BANK1 ] int 
  4128 ;;  id              2   42[BANK1 ] int 
  4129 ;; Return value:  Size  Location     Type
  4130 ;;                  1    wreg      void 
  4131 ;; Registers used:
  4132 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4133 ;; Tracked objects:
  4134 ;;		On entry : B1F/0
  4135 ;;		On exit  : 0/0
  4136 ;;		Unchanged: 0/0
  4137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4139 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  4140 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4141 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  4142 ;;Total ram usage:        5 bytes
  4143 ;; Hardware stack levels required when called:   13
  4144 ;; This function calls:
  4145 ;;		_FlashError
  4146 ;;		_GetNavData
  4147 ;;		_SYSTEM_Initialize
  4148 ;;		_SetupGPS
  4149 ;;		_TMR0_SetInterruptHandler
  4150 ;;		_TransmitString
  4151 ;;		_crc16
  4152 ;;		_sprintf
  4153 ;;		_strcat
  4154 ;; This function is called by:
  4155 ;;		Startup code after reset
  4156 ;; This function uses a non-reentrant model
  4157 ;;
  4158                           
  4159                           
  4160                           ;psect for function _main
  4161  0750                     _main:	
  4162                           
  4163                           ;main.c: 458:     SYSTEM_Initialize();
  4164                           
  4165                           ;incstack = 0
  4166                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4167  0750  3187  27F4  3187   	fcall	_SYSTEM_Initialize
  4168                           
  4169                           ;main.c: 459:     (INTCONbits.GIE = 1);
  4170  0753  178B               	bsf	11,7	;volatile
  4171                           
  4172                           ;main.c: 460:     TMR0_SetInterruptHandler(TimerISR);
  4173  0754  3089               	movlw	low _TimerISR
  4174  0755  00F0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  4175  0756  3008               	movlw	high _TimerISR
  4176  0757  00F1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  4177  0758  3188  205F  3187   	fcall	_TMR0_SetInterruptHandler
  4178                           
  4179                           ;main.c: 462:     SetupGPS();
  4180  075B  318C  246C  3187   	fcall	_SetupGPS
  4181                           
  4182                           ;main.c: 464:     int id = 0;
  4183  075E  0021               	movlb	1	; select bank1
  4184  075F  01CA               	clrf	main@id^(0+128)
  4185  0760  01CB               	clrf	(main@id+1)^(0+128)
  4186  0761                     l3778:	
  4187                           
  4188                           ;main.c: 466:     {;main.c: 467:         if (GetNavData())
  4189  0761  3185  2549  3187   	fcall	_GetNavData
  4190  0764  3A00               	xorlw	0
  4191  0765  1903               	skipnz
  4192  0766  2FD5               	goto	l3792
  4193                           
  4194                           ;main.c: 468:         {;main.c: 470:             sprintf(messages[0], "$$TEST,%d,%s,%s,%
      +                          s,",
  4195  0767  0021               	movlb	1	; select bank1
  4196  0768  0869               	movf	_messages^(0+128),w
  4197  0769  00B8               	movwf	sprintf@s^(0+128)
  4198  076A  3002               	movlw	2
  4199  076B  00B9               	movwf	(sprintf@s+1)^(0+128)
  4200  076C  309C               	movlw	low (STR_8| (0+32768))
  4201  076D  00BA               	movwf	sprintf@fmt^(0+128)
  4202  076E  3090               	movlw	high (STR_8| (0+32768))
  4203  076F  00BB               	movwf	(sprintf@fmt^(0+128)+1)
  4204  0770  084B               	movf	(main@id+1)^(0+128),w
  4205  0771  00BD               	movwf	((?_sprintf+1)^(0+128)+4)
  4206  0772  084A               	movf	main@id^(0+128),w
  4207  0773  00BC               	movwf	(?_sprintf^(0+128)+4)
  4208  0774  304C               	movlw	low _gps_time
  4209  0775  00BE               	movwf	(low ((?_sprintf| 0+6)))^(0+128)
  4210  0776  3001               	movlw	high _gps_time
  4211  0777  00BF               	movwf	((low ((?_sprintf| 0+6))+1))^(0+128)
  4212  0778  3030               	movlw	low _gps_latitude
  4213  0779  00C0               	movwf	(low ((?_sprintf| 0+8)))^(0+128)
  4214  077A  3001               	movlw	high _gps_latitude
  4215  077B  00C1               	movwf	((low ((?_sprintf| 0+8))+1))^(0+128)
  4216  077C  3020               	movlw	low _gps_longitude
  4217  077D  00C2               	movwf	(low ((?_sprintf| 0+10)))^(0+128)
  4218  077E  3001               	movlw	high _gps_longitude
  4219  077F  00C3               	movwf	((low ((?_sprintf| 0+10))+1))^(0+128)
  4220  0780  318B  2344  3187   	fcall	_sprintf
  4221                           
  4222                           ;main.c: 474:             sprintf(messages[1], "%s,%s,%s,%s",
  4223  0783  0021               	movlb	1	; select bank1
  4224  0784  086A               	movf	(low ((_messages| 0+1)))^(0+128),w
  4225  0785  00B8               	movwf	sprintf@s^(0+128)
  4226  0786  3002               	movlw	2
  4227  0787  00B9               	movwf	(sprintf@s+1)^(0+128)
  4228  0788  30BE               	movlw	low (STR_9| (0+32768))
  4229  0789  00BA               	movwf	sprintf@fmt^(0+128)
  4230  078A  3090               	movlw	high (STR_9| (0+32768))
  4231  078B  00BB               	movwf	(sprintf@fmt^(0+128)+1)
  4232  078C  3040               	movlw	low _gps_altitude
  4233  078D  00BC               	movwf	(low ((?_sprintf| 0+4)))^(0+128)
  4234  078E  3001               	movlw	high _gps_altitude
  4235  078F  00BD               	movwf	((low ((?_sprintf| 0+4))+1))^(0+128)
  4236  0790  3066               	movlw	low _gps_speed_over_ground
  4237  0791  00BE               	movwf	(low ((?_sprintf| 0+6)))^(0+128)
  4238  0792  3001               	movlw	high _gps_speed_over_ground
  4239  0793  00BF               	movwf	((low ((?_sprintf| 0+6))+1))^(0+128)
  4240  0794  305E               	movlw	low _gps_course_over_ground
  4241  0795  00C0               	movwf	(low ((?_sprintf| 0+8)))^(0+128)
  4242  0796  3001               	movlw	high _gps_course_over_ground
  4243  0797  00C1               	movwf	((low ((?_sprintf| 0+8))+1))^(0+128)
  4244  0798  3056               	movlw	low _gps_vertical_velocity
  4245  0799  00C2               	movwf	(low ((?_sprintf| 0+10)))^(0+128)
  4246  079A  3001               	movlw	high _gps_vertical_velocity
  4247  079B  00C3               	movwf	((low ((?_sprintf| 0+10))+1))^(0+128)
  4248  079C  318B  2344  3187   	fcall	_sprintf
  4249                           
  4250                           ;main.c: 479:             sprintf(checksum, "*%04X\n", crc16(messages, 2));
  4251  079F  30DC               	movlw	low _checksum
  4252  07A0  0021               	movlb	1	; select bank1
  4253  07A1  00B8               	movwf	sprintf@s^(0+128)
  4254  07A2  3000               	movlw	high _checksum
  4255  07A3  00B9               	movwf	(sprintf@s+1)^(0+128)
  4256  07A4  30CA               	movlw	low (STR_10| (0+32768))
  4257  07A5  00BA               	movwf	sprintf@fmt^(0+128)
  4258  07A6  3090               	movlw	high (STR_10| (0+32768))
  4259  07A7  00BB               	movwf	(sprintf@fmt^(0+128)+1)
  4260  07A8  3002               	movlw	2
  4261  07A9  00F8               	movwf	crc16@segments
  4262  07AA  3000               	movlw	0
  4263  07AB  00F9               	movwf	crc16@segments+1
  4264  07AC  30E9               	movlw	(low (_messages| 0))& (0+255)
  4265  07AD  318C  24BE  3187   	fcall	_crc16
  4266  07B0  0879               	movf	?_crc16+1,w
  4267  07B1  0021               	movlb	1	; select bank1
  4268  07B2  00BD               	movwf	((?_sprintf+1)^(0+128)+4)
  4269  07B3  0878               	movf	?_crc16,w
  4270  07B4  00BC               	movwf	(?_sprintf^(0+128)+4)
  4271  07B5  318B  2344  3187   	fcall	_sprintf
  4272                           
  4273                           ;main.c: 480:             strcat(messages[1], checksum);
  4274  07B8  30DC               	movlw	(low (_checksum| 0))& (0+255)
  4275  07B9  0021               	movlb	1	; select bank1
  4276  07BA  00C9               	movwf	??_main^(0+128)
  4277  07BB  0849               	movf	??_main^(0+128),w
  4278  07BC  00F9               	movwf	strcat@src
  4279  07BD  086A               	movf	(low ((_messages| 0+1)))^(0+128),w
  4280  07BE  3188  20DB  3187   	fcall	_strcat
  4281                           
  4282                           ;main.c: 481:             id++;
  4283  07C1  3001               	movlw	1
  4284  07C2  0021               	movlb	1	; select bank1
  4285  07C3  07CA               	addwf	main@id^(0+128),f
  4286  07C4  3000               	movlw	0
  4287  07C5  3DCB               	addwfc	(main@id+1)^(0+128),f
  4288  07C6  0022               	movlb	2	; select bank2
  4289  07C7  150C               	bsf	12,2	;volatile
  4290                           
  4291                           ;main.c: 484:             TransmitString(messages[0]);
  4292  07C8  0021               	movlb	1	; select bank1
  4293  07C9  0869               	movf	_messages^(0+128),w
  4294  07CA  318A  2295  3187   	fcall	_TransmitString
  4295                           
  4296                           ;main.c: 485:             TransmitString(messages[1]);
  4297  07CD  0021               	movlb	1	; select bank1
  4298  07CE  086A               	movf	(low ((_messages| 0+1)))^(0+128),w
  4299  07CF  318A  2295  3187   	fcall	_TransmitString
  4300  07D2  0022               	movlb	2	; select bank2
  4301  07D3  110C               	bcf	12,2	;volatile
  4302  07D4  2FD8               	goto	l3794
  4303  07D5                     l3792:	
  4304                           
  4305                           ;main.c: 489:         {;main.c: 491:             FlashError();
  4306  07D5  318A  22BF  3187   	fcall	_FlashError
  4307  07D8                     l3794:	
  4308                           
  4309                           ;main.c: 494:         for (int i = 0; i < DELAY_MULT; i++)
  4310  07D8  0021               	movlb	1	; select bank1
  4311  07D9  01CC               	clrf	main@i^(0+128)
  4312  07DA  01CD               	clrf	(main@i+1)^(0+128)
  4313  07DB                     l3800:	
  4314                           
  4315                           ;main.c: 495:         {;main.c: 496:             _delay((unsigned long)((MESSAGE_INTERVA
      +                          L)*(4000000/4000.0)));
  4316  07DB  3007               	movlw	7
  4317  07DC  0021               	movlb	1	; select bank1
  4318  07DD  00C9               	movwf	??_main^(0+128)
  4319  07DE  307D               	movlw	125
  4320  07DF                     u3817:	
  4321  07DF  0B89               	decfsz	9,f
  4322  07E0  2FDF               	goto	u3817
  4323  07E1  0BC9               	decfsz	??_main^(0+128),f
  4324  07E2  2FDF               	goto	u3817
  4325                           
  4326                           ;main.c: 497:         }
  4327  07E3  3001               	movlw	1
  4328  07E4  0021               	movlb	1	; select bank1
  4329  07E5  07CC               	addwf	main@i^(0+128),f
  4330  07E6  3000               	movlw	0
  4331  07E7  3DCD               	addwfc	(main@i+1)^(0+128),f
  4332  07E8  084D               	movf	(main@i+1)^(0+128),w
  4333  07E9  3A80               	xorlw	128
  4334  07EA  00C9               	movwf	??_main^(0+128)
  4335  07EB  3083               	movlw	131
  4336  07EC  0249               	subwf	??_main^(0+128),w
  4337  07ED  1D03               	skipz
  4338  07EE  2FF1               	goto	u3805
  4339  07EF  30E8               	movlw	232
  4340  07F0  024C               	subwf	main@i^(0+128),w
  4341  07F1                     u3805:	
  4342  07F1  1803               	btfsc	3,0
  4343  07F2  2F61               	goto	l3778
  4344  07F3  2FDB               	goto	l3800
  4345  07F4                     __end_of_main:	
  4346                           
  4347                           	psect	text1
  4348  08DB                     __ptext1:	
  4349 ;; *************** function _strcat *****************
  4350 ;; Defined at:
  4351 ;;		line 3 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\strcat.c"
  4352 ;; Parameters:    Size  Location     Type
  4353 ;;  dest            1    wreg     PTR unsigned char 
  4354 ;;		 -> message_end(73), message_start(70), 
  4355 ;;  src             1    9[COMMON] PTR const unsigned char 
  4356 ;;		 -> checksum(6), 
  4357 ;; Auto vars:     Size  Location     Type
  4358 ;;  dest            1   13[COMMON] PTR unsigned char 
  4359 ;;		 -> message_end(73), message_start(70), 
  4360 ;; Return value:  Size  Location     Type
  4361 ;;                  1    wreg      PTR unsigned char 
  4362 ;; Registers used:
  4363 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4364 ;; Tracked objects:
  4365 ;;		On entry : 0/0
  4366 ;;		On exit  : 0/0
  4367 ;;		Unchanged: 0/0
  4368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4369 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4370 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4371 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4372 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4373 ;;Total ram usage:        5 bytes
  4374 ;; Hardware stack levels used:    1
  4375 ;; Hardware stack levels required when called:    4
  4376 ;; This function calls:
  4377 ;;		_strcpy
  4378 ;;		_strlen
  4379 ;; This function is called by:
  4380 ;;		_main
  4381 ;; This function uses a non-reentrant model
  4382 ;;
  4383                           
  4384                           
  4385                           ;psect for function _strcat
  4386  08DB                     _strcat:	
  4387                           
  4388                           ;incstack = 0
  4389                           ; Regs used in _strcat: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4390                           ;strcat@dest stored from wreg
  4391  08DB  00FD               	movwf	strcat@dest
  4392  08DC  0879               	movf	strcat@src,w
  4393  08DD  00FA               	movwf	??_strcat
  4394  08DE  087A               	movf	??_strcat,w
  4395  08DF  00F4               	movwf	strcpy@src
  4396  08E0  087D               	movf	strcat@dest,w
  4397  08E1  00F0               	movwf	strlen@s
  4398  08E2  3002               	movlw	2
  4399  08E3  00F1               	movwf	strlen@s+1
  4400  08E4  3189  2134  3188   	fcall	_strlen
  4401  08E7  0870               	movf	?_strlen,w
  4402  08E8  00FB               	movwf	??_strcat+1
  4403  08E9  0871               	movf	?_strlen+1,w
  4404  08EA  00FC               	movwf	??_strcat+2
  4405  08EB  087D               	movf	strcat@dest,w
  4406  08EC  077B               	addwf	??_strcat+1,w
  4407  08ED  3189  2191         	fcall	_strcpy
  4408  08EF  0008               	return
  4409  08F0                     __end_of_strcat:	
  4410                           
  4411                           	psect	text2
  4412  0991                     __ptext2:	
  4413 ;; *************** function _strcpy *****************
  4414 ;; Defined at:
  4415 ;;		line 7 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\strcpy.c"
  4416 ;; Parameters:    Size  Location     Type
  4417 ;;  dest            1    wreg     PTR unsigned char 
  4418 ;;		 -> message_end(73), message_start(70), 
  4419 ;;  src             1    4[COMMON] PTR const unsigned char 
  4420 ;;		 -> checksum(6), 
  4421 ;; Auto vars:     Size  Location     Type
  4422 ;;  dest            1    8[COMMON] PTR unsigned char 
  4423 ;;		 -> message_end(73), message_start(70), 
  4424 ;;  d               1    7[COMMON] PTR unsigned char 
  4425 ;;		 -> message_end(73), message_start(70), 
  4426 ;;  s               1    6[COMMON] PTR const unsigned char 
  4427 ;;		 -> checksum(6), 
  4428 ;; Return value:  Size  Location     Type
  4429 ;;                  1    wreg      PTR unsigned char 
  4430 ;; Registers used:
  4431 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  4432 ;; Tracked objects:
  4433 ;;		On entry : 0/0
  4434 ;;		On exit  : 0/0
  4435 ;;		Unchanged: 0/0
  4436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4437 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4438 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4439 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4440 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4441 ;;Total ram usage:        5 bytes
  4442 ;; Hardware stack levels used:    1
  4443 ;; Hardware stack levels required when called:    3
  4444 ;; This function calls:
  4445 ;;		Nothing
  4446 ;; This function is called by:
  4447 ;;		_strcat
  4448 ;; This function uses a non-reentrant model
  4449 ;;
  4450                           
  4451                           
  4452                           ;psect for function _strcpy
  4453  0991                     _strcpy:	
  4454                           
  4455                           ;incstack = 0
  4456                           ; Regs used in _strcpy: [wreg-fsr1h+status,2+status,0]
  4457                           ;strcpy@dest stored from wreg
  4458  0991  00F8               	movwf	strcpy@dest
  4459  0992  0874               	movf	strcpy@src,w
  4460  0993  00F5               	movwf	??_strcpy
  4461  0994  0875               	movf	??_strcpy,w
  4462  0995  00F6               	movwf	strcpy@s
  4463  0996  0878               	movf	strcpy@dest,w
  4464  0997  00F5               	movwf	??_strcpy
  4465  0998  0875               	movf	??_strcpy,w
  4466  0999  00F7               	movwf	strcpy@d
  4467  099A                     l3600:	
  4468  099A  0877               	movf	strcpy@d,w
  4469  099B  0086               	movwf	6
  4470  099C  3002               	movlw	2	; select bank4/5
  4471  099D  0087               	movwf	7
  4472  099E  0AF7               	incf	strcpy@d,f
  4473  099F  0876               	movf	strcpy@s,w
  4474  09A0  0084               	movwf	4
  4475  09A1  0185               	clrf	5
  4476  09A2  0AF6               	incf	strcpy@s,f
  4477  09A3  0800               	movf	0,w
  4478  09A4  3FC0               	movwi [0]fsr1
  4479  09A5  0889               	movf	9,f
  4480  09A6  1903               	btfsc	3,2
  4481  09A7  0008               	return
  4482  09A8  299A               	goto	l3600
  4483  09A9                     __end_of_strcpy:	
  4484                           
  4485                           	psect	text3
  4486  0B44                     __ptext3:	
  4487 ;; *************** function _sprintf *****************
  4488 ;; Defined at:
  4489 ;;		line 9 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\nf_sprintf.c"
  4490 ;; Parameters:    Size  Location     Type
  4491 ;;  s               2   24[BANK1 ] PTR unsigned char 
  4492 ;;		 -> checksum(6), message_end(73), message_start(70), 
  4493 ;;  fmt             2   26[BANK1 ] PTR const unsigned char 
  4494 ;;		 -> STR_10(7), STR_9(12), STR_8(20), 
  4495 ;; Auto vars:     Size  Location     Type
  4496 ;;  f               6   71[BANK0 ] struct _IO_FILE
  4497 ;;  ret             2    0        int 
  4498 ;;  ap              1   70[BANK0 ] PTR void [1]
  4499 ;;		 -> ?_printf(2), ?_sprintf(2), 
  4500 ;; Return value:  Size  Location     Type
  4501 ;;                  2   24[BANK1 ] int 
  4502 ;; Registers used:
  4503 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4504 ;; Tracked objects:
  4505 ;;		On entry : 0/0
  4506 ;;		On exit  : 0/0
  4507 ;;		Unchanged: 0/0
  4508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4509 ;;      Params:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
  4510 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4511 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4512 ;;      Totals:         0      10      12       0       0       0       0       0       0       0       0       0       
      +0       0
  4513 ;;Total ram usage:       22 bytes
  4514 ;; Hardware stack levels used:    1
  4515 ;; Hardware stack levels required when called:   11
  4516 ;; This function calls:
  4517 ;;		_vfprintf
  4518 ;; This function is called by:
  4519 ;;		_main
  4520 ;; This function uses a non-reentrant model
  4521 ;;
  4522                           
  4523                           
  4524                           ;psect for function _sprintf
  4525  0B44                     _sprintf:	
  4526                           
  4527                           ;incstack = 0
  4528                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4529  0B44  30BC               	movlw	(low ((?_sprintf| 0+4)))& (0+255)
  4530  0B45  0020               	movlb	0	; select bank0
  4531  0B46  00E3               	movwf	??_sprintf
  4532  0B47  0863               	movf	??_sprintf,w
  4533  0B48  00E6               	movwf	sprintf@ap
  4534  0B49  0021               	movlb	1	; select bank1
  4535  0B4A  0839               	movf	(sprintf@s+1)^(0+128),w
  4536  0B4B  0020               	movlb	0	; select bank0
  4537  0B4C  00E8               	movwf	sprintf@f+1
  4538  0B4D  0021               	movlb	1	; select bank1
  4539  0B4E  0838               	movf	sprintf@s^(0+128),w
  4540  0B4F  0020               	movlb	0	; select bank0
  4541  0B50  00E7               	movwf	sprintf@f
  4542  0B51  01E9               	clrf	sprintf@f+2
  4543  0B52  01EA               	clrf	sprintf@f+3
  4544  0B53  01EB               	clrf	sprintf@f+4
  4545  0B54  01EC               	clrf	sprintf@f+5
  4546  0B55  0021               	movlb	1	; select bank1
  4547  0B56  083B               	movf	(sprintf@fmt+1)^(0+128),w
  4548  0B57  0020               	movlb	0	; select bank0
  4549  0B58  00DC               	movwf	vfprintf@fmt+1
  4550  0B59  0021               	movlb	1	; select bank1
  4551  0B5A  083A               	movf	sprintf@fmt^(0+128),w
  4552  0B5B  0020               	movlb	0	; select bank0
  4553  0B5C  00DB               	movwf	vfprintf@fmt
  4554  0B5D  3066               	movlw	(low (sprintf@ap| 0))& (0+255)
  4555  0B5E  00E3               	movwf	??_sprintf
  4556  0B5F  0863               	movf	??_sprintf,w
  4557  0B60  00DD               	movwf	vfprintf@ap
  4558  0B61  3067               	movlw	(low (sprintf@f| 0))& (0+255)
  4559  0B62  318B  2371         	fcall	_vfprintf
  4560  0B64  3002               	movlw	2
  4561  0B65  3E67               	addlw	(low (sprintf@f| 0))& (0+255)
  4562  0B66  0086               	movwf	6
  4563  0B67  0187               	clrf	7
  4564  0B68  3F40               	moviw [0]fsr1
  4565  0B69  0021               	movlb	1	; select bank1
  4566  0B6A  0738               	addwf	sprintf@s^(0+128),w
  4567  0B6B  0084               	movwf	4
  4568  0B6C  3F41               	moviw [1]fsr1
  4569  0B6D  3D39               	addwfc	(sprintf@s+1)^(0+128),w
  4570  0B6E  0085               	movwf	5
  4571  0B6F  0180               	clrf	0
  4572  0B70  0008               	return
  4573  0B71                     __end_of_sprintf:	
  4574                           
  4575                           	psect	text4
  4576  0CBE                     __ptext4:	
  4577 ;; *************** function _crc16 *****************
  4578 ;; Defined at:
  4579 ;;		line 83 in file "main.c"
  4580 ;; Parameters:    Size  Location     Type
  4581 ;;  data            1    wreg     PTR PTR unsigned char 
  4582 ;;		 -> messages(2), 
  4583 ;;  segments        2    8[COMMON] int 
  4584 ;; Auto vars:     Size  Location     Type
  4585 ;;  data            1    2[BANK0 ] PTR PTR unsigned char 
  4586 ;;		 -> messages(2), 
  4587 ;;  len             2    0[BANK0 ] unsigned int 
  4588 ;;  string          1    8[BANK0 ] PTR unsigned char 
  4589 ;;		 -> message_end(73), message_start(70), 
  4590 ;;  str             2    6[BANK0 ] int 
  4591 ;;  i               2    9[BANK0 ] unsigned int 
  4592 ;;  crc             2    4[BANK0 ] unsigned short 
  4593 ;;  c               1    3[BANK0 ] unsigned char 
  4594 ;; Return value:  Size  Location     Type
  4595 ;;                  2    8[COMMON] unsigned short 
  4596 ;; Registers used:
  4597 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4598 ;; Tracked objects:
  4599 ;;		On entry : 0/0
  4600 ;;		On exit  : 0/0
  4601 ;;		Unchanged: 0/0
  4602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4603 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4604 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4605 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4606 ;;      Totals:         4      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4607 ;;Total ram usage:       15 bytes
  4608 ;; Hardware stack levels used:    1
  4609 ;; Hardware stack levels required when called:    4
  4610 ;; This function calls:
  4611 ;;		_crc_append_byte
  4612 ;;		_strlen
  4613 ;; This function is called by:
  4614 ;;		_main
  4615 ;; This function uses a non-reentrant model
  4616 ;;
  4617                           
  4618                           
  4619                           ;psect for function _crc16
  4620  0CBE                     _crc16:	
  4621                           
  4622                           ;incstack = 0
  4623                           ; Regs used in _crc16: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4624                           ;crc16@data stored from wreg
  4625  0CBE  0020               	movlb	0	; select bank0
  4626  0CBF  00A2               	movwf	crc16@data
  4627                           
  4628                           ;main.c: 83: unsigned short crc16(char** data, int segments);main.c: 84: {;main.c: 85:  
      +                             size_t i;;main.c: 86:  uint16_t crc;;main.c: 87:  uint8_t c;;main.c: 89:  crc = 0xFFF
      +                          F;
  4629  0CC0  30FF               	movlw	255
  4630  0CC1  00A4               	movwf	crc16@crc
  4631  0CC2  30FF               	movlw	255
  4632  0CC3  00A5               	movwf	crc16@crc+1
  4633                           
  4634                           ;main.c: 91:     for (int str = 0; str < segments; str++)
  4635  0CC4  01A6               	clrf	crc16@str
  4636  0CC5  01A7               	clrf	crc16@str+1
  4637  0CC6                     l230:	
  4638  0CC6  0827               	movf	crc16@str+1,w
  4639  0CC7  3A80               	xorlw	128
  4640  0CC8  00FA               	movwf	??_crc16
  4641  0CC9  0879               	movf	crc16@segments+1,w
  4642  0CCA  3A80               	xorlw	128
  4643  0CCB  027A               	subwf	??_crc16,w
  4644  0CCC  1D03               	skipz
  4645  0CCD  2CD0               	goto	u3685
  4646  0CCE  0878               	movf	crc16@segments,w
  4647  0CCF  0226               	subwf	crc16@str,w
  4648  0CD0                     u3685:	
  4649  0CD0  1803               	btfsc	3,0
  4650  0CD1  2D28               	goto	l3626
  4651                           
  4652                           ;main.c: 92:     {;main.c: 93:         char* string = data[str];
  4653  0CD2  0020               	movlb	0	; select bank0
  4654  0CD3  0826               	movf	crc16@str,w
  4655  0CD4  0722               	addwf	crc16@data,w
  4656  0CD5  00FA               	movwf	??_crc16
  4657  0CD6  087A               	movf	??_crc16,w
  4658  0CD7  0086               	movwf	6
  4659  0CD8  0187               	clrf	7
  4660  0CD9  0801               	movf	1,w
  4661  0CDA  00FB               	movwf	??_crc16+1
  4662  0CDB  087B               	movf	??_crc16+1,w
  4663  0CDC  00A8               	movwf	crc16@string
  4664                           
  4665                           ;main.c: 94:         size_t len = strlen(string);
  4666  0CDD  0828               	movf	crc16@string,w
  4667  0CDE  00F0               	movwf	strlen@s
  4668  0CDF  3002               	movlw	2
  4669  0CE0  00F1               	movwf	strlen@s+1
  4670  0CE1  3189  2134  318C   	fcall	_strlen
  4671  0CE4  0871               	movf	?_strlen+1,w
  4672  0CE5  0020               	movlb	0	; select bank0
  4673  0CE6  00A1               	movwf	crc16@len+1
  4674  0CE7  0870               	movf	?_strlen,w
  4675  0CE8  00A0               	movwf	crc16@len
  4676                           
  4677                           ;main.c: 96:         for (i = (string[i] == '$' ? 2 : 0); i < len; i++)
  4678  0CE9  0829               	movf	crc16@i,w
  4679  0CEA  0728               	addwf	crc16@string,w
  4680  0CEB  00FA               	movwf	??_crc16
  4681  0CEC  087A               	movf	??_crc16,w
  4682  0CED  0086               	movwf	6
  4683  0CEE  3002               	movlw	2	; select bank4/5
  4684  0CEF  0087               	movwf	7
  4685  0CF0  3024               	movlw	36
  4686  0CF1  0601               	xorwf	1,w
  4687  0CF2  1903               	btfsc	3,2
  4688  0CF3  2CF7               	goto	l3614
  4689  0CF4  01A9               	clrf	crc16@i
  4690  0CF5  01AA               	clrf	crc16@i+1
  4691  0CF6  2CFB               	goto	l3622
  4692  0CF7                     l3614:	
  4693  0CF7  3002               	movlw	2
  4694  0CF8  00A9               	movwf	crc16@i
  4695  0CF9  3000               	movlw	0
  4696  0CFA  00AA               	movwf	crc16@i+1
  4697  0CFB                     l3622:	
  4698  0CFB  0821               	movf	crc16@len+1,w
  4699  0CFC  022A               	subwf	crc16@i+1,w
  4700  0CFD  1D03               	skipz
  4701  0CFE  2D01               	goto	u3675
  4702  0CFF  0820               	movf	crc16@len,w
  4703  0D00  0229               	subwf	crc16@i,w
  4704  0D01                     u3675:	
  4705  0D01  1803               	btfsc	3,0
  4706  0D02  2D23               	goto	l3624
  4707                           
  4708                           ;main.c: 97:         {;main.c: 98:             c = string[i];
  4709  0D03  0829               	movf	crc16@i,w
  4710  0D04  0728               	addwf	crc16@string,w
  4711  0D05  00FA               	movwf	??_crc16
  4712  0D06  087A               	movf	??_crc16,w
  4713  0D07  0086               	movwf	6
  4714  0D08  3002               	movlw	2	; select bank4/5
  4715  0D09  0087               	movwf	7
  4716  0D0A  0801               	movf	1,w
  4717  0D0B  00FB               	movwf	??_crc16+1
  4718  0D0C  087B               	movf	??_crc16+1,w
  4719  0D0D  00A3               	movwf	crc16@c
  4720                           
  4721                           ;main.c: 99:             crc = crc_append_byte(crc, c);
  4722  0D0E  0825               	movf	crc16@crc+1,w
  4723  0D0F  00F1               	movwf	crc_append_byte@crc+1
  4724  0D10  0824               	movf	crc16@crc,w
  4725  0D11  00F0               	movwf	crc_append_byte@crc
  4726  0D12  0823               	movf	crc16@c,w
  4727  0D13  00FA               	movwf	??_crc16
  4728  0D14  087A               	movf	??_crc16,w
  4729  0D15  00F2               	movwf	crc_append_byte@data
  4730  0D16  318B  23A0  318C   	fcall	_crc_append_byte
  4731  0D19  0871               	movf	?_crc_append_byte+1,w
  4732  0D1A  0020               	movlb	0	; select bank0
  4733  0D1B  00A5               	movwf	crc16@crc+1
  4734  0D1C  0870               	movf	?_crc_append_byte,w
  4735  0D1D  00A4               	movwf	crc16@crc
  4736                           
  4737                           ;main.c: 100:         }
  4738  0D1E  3001               	movlw	1
  4739  0D1F  07A9               	addwf	crc16@i,f
  4740  0D20  3000               	movlw	0
  4741  0D21  3DAA               	addwfc	crc16@i+1,f
  4742  0D22  2CFB               	goto	l3622
  4743  0D23                     l3624:	
  4744                           
  4745                           ;main.c: 101:     }
  4746  0D23  3001               	movlw	1
  4747  0D24  07A6               	addwf	crc16@str,f
  4748  0D25  3000               	movlw	0
  4749  0D26  3DA7               	addwfc	crc16@str+1,f
  4750  0D27  2CC6               	goto	l230
  4751  0D28                     l3626:	
  4752                           
  4753                           ;main.c: 102:  return crc;
  4754  0D28  0020               	movlb	0	; select bank0
  4755  0D29  0825               	movf	crc16@crc+1,w
  4756  0D2A  00F9               	movwf	?_crc16+1
  4757  0D2B  0824               	movf	crc16@crc,w
  4758  0D2C  00F8               	movwf	?_crc16
  4759  0D2D  0008               	return
  4760  0D2E                     __end_of_crc16:	
  4761                           
  4762                           	psect	text5
  4763  0BA0                     __ptext5:	
  4764 ;; *************** function _crc_append_byte *****************
  4765 ;; Defined at:
  4766 ;;		line 63 in file "main.c"
  4767 ;; Parameters:    Size  Location     Type
  4768 ;;  crc             2    0[COMMON] unsigned short 
  4769 ;;  data            1    2[COMMON] unsigned char 
  4770 ;; Auto vars:     Size  Location     Type
  4771 ;;  i               2    6[COMMON] int 
  4772 ;; Return value:  Size  Location     Type
  4773 ;;                  2    0[COMMON] unsigned short 
  4774 ;; Registers used:
  4775 ;;		wreg, status,2, status,0
  4776 ;; Tracked objects:
  4777 ;;		On entry : 0/0
  4778 ;;		On exit  : 0/0
  4779 ;;		Unchanged: 0/0
  4780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4781 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4782 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4783 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4784 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4785 ;;Total ram usage:        8 bytes
  4786 ;; Hardware stack levels used:    1
  4787 ;; Hardware stack levels required when called:    3
  4788 ;; This function calls:
  4789 ;;		Nothing
  4790 ;; This function is called by:
  4791 ;;		_crc16
  4792 ;; This function uses a non-reentrant model
  4793 ;;
  4794                           
  4795                           
  4796                           ;psect for function _crc_append_byte
  4797  0BA0                     _crc_append_byte:	
  4798                           
  4799                           ;main.c: 63: unsigned short crc_append_byte(uint16_t crc, uint8_t data);main.c: 64: {;ma
      +                          in.c: 65:     int i;;main.c: 66:     crc = crc ^ ((uint16_t)data << 8);
  4800                           
  4801                           ;incstack = 0
  4802                           ; Regs used in _crc_append_byte: [wreg+status,2+status,0]
  4803  0BA0  0872               	movf	crc_append_byte@data,w
  4804  0BA1  00F3               	movwf	??_crc_append_byte
  4805  0BA2  01F4               	clrf	??_crc_append_byte+1
  4806  0BA3  0873               	movf	??_crc_append_byte,w
  4807  0BA4  00F4               	movwf	??_crc_append_byte+1
  4808  0BA5  01F3               	clrf	??_crc_append_byte
  4809  0BA6  0870               	movf	crc_append_byte@crc,w
  4810  0BA7  0673               	xorwf	??_crc_append_byte,w
  4811  0BA8  00F0               	movwf	crc_append_byte@crc
  4812  0BA9  0871               	movf	crc_append_byte@crc+1,w
  4813  0BAA  0674               	xorwf	??_crc_append_byte+1,w
  4814  0BAB  00F1               	movwf	crc_append_byte@crc+1
  4815                           
  4816                           ;main.c: 67:     for (i = 0; i < 8; i++)
  4817  0BAC  01F6               	clrf	crc_append_byte@i
  4818  0BAD  01F7               	clrf	crc_append_byte@i+1
  4819  0BAE                     l223:	
  4820                           
  4821                           ;main.c: 68:     {;main.c: 69:         if (crc & 0x8000)
  4822  0BAE  1FF1               	btfss	crc_append_byte@crc+1,7
  4823  0BAF  2BBD               	goto	l2848
  4824                           
  4825                           ;main.c: 70:         {;main.c: 71:             crc = (crc << 1) ^ 0x1021;
  4826  0BB0  0871               	movf	crc_append_byte@crc+1,w
  4827  0BB1  00F4               	movwf	??_crc_append_byte+1
  4828  0BB2  0870               	movf	crc_append_byte@crc,w
  4829  0BB3  00F3               	movwf	??_crc_append_byte
  4830  0BB4  35F3               	lslf	??_crc_append_byte,f
  4831  0BB5  0DF4               	rlf	??_crc_append_byte+1,f
  4832  0BB6  3021               	movlw	33
  4833  0BB7  0673               	xorwf	??_crc_append_byte,w
  4834  0BB8  00F0               	movwf	crc_append_byte@crc
  4835  0BB9  3010               	movlw	16
  4836  0BBA  0674               	xorwf	??_crc_append_byte+1,w
  4837  0BBB  00F1               	movwf	crc_append_byte@crc+1
  4838                           
  4839                           ;main.c: 72:         }
  4840  0BBC  2BC2               	goto	l226
  4841  0BBD                     l2848:	
  4842                           
  4843                           ;main.c: 74:         {;main.c: 75:             crc <<= 1;
  4844  0BBD  3001               	movlw	1
  4845  0BBE                     u2715:	
  4846  0BBE  35F0               	lslf	crc_append_byte@crc,f
  4847  0BBF  0DF1               	rlf	crc_append_byte@crc+1,f
  4848  0BC0  0B89               	decfsz	9,f
  4849  0BC1  2BBE               	goto	u2715
  4850  0BC2                     l226:	
  4851                           ;main.c: 76:         }
  4852                           
  4853                           
  4854                           ;main.c: 77:     }
  4855  0BC2  3001               	movlw	1
  4856  0BC3  07F6               	addwf	crc_append_byte@i,f
  4857  0BC4  3000               	movlw	0
  4858  0BC5  3DF7               	addwfc	crc_append_byte@i+1,f
  4859  0BC6  0877               	movf	crc_append_byte@i+1,w
  4860  0BC7  3A80               	xorlw	128
  4861  0BC8  00F3               	movwf	??_crc_append_byte
  4862  0BC9  3080               	movlw	128
  4863  0BCA  0273               	subwf	??_crc_append_byte,w
  4864  0BCB  3008               	movlw	8
  4865  0BCC  1903               	btfsc	3,2
  4866  0BCD  0276               	subwf	crc_append_byte@i,w
  4867  0BCE  1803               	btfsc	3,0
  4868  0BCF  0008               	return
  4869  0BD0  2BAE               	goto	l223
  4870  0BD1                     __end_of_crc_append_byte:	
  4871                           ;main.c: 79:     return crc;
  4872                           
  4873                           
  4874                           	psect	text6
  4875  0A95                     __ptext6:	
  4876 ;; *************** function _TransmitString *****************
  4877 ;; Defined at:
  4878 ;;		line 141 in file "main.c"
  4879 ;; Parameters:    Size  Location     Type
  4880 ;;  message         1    wreg     PTR unsigned char 
  4881 ;;		 -> message_end(73), message_start(70), 
  4882 ;; Auto vars:     Size  Location     Type
  4883 ;;  message         1   11[COMMON] PTR unsigned char 
  4884 ;;		 -> message_end(73), message_start(70), 
  4885 ;;  i               2    9[COMMON] int 
  4886 ;;  counti          2    7[COMMON] int 
  4887 ;; Return value:  Size  Location     Type
  4888 ;;                  1    wreg      void 
  4889 ;; Registers used:
  4890 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4891 ;; Tracked objects:
  4892 ;;		On entry : 0/0
  4893 ;;		On exit  : 0/0
  4894 ;;		Unchanged: 0/0
  4895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4897 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4898 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4899 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4900 ;;Total ram usage:        6 bytes
  4901 ;; Hardware stack levels used:    1
  4902 ;; Hardware stack levels required when called:    5
  4903 ;; This function calls:
  4904 ;;		_TransmitByte
  4905 ;;		_strlen
  4906 ;; This function is called by:
  4907 ;;		_main
  4908 ;; This function uses a non-reentrant model
  4909 ;;
  4910                           
  4911                           
  4912                           ;psect for function _TransmitString
  4913  0A95                     _TransmitString:	
  4914                           
  4915                           ;incstack = 0
  4916                           ; Regs used in _TransmitString: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4917                           ;TransmitString@message stored from wreg
  4918  0A95  00FB               	movwf	TransmitString@message
  4919                           
  4920                           ;main.c: 141: void TransmitString(char* message);main.c: 142: {;main.c: 146:  for (int i
      +                           = 0, counti = strlen(message); i < counti; i++)
  4921  0A96  01F9               	clrf	TransmitString@i
  4922  0A97  01FA               	clrf	TransmitString@i+1
  4923  0A98  087B               	movf	TransmitString@message,w
  4924  0A99  00F0               	movwf	strlen@s
  4925  0A9A  3002               	movlw	2
  4926  0A9B  00F1               	movwf	strlen@s+1
  4927  0A9C  3189  2134  318A   	fcall	_strlen
  4928  0A9F  0871               	movf	?_strlen+1,w
  4929  0AA0  00F8               	movwf	TransmitString@counti+1
  4930  0AA1  0870               	movf	?_strlen,w
  4931  0AA2  00F7               	movwf	TransmitString@counti
  4932  0AA3                     l3638:	
  4933  0AA3  087A               	movf	TransmitString@i+1,w
  4934  0AA4  3A80               	xorlw	128
  4935  0AA5  00F6               	movwf	??_TransmitString
  4936  0AA6  0878               	movf	TransmitString@counti+1,w
  4937  0AA7  3A80               	xorlw	128
  4938  0AA8  0276               	subwf	??_TransmitString,w
  4939  0AA9  1D03               	skipz
  4940  0AAA  2AAD               	goto	u3695
  4941  0AAB  0877               	movf	TransmitString@counti,w
  4942  0AAC  0279               	subwf	TransmitString@i,w
  4943  0AAD                     u3695:	
  4944  0AAD  1803               	btfsc	3,0
  4945  0AAE  0008               	return
  4946                           
  4947                           ;main.c: 147:  {;main.c: 148:   TransmitByte(message[i]);
  4948  0AAF  0879               	movf	TransmitString@i,w
  4949  0AB0  077B               	addwf	TransmitString@message,w
  4950  0AB1  00F6               	movwf	??_TransmitString
  4951  0AB2  0876               	movf	??_TransmitString,w
  4952  0AB3  0086               	movwf	6
  4953  0AB4  3002               	movlw	2	; select bank4/5
  4954  0AB5  0087               	movwf	7
  4955  0AB6  0801               	movf	1,w
  4956  0AB7  318B  2317  318A   	fcall	_TransmitByte
  4957                           
  4958                           ;main.c: 149:  }
  4959  0ABA  3001               	movlw	1
  4960  0ABB  07F9               	addwf	TransmitString@i,f
  4961  0ABC  3000               	movlw	0
  4962  0ABD  3DFA               	addwfc	TransmitString@i+1,f
  4963  0ABE  2AA3               	goto	l3638
  4964  0ABF                     __end_of_TransmitString:	
  4965                           
  4966                           	psect	text7
  4967  0B17                     __ptext7:	
  4968 ;; *************** function _TransmitByte *****************
  4969 ;; Defined at:
  4970 ;;		line 119 in file "main.c"
  4971 ;; Parameters:    Size  Location     Type
  4972 ;;  byte            1    wreg     unsigned char 
  4973 ;; Auto vars:     Size  Location     Type
  4974 ;;  byte            1    3[COMMON] unsigned char 
  4975 ;;  i               2    4[COMMON] int 
  4976 ;; Return value:  Size  Location     Type
  4977 ;;                  1    wreg      void 
  4978 ;; Registers used:
  4979 ;;		wreg, status,2, status,0, pclath, cstack
  4980 ;; Tracked objects:
  4981 ;;		On entry : 0/0
  4982 ;;		On exit  : 0/0
  4983 ;;		Unchanged: 0/0
  4984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4986 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4987 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4988 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4989 ;;Total ram usage:        4 bytes
  4990 ;; Hardware stack levels used:    1
  4991 ;; Hardware stack levels required when called:    4
  4992 ;; This function calls:
  4993 ;;		_TransmitBit
  4994 ;; This function is called by:
  4995 ;;		_TransmitString
  4996 ;; This function uses a non-reentrant model
  4997 ;;
  4998                           
  4999                           
  5000                           ;psect for function _TransmitByte
  5001  0B17                     _TransmitByte:	
  5002                           
  5003                           ;incstack = 0
  5004                           ; Regs used in _TransmitByte: [wreg+status,2+status,0+pclath+cstack]
  5005                           ;TransmitByte@byte stored from wreg
  5006  0B17  00F3               	movwf	TransmitByte@byte
  5007                           
  5008                           ;main.c: 119: void TransmitByte(char byte);main.c: 120: {;main.c: 130:     TransmitBit(0
      +                          );
  5009  0B18  3000               	movlw	0
  5010  0B19  3189  2179  318B   	fcall	_TransmitBit
  5011                           
  5012                           ;main.c: 132:  for (int i = 0; i < 7; i++)
  5013  0B1C  01F4               	clrf	TransmitByte@i
  5014  0B1D  01F5               	clrf	TransmitByte@i+1
  5015  0B1E                     l2858:	
  5016                           
  5017                           ;main.c: 133:  {;main.c: 134:   TransmitBit((byte >> i) & 1);
  5018  0B1E  0873               	movf	TransmitByte@byte,w
  5019  0B1F  00F2               	movwf	??_TransmitByte
  5020  0B20  0A74               	incf	TransmitByte@i,w
  5021  0B21  2B23               	goto	u2734
  5022  0B22                     u2735:	
  5023  0B22  36F2               	lsrf	??_TransmitByte,f
  5024  0B23                     u2734:	
  5025  0B23  0B89               	decfsz	9,f
  5026  0B24  2B22               	goto	u2735
  5027  0B25  1C72               	btfss	??_TransmitByte,0
  5028  0B26  2B29               	goto	u2740
  5029  0B27  3001               	movlw	1
  5030  0B28  2B2A               	goto	u2750
  5031  0B29                     u2740:	
  5032  0B29  3000               	movlw	0
  5033  0B2A                     u2750:	
  5034  0B2A  3189  2179  318B   	fcall	_TransmitBit
  5035                           
  5036                           ;main.c: 135:  }
  5037  0B2D  3001               	movlw	1
  5038  0B2E  07F4               	addwf	TransmitByte@i,f
  5039  0B2F  3000               	movlw	0
  5040  0B30  3DF5               	addwfc	TransmitByte@i+1,f
  5041  0B31  0875               	movf	TransmitByte@i+1,w
  5042  0B32  3A80               	xorlw	128
  5043  0B33  00F2               	movwf	??_TransmitByte
  5044  0B34  3080               	movlw	128
  5045  0B35  0272               	subwf	??_TransmitByte,w
  5046  0B36  1D03               	skipz
  5047  0B37  2B3A               	goto	u2765
  5048  0B38  3007               	movlw	7
  5049  0B39  0274               	subwf	TransmitByte@i,w
  5050  0B3A                     u2765:	
  5051  0B3A  1C03               	skipc
  5052  0B3B  2B1E               	goto	l2858
  5053                           
  5054                           ;main.c: 137:  TransmitBit(1);
  5055  0B3C  3001               	movlw	1
  5056  0B3D  3189  2179  318B   	fcall	_TransmitBit
  5057                           
  5058                           ;main.c: 138:  TransmitBit(1);
  5059  0B40  3001               	movlw	1
  5060  0B41  3189  2179         	fcall	_TransmitBit
  5061  0B43  0008               	return
  5062  0B44                     __end_of_TransmitByte:	
  5063                           
  5064                           	psect	text8
  5065  0979                     __ptext8:	
  5066 ;; *************** function _TransmitBit *****************
  5067 ;; Defined at:
  5068 ;;		line 105 in file "main.c"
  5069 ;; Parameters:    Size  Location     Type
  5070 ;;  b               1    wreg     _Bool 
  5071 ;; Auto vars:     Size  Location     Type
  5072 ;;  b               1    1[COMMON] _Bool 
  5073 ;; Return value:  Size  Location     Type
  5074 ;;                  1    wreg      void 
  5075 ;; Registers used:
  5076 ;;		wreg, status,2, status,0
  5077 ;; Tracked objects:
  5078 ;;		On entry : 0/0
  5079 ;;		On exit  : 0/0
  5080 ;;		Unchanged: 0/0
  5081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5083 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5084 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5085 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5086 ;;Total ram usage:        2 bytes
  5087 ;; Hardware stack levels used:    1
  5088 ;; Hardware stack levels required when called:    3
  5089 ;; This function calls:
  5090 ;;		Nothing
  5091 ;; This function is called by:
  5092 ;;		_TransmitByte
  5093 ;; This function uses a non-reentrant model
  5094 ;;
  5095                           
  5096                           
  5097                           ;psect for function _TransmitBit
  5098  0979                     _TransmitBit:	
  5099                           
  5100                           ;incstack = 0
  5101                           ; Regs used in _TransmitBit: [wreg+status,2+status,0]
  5102                           ;TransmitBit@b stored from wreg
  5103  0979  00F1               	movwf	TransmitBit@b
  5104                           
  5105                           ;main.c: 105: void TransmitBit(_Bool b);main.c: 106: {;main.c: 107:  if (b)
  5106  097A  0871               	movf	TransmitBit@b,w
  5107  097B  1903               	btfsc	3,2
  5108  097C  2980               	goto	l247
  5109                           
  5110                           ;main.c: 108:  {;main.c: 109:   do { LATAbits.LATA4 = 1; } while(0);
  5111  097D  0022               	movlb	2	; select bank2
  5112  097E  160C               	bsf	12,4	;volatile
  5113  097F  2982               	goto	l2770
  5114  0980                     l247:	
  5115                           ;main.c: 112:  {;main.c: 113:   do { LATAbits.LATA4 = 0; } while(0);
  5116                           
  5117  0980  0022               	movlb	2	; select bank2
  5118  0981  120C               	bcf	12,4	;volatile
  5119  0982                     l2770:	
  5120                           
  5121                           ;main.c: 115:  _delay((unsigned long)((((1000 / BAUD_RATE) / 2) * 1000)*(4000000/4000000
      +                          .0)));
  5122  0982  300D               	movlw	13
  5123  0983  00F0               	movwf	??_TransmitBit
  5124  0984  30FC               	movlw	252
  5125  0985                     u3827:	
  5126  0985  0B89               	decfsz	9,f
  5127  0986  2985               	goto	u3827
  5128  0987  0BF0               	decfsz	??_TransmitBit,f
  5129  0988  2985               	goto	u3827
  5130                           
  5131                           ;main.c: 116:  _delay((unsigned long)((((1000 / BAUD_RATE) / 2) * 1000)*(4000000/4000000
      +                          .0)));
  5132  0989  300D               	movlw	13
  5133  098A  00F0               	movwf	??_TransmitBit
  5134  098B  30FC               	movlw	252
  5135  098C                     u3837:	
  5136  098C  0B89               	decfsz	9,f
  5137  098D  298C               	goto	u3837
  5138  098E  0BF0               	decfsz	??_TransmitBit,f
  5139  098F  298C               	goto	u3837
  5140  0990  0008               	return
  5141  0991                     __end_of_TransmitBit:	
  5142                           
  5143                           	psect	text9
  5144  0C6C                     __ptext9:	
  5145 ;; *************** function _SetupGPS *****************
  5146 ;; Defined at:
  5147 ;;		line 265 in file "main.c"
  5148 ;; Parameters:    Size  Location     Type
  5149 ;;		None
  5150 ;; Auto vars:     Size  Location     Type
  5151 ;;		None
  5152 ;; Return value:  Size  Location     Type
  5153 ;;                  1    wreg      void 
  5154 ;; Registers used:
  5155 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5156 ;; Tracked objects:
  5157 ;;		On entry : 0/0
  5158 ;;		On exit  : 0/0
  5159 ;;		Unchanged: 0/0
  5160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5161 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5162 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5163 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5164 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5165 ;;Total ram usage:        2 bytes
  5166 ;; Hardware stack levels used:    1
  5167 ;; Hardware stack levels required when called:   12
  5168 ;; This function calls:
  5169 ;;		_GPS_HasAcknowledged
  5170 ;;		_GPS_SendUBX
  5171 ;;		_printf
  5172 ;; This function is called by:
  5173 ;;		_main
  5174 ;; This function uses a non-reentrant model
  5175 ;;
  5176                           
  5177                           
  5178                           ;psect for function _SetupGPS
  5179  0C6C                     _SetupGPS:	
  5180  0C6C                     l3650:	
  5181                           ;main.c: 267:     while (!gps_configured)
  5182                           
  5183                           ;incstack = 0
  5184                           ; Regs used in _SetupGPS: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5185                           
  5186                           
  5187                           ;main.c: 267:     while (!gps_configured)
  5188  0C6C  0020               	movlb	0	; select bank0
  5189  0C6D  086F               	movf	_gps_configured,w
  5190  0C6E  1D03               	btfss	3,2
  5191  0C6F  2C8E               	goto	l3652
  5192                           
  5193                           ;main.c: 268:     {;main.c: 269:         do { LATAbits.LATA5 = 0; } while(0);
  5194  0C70  0022               	movlb	2	; select bank2
  5195  0C71  128C               	bcf	12,5	;volatile
  5196                           
  5197                           ;main.c: 270:         GPS_SendUBX(setNavFlightMode);
  5198  0C72  30A0               	movlw	(low (_setNavFlightMode| (0+256)))& (0+255)
  5199  0C73  318A  2244  318C   	fcall	_GPS_SendUBX
  5200                           
  5201                           ;main.c: 271:         gps_configured = GPS_HasAcknowledged(setNavFlightMode);
  5202  0C76  30A0               	movlw	(low (_setNavFlightMode| (0+256)))& (0+255)
  5203  0C77  318D  252E  318C   	fcall	_GPS_HasAcknowledged
  5204  0C7A  0020               	movlb	0	; select bank0
  5205  0C7B  00E9               	movwf	??_SetupGPS
  5206  0C7C  0869               	movf	??_SetupGPS,w
  5207  0C7D  00EF               	movwf	_gps_configured
  5208  0C7E  0022               	movlb	2	; select bank2
  5209  0C7F  168C               	bsf	12,5	;volatile
  5210                           
  5211                           ;main.c: 274:         _delay((unsigned long)((500)*(4000000/4000.0)));
  5212  0C80  3003               	movlw	3
  5213  0C81  0020               	movlb	0	; select bank0
  5214  0C82  00EA               	movwf	??_SetupGPS+1
  5215  0C83  308A               	movlw	138
  5216  0C84  00E9               	movwf	??_SetupGPS
  5217  0C85  3055               	movlw	85
  5218  0C86                     u3847:	
  5219  0C86  0B89               	decfsz	9,f
  5220  0C87  2C86               	goto	u3847
  5221  0C88  0BE9               	decfsz	??_SetupGPS,f
  5222  0C89  2C86               	goto	u3847
  5223  0C8A  0BEA               	decfsz	??_SetupGPS+1,f
  5224  0C8B  2C86               	goto	u3847
  5225  0C8C  3200               	nop2
  5226  0C8D  2C6C               	goto	l3650
  5227  0C8E                     l3652:	
  5228                           
  5229                           ;main.c: 276:     gps_configured = 0;
  5230  0C8E  01EF               	clrf	_gps_configured
  5231                           
  5232                           ;main.c: 279:     printf("$PUBX,40,GLL,0,0,0,0*5C\r\n");
  5233  0C8F  304E               	movlw	low (STR_1| (0+32768))
  5234  0C90  00E3               	movwf	printf@fmt
  5235  0C91  3090               	movlw	high (STR_1| (0+32768))
  5236  0C92  00E4               	movwf	printf@fmt+1
  5237  0C93  3188  20B8  318C   	fcall	_printf
  5238                           
  5239                           ;main.c: 280:     printf("$PUBX,40,ZDA,0,0,0,0*44\r\n");
  5240  0C96  3000               	movlw	low (STR_2| (0+32768))
  5241  0C97  0020               	movlb	0	; select bank0
  5242  0C98  00E3               	movwf	printf@fmt
  5243  0C99  3090               	movlw	high (STR_2| (0+32768))
  5244  0C9A  00E4               	movwf	printf@fmt+1
  5245  0C9B  3188  20B8  318C   	fcall	_printf
  5246                           
  5247                           ;main.c: 281:     printf("$PUBX,40,VTG,0,0,0,0*5E\r\n");
  5248  0C9E  3082               	movlw	low (STR_3| (0+32768))
  5249  0C9F  0020               	movlb	0	; select bank0
  5250  0CA0  00E3               	movwf	printf@fmt
  5251  0CA1  3090               	movlw	high (STR_3| (0+32768))
  5252  0CA2  00E4               	movwf	printf@fmt+1
  5253  0CA3  3188  20B8  318C   	fcall	_printf
  5254                           
  5255                           ;main.c: 282:     printf("$PUBX,40,GSV,0,0,0,0*59\r\n");
  5256  0CA6  3034               	movlw	low (STR_4| (0+32768))
  5257  0CA7  0020               	movlb	0	; select bank0
  5258  0CA8  00E3               	movwf	printf@fmt
  5259  0CA9  3090               	movlw	high (STR_4| (0+32768))
  5260  0CAA  00E4               	movwf	printf@fmt+1
  5261  0CAB  3188  20B8  318C   	fcall	_printf
  5262                           
  5263                           ;main.c: 283:     printf("$PUBX,40,GSA,0,0,0,0*4E\r\n");
  5264  0CAE  3068               	movlw	low (STR_5| (0+32768))
  5265  0CAF  0020               	movlb	0	; select bank0
  5266  0CB0  00E3               	movwf	printf@fmt
  5267  0CB1  3090               	movlw	high (STR_5| (0+32768))
  5268  0CB2  00E4               	movwf	printf@fmt+1
  5269  0CB3  3188  20B8  318C   	fcall	_printf
  5270                           
  5271                           ;main.c: 284:     printf("$PUBX,40,RMC,0,0,0,0*47\r\n");
  5272  0CB6  301A               	movlw	low (STR_6| (0+32768))
  5273  0CB7  0020               	movlb	0	; select bank0
  5274  0CB8  00E3               	movwf	printf@fmt
  5275  0CB9  3090               	movlw	high (STR_6| (0+32768))
  5276  0CBA  00E4               	movwf	printf@fmt+1
  5277  0CBB  3188  20B8         	fcall	_printf
  5278  0CBD  0008               	return
  5279  0CBE                     __end_of_SetupGPS:	
  5280                           
  5281                           	psect	text10
  5282  0A44                     __ptext10:	
  5283 ;; *************** function _GPS_SendUBX *****************
  5284 ;; Defined at:
  5285 ;;		line 185 in file "main.c"
  5286 ;; Parameters:    Size  Location     Type
  5287 ;;  data            1    wreg     PTR unsigned char 
  5288 ;;		 -> setNavFlightMode(44), 
  5289 ;; Auto vars:     Size  Location     Type
  5290 ;;  data            1    9[COMMON] PTR unsigned char 
  5291 ;;		 -> setNavFlightMode(44), 
  5292 ;;  i               2    7[COMMON] int 
  5293 ;;  length          2    5[COMMON] int 
  5294 ;; Return value:  Size  Location     Type
  5295 ;;                  1    wreg      void 
  5296 ;; Registers used:
  5297 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5298 ;; Tracked objects:
  5299 ;;		On entry : 0/0
  5300 ;;		On exit  : 0/0
  5301 ;;		Unchanged: 0/0
  5302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5303 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5304 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5305 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5306 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5307 ;;Total ram usage:        6 bytes
  5308 ;; Hardware stack levels used:    1
  5309 ;; Hardware stack levels required when called:    4
  5310 ;; This function calls:
  5311 ;;		_EUSART_Write
  5312 ;;		_GetLengthUBX
  5313 ;; This function is called by:
  5314 ;;		_SetupGPS
  5315 ;; This function uses a non-reentrant model
  5316 ;;
  5317                           
  5318                           
  5319                           ;psect for function _GPS_SendUBX
  5320  0A44                     _GPS_SendUBX:	
  5321                           
  5322                           ;incstack = 0
  5323                           ; Regs used in _GPS_SendUBX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5324                           ;GPS_SendUBX@data stored from wreg
  5325  0A44  00F9               	movwf	GPS_SendUBX@data
  5326                           
  5327                           ;main.c: 185: void GPS_SendUBX(uint8_t* data);main.c: 186: {;main.c: 187:     for (int i
      +                           = 0, length = GetLengthUBX(data); i < length; i++)
  5328  0A45  01F7               	clrf	GPS_SendUBX@i
  5329  0A46  01F8               	clrf	GPS_SendUBX@i+1
  5330  0A47  0879               	movf	GPS_SendUBX@data,w
  5331  0A48  3188  20C9  318A   	fcall	_GetLengthUBX
  5332  0A4B  0871               	movf	?_GetLengthUBX+1,w
  5333  0A4C  00F6               	movwf	GPS_SendUBX@length+1
  5334  0A4D  0870               	movf	?_GetLengthUBX,w
  5335  0A4E  00F5               	movwf	GPS_SendUBX@length
  5336  0A4F                     l2874:	
  5337  0A4F  0878               	movf	GPS_SendUBX@i+1,w
  5338  0A50  3A80               	xorlw	128
  5339  0A51  00F4               	movwf	??_GPS_SendUBX
  5340  0A52  0876               	movf	GPS_SendUBX@length+1,w
  5341  0A53  3A80               	xorlw	128
  5342  0A54  0274               	subwf	??_GPS_SendUBX,w
  5343  0A55  1D03               	skipz
  5344  0A56  2A59               	goto	u2775
  5345  0A57  0875               	movf	GPS_SendUBX@length,w
  5346  0A58  0277               	subwf	GPS_SendUBX@i,w
  5347  0A59                     u2775:	
  5348  0A59  1803               	btfsc	3,0
  5349  0A5A  0008               	return
  5350                           
  5351                           ;main.c: 188:     {;main.c: 189:         EUSART_Write(data[i]);
  5352  0A5B  0877               	movf	GPS_SendUBX@i,w
  5353  0A5C  0779               	addwf	GPS_SendUBX@data,w
  5354  0A5D  00F4               	movwf	??_GPS_SendUBX
  5355  0A5E  0874               	movf	??_GPS_SendUBX,w
  5356  0A5F  0086               	movwf	6
  5357  0A60  3001               	movlw	1	; select bank2/3
  5358  0A61  0087               	movwf	7
  5359  0A62  0801               	movf	1,w
  5360  0A63  3188  2078  318A   	fcall	_EUSART_Write
  5361                           
  5362                           ;main.c: 190:     }
  5363  0A66  3001               	movlw	1
  5364  0A67  07F7               	addwf	GPS_SendUBX@i,f
  5365  0A68  3000               	movlw	0
  5366  0A69  3DF8               	addwfc	GPS_SendUBX@i+1,f
  5367  0A6A  2A4F               	goto	l2874
  5368  0A6B                     __end_of_GPS_SendUBX:	
  5369                           
  5370                           	psect	text11
  5371  08C9                     __ptext11:	
  5372 ;; *************** function _GetLengthUBX *****************
  5373 ;; Defined at:
  5374 ;;		line 179 in file "main.c"
  5375 ;; Parameters:    Size  Location     Type
  5376 ;;  data            1    wreg     PTR unsigned char 
  5377 ;;		 -> setNavFlightMode(44), 
  5378 ;; Auto vars:     Size  Location     Type
  5379 ;;  data            1    3[COMMON] PTR unsigned char 
  5380 ;;		 -> setNavFlightMode(44), 
  5381 ;; Return value:  Size  Location     Type
  5382 ;;                  2    0[COMMON] unsigned int 
  5383 ;; Registers used:
  5384 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  5385 ;; Tracked objects:
  5386 ;;		On entry : 0/0
  5387 ;;		On exit  : 0/0
  5388 ;;		Unchanged: 0/0
  5389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5390 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5391 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5393 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5394 ;;Total ram usage:        4 bytes
  5395 ;; Hardware stack levels used:    1
  5396 ;; Hardware stack levels required when called:    3
  5397 ;; This function calls:
  5398 ;;		Nothing
  5399 ;; This function is called by:
  5400 ;;		_GPS_SendUBX
  5401 ;; This function uses a non-reentrant model
  5402 ;;
  5403                           
  5404                           
  5405                           ;psect for function _GetLengthUBX
  5406  08C9                     _GetLengthUBX:	
  5407                           
  5408                           ;incstack = 0
  5409                           ; Regs used in _GetLengthUBX: [wreg-fsr1h+status,2+status,0]
  5410                           ;GetLengthUBX@data stored from wreg
  5411  08C9  00F3               	movwf	GetLengthUBX@data
  5412                           
  5413                           ;main.c: 179: size_t GetLengthUBX(uint8_t* data);main.c: 180: {;main.c: 181:     return 
      +                          (short)(8 + (short)((short)data[4] + (short)(data[5] << 8)));
  5414  08CA  0873               	movf	GetLengthUBX@data,w
  5415  08CB  3E05               	addlw	5
  5416  08CC  0086               	movwf	6
  5417  08CD  3001               	movlw	1	; select bank2/3
  5418  08CE  0087               	movwf	7
  5419  08CF  0873               	movf	GetLengthUBX@data,w
  5420  08D0  3E04               	addlw	4
  5421  08D1  0084               	movwf	4
  5422  08D2  3001               	movlw	1	; select bank2/3
  5423  08D3  0085               	movwf	5
  5424  08D4  0800               	movf	0,w
  5425  08D5  3E08               	addlw	8
  5426  08D6  00F0               	movwf	?_GetLengthUBX
  5427  08D7  3000               	movlw	0
  5428  08D8  3D01               	addwfc	1,w
  5429  08D9  00F1               	movwf	?_GetLengthUBX+1
  5430  08DA  0008               	return
  5431  08DB                     __end_of_GetLengthUBX:	
  5432                           
  5433                           	psect	text12
  5434  0D2E                     __ptext12:	
  5435 ;; *************** function _GPS_HasAcknowledged *****************
  5436 ;; Defined at:
  5437 ;;		line 197 in file "main.c"
  5438 ;; Parameters:    Size  Location     Type
  5439 ;;  data            1    wreg     PTR unsigned char 
  5440 ;;		 -> setNavFlightMode(44), 
  5441 ;; Auto vars:     Size  Location     Type
  5442 ;;  data            1   15[BANK0 ] PTR unsigned char 
  5443 ;;		 -> setNavFlightMode(44), 
  5444 ;;  i               1   17[BANK0 ] unsigned char 
  5445 ;;  ackPacket      10    5[BANK0 ] unsigned char [10]
  5446 ;;  startTime       4    0[BANK0 ] unsigned long 
  5447 ;;  ackByteID       1   16[BANK0 ] unsigned char 
  5448 ;;  ackByte         1    4[BANK0 ] unsigned char 
  5449 ;; Return value:  Size  Location     Type
  5450 ;;                  1    wreg      _Bool 
  5451 ;; Registers used:
  5452 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5453 ;; Tracked objects:
  5454 ;;		On entry : 0/0
  5455 ;;		On exit  : 0/0
  5456 ;;		Unchanged: 0/0
  5457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5459 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5460 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5461 ;;      Totals:         4      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5462 ;;Total ram usage:       22 bytes
  5463 ;; Hardware stack levels used:    1
  5464 ;; Hardware stack levels required when called:    4
  5465 ;; This function calls:
  5466 ;;		_EUSART_Read
  5467 ;;		_EUSART_is_rx_ready
  5468 ;; This function is called by:
  5469 ;;		_SetupGPS
  5470 ;; This function uses a non-reentrant model
  5471 ;;
  5472                           
  5473                           
  5474                           ;psect for function _GPS_HasAcknowledged
  5475  0D2E                     _GPS_HasAcknowledged:	
  5476                           
  5477                           ;incstack = 0
  5478                           ; Regs used in _GPS_HasAcknowledged: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5479                           ;GPS_HasAcknowledged@data stored from wreg
  5480  0D2E  0020               	movlb	0	; select bank0
  5481  0D2F  00AF               	movwf	GPS_HasAcknowledged@data
  5482                           
  5483                           ;main.c: 197: _Bool GPS_HasAcknowledged(uint8_t* data);main.c: 198: {;main.c: 199:     u
      +                          int8_t ackPacket[10];;main.c: 200:     unsigned long startTime = ticks;
  5484  0D30  0021               	movlb	1	; select bank1
  5485  0D31  0855               	movf	(_ticks+3)^(0+128),w
  5486  0D32  0020               	movlb	0	; select bank0
  5487  0D33  00A3               	movwf	GPS_HasAcknowledged@startTime+3
  5488  0D34  0021               	movlb	1	; select bank1
  5489  0D35  0854               	movf	(_ticks+2)^(0+128),w
  5490  0D36  0020               	movlb	0	; select bank0
  5491  0D37  00A2               	movwf	GPS_HasAcknowledged@startTime+2
  5492  0D38  0021               	movlb	1	; select bank1
  5493  0D39  0853               	movf	(_ticks+1)^(0+128),w
  5494  0D3A  0020               	movlb	0	; select bank0
  5495  0D3B  00A1               	movwf	GPS_HasAcknowledged@startTime+1
  5496  0D3C  0021               	movlb	1	; select bank1
  5497  0D3D  0852               	movf	_ticks^(0+128),w
  5498  0D3E  0020               	movlb	0	; select bank0
  5499  0D3F  00A0               	movwf	GPS_HasAcknowledged@startTime
  5500                           
  5501                           ;main.c: 203:     ackPacket[0] = 0xB5;
  5502  0D40  30B5               	movlw	181
  5503  0D41  00F0               	movwf	??_GPS_HasAcknowledged
  5504  0D42  0870               	movf	??_GPS_HasAcknowledged,w
  5505  0D43  00A5               	movwf	GPS_HasAcknowledged@ackPacket
  5506                           
  5507                           ;main.c: 204:     ackPacket[1] = 0x62;
  5508  0D44  3062               	movlw	98
  5509  0D45  00F0               	movwf	??_GPS_HasAcknowledged
  5510  0D46  0870               	movf	??_GPS_HasAcknowledged,w
  5511  0D47  00A6               	movwf	GPS_HasAcknowledged@ackPacket+1
  5512                           
  5513                           ;main.c: 205:     ackPacket[2] = 0x05;
  5514  0D48  3005               	movlw	5
  5515  0D49  00F0               	movwf	??_GPS_HasAcknowledged
  5516  0D4A  0870               	movf	??_GPS_HasAcknowledged,w
  5517  0D4B  00A7               	movwf	GPS_HasAcknowledged@ackPacket+2
  5518                           
  5519                           ;main.c: 206:     ackPacket[3] = 0x01;
  5520  0D4C  01A8               	clrf	GPS_HasAcknowledged@ackPacket+3
  5521  0D4D  0AA8               	incf	GPS_HasAcknowledged@ackPacket+3,f
  5522                           
  5523                           ;main.c: 207:     ackPacket[4] = 0x02;
  5524  0D4E  3002               	movlw	2
  5525  0D4F  00F0               	movwf	??_GPS_HasAcknowledged
  5526  0D50  0870               	movf	??_GPS_HasAcknowledged,w
  5527  0D51  00A9               	movwf	GPS_HasAcknowledged@ackPacket+4
  5528                           
  5529                           ;main.c: 208:     ackPacket[5] = 0x00;
  5530  0D52  01AA               	clrf	GPS_HasAcknowledged@ackPacket+5
  5531                           
  5532                           ;main.c: 209:     ackPacket[6] = data[2];
  5533  0D53  082F               	movf	GPS_HasAcknowledged@data,w
  5534  0D54  0086               	movwf	6
  5535  0D55  3001               	movlw	1	; select bank2/3
  5536  0D56  0087               	movwf	7
  5537  0D57  3001               	movlw	1	; select bank2/3
  5538  0D58  3F42               	moviw [2]fsr1
  5539  0D59  00AB               	movwf	GPS_HasAcknowledged@ackPacket+6
  5540                           
  5541                           ;main.c: 210:     ackPacket[7] = data[3];
  5542  0D5A  082F               	movf	GPS_HasAcknowledged@data,w
  5543  0D5B  0086               	movwf	6
  5544  0D5C  3001               	movlw	1	; select bank2/3
  5545  0D5D  0087               	movwf	7
  5546  0D5E  3001               	movlw	1	; select bank2/3
  5547  0D5F  3F43               	moviw [3]fsr1
  5548  0D60  00AC               	movwf	GPS_HasAcknowledged@ackPacket+7
  5549                           
  5550                           ;main.c: 211:     ackPacket[8] = 0;
  5551  0D61  01AD               	clrf	GPS_HasAcknowledged@ackPacket+8
  5552                           
  5553                           ;main.c: 212:     ackPacket[9] = 0;
  5554  0D62  01AE               	clrf	GPS_HasAcknowledged@ackPacket+9
  5555                           
  5556                           ;main.c: 215:     for (uint8_t i = 2; i < 8; i++)
  5557  0D63  3002               	movlw	2
  5558  0D64  00F0               	movwf	??_GPS_HasAcknowledged
  5559  0D65  0870               	movf	??_GPS_HasAcknowledged,w
  5560  0D66  00B1               	movwf	GPS_HasAcknowledged@i
  5561  0D67                     l2896:	
  5562                           
  5563                           ;main.c: 216:     {;main.c: 217:         ackPacket[8] = ackPacket[8] + ackPacket[i];
  5564  0D67  0831               	movf	GPS_HasAcknowledged@i,w
  5565  0D68  3E25               	addlw	(low (GPS_HasAcknowledged@ackPacket| 0))& (0+255)
  5566  0D69  0086               	movwf	6
  5567  0D6A  0187               	clrf	7
  5568  0D6B  082D               	movf	GPS_HasAcknowledged@ackPacket+8,w
  5569  0D6C  0701               	addwf	1,w
  5570  0D6D  00F0               	movwf	??_GPS_HasAcknowledged
  5571  0D6E  0870               	movf	??_GPS_HasAcknowledged,w
  5572  0D6F  00AD               	movwf	GPS_HasAcknowledged@ackPacket+8
  5573                           
  5574                           ;main.c: 218:         ackPacket[9] = ackPacket[9] + ackPacket[8];
  5575  0D70  082E               	movf	GPS_HasAcknowledged@ackPacket+9,w
  5576  0D71  072D               	addwf	GPS_HasAcknowledged@ackPacket+8,w
  5577  0D72  00F0               	movwf	??_GPS_HasAcknowledged
  5578  0D73  0870               	movf	??_GPS_HasAcknowledged,w
  5579  0D74  00AE               	movwf	GPS_HasAcknowledged@ackPacket+9
  5580                           
  5581                           ;main.c: 219:     }
  5582  0D75  3001               	movlw	1
  5583  0D76  00F0               	movwf	??_GPS_HasAcknowledged
  5584  0D77  0870               	movf	??_GPS_HasAcknowledged,w
  5585  0D78  07B1               	addwf	GPS_HasAcknowledged@i,f
  5586  0D79  3008               	movlw	8
  5587  0D7A  0231               	subwf	GPS_HasAcknowledged@i,w
  5588  0D7B  1C03               	skipc
  5589  0D7C  2D67               	goto	l2896
  5590  0D7D                     l2904:	
  5591                           
  5592                           ;main.c: 222:     uint8_t ackByte;;main.c: 225:     uint8_t ackByteID = 0;
  5593  0D7D  01B0               	clrf	GPS_HasAcknowledged@ackByteID
  5594  0D7E                     l2906:	
  5595                           
  5596                           ;main.c: 229:     {;main.c: 232:         if (ackByteID > 9)
  5597  0D7E  300A               	movlw	10
  5598  0D7F  0020               	movlb	0	; select bank0
  5599  0D80  0230               	subwf	GPS_HasAcknowledged@ackByteID,w
  5600  0D81  1C03               	skipc
  5601  0D82  2D85               	goto	l2912
  5602                           
  5603                           ;main.c: 233:         {;main.c: 236:             return 1;
  5604  0D83  3001               	movlw	1
  5605  0D84  0008               	return
  5606  0D85                     l2912:	
  5607                           
  5608                           ;main.c: 240:         if (ticks - startTime > 3000)
  5609  0D85  0820               	movf	GPS_HasAcknowledged@startTime,w
  5610  0D86  0021               	movlb	1	; select bank1
  5611  0D87  0252               	subwf	_ticks^(0+128),w
  5612  0D88  00F0               	movwf	??_GPS_HasAcknowledged
  5613  0D89  0020               	movlb	0	; select bank0
  5614  0D8A  0821               	movf	GPS_HasAcknowledged@startTime+1,w
  5615  0D8B  0021               	movlb	1	; select bank1
  5616  0D8C  3B53               	subwfb	(_ticks+1)^(0+128),w
  5617  0D8D  00F1               	movwf	??_GPS_HasAcknowledged+1
  5618  0D8E  0020               	movlb	0	; select bank0
  5619  0D8F  0822               	movf	GPS_HasAcknowledged@startTime+2,w
  5620  0D90  0021               	movlb	1	; select bank1
  5621  0D91  3B54               	subwfb	(_ticks+2)^(0+128),w
  5622  0D92  00F2               	movwf	??_GPS_HasAcknowledged+2
  5623  0D93  0020               	movlb	0	; select bank0
  5624  0D94  0823               	movf	GPS_HasAcknowledged@startTime+3,w
  5625  0D95  0021               	movlb	1	; select bank1
  5626  0D96  3B55               	subwfb	(_ticks+3)^(0+128),w
  5627  0D97  00F3               	movwf	??_GPS_HasAcknowledged+3
  5628  0D98  0873               	movf	??_GPS_HasAcknowledged+3,w
  5629  0D99  1D03               	btfss	3,2
  5630  0D9A  2DA4               	goto	l2914
  5631  0D9B  0872               	movf	??_GPS_HasAcknowledged+2,w
  5632  0D9C  1D03               	btfss	3,2
  5633  0D9D  2DA4               	goto	l2914
  5634  0D9E  30B9               	movlw	185
  5635  0D9F  0270               	subwf	??_GPS_HasAcknowledged,w
  5636  0DA0  300B               	movlw	11
  5637  0DA1  3B71               	subwfb	??_GPS_HasAcknowledged+1,w
  5638  0DA2  1C03               	btfss	3,0
  5639  0DA3  2DA6               	goto	l2918
  5640  0DA4                     l2914:	
  5641                           
  5642                           ;main.c: 241:         {;main.c: 242:             return 0;
  5643  0DA4  3000               	movlw	0
  5644  0DA5  0008               	return
  5645  0DA6                     l2918:	
  5646                           
  5647                           ;main.c: 246:         if (EUSART_is_rx_ready())
  5648  0DA6  3188  2055  318D   	fcall	_EUSART_is_rx_ready
  5649  0DA9  3A00               	xorlw	0
  5650  0DAA  1903               	skipnz
  5651  0DAB  2D7E               	goto	l2906
  5652                           
  5653                           ;main.c: 247:         {;main.c: 248:             ackByte = EUSART_Read();
  5654  0DAC  3188  2093  318D   	fcall	_EUSART_Read
  5655  0DAF  00F0               	movwf	??_GPS_HasAcknowledged
  5656  0DB0  0870               	movf	??_GPS_HasAcknowledged,w
  5657  0DB1  0020               	movlb	0	; select bank0
  5658  0DB2  00A4               	movwf	GPS_HasAcknowledged@ackByte
  5659                           
  5660                           ;main.c: 251:             if (ackByte == ackPacket[ackByteID]) {
  5661  0DB3  0830               	movf	GPS_HasAcknowledged@ackByteID,w
  5662  0DB4  3E25               	addlw	(low (GPS_HasAcknowledged@ackPacket| 0))& (0+255)
  5663  0DB5  0086               	movwf	6
  5664  0DB6  0187               	clrf	7
  5665  0DB7  0801               	movf	1,w
  5666  0DB8  0624               	xorwf	GPS_HasAcknowledged@ackByte,w
  5667  0DB9  1D03               	skipz
  5668  0DBA  2D7D               	goto	l2904
  5669                           
  5670                           ;main.c: 252:                 ackByteID++;
  5671  0DBB  3001               	movlw	1
  5672  0DBC  00F0               	movwf	??_GPS_HasAcknowledged
  5673  0DBD  0870               	movf	??_GPS_HasAcknowledged,w
  5674  0DBE  07B0               	addwf	GPS_HasAcknowledged@ackByteID,f
  5675                           
  5676                           ;main.c: 253:             }
  5677  0DBF  2D7E               	goto	l2906
  5678  0DC0                     __end_of_GPS_HasAcknowledged:	
  5679                           
  5680                           	psect	text13
  5681  07F4                     __ptext13:	
  5682 ;; *************** function _SYSTEM_Initialize *****************
  5683 ;; Defined at:
  5684 ;;		line 50 in file "mcc_generated_files/mcc.c"
  5685 ;; Parameters:    Size  Location     Type
  5686 ;;		None
  5687 ;; Auto vars:     Size  Location     Type
  5688 ;;		None
  5689 ;; Return value:  Size  Location     Type
  5690 ;;                  1    wreg      void 
  5691 ;; Registers used:
  5692 ;;		wreg, status,2, status,0, pclath, cstack
  5693 ;; Tracked objects:
  5694 ;;		On entry : 0/0
  5695 ;;		On exit  : 0/0
  5696 ;;		Unchanged: 0/0
  5697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5701 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5702 ;;Total ram usage:        0 bytes
  5703 ;; Hardware stack levels used:    1
  5704 ;; Hardware stack levels required when called:    5
  5705 ;; This function calls:
  5706 ;;		_EUSART_Initialize
  5707 ;;		_OSCILLATOR_Initialize
  5708 ;;		_PIN_MANAGER_Initialize
  5709 ;;		_TMR0_Initialize
  5710 ;; This function is called by:
  5711 ;;		_main
  5712 ;; This function uses a non-reentrant model
  5713 ;;
  5714                           
  5715                           
  5716                           ;psect for function _SYSTEM_Initialize
  5717  07F4                     _SYSTEM_Initialize:	
  5718                           
  5719                           ;mcc_generated_files/mcc.c: 52:     PIN_MANAGER_Initialize();
  5720                           
  5721                           ;incstack = 0
  5722                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5723  07F4  318A  226B  3187   	fcall	_PIN_MANAGER_Initialize
  5724                           
  5725                           ;mcc_generated_files/mcc.c: 53:     OSCILLATOR_Initialize();
  5726  07F7  3188  2071  3187   	fcall	_OSCILLATOR_Initialize
  5727                           
  5728                           ;mcc_generated_files/mcc.c: 54:     TMR0_Initialize();
  5729  07FA  3188  20F0  3187   	fcall	_TMR0_Initialize
  5730                           
  5731                           ;mcc_generated_files/mcc.c: 55:     EUSART_Initialize();
  5732  07FD  3188  209D         	fcall	_EUSART_Initialize
  5733  07FF  0008               	return
  5734  0800                     __end_of_SYSTEM_Initialize:	
  5735                           
  5736                           	psect	text14
  5737  08F0                     __ptext14:	
  5738 ;; *************** function _TMR0_Initialize *****************
  5739 ;; Defined at:
  5740 ;;		line 64 in file "mcc_generated_files/tmr0.c"
  5741 ;; Parameters:    Size  Location     Type
  5742 ;;		None
  5743 ;; Auto vars:     Size  Location     Type
  5744 ;;		None
  5745 ;; Return value:  Size  Location     Type
  5746 ;;                  1    wreg      void 
  5747 ;; Registers used:
  5748 ;;		wreg, status,2, status,0, pclath, cstack
  5749 ;; Tracked objects:
  5750 ;;		On entry : 0/0
  5751 ;;		On exit  : 0/0
  5752 ;;		Unchanged: 0/0
  5753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5756 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5757 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5758 ;;Total ram usage:        1 bytes
  5759 ;; Hardware stack levels used:    1
  5760 ;; Hardware stack levels required when called:    4
  5761 ;; This function calls:
  5762 ;;		_TMR0_SetInterruptHandler
  5763 ;; This function is called by:
  5764 ;;		_SYSTEM_Initialize
  5765 ;; This function uses a non-reentrant model
  5766 ;;
  5767                           
  5768                           
  5769                           ;psect for function _TMR0_Initialize
  5770  08F0                     _TMR0_Initialize:	
  5771                           
  5772                           ;mcc_generated_files/tmr0.c: 69:     OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | (0xD2 
      +                          & 0x3F));
  5773                           
  5774                           ;incstack = 0
  5775                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5776  08F0  0021               	movlb	1	; select bank1
  5777  08F1  0815               	movf	21,w	;volatile
  5778  08F2  39C0               	andlw	192
  5779  08F3  3812               	iorlw	18
  5780  08F4  0095               	movwf	21	;volatile
  5781                           
  5782                           ;mcc_generated_files/tmr0.c: 72:     TMR0 = 0x83;
  5783  08F5  3083               	movlw	131
  5784  08F6  0020               	movlb	0	; select bank0
  5785  08F7  0095               	movwf	21	;volatile
  5786                           
  5787                           ;mcc_generated_files/tmr0.c: 75:     timer0ReloadVal= 131;
  5788  08F8  3083               	movlw	131
  5789  08F9  00F2               	movwf	??_TMR0_Initialize
  5790  08FA  0872               	movf	??_TMR0_Initialize,w
  5791  08FB  0021               	movlb	1	; select bank1
  5792  08FC  00ED               	movwf	_timer0ReloadVal^(0+128)	;volatile
  5793                           
  5794                           ;mcc_generated_files/tmr0.c: 78:     INTCONbits.TMR0IF = 0;
  5795  08FD  110B               	bcf	11,2	;volatile
  5796                           
  5797                           ;mcc_generated_files/tmr0.c: 81:     INTCONbits.TMR0IE = 1;
  5798  08FE  168B               	bsf	11,5	;volatile
  5799                           
  5800                           ;mcc_generated_files/tmr0.c: 84:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  5801  08FF  3003               	movlw	low _TMR0_DefaultInterruptHandler
  5802  0900  00F0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  5803  0901  3000               	movlw	high _TMR0_DefaultInterruptHandler
  5804  0902  00F1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  5805  0903  3188  205F         	fcall	_TMR0_SetInterruptHandler
  5806  0905  0008               	return
  5807  0906                     __end_of_TMR0_Initialize:	
  5808                           
  5809                           	psect	text15
  5810  085F                     __ptext15:	
  5811 ;; *************** function _TMR0_SetInterruptHandler *****************
  5812 ;; Defined at:
  5813 ;;		line 125 in file "mcc_generated_files/tmr0.c"
  5814 ;; Parameters:    Size  Location     Type
  5815 ;;  InterruptHan    2    0[COMMON] PTR FTN()void 
  5816 ;;		 -> TimerISR(1), TMR0_DefaultInterruptHandler(1), 
  5817 ;; Auto vars:     Size  Location     Type
  5818 ;;		None
  5819 ;; Return value:  Size  Location     Type
  5820 ;;                  1    wreg      void 
  5821 ;; Registers used:
  5822 ;;		wreg
  5823 ;; Tracked objects:
  5824 ;;		On entry : 0/0
  5825 ;;		On exit  : 0/0
  5826 ;;		Unchanged: 0/0
  5827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5828 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5831 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5832 ;;Total ram usage:        2 bytes
  5833 ;; Hardware stack levels used:    1
  5834 ;; Hardware stack levels required when called:    3
  5835 ;; This function calls:
  5836 ;;		Nothing
  5837 ;; This function is called by:
  5838 ;;		_TMR0_Initialize
  5839 ;;		_main
  5840 ;; This function uses a non-reentrant model
  5841 ;;
  5842                           
  5843                           
  5844                           ;psect for function _TMR0_SetInterruptHandler
  5845  085F                     _TMR0_SetInterruptHandler:	
  5846                           
  5847                           ;mcc_generated_files/tmr0.c: 126:     TMR0_InterruptHandler = InterruptHandler;
  5848                           
  5849                           ;incstack = 0
  5850                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  5851  085F  0871               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  5852  0860  0021               	movlb	1	; select bank1
  5853  0861  00EC               	movwf	(_TMR0_InterruptHandler+1)^(0+128)
  5854  0862  0870               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  5855  0863  00EB               	movwf	_TMR0_InterruptHandler^(0+128)
  5856  0864  0008               	return
  5857  0865                     __end_of_TMR0_SetInterruptHandler:	
  5858                           
  5859                           	psect	text16
  5860  0A6B                     __ptext16:	
  5861 ;; *************** function _PIN_MANAGER_Initialize *****************
  5862 ;; Defined at:
  5863 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
  5864 ;; Parameters:    Size  Location     Type
  5865 ;;		None
  5866 ;; Auto vars:     Size  Location     Type
  5867 ;;		None
  5868 ;; Return value:  Size  Location     Type
  5869 ;;                  1    wreg      void 
  5870 ;; Registers used:
  5871 ;;		wreg, status,2
  5872 ;; Tracked objects:
  5873 ;;		On entry : 0/0
  5874 ;;		On exit  : 0/0
  5875 ;;		Unchanged: 0/0
  5876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5880 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5881 ;;Total ram usage:        0 bytes
  5882 ;; Hardware stack levels used:    1
  5883 ;; Hardware stack levels required when called:    3
  5884 ;; This function calls:
  5885 ;;		Nothing
  5886 ;; This function is called by:
  5887 ;;		_SYSTEM_Initialize
  5888 ;; This function uses a non-reentrant model
  5889 ;;
  5890                           
  5891                           
  5892                           ;psect for function _PIN_MANAGER_Initialize
  5893  0A6B                     _PIN_MANAGER_Initialize:	
  5894                           
  5895                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  5896                           
  5897                           ;incstack = 0
  5898                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  5899  0A6B  0022               	movlb	2	; select bank2
  5900  0A6C  018C               	clrf	12	;volatile
  5901                           
  5902                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  5903  0A6D  018D               	clrf	13	;volatile
  5904                           
  5905                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  5906  0A6E  018E               	clrf	14	;volatile
  5907                           
  5908                           ;mcc_generated_files/pin_manager.c: 69:     TRISA = 0x03;
  5909  0A6F  3003               	movlw	3
  5910  0A70  0021               	movlb	1	; select bank1
  5911  0A71  008C               	movwf	12	;volatile
  5912                           
  5913                           ;mcc_generated_files/pin_manager.c: 70:     TRISB = 0x70;
  5914  0A72  3070               	movlw	112
  5915  0A73  008D               	movwf	13	;volatile
  5916                           
  5917                           ;mcc_generated_files/pin_manager.c: 71:     TRISC = 0xDF;
  5918  0A74  30DF               	movlw	223
  5919  0A75  008E               	movwf	14	;volatile
  5920                           
  5921                           ;mcc_generated_files/pin_manager.c: 76:     ANSELC = 0x4F;
  5922  0A76  304F               	movlw	79
  5923  0A77  0023               	movlb	3	; select bank3
  5924  0A78  008E               	movwf	14	;volatile
  5925                           
  5926                           ;mcc_generated_files/pin_manager.c: 77:     ANSELB = 0xB0;
  5927  0A79  30B0               	movlw	176
  5928  0A7A  008D               	movwf	13	;volatile
  5929                           
  5930                           ;mcc_generated_files/pin_manager.c: 78:     ANSELA = 0x03;
  5931  0A7B  3003               	movlw	3
  5932  0A7C  008C               	movwf	12	;volatile
  5933                           
  5934                           ;mcc_generated_files/pin_manager.c: 83:     WPUB = 0x00;
  5935  0A7D  0024               	movlb	4	; select bank4
  5936  0A7E  018D               	clrf	13	;volatile
  5937                           
  5938                           ;mcc_generated_files/pin_manager.c: 84:     WPUA = 0x00;
  5939  0A7F  018C               	clrf	12	;volatile
  5940                           
  5941                           ;mcc_generated_files/pin_manager.c: 85:     WPUC = 0x00;
  5942  0A80  018E               	clrf	14	;volatile
  5943                           
  5944                           ;mcc_generated_files/pin_manager.c: 86:     OPTION_REGbits.nWPUEN = 1;
  5945  0A81  0021               	movlb	1	; select bank1
  5946  0A82  1795               	bsf	21,7	;volatile
  5947                           
  5948                           ;mcc_generated_files/pin_manager.c: 91:     ODCONA = 0x00;
  5949  0A83  0025               	movlb	5	; select bank5
  5950  0A84  018C               	clrf	12	;volatile
  5951                           
  5952                           ;mcc_generated_files/pin_manager.c: 92:     ODCONB = 0x00;
  5953  0A85  018D               	clrf	13	;volatile
  5954                           
  5955                           ;mcc_generated_files/pin_manager.c: 93:     ODCONC = 0x00;
  5956  0A86  018E               	clrf	14	;volatile
  5957                           
  5958                           ;mcc_generated_files/pin_manager.c: 98:     SLRCONA = 0x37;
  5959  0A87  3037               	movlw	55
  5960  0A88  0026               	movlb	6	; select bank6
  5961  0A89  008C               	movwf	12	;volatile
  5962                           
  5963                           ;mcc_generated_files/pin_manager.c: 99:     SLRCONB = 0xF0;
  5964  0A8A  30F0               	movlw	240
  5965  0A8B  008D               	movwf	13	;volatile
  5966                           
  5967                           ;mcc_generated_files/pin_manager.c: 100:     SLRCONC = 0xFF;
  5968  0A8C  30FF               	movlw	255
  5969  0A8D  008E               	movwf	14	;volatile
  5970                           
  5971                           ;mcc_generated_files/pin_manager.c: 109:     RXPPS = 0x0E;
  5972  0A8E  300E               	movlw	14
  5973  0A8F  003C               	movlb	28	; select bank28
  5974  0A90  00A4               	movwf	36	;volatile
  5975                           
  5976                           ;mcc_generated_files/pin_manager.c: 110:     RB7PPS = 0x12;
  5977  0A91  3012               	movlw	18
  5978  0A92  003D               	movlb	29	; select bank29
  5979  0A93  009F               	movwf	31	;volatile
  5980  0A94  0008               	return
  5981  0A95                     __end_of_PIN_MANAGER_Initialize:	
  5982                           
  5983                           	psect	text17
  5984  0871                     __ptext17:	
  5985 ;; *************** function _OSCILLATOR_Initialize *****************
  5986 ;; Defined at:
  5987 ;;		line 58 in file "mcc_generated_files/mcc.c"
  5988 ;; Parameters:    Size  Location     Type
  5989 ;;		None
  5990 ;; Auto vars:     Size  Location     Type
  5991 ;;		None
  5992 ;; Return value:  Size  Location     Type
  5993 ;;                  1    wreg      void 
  5994 ;; Registers used:
  5995 ;;		wreg, status,2
  5996 ;; Tracked objects:
  5997 ;;		On entry : 0/0
  5998 ;;		On exit  : 0/0
  5999 ;;		Unchanged: 0/0
  6000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6004 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6005 ;;Total ram usage:        0 bytes
  6006 ;; Hardware stack levels used:    1
  6007 ;; Hardware stack levels required when called:    3
  6008 ;; This function calls:
  6009 ;;		Nothing
  6010 ;; This function is called by:
  6011 ;;		_SYSTEM_Initialize
  6012 ;; This function uses a non-reentrant model
  6013 ;;
  6014                           
  6015                           
  6016                           ;psect for function _OSCILLATOR_Initialize
  6017  0871                     _OSCILLATOR_Initialize:	
  6018                           
  6019                           ;mcc_generated_files/mcc.c: 61:     OSCCON = 0x68;
  6020                           
  6021                           ;incstack = 0
  6022                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  6023  0871  3068               	movlw	104
  6024  0872  0021               	movlb	1	; select bank1
  6025  0873  0099               	movwf	25	;volatile
  6026                           
  6027                           ;mcc_generated_files/mcc.c: 63:     OSCTUNE = 0x00;
  6028  0874  0198               	clrf	24	;volatile
  6029                           
  6030                           ;mcc_generated_files/mcc.c: 65:     BORCON = 0x00;
  6031  0875  0022               	movlb	2	; select bank2
  6032  0876  0196               	clrf	22	;volatile
  6033  0877  0008               	return
  6034  0878                     __end_of_OSCILLATOR_Initialize:	
  6035                           
  6036                           	psect	text18
  6037  089D                     __ptext18:	
  6038 ;; *************** function _EUSART_Initialize *****************
  6039 ;; Defined at:
  6040 ;;		line 56 in file "mcc_generated_files/eusart.c"
  6041 ;; Parameters:    Size  Location     Type
  6042 ;;		None
  6043 ;; Auto vars:     Size  Location     Type
  6044 ;;		None
  6045 ;; Return value:  Size  Location     Type
  6046 ;;                  1    wreg      void 
  6047 ;; Registers used:
  6048 ;;		wreg, status,2
  6049 ;; Tracked objects:
  6050 ;;		On entry : 0/0
  6051 ;;		On exit  : 0/0
  6052 ;;		Unchanged: 0/0
  6053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6054 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6055 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6057 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6058 ;;Total ram usage:        0 bytes
  6059 ;; Hardware stack levels used:    1
  6060 ;; Hardware stack levels required when called:    3
  6061 ;; This function calls:
  6062 ;;		Nothing
  6063 ;; This function is called by:
  6064 ;;		_SYSTEM_Initialize
  6065 ;; This function uses a non-reentrant model
  6066 ;;
  6067                           
  6068                           
  6069                           ;psect for function _EUSART_Initialize
  6070  089D                     _EUSART_Initialize:	
  6071                           
  6072                           ;mcc_generated_files/eusart.c: 61:     BAUD1CON = 0x08;
  6073                           
  6074                           ;incstack = 0
  6075                           ; Regs used in _EUSART_Initialize: [wreg+status,2]
  6076  089D  3008               	movlw	8
  6077  089E  0023               	movlb	3	; select bank3
  6078  089F  009F               	movwf	31	;volatile
  6079                           
  6080                           ;mcc_generated_files/eusart.c: 64:     RC1STA = 0x90;
  6081  08A0  3090               	movlw	144
  6082  08A1  009D               	movwf	29	;volatile
  6083                           
  6084                           ;mcc_generated_files/eusart.c: 67:     TX1STA = 0x24;
  6085  08A2  3024               	movlw	36
  6086  08A3  009E               	movwf	30	;volatile
  6087                           
  6088                           ;mcc_generated_files/eusart.c: 70:     SPBRGL = 0x67;
  6089  08A4  3067               	movlw	103
  6090  08A5  009B               	movwf	27	;volatile
  6091                           
  6092                           ;mcc_generated_files/eusart.c: 73:     SPBRGH = 0x00;
  6093  08A6  019C               	clrf	28	;volatile
  6094  08A7  0008               	return
  6095  08A8                     __end_of_EUSART_Initialize:	
  6096                           
  6097                           	psect	text19
  6098  0549                     __ptext19:	
  6099 ;; *************** function _GetNavData *****************
  6100 ;; Defined at:
  6101 ;;		line 341 in file "main.c"
  6102 ;; Parameters:    Size  Location     Type
  6103 ;;		None
  6104 ;; Auto vars:     Size  Location     Type
  6105 ;;  skip            1   34[BANK1 ] _Bool 
  6106 ;;  startTime       4   26[BANK1 ] unsigned long 
  6107 ;;  dataIndex       2   38[BANK1 ] int 
  6108 ;;  dataFieldTyp    2   35[BANK1 ] int 
  6109 ;;  index           2    0        int 
  6110 ;;  byte            1   40[BANK1 ] unsigned char 
  6111 ;;  success         1   37[BANK1 ] _Bool 
  6112 ;; Return value:  Size  Location     Type
  6113 ;;                  1    wreg      _Bool 
  6114 ;; Registers used:
  6115 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6116 ;; Tracked objects:
  6117 ;;		On entry : 0/0
  6118 ;;		On exit  : 0/0
  6119 ;;		Unchanged: 0/0
  6120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6122 ;;      Locals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0
  6123 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6124 ;;      Totals:         0       4      17       0       0       0       0       0       0       0       0       0       
      +0       0
  6125 ;;Total ram usage:       21 bytes
  6126 ;; Hardware stack levels used:    1
  6127 ;; Hardware stack levels required when called:   12
  6128 ;; This function calls:
  6129 ;;		_EUSART_Read
  6130 ;;		_EUSART_is_rx_ready
  6131 ;;		_printf
  6132 ;; This function is called by:
  6133 ;;		_main
  6134 ;; This function uses a non-reentrant model
  6135 ;;
  6136                           
  6137                           
  6138                           ;psect for function _GetNavData
  6139  0549                     _GetNavData:	
  6140                           
  6141                           ;main.c: 343:     _Bool success = 0;
  6142                           
  6143                           ;incstack = 0
  6144                           ; Regs used in _GetNavData: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6145  0549  0021               	movlb	1	; select bank1
  6146  054A  01C5               	clrf	GetNavData@success^(0+128)
  6147  054B  0022               	movlb	2	; select bank2
  6148  054C  168E               	bsf	14,5	;volatile
  6149                           
  6150                           ;main.c: 350:     unsigned long startTime = ticks;
  6151  054D  0021               	movlb	1	; select bank1
  6152  054E  0855               	movf	(_ticks+3)^(0+128),w
  6153  054F  00BD               	movwf	(GetNavData@startTime+3)^(0+128)
  6154  0550  0854               	movf	(_ticks+2)^(0+128),w
  6155  0551  00BC               	movwf	(GetNavData@startTime+2)^(0+128)
  6156  0552  0853               	movf	(_ticks+1)^(0+128),w
  6157  0553  00BB               	movwf	(GetNavData@startTime+1)^(0+128)
  6158  0554  0852               	movf	_ticks^(0+128),w
  6159  0555  00BA               	movwf	GetNavData@startTime^(0+128)
  6160                           
  6161                           ;main.c: 353:     int dataIndex = 0;
  6162  0556  01C6               	clrf	GetNavData@dataIndex^(0+128)
  6163  0557  01C7               	clrf	(GetNavData@dataIndex+1)^(0+128)
  6164                           
  6165                           ;main.c: 355:     int dataFieldType = 0;
  6166  0558  01C3               	clrf	GetNavData@dataFieldType^(0+128)
  6167  0559  01C4               	clrf	(GetNavData@dataFieldType+1)^(0+128)
  6168                           
  6169                           ;main.c: 358:     printf("$PUBX,00*33\r\n");
  6170  055A  30B0               	movlw	low (STR_7| (0+32768))
  6171  055B  0020               	movlb	0	; select bank0
  6172  055C  00E3               	movwf	printf@fmt
  6173  055D  3090               	movlw	high (STR_7| (0+32768))
  6174  055E  00E4               	movwf	printf@fmt+1
  6175  055F  3188  20B8  3185   	fcall	_printf
  6176  0562                     l3740:	
  6177                           ;main.c: 363:     while (!success)
  6178                           
  6179                           
  6180                           ;main.c: 363:     while (!success)
  6181  0562  0021               	movlb	1	; select bank1
  6182  0563  0845               	movf	GetNavData@success^(0+128),w
  6183  0564  1D03               	btfss	3,2
  6184  0565  2E5A               	goto	l3742
  6185                           
  6186                           ;main.c: 364:     {;main.c: 366:         if (ticks - startTime > 3000)
  6187  0566  083A               	movf	GetNavData@startTime^(0+128),w
  6188  0567  0252               	subwf	_ticks^(0+128),w
  6189  0568  0020               	movlb	0	; select bank0
  6190  0569  00E9               	movwf	??_GetNavData
  6191  056A  0021               	movlb	1	; select bank1
  6192  056B  083B               	movf	(GetNavData@startTime+1)^(0+128),w
  6193  056C  3B53               	subwfb	(_ticks+1)^(0+128),w
  6194  056D  0020               	movlb	0	; select bank0
  6195  056E  00EA               	movwf	??_GetNavData+1
  6196  056F  0021               	movlb	1	; select bank1
  6197  0570  083C               	movf	(GetNavData@startTime+2)^(0+128),w
  6198  0571  3B54               	subwfb	(_ticks+2)^(0+128),w
  6199  0572  0020               	movlb	0	; select bank0
  6200  0573  00EB               	movwf	??_GetNavData+2
  6201  0574  0021               	movlb	1	; select bank1
  6202  0575  083D               	movf	(GetNavData@startTime+3)^(0+128),w
  6203  0576  3B55               	subwfb	(_ticks+3)^(0+128),w
  6204  0577  0020               	movlb	0	; select bank0
  6205  0578  00EC               	movwf	??_GetNavData+3
  6206  0579  086C               	movf	??_GetNavData+3,w
  6207  057A  1D03               	btfss	3,2
  6208  057B  2E5A               	goto	l3742
  6209  057C  086B               	movf	??_GetNavData+2,w
  6210  057D  1D03               	btfss	3,2
  6211  057E  2E5A               	goto	l3742
  6212  057F  30B9               	movlw	185
  6213  0580  0269               	subwf	??_GetNavData,w
  6214  0581  300B               	movlw	11
  6215  0582  3B6A               	subwfb	??_GetNavData+1,w
  6216  0583  1803               	btfsc	3,0
  6217  0584  2E5A               	goto	l3742
  6218                           
  6219                           ;main.c: 372:         if (EUSART_is_rx_ready())
  6220  0585  3188  2055  3185   	fcall	_EUSART_is_rx_ready
  6221  0588  3A00               	xorlw	0
  6222  0589  1903               	skipnz
  6223  058A  2D62               	goto	l3740
  6224                           
  6225                           ;main.c: 373:         {;main.c: 374:             byte = EUSART_Read();
  6226  058B  3188  2093  3185   	fcall	_EUSART_Read
  6227  058E  0020               	movlb	0	; select bank0
  6228  058F  00E9               	movwf	??_GetNavData
  6229  0590  0869               	movf	??_GetNavData,w
  6230  0591  0021               	movlb	1	; select bank1
  6231  0592  00C8               	movwf	GetNavData@byte^(0+128)
  6232                           
  6233                           ;main.c: 388:             _Bool skip = 1;
  6234  0593  01C2               	clrf	GetNavData@skip^(0+128)
  6235  0594  0AC2               	incf	GetNavData@skip^(0+128),f
  6236                           
  6237                           ;main.c: 389:             switch (byte)
  6238  0595  2DB8               	goto	l3700
  6239  0596                     l3690:	
  6240                           
  6241                           ;main.c: 392:                 dataFieldType++;
  6242  0596  3001               	movlw	1
  6243  0597  0021               	movlb	1	; select bank1
  6244  0598  07C3               	addwf	GetNavData@dataFieldType^(0+128),f
  6245  0599  3000               	movlw	0
  6246  059A  3DC4               	addwfc	(GetNavData@dataFieldType+1)^(0+128),f
  6247                           
  6248                           ;main.c: 393:                 dataIndex = 0;
  6249  059B  01C6               	clrf	GetNavData@dataIndex^(0+128)
  6250  059C  01C7               	clrf	(GetNavData@dataIndex+1)^(0+128)
  6251                           
  6252                           ;main.c: 394:                 break;
  6253  059D  2DC9               	goto	l3702
  6254  059E                     l3694:	
  6255                           
  6256                           ;main.c: 396:                 success = dataFieldType > 13;
  6257  059E  0021               	movlb	1	; select bank1
  6258  059F  0844               	movf	(GetNavData@dataFieldType+1)^(0+128),w
  6259  05A0  3A80               	xorlw	128
  6260  05A1  0020               	movlb	0	; select bank0
  6261  05A2  00E9               	movwf	??_GetNavData
  6262  05A3  3080               	movlw	128
  6263  05A4  0269               	subwf	??_GetNavData,w
  6264  05A5  1D03               	skipz
  6265  05A6  2DAA               	goto	u3735
  6266  05A7  300E               	movlw	14
  6267  05A8  0021               	movlb	1	; select bank1
  6268  05A9  0243               	subwf	GetNavData@dataFieldType^(0+128),w
  6269  05AA                     u3735:	
  6270  05AA  1C03               	btfss	3,0
  6271  05AB  2DAE               	goto	u3730
  6272  05AC  3001               	movlw	1
  6273  05AD  2DAF               	goto	u3740
  6274  05AE                     u3730:	
  6275  05AE  3000               	movlw	0
  6276  05AF                     u3740:	
  6277  05AF  0020               	movlb	0	; select bank0
  6278  05B0  00EA               	movwf	??_GetNavData+1
  6279  05B1  086A               	movf	??_GetNavData+1,w
  6280  05B2  0021               	movlb	1	; select bank1
  6281  05B3  00C5               	movwf	GetNavData@success^(0+128)
  6282                           
  6283                           ;main.c: 397:                 break;
  6284  05B4  2DC9               	goto	l3702
  6285  05B5                     l3696:	
  6286                           
  6287                           ;main.c: 399:                 skip = 0;
  6288  05B5  0021               	movlb	1	; select bank1
  6289  05B6  01C2               	clrf	GetNavData@skip^(0+128)
  6290                           
  6291                           ;main.c: 400:                 break;
  6292  05B7  2DC9               	goto	l3702
  6293  05B8                     l3700:	
  6294  05B8  0848               	movf	GetNavData@byte^(0+128),w
  6295  05B9  0020               	movlb	0	; select bank0
  6296  05BA  00E9               	movwf	??_GetNavData
  6297  05BB  01EA               	clrf	??_GetNavData+1
  6298                           
  6299                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6300                           ; Switch size 1, requested type "simple"
  6301                           ; Number of cases is 1, Range of values is 0 to 0
  6302                           ; switch strategies available:
  6303                           ; Name         Instructions Cycles
  6304                           ; simple_byte            4     3 (average)
  6305                           ; direct_byte            8     6 (fixed)
  6306                           ; jumptable            260     6 (fixed)
  6307                           ;	Chosen strategy is simple_byte
  6308  05BC  086A               	movf	??_GetNavData+1,w
  6309  05BD  3A00               	xorlw	0	; case 0
  6310  05BE  1903               	skipnz
  6311  05BF  2DC1               	goto	l3892
  6312  05C0  2DB5               	goto	l3696
  6313  05C1                     l3892:	
  6314                           
  6315                           ; Switch size 1, requested type "simple"
  6316                           ; Number of cases is 2, Range of values is 10 to 44
  6317                           ; switch strategies available:
  6318                           ; Name         Instructions Cycles
  6319                           ; simple_byte            7     4 (average)
  6320                           ; direct_byte           79     9 (fixed)
  6321                           ; jumptable            263     9 (fixed)
  6322                           ;	Chosen strategy is simple_byte
  6323  05C1  0869               	movf	??_GetNavData,w
  6324  05C2  3A0A               	xorlw	10	; case 10
  6325  05C3  1903               	skipnz
  6326  05C4  2D9E               	goto	l3694
  6327  05C5  3A26               	xorlw	38	; case 44
  6328  05C6  1903               	skipnz
  6329  05C7  2D96               	goto	l3690
  6330  05C8  2DB5               	goto	l3696
  6331  05C9                     l3702:	
  6332                           
  6333                           ;main.c: 403:             if (!skip)
  6334  05C9  0842               	movf	GetNavData@skip^(0+128),w
  6335  05CA  1903               	btfsc	3,2
  6336  05CB  2E2F               	goto	l3736
  6337  05CC  2D62               	goto	l3740
  6338  05CD                     l3706:	
  6339                           
  6340                           ;main.c: 409:                     gps_time[dataIndex] = byte;
  6341  05CD  0848               	movf	GetNavData@byte^(0+128),w
  6342  05CE  0020               	movlb	0	; select bank0
  6343  05CF  00E9               	movwf	??_GetNavData
  6344  05D0  0021               	movlb	1	; select bank1
  6345  05D1  0846               	movf	GetNavData@dataIndex^(0+128),w
  6346  05D2  3E4C               	addlw	(low (_gps_time| (0+256)))& (0+255)
  6347  05D3  2E28               	goto	L10
  6348  05D4                     l3708:	
  6349                           ;main.c: 410:                     break;
  6350                           
  6351                           
  6352                           ;main.c: 412:                     gps_latitude[dataIndex + 1] = byte;
  6353  05D4  0848               	movf	GetNavData@byte^(0+128),w
  6354  05D5  0020               	movlb	0	; select bank0
  6355  05D6  00E9               	movwf	??_GetNavData
  6356  05D7  0021               	movlb	1	; select bank1
  6357  05D8  0846               	movf	GetNavData@dataIndex^(0+128),w
  6358  05D9  3E31               	addlw	(low ((_gps_latitude| (0+256)+1)))& (0+255)
  6359  05DA  2E28               	goto	L10
  6360  05DB                     l3710:	
  6361                           ;main.c: 413:                     break;
  6362                           
  6363                           
  6364                           ;main.c: 416:                     gps_latitude[0] = byte == 'N' ? '+' : '-';
  6365  05DB  304E               	movlw	78
  6366  05DC  0648               	xorwf	GetNavData@byte^(0+128),w
  6367  05DD  1903               	btfsc	3,2
  6368  05DE  2DE1               	goto	l3714
  6369  05DF  302D               	movlw	45
  6370  05E0  2DE2               	goto	L3
  6371  05E1                     l3714:	
  6372  05E1  302B               	movlw	43
  6373  05E2                     L3:	
  6374  05E2  00BE               	movwf	_GetNavData$504^(0+128)
  6375  05E3  3000               	movlw	0
  6376  05E4  00BF               	movwf	(_GetNavData$504^(0+128)+1)
  6377  05E5  083E               	movf	_GetNavData$504^(0+128),w
  6378  05E6  0020               	movlb	0	; select bank0
  6379  05E7  00E9               	movwf	??_GetNavData
  6380  05E8  0869               	movf	??_GetNavData,w
  6381  05E9  0022               	movlb	2	; select bank2
  6382  05EA  00B0               	movwf	_gps_latitude^(0+256)
  6383                           
  6384                           ;main.c: 417:                     break;
  6385  05EB  2E54               	goto	l3738
  6386  05EC                     l3716:	
  6387                           
  6388                           ;main.c: 419:                     gps_longitude[dataIndex + 1] = byte;
  6389  05EC  0848               	movf	GetNavData@byte^(0+128),w
  6390  05ED  0020               	movlb	0	; select bank0
  6391  05EE  00E9               	movwf	??_GetNavData
  6392  05EF  0021               	movlb	1	; select bank1
  6393  05F0  0846               	movf	GetNavData@dataIndex^(0+128),w
  6394  05F1  3E21               	addlw	(low ((_gps_longitude| (0+256)+1)))& (0+255)
  6395  05F2  2E28               	goto	L10
  6396  05F3                     l3718:	
  6397                           ;main.c: 420:                     break;
  6398                           
  6399                           
  6400                           ;main.c: 423:                     gps_longitude[0] = byte == 'E' ? '+' : '-';
  6401  05F3  3045               	movlw	69
  6402  05F4  0648               	xorwf	GetNavData@byte^(0+128),w
  6403  05F5  1903               	btfsc	3,2
  6404  05F6  2DF9               	goto	l3722
  6405  05F7  302D               	movlw	45
  6406  05F8  2DFA               	goto	L5
  6407  05F9                     l3722:	
  6408  05F9  302B               	movlw	43
  6409  05FA                     L5:	
  6410  05FA  00C0               	movwf	_GetNavData$505^(0+128)
  6411  05FB  3000               	movlw	0
  6412  05FC  00C1               	movwf	(_GetNavData$505^(0+128)+1)
  6413  05FD  0840               	movf	_GetNavData$505^(0+128),w
  6414  05FE  0020               	movlb	0	; select bank0
  6415  05FF  00E9               	movwf	??_GetNavData
  6416  0600  0869               	movf	??_GetNavData,w
  6417  0601  0022               	movlb	2	; select bank2
  6418  0602  00A0               	movwf	_gps_longitude^(0+256)
  6419                           
  6420                           ;main.c: 424:                     break;
  6421  0603  2E54               	goto	l3738
  6422  0604                     l3724:	
  6423                           
  6424                           ;main.c: 426:                     gps_altitude[dataIndex] = byte;
  6425  0604  0848               	movf	GetNavData@byte^(0+128),w
  6426  0605  0020               	movlb	0	; select bank0
  6427  0606  00E9               	movwf	??_GetNavData
  6428  0607  0021               	movlb	1	; select bank1
  6429  0608  0846               	movf	GetNavData@dataIndex^(0+128),w
  6430  0609  3E40               	addlw	(low (_gps_altitude| (0+256)))& (0+255)
  6431  060A  2E28               	goto	L10
  6432  060B                     l3726:	
  6433                           ;main.c: 427:                     break;
  6434                           
  6435                           
  6436                           ;main.c: 429:                     gps_nav_status[dataIndex] = byte;
  6437  060B  0848               	movf	GetNavData@byte^(0+128),w
  6438  060C  0020               	movlb	0	; select bank0
  6439  060D  00E9               	movwf	??_GetNavData
  6440  060E  0021               	movlb	1	; select bank1
  6441  060F  0846               	movf	GetNavData@dataIndex^(0+128),w
  6442  0610  3ECE               	addlw	(low (_gps_nav_status| 0))& (0+255)
  6443  0611  0086               	movwf	6
  6444  0612  0187               	clrf	7
  6445  0613  2E2B               	goto	L9
  6446  0614                     l3728:	
  6447                           ;main.c: 430:                     break;
  6448                           
  6449                           
  6450                           ;main.c: 432:                     gps_speed_over_ground[dataIndex] = byte;
  6451  0614  0848               	movf	GetNavData@byte^(0+128),w
  6452  0615  0020               	movlb	0	; select bank0
  6453  0616  00E9               	movwf	??_GetNavData
  6454  0617  0021               	movlb	1	; select bank1
  6455  0618  0846               	movf	GetNavData@dataIndex^(0+128),w
  6456  0619  3E66               	addlw	(low (_gps_speed_over_ground| (0+256)))& (0+255)
  6457  061A  2E28               	goto	L10
  6458  061B                     l3730:	
  6459                           ;main.c: 433:                     break;
  6460                           
  6461                           
  6462                           ;main.c: 435:                     gps_course_over_ground[dataIndex] = byte;
  6463  061B  0848               	movf	GetNavData@byte^(0+128),w
  6464  061C  0020               	movlb	0	; select bank0
  6465  061D  00E9               	movwf	??_GetNavData
  6466  061E  0021               	movlb	1	; select bank1
  6467  061F  0846               	movf	GetNavData@dataIndex^(0+128),w
  6468  0620  3E5E               	addlw	(low (_gps_course_over_ground| (0+256)))& (0+255)
  6469  0621  2E28               	goto	L10
  6470  0622                     l3732:	
  6471                           ;main.c: 436:                     break;
  6472                           
  6473                           
  6474                           ;main.c: 438:                     gps_vertical_velocity[dataIndex] = byte;
  6475  0622  0848               	movf	GetNavData@byte^(0+128),w
  6476  0623  0020               	movlb	0	; select bank0
  6477  0624  00E9               	movwf	??_GetNavData
  6478  0625  0021               	movlb	1	; select bank1
  6479  0626  0846               	movf	GetNavData@dataIndex^(0+128),w
  6480  0627  3E56               	addlw	(low (_gps_vertical_velocity| (0+256)))& (0+255)
  6481  0628                     L10:	
  6482  0628  0086               	movwf	6
  6483  0629  3001               	movlw	1	; select bank2/3
  6484  062A  0087               	movwf	7
  6485  062B                     L9:	
  6486  062B  0020               	movlb	0	; select bank0
  6487  062C  0869               	movf	??_GetNavData,w
  6488  062D  0081               	movwf	1
  6489                           
  6490                           ;main.c: 439:                     break;
  6491  062E  2E54               	goto	l3738
  6492  062F                     l3736:	
  6493                           
  6494                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6495                           ; Switch size 1, requested type "simple"
  6496                           ; Number of cases is 1, Range of values is 0 to 0
  6497                           ; switch strategies available:
  6498                           ; Name         Instructions Cycles
  6499                           ; simple_byte            4     3 (average)
  6500                           ; direct_byte            8     6 (fixed)
  6501                           ; jumptable            260     6 (fixed)
  6502                           ;	Chosen strategy is simple_byte
  6503  062F  0844               	movf	(GetNavData@dataFieldType+1)^(0+128),w
  6504  0630  3A00               	xorlw	0	; case 0
  6505  0631  1903               	skipnz
  6506  0632  2E34               	goto	l3894
  6507  0633  2E54               	goto	l3738
  6508  0634                     l3894:	
  6509                           
  6510                           ; Switch size 1, requested type "simple"
  6511                           ; Number of cases is 10, Range of values is 2 to 13
  6512                           ; switch strategies available:
  6513                           ; Name         Instructions Cycles
  6514                           ; simple_byte           31    16 (average)
  6515                           ; direct_byte           33     9 (fixed)
  6516                           ; jumptable            263     9 (fixed)
  6517                           ;	Chosen strategy is simple_byte
  6518  0634  0843               	movf	GetNavData@dataFieldType^(0+128),w
  6519  0635  3A02               	xorlw	2	; case 2
  6520  0636  1903               	skipnz
  6521  0637  2DCD               	goto	l3706
  6522  0638  3A01               	xorlw	1	; case 3
  6523  0639  1903               	skipnz
  6524  063A  2DD4               	goto	l3708
  6525  063B  3A07               	xorlw	7	; case 4
  6526  063C  1903               	skipnz
  6527  063D  2DDB               	goto	l3710
  6528  063E  3A01               	xorlw	1	; case 5
  6529  063F  1903               	skipnz
  6530  0640  2DEC               	goto	l3716
  6531  0641  3A03               	xorlw	3	; case 6
  6532  0642  1903               	skipnz
  6533  0643  2DF3               	goto	l3718
  6534  0644  3A01               	xorlw	1	; case 7
  6535  0645  1903               	skipnz
  6536  0646  2E04               	goto	l3724
  6537  0647  3A0F               	xorlw	15	; case 8
  6538  0648  1903               	skipnz
  6539  0649  2E0B               	goto	l3726
  6540  064A  3A03               	xorlw	3	; case 11
  6541  064B  1903               	skipnz
  6542  064C  2E14               	goto	l3728
  6543  064D  3A07               	xorlw	7	; case 12
  6544  064E  1903               	skipnz
  6545  064F  2E1B               	goto	l3730
  6546  0650  3A01               	xorlw	1	; case 13
  6547  0651  1903               	skipnz
  6548  0652  2E22               	goto	l3732
  6549  0653  2E54               	goto	l3738
  6550  0654                     l3738:	
  6551                           
  6552                           ;main.c: 443:                 dataIndex++;
  6553  0654  3001               	movlw	1
  6554  0655  0021               	movlb	1	; select bank1
  6555  0656  07C6               	addwf	GetNavData@dataIndex^(0+128),f
  6556  0657  3000               	movlw	0
  6557  0658  3DC7               	addwfc	(GetNavData@dataIndex+1)^(0+128),f
  6558  0659  2D62               	goto	l3740
  6559  065A                     l3742:	
  6560                           
  6561                           ;main.c: 449:     return success;
  6562  065A  0021               	movlb	1	; select bank1
  6563  065B  0845               	movf	GetNavData@success^(0+128),w
  6564  065C  0008               	return
  6565  065D                     __end_of_GetNavData:	
  6566                           
  6567                           	psect	text20
  6568  08B8                     __ptext20:	
  6569 ;; *************** function _printf *****************
  6570 ;; Defined at:
  6571 ;;		line 5 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\printf.c"
  6572 ;; Parameters:    Size  Location     Type
  6573 ;;  fmt             2   67[BANK0 ] PTR const unsigned char 
  6574 ;;		 -> STR_7(14), STR_6(26), STR_5(26), STR_4(26), 
  6575 ;;		 -> STR_3(26), STR_2(26), STR_1(26), 
  6576 ;; Auto vars:     Size  Location     Type
  6577 ;;  ret             2    0        int 
  6578 ;;  ap              1   72[BANK0 ] PTR void [1]
  6579 ;;		 -> ?_printf(2), ?_sprintf(2), 
  6580 ;; Return value:  Size  Location     Type
  6581 ;;                  2   67[BANK0 ] int 
  6582 ;; Registers used:
  6583 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6584 ;; Tracked objects:
  6585 ;;		On entry : 0/0
  6586 ;;		On exit  : 0/0
  6587 ;;		Unchanged: 0/0
  6588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6589 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6590 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6591 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6592 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6593 ;;Total ram usage:        6 bytes
  6594 ;; Hardware stack levels used:    1
  6595 ;; Hardware stack levels required when called:   11
  6596 ;; This function calls:
  6597 ;;		_vfprintf
  6598 ;; This function is called by:
  6599 ;;		_SetupGPS
  6600 ;;		_GetNavData
  6601 ;; This function uses a non-reentrant model
  6602 ;;
  6603                           
  6604                           
  6605                           ;psect for function _printf
  6606  08B8                     _printf:	
  6607                           
  6608                           ;incstack = 0
  6609                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6610  08B8  3065               	movlw	(low ((?_printf| 0+2)))& (0+255)
  6611  08B9  0020               	movlb	0	; select bank0
  6612  08BA  00E5               	movwf	??_printf
  6613  08BB  0865               	movf	??_printf,w
  6614  08BC  00E8               	movwf	printf@ap
  6615  08BD  0864               	movf	printf@fmt+1,w
  6616  08BE  00DC               	movwf	vfprintf@fmt+1
  6617  08BF  0863               	movf	printf@fmt,w
  6618  08C0  00DB               	movwf	vfprintf@fmt
  6619  08C1  3068               	movlw	(low (printf@ap| 0))& (0+255)
  6620  08C2  00E5               	movwf	??_printf
  6621  08C3  0865               	movf	??_printf,w
  6622  08C4  00DD               	movwf	vfprintf@ap
  6623  08C5  3000               	movlw	0
  6624  08C6  318B  2371         	fcall	_vfprintf
  6625  08C8  0008               	return
  6626  08C9                     __end_of_printf:	
  6627                           
  6628                           	psect	text21
  6629  0B71                     __ptext21:	
  6630 ;; *************** function _vfprintf *****************
  6631 ;; Defined at:
  6632 ;;		line 1368 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c"
  6633 ;; Parameters:    Size  Location     Type
  6634 ;;  fp              1    wreg     PTR struct _IO_FILE
  6635 ;;		 -> sprintf@f(6), NULL(0), 
  6636 ;;  fmt             2   59[BANK0 ] PTR const unsigned char 
  6637 ;;		 -> STR_10(7), STR_9(12), STR_8(20), STR_7(14), 
  6638 ;;		 -> STR_6(26), STR_5(26), STR_4(26), STR_3(26), 
  6639 ;;		 -> STR_2(26), STR_1(26), 
  6640 ;;  ap              1   61[BANK0 ] PTR PTR void 
  6641 ;;		 -> printf@ap(1), sprintf@ap(1), 
  6642 ;; Auto vars:     Size  Location     Type
  6643 ;;  fp              1   64[BANK0 ] PTR struct _IO_FILE
  6644 ;;		 -> sprintf@f(6), NULL(0), 
  6645 ;;  cfmt            2   65[BANK0 ] PTR unsigned char 
  6646 ;;		 -> STR_10(7), STR_9(12), STR_8(20), STR_7(14), 
  6647 ;;		 -> STR_6(26), STR_5(26), STR_4(26), STR_3(26), 
  6648 ;;		 -> STR_2(26), STR_1(26), 
  6649 ;; Return value:  Size  Location     Type
  6650 ;;                  2   59[BANK0 ] int 
  6651 ;; Registers used:
  6652 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6653 ;; Tracked objects:
  6654 ;;		On entry : 0/0
  6655 ;;		On exit  : 0/0
  6656 ;;		Unchanged: 0/0
  6657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6658 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6659 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6660 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6661 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6662 ;;Total ram usage:        8 bytes
  6663 ;; Hardware stack levels used:    1
  6664 ;; Hardware stack levels required when called:   10
  6665 ;; This function calls:
  6666 ;;		_vfpfcnvrt
  6667 ;; This function is called by:
  6668 ;;		_sprintf
  6669 ;;		_printf
  6670 ;; This function uses a non-reentrant model
  6671 ;;
  6672                           
  6673                           
  6674                           ;psect for function _vfprintf
  6675  0B71                     _vfprintf:	
  6676                           
  6677                           ;incstack = 0
  6678                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6679                           ;vfprintf@fp stored from wreg
  6680  0B71  0020               	movlb	0	; select bank0
  6681  0B72  00E0               	movwf	vfprintf@fp
  6682                           
  6683                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 1368: int vfprintf(FIL
      +                          E *fp, const char *fmt, va_list ap);K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\comm
      +                          on\doprnt.c: 1369: {;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 13
      +                          71:     char *cfmt;;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 137
      +                          3:     cfmt = (char *)fmt;
  6684  0B73  085C               	movf	vfprintf@fmt+1,w
  6685  0B74  00E2               	movwf	vfprintf@cfmt+1
  6686  0B75  085B               	movf	vfprintf@fmt,w
  6687  0B76  00E1               	movwf	vfprintf@cfmt
  6688                           
  6689                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 1374:     nout = 0;
  6690  0B77  0021               	movlb	1	; select bank1
  6691  0B78  01D6               	clrf	_nout^(0+128)
  6692  0B79  01D7               	clrf	(_nout+1)^(0+128)
  6693  0B7A                     l3586:	
  6694                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 1375:     while (*cfmt
      +                          ) {
  6695                           
  6696                           
  6697                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 1375:     while (*cfmt
      +                          ) {
  6698  0B7A  0020               	movlb	0	; select bank0
  6699  0B7B  0861               	movf	vfprintf@cfmt,w
  6700  0B7C  0084               	movwf	4
  6701  0B7D  0862               	movf	vfprintf@cfmt+1,w
  6702  0B7E  0085               	movwf	5
  6703  0B7F  0012               	moviw fsr0++
  6704  0B80  1903               	btfsc	3,2
  6705  0B81  2B97               	goto	l3588
  6706                           
  6707                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 1376:         nout += 
      +                          vfpfcnvrt(fp, &cfmt, ap);
  6708  0B82  3061               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  6709  0B83  00DE               	movwf	??_vfprintf
  6710  0B84  085E               	movf	??_vfprintf,w
  6711  0B85  00D3               	movwf	vfpfcnvrt@fmt
  6712  0B86  085D               	movf	vfprintf@ap,w
  6713  0B87  00DF               	movwf	??_vfprintf+1
  6714  0B88  085F               	movf	??_vfprintf+1,w
  6715  0B89  00D4               	movwf	vfpfcnvrt@ap
  6716  0B8A  0860               	movf	vfprintf@fp,w
  6717  0B8B  3180  2055  318B   	fcall	_vfpfcnvrt
  6718  0B8E  0020               	movlb	0	; select bank0
  6719  0B8F  0853               	movf	?_vfpfcnvrt,w
  6720  0B90  0021               	movlb	1	; select bank1
  6721  0B91  07D6               	addwf	_nout^(0+128),f
  6722  0B92  0020               	movlb	0	; select bank0
  6723  0B93  0854               	movf	?_vfpfcnvrt+1,w
  6724  0B94  0021               	movlb	1	; select bank1
  6725  0B95  3DD7               	addwfc	(_nout+1)^(0+128),f
  6726  0B96  2B7A               	goto	l3586
  6727  0B97                     l3588:	
  6728                           
  6729                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 1378:     return nout;
  6730  0B97  0021               	movlb	1	; select bank1
  6731  0B98  0857               	movf	(_nout+1)^(0+128),w
  6732  0B99  0020               	movlb	0	; select bank0
  6733  0B9A  00DC               	movwf	?_vfprintf+1
  6734  0B9B  0021               	movlb	1	; select bank1
  6735  0B9C  0856               	movf	_nout^(0+128),w
  6736  0B9D  0020               	movlb	0	; select bank0
  6737  0B9E  00DB               	movwf	?_vfprintf
  6738  0B9F  0008               	return
  6739  0BA0                     __end_of_vfprintf:	
  6740                           
  6741                           	psect	text22
  6742  0055                     __ptext22:	
  6743 ;; *************** function _vfpfcnvrt *****************
  6744 ;; Defined at:
  6745 ;;		line 670 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c"
  6746 ;; Parameters:    Size  Location     Type
  6747 ;;  fp              1    wreg     PTR struct _IO_FILE
  6748 ;;		 -> sprintf@f(6), NULL(0), 
  6749 ;;  fmt             1   51[BANK0 ] PTR PTR unsigned char 
  6750 ;;		 -> vfprintf@cfmt(2), 
  6751 ;;  ap              1   52[BANK0 ] PTR PTR void 
  6752 ;;		 -> printf@ap(1), sprintf@ap(1), 
  6753 ;; Auto vars:     Size  Location     Type
  6754 ;;  fp              1   23[BANK1 ] PTR struct _IO_FILE
  6755 ;;		 -> sprintf@f(6), NULL(0), 
  6756 ;;  llu             8    8[BANK1 ] unsigned long long 
  6757 ;;  ll              8    0[BANK1 ] long long 
  6758 ;;  f               4    0        long long 
  6759 ;;  ct              3    0        unsigned char [3]
  6760 ;;  done            2   19[BANK1 ] int 
  6761 ;;  cp              2   16[BANK1 ] PTR unsigned char 
  6762 ;;		 -> ?_printf(2), ?_sprintf(2), gps_vertical_velocity(8), gps_course_over_ground(8), 
  6763 ;;		 -> gps_speed_over_ground(8), gps_altitude(12), gps_longitude(16), gps_latitude(16), 
  6764 ;;		 -> gps_time(10), 
  6765 ;;  vp              2    0        PTR void 
  6766 ;;  i               2    0        int 
  6767 ;;  c               1   18[BANK1 ] unsigned char 
  6768 ;; Return value:  Size  Location     Type
  6769 ;;                  2   51[BANK0 ] int 
  6770 ;; Registers used:
  6771 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6772 ;; Tracked objects:
  6773 ;;		On entry : 0/0
  6774 ;;		On exit  : 0/0
  6775 ;;		Unchanged: 0/0
  6776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6777 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6778 ;;      Locals:         0       0      24       0       0       0       0       0       0       0       0       0       
      +0       0
  6779 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6780 ;;      Totals:         0       8      24       0       0       0       0       0       0       0       0       0       
      +0       0
  6781 ;;Total ram usage:       32 bytes
  6782 ;; Hardware stack levels used:    1
  6783 ;; Hardware stack levels required when called:    9
  6784 ;; This function calls:
  6785 ;;		_atoi
  6786 ;;		_dtoa
  6787 ;;		_fputc
  6788 ;;		_isdigit
  6789 ;;		_stoa
  6790 ;;		_xtoa
  6791 ;; This function is called by:
  6792 ;;		_vfprintf
  6793 ;; This function uses a non-reentrant model
  6794 ;;
  6795                           
  6796                           
  6797                           ;psect for function _vfpfcnvrt
  6798  0055                     _vfpfcnvrt:	
  6799                           
  6800                           ;incstack = 0
  6801                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6802                           ;vfpfcnvrt@fp stored from wreg
  6803  0055  0021               	movlb	1	; select bank1
  6804  0056  00B7               	movwf	vfpfcnvrt@fp^(0+128)
  6805                           
  6806                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 670: static int vfpfcn
      +                          vrt(FILE *fp, char *fmt[], va_list ap);K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\c
      +                          ommon\doprnt.c: 671: {;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 
      +                          672:     char c, *cp, ct[3];;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\dopr
      +                          nt.c: 673:     int done, i;;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprn
      +                          t.c: 674:     long long ll;;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprn
      +                          t.c: 675:     unsigned long long llu;
  6807  0057  0020               	movlb	0	; select bank0
  6808  0058  0853               	movf	vfpfcnvrt@fmt,w
  6809  0059  0086               	movwf	6
  6810  005A  0187               	clrf	7
  6811  005B  3F40               	moviw [0]fsr1
  6812  005C  00D5               	movwf	??_vfpfcnvrt
  6813  005D  3F41               	moviw [1]fsr1
  6814  005E  00D6               	movwf	??_vfpfcnvrt+1
  6815  005F  0855               	movf	??_vfpfcnvrt,w
  6816  0060  0084               	movwf	4
  6817  0061  0856               	movf	??_vfpfcnvrt+1,w
  6818  0062  0085               	movwf	5
  6819  0063  0012               	moviw fsr0++
  6820  0064  3A25               	xorlw	37
  6821  0065  1D03               	btfss	3,2
  6822  0066  2A82               	goto	l3568
  6823                           
  6824                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 681:         ++*fmt;
  6825  0067  0853               	movf	vfpfcnvrt@fmt,w
  6826  0068  0086               	movwf	6
  6827  0069  0187               	clrf	7
  6828  006A  3001               	movlw	1
  6829  006B  0781               	addwf	1,f
  6830  006C  3141               	addfsr 1,1
  6831  006D  1803               	skipnc
  6832  006E  0A81               	incf	1,f
  6833                           
  6834                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 683:         flags = w
      +                          idth = 0;
  6835  006F  0021               	movlb	1	; select bank1
  6836  0070  01D8               	clrf	_width^(0+128)
  6837  0071  01D9               	clrf	(_width+1)^(0+128)
  6838  0072  0020               	movlb	0	; select bank0
  6839  0073  01ED               	clrf	_flags
  6840  0074  01EE               	clrf	_flags+1
  6841                           
  6842                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 684:         prec = -1
      +                          ;
  6843  0075  30FF               	movlw	255
  6844  0076  0021               	movlb	1	; select bank1
  6845  0077  00DA               	movwf	_prec^(0+128)
  6846  0078  30FF               	movlw	255
  6847  0079  00DB               	movwf	(_prec^(0+128)+1)
  6848                           
  6849                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 688:         done = 0;
  6850  007A  01B3               	clrf	vfpfcnvrt@done^(0+128)
  6851  007B  01B4               	clrf	(vfpfcnvrt@done+1)^(0+128)
  6852                           
  6853                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 689:         while (!d
      +                          one) {
  6854  007C  2894               	goto	l3490
  6855  007D                     l559:	
  6856                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 691:                 c
      +                          ase '-' :
  6857                           
  6858                           
  6859                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 692:                  
      +                             flags |= (1 << 0);
  6860  007D  146D               	bsf	_flags,0
  6861  007E                     l3474:	
  6862                           
  6863                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 693:                  
      +                             ++*fmt;
  6864  007E  0853               	movf	vfpfcnvrt@fmt,w
  6865  007F  0086               	movwf	6
  6866  0080  0187               	clrf	7
  6867  0081  3001               	movlw	1
  6868  0082  0781               	addwf	1,f
  6869  0083  3141               	addfsr 1,1
  6870  0084  1803               	skipnc
  6871  0085  0A81               	incf	1,f
  6872                           
  6873                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 694:                  
      +                             break;
  6874  0086  2894               	goto	l3490
  6875  0087                     l561:	
  6876                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 695:                 c
      +                          ase '0' :
  6877                           
  6878                           
  6879                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 696:                  
      +                             flags |= (1 << 1);
  6880  0087  14ED               	bsf	_flags,1
  6881  0088  287E               	goto	l3474
  6882  0089                     l562:	
  6883                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 699:                 c
      +                          ase '+' :
  6884                           
  6885                           
  6886                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 700:                  
      +                             flags |= (1 << 2);
  6887  0089  156D               	bsf	_flags,2
  6888  008A  287E               	goto	l3474
  6889  008B                     l563:	
  6890                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 703:                 c
      +                          ase ' ' :
  6891                           
  6892                           
  6893                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 704:                  
      +                             flags |= (1 << 3);
  6894  008B  15ED               	bsf	_flags,3
  6895  008C  287E               	goto	l3474
  6896  008D                     l564:	
  6897                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 707:                 c
      +                          ase '#' :
  6898                           
  6899                           
  6900                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 708:                  
      +                             flags |= (1 << 4);
  6901  008D  166D               	bsf	_flags,4
  6902  008E  287E               	goto	l3474
  6903  008F                     l3484:	
  6904                           
  6905                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 712:                  
      +                             done = 1;
  6906  008F  3001               	movlw	1
  6907  0090  0021               	movlb	1	; select bank1
  6908  0091  00B3               	movwf	vfpfcnvrt@done^(0+128)
  6909  0092  3000               	movlw	0
  6910  0093  00B4               	movwf	(vfpfcnvrt@done^(0+128)+1)
  6911  0094                     l3490:	
  6912                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 713:                  
      +                             break;
  6913                           
  6914                           
  6915                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 689:         while (!d
      +                          one) {
  6916  0094  0021               	movlb	1	; select bank1
  6917  0095  0833               	movf	vfpfcnvrt@done^(0+128),w
  6918  0096  0434               	iorwf	(vfpfcnvrt@done+1)^(0+128),w
  6919  0097  1D03               	btfss	3,2
  6920  0098  28BF               	goto	l566
  6921  0099  0020               	movlb	0	; select bank0
  6922  009A  0853               	movf	vfpfcnvrt@fmt,w
  6923  009B  0086               	movwf	6
  6924  009C  0187               	clrf	7
  6925  009D  3F40               	moviw [0]fsr1
  6926  009E  00D5               	movwf	??_vfpfcnvrt
  6927  009F  3F41               	moviw [1]fsr1
  6928  00A0  00D6               	movwf	??_vfpfcnvrt+1
  6929  00A1  0855               	movf	??_vfpfcnvrt,w
  6930  00A2  0084               	movwf	4
  6931  00A3  0856               	movf	??_vfpfcnvrt+1,w
  6932  00A4  0085               	movwf	5
  6933  00A5  0800               	movf	0,w	;code access
  6934  00A6  00D7               	movwf	??_vfpfcnvrt+2
  6935  00A7  01D8               	clrf	??_vfpfcnvrt+3
  6936                           
  6937                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6938                           ; Switch size 1, requested type "simple"
  6939                           ; Number of cases is 1, Range of values is 0 to 0
  6940                           ; switch strategies available:
  6941                           ; Name         Instructions Cycles
  6942                           ; simple_byte            4     3 (average)
  6943                           ; direct_byte            8     6 (fixed)
  6944                           ; jumptable            260     6 (fixed)
  6945                           ;	Chosen strategy is simple_byte
  6946  00A8  0858               	movf	??_vfpfcnvrt+3,w
  6947  00A9  3A00               	xorlw	0	; case 0
  6948  00AA  1903               	skipnz
  6949  00AB  28AD               	goto	l3896
  6950  00AC  288F               	goto	l3484
  6951  00AD                     l3896:	
  6952                           
  6953                           ; Switch size 1, requested type "simple"
  6954                           ; Number of cases is 5, Range of values is 32 to 48
  6955                           ; switch strategies available:
  6956                           ; Name         Instructions Cycles
  6957                           ; simple_byte           16     9 (average)
  6958                           ; direct_byte           43     9 (fixed)
  6959                           ; jumptable            263     9 (fixed)
  6960                           ;	Chosen strategy is simple_byte
  6961  00AD  0857               	movf	??_vfpfcnvrt+2,w
  6962  00AE  3A20               	xorlw	32	; case 32
  6963  00AF  1903               	skipnz
  6964  00B0  288B               	goto	l563
  6965  00B1  3A03               	xorlw	3	; case 35
  6966  00B2  1903               	skipnz
  6967  00B3  288D               	goto	l564
  6968  00B4  3A08               	xorlw	8	; case 43
  6969  00B5  1903               	skipnz
  6970  00B6  2889               	goto	l562
  6971  00B7  3A06               	xorlw	6	; case 45
  6972  00B8  1903               	skipnz
  6973  00B9  287D               	goto	l559
  6974  00BA  3A1D               	xorlw	29	; case 48
  6975  00BB  1903               	skipnz
  6976  00BC  2887               	goto	l561
  6977  00BD  288F               	goto	l3484
  6978  00BE  2894               	goto	l3490
  6979  00BF                     l566:	
  6980                           
  6981                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 716:         if (flags
      +                           & (1 << 0)) {
  6982  00BF  0020               	movlb	0	; select bank0
  6983  00C0  1C6D               	btfss	_flags,0
  6984  00C1  28C6               	goto	l3494
  6985                           
  6986                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 717:             flags
      +                           &= ~(1 << 1);
  6987  00C2  30FD               	movlw	253
  6988  00C3  05ED               	andwf	_flags,f
  6989  00C4  30FF               	movlw	255
  6990  00C5  05EE               	andwf	_flags+1,f
  6991  00C6                     l3494:	
  6992                           
  6993                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 723:         if ((*fmt
      +                          )[0] == '*') {
  6994  00C6  0853               	movf	vfpfcnvrt@fmt,w
  6995  00C7  0086               	movwf	6
  6996  00C8  0187               	clrf	7
  6997  00C9  3F40               	moviw [0]fsr1
  6998  00CA  00D5               	movwf	??_vfpfcnvrt
  6999  00CB  3F41               	moviw [1]fsr1
  7000  00CC  00D6               	movwf	??_vfpfcnvrt+1
  7001  00CD  0855               	movf	??_vfpfcnvrt,w
  7002  00CE  0084               	movwf	4
  7003  00CF  0856               	movf	??_vfpfcnvrt+1,w
  7004  00D0  0085               	movwf	5
  7005  00D1  0012               	moviw fsr0++
  7006  00D2  3A2A               	xorlw	42
  7007  00D3  1D03               	btfss	3,2
  7008  00D4  28F5               	goto	l3506
  7009                           
  7010                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 724:             ++*fm
      +                          t;
  7011  00D5  0853               	movf	vfpfcnvrt@fmt,w
  7012  00D6  0086               	movwf	6
  7013  00D7  0187               	clrf	7
  7014  00D8  3001               	movlw	1
  7015  00D9  0781               	addwf	1,f
  7016  00DA  3141               	addfsr 1,1
  7017  00DB  1803               	skipnc
  7018  00DC  0A81               	incf	1,f
  7019                           
  7020                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 725:             width
      +                           = (*(int *)__va_arg(*(int **)ap, (int)0));
  7021  00DD  0854               	movf	vfpfcnvrt@ap,w
  7022  00DE  0086               	movwf	6
  7023  00DF  0187               	clrf	7
  7024  00E0  0801               	movf	1,w
  7025  00E1  0084               	movwf	4
  7026  00E2  0185               	clrf	5
  7027  00E3  3002               	movlw	2
  7028  00E4  0781               	addwf	1,f
  7029  00E5  3F00               	moviw [0]fsr0
  7030  00E6  0021               	movlb	1	; select bank1
  7031  00E7  00D8               	movwf	_width^(0+128)
  7032  00E8  3F01               	moviw [1]fsr0
  7033  00E9  00D9               	movwf	(_width+1)^(0+128)
  7034                           
  7035                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 726:             if (w
      +                          idth < 0) {
  7036  00EA  1FD9               	btfss	(_width+1)^(0+128),7
  7037  00EB  2938               	goto	l3516
  7038                           
  7039                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 727:                 f
      +                          lags |= (1 << 0);
  7040  00EC  0020               	movlb	0	; select bank0
  7041  00ED  146D               	bsf	_flags,0
  7042                           
  7043                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 728:                 w
      +                          idth = -width;
  7044  00EE  0021               	movlb	1	; select bank1
  7045  00EF  09D8               	comf	_width^(0+128),f
  7046  00F0  09D9               	comf	(_width+1)^(0+128),f
  7047  00F1  0AD8               	incf	_width^(0+128),f
  7048  00F2  1903               	skipnz
  7049  00F3  0AD9               	incf	(_width+1)^(0+128),f
  7050  00F4  2938               	goto	l3516
  7051  00F5                     l3506:	
  7052                           
  7053                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 731:             width
      +                           = atoi(*fmt);
  7054  00F5  0853               	movf	vfpfcnvrt@fmt,w
  7055  00F6  0086               	movwf	6
  7056  00F7  0187               	clrf	7
  7057  00F8  3F40               	moviw [0]fsr1
  7058  00F9  00F6               	movwf	atoi@s
  7059  00FA  3F41               	moviw [1]fsr1
  7060  00FB  00F7               	movwf	atoi@s+1
  7061  00FC  318D  25C0  3180   	fcall	_atoi
  7062  00FF  0877               	movf	?_atoi+1,w
  7063  0100  0021               	movlb	1	; select bank1
  7064  0101  00D9               	movwf	(_width+1)^(0+128)
  7065  0102  0876               	movf	?_atoi,w
  7066  0103  00D8               	movwf	_width^(0+128)
  7067                           
  7068                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 732:             while
      +                           ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  7069  0104  290E               	goto	l3510
  7070  0105                     l3508:	
  7071                           
  7072                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 733:                 +
      +                          +*fmt;
  7073  0105  0020               	movlb	0	; select bank0
  7074  0106  0853               	movf	vfpfcnvrt@fmt,w
  7075  0107  0086               	movwf	6
  7076  0108  0187               	clrf	7
  7077  0109  3001               	movlw	1
  7078  010A  0781               	addwf	1,f
  7079  010B  3141               	addfsr 1,1
  7080  010C  1803               	skipnc
  7081  010D  0A81               	incf	1,f
  7082  010E                     l3510:	
  7083  010E  0020               	movlb	0	; select bank0
  7084  010F  0853               	movf	vfpfcnvrt@fmt,w
  7085  0110  0086               	movwf	6
  7086  0111  0187               	clrf	7
  7087  0112  3F40               	moviw [0]fsr1
  7088  0113  00D5               	movwf	??_vfpfcnvrt
  7089  0114  3F41               	moviw [1]fsr1
  7090  0115  00D6               	movwf	??_vfpfcnvrt+1
  7091  0116  0855               	movf	??_vfpfcnvrt,w
  7092  0117  0084               	movwf	4
  7093  0118  0856               	movf	??_vfpfcnvrt+1,w
  7094  0119  0085               	movwf	5
  7095  011A  0800               	movf	0,w	;code access
  7096  011B  3ED0               	addlw	208
  7097  011C  00D7               	movwf	??_vfpfcnvrt+2
  7098  011D  30FF               	movlw	255
  7099  011E  1803               	skipnc
  7100  011F  3000               	movlw	0
  7101  0120  00D8               	movwf	??_vfpfcnvrt+3
  7102  0121  3000               	movlw	0
  7103  0122  0258               	subwf	??_vfpfcnvrt+3,w
  7104  0123  300A               	movlw	10
  7105  0124  1903               	skipnz
  7106  0125  0257               	subwf	??_vfpfcnvrt+2,w
  7107  0126  1803               	btfsc	3,0
  7108  0127  292A               	goto	u3550
  7109  0128  3001               	movlw	1
  7110  0129  292B               	goto	u3560
  7111  012A                     u3550:	
  7112  012A  3000               	movlw	0
  7113  012B                     u3560:	
  7114  012B  00D9               	movwf	??_vfpfcnvrt+4
  7115  012C  01DA               	clrf	??_vfpfcnvrt+5
  7116  012D  0859               	movf	??_vfpfcnvrt+4,w
  7117  012E  0021               	movlb	1	; select bank1
  7118  012F  00B5               	movwf	_vfpfcnvrt$660^(0+128)
  7119  0130  0020               	movlb	0	; select bank0
  7120  0131  085A               	movf	??_vfpfcnvrt+5,w
  7121  0132  0021               	movlb	1	; select bank1
  7122  0133  00B6               	movwf	(_vfpfcnvrt$660+1)^(0+128)
  7123  0134  0835               	movf	_vfpfcnvrt$660^(0+128),w
  7124  0135  0436               	iorwf	(_vfpfcnvrt$660+1)^(0+128),w
  7125  0136  1D03               	btfss	3,2
  7126  0137  2905               	goto	l3508
  7127  0138                     l3516:	
  7128                           
  7129                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 825:         if ((*fmt
      +                          [0] == 'd') || (*fmt[0] == 'i')) {
  7130  0138  0020               	movlb	0	; select bank0
  7131  0139  0853               	movf	vfpfcnvrt@fmt,w
  7132  013A  0086               	movwf	6
  7133  013B  0187               	clrf	7
  7134  013C  3F40               	moviw [0]fsr1
  7135  013D  00D5               	movwf	??_vfpfcnvrt
  7136  013E  3F41               	moviw [1]fsr1
  7137  013F  00D6               	movwf	??_vfpfcnvrt+1
  7138  0140  0855               	movf	??_vfpfcnvrt,w
  7139  0141  0084               	movwf	4
  7140  0142  0856               	movf	??_vfpfcnvrt+1,w
  7141  0143  0085               	movwf	5
  7142  0144  0012               	moviw fsr0++
  7143  0145  3A64               	xorlw	100
  7144  0146  1903               	btfsc	3,2
  7145  0147  2957               	goto	l3520
  7146  0148  0853               	movf	vfpfcnvrt@fmt,w
  7147  0149  0086               	movwf	6
  7148  014A  0187               	clrf	7
  7149  014B  3F40               	moviw [0]fsr1
  7150  014C  00D5               	movwf	??_vfpfcnvrt
  7151  014D  3F41               	moviw [1]fsr1
  7152  014E  00D6               	movwf	??_vfpfcnvrt+1
  7153  014F  0855               	movf	??_vfpfcnvrt,w
  7154  0150  0084               	movwf	4
  7155  0151  0856               	movf	??_vfpfcnvrt+1,w
  7156  0152  0085               	movwf	5
  7157  0153  0012               	moviw fsr0++
  7158  0154  3A69               	xorlw	105
  7159  0155  1D03               	btfss	3,2
  7160  0156  29A4               	goto	l3528
  7161  0157                     l3520:	
  7162                           
  7163                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 827:             ++*fm
      +                          t;
  7164  0157  0853               	movf	vfpfcnvrt@fmt,w
  7165  0158  0086               	movwf	6
  7166  0159  0187               	clrf	7
  7167  015A  3001               	movlw	1
  7168  015B  0781               	addwf	1,f
  7169  015C  3141               	addfsr 1,1
  7170  015D  1803               	skipnc
  7171  015E  0A81               	incf	1,f
  7172                           
  7173                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 828:             ll = 
      +                          (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  7174  015F  0854               	movf	vfpfcnvrt@ap,w
  7175  0160  0086               	movwf	6
  7176  0161  0187               	clrf	7
  7177  0162  0801               	movf	1,w
  7178  0163  0084               	movwf	4
  7179  0164  0185               	clrf	5
  7180  0165  3002               	movlw	2
  7181  0166  0781               	addwf	1,f
  7182  0167  3F00               	moviw [0]fsr0
  7183  0168  00D5               	movwf	??_vfpfcnvrt
  7184  0169  3F01               	moviw [1]fsr0
  7185  016A  00D6               	movwf	??_vfpfcnvrt+1
  7186  016B  0855               	movf	??_vfpfcnvrt,w
  7187  016C  0021               	movlb	1	; select bank1
  7188  016D  00A0               	movwf	vfpfcnvrt@ll^(0+128)
  7189  016E  0020               	movlb	0	; select bank0
  7190  016F  0856               	movf	??_vfpfcnvrt+1,w
  7191  0170  0021               	movlb	1	; select bank1
  7192  0171  00A1               	movwf	(vfpfcnvrt@ll+1)^(0+128)
  7193  0172  0D89               	rlf	9,f
  7194  0173  3B89               	subwfb	9,f
  7195  0174  0989               	comf	9,f
  7196  0175  00A2               	movwf	(vfpfcnvrt@ll+2)^(0+128)
  7197  0176  00A3               	movwf	(vfpfcnvrt@ll+3)^(0+128)
  7198  0177  00A4               	movwf	(vfpfcnvrt@ll+4)^(0+128)
  7199  0178  00A5               	movwf	(vfpfcnvrt@ll+5)^(0+128)
  7200  0179  00A6               	movwf	(vfpfcnvrt@ll+6)^(0+128)
  7201  017A  00A7               	movwf	(vfpfcnvrt@ll+7)^(0+128)
  7202                           
  7203                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 830:             retur
      +                          n dtoa(fp, ll);
  7204  017B  0820               	movf	vfpfcnvrt@ll^(0+128),w
  7205  017C  0020               	movlb	0	; select bank0
  7206  017D  00B0               	movwf	dtoa@d
  7207  017E  0021               	movlb	1	; select bank1
  7208  017F  0821               	movf	(vfpfcnvrt@ll+1)^(0+128),w
  7209  0180  0020               	movlb	0	; select bank0
  7210  0181  00B1               	movwf	dtoa@d+1
  7211  0182  0021               	movlb	1	; select bank1
  7212  0183  0822               	movf	(vfpfcnvrt@ll+2)^(0+128),w
  7213  0184  0020               	movlb	0	; select bank0
  7214  0185  00B2               	movwf	dtoa@d+2
  7215  0186  0021               	movlb	1	; select bank1
  7216  0187  0823               	movf	(vfpfcnvrt@ll+3)^(0+128),w
  7217  0188  0020               	movlb	0	; select bank0
  7218  0189  00B3               	movwf	dtoa@d+3
  7219  018A  0021               	movlb	1	; select bank1
  7220  018B  0824               	movf	(vfpfcnvrt@ll+4)^(0+128),w
  7221  018C  0020               	movlb	0	; select bank0
  7222  018D  00B4               	movwf	dtoa@d+4
  7223  018E  0021               	movlb	1	; select bank1
  7224  018F  0825               	movf	(vfpfcnvrt@ll+5)^(0+128),w
  7225  0190  0020               	movlb	0	; select bank0
  7226  0191  00B5               	movwf	dtoa@d+5
  7227  0192  0021               	movlb	1	; select bank1
  7228  0193  0826               	movf	(vfpfcnvrt@ll+6)^(0+128),w
  7229  0194  0020               	movlb	0	; select bank0
  7230  0195  00B6               	movwf	dtoa@d+6
  7231  0196  0021               	movlb	1	; select bank1
  7232  0197  0827               	movf	(vfpfcnvrt@ll+7)^(0+128),w
  7233  0198  0020               	movlb	0	; select bank0
  7234  0199  00B7               	movwf	dtoa@d+7
  7235  019A  0021               	movlb	1	; select bank1
  7236  019B  0837               	movf	vfpfcnvrt@fp^(0+128),w
  7237  019C  3183  23FC         	fcall	_dtoa
  7238  019E  0020               	movlb	0	; select bank0
  7239  019F  0831               	movf	?_dtoa+1,w
  7240  01A0  00D4               	movwf	?_vfpfcnvrt+1
  7241  01A1  0830               	movf	?_dtoa,w
  7242  01A2  00D3               	movwf	?_vfpfcnvrt
  7243  01A3  0008               	return
  7244  01A4                     l3528:	
  7245                           
  7246                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 1149:         if (*fmt
      +                          [0] == 's') {
  7247  01A4  0853               	movf	vfpfcnvrt@fmt,w
  7248  01A5  0086               	movwf	6
  7249  01A6  0187               	clrf	7
  7250  01A7  3F40               	moviw [0]fsr1
  7251  01A8  00D5               	movwf	??_vfpfcnvrt
  7252  01A9  3F41               	moviw [1]fsr1
  7253  01AA  00D6               	movwf	??_vfpfcnvrt+1
  7254  01AB  0855               	movf	??_vfpfcnvrt,w
  7255  01AC  0084               	movwf	4
  7256  01AD  0856               	movf	??_vfpfcnvrt+1,w
  7257  01AE  0085               	movwf	5
  7258  01AF  0012               	moviw fsr0++
  7259  01B0  3A73               	xorlw	115
  7260  01B1  1D03               	btfss	3,2
  7261  01B2  29D5               	goto	l3538
  7262                           
  7263                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 1151:             ++*f
      +                          mt;
  7264  01B3  0853               	movf	vfpfcnvrt@fmt,w
  7265  01B4  0086               	movwf	6
  7266  01B5  0187               	clrf	7
  7267  01B6  3001               	movlw	1
  7268  01B7  0781               	addwf	1,f
  7269  01B8  3141               	addfsr 1,1
  7270  01B9  1803               	skipnc
  7271  01BA  0A81               	incf	1,f
  7272                           
  7273                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 1152:             cp =
      +                           (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  7274  01BB  0854               	movf	vfpfcnvrt@ap,w
  7275  01BC  0086               	movwf	6
  7276  01BD  0187               	clrf	7
  7277  01BE  0801               	movf	1,w
  7278  01BF  0084               	movwf	4
  7279  01C0  0185               	clrf	5
  7280  01C1  3002               	movlw	2
  7281  01C2  0781               	addwf	1,f
  7282  01C3  3F00               	moviw [0]fsr0
  7283  01C4  0021               	movlb	1	; select bank1
  7284  01C5  00B0               	movwf	vfpfcnvrt@cp^(0+128)
  7285  01C6  3F01               	moviw [1]fsr0
  7286  01C7  00B1               	movwf	(vfpfcnvrt@cp+1)^(0+128)
  7287                           
  7288                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 1154:             retu
      +                          rn stoa(fp, cp);
  7289  01C8  0831               	movf	(vfpfcnvrt@cp+1)^(0+128),w
  7290  01C9  00FB               	movwf	stoa@s+1
  7291  01CA  0830               	movf	vfpfcnvrt@cp^(0+128),w
  7292  01CB  00FA               	movwf	stoa@s
  7293  01CC  0837               	movf	vfpfcnvrt@fp^(0+128),w
  7294  01CD  318E  2661         	fcall	_stoa
  7295  01CF  087B               	movf	?_stoa+1,w
  7296  01D0  0020               	movlb	0	; select bank0
  7297  01D1  00D4               	movwf	?_vfpfcnvrt+1
  7298  01D2  087A               	movf	?_stoa,w
  7299  01D3  00D3               	movwf	?_vfpfcnvrt
  7300  01D4  0008               	return
  7301  01D5                     l3538:	
  7302                           
  7303                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 1274:         if ((*fm
      +                          t[0] == 'x') || (*fmt[0] == 'X')) {
  7304  01D5  0853               	movf	vfpfcnvrt@fmt,w
  7305  01D6  0086               	movwf	6
  7306  01D7  0187               	clrf	7
  7307  01D8  3F40               	moviw [0]fsr1
  7308  01D9  00D5               	movwf	??_vfpfcnvrt
  7309  01DA  3F41               	moviw [1]fsr1
  7310  01DB  00D6               	movwf	??_vfpfcnvrt+1
  7311  01DC  0855               	movf	??_vfpfcnvrt,w
  7312  01DD  0084               	movwf	4
  7313  01DE  0856               	movf	??_vfpfcnvrt+1,w
  7314  01DF  0085               	movwf	5
  7315  01E0  0012               	moviw fsr0++
  7316  01E1  3A78               	xorlw	120
  7317  01E2  1903               	btfsc	3,2
  7318  01E3  29F3               	goto	l3542
  7319  01E4  0853               	movf	vfpfcnvrt@fmt,w
  7320  01E5  0086               	movwf	6
  7321  01E6  0187               	clrf	7
  7322  01E7  3F40               	moviw [0]fsr1
  7323  01E8  00D5               	movwf	??_vfpfcnvrt
  7324  01E9  3F41               	moviw [1]fsr1
  7325  01EA  00D6               	movwf	??_vfpfcnvrt+1
  7326  01EB  0855               	movf	??_vfpfcnvrt,w
  7327  01EC  0084               	movwf	4
  7328  01ED  0856               	movf	??_vfpfcnvrt+1,w
  7329  01EE  0085               	movwf	5
  7330  01EF  0012               	moviw fsr0++
  7331  01F0  3A58               	xorlw	88
  7332  01F1  1D03               	btfss	3,2
  7333  01F2  2A4E               	goto	l3552
  7334  01F3                     l3542:	
  7335                           
  7336                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 1276:             c = 
      +                          (*fmt)[0];
  7337  01F3  0853               	movf	vfpfcnvrt@fmt,w
  7338  01F4  0086               	movwf	6
  7339  01F5  0187               	clrf	7
  7340  01F6  3F40               	moviw [0]fsr1
  7341  01F7  00D5               	movwf	??_vfpfcnvrt
  7342  01F8  3F41               	moviw [1]fsr1
  7343  01F9  00D6               	movwf	??_vfpfcnvrt+1
  7344  01FA  0855               	movf	??_vfpfcnvrt,w
  7345  01FB  0084               	movwf	4
  7346  01FC  0856               	movf	??_vfpfcnvrt+1,w
  7347  01FD  0085               	movwf	5
  7348  01FE  0800               	movf	0,w	;code access
  7349  01FF  00D7               	movwf	??_vfpfcnvrt+2
  7350  0200  0857               	movf	??_vfpfcnvrt+2,w
  7351  0201  0021               	movlb	1	; select bank1
  7352  0202  00B2               	movwf	vfpfcnvrt@c^(0+128)
  7353                           
  7354                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 1277:             ++*f
      +                          mt;
  7355  0203  0020               	movlb	0	; select bank0
  7356  0204  0853               	movf	vfpfcnvrt@fmt,w
  7357  0205  0086               	movwf	6
  7358  0206  0187               	clrf	7
  7359  0207  3001               	movlw	1
  7360  0208  0781               	addwf	1,f
  7361  0209  3141               	addfsr 1,1
  7362  020A  1803               	skipnc
  7363  020B  0A81               	incf	1,f
  7364                           
  7365                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 1278:             llu 
      +                          = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0))
      +                          ;
  7366  020C  0854               	movf	vfpfcnvrt@ap,w
  7367  020D  0086               	movwf	6
  7368  020E  0187               	clrf	7
  7369  020F  0801               	movf	1,w
  7370  0210  0084               	movwf	4
  7371  0211  0185               	clrf	5
  7372  0212  3002               	movlw	2
  7373  0213  0781               	addwf	1,f
  7374  0214  3F00               	moviw [0]fsr0
  7375  0215  0021               	movlb	1	; select bank1
  7376  0216  00A8               	movwf	vfpfcnvrt@llu^(0+128)
  7377  0217  3F01               	moviw [1]fsr0
  7378  0218  00A9               	movwf	(vfpfcnvrt@llu+1)^(0+128)
  7379  0219  01AA               	clrf	(vfpfcnvrt@llu+2)^(0+128)
  7380  021A  01AB               	clrf	(vfpfcnvrt@llu+3)^(0+128)
  7381  021B  01AC               	clrf	(vfpfcnvrt@llu+4)^(0+128)
  7382  021C  01AD               	clrf	(vfpfcnvrt@llu+5)^(0+128)
  7383  021D  01AE               	clrf	(vfpfcnvrt@llu+6)^(0+128)
  7384  021E  01AF               	clrf	(vfpfcnvrt@llu+7)^(0+128)
  7385                           
  7386                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 1280:             retu
      +                          rn xtoa(fp, llu, c);
  7387  021F  0828               	movf	vfpfcnvrt@llu^(0+128),w
  7388  0220  0020               	movlb	0	; select bank0
  7389  0221  00AD               	movwf	xtoa@d
  7390  0222  0021               	movlb	1	; select bank1
  7391  0223  0829               	movf	(vfpfcnvrt@llu+1)^(0+128),w
  7392  0224  0020               	movlb	0	; select bank0
  7393  0225  00AE               	movwf	xtoa@d+1
  7394  0226  0021               	movlb	1	; select bank1
  7395  0227  082A               	movf	(vfpfcnvrt@llu+2)^(0+128),w
  7396  0228  0020               	movlb	0	; select bank0
  7397  0229  00AF               	movwf	xtoa@d+2
  7398  022A  0021               	movlb	1	; select bank1
  7399  022B  082B               	movf	(vfpfcnvrt@llu+3)^(0+128),w
  7400  022C  0020               	movlb	0	; select bank0
  7401  022D  00B0               	movwf	xtoa@d+3
  7402  022E  0021               	movlb	1	; select bank1
  7403  022F  082C               	movf	(vfpfcnvrt@llu+4)^(0+128),w
  7404  0230  0020               	movlb	0	; select bank0
  7405  0231  00B1               	movwf	xtoa@d+4
  7406  0232  0021               	movlb	1	; select bank1
  7407  0233  082D               	movf	(vfpfcnvrt@llu+5)^(0+128),w
  7408  0234  0020               	movlb	0	; select bank0
  7409  0235  00B2               	movwf	xtoa@d+5
  7410  0236  0021               	movlb	1	; select bank1
  7411  0237  082E               	movf	(vfpfcnvrt@llu+6)^(0+128),w
  7412  0238  0020               	movlb	0	; select bank0
  7413  0239  00B3               	movwf	xtoa@d+6
  7414  023A  0021               	movlb	1	; select bank1
  7415  023B  082F               	movf	(vfpfcnvrt@llu+7)^(0+128),w
  7416  023C  0020               	movlb	0	; select bank0
  7417  023D  00B4               	movwf	xtoa@d+7
  7418  023E  0021               	movlb	1	; select bank1
  7419  023F  0832               	movf	vfpfcnvrt@c^(0+128),w
  7420  0240  0020               	movlb	0	; select bank0
  7421  0241  00D5               	movwf	??_vfpfcnvrt
  7422  0242  0855               	movf	??_vfpfcnvrt,w
  7423  0243  00B5               	movwf	xtoa@x
  7424  0244  0021               	movlb	1	; select bank1
  7425  0245  0837               	movf	vfpfcnvrt@fp^(0+128),w
  7426  0246  3182  22A7         	fcall	_xtoa
  7427  0248  0020               	movlb	0	; select bank0
  7428  0249  082E               	movf	?_xtoa+1,w
  7429  024A  00D4               	movwf	?_vfpfcnvrt+1
  7430  024B  082D               	movf	?_xtoa,w
  7431  024C  00D3               	movwf	?_vfpfcnvrt
  7432  024D  0008               	return
  7433  024E                     l3552:	
  7434                           
  7435                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 1350:         if ((*fm
      +                          t)[0] == '%') {
  7436  024E  0853               	movf	vfpfcnvrt@fmt,w
  7437  024F  0086               	movwf	6
  7438  0250  0187               	clrf	7
  7439  0251  3F40               	moviw [0]fsr1
  7440  0252  00D5               	movwf	??_vfpfcnvrt
  7441  0253  3F41               	moviw [1]fsr1
  7442  0254  00D6               	movwf	??_vfpfcnvrt+1
  7443  0255  0855               	movf	??_vfpfcnvrt,w
  7444  0256  0084               	movwf	4
  7445  0257  0856               	movf	??_vfpfcnvrt+1,w
  7446  0258  0085               	movwf	5
  7447  0259  0012               	moviw fsr0++
  7448  025A  3A25               	xorlw	37
  7449  025B  1D03               	btfss	3,2
  7450  025C  2A77               	goto	l3562
  7451                           
  7452                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 1351:             ++*f
      +                          mt;
  7453  025D  0853               	movf	vfpfcnvrt@fmt,w
  7454  025E  0086               	movwf	6
  7455  025F  0187               	clrf	7
  7456  0260  3001               	movlw	1
  7457  0261  0781               	addwf	1,f
  7458  0262  3141               	addfsr 1,1
  7459  0263  1803               	skipnc
  7460  0264  0A81               	incf	1,f
  7461                           
  7462                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 1352:             fput
      +                          c((int)'%', fp);
  7463  0265  3025               	movlw	37
  7464  0266  00F2               	movwf	fputc@c
  7465  0267  3000               	movlw	0
  7466  0268  00F3               	movwf	fputc@c+1
  7467  0269  0021               	movlb	1	; select bank1
  7468  026A  0837               	movf	vfpfcnvrt@fp^(0+128),w
  7469  026B  0020               	movlb	0	; select bank0
  7470  026C  00D5               	movwf	??_vfpfcnvrt
  7471  026D  0855               	movf	??_vfpfcnvrt,w
  7472  026E  00F4               	movwf	fputc@fp
  7473  026F  318B  23D1         	fcall	_fputc
  7474  0271                     l3558:	
  7475                           
  7476                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 1353:             retu
      +                          rn 1;
  7477  0271  3001               	movlw	1
  7478  0272  0020               	movlb	0	; select bank0
  7479  0273  00D3               	movwf	?_vfpfcnvrt
  7480  0274  3000               	movlw	0
  7481  0275  00D4               	movwf	?_vfpfcnvrt+1
  7482  0276  0008               	return
  7483  0277                     l3562:	
  7484                           
  7485                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 1357:         ++*fmt;
  7486  0277  0853               	movf	vfpfcnvrt@fmt,w
  7487  0278  0086               	movwf	6
  7488  0279  0187               	clrf	7
  7489  027A  3001               	movlw	1
  7490  027B  0781               	addwf	1,f
  7491  027C  3141               	addfsr 1,1
  7492  027D  1803               	skipnc
  7493  027E  0A81               	incf	1,f
  7494                           
  7495                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 1358:         return 0
      +                          ;
  7496  027F  01D3               	clrf	?_vfpfcnvrt
  7497  0280  01D4               	clrf	?_vfpfcnvrt+1
  7498  0281  0008               	return
  7499  0282                     l3568:	
  7500                           
  7501                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 1362:     fputc((int)(
      +                          *fmt)[0], fp);
  7502  0282  0853               	movf	vfpfcnvrt@fmt,w
  7503  0283  0086               	movwf	6
  7504  0284  0187               	clrf	7
  7505  0285  3F40               	moviw [0]fsr1
  7506  0286  00D5               	movwf	??_vfpfcnvrt
  7507  0287  3F41               	moviw [1]fsr1
  7508  0288  00D6               	movwf	??_vfpfcnvrt+1
  7509  0289  0855               	movf	??_vfpfcnvrt,w
  7510  028A  0084               	movwf	4
  7511  028B  0856               	movf	??_vfpfcnvrt+1,w
  7512  028C  0085               	movwf	5
  7513  028D  0800               	movf	0,w	;code access
  7514  028E  00D7               	movwf	??_vfpfcnvrt+2
  7515  028F  01D8               	clrf	??_vfpfcnvrt+3
  7516  0290  0857               	movf	??_vfpfcnvrt+2,w
  7517  0291  00F2               	movwf	fputc@c
  7518  0292  0858               	movf	??_vfpfcnvrt+3,w
  7519  0293  00F3               	movwf	fputc@c+1
  7520  0294  0021               	movlb	1	; select bank1
  7521  0295  0837               	movf	vfpfcnvrt@fp^(0+128),w
  7522  0296  0020               	movlb	0	; select bank0
  7523  0297  00D9               	movwf	??_vfpfcnvrt+4
  7524  0298  0859               	movf	??_vfpfcnvrt+4,w
  7525  0299  00F4               	movwf	fputc@fp
  7526  029A  318B  23D1  3180   	fcall	_fputc
  7527                           
  7528                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 1363:     ++*fmt;
  7529  029D  0020               	movlb	0	; select bank0
  7530  029E  0853               	movf	vfpfcnvrt@fmt,w
  7531  029F  0086               	movwf	6
  7532  02A0  0187               	clrf	7
  7533  02A1  3001               	movlw	1
  7534  02A2  0781               	addwf	1,f
  7535  02A3  3141               	addfsr 1,1
  7536  02A4  1803               	skipnc
  7537  02A5  0A81               	incf	1,f
  7538  02A6  2A71               	goto	l3558
  7539  02A7                     __end_of_vfpfcnvrt:	
  7540                           
  7541                           	psect	text23
  7542  02A7                     __ptext23:	
  7543 ;; *************** function _xtoa *****************
  7544 ;; Defined at:
  7545 ;;		line 623 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c"
  7546 ;; Parameters:    Size  Location     Type
  7547 ;;  fp              1    wreg     PTR struct _IO_FILE
  7548 ;;		 -> sprintf@f(6), NULL(0), 
  7549 ;;  d               8   13[BANK0 ] unsigned long long 
  7550 ;;  x               1   21[BANK0 ] unsigned char 
  7551 ;; Auto vars:     Size  Location     Type
  7552 ;;  fp              1   30[BANK0 ] PTR struct _IO_FILE
  7553 ;;		 -> sprintf@f(6), NULL(0), 
  7554 ;;  n               8   39[BANK0 ] unsigned long long 
  7555 ;;  c               2   49[BANK0 ] int 
  7556 ;;  i               2   47[BANK0 ] int 
  7557 ;;  w               2   37[BANK0 ] int 
  7558 ;;  p               2   35[BANK0 ] int 
  7559 ;; Return value:  Size  Location     Type
  7560 ;;                  2   13[BANK0 ] int 
  7561 ;; Registers used:
  7562 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7563 ;; Tracked objects:
  7564 ;;		On entry : 0/0
  7565 ;;		On exit  : 0/0
  7566 ;;		Unchanged: 0/0
  7567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7568 ;;      Params:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7569 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7570 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7571 ;;      Totals:         0      38       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7572 ;;Total ram usage:       38 bytes
  7573 ;; Hardware stack levels used:    1
  7574 ;; Hardware stack levels required when called:    8
  7575 ;; This function calls:
  7576 ;;		_isalpha
  7577 ;;		_isupper
  7578 ;;		_pad
  7579 ;;		_toupper
  7580 ;; This function is called by:
  7581 ;;		_vfpfcnvrt
  7582 ;; This function uses a non-reentrant model
  7583 ;;
  7584                           
  7585                           
  7586                           ;psect for function _xtoa
  7587  02A7                     _xtoa:	
  7588                           
  7589                           ;incstack = 0
  7590                           ; Regs used in _xtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7591                           ;xtoa@fp stored from wreg
  7592  02A7  0020               	movlb	0	; select bank0
  7593  02A8  00BE               	movwf	xtoa@fp
  7594                           
  7595                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 623: static int xtoa(F
      +                          ILE *fp, unsigned long long d, char x);K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\c
      +                          ommon\doprnt.c: 624: {;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 
      +                          625:     int c, i, p, w;;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c
      +                          : 626:     unsigned long long n;;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\
      +                          doprnt.c: 629:     if (!(prec < 0)) {
  7596  02A9  0021               	movlb	1	; select bank1
  7597  02AA  1BDB               	btfsc	(_prec+1)^(0+128),7
  7598  02AB  2AB1               	goto	l525
  7599                           
  7600                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 630:         flags &= 
      +                          ~(1 << 1);
  7601  02AC  30FD               	movlw	253
  7602  02AD  0020               	movlb	0	; select bank0
  7603  02AE  05ED               	andwf	_flags,f
  7604  02AF  30FF               	movlw	255
  7605  02B0  05EE               	andwf	_flags+1,f
  7606  02B1                     l525:	
  7607                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 631:     }
  7608                           
  7609                           
  7610                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 632:     p = (0 < prec
      +                          ) ? prec : 1;
  7611  02B1  0021               	movlb	1	; select bank1
  7612  02B2  085B               	movf	(_prec+1)^(0+128),w
  7613  02B3  3A80               	xorlw	128
  7614  02B4  0020               	movlb	0	; select bank0
  7615  02B5  00B6               	movwf	??_xtoa
  7616  02B6  3080               	movlw	128
  7617  02B7  0236               	subwf	??_xtoa,w
  7618  02B8  1D03               	skipz
  7619  02B9  2ABD               	goto	u3345
  7620  02BA  3001               	movlw	1
  7621  02BB  0021               	movlb	1	; select bank1
  7622  02BC  025A               	subwf	_prec^(0+128),w
  7623  02BD                     u3345:	
  7624  02BD  1803               	skipnc
  7625  02BE  2AC5               	goto	l3406
  7626  02BF  3001               	movlw	1
  7627  02C0  0020               	movlb	0	; select bank0
  7628  02C1  00C3               	movwf	xtoa@p
  7629  02C2  3000               	movlw	0
  7630  02C3  00C4               	movwf	xtoa@p+1
  7631  02C4  2ACD               	goto	l529
  7632  02C5                     l3406:	
  7633  02C5  0021               	movlb	1	; select bank1
  7634  02C6  085B               	movf	(_prec+1)^(0+128),w
  7635  02C7  0020               	movlb	0	; select bank0
  7636  02C8  00C4               	movwf	xtoa@p+1
  7637  02C9  0021               	movlb	1	; select bank1
  7638  02CA  085A               	movf	_prec^(0+128),w
  7639  02CB  0020               	movlb	0	; select bank0
  7640  02CC  00C3               	movwf	xtoa@p
  7641  02CD                     l529:	
  7642                           
  7643                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 633:     w = width;
  7644  02CD  0021               	movlb	1	; select bank1
  7645  02CE  0859               	movf	(_width+1)^(0+128),w
  7646  02CF  0020               	movlb	0	; select bank0
  7647  02D0  00C6               	movwf	xtoa@w+1
  7648  02D1  0021               	movlb	1	; select bank1
  7649  02D2  0858               	movf	_width^(0+128),w
  7650  02D3  0020               	movlb	0	; select bank0
  7651  02D4  00C5               	movwf	xtoa@w
  7652                           
  7653                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 634:     if (flags & (
      +                          1 << 4)) {
  7654  02D5  1E6D               	btfss	_flags,4
  7655  02D6  2ADB               	goto	l3412
  7656                           
  7657                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 635:         w -= 2;
  7658  02D7  30FE               	movlw	254
  7659  02D8  07C5               	addwf	xtoa@w,f
  7660  02D9  30FF               	movlw	255
  7661  02DA  3DC6               	addwfc	xtoa@w+1,f
  7662  02DB                     l3412:	
  7663                           
  7664                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 639:     n = d;
  7665  02DB  082D               	movf	xtoa@d,w
  7666  02DC  00C7               	movwf	xtoa@n
  7667  02DD  082E               	movf	xtoa@d+1,w
  7668  02DE  00C8               	movwf	xtoa@n+1
  7669  02DF  082F               	movf	xtoa@d+2,w
  7670  02E0  00C9               	movwf	xtoa@n+2
  7671  02E1  0830               	movf	xtoa@d+3,w
  7672  02E2  00CA               	movwf	xtoa@n+3
  7673  02E3  0831               	movf	xtoa@d+4,w
  7674  02E4  00CB               	movwf	xtoa@n+4
  7675  02E5  0832               	movf	xtoa@d+5,w
  7676  02E6  00CC               	movwf	xtoa@n+5
  7677  02E7  0833               	movf	xtoa@d+6,w
  7678  02E8  00CD               	movwf	xtoa@n+6
  7679  02E9  0834               	movf	xtoa@d+7,w
  7680  02EA  00CE               	movwf	xtoa@n+7
  7681                           
  7682                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 640:     i = sizeof(db
      +                          uf) - 1;
  7683  02EB  301F               	movlw	31
  7684  02EC  00CF               	movwf	xtoa@i
  7685  02ED  3000               	movlw	0
  7686  02EE  00D0               	movwf	xtoa@i+1
  7687                           
  7688                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 641:     dbuf[i] = '\0
      +                          ';
  7689  02EF  0023               	movlb	3	; select bank3
  7690  02F0  01EB               	clrf	(_dbuf^(0+384)+31)
  7691                           
  7692                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 642:     while (!(i < 
      +                          2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7693  02F1  2B9C               	goto	l3444
  7694  02F2                     l3416:	
  7695                           
  7696                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 643:         --i;
  7697  02F2  30FF               	movlw	255
  7698  02F3  0020               	movlb	0	; select bank0
  7699  02F4  07CF               	addwf	xtoa@i,f
  7700  02F5  30FF               	movlw	255
  7701  02F6  3DD0               	addwfc	xtoa@i+1,f
  7702                           
  7703                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 644:         c = n & 0
      +                          x0f;
  7704  02F7  300F               	movlw	15
  7705  02F8  0547               	andwf	xtoa@n,w
  7706  02F9  00D1               	movwf	xtoa@c
  7707  02FA  3000               	movlw	0
  7708  02FB  0548               	andwf	xtoa@n+1,w
  7709  02FC  00D2               	movwf	xtoa@c+1
  7710                           
  7711                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 645:         c = (c < 
      +                          10) ? '0' + c : 'a' + (c - 10);
  7712  02FD  0852               	movf	xtoa@c+1,w
  7713  02FE  3A80               	xorlw	128
  7714  02FF  00B6               	movwf	??_xtoa
  7715  0300  3080               	movlw	128
  7716  0301  0236               	subwf	??_xtoa,w
  7717  0302  1D03               	skipz
  7718  0303  2B06               	goto	u3365
  7719  0304  300A               	movlw	10
  7720  0305  0251               	subwf	xtoa@c,w
  7721  0306                     u3365:	
  7722  0306  1C03               	skipc
  7723  0307  2B0C               	goto	l3420
  7724  0308  0020               	movlb	0	; select bank0
  7725  0309  0851               	movf	xtoa@c,w
  7726  030A  3E57               	addlw	87
  7727  030B  2B0F               	goto	L11
  7728  030C                     l3420:	
  7729  030C  0020               	movlb	0	; select bank0
  7730  030D  0851               	movf	xtoa@c,w
  7731  030E  3E30               	addlw	48
  7732  030F                     L11:	
  7733  030F  00D1               	movwf	xtoa@c
  7734  0310  3000               	movlw	0
  7735  0311  3D52               	addwfc	xtoa@c+1,w
  7736  0312  00D2               	movwf	xtoa@c+1
  7737  0313  0835               	movf	xtoa@x,w
  7738  0314  3EBF               	addlw	191
  7739  0315  00B6               	movwf	??_xtoa
  7740  0316  30FF               	movlw	255
  7741  0317  1803               	skipnc
  7742  0318  3000               	movlw	0
  7743  0319  00B7               	movwf	??_xtoa+1
  7744  031A  3000               	movlw	0
  7745  031B  0237               	subwf	??_xtoa+1,w
  7746  031C  301A               	movlw	26
  7747  031D  1903               	skipnz
  7748  031E  0236               	subwf	??_xtoa,w
  7749  031F  1803               	btfsc	3,0
  7750  0320  2B23               	goto	u3370
  7751  0321  3001               	movlw	1
  7752  0322  2B24               	goto	u3380
  7753  0323                     u3370:	
  7754  0323  3000               	movlw	0
  7755  0324                     u3380:	
  7756  0324  00B8               	movwf	??_xtoa+2
  7757  0325  01B9               	clrf	??_xtoa+3
  7758  0326  0838               	movf	??_xtoa+2,w
  7759  0327  00BF               	movwf	_xtoa$645
  7760  0328  0839               	movf	??_xtoa+3,w
  7761  0329  00C0               	movwf	_xtoa$645+1
  7762  032A  083F               	movf	_xtoa$645,w
  7763  032B  0440               	iorwf	_xtoa$645+1,w
  7764  032C  1903               	btfsc	3,2
  7765  032D  2B5A               	goto	l3436
  7766  032E  3020               	movlw	32
  7767  032F  0451               	iorwf	xtoa@c,w
  7768  0330  00B6               	movwf	??_xtoa
  7769  0331  3000               	movlw	0
  7770  0332  0452               	iorwf	xtoa@c+1,w
  7771  0333  00B7               	movwf	??_xtoa+1
  7772  0334  0836               	movf	??_xtoa,w
  7773  0335  3E9F               	addlw	159
  7774  0336  00B8               	movwf	??_xtoa+2
  7775  0337  30FF               	movlw	255
  7776  0338  3D37               	addwfc	??_xtoa+1,w
  7777  0339  00B9               	movwf	??_xtoa+3
  7778  033A  3000               	movlw	0
  7779  033B  0239               	subwf	??_xtoa+3,w
  7780  033C  301A               	movlw	26
  7781  033D  1903               	skipnz
  7782  033E  0238               	subwf	??_xtoa+2,w
  7783  033F  1803               	btfsc	3,0
  7784  0340  2B43               	goto	u3400
  7785  0341  3001               	movlw	1
  7786  0342  2B44               	goto	u3410
  7787  0343                     u3400:	
  7788  0343  3000               	movlw	0
  7789  0344                     u3410:	
  7790  0344  00BA               	movwf	??_xtoa+4
  7791  0345  01BB               	clrf	??_xtoa+5
  7792  0346  083A               	movf	??_xtoa+4,w
  7793  0347  00C1               	movwf	_xtoa$646
  7794  0348  083B               	movf	??_xtoa+5,w
  7795  0349  00C2               	movwf	_xtoa$646+1
  7796  034A  0841               	movf	_xtoa$646,w
  7797  034B  0442               	iorwf	_xtoa$646+1,w
  7798  034C  1903               	btfsc	3,2
  7799  034D  2B5A               	goto	l3436
  7800                           
  7801                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 647:             c = t
      +                          oupper(c);
  7802  034E  0852               	movf	xtoa@c+1,w
  7803  034F  00F7               	movwf	toupper@c+1
  7804  0350  0851               	movf	xtoa@c,w
  7805  0351  00F6               	movwf	toupper@c
  7806  0352  3189  21FD  3182   	fcall	_toupper
  7807  0355  0877               	movf	?_toupper+1,w
  7808  0356  0020               	movlb	0	; select bank0
  7809  0357  00D2               	movwf	xtoa@c+1
  7810  0358  0876               	movf	?_toupper,w
  7811  0359  00D1               	movwf	xtoa@c
  7812  035A                     l3436:	
  7813                           
  7814                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 649:         dbuf[i] =
      +                           (char)c;
  7815  035A  0851               	movf	xtoa@c,w
  7816  035B  00B6               	movwf	??_xtoa
  7817  035C  084F               	movf	xtoa@i,w
  7818  035D  3ECC               	addlw	(low (_dbuf| (0+256)))& (0+255)
  7819  035E  0086               	movwf	6
  7820  035F  3001               	movlw	1	; select bank3/4
  7821  0360  0087               	movwf	7
  7822  0361  0836               	movf	??_xtoa,w
  7823  0362  0081               	movwf	1
  7824                           
  7825                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 650:         --p;
  7826  0363  30FF               	movlw	255
  7827  0364  07C3               	addwf	xtoa@p,f
  7828  0365  30FF               	movlw	255
  7829  0366  3DC4               	addwfc	xtoa@p+1,f
  7830                           
  7831                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 651:         --w;
  7832  0367  30FF               	movlw	255
  7833  0368  07C5               	addwf	xtoa@w,f
  7834  0369  30FF               	movlw	255
  7835  036A  3DC6               	addwfc	xtoa@w+1,f
  7836                           
  7837                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 652:         n = n >> 
      +                          4;
  7838  036B  3047               	movlw	low xtoa@n
  7839  036C  0086               	movwf	6
  7840  036D  3000               	movlw	high xtoa@n
  7841  036E  0087               	movwf	7
  7842  036F  3F40               	moviw [0]fsr1
  7843  0370  00B6               	movwf	??_xtoa
  7844  0371  3F41               	moviw [1]fsr1
  7845  0372  00B7               	movwf	??_xtoa+1
  7846  0373  3F42               	moviw [2]fsr1
  7847  0374  00B8               	movwf	??_xtoa+2
  7848  0375  3F43               	moviw [3]fsr1
  7849  0376  00B9               	movwf	??_xtoa+3
  7850  0377  3F44               	moviw [4]fsr1
  7851  0378  00BA               	movwf	??_xtoa+4
  7852  0379  3F45               	moviw [5]fsr1
  7853  037A  00BB               	movwf	??_xtoa+5
  7854  037B  3F46               	moviw [6]fsr1
  7855  037C  00BC               	movwf	??_xtoa+6
  7856  037D  3F47               	moviw [7]fsr1
  7857  037E  00BD               	movwf	??_xtoa+7
  7858  037F  3004               	movlw	4
  7859  0380                     u3435:	
  7860  0380  0020               	movlb	0	; select bank0
  7861  0381  36BD               	lsrf	??_xtoa+7,f
  7862  0382  0CBC               	rrf	??_xtoa+6,f
  7863  0383  0CBB               	rrf	??_xtoa+5,f
  7864  0384  0CBA               	rrf	??_xtoa+4,f
  7865  0385  0CB9               	rrf	??_xtoa+3,f
  7866  0386  0CB8               	rrf	??_xtoa+2,f
  7867  0387  0CB7               	rrf	??_xtoa+1,f
  7868  0388  0CB6               	rrf	??_xtoa,f
  7869  0389  0B89               	decfsz	9,f
  7870  038A  2B80               	goto	u3435
  7871  038B  0020               	movlb	0	; select bank0
  7872  038C  083D               	movf	??_xtoa+7,w
  7873  038D  00CE               	movwf	xtoa@n+7
  7874  038E  083C               	movf	??_xtoa+6,w
  7875  038F  00CD               	movwf	xtoa@n+6
  7876  0390  083B               	movf	??_xtoa+5,w
  7877  0391  00CC               	movwf	xtoa@n+5
  7878  0392  083A               	movf	??_xtoa+4,w
  7879  0393  00CB               	movwf	xtoa@n+4
  7880  0394  0839               	movf	??_xtoa+3,w
  7881  0395  00CA               	movwf	xtoa@n+3
  7882  0396  0838               	movf	??_xtoa+2,w
  7883  0397  00C9               	movwf	xtoa@n+2
  7884  0398  0837               	movf	??_xtoa+1,w
  7885  0399  00C8               	movwf	xtoa@n+1
  7886  039A  0836               	movf	??_xtoa,w
  7887  039B  00C7               	movwf	xtoa@n
  7888  039C                     l3444:	
  7889                           
  7890                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 642:     while (!(i < 
      +                          2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7891  039C  0020               	movlb	0	; select bank0
  7892  039D  0850               	movf	xtoa@i+1,w
  7893  039E  3A80               	xorlw	128
  7894  039F  00B6               	movwf	??_xtoa
  7895  03A0  3080               	movlw	128
  7896  03A1  0236               	subwf	??_xtoa,w
  7897  03A2  1D03               	skipz
  7898  03A3  2BA6               	goto	u3445
  7899  03A4  3002               	movlw	2
  7900  03A5  024F               	subwf	xtoa@i,w
  7901  03A6                     u3445:	
  7902  03A6  1C03               	skipc
  7903  03A7  2BCD               	goto	l550
  7904  03A8  0020               	movlb	0	; select bank0
  7905  03A9  0847               	movf	xtoa@n,w
  7906  03AA  0448               	iorwf	xtoa@n+1,w
  7907  03AB  0449               	iorwf	xtoa@n+2,w
  7908  03AC  044A               	iorwf	xtoa@n+3,w
  7909  03AD  044B               	iorwf	xtoa@n+4,w
  7910  03AE  044C               	iorwf	xtoa@n+5,w
  7911  03AF  044D               	iorwf	xtoa@n+6,w
  7912  03B0  044E               	iorwf	xtoa@n+7,w
  7913  03B1  1D03               	skipz
  7914  03B2  2AF2               	goto	l3416
  7915  03B3  0844               	movf	xtoa@p+1,w
  7916  03B4  3A80               	xorlw	128
  7917  03B5  00B6               	movwf	??_xtoa
  7918  03B6  3080               	movlw	128
  7919  03B7  0236               	subwf	??_xtoa,w
  7920  03B8  1D03               	skipz
  7921  03B9  2BBC               	goto	u3465
  7922  03BA  3001               	movlw	1
  7923  03BB  0243               	subwf	xtoa@p,w
  7924  03BC                     u3465:	
  7925  03BC  1803               	skipnc
  7926  03BD  2AF2               	goto	l3416
  7927  03BE  0020               	movlb	0	; select bank0
  7928  03BF  0846               	movf	xtoa@w+1,w
  7929  03C0  3A80               	xorlw	128
  7930  03C1  00B6               	movwf	??_xtoa
  7931  03C2  3080               	movlw	128
  7932  03C3  0236               	subwf	??_xtoa,w
  7933  03C4  1D03               	skipz
  7934  03C5  2BC8               	goto	u3475
  7935  03C6  3001               	movlw	1
  7936  03C7  0245               	subwf	xtoa@w,w
  7937  03C8                     u3475:	
  7938  03C8  1C03               	skipc
  7939  03C9  2BCD               	goto	l550
  7940  03CA  0020               	movlb	0	; select bank0
  7941  03CB  18ED               	btfsc	_flags,1
  7942  03CC  2AF2               	goto	l3416
  7943  03CD                     l550:	
  7944                           
  7945                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 656:     if (flags & (
      +                          1 << 4)) {
  7946  03CD  0020               	movlb	0	; select bank0
  7947  03CE  1E6D               	btfss	_flags,4
  7948  03CF  2BEA               	goto	l3460
  7949                           
  7950                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 657:         --i;
  7951  03D0  30FF               	movlw	255
  7952  03D1  07CF               	addwf	xtoa@i,f
  7953  03D2  30FF               	movlw	255
  7954  03D3  3DD0               	addwfc	xtoa@i+1,f
  7955                           
  7956                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 658:         dbuf[i] =
      +                           x;
  7957  03D4  0835               	movf	xtoa@x,w
  7958  03D5  00B6               	movwf	??_xtoa
  7959  03D6  084F               	movf	xtoa@i,w
  7960  03D7  3ECC               	addlw	(low (_dbuf| (0+256)))& (0+255)
  7961  03D8  0086               	movwf	6
  7962  03D9  3001               	movlw	1	; select bank3/4
  7963  03DA  0087               	movwf	7
  7964  03DB  0836               	movf	??_xtoa,w
  7965  03DC  0081               	movwf	1
  7966                           
  7967                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 659:         --i;
  7968  03DD  30FF               	movlw	255
  7969  03DE  07CF               	addwf	xtoa@i,f
  7970  03DF  30FF               	movlw	255
  7971  03E0  3DD0               	addwfc	xtoa@i+1,f
  7972                           
  7973                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 660:         dbuf[i] =
      +                           '0';
  7974  03E1  3030               	movlw	48
  7975  03E2  00B6               	movwf	??_xtoa
  7976  03E3  084F               	movf	xtoa@i,w
  7977  03E4  3ECC               	addlw	(low (_dbuf| (0+256)))& (0+255)
  7978  03E5  0086               	movwf	6
  7979  03E6  3001               	movlw	1	; select bank3/4
  7980  03E7  0087               	movwf	7
  7981  03E8  0836               	movf	??_xtoa,w
  7982  03E9  0081               	movwf	1
  7983  03EA                     l3460:	
  7984                           
  7985                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 664:     return pad(fp
      +                          , &dbuf[i], w);
  7986  03EA  084F               	movf	xtoa@i,w
  7987  03EB  3ECC               	addlw	(low (_dbuf| (0+256)))& (0+255)
  7988  03EC  00B6               	movwf	??_xtoa
  7989  03ED  0836               	movf	??_xtoa,w
  7990  03EE  00A4               	movwf	pad@buf
  7991  03EF  0846               	movf	xtoa@w+1,w
  7992  03F0  00A6               	movwf	pad@p+1
  7993  03F1  0845               	movf	xtoa@w,w
  7994  03F2  00A5               	movwf	pad@p
  7995  03F3  083E               	movf	xtoa@fp,w
  7996  03F4  318C  241C         	fcall	_pad
  7997  03F6  0020               	movlb	0	; select bank0
  7998  03F7  0825               	movf	?_pad+1,w
  7999  03F8  00AE               	movwf	?_xtoa+1
  8000  03F9  0824               	movf	?_pad,w
  8001  03FA  00AD               	movwf	?_xtoa
  8002  03FB  0008               	return
  8003  03FC                     __end_of_xtoa:	
  8004                           
  8005                           	psect	text24
  8006  09FD                     __ptext24:	
  8007 ;; *************** function _toupper *****************
  8008 ;; Defined at:
  8009 ;;		line 4 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\toupper.c"
  8010 ;; Parameters:    Size  Location     Type
  8011 ;;  c               2    6[COMMON] int 
  8012 ;; Auto vars:     Size  Location     Type
  8013 ;;		None
  8014 ;; Return value:  Size  Location     Type
  8015 ;;                  2    6[COMMON] int 
  8016 ;; Registers used:
  8017 ;;		wreg, status,2, status,0
  8018 ;; Tracked objects:
  8019 ;;		On entry : 0/0
  8020 ;;		On exit  : 0/0
  8021 ;;		Unchanged: 0/0
  8022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8023 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8024 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8025 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8026 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8027 ;;Total ram usage:        8 bytes
  8028 ;; Hardware stack levels used:    1
  8029 ;; Hardware stack levels required when called:    4
  8030 ;; This function calls:
  8031 ;;		_islower
  8032 ;; This function is called by:
  8033 ;;		_xtoa
  8034 ;; This function uses a non-reentrant model
  8035 ;;
  8036                           
  8037                           
  8038                           ;psect for function _toupper
  8039  09FD                     _toupper:	
  8040                           
  8041                           ;incstack = 0
  8042                           ; Regs used in _toupper: [wreg+status,2+status,0]
  8043  09FD  0876               	movf	toupper@c,w
  8044  09FE  3E9F               	addlw	159
  8045  09FF  00F8               	movwf	??_toupper
  8046  0A00  30FF               	movlw	255
  8047  0A01  3D77               	addwfc	toupper@c+1,w
  8048  0A02  00F9               	movwf	??_toupper+1
  8049  0A03  3000               	movlw	0
  8050  0A04  0279               	subwf	??_toupper+1,w
  8051  0A05  301A               	movlw	26
  8052  0A06  1903               	skipnz
  8053  0A07  0278               	subwf	??_toupper,w
  8054  0A08  1803               	btfsc	3,0
  8055  0A09  2A0C               	goto	u1710
  8056  0A0A  3001               	movlw	1
  8057  0A0B  2A0D               	goto	u1720
  8058  0A0C                     u1710:	
  8059  0A0C  3000               	movlw	0
  8060  0A0D                     u1720:	
  8061  0A0D  00FA               	movwf	??_toupper+2
  8062  0A0E  01FB               	clrf	??_toupper+3
  8063  0A0F  087A               	movf	??_toupper+2,w
  8064  0A10  00FC               	movwf	_toupper$1084
  8065  0A11  087B               	movf	??_toupper+3,w
  8066  0A12  00FD               	movwf	_toupper$1084+1
  8067  0A13  087C               	movf	_toupper$1084,w
  8068  0A14  047D               	iorwf	_toupper$1084+1,w
  8069  0A15  1903               	btfsc	3,2
  8070  0A16  0008               	return
  8071  0A17  305F               	movlw	95
  8072  0A18  0576               	andwf	toupper@c,w
  8073  0A19  00F6               	movwf	?_toupper
  8074  0A1A  3000               	movlw	0
  8075  0A1B  0577               	andwf	toupper@c+1,w
  8076  0A1C  00F7               	movwf	?_toupper+1
  8077  0A1D  0008               	return
  8078  0A1E                     __end_of_toupper:	
  8079                           
  8080                           	psect	text25
  8081  0962                     __ptext25:	
  8082 ;; *************** function _islower *****************
  8083 ;; Defined at:
  8084 ;;		line 5 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\islower.c"
  8085 ;; Parameters:    Size  Location     Type
  8086 ;;  c               2    0[COMMON] int 
  8087 ;; Auto vars:     Size  Location     Type
  8088 ;;		None
  8089 ;; Return value:  Size  Location     Type
  8090 ;;                  2    0[COMMON] int 
  8091 ;; Registers used:
  8092 ;;		wreg, status,2, status,0
  8093 ;; Tracked objects:
  8094 ;;		On entry : 0/0
  8095 ;;		On exit  : 0/0
  8096 ;;		Unchanged: 0/0
  8097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8098 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8100 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8101 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8102 ;;Total ram usage:        6 bytes
  8103 ;; Hardware stack levels used:    1
  8104 ;; Hardware stack levels required when called:    3
  8105 ;; This function calls:
  8106 ;;		Nothing
  8107 ;; This function is called by:
  8108 ;;		_toupper
  8109 ;; This function uses a non-reentrant model
  8110 ;;
  8111                           
  8112                           
  8113                           ;psect for function _islower
  8114  0962                     _islower:	
  8115                           
  8116                           ;incstack = 0
  8117                           ; Regs used in _islower: [wreg+status,2+status,0]
  8118  0962  0870               	movf	islower@c,w
  8119  0963  3E9F               	addlw	159
  8120  0964  00F2               	movwf	??_islower
  8121  0965  30FF               	movlw	255
  8122  0966  3D71               	addwfc	islower@c+1,w
  8123  0967  00F3               	movwf	??_islower+1
  8124  0968  3000               	movlw	0
  8125  0969  0273               	subwf	??_islower+1,w
  8126  096A  301A               	movlw	26
  8127  096B  1903               	skipnz
  8128  096C  0272               	subwf	??_islower,w
  8129  096D  1803               	btfsc	3,0
  8130  096E  2971               	goto	u1600
  8131  096F  3001               	movlw	1
  8132  0970  2972               	goto	u1610
  8133  0971                     u1600:	
  8134  0971  3000               	movlw	0
  8135  0972                     u1610:	
  8136  0972  00F4               	movwf	??_islower+2
  8137  0973  01F5               	clrf	??_islower+3
  8138  0974  0874               	movf	??_islower+2,w
  8139  0975  00F0               	movwf	?_islower
  8140  0976  0875               	movf	??_islower+3,w
  8141  0977  00F1               	movwf	?_islower+1
  8142  0978  0008               	return
  8143  0979                     __end_of_islower:	
  8144                           
  8145                           	psect	text26
  8146  094B                     __ptext26:	
  8147 ;; *************** function _isupper *****************
  8148 ;; Defined at:
  8149 ;;		line 5 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\isupper.c"
  8150 ;; Parameters:    Size  Location     Type
  8151 ;;  c               2    0[COMMON] int 
  8152 ;; Auto vars:     Size  Location     Type
  8153 ;;		None
  8154 ;; Return value:  Size  Location     Type
  8155 ;;                  2    0[COMMON] int 
  8156 ;; Registers used:
  8157 ;;		wreg, status,2, status,0
  8158 ;; Tracked objects:
  8159 ;;		On entry : 0/0
  8160 ;;		On exit  : 0/0
  8161 ;;		Unchanged: 0/0
  8162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8163 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8165 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8166 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8167 ;;Total ram usage:        6 bytes
  8168 ;; Hardware stack levels used:    1
  8169 ;; Hardware stack levels required when called:    3
  8170 ;; This function calls:
  8171 ;;		Nothing
  8172 ;; This function is called by:
  8173 ;;		_xtoa
  8174 ;; This function uses a non-reentrant model
  8175 ;;
  8176                           
  8177                           
  8178                           ;psect for function _isupper
  8179  094B                     _isupper:	
  8180                           
  8181                           ;incstack = 0
  8182                           ; Regs used in _isupper: [wreg+status,2+status,0]
  8183  094B  0870               	movf	isupper@c,w
  8184  094C  3EBF               	addlw	191
  8185  094D  00F2               	movwf	??_isupper
  8186  094E  30FF               	movlw	255
  8187  094F  3D71               	addwfc	isupper@c+1,w
  8188  0950  00F3               	movwf	??_isupper+1
  8189  0951  3000               	movlw	0
  8190  0952  0273               	subwf	??_isupper+1,w
  8191  0953  301A               	movlw	26
  8192  0954  1903               	skipnz
  8193  0955  0272               	subwf	??_isupper,w
  8194  0956  1803               	btfsc	3,0
  8195  0957  295A               	goto	u1670
  8196  0958  3001               	movlw	1
  8197  0959  295B               	goto	u1680
  8198  095A                     u1670:	
  8199  095A  3000               	movlw	0
  8200  095B                     u1680:	
  8201  095B  00F4               	movwf	??_isupper+2
  8202  095C  01F5               	clrf	??_isupper+3
  8203  095D  0874               	movf	??_isupper+2,w
  8204  095E  00F0               	movwf	?_isupper
  8205  095F  0875               	movf	??_isupper+3,w
  8206  0960  00F1               	movwf	?_isupper+1
  8207  0961  0008               	return
  8208  0962                     __end_of_isupper:	
  8209                           
  8210                           	psect	text27
  8211  09E0                     __ptext27:	
  8212 ;; *************** function _isalpha *****************
  8213 ;; Defined at:
  8214 ;;		line 5 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\isalpha.c"
  8215 ;; Parameters:    Size  Location     Type
  8216 ;;  c               2    0[COMMON] int 
  8217 ;; Auto vars:     Size  Location     Type
  8218 ;;		None
  8219 ;; Return value:  Size  Location     Type
  8220 ;;                  2    0[COMMON] int 
  8221 ;; Registers used:
  8222 ;;		wreg, status,2, status,0
  8223 ;; Tracked objects:
  8224 ;;		On entry : 0/0
  8225 ;;		On exit  : 0/0
  8226 ;;		Unchanged: 0/0
  8227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8228 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8230 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8231 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8232 ;;Total ram usage:        8 bytes
  8233 ;; Hardware stack levels used:    1
  8234 ;; Hardware stack levels required when called:    3
  8235 ;; This function calls:
  8236 ;;		Nothing
  8237 ;; This function is called by:
  8238 ;;		_xtoa
  8239 ;; This function uses a non-reentrant model
  8240 ;;
  8241                           
  8242                           
  8243                           ;psect for function _isalpha
  8244  09E0                     _isalpha:	
  8245                           
  8246                           ;incstack = 0
  8247                           ; Regs used in _isalpha: [wreg+status,2+status,0]
  8248  09E0  3020               	movlw	32
  8249  09E1  0470               	iorwf	isalpha@c,w
  8250  09E2  00F2               	movwf	??_isalpha
  8251  09E3  3000               	movlw	0
  8252  09E4  0471               	iorwf	isalpha@c+1,w
  8253  09E5  00F3               	movwf	??_isalpha+1
  8254  09E6  0872               	movf	??_isalpha,w
  8255  09E7  3E9F               	addlw	159
  8256  09E8  00F4               	movwf	??_isalpha+2
  8257  09E9  30FF               	movlw	255
  8258  09EA  3D73               	addwfc	??_isalpha+1,w
  8259  09EB  00F5               	movwf	??_isalpha+3
  8260  09EC  3000               	movlw	0
  8261  09ED  0275               	subwf	??_isalpha+3,w
  8262  09EE  301A               	movlw	26
  8263  09EF  1903               	skipnz
  8264  09F0  0274               	subwf	??_isalpha+2,w
  8265  09F1  1803               	btfsc	3,0
  8266  09F2  29F5               	goto	u1690
  8267  09F3  3001               	movlw	1
  8268  09F4  29F6               	goto	u1700
  8269  09F5                     u1690:	
  8270  09F5  3000               	movlw	0
  8271  09F6                     u1700:	
  8272  09F6  00F6               	movwf	??_isalpha+4
  8273  09F7  01F7               	clrf	??_isalpha+5
  8274  09F8  0876               	movf	??_isalpha+4,w
  8275  09F9  00F0               	movwf	?_isalpha
  8276  09FA  0877               	movf	??_isalpha+5,w
  8277  09FB  00F1               	movwf	?_isalpha+1
  8278  09FC  0008               	return
  8279  09FD                     __end_of_isalpha:	
  8280                           
  8281                           	psect	text28
  8282  0E61                     __ptext28:	
  8283 ;; *************** function _stoa *****************
  8284 ;; Defined at:
  8285 ;;		line 546 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c"
  8286 ;; Parameters:    Size  Location     Type
  8287 ;;  fp              1    wreg     PTR struct _IO_FILE
  8288 ;;		 -> sprintf@f(6), NULL(0), 
  8289 ;;  s               2   10[COMMON] PTR unsigned char 
  8290 ;;		 -> ?_printf(2), ?_sprintf(2), gps_vertical_velocity(8), gps_course_over_ground(8), 
  8291 ;;		 -> gps_speed_over_ground(8), gps_altitude(12), gps_longitude(16), gps_latitude(16), 
  8292 ;;		 -> gps_time(10), 
  8293 ;; Auto vars:     Size  Location     Type
  8294 ;;  fp              1   14[BANK0 ] PTR struct _IO_FILE
  8295 ;;		 -> sprintf@f(6), NULL(0), 
  8296 ;;  nuls            7    3[BANK0 ] unsigned char [7]
  8297 ;;  l               2   19[BANK0 ] int 
  8298 ;;  p               2   17[BANK0 ] int 
  8299 ;;  cp              2   15[BANK0 ] PTR unsigned char 
  8300 ;;		 -> ?_printf(2), ?_sprintf(2), stoa@nuls(7), gps_vertical_velocity(8), 
  8301 ;;		 -> gps_course_over_ground(8), gps_speed_over_ground(8), gps_altitude(12), gps_longitude(16), 
  8302 ;;		 -> gps_latitude(16), gps_time(10), 
  8303 ;;  w               2   12[BANK0 ] int 
  8304 ;;  i               2   10[BANK0 ] int 
  8305 ;; Return value:  Size  Location     Type
  8306 ;;                  2   10[COMMON] int 
  8307 ;; Registers used:
  8308 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8309 ;; Tracked objects:
  8310 ;;		On entry : 0/0
  8311 ;;		On exit  : 0/0
  8312 ;;		Unchanged: 0/0
  8313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8314 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8315 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8316 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8317 ;;      Totals:         2      21       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8318 ;;Total ram usage:       23 bytes
  8319 ;; Hardware stack levels used:    1
  8320 ;; Hardware stack levels required when called:    6
  8321 ;; This function calls:
  8322 ;;		_fputc
  8323 ;;		_strlen
  8324 ;; This function is called by:
  8325 ;;		_vfpfcnvrt
  8326 ;; This function uses a non-reentrant model
  8327 ;;
  8328                           
  8329                           
  8330                           ;psect for function _stoa
  8331  0E61                     _stoa:	
  8332                           
  8333                           ;incstack = 0
  8334                           ; Regs used in _stoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8335                           ;stoa@fp stored from wreg
  8336  0E61  0020               	movlb	0	; select bank0
  8337  0E62  00AE               	movwf	stoa@fp
  8338                           
  8339                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 546: static int stoa(F
      +                          ILE *fp, char *s);K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 547: 
      +                          {;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 548:     char *cp, nu
      +                          ls[] = "(null)";
  8340  0E63  30E2               	movlw	low stoa@F1139
  8341  0E64  0086               	movwf	6
  8342  0E65  3000               	movlw	high stoa@F1139
  8343  0E66  0087               	movwf	7
  8344  0E67  3023               	movlw	low stoa@nuls
  8345  0E68  0084               	movwf	4
  8346  0E69  3000               	movlw	high stoa@nuls
  8347  0E6A  0085               	movwf	5
  8348  0E6B  3007               	movlw	7
  8349  0E6C  00A0               	movwf	??_stoa
  8350  0E6D                     u3240:	
  8351  0E6D  0016               	moviw fsr1++
  8352  0E6E  001A               	movwi fsr0++
  8353  0E6F  0BA0               	decfsz	??_stoa,f
  8354  0E70  2E6D               	goto	u3240
  8355                           
  8356                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 549:     int i, l, p, 
      +                          w;;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 552:     cp = s;
  8357  0E71  087B               	movf	stoa@s+1,w
  8358  0E72  00B0               	movwf	stoa@cp+1
  8359  0E73  087A               	movf	stoa@s,w
  8360  0E74  00AF               	movwf	stoa@cp
  8361                           
  8362                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 553:     if (!cp) {
  8363  0E75  082F               	movf	stoa@cp,w
  8364  0E76  0430               	iorwf	stoa@cp+1,w
  8365  0E77  1D03               	btfss	3,2
  8366  0E78  2E7D               	goto	l3358
  8367                           
  8368                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 554:         cp = nuls
      +                          ;
  8369  0E79  3023               	movlw	low stoa@nuls
  8370  0E7A  00AF               	movwf	stoa@cp
  8371  0E7B  3000               	movlw	high stoa@nuls
  8372  0E7C  00B0               	movwf	stoa@cp+1
  8373  0E7D                     l3358:	
  8374                           
  8375                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 558:     l = strlen(cp
      +                          );
  8376  0E7D  0830               	movf	stoa@cp+1,w
  8377  0E7E  00F1               	movwf	strlen@s+1
  8378  0E7F  082F               	movf	stoa@cp,w
  8379  0E80  00F0               	movwf	strlen@s
  8380  0E81  3189  2134  318E   	fcall	_strlen
  8381  0E84  0871               	movf	?_strlen+1,w
  8382  0E85  0020               	movlb	0	; select bank0
  8383  0E86  00B4               	movwf	stoa@l+1
  8384  0E87  0870               	movf	?_strlen,w
  8385  0E88  00B3               	movwf	stoa@l
  8386                           
  8387                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 559:     p = prec;
  8388  0E89  0021               	movlb	1	; select bank1
  8389  0E8A  085B               	movf	(_prec+1)^(0+128),w
  8390  0E8B  0020               	movlb	0	; select bank0
  8391  0E8C  00B2               	movwf	stoa@p+1
  8392  0E8D  0021               	movlb	1	; select bank1
  8393  0E8E  085A               	movf	_prec^(0+128),w
  8394  0E8F  0020               	movlb	0	; select bank0
  8395  0E90  00B1               	movwf	stoa@p
  8396                           
  8397                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 560:     l = (!(p < 0)
      +                           && (p < l)) ? p : l;
  8398  0E91  1BB2               	btfsc	stoa@p+1,7
  8399  0E92  2EA4               	goto	l508
  8400  0E93  0832               	movf	stoa@p+1,w
  8401  0E94  3A80               	xorlw	128
  8402  0E95  00A0               	movwf	??_stoa
  8403  0E96  0834               	movf	stoa@l+1,w
  8404  0E97  3A80               	xorlw	128
  8405  0E98  0220               	subwf	??_stoa,w
  8406  0E99  1D03               	skipz
  8407  0E9A  2E9D               	goto	u3275
  8408  0E9B  0833               	movf	stoa@l,w
  8409  0E9C  0231               	subwf	stoa@p,w
  8410  0E9D                     u3275:	
  8411  0E9D  1803               	btfsc	3,0
  8412  0E9E  2EA4               	goto	l508
  8413  0E9F  0020               	movlb	0	; select bank0
  8414  0EA0  0832               	movf	stoa@p+1,w
  8415  0EA1  00B4               	movwf	stoa@l+1
  8416  0EA2  0831               	movf	stoa@p,w
  8417  0EA3  00B3               	movwf	stoa@l
  8418  0EA4                     l508:	
  8419                           
  8420                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 561:     p = l;
  8421  0EA4  0020               	movlb	0	; select bank0
  8422  0EA5  0834               	movf	stoa@l+1,w
  8423  0EA6  00B2               	movwf	stoa@p+1
  8424  0EA7  0833               	movf	stoa@l,w
  8425  0EA8  00B1               	movwf	stoa@p
  8426                           
  8427                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 562:     w = width;
  8428  0EA9  0021               	movlb	1	; select bank1
  8429  0EAA  0859               	movf	(_width+1)^(0+128),w
  8430  0EAB  0020               	movlb	0	; select bank0
  8431  0EAC  00AD               	movwf	stoa@w+1
  8432  0EAD  0021               	movlb	1	; select bank1
  8433  0EAE  0858               	movf	_width^(0+128),w
  8434  0EAF  0020               	movlb	0	; select bank0
  8435  0EB0  00AC               	movwf	stoa@w
  8436                           
  8437                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 565:     if (!(flags &
      +                           (1 << 0))) {
  8438  0EB1  1C6D               	btfss	_flags,0
  8439  0EB2  2EC5               	goto	l3376
  8440  0EB3  2ED1               	goto	l3378
  8441  0EB4                     l3372:	
  8442                           
  8443                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 567:             fputc
      +                          (' ', fp);
  8444  0EB4  3020               	movlw	32
  8445  0EB5  00F2               	movwf	fputc@c
  8446  0EB6  3000               	movlw	0
  8447  0EB7  00F3               	movwf	fputc@c+1
  8448  0EB8  0020               	movlb	0	; select bank0
  8449  0EB9  082E               	movf	stoa@fp,w
  8450  0EBA  00A0               	movwf	??_stoa
  8451  0EBB  0820               	movf	??_stoa,w
  8452  0EBC  00F4               	movwf	fputc@fp
  8453  0EBD  318B  23D1  318E   	fcall	_fputc
  8454                           
  8455                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 568:             ++l;
  8456  0EC0  3001               	movlw	1
  8457  0EC1  0020               	movlb	0	; select bank0
  8458  0EC2  07B3               	addwf	stoa@l,f
  8459  0EC3  3000               	movlw	0
  8460  0EC4  3DB4               	addwfc	stoa@l+1,f
  8461  0EC5                     l3376:	
  8462                           
  8463                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 566:         while (l 
      +                          < w) {
  8464  0EC5  0834               	movf	stoa@l+1,w
  8465  0EC6  3A80               	xorlw	128
  8466  0EC7  00A0               	movwf	??_stoa
  8467  0EC8  082D               	movf	stoa@w+1,w
  8468  0EC9  3A80               	xorlw	128
  8469  0ECA  0220               	subwf	??_stoa,w
  8470  0ECB  1D03               	skipz
  8471  0ECC  2ECF               	goto	u3295
  8472  0ECD  082C               	movf	stoa@w,w
  8473  0ECE  0233               	subwf	stoa@l,w
  8474  0ECF                     u3295:	
  8475  0ECF  1C03               	skipc
  8476  0ED0  2EB4               	goto	l3372
  8477  0ED1                     l3378:	
  8478                           
  8479                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 573:     i = 0;
  8480  0ED1  0020               	movlb	0	; select bank0
  8481  0ED2  01AA               	clrf	stoa@i
  8482  0ED3  01AB               	clrf	stoa@i+1
  8483  0ED4                     l3386:	
  8484                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 574:     while (i < p)
      +                           {
  8485                           
  8486                           
  8487                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 574:     while (i < p)
      +                           {
  8488  0ED4  082B               	movf	stoa@i+1,w
  8489  0ED5  3A80               	xorlw	128
  8490  0ED6  00A0               	movwf	??_stoa
  8491  0ED7  0832               	movf	stoa@p+1,w
  8492  0ED8  3A80               	xorlw	128
  8493  0ED9  0220               	subwf	??_stoa,w
  8494  0EDA  1D03               	skipz
  8495  0EDB  2EDE               	goto	u3305
  8496  0EDC  0831               	movf	stoa@p,w
  8497  0EDD  022A               	subwf	stoa@i,w
  8498  0EDE                     u3305:	
  8499  0EDE  1803               	btfsc	3,0
  8500  0EDF  2EFD               	goto	l517
  8501                           
  8502                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 575:         fputc(*cp
      +                          , fp);
  8503  0EE0  0020               	movlb	0	; select bank0
  8504  0EE1  082F               	movf	stoa@cp,w
  8505  0EE2  0086               	movwf	6
  8506  0EE3  0830               	movf	stoa@cp+1,w
  8507  0EE4  0087               	movwf	7
  8508  0EE5  0801               	movf	1,w
  8509  0EE6  00A0               	movwf	??_stoa
  8510  0EE7  01A1               	clrf	??_stoa+1
  8511  0EE8  0820               	movf	??_stoa,w
  8512  0EE9  00F2               	movwf	fputc@c
  8513  0EEA  0821               	movf	??_stoa+1,w
  8514  0EEB  00F3               	movwf	fputc@c+1
  8515  0EEC  082E               	movf	stoa@fp,w
  8516  0EED  00A2               	movwf	??_stoa+2
  8517  0EEE  0822               	movf	??_stoa+2,w
  8518  0EEF  00F4               	movwf	fputc@fp
  8519  0EF0  318B  23D1  318E   	fcall	_fputc
  8520                           
  8521                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 576:         ++cp;
  8522  0EF3  3001               	movlw	1
  8523  0EF4  0020               	movlb	0	; select bank0
  8524  0EF5  07AF               	addwf	stoa@cp,f
  8525  0EF6  3000               	movlw	0
  8526  0EF7  3DB0               	addwfc	stoa@cp+1,f
  8527                           
  8528                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 577:         ++i;
  8529  0EF8  3001               	movlw	1
  8530  0EF9  07AA               	addwf	stoa@i,f
  8531  0EFA  3000               	movlw	0
  8532  0EFB  3DAB               	addwfc	stoa@i+1,f
  8533  0EFC  2ED4               	goto	l3386
  8534  0EFD                     l517:	
  8535                           
  8536                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 581:     if (flags & (
      +                          1 << 0)) {
  8537  0EFD  0020               	movlb	0	; select bank0
  8538  0EFE  186D               	btfsc	_flags,0
  8539  0EFF  2F12               	goto	l3394
  8540  0F00  2F1E               	goto	l3396
  8541  0F01                     l3390:	
  8542                           
  8543                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 583:             fputc
      +                          (' ', fp);
  8544  0F01  3020               	movlw	32
  8545  0F02  00F2               	movwf	fputc@c
  8546  0F03  3000               	movlw	0
  8547  0F04  00F3               	movwf	fputc@c+1
  8548  0F05  0020               	movlb	0	; select bank0
  8549  0F06  082E               	movf	stoa@fp,w
  8550  0F07  00A0               	movwf	??_stoa
  8551  0F08  0820               	movf	??_stoa,w
  8552  0F09  00F4               	movwf	fputc@fp
  8553  0F0A  318B  23D1  318E   	fcall	_fputc
  8554                           
  8555                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 584:             ++l;
  8556  0F0D  3001               	movlw	1
  8557  0F0E  0020               	movlb	0	; select bank0
  8558  0F0F  07B3               	addwf	stoa@l,f
  8559  0F10  3000               	movlw	0
  8560  0F11  3DB4               	addwfc	stoa@l+1,f
  8561  0F12                     l3394:	
  8562                           
  8563                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 582:         while (l 
      +                          < w) {
  8564  0F12  0834               	movf	stoa@l+1,w
  8565  0F13  3A80               	xorlw	128
  8566  0F14  00A0               	movwf	??_stoa
  8567  0F15  082D               	movf	stoa@w+1,w
  8568  0F16  3A80               	xorlw	128
  8569  0F17  0220               	subwf	??_stoa,w
  8570  0F18  1D03               	skipz
  8571  0F19  2F1C               	goto	u3325
  8572  0F1A  082C               	movf	stoa@w,w
  8573  0F1B  0233               	subwf	stoa@l,w
  8574  0F1C                     u3325:	
  8575  0F1C  1C03               	skipc
  8576  0F1D  2F01               	goto	l3390
  8577  0F1E                     l3396:	
  8578                           
  8579                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 588:     return l;
  8580  0F1E  0020               	movlb	0	; select bank0
  8581  0F1F  0834               	movf	stoa@l+1,w
  8582  0F20  00FB               	movwf	?_stoa+1
  8583  0F21  0833               	movf	stoa@l,w
  8584  0F22  00FA               	movwf	?_stoa
  8585  0F23  0008               	return
  8586  0F24                     __end_of_stoa:	
  8587                           
  8588                           	psect	text29
  8589  03FC                     __ptext29:	
  8590 ;; *************** function _dtoa *****************
  8591 ;; Defined at:
  8592 ;;		line 274 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c"
  8593 ;; Parameters:    Size  Location     Type
  8594 ;;  fp              1    wreg     PTR struct _IO_FILE
  8595 ;;		 -> sprintf@f(6), NULL(0), 
  8596 ;;  d               8   16[BANK0 ] long long 
  8597 ;; Auto vars:     Size  Location     Type
  8598 ;;  fp              1   27[BANK0 ] PTR struct _IO_FILE
  8599 ;;		 -> sprintf@f(6), NULL(0), 
  8600 ;;  n               8   36[BANK0 ] long long 
  8601 ;;  i               2   44[BANK0 ] int 
  8602 ;;  s               2   34[BANK0 ] int 
  8603 ;;  w               2   32[BANK0 ] int 
  8604 ;;  p               2   30[BANK0 ] int 
  8605 ;; Return value:  Size  Location     Type
  8606 ;;                  2   16[BANK0 ] int 
  8607 ;; Registers used:
  8608 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8609 ;; Tracked objects:
  8610 ;;		On entry : 0/0
  8611 ;;		On exit  : 0/0
  8612 ;;		Unchanged: 0/0
  8613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8614 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8615 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8616 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8617 ;;      Totals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8618 ;;Total ram usage:       30 bytes
  8619 ;; Hardware stack levels used:    1
  8620 ;; Hardware stack levels required when called:    8
  8621 ;; This function calls:
  8622 ;;		___aodiv
  8623 ;;		___aomod
  8624 ;;		_abs
  8625 ;;		_pad
  8626 ;; This function is called by:
  8627 ;;		_vfpfcnvrt
  8628 ;; This function uses a non-reentrant model
  8629 ;;
  8630                           
  8631                           
  8632                           ;psect for function _dtoa
  8633  03FC                     _dtoa:	
  8634                           
  8635                           ;incstack = 0
  8636                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8637                           ;dtoa@fp stored from wreg
  8638  03FC  0020               	movlb	0	; select bank0
  8639  03FD  00BB               	movwf	dtoa@fp
  8640                           
  8641                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 274: static int dtoa(F
      +                          ILE *fp, long long d);K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 2
      +                          75: {;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 276:     int i, p
      +                          , s, w;;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 277:     long l
      +                          ong n;;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 280:     n = d;
  8642  03FE  0830               	movf	dtoa@d,w
  8643  03FF  00C4               	movwf	dtoa@n
  8644  0400  0831               	movf	dtoa@d+1,w
  8645  0401  00C5               	movwf	dtoa@n+1
  8646  0402  0832               	movf	dtoa@d+2,w
  8647  0403  00C6               	movwf	dtoa@n+2
  8648  0404  0833               	movf	dtoa@d+3,w
  8649  0405  00C7               	movwf	dtoa@n+3
  8650  0406  0834               	movf	dtoa@d+4,w
  8651  0407  00C8               	movwf	dtoa@n+4
  8652  0408  0835               	movf	dtoa@d+5,w
  8653  0409  00C9               	movwf	dtoa@n+5
  8654  040A  0836               	movf	dtoa@d+6,w
  8655  040B  00CA               	movwf	dtoa@n+6
  8656  040C  0837               	movf	dtoa@d+7,w
  8657  040D  00CB               	movwf	dtoa@n+7
  8658                           
  8659                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 281:     s = n < 0 ? 1
      +                           : 0;
  8660  040E  3044               	movlw	low dtoa@n
  8661  040F  0086               	movwf	6
  8662  0410  3000               	movlw	high dtoa@n
  8663  0411  0087               	movwf	7
  8664  0412  3F47               	moviw [7]fsr1
  8665  0413  00B8               	movwf	??_dtoa
  8666  0414  1FB8               	btfss	??_dtoa,7
  8667  0415  2C18               	goto	u3080
  8668  0416  3001               	movlw	1
  8669  0417  2C19               	goto	u3090
  8670  0418                     u3080:	
  8671  0418  3000               	movlw	0
  8672  0419                     u3090:	
  8673  0419  0020               	movlb	0	; select bank0
  8674  041A  00B9               	movwf	??_dtoa+1
  8675  041B  01BA               	clrf	??_dtoa+2
  8676  041C  0839               	movf	??_dtoa+1,w
  8677  041D  00C2               	movwf	dtoa@s
  8678  041E  083A               	movf	??_dtoa+2,w
  8679  041F  00C3               	movwf	dtoa@s+1
  8680                           
  8681                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 282:     if (s) {
  8682  0420  0842               	movf	dtoa@s,w
  8683  0421  0443               	iorwf	dtoa@s+1,w
  8684  0422  1903               	btfsc	3,2
  8685  0423  2C42               	goto	l476
  8686                           
  8687                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 283:         n = -n;
  8688  0424  09C4               	comf	dtoa@n,f
  8689  0425  09C5               	comf	dtoa@n+1,f
  8690  0426  09C6               	comf	dtoa@n+2,f
  8691  0427  09C7               	comf	dtoa@n+3,f
  8692  0428  09C8               	comf	dtoa@n+4,f
  8693  0429  09C9               	comf	dtoa@n+5,f
  8694  042A  09CA               	comf	dtoa@n+6,f
  8695  042B  09CB               	comf	dtoa@n+7,f
  8696  042C  0AC4               	incf	dtoa@n,f
  8697  042D  1D03               	skipz
  8698  042E  2C42               	goto	l476
  8699  042F  0AC5               	incf	dtoa@n+1,f
  8700  0430  1D03               	skipz
  8701  0431  2C42               	goto	l476
  8702  0432  0AC6               	incf	dtoa@n+2,f
  8703  0433  1D03               	skipz
  8704  0434  2C42               	goto	l476
  8705  0435  0AC7               	incf	dtoa@n+3,f
  8706  0436  1D03               	skipz
  8707  0437  2C42               	goto	l476
  8708  0438  0AC8               	incf	dtoa@n+4,f
  8709  0439  1D03               	skipz
  8710  043A  2C42               	goto	l476
  8711  043B  0AC9               	incf	dtoa@n+5,f
  8712  043C  1D03               	skipz
  8713  043D  2C42               	goto	l476
  8714  043E  0ACA               	incf	dtoa@n+6,f
  8715  043F  1D03               	skipz
  8716  0440  2C42               	goto	l476
  8717  0441  0ACB               	incf	dtoa@n+7,f
  8718  0442                     l476:	
  8719                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 284:     }
  8720                           
  8721                           
  8722                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 287:     if (!(prec < 
      +                          0)) {
  8723  0442  0021               	movlb	1	; select bank1
  8724  0443  1BDB               	btfsc	(_prec+1)^(0+128),7
  8725  0444  2C4A               	goto	l477
  8726                           
  8727                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 288:         flags &= 
      +                          ~(1 << 1);
  8728  0445  30FD               	movlw	253
  8729  0446  0020               	movlb	0	; select bank0
  8730  0447  05ED               	andwf	_flags,f
  8731  0448  30FF               	movlw	255
  8732  0449  05EE               	andwf	_flags+1,f
  8733  044A                     l477:	
  8734                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 289:     }
  8735                           
  8736                           
  8737                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 290:     p = (0 < prec
      +                          ) ? prec : 1;
  8738  044A  0021               	movlb	1	; select bank1
  8739  044B  085B               	movf	(_prec+1)^(0+128),w
  8740  044C  3A80               	xorlw	128
  8741  044D  0020               	movlb	0	; select bank0
  8742  044E  00B8               	movwf	??_dtoa
  8743  044F  3080               	movlw	128
  8744  0450  0238               	subwf	??_dtoa,w
  8745  0451  1D03               	skipz
  8746  0452  2C56               	goto	u3135
  8747  0453  3001               	movlw	1
  8748  0454  0021               	movlb	1	; select bank1
  8749  0455  025A               	subwf	_prec^(0+128),w
  8750  0456                     u3135:	
  8751  0456  1803               	skipnc
  8752  0457  2C5E               	goto	l3304
  8753  0458  3001               	movlw	1
  8754  0459  0020               	movlb	0	; select bank0
  8755  045A  00BE               	movwf	dtoa@p
  8756  045B  3000               	movlw	0
  8757  045C  00BF               	movwf	dtoa@p+1
  8758  045D  2C66               	goto	l481
  8759  045E                     l3304:	
  8760  045E  0021               	movlb	1	; select bank1
  8761  045F  085B               	movf	(_prec+1)^(0+128),w
  8762  0460  0020               	movlb	0	; select bank0
  8763  0461  00BF               	movwf	dtoa@p+1
  8764  0462  0021               	movlb	1	; select bank1
  8765  0463  085A               	movf	_prec^(0+128),w
  8766  0464  0020               	movlb	0	; select bank0
  8767  0465  00BE               	movwf	dtoa@p
  8768  0466                     l481:	
  8769                           
  8770                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 291:     w = width;
  8771  0466  0021               	movlb	1	; select bank1
  8772  0467  0859               	movf	(_width+1)^(0+128),w
  8773  0468  0020               	movlb	0	; select bank0
  8774  0469  00C1               	movwf	dtoa@w+1
  8775  046A  0021               	movlb	1	; select bank1
  8776  046B  0858               	movf	_width^(0+128),w
  8777  046C  0020               	movlb	0	; select bank0
  8778  046D  00C0               	movwf	dtoa@w
  8779                           
  8780                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 292:     if (s || (fla
      +                          gs & (1 << 2))) {
  8781  046E  0842               	movf	dtoa@s,w
  8782  046F  0443               	iorwf	dtoa@s+1,w
  8783  0470  1D03               	btfss	3,2
  8784  0471  2C74               	goto	l3310
  8785  0472  1D6D               	btfss	_flags,2
  8786  0473  2C78               	goto	l482
  8787  0474                     l3310:	
  8788                           
  8789                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 293:         --w;
  8790  0474  30FF               	movlw	255
  8791  0475  07C0               	addwf	dtoa@w,f
  8792  0476  30FF               	movlw	255
  8793  0477  3DC1               	addwfc	dtoa@w+1,f
  8794  0478                     l482:	
  8795                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 294:     }
  8796                           
  8797                           
  8798                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 297:     i = sizeof(db
      +                          uf) - 1;
  8799  0478  301F               	movlw	31
  8800  0479  00CC               	movwf	dtoa@i
  8801  047A  3000               	movlw	0
  8802  047B  00CD               	movwf	dtoa@i+1
  8803                           
  8804                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 298:     dbuf[i] = '\0
      +                          ';
  8805  047C  0023               	movlb	3	; select bank3
  8806  047D  01EB               	clrf	(_dbuf^(0+384)+31)
  8807                           
  8808                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 299:     while (!(i < 
      +                          1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8809  047E  2D0D               	goto	l485
  8810  047F                     l3324:	
  8811  047F  0020               	movlb	0	; select bank0
  8812  0480  0844               	movf	dtoa@n,w
  8813  0481  0445               	iorwf	dtoa@n+1,w
  8814  0482  0446               	iorwf	dtoa@n+2,w
  8815  0483  0447               	iorwf	dtoa@n+3,w
  8816  0484  0448               	iorwf	dtoa@n+4,w
  8817  0485  0449               	iorwf	dtoa@n+5,w
  8818  0486  044A               	iorwf	dtoa@n+6,w
  8819  0487  044B               	iorwf	dtoa@n+7,w
  8820  0488  1D03               	skipz
  8821  0489  2CA4               	goto	l3314
  8822  048A  083F               	movf	dtoa@p+1,w
  8823  048B  3A80               	xorlw	128
  8824  048C  00B8               	movwf	??_dtoa
  8825  048D  3080               	movlw	128
  8826  048E  0238               	subwf	??_dtoa,w
  8827  048F  1D03               	skipz
  8828  0490  2C93               	goto	u3185
  8829  0491  3001               	movlw	1
  8830  0492  023E               	subwf	dtoa@p,w
  8831  0493                     u3185:	
  8832  0493  1803               	skipnc
  8833  0494  2CA4               	goto	l3314
  8834  0495  0020               	movlb	0	; select bank0
  8835  0496  0841               	movf	dtoa@w+1,w
  8836  0497  3A80               	xorlw	128
  8837  0498  00B8               	movwf	??_dtoa
  8838  0499  3080               	movlw	128
  8839  049A  0238               	subwf	??_dtoa,w
  8840  049B  1D03               	skipz
  8841  049C  2C9F               	goto	u3195
  8842  049D  3001               	movlw	1
  8843  049E  0240               	subwf	dtoa@w,w
  8844  049F                     u3195:	
  8845  049F  1C03               	skipc
  8846  04A0  2D19               	goto	l3332
  8847  04A1  0020               	movlb	0	; select bank0
  8848  04A2  1CED               	btfss	_flags,1
  8849  04A3  2D19               	goto	l3332
  8850  04A4                     l3314:	
  8851                           
  8852                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 300:         --i;
  8853  04A4  30FF               	movlw	255
  8854  04A5  0020               	movlb	0	; select bank0
  8855  04A6  07CC               	addwf	dtoa@i,f
  8856  04A7  30FF               	movlw	255
  8857  04A8  3DCD               	addwfc	dtoa@i+1,f
  8858                           
  8859                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 301:         dbuf[i] =
      +                           '0' + abs(n % 10);
  8860  04A9  300A               	movlw	10
  8861  04AA  00A0               	movwf	___aomod@divisor
  8862  04AB  01A1               	clrf	___aomod@divisor+1
  8863  04AC  01A2               	clrf	___aomod@divisor+2
  8864  04AD  01A3               	clrf	___aomod@divisor+3
  8865  04AE  01A4               	clrf	___aomod@divisor+4
  8866  04AF  01A5               	clrf	___aomod@divisor+5
  8867  04B0  01A6               	clrf	___aomod@divisor+6
  8868  04B1  01A7               	clrf	___aomod@divisor+7
  8869  04B2  0844               	movf	dtoa@n,w
  8870  04B3  00A8               	movwf	___aomod@dividend
  8871  04B4  0845               	movf	dtoa@n+1,w
  8872  04B5  00A9               	movwf	___aomod@dividend+1
  8873  04B6  0846               	movf	dtoa@n+2,w
  8874  04B7  00AA               	movwf	___aomod@dividend+2
  8875  04B8  0847               	movf	dtoa@n+3,w
  8876  04B9  00AB               	movwf	___aomod@dividend+3
  8877  04BA  0848               	movf	dtoa@n+4,w
  8878  04BB  00AC               	movwf	___aomod@dividend+4
  8879  04BC  0849               	movf	dtoa@n+5,w
  8880  04BD  00AD               	movwf	___aomod@dividend+5
  8881  04BE  084A               	movf	dtoa@n+6,w
  8882  04BF  00AE               	movwf	___aomod@dividend+6
  8883  04C0  084B               	movf	dtoa@n+7,w
  8884  04C1  00AF               	movwf	___aomod@dividend+7
  8885  04C2  318F  2724  3183   	fcall	___aomod
  8886  04C5  0020               	movlb	0	; select bank0
  8887  04C6  0821               	movf	?___aomod+1,w
  8888  04C7  00F4               	movwf	abs@a+1
  8889  04C8  0820               	movf	?___aomod,w
  8890  04C9  00F3               	movwf	abs@a
  8891  04CA  3189  211D  3183   	fcall	_abs
  8892  04CD  0873               	movf	?_abs,w
  8893  04CE  3E30               	addlw	48
  8894  04CF  0020               	movlb	0	; select bank0
  8895  04D0  00B8               	movwf	??_dtoa
  8896  04D1  084C               	movf	dtoa@i,w
  8897  04D2  3ECC               	addlw	(low (_dbuf| (0+256)))& (0+255)
  8898  04D3  0086               	movwf	6
  8899  04D4  3001               	movlw	1	; select bank3/4
  8900  04D5  0087               	movwf	7
  8901  04D6  0838               	movf	??_dtoa,w
  8902  04D7  0081               	movwf	1
  8903                           
  8904                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 302:         --p;
  8905  04D8  30FF               	movlw	255
  8906  04D9  07BE               	addwf	dtoa@p,f
  8907  04DA  30FF               	movlw	255
  8908  04DB  3DBF               	addwfc	dtoa@p+1,f
  8909                           
  8910                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 303:         --w;
  8911  04DC  30FF               	movlw	255
  8912  04DD  07C0               	addwf	dtoa@w,f
  8913  04DE  30FF               	movlw	255
  8914  04DF  3DC1               	addwfc	dtoa@w+1,f
  8915                           
  8916                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 304:         n = n / 1
      +                          0;
  8917  04E0  300A               	movlw	10
  8918  04E1  00A0               	movwf	___aodiv@divisor
  8919  04E2  01A1               	clrf	___aodiv@divisor+1
  8920  04E3  01A2               	clrf	___aodiv@divisor+2
  8921  04E4  01A3               	clrf	___aodiv@divisor+3
  8922  04E5  01A4               	clrf	___aodiv@divisor+4
  8923  04E6  01A5               	clrf	___aodiv@divisor+5
  8924  04E7  01A6               	clrf	___aodiv@divisor+6
  8925  04E8  01A7               	clrf	___aodiv@divisor+7
  8926  04E9  0844               	movf	dtoa@n,w
  8927  04EA  00A8               	movwf	___aodiv@dividend
  8928  04EB  0845               	movf	dtoa@n+1,w
  8929  04EC  00A9               	movwf	___aodiv@dividend+1
  8930  04ED  0846               	movf	dtoa@n+2,w
  8931  04EE  00AA               	movwf	___aodiv@dividend+2
  8932  04EF  0847               	movf	dtoa@n+3,w
  8933  04F0  00AB               	movwf	___aodiv@dividend+3
  8934  04F1  0848               	movf	dtoa@n+4,w
  8935  04F2  00AC               	movwf	___aodiv@dividend+4
  8936  04F3  0849               	movf	dtoa@n+5,w
  8937  04F4  00AD               	movwf	___aodiv@dividend+5
  8938  04F5  084A               	movf	dtoa@n+6,w
  8939  04F6  00AE               	movwf	___aodiv@dividend+6
  8940  04F7  084B               	movf	dtoa@n+7,w
  8941  04F8  00AF               	movwf	___aodiv@dividend+7
  8942  04F9  3186  265D  3183   	fcall	___aodiv
  8943  04FC  0020               	movlb	0	; select bank0
  8944  04FD  0820               	movf	?___aodiv,w
  8945  04FE  00C4               	movwf	dtoa@n
  8946  04FF  0821               	movf	?___aodiv+1,w
  8947  0500  00C5               	movwf	dtoa@n+1
  8948  0501  0822               	movf	?___aodiv+2,w
  8949  0502  00C6               	movwf	dtoa@n+2
  8950  0503  0823               	movf	?___aodiv+3,w
  8951  0504  00C7               	movwf	dtoa@n+3
  8952  0505  0824               	movf	?___aodiv+4,w
  8953  0506  00C8               	movwf	dtoa@n+4
  8954  0507  0825               	movf	?___aodiv+5,w
  8955  0508  00C9               	movwf	dtoa@n+5
  8956  0509  0826               	movf	?___aodiv+6,w
  8957  050A  00CA               	movwf	dtoa@n+6
  8958  050B  0827               	movf	?___aodiv+7,w
  8959  050C  00CB               	movwf	dtoa@n+7
  8960  050D                     l485:	
  8961                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 305:     }
  8962                           
  8963                           
  8964                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 299:     while (!(i < 
      +                          1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8965  050D  0020               	movlb	0	; select bank0
  8966  050E  084D               	movf	dtoa@i+1,w
  8967  050F  3A80               	xorlw	128
  8968  0510  00B8               	movwf	??_dtoa
  8969  0511  3080               	movlw	128
  8970  0512  0238               	subwf	??_dtoa,w
  8971  0513  1D03               	skipz
  8972  0514  2D17               	goto	u3165
  8973  0515  3001               	movlw	1
  8974  0516  024C               	subwf	dtoa@i,w
  8975  0517                     u3165:	
  8976  0517  1803               	btfsc	3,0
  8977  0518  2C7F               	goto	l3324
  8978  0519                     l3332:	
  8979                           
  8980                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 308:     if (s || (fla
      +                          gs & (1 << 2))) {
  8981  0519  0020               	movlb	0	; select bank0
  8982  051A  0842               	movf	dtoa@s,w
  8983  051B  0443               	iorwf	dtoa@s+1,w
  8984  051C  1D03               	btfss	3,2
  8985  051D  2D20               	goto	l3336
  8986  051E  1D6D               	btfss	_flags,2
  8987  051F  2D37               	goto	l3346
  8988  0520                     l3336:	
  8989                           
  8990                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 309:         --i;
  8991  0520  30FF               	movlw	255
  8992  0521  07CC               	addwf	dtoa@i,f
  8993  0522  30FF               	movlw	255
  8994  0523  3DCD               	addwfc	dtoa@i+1,f
  8995                           
  8996                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 310:         dbuf[i] =
      +                           s ? '-' : '+';
  8997  0524  0842               	movf	dtoa@s,w
  8998  0525  0443               	iorwf	dtoa@s+1,w
  8999  0526  1D03               	btfss	3,2
  9000  0527  2D2A               	goto	l3342
  9001  0528  302B               	movlw	43
  9002  0529  2D2B               	goto	L12
  9003  052A                     l3342:	
  9004  052A  302D               	movlw	45
  9005  052B                     L12:	
  9006  052B  00BC               	movwf	_dtoa$623
  9007  052C  3000               	movlw	0
  9008  052D  00BD               	movwf	_dtoa$623+1
  9009  052E  083C               	movf	_dtoa$623,w
  9010  052F  00B8               	movwf	??_dtoa
  9011  0530  084C               	movf	dtoa@i,w
  9012  0531  3ECC               	addlw	(low (_dbuf| (0+256)))& (0+255)
  9013  0532  0086               	movwf	6
  9014  0533  3001               	movlw	1	; select bank3/4
  9015  0534  0087               	movwf	7
  9016  0535  0838               	movf	??_dtoa,w
  9017  0536  0081               	movwf	1
  9018  0537                     l3346:	
  9019                           
  9020                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 314:     return pad(fp
      +                          , &dbuf[i], w);
  9021  0537  084C               	movf	dtoa@i,w
  9022  0538  3ECC               	addlw	(low (_dbuf| (0+256)))& (0+255)
  9023  0539  00B8               	movwf	??_dtoa
  9024  053A  0838               	movf	??_dtoa,w
  9025  053B  00A4               	movwf	pad@buf
  9026  053C  0841               	movf	dtoa@w+1,w
  9027  053D  00A6               	movwf	pad@p+1
  9028  053E  0840               	movf	dtoa@w,w
  9029  053F  00A5               	movwf	pad@p
  9030  0540  083B               	movf	dtoa@fp,w
  9031  0541  318C  241C         	fcall	_pad
  9032  0543  0020               	movlb	0	; select bank0
  9033  0544  0825               	movf	?_pad+1,w
  9034  0545  00B1               	movwf	?_dtoa+1
  9035  0546  0824               	movf	?_pad,w
  9036  0547  00B0               	movwf	?_dtoa
  9037  0548  0008               	return
  9038  0549                     __end_of_dtoa:	
  9039                           
  9040                           	psect	text30
  9041  0C1C                     __ptext30:	
  9042 ;; *************** function _pad *****************
  9043 ;; Defined at:
  9044 ;;		line 72 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c"
  9045 ;; Parameters:    Size  Location     Type
  9046 ;;  fp              1    wreg     PTR struct _IO_FILE
  9047 ;;		 -> sprintf@f(6), NULL(0), 
  9048 ;;  buf             1    4[BANK0 ] PTR unsigned char 
  9049 ;;		 -> dbuf(32), 
  9050 ;;  p               2    5[BANK0 ] int 
  9051 ;; Auto vars:     Size  Location     Type
  9052 ;;  fp              1   12[BANK0 ] PTR struct _IO_FILE
  9053 ;;		 -> sprintf@f(6), NULL(0), 
  9054 ;;  w               2   10[BANK0 ] int 
  9055 ;;  i               2    8[BANK0 ] int 
  9056 ;; Return value:  Size  Location     Type
  9057 ;;                  2    4[BANK0 ] int 
  9058 ;; Registers used:
  9059 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9060 ;; Tracked objects:
  9061 ;;		On entry : 0/0
  9062 ;;		On exit  : 0/0
  9063 ;;		Unchanged: 0/0
  9064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9065 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9066 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9067 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9068 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9069 ;;Total ram usage:        9 bytes
  9070 ;; Hardware stack levels used:    1
  9071 ;; Hardware stack levels required when called:    7
  9072 ;; This function calls:
  9073 ;;		_fputc
  9074 ;;		_fputs
  9075 ;;		_strlen
  9076 ;; This function is called by:
  9077 ;;		_dtoa
  9078 ;;		_xtoa
  9079 ;; This function uses a non-reentrant model
  9080 ;;
  9081                           
  9082                           
  9083                           ;psect for function _pad
  9084  0C1C                     _pad:	
  9085                           
  9086                           ;incstack = 0
  9087                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9088                           ;pad@fp stored from wreg
  9089  0C1C  0020               	movlb	0	; select bank0
  9090  0C1D  00AC               	movwf	pad@fp
  9091                           
  9092                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 72: static int pad(FIL
      +                          E *fp, char *buf, int p);K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c
      +                          : 73: {;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 74:     int i, 
      +                          w;;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 77:     if (flags & 
      +                          (1 << 0)) {
  9093  0C1E  1C6D               	btfss	_flags,0
  9094  0C1F  2C28               	goto	l3274
  9095                           
  9096                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 78:         fputs((con
      +                          st char *)buf, fp);
  9097  0C20  082C               	movf	pad@fp,w
  9098  0C21  00A7               	movwf	??_pad
  9099  0C22  0827               	movf	??_pad,w
  9100  0C23  00FA               	movwf	fputs@fp
  9101  0C24  0824               	movf	pad@buf,w
  9102  0C25  318A  221E  318C   	fcall	_fputs
  9103  0C28                     l3274:	
  9104                           
  9105                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 82:     w = (p < 0) ? 
      +                          0 : p;
  9106  0C28  0020               	movlb	0	; select bank0
  9107  0C29  1BA6               	btfsc	pad@p+1,7
  9108  0C2A  2C30               	goto	l3278
  9109  0C2B  0826               	movf	pad@p+1,w
  9110  0C2C  00AB               	movwf	pad@w+1
  9111  0C2D  0825               	movf	pad@p,w
  9112  0C2E  00AA               	movwf	pad@w
  9113  0C2F  2C32               	goto	l468
  9114  0C30                     l3278:	
  9115  0C30  01AA               	clrf	pad@w
  9116  0C31  01AB               	clrf	pad@w+1
  9117  0C32                     l468:	
  9118                           
  9119                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  9120  0C32  01A8               	clrf	pad@i
  9121  0C33  01A9               	clrf	pad@i+1
  9122  0C34                     l3284:	
  9123                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 84:     while (i < w) 
      +                          {
  9124                           
  9125                           
  9126                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 84:     while (i < w) 
      +                          {
  9127  0C34  0829               	movf	pad@i+1,w
  9128  0C35  3A80               	xorlw	128
  9129  0C36  00A7               	movwf	??_pad
  9130  0C37  082B               	movf	pad@w+1,w
  9131  0C38  3A80               	xorlw	128
  9132  0C39  0227               	subwf	??_pad,w
  9133  0C3A  1D03               	skipz
  9134  0C3B  2C3E               	goto	u3065
  9135  0C3C  082A               	movf	pad@w,w
  9136  0C3D  0228               	subwf	pad@i,w
  9137  0C3E                     u3065:	
  9138  0C3E  1803               	btfsc	3,0
  9139  0C3F  2C52               	goto	l471
  9140                           
  9141                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 85:         fputc(' ',
      +                           fp);
  9142  0C40  3020               	movlw	32
  9143  0C41  00F2               	movwf	fputc@c
  9144  0C42  3000               	movlw	0
  9145  0C43  00F3               	movwf	fputc@c+1
  9146  0C44  0020               	movlb	0	; select bank0
  9147  0C45  082C               	movf	pad@fp,w
  9148  0C46  00A7               	movwf	??_pad
  9149  0C47  0827               	movf	??_pad,w
  9150  0C48  00F4               	movwf	fputc@fp
  9151  0C49  318B  23D1  318C   	fcall	_fputc
  9152                           
  9153                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 86:         ++i;
  9154  0C4C  3001               	movlw	1
  9155  0C4D  0020               	movlb	0	; select bank0
  9156  0C4E  07A8               	addwf	pad@i,f
  9157  0C4F  3000               	movlw	0
  9158  0C50  3DA9               	addwfc	pad@i+1,f
  9159  0C51  2C34               	goto	l3284
  9160  0C52                     l471:	
  9161                           
  9162                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 90:     if (!(flags & 
      +                          (1 << 0))) {
  9163  0C52  0020               	movlb	0	; select bank0
  9164  0C53  186D               	btfsc	_flags,0
  9165  0C54  2C5D               	goto	l3288
  9166                           
  9167                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 91:         fputs((con
      +                          st char *)buf, fp);
  9168  0C55  082C               	movf	pad@fp,w
  9169  0C56  00A7               	movwf	??_pad
  9170  0C57  0827               	movf	??_pad,w
  9171  0C58  00FA               	movwf	fputs@fp
  9172  0C59  0824               	movf	pad@buf,w
  9173  0C5A  318A  221E  318C   	fcall	_fputs
  9174  0C5D                     l3288:	
  9175                           
  9176                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 94:     return strlen(
      +                          buf) + w;
  9177  0C5D  0020               	movlb	0	; select bank0
  9178  0C5E  0824               	movf	pad@buf,w
  9179  0C5F  00F0               	movwf	strlen@s
  9180  0C60  3001               	movlw	1
  9181  0C61  00F1               	movwf	strlen@s+1
  9182  0C62  3189  2134         	fcall	_strlen
  9183  0C64  0020               	movlb	0	; select bank0
  9184  0C65  082A               	movf	pad@w,w
  9185  0C66  0770               	addwf	?_strlen,w
  9186  0C67  00A4               	movwf	?_pad
  9187  0C68  082B               	movf	pad@w+1,w
  9188  0C69  3D71               	addwfc	?_strlen+1,w
  9189  0C6A  00A5               	movwf	?_pad+1
  9190  0C6B  0008               	return
  9191  0C6C                     __end_of_pad:	
  9192                           
  9193                           	psect	text31
  9194  0934                     __ptext31:	
  9195 ;; *************** function _strlen *****************
  9196 ;; Defined at:
  9197 ;;		line 12 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\strlen.c"
  9198 ;; Parameters:    Size  Location     Type
  9199 ;;  s               2    0[COMMON] PTR const unsigned char 
  9200 ;;		 -> ?_printf(2), ?_sprintf(2), stoa@nuls(7), dbuf(32), 
  9201 ;;		 -> gps_vertical_velocity(8), gps_course_over_ground(8), gps_speed_over_ground(8), gps_altitude(12), 
  9202 ;;		 -> gps_longitude(16), gps_latitude(16), gps_time(10), message_end(73), 
  9203 ;;		 -> message_start(70), 
  9204 ;; Auto vars:     Size  Location     Type
  9205 ;;  a               2    2[COMMON] PTR const unsigned char 
  9206 ;;		 -> ?_printf(2), ?_sprintf(2), stoa@nuls(7), dbuf(32), 
  9207 ;;		 -> gps_vertical_velocity(8), gps_course_over_ground(8), gps_speed_over_ground(8), gps_altitude(12), 
  9208 ;;		 -> gps_longitude(16), gps_latitude(16), gps_time(10), message_end(73), 
  9209 ;;		 -> message_start(70), 
  9210 ;; Return value:  Size  Location     Type
  9211 ;;                  2    0[COMMON] unsigned int 
  9212 ;; Registers used:
  9213 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9214 ;; Tracked objects:
  9215 ;;		On entry : 0/0
  9216 ;;		On exit  : 0/0
  9217 ;;		Unchanged: 0/0
  9218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9219 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9220 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9222 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9223 ;;Total ram usage:        4 bytes
  9224 ;; Hardware stack levels used:    1
  9225 ;; Hardware stack levels required when called:    3
  9226 ;; This function calls:
  9227 ;;		Nothing
  9228 ;; This function is called by:
  9229 ;;		_crc16
  9230 ;;		_TransmitString
  9231 ;;		_pad
  9232 ;;		_stoa
  9233 ;;		_strcat
  9234 ;; This function uses a non-reentrant model
  9235 ;;
  9236                           
  9237                           
  9238                           ;psect for function _strlen
  9239  0934                     _strlen:	
  9240                           
  9241                           ;incstack = 0
  9242                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  9243  0934  0871               	movf	strlen@s+1,w
  9244  0935  00F3               	movwf	strlen@a+1
  9245  0936  0870               	movf	strlen@s,w
  9246  0937  00F2               	movwf	strlen@a
  9247  0938                     l3264:	
  9248  0938  0870               	movf	strlen@s,w
  9249  0939  0086               	movwf	6
  9250  093A  0871               	movf	strlen@s+1,w
  9251  093B  0087               	movwf	7
  9252  093C  0801               	movf	1,w
  9253  093D  1903               	btfsc	3,2
  9254  093E  2944               	goto	l3266
  9255  093F  3001               	movlw	1
  9256  0940  07F0               	addwf	strlen@s,f
  9257  0941  3000               	movlw	0
  9258  0942  3DF1               	addwfc	strlen@s+1,f
  9259  0943  2938               	goto	l3264
  9260  0944                     l3266:	
  9261  0944  0872               	movf	strlen@a,w
  9262  0945  0270               	subwf	strlen@s,w
  9263  0946  00F0               	movwf	?_strlen
  9264  0947  0873               	movf	strlen@a+1,w
  9265  0948  3B71               	subwfb	strlen@s+1,w
  9266  0949  00F1               	movwf	?_strlen+1
  9267  094A  0008               	return
  9268  094B                     __end_of_strlen:	
  9269                           
  9270                           	psect	text32
  9271  0A1E                     __ptext32:	
  9272 ;; *************** function _fputs *****************
  9273 ;; Defined at:
  9274 ;;		line 8 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\nf_fputs.c"
  9275 ;; Parameters:    Size  Location     Type
  9276 ;;  s               1    wreg     PTR const unsigned char 
  9277 ;;		 -> dbuf(32), 
  9278 ;;  fp              1   10[COMMON] PTR struct _IO_FILE
  9279 ;;		 -> sprintf@f(6), NULL(0), 
  9280 ;; Auto vars:     Size  Location     Type
  9281 ;;  s               1    3[BANK0 ] PTR const unsigned char 
  9282 ;;		 -> dbuf(32), 
  9283 ;;  i               2    1[BANK0 ] int 
  9284 ;;  c               1    0[BANK0 ] unsigned char 
  9285 ;; Return value:  Size  Location     Type
  9286 ;;                  2   10[COMMON] int 
  9287 ;; Registers used:
  9288 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9289 ;; Tracked objects:
  9290 ;;		On entry : 0/0
  9291 ;;		On exit  : 0/0
  9292 ;;		Unchanged: 0/0
  9293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9294 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9295 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9296 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9297 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9298 ;;Total ram usage:        8 bytes
  9299 ;; Hardware stack levels used:    1
  9300 ;; Hardware stack levels required when called:    6
  9301 ;; This function calls:
  9302 ;;		_fputc
  9303 ;; This function is called by:
  9304 ;;		_pad
  9305 ;; This function uses a non-reentrant model
  9306 ;;
  9307                           
  9308                           
  9309                           ;psect for function _fputs
  9310  0A1E                     _fputs:	
  9311                           
  9312                           ;incstack = 0
  9313                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9314                           ;fputs@s stored from wreg
  9315  0A1E  0020               	movlb	0	; select bank0
  9316  0A1F  00A3               	movwf	fputs@s
  9317  0A20  01A1               	clrf	fputs@i
  9318  0A21  01A2               	clrf	fputs@i+1
  9319  0A22                     l2272:	
  9320  0A22  0821               	movf	fputs@i,w
  9321  0A23  0723               	addwf	fputs@s,w
  9322  0A24  00FB               	movwf	??_fputs
  9323  0A25  087B               	movf	??_fputs,w
  9324  0A26  0086               	movwf	6
  9325  0A27  3001               	movlw	1	; select bank2/3
  9326  0A28  0087               	movwf	7
  9327  0A29  0801               	movf	1,w
  9328  0A2A  00FC               	movwf	??_fputs+1
  9329  0A2B  087C               	movf	??_fputs+1,w
  9330  0A2C  00A0               	movwf	fputs@c
  9331  0A2D  0820               	movf	fputs@c,w
  9332  0A2E  1903               	btfsc	3,2
  9333  0A2F  0008               	return
  9334  0A30  0820               	movf	fputs@c,w
  9335  0A31  00FB               	movwf	??_fputs
  9336  0A32  01FC               	clrf	??_fputs+1
  9337  0A33  087B               	movf	??_fputs,w
  9338  0A34  00F2               	movwf	fputc@c
  9339  0A35  087C               	movf	??_fputs+1,w
  9340  0A36  00F3               	movwf	fputc@c+1
  9341  0A37  087A               	movf	fputs@fp,w
  9342  0A38  00FD               	movwf	??_fputs+2
  9343  0A39  087D               	movf	??_fputs+2,w
  9344  0A3A  00F4               	movwf	fputc@fp
  9345  0A3B  318B  23D1  318A   	fcall	_fputc
  9346  0A3E  3001               	movlw	1
  9347  0A3F  0020               	movlb	0	; select bank0
  9348  0A40  07A1               	addwf	fputs@i,f
  9349  0A41  3000               	movlw	0
  9350  0A42  3DA2               	addwfc	fputs@i+1,f
  9351  0A43  2A22               	goto	l2272
  9352  0A44                     __end_of_fputs:	
  9353                           
  9354                           	psect	text33
  9355  0BD1                     __ptext33:	
  9356 ;; *************** function _fputc *****************
  9357 ;; Defined at:
  9358 ;;		line 8 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\nf_fputc.c"
  9359 ;; Parameters:    Size  Location     Type
  9360 ;;  c               2    2[COMMON] int 
  9361 ;;  fp              1    4[COMMON] PTR struct _IO_FILE
  9362 ;;		 -> sprintf@f(6), NULL(0), 
  9363 ;; Auto vars:     Size  Location     Type
  9364 ;;		None
  9365 ;; Return value:  Size  Location     Type
  9366 ;;                  2    2[COMMON] int 
  9367 ;; Registers used:
  9368 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9369 ;; Tracked objects:
  9370 ;;		On entry : 0/0
  9371 ;;		On exit  : 0/0
  9372 ;;		Unchanged: 0/0
  9373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9374 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9376 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9377 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9378 ;;Total ram usage:        8 bytes
  9379 ;; Hardware stack levels used:    1
  9380 ;; Hardware stack levels required when called:    5
  9381 ;; This function calls:
  9382 ;;		_putch
  9383 ;; This function is called by:
  9384 ;;		_pad
  9385 ;;		_stoa
  9386 ;;		_vfpfcnvrt
  9387 ;;		_fputs
  9388 ;; This function uses a non-reentrant model
  9389 ;;
  9390                           
  9391                           
  9392                           ;psect for function _fputc
  9393  0BD1                     _fputc:	
  9394                           
  9395                           ;incstack = 0
  9396                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9397  0BD1  0874               	movf	fputc@fp,w
  9398  0BD2  1D03               	btfss	3,2
  9399  0BD3  0874               	movf	fputc@fp,w
  9400  0BD4  1D03               	btfss	3,2
  9401  0BD5  2BDA               	goto	l2246
  9402  0BD6  0872               	movf	fputc@c,w
  9403  0BD7  3188  205A         	fcall	_putch
  9404  0BD9  0008               	return
  9405  0BDA                     l2246:	
  9406  0BDA  0874               	movf	fputc@fp,w
  9407  0BDB  3E04               	addlw	4
  9408  0BDC  0086               	movwf	6
  9409  0BDD  0187               	clrf	7
  9410  0BDE  0016               	moviw fsr1++
  9411  0BDF  0401               	iorwf	1,w
  9412  0BE0  1903               	btfsc	3,2
  9413  0BE1  2BFE               	goto	l2250
  9414  0BE2  0874               	movf	fputc@fp,w
  9415  0BE3  3E04               	addlw	4
  9416  0BE4  0086               	movwf	6
  9417  0BE5  0187               	clrf	7
  9418  0BE6  3F40               	moviw [0]fsr1
  9419  0BE7  00F5               	movwf	??_fputc
  9420  0BE8  3F41               	moviw [1]fsr1
  9421  0BE9  00F6               	movwf	??_fputc+1
  9422  0BEA  0874               	movf	fputc@fp,w
  9423  0BEB  3E02               	addlw	2
  9424  0BEC  0086               	movwf	6
  9425  0BED  0187               	clrf	7
  9426  0BEE  3F40               	moviw [0]fsr1
  9427  0BEF  00F7               	movwf	??_fputc+2
  9428  0BF0  3F41               	moviw [1]fsr1
  9429  0BF1  00F8               	movwf	??_fputc+3
  9430  0BF2  0878               	movf	??_fputc+3,w
  9431  0BF3  3A80               	xorlw	128
  9432  0BF4  00F9               	movwf	??_fputc+4
  9433  0BF5  0876               	movf	??_fputc+1,w
  9434  0BF6  3A80               	xorlw	128
  9435  0BF7  0279               	subwf	??_fputc+4,w
  9436  0BF8  1D03               	skipz
  9437  0BF9  2BFC               	goto	u1575
  9438  0BFA  0875               	movf	??_fputc,w
  9439  0BFB  0277               	subwf	??_fputc+2,w
  9440  0BFC                     u1575:	
  9441  0BFC  1803               	skipnc
  9442  0BFD  0008               	return
  9443  0BFE                     l2250:	
  9444  0BFE  0874               	movf	fputc@fp,w
  9445  0BFF  3E02               	addlw	2
  9446  0C00  0086               	movwf	6
  9447  0C01  0187               	clrf	7
  9448  0C02  0874               	movf	fputc@fp,w
  9449  0C03  0084               	movwf	4
  9450  0C04  0185               	clrf	5
  9451  0C05  3F40               	moviw [0]fsr1
  9452  0C06  0700               	addwf	0,w
  9453  0C07  00F5               	movwf	??_fputc
  9454  0C08  3101               	addfsr 0,1
  9455  0C09  3F41               	moviw [1]fsr1
  9456  0C0A  3D00               	addwfc	0,w
  9457  0C0B  00F6               	movwf	??_fputc+1
  9458  0C0C  0875               	movf	??_fputc,w
  9459  0C0D  0086               	movwf	6
  9460  0C0E  0876               	movf	??_fputc+1,w
  9461  0C0F  0087               	movwf	7
  9462  0C10  0872               	movf	fputc@c,w
  9463  0C11  0081               	movwf	1
  9464  0C12  0874               	movf	fputc@fp,w
  9465  0C13  3E02               	addlw	2
  9466  0C14  0086               	movwf	6
  9467  0C15  0187               	clrf	7
  9468  0C16  3001               	movlw	1
  9469  0C17  0781               	addwf	1,f
  9470  0C18  3141               	addfsr 1,1
  9471  0C19  1803               	skipnc
  9472  0C1A  0A81               	incf	1,f
  9473  0C1B  0008               	return
  9474  0C1C                     __end_of_fputc:	
  9475                           
  9476                           	psect	text34
  9477  085A                     __ptext34:	
  9478 ;; *************** function _putch *****************
  9479 ;; Defined at:
  9480 ;;		line 125 in file "mcc_generated_files/eusart.c"
  9481 ;; Parameters:    Size  Location     Type
  9482 ;;  txData          1    wreg     unsigned char 
  9483 ;; Auto vars:     Size  Location     Type
  9484 ;;  txData          1    1[COMMON] unsigned char 
  9485 ;; Return value:  Size  Location     Type
  9486 ;;                  1    wreg      void 
  9487 ;; Registers used:
  9488 ;;		wreg, status,2, status,0, pclath, cstack
  9489 ;; Tracked objects:
  9490 ;;		On entry : 0/0
  9491 ;;		On exit  : 0/0
  9492 ;;		Unchanged: 0/0
  9493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9495 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9497 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9498 ;;Total ram usage:        1 bytes
  9499 ;; Hardware stack levels used:    1
  9500 ;; Hardware stack levels required when called:    4
  9501 ;; This function calls:
  9502 ;;		_EUSART_Write
  9503 ;; This function is called by:
  9504 ;;		_fputc
  9505 ;; This function uses a non-reentrant model
  9506 ;;
  9507                           
  9508                           
  9509                           ;psect for function _putch
  9510  085A                     _putch:	
  9511                           
  9512                           ;incstack = 0
  9513                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  9514                           ;putch@txData stored from wreg
  9515  085A  00F1               	movwf	putch@txData
  9516                           
  9517                           ;mcc_generated_files/eusart.c: 125: void putch(char txData);mcc_generated_files/eusart.c
      +                          : 126: {;mcc_generated_files/eusart.c: 127:     EUSART_Write(txData);
  9518  085B  0871               	movf	putch@txData,w
  9519  085C  3188  2078         	fcall	_EUSART_Write
  9520  085E  0008               	return
  9521  085F                     __end_of_putch:	
  9522                           
  9523                           	psect	text35
  9524  0878                     __ptext35:	
  9525 ;; *************** function _EUSART_Write *****************
  9526 ;; Defined at:
  9527 ;;		line 111 in file "mcc_generated_files/eusart.c"
  9528 ;; Parameters:    Size  Location     Type
  9529 ;;  txData          1    wreg     unsigned char 
  9530 ;; Auto vars:     Size  Location     Type
  9531 ;;  txData          1    0[COMMON] unsigned char 
  9532 ;; Return value:  Size  Location     Type
  9533 ;;                  1    wreg      void 
  9534 ;; Registers used:
  9535 ;;		wreg
  9536 ;; Tracked objects:
  9537 ;;		On entry : 0/0
  9538 ;;		On exit  : 0/0
  9539 ;;		Unchanged: 0/0
  9540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9542 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9544 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9545 ;;Total ram usage:        1 bytes
  9546 ;; Hardware stack levels used:    1
  9547 ;; Hardware stack levels required when called:    3
  9548 ;; This function calls:
  9549 ;;		Nothing
  9550 ;; This function is called by:
  9551 ;;		_putch
  9552 ;;		_GPS_SendUBX
  9553 ;; This function uses a non-reentrant model
  9554 ;;
  9555                           
  9556                           
  9557                           ;psect for function _EUSART_Write
  9558  0878                     _EUSART_Write:	
  9559                           
  9560                           ;incstack = 0
  9561                           ; Regs used in _EUSART_Write: [wreg]
  9562                           ;EUSART_Write@txData stored from wreg
  9563  0878  00F0               	movwf	EUSART_Write@txData
  9564  0879                     l112:	
  9565                           ;mcc_generated_files/eusart.c: 114:     {;mcc_generated_files/eusart.c: 115:     }
  9566                           
  9567                           
  9568                           ;mcc_generated_files/eusart.c: 113:     while(0 == PIR1bits.TXIF)
  9569  0879  0020               	movlb	0	; select bank0
  9570  087A  1E10               	btfss	16,4	;volatile
  9571  087B  2879               	goto	l112
  9572                           
  9573                           ;mcc_generated_files/eusart.c: 117:     TX1REG = txData;
  9574  087C  0870               	movf	EUSART_Write@txData,w
  9575  087D  0023               	movlb	3	; select bank3
  9576  087E  009A               	movwf	26	;volatile
  9577  087F  0008               	return
  9578  0880                     __end_of_EUSART_Write:	
  9579                           
  9580                           	psect	text36
  9581  091D                     __ptext36:	
  9582 ;; *************** function _abs *****************
  9583 ;; Defined at:
  9584 ;;		line 1 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\abs.c"
  9585 ;; Parameters:    Size  Location     Type
  9586 ;;  a               2    3[COMMON] int 
  9587 ;; Auto vars:     Size  Location     Type
  9588 ;;		None
  9589 ;; Return value:  Size  Location     Type
  9590 ;;                  2    3[COMMON] int 
  9591 ;; Registers used:
  9592 ;;		wreg, status,2, status,0
  9593 ;; Tracked objects:
  9594 ;;		On entry : 0/0
  9595 ;;		On exit  : 0/0
  9596 ;;		Unchanged: 0/0
  9597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9598 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9600 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9601 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9602 ;;Total ram usage:        4 bytes
  9603 ;; Hardware stack levels used:    1
  9604 ;; Hardware stack levels required when called:    3
  9605 ;; This function calls:
  9606 ;;		Nothing
  9607 ;; This function is called by:
  9608 ;;		_dtoa
  9609 ;; This function uses a non-reentrant model
  9610 ;;
  9611                           
  9612                           
  9613                           ;psect for function _abs
  9614  091D                     _abs:	
  9615                           
  9616                           ;incstack = 0
  9617                           ; Regs used in _abs: [wreg+status,2+status,0]
  9618  091D  0874               	movf	abs@a+1,w
  9619  091E  3A80               	xorlw	128
  9620  091F  00F5               	movwf	??_abs
  9621  0920  3080               	movlw	128
  9622  0921  0275               	subwf	??_abs,w
  9623  0922  1D03               	skipz
  9624  0923  2926               	goto	u1665
  9625  0924  3001               	movlw	1
  9626  0925  0273               	subwf	abs@a,w
  9627  0926                     u1665:	
  9628  0926  1803               	skipnc
  9629  0927  0008               	return
  9630  0928  0973               	comf	abs@a,w
  9631  0929  00F5               	movwf	??_abs
  9632  092A  0974               	comf	abs@a+1,w
  9633  092B  00F6               	movwf	??_abs+1
  9634  092C  0AF5               	incf	??_abs,f
  9635  092D  1903               	skipnz
  9636  092E  0AF6               	incf	??_abs+1,f
  9637  092F  0875               	movf	??_abs,w
  9638  0930  00F3               	movwf	?_abs
  9639  0931  0876               	movf	??_abs+1,w
  9640  0932  00F4               	movwf	?_abs+1
  9641  0933  0008               	return
  9642  0934                     __end_of_abs:	
  9643                           
  9644                           	psect	text37
  9645  0F24                     __ptext37:	
  9646 ;; *************** function ___aomod *****************
  9647 ;; Defined at:
  9648 ;;		line 7 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\aomod.c"
  9649 ;; Parameters:    Size  Location     Type
  9650 ;;  divisor         8    0[BANK0 ] long long 
  9651 ;;  dividend        8    8[BANK0 ] long long 
  9652 ;; Auto vars:     Size  Location     Type
  9653 ;;  sign            1    2[COMMON] unsigned char 
  9654 ;;  counter         1    1[COMMON] unsigned char 
  9655 ;; Return value:  Size  Location     Type
  9656 ;;                  8    0[BANK0 ] long long 
  9657 ;; Registers used:
  9658 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9659 ;; Tracked objects:
  9660 ;;		On entry : 0/0
  9661 ;;		On exit  : 0/0
  9662 ;;		Unchanged: 0/0
  9663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9664 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9665 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9666 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9667 ;;      Totals:         3      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9668 ;;Total ram usage:       19 bytes
  9669 ;; Hardware stack levels used:    1
  9670 ;; Hardware stack levels required when called:    3
  9671 ;; This function calls:
  9672 ;;		Nothing
  9673 ;; This function is called by:
  9674 ;;		_dtoa
  9675 ;; This function uses a non-reentrant model
  9676 ;;
  9677                           
  9678                           
  9679                           ;psect for function ___aomod
  9680  0F24                     ___aomod:	
  9681                           
  9682                           ;incstack = 0
  9683                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  9684  0F24  01F2               	clrf	___aomod@sign
  9685  0F25  3028               	movlw	low ___aomod@dividend
  9686  0F26  0086               	movwf	6
  9687  0F27  3000               	movlw	high ___aomod@dividend
  9688  0F28  0087               	movwf	7
  9689  0F29  3F47               	moviw [7]fsr1
  9690  0F2A  00F0               	movwf	??___aomod
  9691  0F2B  1FF0               	btfss	??___aomod,7
  9692  0F2C  2F4E               	goto	l2384
  9693  0F2D  0020               	movlb	0	; select bank0
  9694  0F2E  09A8               	comf	___aomod@dividend,f
  9695  0F2F  09A9               	comf	___aomod@dividend+1,f
  9696  0F30  09AA               	comf	___aomod@dividend+2,f
  9697  0F31  09AB               	comf	___aomod@dividend+3,f
  9698  0F32  09AC               	comf	___aomod@dividend+4,f
  9699  0F33  09AD               	comf	___aomod@dividend+5,f
  9700  0F34  09AE               	comf	___aomod@dividend+6,f
  9701  0F35  09AF               	comf	___aomod@dividend+7,f
  9702  0F36  0AA8               	incf	___aomod@dividend,f
  9703  0F37  1D03               	skipz
  9704  0F38  2F4C               	goto	u192lld
  9705  0F39  0AA9               	incf	___aomod@dividend+1,f
  9706  0F3A  1D03               	skipz
  9707  0F3B  2F4C               	goto	u192lld
  9708  0F3C  0AAA               	incf	___aomod@dividend+2,f
  9709  0F3D  1D03               	skipz
  9710  0F3E  2F4C               	goto	u192lld
  9711  0F3F  0AAB               	incf	___aomod@dividend+3,f
  9712  0F40  1D03               	skipz
  9713  0F41  2F4C               	goto	u192lld
  9714  0F42  0AAC               	incf	___aomod@dividend+4,f
  9715  0F43  1D03               	skipz
  9716  0F44  2F4C               	goto	u192lld
  9717  0F45  0AAD               	incf	___aomod@dividend+5,f
  9718  0F46  1D03               	skipz
  9719  0F47  2F4C               	goto	u192lld
  9720  0F48  0AAE               	incf	___aomod@dividend+6,f
  9721  0F49  1D03               	skipz
  9722  0F4A  2F4C               	goto	u192lld
  9723  0F4B  0AAF               	incf	___aomod@dividend+7,f
  9724  0F4C                     u192lld:	
  9725  0F4C  01F2               	clrf	___aomod@sign
  9726  0F4D  0AF2               	incf	___aomod@sign,f
  9727  0F4E                     l2384:	
  9728  0F4E  3020               	movlw	low ___aomod@divisor
  9729  0F4F  0086               	movwf	6
  9730  0F50  3000               	movlw	high ___aomod@divisor
  9731  0F51  0087               	movwf	7
  9732  0F52  3F47               	moviw [7]fsr1
  9733  0F53  00F0               	movwf	??___aomod
  9734  0F54  1FF0               	btfss	??___aomod,7
  9735  0F55  2F75               	goto	l2388
  9736  0F56  0020               	movlb	0	; select bank0
  9737  0F57  09A0               	comf	___aomod@divisor,f
  9738  0F58  09A1               	comf	___aomod@divisor+1,f
  9739  0F59  09A2               	comf	___aomod@divisor+2,f
  9740  0F5A  09A3               	comf	___aomod@divisor+3,f
  9741  0F5B  09A4               	comf	___aomod@divisor+4,f
  9742  0F5C  09A5               	comf	___aomod@divisor+5,f
  9743  0F5D  09A6               	comf	___aomod@divisor+6,f
  9744  0F5E  09A7               	comf	___aomod@divisor+7,f
  9745  0F5F  0AA0               	incf	___aomod@divisor,f
  9746  0F60  1D03               	skipz
  9747  0F61  2F75               	goto	l2388
  9748  0F62  0AA1               	incf	___aomod@divisor+1,f
  9749  0F63  1D03               	skipz
  9750  0F64  2F75               	goto	l2388
  9751  0F65  0AA2               	incf	___aomod@divisor+2,f
  9752  0F66  1D03               	skipz
  9753  0F67  2F75               	goto	l2388
  9754  0F68  0AA3               	incf	___aomod@divisor+3,f
  9755  0F69  1D03               	skipz
  9756  0F6A  2F75               	goto	l2388
  9757  0F6B  0AA4               	incf	___aomod@divisor+4,f
  9758  0F6C  1D03               	skipz
  9759  0F6D  2F75               	goto	l2388
  9760  0F6E  0AA5               	incf	___aomod@divisor+5,f
  9761  0F6F  1D03               	skipz
  9762  0F70  2F75               	goto	l2388
  9763  0F71  0AA6               	incf	___aomod@divisor+6,f
  9764  0F72  1D03               	skipz
  9765  0F73  2F75               	goto	l2388
  9766  0F74  0AA7               	incf	___aomod@divisor+7,f
  9767  0F75                     l2388:	
  9768  0F75  0020               	movlb	0	; select bank0
  9769  0F76  0820               	movf	___aomod@divisor,w
  9770  0F77  0421               	iorwf	___aomod@divisor+1,w
  9771  0F78  0422               	iorwf	___aomod@divisor+2,w
  9772  0F79  0423               	iorwf	___aomod@divisor+3,w
  9773  0F7A  0424               	iorwf	___aomod@divisor+4,w
  9774  0F7B  0425               	iorwf	___aomod@divisor+5,w
  9775  0F7C  0426               	iorwf	___aomod@divisor+6,w
  9776  0F7D  0427               	iorwf	___aomod@divisor+7,w
  9777  0F7E  1903               	skipnz
  9778  0F7F  2FCD               	goto	l2404
  9779  0F80  01F1               	clrf	___aomod@counter
  9780  0F81  0AF1               	incf	___aomod@counter,f
  9781  0F82                     l2396:	
  9782  0F82  1BA7               	btfsc	___aomod@divisor+7,7
  9783  0F83  2F91               	goto	l2398
  9784  0F84  35A0               	lslf	___aomod@divisor,f
  9785  0F85  0DA1               	rlf	___aomod@divisor+1,f
  9786  0F86  0DA2               	rlf	___aomod@divisor+2,f
  9787  0F87  0DA3               	rlf	___aomod@divisor+3,f
  9788  0F88  0DA4               	rlf	___aomod@divisor+4,f
  9789  0F89  0DA5               	rlf	___aomod@divisor+5,f
  9790  0F8A  0DA6               	rlf	___aomod@divisor+6,f
  9791  0F8B  0DA7               	rlf	___aomod@divisor+7,f
  9792  0F8C  3001               	movlw	1
  9793  0F8D  00F0               	movwf	??___aomod
  9794  0F8E  0870               	movf	??___aomod,w
  9795  0F8F  07F1               	addwf	___aomod@counter,f
  9796  0F90  2F82               	goto	l2396
  9797  0F91                     l2398:	
  9798  0F91  0827               	movf	___aomod@divisor+7,w
  9799  0F92  022F               	subwf	___aomod@dividend+7,w
  9800  0F93  1D03               	skipz
  9801  0F94  2FAF               	goto	u1975
  9802  0F95  0826               	movf	___aomod@divisor+6,w
  9803  0F96  022E               	subwf	___aomod@dividend+6,w
  9804  0F97  1D03               	skipz
  9805  0F98  2FAF               	goto	u1975
  9806  0F99  0825               	movf	___aomod@divisor+5,w
  9807  0F9A  022D               	subwf	___aomod@dividend+5,w
  9808  0F9B  1D03               	skipz
  9809  0F9C  2FAF               	goto	u1975
  9810  0F9D  0824               	movf	___aomod@divisor+4,w
  9811  0F9E  022C               	subwf	___aomod@dividend+4,w
  9812  0F9F  1D03               	skipz
  9813  0FA0  2FAF               	goto	u1975
  9814  0FA1  0823               	movf	___aomod@divisor+3,w
  9815  0FA2  022B               	subwf	___aomod@dividend+3,w
  9816  0FA3  1D03               	skipz
  9817  0FA4  2FAF               	goto	u1975
  9818  0FA5  0822               	movf	___aomod@divisor+2,w
  9819  0FA6  022A               	subwf	___aomod@dividend+2,w
  9820  0FA7  1D03               	skipz
  9821  0FA8  2FAF               	goto	u1975
  9822  0FA9  0821               	movf	___aomod@divisor+1,w
  9823  0FAA  0229               	subwf	___aomod@dividend+1,w
  9824  0FAB  1D03               	skipz
  9825  0FAC  2FAF               	goto	u1975
  9826  0FAD  0820               	movf	___aomod@divisor,w
  9827  0FAE  0228               	subwf	___aomod@dividend,w
  9828  0FAF                     u1975:	
  9829  0FAF  1C03               	skipc
  9830  0FB0  2FC1               	goto	l2402
  9831  0FB1  0820               	movf	___aomod@divisor,w
  9832  0FB2  02A8               	subwf	___aomod@dividend,f
  9833  0FB3  0821               	movf	___aomod@divisor+1,w
  9834  0FB4  3BA9               	subwfb	___aomod@dividend+1,f
  9835  0FB5  0822               	movf	___aomod@divisor+2,w
  9836  0FB6  3BAA               	subwfb	___aomod@dividend+2,f
  9837  0FB7  0823               	movf	___aomod@divisor+3,w
  9838  0FB8  3BAB               	subwfb	___aomod@dividend+3,f
  9839  0FB9  0824               	movf	___aomod@divisor+4,w
  9840  0FBA  3BAC               	subwfb	___aomod@dividend+4,f
  9841  0FBB  0825               	movf	___aomod@divisor+5,w
  9842  0FBC  3BAD               	subwfb	___aomod@dividend+5,f
  9843  0FBD  0826               	movf	___aomod@divisor+6,w
  9844  0FBE  3BAE               	subwfb	___aomod@dividend+6,f
  9845  0FBF  0827               	movf	___aomod@divisor+7,w
  9846  0FC0  3BAF               	subwfb	___aomod@dividend+7,f
  9847  0FC1                     l2402:	
  9848  0FC1  36A7               	lsrf	___aomod@divisor+7,f
  9849  0FC2  0CA6               	rrf	___aomod@divisor+6,f
  9850  0FC3  0CA5               	rrf	___aomod@divisor+5,f
  9851  0FC4  0CA4               	rrf	___aomod@divisor+4,f
  9852  0FC5  0CA3               	rrf	___aomod@divisor+3,f
  9853  0FC6  0CA2               	rrf	___aomod@divisor+2,f
  9854  0FC7  0CA1               	rrf	___aomod@divisor+1,f
  9855  0FC8  0CA0               	rrf	___aomod@divisor,f
  9856  0FC9  3001               	movlw	1
  9857  0FCA  02F1               	subwf	___aomod@counter,f
  9858  0FCB  1D03               	btfss	3,2
  9859  0FCC  2F91               	goto	l2398
  9860  0FCD                     l2404:	
  9861  0FCD  0872               	movf	___aomod@sign,w
  9862  0FCE  1903               	btfsc	3,2
  9863  0FCF  2FEE               	goto	l709
  9864  0FD0  09A8               	comf	___aomod@dividend,f
  9865  0FD1  09A9               	comf	___aomod@dividend+1,f
  9866  0FD2  09AA               	comf	___aomod@dividend+2,f
  9867  0FD3  09AB               	comf	___aomod@dividend+3,f
  9868  0FD4  09AC               	comf	___aomod@dividend+4,f
  9869  0FD5  09AD               	comf	___aomod@dividend+5,f
  9870  0FD6  09AE               	comf	___aomod@dividend+6,f
  9871  0FD7  09AF               	comf	___aomod@dividend+7,f
  9872  0FD8  0AA8               	incf	___aomod@dividend,f
  9873  0FD9  1D03               	skipz
  9874  0FDA  2FEE               	goto	l709
  9875  0FDB  0AA9               	incf	___aomod@dividend+1,f
  9876  0FDC  1D03               	skipz
  9877  0FDD  2FEE               	goto	l709
  9878  0FDE  0AAA               	incf	___aomod@dividend+2,f
  9879  0FDF  1D03               	skipz
  9880  0FE0  2FEE               	goto	l709
  9881  0FE1  0AAB               	incf	___aomod@dividend+3,f
  9882  0FE2  1D03               	skipz
  9883  0FE3  2FEE               	goto	l709
  9884  0FE4  0AAC               	incf	___aomod@dividend+4,f
  9885  0FE5  1D03               	skipz
  9886  0FE6  2FEE               	goto	l709
  9887  0FE7  0AAD               	incf	___aomod@dividend+5,f
  9888  0FE8  1D03               	skipz
  9889  0FE9  2FEE               	goto	l709
  9890  0FEA  0AAE               	incf	___aomod@dividend+6,f
  9891  0FEB  1D03               	skipz
  9892  0FEC  2FEE               	goto	l709
  9893  0FED  0AAF               	incf	___aomod@dividend+7,f
  9894  0FEE                     l709:	
  9895  0FEE  0020               	movlb	0	; select bank0
  9896  0FEF  0828               	movf	___aomod@dividend,w
  9897  0FF0  00A0               	movwf	?___aomod
  9898  0FF1  0829               	movf	___aomod@dividend+1,w
  9899  0FF2  00A1               	movwf	?___aomod+1
  9900  0FF3  082A               	movf	___aomod@dividend+2,w
  9901  0FF4  00A2               	movwf	?___aomod+2
  9902  0FF5  082B               	movf	___aomod@dividend+3,w
  9903  0FF6  00A3               	movwf	?___aomod+3
  9904  0FF7  082C               	movf	___aomod@dividend+4,w
  9905  0FF8  00A4               	movwf	?___aomod+4
  9906  0FF9  082D               	movf	___aomod@dividend+5,w
  9907  0FFA  00A5               	movwf	?___aomod+5
  9908  0FFB  082E               	movf	___aomod@dividend+6,w
  9909  0FFC  00A6               	movwf	?___aomod+6
  9910  0FFD  082F               	movf	___aomod@dividend+7,w
  9911  0FFE  00A7               	movwf	?___aomod+7
  9912  0FFF  0008               	return
  9913  1000                     __end_of___aomod:	
  9914                           
  9915                           	psect	text38
  9916  065D                     __ptext38:	
  9917 ;; *************** function ___aodiv *****************
  9918 ;; Defined at:
  9919 ;;		line 7 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\aodiv.c"
  9920 ;; Parameters:    Size  Location     Type
  9921 ;;  divisor         8    0[BANK0 ] long long 
  9922 ;;  dividend        8    8[BANK0 ] long long 
  9923 ;; Auto vars:     Size  Location     Type
  9924 ;;  quotient        8    3[COMMON] long long 
  9925 ;;  sign            1    2[COMMON] unsigned char 
  9926 ;;  counter         1    1[COMMON] unsigned char 
  9927 ;; Return value:  Size  Location     Type
  9928 ;;                  8    0[BANK0 ] long long 
  9929 ;; Registers used:
  9930 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9931 ;; Tracked objects:
  9932 ;;		On entry : 0/0
  9933 ;;		On exit  : 0/0
  9934 ;;		Unchanged: 0/0
  9935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9936 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9937 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9938 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9939 ;;      Totals:        11      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9940 ;;Total ram usage:       27 bytes
  9941 ;; Hardware stack levels used:    1
  9942 ;; Hardware stack levels required when called:    3
  9943 ;; This function calls:
  9944 ;;		Nothing
  9945 ;; This function is called by:
  9946 ;;		_dtoa
  9947 ;; This function uses a non-reentrant model
  9948 ;;
  9949                           
  9950                           
  9951                           ;psect for function ___aodiv
  9952  065D                     ___aodiv:	
  9953                           
  9954                           ;incstack = 0
  9955                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  9956  065D  01F2               	clrf	___aodiv@sign
  9957  065E  3020               	movlw	low ___aodiv@divisor
  9958  065F  0086               	movwf	6
  9959  0660  3000               	movlw	high ___aodiv@divisor
  9960  0661  0087               	movwf	7
  9961  0662  3F47               	moviw [7]fsr1
  9962  0663  00F0               	movwf	??___aodiv
  9963  0664  1FF0               	btfss	??___aodiv,7
  9964  0665  2E87               	goto	l2346
  9965  0666  0020               	movlb	0	; select bank0
  9966  0667  09A0               	comf	___aodiv@divisor,f
  9967  0668  09A1               	comf	___aodiv@divisor+1,f
  9968  0669  09A2               	comf	___aodiv@divisor+2,f
  9969  066A  09A3               	comf	___aodiv@divisor+3,f
  9970  066B  09A4               	comf	___aodiv@divisor+4,f
  9971  066C  09A5               	comf	___aodiv@divisor+5,f
  9972  066D  09A6               	comf	___aodiv@divisor+6,f
  9973  066E  09A7               	comf	___aodiv@divisor+7,f
  9974  066F  0AA0               	incf	___aodiv@divisor,f
  9975  0670  1D03               	skipz
  9976  0671  2E85               	goto	u181lld
  9977  0672  0AA1               	incf	___aodiv@divisor+1,f
  9978  0673  1D03               	skipz
  9979  0674  2E85               	goto	u181lld
  9980  0675  0AA2               	incf	___aodiv@divisor+2,f
  9981  0676  1D03               	skipz
  9982  0677  2E85               	goto	u181lld
  9983  0678  0AA3               	incf	___aodiv@divisor+3,f
  9984  0679  1D03               	skipz
  9985  067A  2E85               	goto	u181lld
  9986  067B  0AA4               	incf	___aodiv@divisor+4,f
  9987  067C  1D03               	skipz
  9988  067D  2E85               	goto	u181lld
  9989  067E  0AA5               	incf	___aodiv@divisor+5,f
  9990  067F  1D03               	skipz
  9991  0680  2E85               	goto	u181lld
  9992  0681  0AA6               	incf	___aodiv@divisor+6,f
  9993  0682  1D03               	skipz
  9994  0683  2E85               	goto	u181lld
  9995  0684  0AA7               	incf	___aodiv@divisor+7,f
  9996  0685                     u181lld:	
  9997  0685  01F2               	clrf	___aodiv@sign
  9998  0686  0AF2               	incf	___aodiv@sign,f
  9999  0687                     l2346:	
 10000  0687  3028               	movlw	low ___aodiv@dividend
 10001  0688  0086               	movwf	6
 10002  0689  3000               	movlw	high ___aodiv@dividend
 10003  068A  0087               	movwf	7
 10004  068B  3F47               	moviw [7]fsr1
 10005  068C  00F0               	movwf	??___aodiv
 10006  068D  1FF0               	btfss	??___aodiv,7
 10007  068E  2EB2               	goto	l2352
 10008  068F  0020               	movlb	0	; select bank0
 10009  0690  09A8               	comf	___aodiv@dividend,f
 10010  0691  09A9               	comf	___aodiv@dividend+1,f
 10011  0692  09AA               	comf	___aodiv@dividend+2,f
 10012  0693  09AB               	comf	___aodiv@dividend+3,f
 10013  0694  09AC               	comf	___aodiv@dividend+4,f
 10014  0695  09AD               	comf	___aodiv@dividend+5,f
 10015  0696  09AE               	comf	___aodiv@dividend+6,f
 10016  0697  09AF               	comf	___aodiv@dividend+7,f
 10017  0698  0AA8               	incf	___aodiv@dividend,f
 10018  0699  1D03               	skipz
 10019  069A  2EAE               	goto	l2350
 10020  069B  0AA9               	incf	___aodiv@dividend+1,f
 10021  069C  1D03               	skipz
 10022  069D  2EAE               	goto	l2350
 10023  069E  0AAA               	incf	___aodiv@dividend+2,f
 10024  069F  1D03               	skipz
 10025  06A0  2EAE               	goto	l2350
 10026  06A1  0AAB               	incf	___aodiv@dividend+3,f
 10027  06A2  1D03               	skipz
 10028  06A3  2EAE               	goto	l2350
 10029  06A4  0AAC               	incf	___aodiv@dividend+4,f
 10030  06A5  1D03               	skipz
 10031  06A6  2EAE               	goto	l2350
 10032  06A7  0AAD               	incf	___aodiv@dividend+5,f
 10033  06A8  1D03               	skipz
 10034  06A9  2EAE               	goto	l2350
 10035  06AA  0AAE               	incf	___aodiv@dividend+6,f
 10036  06AB  1D03               	skipz
 10037  06AC  2EAE               	goto	l2350
 10038  06AD  0AAF               	incf	___aodiv@dividend+7,f
 10039  06AE                     l2350:	
 10040  06AE  3001               	movlw	1
 10041  06AF  00F0               	movwf	??___aodiv
 10042  06B0  0870               	movf	??___aodiv,w
 10043  06B1  06F2               	xorwf	___aodiv@sign,f
 10044  06B2                     l2352:	
 10045  06B2  3073               	movlw	low ___aodiv@quotient
 10046  06B3  0086               	movwf	6
 10047  06B4  3000               	movlw	high ___aodiv@quotient
 10048  06B5  0087               	movwf	7
 10049  06B6  3008               	movlw	8
 10050  06B7  00F0               	movwf	??___aodiv
 10051  06B8  3000               	movlw	0
 10052  06B9                     u1840:	
 10053  06B9  001E               	movwi fsr1++
 10054  06BA  0BF0               	decfsz	??___aodiv,f
 10055  06BB  2EB9               	goto	u1840
 10056  06BC  0020               	movlb	0	; select bank0
 10057  06BD  0820               	movf	___aodiv@divisor,w
 10058  06BE  0421               	iorwf	___aodiv@divisor+1,w
 10059  06BF  0422               	iorwf	___aodiv@divisor+2,w
 10060  06C0  0423               	iorwf	___aodiv@divisor+3,w
 10061  06C1  0424               	iorwf	___aodiv@divisor+4,w
 10062  06C2  0425               	iorwf	___aodiv@divisor+5,w
 10063  06C3  0426               	iorwf	___aodiv@divisor+6,w
 10064  06C4  0427               	iorwf	___aodiv@divisor+7,w
 10065  06C5  1903               	skipnz
 10066  06C6  2F1D               	goto	l2374
 10067  06C7  01F1               	clrf	___aodiv@counter
 10068  06C8  0AF1               	incf	___aodiv@counter,f
 10069  06C9                     l2362:	
 10070  06C9  1BA7               	btfsc	___aodiv@divisor+7,7
 10071  06CA  2ED8               	goto	l2364
 10072  06CB  35A0               	lslf	___aodiv@divisor,f
 10073  06CC  0DA1               	rlf	___aodiv@divisor+1,f
 10074  06CD  0DA2               	rlf	___aodiv@divisor+2,f
 10075  06CE  0DA3               	rlf	___aodiv@divisor+3,f
 10076  06CF  0DA4               	rlf	___aodiv@divisor+4,f
 10077  06D0  0DA5               	rlf	___aodiv@divisor+5,f
 10078  06D1  0DA6               	rlf	___aodiv@divisor+6,f
 10079  06D2  0DA7               	rlf	___aodiv@divisor+7,f
 10080  06D3  3001               	movlw	1
 10081  06D4  00F0               	movwf	??___aodiv
 10082  06D5  0870               	movf	??___aodiv,w
 10083  06D6  07F1               	addwf	___aodiv@counter,f
 10084  06D7  2EC9               	goto	l2362
 10085  06D8                     l2364:	
 10086  06D8  35F3               	lslf	___aodiv@quotient,f
 10087  06D9  0DF4               	rlf	___aodiv@quotient+1,f
 10088  06DA  0DF5               	rlf	___aodiv@quotient+2,f
 10089  06DB  0DF6               	rlf	___aodiv@quotient+3,f
 10090  06DC  0DF7               	rlf	___aodiv@quotient+4,f
 10091  06DD  0DF8               	rlf	___aodiv@quotient+5,f
 10092  06DE  0DF9               	rlf	___aodiv@quotient+6,f
 10093  06DF  0DFA               	rlf	___aodiv@quotient+7,f
 10094  06E0  0827               	movf	___aodiv@divisor+7,w
 10095  06E1  022F               	subwf	___aodiv@dividend+7,w
 10096  06E2  1D03               	skipz
 10097  06E3  2EFE               	goto	u1875
 10098  06E4  0826               	movf	___aodiv@divisor+6,w
 10099  06E5  022E               	subwf	___aodiv@dividend+6,w
 10100  06E6  1D03               	skipz
 10101  06E7  2EFE               	goto	u1875
 10102  06E8  0825               	movf	___aodiv@divisor+5,w
 10103  06E9  022D               	subwf	___aodiv@dividend+5,w
 10104  06EA  1D03               	skipz
 10105  06EB  2EFE               	goto	u1875
 10106  06EC  0824               	movf	___aodiv@divisor+4,w
 10107  06ED  022C               	subwf	___aodiv@dividend+4,w
 10108  06EE  1D03               	skipz
 10109  06EF  2EFE               	goto	u1875
 10110  06F0  0823               	movf	___aodiv@divisor+3,w
 10111  06F1  022B               	subwf	___aodiv@dividend+3,w
 10112  06F2  1D03               	skipz
 10113  06F3  2EFE               	goto	u1875
 10114  06F4  0822               	movf	___aodiv@divisor+2,w
 10115  06F5  022A               	subwf	___aodiv@dividend+2,w
 10116  06F6  1D03               	skipz
 10117  06F7  2EFE               	goto	u1875
 10118  06F8  0821               	movf	___aodiv@divisor+1,w
 10119  06F9  0229               	subwf	___aodiv@dividend+1,w
 10120  06FA  1D03               	skipz
 10121  06FB  2EFE               	goto	u1875
 10122  06FC  0820               	movf	___aodiv@divisor,w
 10123  06FD  0228               	subwf	___aodiv@dividend,w
 10124  06FE                     u1875:	
 10125  06FE  1C03               	skipc
 10126  06FF  2F11               	goto	l2372
 10127  0700  0820               	movf	___aodiv@divisor,w
 10128  0701  02A8               	subwf	___aodiv@dividend,f
 10129  0702  0821               	movf	___aodiv@divisor+1,w
 10130  0703  3BA9               	subwfb	___aodiv@dividend+1,f
 10131  0704  0822               	movf	___aodiv@divisor+2,w
 10132  0705  3BAA               	subwfb	___aodiv@dividend+2,f
 10133  0706  0823               	movf	___aodiv@divisor+3,w
 10134  0707  3BAB               	subwfb	___aodiv@dividend+3,f
 10135  0708  0824               	movf	___aodiv@divisor+4,w
 10136  0709  3BAC               	subwfb	___aodiv@dividend+4,f
 10137  070A  0825               	movf	___aodiv@divisor+5,w
 10138  070B  3BAD               	subwfb	___aodiv@dividend+5,f
 10139  070C  0826               	movf	___aodiv@divisor+6,w
 10140  070D  3BAE               	subwfb	___aodiv@dividend+6,f
 10141  070E  0827               	movf	___aodiv@divisor+7,w
 10142  070F  3BAF               	subwfb	___aodiv@dividend+7,f
 10143  0710  1473               	bsf	___aodiv@quotient,0
 10144  0711                     l2372:	
 10145  0711  36A7               	lsrf	___aodiv@divisor+7,f
 10146  0712  0CA6               	rrf	___aodiv@divisor+6,f
 10147  0713  0CA5               	rrf	___aodiv@divisor+5,f
 10148  0714  0CA4               	rrf	___aodiv@divisor+4,f
 10149  0715  0CA3               	rrf	___aodiv@divisor+3,f
 10150  0716  0CA2               	rrf	___aodiv@divisor+2,f
 10151  0717  0CA1               	rrf	___aodiv@divisor+1,f
 10152  0718  0CA0               	rrf	___aodiv@divisor,f
 10153  0719  3001               	movlw	1
 10154  071A  02F1               	subwf	___aodiv@counter,f
 10155  071B  1D03               	btfss	3,2
 10156  071C  2ED8               	goto	l2364
 10157  071D                     l2374:	
 10158  071D  0872               	movf	___aodiv@sign,w
 10159  071E  1903               	btfsc	3,2
 10160  071F  2F3E               	goto	l696
 10161  0720  09F3               	comf	___aodiv@quotient,f
 10162  0721  09F4               	comf	___aodiv@quotient+1,f
 10163  0722  09F5               	comf	___aodiv@quotient+2,f
 10164  0723  09F6               	comf	___aodiv@quotient+3,f
 10165  0724  09F7               	comf	___aodiv@quotient+4,f
 10166  0725  09F8               	comf	___aodiv@quotient+5,f
 10167  0726  09F9               	comf	___aodiv@quotient+6,f
 10168  0727  09FA               	comf	___aodiv@quotient+7,f
 10169  0728  0AF3               	incf	___aodiv@quotient,f
 10170  0729  1D03               	skipz
 10171  072A  2F3E               	goto	l696
 10172  072B  0AF4               	incf	___aodiv@quotient+1,f
 10173  072C  1D03               	skipz
 10174  072D  2F3E               	goto	l696
 10175  072E  0AF5               	incf	___aodiv@quotient+2,f
 10176  072F  1D03               	skipz
 10177  0730  2F3E               	goto	l696
 10178  0731  0AF6               	incf	___aodiv@quotient+3,f
 10179  0732  1D03               	skipz
 10180  0733  2F3E               	goto	l696
 10181  0734  0AF7               	incf	___aodiv@quotient+4,f
 10182  0735  1D03               	skipz
 10183  0736  2F3E               	goto	l696
 10184  0737  0AF8               	incf	___aodiv@quotient+5,f
 10185  0738  1D03               	skipz
 10186  0739  2F3E               	goto	l696
 10187  073A  0AF9               	incf	___aodiv@quotient+6,f
 10188  073B  1D03               	skipz
 10189  073C  2F3E               	goto	l696
 10190  073D  0AFA               	incf	___aodiv@quotient+7,f
 10191  073E                     l696:	
 10192  073E  0873               	movf	___aodiv@quotient,w
 10193  073F  0020               	movlb	0	; select bank0
 10194  0740  00A0               	movwf	?___aodiv
 10195  0741  0874               	movf	___aodiv@quotient+1,w
 10196  0742  00A1               	movwf	?___aodiv+1
 10197  0743  0875               	movf	___aodiv@quotient+2,w
 10198  0744  00A2               	movwf	?___aodiv+2
 10199  0745  0876               	movf	___aodiv@quotient+3,w
 10200  0746  00A3               	movwf	?___aodiv+3
 10201  0747  0877               	movf	___aodiv@quotient+4,w
 10202  0748  00A4               	movwf	?___aodiv+4
 10203  0749  0878               	movf	___aodiv@quotient+5,w
 10204  074A  00A5               	movwf	?___aodiv+5
 10205  074B  0879               	movf	___aodiv@quotient+6,w
 10206  074C  00A6               	movwf	?___aodiv+6
 10207  074D  087A               	movf	___aodiv@quotient+7,w
 10208  074E  00A7               	movwf	?___aodiv+7
 10209  074F  0008               	return
 10210  0750                     __end_of___aodiv:	
 10211                           
 10212                           	psect	text39
 10213  0DC0                     __ptext39:	
 10214 ;; *************** function _atoi *****************
 10215 ;; Defined at:
 10216 ;;		line 4 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\atoi.c"
 10217 ;; Parameters:    Size  Location     Type
 10218 ;;  s               2    6[COMMON] PTR const unsigned char 
 10219 ;;		 -> STR_10(7), STR_9(12), STR_8(20), STR_7(14), 
 10220 ;;		 -> STR_6(26), STR_5(26), STR_4(26), STR_3(26), 
 10221 ;;		 -> STR_2(26), STR_1(26), 
 10222 ;; Auto vars:     Size  Location     Type
 10223 ;;  n               2    7[BANK0 ] int 
 10224 ;;  neg             2    0[BANK0 ] int 
 10225 ;; Return value:  Size  Location     Type
 10226 ;;                  2    6[COMMON] int 
 10227 ;; Registers used:
 10228 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10229 ;; Tracked objects:
 10230 ;;		On entry : 0/0
 10231 ;;		On exit  : 0/0
 10232 ;;		Unchanged: 0/0
 10233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10234 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10235 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10236 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10237 ;;      Totals:         6       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10238 ;;Total ram usage:       15 bytes
 10239 ;; Hardware stack levels used:    1
 10240 ;; Hardware stack levels required when called:    4
 10241 ;; This function calls:
 10242 ;;		___wmul
 10243 ;;		_isdigit
 10244 ;;		_isspace
 10245 ;; This function is called by:
 10246 ;;		_vfpfcnvrt
 10247 ;; This function uses a non-reentrant model
 10248 ;;
 10249                           
 10250                           
 10251                           ;psect for function _atoi
 10252  0DC0                     _atoi:	
 10253                           
 10254                           ;incstack = 0
 10255                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10256  0DC0  0020               	movlb	0	; select bank0
 10257  0DC1  01A7               	clrf	atoi@n
 10258  0DC2  01A8               	clrf	atoi@n+1
 10259  0DC3  01A0               	clrf	atoi@neg
 10260  0DC4  01A1               	clrf	atoi@neg+1
 10261  0DC5                     l2596:	
 10262  0DC5  01A6               	clrf	_atoi$958
 10263  0DC6  0AA6               	incf	_atoi$958,f
 10264  0DC7  0876               	movf	atoi@s,w
 10265  0DC8  0084               	movwf	4
 10266  0DC9  0877               	movf	atoi@s+1,w
 10267  0DCA  0085               	movwf	5
 10268  0DCB  0012               	moviw fsr0++
 10269  0DCC  3A20               	xorlw	32
 10270  0DCD  1903               	btfsc	3,2
 10271  0DCE  2DE1               	goto	l2604
 10272  0DCF  0876               	movf	atoi@s,w
 10273  0DD0  0084               	movwf	4
 10274  0DD1  0877               	movf	atoi@s+1,w
 10275  0DD2  0085               	movwf	5
 10276  0DD3  0800               	movf	0,w	;code access
 10277  0DD4  3EF7               	addlw	247
 10278  0DD5  00F8               	movwf	??_atoi
 10279  0DD6  30FF               	movlw	255
 10280  0DD7  1803               	skipnc
 10281  0DD8  3000               	movlw	0
 10282  0DD9  00F9               	movwf	??_atoi+1
 10283  0DDA  3000               	movlw	0
 10284  0DDB  0279               	subwf	??_atoi+1,w
 10285  0DDC  3005               	movlw	5
 10286  0DDD  1903               	skipnz
 10287  0DDE  0278               	subwf	??_atoi,w
 10288  0DDF  1803               	btfsc	3,0
 10289  0DE0  01A6               	clrf	_atoi$958
 10290  0DE1                     l2604:	
 10291  0DE1  0826               	movf	_atoi$958,w
 10292  0DE2  00F8               	movwf	??_atoi
 10293  0DE3  01F9               	clrf	??_atoi+1
 10294  0DE4  0878               	movf	??_atoi,w
 10295  0DE5  00A2               	movwf	_atoi$957
 10296  0DE6  0879               	movf	??_atoi+1,w
 10297  0DE7  00A3               	movwf	_atoi$957+1
 10298  0DE8  0822               	movf	_atoi$957,w
 10299  0DE9  0423               	iorwf	_atoi$957+1,w
 10300  0DEA  1903               	btfsc	3,2
 10301  0DEB  2DF6               	goto	l2612
 10302  0DEC  3001               	movlw	1
 10303  0DED  07F6               	addwf	atoi@s,f
 10304  0DEE  3000               	movlw	0
 10305  0DEF  3DF7               	addwfc	atoi@s+1,f
 10306  0DF0  2DC5               	goto	l2596
 10307  0DF1                     l2610:	
 10308  0DF1  3001               	movlw	1
 10309  0DF2  00A0               	movwf	atoi@neg
 10310  0DF3  3000               	movlw	0
 10311  0DF4  00A1               	movwf	atoi@neg+1
 10312  0DF5  2E29               	goto	l1071
 10313  0DF6                     l2612:	
 10314  0DF6  0876               	movf	atoi@s,w
 10315  0DF7  0084               	movwf	4
 10316  0DF8  0877               	movf	atoi@s+1,w
 10317  0DF9  0085               	movwf	5
 10318  0DFA  0800               	movf	0,w	;code access
 10319  0DFB  00F8               	movwf	??_atoi
 10320  0DFC  01F9               	clrf	??_atoi+1
 10321                           
 10322                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10323                           ; Switch size 1, requested type "simple"
 10324                           ; Number of cases is 1, Range of values is 0 to 0
 10325                           ; switch strategies available:
 10326                           ; Name         Instructions Cycles
 10327                           ; simple_byte            4     3 (average)
 10328                           ; direct_byte            8     6 (fixed)
 10329                           ; jumptable            260     6 (fixed)
 10330                           ;	Chosen strategy is simple_byte
 10331  0DFD  0879               	movf	??_atoi+1,w
 10332  0DFE  3A00               	xorlw	0	; case 0
 10333  0DFF  1903               	skipnz
 10334  0E00  2E02               	goto	l3898
 10335  0E01  2E2D               	goto	l2618
 10336  0E02                     l3898:	
 10337                           
 10338                           ; Switch size 1, requested type "simple"
 10339                           ; Number of cases is 2, Range of values is 43 to 45
 10340                           ; switch strategies available:
 10341                           ; Name         Instructions Cycles
 10342                           ; simple_byte            7     4 (average)
 10343                           ; direct_byte           15     9 (fixed)
 10344                           ; jumptable            263     9 (fixed)
 10345                           ;	Chosen strategy is simple_byte
 10346  0E02  0878               	movf	??_atoi,w
 10347  0E03  3A2B               	xorlw	43	; case 43
 10348  0E04  1903               	skipnz
 10349  0E05  2E29               	goto	l1071
 10350  0E06  3A06               	xorlw	6	; case 45
 10351  0E07  1903               	skipnz
 10352  0E08  2DF1               	goto	l2610
 10353  0E09  2E2D               	goto	l2618
 10354  0E0A                     l2614:	
 10355  0E0A  0876               	movf	atoi@s,w
 10356  0E0B  0084               	movwf	4
 10357  0E0C  0877               	movf	atoi@s+1,w
 10358  0E0D  0085               	movwf	5
 10359  0E0E  0800               	movf	0,w	;code access
 10360  0E0F  00F8               	movwf	??_atoi
 10361  0E10  0828               	movf	atoi@n+1,w
 10362  0E11  00F1               	movwf	___wmul@multiplier+1
 10363  0E12  0827               	movf	atoi@n,w
 10364  0E13  00F0               	movwf	___wmul@multiplier
 10365  0E14  300A               	movlw	10
 10366  0E15  00F2               	movwf	___wmul@multiplicand
 10367  0E16  3000               	movlw	0
 10368  0E17  00F3               	movwf	___wmul@multiplicand+1
 10369  0E18  3189  21A9  318D   	fcall	___wmul
 10370  0E1B  0871               	movf	?___wmul+1,w
 10371  0E1C  00FA               	movwf	??_atoi+2
 10372  0E1D  0878               	movf	??_atoi,w
 10373  0E1E  0270               	subwf	?___wmul,w
 10374  0E1F  00F9               	movwf	??_atoi+1
 10375  0E20  1C03               	skipc
 10376  0E21  03FA               	decf	??_atoi+2,f
 10377  0E22  0879               	movf	??_atoi+1,w
 10378  0E23  3E30               	addlw	48
 10379  0E24  0020               	movlb	0	; select bank0
 10380  0E25  00A7               	movwf	atoi@n
 10381  0E26  3000               	movlw	0
 10382  0E27  3D7A               	addwfc	??_atoi+2,w
 10383  0E28  00A8               	movwf	atoi@n+1
 10384  0E29                     l1071:	
 10385  0E29  3001               	movlw	1
 10386  0E2A  07F6               	addwf	atoi@s,f
 10387  0E2B  3000               	movlw	0
 10388  0E2C  3DF7               	addwfc	atoi@s+1,f
 10389  0E2D                     l2618:	
 10390  0E2D  0876               	movf	atoi@s,w
 10391  0E2E  0084               	movwf	4
 10392  0E2F  0877               	movf	atoi@s+1,w
 10393  0E30  0085               	movwf	5
 10394  0E31  0800               	movf	0,w	;code access
 10395  0E32  3ED0               	addlw	208
 10396  0E33  00F8               	movwf	??_atoi
 10397  0E34  30FF               	movlw	255
 10398  0E35  1803               	skipnc
 10399  0E36  3000               	movlw	0
 10400  0E37  00F9               	movwf	??_atoi+1
 10401  0E38  3000               	movlw	0
 10402  0E39  0279               	subwf	??_atoi+1,w
 10403  0E3A  300A               	movlw	10
 10404  0E3B  1903               	skipnz
 10405  0E3C  0278               	subwf	??_atoi,w
 10406  0E3D  1803               	btfsc	3,0
 10407  0E3E  2E41               	goto	u2480
 10408  0E3F  3001               	movlw	1
 10409  0E40  2E42               	goto	u2490
 10410  0E41                     u2480:	
 10411  0E41  3000               	movlw	0
 10412  0E42                     u2490:	
 10413  0E42  00FA               	movwf	??_atoi+2
 10414  0E43  01FB               	clrf	??_atoi+3
 10415  0E44  087A               	movf	??_atoi+2,w
 10416  0E45  00A4               	movwf	_atoi$959
 10417  0E46  087B               	movf	??_atoi+3,w
 10418  0E47  00A5               	movwf	_atoi$959+1
 10419  0E48  0824               	movf	_atoi$959,w
 10420  0E49  0425               	iorwf	_atoi$959+1,w
 10421  0E4A  1D03               	btfss	3,2
 10422  0E4B  2E0A               	goto	l2614
 10423  0E4C  0820               	movf	atoi@neg,w
 10424  0E4D  0421               	iorwf	atoi@neg+1,w
 10425  0E4E  1D03               	btfss	3,2
 10426  0E4F  2E5C               	goto	l2628
 10427  0E50  0927               	comf	atoi@n,w
 10428  0E51  00F8               	movwf	??_atoi
 10429  0E52  0928               	comf	atoi@n+1,w
 10430  0E53  00F9               	movwf	??_atoi+1
 10431  0E54  0AF8               	incf	??_atoi,f
 10432  0E55  1903               	skipnz
 10433  0E56  0AF9               	incf	??_atoi+1,f
 10434  0E57  0878               	movf	??_atoi,w
 10435  0E58  00F6               	movwf	?_atoi
 10436  0E59  0879               	movf	??_atoi+1,w
 10437  0E5A  00F7               	movwf	?_atoi+1
 10438  0E5B  0008               	return
 10439  0E5C                     l2628:	
 10440  0E5C  0828               	movf	atoi@n+1,w
 10441  0E5D  00F7               	movwf	?_atoi+1
 10442  0E5E  0827               	movf	atoi@n,w
 10443  0E5F  00F6               	movwf	?_atoi
 10444  0E60  0008               	return
 10445  0E61                     __end_of_atoi:	
 10446                           
 10447                           	psect	text40
 10448  09C4                     __ptext40:	
 10449 ;; *************** function _isspace *****************
 10450 ;; Defined at:
 10451 ;;		line 5 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\isspace.c"
 10452 ;; Parameters:    Size  Location     Type
 10453 ;;  c               2    0[COMMON] int 
 10454 ;; Auto vars:     Size  Location     Type
 10455 ;;		None
 10456 ;; Return value:  Size  Location     Type
 10457 ;;                  2    0[COMMON] int 
 10458 ;; Registers used:
 10459 ;;		wreg, status,2, status,0
 10460 ;; Tracked objects:
 10461 ;;		On entry : 0/0
 10462 ;;		On exit  : 0/0
 10463 ;;		Unchanged: 0/0
 10464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10465 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10466 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10467 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10468 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10469 ;;Total ram usage:        5 bytes
 10470 ;; Hardware stack levels used:    1
 10471 ;; Hardware stack levels required when called:    3
 10472 ;; This function calls:
 10473 ;;		Nothing
 10474 ;; This function is called by:
 10475 ;;		_atoi
 10476 ;; This function uses a non-reentrant model
 10477 ;;
 10478                           
 10479                           
 10480                           ;psect for function _isspace
 10481  09C4                     _isspace:	
 10482                           
 10483                           ;incstack = 0
 10484                           ; Regs used in _isspace: [wreg+status,2+status,0]
 10485  09C4  01F4               	clrf	_isspace$984
 10486  09C5  0AF4               	incf	_isspace$984,f
 10487  09C6  3020               	movlw	32
 10488  09C7  0670               	xorwf	isspace@c,w
 10489  09C8  0471               	iorwf	isspace@c+1,w
 10490  09C9  1903               	btfsc	3,2
 10491  09CA  29D8               	goto	l2416
 10492  09CB  0870               	movf	isspace@c,w
 10493  09CC  3EF7               	addlw	247
 10494  09CD  00F2               	movwf	??_isspace
 10495  09CE  30FF               	movlw	255
 10496  09CF  3D71               	addwfc	isspace@c+1,w
 10497  09D0  00F3               	movwf	??_isspace+1
 10498  09D1  3000               	movlw	0
 10499  09D2  0273               	subwf	??_isspace+1,w
 10500  09D3  3005               	movlw	5
 10501  09D4  1903               	skipnz
 10502  09D5  0272               	subwf	??_isspace,w
 10503  09D6  1803               	btfsc	3,0
 10504  09D7  01F4               	clrf	_isspace$984
 10505  09D8                     l2416:	
 10506  09D8  0874               	movf	_isspace$984,w
 10507  09D9  00F2               	movwf	??_isspace
 10508  09DA  01F3               	clrf	??_isspace+1
 10509  09DB  0872               	movf	??_isspace,w
 10510  09DC  00F0               	movwf	?_isspace
 10511  09DD  0873               	movf	??_isspace+1,w
 10512  09DE  00F1               	movwf	?_isspace+1
 10513  09DF  0008               	return
 10514  09E0                     __end_of_isspace:	
 10515                           
 10516                           	psect	text41
 10517  0906                     __ptext41:	
 10518 ;; *************** function _isdigit *****************
 10519 ;; Defined at:
 10520 ;;		line 5 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\isdigit.c"
 10521 ;; Parameters:    Size  Location     Type
 10522 ;;  c               2    0[COMMON] int 
 10523 ;; Auto vars:     Size  Location     Type
 10524 ;;		None
 10525 ;; Return value:  Size  Location     Type
 10526 ;;                  2    0[COMMON] int 
 10527 ;; Registers used:
 10528 ;;		wreg, status,2, status,0
 10529 ;; Tracked objects:
 10530 ;;		On entry : 0/0
 10531 ;;		On exit  : 0/0
 10532 ;;		Unchanged: 0/0
 10533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10534 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10535 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10536 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10537 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10538 ;;Total ram usage:        6 bytes
 10539 ;; Hardware stack levels used:    1
 10540 ;; Hardware stack levels required when called:    3
 10541 ;; This function calls:
 10542 ;;		Nothing
 10543 ;; This function is called by:
 10544 ;;		_vfpfcnvrt
 10545 ;;		_atoi
 10546 ;; This function uses a non-reentrant model
 10547 ;;
 10548                           
 10549                           
 10550                           ;psect for function _isdigit
 10551  0906                     _isdigit:	
 10552                           
 10553                           ;incstack = 0
 10554                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 10555  0906  0870               	movf	isdigit@c,w
 10556  0907  3ED0               	addlw	208
 10557  0908  00F2               	movwf	??_isdigit
 10558  0909  30FF               	movlw	255
 10559  090A  3D71               	addwfc	isdigit@c+1,w
 10560  090B  00F3               	movwf	??_isdigit+1
 10561  090C  3000               	movlw	0
 10562  090D  0273               	subwf	??_isdigit+1,w
 10563  090E  300A               	movlw	10
 10564  090F  1903               	skipnz
 10565  0910  0272               	subwf	??_isdigit,w
 10566  0911  1803               	btfsc	3,0
 10567  0912  2915               	goto	u1740
 10568  0913  3001               	movlw	1
 10569  0914  2916               	goto	u1750
 10570  0915                     u1740:	
 10571  0915  3000               	movlw	0
 10572  0916                     u1750:	
 10573  0916  00F4               	movwf	??_isdigit+2
 10574  0917  01F5               	clrf	??_isdigit+3
 10575  0918  0874               	movf	??_isdigit+2,w
 10576  0919  00F0               	movwf	?_isdigit
 10577  091A  0875               	movf	??_isdigit+3,w
 10578  091B  00F1               	movwf	?_isdigit+1
 10579  091C  0008               	return
 10580  091D                     __end_of_isdigit:	
 10581                           
 10582                           	psect	text42
 10583  09A9                     __ptext42:	
 10584 ;; *************** function ___wmul *****************
 10585 ;; Defined at:
 10586 ;;		line 15 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\Umul16.c"
 10587 ;; Parameters:    Size  Location     Type
 10588 ;;  multiplier      2    0[COMMON] unsigned int 
 10589 ;;  multiplicand    2    2[COMMON] unsigned int 
 10590 ;; Auto vars:     Size  Location     Type
 10591 ;;  product         2    4[COMMON] unsigned int 
 10592 ;; Return value:  Size  Location     Type
 10593 ;;                  2    0[COMMON] unsigned int 
 10594 ;; Registers used:
 10595 ;;		wreg, status,2, status,0
 10596 ;; Tracked objects:
 10597 ;;		On entry : 0/0
 10598 ;;		On exit  : 0/0
 10599 ;;		Unchanged: 0/0
 10600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10601 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10602 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10604 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10605 ;;Total ram usage:        6 bytes
 10606 ;; Hardware stack levels used:    1
 10607 ;; Hardware stack levels required when called:    3
 10608 ;; This function calls:
 10609 ;;		Nothing
 10610 ;; This function is called by:
 10611 ;;		_atoi
 10612 ;; This function uses a non-reentrant model
 10613 ;;
 10614                           
 10615                           
 10616                           ;psect for function ___wmul
 10617  09A9                     ___wmul:	
 10618                           
 10619                           ;incstack = 0
 10620                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 10621  09A9  01F4               	clrf	___wmul@product
 10622  09AA  01F5               	clrf	___wmul@product+1
 10623  09AB                     l2328:	
 10624  09AB  1C70               	btfss	___wmul@multiplier,0
 10625  09AC  29B1               	goto	l596
 10626  09AD  0872               	movf	___wmul@multiplicand,w
 10627  09AE  07F4               	addwf	___wmul@product,f
 10628  09AF  0873               	movf	___wmul@multiplicand+1,w
 10629  09B0  3DF5               	addwfc	___wmul@product+1,f
 10630  09B1                     l596:	
 10631  09B1  3001               	movlw	1
 10632  09B2                     u1775:	
 10633  09B2  35F2               	lslf	___wmul@multiplicand,f
 10634  09B3  0DF3               	rlf	___wmul@multiplicand+1,f
 10635  09B4  0B89               	decfsz	9,f
 10636  09B5  29B2               	goto	u1775
 10637  09B6  3001               	movlw	1
 10638  09B7                     u1785:	
 10639  09B7  36F1               	lsrf	___wmul@multiplier+1,f
 10640  09B8  0CF0               	rrf	___wmul@multiplier,f
 10641  09B9  0B89               	decfsz	9,f
 10642  09BA  29B7               	goto	u1785
 10643  09BB  0870               	movf	___wmul@multiplier,w
 10644  09BC  0471               	iorwf	___wmul@multiplier+1,w
 10645  09BD  1D03               	btfss	3,2
 10646  09BE  29AB               	goto	l2328
 10647  09BF  0875               	movf	___wmul@product+1,w
 10648  09C0  00F1               	movwf	?___wmul+1
 10649  09C1  0874               	movf	___wmul@product,w
 10650  09C2  00F0               	movwf	?___wmul
 10651  09C3  0008               	return
 10652  09C4                     __end_of___wmul:	
 10653                           
 10654                           	psect	text43
 10655  0855                     __ptext43:	
 10656 ;; *************** function _EUSART_is_rx_ready *****************
 10657 ;; Defined at:
 10658 ;;		line 83 in file "mcc_generated_files/eusart.c"
 10659 ;; Parameters:    Size  Location     Type
 10660 ;;		None
 10661 ;; Auto vars:     Size  Location     Type
 10662 ;;		None
 10663 ;; Return value:  Size  Location     Type
 10664 ;;                  1    wreg      _Bool 
 10665 ;; Registers used:
 10666 ;;		wreg, status,2, status,0
 10667 ;; Tracked objects:
 10668 ;;		On entry : 0/0
 10669 ;;		On exit  : 0/0
 10670 ;;		Unchanged: 0/0
 10671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10675 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10676 ;;Total ram usage:        0 bytes
 10677 ;; Hardware stack levels used:    1
 10678 ;; Hardware stack levels required when called:    3
 10679 ;; This function calls:
 10680 ;;		Nothing
 10681 ;; This function is called by:
 10682 ;;		_GPS_HasAcknowledged
 10683 ;;		_GetNavData
 10684 ;; This function uses a non-reentrant model
 10685 ;;
 10686                           
 10687                           
 10688                           ;psect for function _EUSART_is_rx_ready
 10689  0855                     _EUSART_is_rx_ready:	
 10690                           
 10691                           ;mcc_generated_files/eusart.c: 85:     return PIR1bits.RCIF;
 10692                           
 10693                           ;incstack = 0
 10694                           ; Regs used in _EUSART_is_rx_ready: [wreg+status,2+status,0]
 10695  0855  0020               	movlb	0	; select bank0
 10696  0856  0E10               	swapf	16,w	;volatile
 10697  0857  0C89               	rrf	9,f
 10698  0858  3901               	andlw	1
 10699  0859  0008               	return
 10700  085A                     __end_of_EUSART_is_rx_ready:	
 10701                           
 10702                           	psect	text44
 10703  0893                     __ptext44:	
 10704 ;; *************** function _EUSART_Read *****************
 10705 ;; Defined at:
 10706 ;;		line 93 in file "mcc_generated_files/eusart.c"
 10707 ;; Parameters:    Size  Location     Type
 10708 ;;		None
 10709 ;; Auto vars:     Size  Location     Type
 10710 ;;		None
 10711 ;; Return value:  Size  Location     Type
 10712 ;;                  1    wreg      unsigned char 
 10713 ;; Registers used:
 10714 ;;		wreg
 10715 ;; Tracked objects:
 10716 ;;		On entry : 0/0
 10717 ;;		On exit  : 0/0
 10718 ;;		Unchanged: 0/0
 10719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10723 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10724 ;;Total ram usage:        0 bytes
 10725 ;; Hardware stack levels used:    1
 10726 ;; Hardware stack levels required when called:    3
 10727 ;; This function calls:
 10728 ;;		Nothing
 10729 ;; This function is called by:
 10730 ;;		_GPS_HasAcknowledged
 10731 ;;		_GetNavData
 10732 ;;		_getch
 10733 ;; This function uses a non-reentrant model
 10734 ;;
 10735                           
 10736                           
 10737                           ;psect for function _EUSART_Read
 10738  0893                     _EUSART_Read:	
 10739  0893                     l105:	
 10740                           ;mcc_generated_files/eusart.c: 96:     {;mcc_generated_files/eusart.c: 97:     }
 10741                           
 10742                           ;incstack = 0
 10743                           ; Regs used in _EUSART_Read: [wreg]
 10744                           
 10745                           
 10746                           ;mcc_generated_files/eusart.c: 95:     while(!PIR1bits.RCIF)
 10747  0893  0020               	movlb	0	; select bank0
 10748  0894  1E90               	btfss	16,5	;volatile
 10749  0895  2893               	goto	l105
 10750                           
 10751                           ;mcc_generated_files/eusart.c: 100:     if(1 == RC1STAbits.OERR)
 10752  0896  0023               	movlb	3	; select bank3
 10753  0897  1C9D               	btfss	29,1	;volatile
 10754  0898  289B               	goto	l2762
 10755                           
 10756                           ;mcc_generated_files/eusart.c: 101:     {;mcc_generated_files/eusart.c: 104:         RC1
      +                          STAbits.CREN = 0;
 10757  0899  121D               	bcf	29,4	;volatile
 10758                           
 10759                           ;mcc_generated_files/eusart.c: 105:         RC1STAbits.CREN = 1;
 10760  089A  161D               	bsf	29,4	;volatile
 10761  089B                     l2762:	
 10762                           
 10763                           ;mcc_generated_files/eusart.c: 108:     return RC1REG;
 10764  089B  0819               	movf	25,w	;volatile
 10765  089C  0008               	return
 10766  089D                     __end_of_EUSART_Read:	
 10767                           
 10768                           	psect	text45
 10769  0ABF                     __ptext45:	
 10770 ;; *************** function _FlashError *****************
 10771 ;; Defined at:
 10772 ;;		line 21 in file "main.c"
 10773 ;; Parameters:    Size  Location     Type
 10774 ;;		None
 10775 ;; Auto vars:     Size  Location     Type
 10776 ;;  i               2    2[COMMON] int 
 10777 ;; Return value:  Size  Location     Type
 10778 ;;                  1    wreg      void 
 10779 ;; Registers used:
 10780 ;;		wreg, status,2
 10781 ;; Tracked objects:
 10782 ;;		On entry : 0/0
 10783 ;;		On exit  : 0/0
 10784 ;;		Unchanged: 0/0
 10785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10787 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10788 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10789 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10790 ;;Total ram usage:        4 bytes
 10791 ;; Hardware stack levels used:    1
 10792 ;; Hardware stack levels required when called:    3
 10793 ;; This function calls:
 10794 ;;		Nothing
 10795 ;; This function is called by:
 10796 ;;		_main
 10797 ;; This function uses a non-reentrant model
 10798 ;;
 10799                           
 10800                           
 10801                           ;psect for function _FlashError
 10802  0ABF                     _FlashError:	
 10803                           
 10804                           ;main.c: 23:     for (int i = 0; i < 3; i++)
 10805                           
 10806                           ;incstack = 0
 10807                           ; Regs used in _FlashError: [wreg+status,2]
 10808  0ABF  01F2               	clrf	FlashError@i
 10809  0AC0  01F3               	clrf	FlashError@i+1
 10810  0AC1                     l204:	
 10811                           ;main.c: 24:     {;main.c: 25:         do { LATCbits.LATC5 = 1; } while(0);
 10812                           
 10813  0AC1  0022               	movlb	2	; select bank2
 10814  0AC2  168E               	bsf	14,5	;volatile
 10815                           
 10816                           ;main.c: 26:         _delay((unsigned long)((250)*(4000000/4000.0)));
 10817  0AC3  3002               	movlw	2
 10818  0AC4  00F1               	movwf	??_FlashError+1
 10819  0AC5  3045               	movlw	69
 10820  0AC6  00F0               	movwf	??_FlashError
 10821  0AC7  30AA               	movlw	170
 10822  0AC8                     u3857:	
 10823  0AC8  0B89               	decfsz	9,f
 10824  0AC9  2AC8               	goto	u3857
 10825  0ACA  0BF0               	decfsz	??_FlashError,f
 10826  0ACB  2AC8               	goto	u3857
 10827  0ACC  0BF1               	decfsz	??_FlashError+1,f
 10828  0ACD  2AC8               	goto	u3857
 10829  0ACE  0022               	movlb	2	; select bank2
 10830  0ACF  128E               	bcf	14,5	;volatile
 10831                           
 10832                           ;main.c: 28:         _delay((unsigned long)((250)*(4000000/4000.0)));
 10833  0AD0  3002               	movlw	2
 10834  0AD1  00F1               	movwf	??_FlashError+1
 10835  0AD2  3045               	movlw	69
 10836  0AD3  00F0               	movwf	??_FlashError
 10837  0AD4  30AA               	movlw	170
 10838  0AD5                     u3867:	
 10839  0AD5  0B89               	decfsz	9,f
 10840  0AD6  2AD5               	goto	u3867
 10841  0AD7  0BF0               	decfsz	??_FlashError,f
 10842  0AD8  2AD5               	goto	u3867
 10843  0AD9  0BF1               	decfsz	??_FlashError+1,f
 10844  0ADA  2AD5               	goto	u3867
 10845                           
 10846                           ;main.c: 29:     }
 10847  0ADB  3001               	movlw	1
 10848  0ADC  07F2               	addwf	FlashError@i,f
 10849  0ADD  3000               	movlw	0
 10850  0ADE  3DF3               	addwfc	FlashError@i+1,f
 10851  0ADF  0873               	movf	FlashError@i+1,w
 10852  0AE0  3A80               	xorlw	128
 10853  0AE1  00F0               	movwf	??_FlashError
 10854  0AE2  3080               	movlw	128
 10855  0AE3  0270               	subwf	??_FlashError,w
 10856  0AE4  1D03               	skipz
 10857  0AE5  2AE8               	goto	u2855
 10858  0AE6  3003               	movlw	3
 10859  0AE7  0272               	subwf	FlashError@i,w
 10860  0AE8                     u2855:	
 10861  0AE8  1803               	btfsc	3,0
 10862  0AE9  0008               	return
 10863  0AEA  2AC1               	goto	l204
 10864  0AEB                     __end_of_FlashError:	
 10865                           
 10866                           	psect	intentry
 10867  0004                     __pintentry:	
 10868 ;; *************** function _INTERRUPT_InterruptManager *****************
 10869 ;; Defined at:
 10870 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 10871 ;; Parameters:    Size  Location     Type
 10872 ;;		None
 10873 ;; Auto vars:     Size  Location     Type
 10874 ;;		None
 10875 ;; Return value:  Size  Location     Type
 10876 ;;                  1    wreg      void 
 10877 ;; Registers used:
 10878 ;;		wreg, status,2, status,0, pclath, cstack
 10879 ;; Tracked objects:
 10880 ;;		On entry : 0/0
 10881 ;;		On exit  : 0/0
 10882 ;;		Unchanged: 0/0
 10883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10887 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10888 ;;Total ram usage:        0 bytes
 10889 ;; Hardware stack levels used:    1
 10890 ;; Hardware stack levels required when called:    2
 10891 ;; This function calls:
 10892 ;;		_TMR0_ISR
 10893 ;; This function is called by:
 10894 ;;		Interrupt level 1
 10895 ;; This function uses a non-reentrant model
 10896 ;;
 10897                           
 10898  0004                     _INTERRUPT_InterruptManager:	
 10899                           
 10900                           ;incstack = 0
 10901  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 10902                           
 10903                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
 10904  0005  3180               	pagesel	$
 10905                           
 10906                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
 10907  0006  1A8B               	btfsc	11,5	;volatile
 10908  0007  1D0B               	btfss	11,2	;volatile
 10909  0008  280B               	goto	i1l132
 10910                           
 10911                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
 10912  0009  3188  20A8         	fcall	_TMR0_ISR
 10913  000B                     i1l132:	
 10914                           ;mcc_generated_files/interrupt_manager.c: 58:     }
 10915                           
 10916  000B  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 10917  000C  0009               	retfie
 10918  000D                     __end_of_INTERRUPT_InterruptManager:	
 10919                           
 10920                           	psect	text47
 10921  08A8                     __ptext47:	
 10922 ;; *************** function _TMR0_ISR *****************
 10923 ;; Defined at:
 10924 ;;		line 108 in file "mcc_generated_files/tmr0.c"
 10925 ;; Parameters:    Size  Location     Type
 10926 ;;		None
 10927 ;; Auto vars:     Size  Location     Type
 10928 ;;		None
 10929 ;; Return value:  Size  Location     Type
 10930 ;;                  1    wreg      void 
 10931 ;; Registers used:
 10932 ;;		wreg, status,2, status,0, pclath, cstack
 10933 ;; Tracked objects:
 10934 ;;		On entry : 0/0
 10935 ;;		On exit  : 0/0
 10936 ;;		Unchanged: 0/0
 10937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10941 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10942 ;;Total ram usage:        0 bytes
 10943 ;; Hardware stack levels used:    1
 10944 ;; Hardware stack levels required when called:    1
 10945 ;; This function calls:
 10946 ;;		Absolute function
 10947 ;;		_TMR0_DefaultInterruptHandler
 10948 ;;		_TimerISR
 10949 ;; This function is called by:
 10950 ;;		_INTERRUPT_InterruptManager
 10951 ;; This function uses a non-reentrant model
 10952 ;;
 10953                           
 10954                           
 10955                           ;psect for function _TMR0_ISR
 10956  08A8                     _TMR0_ISR:	
 10957                           
 10958                           ;mcc_generated_files/tmr0.c: 112:     INTCONbits.TMR0IF = 0;
 10959                           
 10960                           ;incstack = 0
 10961                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
 10962  08A8  110B               	bcf	11,2	;volatile
 10963                           
 10964                           ;mcc_generated_files/tmr0.c: 114:     TMR0 = timer0ReloadVal;
 10965  08A9  0021               	movlb	1	; select bank1
 10966  08AA  086D               	movf	_timer0ReloadVal^(0+128),w	;volatile
 10967  08AB  0020               	movlb	0	; select bank0
 10968  08AC  0095               	movwf	21	;volatile
 10969                           
 10970                           ;mcc_generated_files/tmr0.c: 116:     if(TMR0_InterruptHandler)
 10971  08AD  0021               	movlb	1	; select bank1
 10972  08AE  086B               	movf	_TMR0_InterruptHandler^(0+128),w
 10973  08AF  046C               	iorwf	(_TMR0_InterruptHandler+1)^(0+128),w
 10974  08B0  1903               	btfsc	3,2
 10975  08B1  0008               	return
 10976                           
 10977                           ;mcc_generated_files/tmr0.c: 117:     {;mcc_generated_files/tmr0.c: 118:         TMR0_In
      +                          terruptHandler();
 10978  08B2  086C               	movf	(_TMR0_InterruptHandler+1)^(0+128),w
 10979  08B3  008A               	movwf	10
 10980  08B4  086B               	movf	_TMR0_InterruptHandler^(0+128),w
 10981  08B5  000A               	callw
 10982  08B6  3188               	pagesel	$
 10983  08B7  0008               	return
 10984  08B8                     __end_of_TMR0_ISR:	
 10985                           
 10986                           	psect	text48
 10987  0003                     __ptext48:	
 10988 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 10989 ;; Defined at:
 10990 ;;		line 129 in file "mcc_generated_files/tmr0.c"
 10991 ;; Parameters:    Size  Location     Type
 10992 ;;		None
 10993 ;; Auto vars:     Size  Location     Type
 10994 ;;		None
 10995 ;; Return value:  Size  Location     Type
 10996 ;;                  1    wreg      void 
 10997 ;; Registers used:
 10998 ;;		None
 10999 ;; Tracked objects:
 11000 ;;		On entry : 0/0
 11001 ;;		On exit  : 0/0
 11002 ;;		Unchanged: 0/0
 11003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11005 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11007 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11008 ;;Total ram usage:        0 bytes
 11009 ;; Hardware stack levels used:    1
 11010 ;; This function calls:
 11011 ;;		Nothing
 11012 ;; This function is called by:
 11013 ;;		_TMR0_Initialize
 11014 ;;		_TMR0_ISR
 11015 ;; This function uses a non-reentrant model
 11016 ;;
 11017                           
 11018                           
 11019                           ;psect for function _TMR0_DefaultInterruptHandler
 11020  0003                     _TMR0_DefaultInterruptHandler:	
 11021                           
 11022                           ;incstack = 0
 11023                           ; Regs used in _TMR0_DefaultInterruptHandler: []
 11024  0003  0008               	return
 11025  0004                     __end_of_TMR0_DefaultInterruptHandler:	
 11026                           
 11027                           	psect	text49
 11028  0889                     __ptext49:	
 11029 ;; *************** function _TimerISR *****************
 11030 ;; Defined at:
 11031 ;;		line 9 in file "main.c"
 11032 ;; Parameters:    Size  Location     Type
 11033 ;;		None
 11034 ;; Auto vars:     Size  Location     Type
 11035 ;;		None
 11036 ;; Return value:  Size  Location     Type
 11037 ;;                  1    wreg      void 
 11038 ;; Registers used:
 11039 ;;		wreg
 11040 ;; Tracked objects:
 11041 ;;		On entry : 0/0
 11042 ;;		On exit  : 0/0
 11043 ;;		Unchanged: 0/0
 11044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11048 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11049 ;;Total ram usage:        0 bytes
 11050 ;; Hardware stack levels used:    1
 11051 ;; This function calls:
 11052 ;;		Nothing
 11053 ;; This function is called by:
 11054 ;;		_main
 11055 ;;		_TMR0_ISR
 11056 ;; This function uses a non-reentrant model
 11057 ;;
 11058                           
 11059                           
 11060                           ;psect for function _TimerISR
 11061  0889                     _TimerISR:	
 11062                           
 11063                           ;main.c: 11:     ticks++;
 11064                           
 11065                           ;incstack = 0
 11066                           ; Regs used in _TimerISR: [wreg]
 11067  0889  3001               	movlw	1
 11068  088A  0021               	movlb	1	; select bank1
 11069  088B  07D2               	addwf	_ticks^(0+128),f
 11070  088C  3000               	movlw	0
 11071  088D  3DD3               	addwfc	(_ticks+1)^(0+128),f
 11072  088E  3000               	movlw	0
 11073  088F  3DD4               	addwfc	(_ticks+2)^(0+128),f
 11074  0890  3000               	movlw	0
 11075  0891  3DD5               	addwfc	(_ticks+3)^(0+128),f
 11076  0892  0008               	return
 11077  0893                     __end_of_TimerISR:	
 11078  007E                     btemp	set	126	;btemp
 11079  007E                     int$flags	set	126
 11080  007E                     wtemp0	set	126


Data Sizes:
    Strings     209
    Constant    6
    Data        53
    BSS         276
    Persistent  35
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     77      80
    BANK1            80     46      78
    BANK2            80      0      78
    BANK3            80      0      76
    BANK4            80      0      70
    BANK5            80      0      73
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 73
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK1[2]), stoa@nuls(BANK0[7]), dbuf(BANK3[32]), 
		 -> gps_vertical_velocity(BANK2[8]), gps_course_over_ground(BANK2[8]), gps_speed_over_ground(BANK2[8]), gps_altitude(BANK2[12]), 
		 -> gps_longitude(BANK2[16]), gps_latitude(BANK2[16]), gps_time(BANK2[10]), message_end(BANK5[73]), 
		 -> message_start(BANK4[70]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 73
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK1[2]), stoa@nuls(BANK0[7]), dbuf(BANK3[32]), 
		 -> gps_vertical_velocity(BANK2[8]), gps_course_over_ground(BANK2[8]), gps_speed_over_ground(BANK2[8]), gps_altitude(BANK2[12]), 
		 -> gps_longitude(BANK2[16]), gps_latitude(BANK2[16]), gps_time(BANK2[10]), message_end(BANK5[73]), 
		 -> message_start(BANK4[70]), 

    strcpy@dest	PTR unsigned char  size(1) Largest target is 73
		 -> message_end(BANK5[73]), message_start(BANK4[70]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 73
		 -> message_end(BANK5[73]), message_start(BANK4[70]), 

    strcpy@src	PTR const unsigned char  size(1) Largest target is 6
		 -> checksum(BANK1[6]), 

    strcpy@s	PTR const unsigned char  size(1) Largest target is 6
		 -> checksum(BANK1[6]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 73
		 -> message_end(BANK5[73]), message_start(BANK4[70]), 

    strcat@src	PTR const unsigned char  size(1) Largest target is 6
		 -> checksum(BANK1[6]), 

    strcat@dest	PTR unsigned char  size(1) Largest target is 73
		 -> message_end(BANK5[73]), message_start(BANK4[70]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 26
		 -> STR_7(CODE[14]), STR_6(CODE[26]), STR_5(CODE[26]), STR_4(CODE[26]), 
		 -> STR_3(CODE[26]), STR_2(CODE[26]), STR_1(CODE[26]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK1[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_10(CODE[7]), STR_9(CODE[12]), STR_8(CODE[20]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 73
		 -> checksum(BANK1[6]), message_end(BANK5[73]), message_start(BANK4[70]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK1[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 73
		 -> checksum(BANK1[6]), message_end(BANK5[73]), message_start(BANK4[70]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK0[6]), NULL(NULL[0]), 

    S997_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 73
		 -> checksum(BANK1[6]), message_end(BANK5[73]), message_start(BANK4[70]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 73
		 -> checksum(BANK1[6]), message_end(BANK5[73]), message_start(BANK4[70]), 

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK0[6]), NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 26
		 -> STR_10(CODE[7]), STR_9(CODE[12]), STR_8(CODE[20]), STR_7(CODE[14]), 
		 -> STR_6(CODE[26]), STR_5(CODE[26]), STR_4(CODE[26]), STR_3(CODE[26]), 
		 -> STR_2(CODE[26]), STR_1(CODE[26]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), sprintf@ap(BANK0[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK0[6]), NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 26
		 -> STR_10(CODE[7]), STR_9(CODE[12]), STR_8(CODE[20]), STR_7(CODE[14]), 
		 -> STR_6(CODE[26]), STR_5(CODE[26]), STR_4(CODE[26]), STR_3(CODE[26]), 
		 -> STR_2(CODE[26]), STR_1(CODE[26]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 26
		 -> STR_10(CODE[7]), STR_9(CODE[12]), STR_8(CODE[20]), STR_7(CODE[14]), 
		 -> STR_6(CODE[26]), STR_5(CODE[26]), STR_4(CODE[26]), STR_3(CODE[26]), 
		 -> STR_2(CODE[26]), STR_1(CODE[26]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 16
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK1[2]), gps_vertical_velocity(BANK2[8]), gps_course_over_ground(BANK2[8]), 
		 -> gps_speed_over_ground(BANK2[8]), gps_altitude(BANK2[12]), gps_longitude(BANK2[16]), gps_latitude(BANK2[16]), 
		 -> gps_time(BANK2[10]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK0[6]), NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), sprintf@ap(BANK0[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    xtoa@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK0[6]), NULL(NULL[0]), 

    stoa@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK0[6]), NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 16
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK1[2]), gps_vertical_velocity(BANK2[8]), gps_course_over_ground(BANK2[8]), 
		 -> gps_speed_over_ground(BANK2[8]), gps_altitude(BANK2[12]), gps_longitude(BANK2[16]), gps_latitude(BANK2[16]), 
		 -> gps_time(BANK2[10]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 16
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK1[2]), stoa@nuls(BANK0[7]), gps_vertical_velocity(BANK2[8]), 
		 -> gps_course_over_ground(BANK2[8]), gps_speed_over_ground(BANK2[8]), gps_altitude(BANK2[12]), gps_longitude(BANK2[16]), 
		 -> gps_latitude(BANK2[16]), gps_time(BANK2[10]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK0[6]), NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK0[6]), NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    sp__strcat	PTR unsigned char  size(1) Largest target is 73
		 -> message_end(BANK5[73]), message_start(BANK4[70]), 

    GPS_HasAcknowledged@data	PTR unsigned char  size(1) Largest target is 44
		 -> setNavFlightMode(BANK3[44]), 

    GPS_SendUBX@data	PTR unsigned char  size(1) Largest target is 44
		 -> setNavFlightMode(BANK3[44]), 

    GetLengthUBX@data	PTR unsigned char  size(1) Largest target is 44
		 -> setNavFlightMode(BANK3[44]), 

    TransmitString@message	PTR unsigned char  size(1) Largest target is 73
		 -> message_end(BANK5[73]), message_start(BANK4[70]), 

    crc16@data	PTR PTR unsigned char  size(1) Largest target is 2
		 -> messages(BANK1[2]), 

    crc16@string	PTR unsigned char  size(1) Largest target is 73
		 -> message_end(BANK5[73]), message_start(BANK4[70]), 

    messages	PTR unsigned char [2] size(1) Largest target is 73
		 -> message_end(BANK5[73]), message_start(BANK4[70]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TimerISR(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TimerISR(), Absolute function(), TMR0_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    _main->_strcat
    _strcat->_strcpy
    _strcpy->_strlen
    _crc16->_crc_append_byte
    _TransmitString->_TransmitByte
    _TransmitByte->_TransmitBit
    _GPS_SendUBX->_GetLengthUBX
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _xtoa->_toupper
    _toupper->_islower
    _stoa->_fputc
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART_Write
    _abs->___aomod
    _atoi->___wmul
    _atoi->_isdigit

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_GetNavData
    _main->_sprintf
    _sprintf->_vfprintf
    _SetupGPS->_printf
    _GetNavData->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _dtoa->___aodiv
    _dtoa->___aomod
    _pad->_fputs
    _abs->___aomod

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_GetNavData
    _vfprintf->_vfpfcnvrt

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0   65020
                                             41 BANK1      5     5      0
                         _FlashError
                         _GetNavData
                  _SYSTEM_Initialize
                           _SetupGPS
           _TMR0_SetInterruptHandler
                     _TransmitString
                              _crc16
                            _sprintf
                             _strcat
 ---------------------------------------------------------------------------------
 (1) _strcat                                               5     4      1     819
                                              9 COMMON     5     4      1
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strcpy                                               5     4      1     263
                                              4 COMMON     5     4      1
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             22    10     12   20005
                                             67 BANK0     10    10      0
                                             24 BANK1     12     0     12
                              _crc16 (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _crc16                                               15    13      2    1231
                                              8 COMMON     4     2      2
                                              0 BANK0     11    11      0
                    _crc_append_byte
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _crc_append_byte                                      8     5      3     311
                                              0 COMMON     8     5      3
 ---------------------------------------------------------------------------------
 (1) _TransmitString                                       6     6      0     678
                                              6 COMMON     6     6      0
                       _TransmitByte
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _TransmitByte                                         4     4      0     112
                                              2 COMMON     4     4      0
                        _TransmitBit
 ---------------------------------------------------------------------------------
 (3) _TransmitBit                                          2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _SetupGPS                                             2     2      0   20883
                                             73 BANK0      2     2      0
                _GPS_HasAcknowledged
                        _GPS_SendUBX
                             _printf
 ---------------------------------------------------------------------------------
 (2) _GPS_SendUBX                                          6     6      0     245
                                              4 COMMON     6     6      0
                       _EUSART_Write
                       _GetLengthUBX
 ---------------------------------------------------------------------------------
 (3) _GetLengthUBX                                         4     1      3      77
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (2) _GPS_HasAcknowledged                                 22    22      0     618
                                              0 COMMON     4     4      0
                                              0 BANK0     18    18      0
                        _EUSART_Read
                 _EUSART_is_rx_ready
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     174
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      1     1      0     174
                                              2 COMMON     1     1      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     174
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GetNavData                                          21    21      0   20905
                                             73 BANK0      4     4      0
                                             24 BANK1     17    17      0
                        _EUSART_Read
                 _EUSART_is_rx_ready
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                               6     4      2   20020
                                             67 BANK0      6     4      2
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     5      3   19291
                                             59 BANK0      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           43    41      2   18575
                                             51 BANK0      8     6      2
                                              0 BANK1     24    24      0
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
                               _stoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                38    29      9    5914
                                             13 BANK0     38    29      9
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              8     6      2     412
                                              6 COMMON     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (6) _islower                                              6     4      2     161
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     161
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isalpha                                              8     6      2     161
                                              0 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (4) _stoa                                                23    21      2    2455
                                             10 COMMON     2     0      2
                                              0 BANK0     21    21      0
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                30    22      8    5931
                                             16 BANK0     30    22      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    4098
                                              4 BANK0      9     6      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               4     2      2     330
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                8     7      1    1649
                                             10 COMMON     4     3      1
                                              0 BANK0      4     4      0
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                8     5      3    1334
                                              2 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0      44
                                              1 COMMON     1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (9) _EUSART_Write                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              3 COMMON     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             19     3     16     448
                                              0 COMMON     3     3      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             27    11     16     452
                                              0 COMMON    11    11      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1131
                                              6 COMMON     6     4      2
                                              0 BANK0      9     9      0
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              5     3      2     207
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     237
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     290
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) _EUSART_is_rx_ready                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EUSART_Read                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _FlashError                                           4     4      0      46
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INTERRUPT_InterruptManager                          0     0      0       0
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (12) _TMR0_ISR                                            0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                           _TimerISR *
 ---------------------------------------------------------------------------------
 (13) _TimerISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _FlashError
   _GetNavData
     _EUSART_Read
     _EUSART_is_rx_ready
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART_Write
               _strlen
           _fputc
             _putch
               _EUSART_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _EUSART_Write
             _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART_Write
               _strlen
             _toupper
               _islower
   _SYSTEM_Initialize
     _EUSART_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
   _SetupGPS
     _GPS_HasAcknowledged
       _EUSART_Read
       _EUSART_is_rx_ready
     _GPS_SendUBX
       _EUSART_Write
       _GetLengthUBX
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART_Write
               _strlen
           _fputc
             _putch
               _EUSART_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _EUSART_Write
             _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART_Write
               _strlen
             _toupper
               _islower
   _TMR0_SetInterruptHandler
   _TransmitString
     _TransmitByte
       _TransmitBit
     _strlen
   _crc16
     _crc_append_byte
     _strlen
   _sprintf
     _crc16 (ARG)
       _crc_append_byte
       _strlen
     _vfprintf (ARG)
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _EUSART_Write
             _fputs
               _fputc
                 _putch
                   _EUSART_Write
             _strlen
         _fputc
           _putch
             _EUSART_Write
         _isdigit
         _stoa
           _fputc
             _putch
               _EUSART_Write
           _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _EUSART_Write
             _fputs
               _fputc
                 _putch
                   _EUSART_Write
             _strlen
           _toupper
             _islower
   _strcat
     _strcpy
       _strlen (ARG)
     _strlen

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _TimerISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4D      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     2E      4E       7       97.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      4E       9       97.5%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      4C      11       95.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      46      13       87.5%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0      49      15       91.3%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     1D5      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     1D5      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sun Jul 28 20:54:25 2019

                             __CFG_CP$OFF 0000                           GPS_SendUBX@data 0079  
                     ___wmul@multiplicand 0072                           _timer0ReloadVal 00ED  
                             __CFG_LVP$ON 0000                                       l112 0879  
                                     l105 0893                                       l204 0AC1  
                                     l230 0CC6                                       l223 0BAE  
                                     l226 0BC2                                       l247 0980  
                                     l508 0EA4                                       l517 0EFD  
                                     l525 02B1                                       l550 03CD  
                                     l471 0C52                                       l481 0466  
                                     l529 02CD                                       l561 0087  
                                     l482 0478                                       l562 0089  
                                     l563 008B                                       l468 0C32  
                                     l476 0442                                       l564 008D  
                                     l709 0FEE                                       l485 050D  
                                     l477 044A                                       l566 00BF  
                                     l559 007D                                       l596 09B1  
                                     l696 073E                                       _abs 091D  
                                     _pad 0C1C                              __CFG_BORV$LO 0000  
                                     wreg 0009                              __CFG_IESO$ON 0000  
                            ?_EUSART_Read 0070                              __CFG_ZCD$OFF 0000  
                                    ?_abs 0073                                      l1071 0E29  
                                    l2402 0FC1                                      l2250 0BFE  
                                    l2404 0FCD                                      l2350 06AE  
                                    l2246 0BDA                                      l3310 0474  
                                    l2328 09AB                                      l2416 09D8  
                                    l2352 06B2                                      l2272 0A22  
                                    l3304 045E                                      l2610 0DF1  
                                    l2362 06C9                                      l2346 0687  
                                    l3314 04A4                                      l2612 0DF6  
                                    l2604 0DE1                                      l2372 0711  
                                    l2364 06D8                                      l3324 047F  
                                    l3332 0519                                      l3420 030C  
                                    l3412 02DB                                      l2614 0E0A  
                                    l2374 071D                                      l3342 052A  
                                    l3406 02C5                                      l3510 010E  
                                    l2384 0F4E                                      l3264 0938  
                                    l3336 0520                                      l3416 02F2  
                                    l3520 0157                                      l3600 099A  
                                    l2618 0E2D                                      l3266 0944  
                                    l3274 0C28                                      l3346 0537  
                                    l3506 00F5                                      l2628 0E5C  
                                    l2396 0F82                                      l2388 0F75  
                                    l3284 0C34                                      l3372 0EB4  
                                    l3460 03EA                                      l3436 035A  
                                    l3444 039C                                      l3508 0105  
                                    l3516 0138                                      l3700 05B8  
                                    l2398 0F91                                      l3278 0C30  
                                    l3390 0F01                                      l3358 0E7D  
                                    l3542 01F3                                      l3710 05DB  
                                    l3702 05C9                                      l3622 0CFB  
                                    l3614 0CF7                                      l3288 0C5D  
                                    l3376 0EC5                                      l3552 024E  
                                    l3528 01A4                                      l2912 0D85  
                                    l2904 0D7D                                      l3624 0D23  
                                    l3800 07DB                                      l2762 089B  
                                    l3394 0F12                                      l3386 0ED4  
                                    l3378 0ED1                                      l3562 0277  
                                    l3538 01D5                                      l3474 007E  
                                    l3490 0094                                      l3730 061B  
                                    l3722 05F9                                      l3714 05E1  
                                    l3706 05CD                                      l2914 0DA4  
                                    l2906 0D7E                                      l3650 0C6C  
                                    l2770 0982                                      l3626 0D28  
                                    l2596 0DC5                                      l3396 0F1E  
                                    l3484 008F                                      l3732 0622  
                                    l3724 0604                                      l3716 05EC  
                                    l3708 05D4                                      l3740 0562  
                                    l3652 0C8E                                      l3558 0271  
                                    l3494 00C6                                      l3726 060B  
                                    l3718 05F3                                      l3742 065A  
                                    l2918 0DA6                                      l3638 0AA3  
                                    ?_pad 0024                                      l3568 0282  
                                    l3728 0614                                      l3736 062F  
                                    l2848 0BBD                                      l3586 0B7A  
                                    l3738 0654                                      l3690 0596  
                                    l2874 0A4F                                      l2858 0B1E  
                                    l3588 0B97                                      l3694 059E  
                                    l3696 05B5                                      l2896 0D67  
                                    l3792 07D5                                      l3794 07D8  
                                    l3778 0761                                      l3892 05C1  
                                    l3894 0634                                      l3896 00AD  
                                    l3898 0E02                                      STR_1 104E  
                                    STR_2 1000                                      STR_3 1082  
                                    STR_4 1034                                      STR_5 1068  
                                    STR_6 101A                                      STR_7 10B0  
                                    STR_8 109C                                      STR_9 10BE  
                                    _LATA 010C                                      _LATB 010D  
                                    _LATC 010E                                      u1600 0971  
                                    u1610 0972                                      u1700 09F6  
                                    u1710 0A0C                                      u3135 0456  
                                    u3080 0418                                      u3240 0E6D  
                                    u1720 0A0D                                      u3400 0343  
                                    u3065 0C3E                                      u3305 0EDE  
                                    u3090 0419                                      u3410 0344  
                                    u1740 0915                                      u3165 0517  
                                    u3325 0F1C                                      u1750 0916  
                                    u1670 095A                                      u1575 0BFC  
                                    u2480 0E41                                      u1840 06B9  
                                    u1680 095B                                      u1665 0926  
                                    u3185 0493                                      u3345 02BD  
                                    u2490 0E42                                      u1690 09F5  
                                    u3370 0323                                      u3195 049F  
                                    u3275 0E9D                                      u3435 0380  
                                    u2715 0BBE                                      u3380 0324  
                                    u2740 0B29                                      u3445 03A6  
                                    u3365 0306                                      u3550 012A  
                                    u2750 0B2A                                      u2734 0B23  
                                    u1775 09B2                                      u3295 0ECF  
                                    u2735 0B22                                      u3560 012B  
                                    u1785 09B7                                      u3465 03BC  
                                    u3730 05AE                                      u1875 06FE  
                                    u3475 03C8                                      u3740 05AF  
                                    u2765 0B3A                                      u3805 07F1  
                                    u2855 0AE8                                      u1975 0FAF  
                                    u3735 05AA                                      u2775 0A59  
                                    u3817 07DF                                      u3827 0985  
                                    u3675 0D01                                      u3837 098C  
                                    u3685 0CD0                                      u3847 0C86  
                                    u3695 0AAD                                      u3857 0AC8  
                                    u3867 0AD5                                      _TMR0 0015  
                                    _WPUA 020C                                      _WPUB 020D  
                                    _WPUC 020E                              __CFG_WRT$OFF 0000  
                           __CFG_FCMEN$ON 0000                                      abs@a 0073  
                                    _dbuf 01CC                                      _atoi 0DC0  
                       GetNavData@success 00C5                                      _main 0750  
                                    _dtoa 03FC                      __end_of_GetLengthUBX 08DB  
                                    _prec 00DA                              TransmitBit@b 0071  
                                    _nout 00D6                                      pad@i 0028  
                                    pad@p 0025                                      fsr0h 0005  
                                    fsr1h 0007                                      indf0 0000  
                                    fsr0l 0004                                      indf1 0001  
                                    fsr1l 0006                                      pad@w 002A  
                                    _stoa 0E61                                      btemp 007E  
                                    _xtoa 02A7                             __CFG_BOREN$ON 0000  
                       GPS_SendUBX@length 0075              GPS_HasAcknowledged@startTime 0020  
                                    start 000D                             __CFG_MCLRE$ON 0000  
                              _GetNavData 0549                                     ??_abs 0075  
                                   ??_pad 0027                   __end_of_TMR0_Initialize 0906  
          ??_TMR0_DefaultInterruptHandler 0070                             ?_EUSART_Write 0070  
          __size_of_OSCILLATOR_Initialize 0007             __end_of_OSCILLATOR_Initialize 0878  
                         __end_of___aodiv 0750                                     ?_atoi 0076  
                                   ?_main 0070                                     ?_dtoa 0030  
              GPS_HasAcknowledged@ackByte 0024                           __end_of___aomod 1000  
                                   STR_10 10CA                             __CFG_WDTE$OFF 0000  
                              _FlashError 0ABF                                     ?_stoa 007A  
                                   ?_xtoa 002D                                     i1l132 000B  
                            vfpfcnvrt@fmt 0053                              vfpfcnvrt@llu 00A8  
                                   _TRISA 008C                                     _TRISB 008D  
                                   _TRISC 008E                                     _RXPPS 0E24  
       __size_of_TMR0_SetInterruptHandler 0006                            _GetNavData$504 00BE  
                          _GetNavData$505 00C0                 ?_TMR0_SetInterruptHandler 0070  
                        __end_of_TMR0_ISR 08B8                                     _crc16 0CBE  
                                   _flags 006D                                     _fputc 0BD1  
                         __end_of_isalpha 09FD                                     _fputs 0A1E  
                         __end_of_isdigit 091D                              ?_GPS_SendUBX 0070  
                                   _ticks 00D2                                     atoi@n 0027  
                                   pad@fp 002C                                     atoi@s 0076  
                                   _width 00D8                                     _putch 085A  
                                   main@i 00CC                                     dtoa@d 0030  
                                   dtoa@i 004C                                     dtoa@n 0044  
                                   dtoa@p 003E                                     dtoa@s 0042  
                                   dtoa@w 0040                           __end_of_islower 0979  
                         __end_of_isspace 09E0                           __end_of_isupper 0962  
                       __end_of_BAUD_RATE 10D5                                     pclath 000A  
                     GetNavData@dataIndex 00C6                   GPS_HasAcknowledged@data 002F  
                           TransmitByte@i 0074                                     stoa@i 002A  
                                   stoa@l 0033                                     stoa@p 0031  
                                   stoa@s 007A                                     stoa@w 002C  
                                   status 0003                                     wtemp0 007E  
                         __end_of_sprintf 0B71                                     xtoa@c 0051  
                                   xtoa@d 002D                                     xtoa@i 004F  
                                   xtoa@n 0047                                     xtoa@p 0043  
                                   xtoa@w 0045                                     xtoa@x 0035  
                __end_of_MESSAGE_INTERVAL 10D7                           __end_of_toupper 0A1E  
                            _toupper$1084 007C                           _crc_append_byte 0BA0  
                         __initialization 000F                              __end_of_atoi 0E61  
                            __end_of_main 07F4                              __end_of_dtoa 0549  
                    GPS_HasAcknowledged@i 0031                              __end_of_stoa 0F24  
                            __end_of_xtoa 03FC                            ??_EUSART_Write 0070  
                          __CFG_LPBOR$OFF 0000               ?_INTERRUPT_InterruptManager 0070  
                                  ??_atoi 0078                                    ??_main 00C9  
                                  ??_dtoa 0038                                    ??_stoa 0020  
                                  ??_xtoa 0036                            __CFG_PLLEN$OFF 0000  
                        __end_of_TimerISR 0893                          __end_of_SetupGPS 0CBE  
                                  ?_crc16 0078                                    ?_fputc 0072  
                                  ?_fputs 007A                                    _ANSELA 018C  
                                  ?_putch 0070                                    _ANSELB 018D  
                                  _ANSELC 018E                __end_of_EUSART_is_rx_ready 085A  
                                  _BORCON 0116                                    _RC1REG 0199  
                                  _RC1STA 019D                                    _RB7PPS 0E9F  
                                  _ODCONA 028C                                    _ODCONB 028D  
                                  _ODCONC 028E                                    _OSCCON 0099  
                           vfpfcnvrt@done 00B3                                    _SPBRGH 019C  
                                  _SPBRGL 019B                                    u181lld 0685  
                                  _TX1REG 019A                                    u192lld 0F4C  
                                  _TX1STA 019E                            __CFG_PWRTE$OFF 0000  
                            vfprintf@cfmt 0061                               ?_GetNavData 0070  
                               ??___aodiv 0070                                 ??___aomod 0070  
                                  ___wmul 09A9                                    crc16@c 0023  
                                  crc16@i 0029                            __CFG_STVREN$ON 0000  
                        ?_TMR0_Initialize 0070                       GetNavData@startTime 00BA  
                                  _printf 08B8                                    pad@buf 0024  
                                  main@id 00CA                                    _strcat 08DB  
                                  dtoa@fp 003B                               ?_FlashError 0070  
                                  _strcpy 0991                                    _strlen 0934  
                                  fputc@c 0072                                    fputs@c 0020  
                                  fputs@i 0021                                    fputs@s 0023  
                               ??_isalpha 0072                                 ??_isdigit 0072  
                               ??_islower 0072                                 ??_isspace 0072  
                        ??_TransmitString 0076                                 ??_isupper 0072  
                                  stoa@cp 002F                                    stoa@fp 002E  
                        __end_of_vfprintf 0BA0  TMR0_SetInterruptHandler@InterruptHandler 0070  
                   __size_of_GetLengthUBX 0012                        __end_of_DELAY_MULT 10D3  
                               ??_sprintf 0063                                    xtoa@fp 003E  
                               ??_toupper 0078                   __end_of_crc_append_byte 0BD1  
                    __size_of_EUSART_Read 000A                         _SYSTEM_Initialize 07F4  
                 __end_of__initialization 0051                        ?_SYSTEM_Initialize 0070  
                          __pcstackCOMMON 0070                              __pidataBANK1 0880  
                            __pidataBANK3 0AEB                             __end_of_crc16 0D2E  
                     ??_SYSTEM_Initialize 0073                                 ?_TMR0_ISR 0070  
                           __end_of_fputc 0C1C                             __end_of_fputs 0A44  
                           ??_TransmitBit 0070                             __end_of_putch 085F  
                            _GetLengthUBX 08C9                            _OPTION_REGbits 0095  
                           _gps_longitude 0120                                   ??_crc16 007A  
                                 ??_fputc 0075               __end_of_GPS_HasAcknowledged 0DC0  
               __end_of_SYSTEM_Initialize 0800                       __size_of_GetNavData 0114  
                                 ??_fputs 007B                                   ??_putch 0071  
                              __pbssBANK0 006D                                __pbssBANK1 00CE  
                              __pbssBANK2 0120                                __pbssBANK3 01CC  
                              __pbssBANK4 0220                                __pbssBANK5 02A0  
                    __end_of_EUSART_Write 0880                      __size_of_GPS_SendUBX 0027  
                     __size_of_FlashError 002C                          _setNavFlightMode 01A0  
                              __pmaintext 0750                                 ?_TimerISR 0070  
                               ?_SetupGPS 0070          __end_of_TMR0_SetInterruptHandler 0865  
                                 ?___wmul 0070                                ??_TMR0_ISR 0070  
                         __CFG_PPS1WAY$ON 0000                                __pintentry 0004  
                                 ?_printf 0063                                   ?_strcat 0079  
                                 ?_strcpy 0074                                   ?_strlen 0070  
                         __CFG_WDTCCS$SWC 0000                       __end_of_TransmitBit 0991  
                      __size_of_vfpfcnvrt 0252                                   _OSCTUNE 0098  
                                 _SLRCONA 030C                                   _SLRCONB 030D  
                                 _SLRCONC 030E                          ?_crc_append_byte 0070  
                               _BAUD_RATE 10D3                                ??_TimerISR 0070  
                              ??_SetupGPS 0069                                   ___aodiv 065D  
                                 ___aomod 0F24                          GetLengthUBX@data 0073  
                         __size_of___wmul 001B                                 ?_vfprintf 005B  
                                 __ptext1 08DB                                   __ptext2 0991  
                                 __ptext3 0B44                                   __ptext4 0CBE  
                                 __ptext5 0BA0                                   __ptext6 0A95  
                                 __ptext7 0B17                                   __ptext8 0979  
                                 __ptext9 0C6C                           __size_of_printf 0011  
                         __size_of_strcat 0015                           __size_of_strcpy 0018  
                         __size_of_strlen 0017                     _OSCILLATOR_Initialize 0871  
                            __size_of_abs 0017                              __size_of_pad 0050  
                                 _isalpha 09E0                                   _isdigit 0906  
                           _message_start 0220                                   _islower 0962  
                ??_PIN_MANAGER_Initialize 0070                                   _isspace 09C4  
                                 _isupper 094B                                   atoi@neg 0020  
              __size_of_SYSTEM_Initialize 000C                                   _sprintf 0B44  
                                 clrloop0 0866                                   _toupper 09FD  
                    end_of_initialization 0051                                   fputc@fp 0074  
                                 init_ram 086B                                   fputs@fp 007A  
                                 initloop 086C                         _EUSART_Initialize 089D  
                     crc_append_byte@data 0072                        ?_EUSART_Initialize 0070  
                            ??_GetNavData 0069                         __end_of_vfpfcnvrt 02A7  
                      _EUSART_is_rx_ready 0855                                ??_vfprintf 005E  
                             _TransmitBit 0979                                   strcpy@d 0077  
                                 strlen@a 0072                                   strcpy@s 0076  
                                 strlen@s 0070                       ??_EUSART_Initialize 0070  
                _TMR0_SetInterruptHandler 085F                       ?_EUSART_is_rx_ready 0070  
                            ??_FlashError 0070                           TransmitString@i 0079  
                           ?_TransmitByte 0070                          __CFG_FOSC$INTOSC 0000  
                           crc16@segments 0078                     __size_of_EUSART_Write 0008  
                            GPS_SendUBX@i 0077                        __end_of_GetNavData 065D  
               __end_of_EUSART_Initialize 08A8                      ??_EUSART_is_rx_ready 0070  
                          _gps_configured 006F                        __end_of_FlashError 0AEB  
                   TransmitString@message 007B                               vfpfcnvrt@ap 0054  
                             vfpfcnvrt@cp 00B0                               vfpfcnvrt@fp 00B7  
                             vfpfcnvrt@ll 00A0                            __end_of___wmul 09C4  
                            _EUSART_Write 0878                         __size_of_TMR0_ISR 0010  
                  ?_OSCILLATOR_Initialize 0070                            ??_TransmitByte 0072  
                          __end_of_printf 08C9                            __end_of_strcat 08F0  
                          __end_of_strcpy 09A9                            __end_of_strlen 094B  
                     start_initialization 000F                  __size_of_TMR0_Initialize 0016  
         __size_of_PIN_MANAGER_Initialize 002A                               __end_of_abs 0934  
                             __end_of_pad 0C6C                             ??_EUSART_Read 0070  
                          _gps_nav_status 00CE                               putch@txData 0071  
                             vfprintf@fmt 005B                                  ??___wmul 0074  
                       __size_of_TimerISR 000A                               __pdataBANK1 00E2  
                             __pdataBANK3 01A0                         __size_of_SetupGPS 0052  
                                ??_printf 0065                                  ??_strcat 007A  
                                ??_strcpy 0075                                  ??_strlen 0072  
                            _gps_altitude 0140                               crc16@string 0028  
                               ___latbits 0002                             __pcstackBANK0 0020  
                           __pcstackBANK1 00A0                          ___aodiv@dividend 0028  
                           ??_GPS_SendUBX 0074                              _gps_latitude 0130  
              __size_of_EUSART_Initialize 000B                                 crc16@data 0022  
                     __end_of_EUSART_Read 089D                   __size_of_TransmitString 002A  
                   _TMR0_InterruptHandler 00EB                                 __pnvBANK1 00EB  
            __size_of_GPS_HasAcknowledged 0092                    _PIN_MANAGER_Initialize 0A6B  
                                ?___aodiv 0020                                  ?___aomod 0020  
                        ___aodiv@quotient 0073                          crc_append_byte@i 0076  
            ??_INTERRUPT_InterruptManager 0070                         __size_of_vfprintf 002F  
                                _BAUD1CON 019F                                  ?_isalpha 0070  
                                ?_isdigit 0070                                  ?_islower 0070  
                                ?_isspace 0070                                  ?_isupper 0070  
                          __size_of_crc16 0070                                  ?_sprintf 00B8  
                          __size_of_fputc 004B                            __size_of_fputs 0026  
                                ?_toupper 0076                            __size_of_putch 0005  
                       ??_TMR0_Initialize 0072                     _gps_vertical_velocity 0156  
                          ___wmul@product 0074                                  _LATAbits 010C  
                                _LATCbits 010E                       __end_of_GPS_SendUBX 0A6B  
                               clear_ram0 0865                      __end_of_TransmitByte 0B44  
                      crc_append_byte@crc 0070       __size_of_INTERRUPT_InterruptManager 0009  
              ??_TMR0_SetInterruptHandler 0072                                  _PIR1bits 0010  
                   _gps_speed_over_ground 0166                  __size_of_crc_append_byte 0031  
                    __CFG_WDTCPS$WDTCPS1F 0000                                  _TMR0_ISR 08A8  
                            ?_TransmitBit 0070                                 _vfpfcnvrt 0055  
                       ___wmul@multiplier 0070                            GetNavData@byte 00C8  
                          GetNavData@skip 00C2                      TransmitString@counti 0077  
                             _EUSART_Read 0893                                vfpfcnvrt@c 00B2  
                 GetNavData@dataFieldType 00C3                    _gps_course_over_ground 015E  
                              _DELAY_MULT 10D1                                vfprintf@ap 005D  
                              vfprintf@fp 0060                                  _TimerISR 0889  
                                _SetupGPS 0C6C                   ??_OSCILLATOR_Initialize 0070  
                        __size_of___aodiv 00F3                          __size_of___aomod 00DC  
                              ?_vfpfcnvrt 0053                           ___aodiv@divisor 0020  
                         ___aodiv@counter 0071                             ?_GetLengthUBX 0070  
                              sprintf@fmt 00BA                                  crc16@crc 0024  
                                crc16@len 0020                                  crc16@str 0026  
                              strcat@dest 007D                                  _atoi$957 0022  
                                _atoi$958 0026                                  _atoi$959 0024  
                                _checksum 00DC                          __size_of_isalpha 001D  
                        __size_of_isdigit 0017                                  _dtoa$623 003C  
                        __size_of_islower 0017                          __size_of_isspace 001C  
                                __ptext10 0A44                                  __ptext11 08C9  
                                __ptext20 08B8                                  __ptext12 0D2E  
                                __ptext21 0B71                                  __ptext13 07F4  
                                __ptext30 0C1C                                  __ptext22 0055  
                                __ptext14 08F0                                  __ptext31 0934  
                                __ptext23 02A7                                  __ptext15 085F  
                                __ptext40 09C4                                  __ptext32 0A1E  
                                __ptext24 09FD                                  __ptext16 0A6B  
                                __ptext41 0906                                  __ptext33 0BD1  
                                __ptext25 0962                                  __ptext17 0871  
                                __ptext42 09A9                                  __ptext34 085A  
                                __ptext26 094B                                  __ptext18 089D  
                                __ptext43 0855                                  __ptext35 0878  
                                __ptext27 09E0                                  __ptext19 0549  
                                __ptext44 0893                                  __ptext36 091D  
                                __ptext28 0E61                                  __ptext45 0ABF  
                                __ptext37 0F24                                  __ptext29 03FC  
                                __ptext38 065D                                  __ptext47 08A8  
                                __ptext39 0DC0                                  __ptext48 0003  
                                __ptext49 0889                          __size_of_isupper 0017  
                             _GPS_SendUBX 0A44                          __size_of_sprintf 002D  
                              strcpy@dest 0078                          __size_of_toupper 0021  
             __size_of_EUSART_is_rx_ready 0005                             __size_of_atoi 00A1  
                          _TransmitString 0A95                             __size_of_main 00A4  
                           __size_of_dtoa 014D                                  _gps_time 014C  
                           __size_of_stoa 00C3                             __size_of_xtoa 0155  
                             _message_end 02A0                                  _messages 00E9  
    __end_of_TMR0_DefaultInterruptHandler 0004     __size_of_TMR0_DefaultInterruptHandler 0001  
            _TMR0_DefaultInterruptHandler 0003                      __CFG_WDTCWS$WDTCWSSW 0000  
                              _RC1STAbits 019D                                 stoa@F1139 00E2  
                                int$flags 007E                                  _xtoa$645 003F  
                                _xtoa$646 0041                                  _vfprintf 0B71  
      __end_of_INTERRUPT_InterruptManager 000D                _INTERRUPT_InterruptManager 0004  
                               printf@fmt 0063                            ??_GetLengthUBX 0073  
                             _isspace$984 0074                         ??_crc_append_byte 0073  
                        _MESSAGE_INTERVAL 10D5                          ___aomod@dividend 0028  
                     _GPS_HasAcknowledged 0D2E                                _INTCONbits 000B  
                          __pstringtext10 109C                            __pstringtext11 10B0  
                          __pstringtext12 10BE                            __pstringtext13 10CA  
                          __pstringtext14 0000                                  isalpha@c 0070  
                                isdigit@c 0070                    __end_of_TransmitString 0ABF  
                   __size_of_TransmitByte 002D                                  intlevel1 0000  
                               sprintf@ap 0066                          TransmitByte@byte 0073  
                               strcat@src 0079                               FlashError@i 0072  
                                islower@c 0070                                  isspace@c 0070  
                 ?_PIN_MANAGER_Initialize 0070                         __CFG_CLKOUTEN$OFF 0000  
                    ?_GPS_HasAcknowledged 0070                                 strcpy@src 0074  
                                isupper@c 0070             ?_TMR0_DefaultInterruptHandler 0070  
            GPS_HasAcknowledged@ackByteID 0030              GPS_HasAcknowledged@ackPacket 0025  
                                printf@ap 0068                           ___aomod@divisor 0020  
                             ??_vfpfcnvrt 0055                                  stoa@nuls 0023  
                         ___aomod@counter 0071                             _vfpfcnvrt$660 00B5  
                           __pstringtext1 10D1                             __pstringtext2 10D3  
                           __pstringtext3 10D5                             __pstringtext4 1000  
                           __pstringtext5 101A                             __pstringtext6 1034  
                           __pstringtext7 104E                             __pstringtext8 1068  
                           __pstringtext9 1082                      __size_of_TransmitBit 0018  
                              _OPTION_REG 0095                                  sprintf@f 0067  
                                sprintf@s 00B8                              _TransmitByte 0B17  
                         _TMR0_Initialize 08F0                                  toupper@c 0076  
                              _TX1STAbits 019E                        EUSART_Write@txData 0070  
                            ___aodiv@sign 0072                           ?_TransmitString 0070  
          __end_of_PIN_MANAGER_Initialize 0A95                     ??_GPS_HasAcknowledged 0070  
                            ___aomod@sign 0072  
