

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sat Aug 31 11:01:45 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F1619
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	idataBANK4,global,class=CODE,delta=2
     7                           	psect	stringtext1,global,class=STRCODE,delta=2
     8                           	psect	stringtext2,global,class=STRCODE,delta=2
     9                           	psect	stringtext3,global,class=STRCODE,delta=2
    10                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1
    12                           	psect	stringtext4,global,class=STRCODE,delta=2
    13                           	psect	stringtext5,global,class=STRCODE,delta=2
    14                           	psect	stringtext6,global,class=STRCODE,delta=2
    15                           	psect	stringtext7,global,class=STRCODE,delta=2
    16                           	psect	stringtext8,global,class=STRCODE,delta=2
    17                           	psect	stringtext9,global,class=STRCODE,delta=2
    18                           	psect	stringtext10,global,class=STRCODE,delta=2
    19                           	psect	stringtext11,global,class=STRCODE,delta=2
    20                           	psect	stringtext12,global,class=STRCODE,delta=2
    21                           	psect	stringtext13,global,class=STRCODE,delta=2
    22                           	psect	stringtext14,global,class=STRCODE,delta=2
    23                           	psect	stringtext15,global,class=STRCODE,delta=2
    24                           	psect	cinit,global,class=CODE,merge=1,delta=2
    25                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    26                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    27                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    28                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    29                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    30                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    31                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    32                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1
    33                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    34                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1
    35                           	psect	inittext,global,class=CODE,delta=2
    36                           	psect	clrtext,global,class=CODE,delta=2
    37                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    38                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    39                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    40                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    41                           	psect	text1,local,class=CODE,merge=1,delta=2,group=2
    42                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    43                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    44                           	psect	text4,local,class=CODE,merge=1,delta=2
    45                           	psect	text5,local,class=CODE,merge=1,delta=2
    46                           	psect	text6,local,class=CODE,merge=1,delta=2
    47                           	psect	text7,local,class=CODE,merge=1,delta=2
    48                           	psect	text8,local,class=CODE,merge=1,delta=2
    49                           	psect	text9,local,class=CODE,merge=1,delta=2
    50                           	psect	text10,local,class=CODE,merge=1,delta=2
    51                           	psect	text11,local,class=CODE,merge=1,delta=2
    52                           	psect	text12,local,class=CODE,merge=1,delta=2
    53                           	psect	text13,local,class=CODE,merge=1,delta=2
    54                           	psect	text14,local,class=CODE,merge=1,delta=2
    55                           	psect	text15,local,class=CODE,merge=1,delta=2
    56                           	psect	text16,local,class=CODE,merge=1,delta=2
    57                           	psect	text17,local,class=CODE,merge=1,delta=2
    58                           	psect	text18,local,class=CODE,merge=1,delta=2
    59                           	psect	text19,local,class=CODE,merge=1,delta=2
    60                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    61                           	psect	text21,local,class=CODE,merge=1,delta=2
    62                           	psect	text22,local,class=CODE,merge=1,delta=2
    63                           	psect	text23,local,class=CODE,merge=1,delta=2
    64                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    65                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    66                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    67                           	psect	text27,local,class=CODE,merge=1,delta=2,group=2
    68                           	psect	text28,local,class=CODE,merge=1,delta=2
    69                           	psect	text29,local,class=CODE,merge=1,delta=2
    70                           	psect	text30,local,class=CODE,merge=1,delta=2
    71                           	psect	text31,local,class=CODE,merge=1,delta=2,group=2
    72                           	psect	text32,local,class=CODE,merge=1,delta=2,group=2
    73                           	psect	text33,local,class=CODE,merge=1,delta=2
    74                           	psect	text34,local,class=CODE,merge=1,delta=2
    75                           	psect	text35,local,class=CODE,merge=1,delta=2,group=2
    76                           	psect	text36,local,class=CODE,merge=1,delta=2,group=1
    77                           	psect	text37,local,class=CODE,merge=1,delta=2,group=1
    78                           	psect	text38,local,class=CODE,merge=1,delta=2,group=2
    79                           	psect	text39,local,class=CODE,merge=1,delta=2,group=2
    80                           	psect	text40,local,class=CODE,merge=1,delta=2,group=2
    81                           	psect	text41,local,class=CODE,merge=1,delta=2,group=1
    82                           	psect	text42,local,class=CODE,merge=1,delta=2
    83                           	psect	text43,local,class=CODE,merge=1,delta=2
    84                           	psect	text44,local,class=CODE,merge=1,delta=2
    85                           	psect	text45,local,class=CODE,merge=1,delta=2
    86                           	psect	text46,local,class=CODE,merge=1,delta=2
    87                           	psect	text47,local,class=CODE,merge=1,delta=2,group=2
    88                           	psect	text48,local,class=CODE,merge=1,delta=2
    89                           	psect	intentry,global,class=CODE,delta=2
    90                           	psect	text50,local,class=CODE,merge=1,delta=2
    91                           	psect	text51,local,class=CODE,merge=1,delta=2
    92                           	psect	text52,local,class=CODE,merge=1,delta=2
    93                           	dabs	1,0x7E,2
    94  0000                     
    95                           ; Version 2.05
    96                           ; Generated 20/12/2018 GMT
    97                           ; 
    98                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    99                           ; All rights reserved.
   100                           ; 
   101                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   102                           ; 
   103                           ; Redistribution and use in source and binary forms, with or without modification, are
   104                           ; permitted provided that the following conditions are met:
   105                           ; 
   106                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   107                           ;        conditions and the following disclaimer.
   108                           ; 
   109                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   110                           ;        of conditions and the following disclaimer in the documentation and/or other
   111                           ;        materials provided with the distribution.
   112                           ; 
   113                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   114                           ;        software without specific prior written permission.
   115                           ; 
   116                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   117                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   118                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   119                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   120                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   121                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   122                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   123                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   124                           ; 
   125                           ; 
   126                           ; Code-generator required, PIC16F1619 Definitions
   127                           ; 
   128                           ; SFR Addresses
   129  0000                     	;# 
   130  0001                     	;# 
   131  0002                     	;# 
   132  0003                     	;# 
   133  0004                     	;# 
   134  0005                     	;# 
   135  0006                     	;# 
   136  0007                     	;# 
   137  0008                     	;# 
   138  0009                     	;# 
   139  000A                     	;# 
   140  000B                     	;# 
   141  000C                     	;# 
   142  000D                     	;# 
   143  000E                     	;# 
   144  0010                     	;# 
   145  0011                     	;# 
   146  0012                     	;# 
   147  0013                     	;# 
   148  0014                     	;# 
   149  0015                     	;# 
   150  0016                     	;# 
   151  0016                     	;# 
   152  0017                     	;# 
   153  0018                     	;# 
   154  0019                     	;# 
   155  001A                     	;# 
   156  001A                     	;# 
   157  001B                     	;# 
   158  001B                     	;# 
   159  001C                     	;# 
   160  001D                     	;# 
   161  001E                     	;# 
   162  001F                     	;# 
   163  008C                     	;# 
   164  008D                     	;# 
   165  008E                     	;# 
   166  0090                     	;# 
   167  0091                     	;# 
   168  0092                     	;# 
   169  0093                     	;# 
   170  0094                     	;# 
   171  0095                     	;# 
   172  0096                     	;# 
   173  0098                     	;# 
   174  0099                     	;# 
   175  009A                     	;# 
   176  009B                     	;# 
   177  009B                     	;# 
   178  009C                     	;# 
   179  009D                     	;# 
   180  009E                     	;# 
   181  009F                     	;# 
   182  010C                     	;# 
   183  010D                     	;# 
   184  010E                     	;# 
   185  0111                     	;# 
   186  0112                     	;# 
   187  0113                     	;# 
   188  0114                     	;# 
   189  0115                     	;# 
   190  0116                     	;# 
   191  0117                     	;# 
   192  0118                     	;# 
   193  0119                     	;# 
   194  011C                     	;# 
   195  018C                     	;# 
   196  018D                     	;# 
   197  018E                     	;# 
   198  0191                     	;# 
   199  0191                     	;# 
   200  0192                     	;# 
   201  0193                     	;# 
   202  0193                     	;# 
   203  0194                     	;# 
   204  0195                     	;# 
   205  0196                     	;# 
   206  0197                     	;# 
   207  0199                     	;# 
   208  0199                     	;# 
   209  0199                     	;# 
   210  019A                     	;# 
   211  019A                     	;# 
   212  019A                     	;# 
   213  019B                     	;# 
   214  019B                     	;# 
   215  019B                     	;# 
   216  019B                     	;# 
   217  019B                     	;# 
   218  019C                     	;# 
   219  019C                     	;# 
   220  019C                     	;# 
   221  019D                     	;# 
   222  019D                     	;# 
   223  019D                     	;# 
   224  019E                     	;# 
   225  019E                     	;# 
   226  019E                     	;# 
   227  019F                     	;# 
   228  019F                     	;# 
   229  019F                     	;# 
   230  019F                     	;# 
   231  019F                     	;# 
   232  020C                     	;# 
   233  020D                     	;# 
   234  020E                     	;# 
   235  0211                     	;# 
   236  0211                     	;# 
   237  0212                     	;# 
   238  0212                     	;# 
   239  0213                     	;# 
   240  0213                     	;# 
   241  0214                     	;# 
   242  0214                     	;# 
   243  0215                     	;# 
   244  0215                     	;# 
   245  0215                     	;# 
   246  0215                     	;# 
   247  0216                     	;# 
   248  0216                     	;# 
   249  0217                     	;# 
   250  0217                     	;# 
   251  028C                     	;# 
   252  028D                     	;# 
   253  028E                     	;# 
   254  0291                     	;# 
   255  0291                     	;# 
   256  0292                     	;# 
   257  0293                     	;# 
   258  0294                     	;# 
   259  0298                     	;# 
   260  0298                     	;# 
   261  0299                     	;# 
   262  029A                     	;# 
   263  029B                     	;# 
   264  029E                     	;# 
   265  030C                     	;# 
   266  030D                     	;# 
   267  030E                     	;# 
   268  038C                     	;# 
   269  038D                     	;# 
   270  038E                     	;# 
   271  0391                     	;# 
   272  0392                     	;# 
   273  0393                     	;# 
   274  0394                     	;# 
   275  0395                     	;# 
   276  0396                     	;# 
   277  0397                     	;# 
   278  0398                     	;# 
   279  0399                     	;# 
   280  040E                     	;# 
   281  0413                     	;# 
   282  0413                     	;# 
   283  0414                     	;# 
   284  0414                     	;# 
   285  0415                     	;# 
   286  0416                     	;# 
   287  0417                     	;# 
   288  0418                     	;# 
   289  041A                     	;# 
   290  041A                     	;# 
   291  041B                     	;# 
   292  041B                     	;# 
   293  041C                     	;# 
   294  041D                     	;# 
   295  041E                     	;# 
   296  041F                     	;# 
   297  0493                     	;# 
   298  0494                     	;# 
   299  0495                     	;# 
   300  0496                     	;# 
   301  049A                     	;# 
   302  049B                     	;# 
   303  049C                     	;# 
   304  049D                     	;# 
   305  058C                     	;# 
   306  058C                     	;# 
   307  058D                     	;# 
   308  058E                     	;# 
   309  058E                     	;# 
   310  058F                     	;# 
   311  0590                     	;# 
   312  0590                     	;# 
   313  0591                     	;# 
   314  0592                     	;# 
   315  0592                     	;# 
   316  0593                     	;# 
   317  0594                     	;# 
   318  0594                     	;# 
   319  0595                     	;# 
   320  0596                     	;# 
   321  0596                     	;# 
   322  0597                     	;# 
   323  0598                     	;# 
   324  0599                     	;# 
   325  059A                     	;# 
   326  059B                     	;# 
   327  059B                     	;# 
   328  059C                     	;# 
   329  059D                     	;# 
   330  060C                     	;# 
   331  060C                     	;# 
   332  060D                     	;# 
   333  060E                     	;# 
   334  060F                     	;# 
   335  060F                     	;# 
   336  0610                     	;# 
   337  0611                     	;# 
   338  0612                     	;# 
   339  0613                     	;# 
   340  0614                     	;# 
   341  0617                     	;# 
   342  0617                     	;# 
   343  0618                     	;# 
   344  0619                     	;# 
   345  061A                     	;# 
   346  061A                     	;# 
   347  061B                     	;# 
   348  061C                     	;# 
   349  0691                     	;# 
   350  0692                     	;# 
   351  0693                     	;# 
   352  0694                     	;# 
   353  0695                     	;# 
   354  0696                     	;# 
   355  0697                     	;# 
   356  0699                     	;# 
   357  069A                     	;# 
   358  0711                     	;# 
   359  0712                     	;# 
   360  0713                     	;# 
   361  0714                     	;# 
   362  0715                     	;# 
   363  0718                     	;# 
   364  0718                     	;# 
   365  0719                     	;# 
   366  071A                     	;# 
   367  071A                     	;# 
   368  071B                     	;# 
   369  071C                     	;# 
   370  071D                     	;# 
   371  0791                     	;# 
   372  0791                     	;# 
   373  0792                     	;# 
   374  0793                     	;# 
   375  0793                     	;# 
   376  0794                     	;# 
   377  0795                     	;# 
   378  0795                     	;# 
   379  0796                     	;# 
   380  0797                     	;# 
   381  0797                     	;# 
   382  0798                     	;# 
   383  0799                     	;# 
   384  079A                     	;# 
   385  080C                     	;# 
   386  080C                     	;# 
   387  080D                     	;# 
   388  080E                     	;# 
   389  080E                     	;# 
   390  080F                     	;# 
   391  0810                     	;# 
   392  0810                     	;# 
   393  0811                     	;# 
   394  0812                     	;# 
   395  0812                     	;# 
   396  0813                     	;# 
   397  0814                     	;# 
   398  0815                     	;# 
   399  0816                     	;# 
   400  0817                     	;# 
   401  0818                     	;# 
   402  0819                     	;# 
   403  081A                     	;# 
   404  081A                     	;# 
   405  081B                     	;# 
   406  081C                     	;# 
   407  081C                     	;# 
   408  081D                     	;# 
   409  088C                     	;# 
   410  088D                     	;# 
   411  088E                     	;# 
   412  088F                     	;# 
   413  088F                     	;# 
   414  0890                     	;# 
   415  0891                     	;# 
   416  0892                     	;# 
   417  0893                     	;# 
   418  0893                     	;# 
   419  0894                     	;# 
   420  0895                     	;# 
   421  0896                     	;# 
   422  0897                     	;# 
   423  0897                     	;# 
   424  0898                     	;# 
   425  0899                     	;# 
   426  0D8C                     	;# 
   427  0D8C                     	;# 
   428  0D8D                     	;# 
   429  0D8E                     	;# 
   430  0D8F                     	;# 
   431  0D8F                     	;# 
   432  0D90                     	;# 
   433  0D91                     	;# 
   434  0D92                     	;# 
   435  0D92                     	;# 
   436  0D93                     	;# 
   437  0D94                     	;# 
   438  0D95                     	;# 
   439  0D95                     	;# 
   440  0D96                     	;# 
   441  0D97                     	;# 
   442  0D98                     	;# 
   443  0D99                     	;# 
   444  0D9A                     	;# 
   445  0D9B                     	;# 
   446  0D9C                     	;# 
   447  0D9D                     	;# 
   448  0D9E                     	;# 
   449  0D9E                     	;# 
   450  0D9F                     	;# 
   451  0DA0                     	;# 
   452  0DA1                     	;# 
   453  0DA1                     	;# 
   454  0DA2                     	;# 
   455  0DA3                     	;# 
   456  0DA4                     	;# 
   457  0DA4                     	;# 
   458  0DA5                     	;# 
   459  0DA6                     	;# 
   460  0DA7                     	;# 
   461  0DA7                     	;# 
   462  0DA8                     	;# 
   463  0DA9                     	;# 
   464  0DAA                     	;# 
   465  0DAB                     	;# 
   466  0DAC                     	;# 
   467  0DAD                     	;# 
   468  0DAE                     	;# 
   469  0DAF                     	;# 
   470  0E0F                     	;# 
   471  0E10                     	;# 
   472  0E11                     	;# 
   473  0E12                     	;# 
   474  0E13                     	;# 
   475  0E14                     	;# 
   476  0E15                     	;# 
   477  0E16                     	;# 
   478  0E17                     	;# 
   479  0E18                     	;# 
   480  0E19                     	;# 
   481  0E1A                     	;# 
   482  0E1B                     	;# 
   483  0E1C                     	;# 
   484  0E1D                     	;# 
   485  0E1E                     	;# 
   486  0E1F                     	;# 
   487  0E20                     	;# 
   488  0E21                     	;# 
   489  0E22                     	;# 
   490  0E23                     	;# 
   491  0E24                     	;# 
   492  0E25                     	;# 
   493  0E26                     	;# 
   494  0E27                     	;# 
   495  0E28                     	;# 
   496  0E29                     	;# 
   497  0E2A                     	;# 
   498  0E2B                     	;# 
   499  0E2C                     	;# 
   500  0E2D                     	;# 
   501  0E2E                     	;# 
   502  0E90                     	;# 
   503  0E91                     	;# 
   504  0E92                     	;# 
   505  0E94                     	;# 
   506  0E95                     	;# 
   507  0E9C                     	;# 
   508  0E9D                     	;# 
   509  0E9E                     	;# 
   510  0E9F                     	;# 
   511  0EA0                     	;# 
   512  0EA1                     	;# 
   513  0EA2                     	;# 
   514  0EA3                     	;# 
   515  0EA4                     	;# 
   516  0EA5                     	;# 
   517  0EA6                     	;# 
   518  0EA7                     	;# 
   519  0F0F                     	;# 
   520  0F10                     	;# 
   521  0F11                     	;# 
   522  0F12                     	;# 
   523  0F13                     	;# 
   524  0F14                     	;# 
   525  0F15                     	;# 
   526  0F16                     	;# 
   527  0F17                     	;# 
   528  0F18                     	;# 
   529  0F19                     	;# 
   530  0F1A                     	;# 
   531  0F1B                     	;# 
   532  0F1C                     	;# 
   533  0F1D                     	;# 
   534  0F1E                     	;# 
   535  0F1F                     	;# 
   536  0F20                     	;# 
   537  0F21                     	;# 
   538  0F22                     	;# 
   539  0F23                     	;# 
   540  0F24                     	;# 
   541  0F25                     	;# 
   542  0F26                     	;# 
   543  0F27                     	;# 
   544  0F28                     	;# 
   545  0F29                     	;# 
   546  0F2A                     	;# 
   547  0F2B                     	;# 
   548  0F2C                     	;# 
   549  0F2D                     	;# 
   550  0F2E                     	;# 
   551  0F2F                     	;# 
   552  0F30                     	;# 
   553  0F31                     	;# 
   554  0F32                     	;# 
   555  0F33                     	;# 
   556  0F34                     	;# 
   557  0F35                     	;# 
   558  0F36                     	;# 
   559  0F37                     	;# 
   560  0FE4                     	;# 
   561  0FE5                     	;# 
   562  0FE6                     	;# 
   563  0FE7                     	;# 
   564  0FE8                     	;# 
   565  0FE9                     	;# 
   566  0FEA                     	;# 
   567  0FEB                     	;# 
   568  0FED                     	;# 
   569  0FEE                     	;# 
   570  0FEF                     	;# 
   571  0000                     	;# 
   572  0001                     	;# 
   573  0002                     	;# 
   574  0003                     	;# 
   575  0004                     	;# 
   576  0005                     	;# 
   577  0006                     	;# 
   578  0007                     	;# 
   579  0008                     	;# 
   580  0009                     	;# 
   581  000A                     	;# 
   582  000B                     	;# 
   583  000C                     	;# 
   584  000D                     	;# 
   585  000E                     	;# 
   586  0010                     	;# 
   587  0011                     	;# 
   588  0012                     	;# 
   589  0013                     	;# 
   590  0014                     	;# 
   591  0015                     	;# 
   592  0016                     	;# 
   593  0016                     	;# 
   594  0017                     	;# 
   595  0018                     	;# 
   596  0019                     	;# 
   597  001A                     	;# 
   598  001A                     	;# 
   599  001B                     	;# 
   600  001B                     	;# 
   601  001C                     	;# 
   602  001D                     	;# 
   603  001E                     	;# 
   604  001F                     	;# 
   605  008C                     	;# 
   606  008D                     	;# 
   607  008E                     	;# 
   608  0090                     	;# 
   609  0091                     	;# 
   610  0092                     	;# 
   611  0093                     	;# 
   612  0094                     	;# 
   613  0095                     	;# 
   614  0096                     	;# 
   615  0098                     	;# 
   616  0099                     	;# 
   617  009A                     	;# 
   618  009B                     	;# 
   619  009B                     	;# 
   620  009C                     	;# 
   621  009D                     	;# 
   622  009E                     	;# 
   623  009F                     	;# 
   624  010C                     	;# 
   625  010D                     	;# 
   626  010E                     	;# 
   627  0111                     	;# 
   628  0112                     	;# 
   629  0113                     	;# 
   630  0114                     	;# 
   631  0115                     	;# 
   632  0116                     	;# 
   633  0117                     	;# 
   634  0118                     	;# 
   635  0119                     	;# 
   636  011C                     	;# 
   637  018C                     	;# 
   638  018D                     	;# 
   639  018E                     	;# 
   640  0191                     	;# 
   641  0191                     	;# 
   642  0192                     	;# 
   643  0193                     	;# 
   644  0193                     	;# 
   645  0194                     	;# 
   646  0195                     	;# 
   647  0196                     	;# 
   648  0197                     	;# 
   649  0199                     	;# 
   650  0199                     	;# 
   651  0199                     	;# 
   652  019A                     	;# 
   653  019A                     	;# 
   654  019A                     	;# 
   655  019B                     	;# 
   656  019B                     	;# 
   657  019B                     	;# 
   658  019B                     	;# 
   659  019B                     	;# 
   660  019C                     	;# 
   661  019C                     	;# 
   662  019C                     	;# 
   663  019D                     	;# 
   664  019D                     	;# 
   665  019D                     	;# 
   666  019E                     	;# 
   667  019E                     	;# 
   668  019E                     	;# 
   669  019F                     	;# 
   670  019F                     	;# 
   671  019F                     	;# 
   672  019F                     	;# 
   673  019F                     	;# 
   674  020C                     	;# 
   675  020D                     	;# 
   676  020E                     	;# 
   677  0211                     	;# 
   678  0211                     	;# 
   679  0212                     	;# 
   680  0212                     	;# 
   681  0213                     	;# 
   682  0213                     	;# 
   683  0214                     	;# 
   684  0214                     	;# 
   685  0215                     	;# 
   686  0215                     	;# 
   687  0215                     	;# 
   688  0215                     	;# 
   689  0216                     	;# 
   690  0216                     	;# 
   691  0217                     	;# 
   692  0217                     	;# 
   693  028C                     	;# 
   694  028D                     	;# 
   695  028E                     	;# 
   696  0291                     	;# 
   697  0291                     	;# 
   698  0292                     	;# 
   699  0293                     	;# 
   700  0294                     	;# 
   701  0298                     	;# 
   702  0298                     	;# 
   703  0299                     	;# 
   704  029A                     	;# 
   705  029B                     	;# 
   706  029E                     	;# 
   707  030C                     	;# 
   708  030D                     	;# 
   709  030E                     	;# 
   710  038C                     	;# 
   711  038D                     	;# 
   712  038E                     	;# 
   713  0391                     	;# 
   714  0392                     	;# 
   715  0393                     	;# 
   716  0394                     	;# 
   717  0395                     	;# 
   718  0396                     	;# 
   719  0397                     	;# 
   720  0398                     	;# 
   721  0399                     	;# 
   722  040E                     	;# 
   723  0413                     	;# 
   724  0413                     	;# 
   725  0414                     	;# 
   726  0414                     	;# 
   727  0415                     	;# 
   728  0416                     	;# 
   729  0417                     	;# 
   730  0418                     	;# 
   731  041A                     	;# 
   732  041A                     	;# 
   733  041B                     	;# 
   734  041B                     	;# 
   735  041C                     	;# 
   736  041D                     	;# 
   737  041E                     	;# 
   738  041F                     	;# 
   739  0493                     	;# 
   740  0494                     	;# 
   741  0495                     	;# 
   742  0496                     	;# 
   743  049A                     	;# 
   744  049B                     	;# 
   745  049C                     	;# 
   746  049D                     	;# 
   747  058C                     	;# 
   748  058C                     	;# 
   749  058D                     	;# 
   750  058E                     	;# 
   751  058E                     	;# 
   752  058F                     	;# 
   753  0590                     	;# 
   754  0590                     	;# 
   755  0591                     	;# 
   756  0592                     	;# 
   757  0592                     	;# 
   758  0593                     	;# 
   759  0594                     	;# 
   760  0594                     	;# 
   761  0595                     	;# 
   762  0596                     	;# 
   763  0596                     	;# 
   764  0597                     	;# 
   765  0598                     	;# 
   766  0599                     	;# 
   767  059A                     	;# 
   768  059B                     	;# 
   769  059B                     	;# 
   770  059C                     	;# 
   771  059D                     	;# 
   772  060C                     	;# 
   773  060C                     	;# 
   774  060D                     	;# 
   775  060E                     	;# 
   776  060F                     	;# 
   777  060F                     	;# 
   778  0610                     	;# 
   779  0611                     	;# 
   780  0612                     	;# 
   781  0613                     	;# 
   782  0614                     	;# 
   783  0617                     	;# 
   784  0617                     	;# 
   785  0618                     	;# 
   786  0619                     	;# 
   787  061A                     	;# 
   788  061A                     	;# 
   789  061B                     	;# 
   790  061C                     	;# 
   791  0691                     	;# 
   792  0692                     	;# 
   793  0693                     	;# 
   794  0694                     	;# 
   795  0695                     	;# 
   796  0696                     	;# 
   797  0697                     	;# 
   798  0699                     	;# 
   799  069A                     	;# 
   800  0711                     	;# 
   801  0712                     	;# 
   802  0713                     	;# 
   803  0714                     	;# 
   804  0715                     	;# 
   805  0718                     	;# 
   806  0718                     	;# 
   807  0719                     	;# 
   808  071A                     	;# 
   809  071A                     	;# 
   810  071B                     	;# 
   811  071C                     	;# 
   812  071D                     	;# 
   813  0791                     	;# 
   814  0791                     	;# 
   815  0792                     	;# 
   816  0793                     	;# 
   817  0793                     	;# 
   818  0794                     	;# 
   819  0795                     	;# 
   820  0795                     	;# 
   821  0796                     	;# 
   822  0797                     	;# 
   823  0797                     	;# 
   824  0798                     	;# 
   825  0799                     	;# 
   826  079A                     	;# 
   827  080C                     	;# 
   828  080C                     	;# 
   829  080D                     	;# 
   830  080E                     	;# 
   831  080E                     	;# 
   832  080F                     	;# 
   833  0810                     	;# 
   834  0810                     	;# 
   835  0811                     	;# 
   836  0812                     	;# 
   837  0812                     	;# 
   838  0813                     	;# 
   839  0814                     	;# 
   840  0815                     	;# 
   841  0816                     	;# 
   842  0817                     	;# 
   843  0818                     	;# 
   844  0819                     	;# 
   845  081A                     	;# 
   846  081A                     	;# 
   847  081B                     	;# 
   848  081C                     	;# 
   849  081C                     	;# 
   850  081D                     	;# 
   851  088C                     	;# 
   852  088D                     	;# 
   853  088E                     	;# 
   854  088F                     	;# 
   855  088F                     	;# 
   856  0890                     	;# 
   857  0891                     	;# 
   858  0892                     	;# 
   859  0893                     	;# 
   860  0893                     	;# 
   861  0894                     	;# 
   862  0895                     	;# 
   863  0896                     	;# 
   864  0897                     	;# 
   865  0897                     	;# 
   866  0898                     	;# 
   867  0899                     	;# 
   868  0D8C                     	;# 
   869  0D8C                     	;# 
   870  0D8D                     	;# 
   871  0D8E                     	;# 
   872  0D8F                     	;# 
   873  0D8F                     	;# 
   874  0D90                     	;# 
   875  0D91                     	;# 
   876  0D92                     	;# 
   877  0D92                     	;# 
   878  0D93                     	;# 
   879  0D94                     	;# 
   880  0D95                     	;# 
   881  0D95                     	;# 
   882  0D96                     	;# 
   883  0D97                     	;# 
   884  0D98                     	;# 
   885  0D99                     	;# 
   886  0D9A                     	;# 
   887  0D9B                     	;# 
   888  0D9C                     	;# 
   889  0D9D                     	;# 
   890  0D9E                     	;# 
   891  0D9E                     	;# 
   892  0D9F                     	;# 
   893  0DA0                     	;# 
   894  0DA1                     	;# 
   895  0DA1                     	;# 
   896  0DA2                     	;# 
   897  0DA3                     	;# 
   898  0DA4                     	;# 
   899  0DA4                     	;# 
   900  0DA5                     	;# 
   901  0DA6                     	;# 
   902  0DA7                     	;# 
   903  0DA7                     	;# 
   904  0DA8                     	;# 
   905  0DA9                     	;# 
   906  0DAA                     	;# 
   907  0DAB                     	;# 
   908  0DAC                     	;# 
   909  0DAD                     	;# 
   910  0DAE                     	;# 
   911  0DAF                     	;# 
   912  0E0F                     	;# 
   913  0E10                     	;# 
   914  0E11                     	;# 
   915  0E12                     	;# 
   916  0E13                     	;# 
   917  0E14                     	;# 
   918  0E15                     	;# 
   919  0E16                     	;# 
   920  0E17                     	;# 
   921  0E18                     	;# 
   922  0E19                     	;# 
   923  0E1A                     	;# 
   924  0E1B                     	;# 
   925  0E1C                     	;# 
   926  0E1D                     	;# 
   927  0E1E                     	;# 
   928  0E1F                     	;# 
   929  0E20                     	;# 
   930  0E21                     	;# 
   931  0E22                     	;# 
   932  0E23                     	;# 
   933  0E24                     	;# 
   934  0E25                     	;# 
   935  0E26                     	;# 
   936  0E27                     	;# 
   937  0E28                     	;# 
   938  0E29                     	;# 
   939  0E2A                     	;# 
   940  0E2B                     	;# 
   941  0E2C                     	;# 
   942  0E2D                     	;# 
   943  0E2E                     	;# 
   944  0E90                     	;# 
   945  0E91                     	;# 
   946  0E92                     	;# 
   947  0E94                     	;# 
   948  0E95                     	;# 
   949  0E9C                     	;# 
   950  0E9D                     	;# 
   951  0E9E                     	;# 
   952  0E9F                     	;# 
   953  0EA0                     	;# 
   954  0EA1                     	;# 
   955  0EA2                     	;# 
   956  0EA3                     	;# 
   957  0EA4                     	;# 
   958  0EA5                     	;# 
   959  0EA6                     	;# 
   960  0EA7                     	;# 
   961  0F0F                     	;# 
   962  0F10                     	;# 
   963  0F11                     	;# 
   964  0F12                     	;# 
   965  0F13                     	;# 
   966  0F14                     	;# 
   967  0F15                     	;# 
   968  0F16                     	;# 
   969  0F17                     	;# 
   970  0F18                     	;# 
   971  0F19                     	;# 
   972  0F1A                     	;# 
   973  0F1B                     	;# 
   974  0F1C                     	;# 
   975  0F1D                     	;# 
   976  0F1E                     	;# 
   977  0F1F                     	;# 
   978  0F20                     	;# 
   979  0F21                     	;# 
   980  0F22                     	;# 
   981  0F23                     	;# 
   982  0F24                     	;# 
   983  0F25                     	;# 
   984  0F26                     	;# 
   985  0F27                     	;# 
   986  0F28                     	;# 
   987  0F29                     	;# 
   988  0F2A                     	;# 
   989  0F2B                     	;# 
   990  0F2C                     	;# 
   991  0F2D                     	;# 
   992  0F2E                     	;# 
   993  0F2F                     	;# 
   994  0F30                     	;# 
   995  0F31                     	;# 
   996  0F32                     	;# 
   997  0F33                     	;# 
   998  0F34                     	;# 
   999  0F35                     	;# 
  1000  0F36                     	;# 
  1001  0F37                     	;# 
  1002  0FE4                     	;# 
  1003  0FE5                     	;# 
  1004  0FE6                     	;# 
  1005  0FE7                     	;# 
  1006  0FE8                     	;# 
  1007  0FE9                     	;# 
  1008  0FEA                     	;# 
  1009  0FEB                     	;# 
  1010  0FED                     	;# 
  1011  0FEE                     	;# 
  1012  0FEF                     	;# 
  1013  0000                     	;# 
  1014  0001                     	;# 
  1015  0002                     	;# 
  1016  0003                     	;# 
  1017  0004                     	;# 
  1018  0005                     	;# 
  1019  0006                     	;# 
  1020  0007                     	;# 
  1021  0008                     	;# 
  1022  0009                     	;# 
  1023  000A                     	;# 
  1024  000B                     	;# 
  1025  000C                     	;# 
  1026  000D                     	;# 
  1027  000E                     	;# 
  1028  0010                     	;# 
  1029  0011                     	;# 
  1030  0012                     	;# 
  1031  0013                     	;# 
  1032  0014                     	;# 
  1033  0015                     	;# 
  1034  0016                     	;# 
  1035  0016                     	;# 
  1036  0017                     	;# 
  1037  0018                     	;# 
  1038  0019                     	;# 
  1039  001A                     	;# 
  1040  001A                     	;# 
  1041  001B                     	;# 
  1042  001B                     	;# 
  1043  001C                     	;# 
  1044  001D                     	;# 
  1045  001E                     	;# 
  1046  001F                     	;# 
  1047  008C                     	;# 
  1048  008D                     	;# 
  1049  008E                     	;# 
  1050  0090                     	;# 
  1051  0091                     	;# 
  1052  0092                     	;# 
  1053  0093                     	;# 
  1054  0094                     	;# 
  1055  0095                     	;# 
  1056  0096                     	;# 
  1057  0098                     	;# 
  1058  0099                     	;# 
  1059  009A                     	;# 
  1060  009B                     	;# 
  1061  009B                     	;# 
  1062  009C                     	;# 
  1063  009D                     	;# 
  1064  009E                     	;# 
  1065  009F                     	;# 
  1066  010C                     	;# 
  1067  010D                     	;# 
  1068  010E                     	;# 
  1069  0111                     	;# 
  1070  0112                     	;# 
  1071  0113                     	;# 
  1072  0114                     	;# 
  1073  0115                     	;# 
  1074  0116                     	;# 
  1075  0117                     	;# 
  1076  0118                     	;# 
  1077  0119                     	;# 
  1078  011C                     	;# 
  1079  018C                     	;# 
  1080  018D                     	;# 
  1081  018E                     	;# 
  1082  0191                     	;# 
  1083  0191                     	;# 
  1084  0192                     	;# 
  1085  0193                     	;# 
  1086  0193                     	;# 
  1087  0194                     	;# 
  1088  0195                     	;# 
  1089  0196                     	;# 
  1090  0197                     	;# 
  1091  0199                     	;# 
  1092  0199                     	;# 
  1093  0199                     	;# 
  1094  019A                     	;# 
  1095  019A                     	;# 
  1096  019A                     	;# 
  1097  019B                     	;# 
  1098  019B                     	;# 
  1099  019B                     	;# 
  1100  019B                     	;# 
  1101  019B                     	;# 
  1102  019C                     	;# 
  1103  019C                     	;# 
  1104  019C                     	;# 
  1105  019D                     	;# 
  1106  019D                     	;# 
  1107  019D                     	;# 
  1108  019E                     	;# 
  1109  019E                     	;# 
  1110  019E                     	;# 
  1111  019F                     	;# 
  1112  019F                     	;# 
  1113  019F                     	;# 
  1114  019F                     	;# 
  1115  019F                     	;# 
  1116  020C                     	;# 
  1117  020D                     	;# 
  1118  020E                     	;# 
  1119  0211                     	;# 
  1120  0211                     	;# 
  1121  0212                     	;# 
  1122  0212                     	;# 
  1123  0213                     	;# 
  1124  0213                     	;# 
  1125  0214                     	;# 
  1126  0214                     	;# 
  1127  0215                     	;# 
  1128  0215                     	;# 
  1129  0215                     	;# 
  1130  0215                     	;# 
  1131  0216                     	;# 
  1132  0216                     	;# 
  1133  0217                     	;# 
  1134  0217                     	;# 
  1135  028C                     	;# 
  1136  028D                     	;# 
  1137  028E                     	;# 
  1138  0291                     	;# 
  1139  0291                     	;# 
  1140  0292                     	;# 
  1141  0293                     	;# 
  1142  0294                     	;# 
  1143  0298                     	;# 
  1144  0298                     	;# 
  1145  0299                     	;# 
  1146  029A                     	;# 
  1147  029B                     	;# 
  1148  029E                     	;# 
  1149  030C                     	;# 
  1150  030D                     	;# 
  1151  030E                     	;# 
  1152  038C                     	;# 
  1153  038D                     	;# 
  1154  038E                     	;# 
  1155  0391                     	;# 
  1156  0392                     	;# 
  1157  0393                     	;# 
  1158  0394                     	;# 
  1159  0395                     	;# 
  1160  0396                     	;# 
  1161  0397                     	;# 
  1162  0398                     	;# 
  1163  0399                     	;# 
  1164  040E                     	;# 
  1165  0413                     	;# 
  1166  0413                     	;# 
  1167  0414                     	;# 
  1168  0414                     	;# 
  1169  0415                     	;# 
  1170  0416                     	;# 
  1171  0417                     	;# 
  1172  0418                     	;# 
  1173  041A                     	;# 
  1174  041A                     	;# 
  1175  041B                     	;# 
  1176  041B                     	;# 
  1177  041C                     	;# 
  1178  041D                     	;# 
  1179  041E                     	;# 
  1180  041F                     	;# 
  1181  0493                     	;# 
  1182  0494                     	;# 
  1183  0495                     	;# 
  1184  0496                     	;# 
  1185  049A                     	;# 
  1186  049B                     	;# 
  1187  049C                     	;# 
  1188  049D                     	;# 
  1189  058C                     	;# 
  1190  058C                     	;# 
  1191  058D                     	;# 
  1192  058E                     	;# 
  1193  058E                     	;# 
  1194  058F                     	;# 
  1195  0590                     	;# 
  1196  0590                     	;# 
  1197  0591                     	;# 
  1198  0592                     	;# 
  1199  0592                     	;# 
  1200  0593                     	;# 
  1201  0594                     	;# 
  1202  0594                     	;# 
  1203  0595                     	;# 
  1204  0596                     	;# 
  1205  0596                     	;# 
  1206  0597                     	;# 
  1207  0598                     	;# 
  1208  0599                     	;# 
  1209  059A                     	;# 
  1210  059B                     	;# 
  1211  059B                     	;# 
  1212  059C                     	;# 
  1213  059D                     	;# 
  1214  060C                     	;# 
  1215  060C                     	;# 
  1216  060D                     	;# 
  1217  060E                     	;# 
  1218  060F                     	;# 
  1219  060F                     	;# 
  1220  0610                     	;# 
  1221  0611                     	;# 
  1222  0612                     	;# 
  1223  0613                     	;# 
  1224  0614                     	;# 
  1225  0617                     	;# 
  1226  0617                     	;# 
  1227  0618                     	;# 
  1228  0619                     	;# 
  1229  061A                     	;# 
  1230  061A                     	;# 
  1231  061B                     	;# 
  1232  061C                     	;# 
  1233  0691                     	;# 
  1234  0692                     	;# 
  1235  0693                     	;# 
  1236  0694                     	;# 
  1237  0695                     	;# 
  1238  0696                     	;# 
  1239  0697                     	;# 
  1240  0699                     	;# 
  1241  069A                     	;# 
  1242  0711                     	;# 
  1243  0712                     	;# 
  1244  0713                     	;# 
  1245  0714                     	;# 
  1246  0715                     	;# 
  1247  0718                     	;# 
  1248  0718                     	;# 
  1249  0719                     	;# 
  1250  071A                     	;# 
  1251  071A                     	;# 
  1252  071B                     	;# 
  1253  071C                     	;# 
  1254  071D                     	;# 
  1255  0791                     	;# 
  1256  0791                     	;# 
  1257  0792                     	;# 
  1258  0793                     	;# 
  1259  0793                     	;# 
  1260  0794                     	;# 
  1261  0795                     	;# 
  1262  0795                     	;# 
  1263  0796                     	;# 
  1264  0797                     	;# 
  1265  0797                     	;# 
  1266  0798                     	;# 
  1267  0799                     	;# 
  1268  079A                     	;# 
  1269  080C                     	;# 
  1270  080C                     	;# 
  1271  080D                     	;# 
  1272  080E                     	;# 
  1273  080E                     	;# 
  1274  080F                     	;# 
  1275  0810                     	;# 
  1276  0810                     	;# 
  1277  0811                     	;# 
  1278  0812                     	;# 
  1279  0812                     	;# 
  1280  0813                     	;# 
  1281  0814                     	;# 
  1282  0815                     	;# 
  1283  0816                     	;# 
  1284  0817                     	;# 
  1285  0818                     	;# 
  1286  0819                     	;# 
  1287  081A                     	;# 
  1288  081A                     	;# 
  1289  081B                     	;# 
  1290  081C                     	;# 
  1291  081C                     	;# 
  1292  081D                     	;# 
  1293  088C                     	;# 
  1294  088D                     	;# 
  1295  088E                     	;# 
  1296  088F                     	;# 
  1297  088F                     	;# 
  1298  0890                     	;# 
  1299  0891                     	;# 
  1300  0892                     	;# 
  1301  0893                     	;# 
  1302  0893                     	;# 
  1303  0894                     	;# 
  1304  0895                     	;# 
  1305  0896                     	;# 
  1306  0897                     	;# 
  1307  0897                     	;# 
  1308  0898                     	;# 
  1309  0899                     	;# 
  1310  0D8C                     	;# 
  1311  0D8C                     	;# 
  1312  0D8D                     	;# 
  1313  0D8E                     	;# 
  1314  0D8F                     	;# 
  1315  0D8F                     	;# 
  1316  0D90                     	;# 
  1317  0D91                     	;# 
  1318  0D92                     	;# 
  1319  0D92                     	;# 
  1320  0D93                     	;# 
  1321  0D94                     	;# 
  1322  0D95                     	;# 
  1323  0D95                     	;# 
  1324  0D96                     	;# 
  1325  0D97                     	;# 
  1326  0D98                     	;# 
  1327  0D99                     	;# 
  1328  0D9A                     	;# 
  1329  0D9B                     	;# 
  1330  0D9C                     	;# 
  1331  0D9D                     	;# 
  1332  0D9E                     	;# 
  1333  0D9E                     	;# 
  1334  0D9F                     	;# 
  1335  0DA0                     	;# 
  1336  0DA1                     	;# 
  1337  0DA1                     	;# 
  1338  0DA2                     	;# 
  1339  0DA3                     	;# 
  1340  0DA4                     	;# 
  1341  0DA4                     	;# 
  1342  0DA5                     	;# 
  1343  0DA6                     	;# 
  1344  0DA7                     	;# 
  1345  0DA7                     	;# 
  1346  0DA8                     	;# 
  1347  0DA9                     	;# 
  1348  0DAA                     	;# 
  1349  0DAB                     	;# 
  1350  0DAC                     	;# 
  1351  0DAD                     	;# 
  1352  0DAE                     	;# 
  1353  0DAF                     	;# 
  1354  0E0F                     	;# 
  1355  0E10                     	;# 
  1356  0E11                     	;# 
  1357  0E12                     	;# 
  1358  0E13                     	;# 
  1359  0E14                     	;# 
  1360  0E15                     	;# 
  1361  0E16                     	;# 
  1362  0E17                     	;# 
  1363  0E18                     	;# 
  1364  0E19                     	;# 
  1365  0E1A                     	;# 
  1366  0E1B                     	;# 
  1367  0E1C                     	;# 
  1368  0E1D                     	;# 
  1369  0E1E                     	;# 
  1370  0E1F                     	;# 
  1371  0E20                     	;# 
  1372  0E21                     	;# 
  1373  0E22                     	;# 
  1374  0E23                     	;# 
  1375  0E24                     	;# 
  1376  0E25                     	;# 
  1377  0E26                     	;# 
  1378  0E27                     	;# 
  1379  0E28                     	;# 
  1380  0E29                     	;# 
  1381  0E2A                     	;# 
  1382  0E2B                     	;# 
  1383  0E2C                     	;# 
  1384  0E2D                     	;# 
  1385  0E2E                     	;# 
  1386  0E90                     	;# 
  1387  0E91                     	;# 
  1388  0E92                     	;# 
  1389  0E94                     	;# 
  1390  0E95                     	;# 
  1391  0E9C                     	;# 
  1392  0E9D                     	;# 
  1393  0E9E                     	;# 
  1394  0E9F                     	;# 
  1395  0EA0                     	;# 
  1396  0EA1                     	;# 
  1397  0EA2                     	;# 
  1398  0EA3                     	;# 
  1399  0EA4                     	;# 
  1400  0EA5                     	;# 
  1401  0EA6                     	;# 
  1402  0EA7                     	;# 
  1403  0F0F                     	;# 
  1404  0F10                     	;# 
  1405  0F11                     	;# 
  1406  0F12                     	;# 
  1407  0F13                     	;# 
  1408  0F14                     	;# 
  1409  0F15                     	;# 
  1410  0F16                     	;# 
  1411  0F17                     	;# 
  1412  0F18                     	;# 
  1413  0F19                     	;# 
  1414  0F1A                     	;# 
  1415  0F1B                     	;# 
  1416  0F1C                     	;# 
  1417  0F1D                     	;# 
  1418  0F1E                     	;# 
  1419  0F1F                     	;# 
  1420  0F20                     	;# 
  1421  0F21                     	;# 
  1422  0F22                     	;# 
  1423  0F23                     	;# 
  1424  0F24                     	;# 
  1425  0F25                     	;# 
  1426  0F26                     	;# 
  1427  0F27                     	;# 
  1428  0F28                     	;# 
  1429  0F29                     	;# 
  1430  0F2A                     	;# 
  1431  0F2B                     	;# 
  1432  0F2C                     	;# 
  1433  0F2D                     	;# 
  1434  0F2E                     	;# 
  1435  0F2F                     	;# 
  1436  0F30                     	;# 
  1437  0F31                     	;# 
  1438  0F32                     	;# 
  1439  0F33                     	;# 
  1440  0F34                     	;# 
  1441  0F35                     	;# 
  1442  0F36                     	;# 
  1443  0F37                     	;# 
  1444  0FE4                     	;# 
  1445  0FE5                     	;# 
  1446  0FE6                     	;# 
  1447  0FE7                     	;# 
  1448  0FE8                     	;# 
  1449  0FE9                     	;# 
  1450  0FEA                     	;# 
  1451  0FEB                     	;# 
  1452  0FED                     	;# 
  1453  0FEE                     	;# 
  1454  0FEF                     	;# 
  1455  0000                     	;# 
  1456  0001                     	;# 
  1457  0002                     	;# 
  1458  0003                     	;# 
  1459  0004                     	;# 
  1460  0005                     	;# 
  1461  0006                     	;# 
  1462  0007                     	;# 
  1463  0008                     	;# 
  1464  0009                     	;# 
  1465  000A                     	;# 
  1466  000B                     	;# 
  1467  000C                     	;# 
  1468  000D                     	;# 
  1469  000E                     	;# 
  1470  0010                     	;# 
  1471  0011                     	;# 
  1472  0012                     	;# 
  1473  0013                     	;# 
  1474  0014                     	;# 
  1475  0015                     	;# 
  1476  0016                     	;# 
  1477  0016                     	;# 
  1478  0017                     	;# 
  1479  0018                     	;# 
  1480  0019                     	;# 
  1481  001A                     	;# 
  1482  001A                     	;# 
  1483  001B                     	;# 
  1484  001B                     	;# 
  1485  001C                     	;# 
  1486  001D                     	;# 
  1487  001E                     	;# 
  1488  001F                     	;# 
  1489  008C                     	;# 
  1490  008D                     	;# 
  1491  008E                     	;# 
  1492  0090                     	;# 
  1493  0091                     	;# 
  1494  0092                     	;# 
  1495  0093                     	;# 
  1496  0094                     	;# 
  1497  0095                     	;# 
  1498  0096                     	;# 
  1499  0098                     	;# 
  1500  0099                     	;# 
  1501  009A                     	;# 
  1502  009B                     	;# 
  1503  009B                     	;# 
  1504  009C                     	;# 
  1505  009D                     	;# 
  1506  009E                     	;# 
  1507  009F                     	;# 
  1508  010C                     	;# 
  1509  010D                     	;# 
  1510  010E                     	;# 
  1511  0111                     	;# 
  1512  0112                     	;# 
  1513  0113                     	;# 
  1514  0114                     	;# 
  1515  0115                     	;# 
  1516  0116                     	;# 
  1517  0117                     	;# 
  1518  0118                     	;# 
  1519  0119                     	;# 
  1520  011C                     	;# 
  1521  018C                     	;# 
  1522  018D                     	;# 
  1523  018E                     	;# 
  1524  0191                     	;# 
  1525  0191                     	;# 
  1526  0192                     	;# 
  1527  0193                     	;# 
  1528  0193                     	;# 
  1529  0194                     	;# 
  1530  0195                     	;# 
  1531  0196                     	;# 
  1532  0197                     	;# 
  1533  0199                     	;# 
  1534  0199                     	;# 
  1535  0199                     	;# 
  1536  019A                     	;# 
  1537  019A                     	;# 
  1538  019A                     	;# 
  1539  019B                     	;# 
  1540  019B                     	;# 
  1541  019B                     	;# 
  1542  019B                     	;# 
  1543  019B                     	;# 
  1544  019C                     	;# 
  1545  019C                     	;# 
  1546  019C                     	;# 
  1547  019D                     	;# 
  1548  019D                     	;# 
  1549  019D                     	;# 
  1550  019E                     	;# 
  1551  019E                     	;# 
  1552  019E                     	;# 
  1553  019F                     	;# 
  1554  019F                     	;# 
  1555  019F                     	;# 
  1556  019F                     	;# 
  1557  019F                     	;# 
  1558  020C                     	;# 
  1559  020D                     	;# 
  1560  020E                     	;# 
  1561  0211                     	;# 
  1562  0211                     	;# 
  1563  0212                     	;# 
  1564  0212                     	;# 
  1565  0213                     	;# 
  1566  0213                     	;# 
  1567  0214                     	;# 
  1568  0214                     	;# 
  1569  0215                     	;# 
  1570  0215                     	;# 
  1571  0215                     	;# 
  1572  0215                     	;# 
  1573  0216                     	;# 
  1574  0216                     	;# 
  1575  0217                     	;# 
  1576  0217                     	;# 
  1577  028C                     	;# 
  1578  028D                     	;# 
  1579  028E                     	;# 
  1580  0291                     	;# 
  1581  0291                     	;# 
  1582  0292                     	;# 
  1583  0293                     	;# 
  1584  0294                     	;# 
  1585  0298                     	;# 
  1586  0298                     	;# 
  1587  0299                     	;# 
  1588  029A                     	;# 
  1589  029B                     	;# 
  1590  029E                     	;# 
  1591  030C                     	;# 
  1592  030D                     	;# 
  1593  030E                     	;# 
  1594  038C                     	;# 
  1595  038D                     	;# 
  1596  038E                     	;# 
  1597  0391                     	;# 
  1598  0392                     	;# 
  1599  0393                     	;# 
  1600  0394                     	;# 
  1601  0395                     	;# 
  1602  0396                     	;# 
  1603  0397                     	;# 
  1604  0398                     	;# 
  1605  0399                     	;# 
  1606  040E                     	;# 
  1607  0413                     	;# 
  1608  0413                     	;# 
  1609  0414                     	;# 
  1610  0414                     	;# 
  1611  0415                     	;# 
  1612  0416                     	;# 
  1613  0417                     	;# 
  1614  0418                     	;# 
  1615  041A                     	;# 
  1616  041A                     	;# 
  1617  041B                     	;# 
  1618  041B                     	;# 
  1619  041C                     	;# 
  1620  041D                     	;# 
  1621  041E                     	;# 
  1622  041F                     	;# 
  1623  0493                     	;# 
  1624  0494                     	;# 
  1625  0495                     	;# 
  1626  0496                     	;# 
  1627  049A                     	;# 
  1628  049B                     	;# 
  1629  049C                     	;# 
  1630  049D                     	;# 
  1631  058C                     	;# 
  1632  058C                     	;# 
  1633  058D                     	;# 
  1634  058E                     	;# 
  1635  058E                     	;# 
  1636  058F                     	;# 
  1637  0590                     	;# 
  1638  0590                     	;# 
  1639  0591                     	;# 
  1640  0592                     	;# 
  1641  0592                     	;# 
  1642  0593                     	;# 
  1643  0594                     	;# 
  1644  0594                     	;# 
  1645  0595                     	;# 
  1646  0596                     	;# 
  1647  0596                     	;# 
  1648  0597                     	;# 
  1649  0598                     	;# 
  1650  0599                     	;# 
  1651  059A                     	;# 
  1652  059B                     	;# 
  1653  059B                     	;# 
  1654  059C                     	;# 
  1655  059D                     	;# 
  1656  060C                     	;# 
  1657  060C                     	;# 
  1658  060D                     	;# 
  1659  060E                     	;# 
  1660  060F                     	;# 
  1661  060F                     	;# 
  1662  0610                     	;# 
  1663  0611                     	;# 
  1664  0612                     	;# 
  1665  0613                     	;# 
  1666  0614                     	;# 
  1667  0617                     	;# 
  1668  0617                     	;# 
  1669  0618                     	;# 
  1670  0619                     	;# 
  1671  061A                     	;# 
  1672  061A                     	;# 
  1673  061B                     	;# 
  1674  061C                     	;# 
  1675  0691                     	;# 
  1676  0692                     	;# 
  1677  0693                     	;# 
  1678  0694                     	;# 
  1679  0695                     	;# 
  1680  0696                     	;# 
  1681  0697                     	;# 
  1682  0699                     	;# 
  1683  069A                     	;# 
  1684  0711                     	;# 
  1685  0712                     	;# 
  1686  0713                     	;# 
  1687  0714                     	;# 
  1688  0715                     	;# 
  1689  0718                     	;# 
  1690  0718                     	;# 
  1691  0719                     	;# 
  1692  071A                     	;# 
  1693  071A                     	;# 
  1694  071B                     	;# 
  1695  071C                     	;# 
  1696  071D                     	;# 
  1697  0791                     	;# 
  1698  0791                     	;# 
  1699  0792                     	;# 
  1700  0793                     	;# 
  1701  0793                     	;# 
  1702  0794                     	;# 
  1703  0795                     	;# 
  1704  0795                     	;# 
  1705  0796                     	;# 
  1706  0797                     	;# 
  1707  0797                     	;# 
  1708  0798                     	;# 
  1709  0799                     	;# 
  1710  079A                     	;# 
  1711  080C                     	;# 
  1712  080C                     	;# 
  1713  080D                     	;# 
  1714  080E                     	;# 
  1715  080E                     	;# 
  1716  080F                     	;# 
  1717  0810                     	;# 
  1718  0810                     	;# 
  1719  0811                     	;# 
  1720  0812                     	;# 
  1721  0812                     	;# 
  1722  0813                     	;# 
  1723  0814                     	;# 
  1724  0815                     	;# 
  1725  0816                     	;# 
  1726  0817                     	;# 
  1727  0818                     	;# 
  1728  0819                     	;# 
  1729  081A                     	;# 
  1730  081A                     	;# 
  1731  081B                     	;# 
  1732  081C                     	;# 
  1733  081C                     	;# 
  1734  081D                     	;# 
  1735  088C                     	;# 
  1736  088D                     	;# 
  1737  088E                     	;# 
  1738  088F                     	;# 
  1739  088F                     	;# 
  1740  0890                     	;# 
  1741  0891                     	;# 
  1742  0892                     	;# 
  1743  0893                     	;# 
  1744  0893                     	;# 
  1745  0894                     	;# 
  1746  0895                     	;# 
  1747  0896                     	;# 
  1748  0897                     	;# 
  1749  0897                     	;# 
  1750  0898                     	;# 
  1751  0899                     	;# 
  1752  0D8C                     	;# 
  1753  0D8C                     	;# 
  1754  0D8D                     	;# 
  1755  0D8E                     	;# 
  1756  0D8F                     	;# 
  1757  0D8F                     	;# 
  1758  0D90                     	;# 
  1759  0D91                     	;# 
  1760  0D92                     	;# 
  1761  0D92                     	;# 
  1762  0D93                     	;# 
  1763  0D94                     	;# 
  1764  0D95                     	;# 
  1765  0D95                     	;# 
  1766  0D96                     	;# 
  1767  0D97                     	;# 
  1768  0D98                     	;# 
  1769  0D99                     	;# 
  1770  0D9A                     	;# 
  1771  0D9B                     	;# 
  1772  0D9C                     	;# 
  1773  0D9D                     	;# 
  1774  0D9E                     	;# 
  1775  0D9E                     	;# 
  1776  0D9F                     	;# 
  1777  0DA0                     	;# 
  1778  0DA1                     	;# 
  1779  0DA1                     	;# 
  1780  0DA2                     	;# 
  1781  0DA3                     	;# 
  1782  0DA4                     	;# 
  1783  0DA4                     	;# 
  1784  0DA5                     	;# 
  1785  0DA6                     	;# 
  1786  0DA7                     	;# 
  1787  0DA7                     	;# 
  1788  0DA8                     	;# 
  1789  0DA9                     	;# 
  1790  0DAA                     	;# 
  1791  0DAB                     	;# 
  1792  0DAC                     	;# 
  1793  0DAD                     	;# 
  1794  0DAE                     	;# 
  1795  0DAF                     	;# 
  1796  0E0F                     	;# 
  1797  0E10                     	;# 
  1798  0E11                     	;# 
  1799  0E12                     	;# 
  1800  0E13                     	;# 
  1801  0E14                     	;# 
  1802  0E15                     	;# 
  1803  0E16                     	;# 
  1804  0E17                     	;# 
  1805  0E18                     	;# 
  1806  0E19                     	;# 
  1807  0E1A                     	;# 
  1808  0E1B                     	;# 
  1809  0E1C                     	;# 
  1810  0E1D                     	;# 
  1811  0E1E                     	;# 
  1812  0E1F                     	;# 
  1813  0E20                     	;# 
  1814  0E21                     	;# 
  1815  0E22                     	;# 
  1816  0E23                     	;# 
  1817  0E24                     	;# 
  1818  0E25                     	;# 
  1819  0E26                     	;# 
  1820  0E27                     	;# 
  1821  0E28                     	;# 
  1822  0E29                     	;# 
  1823  0E2A                     	;# 
  1824  0E2B                     	;# 
  1825  0E2C                     	;# 
  1826  0E2D                     	;# 
  1827  0E2E                     	;# 
  1828  0E90                     	;# 
  1829  0E91                     	;# 
  1830  0E92                     	;# 
  1831  0E94                     	;# 
  1832  0E95                     	;# 
  1833  0E9C                     	;# 
  1834  0E9D                     	;# 
  1835  0E9E                     	;# 
  1836  0E9F                     	;# 
  1837  0EA0                     	;# 
  1838  0EA1                     	;# 
  1839  0EA2                     	;# 
  1840  0EA3                     	;# 
  1841  0EA4                     	;# 
  1842  0EA5                     	;# 
  1843  0EA6                     	;# 
  1844  0EA7                     	;# 
  1845  0F0F                     	;# 
  1846  0F10                     	;# 
  1847  0F11                     	;# 
  1848  0F12                     	;# 
  1849  0F13                     	;# 
  1850  0F14                     	;# 
  1851  0F15                     	;# 
  1852  0F16                     	;# 
  1853  0F17                     	;# 
  1854  0F18                     	;# 
  1855  0F19                     	;# 
  1856  0F1A                     	;# 
  1857  0F1B                     	;# 
  1858  0F1C                     	;# 
  1859  0F1D                     	;# 
  1860  0F1E                     	;# 
  1861  0F1F                     	;# 
  1862  0F20                     	;# 
  1863  0F21                     	;# 
  1864  0F22                     	;# 
  1865  0F23                     	;# 
  1866  0F24                     	;# 
  1867  0F25                     	;# 
  1868  0F26                     	;# 
  1869  0F27                     	;# 
  1870  0F28                     	;# 
  1871  0F29                     	;# 
  1872  0F2A                     	;# 
  1873  0F2B                     	;# 
  1874  0F2C                     	;# 
  1875  0F2D                     	;# 
  1876  0F2E                     	;# 
  1877  0F2F                     	;# 
  1878  0F30                     	;# 
  1879  0F31                     	;# 
  1880  0F32                     	;# 
  1881  0F33                     	;# 
  1882  0F34                     	;# 
  1883  0F35                     	;# 
  1884  0F36                     	;# 
  1885  0F37                     	;# 
  1886  0FE4                     	;# 
  1887  0FE5                     	;# 
  1888  0FE6                     	;# 
  1889  0FE7                     	;# 
  1890  0FE8                     	;# 
  1891  0FE9                     	;# 
  1892  0FEA                     	;# 
  1893  0FEB                     	;# 
  1894  0FED                     	;# 
  1895  0FEE                     	;# 
  1896  0FEF                     	;# 
  1897  0000                     	;# 
  1898  0001                     	;# 
  1899  0002                     	;# 
  1900  0003                     	;# 
  1901  0004                     	;# 
  1902  0005                     	;# 
  1903  0006                     	;# 
  1904  0007                     	;# 
  1905  0008                     	;# 
  1906  0009                     	;# 
  1907  000A                     	;# 
  1908  000B                     	;# 
  1909  000C                     	;# 
  1910  000D                     	;# 
  1911  000E                     	;# 
  1912  0010                     	;# 
  1913  0011                     	;# 
  1914  0012                     	;# 
  1915  0013                     	;# 
  1916  0014                     	;# 
  1917  0015                     	;# 
  1918  0016                     	;# 
  1919  0016                     	;# 
  1920  0017                     	;# 
  1921  0018                     	;# 
  1922  0019                     	;# 
  1923  001A                     	;# 
  1924  001A                     	;# 
  1925  001B                     	;# 
  1926  001B                     	;# 
  1927  001C                     	;# 
  1928  001D                     	;# 
  1929  001E                     	;# 
  1930  001F                     	;# 
  1931  008C                     	;# 
  1932  008D                     	;# 
  1933  008E                     	;# 
  1934  0090                     	;# 
  1935  0091                     	;# 
  1936  0092                     	;# 
  1937  0093                     	;# 
  1938  0094                     	;# 
  1939  0095                     	;# 
  1940  0096                     	;# 
  1941  0098                     	;# 
  1942  0099                     	;# 
  1943  009A                     	;# 
  1944  009B                     	;# 
  1945  009B                     	;# 
  1946  009C                     	;# 
  1947  009D                     	;# 
  1948  009E                     	;# 
  1949  009F                     	;# 
  1950  010C                     	;# 
  1951  010D                     	;# 
  1952  010E                     	;# 
  1953  0111                     	;# 
  1954  0112                     	;# 
  1955  0113                     	;# 
  1956  0114                     	;# 
  1957  0115                     	;# 
  1958  0116                     	;# 
  1959  0117                     	;# 
  1960  0118                     	;# 
  1961  0119                     	;# 
  1962  011C                     	;# 
  1963  018C                     	;# 
  1964  018D                     	;# 
  1965  018E                     	;# 
  1966  0191                     	;# 
  1967  0191                     	;# 
  1968  0192                     	;# 
  1969  0193                     	;# 
  1970  0193                     	;# 
  1971  0194                     	;# 
  1972  0195                     	;# 
  1973  0196                     	;# 
  1974  0197                     	;# 
  1975  0199                     	;# 
  1976  0199                     	;# 
  1977  0199                     	;# 
  1978  019A                     	;# 
  1979  019A                     	;# 
  1980  019A                     	;# 
  1981  019B                     	;# 
  1982  019B                     	;# 
  1983  019B                     	;# 
  1984  019B                     	;# 
  1985  019B                     	;# 
  1986  019C                     	;# 
  1987  019C                     	;# 
  1988  019C                     	;# 
  1989  019D                     	;# 
  1990  019D                     	;# 
  1991  019D                     	;# 
  1992  019E                     	;# 
  1993  019E                     	;# 
  1994  019E                     	;# 
  1995  019F                     	;# 
  1996  019F                     	;# 
  1997  019F                     	;# 
  1998  019F                     	;# 
  1999  019F                     	;# 
  2000  020C                     	;# 
  2001  020D                     	;# 
  2002  020E                     	;# 
  2003  0211                     	;# 
  2004  0211                     	;# 
  2005  0212                     	;# 
  2006  0212                     	;# 
  2007  0213                     	;# 
  2008  0213                     	;# 
  2009  0214                     	;# 
  2010  0214                     	;# 
  2011  0215                     	;# 
  2012  0215                     	;# 
  2013  0215                     	;# 
  2014  0215                     	;# 
  2015  0216                     	;# 
  2016  0216                     	;# 
  2017  0217                     	;# 
  2018  0217                     	;# 
  2019  028C                     	;# 
  2020  028D                     	;# 
  2021  028E                     	;# 
  2022  0291                     	;# 
  2023  0291                     	;# 
  2024  0292                     	;# 
  2025  0293                     	;# 
  2026  0294                     	;# 
  2027  0298                     	;# 
  2028  0298                     	;# 
  2029  0299                     	;# 
  2030  029A                     	;# 
  2031  029B                     	;# 
  2032  029E                     	;# 
  2033  030C                     	;# 
  2034  030D                     	;# 
  2035  030E                     	;# 
  2036  038C                     	;# 
  2037  038D                     	;# 
  2038  038E                     	;# 
  2039  0391                     	;# 
  2040  0392                     	;# 
  2041  0393                     	;# 
  2042  0394                     	;# 
  2043  0395                     	;# 
  2044  0396                     	;# 
  2045  0397                     	;# 
  2046  0398                     	;# 
  2047  0399                     	;# 
  2048  040E                     	;# 
  2049  0413                     	;# 
  2050  0413                     	;# 
  2051  0414                     	;# 
  2052  0414                     	;# 
  2053  0415                     	;# 
  2054  0416                     	;# 
  2055  0417                     	;# 
  2056  0418                     	;# 
  2057  041A                     	;# 
  2058  041A                     	;# 
  2059  041B                     	;# 
  2060  041B                     	;# 
  2061  041C                     	;# 
  2062  041D                     	;# 
  2063  041E                     	;# 
  2064  041F                     	;# 
  2065  0493                     	;# 
  2066  0494                     	;# 
  2067  0495                     	;# 
  2068  0496                     	;# 
  2069  049A                     	;# 
  2070  049B                     	;# 
  2071  049C                     	;# 
  2072  049D                     	;# 
  2073  058C                     	;# 
  2074  058C                     	;# 
  2075  058D                     	;# 
  2076  058E                     	;# 
  2077  058E                     	;# 
  2078  058F                     	;# 
  2079  0590                     	;# 
  2080  0590                     	;# 
  2081  0591                     	;# 
  2082  0592                     	;# 
  2083  0592                     	;# 
  2084  0593                     	;# 
  2085  0594                     	;# 
  2086  0594                     	;# 
  2087  0595                     	;# 
  2088  0596                     	;# 
  2089  0596                     	;# 
  2090  0597                     	;# 
  2091  0598                     	;# 
  2092  0599                     	;# 
  2093  059A                     	;# 
  2094  059B                     	;# 
  2095  059B                     	;# 
  2096  059C                     	;# 
  2097  059D                     	;# 
  2098  060C                     	;# 
  2099  060C                     	;# 
  2100  060D                     	;# 
  2101  060E                     	;# 
  2102  060F                     	;# 
  2103  060F                     	;# 
  2104  0610                     	;# 
  2105  0611                     	;# 
  2106  0612                     	;# 
  2107  0613                     	;# 
  2108  0614                     	;# 
  2109  0617                     	;# 
  2110  0617                     	;# 
  2111  0618                     	;# 
  2112  0619                     	;# 
  2113  061A                     	;# 
  2114  061A                     	;# 
  2115  061B                     	;# 
  2116  061C                     	;# 
  2117  0691                     	;# 
  2118  0692                     	;# 
  2119  0693                     	;# 
  2120  0694                     	;# 
  2121  0695                     	;# 
  2122  0696                     	;# 
  2123  0697                     	;# 
  2124  0699                     	;# 
  2125  069A                     	;# 
  2126  0711                     	;# 
  2127  0712                     	;# 
  2128  0713                     	;# 
  2129  0714                     	;# 
  2130  0715                     	;# 
  2131  0718                     	;# 
  2132  0718                     	;# 
  2133  0719                     	;# 
  2134  071A                     	;# 
  2135  071A                     	;# 
  2136  071B                     	;# 
  2137  071C                     	;# 
  2138  071D                     	;# 
  2139  0791                     	;# 
  2140  0791                     	;# 
  2141  0792                     	;# 
  2142  0793                     	;# 
  2143  0793                     	;# 
  2144  0794                     	;# 
  2145  0795                     	;# 
  2146  0795                     	;# 
  2147  0796                     	;# 
  2148  0797                     	;# 
  2149  0797                     	;# 
  2150  0798                     	;# 
  2151  0799                     	;# 
  2152  079A                     	;# 
  2153  080C                     	;# 
  2154  080C                     	;# 
  2155  080D                     	;# 
  2156  080E                     	;# 
  2157  080E                     	;# 
  2158  080F                     	;# 
  2159  0810                     	;# 
  2160  0810                     	;# 
  2161  0811                     	;# 
  2162  0812                     	;# 
  2163  0812                     	;# 
  2164  0813                     	;# 
  2165  0814                     	;# 
  2166  0815                     	;# 
  2167  0816                     	;# 
  2168  0817                     	;# 
  2169  0818                     	;# 
  2170  0819                     	;# 
  2171  081A                     	;# 
  2172  081A                     	;# 
  2173  081B                     	;# 
  2174  081C                     	;# 
  2175  081C                     	;# 
  2176  081D                     	;# 
  2177  088C                     	;# 
  2178  088D                     	;# 
  2179  088E                     	;# 
  2180  088F                     	;# 
  2181  088F                     	;# 
  2182  0890                     	;# 
  2183  0891                     	;# 
  2184  0892                     	;# 
  2185  0893                     	;# 
  2186  0893                     	;# 
  2187  0894                     	;# 
  2188  0895                     	;# 
  2189  0896                     	;# 
  2190  0897                     	;# 
  2191  0897                     	;# 
  2192  0898                     	;# 
  2193  0899                     	;# 
  2194  0D8C                     	;# 
  2195  0D8C                     	;# 
  2196  0D8D                     	;# 
  2197  0D8E                     	;# 
  2198  0D8F                     	;# 
  2199  0D8F                     	;# 
  2200  0D90                     	;# 
  2201  0D91                     	;# 
  2202  0D92                     	;# 
  2203  0D92                     	;# 
  2204  0D93                     	;# 
  2205  0D94                     	;# 
  2206  0D95                     	;# 
  2207  0D95                     	;# 
  2208  0D96                     	;# 
  2209  0D97                     	;# 
  2210  0D98                     	;# 
  2211  0D99                     	;# 
  2212  0D9A                     	;# 
  2213  0D9B                     	;# 
  2214  0D9C                     	;# 
  2215  0D9D                     	;# 
  2216  0D9E                     	;# 
  2217  0D9E                     	;# 
  2218  0D9F                     	;# 
  2219  0DA0                     	;# 
  2220  0DA1                     	;# 
  2221  0DA1                     	;# 
  2222  0DA2                     	;# 
  2223  0DA3                     	;# 
  2224  0DA4                     	;# 
  2225  0DA4                     	;# 
  2226  0DA5                     	;# 
  2227  0DA6                     	;# 
  2228  0DA7                     	;# 
  2229  0DA7                     	;# 
  2230  0DA8                     	;# 
  2231  0DA9                     	;# 
  2232  0DAA                     	;# 
  2233  0DAB                     	;# 
  2234  0DAC                     	;# 
  2235  0DAD                     	;# 
  2236  0DAE                     	;# 
  2237  0DAF                     	;# 
  2238  0E0F                     	;# 
  2239  0E10                     	;# 
  2240  0E11                     	;# 
  2241  0E12                     	;# 
  2242  0E13                     	;# 
  2243  0E14                     	;# 
  2244  0E15                     	;# 
  2245  0E16                     	;# 
  2246  0E17                     	;# 
  2247  0E18                     	;# 
  2248  0E19                     	;# 
  2249  0E1A                     	;# 
  2250  0E1B                     	;# 
  2251  0E1C                     	;# 
  2252  0E1D                     	;# 
  2253  0E1E                     	;# 
  2254  0E1F                     	;# 
  2255  0E20                     	;# 
  2256  0E21                     	;# 
  2257  0E22                     	;# 
  2258  0E23                     	;# 
  2259  0E24                     	;# 
  2260  0E25                     	;# 
  2261  0E26                     	;# 
  2262  0E27                     	;# 
  2263  0E28                     	;# 
  2264  0E29                     	;# 
  2265  0E2A                     	;# 
  2266  0E2B                     	;# 
  2267  0E2C                     	;# 
  2268  0E2D                     	;# 
  2269  0E2E                     	;# 
  2270  0E90                     	;# 
  2271  0E91                     	;# 
  2272  0E92                     	;# 
  2273  0E94                     	;# 
  2274  0E95                     	;# 
  2275  0E9C                     	;# 
  2276  0E9D                     	;# 
  2277  0E9E                     	;# 
  2278  0E9F                     	;# 
  2279  0EA0                     	;# 
  2280  0EA1                     	;# 
  2281  0EA2                     	;# 
  2282  0EA3                     	;# 
  2283  0EA4                     	;# 
  2284  0EA5                     	;# 
  2285  0EA6                     	;# 
  2286  0EA7                     	;# 
  2287  0F0F                     	;# 
  2288  0F10                     	;# 
  2289  0F11                     	;# 
  2290  0F12                     	;# 
  2291  0F13                     	;# 
  2292  0F14                     	;# 
  2293  0F15                     	;# 
  2294  0F16                     	;# 
  2295  0F17                     	;# 
  2296  0F18                     	;# 
  2297  0F19                     	;# 
  2298  0F1A                     	;# 
  2299  0F1B                     	;# 
  2300  0F1C                     	;# 
  2301  0F1D                     	;# 
  2302  0F1E                     	;# 
  2303  0F1F                     	;# 
  2304  0F20                     	;# 
  2305  0F21                     	;# 
  2306  0F22                     	;# 
  2307  0F23                     	;# 
  2308  0F24                     	;# 
  2309  0F25                     	;# 
  2310  0F26                     	;# 
  2311  0F27                     	;# 
  2312  0F28                     	;# 
  2313  0F29                     	;# 
  2314  0F2A                     	;# 
  2315  0F2B                     	;# 
  2316  0F2C                     	;# 
  2317  0F2D                     	;# 
  2318  0F2E                     	;# 
  2319  0F2F                     	;# 
  2320  0F30                     	;# 
  2321  0F31                     	;# 
  2322  0F32                     	;# 
  2323  0F33                     	;# 
  2324  0F34                     	;# 
  2325  0F35                     	;# 
  2326  0F36                     	;# 
  2327  0F37                     	;# 
  2328  0FE4                     	;# 
  2329  0FE5                     	;# 
  2330  0FE6                     	;# 
  2331  0FE7                     	;# 
  2332  0FE8                     	;# 
  2333  0FE9                     	;# 
  2334  0FEA                     	;# 
  2335  0FEB                     	;# 
  2336  0FED                     	;# 
  2337  0FEE                     	;# 
  2338  0FEF                     	;# 
  2339  0000                     	;# 
  2340  0001                     	;# 
  2341  0002                     	;# 
  2342  0003                     	;# 
  2343  0004                     	;# 
  2344  0005                     	;# 
  2345  0006                     	;# 
  2346  0007                     	;# 
  2347  0008                     	;# 
  2348  0009                     	;# 
  2349  000A                     	;# 
  2350  000B                     	;# 
  2351  000C                     	;# 
  2352  000D                     	;# 
  2353  000E                     	;# 
  2354  0010                     	;# 
  2355  0011                     	;# 
  2356  0012                     	;# 
  2357  0013                     	;# 
  2358  0014                     	;# 
  2359  0015                     	;# 
  2360  0016                     	;# 
  2361  0016                     	;# 
  2362  0017                     	;# 
  2363  0018                     	;# 
  2364  0019                     	;# 
  2365  001A                     	;# 
  2366  001A                     	;# 
  2367  001B                     	;# 
  2368  001B                     	;# 
  2369  001C                     	;# 
  2370  001D                     	;# 
  2371  001E                     	;# 
  2372  001F                     	;# 
  2373  008C                     	;# 
  2374  008D                     	;# 
  2375  008E                     	;# 
  2376  0090                     	;# 
  2377  0091                     	;# 
  2378  0092                     	;# 
  2379  0093                     	;# 
  2380  0094                     	;# 
  2381  0095                     	;# 
  2382  0096                     	;# 
  2383  0098                     	;# 
  2384  0099                     	;# 
  2385  009A                     	;# 
  2386  009B                     	;# 
  2387  009B                     	;# 
  2388  009C                     	;# 
  2389  009D                     	;# 
  2390  009E                     	;# 
  2391  009F                     	;# 
  2392  010C                     	;# 
  2393  010D                     	;# 
  2394  010E                     	;# 
  2395  0111                     	;# 
  2396  0112                     	;# 
  2397  0113                     	;# 
  2398  0114                     	;# 
  2399  0115                     	;# 
  2400  0116                     	;# 
  2401  0117                     	;# 
  2402  0118                     	;# 
  2403  0119                     	;# 
  2404  011C                     	;# 
  2405  018C                     	;# 
  2406  018D                     	;# 
  2407  018E                     	;# 
  2408  0191                     	;# 
  2409  0191                     	;# 
  2410  0192                     	;# 
  2411  0193                     	;# 
  2412  0193                     	;# 
  2413  0194                     	;# 
  2414  0195                     	;# 
  2415  0196                     	;# 
  2416  0197                     	;# 
  2417  0199                     	;# 
  2418  0199                     	;# 
  2419  0199                     	;# 
  2420  019A                     	;# 
  2421  019A                     	;# 
  2422  019A                     	;# 
  2423  019B                     	;# 
  2424  019B                     	;# 
  2425  019B                     	;# 
  2426  019B                     	;# 
  2427  019B                     	;# 
  2428  019C                     	;# 
  2429  019C                     	;# 
  2430  019C                     	;# 
  2431  019D                     	;# 
  2432  019D                     	;# 
  2433  019D                     	;# 
  2434  019E                     	;# 
  2435  019E                     	;# 
  2436  019E                     	;# 
  2437  019F                     	;# 
  2438  019F                     	;# 
  2439  019F                     	;# 
  2440  019F                     	;# 
  2441  019F                     	;# 
  2442  020C                     	;# 
  2443  020D                     	;# 
  2444  020E                     	;# 
  2445  0211                     	;# 
  2446  0211                     	;# 
  2447  0212                     	;# 
  2448  0212                     	;# 
  2449  0213                     	;# 
  2450  0213                     	;# 
  2451  0214                     	;# 
  2452  0214                     	;# 
  2453  0215                     	;# 
  2454  0215                     	;# 
  2455  0215                     	;# 
  2456  0215                     	;# 
  2457  0216                     	;# 
  2458  0216                     	;# 
  2459  0217                     	;# 
  2460  0217                     	;# 
  2461  028C                     	;# 
  2462  028D                     	;# 
  2463  028E                     	;# 
  2464  0291                     	;# 
  2465  0291                     	;# 
  2466  0292                     	;# 
  2467  0293                     	;# 
  2468  0294                     	;# 
  2469  0298                     	;# 
  2470  0298                     	;# 
  2471  0299                     	;# 
  2472  029A                     	;# 
  2473  029B                     	;# 
  2474  029E                     	;# 
  2475  030C                     	;# 
  2476  030D                     	;# 
  2477  030E                     	;# 
  2478  038C                     	;# 
  2479  038D                     	;# 
  2480  038E                     	;# 
  2481  0391                     	;# 
  2482  0392                     	;# 
  2483  0393                     	;# 
  2484  0394                     	;# 
  2485  0395                     	;# 
  2486  0396                     	;# 
  2487  0397                     	;# 
  2488  0398                     	;# 
  2489  0399                     	;# 
  2490  040E                     	;# 
  2491  0413                     	;# 
  2492  0413                     	;# 
  2493  0414                     	;# 
  2494  0414                     	;# 
  2495  0415                     	;# 
  2496  0416                     	;# 
  2497  0417                     	;# 
  2498  0418                     	;# 
  2499  041A                     	;# 
  2500  041A                     	;# 
  2501  041B                     	;# 
  2502  041B                     	;# 
  2503  041C                     	;# 
  2504  041D                     	;# 
  2505  041E                     	;# 
  2506  041F                     	;# 
  2507  0493                     	;# 
  2508  0494                     	;# 
  2509  0495                     	;# 
  2510  0496                     	;# 
  2511  049A                     	;# 
  2512  049B                     	;# 
  2513  049C                     	;# 
  2514  049D                     	;# 
  2515  058C                     	;# 
  2516  058C                     	;# 
  2517  058D                     	;# 
  2518  058E                     	;# 
  2519  058E                     	;# 
  2520  058F                     	;# 
  2521  0590                     	;# 
  2522  0590                     	;# 
  2523  0591                     	;# 
  2524  0592                     	;# 
  2525  0592                     	;# 
  2526  0593                     	;# 
  2527  0594                     	;# 
  2528  0594                     	;# 
  2529  0595                     	;# 
  2530  0596                     	;# 
  2531  0596                     	;# 
  2532  0597                     	;# 
  2533  0598                     	;# 
  2534  0599                     	;# 
  2535  059A                     	;# 
  2536  059B                     	;# 
  2537  059B                     	;# 
  2538  059C                     	;# 
  2539  059D                     	;# 
  2540  060C                     	;# 
  2541  060C                     	;# 
  2542  060D                     	;# 
  2543  060E                     	;# 
  2544  060F                     	;# 
  2545  060F                     	;# 
  2546  0610                     	;# 
  2547  0611                     	;# 
  2548  0612                     	;# 
  2549  0613                     	;# 
  2550  0614                     	;# 
  2551  0617                     	;# 
  2552  0617                     	;# 
  2553  0618                     	;# 
  2554  0619                     	;# 
  2555  061A                     	;# 
  2556  061A                     	;# 
  2557  061B                     	;# 
  2558  061C                     	;# 
  2559  0691                     	;# 
  2560  0692                     	;# 
  2561  0693                     	;# 
  2562  0694                     	;# 
  2563  0695                     	;# 
  2564  0696                     	;# 
  2565  0697                     	;# 
  2566  0699                     	;# 
  2567  069A                     	;# 
  2568  0711                     	;# 
  2569  0712                     	;# 
  2570  0713                     	;# 
  2571  0714                     	;# 
  2572  0715                     	;# 
  2573  0718                     	;# 
  2574  0718                     	;# 
  2575  0719                     	;# 
  2576  071A                     	;# 
  2577  071A                     	;# 
  2578  071B                     	;# 
  2579  071C                     	;# 
  2580  071D                     	;# 
  2581  0791                     	;# 
  2582  0791                     	;# 
  2583  0792                     	;# 
  2584  0793                     	;# 
  2585  0793                     	;# 
  2586  0794                     	;# 
  2587  0795                     	;# 
  2588  0795                     	;# 
  2589  0796                     	;# 
  2590  0797                     	;# 
  2591  0797                     	;# 
  2592  0798                     	;# 
  2593  0799                     	;# 
  2594  079A                     	;# 
  2595  080C                     	;# 
  2596  080C                     	;# 
  2597  080D                     	;# 
  2598  080E                     	;# 
  2599  080E                     	;# 
  2600  080F                     	;# 
  2601  0810                     	;# 
  2602  0810                     	;# 
  2603  0811                     	;# 
  2604  0812                     	;# 
  2605  0812                     	;# 
  2606  0813                     	;# 
  2607  0814                     	;# 
  2608  0815                     	;# 
  2609  0816                     	;# 
  2610  0817                     	;# 
  2611  0818                     	;# 
  2612  0819                     	;# 
  2613  081A                     	;# 
  2614  081A                     	;# 
  2615  081B                     	;# 
  2616  081C                     	;# 
  2617  081C                     	;# 
  2618  081D                     	;# 
  2619  088C                     	;# 
  2620  088D                     	;# 
  2621  088E                     	;# 
  2622  088F                     	;# 
  2623  088F                     	;# 
  2624  0890                     	;# 
  2625  0891                     	;# 
  2626  0892                     	;# 
  2627  0893                     	;# 
  2628  0893                     	;# 
  2629  0894                     	;# 
  2630  0895                     	;# 
  2631  0896                     	;# 
  2632  0897                     	;# 
  2633  0897                     	;# 
  2634  0898                     	;# 
  2635  0899                     	;# 
  2636  0D8C                     	;# 
  2637  0D8C                     	;# 
  2638  0D8D                     	;# 
  2639  0D8E                     	;# 
  2640  0D8F                     	;# 
  2641  0D8F                     	;# 
  2642  0D90                     	;# 
  2643  0D91                     	;# 
  2644  0D92                     	;# 
  2645  0D92                     	;# 
  2646  0D93                     	;# 
  2647  0D94                     	;# 
  2648  0D95                     	;# 
  2649  0D95                     	;# 
  2650  0D96                     	;# 
  2651  0D97                     	;# 
  2652  0D98                     	;# 
  2653  0D99                     	;# 
  2654  0D9A                     	;# 
  2655  0D9B                     	;# 
  2656  0D9C                     	;# 
  2657  0D9D                     	;# 
  2658  0D9E                     	;# 
  2659  0D9E                     	;# 
  2660  0D9F                     	;# 
  2661  0DA0                     	;# 
  2662  0DA1                     	;# 
  2663  0DA1                     	;# 
  2664  0DA2                     	;# 
  2665  0DA3                     	;# 
  2666  0DA4                     	;# 
  2667  0DA4                     	;# 
  2668  0DA5                     	;# 
  2669  0DA6                     	;# 
  2670  0DA7                     	;# 
  2671  0DA7                     	;# 
  2672  0DA8                     	;# 
  2673  0DA9                     	;# 
  2674  0DAA                     	;# 
  2675  0DAB                     	;# 
  2676  0DAC                     	;# 
  2677  0DAD                     	;# 
  2678  0DAE                     	;# 
  2679  0DAF                     	;# 
  2680  0E0F                     	;# 
  2681  0E10                     	;# 
  2682  0E11                     	;# 
  2683  0E12                     	;# 
  2684  0E13                     	;# 
  2685  0E14                     	;# 
  2686  0E15                     	;# 
  2687  0E16                     	;# 
  2688  0E17                     	;# 
  2689  0E18                     	;# 
  2690  0E19                     	;# 
  2691  0E1A                     	;# 
  2692  0E1B                     	;# 
  2693  0E1C                     	;# 
  2694  0E1D                     	;# 
  2695  0E1E                     	;# 
  2696  0E1F                     	;# 
  2697  0E20                     	;# 
  2698  0E21                     	;# 
  2699  0E22                     	;# 
  2700  0E23                     	;# 
  2701  0E24                     	;# 
  2702  0E25                     	;# 
  2703  0E26                     	;# 
  2704  0E27                     	;# 
  2705  0E28                     	;# 
  2706  0E29                     	;# 
  2707  0E2A                     	;# 
  2708  0E2B                     	;# 
  2709  0E2C                     	;# 
  2710  0E2D                     	;# 
  2711  0E2E                     	;# 
  2712  0E90                     	;# 
  2713  0E91                     	;# 
  2714  0E92                     	;# 
  2715  0E94                     	;# 
  2716  0E95                     	;# 
  2717  0E9C                     	;# 
  2718  0E9D                     	;# 
  2719  0E9E                     	;# 
  2720  0E9F                     	;# 
  2721  0EA0                     	;# 
  2722  0EA1                     	;# 
  2723  0EA2                     	;# 
  2724  0EA3                     	;# 
  2725  0EA4                     	;# 
  2726  0EA5                     	;# 
  2727  0EA6                     	;# 
  2728  0EA7                     	;# 
  2729  0F0F                     	;# 
  2730  0F10                     	;# 
  2731  0F11                     	;# 
  2732  0F12                     	;# 
  2733  0F13                     	;# 
  2734  0F14                     	;# 
  2735  0F15                     	;# 
  2736  0F16                     	;# 
  2737  0F17                     	;# 
  2738  0F18                     	;# 
  2739  0F19                     	;# 
  2740  0F1A                     	;# 
  2741  0F1B                     	;# 
  2742  0F1C                     	;# 
  2743  0F1D                     	;# 
  2744  0F1E                     	;# 
  2745  0F1F                     	;# 
  2746  0F20                     	;# 
  2747  0F21                     	;# 
  2748  0F22                     	;# 
  2749  0F23                     	;# 
  2750  0F24                     	;# 
  2751  0F25                     	;# 
  2752  0F26                     	;# 
  2753  0F27                     	;# 
  2754  0F28                     	;# 
  2755  0F29                     	;# 
  2756  0F2A                     	;# 
  2757  0F2B                     	;# 
  2758  0F2C                     	;# 
  2759  0F2D                     	;# 
  2760  0F2E                     	;# 
  2761  0F2F                     	;# 
  2762  0F30                     	;# 
  2763  0F31                     	;# 
  2764  0F32                     	;# 
  2765  0F33                     	;# 
  2766  0F34                     	;# 
  2767  0F35                     	;# 
  2768  0F36                     	;# 
  2769  0F37                     	;# 
  2770  0FE4                     	;# 
  2771  0FE5                     	;# 
  2772  0FE6                     	;# 
  2773  0FE7                     	;# 
  2774  0FE8                     	;# 
  2775  0FE9                     	;# 
  2776  0FEA                     	;# 
  2777  0FEB                     	;# 
  2778  0FED                     	;# 
  2779  0FEE                     	;# 
  2780  0FEF                     	;# 
  2781                           
  2782                           	psect	idataBANK1
  2783  1610                     __pidataBANK1:	
  2784                           
  2785                           ;initializer for _messages
  2786  1610  34A0               	retlw	low (_message_start| (0+512))
  2787  1611  3402               	retlw	high (_message_start| (0+512))
  2788  1612  3420               	retlw	low (_message_end| (0+768))
  2789  1613  3403               	retlw	high (_message_end| (0+768))
  2790                           
  2791                           	psect	idataBANK2
  2792  1637                     __pidataBANK2:	
  2793                           
  2794                           ;initializer for stoa@F1139
  2795  1637  3428               	retlw	40
  2796  1638  346E               	retlw	110
  2797  1639  3475               	retlw	117
  2798  163A  346C               	retlw	108
  2799  163B  346C               	retlw	108
  2800  163C  3429               	retlw	41
  2801  163D  3400               	retlw	0
  2802                           
  2803                           	psect	idataBANK4
  2804  08F0                     __pidataBANK4:	
  2805                           
  2806                           ;initializer for _setNavFlightMode
  2807  08F0  34B5               	retlw	181
  2808  08F1  3462               	retlw	98
  2809  08F2  3406               	retlw	6
  2810  08F3  3424               	retlw	36
  2811  08F4  3424               	retlw	36
  2812  08F5  3400               	retlw	0
  2813  08F6  34FF               	retlw	255
  2814  08F7  34FF               	retlw	255
  2815  08F8  3406               	retlw	6
  2816  08F9  3403               	retlw	3
  2817  08FA  3400               	retlw	0
  2818  08FB  3400               	retlw	0
  2819  08FC  3400               	retlw	0
  2820  08FD  3400               	retlw	0
  2821  08FE  3410               	retlw	16
  2822  08FF  3427               	retlw	39
  2823  0900  3400               	retlw	0
  2824  0901  3400               	retlw	0
  2825  0902  3405               	retlw	5
  2826  0903  3400               	retlw	0
  2827  0904  34FA               	retlw	250
  2828  0905  3400               	retlw	0
  2829  0906  34FA               	retlw	250
  2830  0907  3400               	retlw	0
  2831  0908  3464               	retlw	100
  2832  0909  3400               	retlw	0
  2833  090A  342C               	retlw	44
  2834  090B  3401               	retlw	1
  2835  090C  3400               	retlw	0
  2836  090D  3400               	retlw	0
  2837  090E  3400               	retlw	0
  2838  090F  3400               	retlw	0
  2839  0910  3400               	retlw	0
  2840  0911  3400               	retlw	0
  2841  0912  3400               	retlw	0
  2842  0913  3400               	retlw	0
  2843  0914  3400               	retlw	0
  2844  0915  3400               	retlw	0
  2845  0916  3400               	retlw	0
  2846  0917  3400               	retlw	0
  2847  0918  3400               	retlw	0
  2848  0919  3400               	retlw	0
  2849  091A  3416               	retlw	22
  2850  091B  34DC               	retlw	220
  2851                           
  2852                           	psect	stringtext1
  2853  18DF                     __pstringtext1:	
  2854  18DF                     _DELAY_MULT:	
  2855  18DF  34E8               	retlw	232
  2856  18E0  3403               	retlw	3
  2857  18E1                     __end_of_DELAY_MULT:	
  2858                           
  2859                           	psect	stringtext2
  2860  18E1                     __pstringtext2:	
  2861  18E1                     _BAUD_RATE:	
  2862  18E1  3432               	retlw	50
  2863  18E2  3400               	retlw	0
  2864  18E3                     __end_of_BAUD_RATE:	
  2865                           
  2866                           	psect	stringtext3
  2867  18E3                     __pstringtext3:	
  2868  18E3                     _MESSAGE_INTERVAL:	
  2869  18E3  3405               	retlw	5
  2870  18E4  3400               	retlw	0
  2871  18E5                     __end_of_MESSAGE_INTERVAL:	
  2872                           
  2873                           	psect	nvBANK1
  2874  00EC                     __pnvBANK1:	
  2875  00EC                     _timer0ReloadVal:	
  2876  00EC                     	ds	1
  2877                           
  2878                           	psect	nvBANK2
  2879  016B                     __pnvBANK2:	
  2880  016B                     _TMR0_InterruptHandler:	
  2881  016B                     	ds	2
  2882  0015                     _TMR0	set	21
  2883  000B                     _INTCONbits	set	11
  2884  0010                     _PIR1bits	set	16
  2885  0095                     _OPTION_REG	set	149
  2886  0095                     _OPTION_REGbits	set	149
  2887  008E                     _TRISC	set	142
  2888  008D                     _TRISB	set	141
  2889  008C                     _TRISA	set	140
  2890  0098                     _OSCTUNE	set	152
  2891  0099                     _OSCCON	set	153
  2892  010C                     _LATAbits	set	268
  2893  010E                     _LATCbits	set	270
  2894  010E                     _LATC	set	270
  2895  010D                     _LATB	set	269
  2896  010C                     _LATA	set	268
  2897  0116                     _BORCON	set	278
  2898  019A                     _TX1REG	set	410
  2899  0199                     _RC1REG	set	409
  2900  019D                     _RC1STAbits	set	413
  2901  019E                     _TX1STAbits	set	414
  2902  019C                     _SPBRGH	set	412
  2903  019B                     _SPBRGL	set	411
  2904  019E                     _TX1STA	set	414
  2905  019D                     _RC1STA	set	413
  2906  019F                     _BAUD1CON	set	415
  2907  018C                     _ANSELA	set	396
  2908  018D                     _ANSELB	set	397
  2909  018E                     _ANSELC	set	398
  2910  020E                     _WPUC	set	526
  2911  020C                     _WPUA	set	524
  2912  020D                     _WPUB	set	525
  2913  028E                     _ODCONC	set	654
  2914  028D                     _ODCONB	set	653
  2915  028C                     _ODCONA	set	652
  2916  030E                     _SLRCONC	set	782
  2917  030D                     _SLRCONB	set	781
  2918  030C                     _SLRCONA	set	780
  2919  0E24                     _RXPPS	set	3620
  2920  0E9F                     _RB7PPS	set	3743
  2921                           
  2922                           	psect	stringtext4
  2923  1800                     __pstringtext4:	
  2924  1800                     STR_6:	
  2925  1800  3424               	retlw	36	;'$'
  2926  1801  3450               	retlw	80	;'P'
  2927  1802  3455               	retlw	85	;'U'
  2928  1803  3442               	retlw	66	;'B'
  2929  1804  3458               	retlw	88	;'X'
  2930  1805  342C               	retlw	44	;','
  2931  1806  3434               	retlw	52	;'4'
  2932  1807  3430               	retlw	48	;'0'
  2933  1808  342C               	retlw	44	;','
  2934  1809  3452               	retlw	82	;'R'
  2935  180A  344D               	retlw	77	;'M'
  2936  180B  3443               	retlw	67	;'C'
  2937  180C  342C               	retlw	44	;','
  2938  180D  3430               	retlw	48	;'0'
  2939  180E  342C               	retlw	44	;','
  2940  180F  3430               	retlw	48	;'0'
  2941  1810  342C               	retlw	44	;','
  2942  1811  3430               	retlw	48	;'0'
  2943  1812  342C               	retlw	44	;','
  2944  1813  3430               	retlw	48	;'0'
  2945  1814  342A               	retlw	42	;'*'
  2946  1815  3434               	retlw	52	;'4'
  2947  1816  3437               	retlw	55	;'7'
  2948  1817  340D               	retlw	13
  2949  1818  340A               	retlw	10
  2950  1819  3400               	retlw	0
  2951                           
  2952                           	psect	stringtext5
  2953  181A                     __pstringtext5:	
  2954  181A                     STR_4:	
  2955  181A  3424               	retlw	36	;'$'
  2956  181B  3450               	retlw	80	;'P'
  2957  181C  3455               	retlw	85	;'U'
  2958  181D  3442               	retlw	66	;'B'
  2959  181E  3458               	retlw	88	;'X'
  2960  181F  342C               	retlw	44	;','
  2961  1820  3434               	retlw	52	;'4'
  2962  1821  3430               	retlw	48	;'0'
  2963  1822  342C               	retlw	44	;','
  2964  1823  3447               	retlw	71	;'G'
  2965  1824  3453               	retlw	83	;'S'
  2966  1825  3456               	retlw	86	;'V'
  2967  1826  342C               	retlw	44	;','
  2968  1827  3430               	retlw	48	;'0'
  2969  1828  342C               	retlw	44	;','
  2970  1829  3430               	retlw	48	;'0'
  2971  182A  342C               	retlw	44	;','
  2972  182B  3430               	retlw	48	;'0'
  2973  182C  342C               	retlw	44	;','
  2974  182D  3430               	retlw	48	;'0'
  2975  182E  342A               	retlw	42	;'*'
  2976  182F  3435               	retlw	53	;'5'
  2977  1830  3439               	retlw	57	;'9'
  2978  1831  340D               	retlw	13
  2979  1832  340A               	retlw	10
  2980  1833  3400               	retlw	0
  2981                           
  2982                           	psect	stringtext6
  2983  1834                     __pstringtext6:	
  2984  1834                     STR_2:	
  2985  1834  3424               	retlw	36	;'$'
  2986  1835  3450               	retlw	80	;'P'
  2987  1836  3455               	retlw	85	;'U'
  2988  1837  3442               	retlw	66	;'B'
  2989  1838  3458               	retlw	88	;'X'
  2990  1839  342C               	retlw	44	;','
  2991  183A  3434               	retlw	52	;'4'
  2992  183B  3430               	retlw	48	;'0'
  2993  183C  342C               	retlw	44	;','
  2994  183D  3447               	retlw	71	;'G'
  2995  183E  3447               	retlw	71	;'G'
  2996  183F  3441               	retlw	65	;'A'
  2997  1840  342C               	retlw	44	;','
  2998  1841  3430               	retlw	48	;'0'
  2999  1842  342C               	retlw	44	;','
  3000  1843  3430               	retlw	48	;'0'
  3001  1844  342C               	retlw	44	;','
  3002  1845  3430               	retlw	48	;'0'
  3003  1846  342C               	retlw	44	;','
  3004  1847  3430               	retlw	48	;'0'
  3005  1848  342A               	retlw	42	;'*'
  3006  1849  3435               	retlw	53	;'5'
  3007  184A  3441               	retlw	65	;'A'
  3008  184B  340D               	retlw	13
  3009  184C  340A               	retlw	10
  3010  184D  3400               	retlw	0
  3011                           
  3012                           	psect	stringtext7
  3013  184E                     __pstringtext7:	
  3014  184E                     STR_1:	
  3015  184E  3424               	retlw	36	;'$'
  3016  184F  3450               	retlw	80	;'P'
  3017  1850  3455               	retlw	85	;'U'
  3018  1851  3442               	retlw	66	;'B'
  3019  1852  3458               	retlw	88	;'X'
  3020  1853  342C               	retlw	44	;','
  3021  1854  3434               	retlw	52	;'4'
  3022  1855  3430               	retlw	48	;'0'
  3023  1856  342C               	retlw	44	;','
  3024  1857  3447               	retlw	71	;'G'
  3025  1858  344C               	retlw	76	;'L'
  3026  1859  344C               	retlw	76	;'L'
  3027  185A  342C               	retlw	44	;','
  3028  185B  3430               	retlw	48	;'0'
  3029  185C  342C               	retlw	44	;','
  3030  185D  3430               	retlw	48	;'0'
  3031  185E  342C               	retlw	44	;','
  3032  185F  3430               	retlw	48	;'0'
  3033  1860  342C               	retlw	44	;','
  3034  1861  3430               	retlw	48	;'0'
  3035  1862  342A               	retlw	42	;'*'
  3036  1863  3435               	retlw	53	;'5'
  3037  1864  3443               	retlw	67	;'C'
  3038  1865  340D               	retlw	13
  3039  1866  340A               	retlw	10
  3040  1867  3400               	retlw	0
  3041                           
  3042                           	psect	stringtext8
  3043  1868                     __pstringtext8:	
  3044  1868                     STR_5:	
  3045  1868  3424               	retlw	36	;'$'
  3046  1869  3450               	retlw	80	;'P'
  3047  186A  3455               	retlw	85	;'U'
  3048  186B  3442               	retlw	66	;'B'
  3049  186C  3458               	retlw	88	;'X'
  3050  186D  342C               	retlw	44	;','
  3051  186E  3434               	retlw	52	;'4'
  3052  186F  3430               	retlw	48	;'0'
  3053  1870  342C               	retlw	44	;','
  3054  1871  3447               	retlw	71	;'G'
  3055  1872  3453               	retlw	83	;'S'
  3056  1873  3441               	retlw	65	;'A'
  3057  1874  342C               	retlw	44	;','
  3058  1875  3430               	retlw	48	;'0'
  3059  1876  342C               	retlw	44	;','
  3060  1877  3430               	retlw	48	;'0'
  3061  1878  342C               	retlw	44	;','
  3062  1879  3430               	retlw	48	;'0'
  3063  187A  342C               	retlw	44	;','
  3064  187B  3430               	retlw	48	;'0'
  3065  187C  342A               	retlw	42	;'*'
  3066  187D  3434               	retlw	52	;'4'
  3067  187E  3445               	retlw	69	;'E'
  3068  187F  340D               	retlw	13
  3069  1880  340A               	retlw	10
  3070  1881  3400               	retlw	0
  3071                           
  3072                           	psect	stringtext9
  3073  1882                     __pstringtext9:	
  3074  1882                     STR_3:	
  3075  1882  3424               	retlw	36	;'$'
  3076  1883  3450               	retlw	80	;'P'
  3077  1884  3455               	retlw	85	;'U'
  3078  1885  3442               	retlw	66	;'B'
  3079  1886  3458               	retlw	88	;'X'
  3080  1887  342C               	retlw	44	;','
  3081  1888  3434               	retlw	52	;'4'
  3082  1889  3430               	retlw	48	;'0'
  3083  188A  342C               	retlw	44	;','
  3084  188B  3456               	retlw	86	;'V'
  3085  188C  3454               	retlw	84	;'T'
  3086  188D  3447               	retlw	71	;'G'
  3087  188E  342C               	retlw	44	;','
  3088  188F  3430               	retlw	48	;'0'
  3089  1890  342C               	retlw	44	;','
  3090  1891  3430               	retlw	48	;'0'
  3091  1892  342C               	retlw	44	;','
  3092  1893  3430               	retlw	48	;'0'
  3093  1894  342C               	retlw	44	;','
  3094  1895  3430               	retlw	48	;'0'
  3095  1896  342A               	retlw	42	;'*'
  3096  1897  3435               	retlw	53	;'5'
  3097  1898  3445               	retlw	69	;'E'
  3098  1899  340D               	retlw	13
  3099  189A  340A               	retlw	10
  3100  189B  3400               	retlw	0
  3101                           
  3102                           	psect	stringtext10
  3103  189C                     __pstringtext10:	
  3104  189C                     STR_10:	
  3105  189C  3424               	retlw	36	;'$'
  3106  189D  3424               	retlw	36	;'$'
  3107  189E  3454               	retlw	84	;'T'
  3108  189F  3445               	retlw	69	;'E'
  3109  18A0  3453               	retlw	83	;'S'
  3110  18A1  3454               	retlw	84	;'T'
  3111  18A2  342C               	retlw	44	;','
  3112  18A3  3425               	retlw	37	;'%'
  3113  18A4  3464               	retlw	100	;'d'
  3114  18A5  342C               	retlw	44	;','
  3115  18A6  3425               	retlw	37	;'%'
  3116  18A7  3473               	retlw	115	;'s'
  3117  18A8  342C               	retlw	44	;','
  3118  18A9  3425               	retlw	37	;'%'
  3119  18AA  3473               	retlw	115	;'s'
  3120  18AB  342C               	retlw	44	;','
  3121  18AC  3425               	retlw	37	;'%'
  3122  18AD  3473               	retlw	115	;'s'
  3123  18AE  342C               	retlw	44	;','
  3124  18AF  3425               	retlw	37	;'%'
  3125  18B0  3473               	retlw	115	;'s'
  3126  18B1  342C               	retlw	44	;','
  3127  18B2  3400               	retlw	0
  3128                           
  3129                           	psect	stringtext11
  3130  18B3                     __pstringtext11:	
  3131  18B3                     STR_11:	
  3132  18B3  3425               	retlw	37	;'%'
  3133  18B4  3473               	retlw	115	;'s'
  3134  18B5  342C               	retlw	44	;','
  3135  18B6  3425               	retlw	37	;'%'
  3136  18B7  3473               	retlw	115	;'s'
  3137  18B8  342C               	retlw	44	;','
  3138  18B9  3425               	retlw	37	;'%'
  3139  18BA  3473               	retlw	115	;'s'
  3140  18BB  342C               	retlw	44	;','
  3141  18BC  3425               	retlw	37	;'%'
  3142  18BD  3473               	retlw	115	;'s'
  3143  18BE  342C               	retlw	44	;','
  3144  18BF  3425               	retlw	37	;'%'
  3145  18C0  3473               	retlw	115	;'s'
  3146  18C1  342C               	retlw	44	;','
  3147  18C2  3425               	retlw	37	;'%'
  3148  18C3  3473               	retlw	115	;'s'
  3149  18C4  3400               	retlw	0
  3150                           
  3151                           	psect	stringtext12
  3152  18C5                     __pstringtext12:	
  3153  18C5                     STR_7:	
  3154  18C5  3424               	retlw	36	;'$'
  3155  18C6  3450               	retlw	80	;'P'
  3156  18C7  3455               	retlw	85	;'U'
  3157  18C8  3442               	retlw	66	;'B'
  3158  18C9  3458               	retlw	88	;'X'
  3159  18CA  342C               	retlw	44	;','
  3160  18CB  3430               	retlw	48	;'0'
  3161  18CC  3430               	retlw	48	;'0'
  3162  18CD  342A               	retlw	42	;'*'
  3163  18CE  3433               	retlw	51	;'3'
  3164  18CF  3433               	retlw	51	;'3'
  3165  18D0  340D               	retlw	13
  3166  18D1  340A               	retlw	10
  3167  18D2  3400               	retlw	0
  3168                           
  3169                           	psect	stringtext13
  3170  18D3                     __pstringtext13:	
  3171  18D3                     STR_12:	
  3172  18D3  342A               	retlw	42	;'*'
  3173  18D4  3425               	retlw	37	;'%'
  3174  18D5  3430               	retlw	48	;'0'
  3175  18D6  3434               	retlw	52	;'4'
  3176  18D7  3458               	retlw	88	;'X'
  3177  18D8  340A               	retlw	10
  3178  18D9  3400               	retlw	0
  3179                           
  3180                           	psect	stringtext14
  3181  18DA                     __pstringtext14:	
  3182  18DA                     STR_8:	
  3183  18DA  3450               	retlw	80	;'P'
  3184  18DB  3455               	retlw	85	;'U'
  3185  18DC  3442               	retlw	66	;'B'
  3186  18DD  3458               	retlw	88	;'X'
  3187  18DE  3400               	retlw	0
  3188                           
  3189                           	psect	stringtext15
  3190  0000                     __pstringtext15:	
  3191  18DA                     
  3192                           ; #config settings
  3193  0000                     
  3194                           	psect	cinit
  3195  000F                     start_initialization:	
  3196  000F                     __initialization:	
  3197                           
  3198                           ; Initialize objects allocated to BANK1
  3199  000F  3010               	movlw	low __pidataBANK1
  3200  0010  0084               	movwf	4
  3201  0011  3096               	movlw	(high __pidataBANK1)| (0+128)
  3202  0012  0085               	movwf	5
  3203  0013  30E8               	movlw	low __pdataBANK1
  3204  0014  0086               	movwf	6
  3205  0015  3000               	movlw	high __pdataBANK1
  3206  0016  0087               	movwf	7
  3207  0017  3004               	movlw	4
  3208  0018  3196  262A  3180   	fcall	init_ram
  3209                           
  3210                           ; Initialize objects allocated to BANK2
  3211  001B  3037               	movlw	low __pidataBANK2
  3212  001C  0084               	movwf	4
  3213  001D  3096               	movlw	(high __pidataBANK2)| (0+128)
  3214  001E  0085               	movwf	5
  3215  001F  3064               	movlw	low __pdataBANK2
  3216  0020  0086               	movwf	6
  3217  0021  3001               	movlw	high __pdataBANK2
  3218  0022  0087               	movwf	7
  3219  0023  3007               	movlw	7
  3220  0024  3196  262A  3180   	fcall	init_ram
  3221                           
  3222                           ; Initialize objects allocated to BANK4
  3223  0027  30F0               	movlw	low __pidataBANK4
  3224  0028  0084               	movwf	4
  3225  0029  3088               	movlw	(high __pidataBANK4)| (0+128)
  3226  002A  0085               	movwf	5
  3227  002B  3020               	movlw	low __pdataBANK4
  3228  002C  0086               	movwf	6
  3229  002D  3002               	movlw	high __pdataBANK4
  3230  002E  0087               	movwf	7
  3231  002F  302C               	movlw	44
  3232  0030  3196  262A  3180   	fcall	init_ram
  3233                           
  3234                           ; Clear objects allocated to BANK0
  3235  0033  01ED               	clrf	__pbssBANK0& (0+127)
  3236  0034  01EE               	clrf	(__pbssBANK0+1)& (0+127)
  3237  0035  01EF               	clrf	(__pbssBANK0+2)& (0+127)
  3238                           
  3239                           ; Clear objects allocated to BANK1
  3240  0036  30E0               	movlw	low __pbssBANK1
  3241  0037  0084               	movwf	4
  3242  0038  3000               	movlw	high __pbssBANK1
  3243  0039  0085               	movwf	5
  3244  003A  3008               	movlw	8
  3245  003B  3196  2624  3180   	fcall	clear_ram0
  3246                           
  3247                           ; Clear objects allocated to BANK2
  3248  003E  3020               	movlw	low __pbssBANK2
  3249  003F  0084               	movwf	4
  3250  0040  3001               	movlw	high __pbssBANK2
  3251  0041  0085               	movwf	5
  3252  0042  3044               	movlw	68
  3253  0043  3196  2624  3180   	fcall	clear_ram0
  3254                           
  3255                           ; Clear objects allocated to BANK3
  3256  0046  30A0               	movlw	low __pbssBANK3
  3257  0047  0084               	movwf	4
  3258  0048  3001               	movlw	high __pbssBANK3
  3259  0049  0085               	movwf	5
  3260  004A  303D               	movlw	61
  3261  004B  3196  2624  3180   	fcall	clear_ram0
  3262                           
  3263                           ; Clear objects allocated to BANK4
  3264  004E  304C               	movlw	low __pbssBANK4
  3265  004F  0084               	movwf	4
  3266  0050  3002               	movlw	high __pbssBANK4
  3267  0051  0085               	movwf	5
  3268  0052  3020               	movlw	32
  3269  0053  3196  2624  3180   	fcall	clear_ram0
  3270                           
  3271                           ; Clear objects allocated to BANK5
  3272  0056  30A0               	movlw	low __pbssBANK5
  3273  0057  0084               	movwf	4
  3274  0058  3002               	movlw	high __pbssBANK5
  3275  0059  0085               	movwf	5
  3276  005A  3046               	movlw	70
  3277  005B  3196  2624  3180   	fcall	clear_ram0
  3278                           
  3279                           ; Clear objects allocated to BANK6
  3280  005E  3020               	movlw	low __pbssBANK6
  3281  005F  0084               	movwf	4
  3282  0060  3003               	movlw	high __pbssBANK6
  3283  0061  0085               	movwf	5
  3284  0062  3049               	movlw	73
  3285  0063  3196  2624         	fcall	clear_ram0
  3286  0065                     end_of_initialization:	
  3287                           ;End of C runtime variable initialization code
  3288                           
  3289  0065                     __end_of__initialization:	
  3290  0065  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3291  0066  0020               	movlb	0
  3292  0067  318D  2D63         	ljmp	_main	;jump to C main() function
  3293                           
  3294                           	psect	bssBANK0
  3295  006D                     __pbssBANK0:	
  3296  006D                     _flags:	
  3297  006D                     	ds	2
  3298  006F                     _gps_configured:	
  3299  006F                     	ds	1
  3300                           
  3301                           	psect	bssBANK1
  3302  00E0                     __pbssBANK1:	
  3303  00E0                     _ticks:	
  3304  00E0                     	ds	4
  3305  00E4                     _width:	
  3306  00E4                     	ds	2
  3307  00E6                     _prec:	
  3308  00E6                     	ds	2
  3309                           
  3310                           	psect	dataBANK1
  3311  00E8                     __pdataBANK1:	
  3312  00E8                     _messages:	
  3313  00E8                     	ds	4
  3314                           
  3315                           	psect	bssBANK2
  3316  0120                     __pbssBANK2:	
  3317  0120                     _nout:	
  3318  0120                     	ds	2
  3319  0122                     _gps_vertical_velocity:	
  3320  0122                     	ds	10
  3321  012C                     _gps_course_over_ground:	
  3322  012C                     	ds	10
  3323  0136                     _gps_speed_over_ground:	
  3324  0136                     	ds	10
  3325  0140                     _gps_time:	
  3326  0140                     	ds	10
  3327  014A                     _gps_vdop:	
  3328  014A                     	ds	8
  3329  0152                     _gps_hdop:	
  3330  0152                     	ds	8
  3331  015A                     _checksum:	
  3332  015A                     	ds	6
  3333  0160                     _gps_nav_status:	
  3334  0160                     	ds	4
  3335                           
  3336                           	psect	dataBANK2
  3337  0164                     __pdataBANK2:	
  3338  0164                     stoa@F1139:	
  3339  0164                     	ds	7
  3340                           
  3341                           	psect	bssBANK3
  3342  01A0                     __pbssBANK3:	
  3343  01A0                     GetNavData@F10236:	
  3344  01A0                     	ds	10
  3345  01AA                     GetNavData@F10233:	
  3346  01AA                     	ds	7
  3347  01B1                     _gps_longitude:	
  3348  01B1                     	ds	16
  3349  01C1                     _gps_latitude:	
  3350  01C1                     	ds	16
  3351  01D1                     _gps_altitude:	
  3352  01D1                     	ds	12
  3353                           
  3354                           	psect	bssBANK4
  3355  024C                     __pbssBANK4:	
  3356  024C                     _dbuf:	
  3357  024C                     	ds	32
  3358                           
  3359                           	psect	dataBANK4
  3360  0220                     __pdataBANK4:	
  3361  0220                     _setNavFlightMode:	
  3362  0220                     	ds	44
  3363                           
  3364                           	psect	bssBANK5
  3365  02A0                     __pbssBANK5:	
  3366  02A0                     _message_start:	
  3367  02A0                     	ds	70
  3368                           
  3369                           	psect	bssBANK6
  3370  0320                     __pbssBANK6:	
  3371  0320                     _message_end:	
  3372  0320                     	ds	73
  3373                           
  3374                           	psect	inittext
  3375  162A                     init_ram:	
  3376  162A  00FE               	movwf	126
  3377  162B                     initloop:	
  3378  162B  0012               	moviw fsr0++
  3379  162C  001E               	movwi fsr1++
  3380  162D  0BFE               	decfsz	126,f
  3381  162E  2E2B               	goto	initloop
  3382  162F  3400               	retlw	0
  3383                           
  3384                           	psect	clrtext
  3385  1624                     clear_ram0:	
  3386                           ;	Called with FSR0 containing the base address, and
  3387                           ;	WREG with the size to clear
  3388                           
  3389  1624  0064               	clrwdt	;clear the watchdog before getting into this loop
  3390  1625                     clrloop0:	
  3391  1625  0180               	clrf	0	;clear RAM location pointed to by FSR
  3392  1626  3101               	addfsr 0,1
  3393  1627  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3394  1628  2E25               	goto	clrloop0	;have we reached the end yet?
  3395  1629  3400               	retlw	0	;all done for this memory range, return
  3396                           
  3397                           	psect	cstackBANK1
  3398  00A0                     __pcstackBANK1:	
  3399  00A0                     vfpfcnvrt@ll:	
  3400                           
  3401                           ; 8 bytes @ 0x0
  3402  00A0                     	ds	8
  3403  00A8                     vfpfcnvrt@llu:	
  3404                           
  3405                           ; 8 bytes @ 0x8
  3406  00A8                     	ds	8
  3407  00B0                     vfpfcnvrt@cp:	
  3408                           
  3409                           ; 2 bytes @ 0x10
  3410  00B0                     	ds	2
  3411  00B2                     vfpfcnvrt@c:	
  3412                           
  3413                           ; 1 bytes @ 0x12
  3414  00B2                     	ds	1
  3415  00B3                     vfpfcnvrt@done:	
  3416                           
  3417                           ; 2 bytes @ 0x13
  3418  00B3                     	ds	2
  3419  00B5                     _vfpfcnvrt$691:	
  3420                           
  3421                           ; 2 bytes @ 0x15
  3422  00B5                     	ds	2
  3423  00B7                     vfpfcnvrt@fp:	
  3424                           
  3425                           ; 1 bytes @ 0x17
  3426  00B7                     	ds	1
  3427  00B8                     ?_sprintf:	
  3428  00B8                     sprintf@s:	
  3429                           ; 2 bytes @ 0x18
  3430                           
  3431                           
  3432                           ; 2 bytes @ 0x18
  3433  00B8                     	ds	2
  3434  00BA                     sprintf@fmt:	
  3435  00BA                     GetNavData@data_type:	
  3436                           ; 2 bytes @ 0x1A
  3437                           
  3438                           
  3439                           ; 7 bytes @ 0x1A
  3440  00BA                     	ds	7
  3441  00C1                     GetNavData@temp_time:	
  3442                           
  3443                           ; 10 bytes @ 0x21
  3444  00C1                     	ds	10
  3445  00CB                     GetNavData@startTime:	
  3446                           
  3447                           ; 4 bytes @ 0x2B
  3448  00CB                     	ds	4
  3449  00CF                     _GetNavData$534:	
  3450                           
  3451                           ; 2 bytes @ 0x2F
  3452  00CF                     	ds	2
  3453  00D1                     _GetNavData$535:	
  3454                           
  3455                           ; 2 bytes @ 0x31
  3456  00D1                     	ds	2
  3457  00D3                     GetNavData@skip:	
  3458                           
  3459                           ; 1 bytes @ 0x33
  3460  00D3                     	ds	1
  3461  00D4                     GetNavData@success:	
  3462                           
  3463                           ; 1 bytes @ 0x34
  3464  00D4                     	ds	1
  3465  00D5                     GetNavData@doParse:	
  3466                           
  3467                           ; 1 bytes @ 0x35
  3468  00D5                     	ds	1
  3469  00D6                     GetNavData@dataFieldType:	
  3470                           
  3471                           ; 2 bytes @ 0x36
  3472  00D6                     	ds	2
  3473  00D8                     GetNavData@dataIndex:	
  3474                           
  3475                           ; 2 bytes @ 0x38
  3476  00D8                     	ds	2
  3477  00DA                     GetNavData@byte:	
  3478                           
  3479                           ; 1 bytes @ 0x3A
  3480  00DA                     	ds	1
  3481  00DB                     ??_main:	
  3482                           
  3483                           ; 1 bytes @ 0x3B
  3484  00DB                     	ds	1
  3485  00DC                     main@id:	
  3486                           
  3487                           ; 2 bytes @ 0x3C
  3488  00DC                     	ds	2
  3489  00DE                     main@i:	
  3490                           
  3491                           ; 2 bytes @ 0x3E
  3492  00DE                     	ds	2
  3493                           
  3494                           	psect	cstackCOMMON
  3495  0070                     __pcstackCOMMON:	
  3496  0070                     ?_PIN_MANAGER_Initialize:	
  3497  0070                     ??_PIN_MANAGER_Initialize:	
  3498                           ; 1 bytes @ 0x0
  3499                           
  3500  0070                     ?_OSCILLATOR_Initialize:	
  3501                           ; 1 bytes @ 0x0
  3502                           
  3503  0070                     ??_OSCILLATOR_Initialize:	
  3504                           ; 1 bytes @ 0x0
  3505                           
  3506  0070                     ?_TMR0_Initialize:	
  3507                           ; 1 bytes @ 0x0
  3508                           
  3509  0070                     ?_EUSART_Initialize:	
  3510                           ; 1 bytes @ 0x0
  3511                           
  3512  0070                     ??_EUSART_Initialize:	
  3513                           ; 1 bytes @ 0x0
  3514                           
  3515  0070                     ?_TMR0_ISR:	
  3516                           ; 1 bytes @ 0x0
  3517                           
  3518  0070                     ??_TMR0_ISR:	
  3519                           ; 1 bytes @ 0x0
  3520                           
  3521  0070                     ?_TMR0_SetInterruptHandler:	
  3522                           ; 1 bytes @ 0x0
  3523                           
  3524  0070                     ?_TMR0_DefaultInterruptHandler:	
  3525                           ; 1 bytes @ 0x0
  3526                           
  3527  0070                     ??_TMR0_DefaultInterruptHandler:	
  3528                           ; 1 bytes @ 0x0
  3529                           
  3530  0070                     ?_SYSTEM_Initialize:	
  3531                           ; 1 bytes @ 0x0
  3532                           
  3533  0070                     ?_EUSART_is_rx_ready:	
  3534                           ; 1 bytes @ 0x0
  3535                           
  3536  0070                     ??_EUSART_is_rx_ready:	
  3537                           ; 1 bytes @ 0x0
  3538                           
  3539  0070                     ?_EUSART_Read:	
  3540                           ; 1 bytes @ 0x0
  3541                           
  3542  0070                     ??_EUSART_Read:	
  3543                           ; 1 bytes @ 0x0
  3544                           
  3545  0070                     ?_EUSART_Write:	
  3546                           ; 1 bytes @ 0x0
  3547                           
  3548  0070                     ??_EUSART_Write:	
  3549                           ; 1 bytes @ 0x0
  3550                           
  3551  0070                     ?_putch:	
  3552                           ; 1 bytes @ 0x0
  3553                           
  3554  0070                     ?_INTERRUPT_InterruptManager:	
  3555                           ; 1 bytes @ 0x0
  3556                           
  3557  0070                     ??_INTERRUPT_InterruptManager:	
  3558                           ; 1 bytes @ 0x0
  3559                           
  3560  0070                     ?_TimerISR:	
  3561                           ; 1 bytes @ 0x0
  3562                           
  3563  0070                     ??_TimerISR:	
  3564                           ; 1 bytes @ 0x0
  3565                           
  3566  0070                     ?_FlashError:	
  3567                           ; 1 bytes @ 0x0
  3568                           
  3569  0070                     ??_FlashError:	
  3570                           ; 1 bytes @ 0x0
  3571                           
  3572  0070                     ?_TransmitBit:	
  3573                           ; 1 bytes @ 0x0
  3574                           
  3575  0070                     ??_TransmitBit:	
  3576                           ; 1 bytes @ 0x0
  3577                           
  3578  0070                     ?_TransmitByte:	
  3579                           ; 1 bytes @ 0x0
  3580                           
  3581  0070                     ?_GPS_SendUBX:	
  3582                           ; 1 bytes @ 0x0
  3583                           
  3584  0070                     ?_GPS_HasAcknowledged:	
  3585                           ; 1 bytes @ 0x0
  3586                           
  3587  0070                     ??_GPS_HasAcknowledged:	
  3588                           ; 1 bytes @ 0x0
  3589                           
  3590  0070                     ?_SetupGPS:	
  3591                           ; 1 bytes @ 0x0
  3592                           
  3593  0070                     ?_SafeSetByte:	
  3594                           ; 1 bytes @ 0x0
  3595                           
  3596  0070                     ?_GetNavData:	
  3597                           ; 1 bytes @ 0x0
  3598                           
  3599  0070                     ?_main:	
  3600                           ; 1 bytes @ 0x0
  3601                           
  3602  0070                     ??___aodiv:	
  3603                           ; 1 bytes @ 0x0
  3604                           
  3605  0070                     ??___aomod:	
  3606                           ; 1 bytes @ 0x0
  3607                           
  3608  0070                     ?_strlen:	
  3609                           ; 1 bytes @ 0x0
  3610                           
  3611  0070                     ?_isupper:	
  3612                           ; 2 bytes @ 0x0
  3613                           
  3614  0070                     ?_isalpha:	
  3615                           ; 2 bytes @ 0x0
  3616                           
  3617  0070                     ?_isdigit:	
  3618                           ; 2 bytes @ 0x0
  3619                           
  3620  0070                     ?_isspace:	
  3621                           ; 2 bytes @ 0x0
  3622                           
  3623  0070                     ?_islower:	
  3624                           ; 2 bytes @ 0x0
  3625                           
  3626  0070                     ?_crc_append_byte:	
  3627                           ; 2 bytes @ 0x0
  3628                           
  3629  0070                     ?_GetLengthUBX:	
  3630                           ; 2 bytes @ 0x0
  3631                           
  3632  0070                     ?___wmul:	
  3633                           ; 2 bytes @ 0x0
  3634                           
  3635  0070                     EUSART_Write@txData:	
  3636                           ; 2 bytes @ 0x0
  3637                           
  3638  0070                     TMR0_SetInterruptHandler@InterruptHandler:	
  3639                           ; 1 bytes @ 0x0
  3640                           
  3641  0070                     crc_append_byte@crc:	
  3642                           ; 2 bytes @ 0x0
  3643                           
  3644  0070                     SafeSetByte@dest:	
  3645                           ; 2 bytes @ 0x0
  3646                           
  3647  0070                     ___wmul@multiplier:	
  3648                           ; 2 bytes @ 0x0
  3649                           
  3650  0070                     isalpha@c:	
  3651                           ; 2 bytes @ 0x0
  3652                           
  3653  0070                     isdigit@c:	
  3654                           ; 2 bytes @ 0x0
  3655                           
  3656  0070                     isspace@c:	
  3657                           ; 2 bytes @ 0x0
  3658                           
  3659  0070                     isupper@c:	
  3660                           ; 2 bytes @ 0x0
  3661                           
  3662  0070                     strlen@s:	
  3663                           ; 2 bytes @ 0x0
  3664                           
  3665  0070                     islower@c:	
  3666                           ; 2 bytes @ 0x0
  3667                           
  3668                           
  3669                           ; 2 bytes @ 0x0
  3670  0070                     	ds	1
  3671  0071                     ??_putch:	
  3672  0071                     putch@txData:	
  3673                           ; 1 bytes @ 0x1
  3674                           
  3675  0071                     TransmitBit@b:	
  3676                           ; 1 bytes @ 0x1
  3677                           
  3678  0071                     ___aodiv@counter:	
  3679                           ; 1 bytes @ 0x1
  3680                           
  3681  0071                     ___aomod@counter:	
  3682                           ; 1 bytes @ 0x1
  3683                           
  3684                           
  3685                           ; 1 bytes @ 0x1
  3686  0071                     	ds	1
  3687  0072                     ??_TMR0_Initialize:	
  3688  0072                     ??_TMR0_SetInterruptHandler:	
  3689                           ; 1 bytes @ 0x2
  3690                           
  3691  0072                     ??_strlen:	
  3692                           ; 1 bytes @ 0x2
  3693                           
  3694  0072                     ??_isupper:	
  3695                           ; 1 bytes @ 0x2
  3696                           
  3697  0072                     ??_isalpha:	
  3698                           ; 1 bytes @ 0x2
  3699                           
  3700  0072                     ??_isdigit:	
  3701                           ; 1 bytes @ 0x2
  3702                           
  3703  0072                     ??_isspace:	
  3704                           ; 1 bytes @ 0x2
  3705                           
  3706  0072                     ??_islower:	
  3707                           ; 1 bytes @ 0x2
  3708                           
  3709  0072                     ??_TransmitByte:	
  3710                           ; 1 bytes @ 0x2
  3711                           
  3712  0072                     ?_fputc:	
  3713                           ; 1 bytes @ 0x2
  3714                           
  3715  0072                     crc_append_byte@data:	
  3716                           ; 2 bytes @ 0x2
  3717                           
  3718  0072                     ___aodiv@sign:	
  3719                           ; 1 bytes @ 0x2
  3720                           
  3721  0072                     ___aomod@sign:	
  3722                           ; 1 bytes @ 0x2
  3723                           
  3724  0072                     FlashError@i:	
  3725                           ; 1 bytes @ 0x2
  3726                           
  3727  0072                     SafeSetByte@length:	
  3728                           ; 2 bytes @ 0x2
  3729                           
  3730  0072                     ___wmul@multiplicand:	
  3731                           ; 2 bytes @ 0x2
  3732                           
  3733  0072                     fputc@c:	
  3734                           ; 2 bytes @ 0x2
  3735                           
  3736  0072                     strlen@a:	
  3737                           ; 2 bytes @ 0x2
  3738                           
  3739                           
  3740                           ; 2 bytes @ 0x2
  3741  0072                     	ds	1
  3742  0073                     ??_SYSTEM_Initialize:	
  3743  0073                     ??_crc_append_byte:	
  3744                           ; 1 bytes @ 0x3
  3745                           
  3746  0073                     ??_GetLengthUBX:	
  3747                           ; 1 bytes @ 0x3
  3748                           
  3749  0073                     ?_abs:	
  3750                           ; 1 bytes @ 0x3
  3751                           
  3752  0073                     TransmitByte@byte:	
  3753                           ; 2 bytes @ 0x3
  3754                           
  3755  0073                     GetLengthUBX@data:	
  3756                           ; 1 bytes @ 0x3
  3757                           
  3758  0073                     abs@a:	
  3759                           ; 1 bytes @ 0x3
  3760                           
  3761  0073                     ___aodiv@quotient:	
  3762                           ; 2 bytes @ 0x3
  3763                           
  3764                           
  3765                           ; 8 bytes @ 0x3
  3766  0073                     	ds	1
  3767  0074                     ?_ClearString:	
  3768  0074                     ?_FindString:	
  3769                           ; 1 bytes @ 0x4
  3770                           
  3771  0074                     ??_GPS_SendUBX:	
  3772                           ; 1 bytes @ 0x4
  3773                           
  3774  0074                     ??___wmul:	
  3775                           ; 1 bytes @ 0x4
  3776                           
  3777  0074                     ?_strcpy:	
  3778                           ; 1 bytes @ 0x4
  3779                           
  3780  0074                     _isspace$1015:	
  3781                           ; 2 bytes @ 0x4
  3782                           
  3783  0074                     fputc@fp:	
  3784                           ; 1 bytes @ 0x4
  3785                           
  3786  0074                     ClearString@str:	
  3787                           ; 1 bytes @ 0x4
  3788                           
  3789  0074                     FindString@srcLen:	
  3790                           ; 2 bytes @ 0x4
  3791                           
  3792  0074                     TransmitByte@i:	
  3793                           ; 2 bytes @ 0x4
  3794                           
  3795  0074                     SafeSetByte@index:	
  3796                           ; 2 bytes @ 0x4
  3797                           
  3798  0074                     ___wmul@product:	
  3799                           ; 2 bytes @ 0x4
  3800                           
  3801  0074                     strcpy@dest:	
  3802                           ; 2 bytes @ 0x4
  3803                           
  3804                           
  3805                           ; 2 bytes @ 0x4
  3806  0074                     	ds	1
  3807  0075                     ??_fputc:	
  3808  0075                     ??_abs:	
  3809                           ; 1 bytes @ 0x5
  3810                           
  3811  0075                     GPS_SendUBX@length:	
  3812                           ; 1 bytes @ 0x5
  3813                           
  3814                           
  3815                           ; 2 bytes @ 0x5
  3816  0075                     	ds	1
  3817  0076                     ??_ClearString:	
  3818  0076                     ?_TransmitString:	
  3819                           ; 1 bytes @ 0x6
  3820                           
  3821  0076                     ?_toupper:	
  3822                           ; 1 bytes @ 0x6
  3823                           
  3824  0076                     ?_atoi:	
  3825                           ; 2 bytes @ 0x6
  3826                           
  3827  0076                     SafeSetByte@data:	
  3828                           ; 2 bytes @ 0x6
  3829                           
  3830  0076                     strcpy@src:	
  3831                           ; 1 bytes @ 0x6
  3832                           
  3833  0076                     FindString@target:	
  3834                           ; 1 bytes @ 0x6
  3835                           
  3836  0076                     crc_append_byte@i:	
  3837                           ; 2 bytes @ 0x6
  3838                           
  3839  0076                     TransmitString@message:	
  3840                           ; 2 bytes @ 0x6
  3841                           
  3842  0076                     atoi@s:	
  3843                           ; 2 bytes @ 0x6
  3844                           
  3845  0076                     toupper@c:	
  3846                           ; 2 bytes @ 0x6
  3847                           
  3848                           
  3849                           ; 2 bytes @ 0x6
  3850  0076                     	ds	1
  3851  0077                     ??_strcpy:	
  3852  0077                     ??_SafeSetByte:	
  3853                           ; 1 bytes @ 0x7
  3854                           
  3855  0077                     ClearString@counti:	
  3856                           ; 1 bytes @ 0x7
  3857                           
  3858  0077                     GPS_SendUBX@i:	
  3859                           ; 2 bytes @ 0x7
  3860                           
  3861                           
  3862                           ; 2 bytes @ 0x7
  3863  0077                     	ds	1
  3864  0078                     ??_toupper:	
  3865  0078                     ??_atoi:	
  3866                           ; 1 bytes @ 0x8
  3867                           
  3868  0078                     ??_TransmitString:	
  3869                           ; 1 bytes @ 0x8
  3870                           
  3871  0078                     ?_crc16:	
  3872                           ; 1 bytes @ 0x8
  3873                           
  3874  0078                     FindString@targetLen:	
  3875                           ; 2 bytes @ 0x8
  3876                           
  3877  0078                     crc16@segments:	
  3878                           ; 2 bytes @ 0x8
  3879                           
  3880                           
  3881                           ; 2 bytes @ 0x8
  3882  0078                     	ds	1
  3883  0079                     GPS_SendUBX@data:	
  3884  0079                     ClearString@i:	
  3885                           ; 1 bytes @ 0x9
  3886                           
  3887  0079                     TransmitString@counti:	
  3888                           ; 2 bytes @ 0x9
  3889                           
  3890  0079                     strcpy@d:	
  3891                           ; 2 bytes @ 0x9
  3892                           
  3893                           
  3894                           ; 2 bytes @ 0x9
  3895  0079                     	ds	1
  3896  007A                     ??_FindString:	
  3897  007A                     ??_crc16:	
  3898                           ; 1 bytes @ 0xA
  3899                           
  3900  007A                     ?_fputs:	
  3901                           ; 1 bytes @ 0xA
  3902                           
  3903  007A                     ?_stoa:	
  3904                           ; 2 bytes @ 0xA
  3905                           
  3906  007A                     fputs@fp:	
  3907                           ; 2 bytes @ 0xA
  3908                           
  3909  007A                     stoa@s:	
  3910                           ; 1 bytes @ 0xA
  3911                           
  3912                           
  3913                           ; 2 bytes @ 0xA
  3914  007A                     	ds	1
  3915  007B                     ??_fputs:	
  3916  007B                     strcpy@s:	
  3917                           ; 1 bytes @ 0xB
  3918                           
  3919  007B                     TransmitString@i:	
  3920                           ; 1 bytes @ 0xB
  3921                           
  3922                           
  3923                           ; 2 bytes @ 0xB
  3924  007B                     	ds	1
  3925  007C                     ??_strcat:	
  3926  007C                     _toupper$1115:	
  3927                           ; 1 bytes @ 0xC
  3928                           
  3929                           
  3930                           ; 2 bytes @ 0xC
  3931  007C                     	ds	2
  3932                           
  3933                           	psect	cstackBANK0
  3934  0020                     __pcstackBANK0:	
  3935  0020                     ??_stoa:	
  3936  0020                     ?_strcat:	
  3937                           ; 1 bytes @ 0x0
  3938                           
  3939  0020                     ?___aodiv:	
  3940                           ; 2 bytes @ 0x0
  3941                           
  3942  0020                     ?___aomod:	
  3943                           ; 8 bytes @ 0x0
  3944                           
  3945  0020                     FindString@src:	
  3946                           ; 8 bytes @ 0x0
  3947                           
  3948  0020                     fputs@c:	
  3949                           ; 1 bytes @ 0x0
  3950                           
  3951  0020                     crc16@len:	
  3952                           ; 1 bytes @ 0x0
  3953                           
  3954  0020                     atoi@neg:	
  3955                           ; 2 bytes @ 0x0
  3956                           
  3957  0020                     strcat@dest:	
  3958                           ; 2 bytes @ 0x0
  3959                           
  3960  0020                     GPS_HasAcknowledged@startTime:	
  3961                           ; 2 bytes @ 0x0
  3962                           
  3963  0020                     ___aodiv@divisor:	
  3964                           ; 4 bytes @ 0x0
  3965                           
  3966  0020                     ___aomod@divisor:	
  3967                           ; 8 bytes @ 0x0
  3968                           
  3969                           
  3970                           ; 8 bytes @ 0x0
  3971  0020                     	ds	1
  3972  0021                     FindString@i:	
  3973  0021                     fputs@i:	
  3974                           ; 2 bytes @ 0x1
  3975                           
  3976                           
  3977                           ; 2 bytes @ 0x1
  3978  0021                     	ds	1
  3979  0022                     crc16@data:	
  3980  0022                     strcat@src:	
  3981                           ; 1 bytes @ 0x2
  3982                           
  3983  0022                     _atoi$988:	
  3984                           ; 1 bytes @ 0x2
  3985                           
  3986                           
  3987                           ; 2 bytes @ 0x2
  3988  0022                     	ds	1
  3989  0023                     crc16@c:	
  3990  0023                     fputs@s:	
  3991                           ; 1 bytes @ 0x3
  3992                           
  3993  0023                     FindString@matching:	
  3994                           ; 1 bytes @ 0x3
  3995                           
  3996  0023                     stoa@nuls:	
  3997                           ; 2 bytes @ 0x3
  3998                           
  3999                           
  4000                           ; 7 bytes @ 0x3
  4001  0023                     	ds	1
  4002  0024                     ?_pad:	
  4003  0024                     GPS_HasAcknowledged@ackByte:	
  4004                           ; 2 bytes @ 0x4
  4005                           
  4006  0024                     pad@buf:	
  4007                           ; 1 bytes @ 0x4
  4008                           
  4009  0024                     crc16@crc:	
  4010                           ; 1 bytes @ 0x4
  4011                           
  4012  0024                     _atoi$990:	
  4013                           ; 2 bytes @ 0x4
  4014                           
  4015                           
  4016                           ; 2 bytes @ 0x4
  4017  0024                     	ds	1
  4018  0025                     pad@p:	
  4019  0025                     GPS_HasAcknowledged@ackPacket:	
  4020                           ; 2 bytes @ 0x5
  4021                           
  4022                           
  4023                           ; 10 bytes @ 0x5
  4024  0025                     	ds	1
  4025  0026                     _atoi$989:	
  4026  0026                     crc16@str:	
  4027                           ; 1 bytes @ 0x6
  4028                           
  4029                           
  4030                           ; 2 bytes @ 0x6
  4031  0026                     	ds	1
  4032  0027                     ??_pad:	
  4033  0027                     atoi@n:	
  4034                           ; 1 bytes @ 0x7
  4035                           
  4036                           
  4037                           ; 2 bytes @ 0x7
  4038  0027                     	ds	1
  4039  0028                     crc16@string:	
  4040  0028                     pad@i:	
  4041                           ; 2 bytes @ 0x8
  4042                           
  4043  0028                     ___aodiv@dividend:	
  4044                           ; 2 bytes @ 0x8
  4045                           
  4046  0028                     ___aomod@dividend:	
  4047                           ; 8 bytes @ 0x8
  4048                           
  4049                           
  4050                           ; 8 bytes @ 0x8
  4051  0028                     	ds	2
  4052  002A                     crc16@i:	
  4053  002A                     pad@w:	
  4054                           ; 2 bytes @ 0xA
  4055                           
  4056  002A                     stoa@i:	
  4057                           ; 2 bytes @ 0xA
  4058                           
  4059                           
  4060                           ; 2 bytes @ 0xA
  4061  002A                     	ds	2
  4062  002C                     pad@fp:	
  4063  002C                     stoa@w:	
  4064                           ; 1 bytes @ 0xC
  4065                           
  4066                           
  4067                           ; 2 bytes @ 0xC
  4068  002C                     	ds	1
  4069  002D                     ?_xtoa:	
  4070  002D                     xtoa@d:	
  4071                           ; 2 bytes @ 0xD
  4072                           
  4073                           
  4074                           ; 8 bytes @ 0xD
  4075  002D                     	ds	1
  4076  002E                     stoa@fp:	
  4077                           
  4078                           ; 1 bytes @ 0xE
  4079  002E                     	ds	1
  4080  002F                     GPS_HasAcknowledged@data:	
  4081  002F                     stoa@cp:	
  4082                           ; 1 bytes @ 0xF
  4083                           
  4084                           
  4085                           ; 2 bytes @ 0xF
  4086  002F                     	ds	1
  4087  0030                     ?_dtoa:	
  4088  0030                     GPS_HasAcknowledged@ackByteID:	
  4089                           ; 2 bytes @ 0x10
  4090                           
  4091  0030                     dtoa@d:	
  4092                           ; 1 bytes @ 0x10
  4093                           
  4094                           
  4095                           ; 8 bytes @ 0x10
  4096  0030                     	ds	1
  4097  0031                     GPS_HasAcknowledged@i:	
  4098  0031                     stoa@p:	
  4099                           ; 1 bytes @ 0x11
  4100                           
  4101                           
  4102                           ; 2 bytes @ 0x11
  4103  0031                     	ds	2
  4104  0033                     stoa@l:	
  4105                           
  4106                           ; 2 bytes @ 0x13
  4107  0033                     	ds	2
  4108  0035                     xtoa@x:	
  4109                           
  4110                           ; 1 bytes @ 0x15
  4111  0035                     	ds	1
  4112  0036                     ??_xtoa:	
  4113                           
  4114                           ; 1 bytes @ 0x16
  4115  0036                     	ds	2
  4116  0038                     ??_dtoa:	
  4117                           
  4118                           ; 1 bytes @ 0x18
  4119  0038                     	ds	3
  4120  003B                     dtoa@fp:	
  4121                           
  4122                           ; 1 bytes @ 0x1B
  4123  003B                     	ds	1
  4124  003C                     _dtoa$654:	
  4125                           
  4126                           ; 2 bytes @ 0x1C
  4127  003C                     	ds	2
  4128  003E                     xtoa@fp:	
  4129  003E                     dtoa@p:	
  4130                           ; 1 bytes @ 0x1E
  4131                           
  4132                           
  4133                           ; 2 bytes @ 0x1E
  4134  003E                     	ds	1
  4135  003F                     _xtoa$676:	
  4136                           
  4137                           ; 2 bytes @ 0x1F
  4138  003F                     	ds	1
  4139  0040                     dtoa@w:	
  4140                           
  4141                           ; 2 bytes @ 0x20
  4142  0040                     	ds	1
  4143  0041                     _xtoa$677:	
  4144                           
  4145                           ; 2 bytes @ 0x21
  4146  0041                     	ds	1
  4147  0042                     dtoa@s:	
  4148                           
  4149                           ; 2 bytes @ 0x22
  4150  0042                     	ds	1
  4151  0043                     xtoa@p:	
  4152                           
  4153                           ; 2 bytes @ 0x23
  4154  0043                     	ds	1
  4155  0044                     dtoa@n:	
  4156                           
  4157                           ; 8 bytes @ 0x24
  4158  0044                     	ds	1
  4159  0045                     xtoa@w:	
  4160                           
  4161                           ; 2 bytes @ 0x25
  4162  0045                     	ds	2
  4163  0047                     xtoa@n:	
  4164                           
  4165                           ; 8 bytes @ 0x27
  4166  0047                     	ds	5
  4167  004C                     dtoa@i:	
  4168                           
  4169                           ; 2 bytes @ 0x2C
  4170  004C                     	ds	3
  4171  004F                     xtoa@i:	
  4172                           
  4173                           ; 2 bytes @ 0x2F
  4174  004F                     	ds	2
  4175  0051                     xtoa@c:	
  4176                           
  4177                           ; 2 bytes @ 0x31
  4178  0051                     	ds	2
  4179  0053                     ?_vfpfcnvrt:	
  4180  0053                     vfpfcnvrt@fmt:	
  4181                           ; 2 bytes @ 0x33
  4182                           
  4183                           
  4184                           ; 1 bytes @ 0x33
  4185  0053                     	ds	1
  4186  0054                     vfpfcnvrt@ap:	
  4187                           
  4188                           ; 1 bytes @ 0x34
  4189  0054                     	ds	1
  4190  0055                     ??_vfpfcnvrt:	
  4191                           
  4192                           ; 1 bytes @ 0x35
  4193  0055                     	ds	6
  4194  005B                     ?_vfprintf:	
  4195  005B                     vfprintf@fmt:	
  4196                           ; 2 bytes @ 0x3B
  4197                           
  4198                           
  4199                           ; 2 bytes @ 0x3B
  4200  005B                     	ds	2
  4201  005D                     vfprintf@ap:	
  4202                           
  4203                           ; 1 bytes @ 0x3D
  4204  005D                     	ds	1
  4205  005E                     ??_vfprintf:	
  4206                           
  4207                           ; 1 bytes @ 0x3E
  4208  005E                     	ds	2
  4209  0060                     vfprintf@fp:	
  4210                           
  4211                           ; 1 bytes @ 0x40
  4212  0060                     	ds	1
  4213  0061                     vfprintf@cfmt:	
  4214                           
  4215                           ; 2 bytes @ 0x41
  4216  0061                     	ds	2
  4217  0063                     ??_sprintf:	
  4218  0063                     ?_printf:	
  4219                           ; 1 bytes @ 0x43
  4220                           
  4221  0063                     printf@fmt:	
  4222                           ; 2 bytes @ 0x43
  4223                           
  4224                           
  4225                           ; 2 bytes @ 0x43
  4226  0063                     	ds	2
  4227  0065                     ??_printf:	
  4228                           
  4229                           ; 1 bytes @ 0x45
  4230  0065                     	ds	1
  4231  0066                     sprintf@ap:	
  4232                           
  4233                           ; 1 bytes @ 0x46
  4234  0066                     	ds	1
  4235  0067                     sprintf@f:	
  4236                           
  4237                           ; 6 bytes @ 0x47
  4238  0067                     	ds	1
  4239  0068                     printf@ap:	
  4240                           
  4241                           ; 1 bytes @ 0x48
  4242  0068                     	ds	1
  4243  0069                     ??_SetupGPS:	
  4244  0069                     ??_GetNavData:	
  4245                           ; 1 bytes @ 0x49
  4246                           
  4247                           
  4248                           ; 1 bytes @ 0x49
  4249  0069                     	ds	4
  4250                           
  4251                           	psect	maintext
  4252  0D63                     __pmaintext:	
  4253 ;;
  4254 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  4255 ;;
  4256 ;; *************** function _main *****************
  4257 ;; Defined at:
  4258 ;;		line 595 in file "main.c"
  4259 ;; Parameters:    Size  Location     Type
  4260 ;;		None
  4261 ;; Auto vars:     Size  Location     Type
  4262 ;;  i               2   62[BANK1 ] int 
  4263 ;;  id              2   60[BANK1 ] int 
  4264 ;; Return value:  Size  Location     Type
  4265 ;;                  1    wreg      void 
  4266 ;; Registers used:
  4267 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4268 ;; Tracked objects:
  4269 ;;		On entry : B1F/0
  4270 ;;		On exit  : 0/0
  4271 ;;		Unchanged: 0/0
  4272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4274 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  4275 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  4276 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  4277 ;;Total ram usage:        5 bytes
  4278 ;; Hardware stack levels required when called:   13
  4279 ;; This function calls:
  4280 ;;		_ClearString
  4281 ;;		_FlashError
  4282 ;;		_GetNavData
  4283 ;;		_SYSTEM_Initialize
  4284 ;;		_SetupGPS
  4285 ;;		_TMR0_SetInterruptHandler
  4286 ;;		_TransmitString
  4287 ;;		_crc16
  4288 ;;		_sprintf
  4289 ;;		_strcat
  4290 ;; This function is called by:
  4291 ;;		Startup code after reset
  4292 ;; This function uses a non-reentrant model
  4293 ;;
  4294                           
  4295                           
  4296                           ;psect for function _main
  4297  0D63                     _main:	
  4298                           
  4299                           ;main.c: 597:     SYSTEM_Initialize();
  4300                           
  4301                           ;incstack = 0
  4302                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4303  0D63  3196  2665  318D   	fcall	_SYSTEM_Initialize
  4304                           
  4305                           ;main.c: 598:     (INTCONbits.GIE = 1);
  4306  0D66  178B               	bsf	11,7	;volatile
  4307                           
  4308                           ;main.c: 599:     TMR0_SetInterruptHandler(TimerISR);
  4309  0D67  3046               	movlw	low _TimerISR
  4310  0D68  00F0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  4311  0D69  3016               	movlw	high _TimerISR
  4312  0D6A  00F1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  4313  0D6B  3196  261E  318D   	fcall	_TMR0_SetInterruptHandler
  4314                           
  4315                           ;main.c: 601:     SetupGPS();
  4316  0D6E  318A  22AD  318D   	fcall	_SetupGPS
  4317                           
  4318                           ;main.c: 603:     int id = 0;
  4319  0D71  0021               	movlb	1	; select bank1
  4320  0D72  01DC               	clrf	main@id^(0+128)
  4321  0D73  01DD               	clrf	(main@id+1)^(0+128)
  4322  0D74                     l4154:	
  4323                           
  4324                           ;main.c: 605:     {;main.c: 606:         ClearString(messages[0]);
  4325  0D74  0021               	movlb	1	; select bank1
  4326  0D75  0869               	movf	(_messages+1)^(0+128),w
  4327  0D76  00F5               	movwf	ClearString@str+1
  4328  0D77  0868               	movf	_messages^(0+128),w
  4329  0D78  00F4               	movwf	ClearString@str
  4330  0D79  3197  27B5  318D   	fcall	_ClearString
  4331                           
  4332                           ;main.c: 607:         ClearString(messages[1]);
  4333  0D7C  0021               	movlb	1	; select bank1
  4334  0D7D  086B               	movf	((low ((_messages| 0+2))+1))^(0+128),w
  4335  0D7E  00F5               	movwf	ClearString@str+1
  4336  0D7F  086A               	movf	(low ((_messages| 0+2)))^(0+128),w
  4337  0D80  00F4               	movwf	ClearString@str
  4338  0D81  3197  27B5  318D   	fcall	_ClearString
  4339                           
  4340                           ;main.c: 608:         if (GetNavData())
  4341  0D84  3180  2069  318D   	fcall	_GetNavData
  4342  0D87  3A00               	xorlw	0
  4343  0D88  1903               	skipnz
  4344  0D89  2E12               	goto	l4172
  4345                           
  4346                           ;main.c: 609:         {;main.c: 612:             sprintf(messages[0], "$$TEST,%d,%s,%s,%
      +                          s,%s,",
  4347  0D8A  0021               	movlb	1	; select bank1
  4348  0D8B  0869               	movf	(_messages+1)^(0+128),w
  4349  0D8C  00B9               	movwf	(sprintf@s+1)^(0+128)
  4350  0D8D  0868               	movf	_messages^(0+128),w
  4351  0D8E  00B8               	movwf	sprintf@s^(0+128)
  4352  0D8F  309C               	movlw	low (STR_10| (0+32768))
  4353  0D90  00BA               	movwf	sprintf@fmt^(0+128)
  4354  0D91  3098               	movlw	high (STR_10| (0+32768))
  4355  0D92  00BB               	movwf	(sprintf@fmt^(0+128)+1)
  4356  0D93  085D               	movf	(main@id+1)^(0+128),w
  4357  0D94  00BD               	movwf	((?_sprintf+1)^(0+128)+4)
  4358  0D95  085C               	movf	main@id^(0+128),w
  4359  0D96  00BC               	movwf	(?_sprintf^(0+128)+4)
  4360  0D97  3040               	movlw	low _gps_time
  4361  0D98  00BE               	movwf	(low ((?_sprintf| 0+6)))^(0+128)
  4362  0D99  3001               	movlw	high _gps_time
  4363  0D9A  00BF               	movwf	((low ((?_sprintf| 0+6))+1))^(0+128)
  4364  0D9B  30C1               	movlw	low _gps_latitude
  4365  0D9C  00C0               	movwf	(low ((?_sprintf| 0+8)))^(0+128)
  4366  0D9D  3001               	movlw	high _gps_latitude
  4367  0D9E  00C1               	movwf	((low ((?_sprintf| 0+8))+1))^(0+128)
  4368  0D9F  30B1               	movlw	low _gps_longitude
  4369  0DA0  00C2               	movwf	(low ((?_sprintf| 0+10)))^(0+128)
  4370  0DA1  3001               	movlw	high _gps_longitude
  4371  0DA2  00C3               	movwf	((low ((?_sprintf| 0+10))+1))^(0+128)
  4372  0DA3  30D1               	movlw	low _gps_altitude
  4373  0DA4  00C4               	movwf	(low ((?_sprintf| 0+12)))^(0+128)
  4374  0DA5  3001               	movlw	high _gps_altitude
  4375  0DA6  00C5               	movwf	((low ((?_sprintf| 0+12))+1))^(0+128)
  4376  0DA7  3189  2149  318D   	fcall	_sprintf
  4377                           
  4378                           ;main.c: 616:             sprintf(messages[1], "%s,%s,%s,%s,%s,%s",
  4379  0DAA  0021               	movlb	1	; select bank1
  4380  0DAB  086B               	movf	((low ((_messages| 0+2))+1))^(0+128),w
  4381  0DAC  00B9               	movwf	(sprintf@s+1)^(0+128)
  4382  0DAD  086A               	movf	(low ((_messages| 0+2)))^(0+128),w
  4383  0DAE  00B8               	movwf	sprintf@s^(0+128)
  4384  0DAF  30B3               	movlw	low (STR_11| (0+32768))
  4385  0DB0  00BA               	movwf	sprintf@fmt^(0+128)
  4386  0DB1  3098               	movlw	high (STR_11| (0+32768))
  4387  0DB2  00BB               	movwf	(sprintf@fmt^(0+128)+1)
  4388  0DB3  3036               	movlw	low _gps_speed_over_ground
  4389  0DB4  00BC               	movwf	(low ((?_sprintf| 0+4)))^(0+128)
  4390  0DB5  3001               	movlw	high _gps_speed_over_ground
  4391  0DB6  00BD               	movwf	((low ((?_sprintf| 0+4))+1))^(0+128)
  4392  0DB7  302C               	movlw	low _gps_course_over_ground
  4393  0DB8  00BE               	movwf	(low ((?_sprintf| 0+6)))^(0+128)
  4394  0DB9  3001               	movlw	high _gps_course_over_ground
  4395  0DBA  00BF               	movwf	((low ((?_sprintf| 0+6))+1))^(0+128)
  4396  0DBB  3022               	movlw	low _gps_vertical_velocity
  4397  0DBC  00C0               	movwf	(low ((?_sprintf| 0+8)))^(0+128)
  4398  0DBD  3001               	movlw	high _gps_vertical_velocity
  4399  0DBE  00C1               	movwf	((low ((?_sprintf| 0+8))+1))^(0+128)
  4400  0DBF  3060               	movlw	low _gps_nav_status
  4401  0DC0  00C2               	movwf	(low ((?_sprintf| 0+10)))^(0+128)
  4402  0DC1  3001               	movlw	high _gps_nav_status
  4403  0DC2  00C3               	movwf	((low ((?_sprintf| 0+10))+1))^(0+128)
  4404  0DC3  3052               	movlw	low _gps_hdop
  4405  0DC4  00C4               	movwf	(low ((?_sprintf| 0+12)))^(0+128)
  4406  0DC5  3001               	movlw	high _gps_hdop
  4407  0DC6  00C5               	movwf	((low ((?_sprintf| 0+12))+1))^(0+128)
  4408  0DC7  304A               	movlw	low _gps_vdop
  4409  0DC8  00C6               	movwf	(low ((?_sprintf| 0+14)))^(0+128)
  4410  0DC9  3001               	movlw	high _gps_vdop
  4411  0DCA  00C7               	movwf	((low ((?_sprintf| 0+14))+1))^(0+128)
  4412  0DCB  3189  2149  318D   	fcall	_sprintf
  4413                           
  4414                           ;main.c: 621:             sprintf(checksum, "*%04X\n", crc16(messages, 2));
  4415  0DCE  305A               	movlw	low _checksum
  4416  0DCF  0021               	movlb	1	; select bank1
  4417  0DD0  00B8               	movwf	sprintf@s^(0+128)
  4418  0DD1  3001               	movlw	high _checksum
  4419  0DD2  00B9               	movwf	(sprintf@s+1)^(0+128)
  4420  0DD3  30D3               	movlw	low (STR_12| (0+32768))
  4421  0DD4  00BA               	movwf	sprintf@fmt^(0+128)
  4422  0DD5  3098               	movlw	high (STR_12| (0+32768))
  4423  0DD6  00BB               	movwf	(sprintf@fmt^(0+128)+1)
  4424  0DD7  3002               	movlw	2
  4425  0DD8  00F8               	movwf	crc16@segments
  4426  0DD9  3000               	movlw	0
  4427  0DDA  00F9               	movwf	crc16@segments+1
  4428  0DDB  30E8               	movlw	(low (_messages| 0))& (0+255)
  4429  0DDC  318A  22FF  318D   	fcall	_crc16
  4430  0DDF  0879               	movf	?_crc16+1,w
  4431  0DE0  0021               	movlb	1	; select bank1
  4432  0DE1  00BD               	movwf	((?_sprintf+1)^(0+128)+4)
  4433  0DE2  0878               	movf	?_crc16,w
  4434  0DE3  00BC               	movwf	(?_sprintf^(0+128)+4)
  4435  0DE4  3189  2149  318D   	fcall	_sprintf
  4436                           
  4437                           ;main.c: 622:             strcat(messages[1], checksum);
  4438  0DE7  0021               	movlb	1	; select bank1
  4439  0DE8  086B               	movf	((low ((_messages| 0+2))+1))^(0+128),w
  4440  0DE9  0020               	movlb	0	; select bank0
  4441  0DEA  00A1               	movwf	strcat@dest+1
  4442  0DEB  0021               	movlb	1	; select bank1
  4443  0DEC  086A               	movf	(low ((_messages| 0+2)))^(0+128),w
  4444  0DED  0020               	movlb	0	; select bank0
  4445  0DEE  00A0               	movwf	strcat@dest
  4446  0DEF  305A               	movlw	(low (_checksum| (0+256)))& (0+255)
  4447  0DF0  0021               	movlb	1	; select bank1
  4448  0DF1  00DB               	movwf	??_main^(0+128)
  4449  0DF2  085B               	movf	??_main^(0+128),w
  4450  0DF3  0020               	movlb	0	; select bank0
  4451  0DF4  00A2               	movwf	strcat@src
  4452  0DF5  3196  26BA  318D   	fcall	_strcat
  4453                           
  4454                           ;main.c: 623:             id++;
  4455  0DF8  3001               	movlw	1
  4456  0DF9  0021               	movlb	1	; select bank1
  4457  0DFA  07DC               	addwf	main@id^(0+128),f
  4458  0DFB  3000               	movlw	0
  4459  0DFC  3DDD               	addwfc	(main@id+1)^(0+128),f
  4460  0DFD  0022               	movlb	2	; select bank2
  4461  0DFE  150C               	bsf	12,2	;volatile
  4462                           
  4463                           ;main.c: 627:             TransmitString(messages[0]);
  4464  0DFF  0021               	movlb	1	; select bank1
  4465  0E00  0869               	movf	(_messages+1)^(0+128),w
  4466  0E01  00F7               	movwf	TransmitString@message+1
  4467  0E02  0868               	movf	_messages^(0+128),w
  4468  0E03  00F6               	movwf	TransmitString@message
  4469  0E04  3188  2049  318D   	fcall	_TransmitString
  4470                           
  4471                           ;main.c: 628:             TransmitString(messages[1]);
  4472  0E07  0021               	movlb	1	; select bank1
  4473  0E08  086B               	movf	((low ((_messages| 0+2))+1))^(0+128),w
  4474  0E09  00F7               	movwf	TransmitString@message+1
  4475  0E0A  086A               	movf	(low ((_messages| 0+2)))^(0+128),w
  4476  0E0B  00F6               	movwf	TransmitString@message
  4477  0E0C  3188  2049  318D   	fcall	_TransmitString
  4478  0E0F  0022               	movlb	2	; select bank2
  4479  0E10  110C               	bcf	12,2	;volatile
  4480  0E11  2E15               	goto	l4174
  4481  0E12                     l4172:	
  4482                           
  4483                           ;main.c: 632:         {;main.c: 634:             FlashError();
  4484  0E12  3188  20C4  318D   	fcall	_FlashError
  4485  0E15                     l4174:	
  4486                           
  4487                           ;main.c: 637:         for (int i = 0; i < DELAY_MULT; i++)
  4488  0E15  0021               	movlb	1	; select bank1
  4489  0E16  01DE               	clrf	main@i^(0+128)
  4490  0E17  01DF               	clrf	(main@i+1)^(0+128)
  4491  0E18                     l4180:	
  4492                           
  4493                           ;main.c: 638:         {;main.c: 639:             _delay((unsigned long)((MESSAGE_INTERVA
      +                          L)*(4000000/4000.0)));
  4494  0E18  3007               	movlw	7
  4495  0E19  0021               	movlb	1	; select bank1
  4496  0E1A  00DB               	movwf	??_main^(0+128)
  4497  0E1B  307D               	movlw	125
  4498  0E1C                     u4117:	
  4499  0E1C  0B89               	decfsz	9,f
  4500  0E1D  2E1C               	goto	u4117
  4501  0E1E  0BDB               	decfsz	??_main^(0+128),f
  4502  0E1F  2E1C               	goto	u4117
  4503                           
  4504                           ;main.c: 640:         }
  4505  0E20  3001               	movlw	1
  4506  0E21  0021               	movlb	1	; select bank1
  4507  0E22  07DE               	addwf	main@i^(0+128),f
  4508  0E23  3000               	movlw	0
  4509  0E24  3DDF               	addwfc	(main@i+1)^(0+128),f
  4510  0E25  085F               	movf	(main@i+1)^(0+128),w
  4511  0E26  3A80               	xorlw	128
  4512  0E27  00DB               	movwf	??_main^(0+128)
  4513  0E28  3083               	movlw	131
  4514  0E29  025B               	subwf	??_main^(0+128),w
  4515  0E2A  1D03               	skipz
  4516  0E2B  2E2E               	goto	u4105
  4517  0E2C  30E8               	movlw	232
  4518  0E2D  025E               	subwf	main@i^(0+128),w
  4519  0E2E                     u4105:	
  4520  0E2E  1803               	btfsc	3,0
  4521  0E2F  2D74               	goto	l4154
  4522  0E30  2E18               	goto	l4180
  4523  0E31                     __end_of_main:	
  4524                           
  4525                           	psect	text1
  4526  16BA                     __ptext1:	
  4527 ;; *************** function _strcat *****************
  4528 ;; Defined at:
  4529 ;;		line 3 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\strcat.c"
  4530 ;; Parameters:    Size  Location     Type
  4531 ;;  dest            2    0[BANK0 ] PTR unsigned char 
  4532 ;;		 -> message_end(73), message_start(70), 
  4533 ;;  src             1    2[BANK0 ] PTR const unsigned char 
  4534 ;;		 -> checksum(6), 
  4535 ;; Auto vars:     Size  Location     Type
  4536 ;;		None
  4537 ;; Return value:  Size  Location     Type
  4538 ;;                  2    0[BANK0 ] PTR unsigned char 
  4539 ;; Registers used:
  4540 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4541 ;; Tracked objects:
  4542 ;;		On entry : 0/0
  4543 ;;		On exit  : 0/0
  4544 ;;		Unchanged: 0/0
  4545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4546 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4548 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4549 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4550 ;;Total ram usage:        4 bytes
  4551 ;; Hardware stack levels used:    1
  4552 ;; Hardware stack levels required when called:    4
  4553 ;; This function calls:
  4554 ;;		_strcpy
  4555 ;;		_strlen
  4556 ;; This function is called by:
  4557 ;;		_main
  4558 ;; This function uses a non-reentrant model
  4559 ;;
  4560                           
  4561                           
  4562                           ;psect for function _strcat
  4563  16BA                     _strcat:	
  4564                           
  4565                           ;incstack = 0
  4566                           ; Regs used in _strcat: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4567  16BA  0020               	movlb	0	; select bank0
  4568  16BB  0821               	movf	strcat@dest+1,w
  4569  16BC  00F1               	movwf	strlen@s+1
  4570  16BD  0820               	movf	strcat@dest,w
  4571  16BE  00F0               	movwf	strlen@s
  4572  16BF  3196  26D0  3196   	fcall	_strlen
  4573  16C2  0870               	movf	?_strlen,w
  4574  16C3  0020               	movlb	0	; select bank0
  4575  16C4  0720               	addwf	strcat@dest,w
  4576  16C5  00F4               	movwf	strcpy@dest
  4577  16C6  0871               	movf	?_strlen+1,w
  4578  16C7  3D21               	addwfc	strcat@dest+1,w
  4579  16C8  00F5               	movwf	strcpy@dest+1
  4580  16C9  0822               	movf	strcat@src,w
  4581  16CA  00FC               	movwf	??_strcat
  4582  16CB  087C               	movf	??_strcat,w
  4583  16CC  00F6               	movwf	strcpy@src
  4584  16CD  3197  2797         	fcall	_strcpy
  4585  16CF  0008               	return
  4586  16D0                     __end_of_strcat:	
  4587                           
  4588                           	psect	text2
  4589  1797                     __ptext2:	
  4590 ;; *************** function _strcpy *****************
  4591 ;; Defined at:
  4592 ;;		line 7 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\strcpy.c"
  4593 ;; Parameters:    Size  Location     Type
  4594 ;;  dest            2    4[COMMON] PTR unsigned char 
  4595 ;;		 -> message_end(73), message_start(70), 
  4596 ;;  src             1    6[COMMON] PTR const unsigned char 
  4597 ;;		 -> checksum(6), 
  4598 ;; Auto vars:     Size  Location     Type
  4599 ;;  d               2    9[COMMON] PTR unsigned char 
  4600 ;;		 -> message_end(73), message_start(70), 
  4601 ;;  s               1   11[COMMON] PTR const unsigned char 
  4602 ;;		 -> checksum(6), 
  4603 ;; Return value:  Size  Location     Type
  4604 ;;                  2    4[COMMON] PTR unsigned char 
  4605 ;; Registers used:
  4606 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  4607 ;; Tracked objects:
  4608 ;;		On entry : 0/0
  4609 ;;		On exit  : 0/0
  4610 ;;		Unchanged: 0/0
  4611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4612 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4613 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4614 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4615 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4616 ;;Total ram usage:        8 bytes
  4617 ;; Hardware stack levels used:    1
  4618 ;; Hardware stack levels required when called:    3
  4619 ;; This function calls:
  4620 ;;		Nothing
  4621 ;; This function is called by:
  4622 ;;		_strcat
  4623 ;; This function uses a non-reentrant model
  4624 ;;
  4625                           
  4626                           
  4627                           ;psect for function _strcpy
  4628  1797                     _strcpy:	
  4629                           
  4630                           ;incstack = 0
  4631                           ; Regs used in _strcpy: [wreg-fsr1h+status,2+status,0]
  4632  1797  0876               	movf	strcpy@src,w
  4633  1798  00F7               	movwf	??_strcpy
  4634  1799  0877               	movf	??_strcpy,w
  4635  179A  00FB               	movwf	strcpy@s
  4636  179B  0875               	movf	strcpy@dest+1,w
  4637  179C  00FA               	movwf	strcpy@d+1
  4638  179D  0874               	movf	strcpy@dest,w
  4639  179E  00F9               	movwf	strcpy@d
  4640  179F                     l3910:	
  4641  179F  087A               	movf	strcpy@d+1,w
  4642  17A0  00F8               	movwf	??_strcpy+1
  4643  17A1  0879               	movf	strcpy@d,w
  4644  17A2  00F7               	movwf	??_strcpy
  4645  17A3  0AF9               	incf	strcpy@d,f
  4646  17A4  1903               	skipnz
  4647  17A5  0AFA               	incf	strcpy@d+1,f
  4648  17A6  0877               	movf	??_strcpy,w
  4649  17A7  0086               	movwf	6
  4650  17A8  0878               	movf	??_strcpy+1,w
  4651  17A9  0087               	movwf	7
  4652  17AA  087B               	movf	strcpy@s,w
  4653  17AB  0084               	movwf	4
  4654  17AC  3001               	movlw	1	; select bank2/3
  4655  17AD  0085               	movwf	5
  4656  17AE  0AFB               	incf	strcpy@s,f
  4657  17AF  0800               	movf	0,w
  4658  17B0  3FC0               	movwi [0]fsr1
  4659  17B1  0889               	movf	9,f
  4660  17B2  1903               	btfsc	3,2
  4661  17B3  0008               	return
  4662  17B4  2F9F               	goto	l3910
  4663  17B5                     __end_of_strcpy:	
  4664                           
  4665                           	psect	text3
  4666  0949                     __ptext3:	
  4667 ;; *************** function _sprintf *****************
  4668 ;; Defined at:
  4669 ;;		line 9 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\nf_sprintf.c"
  4670 ;; Parameters:    Size  Location     Type
  4671 ;;  s               2   24[BANK1 ] PTR unsigned char 
  4672 ;;		 -> checksum(6), message_end(73), message_start(70), 
  4673 ;;  fmt             2   26[BANK1 ] PTR const unsigned char 
  4674 ;;		 -> STR_12(7), STR_11(18), STR_10(23), 
  4675 ;; Auto vars:     Size  Location     Type
  4676 ;;  f               6   71[BANK0 ] struct _IO_FILE
  4677 ;;  ret             2    0        int 
  4678 ;;  ap              1   70[BANK0 ] PTR void [1]
  4679 ;;		 -> ?_printf(2), ?_sprintf(2), 
  4680 ;; Return value:  Size  Location     Type
  4681 ;;                  2   24[BANK1 ] int 
  4682 ;; Registers used:
  4683 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4684 ;; Tracked objects:
  4685 ;;		On entry : 0/0
  4686 ;;		On exit  : 0/0
  4687 ;;		Unchanged: 0/0
  4688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4689 ;;      Params:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0
  4690 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4691 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4692 ;;      Totals:         0      10      16       0       0       0       0       0       0       0       0       0       
      +0       0
  4693 ;;Total ram usage:       26 bytes
  4694 ;; Hardware stack levels used:    1
  4695 ;; Hardware stack levels required when called:   11
  4696 ;; This function calls:
  4697 ;;		_vfprintf
  4698 ;; This function is called by:
  4699 ;;		_main
  4700 ;; This function uses a non-reentrant model
  4701 ;;
  4702                           
  4703                           
  4704                           ;psect for function _sprintf
  4705  0949                     _sprintf:	
  4706                           
  4707                           ;incstack = 0
  4708                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4709  0949  30BC               	movlw	(low ((?_sprintf| 0+4)))& (0+255)
  4710  094A  0020               	movlb	0	; select bank0
  4711  094B  00E3               	movwf	??_sprintf
  4712  094C  0863               	movf	??_sprintf,w
  4713  094D  00E6               	movwf	sprintf@ap
  4714  094E  0021               	movlb	1	; select bank1
  4715  094F  0839               	movf	(sprintf@s+1)^(0+128),w
  4716  0950  0020               	movlb	0	; select bank0
  4717  0951  00E8               	movwf	sprintf@f+1
  4718  0952  0021               	movlb	1	; select bank1
  4719  0953  0838               	movf	sprintf@s^(0+128),w
  4720  0954  0020               	movlb	0	; select bank0
  4721  0955  00E7               	movwf	sprintf@f
  4722  0956  01E9               	clrf	sprintf@f+2
  4723  0957  01EA               	clrf	sprintf@f+3
  4724  0958  01EB               	clrf	sprintf@f+4
  4725  0959  01EC               	clrf	sprintf@f+5
  4726  095A  0021               	movlb	1	; select bank1
  4727  095B  083B               	movf	(sprintf@fmt+1)^(0+128),w
  4728  095C  0020               	movlb	0	; select bank0
  4729  095D  00DC               	movwf	vfprintf@fmt+1
  4730  095E  0021               	movlb	1	; select bank1
  4731  095F  083A               	movf	sprintf@fmt^(0+128),w
  4732  0960  0020               	movlb	0	; select bank0
  4733  0961  00DB               	movwf	vfprintf@fmt
  4734  0962  3066               	movlw	(low (sprintf@ap| 0))& (0+255)
  4735  0963  00E3               	movwf	??_sprintf
  4736  0964  0863               	movf	??_sprintf,w
  4737  0965  00DD               	movwf	vfprintf@ap
  4738  0966  3067               	movlw	(low (sprintf@f| 0))& (0+255)
  4739  0967  3189  2176         	fcall	_vfprintf
  4740  0969  3002               	movlw	2
  4741  096A  3E67               	addlw	(low (sprintf@f| 0))& (0+255)
  4742  096B  0086               	movwf	6
  4743  096C  0187               	clrf	7
  4744  096D  3F40               	moviw [0]fsr1
  4745  096E  0021               	movlb	1	; select bank1
  4746  096F  0738               	addwf	sprintf@s^(0+128),w
  4747  0970  0084               	movwf	4
  4748  0971  3F41               	moviw [1]fsr1
  4749  0972  3D39               	addwfc	(sprintf@s+1)^(0+128),w
  4750  0973  0085               	movwf	5
  4751  0974  0180               	clrf	0
  4752  0975  0008               	return
  4753  0976                     __end_of_sprintf:	
  4754                           
  4755                           	psect	text4
  4756  0AFF                     __ptext4:	
  4757 ;; *************** function _crc16 *****************
  4758 ;; Defined at:
  4759 ;;		line 122 in file "main.c"
  4760 ;; Parameters:    Size  Location     Type
  4761 ;;  data            1    wreg     PTR PTR unsigned char 
  4762 ;;		 -> messages(4), 
  4763 ;;  segments        2    8[COMMON] int 
  4764 ;; Auto vars:     Size  Location     Type
  4765 ;;  data            1    2[BANK0 ] PTR PTR unsigned char 
  4766 ;;		 -> messages(4), 
  4767 ;;  string          2    8[BANK0 ] PTR unsigned char 
  4768 ;;		 -> message_end(73), message_start(70), 
  4769 ;;  len             2    0[BANK0 ] unsigned int 
  4770 ;;  str             2    6[BANK0 ] int 
  4771 ;;  i               2   10[BANK0 ] unsigned int 
  4772 ;;  crc             2    4[BANK0 ] unsigned short 
  4773 ;;  c               1    3[BANK0 ] unsigned char 
  4774 ;; Return value:  Size  Location     Type
  4775 ;;                  2    8[COMMON] unsigned short 
  4776 ;; Registers used:
  4777 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4778 ;; Tracked objects:
  4779 ;;		On entry : 0/0
  4780 ;;		On exit  : 0/0
  4781 ;;		Unchanged: 0/0
  4782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4783 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4784 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4785 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4786 ;;      Totals:         3      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4787 ;;Total ram usage:       15 bytes
  4788 ;; Hardware stack levels used:    1
  4789 ;; Hardware stack levels required when called:    4
  4790 ;; This function calls:
  4791 ;;		_crc_append_byte
  4792 ;;		_strlen
  4793 ;; This function is called by:
  4794 ;;		_main
  4795 ;; This function uses a non-reentrant model
  4796 ;;
  4797                           
  4798                           
  4799                           ;psect for function _crc16
  4800  0AFF                     _crc16:	
  4801                           
  4802                           ;incstack = 0
  4803                           ; Regs used in _crc16: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4804                           ;crc16@data stored from wreg
  4805  0AFF  0020               	movlb	0	; select bank0
  4806  0B00  00A2               	movwf	crc16@data
  4807                           
  4808                           ;main.c: 122: unsigned short crc16(char** data, int segments);main.c: 123: {;main.c: 124
      +                          :     size_t i;;main.c: 125:  uint16_t crc;;main.c: 126:  uint8_t c;;main.c: 128:  crc =
      +                           0xFFFF;
  4809  0B01  30FF               	movlw	255
  4810  0B02  00A4               	movwf	crc16@crc
  4811  0B03  30FF               	movlw	255
  4812  0B04  00A5               	movwf	crc16@crc+1
  4813                           
  4814                           ;main.c: 130:     for (int str = 0; str < segments; str++)
  4815  0B05  01A6               	clrf	crc16@str
  4816  0B06  01A7               	clrf	crc16@str+1
  4817  0B07                     l245:	
  4818  0B07  0827               	movf	crc16@str+1,w
  4819  0B08  3A80               	xorlw	128
  4820  0B09  00FA               	movwf	??_crc16
  4821  0B0A  0879               	movf	crc16@segments+1,w
  4822  0B0B  3A80               	xorlw	128
  4823  0B0C  027A               	subwf	??_crc16,w
  4824  0B0D  1D03               	skipz
  4825  0B0E  2B11               	goto	u3925
  4826  0B0F  0878               	movf	crc16@segments,w
  4827  0B10  0226               	subwf	crc16@str,w
  4828  0B11                     u3925:	
  4829  0B11  1803               	btfsc	3,0
  4830  0B12  2B67               	goto	l3936
  4831                           
  4832                           ;main.c: 131:     {;main.c: 132:         char* string = data[str];
  4833  0B13  0020               	movlb	0	; select bank0
  4834  0B14  3526               	lslf	crc16@str,w
  4835  0B15  0722               	addwf	crc16@data,w
  4836  0B16  00FA               	movwf	??_crc16
  4837  0B17  087A               	movf	??_crc16,w
  4838  0B18  0086               	movwf	6
  4839  0B19  0187               	clrf	7
  4840  0B1A  3F40               	moviw [0]fsr1
  4841  0B1B  00A8               	movwf	crc16@string
  4842  0B1C  3F41               	moviw [1]fsr1
  4843  0B1D  00A9               	movwf	crc16@string+1
  4844                           
  4845                           ;main.c: 133:         size_t len = strlen(string);
  4846  0B1E  0829               	movf	crc16@string+1,w
  4847  0B1F  00F1               	movwf	strlen@s+1
  4848  0B20  0828               	movf	crc16@string,w
  4849  0B21  00F0               	movwf	strlen@s
  4850  0B22  3196  26D0  318A   	fcall	_strlen
  4851  0B25  0871               	movf	?_strlen+1,w
  4852  0B26  0020               	movlb	0	; select bank0
  4853  0B27  00A1               	movwf	crc16@len+1
  4854  0B28  0870               	movf	?_strlen,w
  4855  0B29  00A0               	movwf	crc16@len
  4856                           
  4857                           ;main.c: 135:         for (i = (string[i] == '$' ? 2 : 0); i < len; i++)
  4858  0B2A  082A               	movf	crc16@i,w
  4859  0B2B  0728               	addwf	crc16@string,w
  4860  0B2C  0086               	movwf	6
  4861  0B2D  082B               	movf	crc16@i+1,w
  4862  0B2E  3D29               	addwfc	crc16@string+1,w
  4863  0B2F  0087               	movwf	7
  4864  0B30  3024               	movlw	36
  4865  0B31  0601               	xorwf	1,w
  4866  0B32  1903               	btfsc	3,2
  4867  0B33  2B37               	goto	l3924
  4868  0B34  01AA               	clrf	crc16@i
  4869  0B35  01AB               	clrf	crc16@i+1
  4870  0B36  2B3B               	goto	l3932
  4871  0B37                     l3924:	
  4872  0B37  3002               	movlw	2
  4873  0B38  00AA               	movwf	crc16@i
  4874  0B39  3000               	movlw	0
  4875  0B3A  00AB               	movwf	crc16@i+1
  4876  0B3B                     l3932:	
  4877  0B3B  0821               	movf	crc16@len+1,w
  4878  0B3C  022B               	subwf	crc16@i+1,w
  4879  0B3D  1D03               	skipz
  4880  0B3E  2B41               	goto	u3915
  4881  0B3F  0820               	movf	crc16@len,w
  4882  0B40  022A               	subwf	crc16@i,w
  4883  0B41                     u3915:	
  4884  0B41  1803               	btfsc	3,0
  4885  0B42  2B62               	goto	l3934
  4886                           
  4887                           ;main.c: 136:         {;main.c: 137:             c = string[i];
  4888  0B43  082A               	movf	crc16@i,w
  4889  0B44  0728               	addwf	crc16@string,w
  4890  0B45  0086               	movwf	6
  4891  0B46  082B               	movf	crc16@i+1,w
  4892  0B47  3D29               	addwfc	crc16@string+1,w
  4893  0B48  0087               	movwf	7
  4894  0B49  0801               	movf	1,w
  4895  0B4A  00FA               	movwf	??_crc16
  4896  0B4B  087A               	movf	??_crc16,w
  4897  0B4C  00A3               	movwf	crc16@c
  4898                           
  4899                           ;main.c: 138:             crc = crc_append_byte(crc, c);
  4900  0B4D  0825               	movf	crc16@crc+1,w
  4901  0B4E  00F1               	movwf	crc_append_byte@crc+1
  4902  0B4F  0824               	movf	crc16@crc,w
  4903  0B50  00F0               	movwf	crc_append_byte@crc
  4904  0B51  0823               	movf	crc16@c,w
  4905  0B52  00FA               	movwf	??_crc16
  4906  0B53  087A               	movf	??_crc16,w
  4907  0B54  00F2               	movwf	crc_append_byte@data
  4908  0B55  3189  21A5  318A   	fcall	_crc_append_byte
  4909  0B58  0871               	movf	?_crc_append_byte+1,w
  4910  0B59  0020               	movlb	0	; select bank0
  4911  0B5A  00A5               	movwf	crc16@crc+1
  4912  0B5B  0870               	movf	?_crc_append_byte,w
  4913  0B5C  00A4               	movwf	crc16@crc
  4914                           
  4915                           ;main.c: 139:         }
  4916  0B5D  3001               	movlw	1
  4917  0B5E  07AA               	addwf	crc16@i,f
  4918  0B5F  3000               	movlw	0
  4919  0B60  3DAB               	addwfc	crc16@i+1,f
  4920  0B61  2B3B               	goto	l3932
  4921  0B62                     l3934:	
  4922                           
  4923                           ;main.c: 140:     }
  4924  0B62  3001               	movlw	1
  4925  0B63  07A6               	addwf	crc16@str,f
  4926  0B64  3000               	movlw	0
  4927  0B65  3DA7               	addwfc	crc16@str+1,f
  4928  0B66  2B07               	goto	l245
  4929  0B67                     l3936:	
  4930                           
  4931                           ;main.c: 141:  return crc;
  4932  0B67  0020               	movlb	0	; select bank0
  4933  0B68  0825               	movf	crc16@crc+1,w
  4934  0B69  00F9               	movwf	?_crc16+1
  4935  0B6A  0824               	movf	crc16@crc,w
  4936  0B6B  00F8               	movwf	?_crc16
  4937  0B6C  0008               	return
  4938  0B6D                     __end_of_crc16:	
  4939                           
  4940                           	psect	text5
  4941  09A5                     __ptext5:	
  4942 ;; *************** function _crc_append_byte *****************
  4943 ;; Defined at:
  4944 ;;		line 102 in file "main.c"
  4945 ;; Parameters:    Size  Location     Type
  4946 ;;  crc             2    0[COMMON] unsigned short 
  4947 ;;  data            1    2[COMMON] unsigned char 
  4948 ;; Auto vars:     Size  Location     Type
  4949 ;;  i               2    6[COMMON] int 
  4950 ;; Return value:  Size  Location     Type
  4951 ;;                  2    0[COMMON] unsigned short 
  4952 ;; Registers used:
  4953 ;;		wreg, status,2, status,0
  4954 ;; Tracked objects:
  4955 ;;		On entry : 0/0
  4956 ;;		On exit  : 0/0
  4957 ;;		Unchanged: 0/0
  4958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4959 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4960 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4961 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4962 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4963 ;;Total ram usage:        8 bytes
  4964 ;; Hardware stack levels used:    1
  4965 ;; Hardware stack levels required when called:    3
  4966 ;; This function calls:
  4967 ;;		Nothing
  4968 ;; This function is called by:
  4969 ;;		_crc16
  4970 ;; This function uses a non-reentrant model
  4971 ;;
  4972                           
  4973                           
  4974                           ;psect for function _crc_append_byte
  4975  09A5                     _crc_append_byte:	
  4976                           
  4977                           ;main.c: 102: unsigned short crc_append_byte(uint16_t crc, uint8_t data);main.c: 103: {;
      +                          main.c: 104:     int i;;main.c: 105:     crc = crc ^ ((uint16_t)data << 8);
  4978                           
  4979                           ;incstack = 0
  4980                           ; Regs used in _crc_append_byte: [wreg+status,2+status,0]
  4981  09A5  0872               	movf	crc_append_byte@data,w
  4982  09A6  00F3               	movwf	??_crc_append_byte
  4983  09A7  01F4               	clrf	??_crc_append_byte+1
  4984  09A8  0873               	movf	??_crc_append_byte,w
  4985  09A9  00F4               	movwf	??_crc_append_byte+1
  4986  09AA  01F3               	clrf	??_crc_append_byte
  4987  09AB  0870               	movf	crc_append_byte@crc,w
  4988  09AC  0673               	xorwf	??_crc_append_byte,w
  4989  09AD  00F0               	movwf	crc_append_byte@crc
  4990  09AE  0871               	movf	crc_append_byte@crc+1,w
  4991  09AF  0674               	xorwf	??_crc_append_byte+1,w
  4992  09B0  00F1               	movwf	crc_append_byte@crc+1
  4993                           
  4994                           ;main.c: 106:     for (i = 0; i < 8; i++)
  4995  09B1  01F6               	clrf	crc_append_byte@i
  4996  09B2  01F7               	clrf	crc_append_byte@i+1
  4997  09B3                     l238:	
  4998                           
  4999                           ;main.c: 107:     {;main.c: 108:         if (crc & 0x8000)
  5000  09B3  1FF1               	btfss	crc_append_byte@crc+1,7
  5001  09B4  29C2               	goto	l3042
  5002                           
  5003                           ;main.c: 109:         {;main.c: 110:             crc = (crc << 1) ^ 0x1021;
  5004  09B5  0871               	movf	crc_append_byte@crc+1,w
  5005  09B6  00F4               	movwf	??_crc_append_byte+1
  5006  09B7  0870               	movf	crc_append_byte@crc,w
  5007  09B8  00F3               	movwf	??_crc_append_byte
  5008  09B9  35F3               	lslf	??_crc_append_byte,f
  5009  09BA  0DF4               	rlf	??_crc_append_byte+1,f
  5010  09BB  3021               	movlw	33
  5011  09BC  0673               	xorwf	??_crc_append_byte,w
  5012  09BD  00F0               	movwf	crc_append_byte@crc
  5013  09BE  3010               	movlw	16
  5014  09BF  0674               	xorwf	??_crc_append_byte+1,w
  5015  09C0  00F1               	movwf	crc_append_byte@crc+1
  5016                           
  5017                           ;main.c: 111:         }
  5018  09C1  29C7               	goto	l241
  5019  09C2                     l3042:	
  5020                           
  5021                           ;main.c: 113:         {;main.c: 114:             crc <<= 1;
  5022  09C2  3001               	movlw	1
  5023  09C3                     u2865:	
  5024  09C3  35F0               	lslf	crc_append_byte@crc,f
  5025  09C4  0DF1               	rlf	crc_append_byte@crc+1,f
  5026  09C5  0B89               	decfsz	9,f
  5027  09C6  29C3               	goto	u2865
  5028  09C7                     l241:	
  5029                           ;main.c: 115:         }
  5030                           
  5031                           
  5032                           ;main.c: 116:     }
  5033  09C7  3001               	movlw	1
  5034  09C8  07F6               	addwf	crc_append_byte@i,f
  5035  09C9  3000               	movlw	0
  5036  09CA  3DF7               	addwfc	crc_append_byte@i+1,f
  5037  09CB  0877               	movf	crc_append_byte@i+1,w
  5038  09CC  3A80               	xorlw	128
  5039  09CD  00F3               	movwf	??_crc_append_byte
  5040  09CE  3080               	movlw	128
  5041  09CF  0273               	subwf	??_crc_append_byte,w
  5042  09D0  3008               	movlw	8
  5043  09D1  1903               	btfsc	3,2
  5044  09D2  0276               	subwf	crc_append_byte@i,w
  5045  09D3  1803               	btfsc	3,0
  5046  09D4  0008               	return
  5047  09D5  29B3               	goto	l238
  5048  09D6                     __end_of_crc_append_byte:	
  5049                           ;main.c: 118:     return crc;
  5050                           
  5051                           
  5052                           	psect	text6
  5053  0849                     __ptext6:	
  5054 ;; *************** function _TransmitString *****************
  5055 ;; Defined at:
  5056 ;;		line 186 in file "main.c"
  5057 ;; Parameters:    Size  Location     Type
  5058 ;;  message         2    6[COMMON] PTR unsigned char 
  5059 ;;		 -> message_end(73), message_start(70), 
  5060 ;; Auto vars:     Size  Location     Type
  5061 ;;  i               2   11[COMMON] int 
  5062 ;;  counti          2    9[COMMON] int 
  5063 ;; Return value:  Size  Location     Type
  5064 ;;                  1    wreg      void 
  5065 ;; Registers used:
  5066 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5067 ;; Tracked objects:
  5068 ;;		On entry : 0/0
  5069 ;;		On exit  : 0/0
  5070 ;;		Unchanged: 0/0
  5071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5072 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5073 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5074 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5075 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5076 ;;Total ram usage:        7 bytes
  5077 ;; Hardware stack levels used:    1
  5078 ;; Hardware stack levels required when called:    5
  5079 ;; This function calls:
  5080 ;;		_TransmitByte
  5081 ;;		_strlen
  5082 ;; This function is called by:
  5083 ;;		_main
  5084 ;; This function uses a non-reentrant model
  5085 ;;
  5086                           
  5087                           
  5088                           ;psect for function _TransmitString
  5089  0849                     _TransmitString:	
  5090                           
  5091                           ;main.c: 186: void TransmitString(char* message);main.c: 187: {;main.c: 191:  for (int i
      +                           = 0, counti = strlen(message); i < counti; i++)
  5092                           
  5093                           ;incstack = 0
  5094                           ; Regs used in _TransmitString: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5095  0849  01FB               	clrf	TransmitString@i
  5096  084A  01FC               	clrf	TransmitString@i+1
  5097  084B  0877               	movf	TransmitString@message+1,w
  5098  084C  00F1               	movwf	strlen@s+1
  5099  084D  0876               	movf	TransmitString@message,w
  5100  084E  00F0               	movwf	strlen@s
  5101  084F  3196  26D0  3188   	fcall	_strlen
  5102  0852  0871               	movf	?_strlen+1,w
  5103  0853  00FA               	movwf	TransmitString@counti+1
  5104  0854  0870               	movf	?_strlen,w
  5105  0855  00F9               	movwf	TransmitString@counti
  5106  0856                     l3948:	
  5107  0856  087C               	movf	TransmitString@i+1,w
  5108  0857  3A80               	xorlw	128
  5109  0858  00F8               	movwf	??_TransmitString
  5110  0859  087A               	movf	TransmitString@counti+1,w
  5111  085A  3A80               	xorlw	128
  5112  085B  0278               	subwf	??_TransmitString,w
  5113  085C  1D03               	skipz
  5114  085D  2860               	goto	u3935
  5115  085E  0879               	movf	TransmitString@counti,w
  5116  085F  027B               	subwf	TransmitString@i,w
  5117  0860                     u3935:	
  5118  0860  1803               	btfsc	3,0
  5119  0861  0008               	return
  5120                           
  5121                           ;main.c: 192:  {;main.c: 193:   TransmitByte(message[i]);
  5122  0862  087B               	movf	TransmitString@i,w
  5123  0863  0776               	addwf	TransmitString@message,w
  5124  0864  0086               	movwf	6
  5125  0865  087C               	movf	TransmitString@i+1,w
  5126  0866  3D77               	addwfc	TransmitString@message+1,w
  5127  0867  0087               	movwf	7
  5128  0868  0801               	movf	1,w
  5129  0869  3189  211C  3188   	fcall	_TransmitByte
  5130                           
  5131                           ;main.c: 194:  }
  5132  086C  3001               	movlw	1
  5133  086D  07FB               	addwf	TransmitString@i,f
  5134  086E  3000               	movlw	0
  5135  086F  3DFC               	addwfc	TransmitString@i+1,f
  5136  0870  2856               	goto	l3948
  5137  0871                     __end_of_TransmitString:	
  5138                           
  5139                           	psect	text7
  5140  091C                     __ptext7:	
  5141 ;; *************** function _TransmitByte *****************
  5142 ;; Defined at:
  5143 ;;		line 164 in file "main.c"
  5144 ;; Parameters:    Size  Location     Type
  5145 ;;  byte            1    wreg     unsigned char 
  5146 ;; Auto vars:     Size  Location     Type
  5147 ;;  byte            1    3[COMMON] unsigned char 
  5148 ;;  i               2    4[COMMON] int 
  5149 ;; Return value:  Size  Location     Type
  5150 ;;                  1    wreg      void 
  5151 ;; Registers used:
  5152 ;;		wreg, status,2, status,0, pclath, cstack
  5153 ;; Tracked objects:
  5154 ;;		On entry : 0/0
  5155 ;;		On exit  : 0/0
  5156 ;;		Unchanged: 0/0
  5157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5159 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5160 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5161 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5162 ;;Total ram usage:        4 bytes
  5163 ;; Hardware stack levels used:    1
  5164 ;; Hardware stack levels required when called:    4
  5165 ;; This function calls:
  5166 ;;		_TransmitBit
  5167 ;; This function is called by:
  5168 ;;		_TransmitString
  5169 ;; This function uses a non-reentrant model
  5170 ;;
  5171                           
  5172                           
  5173                           ;psect for function _TransmitByte
  5174  091C                     _TransmitByte:	
  5175                           
  5176                           ;incstack = 0
  5177                           ; Regs used in _TransmitByte: [wreg+status,2+status,0+pclath+cstack]
  5178                           ;TransmitByte@byte stored from wreg
  5179  091C  00F3               	movwf	TransmitByte@byte
  5180                           
  5181                           ;main.c: 164: void TransmitByte(char byte);main.c: 165: {;main.c: 175:     TransmitBit(0
      +                          );
  5182  091D  3000               	movlw	0
  5183  091E  3187  27EF  3189   	fcall	_TransmitBit
  5184                           
  5185                           ;main.c: 177:  for (int i = 0; i < 7; i++)
  5186  0921  01F4               	clrf	TransmitByte@i
  5187  0922  01F5               	clrf	TransmitByte@i+1
  5188  0923                     l3052:	
  5189                           
  5190                           ;main.c: 178:  {;main.c: 179:   TransmitBit((byte >> i) & 1);
  5191  0923  0873               	movf	TransmitByte@byte,w
  5192  0924  00F2               	movwf	??_TransmitByte
  5193  0925  0A74               	incf	TransmitByte@i,w
  5194  0926  2928               	goto	u2884
  5195  0927                     u2885:	
  5196  0927  36F2               	lsrf	??_TransmitByte,f
  5197  0928                     u2884:	
  5198  0928  0B89               	decfsz	9,f
  5199  0929  2927               	goto	u2885
  5200  092A  1C72               	btfss	??_TransmitByte,0
  5201  092B  292E               	goto	u2890
  5202  092C  3001               	movlw	1
  5203  092D  292F               	goto	u2900
  5204  092E                     u2890:	
  5205  092E  3000               	movlw	0
  5206  092F                     u2900:	
  5207  092F  3187  27EF  3189   	fcall	_TransmitBit
  5208                           
  5209                           ;main.c: 180:  }
  5210  0932  3001               	movlw	1
  5211  0933  07F4               	addwf	TransmitByte@i,f
  5212  0934  3000               	movlw	0
  5213  0935  3DF5               	addwfc	TransmitByte@i+1,f
  5214  0936  0875               	movf	TransmitByte@i+1,w
  5215  0937  3A80               	xorlw	128
  5216  0938  00F2               	movwf	??_TransmitByte
  5217  0939  3080               	movlw	128
  5218  093A  0272               	subwf	??_TransmitByte,w
  5219  093B  1D03               	skipz
  5220  093C  293F               	goto	u2915
  5221  093D  3007               	movlw	7
  5222  093E  0274               	subwf	TransmitByte@i,w
  5223  093F                     u2915:	
  5224  093F  1C03               	skipc
  5225  0940  2923               	goto	l3052
  5226                           
  5227                           ;main.c: 182:  TransmitBit(1);
  5228  0941  3001               	movlw	1
  5229  0942  3187  27EF  3189   	fcall	_TransmitBit
  5230                           
  5231                           ;main.c: 183:  TransmitBit(1);
  5232  0945  3001               	movlw	1
  5233  0946  3187  27EF         	fcall	_TransmitBit
  5234  0948  0008               	return
  5235  0949                     __end_of_TransmitByte:	
  5236                           
  5237                           	psect	text8
  5238  07EF                     __ptext8:	
  5239 ;; *************** function _TransmitBit *****************
  5240 ;; Defined at:
  5241 ;;		line 144 in file "main.c"
  5242 ;; Parameters:    Size  Location     Type
  5243 ;;  b               1    wreg     _Bool 
  5244 ;; Auto vars:     Size  Location     Type
  5245 ;;  b               1    1[COMMON] _Bool 
  5246 ;; Return value:  Size  Location     Type
  5247 ;;                  1    wreg      void 
  5248 ;; Registers used:
  5249 ;;		wreg, status,2, status,0
  5250 ;; Tracked objects:
  5251 ;;		On entry : 0/0
  5252 ;;		On exit  : 0/0
  5253 ;;		Unchanged: 0/0
  5254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5256 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5257 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5258 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5259 ;;Total ram usage:        2 bytes
  5260 ;; Hardware stack levels used:    1
  5261 ;; Hardware stack levels required when called:    3
  5262 ;; This function calls:
  5263 ;;		Nothing
  5264 ;; This function is called by:
  5265 ;;		_TransmitByte
  5266 ;; This function uses a non-reentrant model
  5267 ;;
  5268                           
  5269                           
  5270                           ;psect for function _TransmitBit
  5271  07EF                     _TransmitBit:	
  5272                           
  5273                           ;incstack = 0
  5274                           ; Regs used in _TransmitBit: [wreg+status,2+status,0]
  5275                           ;TransmitBit@b stored from wreg
  5276  07EF  00F1               	movwf	TransmitBit@b
  5277                           
  5278                           ;main.c: 144: void TransmitBit(_Bool b);main.c: 145: {;main.c: 146:  if (b)
  5279  07F0  0871               	movf	TransmitBit@b,w
  5280  07F1  1903               	btfsc	3,2
  5281  07F2  2FF6               	goto	l262
  5282                           
  5283                           ;main.c: 147:  {;main.c: 148:   do { LATAbits.LATA4 = 1; } while(0);
  5284  07F3  0022               	movlb	2	; select bank2
  5285  07F4  160C               	bsf	12,4	;volatile
  5286  07F5  2FF8               	goto	l2934
  5287  07F6                     l262:	
  5288                           ;main.c: 151:  {;main.c: 152:   do { LATAbits.LATA4 = 0; } while(0);
  5289                           
  5290  07F6  0022               	movlb	2	; select bank2
  5291  07F7  120C               	bcf	12,4	;volatile
  5292  07F8                     l2934:	
  5293                           
  5294                           ;main.c: 156:     _delay((unsigned long)((((1000 / BAUD_RATE) / 2) * 1000)*(4000000/4000
      +                          000.0)));
  5295  07F8  300D               	movlw	13
  5296  07F9  00F0               	movwf	??_TransmitBit
  5297  07FA  30FC               	movlw	252
  5298  07FB                     u4127:	
  5299  07FB  0B89               	decfsz	9,f
  5300  07FC  2FFB               	goto	u4127
  5301  07FD  0BF0               	decfsz	??_TransmitBit,f
  5302  07FE  2FFB               	goto	u4127
  5303  07FF  0008               	return
  5304  0800                     __end_of_TransmitBit:	
  5305                           
  5306                           	psect	text9
  5307  0AAD                     __ptext9:	
  5308 ;; *************** function _SetupGPS *****************
  5309 ;; Defined at:
  5310 ;;		line 315 in file "main.c"
  5311 ;; Parameters:    Size  Location     Type
  5312 ;;		None
  5313 ;; Auto vars:     Size  Location     Type
  5314 ;;		None
  5315 ;; Return value:  Size  Location     Type
  5316 ;;                  1    wreg      void 
  5317 ;; Registers used:
  5318 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5319 ;; Tracked objects:
  5320 ;;		On entry : 0/0
  5321 ;;		On exit  : 0/0
  5322 ;;		Unchanged: 0/0
  5323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5326 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5327 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5328 ;;Total ram usage:        2 bytes
  5329 ;; Hardware stack levels used:    1
  5330 ;; Hardware stack levels required when called:   12
  5331 ;; This function calls:
  5332 ;;		_GPS_HasAcknowledged
  5333 ;;		_GPS_SendUBX
  5334 ;;		_printf
  5335 ;; This function is called by:
  5336 ;;		_main
  5337 ;; This function uses a non-reentrant model
  5338 ;;
  5339                           
  5340                           
  5341                           ;psect for function _SetupGPS
  5342  0AAD                     _SetupGPS:	
  5343  0AAD                     l3960:	
  5344                           ;main.c: 317:     while (!gps_configured)
  5345                           
  5346                           ;incstack = 0
  5347                           ; Regs used in _SetupGPS: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5348                           
  5349                           
  5350                           ;main.c: 317:     while (!gps_configured)
  5351  0AAD  0020               	movlb	0	; select bank0
  5352  0AAE  086F               	movf	_gps_configured,w
  5353  0AAF  1D03               	btfss	3,2
  5354  0AB0  2ACF               	goto	l3962
  5355                           
  5356                           ;main.c: 318:     {;main.c: 319:         do { LATAbits.LATA5 = 0; } while(0);
  5357  0AB1  0022               	movlb	2	; select bank2
  5358  0AB2  128C               	bcf	12,5	;volatile
  5359                           
  5360                           ;main.c: 320:         GPS_SendUBX(setNavFlightMode);
  5361  0AB3  3020               	movlw	(low (_setNavFlightMode| (0+512)))& (0+255)
  5362  0AB4  3188  2022  318A   	fcall	_GPS_SendUBX
  5363                           
  5364                           ;main.c: 321:         gps_configured = GPS_HasAcknowledged(setNavFlightMode);
  5365  0AB7  3020               	movlw	(low (_setNavFlightMode| (0+512)))& (0+255)
  5366  0AB8  318B  236D  318A   	fcall	_GPS_HasAcknowledged
  5367  0ABB  0020               	movlb	0	; select bank0
  5368  0ABC  00E9               	movwf	??_SetupGPS
  5369  0ABD  0869               	movf	??_SetupGPS,w
  5370  0ABE  00EF               	movwf	_gps_configured
  5371  0ABF  0022               	movlb	2	; select bank2
  5372  0AC0  168C               	bsf	12,5	;volatile
  5373                           
  5374                           ;main.c: 324:         _delay((unsigned long)((500)*(4000000/4000.0)));
  5375  0AC1  3003               	movlw	3
  5376  0AC2  0020               	movlb	0	; select bank0
  5377  0AC3  00EA               	movwf	??_SetupGPS+1
  5378  0AC4  308A               	movlw	138
  5379  0AC5  00E9               	movwf	??_SetupGPS
  5380  0AC6  3055               	movlw	85
  5381  0AC7                     u4137:	
  5382  0AC7  0B89               	decfsz	9,f
  5383  0AC8  2AC7               	goto	u4137
  5384  0AC9  0BE9               	decfsz	??_SetupGPS,f
  5385  0ACA  2AC7               	goto	u4137
  5386  0ACB  0BEA               	decfsz	??_SetupGPS+1,f
  5387  0ACC  2AC7               	goto	u4137
  5388  0ACD  3200               	nop2
  5389  0ACE  2AAD               	goto	l3960
  5390  0ACF                     l3962:	
  5391                           
  5392                           ;main.c: 326:     gps_configured = 0;
  5393  0ACF  01EF               	clrf	_gps_configured
  5394                           
  5395                           ;main.c: 329:     printf("$PUBX,40,GLL,0,0,0,0*5C\r\n");
  5396  0AD0  304E               	movlw	low (STR_1| (0+32768))
  5397  0AD1  00E3               	movwf	printf@fmt
  5398  0AD2  3098               	movlw	high (STR_1| (0+32768))
  5399  0AD3  00E4               	movwf	printf@fmt+1
  5400  0AD4  3196  2681  318A   	fcall	_printf
  5401                           
  5402                           ;main.c: 330:     printf("$PUBX,40,GGA,0,0,0,0*5A\r\n");
  5403  0AD7  3034               	movlw	low (STR_2| (0+32768))
  5404  0AD8  0020               	movlb	0	; select bank0
  5405  0AD9  00E3               	movwf	printf@fmt
  5406  0ADA  3098               	movlw	high (STR_2| (0+32768))
  5407  0ADB  00E4               	movwf	printf@fmt+1
  5408  0ADC  3196  2681  318A   	fcall	_printf
  5409                           
  5410                           ;main.c: 331:     printf("$PUBX,40,VTG,0,0,0,0*5E\r\n");
  5411  0ADF  3082               	movlw	low (STR_3| (0+32768))
  5412  0AE0  0020               	movlb	0	; select bank0
  5413  0AE1  00E3               	movwf	printf@fmt
  5414  0AE2  3098               	movlw	high (STR_3| (0+32768))
  5415  0AE3  00E4               	movwf	printf@fmt+1
  5416  0AE4  3196  2681  318A   	fcall	_printf
  5417                           
  5418                           ;main.c: 332:     printf("$PUBX,40,GSV,0,0,0,0*59\r\n");
  5419  0AE7  301A               	movlw	low (STR_4| (0+32768))
  5420  0AE8  0020               	movlb	0	; select bank0
  5421  0AE9  00E3               	movwf	printf@fmt
  5422  0AEA  3098               	movlw	high (STR_4| (0+32768))
  5423  0AEB  00E4               	movwf	printf@fmt+1
  5424  0AEC  3196  2681  318A   	fcall	_printf
  5425                           
  5426                           ;main.c: 333:     printf("$PUBX,40,GSA,0,0,0,0*4E\r\n");
  5427  0AEF  3068               	movlw	low (STR_5| (0+32768))
  5428  0AF0  0020               	movlb	0	; select bank0
  5429  0AF1  00E3               	movwf	printf@fmt
  5430  0AF2  3098               	movlw	high (STR_5| (0+32768))
  5431  0AF3  00E4               	movwf	printf@fmt+1
  5432  0AF4  3196  2681  318A   	fcall	_printf
  5433                           
  5434                           ;main.c: 334:     printf("$PUBX,40,RMC,0,0,0,0*47\r\n");
  5435  0AF7  3000               	movlw	low (STR_6| (0+32768))
  5436  0AF8  0020               	movlb	0	; select bank0
  5437  0AF9  00E3               	movwf	printf@fmt
  5438  0AFA  3098               	movlw	high (STR_6| (0+32768))
  5439  0AFB  00E4               	movwf	printf@fmt+1
  5440  0AFC  3196  2681         	fcall	_printf
  5441  0AFE  0008               	return
  5442  0AFF                     __end_of_SetupGPS:	
  5443                           
  5444                           	psect	text10
  5445  0822                     __ptext10:	
  5446 ;; *************** function _GPS_SendUBX *****************
  5447 ;; Defined at:
  5448 ;;		line 231 in file "main.c"
  5449 ;; Parameters:    Size  Location     Type
  5450 ;;  data            1    wreg     PTR unsigned char 
  5451 ;;		 -> setNavFlightMode(44), 
  5452 ;; Auto vars:     Size  Location     Type
  5453 ;;  data            1    9[COMMON] PTR unsigned char 
  5454 ;;		 -> setNavFlightMode(44), 
  5455 ;;  i               2    7[COMMON] int 
  5456 ;;  length          2    5[COMMON] int 
  5457 ;; Return value:  Size  Location     Type
  5458 ;;                  1    wreg      void 
  5459 ;; Registers used:
  5460 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5461 ;; Tracked objects:
  5462 ;;		On entry : 0/0
  5463 ;;		On exit  : 0/0
  5464 ;;		Unchanged: 0/0
  5465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5467 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5468 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5469 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5470 ;;Total ram usage:        6 bytes
  5471 ;; Hardware stack levels used:    1
  5472 ;; Hardware stack levels required when called:    4
  5473 ;; This function calls:
  5474 ;;		_EUSART_Write
  5475 ;;		_GetLengthUBX
  5476 ;; This function is called by:
  5477 ;;		_SetupGPS
  5478 ;; This function uses a non-reentrant model
  5479 ;;
  5480                           
  5481                           
  5482                           ;psect for function _GPS_SendUBX
  5483  0822                     _GPS_SendUBX:	
  5484                           
  5485                           ;incstack = 0
  5486                           ; Regs used in _GPS_SendUBX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5487                           ;GPS_SendUBX@data stored from wreg
  5488  0822  00F9               	movwf	GPS_SendUBX@data
  5489                           
  5490                           ;main.c: 231: void GPS_SendUBX(uint8_t* data);main.c: 232: {;main.c: 233:     for (int i
      +                           = 0, length = GetLengthUBX(data); i < length; i++)
  5491  0823  01F7               	clrf	GPS_SendUBX@i
  5492  0824  01F8               	clrf	GPS_SendUBX@i+1
  5493  0825  0879               	movf	GPS_SendUBX@data,w
  5494  0826  3196  2692  3188   	fcall	_GetLengthUBX
  5495  0829  0871               	movf	?_GetLengthUBX+1,w
  5496  082A  00F6               	movwf	GPS_SendUBX@length+1
  5497  082B  0870               	movf	?_GetLengthUBX,w
  5498  082C  00F5               	movwf	GPS_SendUBX@length
  5499  082D                     l3068:	
  5500  082D  0878               	movf	GPS_SendUBX@i+1,w
  5501  082E  3A80               	xorlw	128
  5502  082F  00F4               	movwf	??_GPS_SendUBX
  5503  0830  0876               	movf	GPS_SendUBX@length+1,w
  5504  0831  3A80               	xorlw	128
  5505  0832  0274               	subwf	??_GPS_SendUBX,w
  5506  0833  1D03               	skipz
  5507  0834  2837               	goto	u2925
  5508  0835  0875               	movf	GPS_SendUBX@length,w
  5509  0836  0277               	subwf	GPS_SendUBX@i,w
  5510  0837                     u2925:	
  5511  0837  1803               	btfsc	3,0
  5512  0838  0008               	return
  5513                           
  5514                           ;main.c: 234:     {;main.c: 235:         EUSART_Write(data[i]);
  5515  0839  0877               	movf	GPS_SendUBX@i,w
  5516  083A  0779               	addwf	GPS_SendUBX@data,w
  5517  083B  00F4               	movwf	??_GPS_SendUBX
  5518  083C  0874               	movf	??_GPS_SendUBX,w
  5519  083D  0086               	movwf	6
  5520  083E  3002               	movlw	2	; select bank4/5
  5521  083F  0087               	movwf	7
  5522  0840  0801               	movf	1,w
  5523  0841  3196  263E  3188   	fcall	_EUSART_Write
  5524                           
  5525                           ;main.c: 236:     }
  5526  0844  3001               	movlw	1
  5527  0845  07F7               	addwf	GPS_SendUBX@i,f
  5528  0846  3000               	movlw	0
  5529  0847  3DF8               	addwfc	GPS_SendUBX@i+1,f
  5530  0848  282D               	goto	l3068
  5531  0849                     __end_of_GPS_SendUBX:	
  5532                           
  5533                           	psect	text11
  5534  1692                     __ptext11:	
  5535 ;; *************** function _GetLengthUBX *****************
  5536 ;; Defined at:
  5537 ;;		line 225 in file "main.c"
  5538 ;; Parameters:    Size  Location     Type
  5539 ;;  data            1    wreg     PTR unsigned char 
  5540 ;;		 -> setNavFlightMode(44), 
  5541 ;; Auto vars:     Size  Location     Type
  5542 ;;  data            1    3[COMMON] PTR unsigned char 
  5543 ;;		 -> setNavFlightMode(44), 
  5544 ;; Return value:  Size  Location     Type
  5545 ;;                  2    0[COMMON] unsigned int 
  5546 ;; Registers used:
  5547 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  5548 ;; Tracked objects:
  5549 ;;		On entry : 0/0
  5550 ;;		On exit  : 0/0
  5551 ;;		Unchanged: 0/0
  5552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5553 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5554 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5556 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5557 ;;Total ram usage:        4 bytes
  5558 ;; Hardware stack levels used:    1
  5559 ;; Hardware stack levels required when called:    3
  5560 ;; This function calls:
  5561 ;;		Nothing
  5562 ;; This function is called by:
  5563 ;;		_GPS_SendUBX
  5564 ;; This function uses a non-reentrant model
  5565 ;;
  5566                           
  5567                           
  5568                           ;psect for function _GetLengthUBX
  5569  1692                     _GetLengthUBX:	
  5570                           
  5571                           ;incstack = 0
  5572                           ; Regs used in _GetLengthUBX: [wreg-fsr1h+status,2+status,0]
  5573                           ;GetLengthUBX@data stored from wreg
  5574  1692  00F3               	movwf	GetLengthUBX@data
  5575                           
  5576                           ;main.c: 225: size_t GetLengthUBX(uint8_t* data);main.c: 226: {;main.c: 227:     return 
      +                          (short)(8 + (short)((short)data[4] + (short)(data[5] << 8)));
  5577  1693  0873               	movf	GetLengthUBX@data,w
  5578  1694  3E05               	addlw	5
  5579  1695  0086               	movwf	6
  5580  1696  3002               	movlw	2	; select bank4/5
  5581  1697  0087               	movwf	7
  5582  1698  0873               	movf	GetLengthUBX@data,w
  5583  1699  3E04               	addlw	4
  5584  169A  0084               	movwf	4
  5585  169B  3002               	movlw	2	; select bank4/5
  5586  169C  0085               	movwf	5
  5587  169D  0800               	movf	0,w
  5588  169E  3E08               	addlw	8
  5589  169F  00F0               	movwf	?_GetLengthUBX
  5590  16A0  3000               	movlw	0
  5591  16A1  3D01               	addwfc	1,w
  5592  16A2  00F1               	movwf	?_GetLengthUBX+1
  5593  16A3  0008               	return
  5594  16A4                     __end_of_GetLengthUBX:	
  5595                           
  5596                           	psect	text12
  5597  0B6D                     __ptext12:	
  5598 ;; *************** function _GPS_HasAcknowledged *****************
  5599 ;; Defined at:
  5600 ;;		line 243 in file "main.c"
  5601 ;; Parameters:    Size  Location     Type
  5602 ;;  data            1    wreg     PTR unsigned char 
  5603 ;;		 -> setNavFlightMode(44), 
  5604 ;; Auto vars:     Size  Location     Type
  5605 ;;  data            1   15[BANK0 ] PTR unsigned char 
  5606 ;;		 -> setNavFlightMode(44), 
  5607 ;;  i               1   17[BANK0 ] unsigned char 
  5608 ;;  ackPacket      10    5[BANK0 ] unsigned char [10]
  5609 ;;  startTime       4    0[BANK0 ] unsigned long 
  5610 ;;  ackByteID       1   16[BANK0 ] unsigned char 
  5611 ;;  ackByte         1    4[BANK0 ] unsigned char 
  5612 ;; Return value:  Size  Location     Type
  5613 ;;                  1    wreg      _Bool 
  5614 ;; Registers used:
  5615 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5616 ;; Tracked objects:
  5617 ;;		On entry : 0/0
  5618 ;;		On exit  : 0/0
  5619 ;;		Unchanged: 0/0
  5620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5622 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5623 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5624 ;;      Totals:         4      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5625 ;;Total ram usage:       22 bytes
  5626 ;; Hardware stack levels used:    1
  5627 ;; Hardware stack levels required when called:    4
  5628 ;; This function calls:
  5629 ;;		_EUSART_Read
  5630 ;;		_EUSART_is_rx_ready
  5631 ;; This function is called by:
  5632 ;;		_SetupGPS
  5633 ;; This function uses a non-reentrant model
  5634 ;;
  5635                           
  5636                           
  5637                           ;psect for function _GPS_HasAcknowledged
  5638  0B6D                     _GPS_HasAcknowledged:	
  5639                           
  5640                           ;incstack = 0
  5641                           ; Regs used in _GPS_HasAcknowledged: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5642                           ;GPS_HasAcknowledged@data stored from wreg
  5643  0B6D  0020               	movlb	0	; select bank0
  5644  0B6E  00AF               	movwf	GPS_HasAcknowledged@data
  5645                           
  5646                           ;main.c: 243: _Bool GPS_HasAcknowledged(uint8_t* data);main.c: 244: {;main.c: 245:     u
      +                          int8_t ackPacket[10];;main.c: 246:     unsigned long startTime = ticks;
  5647  0B6F  0021               	movlb	1	; select bank1
  5648  0B70  0863               	movf	(_ticks+3)^(0+128),w
  5649  0B71  0020               	movlb	0	; select bank0
  5650  0B72  00A3               	movwf	GPS_HasAcknowledged@startTime+3
  5651  0B73  0021               	movlb	1	; select bank1
  5652  0B74  0862               	movf	(_ticks+2)^(0+128),w
  5653  0B75  0020               	movlb	0	; select bank0
  5654  0B76  00A2               	movwf	GPS_HasAcknowledged@startTime+2
  5655  0B77  0021               	movlb	1	; select bank1
  5656  0B78  0861               	movf	(_ticks+1)^(0+128),w
  5657  0B79  0020               	movlb	0	; select bank0
  5658  0B7A  00A1               	movwf	GPS_HasAcknowledged@startTime+1
  5659  0B7B  0021               	movlb	1	; select bank1
  5660  0B7C  0860               	movf	_ticks^(0+128),w
  5661  0B7D  0020               	movlb	0	; select bank0
  5662  0B7E  00A0               	movwf	GPS_HasAcknowledged@startTime
  5663                           
  5664                           ;main.c: 249:     ackPacket[0] = 0xB5;
  5665  0B7F  30B5               	movlw	181
  5666  0B80  00F0               	movwf	??_GPS_HasAcknowledged
  5667  0B81  0870               	movf	??_GPS_HasAcknowledged,w
  5668  0B82  00A5               	movwf	GPS_HasAcknowledged@ackPacket
  5669                           
  5670                           ;main.c: 250:     ackPacket[1] = 0x62;
  5671  0B83  3062               	movlw	98
  5672  0B84  00F0               	movwf	??_GPS_HasAcknowledged
  5673  0B85  0870               	movf	??_GPS_HasAcknowledged,w
  5674  0B86  00A6               	movwf	GPS_HasAcknowledged@ackPacket+1
  5675                           
  5676                           ;main.c: 251:     ackPacket[2] = 0x05;
  5677  0B87  3005               	movlw	5
  5678  0B88  00F0               	movwf	??_GPS_HasAcknowledged
  5679  0B89  0870               	movf	??_GPS_HasAcknowledged,w
  5680  0B8A  00A7               	movwf	GPS_HasAcknowledged@ackPacket+2
  5681                           
  5682                           ;main.c: 252:     ackPacket[3] = 0x01;
  5683  0B8B  01A8               	clrf	GPS_HasAcknowledged@ackPacket+3
  5684  0B8C  0AA8               	incf	GPS_HasAcknowledged@ackPacket+3,f
  5685                           
  5686                           ;main.c: 253:     ackPacket[4] = 0x02;
  5687  0B8D  3002               	movlw	2
  5688  0B8E  00F0               	movwf	??_GPS_HasAcknowledged
  5689  0B8F  0870               	movf	??_GPS_HasAcknowledged,w
  5690  0B90  00A9               	movwf	GPS_HasAcknowledged@ackPacket+4
  5691                           
  5692                           ;main.c: 254:     ackPacket[5] = 0x00;
  5693  0B91  01AA               	clrf	GPS_HasAcknowledged@ackPacket+5
  5694                           
  5695                           ;main.c: 255:     ackPacket[6] = data[2];
  5696  0B92  082F               	movf	GPS_HasAcknowledged@data,w
  5697  0B93  0086               	movwf	6
  5698  0B94  3002               	movlw	2	; select bank4/5
  5699  0B95  0087               	movwf	7
  5700  0B96  3002               	movlw	2	; select bank4/5
  5701  0B97  3F42               	moviw [2]fsr1
  5702  0B98  00AB               	movwf	GPS_HasAcknowledged@ackPacket+6
  5703                           
  5704                           ;main.c: 256:     ackPacket[7] = data[3];
  5705  0B99  082F               	movf	GPS_HasAcknowledged@data,w
  5706  0B9A  0086               	movwf	6
  5707  0B9B  3002               	movlw	2	; select bank4/5
  5708  0B9C  0087               	movwf	7
  5709  0B9D  3002               	movlw	2	; select bank4/5
  5710  0B9E  3F43               	moviw [3]fsr1
  5711  0B9F  00AC               	movwf	GPS_HasAcknowledged@ackPacket+7
  5712                           
  5713                           ;main.c: 257:     ackPacket[8] = 0;
  5714  0BA0  01AD               	clrf	GPS_HasAcknowledged@ackPacket+8
  5715                           
  5716                           ;main.c: 258:     ackPacket[9] = 0;
  5717  0BA1  01AE               	clrf	GPS_HasAcknowledged@ackPacket+9
  5718                           
  5719                           ;main.c: 261:     for (uint8_t i = 2; i < 8; i++)
  5720  0BA2  3002               	movlw	2
  5721  0BA3  00F0               	movwf	??_GPS_HasAcknowledged
  5722  0BA4  0870               	movf	??_GPS_HasAcknowledged,w
  5723  0BA5  00B1               	movwf	GPS_HasAcknowledged@i
  5724  0BA6                     l3090:	
  5725                           
  5726                           ;main.c: 262:     {;main.c: 263:         ackPacket[8] = ackPacket[8] + ackPacket[i];
  5727  0BA6  0831               	movf	GPS_HasAcknowledged@i,w
  5728  0BA7  3E25               	addlw	(low (GPS_HasAcknowledged@ackPacket| 0))& (0+255)
  5729  0BA8  0086               	movwf	6
  5730  0BA9  0187               	clrf	7
  5731  0BAA  082D               	movf	GPS_HasAcknowledged@ackPacket+8,w
  5732  0BAB  0701               	addwf	1,w
  5733  0BAC  00F0               	movwf	??_GPS_HasAcknowledged
  5734  0BAD  0870               	movf	??_GPS_HasAcknowledged,w
  5735  0BAE  00AD               	movwf	GPS_HasAcknowledged@ackPacket+8
  5736                           
  5737                           ;main.c: 264:         ackPacket[9] = ackPacket[9] + ackPacket[8];
  5738  0BAF  082E               	movf	GPS_HasAcknowledged@ackPacket+9,w
  5739  0BB0  072D               	addwf	GPS_HasAcknowledged@ackPacket+8,w
  5740  0BB1  00F0               	movwf	??_GPS_HasAcknowledged
  5741  0BB2  0870               	movf	??_GPS_HasAcknowledged,w
  5742  0BB3  00AE               	movwf	GPS_HasAcknowledged@ackPacket+9
  5743                           
  5744                           ;main.c: 265:     }
  5745  0BB4  3001               	movlw	1
  5746  0BB5  00F0               	movwf	??_GPS_HasAcknowledged
  5747  0BB6  0870               	movf	??_GPS_HasAcknowledged,w
  5748  0BB7  07B1               	addwf	GPS_HasAcknowledged@i,f
  5749  0BB8  3008               	movlw	8
  5750  0BB9  0231               	subwf	GPS_HasAcknowledged@i,w
  5751  0BBA  1C03               	skipc
  5752  0BBB  2BA6               	goto	l3090
  5753  0BBC                     l3098:	
  5754                           
  5755                           ;main.c: 268:     uint8_t ackByte;;main.c: 271:     uint8_t ackByteID = 0;
  5756  0BBC  01B0               	clrf	GPS_HasAcknowledged@ackByteID
  5757  0BBD                     l3100:	
  5758                           
  5759                           ;main.c: 275:     {;main.c: 278:         if (ackByteID > 9)
  5760  0BBD  300A               	movlw	10
  5761  0BBE  0020               	movlb	0	; select bank0
  5762  0BBF  0230               	subwf	GPS_HasAcknowledged@ackByteID,w
  5763  0BC0  1C03               	skipc
  5764  0BC1  2BC4               	goto	l3106
  5765                           
  5766                           ;main.c: 279:         {;main.c: 282:             return 1;
  5767  0BC2  3001               	movlw	1
  5768  0BC3  0008               	return
  5769  0BC4                     l3106:	
  5770                           
  5771                           ;main.c: 286:         if (ticks - startTime > 3000)
  5772  0BC4  0820               	movf	GPS_HasAcknowledged@startTime,w
  5773  0BC5  0021               	movlb	1	; select bank1
  5774  0BC6  0260               	subwf	_ticks^(0+128),w
  5775  0BC7  00F0               	movwf	??_GPS_HasAcknowledged
  5776  0BC8  0020               	movlb	0	; select bank0
  5777  0BC9  0821               	movf	GPS_HasAcknowledged@startTime+1,w
  5778  0BCA  0021               	movlb	1	; select bank1
  5779  0BCB  3B61               	subwfb	(_ticks+1)^(0+128),w
  5780  0BCC  00F1               	movwf	??_GPS_HasAcknowledged+1
  5781  0BCD  0020               	movlb	0	; select bank0
  5782  0BCE  0822               	movf	GPS_HasAcknowledged@startTime+2,w
  5783  0BCF  0021               	movlb	1	; select bank1
  5784  0BD0  3B62               	subwfb	(_ticks+2)^(0+128),w
  5785  0BD1  00F2               	movwf	??_GPS_HasAcknowledged+2
  5786  0BD2  0020               	movlb	0	; select bank0
  5787  0BD3  0823               	movf	GPS_HasAcknowledged@startTime+3,w
  5788  0BD4  0021               	movlb	1	; select bank1
  5789  0BD5  3B63               	subwfb	(_ticks+3)^(0+128),w
  5790  0BD6  00F3               	movwf	??_GPS_HasAcknowledged+3
  5791  0BD7  0873               	movf	??_GPS_HasAcknowledged+3,w
  5792  0BD8  1D03               	btfss	3,2
  5793  0BD9  2BE3               	goto	l3108
  5794  0BDA  0872               	movf	??_GPS_HasAcknowledged+2,w
  5795  0BDB  1D03               	btfss	3,2
  5796  0BDC  2BE3               	goto	l3108
  5797  0BDD  30B9               	movlw	185
  5798  0BDE  0270               	subwf	??_GPS_HasAcknowledged,w
  5799  0BDF  300B               	movlw	11
  5800  0BE0  3B71               	subwfb	??_GPS_HasAcknowledged+1,w
  5801  0BE1  1C03               	btfss	3,0
  5802  0BE2  2BE5               	goto	l3112
  5803  0BE3                     l3108:	
  5804                           
  5805                           ;main.c: 287:         {;main.c: 288:             return 0;
  5806  0BE3  3000               	movlw	0
  5807  0BE4  0008               	return
  5808  0BE5                     l3112:	
  5809                           
  5810                           ;main.c: 292:         if (EUSART_is_rx_ready())
  5811  0BE5  3196  2614  318B   	fcall	_EUSART_is_rx_ready
  5812  0BE8  3A00               	xorlw	0
  5813  0BE9  1903               	skipnz
  5814  0BEA  2BBD               	goto	l3100
  5815                           
  5816                           ;main.c: 293:         {;main.c: 294:             ackByte = EUSART_Read();
  5817  0BEB  3196  2650  318B   	fcall	_EUSART_Read
  5818  0BEE  00F0               	movwf	??_GPS_HasAcknowledged
  5819  0BEF  0870               	movf	??_GPS_HasAcknowledged,w
  5820  0BF0  0020               	movlb	0	; select bank0
  5821  0BF1  00A4               	movwf	GPS_HasAcknowledged@ackByte
  5822                           
  5823                           ;main.c: 297:             if (ackByte == ackPacket[ackByteID]) {
  5824  0BF2  0830               	movf	GPS_HasAcknowledged@ackByteID,w
  5825  0BF3  3E25               	addlw	(low (GPS_HasAcknowledged@ackPacket| 0))& (0+255)
  5826  0BF4  0086               	movwf	6
  5827  0BF5  0187               	clrf	7
  5828  0BF6  0801               	movf	1,w
  5829  0BF7  0624               	xorwf	GPS_HasAcknowledged@ackByte,w
  5830  0BF8  1D03               	skipz
  5831  0BF9  2BBC               	goto	l3098
  5832                           
  5833                           ;main.c: 298:                 ackByteID++;
  5834  0BFA  3001               	movlw	1
  5835  0BFB  00F0               	movwf	??_GPS_HasAcknowledged
  5836  0BFC  0870               	movf	??_GPS_HasAcknowledged,w
  5837  0BFD  07B0               	addwf	GPS_HasAcknowledged@ackByteID,f
  5838                           
  5839                           ;main.c: 299:             }
  5840  0BFE  2BBD               	goto	l3100
  5841  0BFF                     __end_of_GPS_HasAcknowledged:	
  5842                           
  5843                           	psect	text13
  5844  1665                     __ptext13:	
  5845 ;; *************** function _SYSTEM_Initialize *****************
  5846 ;; Defined at:
  5847 ;;		line 50 in file "mcc_generated_files/mcc.c"
  5848 ;; Parameters:    Size  Location     Type
  5849 ;;		None
  5850 ;; Auto vars:     Size  Location     Type
  5851 ;;		None
  5852 ;; Return value:  Size  Location     Type
  5853 ;;                  1    wreg      void 
  5854 ;; Registers used:
  5855 ;;		wreg, status,2, status,0, pclath, cstack
  5856 ;; Tracked objects:
  5857 ;;		On entry : 0/0
  5858 ;;		On exit  : 0/0
  5859 ;;		Unchanged: 0/0
  5860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5864 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5865 ;;Total ram usage:        0 bytes
  5866 ;; Hardware stack levels used:    1
  5867 ;; Hardware stack levels required when called:    5
  5868 ;; This function calls:
  5869 ;;		_EUSART_Initialize
  5870 ;;		_OSCILLATOR_Initialize
  5871 ;;		_PIN_MANAGER_Initialize
  5872 ;;		_TMR0_Initialize
  5873 ;; This function is called by:
  5874 ;;		_main
  5875 ;; This function uses a non-reentrant model
  5876 ;;
  5877                           
  5878                           
  5879                           ;psect for function _SYSTEM_Initialize
  5880  1665                     _SYSTEM_Initialize:	
  5881                           
  5882                           ;mcc_generated_files/mcc.c: 52:     PIN_MANAGER_Initialize();
  5883                           
  5884                           ;incstack = 0
  5885                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5886  1665  3188  209A  3196   	fcall	_PIN_MANAGER_Initialize
  5887                           
  5888                           ;mcc_generated_files/mcc.c: 53:     OSCILLATOR_Initialize();
  5889  1668  3196  2630  3196   	fcall	_OSCILLATOR_Initialize
  5890                           
  5891                           ;mcc_generated_files/mcc.c: 54:     TMR0_Initialize();
  5892  166B  3196  26A4  3196   	fcall	_TMR0_Initialize
  5893                           
  5894                           ;mcc_generated_files/mcc.c: 55:     EUSART_Initialize();
  5895  166E  3196  265A         	fcall	_EUSART_Initialize
  5896  1670  0008               	return
  5897  1671                     __end_of_SYSTEM_Initialize:	
  5898                           
  5899                           	psect	text14
  5900  16A4                     __ptext14:	
  5901 ;; *************** function _TMR0_Initialize *****************
  5902 ;; Defined at:
  5903 ;;		line 64 in file "mcc_generated_files/tmr0.c"
  5904 ;; Parameters:    Size  Location     Type
  5905 ;;		None
  5906 ;; Auto vars:     Size  Location     Type
  5907 ;;		None
  5908 ;; Return value:  Size  Location     Type
  5909 ;;                  1    wreg      void 
  5910 ;; Registers used:
  5911 ;;		wreg, status,2, status,0, pclath, cstack
  5912 ;; Tracked objects:
  5913 ;;		On entry : 0/0
  5914 ;;		On exit  : 0/0
  5915 ;;		Unchanged: 0/0
  5916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5919 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5920 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5921 ;;Total ram usage:        1 bytes
  5922 ;; Hardware stack levels used:    1
  5923 ;; Hardware stack levels required when called:    4
  5924 ;; This function calls:
  5925 ;;		_TMR0_SetInterruptHandler
  5926 ;; This function is called by:
  5927 ;;		_SYSTEM_Initialize
  5928 ;; This function uses a non-reentrant model
  5929 ;;
  5930                           
  5931                           
  5932                           ;psect for function _TMR0_Initialize
  5933  16A4                     _TMR0_Initialize:	
  5934                           
  5935                           ;mcc_generated_files/tmr0.c: 69:     OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | (0xD2 
      +                          & 0x3F));
  5936                           
  5937                           ;incstack = 0
  5938                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  5939  16A4  0021               	movlb	1	; select bank1
  5940  16A5  0815               	movf	21,w	;volatile
  5941  16A6  39C0               	andlw	192
  5942  16A7  3812               	iorlw	18
  5943  16A8  0095               	movwf	21	;volatile
  5944                           
  5945                           ;mcc_generated_files/tmr0.c: 72:     TMR0 = 0x83;
  5946  16A9  3083               	movlw	131
  5947  16AA  0020               	movlb	0	; select bank0
  5948  16AB  0095               	movwf	21	;volatile
  5949                           
  5950                           ;mcc_generated_files/tmr0.c: 75:     timer0ReloadVal= 131;
  5951  16AC  3083               	movlw	131
  5952  16AD  00F2               	movwf	??_TMR0_Initialize
  5953  16AE  0872               	movf	??_TMR0_Initialize,w
  5954  16AF  0021               	movlb	1	; select bank1
  5955  16B0  00EC               	movwf	_timer0ReloadVal^(0+128)	;volatile
  5956                           
  5957                           ;mcc_generated_files/tmr0.c: 78:     INTCONbits.TMR0IF = 0;
  5958  16B1  110B               	bcf	11,2	;volatile
  5959                           
  5960                           ;mcc_generated_files/tmr0.c: 81:     INTCONbits.TMR0IE = 1;
  5961  16B2  168B               	bsf	11,5	;volatile
  5962                           
  5963                           ;mcc_generated_files/tmr0.c: 84:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  5964  16B3  3003               	movlw	low _TMR0_DefaultInterruptHandler
  5965  16B4  00F0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  5966  16B5  3000               	movlw	high _TMR0_DefaultInterruptHandler
  5967  16B6  00F1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  5968  16B7  3196  261E         	fcall	_TMR0_SetInterruptHandler
  5969  16B9  0008               	return
  5970  16BA                     __end_of_TMR0_Initialize:	
  5971                           
  5972                           	psect	text15
  5973  161E                     __ptext15:	
  5974 ;; *************** function _TMR0_SetInterruptHandler *****************
  5975 ;; Defined at:
  5976 ;;		line 125 in file "mcc_generated_files/tmr0.c"
  5977 ;; Parameters:    Size  Location     Type
  5978 ;;  InterruptHan    2    0[COMMON] PTR FTN()void 
  5979 ;;		 -> TimerISR(1), TMR0_DefaultInterruptHandler(1), 
  5980 ;; Auto vars:     Size  Location     Type
  5981 ;;		None
  5982 ;; Return value:  Size  Location     Type
  5983 ;;                  1    wreg      void 
  5984 ;; Registers used:
  5985 ;;		wreg
  5986 ;; Tracked objects:
  5987 ;;		On entry : 0/0
  5988 ;;		On exit  : 0/0
  5989 ;;		Unchanged: 0/0
  5990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5991 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5994 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5995 ;;Total ram usage:        2 bytes
  5996 ;; Hardware stack levels used:    1
  5997 ;; Hardware stack levels required when called:    3
  5998 ;; This function calls:
  5999 ;;		Nothing
  6000 ;; This function is called by:
  6001 ;;		_TMR0_Initialize
  6002 ;;		_main
  6003 ;; This function uses a non-reentrant model
  6004 ;;
  6005                           
  6006                           
  6007                           ;psect for function _TMR0_SetInterruptHandler
  6008  161E                     _TMR0_SetInterruptHandler:	
  6009                           
  6010                           ;mcc_generated_files/tmr0.c: 126:     TMR0_InterruptHandler = InterruptHandler;
  6011                           
  6012                           ;incstack = 0
  6013                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  6014  161E  0871               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  6015  161F  0022               	movlb	2	; select bank2
  6016  1620  00EC               	movwf	(_TMR0_InterruptHandler+1)^(0+256)
  6017  1621  0870               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  6018  1622  00EB               	movwf	_TMR0_InterruptHandler^(0+256)
  6019  1623  0008               	return
  6020  1624                     __end_of_TMR0_SetInterruptHandler:	
  6021                           
  6022                           	psect	text16
  6023  089A                     __ptext16:	
  6024 ;; *************** function _PIN_MANAGER_Initialize *****************
  6025 ;; Defined at:
  6026 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
  6027 ;; Parameters:    Size  Location     Type
  6028 ;;		None
  6029 ;; Auto vars:     Size  Location     Type
  6030 ;;		None
  6031 ;; Return value:  Size  Location     Type
  6032 ;;                  1    wreg      void 
  6033 ;; Registers used:
  6034 ;;		wreg, status,2
  6035 ;; Tracked objects:
  6036 ;;		On entry : 0/0
  6037 ;;		On exit  : 0/0
  6038 ;;		Unchanged: 0/0
  6039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6043 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6044 ;;Total ram usage:        0 bytes
  6045 ;; Hardware stack levels used:    1
  6046 ;; Hardware stack levels required when called:    3
  6047 ;; This function calls:
  6048 ;;		Nothing
  6049 ;; This function is called by:
  6050 ;;		_SYSTEM_Initialize
  6051 ;; This function uses a non-reentrant model
  6052 ;;
  6053                           
  6054                           
  6055                           ;psect for function _PIN_MANAGER_Initialize
  6056  089A                     _PIN_MANAGER_Initialize:	
  6057                           
  6058                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  6059                           
  6060                           ;incstack = 0
  6061                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  6062  089A  0022               	movlb	2	; select bank2
  6063  089B  018C               	clrf	12	;volatile
  6064                           
  6065                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  6066  089C  018D               	clrf	13	;volatile
  6067                           
  6068                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  6069  089D  018E               	clrf	14	;volatile
  6070                           
  6071                           ;mcc_generated_files/pin_manager.c: 69:     TRISA = 0x03;
  6072  089E  3003               	movlw	3
  6073  089F  0021               	movlb	1	; select bank1
  6074  08A0  008C               	movwf	12	;volatile
  6075                           
  6076                           ;mcc_generated_files/pin_manager.c: 70:     TRISB = 0x70;
  6077  08A1  3070               	movlw	112
  6078  08A2  008D               	movwf	13	;volatile
  6079                           
  6080                           ;mcc_generated_files/pin_manager.c: 71:     TRISC = 0xDF;
  6081  08A3  30DF               	movlw	223
  6082  08A4  008E               	movwf	14	;volatile
  6083                           
  6084                           ;mcc_generated_files/pin_manager.c: 76:     ANSELC = 0x4F;
  6085  08A5  304F               	movlw	79
  6086  08A6  0023               	movlb	3	; select bank3
  6087  08A7  008E               	movwf	14	;volatile
  6088                           
  6089                           ;mcc_generated_files/pin_manager.c: 77:     ANSELB = 0xB0;
  6090  08A8  30B0               	movlw	176
  6091  08A9  008D               	movwf	13	;volatile
  6092                           
  6093                           ;mcc_generated_files/pin_manager.c: 78:     ANSELA = 0x03;
  6094  08AA  3003               	movlw	3
  6095  08AB  008C               	movwf	12	;volatile
  6096                           
  6097                           ;mcc_generated_files/pin_manager.c: 83:     WPUB = 0x00;
  6098  08AC  0024               	movlb	4	; select bank4
  6099  08AD  018D               	clrf	13	;volatile
  6100                           
  6101                           ;mcc_generated_files/pin_manager.c: 84:     WPUA = 0x00;
  6102  08AE  018C               	clrf	12	;volatile
  6103                           
  6104                           ;mcc_generated_files/pin_manager.c: 85:     WPUC = 0x00;
  6105  08AF  018E               	clrf	14	;volatile
  6106                           
  6107                           ;mcc_generated_files/pin_manager.c: 86:     OPTION_REGbits.nWPUEN = 1;
  6108  08B0  0021               	movlb	1	; select bank1
  6109  08B1  1795               	bsf	21,7	;volatile
  6110                           
  6111                           ;mcc_generated_files/pin_manager.c: 91:     ODCONA = 0x00;
  6112  08B2  0025               	movlb	5	; select bank5
  6113  08B3  018C               	clrf	12	;volatile
  6114                           
  6115                           ;mcc_generated_files/pin_manager.c: 92:     ODCONB = 0x00;
  6116  08B4  018D               	clrf	13	;volatile
  6117                           
  6118                           ;mcc_generated_files/pin_manager.c: 93:     ODCONC = 0x00;
  6119  08B5  018E               	clrf	14	;volatile
  6120                           
  6121                           ;mcc_generated_files/pin_manager.c: 98:     SLRCONA = 0x37;
  6122  08B6  3037               	movlw	55
  6123  08B7  0026               	movlb	6	; select bank6
  6124  08B8  008C               	movwf	12	;volatile
  6125                           
  6126                           ;mcc_generated_files/pin_manager.c: 99:     SLRCONB = 0xF0;
  6127  08B9  30F0               	movlw	240
  6128  08BA  008D               	movwf	13	;volatile
  6129                           
  6130                           ;mcc_generated_files/pin_manager.c: 100:     SLRCONC = 0xFF;
  6131  08BB  30FF               	movlw	255
  6132  08BC  008E               	movwf	14	;volatile
  6133                           
  6134                           ;mcc_generated_files/pin_manager.c: 109:     RXPPS = 0x0E;
  6135  08BD  300E               	movlw	14
  6136  08BE  003C               	movlb	28	; select bank28
  6137  08BF  00A4               	movwf	36	;volatile
  6138                           
  6139                           ;mcc_generated_files/pin_manager.c: 110:     RB7PPS = 0x12;
  6140  08C0  3012               	movlw	18
  6141  08C1  003D               	movlb	29	; select bank29
  6142  08C2  009F               	movwf	31	;volatile
  6143  08C3  0008               	return
  6144  08C4                     __end_of_PIN_MANAGER_Initialize:	
  6145                           
  6146                           	psect	text17
  6147  1630                     __ptext17:	
  6148 ;; *************** function _OSCILLATOR_Initialize *****************
  6149 ;; Defined at:
  6150 ;;		line 58 in file "mcc_generated_files/mcc.c"
  6151 ;; Parameters:    Size  Location     Type
  6152 ;;		None
  6153 ;; Auto vars:     Size  Location     Type
  6154 ;;		None
  6155 ;; Return value:  Size  Location     Type
  6156 ;;                  1    wreg      void 
  6157 ;; Registers used:
  6158 ;;		wreg, status,2
  6159 ;; Tracked objects:
  6160 ;;		On entry : 0/0
  6161 ;;		On exit  : 0/0
  6162 ;;		Unchanged: 0/0
  6163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6167 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6168 ;;Total ram usage:        0 bytes
  6169 ;; Hardware stack levels used:    1
  6170 ;; Hardware stack levels required when called:    3
  6171 ;; This function calls:
  6172 ;;		Nothing
  6173 ;; This function is called by:
  6174 ;;		_SYSTEM_Initialize
  6175 ;; This function uses a non-reentrant model
  6176 ;;
  6177                           
  6178                           
  6179                           ;psect for function _OSCILLATOR_Initialize
  6180  1630                     _OSCILLATOR_Initialize:	
  6181                           
  6182                           ;mcc_generated_files/mcc.c: 61:     OSCCON = 0x68;
  6183                           
  6184                           ;incstack = 0
  6185                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  6186  1630  3068               	movlw	104
  6187  1631  0021               	movlb	1	; select bank1
  6188  1632  0099               	movwf	25	;volatile
  6189                           
  6190                           ;mcc_generated_files/mcc.c: 63:     OSCTUNE = 0x00;
  6191  1633  0198               	clrf	24	;volatile
  6192                           
  6193                           ;mcc_generated_files/mcc.c: 65:     BORCON = 0x00;
  6194  1634  0022               	movlb	2	; select bank2
  6195  1635  0196               	clrf	22	;volatile
  6196  1636  0008               	return
  6197  1637                     __end_of_OSCILLATOR_Initialize:	
  6198                           
  6199                           	psect	text18
  6200  165A                     __ptext18:	
  6201 ;; *************** function _EUSART_Initialize *****************
  6202 ;; Defined at:
  6203 ;;		line 56 in file "mcc_generated_files/eusart.c"
  6204 ;; Parameters:    Size  Location     Type
  6205 ;;		None
  6206 ;; Auto vars:     Size  Location     Type
  6207 ;;		None
  6208 ;; Return value:  Size  Location     Type
  6209 ;;                  1    wreg      void 
  6210 ;; Registers used:
  6211 ;;		wreg, status,2
  6212 ;; Tracked objects:
  6213 ;;		On entry : 0/0
  6214 ;;		On exit  : 0/0
  6215 ;;		Unchanged: 0/0
  6216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6220 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6221 ;;Total ram usage:        0 bytes
  6222 ;; Hardware stack levels used:    1
  6223 ;; Hardware stack levels required when called:    3
  6224 ;; This function calls:
  6225 ;;		Nothing
  6226 ;; This function is called by:
  6227 ;;		_SYSTEM_Initialize
  6228 ;; This function uses a non-reentrant model
  6229 ;;
  6230                           
  6231                           
  6232                           ;psect for function _EUSART_Initialize
  6233  165A                     _EUSART_Initialize:	
  6234                           
  6235                           ;mcc_generated_files/eusart.c: 61:     BAUD1CON = 0x08;
  6236                           
  6237                           ;incstack = 0
  6238                           ; Regs used in _EUSART_Initialize: [wreg+status,2]
  6239  165A  3008               	movlw	8
  6240  165B  0023               	movlb	3	; select bank3
  6241  165C  009F               	movwf	31	;volatile
  6242                           
  6243                           ;mcc_generated_files/eusart.c: 64:     RC1STA = 0x90;
  6244  165D  3090               	movlw	144
  6245  165E  009D               	movwf	29	;volatile
  6246                           
  6247                           ;mcc_generated_files/eusart.c: 67:     TX1STA = 0x24;
  6248  165F  3024               	movlw	36
  6249  1660  009E               	movwf	30	;volatile
  6250                           
  6251                           ;mcc_generated_files/eusart.c: 70:     SPBRGL = 0x67;
  6252  1661  3067               	movlw	103
  6253  1662  009B               	movwf	27	;volatile
  6254                           
  6255                           ;mcc_generated_files/eusart.c: 73:     SPBRGH = 0x00;
  6256  1663  019C               	clrf	28	;volatile
  6257  1664  0008               	return
  6258  1665                     __end_of_EUSART_Initialize:	
  6259                           
  6260                           	psect	text19
  6261  0069                     __ptext19:	
  6262 ;; *************** function _GetNavData *****************
  6263 ;; Defined at:
  6264 ;;		line 421 in file "main.c"
  6265 ;; Parameters:    Size  Location     Type
  6266 ;;		None
  6267 ;; Auto vars:     Size  Location     Type
  6268 ;;  skip            1   51[BANK1 ] _Bool 
  6269 ;;  temp_time      10   33[BANK1 ] unsigned char [10]
  6270 ;;  data_type       7   26[BANK1 ] unsigned char [7]
  6271 ;;  startTime       4   43[BANK1 ] unsigned long 
  6272 ;;  dataIndex       2   56[BANK1 ] int 
  6273 ;;  dataFieldTyp    2   54[BANK1 ] int 
  6274 ;;  index           2    0        int 
  6275 ;;  byte            1   58[BANK1 ] unsigned char 
  6276 ;;  doParse         1   53[BANK1 ] _Bool 
  6277 ;;  success         1   52[BANK1 ] _Bool 
  6278 ;; Return value:  Size  Location     Type
  6279 ;;                  1    wreg      _Bool 
  6280 ;; Registers used:
  6281 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6282 ;; Tracked objects:
  6283 ;;		On entry : 0/0
  6284 ;;		On exit  : 0/0
  6285 ;;		Unchanged: 0/0
  6286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6288 ;;      Locals:         0       0      35       0       0       0       0       0       0       0       0       0       
      +0       0
  6289 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6290 ;;      Totals:         0       4      35       0       0       0       0       0       0       0       0       0       
      +0       0
  6291 ;;Total ram usage:       39 bytes
  6292 ;; Hardware stack levels used:    1
  6293 ;; Hardware stack levels required when called:   12
  6294 ;; This function calls:
  6295 ;;		_ClearString
  6296 ;;		_EUSART_Read
  6297 ;;		_EUSART_is_rx_ready
  6298 ;;		_FindString
  6299 ;;		_SafeSetByte
  6300 ;;		_printf
  6301 ;;		_strlen
  6302 ;; This function is called by:
  6303 ;;		_main
  6304 ;; This function uses a non-reentrant model
  6305 ;;
  6306                           
  6307                           
  6308                           ;psect for function _GetNavData
  6309  0069                     _GetNavData:	
  6310                           
  6311                           ;main.c: 423:     _Bool success = 0;
  6312                           
  6313                           ;incstack = 0
  6314                           ; Regs used in _GetNavData: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6315  0069  0021               	movlb	1	; select bank1
  6316  006A  01D4               	clrf	GetNavData@success^(0+128)
  6317  006B  0022               	movlb	2	; select bank2
  6318  006C  168E               	bsf	14,5	;volatile
  6319                           
  6320                           ;main.c: 430:     unsigned long startTime = ticks;
  6321  006D  0021               	movlb	1	; select bank1
  6322  006E  0863               	movf	(_ticks+3)^(0+128),w
  6323  006F  00CE               	movwf	(GetNavData@startTime+3)^(0+128)
  6324  0070  0862               	movf	(_ticks+2)^(0+128),w
  6325  0071  00CD               	movwf	(GetNavData@startTime+2)^(0+128)
  6326  0072  0861               	movf	(_ticks+1)^(0+128),w
  6327  0073  00CC               	movwf	(GetNavData@startTime+1)^(0+128)
  6328  0074  0860               	movf	_ticks^(0+128),w
  6329  0075  00CB               	movwf	GetNavData@startTime^(0+128)
  6330                           
  6331                           ;main.c: 433:     int dataIndex = 0;
  6332  0076  01D8               	clrf	GetNavData@dataIndex^(0+128)
  6333  0077  01D9               	clrf	(GetNavData@dataIndex+1)^(0+128)
  6334                           
  6335                           ;main.c: 435:     int dataFieldType = 0;
  6336  0078  01D6               	clrf	GetNavData@dataFieldType^(0+128)
  6337  0079  01D7               	clrf	(GetNavData@dataFieldType+1)^(0+128)
  6338                           
  6339                           ;main.c: 437:     char byte;;main.c: 439:     char data_type[7] = {'\0'};
  6340  007A  30BA               	movlw	low GetNavData@data_type
  6341  007B  0086               	movwf	6
  6342  007C  3000               	movlw	high GetNavData@data_type
  6343  007D  0087               	movwf	7
  6344  007E  3007               	movlw	7
  6345  007F  0020               	movlb	0	; select bank0
  6346  0080  00E9               	movwf	??_GetNavData
  6347  0081  3000               	movlw	0
  6348  0082                     u3950:	
  6349  0082  001E               	movwi fsr1++
  6350  0083  0BE9               	decfsz	??_GetNavData,f
  6351  0084  2882               	goto	u3950
  6352                           
  6353                           ;main.c: 441:     _Bool doParse = 0;
  6354  0085  0021               	movlb	1	; select bank1
  6355  0086  01D5               	clrf	GetNavData@doParse^(0+128)
  6356                           
  6357                           ;main.c: 443:     char temp_time[10] = {'\0'};
  6358  0087  30C1               	movlw	low GetNavData@temp_time
  6359  0088  0086               	movwf	6
  6360  0089  3000               	movlw	high GetNavData@temp_time
  6361  008A  0087               	movwf	7
  6362  008B  300A               	movlw	10
  6363  008C  0020               	movlb	0	; select bank0
  6364  008D  00E9               	movwf	??_GetNavData
  6365  008E  3000               	movlw	0
  6366  008F                     u3960:	
  6367  008F  001E               	movwi fsr1++
  6368  0090  0BE9               	decfsz	??_GetNavData,f
  6369  0091  288F               	goto	u3960
  6370                           
  6371                           ;main.c: 445:     ClearString(gps_latitude);
  6372  0092  30C1               	movlw	low _gps_latitude
  6373  0093  00F4               	movwf	ClearString@str
  6374  0094  3001               	movlw	high _gps_latitude
  6375  0095  00F5               	movwf	ClearString@str+1
  6376  0096  3197  27B5  3180   	fcall	_ClearString
  6377                           
  6378                           ;main.c: 446:     ClearString(gps_longitude);
  6379  0099  30B1               	movlw	low _gps_longitude
  6380  009A  00F4               	movwf	ClearString@str
  6381  009B  3001               	movlw	high _gps_longitude
  6382  009C  00F5               	movwf	ClearString@str+1
  6383  009D  3197  27B5  3180   	fcall	_ClearString
  6384                           
  6385                           ;main.c: 447:     ClearString(gps_altitude);
  6386  00A0  30D1               	movlw	low _gps_altitude
  6387  00A1  00F4               	movwf	ClearString@str
  6388  00A2  3001               	movlw	high _gps_altitude
  6389  00A3  00F5               	movwf	ClearString@str+1
  6390  00A4  3197  27B5  3180   	fcall	_ClearString
  6391                           
  6392                           ;main.c: 448:     ClearString(gps_nav_status);
  6393  00A7  3060               	movlw	low _gps_nav_status
  6394  00A8  00F4               	movwf	ClearString@str
  6395  00A9  3001               	movlw	high _gps_nav_status
  6396  00AA  00F5               	movwf	ClearString@str+1
  6397  00AB  3197  27B5  3180   	fcall	_ClearString
  6398                           
  6399                           ;main.c: 449:     ClearString(gps_hdop);
  6400  00AE  3052               	movlw	low _gps_hdop
  6401  00AF  00F4               	movwf	ClearString@str
  6402  00B0  3001               	movlw	high _gps_hdop
  6403  00B1  00F5               	movwf	ClearString@str+1
  6404  00B2  3197  27B5  3180   	fcall	_ClearString
  6405                           
  6406                           ;main.c: 450:     ClearString(gps_vdop);
  6407  00B5  304A               	movlw	low _gps_vdop
  6408  00B6  00F4               	movwf	ClearString@str
  6409  00B7  3001               	movlw	high _gps_vdop
  6410  00B8  00F5               	movwf	ClearString@str+1
  6411  00B9  3197  27B5  3180   	fcall	_ClearString
  6412                           
  6413                           ;main.c: 451:     ClearString(gps_speed_over_ground);
  6414  00BC  3036               	movlw	low _gps_speed_over_ground
  6415  00BD  00F4               	movwf	ClearString@str
  6416  00BE  3001               	movlw	high _gps_speed_over_ground
  6417  00BF  00F5               	movwf	ClearString@str+1
  6418  00C0  3197  27B5  3180   	fcall	_ClearString
  6419                           
  6420                           ;main.c: 452:     ClearString(gps_course_over_ground);
  6421  00C3  302C               	movlw	low _gps_course_over_ground
  6422  00C4  00F4               	movwf	ClearString@str
  6423  00C5  3001               	movlw	high _gps_course_over_ground
  6424  00C6  00F5               	movwf	ClearString@str+1
  6425  00C7  3197  27B5  3180   	fcall	_ClearString
  6426                           
  6427                           ;main.c: 453:     ClearString(gps_vertical_velocity);
  6428  00CA  3022               	movlw	low _gps_vertical_velocity
  6429  00CB  00F4               	movwf	ClearString@str
  6430  00CC  3001               	movlw	high _gps_vertical_velocity
  6431  00CD  00F5               	movwf	ClearString@str+1
  6432  00CE  3197  27B5  3180   	fcall	_ClearString
  6433                           
  6434                           ;main.c: 458:     printf("$PUBX,00*33\r\n");
  6435  00D1  30C5               	movlw	low (STR_7| (0+32768))
  6436  00D2  0020               	movlb	0	; select bank0
  6437  00D3  00E3               	movwf	printf@fmt
  6438  00D4  3098               	movlw	high (STR_7| (0+32768))
  6439  00D5  00E4               	movwf	printf@fmt+1
  6440  00D6  3196  2681  3180   	fcall	_printf
  6441  00D9                     l4112:	
  6442                           ;main.c: 460:     while (!success)
  6443                           
  6444                           
  6445                           ;main.c: 460:     while (!success)
  6446  00D9  0021               	movlb	1	; select bank1
  6447  00DA  0854               	movf	GetNavData@success^(0+128),w
  6448  00DB  1D03               	btfss	3,2
  6449  00DC  2AF8               	goto	l4114
  6450                           
  6451                           ;main.c: 461:     {;main.c: 463:         if (ticks - startTime > 3000)
  6452  00DD  084B               	movf	GetNavData@startTime^(0+128),w
  6453  00DE  0260               	subwf	_ticks^(0+128),w
  6454  00DF  0020               	movlb	0	; select bank0
  6455  00E0  00E9               	movwf	??_GetNavData
  6456  00E1  0021               	movlb	1	; select bank1
  6457  00E2  084C               	movf	(GetNavData@startTime+1)^(0+128),w
  6458  00E3  3B61               	subwfb	(_ticks+1)^(0+128),w
  6459  00E4  0020               	movlb	0	; select bank0
  6460  00E5  00EA               	movwf	??_GetNavData+1
  6461  00E6  0021               	movlb	1	; select bank1
  6462  00E7  084D               	movf	(GetNavData@startTime+2)^(0+128),w
  6463  00E8  3B62               	subwfb	(_ticks+2)^(0+128),w
  6464  00E9  0020               	movlb	0	; select bank0
  6465  00EA  00EB               	movwf	??_GetNavData+2
  6466  00EB  0021               	movlb	1	; select bank1
  6467  00EC  084E               	movf	(GetNavData@startTime+3)^(0+128),w
  6468  00ED  3B63               	subwfb	(_ticks+3)^(0+128),w
  6469  00EE  0020               	movlb	0	; select bank0
  6470  00EF  00EC               	movwf	??_GetNavData+3
  6471  00F0  086C               	movf	??_GetNavData+3,w
  6472  00F1  1D03               	btfss	3,2
  6473  00F2  2AF8               	goto	l4114
  6474  00F3  086B               	movf	??_GetNavData+2,w
  6475  00F4  1D03               	btfss	3,2
  6476  00F5  2AF8               	goto	l4114
  6477  00F6  30B9               	movlw	185
  6478  00F7  0269               	subwf	??_GetNavData,w
  6479  00F8  300B               	movlw	11
  6480  00F9  3B6A               	subwfb	??_GetNavData+1,w
  6481  00FA  1803               	btfsc	3,0
  6482  00FB  2AF8               	goto	l4114
  6483                           
  6484                           ;main.c: 469:         if (EUSART_is_rx_ready())
  6485  00FC  3196  2614  3180   	fcall	_EUSART_is_rx_ready
  6486  00FF  3A00               	xorlw	0
  6487  0100  1903               	skipnz
  6488  0101  2ABA               	goto	l4094
  6489                           
  6490                           ;main.c: 470:         {;main.c: 471:             byte = EUSART_Read();
  6491  0102  3196  2650  3180   	fcall	_EUSART_Read
  6492  0105  0020               	movlb	0	; select bank0
  6493  0106  00E9               	movwf	??_GetNavData
  6494  0107  0869               	movf	??_GetNavData,w
  6495  0108  0021               	movlb	1	; select bank1
  6496  0109  00DA               	movwf	GetNavData@byte^(0+128)
  6497                           
  6498                           ;main.c: 492:             _Bool skip = 1;
  6499  010A  01D3               	clrf	GetNavData@skip^(0+128)
  6500  010B  0AD3               	incf	GetNavData@skip^(0+128),f
  6501                           
  6502                           ;main.c: 493:             switch (byte)
  6503  010C  295F               	goto	l4046
  6504  010D                     l351:	
  6505                           ;main.c: 494:             {;main.c: 495:             case '$':
  6506                           
  6507                           
  6508                           ;main.c: 496:                 doParse = 1;
  6509  010D  0021               	movlb	1	; select bank1
  6510  010E  01D5               	clrf	GetNavData@doParse^(0+128)
  6511  010F  0AD5               	incf	GetNavData@doParse^(0+128),f
  6512                           
  6513                           ;main.c: 497:                 skip = 0;
  6514  0110  01D3               	clrf	GetNavData@skip^(0+128)
  6515  0111  2942               	goto	l4038
  6516  0112                     l4026:	
  6517                           ;main.c: 499:                 break;
  6518                           
  6519                           ;main.c: 498:                 dataIndex = 0;
  6520                           
  6521                           
  6522                           ;main.c: 501:                 if (dataFieldType == PUBX_DATA_TYPE && !FindString(data_ty
      +                          pe, strlen(data_type), "PUBX", 4))
  6523  0112  0021               	movlb	1	; select bank1
  6524  0113  0856               	movf	GetNavData@dataFieldType^(0+128),w
  6525  0114  0457               	iorwf	(GetNavData@dataFieldType+1)^(0+128),w
  6526  0115  1D03               	btfss	3,2
  6527  0116  293A               	goto	l4034
  6528  0117  30BA               	movlw	low GetNavData@data_type
  6529  0118  00F0               	movwf	strlen@s
  6530  0119  3000               	movlw	high GetNavData@data_type
  6531  011A  00F1               	movwf	strlen@s+1
  6532  011B  3196  26D0  3180   	fcall	_strlen
  6533  011E  0871               	movf	?_strlen+1,w
  6534  011F  00F5               	movwf	FindString@srcLen+1
  6535  0120  0870               	movf	?_strlen,w
  6536  0121  00F4               	movwf	FindString@srcLen
  6537  0122  30DA               	movlw	low (STR_8| (0+32768))
  6538  0123  00F6               	movwf	FindString@target
  6539  0124  3098               	movlw	high (STR_8| (0+32768))
  6540  0125  00F7               	movwf	FindString@target+1
  6541  0126  3004               	movlw	4
  6542  0127  00F8               	movwf	FindString@targetLen
  6543  0128  3000               	movlw	0
  6544  0129  00F9               	movwf	FindString@targetLen+1
  6545  012A  30BA               	movlw	(low (GetNavData@data_type| 0))& (0+255)
  6546  012B  3189  21D6  3180   	fcall	_FindString
  6547  012E  3A00               	xorlw	0
  6548  012F  1D03               	skipz
  6549  0130  293A               	goto	l4034
  6550                           
  6551                           ;main.c: 502:                 {;main.c: 503:                     doParse = 0;
  6552  0131  0021               	movlb	1	; select bank1
  6553  0132  01D5               	clrf	GetNavData@doParse^(0+128)
  6554                           
  6555                           ;main.c: 504:                     ClearString(data_type);
  6556  0133  30BA               	movlw	low GetNavData@data_type
  6557  0134  00F4               	movwf	ClearString@str
  6558  0135  3000               	movlw	high GetNavData@data_type
  6559  0136  00F5               	movwf	ClearString@str+1
  6560  0137  3197  27B5  3180   	fcall	_ClearString
  6561  013A                     l4034:	
  6562                           
  6563                           ;main.c: 506:                 if (doParse)
  6564  013A  0021               	movlb	1	; select bank1
  6565  013B  0855               	movf	GetNavData@doParse^(0+128),w
  6566  013C  1903               	btfsc	3,2
  6567  013D  2942               	goto	l4038
  6568                           
  6569                           ;main.c: 507:                 {;main.c: 508:                     dataFieldType++;
  6570  013E  3001               	movlw	1
  6571  013F  07D6               	addwf	GetNavData@dataFieldType^(0+128),f
  6572  0140  3000               	movlw	0
  6573  0141  3DD7               	addwfc	(GetNavData@dataFieldType+1)^(0+128),f
  6574  0142                     l4038:	
  6575                           
  6576                           ;main.c: 510:                 dataIndex = 0;
  6577  0142  01D8               	clrf	GetNavData@dataIndex^(0+128)
  6578  0143  01D9               	clrf	(GetNavData@dataIndex+1)^(0+128)
  6579                           
  6580                           ;main.c: 511:                 break;
  6581  0144  2973               	goto	l4048
  6582  0145                     l4040:	
  6583                           
  6584                           ;main.c: 513:                 success = dataFieldType > 13;
  6585  0145  0021               	movlb	1	; select bank1
  6586  0146  0857               	movf	(GetNavData@dataFieldType+1)^(0+128),w
  6587  0147  3A80               	xorlw	128
  6588  0148  0020               	movlb	0	; select bank0
  6589  0149  00E9               	movwf	??_GetNavData
  6590  014A  3080               	movlw	128
  6591  014B  0269               	subwf	??_GetNavData,w
  6592  014C  1D03               	skipz
  6593  014D  2951               	goto	u4025
  6594  014E  300E               	movlw	14
  6595  014F  0021               	movlb	1	; select bank1
  6596  0150  0256               	subwf	GetNavData@dataFieldType^(0+128),w
  6597  0151                     u4025:	
  6598  0151  1C03               	btfss	3,0
  6599  0152  2955               	goto	u4020
  6600  0153  3001               	movlw	1
  6601  0154  2956               	goto	u4030
  6602  0155                     u4020:	
  6603  0155  3000               	movlw	0
  6604  0156                     u4030:	
  6605  0156  0020               	movlb	0	; select bank0
  6606  0157  00EA               	movwf	??_GetNavData+1
  6607  0158  086A               	movf	??_GetNavData+1,w
  6608  0159  0021               	movlb	1	; select bank1
  6609  015A  00D4               	movwf	GetNavData@success^(0+128)
  6610                           
  6611                           ;main.c: 514:                 break;
  6612  015B  2973               	goto	l4048
  6613  015C                     l4042:	
  6614                           
  6615                           ;main.c: 516:                 skip = 0;
  6616  015C  0021               	movlb	1	; select bank1
  6617  015D  01D3               	clrf	GetNavData@skip^(0+128)
  6618                           
  6619                           ;main.c: 517:                 break;
  6620  015E  2973               	goto	l4048
  6621  015F                     l4046:	
  6622  015F  085A               	movf	GetNavData@byte^(0+128),w
  6623  0160  0020               	movlb	0	; select bank0
  6624  0161  00E9               	movwf	??_GetNavData
  6625  0162  01EA               	clrf	??_GetNavData+1
  6626                           
  6627                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6628                           ; Switch size 1, requested type "simple"
  6629                           ; Number of cases is 1, Range of values is 0 to 0
  6630                           ; switch strategies available:
  6631                           ; Name         Instructions Cycles
  6632                           ; simple_byte            4     3 (average)
  6633                           ; direct_byte            8     6 (fixed)
  6634                           ; jumptable            260     6 (fixed)
  6635                           ;	Chosen strategy is simple_byte
  6636  0163  086A               	movf	??_GetNavData+1,w
  6637  0164  3A00               	xorlw	0	; case 0
  6638  0165  1903               	skipnz
  6639  0166  2968               	goto	l4292
  6640  0167  295C               	goto	l4042
  6641  0168                     l4292:	
  6642                           
  6643                           ; Switch size 1, requested type "simple"
  6644                           ; Number of cases is 3, Range of values is 10 to 44
  6645                           ; switch strategies available:
  6646                           ; Name         Instructions Cycles
  6647                           ; simple_byte           10     6 (average)
  6648                           ; direct_byte           79     9 (fixed)
  6649                           ; jumptable            263     9 (fixed)
  6650                           ;	Chosen strategy is simple_byte
  6651  0168  0869               	movf	??_GetNavData,w
  6652  0169  3A0A               	xorlw	10	; case 10
  6653  016A  1903               	skipnz
  6654  016B  2945               	goto	l4040
  6655  016C  3A2E               	xorlw	46	; case 36
  6656  016D  1903               	skipnz
  6657  016E  290D               	goto	l351
  6658  016F  3A08               	xorlw	8	; case 44
  6659  0170  1903               	skipnz
  6660  0171  2912               	goto	l4026
  6661  0172  295C               	goto	l4042
  6662  0173                     l4048:	
  6663                           
  6664                           ;main.c: 519:             if (!skip && doParse)
  6665  0173  0853               	movf	GetNavData@skip^(0+128),w
  6666  0174  1D03               	btfss	3,2
  6667  0175  2ABA               	goto	l4094
  6668  0176  0855               	movf	GetNavData@doParse^(0+128),w
  6669  0177  1D03               	btfss	3,2
  6670  0178  2A87               	goto	l4090
  6671  0179  2ABA               	goto	l4094
  6672  017A                     l4054:	
  6673                           
  6674                           ;main.c: 524:                     SafeSetByte(data_type, 7, dataIndex, byte);
  6675  017A  30BA               	movlw	low GetNavData@data_type
  6676  017B  00F0               	movwf	SafeSetByte@dest
  6677  017C  3000               	movlw	high GetNavData@data_type
  6678  017D  00F1               	movwf	SafeSetByte@dest+1
  6679  017E  3007               	movlw	7
  6680  017F  00F2               	movwf	SafeSetByte@length
  6681  0180  3000               	movlw	0
  6682  0181  00F3               	movwf	SafeSetByte@length+1
  6683  0182  0859               	movf	(GetNavData@dataIndex+1)^(0+128),w
  6684  0183  00F5               	movwf	SafeSetByte@index+1
  6685  0184  0858               	movf	GetNavData@dataIndex^(0+128),w
  6686  0185  00F4               	movwf	SafeSetByte@index
  6687  0186  085A               	movf	GetNavData@byte^(0+128),w
  6688  0187  0020               	movlb	0	; select bank0
  6689  0188  00E9               	movwf	??_GetNavData
  6690  0189  0869               	movf	??_GetNavData,w
  6691  018A  00F6               	movwf	SafeSetByte@data
  6692  018B  3188  2071  3180   	fcall	_SafeSetByte
  6693                           
  6694                           ;main.c: 525:                     break;
  6695  018E  2AB5               	goto	l4092
  6696  018F                     l4056:	
  6697                           
  6698                           ;main.c: 528:                     SafeSetByte(temp_time, 10, dataIndex, byte);
  6699  018F  30C1               	movlw	low GetNavData@temp_time
  6700  0190  00F0               	movwf	SafeSetByte@dest
  6701  0191  3000               	movlw	high GetNavData@temp_time
  6702  0192  00F1               	movwf	SafeSetByte@dest+1
  6703  0193  300A               	movlw	10
  6704  0194  00F2               	movwf	SafeSetByte@length
  6705  0195  3000               	movlw	0
  6706  0196  00F3               	movwf	SafeSetByte@length+1
  6707  0197  0859               	movf	(GetNavData@dataIndex+1)^(0+128),w
  6708  0198  00F5               	movwf	SafeSetByte@index+1
  6709  0199  0858               	movf	GetNavData@dataIndex^(0+128),w
  6710  019A  00F4               	movwf	SafeSetByte@index
  6711  019B  085A               	movf	GetNavData@byte^(0+128),w
  6712  019C  0020               	movlb	0	; select bank0
  6713  019D  00E9               	movwf	??_GetNavData
  6714  019E  0869               	movf	??_GetNavData,w
  6715  019F  00F6               	movwf	SafeSetByte@data
  6716  01A0  3188  2071  3180   	fcall	_SafeSetByte
  6717                           
  6718                           ;main.c: 529:                     break;
  6719  01A3  2AB5               	goto	l4092
  6720  01A4                     l4058:	
  6721                           
  6722                           ;main.c: 531:                     SafeSetByte(gps_latitude, 16, dataIndex + 1, byte);
  6723  01A4  30C1               	movlw	low _gps_latitude
  6724  01A5  00F0               	movwf	SafeSetByte@dest
  6725  01A6  3001               	movlw	high _gps_latitude
  6726  01A7  00F1               	movwf	SafeSetByte@dest+1
  6727  01A8  3010               	movlw	16
  6728  01A9  00F2               	movwf	SafeSetByte@length
  6729  01AA  3000               	movlw	0
  6730  01AB  00F3               	movwf	SafeSetByte@length+1
  6731  01AC  0858               	movf	GetNavData@dataIndex^(0+128),w
  6732  01AD  3E01               	addlw	1
  6733  01AE  00F4               	movwf	SafeSetByte@index
  6734  01AF  3000               	movlw	0
  6735  01B0  3D59               	addwfc	(GetNavData@dataIndex+1)^(0+128),w
  6736  01B1  00F5               	movwf	SafeSetByte@index+1
  6737  01B2  085A               	movf	GetNavData@byte^(0+128),w
  6738  01B3  0020               	movlb	0	; select bank0
  6739  01B4  00E9               	movwf	??_GetNavData
  6740  01B5  0869               	movf	??_GetNavData,w
  6741  01B6  00F6               	movwf	SafeSetByte@data
  6742  01B7  3188  2071  3180   	fcall	_SafeSetByte
  6743                           
  6744                           ;main.c: 532:                     break;
  6745  01BA  2AB5               	goto	l4092
  6746  01BB                     l4060:	
  6747                           
  6748                           ;main.c: 535:                     gps_latitude[0] = byte == 'N' ? '+' : '-';
  6749  01BB  304E               	movlw	78
  6750  01BC  065A               	xorwf	GetNavData@byte^(0+128),w
  6751  01BD  1903               	btfsc	3,2
  6752  01BE  29C1               	goto	l4064
  6753  01BF  302D               	movlw	45
  6754  01C0  29C2               	goto	L1
  6755  01C1                     l4064:	
  6756  01C1  302B               	movlw	43
  6757  01C2                     L1:	
  6758  01C2  00CF               	movwf	_GetNavData$534^(0+128)
  6759  01C3  3000               	movlw	0
  6760  01C4  00D0               	movwf	(_GetNavData$534^(0+128)+1)
  6761  01C5  084F               	movf	_GetNavData$534^(0+128),w
  6762  01C6  0020               	movlb	0	; select bank0
  6763  01C7  00E9               	movwf	??_GetNavData
  6764  01C8  0869               	movf	??_GetNavData,w
  6765  01C9  0023               	movlb	3	; select bank3
  6766  01CA  00C1               	movwf	_gps_latitude^(0+384)
  6767                           
  6768                           ;main.c: 536:                     break;
  6769  01CB  2AB5               	goto	l4092
  6770  01CC                     l4066:	
  6771                           
  6772                           ;main.c: 538:                     SafeSetByte(gps_longitude, 16, dataIndex + 1, byte);
  6773  01CC  30B1               	movlw	low _gps_longitude
  6774  01CD  00F0               	movwf	SafeSetByte@dest
  6775  01CE  3001               	movlw	high _gps_longitude
  6776  01CF  00F1               	movwf	SafeSetByte@dest+1
  6777  01D0  3010               	movlw	16
  6778  01D1  00F2               	movwf	SafeSetByte@length
  6779  01D2  3000               	movlw	0
  6780  01D3  00F3               	movwf	SafeSetByte@length+1
  6781  01D4  0858               	movf	GetNavData@dataIndex^(0+128),w
  6782  01D5  3E01               	addlw	1
  6783  01D6  00F4               	movwf	SafeSetByte@index
  6784  01D7  3000               	movlw	0
  6785  01D8  3D59               	addwfc	(GetNavData@dataIndex+1)^(0+128),w
  6786  01D9  00F5               	movwf	SafeSetByte@index+1
  6787  01DA  085A               	movf	GetNavData@byte^(0+128),w
  6788  01DB  0020               	movlb	0	; select bank0
  6789  01DC  00E9               	movwf	??_GetNavData
  6790  01DD  0869               	movf	??_GetNavData,w
  6791  01DE  00F6               	movwf	SafeSetByte@data
  6792  01DF  3188  2071  3180   	fcall	_SafeSetByte
  6793                           
  6794                           ;main.c: 539:                     break;
  6795  01E2  2AB5               	goto	l4092
  6796  01E3                     l4068:	
  6797                           
  6798                           ;main.c: 542:                     gps_longitude[0] = byte == 'E' ? '+' : '-';
  6799  01E3  3045               	movlw	69
  6800  01E4  065A               	xorwf	GetNavData@byte^(0+128),w
  6801  01E5  1903               	btfsc	3,2
  6802  01E6  29E9               	goto	l4072
  6803  01E7  302D               	movlw	45
  6804  01E8  29EA               	goto	L2
  6805  01E9                     l4072:	
  6806  01E9  302B               	movlw	43
  6807  01EA                     L2:	
  6808  01EA  00D1               	movwf	_GetNavData$535^(0+128)
  6809  01EB  3000               	movlw	0
  6810  01EC  00D2               	movwf	(_GetNavData$535^(0+128)+1)
  6811  01ED  0851               	movf	_GetNavData$535^(0+128),w
  6812  01EE  0020               	movlb	0	; select bank0
  6813  01EF  00E9               	movwf	??_GetNavData
  6814  01F0  0869               	movf	??_GetNavData,w
  6815  01F1  0023               	movlb	3	; select bank3
  6816  01F2  00B1               	movwf	_gps_longitude^(0+384)
  6817                           
  6818                           ;main.c: 543:                     break;
  6819  01F3  2AB5               	goto	l4092
  6820  01F4                     l4074:	
  6821                           
  6822                           ;main.c: 545:                     SafeSetByte(gps_altitude, 12, dataIndex, byte);
  6823  01F4  30D1               	movlw	low _gps_altitude
  6824  01F5  00F0               	movwf	SafeSetByte@dest
  6825  01F6  3001               	movlw	high _gps_altitude
  6826  01F7  00F1               	movwf	SafeSetByte@dest+1
  6827  01F8  300C               	movlw	12
  6828  01F9  00F2               	movwf	SafeSetByte@length
  6829  01FA  3000               	movlw	0
  6830  01FB  00F3               	movwf	SafeSetByte@length+1
  6831  01FC  0859               	movf	(GetNavData@dataIndex+1)^(0+128),w
  6832  01FD  00F5               	movwf	SafeSetByte@index+1
  6833  01FE  0858               	movf	GetNavData@dataIndex^(0+128),w
  6834  01FF  00F4               	movwf	SafeSetByte@index
  6835  0200  085A               	movf	GetNavData@byte^(0+128),w
  6836  0201  0020               	movlb	0	; select bank0
  6837  0202  00E9               	movwf	??_GetNavData
  6838  0203  0869               	movf	??_GetNavData,w
  6839  0204  00F6               	movwf	SafeSetByte@data
  6840  0205  3188  2071  3180   	fcall	_SafeSetByte
  6841                           
  6842                           ;main.c: 546:                     break;
  6843  0208  2AB5               	goto	l4092
  6844  0209                     l4076:	
  6845                           
  6846                           ;main.c: 548:                     SafeSetByte(gps_hdop, 8, dataIndex, byte);
  6847  0209  3052               	movlw	low _gps_hdop
  6848  020A  00F0               	movwf	SafeSetByte@dest
  6849  020B  3001               	movlw	high _gps_hdop
  6850  020C  00F1               	movwf	SafeSetByte@dest+1
  6851  020D  3008               	movlw	8
  6852  020E  00F2               	movwf	SafeSetByte@length
  6853  020F  3000               	movlw	0
  6854  0210  00F3               	movwf	SafeSetByte@length+1
  6855  0211  0859               	movf	(GetNavData@dataIndex+1)^(0+128),w
  6856  0212  00F5               	movwf	SafeSetByte@index+1
  6857  0213  0858               	movf	GetNavData@dataIndex^(0+128),w
  6858  0214  00F4               	movwf	SafeSetByte@index
  6859  0215  085A               	movf	GetNavData@byte^(0+128),w
  6860  0216  0020               	movlb	0	; select bank0
  6861  0217  00E9               	movwf	??_GetNavData
  6862  0218  0869               	movf	??_GetNavData,w
  6863  0219  00F6               	movwf	SafeSetByte@data
  6864  021A  3188  2071  3180   	fcall	_SafeSetByte
  6865                           
  6866                           ;main.c: 549:                     break;
  6867  021D  2AB5               	goto	l4092
  6868  021E                     l4078:	
  6869                           
  6870                           ;main.c: 551:                     SafeSetByte(gps_vdop, 8, dataIndex, byte);
  6871  021E  304A               	movlw	low _gps_vdop
  6872  021F  00F0               	movwf	SafeSetByte@dest
  6873  0220  3001               	movlw	high _gps_vdop
  6874  0221  00F1               	movwf	SafeSetByte@dest+1
  6875  0222  3008               	movlw	8
  6876  0223  00F2               	movwf	SafeSetByte@length
  6877  0224  3000               	movlw	0
  6878  0225  00F3               	movwf	SafeSetByte@length+1
  6879  0226  0859               	movf	(GetNavData@dataIndex+1)^(0+128),w
  6880  0227  00F5               	movwf	SafeSetByte@index+1
  6881  0228  0858               	movf	GetNavData@dataIndex^(0+128),w
  6882  0229  00F4               	movwf	SafeSetByte@index
  6883  022A  085A               	movf	GetNavData@byte^(0+128),w
  6884  022B  0020               	movlb	0	; select bank0
  6885  022C  00E9               	movwf	??_GetNavData
  6886  022D  0869               	movf	??_GetNavData,w
  6887  022E  00F6               	movwf	SafeSetByte@data
  6888  022F  3188  2071  3180   	fcall	_SafeSetByte
  6889                           
  6890                           ;main.c: 552:                     break;
  6891  0232  2AB5               	goto	l4092
  6892  0233                     l4080:	
  6893                           
  6894                           ;main.c: 554:                     SafeSetByte(gps_nav_status, 4, dataIndex, byte);
  6895  0233  3060               	movlw	low _gps_nav_status
  6896  0234  00F0               	movwf	SafeSetByte@dest
  6897  0235  3001               	movlw	high _gps_nav_status
  6898  0236  00F1               	movwf	SafeSetByte@dest+1
  6899  0237  3004               	movlw	4
  6900  0238  00F2               	movwf	SafeSetByte@length
  6901  0239  3000               	movlw	0
  6902  023A  00F3               	movwf	SafeSetByte@length+1
  6903  023B  0859               	movf	(GetNavData@dataIndex+1)^(0+128),w
  6904  023C  00F5               	movwf	SafeSetByte@index+1
  6905  023D  0858               	movf	GetNavData@dataIndex^(0+128),w
  6906  023E  00F4               	movwf	SafeSetByte@index
  6907  023F  085A               	movf	GetNavData@byte^(0+128),w
  6908  0240  0020               	movlb	0	; select bank0
  6909  0241  00E9               	movwf	??_GetNavData
  6910  0242  0869               	movf	??_GetNavData,w
  6911  0243  00F6               	movwf	SafeSetByte@data
  6912  0244  3188  2071  3180   	fcall	_SafeSetByte
  6913                           
  6914                           ;main.c: 555:                     break;
  6915  0247  2AB5               	goto	l4092
  6916  0248                     l4082:	
  6917                           
  6918                           ;main.c: 557:                     SafeSetByte(gps_speed_over_ground, 10, dataIndex, byte
      +                          );
  6919  0248  3036               	movlw	low _gps_speed_over_ground
  6920  0249  00F0               	movwf	SafeSetByte@dest
  6921  024A  3001               	movlw	high _gps_speed_over_ground
  6922  024B  00F1               	movwf	SafeSetByte@dest+1
  6923  024C  300A               	movlw	10
  6924  024D  00F2               	movwf	SafeSetByte@length
  6925  024E  3000               	movlw	0
  6926  024F  00F3               	movwf	SafeSetByte@length+1
  6927  0250  0859               	movf	(GetNavData@dataIndex+1)^(0+128),w
  6928  0251  00F5               	movwf	SafeSetByte@index+1
  6929  0252  0858               	movf	GetNavData@dataIndex^(0+128),w
  6930  0253  00F4               	movwf	SafeSetByte@index
  6931  0254  085A               	movf	GetNavData@byte^(0+128),w
  6932  0255  0020               	movlb	0	; select bank0
  6933  0256  00E9               	movwf	??_GetNavData
  6934  0257  0869               	movf	??_GetNavData,w
  6935  0258  00F6               	movwf	SafeSetByte@data
  6936  0259  3188  2071  3180   	fcall	_SafeSetByte
  6937                           
  6938                           ;main.c: 558:                     break;
  6939  025C  2AB5               	goto	l4092
  6940  025D                     l4084:	
  6941                           
  6942                           ;main.c: 560:                     SafeSetByte(gps_course_over_ground, 10, dataIndex, byt
      +                          e);
  6943  025D  302C               	movlw	low _gps_course_over_ground
  6944  025E  00F0               	movwf	SafeSetByte@dest
  6945  025F  3001               	movlw	high _gps_course_over_ground
  6946  0260  00F1               	movwf	SafeSetByte@dest+1
  6947  0261  300A               	movlw	10
  6948  0262  00F2               	movwf	SafeSetByte@length
  6949  0263  3000               	movlw	0
  6950  0264  00F3               	movwf	SafeSetByte@length+1
  6951  0265  0859               	movf	(GetNavData@dataIndex+1)^(0+128),w
  6952  0266  00F5               	movwf	SafeSetByte@index+1
  6953  0267  0858               	movf	GetNavData@dataIndex^(0+128),w
  6954  0268  00F4               	movwf	SafeSetByte@index
  6955  0269  085A               	movf	GetNavData@byte^(0+128),w
  6956  026A  0020               	movlb	0	; select bank0
  6957  026B  00E9               	movwf	??_GetNavData
  6958  026C  0869               	movf	??_GetNavData,w
  6959  026D  00F6               	movwf	SafeSetByte@data
  6960  026E  3188  2071  3180   	fcall	_SafeSetByte
  6961                           
  6962                           ;main.c: 561:                     break;
  6963  0271  2AB5               	goto	l4092
  6964  0272                     l4086:	
  6965                           
  6966                           ;main.c: 563:                     SafeSetByte(gps_vertical_velocity, 10, dataIndex, byte
      +                          );
  6967  0272  3022               	movlw	low _gps_vertical_velocity
  6968  0273  00F0               	movwf	SafeSetByte@dest
  6969  0274  3001               	movlw	high _gps_vertical_velocity
  6970  0275  00F1               	movwf	SafeSetByte@dest+1
  6971  0276  300A               	movlw	10
  6972  0277  00F2               	movwf	SafeSetByte@length
  6973  0278  3000               	movlw	0
  6974  0279  00F3               	movwf	SafeSetByte@length+1
  6975  027A  0859               	movf	(GetNavData@dataIndex+1)^(0+128),w
  6976  027B  00F5               	movwf	SafeSetByte@index+1
  6977  027C  0858               	movf	GetNavData@dataIndex^(0+128),w
  6978  027D  00F4               	movwf	SafeSetByte@index
  6979  027E  085A               	movf	GetNavData@byte^(0+128),w
  6980  027F  0020               	movlb	0	; select bank0
  6981  0280  00E9               	movwf	??_GetNavData
  6982  0281  0869               	movf	??_GetNavData,w
  6983  0282  00F6               	movwf	SafeSetByte@data
  6984  0283  3188  2071  3180   	fcall	_SafeSetByte
  6985                           
  6986                           ;main.c: 564:                     break;
  6987  0286  2AB5               	goto	l4092
  6988  0287                     l4090:	
  6989                           
  6990                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6991                           ; Switch size 1, requested type "simple"
  6992                           ; Number of cases is 1, Range of values is 0 to 0
  6993                           ; switch strategies available:
  6994                           ; Name         Instructions Cycles
  6995                           ; simple_byte            4     3 (average)
  6996                           ; direct_byte            8     6 (fixed)
  6997                           ; jumptable            260     6 (fixed)
  6998                           ;	Chosen strategy is simple_byte
  6999  0287  0857               	movf	(GetNavData@dataFieldType+1)^(0+128),w
  7000  0288  3A00               	xorlw	0	; case 0
  7001  0289  1903               	skipnz
  7002  028A  2A8C               	goto	l4294
  7003  028B  2AB5               	goto	l4092
  7004  028C                     l4294:	
  7005                           
  7006                           ; Switch size 1, requested type "simple"
  7007                           ; Number of cases is 13, Range of values is 0 to 13
  7008                           ; switch strategies available:
  7009                           ; Name         Instructions Cycles
  7010                           ; direct_byte           34     6 (fixed)
  7011                           ; simple_byte           40    21 (average)
  7012                           ; jumptable            260     6 (fixed)
  7013                           ;	Chosen strategy is simple_byte
  7014  028C  0856               	movf	GetNavData@dataFieldType^(0+128),w
  7015  028D  3A00               	xorlw	0	; case 0
  7016  028E  1903               	skipnz
  7017  028F  297A               	goto	l4054
  7018  0290  3A02               	xorlw	2	; case 2
  7019  0291  1903               	skipnz
  7020  0292  298F               	goto	l4056
  7021  0293  3A01               	xorlw	1	; case 3
  7022  0294  1903               	skipnz
  7023  0295  29A4               	goto	l4058
  7024  0296  3A07               	xorlw	7	; case 4
  7025  0297  1903               	skipnz
  7026  0298  29BB               	goto	l4060
  7027  0299  3A01               	xorlw	1	; case 5
  7028  029A  1903               	skipnz
  7029  029B  29CC               	goto	l4066
  7030  029C  3A03               	xorlw	3	; case 6
  7031  029D  1903               	skipnz
  7032  029E  29E3               	goto	l4068
  7033  029F  3A01               	xorlw	1	; case 7
  7034  02A0  1903               	skipnz
  7035  02A1  29F4               	goto	l4074
  7036  02A2  3A0F               	xorlw	15	; case 8
  7037  02A3  1903               	skipnz
  7038  02A4  2A33               	goto	l4080
  7039  02A5  3A01               	xorlw	1	; case 9
  7040  02A6  1903               	skipnz
  7041  02A7  2A09               	goto	l4076
  7042  02A8  3A03               	xorlw	3	; case 10
  7043  02A9  1903               	skipnz
  7044  02AA  2A1E               	goto	l4078
  7045  02AB  3A01               	xorlw	1	; case 11
  7046  02AC  1903               	skipnz
  7047  02AD  2A48               	goto	l4082
  7048  02AE  3A07               	xorlw	7	; case 12
  7049  02AF  1903               	skipnz
  7050  02B0  2A5D               	goto	l4084
  7051  02B1  3A01               	xorlw	1	; case 13
  7052  02B2  1903               	skipnz
  7053  02B3  2A72               	goto	l4086
  7054  02B4  2AB5               	goto	l4092
  7055  02B5                     l4092:	
  7056                           
  7057                           ;main.c: 568:                 dataIndex++;
  7058  02B5  3001               	movlw	1
  7059  02B6  0021               	movlb	1	; select bank1
  7060  02B7  07D8               	addwf	GetNavData@dataIndex^(0+128),f
  7061  02B8  3000               	movlw	0
  7062  02B9  3DD9               	addwfc	(GetNavData@dataIndex+1)^(0+128),f
  7063  02BA                     l4094:	
  7064                           
  7065                           ;main.c: 572:         ClearString(gps_time);
  7066  02BA  3040               	movlw	low _gps_time
  7067  02BB  00F4               	movwf	ClearString@str
  7068  02BC  3001               	movlw	high _gps_time
  7069  02BD  00F5               	movwf	ClearString@str+1
  7070  02BE  3197  27B5  3180   	fcall	_ClearString
  7071                           
  7072                           ;main.c: 574:         gps_time[0] = temp_time[0];
  7073  02C1  0021               	movlb	1	; select bank1
  7074  02C2  0841               	movf	GetNavData@temp_time^(0+128),w
  7075  02C3  0020               	movlb	0	; select bank0
  7076  02C4  00E9               	movwf	??_GetNavData
  7077  02C5  0869               	movf	??_GetNavData,w
  7078  02C6  0022               	movlb	2	; select bank2
  7079  02C7  00C0               	movwf	_gps_time^(0+256)
  7080                           
  7081                           ;main.c: 575:         gps_time[1] = temp_time[1];
  7082  02C8  0021               	movlb	1	; select bank1
  7083  02C9  0842               	movf	(GetNavData@temp_time^(0+128)+1),w
  7084  02CA  0020               	movlb	0	; select bank0
  7085  02CB  00E9               	movwf	??_GetNavData
  7086  02CC  0869               	movf	??_GetNavData,w
  7087  02CD  0022               	movlb	2	; select bank2
  7088  02CE  00C1               	movwf	(_gps_time^(0+256)+1)
  7089                           
  7090                           ;main.c: 576:         gps_time[2] = ':';
  7091  02CF  303A               	movlw	58
  7092  02D0  0020               	movlb	0	; select bank0
  7093  02D1  00E9               	movwf	??_GetNavData
  7094  02D2  0869               	movf	??_GetNavData,w
  7095  02D3  0022               	movlb	2	; select bank2
  7096  02D4  00C2               	movwf	(_gps_time^(0+256)+2)
  7097                           
  7098                           ;main.c: 577:         gps_time[3] = temp_time[2];
  7099  02D5  0021               	movlb	1	; select bank1
  7100  02D6  0843               	movf	(GetNavData@temp_time^(0+128)+2),w
  7101  02D7  0020               	movlb	0	; select bank0
  7102  02D8  00E9               	movwf	??_GetNavData
  7103  02D9  0869               	movf	??_GetNavData,w
  7104  02DA  0022               	movlb	2	; select bank2
  7105  02DB  00C3               	movwf	(_gps_time^(0+256)+3)
  7106                           
  7107                           ;main.c: 578:         gps_time[4] = temp_time[3];
  7108  02DC  0021               	movlb	1	; select bank1
  7109  02DD  0844               	movf	(GetNavData@temp_time^(0+128)+3),w
  7110  02DE  0020               	movlb	0	; select bank0
  7111  02DF  00E9               	movwf	??_GetNavData
  7112  02E0  0869               	movf	??_GetNavData,w
  7113  02E1  0022               	movlb	2	; select bank2
  7114  02E2  00C4               	movwf	(_gps_time^(0+256)+4)
  7115                           
  7116                           ;main.c: 579:         gps_time[5] = ':';
  7117  02E3  303A               	movlw	58
  7118  02E4  0020               	movlb	0	; select bank0
  7119  02E5  00E9               	movwf	??_GetNavData
  7120  02E6  0869               	movf	??_GetNavData,w
  7121  02E7  0022               	movlb	2	; select bank2
  7122  02E8  00C5               	movwf	(_gps_time^(0+256)+5)
  7123                           
  7124                           ;main.c: 580:         gps_time[6] = temp_time[4];
  7125  02E9  0021               	movlb	1	; select bank1
  7126  02EA  0845               	movf	(GetNavData@temp_time^(0+128)+4),w
  7127  02EB  0020               	movlb	0	; select bank0
  7128  02EC  00E9               	movwf	??_GetNavData
  7129  02ED  0869               	movf	??_GetNavData,w
  7130  02EE  0022               	movlb	2	; select bank2
  7131  02EF  00C6               	movwf	(_gps_time^(0+256)+6)
  7132                           
  7133                           ;main.c: 581:         gps_time[7] = temp_time[5];
  7134  02F0  0021               	movlb	1	; select bank1
  7135  02F1  0846               	movf	(GetNavData@temp_time^(0+128)+5),w
  7136  02F2  0020               	movlb	0	; select bank0
  7137  02F3  00E9               	movwf	??_GetNavData
  7138  02F4  0869               	movf	??_GetNavData,w
  7139  02F5  0022               	movlb	2	; select bank2
  7140  02F6  00C7               	movwf	(_gps_time^(0+256)+7)
  7141  02F7  28D9               	goto	l4112
  7142  02F8                     l4114:	
  7143                           
  7144                           ;main.c: 588:     return success;
  7145  02F8  0021               	movlb	1	; select bank1
  7146  02F9  0854               	movf	GetNavData@success^(0+128),w
  7147  02FA  0008               	return
  7148  02FB                     __end_of_GetNavData:	
  7149                           
  7150                           	psect	text20
  7151  1681                     __ptext20:	
  7152 ;; *************** function _printf *****************
  7153 ;; Defined at:
  7154 ;;		line 5 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\printf.c"
  7155 ;; Parameters:    Size  Location     Type
  7156 ;;  fmt             2   67[BANK0 ] PTR const unsigned char 
  7157 ;;		 -> STR_7(14), STR_6(26), STR_5(26), STR_4(26), 
  7158 ;;		 -> STR_3(26), STR_2(26), STR_1(26), 
  7159 ;; Auto vars:     Size  Location     Type
  7160 ;;  ret             2    0        int 
  7161 ;;  ap              1   72[BANK0 ] PTR void [1]
  7162 ;;		 -> ?_printf(2), ?_sprintf(2), 
  7163 ;; Return value:  Size  Location     Type
  7164 ;;                  2   67[BANK0 ] int 
  7165 ;; Registers used:
  7166 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7167 ;; Tracked objects:
  7168 ;;		On entry : 0/0
  7169 ;;		On exit  : 0/0
  7170 ;;		Unchanged: 0/0
  7171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7172 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7173 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7174 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7175 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7176 ;;Total ram usage:        6 bytes
  7177 ;; Hardware stack levels used:    1
  7178 ;; Hardware stack levels required when called:   11
  7179 ;; This function calls:
  7180 ;;		_vfprintf
  7181 ;; This function is called by:
  7182 ;;		_SetupGPS
  7183 ;;		_GetNavData
  7184 ;; This function uses a non-reentrant model
  7185 ;;
  7186                           
  7187                           
  7188                           ;psect for function _printf
  7189  1681                     _printf:	
  7190                           
  7191                           ;incstack = 0
  7192                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7193  1681  3065               	movlw	(low ((?_printf| 0+2)))& (0+255)
  7194  1682  0020               	movlb	0	; select bank0
  7195  1683  00E5               	movwf	??_printf
  7196  1684  0865               	movf	??_printf,w
  7197  1685  00E8               	movwf	printf@ap
  7198  1686  0864               	movf	printf@fmt+1,w
  7199  1687  00DC               	movwf	vfprintf@fmt+1
  7200  1688  0863               	movf	printf@fmt,w
  7201  1689  00DB               	movwf	vfprintf@fmt
  7202  168A  3068               	movlw	(low (printf@ap| 0))& (0+255)
  7203  168B  00E5               	movwf	??_printf
  7204  168C  0865               	movf	??_printf,w
  7205  168D  00DD               	movwf	vfprintf@ap
  7206  168E  3000               	movlw	0
  7207  168F  3189  2176         	fcall	_vfprintf
  7208  1691  0008               	return
  7209  1692                     __end_of_printf:	
  7210                           
  7211                           	psect	text21
  7212  0976                     __ptext21:	
  7213 ;; *************** function _vfprintf *****************
  7214 ;; Defined at:
  7215 ;;		line 1368 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c"
  7216 ;; Parameters:    Size  Location     Type
  7217 ;;  fp              1    wreg     PTR struct _IO_FILE
  7218 ;;		 -> sprintf@f(6), NULL(0), 
  7219 ;;  fmt             2   59[BANK0 ] PTR const unsigned char 
  7220 ;;		 -> STR_12(7), STR_11(18), STR_10(23), STR_7(14), 
  7221 ;;		 -> STR_6(26), STR_5(26), STR_4(26), STR_3(26), 
  7222 ;;		 -> STR_2(26), STR_1(26), 
  7223 ;;  ap              1   61[BANK0 ] PTR PTR void 
  7224 ;;		 -> printf@ap(1), sprintf@ap(1), 
  7225 ;; Auto vars:     Size  Location     Type
  7226 ;;  fp              1   64[BANK0 ] PTR struct _IO_FILE
  7227 ;;		 -> sprintf@f(6), NULL(0), 
  7228 ;;  cfmt            2   65[BANK0 ] PTR unsigned char 
  7229 ;;		 -> STR_12(7), STR_11(18), STR_10(23), STR_7(14), 
  7230 ;;		 -> STR_6(26), STR_5(26), STR_4(26), STR_3(26), 
  7231 ;;		 -> STR_2(26), STR_1(26), 
  7232 ;; Return value:  Size  Location     Type
  7233 ;;                  2   59[BANK0 ] int 
  7234 ;; Registers used:
  7235 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7236 ;; Tracked objects:
  7237 ;;		On entry : 0/0
  7238 ;;		On exit  : 0/0
  7239 ;;		Unchanged: 0/0
  7240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7241 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7242 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7243 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7244 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7245 ;;Total ram usage:        8 bytes
  7246 ;; Hardware stack levels used:    1
  7247 ;; Hardware stack levels required when called:   10
  7248 ;; This function calls:
  7249 ;;		_vfpfcnvrt
  7250 ;; This function is called by:
  7251 ;;		_sprintf
  7252 ;;		_printf
  7253 ;; This function uses a non-reentrant model
  7254 ;;
  7255                           
  7256                           
  7257                           ;psect for function _vfprintf
  7258  0976                     _vfprintf:	
  7259                           
  7260                           ;incstack = 0
  7261                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7262                           ;vfprintf@fp stored from wreg
  7263  0976  0020               	movlb	0	; select bank0
  7264  0977  00E0               	movwf	vfprintf@fp
  7265                           
  7266                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 1368: int vfprintf(FIL
      +                          E *fp, const char *fmt, va_list ap);K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\comm
      +                          on\doprnt.c: 1369: {;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 13
      +                          71:     char *cfmt;;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 137
      +                          3:     cfmt = (char *)fmt;
  7267  0978  085C               	movf	vfprintf@fmt+1,w
  7268  0979  00E2               	movwf	vfprintf@cfmt+1
  7269  097A  085B               	movf	vfprintf@fmt,w
  7270  097B  00E1               	movwf	vfprintf@cfmt
  7271                           
  7272                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 1374:     nout = 0;
  7273  097C  0022               	movlb	2	; select bank2
  7274  097D  01A0               	clrf	_nout^(0+256)
  7275  097E  01A1               	clrf	(_nout+1)^(0+256)
  7276  097F                     l3880:	
  7277                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 1375:     while (*cfmt
      +                          ) {
  7278                           
  7279                           
  7280                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 1375:     while (*cfmt
      +                          ) {
  7281  097F  0020               	movlb	0	; select bank0
  7282  0980  0861               	movf	vfprintf@cfmt,w
  7283  0981  0084               	movwf	4
  7284  0982  0862               	movf	vfprintf@cfmt+1,w
  7285  0983  0085               	movwf	5
  7286  0984  0012               	moviw fsr0++
  7287  0985  1903               	btfsc	3,2
  7288  0986  299C               	goto	l3882
  7289                           
  7290                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 1376:         nout += 
      +                          vfpfcnvrt(fp, &cfmt, ap);
  7291  0987  3061               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  7292  0988  00DE               	movwf	??_vfprintf
  7293  0989  085E               	movf	??_vfprintf,w
  7294  098A  00D3               	movwf	vfpfcnvrt@fmt
  7295  098B  085D               	movf	vfprintf@ap,w
  7296  098C  00DF               	movwf	??_vfprintf+1
  7297  098D  085F               	movf	??_vfprintf+1,w
  7298  098E  00D4               	movwf	vfpfcnvrt@ap
  7299  098F  0860               	movf	vfprintf@fp,w
  7300  0990  3182  22FB  3189   	fcall	_vfpfcnvrt
  7301  0993  0020               	movlb	0	; select bank0
  7302  0994  0853               	movf	?_vfpfcnvrt,w
  7303  0995  0022               	movlb	2	; select bank2
  7304  0996  07A0               	addwf	_nout^(0+256),f
  7305  0997  0020               	movlb	0	; select bank0
  7306  0998  0854               	movf	?_vfpfcnvrt+1,w
  7307  0999  0022               	movlb	2	; select bank2
  7308  099A  3DA1               	addwfc	(_nout+1)^(0+256),f
  7309  099B  297F               	goto	l3880
  7310  099C                     l3882:	
  7311                           
  7312                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 1378:     return nout;
  7313  099C  0022               	movlb	2	; select bank2
  7314  099D  0821               	movf	(_nout+1)^(0+256),w
  7315  099E  0020               	movlb	0	; select bank0
  7316  099F  00DC               	movwf	?_vfprintf+1
  7317  09A0  0022               	movlb	2	; select bank2
  7318  09A1  0820               	movf	_nout^(0+256),w
  7319  09A2  0020               	movlb	0	; select bank0
  7320  09A3  00DB               	movwf	?_vfprintf
  7321  09A4  0008               	return
  7322  09A5                     __end_of_vfprintf:	
  7323                           
  7324                           	psect	text22
  7325  02FB                     __ptext22:	
  7326 ;; *************** function _vfpfcnvrt *****************
  7327 ;; Defined at:
  7328 ;;		line 670 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c"
  7329 ;; Parameters:    Size  Location     Type
  7330 ;;  fp              1    wreg     PTR struct _IO_FILE
  7331 ;;		 -> sprintf@f(6), NULL(0), 
  7332 ;;  fmt             1   51[BANK0 ] PTR PTR unsigned char 
  7333 ;;		 -> vfprintf@cfmt(2), 
  7334 ;;  ap              1   52[BANK0 ] PTR PTR void 
  7335 ;;		 -> printf@ap(1), sprintf@ap(1), 
  7336 ;; Auto vars:     Size  Location     Type
  7337 ;;  fp              1   23[BANK1 ] PTR struct _IO_FILE
  7338 ;;		 -> sprintf@f(6), NULL(0), 
  7339 ;;  llu             8    8[BANK1 ] unsigned long long 
  7340 ;;  ll              8    0[BANK1 ] long long 
  7341 ;;  f               4    0        long long 
  7342 ;;  ct              3    0        unsigned char [3]
  7343 ;;  done            2   19[BANK1 ] int 
  7344 ;;  cp              2   16[BANK1 ] PTR unsigned char 
  7345 ;;		 -> ?_printf(2), ?_sprintf(2), gps_time(10), gps_vertical_velocity(10), 
  7346 ;;		 -> gps_course_over_ground(10), gps_speed_over_ground(10), gps_vdop(8), gps_hdop(8), 
  7347 ;;		 -> gps_nav_status(4), gps_altitude(12), gps_longitude(16), gps_latitude(16), 
  7348 ;;  vp              2    0        PTR void 
  7349 ;;  i               2    0        int 
  7350 ;;  c               1   18[BANK1 ] unsigned char 
  7351 ;; Return value:  Size  Location     Type
  7352 ;;                  2   51[BANK0 ] int 
  7353 ;; Registers used:
  7354 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7355 ;; Tracked objects:
  7356 ;;		On entry : 0/0
  7357 ;;		On exit  : 0/0
  7358 ;;		Unchanged: 0/0
  7359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7360 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7361 ;;      Locals:         0       0      24       0       0       0       0       0       0       0       0       0       
      +0       0
  7362 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7363 ;;      Totals:         0       8      24       0       0       0       0       0       0       0       0       0       
      +0       0
  7364 ;;Total ram usage:       32 bytes
  7365 ;; Hardware stack levels used:    1
  7366 ;; Hardware stack levels required when called:    9
  7367 ;; This function calls:
  7368 ;;		_atoi
  7369 ;;		_dtoa
  7370 ;;		_fputc
  7371 ;;		_isdigit
  7372 ;;		_stoa
  7373 ;;		_xtoa
  7374 ;; This function is called by:
  7375 ;;		_vfprintf
  7376 ;; This function uses a non-reentrant model
  7377 ;;
  7378                           
  7379                           
  7380                           ;psect for function _vfpfcnvrt
  7381  02FB                     _vfpfcnvrt:	
  7382                           
  7383                           ;incstack = 0
  7384                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7385                           ;vfpfcnvrt@fp stored from wreg
  7386  02FB  0021               	movlb	1	; select bank1
  7387  02FC  00B7               	movwf	vfpfcnvrt@fp^(0+128)
  7388                           
  7389                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 670: static int vfpfcn
      +                          vrt(FILE *fp, char *fmt[], va_list ap);K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\c
      +                          ommon\doprnt.c: 671: {;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 
      +                          672:     char c, *cp, ct[3];;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\dopr
      +                          nt.c: 673:     int done, i;;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprn
      +                          t.c: 674:     long long ll;;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprn
      +                          t.c: 675:     unsigned long long llu;
  7390  02FD  0020               	movlb	0	; select bank0
  7391  02FE  0853               	movf	vfpfcnvrt@fmt,w
  7392  02FF  0086               	movwf	6
  7393  0300  0187               	clrf	7
  7394  0301  3F40               	moviw [0]fsr1
  7395  0302  00D5               	movwf	??_vfpfcnvrt
  7396  0303  3F41               	moviw [1]fsr1
  7397  0304  00D6               	movwf	??_vfpfcnvrt+1
  7398  0305  0855               	movf	??_vfpfcnvrt,w
  7399  0306  0084               	movwf	4
  7400  0307  0856               	movf	??_vfpfcnvrt+1,w
  7401  0308  0085               	movwf	5
  7402  0309  0012               	moviw fsr0++
  7403  030A  3A25               	xorlw	37
  7404  030B  1D03               	btfss	3,2
  7405  030C  2D28               	goto	l3862
  7406                           
  7407                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 681:         ++*fmt;
  7408  030D  0853               	movf	vfpfcnvrt@fmt,w
  7409  030E  0086               	movwf	6
  7410  030F  0187               	clrf	7
  7411  0310  3001               	movlw	1
  7412  0311  0781               	addwf	1,f
  7413  0312  3141               	addfsr 1,1
  7414  0313  1803               	skipnc
  7415  0314  0A81               	incf	1,f
  7416                           
  7417                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 683:         flags = w
      +                          idth = 0;
  7418  0315  0021               	movlb	1	; select bank1
  7419  0316  01E4               	clrf	_width^(0+128)
  7420  0317  01E5               	clrf	(_width+1)^(0+128)
  7421  0318  0020               	movlb	0	; select bank0
  7422  0319  01ED               	clrf	_flags
  7423  031A  01EE               	clrf	_flags+1
  7424                           
  7425                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 684:         prec = -1
      +                          ;
  7426  031B  30FF               	movlw	255
  7427  031C  0021               	movlb	1	; select bank1
  7428  031D  00E6               	movwf	_prec^(0+128)
  7429  031E  30FF               	movlw	255
  7430  031F  00E7               	movwf	(_prec^(0+128)+1)
  7431                           
  7432                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 688:         done = 0;
  7433  0320  01B3               	clrf	vfpfcnvrt@done^(0+128)
  7434  0321  01B4               	clrf	(vfpfcnvrt@done+1)^(0+128)
  7435                           
  7436                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 689:         while (!d
      +                          one) {
  7437  0322  2B3A               	goto	l3784
  7438  0323                     l593:	
  7439                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 691:                 c
      +                          ase '-' :
  7440                           
  7441                           
  7442                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 692:                  
      +                             flags |= (1 << 0);
  7443  0323  146D               	bsf	_flags,0
  7444  0324                     l3768:	
  7445                           
  7446                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 693:                  
      +                             ++*fmt;
  7447  0324  0853               	movf	vfpfcnvrt@fmt,w
  7448  0325  0086               	movwf	6
  7449  0326  0187               	clrf	7
  7450  0327  3001               	movlw	1
  7451  0328  0781               	addwf	1,f
  7452  0329  3141               	addfsr 1,1
  7453  032A  1803               	skipnc
  7454  032B  0A81               	incf	1,f
  7455                           
  7456                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 694:                  
      +                             break;
  7457  032C  2B3A               	goto	l3784
  7458  032D                     l595:	
  7459                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 695:                 c
      +                          ase '0' :
  7460                           
  7461                           
  7462                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 696:                  
      +                             flags |= (1 << 1);
  7463  032D  14ED               	bsf	_flags,1
  7464  032E  2B24               	goto	l3768
  7465  032F                     l596:	
  7466                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 699:                 c
      +                          ase '+' :
  7467                           
  7468                           
  7469                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 700:                  
      +                             flags |= (1 << 2);
  7470  032F  156D               	bsf	_flags,2
  7471  0330  2B24               	goto	l3768
  7472  0331                     l597:	
  7473                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 703:                 c
      +                          ase ' ' :
  7474                           
  7475                           
  7476                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 704:                  
      +                             flags |= (1 << 3);
  7477  0331  15ED               	bsf	_flags,3
  7478  0332  2B24               	goto	l3768
  7479  0333                     l598:	
  7480                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 707:                 c
      +                          ase '#' :
  7481                           
  7482                           
  7483                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 708:                  
      +                             flags |= (1 << 4);
  7484  0333  166D               	bsf	_flags,4
  7485  0334  2B24               	goto	l3768
  7486  0335                     l3778:	
  7487                           
  7488                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 712:                  
      +                             done = 1;
  7489  0335  3001               	movlw	1
  7490  0336  0021               	movlb	1	; select bank1
  7491  0337  00B3               	movwf	vfpfcnvrt@done^(0+128)
  7492  0338  3000               	movlw	0
  7493  0339  00B4               	movwf	(vfpfcnvrt@done^(0+128)+1)
  7494  033A                     l3784:	
  7495                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 713:                  
      +                             break;
  7496                           
  7497                           
  7498                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 689:         while (!d
      +                          one) {
  7499  033A  0021               	movlb	1	; select bank1
  7500  033B  0833               	movf	vfpfcnvrt@done^(0+128),w
  7501  033C  0434               	iorwf	(vfpfcnvrt@done+1)^(0+128),w
  7502  033D  1D03               	btfss	3,2
  7503  033E  2B65               	goto	l600
  7504  033F  0020               	movlb	0	; select bank0
  7505  0340  0853               	movf	vfpfcnvrt@fmt,w
  7506  0341  0086               	movwf	6
  7507  0342  0187               	clrf	7
  7508  0343  3F40               	moviw [0]fsr1
  7509  0344  00D5               	movwf	??_vfpfcnvrt
  7510  0345  3F41               	moviw [1]fsr1
  7511  0346  00D6               	movwf	??_vfpfcnvrt+1
  7512  0347  0855               	movf	??_vfpfcnvrt,w
  7513  0348  0084               	movwf	4
  7514  0349  0856               	movf	??_vfpfcnvrt+1,w
  7515  034A  0085               	movwf	5
  7516  034B  0800               	movf	0,w	;code access
  7517  034C  00D7               	movwf	??_vfpfcnvrt+2
  7518  034D  01D8               	clrf	??_vfpfcnvrt+3
  7519                           
  7520                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7521                           ; Switch size 1, requested type "simple"
  7522                           ; Number of cases is 1, Range of values is 0 to 0
  7523                           ; switch strategies available:
  7524                           ; Name         Instructions Cycles
  7525                           ; simple_byte            4     3 (average)
  7526                           ; direct_byte            8     6 (fixed)
  7527                           ; jumptable            260     6 (fixed)
  7528                           ;	Chosen strategy is simple_byte
  7529  034E  0858               	movf	??_vfpfcnvrt+3,w
  7530  034F  3A00               	xorlw	0	; case 0
  7531  0350  1903               	skipnz
  7532  0351  2B53               	goto	l4296
  7533  0352  2B35               	goto	l3778
  7534  0353                     l4296:	
  7535                           
  7536                           ; Switch size 1, requested type "simple"
  7537                           ; Number of cases is 5, Range of values is 32 to 48
  7538                           ; switch strategies available:
  7539                           ; Name         Instructions Cycles
  7540                           ; simple_byte           16     9 (average)
  7541                           ; direct_byte           43     9 (fixed)
  7542                           ; jumptable            263     9 (fixed)
  7543                           ;	Chosen strategy is simple_byte
  7544  0353  0857               	movf	??_vfpfcnvrt+2,w
  7545  0354  3A20               	xorlw	32	; case 32
  7546  0355  1903               	skipnz
  7547  0356  2B31               	goto	l597
  7548  0357  3A03               	xorlw	3	; case 35
  7549  0358  1903               	skipnz
  7550  0359  2B33               	goto	l598
  7551  035A  3A08               	xorlw	8	; case 43
  7552  035B  1903               	skipnz
  7553  035C  2B2F               	goto	l596
  7554  035D  3A06               	xorlw	6	; case 45
  7555  035E  1903               	skipnz
  7556  035F  2B23               	goto	l593
  7557  0360  3A1D               	xorlw	29	; case 48
  7558  0361  1903               	skipnz
  7559  0362  2B2D               	goto	l595
  7560  0363  2B35               	goto	l3778
  7561  0364  2B3A               	goto	l3784
  7562  0365                     l600:	
  7563                           
  7564                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 716:         if (flags
      +                           & (1 << 0)) {
  7565  0365  0020               	movlb	0	; select bank0
  7566  0366  1C6D               	btfss	_flags,0
  7567  0367  2B6C               	goto	l3788
  7568                           
  7569                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 717:             flags
      +                           &= ~(1 << 1);
  7570  0368  30FD               	movlw	253
  7571  0369  05ED               	andwf	_flags,f
  7572  036A  30FF               	movlw	255
  7573  036B  05EE               	andwf	_flags+1,f
  7574  036C                     l3788:	
  7575                           
  7576                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 723:         if ((*fmt
      +                          )[0] == '*') {
  7577  036C  0853               	movf	vfpfcnvrt@fmt,w
  7578  036D  0086               	movwf	6
  7579  036E  0187               	clrf	7
  7580  036F  3F40               	moviw [0]fsr1
  7581  0370  00D5               	movwf	??_vfpfcnvrt
  7582  0371  3F41               	moviw [1]fsr1
  7583  0372  00D6               	movwf	??_vfpfcnvrt+1
  7584  0373  0855               	movf	??_vfpfcnvrt,w
  7585  0374  0084               	movwf	4
  7586  0375  0856               	movf	??_vfpfcnvrt+1,w
  7587  0376  0085               	movwf	5
  7588  0377  0012               	moviw fsr0++
  7589  0378  3A2A               	xorlw	42
  7590  0379  1D03               	btfss	3,2
  7591  037A  2B9B               	goto	l3800
  7592                           
  7593                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 724:             ++*fm
      +                          t;
  7594  037B  0853               	movf	vfpfcnvrt@fmt,w
  7595  037C  0086               	movwf	6
  7596  037D  0187               	clrf	7
  7597  037E  3001               	movlw	1
  7598  037F  0781               	addwf	1,f
  7599  0380  3141               	addfsr 1,1
  7600  0381  1803               	skipnc
  7601  0382  0A81               	incf	1,f
  7602                           
  7603                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 725:             width
      +                           = (*(int *)__va_arg(*(int **)ap, (int)0));
  7604  0383  0854               	movf	vfpfcnvrt@ap,w
  7605  0384  0086               	movwf	6
  7606  0385  0187               	clrf	7
  7607  0386  0801               	movf	1,w
  7608  0387  0084               	movwf	4
  7609  0388  0185               	clrf	5
  7610  0389  3002               	movlw	2
  7611  038A  0781               	addwf	1,f
  7612  038B  3F00               	moviw [0]fsr0
  7613  038C  0021               	movlb	1	; select bank1
  7614  038D  00E4               	movwf	_width^(0+128)
  7615  038E  3F01               	moviw [1]fsr0
  7616  038F  00E5               	movwf	(_width+1)^(0+128)
  7617                           
  7618                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 726:             if (w
      +                          idth < 0) {
  7619  0390  1FE5               	btfss	(_width+1)^(0+128),7
  7620  0391  2BDE               	goto	l3810
  7621                           
  7622                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 727:                 f
      +                          lags |= (1 << 0);
  7623  0392  0020               	movlb	0	; select bank0
  7624  0393  146D               	bsf	_flags,0
  7625                           
  7626                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 728:                 w
      +                          idth = -width;
  7627  0394  0021               	movlb	1	; select bank1
  7628  0395  09E4               	comf	_width^(0+128),f
  7629  0396  09E5               	comf	(_width+1)^(0+128),f
  7630  0397  0AE4               	incf	_width^(0+128),f
  7631  0398  1903               	skipnz
  7632  0399  0AE5               	incf	(_width+1)^(0+128),f
  7633  039A  2BDE               	goto	l3810
  7634  039B                     l3800:	
  7635                           
  7636                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 731:             width
      +                           = atoi(*fmt);
  7637  039B  0853               	movf	vfpfcnvrt@fmt,w
  7638  039C  0086               	movwf	6
  7639  039D  0187               	clrf	7
  7640  039E  3F40               	moviw [0]fsr1
  7641  039F  00F6               	movwf	atoi@s
  7642  03A0  3F41               	moviw [1]fsr1
  7643  03A1  00F7               	movwf	atoi@s+1
  7644  03A2  318B  23FF  3182   	fcall	_atoi
  7645  03A5  0877               	movf	?_atoi+1,w
  7646  03A6  0021               	movlb	1	; select bank1
  7647  03A7  00E5               	movwf	(_width+1)^(0+128)
  7648  03A8  0876               	movf	?_atoi,w
  7649  03A9  00E4               	movwf	_width^(0+128)
  7650                           
  7651                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 732:             while
      +                           ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  7652  03AA  2BB4               	goto	l3804
  7653  03AB                     l3802:	
  7654                           
  7655                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 733:                 +
      +                          +*fmt;
  7656  03AB  0020               	movlb	0	; select bank0
  7657  03AC  0853               	movf	vfpfcnvrt@fmt,w
  7658  03AD  0086               	movwf	6
  7659  03AE  0187               	clrf	7
  7660  03AF  3001               	movlw	1
  7661  03B0  0781               	addwf	1,f
  7662  03B1  3141               	addfsr 1,1
  7663  03B2  1803               	skipnc
  7664  03B3  0A81               	incf	1,f
  7665  03B4                     l3804:	
  7666  03B4  0020               	movlb	0	; select bank0
  7667  03B5  0853               	movf	vfpfcnvrt@fmt,w
  7668  03B6  0086               	movwf	6
  7669  03B7  0187               	clrf	7
  7670  03B8  3F40               	moviw [0]fsr1
  7671  03B9  00D5               	movwf	??_vfpfcnvrt
  7672  03BA  3F41               	moviw [1]fsr1
  7673  03BB  00D6               	movwf	??_vfpfcnvrt+1
  7674  03BC  0855               	movf	??_vfpfcnvrt,w
  7675  03BD  0084               	movwf	4
  7676  03BE  0856               	movf	??_vfpfcnvrt+1,w
  7677  03BF  0085               	movwf	5
  7678  03C0  0800               	movf	0,w	;code access
  7679  03C1  3ED0               	addlw	208
  7680  03C2  00D7               	movwf	??_vfpfcnvrt+2
  7681  03C3  30FF               	movlw	255
  7682  03C4  1803               	skipnc
  7683  03C5  3000               	movlw	0
  7684  03C6  00D8               	movwf	??_vfpfcnvrt+3
  7685  03C7  3000               	movlw	0
  7686  03C8  0258               	subwf	??_vfpfcnvrt+3,w
  7687  03C9  300A               	movlw	10
  7688  03CA  1903               	skipnz
  7689  03CB  0257               	subwf	??_vfpfcnvrt+2,w
  7690  03CC  1803               	btfsc	3,0
  7691  03CD  2BD0               	goto	u3770
  7692  03CE  3001               	movlw	1
  7693  03CF  2BD1               	goto	u3780
  7694  03D0                     u3770:	
  7695  03D0  3000               	movlw	0
  7696  03D1                     u3780:	
  7697  03D1  00D9               	movwf	??_vfpfcnvrt+4
  7698  03D2  01DA               	clrf	??_vfpfcnvrt+5
  7699  03D3  0859               	movf	??_vfpfcnvrt+4,w
  7700  03D4  0021               	movlb	1	; select bank1
  7701  03D5  00B5               	movwf	_vfpfcnvrt$691^(0+128)
  7702  03D6  0020               	movlb	0	; select bank0
  7703  03D7  085A               	movf	??_vfpfcnvrt+5,w
  7704  03D8  0021               	movlb	1	; select bank1
  7705  03D9  00B6               	movwf	(_vfpfcnvrt$691+1)^(0+128)
  7706  03DA  0835               	movf	_vfpfcnvrt$691^(0+128),w
  7707  03DB  0436               	iorwf	(_vfpfcnvrt$691+1)^(0+128),w
  7708  03DC  1D03               	btfss	3,2
  7709  03DD  2BAB               	goto	l3802
  7710  03DE                     l3810:	
  7711                           
  7712                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 825:         if ((*fmt
      +                          [0] == 'd') || (*fmt[0] == 'i')) {
  7713  03DE  0020               	movlb	0	; select bank0
  7714  03DF  0853               	movf	vfpfcnvrt@fmt,w
  7715  03E0  0086               	movwf	6
  7716  03E1  0187               	clrf	7
  7717  03E2  3F40               	moviw [0]fsr1
  7718  03E3  00D5               	movwf	??_vfpfcnvrt
  7719  03E4  3F41               	moviw [1]fsr1
  7720  03E5  00D6               	movwf	??_vfpfcnvrt+1
  7721  03E6  0855               	movf	??_vfpfcnvrt,w
  7722  03E7  0084               	movwf	4
  7723  03E8  0856               	movf	??_vfpfcnvrt+1,w
  7724  03E9  0085               	movwf	5
  7725  03EA  0012               	moviw fsr0++
  7726  03EB  3A64               	xorlw	100
  7727  03EC  1903               	btfsc	3,2
  7728  03ED  2BFD               	goto	l3814
  7729  03EE  0853               	movf	vfpfcnvrt@fmt,w
  7730  03EF  0086               	movwf	6
  7731  03F0  0187               	clrf	7
  7732  03F1  3F40               	moviw [0]fsr1
  7733  03F2  00D5               	movwf	??_vfpfcnvrt
  7734  03F3  3F41               	moviw [1]fsr1
  7735  03F4  00D6               	movwf	??_vfpfcnvrt+1
  7736  03F5  0855               	movf	??_vfpfcnvrt,w
  7737  03F6  0084               	movwf	4
  7738  03F7  0856               	movf	??_vfpfcnvrt+1,w
  7739  03F8  0085               	movwf	5
  7740  03F9  0012               	moviw fsr0++
  7741  03FA  3A69               	xorlw	105
  7742  03FB  1D03               	btfss	3,2
  7743  03FC  2C4A               	goto	l3822
  7744  03FD                     l3814:	
  7745                           
  7746                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 827:             ++*fm
      +                          t;
  7747  03FD  0853               	movf	vfpfcnvrt@fmt,w
  7748  03FE  0086               	movwf	6
  7749  03FF  0187               	clrf	7
  7750  0400  3001               	movlw	1
  7751  0401  0781               	addwf	1,f
  7752  0402  3141               	addfsr 1,1
  7753  0403  1803               	skipnc
  7754  0404  0A81               	incf	1,f
  7755                           
  7756                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 828:             ll = 
      +                          (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  7757  0405  0854               	movf	vfpfcnvrt@ap,w
  7758  0406  0086               	movwf	6
  7759  0407  0187               	clrf	7
  7760  0408  0801               	movf	1,w
  7761  0409  0084               	movwf	4
  7762  040A  0185               	clrf	5
  7763  040B  3002               	movlw	2
  7764  040C  0781               	addwf	1,f
  7765  040D  3F00               	moviw [0]fsr0
  7766  040E  00D5               	movwf	??_vfpfcnvrt
  7767  040F  3F01               	moviw [1]fsr0
  7768  0410  00D6               	movwf	??_vfpfcnvrt+1
  7769  0411  0855               	movf	??_vfpfcnvrt,w
  7770  0412  0021               	movlb	1	; select bank1
  7771  0413  00A0               	movwf	vfpfcnvrt@ll^(0+128)
  7772  0414  0020               	movlb	0	; select bank0
  7773  0415  0856               	movf	??_vfpfcnvrt+1,w
  7774  0416  0021               	movlb	1	; select bank1
  7775  0417  00A1               	movwf	(vfpfcnvrt@ll+1)^(0+128)
  7776  0418  0D89               	rlf	9,f
  7777  0419  3B89               	subwfb	9,f
  7778  041A  0989               	comf	9,f
  7779  041B  00A2               	movwf	(vfpfcnvrt@ll+2)^(0+128)
  7780  041C  00A3               	movwf	(vfpfcnvrt@ll+3)^(0+128)
  7781  041D  00A4               	movwf	(vfpfcnvrt@ll+4)^(0+128)
  7782  041E  00A5               	movwf	(vfpfcnvrt@ll+5)^(0+128)
  7783  041F  00A6               	movwf	(vfpfcnvrt@ll+6)^(0+128)
  7784  0420  00A7               	movwf	(vfpfcnvrt@ll+7)^(0+128)
  7785                           
  7786                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 830:             retur
      +                          n dtoa(fp, ll);
  7787  0421  0820               	movf	vfpfcnvrt@ll^(0+128),w
  7788  0422  0020               	movlb	0	; select bank0
  7789  0423  00B0               	movwf	dtoa@d
  7790  0424  0021               	movlb	1	; select bank1
  7791  0425  0821               	movf	(vfpfcnvrt@ll+1)^(0+128),w
  7792  0426  0020               	movlb	0	; select bank0
  7793  0427  00B1               	movwf	dtoa@d+1
  7794  0428  0021               	movlb	1	; select bank1
  7795  0429  0822               	movf	(vfpfcnvrt@ll+2)^(0+128),w
  7796  042A  0020               	movlb	0	; select bank0
  7797  042B  00B2               	movwf	dtoa@d+2
  7798  042C  0021               	movlb	1	; select bank1
  7799  042D  0823               	movf	(vfpfcnvrt@ll+3)^(0+128),w
  7800  042E  0020               	movlb	0	; select bank0
  7801  042F  00B3               	movwf	dtoa@d+3
  7802  0430  0021               	movlb	1	; select bank1
  7803  0431  0824               	movf	(vfpfcnvrt@ll+4)^(0+128),w
  7804  0432  0020               	movlb	0	; select bank0
  7805  0433  00B4               	movwf	dtoa@d+4
  7806  0434  0021               	movlb	1	; select bank1
  7807  0435  0825               	movf	(vfpfcnvrt@ll+5)^(0+128),w
  7808  0436  0020               	movlb	0	; select bank0
  7809  0437  00B5               	movwf	dtoa@d+5
  7810  0438  0021               	movlb	1	; select bank1
  7811  0439  0826               	movf	(vfpfcnvrt@ll+6)^(0+128),w
  7812  043A  0020               	movlb	0	; select bank0
  7813  043B  00B6               	movwf	dtoa@d+6
  7814  043C  0021               	movlb	1	; select bank1
  7815  043D  0827               	movf	(vfpfcnvrt@ll+7)^(0+128),w
  7816  043E  0020               	movlb	0	; select bank0
  7817  043F  00B7               	movwf	dtoa@d+7
  7818  0440  0021               	movlb	1	; select bank1
  7819  0441  0837               	movf	vfpfcnvrt@fp^(0+128),w
  7820  0442  3186  26A2         	fcall	_dtoa
  7821  0444  0020               	movlb	0	; select bank0
  7822  0445  0831               	movf	?_dtoa+1,w
  7823  0446  00D4               	movwf	?_vfpfcnvrt+1
  7824  0447  0830               	movf	?_dtoa,w
  7825  0448  00D3               	movwf	?_vfpfcnvrt
  7826  0449  0008               	return
  7827  044A                     l3822:	
  7828                           
  7829                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 1149:         if (*fmt
      +                          [0] == 's') {
  7830  044A  0853               	movf	vfpfcnvrt@fmt,w
  7831  044B  0086               	movwf	6
  7832  044C  0187               	clrf	7
  7833  044D  3F40               	moviw [0]fsr1
  7834  044E  00D5               	movwf	??_vfpfcnvrt
  7835  044F  3F41               	moviw [1]fsr1
  7836  0450  00D6               	movwf	??_vfpfcnvrt+1
  7837  0451  0855               	movf	??_vfpfcnvrt,w
  7838  0452  0084               	movwf	4
  7839  0453  0856               	movf	??_vfpfcnvrt+1,w
  7840  0454  0085               	movwf	5
  7841  0455  0012               	moviw fsr0++
  7842  0456  3A73               	xorlw	115
  7843  0457  1D03               	btfss	3,2
  7844  0458  2C7B               	goto	l3832
  7845                           
  7846                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 1151:             ++*f
      +                          mt;
  7847  0459  0853               	movf	vfpfcnvrt@fmt,w
  7848  045A  0086               	movwf	6
  7849  045B  0187               	clrf	7
  7850  045C  3001               	movlw	1
  7851  045D  0781               	addwf	1,f
  7852  045E  3141               	addfsr 1,1
  7853  045F  1803               	skipnc
  7854  0460  0A81               	incf	1,f
  7855                           
  7856                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 1152:             cp =
      +                           (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  7857  0461  0854               	movf	vfpfcnvrt@ap,w
  7858  0462  0086               	movwf	6
  7859  0463  0187               	clrf	7
  7860  0464  0801               	movf	1,w
  7861  0465  0084               	movwf	4
  7862  0466  0185               	clrf	5
  7863  0467  3002               	movlw	2
  7864  0468  0781               	addwf	1,f
  7865  0469  3F00               	moviw [0]fsr0
  7866  046A  0021               	movlb	1	; select bank1
  7867  046B  00B0               	movwf	vfpfcnvrt@cp^(0+128)
  7868  046C  3F01               	moviw [1]fsr0
  7869  046D  00B1               	movwf	(vfpfcnvrt@cp+1)^(0+128)
  7870                           
  7871                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 1154:             retu
      +                          rn stoa(fp, cp);
  7872  046E  0831               	movf	(vfpfcnvrt@cp+1)^(0+128),w
  7873  046F  00FB               	movwf	stoa@s+1
  7874  0470  0830               	movf	vfpfcnvrt@cp^(0+128),w
  7875  0471  00FA               	movwf	stoa@s
  7876  0472  0837               	movf	vfpfcnvrt@fp^(0+128),w
  7877  0473  318C  24A0         	fcall	_stoa
  7878  0475  087B               	movf	?_stoa+1,w
  7879  0476  0020               	movlb	0	; select bank0
  7880  0477  00D4               	movwf	?_vfpfcnvrt+1
  7881  0478  087A               	movf	?_stoa,w
  7882  0479  00D3               	movwf	?_vfpfcnvrt
  7883  047A  0008               	return
  7884  047B                     l3832:	
  7885                           
  7886                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 1274:         if ((*fm
      +                          t[0] == 'x') || (*fmt[0] == 'X')) {
  7887  047B  0853               	movf	vfpfcnvrt@fmt,w
  7888  047C  0086               	movwf	6
  7889  047D  0187               	clrf	7
  7890  047E  3F40               	moviw [0]fsr1
  7891  047F  00D5               	movwf	??_vfpfcnvrt
  7892  0480  3F41               	moviw [1]fsr1
  7893  0481  00D6               	movwf	??_vfpfcnvrt+1
  7894  0482  0855               	movf	??_vfpfcnvrt,w
  7895  0483  0084               	movwf	4
  7896  0484  0856               	movf	??_vfpfcnvrt+1,w
  7897  0485  0085               	movwf	5
  7898  0486  0012               	moviw fsr0++
  7899  0487  3A78               	xorlw	120
  7900  0488  1903               	btfsc	3,2
  7901  0489  2C99               	goto	l3836
  7902  048A  0853               	movf	vfpfcnvrt@fmt,w
  7903  048B  0086               	movwf	6
  7904  048C  0187               	clrf	7
  7905  048D  3F40               	moviw [0]fsr1
  7906  048E  00D5               	movwf	??_vfpfcnvrt
  7907  048F  3F41               	moviw [1]fsr1
  7908  0490  00D6               	movwf	??_vfpfcnvrt+1
  7909  0491  0855               	movf	??_vfpfcnvrt,w
  7910  0492  0084               	movwf	4
  7911  0493  0856               	movf	??_vfpfcnvrt+1,w
  7912  0494  0085               	movwf	5
  7913  0495  0012               	moviw fsr0++
  7914  0496  3A58               	xorlw	88
  7915  0497  1D03               	btfss	3,2
  7916  0498  2CF4               	goto	l3846
  7917  0499                     l3836:	
  7918                           
  7919                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 1276:             c = 
      +                          (*fmt)[0];
  7920  0499  0853               	movf	vfpfcnvrt@fmt,w
  7921  049A  0086               	movwf	6
  7922  049B  0187               	clrf	7
  7923  049C  3F40               	moviw [0]fsr1
  7924  049D  00D5               	movwf	??_vfpfcnvrt
  7925  049E  3F41               	moviw [1]fsr1
  7926  049F  00D6               	movwf	??_vfpfcnvrt+1
  7927  04A0  0855               	movf	??_vfpfcnvrt,w
  7928  04A1  0084               	movwf	4
  7929  04A2  0856               	movf	??_vfpfcnvrt+1,w
  7930  04A3  0085               	movwf	5
  7931  04A4  0800               	movf	0,w	;code access
  7932  04A5  00D7               	movwf	??_vfpfcnvrt+2
  7933  04A6  0857               	movf	??_vfpfcnvrt+2,w
  7934  04A7  0021               	movlb	1	; select bank1
  7935  04A8  00B2               	movwf	vfpfcnvrt@c^(0+128)
  7936                           
  7937                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 1277:             ++*f
      +                          mt;
  7938  04A9  0020               	movlb	0	; select bank0
  7939  04AA  0853               	movf	vfpfcnvrt@fmt,w
  7940  04AB  0086               	movwf	6
  7941  04AC  0187               	clrf	7
  7942  04AD  3001               	movlw	1
  7943  04AE  0781               	addwf	1,f
  7944  04AF  3141               	addfsr 1,1
  7945  04B0  1803               	skipnc
  7946  04B1  0A81               	incf	1,f
  7947                           
  7948                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 1278:             llu 
      +                          = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0))
      +                          ;
  7949  04B2  0854               	movf	vfpfcnvrt@ap,w
  7950  04B3  0086               	movwf	6
  7951  04B4  0187               	clrf	7
  7952  04B5  0801               	movf	1,w
  7953  04B6  0084               	movwf	4
  7954  04B7  0185               	clrf	5
  7955  04B8  3002               	movlw	2
  7956  04B9  0781               	addwf	1,f
  7957  04BA  3F00               	moviw [0]fsr0
  7958  04BB  0021               	movlb	1	; select bank1
  7959  04BC  00A8               	movwf	vfpfcnvrt@llu^(0+128)
  7960  04BD  3F01               	moviw [1]fsr0
  7961  04BE  00A9               	movwf	(vfpfcnvrt@llu+1)^(0+128)
  7962  04BF  01AA               	clrf	(vfpfcnvrt@llu+2)^(0+128)
  7963  04C0  01AB               	clrf	(vfpfcnvrt@llu+3)^(0+128)
  7964  04C1  01AC               	clrf	(vfpfcnvrt@llu+4)^(0+128)
  7965  04C2  01AD               	clrf	(vfpfcnvrt@llu+5)^(0+128)
  7966  04C3  01AE               	clrf	(vfpfcnvrt@llu+6)^(0+128)
  7967  04C4  01AF               	clrf	(vfpfcnvrt@llu+7)^(0+128)
  7968                           
  7969                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 1280:             retu
      +                          rn xtoa(fp, llu, c);
  7970  04C5  0828               	movf	vfpfcnvrt@llu^(0+128),w
  7971  04C6  0020               	movlb	0	; select bank0
  7972  04C7  00AD               	movwf	xtoa@d
  7973  04C8  0021               	movlb	1	; select bank1
  7974  04C9  0829               	movf	(vfpfcnvrt@llu+1)^(0+128),w
  7975  04CA  0020               	movlb	0	; select bank0
  7976  04CB  00AE               	movwf	xtoa@d+1
  7977  04CC  0021               	movlb	1	; select bank1
  7978  04CD  082A               	movf	(vfpfcnvrt@llu+2)^(0+128),w
  7979  04CE  0020               	movlb	0	; select bank0
  7980  04CF  00AF               	movwf	xtoa@d+2
  7981  04D0  0021               	movlb	1	; select bank1
  7982  04D1  082B               	movf	(vfpfcnvrt@llu+3)^(0+128),w
  7983  04D2  0020               	movlb	0	; select bank0
  7984  04D3  00B0               	movwf	xtoa@d+3
  7985  04D4  0021               	movlb	1	; select bank1
  7986  04D5  082C               	movf	(vfpfcnvrt@llu+4)^(0+128),w
  7987  04D6  0020               	movlb	0	; select bank0
  7988  04D7  00B1               	movwf	xtoa@d+4
  7989  04D8  0021               	movlb	1	; select bank1
  7990  04D9  082D               	movf	(vfpfcnvrt@llu+5)^(0+128),w
  7991  04DA  0020               	movlb	0	; select bank0
  7992  04DB  00B2               	movwf	xtoa@d+5
  7993  04DC  0021               	movlb	1	; select bank1
  7994  04DD  082E               	movf	(vfpfcnvrt@llu+6)^(0+128),w
  7995  04DE  0020               	movlb	0	; select bank0
  7996  04DF  00B3               	movwf	xtoa@d+6
  7997  04E0  0021               	movlb	1	; select bank1
  7998  04E1  082F               	movf	(vfpfcnvrt@llu+7)^(0+128),w
  7999  04E2  0020               	movlb	0	; select bank0
  8000  04E3  00B4               	movwf	xtoa@d+7
  8001  04E4  0021               	movlb	1	; select bank1
  8002  04E5  0832               	movf	vfpfcnvrt@c^(0+128),w
  8003  04E6  0020               	movlb	0	; select bank0
  8004  04E7  00D5               	movwf	??_vfpfcnvrt
  8005  04E8  0855               	movf	??_vfpfcnvrt,w
  8006  04E9  00B5               	movwf	xtoa@x
  8007  04EA  0021               	movlb	1	; select bank1
  8008  04EB  0837               	movf	vfpfcnvrt@fp^(0+128),w
  8009  04EC  3185  254D         	fcall	_xtoa
  8010  04EE  0020               	movlb	0	; select bank0
  8011  04EF  082E               	movf	?_xtoa+1,w
  8012  04F0  00D4               	movwf	?_vfpfcnvrt+1
  8013  04F1  082D               	movf	?_xtoa,w
  8014  04F2  00D3               	movwf	?_vfpfcnvrt
  8015  04F3  0008               	return
  8016  04F4                     l3846:	
  8017                           
  8018                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 1350:         if ((*fm
      +                          t)[0] == '%') {
  8019  04F4  0853               	movf	vfpfcnvrt@fmt,w
  8020  04F5  0086               	movwf	6
  8021  04F6  0187               	clrf	7
  8022  04F7  3F40               	moviw [0]fsr1
  8023  04F8  00D5               	movwf	??_vfpfcnvrt
  8024  04F9  3F41               	moviw [1]fsr1
  8025  04FA  00D6               	movwf	??_vfpfcnvrt+1
  8026  04FB  0855               	movf	??_vfpfcnvrt,w
  8027  04FC  0084               	movwf	4
  8028  04FD  0856               	movf	??_vfpfcnvrt+1,w
  8029  04FE  0085               	movwf	5
  8030  04FF  0012               	moviw fsr0++
  8031  0500  3A25               	xorlw	37
  8032  0501  1D03               	btfss	3,2
  8033  0502  2D1D               	goto	l3856
  8034                           
  8035                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 1351:             ++*f
      +                          mt;
  8036  0503  0853               	movf	vfpfcnvrt@fmt,w
  8037  0504  0086               	movwf	6
  8038  0505  0187               	clrf	7
  8039  0506  3001               	movlw	1
  8040  0507  0781               	addwf	1,f
  8041  0508  3141               	addfsr 1,1
  8042  0509  1803               	skipnc
  8043  050A  0A81               	incf	1,f
  8044                           
  8045                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 1352:             fput
      +                          c((int)'%', fp);
  8046  050B  3025               	movlw	37
  8047  050C  00F2               	movwf	fputc@c
  8048  050D  3000               	movlw	0
  8049  050E  00F3               	movwf	fputc@c+1
  8050  050F  0021               	movlb	1	; select bank1
  8051  0510  0837               	movf	vfpfcnvrt@fp^(0+128),w
  8052  0511  0020               	movlb	0	; select bank0
  8053  0512  00D5               	movwf	??_vfpfcnvrt
  8054  0513  0855               	movf	??_vfpfcnvrt,w
  8055  0514  00F4               	movwf	fputc@fp
  8056  0515  318A  2212         	fcall	_fputc
  8057  0517                     l3852:	
  8058                           
  8059                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 1353:             retu
      +                          rn 1;
  8060  0517  3001               	movlw	1
  8061  0518  0020               	movlb	0	; select bank0
  8062  0519  00D3               	movwf	?_vfpfcnvrt
  8063  051A  3000               	movlw	0
  8064  051B  00D4               	movwf	?_vfpfcnvrt+1
  8065  051C  0008               	return
  8066  051D                     l3856:	
  8067                           
  8068                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 1357:         ++*fmt;
  8069  051D  0853               	movf	vfpfcnvrt@fmt,w
  8070  051E  0086               	movwf	6
  8071  051F  0187               	clrf	7
  8072  0520  3001               	movlw	1
  8073  0521  0781               	addwf	1,f
  8074  0522  3141               	addfsr 1,1
  8075  0523  1803               	skipnc
  8076  0524  0A81               	incf	1,f
  8077                           
  8078                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 1358:         return 0
      +                          ;
  8079  0525  01D3               	clrf	?_vfpfcnvrt
  8080  0526  01D4               	clrf	?_vfpfcnvrt+1
  8081  0527  0008               	return
  8082  0528                     l3862:	
  8083                           
  8084                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 1362:     fputc((int)(
      +                          *fmt)[0], fp);
  8085  0528  0853               	movf	vfpfcnvrt@fmt,w
  8086  0529  0086               	movwf	6
  8087  052A  0187               	clrf	7
  8088  052B  3F40               	moviw [0]fsr1
  8089  052C  00D5               	movwf	??_vfpfcnvrt
  8090  052D  3F41               	moviw [1]fsr1
  8091  052E  00D6               	movwf	??_vfpfcnvrt+1
  8092  052F  0855               	movf	??_vfpfcnvrt,w
  8093  0530  0084               	movwf	4
  8094  0531  0856               	movf	??_vfpfcnvrt+1,w
  8095  0532  0085               	movwf	5
  8096  0533  0800               	movf	0,w	;code access
  8097  0534  00D7               	movwf	??_vfpfcnvrt+2
  8098  0535  01D8               	clrf	??_vfpfcnvrt+3
  8099  0536  0857               	movf	??_vfpfcnvrt+2,w
  8100  0537  00F2               	movwf	fputc@c
  8101  0538  0858               	movf	??_vfpfcnvrt+3,w
  8102  0539  00F3               	movwf	fputc@c+1
  8103  053A  0021               	movlb	1	; select bank1
  8104  053B  0837               	movf	vfpfcnvrt@fp^(0+128),w
  8105  053C  0020               	movlb	0	; select bank0
  8106  053D  00D9               	movwf	??_vfpfcnvrt+4
  8107  053E  0859               	movf	??_vfpfcnvrt+4,w
  8108  053F  00F4               	movwf	fputc@fp
  8109  0540  318A  2212  3182   	fcall	_fputc
  8110                           
  8111                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 1363:     ++*fmt;
  8112  0543  0020               	movlb	0	; select bank0
  8113  0544  0853               	movf	vfpfcnvrt@fmt,w
  8114  0545  0086               	movwf	6
  8115  0546  0187               	clrf	7
  8116  0547  3001               	movlw	1
  8117  0548  0781               	addwf	1,f
  8118  0549  3141               	addfsr 1,1
  8119  054A  1803               	skipnc
  8120  054B  0A81               	incf	1,f
  8121  054C  2D17               	goto	l3852
  8122  054D                     __end_of_vfpfcnvrt:	
  8123                           
  8124                           	psect	text23
  8125  054D                     __ptext23:	
  8126 ;; *************** function _xtoa *****************
  8127 ;; Defined at:
  8128 ;;		line 623 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c"
  8129 ;; Parameters:    Size  Location     Type
  8130 ;;  fp              1    wreg     PTR struct _IO_FILE
  8131 ;;		 -> sprintf@f(6), NULL(0), 
  8132 ;;  d               8   13[BANK0 ] unsigned long long 
  8133 ;;  x               1   21[BANK0 ] unsigned char 
  8134 ;; Auto vars:     Size  Location     Type
  8135 ;;  fp              1   30[BANK0 ] PTR struct _IO_FILE
  8136 ;;		 -> sprintf@f(6), NULL(0), 
  8137 ;;  n               8   39[BANK0 ] unsigned long long 
  8138 ;;  c               2   49[BANK0 ] int 
  8139 ;;  i               2   47[BANK0 ] int 
  8140 ;;  w               2   37[BANK0 ] int 
  8141 ;;  p               2   35[BANK0 ] int 
  8142 ;; Return value:  Size  Location     Type
  8143 ;;                  2   13[BANK0 ] int 
  8144 ;; Registers used:
  8145 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8146 ;; Tracked objects:
  8147 ;;		On entry : 0/0
  8148 ;;		On exit  : 0/0
  8149 ;;		Unchanged: 0/0
  8150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8151 ;;      Params:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8152 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8153 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8154 ;;      Totals:         0      38       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8155 ;;Total ram usage:       38 bytes
  8156 ;; Hardware stack levels used:    1
  8157 ;; Hardware stack levels required when called:    8
  8158 ;; This function calls:
  8159 ;;		_isalpha
  8160 ;;		_isupper
  8161 ;;		_pad
  8162 ;;		_toupper
  8163 ;; This function is called by:
  8164 ;;		_vfpfcnvrt
  8165 ;; This function uses a non-reentrant model
  8166 ;;
  8167                           
  8168                           
  8169                           ;psect for function _xtoa
  8170  054D                     _xtoa:	
  8171                           
  8172                           ;incstack = 0
  8173                           ; Regs used in _xtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8174                           ;xtoa@fp stored from wreg
  8175  054D  0020               	movlb	0	; select bank0
  8176  054E  00BE               	movwf	xtoa@fp
  8177                           
  8178                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 623: static int xtoa(F
      +                          ILE *fp, unsigned long long d, char x);K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\c
      +                          ommon\doprnt.c: 624: {;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 
      +                          625:     int c, i, p, w;;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c
      +                          : 626:     unsigned long long n;;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\
      +                          doprnt.c: 629:     if (!(prec < 0)) {
  8179  054F  0021               	movlb	1	; select bank1
  8180  0550  1BE7               	btfsc	(_prec+1)^(0+128),7
  8181  0551  2D57               	goto	l559
  8182                           
  8183                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 630:         flags &= 
      +                          ~(1 << 1);
  8184  0552  30FD               	movlw	253
  8185  0553  0020               	movlb	0	; select bank0
  8186  0554  05ED               	andwf	_flags,f
  8187  0555  30FF               	movlw	255
  8188  0556  05EE               	andwf	_flags+1,f
  8189  0557                     l559:	
  8190                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 631:     }
  8191                           
  8192                           
  8193                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 632:     p = (0 < prec
      +                          ) ? prec : 1;
  8194  0557  0021               	movlb	1	; select bank1
  8195  0558  0867               	movf	(_prec+1)^(0+128),w
  8196  0559  3A80               	xorlw	128
  8197  055A  0020               	movlb	0	; select bank0
  8198  055B  00B6               	movwf	??_xtoa
  8199  055C  3080               	movlw	128
  8200  055D  0236               	subwf	??_xtoa,w
  8201  055E  1D03               	skipz
  8202  055F  2D63               	goto	u3565
  8203  0560  3001               	movlw	1
  8204  0561  0021               	movlb	1	; select bank1
  8205  0562  0266               	subwf	_prec^(0+128),w
  8206  0563                     u3565:	
  8207  0563  1803               	skipnc
  8208  0564  2D6B               	goto	l3700
  8209  0565  3001               	movlw	1
  8210  0566  0020               	movlb	0	; select bank0
  8211  0567  00C3               	movwf	xtoa@p
  8212  0568  3000               	movlw	0
  8213  0569  00C4               	movwf	xtoa@p+1
  8214  056A  2D73               	goto	l563
  8215  056B                     l3700:	
  8216  056B  0021               	movlb	1	; select bank1
  8217  056C  0867               	movf	(_prec+1)^(0+128),w
  8218  056D  0020               	movlb	0	; select bank0
  8219  056E  00C4               	movwf	xtoa@p+1
  8220  056F  0021               	movlb	1	; select bank1
  8221  0570  0866               	movf	_prec^(0+128),w
  8222  0571  0020               	movlb	0	; select bank0
  8223  0572  00C3               	movwf	xtoa@p
  8224  0573                     l563:	
  8225                           
  8226                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 633:     w = width;
  8227  0573  0021               	movlb	1	; select bank1
  8228  0574  0865               	movf	(_width+1)^(0+128),w
  8229  0575  0020               	movlb	0	; select bank0
  8230  0576  00C6               	movwf	xtoa@w+1
  8231  0577  0021               	movlb	1	; select bank1
  8232  0578  0864               	movf	_width^(0+128),w
  8233  0579  0020               	movlb	0	; select bank0
  8234  057A  00C5               	movwf	xtoa@w
  8235                           
  8236                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 634:     if (flags & (
      +                          1 << 4)) {
  8237  057B  1E6D               	btfss	_flags,4
  8238  057C  2D81               	goto	l3706
  8239                           
  8240                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 635:         w -= 2;
  8241  057D  30FE               	movlw	254
  8242  057E  07C5               	addwf	xtoa@w,f
  8243  057F  30FF               	movlw	255
  8244  0580  3DC6               	addwfc	xtoa@w+1,f
  8245  0581                     l3706:	
  8246                           
  8247                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 639:     n = d;
  8248  0581  082D               	movf	xtoa@d,w
  8249  0582  00C7               	movwf	xtoa@n
  8250  0583  082E               	movf	xtoa@d+1,w
  8251  0584  00C8               	movwf	xtoa@n+1
  8252  0585  082F               	movf	xtoa@d+2,w
  8253  0586  00C9               	movwf	xtoa@n+2
  8254  0587  0830               	movf	xtoa@d+3,w
  8255  0588  00CA               	movwf	xtoa@n+3
  8256  0589  0831               	movf	xtoa@d+4,w
  8257  058A  00CB               	movwf	xtoa@n+4
  8258  058B  0832               	movf	xtoa@d+5,w
  8259  058C  00CC               	movwf	xtoa@n+5
  8260  058D  0833               	movf	xtoa@d+6,w
  8261  058E  00CD               	movwf	xtoa@n+6
  8262  058F  0834               	movf	xtoa@d+7,w
  8263  0590  00CE               	movwf	xtoa@n+7
  8264                           
  8265                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 640:     i = sizeof(db
      +                          uf) - 1;
  8266  0591  301F               	movlw	31
  8267  0592  00CF               	movwf	xtoa@i
  8268  0593  3000               	movlw	0
  8269  0594  00D0               	movwf	xtoa@i+1
  8270                           
  8271                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 641:     dbuf[i] = '\0
      +                          ';
  8272  0595  0024               	movlb	4	; select bank4
  8273  0596  01EB               	clrf	(_dbuf^(0+512)+31)
  8274                           
  8275                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 642:     while (!(i < 
      +                          2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8276  0597  2E42               	goto	l3738
  8277  0598                     l3710:	
  8278                           
  8279                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 643:         --i;
  8280  0598  30FF               	movlw	255
  8281  0599  0020               	movlb	0	; select bank0
  8282  059A  07CF               	addwf	xtoa@i,f
  8283  059B  30FF               	movlw	255
  8284  059C  3DD0               	addwfc	xtoa@i+1,f
  8285                           
  8286                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 644:         c = n & 0
      +                          x0f;
  8287  059D  300F               	movlw	15
  8288  059E  0547               	andwf	xtoa@n,w
  8289  059F  00D1               	movwf	xtoa@c
  8290  05A0  3000               	movlw	0
  8291  05A1  0548               	andwf	xtoa@n+1,w
  8292  05A2  00D2               	movwf	xtoa@c+1
  8293                           
  8294                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 645:         c = (c < 
      +                          10) ? '0' + c : 'a' + (c - 10);
  8295  05A3  0852               	movf	xtoa@c+1,w
  8296  05A4  3A80               	xorlw	128
  8297  05A5  00B6               	movwf	??_xtoa
  8298  05A6  3080               	movlw	128
  8299  05A7  0236               	subwf	??_xtoa,w
  8300  05A8  1D03               	skipz
  8301  05A9  2DAC               	goto	u3585
  8302  05AA  300A               	movlw	10
  8303  05AB  0251               	subwf	xtoa@c,w
  8304  05AC                     u3585:	
  8305  05AC  1C03               	skipc
  8306  05AD  2DB2               	goto	l3714
  8307  05AE  0020               	movlb	0	; select bank0
  8308  05AF  0851               	movf	xtoa@c,w
  8309  05B0  3E57               	addlw	87
  8310  05B1  2DB5               	goto	L3
  8311  05B2                     l3714:	
  8312  05B2  0020               	movlb	0	; select bank0
  8313  05B3  0851               	movf	xtoa@c,w
  8314  05B4  3E30               	addlw	48
  8315  05B5                     L3:	
  8316  05B5  00D1               	movwf	xtoa@c
  8317  05B6  3000               	movlw	0
  8318  05B7  3D52               	addwfc	xtoa@c+1,w
  8319  05B8  00D2               	movwf	xtoa@c+1
  8320  05B9  0835               	movf	xtoa@x,w
  8321  05BA  3EBF               	addlw	191
  8322  05BB  00B6               	movwf	??_xtoa
  8323  05BC  30FF               	movlw	255
  8324  05BD  1803               	skipnc
  8325  05BE  3000               	movlw	0
  8326  05BF  00B7               	movwf	??_xtoa+1
  8327  05C0  3000               	movlw	0
  8328  05C1  0237               	subwf	??_xtoa+1,w
  8329  05C2  301A               	movlw	26
  8330  05C3  1903               	skipnz
  8331  05C4  0236               	subwf	??_xtoa,w
  8332  05C5  1803               	btfsc	3,0
  8333  05C6  2DC9               	goto	u3590
  8334  05C7  3001               	movlw	1
  8335  05C8  2DCA               	goto	u3600
  8336  05C9                     u3590:	
  8337  05C9  3000               	movlw	0
  8338  05CA                     u3600:	
  8339  05CA  00B8               	movwf	??_xtoa+2
  8340  05CB  01B9               	clrf	??_xtoa+3
  8341  05CC  0838               	movf	??_xtoa+2,w
  8342  05CD  00BF               	movwf	_xtoa$676
  8343  05CE  0839               	movf	??_xtoa+3,w
  8344  05CF  00C0               	movwf	_xtoa$676+1
  8345  05D0  083F               	movf	_xtoa$676,w
  8346  05D1  0440               	iorwf	_xtoa$676+1,w
  8347  05D2  1903               	btfsc	3,2
  8348  05D3  2E00               	goto	l3730
  8349  05D4  3020               	movlw	32
  8350  05D5  0451               	iorwf	xtoa@c,w
  8351  05D6  00B6               	movwf	??_xtoa
  8352  05D7  3000               	movlw	0
  8353  05D8  0452               	iorwf	xtoa@c+1,w
  8354  05D9  00B7               	movwf	??_xtoa+1
  8355  05DA  0836               	movf	??_xtoa,w
  8356  05DB  3E9F               	addlw	159
  8357  05DC  00B8               	movwf	??_xtoa+2
  8358  05DD  30FF               	movlw	255
  8359  05DE  3D37               	addwfc	??_xtoa+1,w
  8360  05DF  00B9               	movwf	??_xtoa+3
  8361  05E0  3000               	movlw	0
  8362  05E1  0239               	subwf	??_xtoa+3,w
  8363  05E2  301A               	movlw	26
  8364  05E3  1903               	skipnz
  8365  05E4  0238               	subwf	??_xtoa+2,w
  8366  05E5  1803               	btfsc	3,0
  8367  05E6  2DE9               	goto	u3620
  8368  05E7  3001               	movlw	1
  8369  05E8  2DEA               	goto	u3630
  8370  05E9                     u3620:	
  8371  05E9  3000               	movlw	0
  8372  05EA                     u3630:	
  8373  05EA  00BA               	movwf	??_xtoa+4
  8374  05EB  01BB               	clrf	??_xtoa+5
  8375  05EC  083A               	movf	??_xtoa+4,w
  8376  05ED  00C1               	movwf	_xtoa$677
  8377  05EE  083B               	movf	??_xtoa+5,w
  8378  05EF  00C2               	movwf	_xtoa$677+1
  8379  05F0  0841               	movf	_xtoa$677,w
  8380  05F1  0442               	iorwf	_xtoa$677+1,w
  8381  05F2  1903               	btfsc	3,2
  8382  05F3  2E00               	goto	l3730
  8383                           
  8384                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 647:             c = t
      +                          oupper(c);
  8385  05F4  0852               	movf	xtoa@c+1,w
  8386  05F5  00F7               	movwf	toupper@c+1
  8387  05F6  0851               	movf	xtoa@c,w
  8388  05F7  00F6               	movwf	toupper@c
  8389  05F8  3188  2001  3185   	fcall	_toupper
  8390  05FB  0877               	movf	?_toupper+1,w
  8391  05FC  0020               	movlb	0	; select bank0
  8392  05FD  00D2               	movwf	xtoa@c+1
  8393  05FE  0876               	movf	?_toupper,w
  8394  05FF  00D1               	movwf	xtoa@c
  8395  0600                     l3730:	
  8396                           
  8397                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 649:         dbuf[i] =
      +                           (char)c;
  8398  0600  0851               	movf	xtoa@c,w
  8399  0601  00B6               	movwf	??_xtoa
  8400  0602  084F               	movf	xtoa@i,w
  8401  0603  3E4C               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8402  0604  0086               	movwf	6
  8403  0605  3002               	movlw	2	; select bank4/5
  8404  0606  0087               	movwf	7
  8405  0607  0836               	movf	??_xtoa,w
  8406  0608  0081               	movwf	1
  8407                           
  8408                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 650:         --p;
  8409  0609  30FF               	movlw	255
  8410  060A  07C3               	addwf	xtoa@p,f
  8411  060B  30FF               	movlw	255
  8412  060C  3DC4               	addwfc	xtoa@p+1,f
  8413                           
  8414                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 651:         --w;
  8415  060D  30FF               	movlw	255
  8416  060E  07C5               	addwf	xtoa@w,f
  8417  060F  30FF               	movlw	255
  8418  0610  3DC6               	addwfc	xtoa@w+1,f
  8419                           
  8420                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 652:         n = n >> 
      +                          4;
  8421  0611  3047               	movlw	low xtoa@n
  8422  0612  0086               	movwf	6
  8423  0613  3000               	movlw	high xtoa@n
  8424  0614  0087               	movwf	7
  8425  0615  3F40               	moviw [0]fsr1
  8426  0616  00B6               	movwf	??_xtoa
  8427  0617  3F41               	moviw [1]fsr1
  8428  0618  00B7               	movwf	??_xtoa+1
  8429  0619  3F42               	moviw [2]fsr1
  8430  061A  00B8               	movwf	??_xtoa+2
  8431  061B  3F43               	moviw [3]fsr1
  8432  061C  00B9               	movwf	??_xtoa+3
  8433  061D  3F44               	moviw [4]fsr1
  8434  061E  00BA               	movwf	??_xtoa+4
  8435  061F  3F45               	moviw [5]fsr1
  8436  0620  00BB               	movwf	??_xtoa+5
  8437  0621  3F46               	moviw [6]fsr1
  8438  0622  00BC               	movwf	??_xtoa+6
  8439  0623  3F47               	moviw [7]fsr1
  8440  0624  00BD               	movwf	??_xtoa+7
  8441  0625  3004               	movlw	4
  8442  0626                     u3655:	
  8443  0626  0020               	movlb	0	; select bank0
  8444  0627  36BD               	lsrf	??_xtoa+7,f
  8445  0628  0CBC               	rrf	??_xtoa+6,f
  8446  0629  0CBB               	rrf	??_xtoa+5,f
  8447  062A  0CBA               	rrf	??_xtoa+4,f
  8448  062B  0CB9               	rrf	??_xtoa+3,f
  8449  062C  0CB8               	rrf	??_xtoa+2,f
  8450  062D  0CB7               	rrf	??_xtoa+1,f
  8451  062E  0CB6               	rrf	??_xtoa,f
  8452  062F  0B89               	decfsz	9,f
  8453  0630  2E26               	goto	u3655
  8454  0631  0020               	movlb	0	; select bank0
  8455  0632  083D               	movf	??_xtoa+7,w
  8456  0633  00CE               	movwf	xtoa@n+7
  8457  0634  083C               	movf	??_xtoa+6,w
  8458  0635  00CD               	movwf	xtoa@n+6
  8459  0636  083B               	movf	??_xtoa+5,w
  8460  0637  00CC               	movwf	xtoa@n+5
  8461  0638  083A               	movf	??_xtoa+4,w
  8462  0639  00CB               	movwf	xtoa@n+4
  8463  063A  0839               	movf	??_xtoa+3,w
  8464  063B  00CA               	movwf	xtoa@n+3
  8465  063C  0838               	movf	??_xtoa+2,w
  8466  063D  00C9               	movwf	xtoa@n+2
  8467  063E  0837               	movf	??_xtoa+1,w
  8468  063F  00C8               	movwf	xtoa@n+1
  8469  0640  0836               	movf	??_xtoa,w
  8470  0641  00C7               	movwf	xtoa@n
  8471  0642                     l3738:	
  8472                           
  8473                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 642:     while (!(i < 
      +                          2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8474  0642  0020               	movlb	0	; select bank0
  8475  0643  0850               	movf	xtoa@i+1,w
  8476  0644  3A80               	xorlw	128
  8477  0645  00B6               	movwf	??_xtoa
  8478  0646  3080               	movlw	128
  8479  0647  0236               	subwf	??_xtoa,w
  8480  0648  1D03               	skipz
  8481  0649  2E4C               	goto	u3665
  8482  064A  3002               	movlw	2
  8483  064B  024F               	subwf	xtoa@i,w
  8484  064C                     u3665:	
  8485  064C  1C03               	skipc
  8486  064D  2E73               	goto	l584
  8487  064E  0020               	movlb	0	; select bank0
  8488  064F  0847               	movf	xtoa@n,w
  8489  0650  0448               	iorwf	xtoa@n+1,w
  8490  0651  0449               	iorwf	xtoa@n+2,w
  8491  0652  044A               	iorwf	xtoa@n+3,w
  8492  0653  044B               	iorwf	xtoa@n+4,w
  8493  0654  044C               	iorwf	xtoa@n+5,w
  8494  0655  044D               	iorwf	xtoa@n+6,w
  8495  0656  044E               	iorwf	xtoa@n+7,w
  8496  0657  1D03               	skipz
  8497  0658  2D98               	goto	l3710
  8498  0659  0844               	movf	xtoa@p+1,w
  8499  065A  3A80               	xorlw	128
  8500  065B  00B6               	movwf	??_xtoa
  8501  065C  3080               	movlw	128
  8502  065D  0236               	subwf	??_xtoa,w
  8503  065E  1D03               	skipz
  8504  065F  2E62               	goto	u3685
  8505  0660  3001               	movlw	1
  8506  0661  0243               	subwf	xtoa@p,w
  8507  0662                     u3685:	
  8508  0662  1803               	skipnc
  8509  0663  2D98               	goto	l3710
  8510  0664  0020               	movlb	0	; select bank0
  8511  0665  0846               	movf	xtoa@w+1,w
  8512  0666  3A80               	xorlw	128
  8513  0667  00B6               	movwf	??_xtoa
  8514  0668  3080               	movlw	128
  8515  0669  0236               	subwf	??_xtoa,w
  8516  066A  1D03               	skipz
  8517  066B  2E6E               	goto	u3695
  8518  066C  3001               	movlw	1
  8519  066D  0245               	subwf	xtoa@w,w
  8520  066E                     u3695:	
  8521  066E  1C03               	skipc
  8522  066F  2E73               	goto	l584
  8523  0670  0020               	movlb	0	; select bank0
  8524  0671  18ED               	btfsc	_flags,1
  8525  0672  2D98               	goto	l3710
  8526  0673                     l584:	
  8527                           
  8528                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 656:     if (flags & (
      +                          1 << 4)) {
  8529  0673  0020               	movlb	0	; select bank0
  8530  0674  1E6D               	btfss	_flags,4
  8531  0675  2E90               	goto	l3754
  8532                           
  8533                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 657:         --i;
  8534  0676  30FF               	movlw	255
  8535  0677  07CF               	addwf	xtoa@i,f
  8536  0678  30FF               	movlw	255
  8537  0679  3DD0               	addwfc	xtoa@i+1,f
  8538                           
  8539                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 658:         dbuf[i] =
      +                           x;
  8540  067A  0835               	movf	xtoa@x,w
  8541  067B  00B6               	movwf	??_xtoa
  8542  067C  084F               	movf	xtoa@i,w
  8543  067D  3E4C               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8544  067E  0086               	movwf	6
  8545  067F  3002               	movlw	2	; select bank4/5
  8546  0680  0087               	movwf	7
  8547  0681  0836               	movf	??_xtoa,w
  8548  0682  0081               	movwf	1
  8549                           
  8550                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 659:         --i;
  8551  0683  30FF               	movlw	255
  8552  0684  07CF               	addwf	xtoa@i,f
  8553  0685  30FF               	movlw	255
  8554  0686  3DD0               	addwfc	xtoa@i+1,f
  8555                           
  8556                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 660:         dbuf[i] =
      +                           '0';
  8557  0687  3030               	movlw	48
  8558  0688  00B6               	movwf	??_xtoa
  8559  0689  084F               	movf	xtoa@i,w
  8560  068A  3E4C               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8561  068B  0086               	movwf	6
  8562  068C  3002               	movlw	2	; select bank4/5
  8563  068D  0087               	movwf	7
  8564  068E  0836               	movf	??_xtoa,w
  8565  068F  0081               	movwf	1
  8566  0690                     l3754:	
  8567                           
  8568                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 664:     return pad(fp
      +                          , &dbuf[i], w);
  8569  0690  084F               	movf	xtoa@i,w
  8570  0691  3E4C               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8571  0692  00B6               	movwf	??_xtoa
  8572  0693  0836               	movf	??_xtoa,w
  8573  0694  00A4               	movwf	pad@buf
  8574  0695  0846               	movf	xtoa@w+1,w
  8575  0696  00A6               	movwf	pad@p+1
  8576  0697  0845               	movf	xtoa@w,w
  8577  0698  00A5               	movwf	pad@p
  8578  0699  083E               	movf	xtoa@fp,w
  8579  069A  318A  225D         	fcall	_pad
  8580  069C  0020               	movlb	0	; select bank0
  8581  069D  0825               	movf	?_pad+1,w
  8582  069E  00AE               	movwf	?_xtoa+1
  8583  069F  0824               	movf	?_pad,w
  8584  06A0  00AD               	movwf	?_xtoa
  8585  06A1  0008               	return
  8586  06A2                     __end_of_xtoa:	
  8587                           
  8588                           	psect	text24
  8589  0801                     __ptext24:	
  8590 ;; *************** function _toupper *****************
  8591 ;; Defined at:
  8592 ;;		line 4 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\toupper.c"
  8593 ;; Parameters:    Size  Location     Type
  8594 ;;  c               2    6[COMMON] int 
  8595 ;; Auto vars:     Size  Location     Type
  8596 ;;		None
  8597 ;; Return value:  Size  Location     Type
  8598 ;;                  2    6[COMMON] int 
  8599 ;; Registers used:
  8600 ;;		wreg, status,2, status,0
  8601 ;; Tracked objects:
  8602 ;;		On entry : 0/0
  8603 ;;		On exit  : 0/0
  8604 ;;		Unchanged: 0/0
  8605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8606 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8607 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8608 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8609 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8610 ;;Total ram usage:        8 bytes
  8611 ;; Hardware stack levels used:    1
  8612 ;; Hardware stack levels required when called:    4
  8613 ;; This function calls:
  8614 ;;		_islower
  8615 ;; This function is called by:
  8616 ;;		_xtoa
  8617 ;; This function uses a non-reentrant model
  8618 ;;
  8619                           
  8620                           
  8621                           ;psect for function _toupper
  8622  0801                     _toupper:	
  8623                           
  8624                           ;incstack = 0
  8625                           ; Regs used in _toupper: [wreg+status,2+status,0]
  8626  0801  0876               	movf	toupper@c,w
  8627  0802  3E9F               	addlw	159
  8628  0803  00F8               	movwf	??_toupper
  8629  0804  30FF               	movlw	255
  8630  0805  3D77               	addwfc	toupper@c+1,w
  8631  0806  00F9               	movwf	??_toupper+1
  8632  0807  3000               	movlw	0
  8633  0808  0279               	subwf	??_toupper+1,w
  8634  0809  301A               	movlw	26
  8635  080A  1903               	skipnz
  8636  080B  0278               	subwf	??_toupper,w
  8637  080C  1803               	btfsc	3,0
  8638  080D  2810               	goto	u1820
  8639  080E  3001               	movlw	1
  8640  080F  2811               	goto	u1830
  8641  0810                     u1820:	
  8642  0810  3000               	movlw	0
  8643  0811                     u1830:	
  8644  0811  00FA               	movwf	??_toupper+2
  8645  0812  01FB               	clrf	??_toupper+3
  8646  0813  087A               	movf	??_toupper+2,w
  8647  0814  00FC               	movwf	_toupper$1115
  8648  0815  087B               	movf	??_toupper+3,w
  8649  0816  00FD               	movwf	_toupper$1115+1
  8650  0817  087C               	movf	_toupper$1115,w
  8651  0818  047D               	iorwf	_toupper$1115+1,w
  8652  0819  1903               	btfsc	3,2
  8653  081A  0008               	return
  8654  081B  305F               	movlw	95
  8655  081C  0576               	andwf	toupper@c,w
  8656  081D  00F6               	movwf	?_toupper
  8657  081E  3000               	movlw	0
  8658  081F  0577               	andwf	toupper@c+1,w
  8659  0820  00F7               	movwf	?_toupper+1
  8660  0821  0008               	return
  8661  0822                     __end_of_toupper:	
  8662                           
  8663                           	psect	text25
  8664  172C                     __ptext25:	
  8665 ;; *************** function _islower *****************
  8666 ;; Defined at:
  8667 ;;		line 5 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\islower.c"
  8668 ;; Parameters:    Size  Location     Type
  8669 ;;  c               2    0[COMMON] int 
  8670 ;; Auto vars:     Size  Location     Type
  8671 ;;		None
  8672 ;; Return value:  Size  Location     Type
  8673 ;;                  2    0[COMMON] int 
  8674 ;; Registers used:
  8675 ;;		wreg, status,2, status,0
  8676 ;; Tracked objects:
  8677 ;;		On entry : 0/0
  8678 ;;		On exit  : 0/0
  8679 ;;		Unchanged: 0/0
  8680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8681 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8683 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8684 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8685 ;;Total ram usage:        6 bytes
  8686 ;; Hardware stack levels used:    1
  8687 ;; Hardware stack levels required when called:    3
  8688 ;; This function calls:
  8689 ;;		Nothing
  8690 ;; This function is called by:
  8691 ;;		_toupper
  8692 ;; This function uses a non-reentrant model
  8693 ;;
  8694                           
  8695                           
  8696                           ;psect for function _islower
  8697  172C                     _islower:	
  8698                           
  8699                           ;incstack = 0
  8700                           ; Regs used in _islower: [wreg+status,2+status,0]
  8701  172C  0870               	movf	islower@c,w
  8702  172D  3E9F               	addlw	159
  8703  172E  00F2               	movwf	??_islower
  8704  172F  30FF               	movlw	255
  8705  1730  3D71               	addwfc	islower@c+1,w
  8706  1731  00F3               	movwf	??_islower+1
  8707  1732  3000               	movlw	0
  8708  1733  0273               	subwf	??_islower+1,w
  8709  1734  301A               	movlw	26
  8710  1735  1903               	skipnz
  8711  1736  0272               	subwf	??_islower,w
  8712  1737  1803               	btfsc	3,0
  8713  1738  2F3B               	goto	u1710
  8714  1739  3001               	movlw	1
  8715  173A  2F3C               	goto	u1720
  8716  173B                     u1710:	
  8717  173B  3000               	movlw	0
  8718  173C                     u1720:	
  8719  173C  00F4               	movwf	??_islower+2
  8720  173D  01F5               	clrf	??_islower+3
  8721  173E  0874               	movf	??_islower+2,w
  8722  173F  00F0               	movwf	?_islower
  8723  1740  0875               	movf	??_islower+3,w
  8724  1741  00F1               	movwf	?_islower+1
  8725  1742  0008               	return
  8726  1743                     __end_of_islower:	
  8727                           
  8728                           	psect	text26
  8729  1715                     __ptext26:	
  8730 ;; *************** function _isupper *****************
  8731 ;; Defined at:
  8732 ;;		line 5 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\isupper.c"
  8733 ;; Parameters:    Size  Location     Type
  8734 ;;  c               2    0[COMMON] int 
  8735 ;; Auto vars:     Size  Location     Type
  8736 ;;		None
  8737 ;; Return value:  Size  Location     Type
  8738 ;;                  2    0[COMMON] int 
  8739 ;; Registers used:
  8740 ;;		wreg, status,2, status,0
  8741 ;; Tracked objects:
  8742 ;;		On entry : 0/0
  8743 ;;		On exit  : 0/0
  8744 ;;		Unchanged: 0/0
  8745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8746 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8747 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8748 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8749 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8750 ;;Total ram usage:        6 bytes
  8751 ;; Hardware stack levels used:    1
  8752 ;; Hardware stack levels required when called:    3
  8753 ;; This function calls:
  8754 ;;		Nothing
  8755 ;; This function is called by:
  8756 ;;		_xtoa
  8757 ;; This function uses a non-reentrant model
  8758 ;;
  8759                           
  8760                           
  8761                           ;psect for function _isupper
  8762  1715                     _isupper:	
  8763                           
  8764                           ;incstack = 0
  8765                           ; Regs used in _isupper: [wreg+status,2+status,0]
  8766  1715  0870               	movf	isupper@c,w
  8767  1716  3EBF               	addlw	191
  8768  1717  00F2               	movwf	??_isupper
  8769  1718  30FF               	movlw	255
  8770  1719  3D71               	addwfc	isupper@c+1,w
  8771  171A  00F3               	movwf	??_isupper+1
  8772  171B  3000               	movlw	0
  8773  171C  0273               	subwf	??_isupper+1,w
  8774  171D  301A               	movlw	26
  8775  171E  1903               	skipnz
  8776  171F  0272               	subwf	??_isupper,w
  8777  1720  1803               	btfsc	3,0
  8778  1721  2F24               	goto	u1780
  8779  1722  3001               	movlw	1
  8780  1723  2F25               	goto	u1790
  8781  1724                     u1780:	
  8782  1724  3000               	movlw	0
  8783  1725                     u1790:	
  8784  1725  00F4               	movwf	??_isupper+2
  8785  1726  01F5               	clrf	??_isupper+3
  8786  1727  0874               	movf	??_isupper+2,w
  8787  1728  00F0               	movwf	?_isupper
  8788  1729  0875               	movf	??_isupper+3,w
  8789  172A  00F1               	movwf	?_isupper+1
  8790  172B  0008               	return
  8791  172C                     __end_of_isupper:	
  8792                           
  8793                           	psect	text27
  8794  177A                     __ptext27:	
  8795 ;; *************** function _isalpha *****************
  8796 ;; Defined at:
  8797 ;;		line 5 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\isalpha.c"
  8798 ;; Parameters:    Size  Location     Type
  8799 ;;  c               2    0[COMMON] int 
  8800 ;; Auto vars:     Size  Location     Type
  8801 ;;		None
  8802 ;; Return value:  Size  Location     Type
  8803 ;;                  2    0[COMMON] int 
  8804 ;; Registers used:
  8805 ;;		wreg, status,2, status,0
  8806 ;; Tracked objects:
  8807 ;;		On entry : 0/0
  8808 ;;		On exit  : 0/0
  8809 ;;		Unchanged: 0/0
  8810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8811 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8813 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8814 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8815 ;;Total ram usage:        8 bytes
  8816 ;; Hardware stack levels used:    1
  8817 ;; Hardware stack levels required when called:    3
  8818 ;; This function calls:
  8819 ;;		Nothing
  8820 ;; This function is called by:
  8821 ;;		_xtoa
  8822 ;; This function uses a non-reentrant model
  8823 ;;
  8824                           
  8825                           
  8826                           ;psect for function _isalpha
  8827  177A                     _isalpha:	
  8828                           
  8829                           ;incstack = 0
  8830                           ; Regs used in _isalpha: [wreg+status,2+status,0]
  8831  177A  3020               	movlw	32
  8832  177B  0470               	iorwf	isalpha@c,w
  8833  177C  00F2               	movwf	??_isalpha
  8834  177D  3000               	movlw	0
  8835  177E  0471               	iorwf	isalpha@c+1,w
  8836  177F  00F3               	movwf	??_isalpha+1
  8837  1780  0872               	movf	??_isalpha,w
  8838  1781  3E9F               	addlw	159
  8839  1782  00F4               	movwf	??_isalpha+2
  8840  1783  30FF               	movlw	255
  8841  1784  3D73               	addwfc	??_isalpha+1,w
  8842  1785  00F5               	movwf	??_isalpha+3
  8843  1786  3000               	movlw	0
  8844  1787  0275               	subwf	??_isalpha+3,w
  8845  1788  301A               	movlw	26
  8846  1789  1903               	skipnz
  8847  178A  0274               	subwf	??_isalpha+2,w
  8848  178B  1803               	btfsc	3,0
  8849  178C  2F8F               	goto	u1800
  8850  178D  3001               	movlw	1
  8851  178E  2F90               	goto	u1810
  8852  178F                     u1800:	
  8853  178F  3000               	movlw	0
  8854  1790                     u1810:	
  8855  1790  00F6               	movwf	??_isalpha+4
  8856  1791  01F7               	clrf	??_isalpha+5
  8857  1792  0876               	movf	??_isalpha+4,w
  8858  1793  00F0               	movwf	?_isalpha
  8859  1794  0877               	movf	??_isalpha+5,w
  8860  1795  00F1               	movwf	?_isalpha+1
  8861  1796  0008               	return
  8862  1797                     __end_of_isalpha:	
  8863                           
  8864                           	psect	text28
  8865  0CA0                     __ptext28:	
  8866 ;; *************** function _stoa *****************
  8867 ;; Defined at:
  8868 ;;		line 546 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c"
  8869 ;; Parameters:    Size  Location     Type
  8870 ;;  fp              1    wreg     PTR struct _IO_FILE
  8871 ;;		 -> sprintf@f(6), NULL(0), 
  8872 ;;  s               2   10[COMMON] PTR unsigned char 
  8873 ;;		 -> ?_printf(2), ?_sprintf(2), gps_time(10), gps_vertical_velocity(10), 
  8874 ;;		 -> gps_course_over_ground(10), gps_speed_over_ground(10), gps_vdop(8), gps_hdop(8), 
  8875 ;;		 -> gps_nav_status(4), gps_altitude(12), gps_longitude(16), gps_latitude(16), 
  8876 ;; Auto vars:     Size  Location     Type
  8877 ;;  fp              1   14[BANK0 ] PTR struct _IO_FILE
  8878 ;;		 -> sprintf@f(6), NULL(0), 
  8879 ;;  nuls            7    3[BANK0 ] unsigned char [7]
  8880 ;;  l               2   19[BANK0 ] int 
  8881 ;;  p               2   17[BANK0 ] int 
  8882 ;;  cp              2   15[BANK0 ] PTR unsigned char 
  8883 ;;		 -> ?_printf(2), ?_sprintf(2), stoa@nuls(7), gps_time(10), 
  8884 ;;		 -> gps_vertical_velocity(10), gps_course_over_ground(10), gps_speed_over_ground(10), gps_vdop(8), 
  8885 ;;		 -> gps_hdop(8), gps_nav_status(4), gps_altitude(12), gps_longitude(16), 
  8886 ;;		 -> gps_latitude(16), 
  8887 ;;  w               2   12[BANK0 ] int 
  8888 ;;  i               2   10[BANK0 ] int 
  8889 ;; Return value:  Size  Location     Type
  8890 ;;                  2   10[COMMON] int 
  8891 ;; Registers used:
  8892 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8893 ;; Tracked objects:
  8894 ;;		On entry : 0/0
  8895 ;;		On exit  : 0/0
  8896 ;;		Unchanged: 0/0
  8897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8898 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8899 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8900 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8901 ;;      Totals:         2      21       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8902 ;;Total ram usage:       23 bytes
  8903 ;; Hardware stack levels used:    1
  8904 ;; Hardware stack levels required when called:    6
  8905 ;; This function calls:
  8906 ;;		_fputc
  8907 ;;		_strlen
  8908 ;; This function is called by:
  8909 ;;		_vfpfcnvrt
  8910 ;; This function uses a non-reentrant model
  8911 ;;
  8912                           
  8913                           
  8914                           ;psect for function _stoa
  8915  0CA0                     _stoa:	
  8916                           
  8917                           ;incstack = 0
  8918                           ; Regs used in _stoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8919                           ;stoa@fp stored from wreg
  8920  0CA0  0020               	movlb	0	; select bank0
  8921  0CA1  00AE               	movwf	stoa@fp
  8922                           
  8923                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 546: static int stoa(F
      +                          ILE *fp, char *s);K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 547: 
      +                          {;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 548:     char *cp, nu
      +                          ls[] = "(null)";
  8924  0CA2  3064               	movlw	low stoa@F1139
  8925  0CA3  0086               	movwf	6
  8926  0CA4  3001               	movlw	high stoa@F1139
  8927  0CA5  0087               	movwf	7
  8928  0CA6  3023               	movlw	low stoa@nuls
  8929  0CA7  0084               	movwf	4
  8930  0CA8  3000               	movlw	high stoa@nuls
  8931  0CA9  0085               	movwf	5
  8932  0CAA  3007               	movlw	7
  8933  0CAB  00A0               	movwf	??_stoa
  8934  0CAC                     u3460:	
  8935  0CAC  0016               	moviw fsr1++
  8936  0CAD  001A               	movwi fsr0++
  8937  0CAE  0BA0               	decfsz	??_stoa,f
  8938  0CAF  2CAC               	goto	u3460
  8939                           
  8940                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 549:     int i, l, p, 
      +                          w;;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 552:     cp = s;
  8941  0CB0  087B               	movf	stoa@s+1,w
  8942  0CB1  00B0               	movwf	stoa@cp+1
  8943  0CB2  087A               	movf	stoa@s,w
  8944  0CB3  00AF               	movwf	stoa@cp
  8945                           
  8946                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 553:     if (!cp) {
  8947  0CB4  082F               	movf	stoa@cp,w
  8948  0CB5  0430               	iorwf	stoa@cp+1,w
  8949  0CB6  1D03               	btfss	3,2
  8950  0CB7  2CBC               	goto	l3652
  8951                           
  8952                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 554:         cp = nuls
      +                          ;
  8953  0CB8  3023               	movlw	low stoa@nuls
  8954  0CB9  00AF               	movwf	stoa@cp
  8955  0CBA  3000               	movlw	high stoa@nuls
  8956  0CBB  00B0               	movwf	stoa@cp+1
  8957  0CBC                     l3652:	
  8958                           
  8959                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 558:     l = strlen(cp
      +                          );
  8960  0CBC  0830               	movf	stoa@cp+1,w
  8961  0CBD  00F1               	movwf	strlen@s+1
  8962  0CBE  082F               	movf	stoa@cp,w
  8963  0CBF  00F0               	movwf	strlen@s
  8964  0CC0  3196  26D0  318C   	fcall	_strlen
  8965  0CC3  0871               	movf	?_strlen+1,w
  8966  0CC4  0020               	movlb	0	; select bank0
  8967  0CC5  00B4               	movwf	stoa@l+1
  8968  0CC6  0870               	movf	?_strlen,w
  8969  0CC7  00B3               	movwf	stoa@l
  8970                           
  8971                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 559:     p = prec;
  8972  0CC8  0021               	movlb	1	; select bank1
  8973  0CC9  0867               	movf	(_prec+1)^(0+128),w
  8974  0CCA  0020               	movlb	0	; select bank0
  8975  0CCB  00B2               	movwf	stoa@p+1
  8976  0CCC  0021               	movlb	1	; select bank1
  8977  0CCD  0866               	movf	_prec^(0+128),w
  8978  0CCE  0020               	movlb	0	; select bank0
  8979  0CCF  00B1               	movwf	stoa@p
  8980                           
  8981                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 560:     l = (!(p < 0)
      +                           && (p < l)) ? p : l;
  8982  0CD0  1BB2               	btfsc	stoa@p+1,7
  8983  0CD1  2CE3               	goto	l542
  8984  0CD2  0832               	movf	stoa@p+1,w
  8985  0CD3  3A80               	xorlw	128
  8986  0CD4  00A0               	movwf	??_stoa
  8987  0CD5  0834               	movf	stoa@l+1,w
  8988  0CD6  3A80               	xorlw	128
  8989  0CD7  0220               	subwf	??_stoa,w
  8990  0CD8  1D03               	skipz
  8991  0CD9  2CDC               	goto	u3495
  8992  0CDA  0833               	movf	stoa@l,w
  8993  0CDB  0231               	subwf	stoa@p,w
  8994  0CDC                     u3495:	
  8995  0CDC  1803               	btfsc	3,0
  8996  0CDD  2CE3               	goto	l542
  8997  0CDE  0020               	movlb	0	; select bank0
  8998  0CDF  0832               	movf	stoa@p+1,w
  8999  0CE0  00B4               	movwf	stoa@l+1
  9000  0CE1  0831               	movf	stoa@p,w
  9001  0CE2  00B3               	movwf	stoa@l
  9002  0CE3                     l542:	
  9003                           
  9004                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 561:     p = l;
  9005  0CE3  0020               	movlb	0	; select bank0
  9006  0CE4  0834               	movf	stoa@l+1,w
  9007  0CE5  00B2               	movwf	stoa@p+1
  9008  0CE6  0833               	movf	stoa@l,w
  9009  0CE7  00B1               	movwf	stoa@p
  9010                           
  9011                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 562:     w = width;
  9012  0CE8  0021               	movlb	1	; select bank1
  9013  0CE9  0865               	movf	(_width+1)^(0+128),w
  9014  0CEA  0020               	movlb	0	; select bank0
  9015  0CEB  00AD               	movwf	stoa@w+1
  9016  0CEC  0021               	movlb	1	; select bank1
  9017  0CED  0864               	movf	_width^(0+128),w
  9018  0CEE  0020               	movlb	0	; select bank0
  9019  0CEF  00AC               	movwf	stoa@w
  9020                           
  9021                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 565:     if (!(flags &
      +                           (1 << 0))) {
  9022  0CF0  1C6D               	btfss	_flags,0
  9023  0CF1  2D04               	goto	l3670
  9024  0CF2  2D10               	goto	l3672
  9025  0CF3                     l3666:	
  9026                           
  9027                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 567:             fputc
      +                          (' ', fp);
  9028  0CF3  3020               	movlw	32
  9029  0CF4  00F2               	movwf	fputc@c
  9030  0CF5  3000               	movlw	0
  9031  0CF6  00F3               	movwf	fputc@c+1
  9032  0CF7  0020               	movlb	0	; select bank0
  9033  0CF8  082E               	movf	stoa@fp,w
  9034  0CF9  00A0               	movwf	??_stoa
  9035  0CFA  0820               	movf	??_stoa,w
  9036  0CFB  00F4               	movwf	fputc@fp
  9037  0CFC  318A  2212  318C   	fcall	_fputc
  9038                           
  9039                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 568:             ++l;
  9040  0CFF  3001               	movlw	1
  9041  0D00  0020               	movlb	0	; select bank0
  9042  0D01  07B3               	addwf	stoa@l,f
  9043  0D02  3000               	movlw	0
  9044  0D03  3DB4               	addwfc	stoa@l+1,f
  9045  0D04                     l3670:	
  9046                           
  9047                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 566:         while (l 
      +                          < w) {
  9048  0D04  0834               	movf	stoa@l+1,w
  9049  0D05  3A80               	xorlw	128
  9050  0D06  00A0               	movwf	??_stoa
  9051  0D07  082D               	movf	stoa@w+1,w
  9052  0D08  3A80               	xorlw	128
  9053  0D09  0220               	subwf	??_stoa,w
  9054  0D0A  1D03               	skipz
  9055  0D0B  2D0E               	goto	u3515
  9056  0D0C  082C               	movf	stoa@w,w
  9057  0D0D  0233               	subwf	stoa@l,w
  9058  0D0E                     u3515:	
  9059  0D0E  1C03               	skipc
  9060  0D0F  2CF3               	goto	l3666
  9061  0D10                     l3672:	
  9062                           
  9063                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 573:     i = 0;
  9064  0D10  0020               	movlb	0	; select bank0
  9065  0D11  01AA               	clrf	stoa@i
  9066  0D12  01AB               	clrf	stoa@i+1
  9067  0D13                     l3680:	
  9068                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 574:     while (i < p)
      +                           {
  9069                           
  9070                           
  9071                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 574:     while (i < p)
      +                           {
  9072  0D13  082B               	movf	stoa@i+1,w
  9073  0D14  3A80               	xorlw	128
  9074  0D15  00A0               	movwf	??_stoa
  9075  0D16  0832               	movf	stoa@p+1,w
  9076  0D17  3A80               	xorlw	128
  9077  0D18  0220               	subwf	??_stoa,w
  9078  0D19  1D03               	skipz
  9079  0D1A  2D1D               	goto	u3525
  9080  0D1B  0831               	movf	stoa@p,w
  9081  0D1C  022A               	subwf	stoa@i,w
  9082  0D1D                     u3525:	
  9083  0D1D  1803               	btfsc	3,0
  9084  0D1E  2D3C               	goto	l551
  9085                           
  9086                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 575:         fputc(*cp
      +                          , fp);
  9087  0D1F  0020               	movlb	0	; select bank0
  9088  0D20  082F               	movf	stoa@cp,w
  9089  0D21  0086               	movwf	6
  9090  0D22  0830               	movf	stoa@cp+1,w
  9091  0D23  0087               	movwf	7
  9092  0D24  0801               	movf	1,w
  9093  0D25  00A0               	movwf	??_stoa
  9094  0D26  01A1               	clrf	??_stoa+1
  9095  0D27  0820               	movf	??_stoa,w
  9096  0D28  00F2               	movwf	fputc@c
  9097  0D29  0821               	movf	??_stoa+1,w
  9098  0D2A  00F3               	movwf	fputc@c+1
  9099  0D2B  082E               	movf	stoa@fp,w
  9100  0D2C  00A2               	movwf	??_stoa+2
  9101  0D2D  0822               	movf	??_stoa+2,w
  9102  0D2E  00F4               	movwf	fputc@fp
  9103  0D2F  318A  2212  318C   	fcall	_fputc
  9104                           
  9105                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 576:         ++cp;
  9106  0D32  3001               	movlw	1
  9107  0D33  0020               	movlb	0	; select bank0
  9108  0D34  07AF               	addwf	stoa@cp,f
  9109  0D35  3000               	movlw	0
  9110  0D36  3DB0               	addwfc	stoa@cp+1,f
  9111                           
  9112                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 577:         ++i;
  9113  0D37  3001               	movlw	1
  9114  0D38  07AA               	addwf	stoa@i,f
  9115  0D39  3000               	movlw	0
  9116  0D3A  3DAB               	addwfc	stoa@i+1,f
  9117  0D3B  2D13               	goto	l3680
  9118  0D3C                     l551:	
  9119                           
  9120                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 581:     if (flags & (
      +                          1 << 0)) {
  9121  0D3C  0020               	movlb	0	; select bank0
  9122  0D3D  186D               	btfsc	_flags,0
  9123  0D3E  2D51               	goto	l3688
  9124  0D3F  2D5D               	goto	l3690
  9125  0D40                     l3684:	
  9126                           
  9127                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 583:             fputc
      +                          (' ', fp);
  9128  0D40  3020               	movlw	32
  9129  0D41  00F2               	movwf	fputc@c
  9130  0D42  3000               	movlw	0
  9131  0D43  00F3               	movwf	fputc@c+1
  9132  0D44  0020               	movlb	0	; select bank0
  9133  0D45  082E               	movf	stoa@fp,w
  9134  0D46  00A0               	movwf	??_stoa
  9135  0D47  0820               	movf	??_stoa,w
  9136  0D48  00F4               	movwf	fputc@fp
  9137  0D49  318A  2212  318C   	fcall	_fputc
  9138                           
  9139                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 584:             ++l;
  9140  0D4C  3001               	movlw	1
  9141  0D4D  0020               	movlb	0	; select bank0
  9142  0D4E  07B3               	addwf	stoa@l,f
  9143  0D4F  3000               	movlw	0
  9144  0D50  3DB4               	addwfc	stoa@l+1,f
  9145  0D51                     l3688:	
  9146                           
  9147                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 582:         while (l 
      +                          < w) {
  9148  0D51  0834               	movf	stoa@l+1,w
  9149  0D52  3A80               	xorlw	128
  9150  0D53  00A0               	movwf	??_stoa
  9151  0D54  082D               	movf	stoa@w+1,w
  9152  0D55  3A80               	xorlw	128
  9153  0D56  0220               	subwf	??_stoa,w
  9154  0D57  1D03               	skipz
  9155  0D58  2D5B               	goto	u3545
  9156  0D59  082C               	movf	stoa@w,w
  9157  0D5A  0233               	subwf	stoa@l,w
  9158  0D5B                     u3545:	
  9159  0D5B  1C03               	skipc
  9160  0D5C  2D40               	goto	l3684
  9161  0D5D                     l3690:	
  9162                           
  9163                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 588:     return l;
  9164  0D5D  0020               	movlb	0	; select bank0
  9165  0D5E  0834               	movf	stoa@l+1,w
  9166  0D5F  00FB               	movwf	?_stoa+1
  9167  0D60  0833               	movf	stoa@l,w
  9168  0D61  00FA               	movwf	?_stoa
  9169  0D62  0008               	return
  9170  0D63                     __end_of_stoa:	
  9171                           
  9172                           	psect	text29
  9173  06A2                     __ptext29:	
  9174 ;; *************** function _dtoa *****************
  9175 ;; Defined at:
  9176 ;;		line 274 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c"
  9177 ;; Parameters:    Size  Location     Type
  9178 ;;  fp              1    wreg     PTR struct _IO_FILE
  9179 ;;		 -> sprintf@f(6), NULL(0), 
  9180 ;;  d               8   16[BANK0 ] long long 
  9181 ;; Auto vars:     Size  Location     Type
  9182 ;;  fp              1   27[BANK0 ] PTR struct _IO_FILE
  9183 ;;		 -> sprintf@f(6), NULL(0), 
  9184 ;;  n               8   36[BANK0 ] long long 
  9185 ;;  i               2   44[BANK0 ] int 
  9186 ;;  s               2   34[BANK0 ] int 
  9187 ;;  w               2   32[BANK0 ] int 
  9188 ;;  p               2   30[BANK0 ] int 
  9189 ;; Return value:  Size  Location     Type
  9190 ;;                  2   16[BANK0 ] int 
  9191 ;; Registers used:
  9192 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9193 ;; Tracked objects:
  9194 ;;		On entry : 0/0
  9195 ;;		On exit  : 0/0
  9196 ;;		Unchanged: 0/0
  9197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9198 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9199 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9200 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9201 ;;      Totals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9202 ;;Total ram usage:       30 bytes
  9203 ;; Hardware stack levels used:    1
  9204 ;; Hardware stack levels required when called:    8
  9205 ;; This function calls:
  9206 ;;		___aodiv
  9207 ;;		___aomod
  9208 ;;		_abs
  9209 ;;		_pad
  9210 ;; This function is called by:
  9211 ;;		_vfpfcnvrt
  9212 ;; This function uses a non-reentrant model
  9213 ;;
  9214                           
  9215                           
  9216                           ;psect for function _dtoa
  9217  06A2                     _dtoa:	
  9218                           
  9219                           ;incstack = 0
  9220                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9221                           ;dtoa@fp stored from wreg
  9222  06A2  0020               	movlb	0	; select bank0
  9223  06A3  00BB               	movwf	dtoa@fp
  9224                           
  9225                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 274: static int dtoa(F
      +                          ILE *fp, long long d);K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 2
      +                          75: {;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 276:     int i, p
      +                          , s, w;;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 277:     long l
      +                          ong n;;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 280:     n = d;
  9226  06A4  0830               	movf	dtoa@d,w
  9227  06A5  00C4               	movwf	dtoa@n
  9228  06A6  0831               	movf	dtoa@d+1,w
  9229  06A7  00C5               	movwf	dtoa@n+1
  9230  06A8  0832               	movf	dtoa@d+2,w
  9231  06A9  00C6               	movwf	dtoa@n+2
  9232  06AA  0833               	movf	dtoa@d+3,w
  9233  06AB  00C7               	movwf	dtoa@n+3
  9234  06AC  0834               	movf	dtoa@d+4,w
  9235  06AD  00C8               	movwf	dtoa@n+4
  9236  06AE  0835               	movf	dtoa@d+5,w
  9237  06AF  00C9               	movwf	dtoa@n+5
  9238  06B0  0836               	movf	dtoa@d+6,w
  9239  06B1  00CA               	movwf	dtoa@n+6
  9240  06B2  0837               	movf	dtoa@d+7,w
  9241  06B3  00CB               	movwf	dtoa@n+7
  9242                           
  9243                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 281:     s = n < 0 ? 1
      +                           : 0;
  9244  06B4  3044               	movlw	low dtoa@n
  9245  06B5  0086               	movwf	6
  9246  06B6  3000               	movlw	high dtoa@n
  9247  06B7  0087               	movwf	7
  9248  06B8  3F47               	moviw [7]fsr1
  9249  06B9  00B8               	movwf	??_dtoa
  9250  06BA  1FB8               	btfss	??_dtoa,7
  9251  06BB  2EBE               	goto	u3300
  9252  06BC  3001               	movlw	1
  9253  06BD  2EBF               	goto	u3310
  9254  06BE                     u3300:	
  9255  06BE  3000               	movlw	0
  9256  06BF                     u3310:	
  9257  06BF  0020               	movlb	0	; select bank0
  9258  06C0  00B9               	movwf	??_dtoa+1
  9259  06C1  01BA               	clrf	??_dtoa+2
  9260  06C2  0839               	movf	??_dtoa+1,w
  9261  06C3  00C2               	movwf	dtoa@s
  9262  06C4  083A               	movf	??_dtoa+2,w
  9263  06C5  00C3               	movwf	dtoa@s+1
  9264                           
  9265                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 282:     if (s) {
  9266  06C6  0842               	movf	dtoa@s,w
  9267  06C7  0443               	iorwf	dtoa@s+1,w
  9268  06C8  1903               	btfsc	3,2
  9269  06C9  2EE8               	goto	l510
  9270                           
  9271                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 283:         n = -n;
  9272  06CA  09C4               	comf	dtoa@n,f
  9273  06CB  09C5               	comf	dtoa@n+1,f
  9274  06CC  09C6               	comf	dtoa@n+2,f
  9275  06CD  09C7               	comf	dtoa@n+3,f
  9276  06CE  09C8               	comf	dtoa@n+4,f
  9277  06CF  09C9               	comf	dtoa@n+5,f
  9278  06D0  09CA               	comf	dtoa@n+6,f
  9279  06D1  09CB               	comf	dtoa@n+7,f
  9280  06D2  0AC4               	incf	dtoa@n,f
  9281  06D3  1D03               	skipz
  9282  06D4  2EE8               	goto	l510
  9283  06D5  0AC5               	incf	dtoa@n+1,f
  9284  06D6  1D03               	skipz
  9285  06D7  2EE8               	goto	l510
  9286  06D8  0AC6               	incf	dtoa@n+2,f
  9287  06D9  1D03               	skipz
  9288  06DA  2EE8               	goto	l510
  9289  06DB  0AC7               	incf	dtoa@n+3,f
  9290  06DC  1D03               	skipz
  9291  06DD  2EE8               	goto	l510
  9292  06DE  0AC8               	incf	dtoa@n+4,f
  9293  06DF  1D03               	skipz
  9294  06E0  2EE8               	goto	l510
  9295  06E1  0AC9               	incf	dtoa@n+5,f
  9296  06E2  1D03               	skipz
  9297  06E3  2EE8               	goto	l510
  9298  06E4  0ACA               	incf	dtoa@n+6,f
  9299  06E5  1D03               	skipz
  9300  06E6  2EE8               	goto	l510
  9301  06E7  0ACB               	incf	dtoa@n+7,f
  9302  06E8                     l510:	
  9303                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 284:     }
  9304                           
  9305                           
  9306                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 287:     if (!(prec < 
      +                          0)) {
  9307  06E8  0021               	movlb	1	; select bank1
  9308  06E9  1BE7               	btfsc	(_prec+1)^(0+128),7
  9309  06EA  2EF0               	goto	l511
  9310                           
  9311                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 288:         flags &= 
      +                          ~(1 << 1);
  9312  06EB  30FD               	movlw	253
  9313  06EC  0020               	movlb	0	; select bank0
  9314  06ED  05ED               	andwf	_flags,f
  9315  06EE  30FF               	movlw	255
  9316  06EF  05EE               	andwf	_flags+1,f
  9317  06F0                     l511:	
  9318                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 289:     }
  9319                           
  9320                           
  9321                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 290:     p = (0 < prec
      +                          ) ? prec : 1;
  9322  06F0  0021               	movlb	1	; select bank1
  9323  06F1  0867               	movf	(_prec+1)^(0+128),w
  9324  06F2  3A80               	xorlw	128
  9325  06F3  0020               	movlb	0	; select bank0
  9326  06F4  00B8               	movwf	??_dtoa
  9327  06F5  3080               	movlw	128
  9328  06F6  0238               	subwf	??_dtoa,w
  9329  06F7  1D03               	skipz
  9330  06F8  2EFC               	goto	u3355
  9331  06F9  3001               	movlw	1
  9332  06FA  0021               	movlb	1	; select bank1
  9333  06FB  0266               	subwf	_prec^(0+128),w
  9334  06FC                     u3355:	
  9335  06FC  1803               	skipnc
  9336  06FD  2F04               	goto	l3598
  9337  06FE  3001               	movlw	1
  9338  06FF  0020               	movlb	0	; select bank0
  9339  0700  00BE               	movwf	dtoa@p
  9340  0701  3000               	movlw	0
  9341  0702  00BF               	movwf	dtoa@p+1
  9342  0703  2F0C               	goto	l515
  9343  0704                     l3598:	
  9344  0704  0021               	movlb	1	; select bank1
  9345  0705  0867               	movf	(_prec+1)^(0+128),w
  9346  0706  0020               	movlb	0	; select bank0
  9347  0707  00BF               	movwf	dtoa@p+1
  9348  0708  0021               	movlb	1	; select bank1
  9349  0709  0866               	movf	_prec^(0+128),w
  9350  070A  0020               	movlb	0	; select bank0
  9351  070B  00BE               	movwf	dtoa@p
  9352  070C                     l515:	
  9353                           
  9354                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 291:     w = width;
  9355  070C  0021               	movlb	1	; select bank1
  9356  070D  0865               	movf	(_width+1)^(0+128),w
  9357  070E  0020               	movlb	0	; select bank0
  9358  070F  00C1               	movwf	dtoa@w+1
  9359  0710  0021               	movlb	1	; select bank1
  9360  0711  0864               	movf	_width^(0+128),w
  9361  0712  0020               	movlb	0	; select bank0
  9362  0713  00C0               	movwf	dtoa@w
  9363                           
  9364                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 292:     if (s || (fla
      +                          gs & (1 << 2))) {
  9365  0714  0842               	movf	dtoa@s,w
  9366  0715  0443               	iorwf	dtoa@s+1,w
  9367  0716  1D03               	btfss	3,2
  9368  0717  2F1A               	goto	l3604
  9369  0718  1D6D               	btfss	_flags,2
  9370  0719  2F1E               	goto	l516
  9371  071A                     l3604:	
  9372                           
  9373                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 293:         --w;
  9374  071A  30FF               	movlw	255
  9375  071B  07C0               	addwf	dtoa@w,f
  9376  071C  30FF               	movlw	255
  9377  071D  3DC1               	addwfc	dtoa@w+1,f
  9378  071E                     l516:	
  9379                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 294:     }
  9380                           
  9381                           
  9382                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 297:     i = sizeof(db
      +                          uf) - 1;
  9383  071E  301F               	movlw	31
  9384  071F  00CC               	movwf	dtoa@i
  9385  0720  3000               	movlw	0
  9386  0721  00CD               	movwf	dtoa@i+1
  9387                           
  9388                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 298:     dbuf[i] = '\0
      +                          ';
  9389  0722  0024               	movlb	4	; select bank4
  9390  0723  01EB               	clrf	(_dbuf^(0+512)+31)
  9391                           
  9392                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 299:     while (!(i < 
      +                          1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9393  0724  2FB3               	goto	l519
  9394  0725                     l3618:	
  9395  0725  0020               	movlb	0	; select bank0
  9396  0726  0844               	movf	dtoa@n,w
  9397  0727  0445               	iorwf	dtoa@n+1,w
  9398  0728  0446               	iorwf	dtoa@n+2,w
  9399  0729  0447               	iorwf	dtoa@n+3,w
  9400  072A  0448               	iorwf	dtoa@n+4,w
  9401  072B  0449               	iorwf	dtoa@n+5,w
  9402  072C  044A               	iorwf	dtoa@n+6,w
  9403  072D  044B               	iorwf	dtoa@n+7,w
  9404  072E  1D03               	skipz
  9405  072F  2F4A               	goto	l3608
  9406  0730  083F               	movf	dtoa@p+1,w
  9407  0731  3A80               	xorlw	128
  9408  0732  00B8               	movwf	??_dtoa
  9409  0733  3080               	movlw	128
  9410  0734  0238               	subwf	??_dtoa,w
  9411  0735  1D03               	skipz
  9412  0736  2F39               	goto	u3405
  9413  0737  3001               	movlw	1
  9414  0738  023E               	subwf	dtoa@p,w
  9415  0739                     u3405:	
  9416  0739  1803               	skipnc
  9417  073A  2F4A               	goto	l3608
  9418  073B  0020               	movlb	0	; select bank0
  9419  073C  0841               	movf	dtoa@w+1,w
  9420  073D  3A80               	xorlw	128
  9421  073E  00B8               	movwf	??_dtoa
  9422  073F  3080               	movlw	128
  9423  0740  0238               	subwf	??_dtoa,w
  9424  0741  1D03               	skipz
  9425  0742  2F45               	goto	u3415
  9426  0743  3001               	movlw	1
  9427  0744  0240               	subwf	dtoa@w,w
  9428  0745                     u3415:	
  9429  0745  1C03               	skipc
  9430  0746  2FBF               	goto	l3626
  9431  0747  0020               	movlb	0	; select bank0
  9432  0748  1CED               	btfss	_flags,1
  9433  0749  2FBF               	goto	l3626
  9434  074A                     l3608:	
  9435                           
  9436                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 300:         --i;
  9437  074A  30FF               	movlw	255
  9438  074B  0020               	movlb	0	; select bank0
  9439  074C  07CC               	addwf	dtoa@i,f
  9440  074D  30FF               	movlw	255
  9441  074E  3DCD               	addwfc	dtoa@i+1,f
  9442                           
  9443                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 301:         dbuf[i] =
      +                           '0' + abs(n % 10);
  9444  074F  300A               	movlw	10
  9445  0750  00A0               	movwf	___aomod@divisor
  9446  0751  01A1               	clrf	___aomod@divisor+1
  9447  0752  01A2               	clrf	___aomod@divisor+2
  9448  0753  01A3               	clrf	___aomod@divisor+3
  9449  0754  01A4               	clrf	___aomod@divisor+4
  9450  0755  01A5               	clrf	___aomod@divisor+5
  9451  0756  01A6               	clrf	___aomod@divisor+6
  9452  0757  01A7               	clrf	___aomod@divisor+7
  9453  0758  0844               	movf	dtoa@n,w
  9454  0759  00A8               	movwf	___aomod@dividend
  9455  075A  0845               	movf	dtoa@n+1,w
  9456  075B  00A9               	movwf	___aomod@dividend+1
  9457  075C  0846               	movf	dtoa@n+2,w
  9458  075D  00AA               	movwf	___aomod@dividend+2
  9459  075E  0847               	movf	dtoa@n+3,w
  9460  075F  00AB               	movwf	___aomod@dividend+3
  9461  0760  0848               	movf	dtoa@n+4,w
  9462  0761  00AC               	movwf	___aomod@dividend+4
  9463  0762  0849               	movf	dtoa@n+5,w
  9464  0763  00AD               	movwf	___aomod@dividend+5
  9465  0764  084A               	movf	dtoa@n+6,w
  9466  0765  00AE               	movwf	___aomod@dividend+6
  9467  0766  084B               	movf	dtoa@n+7,w
  9468  0767  00AF               	movwf	___aomod@dividend+7
  9469  0768  318E  2631  3186   	fcall	___aomod
  9470  076B  0020               	movlb	0	; select bank0
  9471  076C  0821               	movf	?___aomod+1,w
  9472  076D  00F4               	movwf	abs@a+1
  9473  076E  0820               	movf	?___aomod,w
  9474  076F  00F3               	movwf	abs@a
  9475  0770  3196  26FE  3186   	fcall	_abs
  9476  0773  0873               	movf	?_abs,w
  9477  0774  3E30               	addlw	48
  9478  0775  0020               	movlb	0	; select bank0
  9479  0776  00B8               	movwf	??_dtoa
  9480  0777  084C               	movf	dtoa@i,w
  9481  0778  3E4C               	addlw	(low (_dbuf| (0+512)))& (0+255)
  9482  0779  0086               	movwf	6
  9483  077A  3002               	movlw	2	; select bank4/5
  9484  077B  0087               	movwf	7
  9485  077C  0838               	movf	??_dtoa,w
  9486  077D  0081               	movwf	1
  9487                           
  9488                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 302:         --p;
  9489  077E  30FF               	movlw	255
  9490  077F  07BE               	addwf	dtoa@p,f
  9491  0780  30FF               	movlw	255
  9492  0781  3DBF               	addwfc	dtoa@p+1,f
  9493                           
  9494                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 303:         --w;
  9495  0782  30FF               	movlw	255
  9496  0783  07C0               	addwf	dtoa@w,f
  9497  0784  30FF               	movlw	255
  9498  0785  3DC1               	addwfc	dtoa@w+1,f
  9499                           
  9500                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 304:         n = n / 1
      +                          0;
  9501  0786  300A               	movlw	10
  9502  0787  00A0               	movwf	___aodiv@divisor
  9503  0788  01A1               	clrf	___aodiv@divisor+1
  9504  0789  01A2               	clrf	___aodiv@divisor+2
  9505  078A  01A3               	clrf	___aodiv@divisor+3
  9506  078B  01A4               	clrf	___aodiv@divisor+4
  9507  078C  01A5               	clrf	___aodiv@divisor+5
  9508  078D  01A6               	clrf	___aodiv@divisor+6
  9509  078E  01A7               	clrf	___aodiv@divisor+7
  9510  078F  0844               	movf	dtoa@n,w
  9511  0790  00A8               	movwf	___aodiv@dividend
  9512  0791  0845               	movf	dtoa@n+1,w
  9513  0792  00A9               	movwf	___aodiv@dividend+1
  9514  0793  0846               	movf	dtoa@n+2,w
  9515  0794  00AA               	movwf	___aodiv@dividend+2
  9516  0795  0847               	movf	dtoa@n+3,w
  9517  0796  00AB               	movwf	___aodiv@dividend+3
  9518  0797  0848               	movf	dtoa@n+4,w
  9519  0798  00AC               	movwf	___aodiv@dividend+4
  9520  0799  0849               	movf	dtoa@n+5,w
  9521  079A  00AD               	movwf	___aodiv@dividend+5
  9522  079B  084A               	movf	dtoa@n+6,w
  9523  079C  00AE               	movwf	___aodiv@dividend+6
  9524  079D  084B               	movf	dtoa@n+7,w
  9525  079E  00AF               	movwf	___aodiv@dividend+7
  9526  079F  318F  270D  3186   	fcall	___aodiv
  9527  07A2  0020               	movlb	0	; select bank0
  9528  07A3  0820               	movf	?___aodiv,w
  9529  07A4  00C4               	movwf	dtoa@n
  9530  07A5  0821               	movf	?___aodiv+1,w
  9531  07A6  00C5               	movwf	dtoa@n+1
  9532  07A7  0822               	movf	?___aodiv+2,w
  9533  07A8  00C6               	movwf	dtoa@n+2
  9534  07A9  0823               	movf	?___aodiv+3,w
  9535  07AA  00C7               	movwf	dtoa@n+3
  9536  07AB  0824               	movf	?___aodiv+4,w
  9537  07AC  00C8               	movwf	dtoa@n+4
  9538  07AD  0825               	movf	?___aodiv+5,w
  9539  07AE  00C9               	movwf	dtoa@n+5
  9540  07AF  0826               	movf	?___aodiv+6,w
  9541  07B0  00CA               	movwf	dtoa@n+6
  9542  07B1  0827               	movf	?___aodiv+7,w
  9543  07B2  00CB               	movwf	dtoa@n+7
  9544  07B3                     l519:	
  9545                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 305:     }
  9546                           
  9547                           
  9548                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 299:     while (!(i < 
      +                          1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9549  07B3  0020               	movlb	0	; select bank0
  9550  07B4  084D               	movf	dtoa@i+1,w
  9551  07B5  3A80               	xorlw	128
  9552  07B6  00B8               	movwf	??_dtoa
  9553  07B7  3080               	movlw	128
  9554  07B8  0238               	subwf	??_dtoa,w
  9555  07B9  1D03               	skipz
  9556  07BA  2FBD               	goto	u3385
  9557  07BB  3001               	movlw	1
  9558  07BC  024C               	subwf	dtoa@i,w
  9559  07BD                     u3385:	
  9560  07BD  1803               	btfsc	3,0
  9561  07BE  2F25               	goto	l3618
  9562  07BF                     l3626:	
  9563                           
  9564                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 308:     if (s || (fla
      +                          gs & (1 << 2))) {
  9565  07BF  0020               	movlb	0	; select bank0
  9566  07C0  0842               	movf	dtoa@s,w
  9567  07C1  0443               	iorwf	dtoa@s+1,w
  9568  07C2  1D03               	btfss	3,2
  9569  07C3  2FC6               	goto	l3630
  9570  07C4  1D6D               	btfss	_flags,2
  9571  07C5  2FDD               	goto	l3640
  9572  07C6                     l3630:	
  9573                           
  9574                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 309:         --i;
  9575  07C6  30FF               	movlw	255
  9576  07C7  07CC               	addwf	dtoa@i,f
  9577  07C8  30FF               	movlw	255
  9578  07C9  3DCD               	addwfc	dtoa@i+1,f
  9579                           
  9580                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 310:         dbuf[i] =
      +                           s ? '-' : '+';
  9581  07CA  0842               	movf	dtoa@s,w
  9582  07CB  0443               	iorwf	dtoa@s+1,w
  9583  07CC  1D03               	btfss	3,2
  9584  07CD  2FD0               	goto	l3636
  9585  07CE  302B               	movlw	43
  9586  07CF  2FD1               	goto	L4
  9587  07D0                     l3636:	
  9588  07D0  302D               	movlw	45
  9589  07D1                     L4:	
  9590  07D1  00BC               	movwf	_dtoa$654
  9591  07D2  3000               	movlw	0
  9592  07D3  00BD               	movwf	_dtoa$654+1
  9593  07D4  083C               	movf	_dtoa$654,w
  9594  07D5  00B8               	movwf	??_dtoa
  9595  07D6  084C               	movf	dtoa@i,w
  9596  07D7  3E4C               	addlw	(low (_dbuf| (0+512)))& (0+255)
  9597  07D8  0086               	movwf	6
  9598  07D9  3002               	movlw	2	; select bank4/5
  9599  07DA  0087               	movwf	7
  9600  07DB  0838               	movf	??_dtoa,w
  9601  07DC  0081               	movwf	1
  9602  07DD                     l3640:	
  9603                           
  9604                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 314:     return pad(fp
      +                          , &dbuf[i], w);
  9605  07DD  084C               	movf	dtoa@i,w
  9606  07DE  3E4C               	addlw	(low (_dbuf| (0+512)))& (0+255)
  9607  07DF  00B8               	movwf	??_dtoa
  9608  07E0  0838               	movf	??_dtoa,w
  9609  07E1  00A4               	movwf	pad@buf
  9610  07E2  0841               	movf	dtoa@w+1,w
  9611  07E3  00A6               	movwf	pad@p+1
  9612  07E4  0840               	movf	dtoa@w,w
  9613  07E5  00A5               	movwf	pad@p
  9614  07E6  083B               	movf	dtoa@fp,w
  9615  07E7  318A  225D         	fcall	_pad
  9616  07E9  0020               	movlb	0	; select bank0
  9617  07EA  0825               	movf	?_pad+1,w
  9618  07EB  00B1               	movwf	?_dtoa+1
  9619  07EC  0824               	movf	?_pad,w
  9620  07ED  00B0               	movwf	?_dtoa
  9621  07EE  0008               	return
  9622  07EF                     __end_of_dtoa:	
  9623                           
  9624                           	psect	text30
  9625  0A5D                     __ptext30:	
  9626 ;; *************** function _pad *****************
  9627 ;; Defined at:
  9628 ;;		line 72 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c"
  9629 ;; Parameters:    Size  Location     Type
  9630 ;;  fp              1    wreg     PTR struct _IO_FILE
  9631 ;;		 -> sprintf@f(6), NULL(0), 
  9632 ;;  buf             1    4[BANK0 ] PTR unsigned char 
  9633 ;;		 -> dbuf(32), 
  9634 ;;  p               2    5[BANK0 ] int 
  9635 ;; Auto vars:     Size  Location     Type
  9636 ;;  fp              1   12[BANK0 ] PTR struct _IO_FILE
  9637 ;;		 -> sprintf@f(6), NULL(0), 
  9638 ;;  w               2   10[BANK0 ] int 
  9639 ;;  i               2    8[BANK0 ] int 
  9640 ;; Return value:  Size  Location     Type
  9641 ;;                  2    4[BANK0 ] int 
  9642 ;; Registers used:
  9643 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9644 ;; Tracked objects:
  9645 ;;		On entry : 0/0
  9646 ;;		On exit  : 0/0
  9647 ;;		Unchanged: 0/0
  9648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9649 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9650 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9651 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9652 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9653 ;;Total ram usage:        9 bytes
  9654 ;; Hardware stack levels used:    1
  9655 ;; Hardware stack levels required when called:    7
  9656 ;; This function calls:
  9657 ;;		_fputc
  9658 ;;		_fputs
  9659 ;;		_strlen
  9660 ;; This function is called by:
  9661 ;;		_dtoa
  9662 ;;		_xtoa
  9663 ;; This function uses a non-reentrant model
  9664 ;;
  9665                           
  9666                           
  9667                           ;psect for function _pad
  9668  0A5D                     _pad:	
  9669                           
  9670                           ;incstack = 0
  9671                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9672                           ;pad@fp stored from wreg
  9673  0A5D  0020               	movlb	0	; select bank0
  9674  0A5E  00AC               	movwf	pad@fp
  9675                           
  9676                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 72: static int pad(FIL
      +                          E *fp, char *buf, int p);K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c
      +                          : 73: {;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 74:     int i, 
      +                          w;;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 77:     if (flags & 
      +                          (1 << 0)) {
  9677  0A5F  1C6D               	btfss	_flags,0
  9678  0A60  2A69               	goto	l3568
  9679                           
  9680                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 78:         fputs((con
      +                          st char *)buf, fp);
  9681  0A61  082C               	movf	pad@fp,w
  9682  0A62  00A7               	movwf	??_pad
  9683  0A63  0827               	movf	??_pad,w
  9684  0A64  00FA               	movwf	fputs@fp
  9685  0A65  0824               	movf	pad@buf,w
  9686  0A66  3197  27DA  318A   	fcall	_fputs
  9687  0A69                     l3568:	
  9688                           
  9689                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 82:     w = (p < 0) ? 
      +                          0 : p;
  9690  0A69  0020               	movlb	0	; select bank0
  9691  0A6A  1BA6               	btfsc	pad@p+1,7
  9692  0A6B  2A71               	goto	l3572
  9693  0A6C  0826               	movf	pad@p+1,w
  9694  0A6D  00AB               	movwf	pad@w+1
  9695  0A6E  0825               	movf	pad@p,w
  9696  0A6F  00AA               	movwf	pad@w
  9697  0A70  2A73               	goto	l502
  9698  0A71                     l3572:	
  9699  0A71  01AA               	clrf	pad@w
  9700  0A72  01AB               	clrf	pad@w+1
  9701  0A73                     l502:	
  9702                           
  9703                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  9704  0A73  01A8               	clrf	pad@i
  9705  0A74  01A9               	clrf	pad@i+1
  9706  0A75                     l3578:	
  9707                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 84:     while (i < w) 
      +                          {
  9708                           
  9709                           
  9710                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 84:     while (i < w) 
      +                          {
  9711  0A75  0829               	movf	pad@i+1,w
  9712  0A76  3A80               	xorlw	128
  9713  0A77  00A7               	movwf	??_pad
  9714  0A78  082B               	movf	pad@w+1,w
  9715  0A79  3A80               	xorlw	128
  9716  0A7A  0227               	subwf	??_pad,w
  9717  0A7B  1D03               	skipz
  9718  0A7C  2A7F               	goto	u3285
  9719  0A7D  082A               	movf	pad@w,w
  9720  0A7E  0228               	subwf	pad@i,w
  9721  0A7F                     u3285:	
  9722  0A7F  1803               	btfsc	3,0
  9723  0A80  2A93               	goto	l505
  9724                           
  9725                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 85:         fputc(' ',
      +                           fp);
  9726  0A81  3020               	movlw	32
  9727  0A82  00F2               	movwf	fputc@c
  9728  0A83  3000               	movlw	0
  9729  0A84  00F3               	movwf	fputc@c+1
  9730  0A85  0020               	movlb	0	; select bank0
  9731  0A86  082C               	movf	pad@fp,w
  9732  0A87  00A7               	movwf	??_pad
  9733  0A88  0827               	movf	??_pad,w
  9734  0A89  00F4               	movwf	fputc@fp
  9735  0A8A  318A  2212  318A   	fcall	_fputc
  9736                           
  9737                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 86:         ++i;
  9738  0A8D  3001               	movlw	1
  9739  0A8E  0020               	movlb	0	; select bank0
  9740  0A8F  07A8               	addwf	pad@i,f
  9741  0A90  3000               	movlw	0
  9742  0A91  3DA9               	addwfc	pad@i+1,f
  9743  0A92  2A75               	goto	l3578
  9744  0A93                     l505:	
  9745                           
  9746                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 90:     if (!(flags & 
      +                          (1 << 0))) {
  9747  0A93  0020               	movlb	0	; select bank0
  9748  0A94  186D               	btfsc	_flags,0
  9749  0A95  2A9E               	goto	l3582
  9750                           
  9751                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 91:         fputs((con
      +                          st char *)buf, fp);
  9752  0A96  082C               	movf	pad@fp,w
  9753  0A97  00A7               	movwf	??_pad
  9754  0A98  0827               	movf	??_pad,w
  9755  0A99  00FA               	movwf	fputs@fp
  9756  0A9A  0824               	movf	pad@buf,w
  9757  0A9B  3197  27DA  318A   	fcall	_fputs
  9758  0A9E                     l3582:	
  9759                           
  9760                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 94:     return strlen(
      +                          buf) + w;
  9761  0A9E  0020               	movlb	0	; select bank0
  9762  0A9F  0824               	movf	pad@buf,w
  9763  0AA0  00F0               	movwf	strlen@s
  9764  0AA1  3002               	movlw	2
  9765  0AA2  00F1               	movwf	strlen@s+1
  9766  0AA3  3196  26D0         	fcall	_strlen
  9767  0AA5  0020               	movlb	0	; select bank0
  9768  0AA6  082A               	movf	pad@w,w
  9769  0AA7  0770               	addwf	?_strlen,w
  9770  0AA8  00A4               	movwf	?_pad
  9771  0AA9  082B               	movf	pad@w+1,w
  9772  0AAA  3D71               	addwfc	?_strlen+1,w
  9773  0AAB  00A5               	movwf	?_pad+1
  9774  0AAC  0008               	return
  9775  0AAD                     __end_of_pad:	
  9776                           
  9777                           	psect	text31
  9778  17DA                     __ptext31:	
  9779 ;; *************** function _fputs *****************
  9780 ;; Defined at:
  9781 ;;		line 8 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\nf_fputs.c"
  9782 ;; Parameters:    Size  Location     Type
  9783 ;;  s               1    wreg     PTR const unsigned char 
  9784 ;;		 -> dbuf(32), 
  9785 ;;  fp              1   10[COMMON] PTR struct _IO_FILE
  9786 ;;		 -> sprintf@f(6), NULL(0), 
  9787 ;; Auto vars:     Size  Location     Type
  9788 ;;  s               1    3[BANK0 ] PTR const unsigned char 
  9789 ;;		 -> dbuf(32), 
  9790 ;;  i               2    1[BANK0 ] int 
  9791 ;;  c               1    0[BANK0 ] unsigned char 
  9792 ;; Return value:  Size  Location     Type
  9793 ;;                  2   10[COMMON] int 
  9794 ;; Registers used:
  9795 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9796 ;; Tracked objects:
  9797 ;;		On entry : 0/0
  9798 ;;		On exit  : 0/0
  9799 ;;		Unchanged: 0/0
  9800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9801 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9802 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9803 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9804 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9805 ;;Total ram usage:        8 bytes
  9806 ;; Hardware stack levels used:    1
  9807 ;; Hardware stack levels required when called:    6
  9808 ;; This function calls:
  9809 ;;		_fputc
  9810 ;; This function is called by:
  9811 ;;		_pad
  9812 ;; This function uses a non-reentrant model
  9813 ;;
  9814                           
  9815                           
  9816                           ;psect for function _fputs
  9817  17DA                     _fputs:	
  9818                           
  9819                           ;incstack = 0
  9820                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9821                           ;fputs@s stored from wreg
  9822  17DA  0020               	movlb	0	; select bank0
  9823  17DB  00A3               	movwf	fputs@s
  9824  17DC  01A1               	clrf	fputs@i
  9825  17DD  01A2               	clrf	fputs@i+1
  9826  17DE                     l2436:	
  9827  17DE  0821               	movf	fputs@i,w
  9828  17DF  0723               	addwf	fputs@s,w
  9829  17E0  00FB               	movwf	??_fputs
  9830  17E1  087B               	movf	??_fputs,w
  9831  17E2  0086               	movwf	6
  9832  17E3  3002               	movlw	2	; select bank4/5
  9833  17E4  0087               	movwf	7
  9834  17E5  0801               	movf	1,w
  9835  17E6  00FC               	movwf	??_fputs+1
  9836  17E7  087C               	movf	??_fputs+1,w
  9837  17E8  00A0               	movwf	fputs@c
  9838  17E9  0820               	movf	fputs@c,w
  9839  17EA  1903               	btfsc	3,2
  9840  17EB  0008               	return
  9841  17EC  0820               	movf	fputs@c,w
  9842  17ED  00FB               	movwf	??_fputs
  9843  17EE  01FC               	clrf	??_fputs+1
  9844  17EF  087B               	movf	??_fputs,w
  9845  17F0  00F2               	movwf	fputc@c
  9846  17F1  087C               	movf	??_fputs+1,w
  9847  17F2  00F3               	movwf	fputc@c+1
  9848  17F3  087A               	movf	fputs@fp,w
  9849  17F4  00FD               	movwf	??_fputs+2
  9850  17F5  087D               	movf	??_fputs+2,w
  9851  17F6  00F4               	movwf	fputc@fp
  9852  17F7  318A  2212  3197   	fcall	_fputc
  9853  17FA  3001               	movlw	1
  9854  17FB  0020               	movlb	0	; select bank0
  9855  17FC  07A1               	addwf	fputs@i,f
  9856  17FD  3000               	movlw	0
  9857  17FE  3DA2               	addwfc	fputs@i+1,f
  9858  17FF  2FDE               	goto	l2436
  9859  1800                     __end_of_fputs:	
  9860                           
  9861                           	psect	text32
  9862  0A12                     __ptext32:	
  9863 ;; *************** function _fputc *****************
  9864 ;; Defined at:
  9865 ;;		line 8 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\nf_fputc.c"
  9866 ;; Parameters:    Size  Location     Type
  9867 ;;  c               2    2[COMMON] int 
  9868 ;;  fp              1    4[COMMON] PTR struct _IO_FILE
  9869 ;;		 -> sprintf@f(6), NULL(0), 
  9870 ;; Auto vars:     Size  Location     Type
  9871 ;;		None
  9872 ;; Return value:  Size  Location     Type
  9873 ;;                  2    2[COMMON] int 
  9874 ;; Registers used:
  9875 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9876 ;; Tracked objects:
  9877 ;;		On entry : 0/0
  9878 ;;		On exit  : 0/0
  9879 ;;		Unchanged: 0/0
  9880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9881 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9882 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9883 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9884 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9885 ;;Total ram usage:        8 bytes
  9886 ;; Hardware stack levels used:    1
  9887 ;; Hardware stack levels required when called:    5
  9888 ;; This function calls:
  9889 ;;		_putch
  9890 ;; This function is called by:
  9891 ;;		_pad
  9892 ;;		_stoa
  9893 ;;		_vfpfcnvrt
  9894 ;;		_fputs
  9895 ;; This function uses a non-reentrant model
  9896 ;;
  9897                           
  9898                           
  9899                           ;psect for function _fputc
  9900  0A12                     _fputc:	
  9901                           
  9902                           ;incstack = 0
  9903                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9904  0A12  0874               	movf	fputc@fp,w
  9905  0A13  1D03               	btfss	3,2
  9906  0A14  0874               	movf	fputc@fp,w
  9907  0A15  1D03               	btfss	3,2
  9908  0A16  2A1B               	goto	l2410
  9909  0A17  0872               	movf	fputc@c,w
  9910  0A18  3196  2619         	fcall	_putch
  9911  0A1A  0008               	return
  9912  0A1B                     l2410:	
  9913  0A1B  0874               	movf	fputc@fp,w
  9914  0A1C  3E04               	addlw	4
  9915  0A1D  0086               	movwf	6
  9916  0A1E  0187               	clrf	7
  9917  0A1F  0016               	moviw fsr1++
  9918  0A20  0401               	iorwf	1,w
  9919  0A21  1903               	btfsc	3,2
  9920  0A22  2A3F               	goto	l2414
  9921  0A23  0874               	movf	fputc@fp,w
  9922  0A24  3E04               	addlw	4
  9923  0A25  0086               	movwf	6
  9924  0A26  0187               	clrf	7
  9925  0A27  3F40               	moviw [0]fsr1
  9926  0A28  00F5               	movwf	??_fputc
  9927  0A29  3F41               	moviw [1]fsr1
  9928  0A2A  00F6               	movwf	??_fputc+1
  9929  0A2B  0874               	movf	fputc@fp,w
  9930  0A2C  3E02               	addlw	2
  9931  0A2D  0086               	movwf	6
  9932  0A2E  0187               	clrf	7
  9933  0A2F  3F40               	moviw [0]fsr1
  9934  0A30  00F7               	movwf	??_fputc+2
  9935  0A31  3F41               	moviw [1]fsr1
  9936  0A32  00F8               	movwf	??_fputc+3
  9937  0A33  0878               	movf	??_fputc+3,w
  9938  0A34  3A80               	xorlw	128
  9939  0A35  00F9               	movwf	??_fputc+4
  9940  0A36  0876               	movf	??_fputc+1,w
  9941  0A37  3A80               	xorlw	128
  9942  0A38  0279               	subwf	??_fputc+4,w
  9943  0A39  1D03               	skipz
  9944  0A3A  2A3D               	goto	u1685
  9945  0A3B  0875               	movf	??_fputc,w
  9946  0A3C  0277               	subwf	??_fputc+2,w
  9947  0A3D                     u1685:	
  9948  0A3D  1803               	skipnc
  9949  0A3E  0008               	return
  9950  0A3F                     l2414:	
  9951  0A3F  0874               	movf	fputc@fp,w
  9952  0A40  3E02               	addlw	2
  9953  0A41  0086               	movwf	6
  9954  0A42  0187               	clrf	7
  9955  0A43  0874               	movf	fputc@fp,w
  9956  0A44  0084               	movwf	4
  9957  0A45  0185               	clrf	5
  9958  0A46  3F40               	moviw [0]fsr1
  9959  0A47  0700               	addwf	0,w
  9960  0A48  00F5               	movwf	??_fputc
  9961  0A49  3101               	addfsr 0,1
  9962  0A4A  3F41               	moviw [1]fsr1
  9963  0A4B  3D00               	addwfc	0,w
  9964  0A4C  00F6               	movwf	??_fputc+1
  9965  0A4D  0875               	movf	??_fputc,w
  9966  0A4E  0086               	movwf	6
  9967  0A4F  0876               	movf	??_fputc+1,w
  9968  0A50  0087               	movwf	7
  9969  0A51  0872               	movf	fputc@c,w
  9970  0A52  0081               	movwf	1
  9971  0A53  0874               	movf	fputc@fp,w
  9972  0A54  3E02               	addlw	2
  9973  0A55  0086               	movwf	6
  9974  0A56  0187               	clrf	7
  9975  0A57  3001               	movlw	1
  9976  0A58  0781               	addwf	1,f
  9977  0A59  3141               	addfsr 1,1
  9978  0A5A  1803               	skipnc
  9979  0A5B  0A81               	incf	1,f
  9980  0A5C  0008               	return
  9981  0A5D                     __end_of_fputc:	
  9982                           
  9983                           	psect	text33
  9984  1619                     __ptext33:	
  9985 ;; *************** function _putch *****************
  9986 ;; Defined at:
  9987 ;;		line 125 in file "mcc_generated_files/eusart.c"
  9988 ;; Parameters:    Size  Location     Type
  9989 ;;  txData          1    wreg     unsigned char 
  9990 ;; Auto vars:     Size  Location     Type
  9991 ;;  txData          1    1[COMMON] unsigned char 
  9992 ;; Return value:  Size  Location     Type
  9993 ;;                  1    wreg      void 
  9994 ;; Registers used:
  9995 ;;		wreg, status,2, status,0, pclath, cstack
  9996 ;; Tracked objects:
  9997 ;;		On entry : 0/0
  9998 ;;		On exit  : 0/0
  9999 ;;		Unchanged: 0/0
 10000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10002 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10004 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10005 ;;Total ram usage:        1 bytes
 10006 ;; Hardware stack levels used:    1
 10007 ;; Hardware stack levels required when called:    4
 10008 ;; This function calls:
 10009 ;;		_EUSART_Write
 10010 ;; This function is called by:
 10011 ;;		_fputc
 10012 ;; This function uses a non-reentrant model
 10013 ;;
 10014                           
 10015                           
 10016                           ;psect for function _putch
 10017  1619                     _putch:	
 10018                           
 10019                           ;incstack = 0
 10020                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
 10021                           ;putch@txData stored from wreg
 10022  1619  00F1               	movwf	putch@txData
 10023                           
 10024                           ;mcc_generated_files/eusart.c: 125: void putch(char txData);mcc_generated_files/eusart.c
      +                          : 126: {;mcc_generated_files/eusart.c: 127:     EUSART_Write(txData);
 10025  161A  0871               	movf	putch@txData,w
 10026  161B  3196  263E         	fcall	_EUSART_Write
 10027  161D  0008               	return
 10028  161E                     __end_of_putch:	
 10029                           
 10030                           	psect	text34
 10031  163E                     __ptext34:	
 10032 ;; *************** function _EUSART_Write *****************
 10033 ;; Defined at:
 10034 ;;		line 111 in file "mcc_generated_files/eusart.c"
 10035 ;; Parameters:    Size  Location     Type
 10036 ;;  txData          1    wreg     unsigned char 
 10037 ;; Auto vars:     Size  Location     Type
 10038 ;;  txData          1    0[COMMON] unsigned char 
 10039 ;; Return value:  Size  Location     Type
 10040 ;;                  1    wreg      void 
 10041 ;; Registers used:
 10042 ;;		wreg
 10043 ;; Tracked objects:
 10044 ;;		On entry : 0/0
 10045 ;;		On exit  : 0/0
 10046 ;;		Unchanged: 0/0
 10047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10049 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10051 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10052 ;;Total ram usage:        1 bytes
 10053 ;; Hardware stack levels used:    1
 10054 ;; Hardware stack levels required when called:    3
 10055 ;; This function calls:
 10056 ;;		Nothing
 10057 ;; This function is called by:
 10058 ;;		_putch
 10059 ;;		_GPS_SendUBX
 10060 ;; This function uses a non-reentrant model
 10061 ;;
 10062                           
 10063                           
 10064                           ;psect for function _EUSART_Write
 10065  163E                     _EUSART_Write:	
 10066                           
 10067                           ;incstack = 0
 10068                           ; Regs used in _EUSART_Write: [wreg]
 10069                           ;EUSART_Write@txData stored from wreg
 10070  163E  00F0               	movwf	EUSART_Write@txData
 10071  163F                     l112:	
 10072                           ;mcc_generated_files/eusart.c: 114:     {;mcc_generated_files/eusart.c: 115:     }
 10073                           
 10074                           
 10075                           ;mcc_generated_files/eusart.c: 113:     while(0 == PIR1bits.TXIF)
 10076  163F  0020               	movlb	0	; select bank0
 10077  1640  1E10               	btfss	16,4	;volatile
 10078  1641  2E3F               	goto	l112
 10079                           
 10080                           ;mcc_generated_files/eusart.c: 117:     TX1REG = txData;
 10081  1642  0870               	movf	EUSART_Write@txData,w
 10082  1643  0023               	movlb	3	; select bank3
 10083  1644  009A               	movwf	26	;volatile
 10084  1645  0008               	return
 10085  1646                     __end_of_EUSART_Write:	
 10086                           
 10087                           	psect	text35
 10088  16FE                     __ptext35:	
 10089 ;; *************** function _abs *****************
 10090 ;; Defined at:
 10091 ;;		line 1 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\abs.c"
 10092 ;; Parameters:    Size  Location     Type
 10093 ;;  a               2    3[COMMON] int 
 10094 ;; Auto vars:     Size  Location     Type
 10095 ;;		None
 10096 ;; Return value:  Size  Location     Type
 10097 ;;                  2    3[COMMON] int 
 10098 ;; Registers used:
 10099 ;;		wreg, status,2, status,0
 10100 ;; Tracked objects:
 10101 ;;		On entry : 0/0
 10102 ;;		On exit  : 0/0
 10103 ;;		Unchanged: 0/0
 10104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10105 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10107 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10108 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10109 ;;Total ram usage:        4 bytes
 10110 ;; Hardware stack levels used:    1
 10111 ;; Hardware stack levels required when called:    3
 10112 ;; This function calls:
 10113 ;;		Nothing
 10114 ;; This function is called by:
 10115 ;;		_dtoa
 10116 ;; This function uses a non-reentrant model
 10117 ;;
 10118                           
 10119                           
 10120                           ;psect for function _abs
 10121  16FE                     _abs:	
 10122                           
 10123                           ;incstack = 0
 10124                           ; Regs used in _abs: [wreg+status,2+status,0]
 10125  16FE  0874               	movf	abs@a+1,w
 10126  16FF  3A80               	xorlw	128
 10127  1700  00F5               	movwf	??_abs
 10128  1701  3080               	movlw	128
 10129  1702  0275               	subwf	??_abs,w
 10130  1703  1D03               	skipz
 10131  1704  2F07               	goto	u1775
 10132  1705  3001               	movlw	1
 10133  1706  0273               	subwf	abs@a,w
 10134  1707                     u1775:	
 10135  1707  1803               	skipnc
 10136  1708  0008               	return
 10137  1709  0973               	comf	abs@a,w
 10138  170A  00F5               	movwf	??_abs
 10139  170B  0974               	comf	abs@a+1,w
 10140  170C  00F6               	movwf	??_abs+1
 10141  170D  0AF5               	incf	??_abs,f
 10142  170E  1903               	skipnz
 10143  170F  0AF6               	incf	??_abs+1,f
 10144  1710  0875               	movf	??_abs,w
 10145  1711  00F3               	movwf	?_abs
 10146  1712  0876               	movf	??_abs+1,w
 10147  1713  00F4               	movwf	?_abs+1
 10148  1714  0008               	return
 10149  1715                     __end_of_abs:	
 10150                           
 10151                           	psect	text36
 10152  0E31                     __ptext36:	
 10153 ;; *************** function ___aomod *****************
 10154 ;; Defined at:
 10155 ;;		line 7 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\aomod.c"
 10156 ;; Parameters:    Size  Location     Type
 10157 ;;  divisor         8    0[BANK0 ] long long 
 10158 ;;  dividend        8    8[BANK0 ] long long 
 10159 ;; Auto vars:     Size  Location     Type
 10160 ;;  sign            1    2[COMMON] unsigned char 
 10161 ;;  counter         1    1[COMMON] unsigned char 
 10162 ;; Return value:  Size  Location     Type
 10163 ;;                  8    0[BANK0 ] long long 
 10164 ;; Registers used:
 10165 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10166 ;; Tracked objects:
 10167 ;;		On entry : 0/0
 10168 ;;		On exit  : 0/0
 10169 ;;		Unchanged: 0/0
 10170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10171 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10172 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10173 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10174 ;;      Totals:         3      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10175 ;;Total ram usage:       19 bytes
 10176 ;; Hardware stack levels used:    1
 10177 ;; Hardware stack levels required when called:    3
 10178 ;; This function calls:
 10179 ;;		Nothing
 10180 ;; This function is called by:
 10181 ;;		_dtoa
 10182 ;; This function uses a non-reentrant model
 10183 ;;
 10184                           
 10185                           
 10186                           ;psect for function ___aomod
 10187  0E31                     ___aomod:	
 10188                           
 10189                           ;incstack = 0
 10190                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
 10191  0E31  01F2               	clrf	___aomod@sign
 10192  0E32  3028               	movlw	low ___aomod@dividend
 10193  0E33  0086               	movwf	6
 10194  0E34  3000               	movlw	high ___aomod@dividend
 10195  0E35  0087               	movwf	7
 10196  0E36  3F47               	moviw [7]fsr1
 10197  0E37  00F0               	movwf	??___aomod
 10198  0E38  1FF0               	btfss	??___aomod,7
 10199  0E39  2E5B               	goto	l2548
 10200  0E3A  0020               	movlb	0	; select bank0
 10201  0E3B  09A8               	comf	___aomod@dividend,f
 10202  0E3C  09A9               	comf	___aomod@dividend+1,f
 10203  0E3D  09AA               	comf	___aomod@dividend+2,f
 10204  0E3E  09AB               	comf	___aomod@dividend+3,f
 10205  0E3F  09AC               	comf	___aomod@dividend+4,f
 10206  0E40  09AD               	comf	___aomod@dividend+5,f
 10207  0E41  09AE               	comf	___aomod@dividend+6,f
 10208  0E42  09AF               	comf	___aomod@dividend+7,f
 10209  0E43  0AA8               	incf	___aomod@dividend,f
 10210  0E44  1D03               	skipz
 10211  0E45  2E59               	goto	u203lld
 10212  0E46  0AA9               	incf	___aomod@dividend+1,f
 10213  0E47  1D03               	skipz
 10214  0E48  2E59               	goto	u203lld
 10215  0E49  0AAA               	incf	___aomod@dividend+2,f
 10216  0E4A  1D03               	skipz
 10217  0E4B  2E59               	goto	u203lld
 10218  0E4C  0AAB               	incf	___aomod@dividend+3,f
 10219  0E4D  1D03               	skipz
 10220  0E4E  2E59               	goto	u203lld
 10221  0E4F  0AAC               	incf	___aomod@dividend+4,f
 10222  0E50  1D03               	skipz
 10223  0E51  2E59               	goto	u203lld
 10224  0E52  0AAD               	incf	___aomod@dividend+5,f
 10225  0E53  1D03               	skipz
 10226  0E54  2E59               	goto	u203lld
 10227  0E55  0AAE               	incf	___aomod@dividend+6,f
 10228  0E56  1D03               	skipz
 10229  0E57  2E59               	goto	u203lld
 10230  0E58  0AAF               	incf	___aomod@dividend+7,f
 10231  0E59                     u203lld:	
 10232  0E59  01F2               	clrf	___aomod@sign
 10233  0E5A  0AF2               	incf	___aomod@sign,f
 10234  0E5B                     l2548:	
 10235  0E5B  3020               	movlw	low ___aomod@divisor
 10236  0E5C  0086               	movwf	6
 10237  0E5D  3000               	movlw	high ___aomod@divisor
 10238  0E5E  0087               	movwf	7
 10239  0E5F  3F47               	moviw [7]fsr1
 10240  0E60  00F0               	movwf	??___aomod
 10241  0E61  1FF0               	btfss	??___aomod,7
 10242  0E62  2E82               	goto	l2552
 10243  0E63  0020               	movlb	0	; select bank0
 10244  0E64  09A0               	comf	___aomod@divisor,f
 10245  0E65  09A1               	comf	___aomod@divisor+1,f
 10246  0E66  09A2               	comf	___aomod@divisor+2,f
 10247  0E67  09A3               	comf	___aomod@divisor+3,f
 10248  0E68  09A4               	comf	___aomod@divisor+4,f
 10249  0E69  09A5               	comf	___aomod@divisor+5,f
 10250  0E6A  09A6               	comf	___aomod@divisor+6,f
 10251  0E6B  09A7               	comf	___aomod@divisor+7,f
 10252  0E6C  0AA0               	incf	___aomod@divisor,f
 10253  0E6D  1D03               	skipz
 10254  0E6E  2E82               	goto	l2552
 10255  0E6F  0AA1               	incf	___aomod@divisor+1,f
 10256  0E70  1D03               	skipz
 10257  0E71  2E82               	goto	l2552
 10258  0E72  0AA2               	incf	___aomod@divisor+2,f
 10259  0E73  1D03               	skipz
 10260  0E74  2E82               	goto	l2552
 10261  0E75  0AA3               	incf	___aomod@divisor+3,f
 10262  0E76  1D03               	skipz
 10263  0E77  2E82               	goto	l2552
 10264  0E78  0AA4               	incf	___aomod@divisor+4,f
 10265  0E79  1D03               	skipz
 10266  0E7A  2E82               	goto	l2552
 10267  0E7B  0AA5               	incf	___aomod@divisor+5,f
 10268  0E7C  1D03               	skipz
 10269  0E7D  2E82               	goto	l2552
 10270  0E7E  0AA6               	incf	___aomod@divisor+6,f
 10271  0E7F  1D03               	skipz
 10272  0E80  2E82               	goto	l2552
 10273  0E81  0AA7               	incf	___aomod@divisor+7,f
 10274  0E82                     l2552:	
 10275  0E82  0020               	movlb	0	; select bank0
 10276  0E83  0820               	movf	___aomod@divisor,w
 10277  0E84  0421               	iorwf	___aomod@divisor+1,w
 10278  0E85  0422               	iorwf	___aomod@divisor+2,w
 10279  0E86  0423               	iorwf	___aomod@divisor+3,w
 10280  0E87  0424               	iorwf	___aomod@divisor+4,w
 10281  0E88  0425               	iorwf	___aomod@divisor+5,w
 10282  0E89  0426               	iorwf	___aomod@divisor+6,w
 10283  0E8A  0427               	iorwf	___aomod@divisor+7,w
 10284  0E8B  1903               	skipnz
 10285  0E8C  2EDA               	goto	l2568
 10286  0E8D  01F1               	clrf	___aomod@counter
 10287  0E8E  0AF1               	incf	___aomod@counter,f
 10288  0E8F                     l2560:	
 10289  0E8F  1BA7               	btfsc	___aomod@divisor+7,7
 10290  0E90  2E9E               	goto	l2562
 10291  0E91  35A0               	lslf	___aomod@divisor,f
 10292  0E92  0DA1               	rlf	___aomod@divisor+1,f
 10293  0E93  0DA2               	rlf	___aomod@divisor+2,f
 10294  0E94  0DA3               	rlf	___aomod@divisor+3,f
 10295  0E95  0DA4               	rlf	___aomod@divisor+4,f
 10296  0E96  0DA5               	rlf	___aomod@divisor+5,f
 10297  0E97  0DA6               	rlf	___aomod@divisor+6,f
 10298  0E98  0DA7               	rlf	___aomod@divisor+7,f
 10299  0E99  3001               	movlw	1
 10300  0E9A  00F0               	movwf	??___aomod
 10301  0E9B  0870               	movf	??___aomod,w
 10302  0E9C  07F1               	addwf	___aomod@counter,f
 10303  0E9D  2E8F               	goto	l2560
 10304  0E9E                     l2562:	
 10305  0E9E  0827               	movf	___aomod@divisor+7,w
 10306  0E9F  022F               	subwf	___aomod@dividend+7,w
 10307  0EA0  1D03               	skipz
 10308  0EA1  2EBC               	goto	u2085
 10309  0EA2  0826               	movf	___aomod@divisor+6,w
 10310  0EA3  022E               	subwf	___aomod@dividend+6,w
 10311  0EA4  1D03               	skipz
 10312  0EA5  2EBC               	goto	u2085
 10313  0EA6  0825               	movf	___aomod@divisor+5,w
 10314  0EA7  022D               	subwf	___aomod@dividend+5,w
 10315  0EA8  1D03               	skipz
 10316  0EA9  2EBC               	goto	u2085
 10317  0EAA  0824               	movf	___aomod@divisor+4,w
 10318  0EAB  022C               	subwf	___aomod@dividend+4,w
 10319  0EAC  1D03               	skipz
 10320  0EAD  2EBC               	goto	u2085
 10321  0EAE  0823               	movf	___aomod@divisor+3,w
 10322  0EAF  022B               	subwf	___aomod@dividend+3,w
 10323  0EB0  1D03               	skipz
 10324  0EB1  2EBC               	goto	u2085
 10325  0EB2  0822               	movf	___aomod@divisor+2,w
 10326  0EB3  022A               	subwf	___aomod@dividend+2,w
 10327  0EB4  1D03               	skipz
 10328  0EB5  2EBC               	goto	u2085
 10329  0EB6  0821               	movf	___aomod@divisor+1,w
 10330  0EB7  0229               	subwf	___aomod@dividend+1,w
 10331  0EB8  1D03               	skipz
 10332  0EB9  2EBC               	goto	u2085
 10333  0EBA  0820               	movf	___aomod@divisor,w
 10334  0EBB  0228               	subwf	___aomod@dividend,w
 10335  0EBC                     u2085:	
 10336  0EBC  1C03               	skipc
 10337  0EBD  2ECE               	goto	l2566
 10338  0EBE  0820               	movf	___aomod@divisor,w
 10339  0EBF  02A8               	subwf	___aomod@dividend,f
 10340  0EC0  0821               	movf	___aomod@divisor+1,w
 10341  0EC1  3BA9               	subwfb	___aomod@dividend+1,f
 10342  0EC2  0822               	movf	___aomod@divisor+2,w
 10343  0EC3  3BAA               	subwfb	___aomod@dividend+2,f
 10344  0EC4  0823               	movf	___aomod@divisor+3,w
 10345  0EC5  3BAB               	subwfb	___aomod@dividend+3,f
 10346  0EC6  0824               	movf	___aomod@divisor+4,w
 10347  0EC7  3BAC               	subwfb	___aomod@dividend+4,f
 10348  0EC8  0825               	movf	___aomod@divisor+5,w
 10349  0EC9  3BAD               	subwfb	___aomod@dividend+5,f
 10350  0ECA  0826               	movf	___aomod@divisor+6,w
 10351  0ECB  3BAE               	subwfb	___aomod@dividend+6,f
 10352  0ECC  0827               	movf	___aomod@divisor+7,w
 10353  0ECD  3BAF               	subwfb	___aomod@dividend+7,f
 10354  0ECE                     l2566:	
 10355  0ECE  36A7               	lsrf	___aomod@divisor+7,f
 10356  0ECF  0CA6               	rrf	___aomod@divisor+6,f
 10357  0ED0  0CA5               	rrf	___aomod@divisor+5,f
 10358  0ED1  0CA4               	rrf	___aomod@divisor+4,f
 10359  0ED2  0CA3               	rrf	___aomod@divisor+3,f
 10360  0ED3  0CA2               	rrf	___aomod@divisor+2,f
 10361  0ED4  0CA1               	rrf	___aomod@divisor+1,f
 10362  0ED5  0CA0               	rrf	___aomod@divisor,f
 10363  0ED6  3001               	movlw	1
 10364  0ED7  02F1               	subwf	___aomod@counter,f
 10365  0ED8  1D03               	btfss	3,2
 10366  0ED9  2E9E               	goto	l2562
 10367  0EDA                     l2568:	
 10368  0EDA  0872               	movf	___aomod@sign,w
 10369  0EDB  1903               	btfsc	3,2
 10370  0EDC  2EFB               	goto	l743
 10371  0EDD  09A8               	comf	___aomod@dividend,f
 10372  0EDE  09A9               	comf	___aomod@dividend+1,f
 10373  0EDF  09AA               	comf	___aomod@dividend+2,f
 10374  0EE0  09AB               	comf	___aomod@dividend+3,f
 10375  0EE1  09AC               	comf	___aomod@dividend+4,f
 10376  0EE2  09AD               	comf	___aomod@dividend+5,f
 10377  0EE3  09AE               	comf	___aomod@dividend+6,f
 10378  0EE4  09AF               	comf	___aomod@dividend+7,f
 10379  0EE5  0AA8               	incf	___aomod@dividend,f
 10380  0EE6  1D03               	skipz
 10381  0EE7  2EFB               	goto	l743
 10382  0EE8  0AA9               	incf	___aomod@dividend+1,f
 10383  0EE9  1D03               	skipz
 10384  0EEA  2EFB               	goto	l743
 10385  0EEB  0AAA               	incf	___aomod@dividend+2,f
 10386  0EEC  1D03               	skipz
 10387  0EED  2EFB               	goto	l743
 10388  0EEE  0AAB               	incf	___aomod@dividend+3,f
 10389  0EEF  1D03               	skipz
 10390  0EF0  2EFB               	goto	l743
 10391  0EF1  0AAC               	incf	___aomod@dividend+4,f
 10392  0EF2  1D03               	skipz
 10393  0EF3  2EFB               	goto	l743
 10394  0EF4  0AAD               	incf	___aomod@dividend+5,f
 10395  0EF5  1D03               	skipz
 10396  0EF6  2EFB               	goto	l743
 10397  0EF7  0AAE               	incf	___aomod@dividend+6,f
 10398  0EF8  1D03               	skipz
 10399  0EF9  2EFB               	goto	l743
 10400  0EFA  0AAF               	incf	___aomod@dividend+7,f
 10401  0EFB                     l743:	
 10402  0EFB  0020               	movlb	0	; select bank0
 10403  0EFC  0828               	movf	___aomod@dividend,w
 10404  0EFD  00A0               	movwf	?___aomod
 10405  0EFE  0829               	movf	___aomod@dividend+1,w
 10406  0EFF  00A1               	movwf	?___aomod+1
 10407  0F00  082A               	movf	___aomod@dividend+2,w
 10408  0F01  00A2               	movwf	?___aomod+2
 10409  0F02  082B               	movf	___aomod@dividend+3,w
 10410  0F03  00A3               	movwf	?___aomod+3
 10411  0F04  082C               	movf	___aomod@dividend+4,w
 10412  0F05  00A4               	movwf	?___aomod+4
 10413  0F06  082D               	movf	___aomod@dividend+5,w
 10414  0F07  00A5               	movwf	?___aomod+5
 10415  0F08  082E               	movf	___aomod@dividend+6,w
 10416  0F09  00A6               	movwf	?___aomod+6
 10417  0F0A  082F               	movf	___aomod@dividend+7,w
 10418  0F0B  00A7               	movwf	?___aomod+7
 10419  0F0C  0008               	return
 10420  0F0D                     __end_of___aomod:	
 10421                           
 10422                           	psect	text37
 10423  0F0D                     __ptext37:	
 10424 ;; *************** function ___aodiv *****************
 10425 ;; Defined at:
 10426 ;;		line 7 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\aodiv.c"
 10427 ;; Parameters:    Size  Location     Type
 10428 ;;  divisor         8    0[BANK0 ] long long 
 10429 ;;  dividend        8    8[BANK0 ] long long 
 10430 ;; Auto vars:     Size  Location     Type
 10431 ;;  quotient        8    3[COMMON] long long 
 10432 ;;  sign            1    2[COMMON] unsigned char 
 10433 ;;  counter         1    1[COMMON] unsigned char 
 10434 ;; Return value:  Size  Location     Type
 10435 ;;                  8    0[BANK0 ] long long 
 10436 ;; Registers used:
 10437 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10438 ;; Tracked objects:
 10439 ;;		On entry : 0/0
 10440 ;;		On exit  : 0/0
 10441 ;;		Unchanged: 0/0
 10442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10443 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10444 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10445 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10446 ;;      Totals:        11      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10447 ;;Total ram usage:       27 bytes
 10448 ;; Hardware stack levels used:    1
 10449 ;; Hardware stack levels required when called:    3
 10450 ;; This function calls:
 10451 ;;		Nothing
 10452 ;; This function is called by:
 10453 ;;		_dtoa
 10454 ;; This function uses a non-reentrant model
 10455 ;;
 10456                           
 10457                           
 10458                           ;psect for function ___aodiv
 10459  0F0D                     ___aodiv:	
 10460                           
 10461                           ;incstack = 0
 10462                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
 10463  0F0D  01F2               	clrf	___aodiv@sign
 10464  0F0E  3020               	movlw	low ___aodiv@divisor
 10465  0F0F  0086               	movwf	6
 10466  0F10  3000               	movlw	high ___aodiv@divisor
 10467  0F11  0087               	movwf	7
 10468  0F12  3F47               	moviw [7]fsr1
 10469  0F13  00F0               	movwf	??___aodiv
 10470  0F14  1FF0               	btfss	??___aodiv,7
 10471  0F15  2F37               	goto	l2510
 10472  0F16  0020               	movlb	0	; select bank0
 10473  0F17  09A0               	comf	___aodiv@divisor,f
 10474  0F18  09A1               	comf	___aodiv@divisor+1,f
 10475  0F19  09A2               	comf	___aodiv@divisor+2,f
 10476  0F1A  09A3               	comf	___aodiv@divisor+3,f
 10477  0F1B  09A4               	comf	___aodiv@divisor+4,f
 10478  0F1C  09A5               	comf	___aodiv@divisor+5,f
 10479  0F1D  09A6               	comf	___aodiv@divisor+6,f
 10480  0F1E  09A7               	comf	___aodiv@divisor+7,f
 10481  0F1F  0AA0               	incf	___aodiv@divisor,f
 10482  0F20  1D03               	skipz
 10483  0F21  2F35               	goto	u192lld
 10484  0F22  0AA1               	incf	___aodiv@divisor+1,f
 10485  0F23  1D03               	skipz
 10486  0F24  2F35               	goto	u192lld
 10487  0F25  0AA2               	incf	___aodiv@divisor+2,f
 10488  0F26  1D03               	skipz
 10489  0F27  2F35               	goto	u192lld
 10490  0F28  0AA3               	incf	___aodiv@divisor+3,f
 10491  0F29  1D03               	skipz
 10492  0F2A  2F35               	goto	u192lld
 10493  0F2B  0AA4               	incf	___aodiv@divisor+4,f
 10494  0F2C  1D03               	skipz
 10495  0F2D  2F35               	goto	u192lld
 10496  0F2E  0AA5               	incf	___aodiv@divisor+5,f
 10497  0F2F  1D03               	skipz
 10498  0F30  2F35               	goto	u192lld
 10499  0F31  0AA6               	incf	___aodiv@divisor+6,f
 10500  0F32  1D03               	skipz
 10501  0F33  2F35               	goto	u192lld
 10502  0F34  0AA7               	incf	___aodiv@divisor+7,f
 10503  0F35                     u192lld:	
 10504  0F35  01F2               	clrf	___aodiv@sign
 10505  0F36  0AF2               	incf	___aodiv@sign,f
 10506  0F37                     l2510:	
 10507  0F37  3028               	movlw	low ___aodiv@dividend
 10508  0F38  0086               	movwf	6
 10509  0F39  3000               	movlw	high ___aodiv@dividend
 10510  0F3A  0087               	movwf	7
 10511  0F3B  3F47               	moviw [7]fsr1
 10512  0F3C  00F0               	movwf	??___aodiv
 10513  0F3D  1FF0               	btfss	??___aodiv,7
 10514  0F3E  2F62               	goto	l2516
 10515  0F3F  0020               	movlb	0	; select bank0
 10516  0F40  09A8               	comf	___aodiv@dividend,f
 10517  0F41  09A9               	comf	___aodiv@dividend+1,f
 10518  0F42  09AA               	comf	___aodiv@dividend+2,f
 10519  0F43  09AB               	comf	___aodiv@dividend+3,f
 10520  0F44  09AC               	comf	___aodiv@dividend+4,f
 10521  0F45  09AD               	comf	___aodiv@dividend+5,f
 10522  0F46  09AE               	comf	___aodiv@dividend+6,f
 10523  0F47  09AF               	comf	___aodiv@dividend+7,f
 10524  0F48  0AA8               	incf	___aodiv@dividend,f
 10525  0F49  1D03               	skipz
 10526  0F4A  2F5E               	goto	l2514
 10527  0F4B  0AA9               	incf	___aodiv@dividend+1,f
 10528  0F4C  1D03               	skipz
 10529  0F4D  2F5E               	goto	l2514
 10530  0F4E  0AAA               	incf	___aodiv@dividend+2,f
 10531  0F4F  1D03               	skipz
 10532  0F50  2F5E               	goto	l2514
 10533  0F51  0AAB               	incf	___aodiv@dividend+3,f
 10534  0F52  1D03               	skipz
 10535  0F53  2F5E               	goto	l2514
 10536  0F54  0AAC               	incf	___aodiv@dividend+4,f
 10537  0F55  1D03               	skipz
 10538  0F56  2F5E               	goto	l2514
 10539  0F57  0AAD               	incf	___aodiv@dividend+5,f
 10540  0F58  1D03               	skipz
 10541  0F59  2F5E               	goto	l2514
 10542  0F5A  0AAE               	incf	___aodiv@dividend+6,f
 10543  0F5B  1D03               	skipz
 10544  0F5C  2F5E               	goto	l2514
 10545  0F5D  0AAF               	incf	___aodiv@dividend+7,f
 10546  0F5E                     l2514:	
 10547  0F5E  3001               	movlw	1
 10548  0F5F  00F0               	movwf	??___aodiv
 10549  0F60  0870               	movf	??___aodiv,w
 10550  0F61  06F2               	xorwf	___aodiv@sign,f
 10551  0F62                     l2516:	
 10552  0F62  3073               	movlw	low ___aodiv@quotient
 10553  0F63  0086               	movwf	6
 10554  0F64  3000               	movlw	high ___aodiv@quotient
 10555  0F65  0087               	movwf	7
 10556  0F66  3008               	movlw	8
 10557  0F67  00F0               	movwf	??___aodiv
 10558  0F68  3000               	movlw	0
 10559  0F69                     u1950:	
 10560  0F69  001E               	movwi fsr1++
 10561  0F6A  0BF0               	decfsz	??___aodiv,f
 10562  0F6B  2F69               	goto	u1950
 10563  0F6C  0020               	movlb	0	; select bank0
 10564  0F6D  0820               	movf	___aodiv@divisor,w
 10565  0F6E  0421               	iorwf	___aodiv@divisor+1,w
 10566  0F6F  0422               	iorwf	___aodiv@divisor+2,w
 10567  0F70  0423               	iorwf	___aodiv@divisor+3,w
 10568  0F71  0424               	iorwf	___aodiv@divisor+4,w
 10569  0F72  0425               	iorwf	___aodiv@divisor+5,w
 10570  0F73  0426               	iorwf	___aodiv@divisor+6,w
 10571  0F74  0427               	iorwf	___aodiv@divisor+7,w
 10572  0F75  1903               	skipnz
 10573  0F76  2FCD               	goto	l2538
 10574  0F77  01F1               	clrf	___aodiv@counter
 10575  0F78  0AF1               	incf	___aodiv@counter,f
 10576  0F79                     l2526:	
 10577  0F79  1BA7               	btfsc	___aodiv@divisor+7,7
 10578  0F7A  2F88               	goto	l2528
 10579  0F7B  35A0               	lslf	___aodiv@divisor,f
 10580  0F7C  0DA1               	rlf	___aodiv@divisor+1,f
 10581  0F7D  0DA2               	rlf	___aodiv@divisor+2,f
 10582  0F7E  0DA3               	rlf	___aodiv@divisor+3,f
 10583  0F7F  0DA4               	rlf	___aodiv@divisor+4,f
 10584  0F80  0DA5               	rlf	___aodiv@divisor+5,f
 10585  0F81  0DA6               	rlf	___aodiv@divisor+6,f
 10586  0F82  0DA7               	rlf	___aodiv@divisor+7,f
 10587  0F83  3001               	movlw	1
 10588  0F84  00F0               	movwf	??___aodiv
 10589  0F85  0870               	movf	??___aodiv,w
 10590  0F86  07F1               	addwf	___aodiv@counter,f
 10591  0F87  2F79               	goto	l2526
 10592  0F88                     l2528:	
 10593  0F88  35F3               	lslf	___aodiv@quotient,f
 10594  0F89  0DF4               	rlf	___aodiv@quotient+1,f
 10595  0F8A  0DF5               	rlf	___aodiv@quotient+2,f
 10596  0F8B  0DF6               	rlf	___aodiv@quotient+3,f
 10597  0F8C  0DF7               	rlf	___aodiv@quotient+4,f
 10598  0F8D  0DF8               	rlf	___aodiv@quotient+5,f
 10599  0F8E  0DF9               	rlf	___aodiv@quotient+6,f
 10600  0F8F  0DFA               	rlf	___aodiv@quotient+7,f
 10601  0F90  0827               	movf	___aodiv@divisor+7,w
 10602  0F91  022F               	subwf	___aodiv@dividend+7,w
 10603  0F92  1D03               	skipz
 10604  0F93  2FAE               	goto	u1985
 10605  0F94  0826               	movf	___aodiv@divisor+6,w
 10606  0F95  022E               	subwf	___aodiv@dividend+6,w
 10607  0F96  1D03               	skipz
 10608  0F97  2FAE               	goto	u1985
 10609  0F98  0825               	movf	___aodiv@divisor+5,w
 10610  0F99  022D               	subwf	___aodiv@dividend+5,w
 10611  0F9A  1D03               	skipz
 10612  0F9B  2FAE               	goto	u1985
 10613  0F9C  0824               	movf	___aodiv@divisor+4,w
 10614  0F9D  022C               	subwf	___aodiv@dividend+4,w
 10615  0F9E  1D03               	skipz
 10616  0F9F  2FAE               	goto	u1985
 10617  0FA0  0823               	movf	___aodiv@divisor+3,w
 10618  0FA1  022B               	subwf	___aodiv@dividend+3,w
 10619  0FA2  1D03               	skipz
 10620  0FA3  2FAE               	goto	u1985
 10621  0FA4  0822               	movf	___aodiv@divisor+2,w
 10622  0FA5  022A               	subwf	___aodiv@dividend+2,w
 10623  0FA6  1D03               	skipz
 10624  0FA7  2FAE               	goto	u1985
 10625  0FA8  0821               	movf	___aodiv@divisor+1,w
 10626  0FA9  0229               	subwf	___aodiv@dividend+1,w
 10627  0FAA  1D03               	skipz
 10628  0FAB  2FAE               	goto	u1985
 10629  0FAC  0820               	movf	___aodiv@divisor,w
 10630  0FAD  0228               	subwf	___aodiv@dividend,w
 10631  0FAE                     u1985:	
 10632  0FAE  1C03               	skipc
 10633  0FAF  2FC1               	goto	l2536
 10634  0FB0  0820               	movf	___aodiv@divisor,w
 10635  0FB1  02A8               	subwf	___aodiv@dividend,f
 10636  0FB2  0821               	movf	___aodiv@divisor+1,w
 10637  0FB3  3BA9               	subwfb	___aodiv@dividend+1,f
 10638  0FB4  0822               	movf	___aodiv@divisor+2,w
 10639  0FB5  3BAA               	subwfb	___aodiv@dividend+2,f
 10640  0FB6  0823               	movf	___aodiv@divisor+3,w
 10641  0FB7  3BAB               	subwfb	___aodiv@dividend+3,f
 10642  0FB8  0824               	movf	___aodiv@divisor+4,w
 10643  0FB9  3BAC               	subwfb	___aodiv@dividend+4,f
 10644  0FBA  0825               	movf	___aodiv@divisor+5,w
 10645  0FBB  3BAD               	subwfb	___aodiv@dividend+5,f
 10646  0FBC  0826               	movf	___aodiv@divisor+6,w
 10647  0FBD  3BAE               	subwfb	___aodiv@dividend+6,f
 10648  0FBE  0827               	movf	___aodiv@divisor+7,w
 10649  0FBF  3BAF               	subwfb	___aodiv@dividend+7,f
 10650  0FC0  1473               	bsf	___aodiv@quotient,0
 10651  0FC1                     l2536:	
 10652  0FC1  36A7               	lsrf	___aodiv@divisor+7,f
 10653  0FC2  0CA6               	rrf	___aodiv@divisor+6,f
 10654  0FC3  0CA5               	rrf	___aodiv@divisor+5,f
 10655  0FC4  0CA4               	rrf	___aodiv@divisor+4,f
 10656  0FC5  0CA3               	rrf	___aodiv@divisor+3,f
 10657  0FC6  0CA2               	rrf	___aodiv@divisor+2,f
 10658  0FC7  0CA1               	rrf	___aodiv@divisor+1,f
 10659  0FC8  0CA0               	rrf	___aodiv@divisor,f
 10660  0FC9  3001               	movlw	1
 10661  0FCA  02F1               	subwf	___aodiv@counter,f
 10662  0FCB  1D03               	btfss	3,2
 10663  0FCC  2F88               	goto	l2528
 10664  0FCD                     l2538:	
 10665  0FCD  0872               	movf	___aodiv@sign,w
 10666  0FCE  1903               	btfsc	3,2
 10667  0FCF  2FEE               	goto	l730
 10668  0FD0  09F3               	comf	___aodiv@quotient,f
 10669  0FD1  09F4               	comf	___aodiv@quotient+1,f
 10670  0FD2  09F5               	comf	___aodiv@quotient+2,f
 10671  0FD3  09F6               	comf	___aodiv@quotient+3,f
 10672  0FD4  09F7               	comf	___aodiv@quotient+4,f
 10673  0FD5  09F8               	comf	___aodiv@quotient+5,f
 10674  0FD6  09F9               	comf	___aodiv@quotient+6,f
 10675  0FD7  09FA               	comf	___aodiv@quotient+7,f
 10676  0FD8  0AF3               	incf	___aodiv@quotient,f
 10677  0FD9  1D03               	skipz
 10678  0FDA  2FEE               	goto	l730
 10679  0FDB  0AF4               	incf	___aodiv@quotient+1,f
 10680  0FDC  1D03               	skipz
 10681  0FDD  2FEE               	goto	l730
 10682  0FDE  0AF5               	incf	___aodiv@quotient+2,f
 10683  0FDF  1D03               	skipz
 10684  0FE0  2FEE               	goto	l730
 10685  0FE1  0AF6               	incf	___aodiv@quotient+3,f
 10686  0FE2  1D03               	skipz
 10687  0FE3  2FEE               	goto	l730
 10688  0FE4  0AF7               	incf	___aodiv@quotient+4,f
 10689  0FE5  1D03               	skipz
 10690  0FE6  2FEE               	goto	l730
 10691  0FE7  0AF8               	incf	___aodiv@quotient+5,f
 10692  0FE8  1D03               	skipz
 10693  0FE9  2FEE               	goto	l730
 10694  0FEA  0AF9               	incf	___aodiv@quotient+6,f
 10695  0FEB  1D03               	skipz
 10696  0FEC  2FEE               	goto	l730
 10697  0FED  0AFA               	incf	___aodiv@quotient+7,f
 10698  0FEE                     l730:	
 10699  0FEE  0873               	movf	___aodiv@quotient,w
 10700  0FEF  0020               	movlb	0	; select bank0
 10701  0FF0  00A0               	movwf	?___aodiv
 10702  0FF1  0874               	movf	___aodiv@quotient+1,w
 10703  0FF2  00A1               	movwf	?___aodiv+1
 10704  0FF3  0875               	movf	___aodiv@quotient+2,w
 10705  0FF4  00A2               	movwf	?___aodiv+2
 10706  0FF5  0876               	movf	___aodiv@quotient+3,w
 10707  0FF6  00A3               	movwf	?___aodiv+3
 10708  0FF7  0877               	movf	___aodiv@quotient+4,w
 10709  0FF8  00A4               	movwf	?___aodiv+4
 10710  0FF9  0878               	movf	___aodiv@quotient+5,w
 10711  0FFA  00A5               	movwf	?___aodiv+5
 10712  0FFB  0879               	movf	___aodiv@quotient+6,w
 10713  0FFC  00A6               	movwf	?___aodiv+6
 10714  0FFD  087A               	movf	___aodiv@quotient+7,w
 10715  0FFE  00A7               	movwf	?___aodiv+7
 10716  0FFF  0008               	return
 10717  1000                     __end_of___aodiv:	
 10718                           
 10719                           	psect	text38
 10720  0BFF                     __ptext38:	
 10721 ;; *************** function _atoi *****************
 10722 ;; Defined at:
 10723 ;;		line 4 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\atoi.c"
 10724 ;; Parameters:    Size  Location     Type
 10725 ;;  s               2    6[COMMON] PTR const unsigned char 
 10726 ;;		 -> STR_12(7), STR_11(18), STR_10(23), STR_7(14), 
 10727 ;;		 -> STR_6(26), STR_5(26), STR_4(26), STR_3(26), 
 10728 ;;		 -> STR_2(26), STR_1(26), 
 10729 ;; Auto vars:     Size  Location     Type
 10730 ;;  n               2    7[BANK0 ] int 
 10731 ;;  neg             2    0[BANK0 ] int 
 10732 ;; Return value:  Size  Location     Type
 10733 ;;                  2    6[COMMON] int 
 10734 ;; Registers used:
 10735 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10736 ;; Tracked objects:
 10737 ;;		On entry : 0/0
 10738 ;;		On exit  : 0/0
 10739 ;;		Unchanged: 0/0
 10740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10741 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10742 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10743 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10744 ;;      Totals:         6       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10745 ;;Total ram usage:       15 bytes
 10746 ;; Hardware stack levels used:    1
 10747 ;; Hardware stack levels required when called:    4
 10748 ;; This function calls:
 10749 ;;		___wmul
 10750 ;;		_isdigit
 10751 ;;		_isspace
 10752 ;; This function is called by:
 10753 ;;		_vfpfcnvrt
 10754 ;; This function uses a non-reentrant model
 10755 ;;
 10756                           
 10757                           
 10758                           ;psect for function _atoi
 10759  0BFF                     _atoi:	
 10760                           
 10761                           ;incstack = 0
 10762                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10763  0BFF  0020               	movlb	0	; select bank0
 10764  0C00  01A7               	clrf	atoi@n
 10765  0C01  01A8               	clrf	atoi@n+1
 10766  0C02  01A0               	clrf	atoi@neg
 10767  0C03  01A1               	clrf	atoi@neg+1
 10768  0C04                     l2760:	
 10769  0C04  01A6               	clrf	_atoi$989
 10770  0C05  0AA6               	incf	_atoi$989,f
 10771  0C06  0876               	movf	atoi@s,w
 10772  0C07  0084               	movwf	4
 10773  0C08  0877               	movf	atoi@s+1,w
 10774  0C09  0085               	movwf	5
 10775  0C0A  0012               	moviw fsr0++
 10776  0C0B  3A20               	xorlw	32
 10777  0C0C  1903               	btfsc	3,2
 10778  0C0D  2C20               	goto	l2768
 10779  0C0E  0876               	movf	atoi@s,w
 10780  0C0F  0084               	movwf	4
 10781  0C10  0877               	movf	atoi@s+1,w
 10782  0C11  0085               	movwf	5
 10783  0C12  0800               	movf	0,w	;code access
 10784  0C13  3EF7               	addlw	247
 10785  0C14  00F8               	movwf	??_atoi
 10786  0C15  30FF               	movlw	255
 10787  0C16  1803               	skipnc
 10788  0C17  3000               	movlw	0
 10789  0C18  00F9               	movwf	??_atoi+1
 10790  0C19  3000               	movlw	0
 10791  0C1A  0279               	subwf	??_atoi+1,w
 10792  0C1B  3005               	movlw	5
 10793  0C1C  1903               	skipnz
 10794  0C1D  0278               	subwf	??_atoi,w
 10795  0C1E  1803               	btfsc	3,0
 10796  0C1F  01A6               	clrf	_atoi$989
 10797  0C20                     l2768:	
 10798  0C20  0826               	movf	_atoi$989,w
 10799  0C21  00F8               	movwf	??_atoi
 10800  0C22  01F9               	clrf	??_atoi+1
 10801  0C23  0878               	movf	??_atoi,w
 10802  0C24  00A2               	movwf	_atoi$988
 10803  0C25  0879               	movf	??_atoi+1,w
 10804  0C26  00A3               	movwf	_atoi$988+1
 10805  0C27  0822               	movf	_atoi$988,w
 10806  0C28  0423               	iorwf	_atoi$988+1,w
 10807  0C29  1903               	btfsc	3,2
 10808  0C2A  2C35               	goto	l2776
 10809  0C2B  3001               	movlw	1
 10810  0C2C  07F6               	addwf	atoi@s,f
 10811  0C2D  3000               	movlw	0
 10812  0C2E  3DF7               	addwfc	atoi@s+1,f
 10813  0C2F  2C04               	goto	l2760
 10814  0C30                     l2774:	
 10815  0C30  3001               	movlw	1
 10816  0C31  00A0               	movwf	atoi@neg
 10817  0C32  3000               	movlw	0
 10818  0C33  00A1               	movwf	atoi@neg+1
 10819  0C34  2C68               	goto	l1105
 10820  0C35                     l2776:	
 10821  0C35  0876               	movf	atoi@s,w
 10822  0C36  0084               	movwf	4
 10823  0C37  0877               	movf	atoi@s+1,w
 10824  0C38  0085               	movwf	5
 10825  0C39  0800               	movf	0,w	;code access
 10826  0C3A  00F8               	movwf	??_atoi
 10827  0C3B  01F9               	clrf	??_atoi+1
 10828                           
 10829                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10830                           ; Switch size 1, requested type "simple"
 10831                           ; Number of cases is 1, Range of values is 0 to 0
 10832                           ; switch strategies available:
 10833                           ; Name         Instructions Cycles
 10834                           ; simple_byte            4     3 (average)
 10835                           ; direct_byte            8     6 (fixed)
 10836                           ; jumptable            260     6 (fixed)
 10837                           ;	Chosen strategy is simple_byte
 10838  0C3C  0879               	movf	??_atoi+1,w
 10839  0C3D  3A00               	xorlw	0	; case 0
 10840  0C3E  1903               	skipnz
 10841  0C3F  2C41               	goto	l4298
 10842  0C40  2C6C               	goto	l2782
 10843  0C41                     l4298:	
 10844                           
 10845                           ; Switch size 1, requested type "simple"
 10846                           ; Number of cases is 2, Range of values is 43 to 45
 10847                           ; switch strategies available:
 10848                           ; Name         Instructions Cycles
 10849                           ; simple_byte            7     4 (average)
 10850                           ; direct_byte           15     9 (fixed)
 10851                           ; jumptable            263     9 (fixed)
 10852                           ;	Chosen strategy is simple_byte
 10853  0C41  0878               	movf	??_atoi,w
 10854  0C42  3A2B               	xorlw	43	; case 43
 10855  0C43  1903               	skipnz
 10856  0C44  2C68               	goto	l1105
 10857  0C45  3A06               	xorlw	6	; case 45
 10858  0C46  1903               	skipnz
 10859  0C47  2C30               	goto	l2774
 10860  0C48  2C6C               	goto	l2782
 10861  0C49                     l2778:	
 10862  0C49  0876               	movf	atoi@s,w
 10863  0C4A  0084               	movwf	4
 10864  0C4B  0877               	movf	atoi@s+1,w
 10865  0C4C  0085               	movwf	5
 10866  0C4D  0800               	movf	0,w	;code access
 10867  0C4E  00F8               	movwf	??_atoi
 10868  0C4F  0828               	movf	atoi@n+1,w
 10869  0C50  00F1               	movwf	___wmul@multiplier+1
 10870  0C51  0827               	movf	atoi@n,w
 10871  0C52  00F0               	movwf	___wmul@multiplier
 10872  0C53  300A               	movlw	10
 10873  0C54  00F2               	movwf	___wmul@multiplicand
 10874  0C55  3000               	movlw	0
 10875  0C56  00F3               	movwf	___wmul@multiplicand+1
 10876  0C57  3197  2743  318B   	fcall	___wmul
 10877  0C5A  0871               	movf	?___wmul+1,w
 10878  0C5B  00FA               	movwf	??_atoi+2
 10879  0C5C  0878               	movf	??_atoi,w
 10880  0C5D  0270               	subwf	?___wmul,w
 10881  0C5E  00F9               	movwf	??_atoi+1
 10882  0C5F  1C03               	skipc
 10883  0C60  03FA               	decf	??_atoi+2,f
 10884  0C61  0879               	movf	??_atoi+1,w
 10885  0C62  3E30               	addlw	48
 10886  0C63  0020               	movlb	0	; select bank0
 10887  0C64  00A7               	movwf	atoi@n
 10888  0C65  3000               	movlw	0
 10889  0C66  3D7A               	addwfc	??_atoi+2,w
 10890  0C67  00A8               	movwf	atoi@n+1
 10891  0C68                     l1105:	
 10892  0C68  3001               	movlw	1
 10893  0C69  07F6               	addwf	atoi@s,f
 10894  0C6A  3000               	movlw	0
 10895  0C6B  3DF7               	addwfc	atoi@s+1,f
 10896  0C6C                     l2782:	
 10897  0C6C  0876               	movf	atoi@s,w
 10898  0C6D  0084               	movwf	4
 10899  0C6E  0877               	movf	atoi@s+1,w
 10900  0C6F  0085               	movwf	5
 10901  0C70  0800               	movf	0,w	;code access
 10902  0C71  3ED0               	addlw	208
 10903  0C72  00F8               	movwf	??_atoi
 10904  0C73  30FF               	movlw	255
 10905  0C74  1803               	skipnc
 10906  0C75  3000               	movlw	0
 10907  0C76  00F9               	movwf	??_atoi+1
 10908  0C77  3000               	movlw	0
 10909  0C78  0279               	subwf	??_atoi+1,w
 10910  0C79  300A               	movlw	10
 10911  0C7A  1903               	skipnz
 10912  0C7B  0278               	subwf	??_atoi,w
 10913  0C7C  1803               	btfsc	3,0
 10914  0C7D  2C80               	goto	u2590
 10915  0C7E  3001               	movlw	1
 10916  0C7F  2C81               	goto	u2600
 10917  0C80                     u2590:	
 10918  0C80  3000               	movlw	0
 10919  0C81                     u2600:	
 10920  0C81  00FA               	movwf	??_atoi+2
 10921  0C82  01FB               	clrf	??_atoi+3
 10922  0C83  087A               	movf	??_atoi+2,w
 10923  0C84  00A4               	movwf	_atoi$990
 10924  0C85  087B               	movf	??_atoi+3,w
 10925  0C86  00A5               	movwf	_atoi$990+1
 10926  0C87  0824               	movf	_atoi$990,w
 10927  0C88  0425               	iorwf	_atoi$990+1,w
 10928  0C89  1D03               	btfss	3,2
 10929  0C8A  2C49               	goto	l2778
 10930  0C8B  0820               	movf	atoi@neg,w
 10931  0C8C  0421               	iorwf	atoi@neg+1,w
 10932  0C8D  1D03               	btfss	3,2
 10933  0C8E  2C9B               	goto	l2792
 10934  0C8F  0927               	comf	atoi@n,w
 10935  0C90  00F8               	movwf	??_atoi
 10936  0C91  0928               	comf	atoi@n+1,w
 10937  0C92  00F9               	movwf	??_atoi+1
 10938  0C93  0AF8               	incf	??_atoi,f
 10939  0C94  1903               	skipnz
 10940  0C95  0AF9               	incf	??_atoi+1,f
 10941  0C96  0878               	movf	??_atoi,w
 10942  0C97  00F6               	movwf	?_atoi
 10943  0C98  0879               	movf	??_atoi+1,w
 10944  0C99  00F7               	movwf	?_atoi+1
 10945  0C9A  0008               	return
 10946  0C9B                     l2792:	
 10947  0C9B  0828               	movf	atoi@n+1,w
 10948  0C9C  00F7               	movwf	?_atoi+1
 10949  0C9D  0827               	movf	atoi@n,w
 10950  0C9E  00F6               	movwf	?_atoi
 10951  0C9F  0008               	return
 10952  0CA0                     __end_of_atoi:	
 10953                           
 10954                           	psect	text39
 10955  175E                     __ptext39:	
 10956 ;; *************** function _isspace *****************
 10957 ;; Defined at:
 10958 ;;		line 5 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\isspace.c"
 10959 ;; Parameters:    Size  Location     Type
 10960 ;;  c               2    0[COMMON] int 
 10961 ;; Auto vars:     Size  Location     Type
 10962 ;;		None
 10963 ;; Return value:  Size  Location     Type
 10964 ;;                  2    0[COMMON] int 
 10965 ;; Registers used:
 10966 ;;		wreg, status,2, status,0
 10967 ;; Tracked objects:
 10968 ;;		On entry : 0/0
 10969 ;;		On exit  : 0/0
 10970 ;;		Unchanged: 0/0
 10971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10972 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10973 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10974 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10975 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10976 ;;Total ram usage:        5 bytes
 10977 ;; Hardware stack levels used:    1
 10978 ;; Hardware stack levels required when called:    3
 10979 ;; This function calls:
 10980 ;;		Nothing
 10981 ;; This function is called by:
 10982 ;;		_atoi
 10983 ;; This function uses a non-reentrant model
 10984 ;;
 10985                           
 10986                           
 10987                           ;psect for function _isspace
 10988  175E                     _isspace:	
 10989                           
 10990                           ;incstack = 0
 10991                           ; Regs used in _isspace: [wreg+status,2+status,0]
 10992  175E  01F4               	clrf	_isspace$1015
 10993  175F  0AF4               	incf	_isspace$1015,f
 10994  1760  3020               	movlw	32
 10995  1761  0670               	xorwf	isspace@c,w
 10996  1762  0471               	iorwf	isspace@c+1,w
 10997  1763  1903               	btfsc	3,2
 10998  1764  2F72               	goto	l2580
 10999  1765  0870               	movf	isspace@c,w
 11000  1766  3EF7               	addlw	247
 11001  1767  00F2               	movwf	??_isspace
 11002  1768  30FF               	movlw	255
 11003  1769  3D71               	addwfc	isspace@c+1,w
 11004  176A  00F3               	movwf	??_isspace+1
 11005  176B  3000               	movlw	0
 11006  176C  0273               	subwf	??_isspace+1,w
 11007  176D  3005               	movlw	5
 11008  176E  1903               	skipnz
 11009  176F  0272               	subwf	??_isspace,w
 11010  1770  1803               	btfsc	3,0
 11011  1771  01F4               	clrf	_isspace$1015
 11012  1772                     l2580:	
 11013  1772  0874               	movf	_isspace$1015,w
 11014  1773  00F2               	movwf	??_isspace
 11015  1774  01F3               	clrf	??_isspace+1
 11016  1775  0872               	movf	??_isspace,w
 11017  1776  00F0               	movwf	?_isspace
 11018  1777  0873               	movf	??_isspace+1,w
 11019  1778  00F1               	movwf	?_isspace+1
 11020  1779  0008               	return
 11021  177A                     __end_of_isspace:	
 11022                           
 11023                           	psect	text40
 11024  16E7                     __ptext40:	
 11025 ;; *************** function _isdigit *****************
 11026 ;; Defined at:
 11027 ;;		line 5 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\isdigit.c"
 11028 ;; Parameters:    Size  Location     Type
 11029 ;;  c               2    0[COMMON] int 
 11030 ;; Auto vars:     Size  Location     Type
 11031 ;;		None
 11032 ;; Return value:  Size  Location     Type
 11033 ;;                  2    0[COMMON] int 
 11034 ;; Registers used:
 11035 ;;		wreg, status,2, status,0
 11036 ;; Tracked objects:
 11037 ;;		On entry : 0/0
 11038 ;;		On exit  : 0/0
 11039 ;;		Unchanged: 0/0
 11040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11041 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11043 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11044 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11045 ;;Total ram usage:        6 bytes
 11046 ;; Hardware stack levels used:    1
 11047 ;; Hardware stack levels required when called:    3
 11048 ;; This function calls:
 11049 ;;		Nothing
 11050 ;; This function is called by:
 11051 ;;		_vfpfcnvrt
 11052 ;;		_atoi
 11053 ;; This function uses a non-reentrant model
 11054 ;;
 11055                           
 11056                           
 11057                           ;psect for function _isdigit
 11058  16E7                     _isdigit:	
 11059                           
 11060                           ;incstack = 0
 11061                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 11062  16E7  0870               	movf	isdigit@c,w
 11063  16E8  3ED0               	addlw	208
 11064  16E9  00F2               	movwf	??_isdigit
 11065  16EA  30FF               	movlw	255
 11066  16EB  3D71               	addwfc	isdigit@c+1,w
 11067  16EC  00F3               	movwf	??_isdigit+1
 11068  16ED  3000               	movlw	0
 11069  16EE  0273               	subwf	??_isdigit+1,w
 11070  16EF  300A               	movlw	10
 11071  16F0  1903               	skipnz
 11072  16F1  0272               	subwf	??_isdigit,w
 11073  16F2  1803               	btfsc	3,0
 11074  16F3  2EF6               	goto	u1850
 11075  16F4  3001               	movlw	1
 11076  16F5  2EF7               	goto	u1860
 11077  16F6                     u1850:	
 11078  16F6  3000               	movlw	0
 11079  16F7                     u1860:	
 11080  16F7  00F4               	movwf	??_isdigit+2
 11081  16F8  01F5               	clrf	??_isdigit+3
 11082  16F9  0874               	movf	??_isdigit+2,w
 11083  16FA  00F0               	movwf	?_isdigit
 11084  16FB  0875               	movf	??_isdigit+3,w
 11085  16FC  00F1               	movwf	?_isdigit+1
 11086  16FD  0008               	return
 11087  16FE                     __end_of_isdigit:	
 11088                           
 11089                           	psect	text41
 11090  1743                     __ptext41:	
 11091 ;; *************** function ___wmul *****************
 11092 ;; Defined at:
 11093 ;;		line 15 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\Umul16.c"
 11094 ;; Parameters:    Size  Location     Type
 11095 ;;  multiplier      2    0[COMMON] unsigned int 
 11096 ;;  multiplicand    2    2[COMMON] unsigned int 
 11097 ;; Auto vars:     Size  Location     Type
 11098 ;;  product         2    4[COMMON] unsigned int 
 11099 ;; Return value:  Size  Location     Type
 11100 ;;                  2    0[COMMON] unsigned int 
 11101 ;; Registers used:
 11102 ;;		wreg, status,2, status,0
 11103 ;; Tracked objects:
 11104 ;;		On entry : 0/0
 11105 ;;		On exit  : 0/0
 11106 ;;		Unchanged: 0/0
 11107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11108 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11109 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11111 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11112 ;;Total ram usage:        6 bytes
 11113 ;; Hardware stack levels used:    1
 11114 ;; Hardware stack levels required when called:    3
 11115 ;; This function calls:
 11116 ;;		Nothing
 11117 ;; This function is called by:
 11118 ;;		_atoi
 11119 ;; This function uses a non-reentrant model
 11120 ;;
 11121                           
 11122                           
 11123                           ;psect for function ___wmul
 11124  1743                     ___wmul:	
 11125                           
 11126                           ;incstack = 0
 11127                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 11128  1743  01F4               	clrf	___wmul@product
 11129  1744  01F5               	clrf	___wmul@product+1
 11130  1745                     l2492:	
 11131  1745  1C70               	btfss	___wmul@multiplier,0
 11132  1746  2F4B               	goto	l630
 11133  1747  0872               	movf	___wmul@multiplicand,w
 11134  1748  07F4               	addwf	___wmul@product,f
 11135  1749  0873               	movf	___wmul@multiplicand+1,w
 11136  174A  3DF5               	addwfc	___wmul@product+1,f
 11137  174B                     l630:	
 11138  174B  3001               	movlw	1
 11139  174C                     u1885:	
 11140  174C  35F2               	lslf	___wmul@multiplicand,f
 11141  174D  0DF3               	rlf	___wmul@multiplicand+1,f
 11142  174E  0B89               	decfsz	9,f
 11143  174F  2F4C               	goto	u1885
 11144  1750  3001               	movlw	1
 11145  1751                     u1895:	
 11146  1751  36F1               	lsrf	___wmul@multiplier+1,f
 11147  1752  0CF0               	rrf	___wmul@multiplier,f
 11148  1753  0B89               	decfsz	9,f
 11149  1754  2F51               	goto	u1895
 11150  1755  0870               	movf	___wmul@multiplier,w
 11151  1756  0471               	iorwf	___wmul@multiplier+1,w
 11152  1757  1D03               	btfss	3,2
 11153  1758  2F45               	goto	l2492
 11154  1759  0875               	movf	___wmul@product+1,w
 11155  175A  00F1               	movwf	?___wmul+1
 11156  175B  0874               	movf	___wmul@product,w
 11157  175C  00F0               	movwf	?___wmul
 11158  175D  0008               	return
 11159  175E                     __end_of___wmul:	
 11160                           
 11161                           	psect	text42
 11162  0871                     __ptext42:	
 11163 ;; *************** function _SafeSetByte *****************
 11164 ;; Defined at:
 11165 ;;		line 365 in file "main.c"
 11166 ;; Parameters:    Size  Location     Type
 11167 ;;  dest            2    0[COMMON] PTR unsigned char 
 11168 ;;		 -> gps_vertical_velocity(10), gps_course_over_ground(10), gps_speed_over_ground(10), gps_vdop(8), 
 11169 ;;		 -> gps_hdop(8), gps_nav_status(4), gps_altitude(12), gps_longitude(16), 
 11170 ;;		 -> gps_latitude(16), GetNavData@temp_time(10), GetNavData@data_type(7), 
 11171 ;;  length          2    2[COMMON] int 
 11172 ;;  index           2    4[COMMON] unsigned int 
 11173 ;;  data            1    6[COMMON] unsigned char 
 11174 ;; Auto vars:     Size  Location     Type
 11175 ;;		None
 11176 ;; Return value:  Size  Location     Type
 11177 ;;                  1    wreg      void 
 11178 ;; Registers used:
 11179 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11180 ;; Tracked objects:
 11181 ;;		On entry : 0/0
 11182 ;;		On exit  : 0/0
 11183 ;;		Unchanged: 0/0
 11184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11185 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11187 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11188 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11189 ;;Total ram usage:        9 bytes
 11190 ;; Hardware stack levels used:    1
 11191 ;; Hardware stack levels required when called:    3
 11192 ;; This function calls:
 11193 ;;		Nothing
 11194 ;; This function is called by:
 11195 ;;		_GetNavData
 11196 ;; This function uses a non-reentrant model
 11197 ;;
 11198                           
 11199                           
 11200                           ;psect for function _SafeSetByte
 11201  0871                     _SafeSetByte:	
 11202                           
 11203                           ;main.c: 365: void SafeSetByte(char* dest, int length, unsigned int index, char data);ma
      +                          in.c: 366: {;main.c: 367:     if (index < length - 1)
 11204                           
 11205                           ;incstack = 0
 11206                           ; Regs used in _SafeSetByte: [wreg+fsr1l+fsr1h+status,2+status,0]
 11207  0871  0872               	movf	SafeSetByte@length,w
 11208  0872  3EFF               	addlw	255
 11209  0873  00F7               	movwf	??_SafeSetByte
 11210  0874  30FF               	movlw	255
 11211  0875  3D73               	addwfc	SafeSetByte@length+1,w
 11212  0876  00F8               	movwf	??_SafeSetByte+1
 11213  0877  0878               	movf	??_SafeSetByte+1,w
 11214  0878  0275               	subwf	SafeSetByte@index+1,w
 11215  0879  1D03               	skipz
 11216  087A  287D               	goto	u3885
 11217  087B  0877               	movf	??_SafeSetByte,w
 11218  087C  0274               	subwf	SafeSetByte@index,w
 11219  087D                     u3885:	
 11220  087D  1803               	skipnc
 11221  087E  288C               	goto	l3906
 11222                           
 11223                           ;main.c: 368:     {;main.c: 369:         dest[index] = data;
 11224  087F  0874               	movf	SafeSetByte@index,w
 11225  0880  0770               	addwf	SafeSetByte@dest,w
 11226  0881  00F7               	movwf	??_SafeSetByte
 11227  0882  0875               	movf	SafeSetByte@index+1,w
 11228  0883  3D71               	addwfc	SafeSetByte@dest+1,w
 11229  0884  00F8               	movwf	??_SafeSetByte+1
 11230  0885  0877               	movf	??_SafeSetByte,w
 11231  0886  0086               	movwf	6
 11232  0887  0878               	movf	??_SafeSetByte+1,w
 11233  0888  0087               	movwf	7
 11234  0889  0876               	movf	SafeSetByte@data,w
 11235  088A  0081               	movwf	1
 11236                           
 11237                           ;main.c: 370:     }
 11238  088B  0008               	return
 11239  088C                     l3906:	
 11240                           
 11241                           ;main.c: 372:     {;main.c: 374:         dest[length - 1] = '\0';
 11242  088C  0872               	movf	SafeSetByte@length,w
 11243  088D  0770               	addwf	SafeSetByte@dest,w
 11244  088E  00F7               	movwf	??_SafeSetByte
 11245  088F  0873               	movf	SafeSetByte@length+1,w
 11246  0890  3D71               	addwfc	SafeSetByte@dest+1,w
 11247  0891  00F8               	movwf	??_SafeSetByte+1
 11248  0892  0877               	movf	??_SafeSetByte,w
 11249  0893  3EFF               	addlw	255
 11250  0894  0086               	movwf	6
 11251  0895  30FF               	movlw	255
 11252  0896  3D78               	addwfc	??_SafeSetByte+1,w
 11253  0897  0087               	movwf	7
 11254  0898  0181               	clrf	1
 11255  0899  0008               	return
 11256  089A                     __end_of_SafeSetByte:	
 11257                           
 11258                           	psect	text43
 11259  09D6                     __ptext43:	
 11260 ;; *************** function _FindString *****************
 11261 ;; Defined at:
 11262 ;;		line 46 in file "main.c"
 11263 ;; Parameters:    Size  Location     Type
 11264 ;;  src             1    wreg     PTR unsigned char 
 11265 ;;		 -> GetNavData@data_type(7), 
 11266 ;;  srcLen          2    4[COMMON] int 
 11267 ;;  target          2    6[COMMON] PTR unsigned char 
 11268 ;;		 -> STR_9(5), 
 11269 ;;  targetLen       2    8[COMMON] int 
 11270 ;; Auto vars:     Size  Location     Type
 11271 ;;  src             1    0[BANK0 ] PTR unsigned char 
 11272 ;;		 -> GetNavData@data_type(7), 
 11273 ;;  i               2    1[BANK0 ] int 
 11274 ;;  matching        2    3[BANK0 ] int 
 11275 ;; Return value:  Size  Location     Type
 11276 ;;                  1    wreg      _Bool 
 11277 ;; Registers used:
 11278 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 11279 ;; Tracked objects:
 11280 ;;		On entry : 0/0
 11281 ;;		On exit  : 0/0
 11282 ;;		Unchanged: 0/0
 11283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11284 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11285 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11286 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11287 ;;      Totals:         8       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11288 ;;Total ram usage:       13 bytes
 11289 ;; Hardware stack levels used:    1
 11290 ;; Hardware stack levels required when called:    3
 11291 ;; This function calls:
 11292 ;;		Nothing
 11293 ;; This function is called by:
 11294 ;;		_GetNavData
 11295 ;; This function uses a non-reentrant model
 11296 ;;
 11297                           
 11298                           
 11299                           ;psect for function _FindString
 11300  09D6                     _FindString:	
 11301                           
 11302                           ;incstack = 0
 11303                           ; Regs used in _FindString: [wreg-fsr1h+status,2+status,0+pclath]
 11304                           ;FindString@src stored from wreg
 11305  09D6  0020               	movlb	0	; select bank0
 11306  09D7  00A0               	movwf	FindString@src
 11307                           
 11308                           ;main.c: 46: _Bool FindString(char* src, int srcLen, char* target, int targetLen);main.c
      +                          : 47: {;main.c: 48:     int matching = 0;
 11309  09D8  01A3               	clrf	FindString@matching
 11310  09D9  01A4               	clrf	FindString@matching+1
 11311                           
 11312                           ;main.c: 49:     for (int i = 0; i < srcLen; i++)
 11313  09DA  01A1               	clrf	FindString@i
 11314  09DB  01A2               	clrf	FindString@i+1
 11315  09DC                     l3026:	
 11316  09DC  0822               	movf	FindString@i+1,w
 11317  09DD  3A80               	xorlw	128
 11318  09DE  00FA               	movwf	??_FindString
 11319  09DF  0875               	movf	FindString@srcLen+1,w
 11320  09E0  3A80               	xorlw	128
 11321  09E1  027A               	subwf	??_FindString,w
 11322  09E2  1D03               	skipz
 11323  09E3  29E6               	goto	u2845
 11324  09E4  0874               	movf	FindString@srcLen,w
 11325  09E5  0221               	subwf	FindString@i,w
 11326  09E6                     u2845:	
 11327  09E6  1803               	btfsc	3,0
 11328  09E7  2A10               	goto	l3028
 11329                           
 11330                           ;main.c: 50:     {;main.c: 51:         if (src[i] == target[matching])
 11331  09E8  0876               	movf	FindString@target,w
 11332  09E9  0020               	movlb	0	; select bank0
 11333  09EA  0723               	addwf	FindString@matching,w
 11334  09EB  0084               	movwf	4
 11335  09EC  0877               	movf	FindString@target+1,w
 11336  09ED  3D24               	addwfc	FindString@matching+1,w
 11337  09EE  0085               	movwf	5
 11338  09EF  0800               	movf	0,w	;code access
 11339  09F0  00FA               	movwf	??_FindString
 11340  09F1  0821               	movf	FindString@i,w
 11341  09F2  0720               	addwf	FindString@src,w
 11342  09F3  00FB               	movwf	??_FindString+1
 11343  09F4  087B               	movf	??_FindString+1,w
 11344  09F5  0086               	movwf	6
 11345  09F6  0187               	clrf	7
 11346  09F7  0801               	movf	1,w
 11347  09F8  067A               	xorwf	??_FindString,w
 11348  09F9  1D03               	skipz
 11349  09FA  2A09               	goto	l3022
 11350                           
 11351                           ;main.c: 52:         {;main.c: 53:             matching++;
 11352  09FB  3001               	movlw	1
 11353  09FC  07A3               	addwf	FindString@matching,f
 11354  09FD  3000               	movlw	0
 11355  09FE  3DA4               	addwfc	FindString@matching+1,f
 11356                           
 11357                           ;main.c: 54:             if (matching == targetLen)
 11358  09FF  0879               	movf	FindString@targetLen+1,w
 11359  0A00  0624               	xorwf	FindString@matching+1,w
 11360  0A01  1D03               	skipz
 11361  0A02  2A05               	goto	u2835
 11362  0A03  0878               	movf	FindString@targetLen,w
 11363  0A04  0623               	xorwf	FindString@matching,w
 11364  0A05                     u2835:	
 11365  0A05  1D03               	skipz
 11366  0A06  2A0B               	goto	l3024
 11367                           
 11368                           ;main.c: 55:             {;main.c: 56:                 return 1;
 11369  0A07  3001               	movlw	1
 11370  0A08  0008               	return
 11371  0A09                     l3022:	
 11372                           
 11373                           ;main.c: 60:         {;main.c: 61:             matching = 0;
 11374  0A09  01A3               	clrf	FindString@matching
 11375  0A0A  01A4               	clrf	FindString@matching+1
 11376  0A0B                     l3024:	
 11377                           
 11378                           ;main.c: 63:     }
 11379  0A0B  3001               	movlw	1
 11380  0A0C  07A1               	addwf	FindString@i,f
 11381  0A0D  3000               	movlw	0
 11382  0A0E  3DA2               	addwfc	FindString@i+1,f
 11383  0A0F  29DC               	goto	l3026
 11384  0A10                     l3028:	
 11385                           
 11386                           ;main.c: 64:     return 0;
 11387  0A10  3000               	movlw	0
 11388  0A11  0008               	return
 11389  0A12                     __end_of_FindString:	
 11390                           
 11391                           	psect	text44
 11392  1614                     __ptext44:	
 11393 ;; *************** function _EUSART_is_rx_ready *****************
 11394 ;; Defined at:
 11395 ;;		line 83 in file "mcc_generated_files/eusart.c"
 11396 ;; Parameters:    Size  Location     Type
 11397 ;;		None
 11398 ;; Auto vars:     Size  Location     Type
 11399 ;;		None
 11400 ;; Return value:  Size  Location     Type
 11401 ;;                  1    wreg      _Bool 
 11402 ;; Registers used:
 11403 ;;		wreg, status,2, status,0
 11404 ;; Tracked objects:
 11405 ;;		On entry : 0/0
 11406 ;;		On exit  : 0/0
 11407 ;;		Unchanged: 0/0
 11408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11412 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11413 ;;Total ram usage:        0 bytes
 11414 ;; Hardware stack levels used:    1
 11415 ;; Hardware stack levels required when called:    3
 11416 ;; This function calls:
 11417 ;;		Nothing
 11418 ;; This function is called by:
 11419 ;;		_GPS_HasAcknowledged
 11420 ;;		_GetNavData
 11421 ;; This function uses a non-reentrant model
 11422 ;;
 11423                           
 11424                           
 11425                           ;psect for function _EUSART_is_rx_ready
 11426  1614                     _EUSART_is_rx_ready:	
 11427                           
 11428                           ;mcc_generated_files/eusart.c: 85:     return PIR1bits.RCIF;
 11429                           
 11430                           ;incstack = 0
 11431                           ; Regs used in _EUSART_is_rx_ready: [wreg+status,2+status,0]
 11432  1614  0020               	movlb	0	; select bank0
 11433  1615  0E10               	swapf	16,w	;volatile
 11434  1616  0C89               	rrf	9,f
 11435  1617  3901               	andlw	1
 11436  1618  0008               	return
 11437  1619                     __end_of_EUSART_is_rx_ready:	
 11438                           
 11439                           	psect	text45
 11440  1650                     __ptext45:	
 11441 ;; *************** function _EUSART_Read *****************
 11442 ;; Defined at:
 11443 ;;		line 93 in file "mcc_generated_files/eusart.c"
 11444 ;; Parameters:    Size  Location     Type
 11445 ;;		None
 11446 ;; Auto vars:     Size  Location     Type
 11447 ;;		None
 11448 ;; Return value:  Size  Location     Type
 11449 ;;                  1    wreg      unsigned char 
 11450 ;; Registers used:
 11451 ;;		wreg
 11452 ;; Tracked objects:
 11453 ;;		On entry : 0/0
 11454 ;;		On exit  : 0/0
 11455 ;;		Unchanged: 0/0
 11456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11460 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11461 ;;Total ram usage:        0 bytes
 11462 ;; Hardware stack levels used:    1
 11463 ;; Hardware stack levels required when called:    3
 11464 ;; This function calls:
 11465 ;;		Nothing
 11466 ;; This function is called by:
 11467 ;;		_GPS_HasAcknowledged
 11468 ;;		_GetNavData
 11469 ;;		_getch
 11470 ;; This function uses a non-reentrant model
 11471 ;;
 11472                           
 11473                           
 11474                           ;psect for function _EUSART_Read
 11475  1650                     _EUSART_Read:	
 11476  1650                     l105:	
 11477                           ;mcc_generated_files/eusart.c: 96:     {;mcc_generated_files/eusart.c: 97:     }
 11478                           
 11479                           ;incstack = 0
 11480                           ; Regs used in _EUSART_Read: [wreg]
 11481                           
 11482                           
 11483                           ;mcc_generated_files/eusart.c: 95:     while(!PIR1bits.RCIF)
 11484  1650  0020               	movlb	0	; select bank0
 11485  1651  1E90               	btfss	16,5	;volatile
 11486  1652  2E50               	goto	l105
 11487                           
 11488                           ;mcc_generated_files/eusart.c: 100:     if(1 == RC1STAbits.OERR)
 11489  1653  0023               	movlb	3	; select bank3
 11490  1654  1C9D               	btfss	29,1	;volatile
 11491  1655  2E58               	goto	l2926
 11492                           
 11493                           ;mcc_generated_files/eusart.c: 101:     {;mcc_generated_files/eusart.c: 104:         RC1
      +                          STAbits.CREN = 0;
 11494  1656  121D               	bcf	29,4	;volatile
 11495                           
 11496                           ;mcc_generated_files/eusart.c: 105:         RC1STAbits.CREN = 1;
 11497  1657  161D               	bsf	29,4	;volatile
 11498  1658                     l2926:	
 11499                           
 11500                           ;mcc_generated_files/eusart.c: 108:     return RC1REG;
 11501  1658  0819               	movf	25,w	;volatile
 11502  1659  0008               	return
 11503  165A                     __end_of_EUSART_Read:	
 11504                           
 11505                           	psect	text46
 11506  17B5                     __ptext46:	
 11507 ;; *************** function _ClearString *****************
 11508 ;; Defined at:
 11509 ;;		line 37 in file "main.c"
 11510 ;; Parameters:    Size  Location     Type
 11511 ;;  str             2    4[COMMON] PTR unsigned char 
 11512 ;;		 -> gps_time(10), gps_vertical_velocity(10), gps_course_over_ground(10), gps_speed_over_ground(10), 
 11513 ;;		 -> gps_vdop(8), gps_hdop(8), gps_nav_status(4), gps_altitude(12), 
 11514 ;;		 -> gps_longitude(16), gps_latitude(16), GetNavData@data_type(7), message_end(73), 
 11515 ;;		 -> message_start(70), 
 11516 ;; Auto vars:     Size  Location     Type
 11517 ;;  i               2    9[COMMON] int 
 11518 ;;  counti          2    7[COMMON] int 
 11519 ;; Return value:  Size  Location     Type
 11520 ;;                  1    wreg      void 
 11521 ;; Registers used:
 11522 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11523 ;; Tracked objects:
 11524 ;;		On entry : 0/0
 11525 ;;		On exit  : 0/0
 11526 ;;		Unchanged: 0/0
 11527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11528 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11529 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11530 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11531 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11532 ;;Total ram usage:        7 bytes
 11533 ;; Hardware stack levels used:    1
 11534 ;; Hardware stack levels required when called:    4
 11535 ;; This function calls:
 11536 ;;		_strlen
 11537 ;; This function is called by:
 11538 ;;		_GetNavData
 11539 ;;		_main
 11540 ;; This function uses a non-reentrant model
 11541 ;;
 11542                           
 11543                           
 11544                           ;psect for function _ClearString
 11545  17B5                     _ClearString:	
 11546                           
 11547                           ;main.c: 37: void ClearString(char* str);main.c: 38: {;main.c: 39:     for (int i = 0, c
      +                          ounti = strlen(str); i < counti; i++)
 11548                           
 11549                           ;incstack = 0
 11550                           ; Regs used in _ClearString: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11551  17B5  01F9               	clrf	ClearString@i
 11552  17B6  01FA               	clrf	ClearString@i+1
 11553  17B7  0875               	movf	ClearString@str+1,w
 11554  17B8  00F1               	movwf	strlen@s+1
 11555  17B9  0874               	movf	ClearString@str,w
 11556  17BA  00F0               	movwf	strlen@s
 11557  17BB  3196  26D0  3197   	fcall	_strlen
 11558  17BE  0871               	movf	?_strlen+1,w
 11559  17BF  00F8               	movwf	ClearString@counti+1
 11560  17C0  0870               	movf	?_strlen,w
 11561  17C1  00F7               	movwf	ClearString@counti
 11562  17C2                     l3894:	
 11563  17C2  087A               	movf	ClearString@i+1,w
 11564  17C3  3A80               	xorlw	128
 11565  17C4  00F6               	movwf	??_ClearString
 11566  17C5  0878               	movf	ClearString@counti+1,w
 11567  17C6  3A80               	xorlw	128
 11568  17C7  0276               	subwf	??_ClearString,w
 11569  17C8  1D03               	skipz
 11570  17C9  2FCC               	goto	u3875
 11571  17CA  0877               	movf	ClearString@counti,w
 11572  17CB  0279               	subwf	ClearString@i,w
 11573  17CC                     u3875:	
 11574  17CC  1803               	btfsc	3,0
 11575  17CD  0008               	return
 11576                           
 11577                           ;main.c: 40:     {;main.c: 41:         str[i] = '\0';
 11578  17CE  0879               	movf	ClearString@i,w
 11579  17CF  0774               	addwf	ClearString@str,w
 11580  17D0  0086               	movwf	6
 11581  17D1  087A               	movf	ClearString@i+1,w
 11582  17D2  3D75               	addwfc	ClearString@str+1,w
 11583  17D3  0087               	movwf	7
 11584  17D4  0181               	clrf	1
 11585                           
 11586                           ;main.c: 42:     }
 11587  17D5  3001               	movlw	1
 11588  17D6  07F9               	addwf	ClearString@i,f
 11589  17D7  3000               	movlw	0
 11590  17D8  3DFA               	addwfc	ClearString@i+1,f
 11591  17D9  2FC2               	goto	l3894
 11592  17DA                     __end_of_ClearString:	
 11593                           
 11594                           	psect	text47
 11595  16D0                     __ptext47:	
 11596 ;; *************** function _strlen *****************
 11597 ;; Defined at:
 11598 ;;		line 12 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\strlen.c"
 11599 ;; Parameters:    Size  Location     Type
 11600 ;;  s               2    0[COMMON] PTR const unsigned char 
 11601 ;;		 -> ?_printf(2), ?_sprintf(2), stoa@nuls(7), dbuf(32), 
 11602 ;;		 -> gps_time(10), gps_vertical_velocity(10), gps_course_over_ground(10), gps_speed_over_ground(10), 
 11603 ;;		 -> gps_vdop(8), gps_hdop(8), gps_nav_status(4), gps_altitude(12), 
 11604 ;;		 -> gps_longitude(16), gps_latitude(16), GetNavData@data_type(7), message_end(73), 
 11605 ;;		 -> message_start(70), 
 11606 ;; Auto vars:     Size  Location     Type
 11607 ;;  a               2    2[COMMON] PTR const unsigned char 
 11608 ;;		 -> ?_printf(2), ?_sprintf(2), stoa@nuls(7), dbuf(32), 
 11609 ;;		 -> gps_time(10), gps_vertical_velocity(10), gps_course_over_ground(10), gps_speed_over_ground(10), 
 11610 ;;		 -> gps_vdop(8), gps_hdop(8), gps_nav_status(4), gps_altitude(12), 
 11611 ;;		 -> gps_longitude(16), gps_latitude(16), GetNavData@data_type(7), message_end(73), 
 11612 ;;		 -> message_start(70), 
 11613 ;; Return value:  Size  Location     Type
 11614 ;;                  2    0[COMMON] unsigned int 
 11615 ;; Registers used:
 11616 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11617 ;; Tracked objects:
 11618 ;;		On entry : 0/0
 11619 ;;		On exit  : 0/0
 11620 ;;		Unchanged: 0/0
 11621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11622 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11623 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11625 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11626 ;;Total ram usage:        4 bytes
 11627 ;; Hardware stack levels used:    1
 11628 ;; Hardware stack levels required when called:    3
 11629 ;; This function calls:
 11630 ;;		Nothing
 11631 ;; This function is called by:
 11632 ;;		_ClearString
 11633 ;;		_crc16
 11634 ;;		_TransmitString
 11635 ;;		_GetNavData
 11636 ;;		_pad
 11637 ;;		_stoa
 11638 ;;		_strcat
 11639 ;; This function uses a non-reentrant model
 11640 ;;
 11641                           
 11642                           
 11643                           ;psect for function _strlen
 11644  16D0                     _strlen:	
 11645                           
 11646                           ;incstack = 0
 11647                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
 11648  16D0  0871               	movf	strlen@s+1,w
 11649  16D1  00F3               	movwf	strlen@a+1
 11650  16D2  0870               	movf	strlen@s,w
 11651  16D3  00F2               	movwf	strlen@a
 11652  16D4                     l3558:	
 11653  16D4  0870               	movf	strlen@s,w
 11654  16D5  0086               	movwf	6
 11655  16D6  0871               	movf	strlen@s+1,w
 11656  16D7  0087               	movwf	7
 11657  16D8  0801               	movf	1,w
 11658  16D9  1903               	btfsc	3,2
 11659  16DA  2EE0               	goto	l3560
 11660  16DB  3001               	movlw	1
 11661  16DC  07F0               	addwf	strlen@s,f
 11662  16DD  3000               	movlw	0
 11663  16DE  3DF1               	addwfc	strlen@s+1,f
 11664  16DF  2ED4               	goto	l3558
 11665  16E0                     l3560:	
 11666  16E0  0872               	movf	strlen@a,w
 11667  16E1  0270               	subwf	strlen@s,w
 11668  16E2  00F0               	movwf	?_strlen
 11669  16E3  0873               	movf	strlen@a+1,w
 11670  16E4  3B71               	subwfb	strlen@s+1,w
 11671  16E5  00F1               	movwf	?_strlen+1
 11672  16E6  0008               	return
 11673  16E7                     __end_of_strlen:	
 11674                           
 11675                           	psect	text48
 11676  08C4                     __ptext48:	
 11677 ;; *************** function _FlashError *****************
 11678 ;; Defined at:
 11679 ;;		line 25 in file "main.c"
 11680 ;; Parameters:    Size  Location     Type
 11681 ;;		None
 11682 ;; Auto vars:     Size  Location     Type
 11683 ;;  i               2    2[COMMON] int 
 11684 ;; Return value:  Size  Location     Type
 11685 ;;                  1    wreg      void 
 11686 ;; Registers used:
 11687 ;;		wreg, status,2
 11688 ;; Tracked objects:
 11689 ;;		On entry : 0/0
 11690 ;;		On exit  : 0/0
 11691 ;;		Unchanged: 0/0
 11692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11694 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11695 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11696 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11697 ;;Total ram usage:        4 bytes
 11698 ;; Hardware stack levels used:    1
 11699 ;; Hardware stack levels required when called:    3
 11700 ;; This function calls:
 11701 ;;		Nothing
 11702 ;; This function is called by:
 11703 ;;		_main
 11704 ;; This function uses a non-reentrant model
 11705 ;;
 11706                           
 11707                           
 11708                           ;psect for function _FlashError
 11709  08C4                     _FlashError:	
 11710                           
 11711                           ;main.c: 27:     for (int i = 0; i < 3; i++)
 11712                           
 11713                           ;incstack = 0
 11714                           ; Regs used in _FlashError: [wreg+status,2]
 11715  08C4  01F2               	clrf	FlashError@i
 11716  08C5  01F3               	clrf	FlashError@i+1
 11717  08C6                     l204:	
 11718                           ;main.c: 28:     {;main.c: 29:         do { LATCbits.LATC5 = 1; } while(0);
 11719                           
 11720  08C6  0022               	movlb	2	; select bank2
 11721  08C7  168E               	bsf	14,5	;volatile
 11722                           
 11723                           ;main.c: 30:         _delay((unsigned long)((250)*(4000000/4000.0)));
 11724  08C8  3002               	movlw	2
 11725  08C9  00F1               	movwf	??_FlashError+1
 11726  08CA  3045               	movlw	69
 11727  08CB  00F0               	movwf	??_FlashError
 11728  08CC  30AA               	movlw	170
 11729  08CD                     u4147:	
 11730  08CD  0B89               	decfsz	9,f
 11731  08CE  28CD               	goto	u4147
 11732  08CF  0BF0               	decfsz	??_FlashError,f
 11733  08D0  28CD               	goto	u4147
 11734  08D1  0BF1               	decfsz	??_FlashError+1,f
 11735  08D2  28CD               	goto	u4147
 11736  08D3  0022               	movlb	2	; select bank2
 11737  08D4  128E               	bcf	14,5	;volatile
 11738                           
 11739                           ;main.c: 32:         _delay((unsigned long)((250)*(4000000/4000.0)));
 11740  08D5  3002               	movlw	2
 11741  08D6  00F1               	movwf	??_FlashError+1
 11742  08D7  3045               	movlw	69
 11743  08D8  00F0               	movwf	??_FlashError
 11744  08D9  30AA               	movlw	170
 11745  08DA                     u4157:	
 11746  08DA  0B89               	decfsz	9,f
 11747  08DB  28DA               	goto	u4157
 11748  08DC  0BF0               	decfsz	??_FlashError,f
 11749  08DD  28DA               	goto	u4157
 11750  08DE  0BF1               	decfsz	??_FlashError+1,f
 11751  08DF  28DA               	goto	u4157
 11752                           
 11753                           ;main.c: 33:     }
 11754  08E0  3001               	movlw	1
 11755  08E1  07F2               	addwf	FlashError@i,f
 11756  08E2  3000               	movlw	0
 11757  08E3  3DF3               	addwfc	FlashError@i+1,f
 11758  08E4  0873               	movf	FlashError@i+1,w
 11759  08E5  3A80               	xorlw	128
 11760  08E6  00F0               	movwf	??_FlashError
 11761  08E7  3080               	movlw	128
 11762  08E8  0270               	subwf	??_FlashError,w
 11763  08E9  1D03               	skipz
 11764  08EA  28ED               	goto	u3015
 11765  08EB  3003               	movlw	3
 11766  08EC  0272               	subwf	FlashError@i,w
 11767  08ED                     u3015:	
 11768  08ED  1803               	btfsc	3,0
 11769  08EE  0008               	return
 11770  08EF  28C6               	goto	l204
 11771  08F0                     __end_of_FlashError:	
 11772                           
 11773                           	psect	intentry
 11774  0004                     __pintentry:	
 11775 ;; *************** function _INTERRUPT_InterruptManager *****************
 11776 ;; Defined at:
 11777 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 11778 ;; Parameters:    Size  Location     Type
 11779 ;;		None
 11780 ;; Auto vars:     Size  Location     Type
 11781 ;;		None
 11782 ;; Return value:  Size  Location     Type
 11783 ;;                  1    wreg      void 
 11784 ;; Registers used:
 11785 ;;		wreg, status,2, status,0, pclath, cstack
 11786 ;; Tracked objects:
 11787 ;;		On entry : 0/0
 11788 ;;		On exit  : 0/0
 11789 ;;		Unchanged: 0/0
 11790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11792 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11794 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11795 ;;Total ram usage:        0 bytes
 11796 ;; Hardware stack levels used:    1
 11797 ;; Hardware stack levels required when called:    2
 11798 ;; This function calls:
 11799 ;;		_TMR0_ISR
 11800 ;; This function is called by:
 11801 ;;		Interrupt level 1
 11802 ;; This function uses a non-reentrant model
 11803 ;;
 11804                           
 11805  0004                     _INTERRUPT_InterruptManager:	
 11806                           
 11807                           ;incstack = 0
 11808  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 11809                           
 11810                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
 11811  0005  3180               	pagesel	$
 11812                           
 11813                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
 11814  0006  1A8B               	btfsc	11,5	;volatile
 11815  0007  1D0B               	btfss	11,2	;volatile
 11816  0008  280B               	goto	i1l132
 11817                           
 11818                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
 11819  0009  3196  2671         	fcall	_TMR0_ISR
 11820  000B                     i1l132:	
 11821                           ;mcc_generated_files/interrupt_manager.c: 58:     }
 11822                           
 11823  000B  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 11824  000C  0009               	retfie
 11825  000D                     __end_of_INTERRUPT_InterruptManager:	
 11826                           
 11827                           	psect	text50
 11828  1671                     __ptext50:	
 11829 ;; *************** function _TMR0_ISR *****************
 11830 ;; Defined at:
 11831 ;;		line 108 in file "mcc_generated_files/tmr0.c"
 11832 ;; Parameters:    Size  Location     Type
 11833 ;;		None
 11834 ;; Auto vars:     Size  Location     Type
 11835 ;;		None
 11836 ;; Return value:  Size  Location     Type
 11837 ;;                  1    wreg      void 
 11838 ;; Registers used:
 11839 ;;		wreg, status,2, status,0, pclath, cstack
 11840 ;; Tracked objects:
 11841 ;;		On entry : 0/0
 11842 ;;		On exit  : 0/0
 11843 ;;		Unchanged: 0/0
 11844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11846 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11848 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11849 ;;Total ram usage:        0 bytes
 11850 ;; Hardware stack levels used:    1
 11851 ;; Hardware stack levels required when called:    1
 11852 ;; This function calls:
 11853 ;;		Absolute function
 11854 ;;		_TMR0_DefaultInterruptHandler
 11855 ;;		_TimerISR
 11856 ;; This function is called by:
 11857 ;;		_INTERRUPT_InterruptManager
 11858 ;; This function uses a non-reentrant model
 11859 ;;
 11860                           
 11861                           
 11862                           ;psect for function _TMR0_ISR
 11863  1671                     _TMR0_ISR:	
 11864                           
 11865                           ;mcc_generated_files/tmr0.c: 112:     INTCONbits.TMR0IF = 0;
 11866                           
 11867                           ;incstack = 0
 11868                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
 11869  1671  110B               	bcf	11,2	;volatile
 11870                           
 11871                           ;mcc_generated_files/tmr0.c: 114:     TMR0 = timer0ReloadVal;
 11872  1672  0021               	movlb	1	; select bank1
 11873  1673  086C               	movf	_timer0ReloadVal^(0+128),w	;volatile
 11874  1674  0020               	movlb	0	; select bank0
 11875  1675  0095               	movwf	21	;volatile
 11876                           
 11877                           ;mcc_generated_files/tmr0.c: 116:     if(TMR0_InterruptHandler)
 11878  1676  0022               	movlb	2	; select bank2
 11879  1677  086B               	movf	_TMR0_InterruptHandler^(0+256),w
 11880  1678  046C               	iorwf	(_TMR0_InterruptHandler+1)^(0+256),w
 11881  1679  1903               	btfsc	3,2
 11882  167A  0008               	return
 11883                           
 11884                           ;mcc_generated_files/tmr0.c: 117:     {;mcc_generated_files/tmr0.c: 118:         TMR0_In
      +                          terruptHandler();
 11885  167B  086C               	movf	(_TMR0_InterruptHandler+1)^(0+256),w
 11886  167C  008A               	movwf	10
 11887  167D  086B               	movf	_TMR0_InterruptHandler^(0+256),w
 11888  167E  000A               	callw
 11889  167F  3196               	pagesel	$
 11890  1680  0008               	return
 11891  1681                     __end_of_TMR0_ISR:	
 11892                           
 11893                           	psect	text51
 11894  0003                     __ptext51:	
 11895 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 11896 ;; Defined at:
 11897 ;;		line 129 in file "mcc_generated_files/tmr0.c"
 11898 ;; Parameters:    Size  Location     Type
 11899 ;;		None
 11900 ;; Auto vars:     Size  Location     Type
 11901 ;;		None
 11902 ;; Return value:  Size  Location     Type
 11903 ;;                  1    wreg      void 
 11904 ;; Registers used:
 11905 ;;		None
 11906 ;; Tracked objects:
 11907 ;;		On entry : 0/0
 11908 ;;		On exit  : 0/0
 11909 ;;		Unchanged: 0/0
 11910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11911 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11912 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11914 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11915 ;;Total ram usage:        0 bytes
 11916 ;; Hardware stack levels used:    1
 11917 ;; This function calls:
 11918 ;;		Nothing
 11919 ;; This function is called by:
 11920 ;;		_TMR0_Initialize
 11921 ;;		_TMR0_ISR
 11922 ;; This function uses a non-reentrant model
 11923 ;;
 11924                           
 11925                           
 11926                           ;psect for function _TMR0_DefaultInterruptHandler
 11927  0003                     _TMR0_DefaultInterruptHandler:	
 11928                           
 11929                           ;incstack = 0
 11930                           ; Regs used in _TMR0_DefaultInterruptHandler: []
 11931  0003  0008               	return
 11932  0004                     __end_of_TMR0_DefaultInterruptHandler:	
 11933                           
 11934                           	psect	text52
 11935  1646                     __ptext52:	
 11936 ;; *************** function _TimerISR *****************
 11937 ;; Defined at:
 11938 ;;		line 9 in file "main.c"
 11939 ;; Parameters:    Size  Location     Type
 11940 ;;		None
 11941 ;; Auto vars:     Size  Location     Type
 11942 ;;		None
 11943 ;; Return value:  Size  Location     Type
 11944 ;;                  1    wreg      void 
 11945 ;; Registers used:
 11946 ;;		wreg
 11947 ;; Tracked objects:
 11948 ;;		On entry : 0/0
 11949 ;;		On exit  : 0/0
 11950 ;;		Unchanged: 0/0
 11951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11955 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11956 ;;Total ram usage:        0 bytes
 11957 ;; Hardware stack levels used:    1
 11958 ;; This function calls:
 11959 ;;		Nothing
 11960 ;; This function is called by:
 11961 ;;		_main
 11962 ;;		_TMR0_ISR
 11963 ;; This function uses a non-reentrant model
 11964 ;;
 11965                           
 11966                           
 11967                           ;psect for function _TimerISR
 11968  1646                     _TimerISR:	
 11969                           
 11970                           ;main.c: 11:     ticks++;
 11971                           
 11972                           ;incstack = 0
 11973                           ; Regs used in _TimerISR: [wreg]
 11974  1646  3001               	movlw	1
 11975  1647  0021               	movlb	1	; select bank1
 11976  1648  07E0               	addwf	_ticks^(0+128),f
 11977  1649  3000               	movlw	0
 11978  164A  3DE1               	addwfc	(_ticks+1)^(0+128),f
 11979  164B  3000               	movlw	0
 11980  164C  3DE2               	addwfc	(_ticks+2)^(0+128),f
 11981  164D  3000               	movlw	0
 11982  164E  3DE3               	addwfc	(_ticks+3)^(0+128),f
 11983  164F  0008               	return
 11984  1650                     __end_of_TimerISR:	
 11985  007E                     btemp	set	126	;btemp
 11986  007E                     int$flags	set	126
 11987  007E                     wtemp0	set	126


Data Sizes:
    Strings     223
    Constant    6
    Data        55
    BSS         315
    Persistent  35
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     77      80
    BANK1            80     64      77
    BANK2            80      0      77
    BANK3            80      0      61
    BANK4            80      0      76
    BANK5            80      0      70
    BANK6            80      0      73
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 73
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK1[2]), stoa@nuls(BANK0[7]), dbuf(BANK4[32]), 
		 -> gps_time(BANK2[10]), gps_vertical_velocity(BANK2[10]), gps_course_over_ground(BANK2[10]), gps_speed_over_ground(BANK2[10]), 
		 -> gps_vdop(BANK2[8]), gps_hdop(BANK2[8]), gps_nav_status(BANK2[4]), gps_altitude(BANK3[12]), 
		 -> gps_longitude(BANK3[16]), gps_latitude(BANK3[16]), GetNavData@data_type(BANK1[7]), message_end(BANK6[73]), 
		 -> message_start(BANK5[70]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 73
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK1[2]), stoa@nuls(BANK0[7]), dbuf(BANK4[32]), 
		 -> gps_time(BANK2[10]), gps_vertical_velocity(BANK2[10]), gps_course_over_ground(BANK2[10]), gps_speed_over_ground(BANK2[10]), 
		 -> gps_vdop(BANK2[8]), gps_hdop(BANK2[8]), gps_nav_status(BANK2[4]), gps_altitude(BANK3[12]), 
		 -> gps_longitude(BANK3[16]), gps_latitude(BANK3[16]), GetNavData@data_type(BANK1[7]), message_end(BANK6[73]), 
		 -> message_start(BANK5[70]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 73
		 -> message_end(BANK6[73]), message_start(BANK5[70]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 73
		 -> message_end(BANK6[73]), message_start(BANK5[70]), 

    strcpy@src	PTR const unsigned char  size(1) Largest target is 6
		 -> checksum(BANK2[6]), 

    strcpy@s	PTR const unsigned char  size(1) Largest target is 6
		 -> checksum(BANK2[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 73
		 -> message_end(BANK6[73]), message_start(BANK5[70]), 

    strcat@src	PTR const unsigned char  size(1) Largest target is 6
		 -> checksum(BANK2[6]), 

    strcat@dest	PTR unsigned char  size(2) Largest target is 73
		 -> message_end(BANK6[73]), message_start(BANK5[70]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 26
		 -> STR_7(CODE[14]), STR_6(CODE[26]), STR_5(CODE[26]), STR_4(CODE[26]), 
		 -> STR_3(CODE[26]), STR_2(CODE[26]), STR_1(CODE[26]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK1[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 23
		 -> STR_12(CODE[7]), STR_11(CODE[18]), STR_10(CODE[23]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 73
		 -> checksum(BANK2[6]), message_end(BANK6[73]), message_start(BANK5[70]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK1[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 73
		 -> checksum(BANK2[6]), message_end(BANK6[73]), message_start(BANK5[70]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK4[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK0[6]), NULL(NULL[0]), 

    S1028_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 73
		 -> checksum(BANK2[6]), message_end(BANK6[73]), message_start(BANK5[70]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 73
		 -> checksum(BANK2[6]), message_end(BANK6[73]), message_start(BANK5[70]), 

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK0[6]), NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 26
		 -> STR_12(CODE[7]), STR_11(CODE[18]), STR_10(CODE[23]), STR_7(CODE[14]), 
		 -> STR_6(CODE[26]), STR_5(CODE[26]), STR_4(CODE[26]), STR_3(CODE[26]), 
		 -> STR_2(CODE[26]), STR_1(CODE[26]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), sprintf@ap(BANK0[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK0[6]), NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 26
		 -> STR_12(CODE[7]), STR_11(CODE[18]), STR_10(CODE[23]), STR_7(CODE[14]), 
		 -> STR_6(CODE[26]), STR_5(CODE[26]), STR_4(CODE[26]), STR_3(CODE[26]), 
		 -> STR_2(CODE[26]), STR_1(CODE[26]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 26
		 -> STR_12(CODE[7]), STR_11(CODE[18]), STR_10(CODE[23]), STR_7(CODE[14]), 
		 -> STR_6(CODE[26]), STR_5(CODE[26]), STR_4(CODE[26]), STR_3(CODE[26]), 
		 -> STR_2(CODE[26]), STR_1(CODE[26]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 16
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK1[2]), gps_time(BANK2[10]), gps_vertical_velocity(BANK2[10]), 
		 -> gps_course_over_ground(BANK2[10]), gps_speed_over_ground(BANK2[10]), gps_vdop(BANK2[8]), gps_hdop(BANK2[8]), 
		 -> gps_nav_status(BANK2[4]), gps_altitude(BANK3[12]), gps_longitude(BANK3[16]), gps_latitude(BANK3[16]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK0[6]), NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK0[1]), sprintf@ap(BANK0[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    xtoa@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK0[6]), NULL(NULL[0]), 

    stoa@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK0[6]), NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 16
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK1[2]), gps_time(BANK2[10]), gps_vertical_velocity(BANK2[10]), 
		 -> gps_course_over_ground(BANK2[10]), gps_speed_over_ground(BANK2[10]), gps_vdop(BANK2[8]), gps_hdop(BANK2[8]), 
		 -> gps_nav_status(BANK2[4]), gps_altitude(BANK3[12]), gps_longitude(BANK3[16]), gps_latitude(BANK3[16]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 16
		 -> ?_printf(BANK0[2]), ?_sprintf(BANK1[2]), stoa@nuls(BANK0[7]), gps_time(BANK2[10]), 
		 -> gps_vertical_velocity(BANK2[10]), gps_course_over_ground(BANK2[10]), gps_speed_over_ground(BANK2[10]), gps_vdop(BANK2[8]), 
		 -> gps_hdop(BANK2[8]), gps_nav_status(BANK2[4]), gps_altitude(BANK3[12]), gps_longitude(BANK3[16]), 
		 -> gps_latitude(BANK3[16]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK0[6]), NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK0[6]), NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK4[32]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 73
		 -> message_end(BANK6[73]), message_start(BANK5[70]), 

    SafeSetByte@dest	PTR unsigned char  size(2) Largest target is 16
		 -> gps_vertical_velocity(BANK2[10]), gps_course_over_ground(BANK2[10]), gps_speed_over_ground(BANK2[10]), gps_vdop(BANK2[8]), 
		 -> gps_hdop(BANK2[8]), gps_nav_status(BANK2[4]), gps_altitude(BANK3[12]), gps_longitude(BANK3[16]), 
		 -> gps_latitude(BANK3[16]), GetNavData@temp_time(BANK1[10]), GetNavData@data_type(BANK1[7]), 

    GPS_HasAcknowledged@data	PTR unsigned char  size(1) Largest target is 44
		 -> setNavFlightMode(BANK4[44]), 

    GPS_SendUBX@data	PTR unsigned char  size(1) Largest target is 44
		 -> setNavFlightMode(BANK4[44]), 

    GetLengthUBX@data	PTR unsigned char  size(1) Largest target is 44
		 -> setNavFlightMode(BANK4[44]), 

    TransmitString@message	PTR unsigned char  size(2) Largest target is 73
		 -> message_end(BANK6[73]), message_start(BANK5[70]), 

    crc16@data	PTR PTR unsigned char  size(1) Largest target is 4
		 -> messages(BANK1[4]), 

    crc16@string	PTR unsigned char  size(2) Largest target is 73
		 -> message_end(BANK6[73]), message_start(BANK5[70]), 

    messages	PTR unsigned char [2] size(2) Largest target is 73
		 -> message_end(BANK6[73]), message_start(BANK5[70]), 

    FindString@target	PTR unsigned char  size(2) Largest target is 5
		 -> STR_9(CODE[5]), 

    FindString@src	PTR unsigned char  size(1) Largest target is 7
		 -> GetNavData@data_type(BANK1[7]), 

    ClearString@str	PTR unsigned char  size(2) Largest target is 73
		 -> gps_time(BANK2[10]), gps_vertical_velocity(BANK2[10]), gps_course_over_ground(BANK2[10]), gps_speed_over_ground(BANK2[10]), 
		 -> gps_vdop(BANK2[8]), gps_hdop(BANK2[8]), gps_nav_status(BANK2[4]), gps_altitude(BANK3[12]), 
		 -> gps_longitude(BANK3[16]), gps_latitude(BANK3[16]), GetNavData@data_type(BANK1[7]), message_end(BANK6[73]), 
		 -> message_start(BANK5[70]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TimerISR(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TimerISR(), Absolute function(), TMR0_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    _strcat->_strcpy
    _strcpy->_strlen
    _crc16->_crc_append_byte
    _TransmitString->_TransmitByte
    _TransmitByte->_TransmitBit
    _GPS_SendUBX->_GetLengthUBX
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _xtoa->_toupper
    _toupper->_islower
    _stoa->_fputc
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART_Write
    _abs->___aomod
    _atoi->___wmul
    _atoi->_isdigit
    _FindString->_strlen
    _ClearString->_strlen

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_GetNavData
    _main->_sprintf
    _sprintf->_vfprintf
    _SetupGPS->_printf
    _GetNavData->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _dtoa->___aodiv
    _dtoa->___aomod
    _pad->_fputs
    _abs->___aomod

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_GetNavData
    _vfprintf->_vfpfcnvrt

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0   73355
                                             59 BANK1      5     5      0
                        _ClearString
                         _FlashError
                         _GetNavData
                  _SYSTEM_Initialize
                           _SetupGPS
           _TMR0_SetInterruptHandler
                     _TransmitString
                              _crc16
                            _sprintf
                             _strcat
 ---------------------------------------------------------------------------------
 (1) _strcat                                               4     1      3     907
                                             12 COMMON     1     1      0
                                              0 BANK0      3     0      3
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strcpy                                               8     5      3     267
                                              4 COMMON     8     5      3
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             26    10     16   20245
                                             67 BANK0     10    10      0
                                             24 BANK1     16     0     16
                              _crc16 (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _crc16                                               15    13      2    1311
                                              8 COMMON     3     1      2
                                              0 BANK0     12    12      0
                    _crc_append_byte
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _crc_append_byte                                      8     5      3     311
                                              0 COMMON     8     5      3
 ---------------------------------------------------------------------------------
 (1) _TransmitString                                       7     5      2     766
                                              6 COMMON     7     5      2
                       _TransmitByte
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _TransmitByte                                         4     4      0     112
                                              2 COMMON     4     4      0
                        _TransmitBit
 ---------------------------------------------------------------------------------
 (3) _TransmitBit                                          2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _SetupGPS                                             2     2      0   21123
                                             73 BANK0      2     2      0
                _GPS_HasAcknowledged
                        _GPS_SendUBX
                             _printf
 ---------------------------------------------------------------------------------
 (2) _GPS_SendUBX                                          6     6      0     245
                                              4 COMMON     6     6      0
                       _EUSART_Write
                       _GetLengthUBX
 ---------------------------------------------------------------------------------
 (3) _GetLengthUBX                                         4     1      3      77
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (2) _GPS_HasAcknowledged                                 22    22      0     618
                                              0 COMMON     4     4      0
                                              0 BANK0     18    18      0
                        _EUSART_Read
                 _EUSART_is_rx_ready
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     174
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      1     1      0     174
                                              2 COMMON     1     1      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     174
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GetNavData                                          39    39      0   27410
                                             73 BANK0      4     4      0
                                             24 BANK1     35    35      0
                        _ClearString
                        _EUSART_Read
                 _EUSART_is_rx_ready
                         _FindString
                        _SafeSetByte
                             _printf
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _printf                                               6     4      2   20260
                                             67 BANK0      6     4      2
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     5      3   19531
                                             59 BANK0      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           43    41      2   18815
                                             51 BANK0      8     6      2
                                              0 BANK1     24    24      0
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
                               _stoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                38    29      9    5994
                                             13 BANK0     38    29      9
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              8     6      2     412
                                              6 COMMON     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (6) _islower                                              6     4      2     161
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     161
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (5) _isalpha                                              8     6      2     161
                                              0 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (4) _stoa                                                23    21      2    2535
                                             10 COMMON     2     0      2
                                              0 BANK0     21    21      0
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                30    22      8    6011
                                             16 BANK0     30    22      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    4178
                                              4 BANK0      9     6      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _fputs                                                8     7      1    1649
                                             10 COMMON     4     3      1
                                              0 BANK0      4     4      0
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                8     5      3    1334
                                              2 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0      44
                                              1 COMMON     1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (9) _EUSART_Write                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              3 COMMON     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             19     3     16     448
                                              0 COMMON     3     3      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             27    11     16     452
                                              0 COMMON    11    11      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1131
                                              6 COMMON     6     4      2
                                              0 BANK0      9     9      0
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              5     3      2     207
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     237
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     290
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) _SafeSetByte                                          9     2      7    3627
                                              0 COMMON     9     2      7
 ---------------------------------------------------------------------------------
 (2) _FindString                                          13     7      6     442
                                              4 COMMON     8     2      6
                                              0 BANK0      5     5      0
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (3) _EUSART_is_rx_ready                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EUSART_Read                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ClearString                                          7     5      2    1094
                                              4 COMMON     7     5      2
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               4     2      2     410
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _FlashError                                           4     4      0      46
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INTERRUPT_InterruptManager                          0     0      0       0
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (12) _TMR0_ISR                                            0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                           _TimerISR *
 ---------------------------------------------------------------------------------
 (13) _TimerISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ClearString
     _strlen
   _FlashError
   _GetNavData
     _ClearString
       _strlen
     _EUSART_Read
     _EUSART_is_rx_ready
     _FindString
       _strlen (ARG)
     _SafeSetByte
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART_Write
               _strlen
           _fputc
             _putch
               _EUSART_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _EUSART_Write
             _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART_Write
               _strlen
             _toupper
               _islower
     _strlen
   _SYSTEM_Initialize
     _EUSART_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
   _SetupGPS
     _GPS_HasAcknowledged
       _EUSART_Read
       _EUSART_is_rx_ready
     _GPS_SendUBX
       _EUSART_Write
       _GetLengthUBX
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART_Write
               _strlen
           _fputc
             _putch
               _EUSART_Write
           _isdigit
           _stoa
             _fputc
               _putch
                 _EUSART_Write
             _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _EUSART_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART_Write
               _strlen
             _toupper
               _islower
   _TMR0_SetInterruptHandler
   _TransmitString
     _TransmitByte
       _TransmitBit
     _strlen
   _crc16
     _crc_append_byte
     _strlen
   _sprintf
     _crc16 (ARG)
       _crc_append_byte
       _strlen
     _vfprintf (ARG)
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _EUSART_Write
             _fputs
               _fputc
                 _putch
                   _EUSART_Write
             _strlen
         _fputc
           _putch
             _EUSART_Write
         _isdigit
         _stoa
           _fputc
             _putch
               _EUSART_Write
           _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _EUSART_Write
             _fputs
               _fputc
                 _putch
                   _EUSART_Write
             _strlen
           _toupper
             _islower
   _strcat
     _strcpy
       _strlen (ARG)
     _strlen

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _TimerISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4D      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     40      4D       7       96.3%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      4D       9       96.3%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      3D      11       76.3%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      4C      13       95.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0      46      15       87.5%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0      49      17       91.3%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     210      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     210      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sat Aug 31 11:01:45 2019

                     __end_of_ClearString 17DA                               __CFG_CP$OFF 0000  
                         GPS_SendUBX@data 0079                       ___wmul@multiplicand 0072  
                         _timer0ReloadVal 00EC                               __CFG_LVP$ON 0000  
                                     l112 163F                                       l105 1650  
                                     l204 08C6                                       l241 09C7  
                                     l245 0B07                                       l502 0A73  
                                     l510 06E8                                       l262 07F6  
                                     l238 09B3                                       l511 06F0  
                                     l351 010D                                       l600 0365  
                                     l505 0A93                                       l515 070C  
                                     l516 071E                                       l630 174B  
                                     l542 0CE3                                       l519 07B3  
                                     l551 0D3C                                       l730 0FEE  
                                     l563 0573                                       l743 0EFB  
                                     l559 0557                                       l584 0673  
                                     l593 0323                                       l595 032D  
                                     l596 032F                                       l597 0331  
                                     l598 0333                                       _abs 16FE  
                                     _pad 0A5D                         GetNavData@doParse 00D5  
                            __CFG_BORV$LO 0000                                       wreg 0009  
                            __CFG_IESO$ON 0000                              ?_EUSART_Read 0070  
                            __CFG_ZCD$OFF 0000                                      l1105 0C68  
                                    ?_abs 0073                                      l3100 0BBD  
                                    l3022 0A09                                      l3024 0A0B  
                                    l3112 0BE5                                      l3026 09DC  
                                    l2410 0A1B                                      l3106 0BC4  
                                    l3042 09C2                                      l3028 0A10  
                                    l3108 0BE3                                      l3052 0923  
                                    l2510 0F37                                      l2414 0A3F  
                                    l4040 0145                                      l4112 00D9  
                                    l2514 0F5E                                      l4042 015C  
                                    l4034 013A                                      l4026 0112  
                                    l4114 02F8                                      l3090 0BA6  
                                    l2516 0F62                                      l2436 17DE  
                                    l4060 01BB                                      l3068 082D  
                                    l2526 0F79                                      l4054 017A  
                                    l4038 0142                                      l4046 015F  
                                    l2536 0FC1                                      l2528 0F88  
                                    l2560 0E8F                                      l2552 0E82  
                                    l4080 0233                                      l4072 01E9  
                                    l4064 01C1                                      l4056 018F  
                                    l4048 0173                                      l2538 0FCD  
                                    l2562 0E9E                                      l4082 0248  
                                    l4074 01F4                                      l4066 01CC  
                                    l4058 01A4                                      l4090 0287  
                                    l3098 0BBC                                      l4154 0D74  
                                    l2492 1745                                      l2580 1772  
                                    l2548 0E5B                                      l3604 071A  
                                    l3700 056B                                      l4084 025D  
                                    l4076 0209                                      l4068 01E3  
                                    l4092 02B5                                      l4180 0E18  
                                    l4172 0E12                                      l2566 0ECE  
                                    l3630 07C6                                      l3710 0598  
                                    l4086 0272                                      l4078 021E  
                                    l4094 02BA                                      l4174 0E15  
                                    l3560 16E0                                      l2760 0C04  
                                    l2568 0EDA                                      l3640 07DD  
                                    l3608 074A                                      l3800 039B  
                                    l3618 0725                                      l3626 07BF  
                                    l3730 0600                                      l3714 05B2  
                                    l3706 0581                                      l3802 03AB  
                                    l3810 03DE                                      l3572 0A71  
                                    l3636 07D0                                      l3652 0CBC  
                                    l3804 03B4                                      l4292 0168  
                                    l3558 16D4                                      l2926 1658  
                                    l2782 0C6C                                      l2774 0C30  
                                    l3582 0A9E                                      l3670 0D04  
                                    l3822 044A                                      l3814 03FD  
                                    l4294 028C                                      l2934 07F8  
                                    l3910 179F                                      ?_pad 0024  
                                    l2792 0C9B                                      l2776 0C35  
                                    l2768 0C20                                      l3568 0A69  
                                    l3680 0D13                                      l3672 0D10  
                                    l3832 047B                                      l4296 0353  
                                    l3906 088C                                      l2778 0C49  
                                    l4298 0C41                                      l3578 0A75  
                                    l3690 0D5D                                      l3666 0CF3  
                                    l3754 0690                                      l3738 0642  
                                    l3684 0D40                                      l3852 0517  
                                    l3836 0499                                      l3932 0B3B  
                                    l3924 0B37                                      l3598 0704  
                                    l3846 04F4                                      l3862 0528  
                                    l3934 0B62                                      l3688 0D51  
                                    l3856 051D                                      l3768 0324  
                                    l3784 033A                                      l3880 097F  
                                    l3960 0AAD                                      l3936 0B67  
                                    l3778 0335                                      l3882 099C  
                                    l3962 0ACF                                      l3788 036C  
                                    l3948 0856                                      l3894 17C2  
                                    STR_1 184E                                      STR_2 1834  
                                    STR_3 1882                                      STR_4 181A  
                                    STR_5 1868                                      STR_6 1800  
                                    STR_7 18C5                                      STR_8 18DA  
                                    STR_9 18DA                                      _LATA 010C  
                                    _LATB 010D                                      u3015 08ED  
                                    _LATC 010E                                      u3300 06BE  
                                    u4020 0155                                      u2085 0EBC  
                                    u3310 06BF                                      u1710 173B  
                                    u4030 0156                                      u2600 0C81  
                                    u1800 178F                                      u1720 173C  
                                    u4025 0151                                      u4105 0E2E  
                                    u1810 1790                                      u1820 0810  
                                    u3405 0739                                      u4117 0E1C  
                                    u1830 0811                                      u3415 0745  
                                    u4127 07FB                                      u3600 05CA  
                                    u4137 0AC7                                      u1850 16F6  
                                    u4147 08CD                                      u3355 06FC  
                                    u3515 0D0E                                      u1860 16F7  
                                    u3460 0CAC                                      u1780 1724  
                                    u3620 05E9                                      u2900 092F  
                                    u4157 08DA                                      u1685 0A3D  
                                    u3285 0A7F                                      u3525 0D1D  
                                    u2590 0C80                                      u1950 0F69  
                                    u1790 1725                                      u3630 05EA  
                                    u1775 1707                                      u3385 07BD  
                                    u3545 0D5B                                      u2835 0A05  
                                    u2915 093F                                      u2845 09E6  
                                    u1885 174C                                      u3565 0563  
                                    u2925 0837                                      u3590 05C9  
                                    u1895 1751                                      u3495 0CDC  
                                    u3655 0626                                      u1985 0FAE  
                                    u3665 064C                                      u3585 05AC  
                                    u2865 09C3                                      u3770 03D0  
                                    u2890 092E                                      u3915 0B41  
                                    u3780 03D1                                      u2884 0928  
                                    u3685 0662                                      u2885 0927  
                                    u3925 0B11                                      u3950 0082  
                                    u3695 066E                                      u3935 0860  
                                    u3960 008F                                      u3875 17CC  
                                    u3885 087D                                      _TMR0 0015  
                                    _WPUA 020C                                      _WPUB 020D  
                                    _WPUC 020E                              __CFG_WRT$OFF 0000  
                           __CFG_FCMEN$ON 0000                                      abs@a 0073  
                                    _dbuf 024C                                      _atoi 0BFF  
                       GetNavData@success 00D4                                      _main 0D63  
                                    _dtoa 06A2                      __end_of_GetLengthUBX 16A4  
                                    _prec 00E6                              TransmitBit@b 0071  
                                    _nout 0120                                      pad@i 0028  
                                    pad@p 0025                                      fsr0h 0005  
                                    fsr1h 0007                                      indf0 0000  
                                    fsr0l 0004                                      indf1 0001  
                                    fsr1l 0006                                      pad@w 002A  
                                    _stoa 0CA0                                      btemp 007E  
                                    _xtoa 054D                             __CFG_BOREN$ON 0000  
                       GPS_SendUBX@length 0075              GPS_HasAcknowledged@startTime 0020  
                                    start 000D                             __CFG_MCLRE$ON 0000  
                              _GetNavData 0069                                     ??_abs 0075  
                                   ??_pad 0027                   __end_of_TMR0_Initialize 16BA  
          ??_TMR0_DefaultInterruptHandler 0070                             ??_SafeSetByte 0077  
                           ?_EUSART_Write 0070            __size_of_OSCILLATOR_Initialize 0007  
           __end_of_OSCILLATOR_Initialize 1637                           __end_of___aodiv 1000  
                                   ?_atoi 0076                                     ?_main 0070  
                                   ?_dtoa 0030                GPS_HasAcknowledged@ackByte 0024  
                         __end_of___aomod 0F0D                                _FindString 09D6  
                                   STR_10 189C                                     STR_11 18B3  
                                   STR_12 18D3                             __CFG_WDTE$OFF 0000  
                              _FlashError 08C4                                     ?_stoa 007A  
                                   ?_xtoa 002D                                     i1l132 000B  
                            vfpfcnvrt@fmt 0053                              vfpfcnvrt@llu 00A8  
                                   _TRISA 008C                                     _TRISB 008D  
                                   _TRISC 008E                                     _RXPPS 0E24  
       __size_of_TMR0_SetInterruptHandler 0006                 ?_TMR0_SetInterruptHandler 0070  
                          _GetNavData$534 00CF                            _GetNavData$535 00D1  
                        __end_of_TMR0_ISR 1681                                     _crc16 0AFF  
                      FindString@matching 0023                                     _flags 006D  
                                   _fputc 0A12                           __end_of_isalpha 1797  
                                   _fputs 17DA                           __end_of_isdigit 16FE  
                            ?_GPS_SendUBX 0070                                     _ticks 00E0  
                                   atoi@n 0027                                     pad@fp 002C  
                                   atoi@s 0076                                     _width 00E4  
                                   _putch 1619                                     main@i 00DE  
                                   dtoa@d 0030                                     dtoa@i 004C  
                                   dtoa@n 0044                                     dtoa@p 003E  
                                   dtoa@s 0042                                     dtoa@w 0040  
                         __end_of_islower 1743                           __end_of_isspace 177A  
                         __end_of_isupper 172C                         __end_of_BAUD_RATE 18E3  
                                   pclath 000A                       GetNavData@dataIndex 00D8  
                 GPS_HasAcknowledged@data 002F                             TransmitByte@i 0074  
                                   stoa@i 002A                                     stoa@l 0033  
                                   stoa@p 0031                                     stoa@s 007A  
                                   stoa@w 002C                                     status 0003  
                                   wtemp0 007E                           __end_of_sprintf 0976  
                                   xtoa@c 0051                                     xtoa@d 002D  
                                   xtoa@i 004F                                     xtoa@n 0047  
                                   xtoa@p 0043                                     xtoa@w 0045  
                                   xtoa@x 0035                  __end_of_MESSAGE_INTERVAL 18E5  
                             _ClearString 17B5                       GetNavData@data_type 00BA  
                         __end_of_toupper 0822                              _toupper$1115 007C  
                         _crc_append_byte 09A5                           __initialization 000F  
                            __end_of_atoi 0CA0                              __end_of_main 0E31  
                            __end_of_dtoa 07EF                      GPS_HasAcknowledged@i 0031  
                         SafeSetByte@data 0076                              __end_of_stoa 0D63  
                         SafeSetByte@dest 0070                              __end_of_xtoa 06A2  
                          ??_EUSART_Write 0070                            __CFG_LPBOR$OFF 0000  
             ?_INTERRUPT_InterruptManager 0070                                    ??_atoi 0078  
                                  ??_main 00DB                                    ??_dtoa 0038  
                                  ??_stoa 0020                                    ??_xtoa 0036  
                          __CFG_PLLEN$OFF 0000                          __end_of_TimerISR 1650  
                        __end_of_SetupGPS 0AFF                       __end_of_SafeSetByte 089A  
                                  ?_crc16 0078                                    ?_fputc 0072  
                                  ?_fputs 007A                                    _ANSELA 018C  
                                  ?_putch 0070                                    _ANSELB 018D  
                                  _ANSELC 018E                __end_of_EUSART_is_rx_ready 1619  
                                  _BORCON 0116                                    _RC1REG 0199  
                                  _RC1STA 019D                                    _RB7PPS 0E9F  
                                  _ODCONA 028C                                    _ODCONB 028D  
                                  _ODCONC 028E                                    _OSCCON 0099  
                                  u203lld 0E59                             vfpfcnvrt@done 00B3  
                                  _SPBRGH 019C                                    _SPBRGL 019B  
                                  _TX1REG 019A                                    u192lld 0F35  
                                  _TX1STA 019E                            __CFG_PWRTE$OFF 0000  
                     GetNavData@temp_time 00C1                              vfprintf@cfmt 0061  
                             ?_GetNavData 0070                                 ??___aodiv 0070  
                               ??___aomod 0070                                    ___wmul 1743  
                                  crc16@c 0023                                    crc16@i 002A  
                          __CFG_STVREN$ON 0000                          ?_TMR0_Initialize 0070  
                     GetNavData@startTime 00CB                                    _printf 1681  
                                  pad@buf 0024                               ?_FindString 0074  
                                  main@id 00DC                                    _strcat 16BA  
                                  dtoa@fp 003B                               ?_FlashError 0070  
                                  _strcpy 1797                                    _strlen 16D0  
                                  fputc@c 0072                                    fputs@c 0020  
                                  fputs@i 0021                                    fputs@s 0023  
                               ??_isalpha 0072                                 ??_isdigit 0072  
                               ??_islower 0072                                 ??_isspace 0072  
                        ??_TransmitString 0078                                 ??_isupper 0072  
                     FindString@targetLen 0078                                    stoa@cp 002F  
                                  stoa@fp 002E                          __end_of_vfprintf 09A5  
TMR0_SetInterruptHandler@InterruptHandler 0070                     __size_of_GetLengthUBX 0012  
                      __end_of_DELAY_MULT 18E1                                 ??_sprintf 0063  
                                  xtoa@fp 003E                                 ??_toupper 0078  
                 __end_of_crc_append_byte 09D6                      __size_of_EUSART_Read 000A  
                       _SYSTEM_Initialize 1665                   __end_of__initialization 0065  
                      ?_SYSTEM_Initialize 0070                            __pcstackCOMMON 0070  
                            __pidataBANK1 1610                              __pidataBANK2 1637  
                            __pidataBANK4 08F0                             __end_of_crc16 0B6D  
                     ??_SYSTEM_Initialize 0073                                 ?_TMR0_ISR 0070  
                           __end_of_fputc 0A5D                             __end_of_fputs 1800  
                           ??_TransmitBit 0070                          FindString@target 0076  
                        FindString@srcLen 0074                             __end_of_putch 161E  
                        SafeSetByte@index 0074                               _SafeSetByte 0871  
                            _GetLengthUBX 1692                            _OPTION_REGbits 0095  
                           _gps_longitude 01B1                                   ??_crc16 007A  
                                 ??_fputc 0075               __end_of_GPS_HasAcknowledged 0BFF  
               __end_of_SYSTEM_Initialize 1671                       __size_of_GetNavData 0292  
                                 ??_fputs 007B                                   ??_putch 0071  
                              __pbssBANK0 006D                                __pbssBANK1 00E0  
                              __pbssBANK2 0120                                __pbssBANK3 01A0  
                              __pbssBANK4 024C                                __pbssBANK5 02A0  
                              __pbssBANK6 0320                      __end_of_EUSART_Write 1646  
                    __size_of_GPS_SendUBX 0027                       __size_of_FindString 003C  
                     __size_of_FlashError 002C                          _setNavFlightMode 0220  
                              __pmaintext 0D63                                 ?_TimerISR 0070  
                               ?_SetupGPS 0070          __end_of_TMR0_SetInterruptHandler 1624  
                                 ?___wmul 0070                                ??_TMR0_ISR 0070  
                         __CFG_PPS1WAY$ON 0000                                __pintentry 0004  
                                 ?_printf 0063                                   ?_strcat 0020  
                                 ?_strcpy 0074                                   ?_strlen 0070  
                         __CFG_WDTCCS$SWC 0000                       __end_of_TransmitBit 0800  
                      __size_of_vfpfcnvrt 0252                                   _OSCTUNE 0098  
                                 _SLRCONA 030C                                   _SLRCONB 030D  
                                 _SLRCONC 030E                          ?_crc_append_byte 0070  
                            ?_ClearString 0074                                 _BAUD_RATE 18E1  
                              ??_TimerISR 0070                                ??_SetupGPS 0069  
                                 ___aodiv 0F0D                                   ___aomod 0E31  
                        GetLengthUBX@data 0073                           __size_of___wmul 001B  
                               ?_vfprintf 005B                                   __ptext1 16BA  
                                 __ptext2 1797                                   __ptext3 0949  
                                 __ptext4 0AFF                                   __ptext5 09A5  
                                 __ptext6 0849                                   __ptext7 091C  
                                 __ptext8 07EF                                   __ptext9 0AAD  
                         __size_of_printf 0011                           __size_of_strcat 0016  
                         __size_of_strcpy 001E                           __size_of_strlen 0017  
                   _OSCILLATOR_Initialize 1630                              __size_of_abs 0017  
                            __size_of_pad 0050                                   _isalpha 177A  
                                 _isdigit 16E7                             _message_start 02A0  
                                 _islower 172C                  ??_PIN_MANAGER_Initialize 0070  
                                 _isspace 175E                                   _isupper 1715  
                                 atoi@neg 0020                __size_of_SYSTEM_Initialize 000C  
                                 _sprintf 0949                                   clrloop0 1625  
                                 _toupper 0801                      end_of_initialization 0065  
                                 fputc@fp 0074                                   init_ram 162A  
                                 fputs@fp 007A                                   initloop 162B  
                       _EUSART_Initialize 165A                       crc_append_byte@data 0072  
                      ?_EUSART_Initialize 0070                              ??_GetNavData 0069  
                       __end_of_vfpfcnvrt 054D                        _EUSART_is_rx_ready 1614  
                              ??_vfprintf 005E                            ClearString@str 0074  
                             _TransmitBit 07EF                                   strcpy@d 0079  
                                 strlen@a 0072                                   strcpy@s 007B  
                                 strlen@s 0070                       ??_EUSART_Initialize 0070  
                _TMR0_SetInterruptHandler 161E                              ??_FindString 007A  
                     ?_EUSART_is_rx_ready 0070                              ??_FlashError 0070  
                         TransmitString@i 007B                             ?_TransmitByte 0070  
                        __CFG_FOSC$INTOSC 0000                             crc16@segments 0078  
                   __size_of_EUSART_Write 0008                              GPS_SendUBX@i 0077  
                      __end_of_GetNavData 02FB                 __end_of_EUSART_Initialize 1665  
                    ??_EUSART_is_rx_ready 0070                            _gps_configured 006F  
                      __end_of_FindString 0A12                        __end_of_FlashError 08F0  
                   TransmitString@message 0076                               vfpfcnvrt@ap 0054  
                             vfpfcnvrt@cp 00B0                               vfpfcnvrt@fp 00B7  
                             vfpfcnvrt@ll 00A0                            __end_of___wmul 175E  
                            ?_SafeSetByte 0070                              _EUSART_Write 163E  
                       __size_of_TMR0_ISR 0010                    ?_OSCILLATOR_Initialize 0070  
                          ??_TransmitByte 0072                            __end_of_printf 1692  
                          __end_of_strcat 16D0                            __end_of_strcpy 17B5  
                          __end_of_strlen 16E7                       start_initialization 000F  
                       SafeSetByte@length 0072                  __size_of_TMR0_Initialize 0016  
         __size_of_PIN_MANAGER_Initialize 002A                               __end_of_abs 1715  
                             __end_of_pad 0AAD                             ??_EUSART_Read 0070  
                          _gps_nav_status 0160                               putch@txData 0071  
                    __size_of_ClearString 0025                               vfprintf@fmt 005B  
                                ??___wmul 0074                         __size_of_TimerISR 000A  
                             __pdataBANK1 00E8                               __pdataBANK2 0164  
                             __pdataBANK4 0220                         __size_of_SetupGPS 0052  
                                ??_printf 0065                              ClearString@i 0079  
                                ??_strcat 007C                                  ??_strcpy 0077  
                                ??_strlen 0072                              _gps_altitude 01D1  
                             crc16@string 0028                                 ___latbits 0002  
                           __pcstackBANK0 0020                             __pcstackBANK1 00A0  
                        ___aodiv@dividend 0028                             ??_GPS_SendUBX 0074  
                            _gps_latitude 01C1                __size_of_EUSART_Initialize 000B  
                               crc16@data 0022                       __end_of_EUSART_Read 165A  
                 __size_of_TransmitString 0028                     _TMR0_InterruptHandler 016B  
                               __pnvBANK1 00EC                                 __pnvBANK2 016B  
            __size_of_GPS_HasAcknowledged 0092                             FindString@src 0020  
                  _PIN_MANAGER_Initialize 089A                                  ?___aodiv 0020  
                                ?___aomod 0020                          ___aodiv@quotient 0073  
                        crc_append_byte@i 0076              ??_INTERRUPT_InterruptManager 0070  
                       __size_of_vfprintf 002F                                  _BAUD1CON 019F  
                                ?_isalpha 0070                                  ?_isdigit 0070  
                                ?_islower 0070                                  ?_isspace 0070  
                                ?_isupper 0070                            __size_of_crc16 006E  
                                ?_sprintf 00B8                            __size_of_fputc 004B  
                          __size_of_fputs 0026                                  ?_toupper 0076  
                          __size_of_putch 0005                         ??_TMR0_Initialize 0072  
                   _gps_vertical_velocity 0122                            ___wmul@product 0074  
                                _LATAbits 010C                                  _LATCbits 010E  
                     __end_of_GPS_SendUBX 0849                                 clear_ram0 1624  
                    __end_of_TransmitByte 0949                        crc_append_byte@crc 0070  
     __size_of_INTERRUPT_InterruptManager 0009                ??_TMR0_SetInterruptHandler 0072  
                                _PIR1bits 0010                     _gps_speed_over_ground 0136  
                __size_of_crc_append_byte 0031                      __CFG_WDTCPS$WDTCPS1F 0000  
                                _TMR0_ISR 1671                              ?_TransmitBit 0070  
                               _vfpfcnvrt 02FB                         ___wmul@multiplier 0070  
                          GetNavData@byte 00DA                            GetNavData@skip 00D3  
                    __size_of_SafeSetByte 0029                      TransmitString@counti 0079  
                            _isspace$1015 0074                               _EUSART_Read 1650  
                              vfpfcnvrt@c 00B2                   GetNavData@dataFieldType 00D6  
                  _gps_course_over_ground 012C                                _DELAY_MULT 18DF  
                              vfprintf@ap 005D                                vfprintf@fp 0060  
                                _TimerISR 1646                                  _SetupGPS 0AAD  
                 ??_OSCILLATOR_Initialize 0070                          __size_of___aodiv 00F3  
                        __size_of___aomod 00DC                                ?_vfpfcnvrt 0053  
                         ___aodiv@divisor 0020                           ___aodiv@counter 0071  
                           ?_GetLengthUBX 0070                         ClearString@counti 0077  
                              sprintf@fmt 00BA                                  crc16@crc 0024  
                                crc16@len 0020                                  crc16@str 0026  
                              strcat@dest 0020                                  _atoi$990 0024  
                                _atoi$988 0022                                  _atoi$989 0026  
                                _checksum 015A                          __size_of_isalpha 001D  
                        __size_of_isdigit 0017                                  _dtoa$654 003C  
                        __size_of_islower 0017                          __size_of_isspace 001C  
                                __ptext10 0822                                  __ptext11 1692  
                                __ptext20 1681                                  __ptext12 0B6D  
                                __ptext21 0976                                  __ptext13 1665  
                                __ptext30 0A5D                                  __ptext22 02FB  
                                __ptext14 16A4                                  __ptext31 17DA  
                                __ptext23 054D                                  __ptext15 161E  
                                __ptext40 16E7                                  __ptext32 0A12  
                                __ptext24 0801                                  __ptext16 089A  
                                __ptext41 1743                                  __ptext33 1619  
                                __ptext25 172C                                  __ptext17 1630  
                                __ptext50 1671                                  __ptext42 0871  
                                __ptext34 163E                                  __ptext26 1715  
                                __ptext18 165A                                  __ptext51 0003  
                                __ptext43 09D6                                  __ptext35 16FE  
                                __ptext27 177A                                  __ptext19 0069  
                                __ptext52 1646                                  __ptext44 1614  
                                __ptext36 0E31                                  __ptext28 0CA0  
                                __ptext45 1650                                  __ptext37 0F0D  
                                __ptext29 06A2                                  __ptext46 17B5  
                                __ptext38 0BFF                                  __ptext47 16D0  
                                __ptext39 175E                                  __ptext48 08C4  
                        __size_of_isupper 0017                               _GPS_SendUBX 0822  
                        __size_of_sprintf 002D                                strcpy@dest 0074  
                        __size_of_toupper 0021                                  _gps_hdop 0152  
             __size_of_EUSART_is_rx_ready 0005                             __size_of_atoi 00A1  
                          _TransmitString 0849                             __size_of_main 00CE  
                           __size_of_dtoa 014D                                  _gps_time 0140  
                                _gps_vdop 014A                             __size_of_stoa 00C3  
                           __size_of_xtoa 0155                               _message_end 0320  
                                _messages 00E8      __end_of_TMR0_DefaultInterruptHandler 0004  
   __size_of_TMR0_DefaultInterruptHandler 0001              _TMR0_DefaultInterruptHandler 0003  
                    __CFG_WDTCWS$WDTCWSSW 0000                                _RC1STAbits 019D  
                               stoa@F1139 0164                                  int$flags 007E  
                                _xtoa$676 003F                                  _xtoa$677 0041  
                                _vfprintf 0976        __end_of_INTERRUPT_InterruptManager 000D  
              _INTERRUPT_InterruptManager 0004                                 printf@fmt 0063  
                          ??_GetLengthUBX 0073                         ??_crc_append_byte 0073  
                        _MESSAGE_INTERVAL 18E3                          ___aomod@dividend 0028  
                     _GPS_HasAcknowledged 0B6D                                _INTCONbits 000B  
                          __pstringtext10 189C                            __pstringtext11 18B3  
                          __pstringtext12 18C5                            __pstringtext13 18D3  
                          __pstringtext14 18DA                            __pstringtext15 0000  
                                isalpha@c 0070                                  isdigit@c 0070  
                  __end_of_TransmitString 0871                     __size_of_TransmitByte 002D  
                                intlevel1 0000                                 sprintf@ap 0066  
                             FindString@i 0021                          TransmitByte@byte 0073  
                               strcat@src 0022                               FlashError@i 0072  
                                islower@c 0070                             ??_ClearString 0076  
                                isspace@c 0070                   ?_PIN_MANAGER_Initialize 0070  
                       __CFG_CLKOUTEN$OFF 0000                      ?_GPS_HasAcknowledged 0070  
                               strcpy@src 0076                                  isupper@c 0070  
           ?_TMR0_DefaultInterruptHandler 0070              GPS_HasAcknowledged@ackByteID 0030  
            GPS_HasAcknowledged@ackPacket 0025                                  printf@ap 0068  
                         ___aomod@divisor 0020                               ??_vfpfcnvrt 0055  
                                stoa@nuls 0023                           ___aomod@counter 0071  
                           _vfpfcnvrt$691 00B5                             __pstringtext1 18DF  
                           __pstringtext2 18E1                             __pstringtext3 18E3  
                           __pstringtext4 1800                             __pstringtext5 181A  
                           __pstringtext6 1834                             __pstringtext7 184E  
                           __pstringtext8 1868                             __pstringtext9 1882  
                    __size_of_TransmitBit 0011                                _OPTION_REG 0095  
                                sprintf@f 0067                                  sprintf@s 00B8  
                            _TransmitByte 091C                           _TMR0_Initialize 16A4  
                                toupper@c 0076                          GetNavData@F10233 01AA  
                        GetNavData@F10236 01A0                                _TX1STAbits 019E  
                      EUSART_Write@txData 0070                              ___aodiv@sign 0072  
                         ?_TransmitString 0076            __end_of_PIN_MANAGER_Initialize 08C4  
                   ??_GPS_HasAcknowledged 0070                              ___aomod@sign 0072  
