

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sat Jun 15 12:11:07 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F1619
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK2,global,class=CODE,delta=2
     5                           	psect	idataBANK4,global,class=CODE,delta=2
     6                           	psect	stringtext1,global,class=STRCODE,delta=2
     7                           	psect	stringtext2,global,class=STRCODE,delta=2
     8                           	psect	stringtext3,global,class=STRCODE,delta=2
     9                           	psect	stringtext4,global,class=STRCODE,delta=2
    10                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1
    11                           	psect	stringtext5,global,class=STRCODE,delta=2
    12                           	psect	stringtext6,global,class=STRCODE,delta=2
    13                           	psect	stringtext7,global,class=STRCODE,delta=2
    14                           	psect	stringtext8,global,class=STRCODE,delta=2
    15                           	psect	stringtext9,global,class=STRCODE,delta=2
    16                           	psect	stringtext10,global,class=STRCODE,delta=2
    17                           	psect	stringtext11,global,class=STRCODE,delta=2
    18                           	psect	stringtext12,global,class=STRCODE,delta=2
    19                           	psect	cinit,global,class=CODE,merge=1,delta=2
    20                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    21                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    22                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    23                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    24                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    25                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1
    26                           	psect	inittext,global,class=CODE,delta=2
    27                           	psect	clrtext,global,class=CODE,delta=2
    28                           	psect	cstackBANK5,global,class=BANK5,space=1,delta=1
    29                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    30                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    31                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    32                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    33                           	psect	text1,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text2,local,class=CODE,merge=1,delta=2
    35                           	psect	text3,local,class=CODE,merge=1,delta=2
    36                           	psect	text4,local,class=CODE,merge=1,delta=2
    37                           	psect	text5,local,class=CODE,merge=1,delta=2
    38                           	psect	text6,local,class=CODE,merge=1,delta=2
    39                           	psect	text7,local,class=CODE,merge=1,delta=2
    40                           	psect	text8,local,class=CODE,merge=1,delta=2
    41                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    42                           	psect	text10,local,class=CODE,merge=1,delta=2
    43                           	psect	text11,local,class=CODE,merge=1,delta=2
    44                           	psect	text12,local,class=CODE,merge=1,delta=2
    45                           	psect	text13,local,class=CODE,merge=1,delta=2
    46                           	psect	text14,local,class=CODE,merge=1,delta=2
    47                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    48                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    49                           	psect	text17,local,class=CODE,merge=1,delta=2
    50                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    51                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    52                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    53                           	psect	text21,local,class=CODE,merge=1,delta=2
    54                           	psect	text22,local,class=CODE,merge=1,delta=2
    55                           	psect	text23,local,class=CODE,merge=1,delta=2
    56                           	psect	text24,local,class=CODE,merge=1,delta=2
    57                           	psect	text25,local,class=CODE,merge=1,delta=2
    58                           	psect	text26,local,class=CODE,merge=1,delta=2
    59                           	psect	text27,local,class=CODE,merge=1,delta=2
    60                           	psect	text28,local,class=CODE,merge=1,delta=2
    61                           	psect	text29,local,class=CODE,merge=1,delta=2
    62                           	psect	text30,local,class=CODE,merge=1,delta=2
    63                           	psect	text31,local,class=CODE,merge=1,delta=2
    64                           	psect	text32,local,class=CODE,merge=1,delta=2
    65                           	psect	text33,local,class=CODE,merge=1,delta=2
    66                           	psect	text34,local,class=CODE,merge=1,delta=2
    67                           	psect	text35,local,class=CODE,merge=1,delta=2
    68                           	psect	text36,local,class=CODE,merge=1,delta=2,group=2
    69                           	psect	intentry,global,class=CODE,delta=2
    70                           	psect	text38,local,class=CODE,merge=1,delta=2
    71                           	psect	text39,local,class=CODE,merge=1,delta=2
    72                           	psect	text40,local,class=CODE,merge=1,delta=2
    73                           	psect	text41,local,class=CODE,merge=1,delta=2
    74                           	dabs	1,0x7E,2
    75  0000                     
    76                           ; Version 2.05
    77                           ; Generated 20/12/2018 GMT
    78                           ; 
    79                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    80                           ; All rights reserved.
    81                           ; 
    82                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    83                           ; 
    84                           ; Redistribution and use in source and binary forms, with or without modification, are
    85                           ; permitted provided that the following conditions are met:
    86                           ; 
    87                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    88                           ;        conditions and the following disclaimer.
    89                           ; 
    90                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    91                           ;        of conditions and the following disclaimer in the documentation and/or other
    92                           ;        materials provided with the distribution.
    93                           ; 
    94                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    95                           ;        software without specific prior written permission.
    96                           ; 
    97                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    98                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    99                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   100                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   101                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   102                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   103                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   104                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   105                           ; 
   106                           ; 
   107                           ; Code-generator required, PIC16F1619 Definitions
   108                           ; 
   109                           ; SFR Addresses
   110  0000                     	;# 
   111  0001                     	;# 
   112  0002                     	;# 
   113  0003                     	;# 
   114  0004                     	;# 
   115  0005                     	;# 
   116  0006                     	;# 
   117  0007                     	;# 
   118  0008                     	;# 
   119  0009                     	;# 
   120  000A                     	;# 
   121  000B                     	;# 
   122  000C                     	;# 
   123  000D                     	;# 
   124  000E                     	;# 
   125  0010                     	;# 
   126  0011                     	;# 
   127  0012                     	;# 
   128  0013                     	;# 
   129  0014                     	;# 
   130  0015                     	;# 
   131  0016                     	;# 
   132  0016                     	;# 
   133  0017                     	;# 
   134  0018                     	;# 
   135  0019                     	;# 
   136  001A                     	;# 
   137  001A                     	;# 
   138  001B                     	;# 
   139  001B                     	;# 
   140  001C                     	;# 
   141  001D                     	;# 
   142  001E                     	;# 
   143  001F                     	;# 
   144  008C                     	;# 
   145  008D                     	;# 
   146  008E                     	;# 
   147  0090                     	;# 
   148  0091                     	;# 
   149  0092                     	;# 
   150  0093                     	;# 
   151  0094                     	;# 
   152  0095                     	;# 
   153  0096                     	;# 
   154  0098                     	;# 
   155  0099                     	;# 
   156  009A                     	;# 
   157  009B                     	;# 
   158  009B                     	;# 
   159  009C                     	;# 
   160  009D                     	;# 
   161  009E                     	;# 
   162  009F                     	;# 
   163  010C                     	;# 
   164  010D                     	;# 
   165  010E                     	;# 
   166  0111                     	;# 
   167  0112                     	;# 
   168  0113                     	;# 
   169  0114                     	;# 
   170  0115                     	;# 
   171  0116                     	;# 
   172  0117                     	;# 
   173  0118                     	;# 
   174  0119                     	;# 
   175  011C                     	;# 
   176  018C                     	;# 
   177  018D                     	;# 
   178  018E                     	;# 
   179  0191                     	;# 
   180  0191                     	;# 
   181  0192                     	;# 
   182  0193                     	;# 
   183  0193                     	;# 
   184  0194                     	;# 
   185  0195                     	;# 
   186  0196                     	;# 
   187  0197                     	;# 
   188  0199                     	;# 
   189  0199                     	;# 
   190  0199                     	;# 
   191  019A                     	;# 
   192  019A                     	;# 
   193  019A                     	;# 
   194  019B                     	;# 
   195  019B                     	;# 
   196  019B                     	;# 
   197  019B                     	;# 
   198  019B                     	;# 
   199  019C                     	;# 
   200  019C                     	;# 
   201  019C                     	;# 
   202  019D                     	;# 
   203  019D                     	;# 
   204  019D                     	;# 
   205  019E                     	;# 
   206  019E                     	;# 
   207  019E                     	;# 
   208  019F                     	;# 
   209  019F                     	;# 
   210  019F                     	;# 
   211  019F                     	;# 
   212  019F                     	;# 
   213  020C                     	;# 
   214  020D                     	;# 
   215  020E                     	;# 
   216  0211                     	;# 
   217  0211                     	;# 
   218  0212                     	;# 
   219  0212                     	;# 
   220  0213                     	;# 
   221  0213                     	;# 
   222  0214                     	;# 
   223  0214                     	;# 
   224  0215                     	;# 
   225  0215                     	;# 
   226  0215                     	;# 
   227  0215                     	;# 
   228  0216                     	;# 
   229  0216                     	;# 
   230  0217                     	;# 
   231  0217                     	;# 
   232  028C                     	;# 
   233  028D                     	;# 
   234  028E                     	;# 
   235  0291                     	;# 
   236  0291                     	;# 
   237  0292                     	;# 
   238  0293                     	;# 
   239  0294                     	;# 
   240  0298                     	;# 
   241  0298                     	;# 
   242  0299                     	;# 
   243  029A                     	;# 
   244  029B                     	;# 
   245  029E                     	;# 
   246  030C                     	;# 
   247  030D                     	;# 
   248  030E                     	;# 
   249  038C                     	;# 
   250  038D                     	;# 
   251  038E                     	;# 
   252  0391                     	;# 
   253  0392                     	;# 
   254  0393                     	;# 
   255  0394                     	;# 
   256  0395                     	;# 
   257  0396                     	;# 
   258  0397                     	;# 
   259  0398                     	;# 
   260  0399                     	;# 
   261  040E                     	;# 
   262  0413                     	;# 
   263  0413                     	;# 
   264  0414                     	;# 
   265  0414                     	;# 
   266  0415                     	;# 
   267  0416                     	;# 
   268  0417                     	;# 
   269  0418                     	;# 
   270  041A                     	;# 
   271  041A                     	;# 
   272  041B                     	;# 
   273  041B                     	;# 
   274  041C                     	;# 
   275  041D                     	;# 
   276  041E                     	;# 
   277  041F                     	;# 
   278  0493                     	;# 
   279  0494                     	;# 
   280  0495                     	;# 
   281  0496                     	;# 
   282  049A                     	;# 
   283  049B                     	;# 
   284  049C                     	;# 
   285  049D                     	;# 
   286  058C                     	;# 
   287  058C                     	;# 
   288  058D                     	;# 
   289  058E                     	;# 
   290  058E                     	;# 
   291  058F                     	;# 
   292  0590                     	;# 
   293  0590                     	;# 
   294  0591                     	;# 
   295  0592                     	;# 
   296  0592                     	;# 
   297  0593                     	;# 
   298  0594                     	;# 
   299  0594                     	;# 
   300  0595                     	;# 
   301  0596                     	;# 
   302  0596                     	;# 
   303  0597                     	;# 
   304  0598                     	;# 
   305  0599                     	;# 
   306  059A                     	;# 
   307  059B                     	;# 
   308  059B                     	;# 
   309  059C                     	;# 
   310  059D                     	;# 
   311  060C                     	;# 
   312  060C                     	;# 
   313  060D                     	;# 
   314  060E                     	;# 
   315  060F                     	;# 
   316  060F                     	;# 
   317  0610                     	;# 
   318  0611                     	;# 
   319  0612                     	;# 
   320  0613                     	;# 
   321  0614                     	;# 
   322  0617                     	;# 
   323  0617                     	;# 
   324  0618                     	;# 
   325  0619                     	;# 
   326  061A                     	;# 
   327  061A                     	;# 
   328  061B                     	;# 
   329  061C                     	;# 
   330  0691                     	;# 
   331  0692                     	;# 
   332  0693                     	;# 
   333  0694                     	;# 
   334  0695                     	;# 
   335  0696                     	;# 
   336  0697                     	;# 
   337  0699                     	;# 
   338  069A                     	;# 
   339  0711                     	;# 
   340  0712                     	;# 
   341  0713                     	;# 
   342  0714                     	;# 
   343  0715                     	;# 
   344  0718                     	;# 
   345  0718                     	;# 
   346  0719                     	;# 
   347  071A                     	;# 
   348  071A                     	;# 
   349  071B                     	;# 
   350  071C                     	;# 
   351  071D                     	;# 
   352  0791                     	;# 
   353  0791                     	;# 
   354  0792                     	;# 
   355  0793                     	;# 
   356  0793                     	;# 
   357  0794                     	;# 
   358  0795                     	;# 
   359  0795                     	;# 
   360  0796                     	;# 
   361  0797                     	;# 
   362  0797                     	;# 
   363  0798                     	;# 
   364  0799                     	;# 
   365  079A                     	;# 
   366  080C                     	;# 
   367  080C                     	;# 
   368  080D                     	;# 
   369  080E                     	;# 
   370  080E                     	;# 
   371  080F                     	;# 
   372  0810                     	;# 
   373  0810                     	;# 
   374  0811                     	;# 
   375  0812                     	;# 
   376  0812                     	;# 
   377  0813                     	;# 
   378  0814                     	;# 
   379  0815                     	;# 
   380  0816                     	;# 
   381  0817                     	;# 
   382  0818                     	;# 
   383  0819                     	;# 
   384  081A                     	;# 
   385  081A                     	;# 
   386  081B                     	;# 
   387  081C                     	;# 
   388  081C                     	;# 
   389  081D                     	;# 
   390  088C                     	;# 
   391  088D                     	;# 
   392  088E                     	;# 
   393  088F                     	;# 
   394  088F                     	;# 
   395  0890                     	;# 
   396  0891                     	;# 
   397  0892                     	;# 
   398  0893                     	;# 
   399  0893                     	;# 
   400  0894                     	;# 
   401  0895                     	;# 
   402  0896                     	;# 
   403  0897                     	;# 
   404  0897                     	;# 
   405  0898                     	;# 
   406  0899                     	;# 
   407  0D8C                     	;# 
   408  0D8C                     	;# 
   409  0D8D                     	;# 
   410  0D8E                     	;# 
   411  0D8F                     	;# 
   412  0D8F                     	;# 
   413  0D90                     	;# 
   414  0D91                     	;# 
   415  0D92                     	;# 
   416  0D92                     	;# 
   417  0D93                     	;# 
   418  0D94                     	;# 
   419  0D95                     	;# 
   420  0D95                     	;# 
   421  0D96                     	;# 
   422  0D97                     	;# 
   423  0D98                     	;# 
   424  0D99                     	;# 
   425  0D9A                     	;# 
   426  0D9B                     	;# 
   427  0D9C                     	;# 
   428  0D9D                     	;# 
   429  0D9E                     	;# 
   430  0D9E                     	;# 
   431  0D9F                     	;# 
   432  0DA0                     	;# 
   433  0DA1                     	;# 
   434  0DA1                     	;# 
   435  0DA2                     	;# 
   436  0DA3                     	;# 
   437  0DA4                     	;# 
   438  0DA4                     	;# 
   439  0DA5                     	;# 
   440  0DA6                     	;# 
   441  0DA7                     	;# 
   442  0DA7                     	;# 
   443  0DA8                     	;# 
   444  0DA9                     	;# 
   445  0DAA                     	;# 
   446  0DAB                     	;# 
   447  0DAC                     	;# 
   448  0DAD                     	;# 
   449  0DAE                     	;# 
   450  0DAF                     	;# 
   451  0E0F                     	;# 
   452  0E10                     	;# 
   453  0E11                     	;# 
   454  0E12                     	;# 
   455  0E13                     	;# 
   456  0E14                     	;# 
   457  0E15                     	;# 
   458  0E16                     	;# 
   459  0E17                     	;# 
   460  0E18                     	;# 
   461  0E19                     	;# 
   462  0E1A                     	;# 
   463  0E1B                     	;# 
   464  0E1C                     	;# 
   465  0E1D                     	;# 
   466  0E1E                     	;# 
   467  0E1F                     	;# 
   468  0E20                     	;# 
   469  0E21                     	;# 
   470  0E22                     	;# 
   471  0E23                     	;# 
   472  0E24                     	;# 
   473  0E25                     	;# 
   474  0E26                     	;# 
   475  0E27                     	;# 
   476  0E28                     	;# 
   477  0E29                     	;# 
   478  0E2A                     	;# 
   479  0E2B                     	;# 
   480  0E2C                     	;# 
   481  0E2D                     	;# 
   482  0E2E                     	;# 
   483  0E90                     	;# 
   484  0E91                     	;# 
   485  0E92                     	;# 
   486  0E94                     	;# 
   487  0E95                     	;# 
   488  0E9C                     	;# 
   489  0E9D                     	;# 
   490  0E9E                     	;# 
   491  0E9F                     	;# 
   492  0EA0                     	;# 
   493  0EA1                     	;# 
   494  0EA2                     	;# 
   495  0EA3                     	;# 
   496  0EA4                     	;# 
   497  0EA5                     	;# 
   498  0EA6                     	;# 
   499  0EA7                     	;# 
   500  0F0F                     	;# 
   501  0F10                     	;# 
   502  0F11                     	;# 
   503  0F12                     	;# 
   504  0F13                     	;# 
   505  0F14                     	;# 
   506  0F15                     	;# 
   507  0F16                     	;# 
   508  0F17                     	;# 
   509  0F18                     	;# 
   510  0F19                     	;# 
   511  0F1A                     	;# 
   512  0F1B                     	;# 
   513  0F1C                     	;# 
   514  0F1D                     	;# 
   515  0F1E                     	;# 
   516  0F1F                     	;# 
   517  0F20                     	;# 
   518  0F21                     	;# 
   519  0F22                     	;# 
   520  0F23                     	;# 
   521  0F24                     	;# 
   522  0F25                     	;# 
   523  0F26                     	;# 
   524  0F27                     	;# 
   525  0F28                     	;# 
   526  0F29                     	;# 
   527  0F2A                     	;# 
   528  0F2B                     	;# 
   529  0F2C                     	;# 
   530  0F2D                     	;# 
   531  0F2E                     	;# 
   532  0F2F                     	;# 
   533  0F30                     	;# 
   534  0F31                     	;# 
   535  0F32                     	;# 
   536  0F33                     	;# 
   537  0F34                     	;# 
   538  0F35                     	;# 
   539  0F36                     	;# 
   540  0F37                     	;# 
   541  0FE4                     	;# 
   542  0FE5                     	;# 
   543  0FE6                     	;# 
   544  0FE7                     	;# 
   545  0FE8                     	;# 
   546  0FE9                     	;# 
   547  0FEA                     	;# 
   548  0FEB                     	;# 
   549  0FED                     	;# 
   550  0FEE                     	;# 
   551  0FEF                     	;# 
   552  0000                     	;# 
   553  0001                     	;# 
   554  0002                     	;# 
   555  0003                     	;# 
   556  0004                     	;# 
   557  0005                     	;# 
   558  0006                     	;# 
   559  0007                     	;# 
   560  0008                     	;# 
   561  0009                     	;# 
   562  000A                     	;# 
   563  000B                     	;# 
   564  000C                     	;# 
   565  000D                     	;# 
   566  000E                     	;# 
   567  0010                     	;# 
   568  0011                     	;# 
   569  0012                     	;# 
   570  0013                     	;# 
   571  0014                     	;# 
   572  0015                     	;# 
   573  0016                     	;# 
   574  0016                     	;# 
   575  0017                     	;# 
   576  0018                     	;# 
   577  0019                     	;# 
   578  001A                     	;# 
   579  001A                     	;# 
   580  001B                     	;# 
   581  001B                     	;# 
   582  001C                     	;# 
   583  001D                     	;# 
   584  001E                     	;# 
   585  001F                     	;# 
   586  008C                     	;# 
   587  008D                     	;# 
   588  008E                     	;# 
   589  0090                     	;# 
   590  0091                     	;# 
   591  0092                     	;# 
   592  0093                     	;# 
   593  0094                     	;# 
   594  0095                     	;# 
   595  0096                     	;# 
   596  0098                     	;# 
   597  0099                     	;# 
   598  009A                     	;# 
   599  009B                     	;# 
   600  009B                     	;# 
   601  009C                     	;# 
   602  009D                     	;# 
   603  009E                     	;# 
   604  009F                     	;# 
   605  010C                     	;# 
   606  010D                     	;# 
   607  010E                     	;# 
   608  0111                     	;# 
   609  0112                     	;# 
   610  0113                     	;# 
   611  0114                     	;# 
   612  0115                     	;# 
   613  0116                     	;# 
   614  0117                     	;# 
   615  0118                     	;# 
   616  0119                     	;# 
   617  011C                     	;# 
   618  018C                     	;# 
   619  018D                     	;# 
   620  018E                     	;# 
   621  0191                     	;# 
   622  0191                     	;# 
   623  0192                     	;# 
   624  0193                     	;# 
   625  0193                     	;# 
   626  0194                     	;# 
   627  0195                     	;# 
   628  0196                     	;# 
   629  0197                     	;# 
   630  0199                     	;# 
   631  0199                     	;# 
   632  0199                     	;# 
   633  019A                     	;# 
   634  019A                     	;# 
   635  019A                     	;# 
   636  019B                     	;# 
   637  019B                     	;# 
   638  019B                     	;# 
   639  019B                     	;# 
   640  019B                     	;# 
   641  019C                     	;# 
   642  019C                     	;# 
   643  019C                     	;# 
   644  019D                     	;# 
   645  019D                     	;# 
   646  019D                     	;# 
   647  019E                     	;# 
   648  019E                     	;# 
   649  019E                     	;# 
   650  019F                     	;# 
   651  019F                     	;# 
   652  019F                     	;# 
   653  019F                     	;# 
   654  019F                     	;# 
   655  020C                     	;# 
   656  020D                     	;# 
   657  020E                     	;# 
   658  0211                     	;# 
   659  0211                     	;# 
   660  0212                     	;# 
   661  0212                     	;# 
   662  0213                     	;# 
   663  0213                     	;# 
   664  0214                     	;# 
   665  0214                     	;# 
   666  0215                     	;# 
   667  0215                     	;# 
   668  0215                     	;# 
   669  0215                     	;# 
   670  0216                     	;# 
   671  0216                     	;# 
   672  0217                     	;# 
   673  0217                     	;# 
   674  028C                     	;# 
   675  028D                     	;# 
   676  028E                     	;# 
   677  0291                     	;# 
   678  0291                     	;# 
   679  0292                     	;# 
   680  0293                     	;# 
   681  0294                     	;# 
   682  0298                     	;# 
   683  0298                     	;# 
   684  0299                     	;# 
   685  029A                     	;# 
   686  029B                     	;# 
   687  029E                     	;# 
   688  030C                     	;# 
   689  030D                     	;# 
   690  030E                     	;# 
   691  038C                     	;# 
   692  038D                     	;# 
   693  038E                     	;# 
   694  0391                     	;# 
   695  0392                     	;# 
   696  0393                     	;# 
   697  0394                     	;# 
   698  0395                     	;# 
   699  0396                     	;# 
   700  0397                     	;# 
   701  0398                     	;# 
   702  0399                     	;# 
   703  040E                     	;# 
   704  0413                     	;# 
   705  0413                     	;# 
   706  0414                     	;# 
   707  0414                     	;# 
   708  0415                     	;# 
   709  0416                     	;# 
   710  0417                     	;# 
   711  0418                     	;# 
   712  041A                     	;# 
   713  041A                     	;# 
   714  041B                     	;# 
   715  041B                     	;# 
   716  041C                     	;# 
   717  041D                     	;# 
   718  041E                     	;# 
   719  041F                     	;# 
   720  0493                     	;# 
   721  0494                     	;# 
   722  0495                     	;# 
   723  0496                     	;# 
   724  049A                     	;# 
   725  049B                     	;# 
   726  049C                     	;# 
   727  049D                     	;# 
   728  058C                     	;# 
   729  058C                     	;# 
   730  058D                     	;# 
   731  058E                     	;# 
   732  058E                     	;# 
   733  058F                     	;# 
   734  0590                     	;# 
   735  0590                     	;# 
   736  0591                     	;# 
   737  0592                     	;# 
   738  0592                     	;# 
   739  0593                     	;# 
   740  0594                     	;# 
   741  0594                     	;# 
   742  0595                     	;# 
   743  0596                     	;# 
   744  0596                     	;# 
   745  0597                     	;# 
   746  0598                     	;# 
   747  0599                     	;# 
   748  059A                     	;# 
   749  059B                     	;# 
   750  059B                     	;# 
   751  059C                     	;# 
   752  059D                     	;# 
   753  060C                     	;# 
   754  060C                     	;# 
   755  060D                     	;# 
   756  060E                     	;# 
   757  060F                     	;# 
   758  060F                     	;# 
   759  0610                     	;# 
   760  0611                     	;# 
   761  0612                     	;# 
   762  0613                     	;# 
   763  0614                     	;# 
   764  0617                     	;# 
   765  0617                     	;# 
   766  0618                     	;# 
   767  0619                     	;# 
   768  061A                     	;# 
   769  061A                     	;# 
   770  061B                     	;# 
   771  061C                     	;# 
   772  0691                     	;# 
   773  0692                     	;# 
   774  0693                     	;# 
   775  0694                     	;# 
   776  0695                     	;# 
   777  0696                     	;# 
   778  0697                     	;# 
   779  0699                     	;# 
   780  069A                     	;# 
   781  0711                     	;# 
   782  0712                     	;# 
   783  0713                     	;# 
   784  0714                     	;# 
   785  0715                     	;# 
   786  0718                     	;# 
   787  0718                     	;# 
   788  0719                     	;# 
   789  071A                     	;# 
   790  071A                     	;# 
   791  071B                     	;# 
   792  071C                     	;# 
   793  071D                     	;# 
   794  0791                     	;# 
   795  0791                     	;# 
   796  0792                     	;# 
   797  0793                     	;# 
   798  0793                     	;# 
   799  0794                     	;# 
   800  0795                     	;# 
   801  0795                     	;# 
   802  0796                     	;# 
   803  0797                     	;# 
   804  0797                     	;# 
   805  0798                     	;# 
   806  0799                     	;# 
   807  079A                     	;# 
   808  080C                     	;# 
   809  080C                     	;# 
   810  080D                     	;# 
   811  080E                     	;# 
   812  080E                     	;# 
   813  080F                     	;# 
   814  0810                     	;# 
   815  0810                     	;# 
   816  0811                     	;# 
   817  0812                     	;# 
   818  0812                     	;# 
   819  0813                     	;# 
   820  0814                     	;# 
   821  0815                     	;# 
   822  0816                     	;# 
   823  0817                     	;# 
   824  0818                     	;# 
   825  0819                     	;# 
   826  081A                     	;# 
   827  081A                     	;# 
   828  081B                     	;# 
   829  081C                     	;# 
   830  081C                     	;# 
   831  081D                     	;# 
   832  088C                     	;# 
   833  088D                     	;# 
   834  088E                     	;# 
   835  088F                     	;# 
   836  088F                     	;# 
   837  0890                     	;# 
   838  0891                     	;# 
   839  0892                     	;# 
   840  0893                     	;# 
   841  0893                     	;# 
   842  0894                     	;# 
   843  0895                     	;# 
   844  0896                     	;# 
   845  0897                     	;# 
   846  0897                     	;# 
   847  0898                     	;# 
   848  0899                     	;# 
   849  0D8C                     	;# 
   850  0D8C                     	;# 
   851  0D8D                     	;# 
   852  0D8E                     	;# 
   853  0D8F                     	;# 
   854  0D8F                     	;# 
   855  0D90                     	;# 
   856  0D91                     	;# 
   857  0D92                     	;# 
   858  0D92                     	;# 
   859  0D93                     	;# 
   860  0D94                     	;# 
   861  0D95                     	;# 
   862  0D95                     	;# 
   863  0D96                     	;# 
   864  0D97                     	;# 
   865  0D98                     	;# 
   866  0D99                     	;# 
   867  0D9A                     	;# 
   868  0D9B                     	;# 
   869  0D9C                     	;# 
   870  0D9D                     	;# 
   871  0D9E                     	;# 
   872  0D9E                     	;# 
   873  0D9F                     	;# 
   874  0DA0                     	;# 
   875  0DA1                     	;# 
   876  0DA1                     	;# 
   877  0DA2                     	;# 
   878  0DA3                     	;# 
   879  0DA4                     	;# 
   880  0DA4                     	;# 
   881  0DA5                     	;# 
   882  0DA6                     	;# 
   883  0DA7                     	;# 
   884  0DA7                     	;# 
   885  0DA8                     	;# 
   886  0DA9                     	;# 
   887  0DAA                     	;# 
   888  0DAB                     	;# 
   889  0DAC                     	;# 
   890  0DAD                     	;# 
   891  0DAE                     	;# 
   892  0DAF                     	;# 
   893  0E0F                     	;# 
   894  0E10                     	;# 
   895  0E11                     	;# 
   896  0E12                     	;# 
   897  0E13                     	;# 
   898  0E14                     	;# 
   899  0E15                     	;# 
   900  0E16                     	;# 
   901  0E17                     	;# 
   902  0E18                     	;# 
   903  0E19                     	;# 
   904  0E1A                     	;# 
   905  0E1B                     	;# 
   906  0E1C                     	;# 
   907  0E1D                     	;# 
   908  0E1E                     	;# 
   909  0E1F                     	;# 
   910  0E20                     	;# 
   911  0E21                     	;# 
   912  0E22                     	;# 
   913  0E23                     	;# 
   914  0E24                     	;# 
   915  0E25                     	;# 
   916  0E26                     	;# 
   917  0E27                     	;# 
   918  0E28                     	;# 
   919  0E29                     	;# 
   920  0E2A                     	;# 
   921  0E2B                     	;# 
   922  0E2C                     	;# 
   923  0E2D                     	;# 
   924  0E2E                     	;# 
   925  0E90                     	;# 
   926  0E91                     	;# 
   927  0E92                     	;# 
   928  0E94                     	;# 
   929  0E95                     	;# 
   930  0E9C                     	;# 
   931  0E9D                     	;# 
   932  0E9E                     	;# 
   933  0E9F                     	;# 
   934  0EA0                     	;# 
   935  0EA1                     	;# 
   936  0EA2                     	;# 
   937  0EA3                     	;# 
   938  0EA4                     	;# 
   939  0EA5                     	;# 
   940  0EA6                     	;# 
   941  0EA7                     	;# 
   942  0F0F                     	;# 
   943  0F10                     	;# 
   944  0F11                     	;# 
   945  0F12                     	;# 
   946  0F13                     	;# 
   947  0F14                     	;# 
   948  0F15                     	;# 
   949  0F16                     	;# 
   950  0F17                     	;# 
   951  0F18                     	;# 
   952  0F19                     	;# 
   953  0F1A                     	;# 
   954  0F1B                     	;# 
   955  0F1C                     	;# 
   956  0F1D                     	;# 
   957  0F1E                     	;# 
   958  0F1F                     	;# 
   959  0F20                     	;# 
   960  0F21                     	;# 
   961  0F22                     	;# 
   962  0F23                     	;# 
   963  0F24                     	;# 
   964  0F25                     	;# 
   965  0F26                     	;# 
   966  0F27                     	;# 
   967  0F28                     	;# 
   968  0F29                     	;# 
   969  0F2A                     	;# 
   970  0F2B                     	;# 
   971  0F2C                     	;# 
   972  0F2D                     	;# 
   973  0F2E                     	;# 
   974  0F2F                     	;# 
   975  0F30                     	;# 
   976  0F31                     	;# 
   977  0F32                     	;# 
   978  0F33                     	;# 
   979  0F34                     	;# 
   980  0F35                     	;# 
   981  0F36                     	;# 
   982  0F37                     	;# 
   983  0FE4                     	;# 
   984  0FE5                     	;# 
   985  0FE6                     	;# 
   986  0FE7                     	;# 
   987  0FE8                     	;# 
   988  0FE9                     	;# 
   989  0FEA                     	;# 
   990  0FEB                     	;# 
   991  0FED                     	;# 
   992  0FEE                     	;# 
   993  0FEF                     	;# 
   994  0000                     	;# 
   995  0001                     	;# 
   996  0002                     	;# 
   997  0003                     	;# 
   998  0004                     	;# 
   999  0005                     	;# 
  1000  0006                     	;# 
  1001  0007                     	;# 
  1002  0008                     	;# 
  1003  0009                     	;# 
  1004  000A                     	;# 
  1005  000B                     	;# 
  1006  000C                     	;# 
  1007  000D                     	;# 
  1008  000E                     	;# 
  1009  0010                     	;# 
  1010  0011                     	;# 
  1011  0012                     	;# 
  1012  0013                     	;# 
  1013  0014                     	;# 
  1014  0015                     	;# 
  1015  0016                     	;# 
  1016  0016                     	;# 
  1017  0017                     	;# 
  1018  0018                     	;# 
  1019  0019                     	;# 
  1020  001A                     	;# 
  1021  001A                     	;# 
  1022  001B                     	;# 
  1023  001B                     	;# 
  1024  001C                     	;# 
  1025  001D                     	;# 
  1026  001E                     	;# 
  1027  001F                     	;# 
  1028  008C                     	;# 
  1029  008D                     	;# 
  1030  008E                     	;# 
  1031  0090                     	;# 
  1032  0091                     	;# 
  1033  0092                     	;# 
  1034  0093                     	;# 
  1035  0094                     	;# 
  1036  0095                     	;# 
  1037  0096                     	;# 
  1038  0098                     	;# 
  1039  0099                     	;# 
  1040  009A                     	;# 
  1041  009B                     	;# 
  1042  009B                     	;# 
  1043  009C                     	;# 
  1044  009D                     	;# 
  1045  009E                     	;# 
  1046  009F                     	;# 
  1047  010C                     	;# 
  1048  010D                     	;# 
  1049  010E                     	;# 
  1050  0111                     	;# 
  1051  0112                     	;# 
  1052  0113                     	;# 
  1053  0114                     	;# 
  1054  0115                     	;# 
  1055  0116                     	;# 
  1056  0117                     	;# 
  1057  0118                     	;# 
  1058  0119                     	;# 
  1059  011C                     	;# 
  1060  018C                     	;# 
  1061  018D                     	;# 
  1062  018E                     	;# 
  1063  0191                     	;# 
  1064  0191                     	;# 
  1065  0192                     	;# 
  1066  0193                     	;# 
  1067  0193                     	;# 
  1068  0194                     	;# 
  1069  0195                     	;# 
  1070  0196                     	;# 
  1071  0197                     	;# 
  1072  0199                     	;# 
  1073  0199                     	;# 
  1074  0199                     	;# 
  1075  019A                     	;# 
  1076  019A                     	;# 
  1077  019A                     	;# 
  1078  019B                     	;# 
  1079  019B                     	;# 
  1080  019B                     	;# 
  1081  019B                     	;# 
  1082  019B                     	;# 
  1083  019C                     	;# 
  1084  019C                     	;# 
  1085  019C                     	;# 
  1086  019D                     	;# 
  1087  019D                     	;# 
  1088  019D                     	;# 
  1089  019E                     	;# 
  1090  019E                     	;# 
  1091  019E                     	;# 
  1092  019F                     	;# 
  1093  019F                     	;# 
  1094  019F                     	;# 
  1095  019F                     	;# 
  1096  019F                     	;# 
  1097  020C                     	;# 
  1098  020D                     	;# 
  1099  020E                     	;# 
  1100  0211                     	;# 
  1101  0211                     	;# 
  1102  0212                     	;# 
  1103  0212                     	;# 
  1104  0213                     	;# 
  1105  0213                     	;# 
  1106  0214                     	;# 
  1107  0214                     	;# 
  1108  0215                     	;# 
  1109  0215                     	;# 
  1110  0215                     	;# 
  1111  0215                     	;# 
  1112  0216                     	;# 
  1113  0216                     	;# 
  1114  0217                     	;# 
  1115  0217                     	;# 
  1116  028C                     	;# 
  1117  028D                     	;# 
  1118  028E                     	;# 
  1119  0291                     	;# 
  1120  0291                     	;# 
  1121  0292                     	;# 
  1122  0293                     	;# 
  1123  0294                     	;# 
  1124  0298                     	;# 
  1125  0298                     	;# 
  1126  0299                     	;# 
  1127  029A                     	;# 
  1128  029B                     	;# 
  1129  029E                     	;# 
  1130  030C                     	;# 
  1131  030D                     	;# 
  1132  030E                     	;# 
  1133  038C                     	;# 
  1134  038D                     	;# 
  1135  038E                     	;# 
  1136  0391                     	;# 
  1137  0392                     	;# 
  1138  0393                     	;# 
  1139  0394                     	;# 
  1140  0395                     	;# 
  1141  0396                     	;# 
  1142  0397                     	;# 
  1143  0398                     	;# 
  1144  0399                     	;# 
  1145  040E                     	;# 
  1146  0413                     	;# 
  1147  0413                     	;# 
  1148  0414                     	;# 
  1149  0414                     	;# 
  1150  0415                     	;# 
  1151  0416                     	;# 
  1152  0417                     	;# 
  1153  0418                     	;# 
  1154  041A                     	;# 
  1155  041A                     	;# 
  1156  041B                     	;# 
  1157  041B                     	;# 
  1158  041C                     	;# 
  1159  041D                     	;# 
  1160  041E                     	;# 
  1161  041F                     	;# 
  1162  0493                     	;# 
  1163  0494                     	;# 
  1164  0495                     	;# 
  1165  0496                     	;# 
  1166  049A                     	;# 
  1167  049B                     	;# 
  1168  049C                     	;# 
  1169  049D                     	;# 
  1170  058C                     	;# 
  1171  058C                     	;# 
  1172  058D                     	;# 
  1173  058E                     	;# 
  1174  058E                     	;# 
  1175  058F                     	;# 
  1176  0590                     	;# 
  1177  0590                     	;# 
  1178  0591                     	;# 
  1179  0592                     	;# 
  1180  0592                     	;# 
  1181  0593                     	;# 
  1182  0594                     	;# 
  1183  0594                     	;# 
  1184  0595                     	;# 
  1185  0596                     	;# 
  1186  0596                     	;# 
  1187  0597                     	;# 
  1188  0598                     	;# 
  1189  0599                     	;# 
  1190  059A                     	;# 
  1191  059B                     	;# 
  1192  059B                     	;# 
  1193  059C                     	;# 
  1194  059D                     	;# 
  1195  060C                     	;# 
  1196  060C                     	;# 
  1197  060D                     	;# 
  1198  060E                     	;# 
  1199  060F                     	;# 
  1200  060F                     	;# 
  1201  0610                     	;# 
  1202  0611                     	;# 
  1203  0612                     	;# 
  1204  0613                     	;# 
  1205  0614                     	;# 
  1206  0617                     	;# 
  1207  0617                     	;# 
  1208  0618                     	;# 
  1209  0619                     	;# 
  1210  061A                     	;# 
  1211  061A                     	;# 
  1212  061B                     	;# 
  1213  061C                     	;# 
  1214  0691                     	;# 
  1215  0692                     	;# 
  1216  0693                     	;# 
  1217  0694                     	;# 
  1218  0695                     	;# 
  1219  0696                     	;# 
  1220  0697                     	;# 
  1221  0699                     	;# 
  1222  069A                     	;# 
  1223  0711                     	;# 
  1224  0712                     	;# 
  1225  0713                     	;# 
  1226  0714                     	;# 
  1227  0715                     	;# 
  1228  0718                     	;# 
  1229  0718                     	;# 
  1230  0719                     	;# 
  1231  071A                     	;# 
  1232  071A                     	;# 
  1233  071B                     	;# 
  1234  071C                     	;# 
  1235  071D                     	;# 
  1236  0791                     	;# 
  1237  0791                     	;# 
  1238  0792                     	;# 
  1239  0793                     	;# 
  1240  0793                     	;# 
  1241  0794                     	;# 
  1242  0795                     	;# 
  1243  0795                     	;# 
  1244  0796                     	;# 
  1245  0797                     	;# 
  1246  0797                     	;# 
  1247  0798                     	;# 
  1248  0799                     	;# 
  1249  079A                     	;# 
  1250  080C                     	;# 
  1251  080C                     	;# 
  1252  080D                     	;# 
  1253  080E                     	;# 
  1254  080E                     	;# 
  1255  080F                     	;# 
  1256  0810                     	;# 
  1257  0810                     	;# 
  1258  0811                     	;# 
  1259  0812                     	;# 
  1260  0812                     	;# 
  1261  0813                     	;# 
  1262  0814                     	;# 
  1263  0815                     	;# 
  1264  0816                     	;# 
  1265  0817                     	;# 
  1266  0818                     	;# 
  1267  0819                     	;# 
  1268  081A                     	;# 
  1269  081A                     	;# 
  1270  081B                     	;# 
  1271  081C                     	;# 
  1272  081C                     	;# 
  1273  081D                     	;# 
  1274  088C                     	;# 
  1275  088D                     	;# 
  1276  088E                     	;# 
  1277  088F                     	;# 
  1278  088F                     	;# 
  1279  0890                     	;# 
  1280  0891                     	;# 
  1281  0892                     	;# 
  1282  0893                     	;# 
  1283  0893                     	;# 
  1284  0894                     	;# 
  1285  0895                     	;# 
  1286  0896                     	;# 
  1287  0897                     	;# 
  1288  0897                     	;# 
  1289  0898                     	;# 
  1290  0899                     	;# 
  1291  0D8C                     	;# 
  1292  0D8C                     	;# 
  1293  0D8D                     	;# 
  1294  0D8E                     	;# 
  1295  0D8F                     	;# 
  1296  0D8F                     	;# 
  1297  0D90                     	;# 
  1298  0D91                     	;# 
  1299  0D92                     	;# 
  1300  0D92                     	;# 
  1301  0D93                     	;# 
  1302  0D94                     	;# 
  1303  0D95                     	;# 
  1304  0D95                     	;# 
  1305  0D96                     	;# 
  1306  0D97                     	;# 
  1307  0D98                     	;# 
  1308  0D99                     	;# 
  1309  0D9A                     	;# 
  1310  0D9B                     	;# 
  1311  0D9C                     	;# 
  1312  0D9D                     	;# 
  1313  0D9E                     	;# 
  1314  0D9E                     	;# 
  1315  0D9F                     	;# 
  1316  0DA0                     	;# 
  1317  0DA1                     	;# 
  1318  0DA1                     	;# 
  1319  0DA2                     	;# 
  1320  0DA3                     	;# 
  1321  0DA4                     	;# 
  1322  0DA4                     	;# 
  1323  0DA5                     	;# 
  1324  0DA6                     	;# 
  1325  0DA7                     	;# 
  1326  0DA7                     	;# 
  1327  0DA8                     	;# 
  1328  0DA9                     	;# 
  1329  0DAA                     	;# 
  1330  0DAB                     	;# 
  1331  0DAC                     	;# 
  1332  0DAD                     	;# 
  1333  0DAE                     	;# 
  1334  0DAF                     	;# 
  1335  0E0F                     	;# 
  1336  0E10                     	;# 
  1337  0E11                     	;# 
  1338  0E12                     	;# 
  1339  0E13                     	;# 
  1340  0E14                     	;# 
  1341  0E15                     	;# 
  1342  0E16                     	;# 
  1343  0E17                     	;# 
  1344  0E18                     	;# 
  1345  0E19                     	;# 
  1346  0E1A                     	;# 
  1347  0E1B                     	;# 
  1348  0E1C                     	;# 
  1349  0E1D                     	;# 
  1350  0E1E                     	;# 
  1351  0E1F                     	;# 
  1352  0E20                     	;# 
  1353  0E21                     	;# 
  1354  0E22                     	;# 
  1355  0E23                     	;# 
  1356  0E24                     	;# 
  1357  0E25                     	;# 
  1358  0E26                     	;# 
  1359  0E27                     	;# 
  1360  0E28                     	;# 
  1361  0E29                     	;# 
  1362  0E2A                     	;# 
  1363  0E2B                     	;# 
  1364  0E2C                     	;# 
  1365  0E2D                     	;# 
  1366  0E2E                     	;# 
  1367  0E90                     	;# 
  1368  0E91                     	;# 
  1369  0E92                     	;# 
  1370  0E94                     	;# 
  1371  0E95                     	;# 
  1372  0E9C                     	;# 
  1373  0E9D                     	;# 
  1374  0E9E                     	;# 
  1375  0E9F                     	;# 
  1376  0EA0                     	;# 
  1377  0EA1                     	;# 
  1378  0EA2                     	;# 
  1379  0EA3                     	;# 
  1380  0EA4                     	;# 
  1381  0EA5                     	;# 
  1382  0EA6                     	;# 
  1383  0EA7                     	;# 
  1384  0F0F                     	;# 
  1385  0F10                     	;# 
  1386  0F11                     	;# 
  1387  0F12                     	;# 
  1388  0F13                     	;# 
  1389  0F14                     	;# 
  1390  0F15                     	;# 
  1391  0F16                     	;# 
  1392  0F17                     	;# 
  1393  0F18                     	;# 
  1394  0F19                     	;# 
  1395  0F1A                     	;# 
  1396  0F1B                     	;# 
  1397  0F1C                     	;# 
  1398  0F1D                     	;# 
  1399  0F1E                     	;# 
  1400  0F1F                     	;# 
  1401  0F20                     	;# 
  1402  0F21                     	;# 
  1403  0F22                     	;# 
  1404  0F23                     	;# 
  1405  0F24                     	;# 
  1406  0F25                     	;# 
  1407  0F26                     	;# 
  1408  0F27                     	;# 
  1409  0F28                     	;# 
  1410  0F29                     	;# 
  1411  0F2A                     	;# 
  1412  0F2B                     	;# 
  1413  0F2C                     	;# 
  1414  0F2D                     	;# 
  1415  0F2E                     	;# 
  1416  0F2F                     	;# 
  1417  0F30                     	;# 
  1418  0F31                     	;# 
  1419  0F32                     	;# 
  1420  0F33                     	;# 
  1421  0F34                     	;# 
  1422  0F35                     	;# 
  1423  0F36                     	;# 
  1424  0F37                     	;# 
  1425  0FE4                     	;# 
  1426  0FE5                     	;# 
  1427  0FE6                     	;# 
  1428  0FE7                     	;# 
  1429  0FE8                     	;# 
  1430  0FE9                     	;# 
  1431  0FEA                     	;# 
  1432  0FEB                     	;# 
  1433  0FED                     	;# 
  1434  0FEE                     	;# 
  1435  0FEF                     	;# 
  1436  0000                     	;# 
  1437  0001                     	;# 
  1438  0002                     	;# 
  1439  0003                     	;# 
  1440  0004                     	;# 
  1441  0005                     	;# 
  1442  0006                     	;# 
  1443  0007                     	;# 
  1444  0008                     	;# 
  1445  0009                     	;# 
  1446  000A                     	;# 
  1447  000B                     	;# 
  1448  000C                     	;# 
  1449  000D                     	;# 
  1450  000E                     	;# 
  1451  0010                     	;# 
  1452  0011                     	;# 
  1453  0012                     	;# 
  1454  0013                     	;# 
  1455  0014                     	;# 
  1456  0015                     	;# 
  1457  0016                     	;# 
  1458  0016                     	;# 
  1459  0017                     	;# 
  1460  0018                     	;# 
  1461  0019                     	;# 
  1462  001A                     	;# 
  1463  001A                     	;# 
  1464  001B                     	;# 
  1465  001B                     	;# 
  1466  001C                     	;# 
  1467  001D                     	;# 
  1468  001E                     	;# 
  1469  001F                     	;# 
  1470  008C                     	;# 
  1471  008D                     	;# 
  1472  008E                     	;# 
  1473  0090                     	;# 
  1474  0091                     	;# 
  1475  0092                     	;# 
  1476  0093                     	;# 
  1477  0094                     	;# 
  1478  0095                     	;# 
  1479  0096                     	;# 
  1480  0098                     	;# 
  1481  0099                     	;# 
  1482  009A                     	;# 
  1483  009B                     	;# 
  1484  009B                     	;# 
  1485  009C                     	;# 
  1486  009D                     	;# 
  1487  009E                     	;# 
  1488  009F                     	;# 
  1489  010C                     	;# 
  1490  010D                     	;# 
  1491  010E                     	;# 
  1492  0111                     	;# 
  1493  0112                     	;# 
  1494  0113                     	;# 
  1495  0114                     	;# 
  1496  0115                     	;# 
  1497  0116                     	;# 
  1498  0117                     	;# 
  1499  0118                     	;# 
  1500  0119                     	;# 
  1501  011C                     	;# 
  1502  018C                     	;# 
  1503  018D                     	;# 
  1504  018E                     	;# 
  1505  0191                     	;# 
  1506  0191                     	;# 
  1507  0192                     	;# 
  1508  0193                     	;# 
  1509  0193                     	;# 
  1510  0194                     	;# 
  1511  0195                     	;# 
  1512  0196                     	;# 
  1513  0197                     	;# 
  1514  0199                     	;# 
  1515  0199                     	;# 
  1516  0199                     	;# 
  1517  019A                     	;# 
  1518  019A                     	;# 
  1519  019A                     	;# 
  1520  019B                     	;# 
  1521  019B                     	;# 
  1522  019B                     	;# 
  1523  019B                     	;# 
  1524  019B                     	;# 
  1525  019C                     	;# 
  1526  019C                     	;# 
  1527  019C                     	;# 
  1528  019D                     	;# 
  1529  019D                     	;# 
  1530  019D                     	;# 
  1531  019E                     	;# 
  1532  019E                     	;# 
  1533  019E                     	;# 
  1534  019F                     	;# 
  1535  019F                     	;# 
  1536  019F                     	;# 
  1537  019F                     	;# 
  1538  019F                     	;# 
  1539  020C                     	;# 
  1540  020D                     	;# 
  1541  020E                     	;# 
  1542  0211                     	;# 
  1543  0211                     	;# 
  1544  0212                     	;# 
  1545  0212                     	;# 
  1546  0213                     	;# 
  1547  0213                     	;# 
  1548  0214                     	;# 
  1549  0214                     	;# 
  1550  0215                     	;# 
  1551  0215                     	;# 
  1552  0215                     	;# 
  1553  0215                     	;# 
  1554  0216                     	;# 
  1555  0216                     	;# 
  1556  0217                     	;# 
  1557  0217                     	;# 
  1558  028C                     	;# 
  1559  028D                     	;# 
  1560  028E                     	;# 
  1561  0291                     	;# 
  1562  0291                     	;# 
  1563  0292                     	;# 
  1564  0293                     	;# 
  1565  0294                     	;# 
  1566  0298                     	;# 
  1567  0298                     	;# 
  1568  0299                     	;# 
  1569  029A                     	;# 
  1570  029B                     	;# 
  1571  029E                     	;# 
  1572  030C                     	;# 
  1573  030D                     	;# 
  1574  030E                     	;# 
  1575  038C                     	;# 
  1576  038D                     	;# 
  1577  038E                     	;# 
  1578  0391                     	;# 
  1579  0392                     	;# 
  1580  0393                     	;# 
  1581  0394                     	;# 
  1582  0395                     	;# 
  1583  0396                     	;# 
  1584  0397                     	;# 
  1585  0398                     	;# 
  1586  0399                     	;# 
  1587  040E                     	;# 
  1588  0413                     	;# 
  1589  0413                     	;# 
  1590  0414                     	;# 
  1591  0414                     	;# 
  1592  0415                     	;# 
  1593  0416                     	;# 
  1594  0417                     	;# 
  1595  0418                     	;# 
  1596  041A                     	;# 
  1597  041A                     	;# 
  1598  041B                     	;# 
  1599  041B                     	;# 
  1600  041C                     	;# 
  1601  041D                     	;# 
  1602  041E                     	;# 
  1603  041F                     	;# 
  1604  0493                     	;# 
  1605  0494                     	;# 
  1606  0495                     	;# 
  1607  0496                     	;# 
  1608  049A                     	;# 
  1609  049B                     	;# 
  1610  049C                     	;# 
  1611  049D                     	;# 
  1612  058C                     	;# 
  1613  058C                     	;# 
  1614  058D                     	;# 
  1615  058E                     	;# 
  1616  058E                     	;# 
  1617  058F                     	;# 
  1618  0590                     	;# 
  1619  0590                     	;# 
  1620  0591                     	;# 
  1621  0592                     	;# 
  1622  0592                     	;# 
  1623  0593                     	;# 
  1624  0594                     	;# 
  1625  0594                     	;# 
  1626  0595                     	;# 
  1627  0596                     	;# 
  1628  0596                     	;# 
  1629  0597                     	;# 
  1630  0598                     	;# 
  1631  0599                     	;# 
  1632  059A                     	;# 
  1633  059B                     	;# 
  1634  059B                     	;# 
  1635  059C                     	;# 
  1636  059D                     	;# 
  1637  060C                     	;# 
  1638  060C                     	;# 
  1639  060D                     	;# 
  1640  060E                     	;# 
  1641  060F                     	;# 
  1642  060F                     	;# 
  1643  0610                     	;# 
  1644  0611                     	;# 
  1645  0612                     	;# 
  1646  0613                     	;# 
  1647  0614                     	;# 
  1648  0617                     	;# 
  1649  0617                     	;# 
  1650  0618                     	;# 
  1651  0619                     	;# 
  1652  061A                     	;# 
  1653  061A                     	;# 
  1654  061B                     	;# 
  1655  061C                     	;# 
  1656  0691                     	;# 
  1657  0692                     	;# 
  1658  0693                     	;# 
  1659  0694                     	;# 
  1660  0695                     	;# 
  1661  0696                     	;# 
  1662  0697                     	;# 
  1663  0699                     	;# 
  1664  069A                     	;# 
  1665  0711                     	;# 
  1666  0712                     	;# 
  1667  0713                     	;# 
  1668  0714                     	;# 
  1669  0715                     	;# 
  1670  0718                     	;# 
  1671  0718                     	;# 
  1672  0719                     	;# 
  1673  071A                     	;# 
  1674  071A                     	;# 
  1675  071B                     	;# 
  1676  071C                     	;# 
  1677  071D                     	;# 
  1678  0791                     	;# 
  1679  0791                     	;# 
  1680  0792                     	;# 
  1681  0793                     	;# 
  1682  0793                     	;# 
  1683  0794                     	;# 
  1684  0795                     	;# 
  1685  0795                     	;# 
  1686  0796                     	;# 
  1687  0797                     	;# 
  1688  0797                     	;# 
  1689  0798                     	;# 
  1690  0799                     	;# 
  1691  079A                     	;# 
  1692  080C                     	;# 
  1693  080C                     	;# 
  1694  080D                     	;# 
  1695  080E                     	;# 
  1696  080E                     	;# 
  1697  080F                     	;# 
  1698  0810                     	;# 
  1699  0810                     	;# 
  1700  0811                     	;# 
  1701  0812                     	;# 
  1702  0812                     	;# 
  1703  0813                     	;# 
  1704  0814                     	;# 
  1705  0815                     	;# 
  1706  0816                     	;# 
  1707  0817                     	;# 
  1708  0818                     	;# 
  1709  0819                     	;# 
  1710  081A                     	;# 
  1711  081A                     	;# 
  1712  081B                     	;# 
  1713  081C                     	;# 
  1714  081C                     	;# 
  1715  081D                     	;# 
  1716  088C                     	;# 
  1717  088D                     	;# 
  1718  088E                     	;# 
  1719  088F                     	;# 
  1720  088F                     	;# 
  1721  0890                     	;# 
  1722  0891                     	;# 
  1723  0892                     	;# 
  1724  0893                     	;# 
  1725  0893                     	;# 
  1726  0894                     	;# 
  1727  0895                     	;# 
  1728  0896                     	;# 
  1729  0897                     	;# 
  1730  0897                     	;# 
  1731  0898                     	;# 
  1732  0899                     	;# 
  1733  0D8C                     	;# 
  1734  0D8C                     	;# 
  1735  0D8D                     	;# 
  1736  0D8E                     	;# 
  1737  0D8F                     	;# 
  1738  0D8F                     	;# 
  1739  0D90                     	;# 
  1740  0D91                     	;# 
  1741  0D92                     	;# 
  1742  0D92                     	;# 
  1743  0D93                     	;# 
  1744  0D94                     	;# 
  1745  0D95                     	;# 
  1746  0D95                     	;# 
  1747  0D96                     	;# 
  1748  0D97                     	;# 
  1749  0D98                     	;# 
  1750  0D99                     	;# 
  1751  0D9A                     	;# 
  1752  0D9B                     	;# 
  1753  0D9C                     	;# 
  1754  0D9D                     	;# 
  1755  0D9E                     	;# 
  1756  0D9E                     	;# 
  1757  0D9F                     	;# 
  1758  0DA0                     	;# 
  1759  0DA1                     	;# 
  1760  0DA1                     	;# 
  1761  0DA2                     	;# 
  1762  0DA3                     	;# 
  1763  0DA4                     	;# 
  1764  0DA4                     	;# 
  1765  0DA5                     	;# 
  1766  0DA6                     	;# 
  1767  0DA7                     	;# 
  1768  0DA7                     	;# 
  1769  0DA8                     	;# 
  1770  0DA9                     	;# 
  1771  0DAA                     	;# 
  1772  0DAB                     	;# 
  1773  0DAC                     	;# 
  1774  0DAD                     	;# 
  1775  0DAE                     	;# 
  1776  0DAF                     	;# 
  1777  0E0F                     	;# 
  1778  0E10                     	;# 
  1779  0E11                     	;# 
  1780  0E12                     	;# 
  1781  0E13                     	;# 
  1782  0E14                     	;# 
  1783  0E15                     	;# 
  1784  0E16                     	;# 
  1785  0E17                     	;# 
  1786  0E18                     	;# 
  1787  0E19                     	;# 
  1788  0E1A                     	;# 
  1789  0E1B                     	;# 
  1790  0E1C                     	;# 
  1791  0E1D                     	;# 
  1792  0E1E                     	;# 
  1793  0E1F                     	;# 
  1794  0E20                     	;# 
  1795  0E21                     	;# 
  1796  0E22                     	;# 
  1797  0E23                     	;# 
  1798  0E24                     	;# 
  1799  0E25                     	;# 
  1800  0E26                     	;# 
  1801  0E27                     	;# 
  1802  0E28                     	;# 
  1803  0E29                     	;# 
  1804  0E2A                     	;# 
  1805  0E2B                     	;# 
  1806  0E2C                     	;# 
  1807  0E2D                     	;# 
  1808  0E2E                     	;# 
  1809  0E90                     	;# 
  1810  0E91                     	;# 
  1811  0E92                     	;# 
  1812  0E94                     	;# 
  1813  0E95                     	;# 
  1814  0E9C                     	;# 
  1815  0E9D                     	;# 
  1816  0E9E                     	;# 
  1817  0E9F                     	;# 
  1818  0EA0                     	;# 
  1819  0EA1                     	;# 
  1820  0EA2                     	;# 
  1821  0EA3                     	;# 
  1822  0EA4                     	;# 
  1823  0EA5                     	;# 
  1824  0EA6                     	;# 
  1825  0EA7                     	;# 
  1826  0F0F                     	;# 
  1827  0F10                     	;# 
  1828  0F11                     	;# 
  1829  0F12                     	;# 
  1830  0F13                     	;# 
  1831  0F14                     	;# 
  1832  0F15                     	;# 
  1833  0F16                     	;# 
  1834  0F17                     	;# 
  1835  0F18                     	;# 
  1836  0F19                     	;# 
  1837  0F1A                     	;# 
  1838  0F1B                     	;# 
  1839  0F1C                     	;# 
  1840  0F1D                     	;# 
  1841  0F1E                     	;# 
  1842  0F1F                     	;# 
  1843  0F20                     	;# 
  1844  0F21                     	;# 
  1845  0F22                     	;# 
  1846  0F23                     	;# 
  1847  0F24                     	;# 
  1848  0F25                     	;# 
  1849  0F26                     	;# 
  1850  0F27                     	;# 
  1851  0F28                     	;# 
  1852  0F29                     	;# 
  1853  0F2A                     	;# 
  1854  0F2B                     	;# 
  1855  0F2C                     	;# 
  1856  0F2D                     	;# 
  1857  0F2E                     	;# 
  1858  0F2F                     	;# 
  1859  0F30                     	;# 
  1860  0F31                     	;# 
  1861  0F32                     	;# 
  1862  0F33                     	;# 
  1863  0F34                     	;# 
  1864  0F35                     	;# 
  1865  0F36                     	;# 
  1866  0F37                     	;# 
  1867  0FE4                     	;# 
  1868  0FE5                     	;# 
  1869  0FE6                     	;# 
  1870  0FE7                     	;# 
  1871  0FE8                     	;# 
  1872  0FE9                     	;# 
  1873  0FEA                     	;# 
  1874  0FEB                     	;# 
  1875  0FED                     	;# 
  1876  0FEE                     	;# 
  1877  0FEF                     	;# 
  1878  0000                     	;# 
  1879  0001                     	;# 
  1880  0002                     	;# 
  1881  0003                     	;# 
  1882  0004                     	;# 
  1883  0005                     	;# 
  1884  0006                     	;# 
  1885  0007                     	;# 
  1886  0008                     	;# 
  1887  0009                     	;# 
  1888  000A                     	;# 
  1889  000B                     	;# 
  1890  000C                     	;# 
  1891  000D                     	;# 
  1892  000E                     	;# 
  1893  0010                     	;# 
  1894  0011                     	;# 
  1895  0012                     	;# 
  1896  0013                     	;# 
  1897  0014                     	;# 
  1898  0015                     	;# 
  1899  0016                     	;# 
  1900  0016                     	;# 
  1901  0017                     	;# 
  1902  0018                     	;# 
  1903  0019                     	;# 
  1904  001A                     	;# 
  1905  001A                     	;# 
  1906  001B                     	;# 
  1907  001B                     	;# 
  1908  001C                     	;# 
  1909  001D                     	;# 
  1910  001E                     	;# 
  1911  001F                     	;# 
  1912  008C                     	;# 
  1913  008D                     	;# 
  1914  008E                     	;# 
  1915  0090                     	;# 
  1916  0091                     	;# 
  1917  0092                     	;# 
  1918  0093                     	;# 
  1919  0094                     	;# 
  1920  0095                     	;# 
  1921  0096                     	;# 
  1922  0098                     	;# 
  1923  0099                     	;# 
  1924  009A                     	;# 
  1925  009B                     	;# 
  1926  009B                     	;# 
  1927  009C                     	;# 
  1928  009D                     	;# 
  1929  009E                     	;# 
  1930  009F                     	;# 
  1931  010C                     	;# 
  1932  010D                     	;# 
  1933  010E                     	;# 
  1934  0111                     	;# 
  1935  0112                     	;# 
  1936  0113                     	;# 
  1937  0114                     	;# 
  1938  0115                     	;# 
  1939  0116                     	;# 
  1940  0117                     	;# 
  1941  0118                     	;# 
  1942  0119                     	;# 
  1943  011C                     	;# 
  1944  018C                     	;# 
  1945  018D                     	;# 
  1946  018E                     	;# 
  1947  0191                     	;# 
  1948  0191                     	;# 
  1949  0192                     	;# 
  1950  0193                     	;# 
  1951  0193                     	;# 
  1952  0194                     	;# 
  1953  0195                     	;# 
  1954  0196                     	;# 
  1955  0197                     	;# 
  1956  0199                     	;# 
  1957  0199                     	;# 
  1958  0199                     	;# 
  1959  019A                     	;# 
  1960  019A                     	;# 
  1961  019A                     	;# 
  1962  019B                     	;# 
  1963  019B                     	;# 
  1964  019B                     	;# 
  1965  019B                     	;# 
  1966  019B                     	;# 
  1967  019C                     	;# 
  1968  019C                     	;# 
  1969  019C                     	;# 
  1970  019D                     	;# 
  1971  019D                     	;# 
  1972  019D                     	;# 
  1973  019E                     	;# 
  1974  019E                     	;# 
  1975  019E                     	;# 
  1976  019F                     	;# 
  1977  019F                     	;# 
  1978  019F                     	;# 
  1979  019F                     	;# 
  1980  019F                     	;# 
  1981  020C                     	;# 
  1982  020D                     	;# 
  1983  020E                     	;# 
  1984  0211                     	;# 
  1985  0211                     	;# 
  1986  0212                     	;# 
  1987  0212                     	;# 
  1988  0213                     	;# 
  1989  0213                     	;# 
  1990  0214                     	;# 
  1991  0214                     	;# 
  1992  0215                     	;# 
  1993  0215                     	;# 
  1994  0215                     	;# 
  1995  0215                     	;# 
  1996  0216                     	;# 
  1997  0216                     	;# 
  1998  0217                     	;# 
  1999  0217                     	;# 
  2000  028C                     	;# 
  2001  028D                     	;# 
  2002  028E                     	;# 
  2003  0291                     	;# 
  2004  0291                     	;# 
  2005  0292                     	;# 
  2006  0293                     	;# 
  2007  0294                     	;# 
  2008  0298                     	;# 
  2009  0298                     	;# 
  2010  0299                     	;# 
  2011  029A                     	;# 
  2012  029B                     	;# 
  2013  029E                     	;# 
  2014  030C                     	;# 
  2015  030D                     	;# 
  2016  030E                     	;# 
  2017  038C                     	;# 
  2018  038D                     	;# 
  2019  038E                     	;# 
  2020  0391                     	;# 
  2021  0392                     	;# 
  2022  0393                     	;# 
  2023  0394                     	;# 
  2024  0395                     	;# 
  2025  0396                     	;# 
  2026  0397                     	;# 
  2027  0398                     	;# 
  2028  0399                     	;# 
  2029  040E                     	;# 
  2030  0413                     	;# 
  2031  0413                     	;# 
  2032  0414                     	;# 
  2033  0414                     	;# 
  2034  0415                     	;# 
  2035  0416                     	;# 
  2036  0417                     	;# 
  2037  0418                     	;# 
  2038  041A                     	;# 
  2039  041A                     	;# 
  2040  041B                     	;# 
  2041  041B                     	;# 
  2042  041C                     	;# 
  2043  041D                     	;# 
  2044  041E                     	;# 
  2045  041F                     	;# 
  2046  0493                     	;# 
  2047  0494                     	;# 
  2048  0495                     	;# 
  2049  0496                     	;# 
  2050  049A                     	;# 
  2051  049B                     	;# 
  2052  049C                     	;# 
  2053  049D                     	;# 
  2054  058C                     	;# 
  2055  058C                     	;# 
  2056  058D                     	;# 
  2057  058E                     	;# 
  2058  058E                     	;# 
  2059  058F                     	;# 
  2060  0590                     	;# 
  2061  0590                     	;# 
  2062  0591                     	;# 
  2063  0592                     	;# 
  2064  0592                     	;# 
  2065  0593                     	;# 
  2066  0594                     	;# 
  2067  0594                     	;# 
  2068  0595                     	;# 
  2069  0596                     	;# 
  2070  0596                     	;# 
  2071  0597                     	;# 
  2072  0598                     	;# 
  2073  0599                     	;# 
  2074  059A                     	;# 
  2075  059B                     	;# 
  2076  059B                     	;# 
  2077  059C                     	;# 
  2078  059D                     	;# 
  2079  060C                     	;# 
  2080  060C                     	;# 
  2081  060D                     	;# 
  2082  060E                     	;# 
  2083  060F                     	;# 
  2084  060F                     	;# 
  2085  0610                     	;# 
  2086  0611                     	;# 
  2087  0612                     	;# 
  2088  0613                     	;# 
  2089  0614                     	;# 
  2090  0617                     	;# 
  2091  0617                     	;# 
  2092  0618                     	;# 
  2093  0619                     	;# 
  2094  061A                     	;# 
  2095  061A                     	;# 
  2096  061B                     	;# 
  2097  061C                     	;# 
  2098  0691                     	;# 
  2099  0692                     	;# 
  2100  0693                     	;# 
  2101  0694                     	;# 
  2102  0695                     	;# 
  2103  0696                     	;# 
  2104  0697                     	;# 
  2105  0699                     	;# 
  2106  069A                     	;# 
  2107  0711                     	;# 
  2108  0712                     	;# 
  2109  0713                     	;# 
  2110  0714                     	;# 
  2111  0715                     	;# 
  2112  0718                     	;# 
  2113  0718                     	;# 
  2114  0719                     	;# 
  2115  071A                     	;# 
  2116  071A                     	;# 
  2117  071B                     	;# 
  2118  071C                     	;# 
  2119  071D                     	;# 
  2120  0791                     	;# 
  2121  0791                     	;# 
  2122  0792                     	;# 
  2123  0793                     	;# 
  2124  0793                     	;# 
  2125  0794                     	;# 
  2126  0795                     	;# 
  2127  0795                     	;# 
  2128  0796                     	;# 
  2129  0797                     	;# 
  2130  0797                     	;# 
  2131  0798                     	;# 
  2132  0799                     	;# 
  2133  079A                     	;# 
  2134  080C                     	;# 
  2135  080C                     	;# 
  2136  080D                     	;# 
  2137  080E                     	;# 
  2138  080E                     	;# 
  2139  080F                     	;# 
  2140  0810                     	;# 
  2141  0810                     	;# 
  2142  0811                     	;# 
  2143  0812                     	;# 
  2144  0812                     	;# 
  2145  0813                     	;# 
  2146  0814                     	;# 
  2147  0815                     	;# 
  2148  0816                     	;# 
  2149  0817                     	;# 
  2150  0818                     	;# 
  2151  0819                     	;# 
  2152  081A                     	;# 
  2153  081A                     	;# 
  2154  081B                     	;# 
  2155  081C                     	;# 
  2156  081C                     	;# 
  2157  081D                     	;# 
  2158  088C                     	;# 
  2159  088D                     	;# 
  2160  088E                     	;# 
  2161  088F                     	;# 
  2162  088F                     	;# 
  2163  0890                     	;# 
  2164  0891                     	;# 
  2165  0892                     	;# 
  2166  0893                     	;# 
  2167  0893                     	;# 
  2168  0894                     	;# 
  2169  0895                     	;# 
  2170  0896                     	;# 
  2171  0897                     	;# 
  2172  0897                     	;# 
  2173  0898                     	;# 
  2174  0899                     	;# 
  2175  0D8C                     	;# 
  2176  0D8C                     	;# 
  2177  0D8D                     	;# 
  2178  0D8E                     	;# 
  2179  0D8F                     	;# 
  2180  0D8F                     	;# 
  2181  0D90                     	;# 
  2182  0D91                     	;# 
  2183  0D92                     	;# 
  2184  0D92                     	;# 
  2185  0D93                     	;# 
  2186  0D94                     	;# 
  2187  0D95                     	;# 
  2188  0D95                     	;# 
  2189  0D96                     	;# 
  2190  0D97                     	;# 
  2191  0D98                     	;# 
  2192  0D99                     	;# 
  2193  0D9A                     	;# 
  2194  0D9B                     	;# 
  2195  0D9C                     	;# 
  2196  0D9D                     	;# 
  2197  0D9E                     	;# 
  2198  0D9E                     	;# 
  2199  0D9F                     	;# 
  2200  0DA0                     	;# 
  2201  0DA1                     	;# 
  2202  0DA1                     	;# 
  2203  0DA2                     	;# 
  2204  0DA3                     	;# 
  2205  0DA4                     	;# 
  2206  0DA4                     	;# 
  2207  0DA5                     	;# 
  2208  0DA6                     	;# 
  2209  0DA7                     	;# 
  2210  0DA7                     	;# 
  2211  0DA8                     	;# 
  2212  0DA9                     	;# 
  2213  0DAA                     	;# 
  2214  0DAB                     	;# 
  2215  0DAC                     	;# 
  2216  0DAD                     	;# 
  2217  0DAE                     	;# 
  2218  0DAF                     	;# 
  2219  0E0F                     	;# 
  2220  0E10                     	;# 
  2221  0E11                     	;# 
  2222  0E12                     	;# 
  2223  0E13                     	;# 
  2224  0E14                     	;# 
  2225  0E15                     	;# 
  2226  0E16                     	;# 
  2227  0E17                     	;# 
  2228  0E18                     	;# 
  2229  0E19                     	;# 
  2230  0E1A                     	;# 
  2231  0E1B                     	;# 
  2232  0E1C                     	;# 
  2233  0E1D                     	;# 
  2234  0E1E                     	;# 
  2235  0E1F                     	;# 
  2236  0E20                     	;# 
  2237  0E21                     	;# 
  2238  0E22                     	;# 
  2239  0E23                     	;# 
  2240  0E24                     	;# 
  2241  0E25                     	;# 
  2242  0E26                     	;# 
  2243  0E27                     	;# 
  2244  0E28                     	;# 
  2245  0E29                     	;# 
  2246  0E2A                     	;# 
  2247  0E2B                     	;# 
  2248  0E2C                     	;# 
  2249  0E2D                     	;# 
  2250  0E2E                     	;# 
  2251  0E90                     	;# 
  2252  0E91                     	;# 
  2253  0E92                     	;# 
  2254  0E94                     	;# 
  2255  0E95                     	;# 
  2256  0E9C                     	;# 
  2257  0E9D                     	;# 
  2258  0E9E                     	;# 
  2259  0E9F                     	;# 
  2260  0EA0                     	;# 
  2261  0EA1                     	;# 
  2262  0EA2                     	;# 
  2263  0EA3                     	;# 
  2264  0EA4                     	;# 
  2265  0EA5                     	;# 
  2266  0EA6                     	;# 
  2267  0EA7                     	;# 
  2268  0F0F                     	;# 
  2269  0F10                     	;# 
  2270  0F11                     	;# 
  2271  0F12                     	;# 
  2272  0F13                     	;# 
  2273  0F14                     	;# 
  2274  0F15                     	;# 
  2275  0F16                     	;# 
  2276  0F17                     	;# 
  2277  0F18                     	;# 
  2278  0F19                     	;# 
  2279  0F1A                     	;# 
  2280  0F1B                     	;# 
  2281  0F1C                     	;# 
  2282  0F1D                     	;# 
  2283  0F1E                     	;# 
  2284  0F1F                     	;# 
  2285  0F20                     	;# 
  2286  0F21                     	;# 
  2287  0F22                     	;# 
  2288  0F23                     	;# 
  2289  0F24                     	;# 
  2290  0F25                     	;# 
  2291  0F26                     	;# 
  2292  0F27                     	;# 
  2293  0F28                     	;# 
  2294  0F29                     	;# 
  2295  0F2A                     	;# 
  2296  0F2B                     	;# 
  2297  0F2C                     	;# 
  2298  0F2D                     	;# 
  2299  0F2E                     	;# 
  2300  0F2F                     	;# 
  2301  0F30                     	;# 
  2302  0F31                     	;# 
  2303  0F32                     	;# 
  2304  0F33                     	;# 
  2305  0F34                     	;# 
  2306  0F35                     	;# 
  2307  0F36                     	;# 
  2308  0F37                     	;# 
  2309  0FE4                     	;# 
  2310  0FE5                     	;# 
  2311  0FE6                     	;# 
  2312  0FE7                     	;# 
  2313  0FE8                     	;# 
  2314  0FE9                     	;# 
  2315  0FEA                     	;# 
  2316  0FEB                     	;# 
  2317  0FED                     	;# 
  2318  0FEE                     	;# 
  2319  0FEF                     	;# 
  2320  0000                     	;# 
  2321  0001                     	;# 
  2322  0002                     	;# 
  2323  0003                     	;# 
  2324  0004                     	;# 
  2325  0005                     	;# 
  2326  0006                     	;# 
  2327  0007                     	;# 
  2328  0008                     	;# 
  2329  0009                     	;# 
  2330  000A                     	;# 
  2331  000B                     	;# 
  2332  000C                     	;# 
  2333  000D                     	;# 
  2334  000E                     	;# 
  2335  0010                     	;# 
  2336  0011                     	;# 
  2337  0012                     	;# 
  2338  0013                     	;# 
  2339  0014                     	;# 
  2340  0015                     	;# 
  2341  0016                     	;# 
  2342  0016                     	;# 
  2343  0017                     	;# 
  2344  0018                     	;# 
  2345  0019                     	;# 
  2346  001A                     	;# 
  2347  001A                     	;# 
  2348  001B                     	;# 
  2349  001B                     	;# 
  2350  001C                     	;# 
  2351  001D                     	;# 
  2352  001E                     	;# 
  2353  001F                     	;# 
  2354  008C                     	;# 
  2355  008D                     	;# 
  2356  008E                     	;# 
  2357  0090                     	;# 
  2358  0091                     	;# 
  2359  0092                     	;# 
  2360  0093                     	;# 
  2361  0094                     	;# 
  2362  0095                     	;# 
  2363  0096                     	;# 
  2364  0098                     	;# 
  2365  0099                     	;# 
  2366  009A                     	;# 
  2367  009B                     	;# 
  2368  009B                     	;# 
  2369  009C                     	;# 
  2370  009D                     	;# 
  2371  009E                     	;# 
  2372  009F                     	;# 
  2373  010C                     	;# 
  2374  010D                     	;# 
  2375  010E                     	;# 
  2376  0111                     	;# 
  2377  0112                     	;# 
  2378  0113                     	;# 
  2379  0114                     	;# 
  2380  0115                     	;# 
  2381  0116                     	;# 
  2382  0117                     	;# 
  2383  0118                     	;# 
  2384  0119                     	;# 
  2385  011C                     	;# 
  2386  018C                     	;# 
  2387  018D                     	;# 
  2388  018E                     	;# 
  2389  0191                     	;# 
  2390  0191                     	;# 
  2391  0192                     	;# 
  2392  0193                     	;# 
  2393  0193                     	;# 
  2394  0194                     	;# 
  2395  0195                     	;# 
  2396  0196                     	;# 
  2397  0197                     	;# 
  2398  0199                     	;# 
  2399  0199                     	;# 
  2400  0199                     	;# 
  2401  019A                     	;# 
  2402  019A                     	;# 
  2403  019A                     	;# 
  2404  019B                     	;# 
  2405  019B                     	;# 
  2406  019B                     	;# 
  2407  019B                     	;# 
  2408  019B                     	;# 
  2409  019C                     	;# 
  2410  019C                     	;# 
  2411  019C                     	;# 
  2412  019D                     	;# 
  2413  019D                     	;# 
  2414  019D                     	;# 
  2415  019E                     	;# 
  2416  019E                     	;# 
  2417  019E                     	;# 
  2418  019F                     	;# 
  2419  019F                     	;# 
  2420  019F                     	;# 
  2421  019F                     	;# 
  2422  019F                     	;# 
  2423  020C                     	;# 
  2424  020D                     	;# 
  2425  020E                     	;# 
  2426  0211                     	;# 
  2427  0211                     	;# 
  2428  0212                     	;# 
  2429  0212                     	;# 
  2430  0213                     	;# 
  2431  0213                     	;# 
  2432  0214                     	;# 
  2433  0214                     	;# 
  2434  0215                     	;# 
  2435  0215                     	;# 
  2436  0215                     	;# 
  2437  0215                     	;# 
  2438  0216                     	;# 
  2439  0216                     	;# 
  2440  0217                     	;# 
  2441  0217                     	;# 
  2442  028C                     	;# 
  2443  028D                     	;# 
  2444  028E                     	;# 
  2445  0291                     	;# 
  2446  0291                     	;# 
  2447  0292                     	;# 
  2448  0293                     	;# 
  2449  0294                     	;# 
  2450  0298                     	;# 
  2451  0298                     	;# 
  2452  0299                     	;# 
  2453  029A                     	;# 
  2454  029B                     	;# 
  2455  029E                     	;# 
  2456  030C                     	;# 
  2457  030D                     	;# 
  2458  030E                     	;# 
  2459  038C                     	;# 
  2460  038D                     	;# 
  2461  038E                     	;# 
  2462  0391                     	;# 
  2463  0392                     	;# 
  2464  0393                     	;# 
  2465  0394                     	;# 
  2466  0395                     	;# 
  2467  0396                     	;# 
  2468  0397                     	;# 
  2469  0398                     	;# 
  2470  0399                     	;# 
  2471  040E                     	;# 
  2472  0413                     	;# 
  2473  0413                     	;# 
  2474  0414                     	;# 
  2475  0414                     	;# 
  2476  0415                     	;# 
  2477  0416                     	;# 
  2478  0417                     	;# 
  2479  0418                     	;# 
  2480  041A                     	;# 
  2481  041A                     	;# 
  2482  041B                     	;# 
  2483  041B                     	;# 
  2484  041C                     	;# 
  2485  041D                     	;# 
  2486  041E                     	;# 
  2487  041F                     	;# 
  2488  0493                     	;# 
  2489  0494                     	;# 
  2490  0495                     	;# 
  2491  0496                     	;# 
  2492  049A                     	;# 
  2493  049B                     	;# 
  2494  049C                     	;# 
  2495  049D                     	;# 
  2496  058C                     	;# 
  2497  058C                     	;# 
  2498  058D                     	;# 
  2499  058E                     	;# 
  2500  058E                     	;# 
  2501  058F                     	;# 
  2502  0590                     	;# 
  2503  0590                     	;# 
  2504  0591                     	;# 
  2505  0592                     	;# 
  2506  0592                     	;# 
  2507  0593                     	;# 
  2508  0594                     	;# 
  2509  0594                     	;# 
  2510  0595                     	;# 
  2511  0596                     	;# 
  2512  0596                     	;# 
  2513  0597                     	;# 
  2514  0598                     	;# 
  2515  0599                     	;# 
  2516  059A                     	;# 
  2517  059B                     	;# 
  2518  059B                     	;# 
  2519  059C                     	;# 
  2520  059D                     	;# 
  2521  060C                     	;# 
  2522  060C                     	;# 
  2523  060D                     	;# 
  2524  060E                     	;# 
  2525  060F                     	;# 
  2526  060F                     	;# 
  2527  0610                     	;# 
  2528  0611                     	;# 
  2529  0612                     	;# 
  2530  0613                     	;# 
  2531  0614                     	;# 
  2532  0617                     	;# 
  2533  0617                     	;# 
  2534  0618                     	;# 
  2535  0619                     	;# 
  2536  061A                     	;# 
  2537  061A                     	;# 
  2538  061B                     	;# 
  2539  061C                     	;# 
  2540  0691                     	;# 
  2541  0692                     	;# 
  2542  0693                     	;# 
  2543  0694                     	;# 
  2544  0695                     	;# 
  2545  0696                     	;# 
  2546  0697                     	;# 
  2547  0699                     	;# 
  2548  069A                     	;# 
  2549  0711                     	;# 
  2550  0712                     	;# 
  2551  0713                     	;# 
  2552  0714                     	;# 
  2553  0715                     	;# 
  2554  0718                     	;# 
  2555  0718                     	;# 
  2556  0719                     	;# 
  2557  071A                     	;# 
  2558  071A                     	;# 
  2559  071B                     	;# 
  2560  071C                     	;# 
  2561  071D                     	;# 
  2562  0791                     	;# 
  2563  0791                     	;# 
  2564  0792                     	;# 
  2565  0793                     	;# 
  2566  0793                     	;# 
  2567  0794                     	;# 
  2568  0795                     	;# 
  2569  0795                     	;# 
  2570  0796                     	;# 
  2571  0797                     	;# 
  2572  0797                     	;# 
  2573  0798                     	;# 
  2574  0799                     	;# 
  2575  079A                     	;# 
  2576  080C                     	;# 
  2577  080C                     	;# 
  2578  080D                     	;# 
  2579  080E                     	;# 
  2580  080E                     	;# 
  2581  080F                     	;# 
  2582  0810                     	;# 
  2583  0810                     	;# 
  2584  0811                     	;# 
  2585  0812                     	;# 
  2586  0812                     	;# 
  2587  0813                     	;# 
  2588  0814                     	;# 
  2589  0815                     	;# 
  2590  0816                     	;# 
  2591  0817                     	;# 
  2592  0818                     	;# 
  2593  0819                     	;# 
  2594  081A                     	;# 
  2595  081A                     	;# 
  2596  081B                     	;# 
  2597  081C                     	;# 
  2598  081C                     	;# 
  2599  081D                     	;# 
  2600  088C                     	;# 
  2601  088D                     	;# 
  2602  088E                     	;# 
  2603  088F                     	;# 
  2604  088F                     	;# 
  2605  0890                     	;# 
  2606  0891                     	;# 
  2607  0892                     	;# 
  2608  0893                     	;# 
  2609  0893                     	;# 
  2610  0894                     	;# 
  2611  0895                     	;# 
  2612  0896                     	;# 
  2613  0897                     	;# 
  2614  0897                     	;# 
  2615  0898                     	;# 
  2616  0899                     	;# 
  2617  0D8C                     	;# 
  2618  0D8C                     	;# 
  2619  0D8D                     	;# 
  2620  0D8E                     	;# 
  2621  0D8F                     	;# 
  2622  0D8F                     	;# 
  2623  0D90                     	;# 
  2624  0D91                     	;# 
  2625  0D92                     	;# 
  2626  0D92                     	;# 
  2627  0D93                     	;# 
  2628  0D94                     	;# 
  2629  0D95                     	;# 
  2630  0D95                     	;# 
  2631  0D96                     	;# 
  2632  0D97                     	;# 
  2633  0D98                     	;# 
  2634  0D99                     	;# 
  2635  0D9A                     	;# 
  2636  0D9B                     	;# 
  2637  0D9C                     	;# 
  2638  0D9D                     	;# 
  2639  0D9E                     	;# 
  2640  0D9E                     	;# 
  2641  0D9F                     	;# 
  2642  0DA0                     	;# 
  2643  0DA1                     	;# 
  2644  0DA1                     	;# 
  2645  0DA2                     	;# 
  2646  0DA3                     	;# 
  2647  0DA4                     	;# 
  2648  0DA4                     	;# 
  2649  0DA5                     	;# 
  2650  0DA6                     	;# 
  2651  0DA7                     	;# 
  2652  0DA7                     	;# 
  2653  0DA8                     	;# 
  2654  0DA9                     	;# 
  2655  0DAA                     	;# 
  2656  0DAB                     	;# 
  2657  0DAC                     	;# 
  2658  0DAD                     	;# 
  2659  0DAE                     	;# 
  2660  0DAF                     	;# 
  2661  0E0F                     	;# 
  2662  0E10                     	;# 
  2663  0E11                     	;# 
  2664  0E12                     	;# 
  2665  0E13                     	;# 
  2666  0E14                     	;# 
  2667  0E15                     	;# 
  2668  0E16                     	;# 
  2669  0E17                     	;# 
  2670  0E18                     	;# 
  2671  0E19                     	;# 
  2672  0E1A                     	;# 
  2673  0E1B                     	;# 
  2674  0E1C                     	;# 
  2675  0E1D                     	;# 
  2676  0E1E                     	;# 
  2677  0E1F                     	;# 
  2678  0E20                     	;# 
  2679  0E21                     	;# 
  2680  0E22                     	;# 
  2681  0E23                     	;# 
  2682  0E24                     	;# 
  2683  0E25                     	;# 
  2684  0E26                     	;# 
  2685  0E27                     	;# 
  2686  0E28                     	;# 
  2687  0E29                     	;# 
  2688  0E2A                     	;# 
  2689  0E2B                     	;# 
  2690  0E2C                     	;# 
  2691  0E2D                     	;# 
  2692  0E2E                     	;# 
  2693  0E90                     	;# 
  2694  0E91                     	;# 
  2695  0E92                     	;# 
  2696  0E94                     	;# 
  2697  0E95                     	;# 
  2698  0E9C                     	;# 
  2699  0E9D                     	;# 
  2700  0E9E                     	;# 
  2701  0E9F                     	;# 
  2702  0EA0                     	;# 
  2703  0EA1                     	;# 
  2704  0EA2                     	;# 
  2705  0EA3                     	;# 
  2706  0EA4                     	;# 
  2707  0EA5                     	;# 
  2708  0EA6                     	;# 
  2709  0EA7                     	;# 
  2710  0F0F                     	;# 
  2711  0F10                     	;# 
  2712  0F11                     	;# 
  2713  0F12                     	;# 
  2714  0F13                     	;# 
  2715  0F14                     	;# 
  2716  0F15                     	;# 
  2717  0F16                     	;# 
  2718  0F17                     	;# 
  2719  0F18                     	;# 
  2720  0F19                     	;# 
  2721  0F1A                     	;# 
  2722  0F1B                     	;# 
  2723  0F1C                     	;# 
  2724  0F1D                     	;# 
  2725  0F1E                     	;# 
  2726  0F1F                     	;# 
  2727  0F20                     	;# 
  2728  0F21                     	;# 
  2729  0F22                     	;# 
  2730  0F23                     	;# 
  2731  0F24                     	;# 
  2732  0F25                     	;# 
  2733  0F26                     	;# 
  2734  0F27                     	;# 
  2735  0F28                     	;# 
  2736  0F29                     	;# 
  2737  0F2A                     	;# 
  2738  0F2B                     	;# 
  2739  0F2C                     	;# 
  2740  0F2D                     	;# 
  2741  0F2E                     	;# 
  2742  0F2F                     	;# 
  2743  0F30                     	;# 
  2744  0F31                     	;# 
  2745  0F32                     	;# 
  2746  0F33                     	;# 
  2747  0F34                     	;# 
  2748  0F35                     	;# 
  2749  0F36                     	;# 
  2750  0F37                     	;# 
  2751  0FE4                     	;# 
  2752  0FE5                     	;# 
  2753  0FE6                     	;# 
  2754  0FE7                     	;# 
  2755  0FE8                     	;# 
  2756  0FE9                     	;# 
  2757  0FEA                     	;# 
  2758  0FEB                     	;# 
  2759  0FED                     	;# 
  2760  0FEE                     	;# 
  2761  0FEF                     	;# 
  2762                           
  2763                           	psect	idataBANK2
  2764  0CA4                     __pidataBANK2:	
  2765                           
  2766                           ;initializer for stoa@F1139
  2767  0CA4  3428               	retlw	40
  2768  0CA5  346E               	retlw	110
  2769  0CA6  3475               	retlw	117
  2770  0CA7  346C               	retlw	108
  2771  0CA8  346C               	retlw	108
  2772  0CA9  3429               	retlw	41
  2773  0CAA  3400               	retlw	0
  2774                           
  2775                           	psect	idataBANK4
  2776  0E44                     __pidataBANK4:	
  2777                           
  2778                           ;initializer for _setNavFlightMode
  2779  0E44  34B5               	retlw	181
  2780  0E45  3462               	retlw	98
  2781  0E46  3406               	retlw	6
  2782  0E47  3424               	retlw	36
  2783  0E48  3424               	retlw	36
  2784  0E49  3400               	retlw	0
  2785  0E4A  34FF               	retlw	255
  2786  0E4B  34FF               	retlw	255
  2787  0E4C  3406               	retlw	6
  2788  0E4D  3403               	retlw	3
  2789  0E4E  3400               	retlw	0
  2790  0E4F  3400               	retlw	0
  2791  0E50  3400               	retlw	0
  2792  0E51  3400               	retlw	0
  2793  0E52  3410               	retlw	16
  2794  0E53  3427               	retlw	39
  2795  0E54  3400               	retlw	0
  2796  0E55  3400               	retlw	0
  2797  0E56  3405               	retlw	5
  2798  0E57  3400               	retlw	0
  2799  0E58  34FA               	retlw	250
  2800  0E59  3400               	retlw	0
  2801  0E5A  34FA               	retlw	250
  2802  0E5B  3400               	retlw	0
  2803  0E5C  3464               	retlw	100
  2804  0E5D  3400               	retlw	0
  2805  0E5E  342C               	retlw	44
  2806  0E5F  3401               	retlw	1
  2807  0E60  3400               	retlw	0
  2808  0E61  3400               	retlw	0
  2809  0E62  3400               	retlw	0
  2810  0E63  3400               	retlw	0
  2811  0E64  3400               	retlw	0
  2812  0E65  3400               	retlw	0
  2813  0E66  3400               	retlw	0
  2814  0E67  3400               	retlw	0
  2815  0E68  3400               	retlw	0
  2816  0E69  3400               	retlw	0
  2817  0E6A  3400               	retlw	0
  2818  0E6B  3400               	retlw	0
  2819  0E6C  3400               	retlw	0
  2820  0E6D  3400               	retlw	0
  2821  0E6E  3416               	retlw	22
  2822  0E6F  34DC               	retlw	220
  2823                           
  2824                           	psect	stringtext1
  2825  10BF                     __pstringtext1:	
  2826  10BF                     crc16@FRONT_BIT:	
  2827  10BF  3400               	retlw	0
  2828  10C0  3480               	retlw	128
  2829  10C1                     __end_ofcrc16@FRONT_BIT:	
  2830                           
  2831                           	psect	stringtext2
  2832  10C1                     __pstringtext2:	
  2833  10C1                     _DELAY_MULT:	
  2834  10C1  34E8               	retlw	232
  2835  10C2  3403               	retlw	3
  2836  10C3                     __end_of_DELAY_MULT:	
  2837                           
  2838                           	psect	stringtext3
  2839  10C3                     __pstringtext3:	
  2840  10C3                     _BAUD_RATE:	
  2841  10C3  3432               	retlw	50
  2842  10C4  3400               	retlw	0
  2843  10C5                     __end_of_BAUD_RATE:	
  2844                           
  2845                           	psect	stringtext4
  2846  10C5                     __pstringtext4:	
  2847  10C5                     _MESSAGE_INTERVAL:	
  2848  10C5  3405               	retlw	5
  2849  10C6  3400               	retlw	0
  2850  10C7                     __end_of_MESSAGE_INTERVAL:	
  2851                           
  2852                           	psect	nvBANK2
  2853  0163                     __pnvBANK2:	
  2854  0163                     _TMR1_InterruptHandler:	
  2855  0163                     	ds	2
  2856  0165                     _timer1ReloadVal:	
  2857  0165                     	ds	2
  2858  000B                     _INTCONbits	set	11
  2859  0019                     _T1GCONbits	set	25
  2860  0018                     _T1CONbits	set	24
  2861  0018                     _T1CON	set	24
  2862  0016                     _TMR1L	set	22
  2863  0017                     _TMR1H	set	23
  2864  0019                     _T1GCON	set	25
  2865  0010                     _PIR1bits	set	16
  2866  00C0                     _TMR1ON	set	192
  2867  005F                     _GIE	set	95
  2868  005E                     _PEIE	set	94
  2869  0080                     _TMR1IF	set	128
  2870  0090                     _PIE1bits	set	144
  2871  0095                     _OPTION_REGbits	set	149
  2872  008E                     _TRISC	set	142
  2873  008D                     _TRISB	set	141
  2874  008C                     _TRISA	set	140
  2875  0098                     _OSCTUNE	set	152
  2876  0099                     _OSCCON	set	153
  2877  0480                     _TMR1IE	set	1152
  2878  010E                     _LATCbits	set	270
  2879  010C                     _LATAbits	set	268
  2880  010E                     _LATC	set	270
  2881  010D                     _LATB	set	269
  2882  010C                     _LATA	set	268
  2883  0116                     _BORCON	set	278
  2884  019A                     _TX1REG	set	410
  2885  0199                     _RC1REG	set	409
  2886  019D                     _RC1STAbits	set	413
  2887  019E                     _TX1STAbits	set	414
  2888  019C                     _SPBRGH	set	412
  2889  019B                     _SPBRGL	set	411
  2890  019E                     _TX1STA	set	414
  2891  019D                     _RC1STA	set	413
  2892  019F                     _BAUD1CON	set	415
  2893  018C                     _ANSELA	set	396
  2894  018D                     _ANSELB	set	397
  2895  018E                     _ANSELC	set	398
  2896  020E                     _WPUC	set	526
  2897  020C                     _WPUA	set	524
  2898  020D                     _WPUB	set	525
  2899  028E                     _ODCONC	set	654
  2900  028D                     _ODCONB	set	653
  2901  028C                     _ODCONA	set	652
  2902  030E                     _SLRCONC	set	782
  2903  030D                     _SLRCONB	set	781
  2904  030C                     _SLRCONA	set	780
  2905  0E24                     _RXPPS	set	3620
  2906  0E9F                     _RB7PPS	set	3743
  2907                           
  2908                           	psect	stringtext5
  2909  1000                     __pstringtext5:	
  2910  1000                     STR_7:	
  2911  1000  3424               	retlw	36	;'$'
  2912  1001  3424               	retlw	36	;'$'
  2913  1002  3448               	retlw	72	;'H'
  2914  1003  3441               	retlw	65	;'A'
  2915  1004  3442               	retlw	66	;'B'
  2916  1005  346E               	retlw	110	;'n'
  2917  1006  346F               	retlw	111	;'o'
  2918  1007  3476               	retlw	118	;'v'
  2919  1008  3461               	retlw	97	;'a'
  2920  1009  342C               	retlw	44	;','
  2921  100A  3425               	retlw	37	;'%'
  2922  100B  3464               	retlw	100	;'d'
  2923  100C  342C               	retlw	44	;','
  2924  100D  3425               	retlw	37	;'%'
  2925  100E  3473               	retlw	115	;'s'
  2926  100F  342C               	retlw	44	;','
  2927  1010  3425               	retlw	37	;'%'
  2928  1011  3473               	retlw	115	;'s'
  2929  1012  342C               	retlw	44	;','
  2930  1013  3425               	retlw	37	;'%'
  2931  1014  3473               	retlw	115	;'s'
  2932  1015  342C               	retlw	44	;','
  2933  1016  3425               	retlw	37	;'%'
  2934  1017  3473               	retlw	115	;'s'
  2935  1018  342C               	retlw	44	;','
  2936  1019  3425               	retlw	37	;'%'
  2937  101A  3473               	retlw	115	;'s'
  2938  101B  342C               	retlw	44	;','
  2939  101C  3425               	retlw	37	;'%'
  2940  101D  3473               	retlw	115	;'s'
  2941  101E  342C               	retlw	44	;','
  2942  101F  3425               	retlw	37	;'%'
  2943  1020  3473               	retlw	115	;'s'
  2944  1021  342A               	retlw	42	;'*'
  2945  1022  3400               	retlw	0
  2946                           
  2947                           	psect	stringtext6
  2948  1023                     __pstringtext6:	
  2949  1023                     STR_2:	
  2950  1023  3424               	retlw	36	;'$'
  2951  1024  3450               	retlw	80	;'P'
  2952  1025  3455               	retlw	85	;'U'
  2953  1026  3442               	retlw	66	;'B'
  2954  1027  3458               	retlw	88	;'X'
  2955  1028  342C               	retlw	44	;','
  2956  1029  3434               	retlw	52	;'4'
  2957  102A  3430               	retlw	48	;'0'
  2958  102B  342C               	retlw	44	;','
  2959  102C  3447               	retlw	71	;'G'
  2960  102D  3447               	retlw	71	;'G'
  2961  102E  3441               	retlw	65	;'A'
  2962  102F  342C               	retlw	44	;','
  2963  1030  3430               	retlw	48	;'0'
  2964  1031  342C               	retlw	44	;','
  2965  1032  3430               	retlw	48	;'0'
  2966  1033  342C               	retlw	44	;','
  2967  1034  3430               	retlw	48	;'0'
  2968  1035  342C               	retlw	44	;','
  2969  1036  3430               	retlw	48	;'0'
  2970  1037  342A               	retlw	42	;'*'
  2971  1038  3434               	retlw	52	;'4'
  2972  1039  3434               	retlw	52	;'4'
  2973  103A  340D               	retlw	13
  2974  103B  340A               	retlw	10
  2975  103C  3400               	retlw	0
  2976                           
  2977                           	psect	stringtext7
  2978  103D                     __pstringtext7:	
  2979  103D                     STR_6:	
  2980  103D  3424               	retlw	36	;'$'
  2981  103E  3450               	retlw	80	;'P'
  2982  103F  3455               	retlw	85	;'U'
  2983  1040  3442               	retlw	66	;'B'
  2984  1041  3458               	retlw	88	;'X'
  2985  1042  342C               	retlw	44	;','
  2986  1043  3434               	retlw	52	;'4'
  2987  1044  3430               	retlw	48	;'0'
  2988  1045  342C               	retlw	44	;','
  2989  1046  3452               	retlw	82	;'R'
  2990  1047  344D               	retlw	77	;'M'
  2991  1048  3443               	retlw	67	;'C'
  2992  1049  342C               	retlw	44	;','
  2993  104A  3430               	retlw	48	;'0'
  2994  104B  342C               	retlw	44	;','
  2995  104C  3430               	retlw	48	;'0'
  2996  104D  342C               	retlw	44	;','
  2997  104E  3430               	retlw	48	;'0'
  2998  104F  342C               	retlw	44	;','
  2999  1050  3430               	retlw	48	;'0'
  3000  1051  342A               	retlw	42	;'*'
  3001  1052  3434               	retlw	52	;'4'
  3002  1053  3437               	retlw	55	;'7'
  3003  1054  340D               	retlw	13
  3004  1055  340A               	retlw	10
  3005  1056  3400               	retlw	0
  3006                           
  3007                           	psect	stringtext8
  3008  1057                     __pstringtext8:	
  3009  1057                     STR_4:	
  3010  1057  3424               	retlw	36	;'$'
  3011  1058  3450               	retlw	80	;'P'
  3012  1059  3455               	retlw	85	;'U'
  3013  105A  3442               	retlw	66	;'B'
  3014  105B  3458               	retlw	88	;'X'
  3015  105C  342C               	retlw	44	;','
  3016  105D  3434               	retlw	52	;'4'
  3017  105E  3430               	retlw	48	;'0'
  3018  105F  342C               	retlw	44	;','
  3019  1060  3447               	retlw	71	;'G'
  3020  1061  3453               	retlw	83	;'S'
  3021  1062  3456               	retlw	86	;'V'
  3022  1063  342C               	retlw	44	;','
  3023  1064  3430               	retlw	48	;'0'
  3024  1065  342C               	retlw	44	;','
  3025  1066  3430               	retlw	48	;'0'
  3026  1067  342C               	retlw	44	;','
  3027  1068  3430               	retlw	48	;'0'
  3028  1069  342C               	retlw	44	;','
  3029  106A  3430               	retlw	48	;'0'
  3030  106B  342A               	retlw	42	;'*'
  3031  106C  3435               	retlw	53	;'5'
  3032  106D  3439               	retlw	57	;'9'
  3033  106E  340D               	retlw	13
  3034  106F  340A               	retlw	10
  3035  1070  3400               	retlw	0
  3036                           
  3037                           	psect	stringtext9
  3038  1071                     __pstringtext9:	
  3039  1071                     STR_1:	
  3040  1071  3424               	retlw	36	;'$'
  3041  1072  3450               	retlw	80	;'P'
  3042  1073  3455               	retlw	85	;'U'
  3043  1074  3442               	retlw	66	;'B'
  3044  1075  3458               	retlw	88	;'X'
  3045  1076  342C               	retlw	44	;','
  3046  1077  3434               	retlw	52	;'4'
  3047  1078  3430               	retlw	48	;'0'
  3048  1079  342C               	retlw	44	;','
  3049  107A  3447               	retlw	71	;'G'
  3050  107B  344C               	retlw	76	;'L'
  3051  107C  344C               	retlw	76	;'L'
  3052  107D  342C               	retlw	44	;','
  3053  107E  3430               	retlw	48	;'0'
  3054  107F  342C               	retlw	44	;','
  3055  1080  3430               	retlw	48	;'0'
  3056  1081  342C               	retlw	44	;','
  3057  1082  3430               	retlw	48	;'0'
  3058  1083  342C               	retlw	44	;','
  3059  1084  3430               	retlw	48	;'0'
  3060  1085  342A               	retlw	42	;'*'
  3061  1086  3435               	retlw	53	;'5'
  3062  1087  3443               	retlw	67	;'C'
  3063  1088  340D               	retlw	13
  3064  1089  340A               	retlw	10
  3065  108A  3400               	retlw	0
  3066                           
  3067                           	psect	stringtext10
  3068  108B                     __pstringtext10:	
  3069  108B                     STR_5:	
  3070  108B  3424               	retlw	36	;'$'
  3071  108C  3450               	retlw	80	;'P'
  3072  108D  3455               	retlw	85	;'U'
  3073  108E  3442               	retlw	66	;'B'
  3074  108F  3458               	retlw	88	;'X'
  3075  1090  342C               	retlw	44	;','
  3076  1091  3434               	retlw	52	;'4'
  3077  1092  3430               	retlw	48	;'0'
  3078  1093  342C               	retlw	44	;','
  3079  1094  3447               	retlw	71	;'G'
  3080  1095  3453               	retlw	83	;'S'
  3081  1096  3441               	retlw	65	;'A'
  3082  1097  342C               	retlw	44	;','
  3083  1098  3430               	retlw	48	;'0'
  3084  1099  342C               	retlw	44	;','
  3085  109A  3430               	retlw	48	;'0'
  3086  109B  342C               	retlw	44	;','
  3087  109C  3430               	retlw	48	;'0'
  3088  109D  342C               	retlw	44	;','
  3089  109E  3430               	retlw	48	;'0'
  3090  109F  342A               	retlw	42	;'*'
  3091  10A0  3434               	retlw	52	;'4'
  3092  10A1  3445               	retlw	69	;'E'
  3093  10A2  340D               	retlw	13
  3094  10A3  340A               	retlw	10
  3095  10A4  3400               	retlw	0
  3096                           
  3097                           	psect	stringtext11
  3098  10A5                     __pstringtext11:	
  3099  10A5                     STR_3:	
  3100  10A5  3424               	retlw	36	;'$'
  3101  10A6  3450               	retlw	80	;'P'
  3102  10A7  3455               	retlw	85	;'U'
  3103  10A8  3442               	retlw	66	;'B'
  3104  10A9  3458               	retlw	88	;'X'
  3105  10AA  342C               	retlw	44	;','
  3106  10AB  3434               	retlw	52	;'4'
  3107  10AC  3430               	retlw	48	;'0'
  3108  10AD  342C               	retlw	44	;','
  3109  10AE  3456               	retlw	86	;'V'
  3110  10AF  3454               	retlw	84	;'T'
  3111  10B0  3447               	retlw	71	;'G'
  3112  10B1  342C               	retlw	44	;','
  3113  10B2  3430               	retlw	48	;'0'
  3114  10B3  342C               	retlw	44	;','
  3115  10B4  3430               	retlw	48	;'0'
  3116  10B5  342C               	retlw	44	;','
  3117  10B6  3430               	retlw	48	;'0'
  3118  10B7  342C               	retlw	44	;','
  3119  10B8  3430               	retlw	48	;'0'
  3120  10B9  342A               	retlw	42	;'*'
  3121  10BA  3435               	retlw	53	;'5'
  3122  10BB  3445               	retlw	69	;'E'
  3123  10BC  340D               	retlw	13
  3124  10BD  340A               	retlw	10
  3125  10BE  3400               	retlw	0
  3126                           
  3127                           	psect	stringtext12
  3128  0000                     __pstringtext12:	
  3129                           
  3130                           ; #config settings
  3131  0000                     
  3132                           	psect	cinit
  3133  0014                     start_initialization:	
  3134  0014                     __initialization:	
  3135                           
  3136                           ; Initialize objects allocated to BANK2
  3137  0014  30A4               	movlw	low __pidataBANK2
  3138  0015  0084               	movwf	4
  3139  0016  308C               	movlw	(high __pidataBANK2)| (0+128)
  3140  0017  0085               	movwf	5
  3141  0018  305C               	movlw	low __pdataBANK2
  3142  0019  0086               	movwf	6
  3143  001A  3001               	movlw	high __pdataBANK2
  3144  001B  0087               	movwf	7
  3145  001C  3007               	movlw	7
  3146  001D  318C  2497  3180   	fcall	init_ram
  3147                           
  3148                           ; Initialize objects allocated to BANK4
  3149  0020  3044               	movlw	low __pidataBANK4
  3150  0021  0084               	movwf	4
  3151  0022  308E               	movlw	(high __pidataBANK4)| (0+128)
  3152  0023  0085               	movwf	5
  3153  0024  3020               	movlw	low __pdataBANK4
  3154  0025  0086               	movwf	6
  3155  0026  3002               	movlw	high __pdataBANK4
  3156  0027  0087               	movwf	7
  3157  0028  302C               	movlw	44
  3158  0029  318C  2497  3180   	fcall	init_ram
  3159                           
  3160                           ; Clear objects allocated to COMMON
  3161  002C  01FA               	clrf	__pbssCOMMON& (0+127)
  3162  002D  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
  3163                           
  3164                           ; Clear objects allocated to BANK1
  3165  002E  0021               	movlb	1	; select bank1
  3166  002F  01BF               	clrf	__pbssBANK1& (0+127)
  3167  0030  01C0               	clrf	(__pbssBANK1+1)& (0+127)
  3168  0031  01C1               	clrf	(__pbssBANK1+2)& (0+127)
  3169                           
  3170                           ; Clear objects allocated to BANK2
  3171  0032  3020               	movlw	low __pbssBANK2
  3172  0033  0084               	movwf	4
  3173  0034  3001               	movlw	high __pbssBANK2
  3174  0035  0085               	movwf	5
  3175  0036  303C               	movlw	60
  3176  0037  318C  2491  3180   	fcall	clear_ram0
  3177                           
  3178                           ; Clear objects allocated to BANK3
  3179  003A  30A0               	movlw	low __pbssBANK3
  3180  003B  0084               	movwf	4
  3181  003C  3001               	movlw	high __pbssBANK3
  3182  003D  0085               	movwf	5
  3183  003E  3050               	movlw	80
  3184  003F  318C  2491         	fcall	clear_ram0
  3185  0041                     end_of_initialization:	
  3186                           ;End of C runtime variable initialization code
  3187                           
  3188  0041                     __end_of__initialization:	
  3189  0041  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3190  0042  0020               	movlb	0
  3191  0043  3186  2ED9         	ljmp	_main	;jump to C main() function
  3192                           
  3193                           	psect	bssCOMMON
  3194  007A                     __pbssCOMMON:	
  3195  007A                     _flags:	
  3196  007A                     	ds	2
  3197                           
  3198                           	psect	bssBANK1
  3199  00BF                     __pbssBANK1:	
  3200  00BF                     _prec:	
  3201  00BF                     	ds	2
  3202  00C1                     _gps_configured:	
  3203  00C1                     	ds	1
  3204                           
  3205                           	psect	bssBANK2
  3206  0120                     __pbssBANK2:	
  3207  0120                     _gps_nav_status:	
  3208  0120                     	ds	4
  3209  0124                     _nout:	
  3210  0124                     	ds	2
  3211  0126                     _width:	
  3212  0126                     	ds	2
  3213  0128                     _gps_time:	
  3214  0128                     	ds	16
  3215  0138                     _gps_vertical_velocity:	
  3216  0138                     	ds	12
  3217  0144                     _gps_course_over_ground:	
  3218  0144                     	ds	12
  3219  0150                     _gps_speed_over_ground:	
  3220  0150                     	ds	12
  3221                           
  3222                           	psect	dataBANK2
  3223  015C                     __pdataBANK2:	
  3224  015C                     stoa@F1139:	
  3225  015C                     	ds	7
  3226                           
  3227                           	psect	bssBANK3
  3228  01A0                     __pbssBANK3:	
  3229  01A0                     _dbuf:	
  3230  01A0                     	ds	32
  3231  01C0                     _gps_altitude:	
  3232  01C0                     	ds	16
  3233  01D0                     _gps_longitude:	
  3234  01D0                     	ds	16
  3235  01E0                     _gps_latitude:	
  3236  01E0                     	ds	16
  3237                           
  3238                           	psect	dataBANK4
  3239  0220                     __pdataBANK4:	
  3240  0220                     _setNavFlightMode:	
  3241  0220                     	ds	44
  3242                           
  3243                           	psect	inittext
  3244  0C97                     init_ram:	
  3245  0C97  00FE               	movwf	126
  3246  0C98                     initloop:	
  3247  0C98  0012               	moviw fsr0++
  3248  0C99  001E               	movwi fsr1++
  3249  0C9A  0BFE               	decfsz	126,f
  3250  0C9B  2C98               	goto	initloop
  3251  0C9C  3400               	retlw	0
  3252                           
  3253                           	psect	clrtext
  3254  0C91                     clear_ram0:	
  3255                           ;	Called with FSR0 containing the base address, and
  3256                           ;	WREG with the size to clear
  3257                           
  3258  0C91  0064               	clrwdt	;clear the watchdog before getting into this loop
  3259  0C92                     clrloop0:	
  3260  0C92  0180               	clrf	0	;clear RAM location pointed to by FSR
  3261  0C93  3101               	addfsr 0,1
  3262  0C94  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3263  0C95  2C92               	goto	clrloop0	;have we reached the end yet?
  3264  0C96  3400               	retlw	0	;all done for this memory range, return
  3265                           
  3266                           	psect	cstackBANK5
  3267  02A0                     __pcstackBANK5:	
  3268  02A0                     main@message:	
  3269                           
  3270                           ; 43 bytes @ 0x0
  3271  02A0                     	ds	43
  3272  02CB                     main@id:	
  3273                           
  3274                           ; 2 bytes @ 0x2B
  3275  02CB                     	ds	2
  3276  02CD                     main@i:	
  3277                           
  3278                           ; 2 bytes @ 0x2D
  3279  02CD                     	ds	2
  3280                           
  3281                           	psect	cstackBANK1
  3282  00A0                     __pcstackBANK1:	
  3283  00A0                     vfprintf@fp:	
  3284                           
  3285                           ; 1 bytes @ 0x0
  3286  00A0                     	ds	1
  3287  00A1                     vfprintf@cfmt:	
  3288                           
  3289                           ; 2 bytes @ 0x1
  3290  00A1                     	ds	2
  3291  00A3                     ?_printf:	
  3292  00A3                     ?_sprintf:	
  3293                           ; 2 bytes @ 0x3
  3294                           
  3295  00A3                     sprintf@fmt:	
  3296                           ; 2 bytes @ 0x3
  3297                           
  3298  00A3                     printf@fmt:	
  3299                           ; 2 bytes @ 0x3
  3300                           
  3301                           
  3302                           ; 2 bytes @ 0x3
  3303  00A3                     	ds	4
  3304  00A7                     printf@ap:	
  3305                           
  3306                           ; 1 bytes @ 0x7
  3307  00A7                     	ds	1
  3308  00A8                     ??_SetupGPS:	
  3309                           
  3310                           ; 1 bytes @ 0x8
  3311  00A8                     	ds	15
  3312  00B7                     sprintf@s:	
  3313                           
  3314                           ; 1 bytes @ 0x17
  3315  00B7                     	ds	1
  3316  00B8                     sprintf@ap:	
  3317                           
  3318                           ; 1 bytes @ 0x18
  3319  00B8                     	ds	1
  3320  00B9                     sprintf@f:	
  3321                           
  3322                           ; 5 bytes @ 0x19
  3323  00B9                     	ds	5
  3324  00BE                     ??_main:	
  3325                           
  3326                           ; 1 bytes @ 0x1E
  3327  00BE                     	ds	1
  3328                           
  3329                           	psect	cstackCOMMON
  3330  0070                     __pcstackCOMMON:	
  3331  0070                     ?_PIN_MANAGER_Initialize:	
  3332  0070                     ?_OSCILLATOR_Initialize:	
  3333                           ; 1 bytes @ 0x0
  3334                           
  3335  0070                     ?_TMR1_Initialize:	
  3336                           ; 1 bytes @ 0x0
  3337                           
  3338  0070                     ?_EUSART_Initialize:	
  3339                           ; 1 bytes @ 0x0
  3340                           
  3341  0070                     ?_TMR1_DefaultInterruptHandler:	
  3342                           ; 1 bytes @ 0x0
  3343                           
  3344  0070                     ??_TMR1_DefaultInterruptHandler:	
  3345                           ; 1 bytes @ 0x0
  3346                           
  3347  0070                     ?_TMR1_CallBack:	
  3348                           ; 1 bytes @ 0x0
  3349                           
  3350  0070                     ??_TMR1_CallBack:	
  3351                           ; 1 bytes @ 0x0
  3352                           
  3353  0070                     ?_SYSTEM_Initialize:	
  3354                           ; 1 bytes @ 0x0
  3355                           
  3356  0070                     ?_EUSART_is_rx_ready:	
  3357                           ; 1 bytes @ 0x0
  3358                           
  3359  0070                     ?_EUSART_Read:	
  3360                           ; 1 bytes @ 0x0
  3361                           
  3362  0070                     ?_EUSART_Write:	
  3363                           ; 1 bytes @ 0x0
  3364                           
  3365  0070                     ?_putch:	
  3366                           ; 1 bytes @ 0x0
  3367                           
  3368  0070                     ?_TMR1_StartTimer:	
  3369                           ; 1 bytes @ 0x0
  3370                           
  3371  0070                     ?_TMR1_WriteTimer:	
  3372                           ; 1 bytes @ 0x0
  3373                           
  3374  0070                     ?_TMR1_ISR:	
  3375                           ; 1 bytes @ 0x0
  3376                           
  3377  0070                     ?_INTERRUPT_InterruptManager:	
  3378                           ; 1 bytes @ 0x0
  3379                           
  3380  0070                     ?_TIMER1_Initialize:	
  3381                           ; 1 bytes @ 0x0
  3382                           
  3383  0070                     ?_TransmitBit:	
  3384                           ; 1 bytes @ 0x0
  3385                           
  3386  0070                     ?_TransmitByte:	
  3387                           ; 1 bytes @ 0x0
  3388                           
  3389  0070                     ?_TransmitString:	
  3390                           ; 1 bytes @ 0x0
  3391                           
  3392  0070                     ?_GPS_SendUBX:	
  3393                           ; 1 bytes @ 0x0
  3394                           
  3395  0070                     ?_GPS_HasAcknowledged:	
  3396                           ; 1 bytes @ 0x0
  3397                           
  3398  0070                     ?_SetupGPS:	
  3399                           ; 1 bytes @ 0x0
  3400                           
  3401  0070                     ?_GetNavData:	
  3402                           ; 1 bytes @ 0x0
  3403                           
  3404  0070                     ?_main:	
  3405                           ; 1 bytes @ 0x0
  3406                           
  3407  0070                     TMR1_WriteTimer@timerVal:	
  3408                           ; 1 bytes @ 0x0
  3409                           
  3410                           
  3411                           ; 2 bytes @ 0x0
  3412  0070                     	ds	2
  3413  0072                     ??_PIN_MANAGER_Initialize:	
  3414  0072                     ??_OSCILLATOR_Initialize:	
  3415                           ; 1 bytes @ 0x2
  3416                           
  3417  0072                     ??_EUSART_Initialize:	
  3418                           ; 1 bytes @ 0x2
  3419                           
  3420  0072                     ?_TMR1_SetInterruptHandler:	
  3421                           ; 1 bytes @ 0x2
  3422                           
  3423  0072                     ??_EUSART_is_rx_ready:	
  3424                           ; 1 bytes @ 0x2
  3425                           
  3426  0072                     ??_EUSART_Read:	
  3427                           ; 1 bytes @ 0x2
  3428                           
  3429  0072                     ??_EUSART_Write:	
  3430                           ; 1 bytes @ 0x2
  3431                           
  3432  0072                     ??_TMR1_StartTimer:	
  3433                           ; 1 bytes @ 0x2
  3434                           
  3435  0072                     ??_TMR1_WriteTimer:	
  3436                           ; 1 bytes @ 0x2
  3437                           
  3438  0072                     ??_TMR1_ISR:	
  3439                           ; 1 bytes @ 0x2
  3440                           
  3441  0072                     ??_INTERRUPT_InterruptManager:	
  3442                           ; 1 bytes @ 0x2
  3443                           
  3444  0072                     ??_TIMER1_Initialize:	
  3445                           ; 1 bytes @ 0x2
  3446                           
  3447  0072                     ??_TransmitBit:	
  3448                           ; 1 bytes @ 0x2
  3449                           
  3450  0072                     ??___aodiv:	
  3451                           ; 1 bytes @ 0x2
  3452                           
  3453  0072                     ??___aomod:	
  3454                           ; 1 bytes @ 0x2
  3455                           
  3456  0072                     ?_strlen:	
  3457                           ; 1 bytes @ 0x2
  3458                           
  3459  0072                     ?_TMR1_ReadTimer:	
  3460                           ; 2 bytes @ 0x2
  3461                           
  3462  0072                     ?_GetLengthUBX:	
  3463                           ; 2 bytes @ 0x2
  3464                           
  3465  0072                     EUSART_Write@txData:	
  3466                           ; 2 bytes @ 0x2
  3467                           
  3468  0072                     TMR1_SetInterruptHandler@InterruptHandler:	
  3469                           ; 1 bytes @ 0x2
  3470                           
  3471  0072                     strlen@s:	
  3472                           ; 2 bytes @ 0x2
  3473                           
  3474                           
  3475                           ; 2 bytes @ 0x2
  3476  0072                     	ds	1
  3477  0073                     ??_putch:	
  3478  0073                     putch@txData:	
  3479                           ; 1 bytes @ 0x3
  3480                           
  3481  0073                     TransmitBit@b:	
  3482                           ; 1 bytes @ 0x3
  3483                           
  3484  0073                     ___aomod@counter:	
  3485                           ; 1 bytes @ 0x3
  3486                           
  3487                           
  3488                           ; 1 bytes @ 0x3
  3489  0073                     	ds	1
  3490  0074                     ??_TMR1_Initialize:	
  3491  0074                     ??_TMR1_SetInterruptHandler:	
  3492                           ; 1 bytes @ 0x4
  3493                           
  3494  0074                     ??_strlen:	
  3495                           ; 1 bytes @ 0x4
  3496                           
  3497  0074                     ??_SYSTEM_Initialize:	
  3498                           ; 1 bytes @ 0x4
  3499                           
  3500  0074                     ??_TMR1_ReadTimer:	
  3501                           ; 1 bytes @ 0x4
  3502                           
  3503  0074                     ??_TransmitByte:	
  3504                           ; 1 bytes @ 0x4
  3505                           
  3506  0074                     ?_fputc:	
  3507                           ; 1 bytes @ 0x4
  3508                           
  3509  0074                     ___aomod@sign:	
  3510                           ; 2 bytes @ 0x4
  3511                           
  3512  0074                     fputc@c:	
  3513                           ; 1 bytes @ 0x4
  3514                           
  3515  0074                     strlen@a:	
  3516                           ; 2 bytes @ 0x4
  3517                           
  3518                           
  3519                           ; 2 bytes @ 0x4
  3520  0074                     	ds	1
  3521  0075                     ??_GetLengthUBX:	
  3522  0075                     ?_abs:	
  3523                           ; 1 bytes @ 0x5
  3524                           
  3525  0075                     TransmitByte@byte:	
  3526                           ; 2 bytes @ 0x5
  3527                           
  3528  0075                     GetLengthUBX@data:	
  3529                           ; 1 bytes @ 0x5
  3530                           
  3531  0075                     abs@a:	
  3532                           ; 1 bytes @ 0x5
  3533                           
  3534                           
  3535                           ; 2 bytes @ 0x5
  3536  0075                     	ds	1
  3537  0076                     ??_GPS_SendUBX:	
  3538  0076                     ?_crc16:	
  3539                           ; 1 bytes @ 0x6
  3540                           
  3541  0076                     fputc@fp:	
  3542                           ; 2 bytes @ 0x6
  3543                           
  3544  0076                     crc16@polynomial:	
  3545                           ; 1 bytes @ 0x6
  3546                           
  3547  0076                     TransmitByte@i:	
  3548                           ; 2 bytes @ 0x6
  3549                           
  3550                           
  3551                           ; 2 bytes @ 0x6
  3552  0076                     	ds	1
  3553  0077                     ??_fputs:	
  3554  0077                     ??_abs:	
  3555                           ; 1 bytes @ 0x7
  3556                           
  3557  0077                     ??_stoa:	
  3558                           ; 1 bytes @ 0x7
  3559                           
  3560                           
  3561                           ; 1 bytes @ 0x7
  3562  0077                     	ds	1
  3563  0078                     ??_TransmitString:	
  3564  0078                     ??_AppendCRC:	
  3565                           ; 1 bytes @ 0x8
  3566                           
  3567                           
  3568                           ; 1 bytes @ 0x8
  3569  0078                     	ds	2
  3570                           
  3571                           	psect	cstackBANK0
  3572  0020                     __pcstackBANK0:	
  3573  0020                     ??_fputc:	
  3574  0020                     ??_crc16:	
  3575                           ; 1 bytes @ 0x0
  3576                           
  3577  0020                     ?___aodiv:	
  3578                           ; 1 bytes @ 0x0
  3579                           
  3580  0020                     ?___aomod:	
  3581                           ; 8 bytes @ 0x0
  3582                           
  3583  0020                     TMR1_ReadTimer@readVal:	
  3584                           ; 8 bytes @ 0x0
  3585                           
  3586  0020                     TransmitString@counti:	
  3587                           ; 2 bytes @ 0x0
  3588                           
  3589  0020                     GPS_SendUBX@length:	
  3590                           ; 2 bytes @ 0x0
  3591                           
  3592  0020                     ___aodiv@divisor:	
  3593                           ; 2 bytes @ 0x0
  3594                           
  3595  0020                     ___aomod@divisor:	
  3596                           ; 8 bytes @ 0x0
  3597                           
  3598                           
  3599                           ; 8 bytes @ 0x0
  3600  0020                     	ds	2
  3601  0022                     TMR1_ReadTimer@readValHigh:	
  3602  0022                     TransmitString@message:	
  3603                           ; 1 bytes @ 0x2
  3604                           
  3605  0022                     GPS_SendUBX@data:	
  3606                           ; 1 bytes @ 0x2
  3607                           
  3608                           
  3609                           ; 1 bytes @ 0x2
  3610  0022                     	ds	1
  3611  0023                     TMR1_ReadTimer@readValLow:	
  3612  0023                     crc16@counti:	
  3613                           ; 1 bytes @ 0x3
  3614                           
  3615  0023                     TransmitString@i:	
  3616                           ; 2 bytes @ 0x3
  3617                           
  3618  0023                     GPS_SendUBX@i:	
  3619                           ; 2 bytes @ 0x3
  3620                           
  3621                           
  3622                           ; 2 bytes @ 0x3
  3623  0023                     	ds	1
  3624  0024                     ??_GPS_HasAcknowledged:	
  3625  0024                     ??_GetNavData:	
  3626                           ; 1 bytes @ 0x4
  3627                           
  3628                           
  3629                           ; 1 bytes @ 0x4
  3630  0024                     	ds	1
  3631  0025                     ?_fputs:	
  3632  0025                     ?_stoa:	
  3633                           ; 2 bytes @ 0x5
  3634                           
  3635  0025                     crc16@byte:	
  3636                           ; 2 bytes @ 0x5
  3637                           
  3638  0025                     fputs@fp:	
  3639                           ; 1 bytes @ 0x5
  3640                           
  3641  0025                     stoa@s:	
  3642                           ; 1 bytes @ 0x5
  3643                           
  3644                           
  3645                           ; 2 bytes @ 0x5
  3646  0025                     	ds	1
  3647  0026                     fputs@c:	
  3648  0026                     crc16@i:	
  3649                           ; 1 bytes @ 0x6
  3650                           
  3651                           
  3652                           ; 2 bytes @ 0x6
  3653  0026                     	ds	1
  3654  0027                     fputs@i:	
  3655  0027                     stoa@nuls:	
  3656                           ; 2 bytes @ 0x7
  3657                           
  3658                           
  3659                           ; 7 bytes @ 0x7
  3660  0027                     	ds	1
  3661  0028                     crc16@i_535:	
  3662  0028                     GPS_HasAcknowledged@startTime:	
  3663                           ; 2 bytes @ 0x8
  3664                           
  3665  0028                     GetNavData@startTime:	
  3666                           ; 4 bytes @ 0x8
  3667                           
  3668  0028                     ___aodiv@dividend:	
  3669                           ; 4 bytes @ 0x8
  3670                           
  3671  0028                     ___aomod@dividend:	
  3672                           ; 8 bytes @ 0x8
  3673                           
  3674                           
  3675                           ; 8 bytes @ 0x8
  3676  0028                     	ds	1
  3677  0029                     fputs@s:	
  3678                           
  3679                           ; 1 bytes @ 0x9
  3680  0029                     	ds	1
  3681  002A                     ?_pad:	
  3682  002A                     crc16@message:	
  3683                           ; 2 bytes @ 0xA
  3684                           
  3685  002A                     pad@buf:	
  3686                           ; 1 bytes @ 0xA
  3687                           
  3688                           
  3689                           ; 1 bytes @ 0xA
  3690  002A                     	ds	1
  3691  002B                     crc16@crc:	
  3692  002B                     pad@p:	
  3693                           ; 2 bytes @ 0xB
  3694                           
  3695                           
  3696                           ; 2 bytes @ 0xB
  3697  002B                     	ds	1
  3698  002C                     GPS_HasAcknowledged@ackByte:	
  3699  002C                     _GetNavData$607:	
  3700                           ; 1 bytes @ 0xC
  3701                           
  3702                           
  3703                           ; 2 bytes @ 0xC
  3704  002C                     	ds	1
  3705  002D                     ?_AppendCRC:	
  3706  002D                     ??_pad:	
  3707                           ; 1 bytes @ 0xD
  3708                           
  3709  002D                     AppendCRC@crc:	
  3710                           ; 1 bytes @ 0xD
  3711                           
  3712  002D                     GPS_HasAcknowledged@ackPacket:	
  3713                           ; 2 bytes @ 0xD
  3714                           
  3715                           
  3716                           ; 10 bytes @ 0xD
  3717  002D                     	ds	1
  3718  002E                     _GetNavData$608:	
  3719  002E                     pad@i:	
  3720                           ; 2 bytes @ 0xE
  3721                           
  3722  002E                     stoa@i:	
  3723                           ; 2 bytes @ 0xE
  3724                           
  3725                           
  3726                           ; 2 bytes @ 0xE
  3727  002E                     	ds	1
  3728  002F                     AppendCRC@data:	
  3729                           
  3730                           ; 1 bytes @ 0xF
  3731  002F                     	ds	1
  3732  0030                     GetNavData@skip:	
  3733  0030                     ___aodiv@counter:	
  3734                           ; 1 bytes @ 0x10
  3735                           
  3736  0030                     AppendCRC@len:	
  3737                           ; 1 bytes @ 0x10
  3738                           
  3739  0030                     pad@w:	
  3740                           ; 2 bytes @ 0x10
  3741                           
  3742  0030                     stoa@w:	
  3743                           ; 2 bytes @ 0x10
  3744                           
  3745                           
  3746                           ; 2 bytes @ 0x10
  3747  0030                     	ds	1
  3748  0031                     ___aodiv@sign:	
  3749  0031                     GetNavData@dataFieldType:	
  3750                           ; 1 bytes @ 0x11
  3751                           
  3752                           
  3753                           ; 2 bytes @ 0x11
  3754  0031                     	ds	1
  3755  0032                     pad@fp:	
  3756  0032                     stoa@fp:	
  3757                           ; 1 bytes @ 0x12
  3758                           
  3759  0032                     ___aodiv@quotient:	
  3760                           ; 1 bytes @ 0x12
  3761                           
  3762                           
  3763                           ; 8 bytes @ 0x12
  3764  0032                     	ds	1
  3765  0033                     GetNavData@i:	
  3766  0033                     stoa@cp:	
  3767                           ; 2 bytes @ 0x13
  3768                           
  3769                           
  3770                           ; 2 bytes @ 0x13
  3771  0033                     	ds	2
  3772  0035                     GetNavData@success:	
  3773  0035                     stoa@p:	
  3774                           ; 1 bytes @ 0x15
  3775                           
  3776                           
  3777                           ; 2 bytes @ 0x15
  3778  0035                     	ds	1
  3779  0036                     GetNavData@dataIndex:	
  3780                           
  3781                           ; 2 bytes @ 0x16
  3782  0036                     	ds	1
  3783  0037                     GPS_HasAcknowledged@data:	
  3784  0037                     stoa@l:	
  3785                           ; 1 bytes @ 0x17
  3786                           
  3787                           
  3788                           ; 2 bytes @ 0x17
  3789  0037                     	ds	1
  3790  0038                     GPS_HasAcknowledged@ackByteID:	
  3791  0038                     GetNavData@byte:	
  3792                           ; 1 bytes @ 0x18
  3793                           
  3794                           
  3795                           ; 1 bytes @ 0x18
  3796  0038                     	ds	1
  3797  0039                     GPS_HasAcknowledged@i:	
  3798                           
  3799                           ; 1 bytes @ 0x19
  3800  0039                     	ds	1
  3801  003A                     ?_dtoa:	
  3802  003A                     dtoa@d:	
  3803                           ; 2 bytes @ 0x1A
  3804                           
  3805                           
  3806                           ; 8 bytes @ 0x1A
  3807  003A                     	ds	8
  3808  0042                     ??_dtoa:	
  3809                           
  3810                           ; 1 bytes @ 0x22
  3811  0042                     	ds	3
  3812  0045                     dtoa@fp:	
  3813                           
  3814                           ; 1 bytes @ 0x25
  3815  0045                     	ds	1
  3816  0046                     _dtoa$701:	
  3817                           
  3818                           ; 2 bytes @ 0x26
  3819  0046                     	ds	2
  3820  0048                     dtoa@p:	
  3821                           
  3822                           ; 2 bytes @ 0x28
  3823  0048                     	ds	2
  3824  004A                     dtoa@w:	
  3825                           
  3826                           ; 2 bytes @ 0x2A
  3827  004A                     	ds	2
  3828  004C                     dtoa@s:	
  3829                           
  3830                           ; 2 bytes @ 0x2C
  3831  004C                     	ds	2
  3832  004E                     dtoa@n:	
  3833                           
  3834                           ; 8 bytes @ 0x2E
  3835  004E                     	ds	8
  3836  0056                     dtoa@i:	
  3837                           
  3838                           ; 2 bytes @ 0x36
  3839  0056                     	ds	2
  3840  0058                     ?_vfpfcnvrt:	
  3841  0058                     vfpfcnvrt@fmt:	
  3842                           ; 2 bytes @ 0x38
  3843                           
  3844                           
  3845                           ; 1 bytes @ 0x38
  3846  0058                     	ds	1
  3847  0059                     vfpfcnvrt@ap:	
  3848                           
  3849                           ; 1 bytes @ 0x39
  3850  0059                     	ds	1
  3851  005A                     ??_vfpfcnvrt:	
  3852                           
  3853                           ; 1 bytes @ 0x3A
  3854  005A                     	ds	5
  3855  005F                     vfpfcnvrt@ll:	
  3856                           
  3857                           ; 8 bytes @ 0x3F
  3858  005F                     	ds	8
  3859  0067                     vfpfcnvrt@cp:	
  3860                           
  3861                           ; 2 bytes @ 0x47
  3862  0067                     	ds	2
  3863  0069                     vfpfcnvrt@fp:	
  3864                           
  3865                           ; 1 bytes @ 0x49
  3866  0069                     	ds	1
  3867  006A                     ?_vfprintf:	
  3868  006A                     vfprintf@fmt:	
  3869                           ; 2 bytes @ 0x4A
  3870                           
  3871                           
  3872                           ; 2 bytes @ 0x4A
  3873  006A                     	ds	2
  3874  006C                     vfprintf@ap:	
  3875                           
  3876                           ; 1 bytes @ 0x4C
  3877  006C                     	ds	1
  3878  006D                     ??_vfprintf:	
  3879                           
  3880                           ; 1 bytes @ 0x4D
  3881  006D                     	ds	2
  3882  006F                     ??_printf:	
  3883  006F                     ??_sprintf:	
  3884                           ; 1 bytes @ 0x4F
  3885                           
  3886                           
  3887                           ; 1 bytes @ 0x4F
  3888  006F                     	ds	1
  3889                           
  3890                           	psect	maintext
  3891  06D9                     __pmaintext:	
  3892 ;;
  3893 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  3894 ;;
  3895 ;; *************** function _main *****************
  3896 ;; Defined at:
  3897 ;;		line 442 in file "main.c"
  3898 ;; Parameters:    Size  Location     Type
  3899 ;;		None
  3900 ;; Auto vars:     Size  Location     Type
  3901 ;;  i               2   45[BANK5 ] int 
  3902 ;;  message        43    0[BANK5 ] unsigned char [43]
  3903 ;;  id              2   43[BANK5 ] int 
  3904 ;; Return value:  Size  Location     Type
  3905 ;;                  1    wreg      void 
  3906 ;; Registers used:
  3907 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3908 ;; Tracked objects:
  3909 ;;		On entry : B1F/0
  3910 ;;		On exit  : 0/0
  3911 ;;		Unchanged: 0/0
  3912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3914 ;;      Locals:         0       0       0       0       0       0      47       0       0       0       0       0       
      +0       0
  3915 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  3916 ;;      Totals:         0       0       1       0       0       0      47       0       0       0       0       0       
      +0       0
  3917 ;;Total ram usage:       48 bytes
  3918 ;; Hardware stack levels required when called:   14
  3919 ;; This function calls:
  3920 ;;		_AppendCRC
  3921 ;;		_GetNavData
  3922 ;;		_SYSTEM_Initialize
  3923 ;;		_SetupGPS
  3924 ;;		_TIMER1_Initialize
  3925 ;;		_TransmitString
  3926 ;;		_crc16
  3927 ;;		_sprintf
  3928 ;; This function is called by:
  3929 ;;		Startup code after reset
  3930 ;; This function uses a non-reentrant model
  3931 ;;
  3932                           
  3933                           
  3934                           ;psect for function _main
  3935  06D9                     _main:	
  3936                           
  3937                           ;main.c: 446:     SYSTEM_Initialize();
  3938                           
  3939                           ;incstack = 0
  3940                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3941  06D9  318C  24DE  3186   	fcall	_SYSTEM_Initialize
  3942                           
  3943                           ;main.c: 447:     TIMER1_Initialize();
  3944  06DC  318C  24D3  3186   	fcall	_TIMER1_Initialize
  3945                           
  3946                           ;main.c: 450:     SetupGPS();
  3947  06DF  318F  27AE  3186   	fcall	_SetupGPS
  3948                           
  3949                           ;main.c: 452:     char message[40 + 3];;main.c: 454:     int id = 0;
  3950  06E2  0025               	movlb	5	; select bank5
  3951  06E3  01CB               	clrf	main@id^(0+640)
  3952  06E4  01CC               	clrf	(main@id+1)^(0+640)
  3953  06E5                     l3324:	
  3954                           
  3955                           ;main.c: 456:     {;main.c: 457:         GetNavData();
  3956  06E5  3181  218E  3186   	fcall	_GetNavData
  3957                           
  3958                           ;main.c: 458:         sprintf(message, "$$HABnova,%d,%s,%s,%s,%s,%s,%s,%s*",
  3959  06E8  3000               	movlw	low (STR_7| (0+32768))
  3960  06E9  0021               	movlb	1	; select bank1
  3961  06EA  00A3               	movwf	sprintf@fmt^(0+128)
  3962  06EB  3090               	movlw	high (STR_7| (0+32768))
  3963  06EC  00A4               	movwf	(sprintf@fmt^(0+128)+1)
  3964  06ED  0025               	movlb	5	; select bank5
  3965  06EE  084C               	movf	(main@id+1)^(0+640),w
  3966  06EF  0021               	movlb	1	; select bank1
  3967  06F0  00A6               	movwf	((?_sprintf+1)^(0+128)+2)
  3968  06F1  0025               	movlb	5	; select bank5
  3969  06F2  084B               	movf	main@id^(0+640),w
  3970  06F3  0021               	movlb	1	; select bank1
  3971  06F4  00A5               	movwf	(?_sprintf^(0+128)+2)
  3972  06F5  3028               	movlw	low _gps_time
  3973  06F6  00A7               	movwf	(low ((?_sprintf| 0+4)))^(0+128)
  3974  06F7  3001               	movlw	high _gps_time
  3975  06F8  00A8               	movwf	((low ((?_sprintf| 0+4))+1))^(0+128)
  3976  06F9  30E0               	movlw	low _gps_latitude
  3977  06FA  00A9               	movwf	(low ((?_sprintf| 0+6)))^(0+128)
  3978  06FB  3001               	movlw	high _gps_latitude
  3979  06FC  00AA               	movwf	((low ((?_sprintf| 0+6))+1))^(0+128)
  3980  06FD  30D0               	movlw	low _gps_longitude
  3981  06FE  00AB               	movwf	(low ((?_sprintf| 0+8)))^(0+128)
  3982  06FF  3001               	movlw	high _gps_longitude
  3983  0700  00AC               	movwf	((low ((?_sprintf| 0+8))+1))^(0+128)
  3984  0701  30C0               	movlw	low _gps_altitude
  3985  0702  00AD               	movwf	(low ((?_sprintf| 0+10)))^(0+128)
  3986  0703  3001               	movlw	high _gps_altitude
  3987  0704  00AE               	movwf	((low ((?_sprintf| 0+10))+1))^(0+128)
  3988  0705  3050               	movlw	low _gps_speed_over_ground
  3989  0706  00AF               	movwf	(low ((?_sprintf| 0+12)))^(0+128)
  3990  0707  3001               	movlw	high _gps_speed_over_ground
  3991  0708  00B0               	movwf	((low ((?_sprintf| 0+12))+1))^(0+128)
  3992  0709  3044               	movlw	low _gps_course_over_ground
  3993  070A  00B1               	movwf	(low ((?_sprintf| 0+14)))^(0+128)
  3994  070B  3001               	movlw	high _gps_course_over_ground
  3995  070C  00B2               	movwf	((low ((?_sprintf| 0+14))+1))^(0+128)
  3996  070D  3038               	movlw	low _gps_vertical_velocity
  3997  070E  00B3               	movwf	(low ((?_sprintf| 0+16)))^(0+128)
  3998  070F  3001               	movlw	high _gps_vertical_velocity
  3999  0710  00B4               	movwf	((low ((?_sprintf| 0+16))+1))^(0+128)
  4000  0711  30A0               	movlw	(low (main@message| (0+512)))& (0+255)
  4001  0712  318E  2619  3186   	fcall	_sprintf
  4002                           
  4003                           ;main.c: 463:         id++;
  4004  0715  3001               	movlw	1
  4005  0716  0025               	movlb	5	; select bank5
  4006  0717  07CB               	addwf	main@id^(0+640),f
  4007  0718  3000               	movlw	0
  4008  0719  3DCC               	addwfc	(main@id+1)^(0+640),f
  4009                           
  4010                           ;main.c: 464:         AppendCRC(message, crc16(message, 0x1021));
  4011  071A  3021               	movlw	33
  4012  071B  00F6               	movwf	crc16@polynomial
  4013  071C  3010               	movlw	16
  4014  071D  00F7               	movwf	crc16@polynomial+1
  4015  071E  30A0               	movlw	(low (main@message| (0+512)))& (0+255)
  4016  071F  3187  274D  3186   	fcall	_crc16
  4017  0722  0877               	movf	?_crc16+1,w
  4018  0723  0020               	movlb	0	; select bank0
  4019  0724  00AE               	movwf	AppendCRC@crc+1
  4020  0725  0876               	movf	?_crc16,w
  4021  0726  00AD               	movwf	AppendCRC@crc
  4022  0727  30A0               	movlw	(low (main@message| (0+512)))& (0+255)
  4023  0728  318F  2713  3186   	fcall	_AppendCRC
  4024                           
  4025                           ;main.c: 465:         TransmitString(message);
  4026  072B  30A0               	movlw	(low (main@message| (0+512)))& (0+255)
  4027  072C  318E  269D  3186   	fcall	_TransmitString
  4028                           
  4029                           ;main.c: 466:         for (int i = 0; i < DELAY_MULT; i++)
  4030  072F  0025               	movlb	5	; select bank5
  4031  0730  01CD               	clrf	main@i^(0+640)
  4032  0731  01CE               	clrf	(main@i+1)^(0+640)
  4033  0732                     l3340:	
  4034                           
  4035                           ;main.c: 467:         {;main.c: 468:             _delay((unsigned long)((MESSAGE_INTERVA
      +                          L)*(4000000/4000.0)));
  4036  0732  3007               	movlw	7
  4037  0733  0021               	movlb	1	; select bank1
  4038  0734  00BE               	movwf	??_main^(0+128)
  4039  0735  307D               	movlw	125
  4040  0736                     u2987:	
  4041  0736  0B89               	decfsz	9,f
  4042  0737  2F36               	goto	u2987
  4043  0738  0BBE               	decfsz	??_main^(0+128),f
  4044  0739  2F36               	goto	u2987
  4045                           
  4046                           ;main.c: 469:         }
  4047  073A  3001               	movlw	1
  4048  073B  0025               	movlb	5	; select bank5
  4049  073C  07CD               	addwf	main@i^(0+640),f
  4050  073D  3000               	movlw	0
  4051  073E  3DCE               	addwfc	(main@i+1)^(0+640),f
  4052  073F  084E               	movf	(main@i+1)^(0+640),w
  4053  0740  3A80               	xorlw	128
  4054  0741  0021               	movlb	1	; select bank1
  4055  0742  00BE               	movwf	??_main^(0+128)
  4056  0743  3083               	movlw	131
  4057  0744  023E               	subwf	??_main^(0+128),w
  4058  0745  1D03               	skipz
  4059  0746  2F4A               	goto	u2975
  4060  0747  30E8               	movlw	232
  4061  0748  0025               	movlb	5	; select bank5
  4062  0749  024D               	subwf	main@i^(0+640),w
  4063  074A                     u2975:	
  4064  074A  1803               	btfsc	3,0
  4065  074B  2EE5               	goto	l3324
  4066  074C  2F32               	goto	l3340
  4067  074D                     __end_of_main:	
  4068                           
  4069                           	psect	text1
  4070  0E19                     __ptext1:	
  4071 ;; *************** function _sprintf *****************
  4072 ;; Defined at:
  4073 ;;		line 9 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\nf_sprintf.c"
  4074 ;; Parameters:    Size  Location     Type
  4075 ;;  s               1    wreg     PTR unsigned char 
  4076 ;;		 -> main@message(43), 
  4077 ;;  fmt             2    3[BANK1 ] PTR const unsigned char 
  4078 ;;		 -> STR_7(35), 
  4079 ;; Auto vars:     Size  Location     Type
  4080 ;;  s               1   23[BANK1 ] PTR unsigned char 
  4081 ;;		 -> main@message(43), 
  4082 ;;  f               5   25[BANK1 ] struct _IO_FILE
  4083 ;;  ret             2    0        int 
  4084 ;;  ap              1   24[BANK1 ] PTR void [1]
  4085 ;;		 -> ?_printf(2), ?_sprintf(2), 
  4086 ;; Return value:  Size  Location     Type
  4087 ;;                  2    3[BANK1 ] int 
  4088 ;; Registers used:
  4089 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4090 ;; Tracked objects:
  4091 ;;		On entry : 0/0
  4092 ;;		On exit  : 0/0
  4093 ;;		Unchanged: 0/0
  4094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4095 ;;      Params:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0
  4096 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
  4097 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4098 ;;      Totals:         0       1      27       0       0       0       0       0       0       0       0       0       
      +0       0
  4099 ;;Total ram usage:       28 bytes
  4100 ;; Hardware stack levels used:    1
  4101 ;; Hardware stack levels required when called:   12
  4102 ;; This function calls:
  4103 ;;		_vfprintf
  4104 ;; This function is called by:
  4105 ;;		_main
  4106 ;; This function uses a non-reentrant model
  4107 ;;
  4108                           
  4109                           
  4110                           ;psect for function _sprintf
  4111  0E19                     _sprintf:	
  4112                           
  4113                           ;incstack = 0
  4114                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4115                           ;sprintf@s stored from wreg
  4116  0E19  0021               	movlb	1	; select bank1
  4117  0E1A  00B7               	movwf	sprintf@s^(0+128)
  4118  0E1B  30A5               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  4119  0E1C  0020               	movlb	0	; select bank0
  4120  0E1D  00EF               	movwf	??_sprintf
  4121  0E1E  086F               	movf	??_sprintf,w
  4122  0E1F  0021               	movlb	1	; select bank1
  4123  0E20  00B8               	movwf	sprintf@ap^(0+128)
  4124  0E21  0837               	movf	sprintf@s^(0+128),w
  4125  0E22  0020               	movlb	0	; select bank0
  4126  0E23  00EF               	movwf	??_sprintf
  4127  0E24  086F               	movf	??_sprintf,w
  4128  0E25  0021               	movlb	1	; select bank1
  4129  0E26  00B9               	movwf	sprintf@f^(0+128)
  4130  0E27  01BA               	clrf	(sprintf@f^(0+128)+1)
  4131  0E28  01BB               	clrf	((sprintf@f+1)^(0+128)+1)
  4132  0E29  01BC               	clrf	(sprintf@f^(0+128)+3)
  4133  0E2A  01BD               	clrf	((sprintf@f+1)^(0+128)+3)
  4134  0E2B  0824               	movf	(sprintf@fmt+1)^(0+128),w
  4135  0E2C  0020               	movlb	0	; select bank0
  4136  0E2D  00EB               	movwf	vfprintf@fmt+1
  4137  0E2E  0021               	movlb	1	; select bank1
  4138  0E2F  0823               	movf	sprintf@fmt^(0+128),w
  4139  0E30  0020               	movlb	0	; select bank0
  4140  0E31  00EA               	movwf	vfprintf@fmt
  4141  0E32  30B8               	movlw	(low (sprintf@ap| 0))& (0+255)
  4142  0E33  00EF               	movwf	??_sprintf
  4143  0E34  086F               	movf	??_sprintf,w
  4144  0E35  00EC               	movwf	vfprintf@ap
  4145  0E36  30B9               	movlw	(low (sprintf@f| 0))& (0+255)
  4146  0E37  3187  27BD         	fcall	_vfprintf
  4147  0E39  0021               	movlb	1	; select bank1
  4148  0E3A  083A               	movf	(sprintf@f^(0+128)+1),w
  4149  0E3B  0737               	addwf	sprintf@s^(0+128),w
  4150  0E3C  0020               	movlb	0	; select bank0
  4151  0E3D  00EF               	movwf	??_sprintf
  4152  0E3E  086F               	movf	??_sprintf,w
  4153  0E3F  0086               	movwf	6
  4154  0E40  3002               	movlw	2	; select bank4/5
  4155  0E41  0087               	movwf	7
  4156  0E42  0181               	clrf	1
  4157  0E43  0008               	return
  4158  0E44                     __end_of_sprintf:	
  4159                           
  4160                           	psect	text2
  4161  074D                     __ptext2:	
  4162 ;; *************** function _crc16 *****************
  4163 ;; Defined at:
  4164 ;;		line 55 in file "main.c"
  4165 ;; Parameters:    Size  Location     Type
  4166 ;;  message         1    wreg     PTR const unsigned char 
  4167 ;;		 -> main@message(43), 
  4168 ;;  polynomial      2    6[COMMON] unsigned short 
  4169 ;; Auto vars:     Size  Location     Type
  4170 ;;  message         1   10[BANK0 ] PTR const unsigned char 
  4171 ;;		 -> main@message(43), 
  4172 ;;  i               2    8[BANK0 ] int 
  4173 ;;  byte            1    5[BANK0 ] unsigned char 
  4174 ;;  i               2    6[BANK0 ] unsigned int 
  4175 ;;  counti          2    3[BANK0 ] unsigned int 
  4176 ;;  crc             2   11[BANK0 ] unsigned int 
  4177 ;; Return value:  Size  Location     Type
  4178 ;;                  2    6[COMMON] unsigned short 
  4179 ;; Registers used:
  4180 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4181 ;; Tracked objects:
  4182 ;;		On entry : 0/0
  4183 ;;		On exit  : 0/0
  4184 ;;		Unchanged: 0/0
  4185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4186 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4187 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4188 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4189 ;;      Totals:         2      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4190 ;;Total ram usage:       15 bytes
  4191 ;; Hardware stack levels used:    1
  4192 ;; Hardware stack levels required when called:    5
  4193 ;; This function calls:
  4194 ;;		_strlen
  4195 ;; This function is called by:
  4196 ;;		_main
  4197 ;; This function uses a non-reentrant model
  4198 ;;
  4199                           
  4200                           
  4201                           ;psect for function _crc16
  4202  074D                     _crc16:	
  4203                           
  4204                           ;incstack = 0
  4205                           ; Regs used in _crc16: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4206                           ;crc16@message stored from wreg
  4207  074D  0020               	movlb	0	; select bank0
  4208  074E  00AA               	movwf	crc16@message
  4209                           
  4210                           ;main.c: 56:  unsigned int crc;;main.c: 58:  crc = 0xFFFF;
  4211  074F  30FF               	movlw	255
  4212  0750  00AB               	movwf	crc16@crc
  4213  0751  30FF               	movlw	255
  4214  0752  00AC               	movwf	crc16@crc+1
  4215                           
  4216                           ;main.c: 59:  if (strlen(message) == 0)
  4217  0753  082A               	movf	crc16@message,w
  4218  0754  00F2               	movwf	strlen@s
  4219  0755  3002               	movlw	2
  4220  0756  00F3               	movwf	strlen@s+1
  4221  0757  318D  2520  3187   	fcall	_strlen
  4222  075A  0872               	movf	?_strlen,w
  4223  075B  0473               	iorwf	?_strlen+1,w
  4224  075C  1D03               	btfss	3,2
  4225  075D  2F61               	goto	l3130
  4226                           
  4227                           ;main.c: 60:  {;main.c: 61:   return (~crc);
  4228  075E  01F6               	clrf	?_crc16
  4229  075F  01F7               	clrf	?_crc16+1
  4230  0760  0008               	return
  4231  0761                     l3130:	
  4232                           
  4233                           ;main.c: 63:  const unsigned short FRONT_BIT = 0x8000;;main.c: 64:  for (unsigned int i 
      +                          = 0, counti = strlen(message); i < counti; i++) {
  4234  0761  0020               	movlb	0	; select bank0
  4235  0762  01A6               	clrf	crc16@i
  4236  0763  01A7               	clrf	crc16@i+1
  4237  0764  082A               	movf	crc16@message,w
  4238  0765  00F2               	movwf	strlen@s
  4239  0766  3002               	movlw	2
  4240  0767  00F3               	movwf	strlen@s+1
  4241  0768  318D  2520  3187   	fcall	_strlen
  4242  076B  0873               	movf	?_strlen+1,w
  4243  076C  0020               	movlb	0	; select bank0
  4244  076D  00A4               	movwf	crc16@counti+1
  4245  076E  0872               	movf	?_strlen,w
  4246  076F  00A3               	movwf	crc16@counti
  4247  0770                     l253:	
  4248  0770  0824               	movf	crc16@counti+1,w
  4249  0771  0227               	subwf	crc16@i+1,w
  4250  0772  1D03               	skipz
  4251  0773  2F76               	goto	u2835
  4252  0774  0823               	movf	crc16@counti,w
  4253  0775  0226               	subwf	crc16@i,w
  4254  0776                     u2835:	
  4255  0776  1803               	btfsc	3,0
  4256  0777  2FB8               	goto	l3150
  4257                           
  4258                           ;main.c: 65:   char byte = message[i];
  4259  0778  0826               	movf	crc16@i,w
  4260  0779  072A               	addwf	crc16@message,w
  4261  077A  00A0               	movwf	??_crc16
  4262  077B  0820               	movf	??_crc16,w
  4263  077C  0086               	movwf	6
  4264  077D  3002               	movlw	2	; select bank4/5
  4265  077E  0087               	movwf	7
  4266  077F  0801               	movf	1,w
  4267  0780  00A1               	movwf	??_crc16+1
  4268  0781  0821               	movf	??_crc16+1,w
  4269  0782  00A5               	movwf	crc16@byte
  4270                           
  4271                           ;main.c: 67:   crc = crc ^ ((unsigned short)(byte << 8));
  4272  0783  0825               	movf	crc16@byte,w
  4273  0784  00A0               	movwf	??_crc16
  4274  0785  01A1               	clrf	??_crc16+1
  4275  0786  0820               	movf	??_crc16,w
  4276  0787  00A1               	movwf	??_crc16+1
  4277  0788  01A0               	clrf	??_crc16
  4278  0789  082B               	movf	crc16@crc,w
  4279  078A  0620               	xorwf	??_crc16,w
  4280  078B  00AB               	movwf	crc16@crc
  4281  078C  082C               	movf	crc16@crc+1,w
  4282  078D  0621               	xorwf	??_crc16+1,w
  4283  078E  00AC               	movwf	crc16@crc+1
  4284                           
  4285                           ;main.c: 69:   for (int i = 0; i < 8; i++) {
  4286  078F  01A8               	clrf	crc16@i_535
  4287  0790  01A9               	clrf	crc16@i_535+1
  4288  0791                     l255:	
  4289                           
  4290                           ;main.c: 70:    if ((crc & FRONT_BIT) != 0) {
  4291  0791  0020               	movlb	0	; select bank0
  4292  0792  1FAC               	btfss	crc16@crc+1,7
  4293  0793  2FA0               	goto	l3146
  4294                           
  4295                           ;main.c: 71:     crc = ((unsigned short)(crc << 1)) ^ polynomial;
  4296  0794  082C               	movf	crc16@crc+1,w
  4297  0795  00A1               	movwf	??_crc16+1
  4298  0796  082B               	movf	crc16@crc,w
  4299  0797  00A0               	movwf	??_crc16
  4300  0798  35A0               	lslf	??_crc16,f
  4301  0799  0DA1               	rlf	??_crc16+1,f
  4302  079A  0876               	movf	crc16@polynomial,w
  4303  079B  0620               	xorwf	??_crc16,w
  4304  079C  00AB               	movwf	crc16@crc
  4305  079D  0877               	movf	crc16@polynomial+1,w
  4306  079E  0621               	xorwf	??_crc16+1,w
  4307  079F  2FA3               	goto	L1
  4308  07A0                     l3146:	
  4309                           ;main.c: 72:    }
  4310                           
  4311                           
  4312                           ;main.c: 75:     crc = crc << 1;
  4313  07A0  352B               	lslf	crc16@crc,w
  4314  07A1  00AB               	movwf	crc16@crc
  4315  07A2  0D2C               	rlf	crc16@crc+1,w
  4316  07A3                     L1:	
  4317  07A3  00AC               	movwf	crc16@crc+1
  4318                           
  4319                           ;main.c: 77:   }
  4320                           
  4321                           ;main.c: 76:    }
  4322  07A4  3001               	movlw	1
  4323  07A5  07A8               	addwf	crc16@i_535,f
  4324  07A6  3000               	movlw	0
  4325  07A7  3DA9               	addwfc	crc16@i_535+1,f
  4326  07A8  0829               	movf	crc16@i_535+1,w
  4327  07A9  3A80               	xorlw	128
  4328  07AA  00A0               	movwf	??_crc16
  4329  07AB  3080               	movlw	128
  4330  07AC  0220               	subwf	??_crc16,w
  4331  07AD  3008               	movlw	8
  4332  07AE  1903               	btfsc	3,2
  4333  07AF  0228               	subwf	crc16@i_535,w
  4334  07B0  1C03               	skipc
  4335  07B1  2F91               	goto	l255
  4336                           
  4337                           ;main.c: 78:  }
  4338  07B2  3001               	movlw	1
  4339  07B3  0020               	movlb	0	; select bank0
  4340  07B4  07A6               	addwf	crc16@i,f
  4341  07B5  3000               	movlw	0
  4342  07B6  3DA7               	addwfc	crc16@i+1,f
  4343  07B7  2F70               	goto	l253
  4344  07B8                     l3150:	
  4345                           
  4346                           ;main.c: 80:  return crc;
  4347  07B8  082C               	movf	crc16@crc+1,w
  4348  07B9  00F7               	movwf	?_crc16+1
  4349  07BA  082B               	movf	crc16@crc,w
  4350  07BB  00F6               	movwf	?_crc16
  4351  07BC  0008               	return
  4352  07BD                     __end_of_crc16:	
  4353                           
  4354                           	psect	text3
  4355  0E9D                     __ptext3:	
  4356 ;; *************** function _TransmitString *****************
  4357 ;; Defined at:
  4358 ;;		line 136 in file "main.c"
  4359 ;; Parameters:    Size  Location     Type
  4360 ;;  message         1    wreg     PTR unsigned char 
  4361 ;;		 -> main@message(43), 
  4362 ;; Auto vars:     Size  Location     Type
  4363 ;;  message         1    2[BANK0 ] PTR unsigned char 
  4364 ;;		 -> main@message(43), 
  4365 ;;  i               2    3[BANK0 ] int 
  4366 ;;  counti          2    0[BANK0 ] int 
  4367 ;; Return value:  Size  Location     Type
  4368 ;;                  1    wreg      void 
  4369 ;; Registers used:
  4370 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4371 ;; Tracked objects:
  4372 ;;		On entry : 0/0
  4373 ;;		On exit  : 0/0
  4374 ;;		Unchanged: 0/0
  4375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4377 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4378 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4379 ;;      Totals:         1       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4380 ;;Total ram usage:        6 bytes
  4381 ;; Hardware stack levels used:    1
  4382 ;; Hardware stack levels required when called:    6
  4383 ;; This function calls:
  4384 ;;		_TransmitByte
  4385 ;;		_strlen
  4386 ;; This function is called by:
  4387 ;;		_main
  4388 ;; This function uses a non-reentrant model
  4389 ;;
  4390                           
  4391                           
  4392                           ;psect for function _TransmitString
  4393  0E9D                     _TransmitString:	
  4394                           
  4395                           ;incstack = 0
  4396                           ; Regs used in _TransmitString: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4397                           ;TransmitString@message stored from wreg
  4398  0E9D  0020               	movlb	0	; select bank0
  4399  0E9E  00A2               	movwf	TransmitString@message
  4400                           
  4401                           ;main.c: 136: void TransmitString(char* message);main.c: 137: {;main.c: 141:  for (int i
      +                           = 0, counti = strlen(message); i < counti; i++)
  4402  0E9F  01A3               	clrf	TransmitString@i
  4403  0EA0  01A4               	clrf	TransmitString@i+1
  4404  0EA1  0822               	movf	TransmitString@message,w
  4405  0EA2  00F2               	movwf	strlen@s
  4406  0EA3  3002               	movlw	2
  4407  0EA4  00F3               	movwf	strlen@s+1
  4408  0EA5  318D  2520  318E   	fcall	_strlen
  4409  0EA8  0873               	movf	?_strlen+1,w
  4410  0EA9  0020               	movlb	0	; select bank0
  4411  0EAA  00A1               	movwf	TransmitString@counti+1
  4412  0EAB  0872               	movf	?_strlen,w
  4413  0EAC  00A0               	movwf	TransmitString@counti
  4414  0EAD                     l3162:	
  4415  0EAD  0824               	movf	TransmitString@i+1,w
  4416  0EAE  3A80               	xorlw	128
  4417  0EAF  00F8               	movwf	??_TransmitString
  4418  0EB0  0821               	movf	TransmitString@counti+1,w
  4419  0EB1  3A80               	xorlw	128
  4420  0EB2  0278               	subwf	??_TransmitString,w
  4421  0EB3  1D03               	skipz
  4422  0EB4  2EB7               	goto	u2845
  4423  0EB5  0820               	movf	TransmitString@counti,w
  4424  0EB6  0223               	subwf	TransmitString@i,w
  4425  0EB7                     u2845:	
  4426  0EB7  1803               	btfsc	3,0
  4427  0EB8  0008               	return
  4428                           
  4429                           ;main.c: 142:  {;main.c: 143:   TransmitByte(message[i]);
  4430  0EB9  0020               	movlb	0	; select bank0
  4431  0EBA  0823               	movf	TransmitString@i,w
  4432  0EBB  0722               	addwf	TransmitString@message,w
  4433  0EBC  00F8               	movwf	??_TransmitString
  4434  0EBD  0878               	movf	??_TransmitString,w
  4435  0EBE  0086               	movwf	6
  4436  0EBF  3002               	movlw	2	; select bank4/5
  4437  0EC0  0087               	movwf	7
  4438  0EC1  0801               	movf	1,w
  4439  0EC2  318E  2670  318E   	fcall	_TransmitByte
  4440                           
  4441                           ;main.c: 144:  }
  4442  0EC5  3001               	movlw	1
  4443  0EC6  0020               	movlb	0	; select bank0
  4444  0EC7  07A3               	addwf	TransmitString@i,f
  4445  0EC8  3000               	movlw	0
  4446  0EC9  3DA4               	addwfc	TransmitString@i+1,f
  4447  0ECA  2EAD               	goto	l3162
  4448  0ECB                     __end_of_TransmitString:	
  4449                           
  4450                           	psect	text4
  4451  0E70                     __ptext4:	
  4452 ;; *************** function _TransmitByte *****************
  4453 ;; Defined at:
  4454 ;;		line 105 in file "main.c"
  4455 ;; Parameters:    Size  Location     Type
  4456 ;;  byte            1    wreg     unsigned char 
  4457 ;; Auto vars:     Size  Location     Type
  4458 ;;  byte            1    5[COMMON] unsigned char 
  4459 ;;  i               2    6[COMMON] int 
  4460 ;; Return value:  Size  Location     Type
  4461 ;;                  1    wreg      void 
  4462 ;; Registers used:
  4463 ;;		wreg, status,2, status,0, pclath, cstack
  4464 ;; Tracked objects:
  4465 ;;		On entry : 0/0
  4466 ;;		On exit  : 0/0
  4467 ;;		Unchanged: 0/0
  4468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4470 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4471 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4472 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4473 ;;Total ram usage:        4 bytes
  4474 ;; Hardware stack levels used:    1
  4475 ;; Hardware stack levels required when called:    5
  4476 ;; This function calls:
  4477 ;;		_TransmitBit
  4478 ;; This function is called by:
  4479 ;;		_TransmitString
  4480 ;; This function uses a non-reentrant model
  4481 ;;
  4482                           
  4483                           
  4484                           ;psect for function _TransmitByte
  4485  0E70                     _TransmitByte:	
  4486                           
  4487                           ;incstack = 0
  4488                           ; Regs used in _TransmitByte: [wreg+status,2+status,0+pclath+cstack]
  4489                           ;TransmitByte@byte stored from wreg
  4490  0E70  00F5               	movwf	TransmitByte@byte
  4491                           
  4492                           ;main.c: 105: void TransmitByte(char byte);main.c: 106: {;main.c: 116:     TransmitBit(0
      +                          );
  4493  0E71  3000               	movlw	0
  4494  0E72  318D  254E  318E   	fcall	_TransmitBit
  4495                           
  4496                           ;main.c: 121:  for (int i = 0; i < 7; i++)
  4497  0E75  01F6               	clrf	TransmitByte@i
  4498  0E76  01F7               	clrf	TransmitByte@i+1
  4499  0E77                     l3032:	
  4500                           
  4501                           ;main.c: 122:  {;main.c: 123:   TransmitBit((byte >> i) & 1);
  4502  0E77  0875               	movf	TransmitByte@byte,w
  4503  0E78  00F4               	movwf	??_TransmitByte
  4504  0E79  0A76               	incf	TransmitByte@i,w
  4505  0E7A  2E7C               	goto	u2704
  4506  0E7B                     u2705:	
  4507  0E7B  36F4               	lsrf	??_TransmitByte,f
  4508  0E7C                     u2704:	
  4509  0E7C  0B89               	decfsz	9,f
  4510  0E7D  2E7B               	goto	u2705
  4511  0E7E  1C74               	btfss	??_TransmitByte,0
  4512  0E7F  2E82               	goto	u2710
  4513  0E80  3001               	movlw	1
  4514  0E81  2E83               	goto	u2720
  4515  0E82                     u2710:	
  4516  0E82  3000               	movlw	0
  4517  0E83                     u2720:	
  4518  0E83  318D  254E  318E   	fcall	_TransmitBit
  4519                           
  4520                           ;main.c: 124:  }
  4521  0E86  3001               	movlw	1
  4522  0E87  07F6               	addwf	TransmitByte@i,f
  4523  0E88  3000               	movlw	0
  4524  0E89  3DF7               	addwfc	TransmitByte@i+1,f
  4525  0E8A  0877               	movf	TransmitByte@i+1,w
  4526  0E8B  3A80               	xorlw	128
  4527  0E8C  00F4               	movwf	??_TransmitByte
  4528  0E8D  3080               	movlw	128
  4529  0E8E  0274               	subwf	??_TransmitByte,w
  4530  0E8F  1D03               	skipz
  4531  0E90  2E93               	goto	u2735
  4532  0E91  3007               	movlw	7
  4533  0E92  0276               	subwf	TransmitByte@i,w
  4534  0E93                     u2735:	
  4535  0E93  1C03               	skipc
  4536  0E94  2E77               	goto	l3032
  4537                           
  4538                           ;main.c: 129:  TransmitBit(1);
  4539  0E95  3001               	movlw	1
  4540  0E96  318D  254E  318E   	fcall	_TransmitBit
  4541                           
  4542                           ;main.c: 130:  TransmitBit(1);
  4543  0E99  3001               	movlw	1
  4544  0E9A  318D  254E         	fcall	_TransmitBit
  4545  0E9C  0008               	return
  4546  0E9D                     __end_of_TransmitByte:	
  4547                           
  4548                           	psect	text5
  4549  0D4E                     __ptext5:	
  4550 ;; *************** function _TransmitBit *****************
  4551 ;; Defined at:
  4552 ;;		line 83 in file "main.c"
  4553 ;; Parameters:    Size  Location     Type
  4554 ;;  b               1    wreg     _Bool 
  4555 ;; Auto vars:     Size  Location     Type
  4556 ;;  b               1    3[COMMON] _Bool 
  4557 ;; Return value:  Size  Location     Type
  4558 ;;                  1    wreg      void 
  4559 ;; Registers used:
  4560 ;;		wreg, status,2, status,0
  4561 ;; Tracked objects:
  4562 ;;		On entry : 0/0
  4563 ;;		On exit  : 0/0
  4564 ;;		Unchanged: 0/0
  4565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4567 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4568 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4569 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4570 ;;Total ram usage:        2 bytes
  4571 ;; Hardware stack levels used:    1
  4572 ;; Hardware stack levels required when called:    4
  4573 ;; This function calls:
  4574 ;;		Nothing
  4575 ;; This function is called by:
  4576 ;;		_TransmitByte
  4577 ;; This function uses a non-reentrant model
  4578 ;;
  4579                           
  4580                           
  4581                           ;psect for function _TransmitBit
  4582  0D4E                     _TransmitBit:	
  4583                           
  4584                           ;incstack = 0
  4585                           ; Regs used in _TransmitBit: [wreg+status,2+status,0]
  4586                           ;TransmitBit@b stored from wreg
  4587  0D4E  00F3               	movwf	TransmitBit@b
  4588                           
  4589                           ;main.c: 83: void TransmitBit(_Bool b);main.c: 84: {;main.c: 85:  if (b)
  4590  0D4F  0873               	movf	TransmitBit@b,w
  4591  0D50  1903               	btfsc	3,2
  4592  0D51  2D55               	goto	l266
  4593                           
  4594                           ;main.c: 86:  {;main.c: 90:   do { LATAbits.LATA4 = 1; } while(0);
  4595  0D52  0022               	movlb	2	; select bank2
  4596  0D53  160C               	bsf	12,4	;volatile
  4597  0D54  2D57               	goto	l2952
  4598  0D55                     l266:	
  4599                           ;main.c: 94:  {;main.c: 98:   do { LATAbits.LATA4 = 0; } while(0);
  4600                           
  4601  0D55  0022               	movlb	2	; select bank2
  4602  0D56  120C               	bcf	12,4	;volatile
  4603  0D57                     l2952:	
  4604                           
  4605                           ;main.c: 101:  _delay((unsigned long)((((1000 / BAUD_RATE) / 2) * 1000)*(4000000/4000000
      +                          .0)));
  4606  0D57  300D               	movlw	13
  4607  0D58  00F2               	movwf	??_TransmitBit
  4608  0D59  30FC               	movlw	252
  4609  0D5A                     u2997:	
  4610  0D5A  0B89               	decfsz	9,f
  4611  0D5B  2D5A               	goto	u2997
  4612  0D5C  0BF2               	decfsz	??_TransmitBit,f
  4613  0D5D  2D5A               	goto	u2997
  4614                           
  4615                           ;main.c: 102:  _delay((unsigned long)((((1000 / BAUD_RATE) / 2) * 1000)*(4000000/4000000
      +                          .0)));
  4616  0D5E  300D               	movlw	13
  4617  0D5F  00F2               	movwf	??_TransmitBit
  4618  0D60  30FC               	movlw	252
  4619  0D61                     u3007:	
  4620  0D61  0B89               	decfsz	9,f
  4621  0D62  2D61               	goto	u3007
  4622  0D63  0BF2               	decfsz	??_TransmitBit,f
  4623  0D64  2D61               	goto	u3007
  4624  0D65  0008               	return
  4625  0D66                     __end_of_TransmitBit:	
  4626                           
  4627                           	psect	text6
  4628  0CD3                     __ptext6:	
  4629 ;; *************** function _TIMER1_Initialize *****************
  4630 ;; Defined at:
  4631 ;;		line 21 in file "main.c"
  4632 ;; Parameters:    Size  Location     Type
  4633 ;;		None
  4634 ;; Auto vars:     Size  Location     Type
  4635 ;;		None
  4636 ;; Return value:  Size  Location     Type
  4637 ;;                  1    wreg      void 
  4638 ;; Registers used:
  4639 ;;		status,2, status,0, pclath, cstack
  4640 ;; Tracked objects:
  4641 ;;		On entry : 0/0
  4642 ;;		On exit  : 0/0
  4643 ;;		Unchanged: 0/0
  4644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4648 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4649 ;;Total ram usage:        0 bytes
  4650 ;; Hardware stack levels used:    1
  4651 ;; Hardware stack levels required when called:    5
  4652 ;; This function calls:
  4653 ;;		_TMR1_StartTimer
  4654 ;; This function is called by:
  4655 ;;		_main
  4656 ;; This function uses a non-reentrant model
  4657 ;;
  4658                           
  4659                           
  4660                           ;psect for function _TIMER1_Initialize
  4661  0CD3                     _TIMER1_Initialize:	
  4662                           
  4663                           ;main.c: 24:     TMR1IF = 0;
  4664                           
  4665                           ;incstack = 0
  4666                           ; Regs used in _TIMER1_Initialize: [status,2+status,0+pclath+cstack]
  4667  0CD3  0020               	movlb	0	; select bank0
  4668  0CD4  1010               	bcf	16,0	;volatile
  4669                           
  4670                           ;main.c: 25:     TMR1IE = 1;
  4671  0CD5  0021               	movlb	1	; select bank1
  4672  0CD6  1410               	bsf	16,0	;volatile
  4673                           
  4674                           ;main.c: 27:     PEIE = 1;
  4675  0CD7  170B               	bsf	11,6	;volatile
  4676                           
  4677                           ;main.c: 29:     GIE = 1;
  4678  0CD8  178B               	bsf	11,7	;volatile
  4679                           
  4680                           ;main.c: 30:     TMR1ON = 1;
  4681  0CD9  0020               	movlb	0	; select bank0
  4682  0CDA  1418               	bsf	24,0	;volatile
  4683                           
  4684                           ;main.c: 31:     TMR1_StartTimer();
  4685  0CDB  318C  247E         	fcall	_TMR1_StartTimer
  4686  0CDD  0008               	return
  4687  0CDE                     __end_of_TIMER1_Initialize:	
  4688                           
  4689                           	psect	text7
  4690  0C7E                     __ptext7:	
  4691 ;; *************** function _TMR1_StartTimer *****************
  4692 ;; Defined at:
  4693 ;;		line 93 in file "mcc_generated_files/tmr1.c"
  4694 ;; Parameters:    Size  Location     Type
  4695 ;;		None
  4696 ;; Auto vars:     Size  Location     Type
  4697 ;;		None
  4698 ;; Return value:  Size  Location     Type
  4699 ;;                  1    wreg      void 
  4700 ;; Registers used:
  4701 ;;		None
  4702 ;; Tracked objects:
  4703 ;;		On entry : 0/0
  4704 ;;		On exit  : 0/0
  4705 ;;		Unchanged: 0/0
  4706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4710 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4711 ;;Total ram usage:        0 bytes
  4712 ;; Hardware stack levels used:    1
  4713 ;; Hardware stack levels required when called:    4
  4714 ;; This function calls:
  4715 ;;		Nothing
  4716 ;; This function is called by:
  4717 ;;		_TIMER1_Initialize
  4718 ;; This function uses a non-reentrant model
  4719 ;;
  4720                           
  4721                           
  4722                           ;psect for function _TMR1_StartTimer
  4723  0C7E                     _TMR1_StartTimer:	
  4724                           
  4725                           ;mcc_generated_files/tmr1.c: 96:     T1CONbits.TMR1ON = 1;
  4726                           
  4727                           ;incstack = 0
  4728                           ; Regs used in _TMR1_StartTimer: []
  4729  0C7E  0020               	movlb	0	; select bank0
  4730  0C7F  1418               	bsf	24,0	;volatile
  4731  0C80  0008               	return
  4732  0C81                     __end_of_TMR1_StartTimer:	
  4733                           
  4734                           	psect	text8
  4735  0FAE                     __ptext8:	
  4736 ;; *************** function _SetupGPS *****************
  4737 ;; Defined at:
  4738 ;;		line 275 in file "main.c"
  4739 ;; Parameters:    Size  Location     Type
  4740 ;;		None
  4741 ;; Auto vars:     Size  Location     Type
  4742 ;;		None
  4743 ;; Return value:  Size  Location     Type
  4744 ;;                  1    wreg      void 
  4745 ;; Registers used:
  4746 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4747 ;; Tracked objects:
  4748 ;;		On entry : 0/0
  4749 ;;		On exit  : 0/0
  4750 ;;		Unchanged: 0/0
  4751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4754 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4755 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4756 ;;Total ram usage:        2 bytes
  4757 ;; Hardware stack levels used:    1
  4758 ;; Hardware stack levels required when called:   13
  4759 ;; This function calls:
  4760 ;;		_GPS_HasAcknowledged
  4761 ;;		_GPS_SendUBX
  4762 ;;		_printf
  4763 ;; This function is called by:
  4764 ;;		_main
  4765 ;; This function uses a non-reentrant model
  4766 ;;
  4767                           
  4768                           
  4769                           ;psect for function _SetupGPS
  4770  0FAE                     _SetupGPS:	
  4771  0FAE                     l3188:	
  4772                           ;main.c: 277:     while (!gps_configured)
  4773                           
  4774                           ;incstack = 0
  4775                           ; Regs used in _SetupGPS: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4776                           
  4777                           
  4778                           ;main.c: 277:     while (!gps_configured)
  4779  0FAE  0021               	movlb	1	; select bank1
  4780  0FAF  0841               	movf	_gps_configured^(0+128),w
  4781  0FB0  1D03               	btfss	3,2
  4782  0FB1  2FD0               	goto	l3190
  4783                           
  4784                           ;main.c: 278:     {;main.c: 279:         do { LATAbits.LATA5 = 0; } while(0);
  4785  0FB2  0022               	movlb	2	; select bank2
  4786  0FB3  128C               	bcf	12,5	;volatile
  4787                           
  4788                           ;main.c: 280:         GPS_SendUBX(setNavFlightMode);
  4789  0FB4  3020               	movlw	(low (_setNavFlightMode| (0+512)))& (0+255)
  4790  0FB5  318D  25EE  318F   	fcall	_GPS_SendUBX
  4791                           
  4792                           ;main.c: 281:         gps_configured = GPS_HasAcknowledged(setNavFlightMode);
  4793  0FB8  3020               	movlw	(low (_setNavFlightMode| (0+512)))& (0+255)
  4794  0FB9  3186  264E  318F   	fcall	_GPS_HasAcknowledged
  4795  0FBC  0021               	movlb	1	; select bank1
  4796  0FBD  00A8               	movwf	??_SetupGPS^(0+128)
  4797  0FBE  0828               	movf	??_SetupGPS^(0+128),w
  4798  0FBF  00C1               	movwf	_gps_configured^(0+128)
  4799  0FC0  0022               	movlb	2	; select bank2
  4800  0FC1  168C               	bsf	12,5	;volatile
  4801                           
  4802                           ;main.c: 284:         _delay((unsigned long)((500)*(4000000/4000.0)));
  4803  0FC2  3003               	movlw	3
  4804  0FC3  0021               	movlb	1	; select bank1
  4805  0FC4  00A9               	movwf	(??_SetupGPS^(0+128)+1)
  4806  0FC5  308A               	movlw	138
  4807  0FC6  00A8               	movwf	??_SetupGPS^(0+128)
  4808  0FC7  3055               	movlw	85
  4809  0FC8                     u3017:	
  4810  0FC8  0B89               	decfsz	9,f
  4811  0FC9  2FC8               	goto	u3017
  4812  0FCA  0BA8               	decfsz	??_SetupGPS^(0+128),f
  4813  0FCB  2FC8               	goto	u3017
  4814  0FCC  0BA9               	decfsz	(??_SetupGPS^(0+128)+1),f
  4815  0FCD  2FC8               	goto	u3017
  4816  0FCE  3200               	nop2
  4817  0FCF  2FAE               	goto	l3188
  4818  0FD0                     l3190:	
  4819                           
  4820                           ;main.c: 286:     gps_configured = 0;
  4821  0FD0  01C1               	clrf	_gps_configured^(0+128)
  4822                           
  4823                           ;main.c: 289:     printf("$PUBX,40,GLL,0,0,0,0*5C\r\n");
  4824  0FD1  3071               	movlw	low (STR_1| (0+32768))
  4825  0FD2  00A3               	movwf	printf@fmt^(0+128)
  4826  0FD3  3090               	movlw	high (STR_1| (0+32768))
  4827  0FD4  00A4               	movwf	(printf@fmt^(0+128)+1)
  4828  0FD5  318D  250B  318F   	fcall	_printf
  4829                           
  4830                           ;main.c: 290:     printf("$PUBX,40,GGA,0,0,0,0*44\r\n");
  4831  0FD8  3023               	movlw	low (STR_2| (0+32768))
  4832  0FD9  0021               	movlb	1	; select bank1
  4833  0FDA  00A3               	movwf	printf@fmt^(0+128)
  4834  0FDB  3090               	movlw	high (STR_2| (0+32768))
  4835  0FDC  00A4               	movwf	(printf@fmt^(0+128)+1)
  4836  0FDD  318D  250B  318F   	fcall	_printf
  4837                           
  4838                           ;main.c: 291:     printf("$PUBX,40,VTG,0,0,0,0*5E\r\n");
  4839  0FE0  30A5               	movlw	low (STR_3| (0+32768))
  4840  0FE1  0021               	movlb	1	; select bank1
  4841  0FE2  00A3               	movwf	printf@fmt^(0+128)
  4842  0FE3  3090               	movlw	high (STR_3| (0+32768))
  4843  0FE4  00A4               	movwf	(printf@fmt^(0+128)+1)
  4844  0FE5  318D  250B  318F   	fcall	_printf
  4845                           
  4846                           ;main.c: 292:     printf("$PUBX,40,GSV,0,0,0,0*59\r\n");
  4847  0FE8  3057               	movlw	low (STR_4| (0+32768))
  4848  0FE9  0021               	movlb	1	; select bank1
  4849  0FEA  00A3               	movwf	printf@fmt^(0+128)
  4850  0FEB  3090               	movlw	high (STR_4| (0+32768))
  4851  0FEC  00A4               	movwf	(printf@fmt^(0+128)+1)
  4852  0FED  318D  250B  318F   	fcall	_printf
  4853                           
  4854                           ;main.c: 293:     printf("$PUBX,40,GSA,0,0,0,0*4E\r\n");
  4855  0FF0  308B               	movlw	low (STR_5| (0+32768))
  4856  0FF1  0021               	movlb	1	; select bank1
  4857  0FF2  00A3               	movwf	printf@fmt^(0+128)
  4858  0FF3  3090               	movlw	high (STR_5| (0+32768))
  4859  0FF4  00A4               	movwf	(printf@fmt^(0+128)+1)
  4860  0FF5  318D  250B  318F   	fcall	_printf
  4861                           
  4862                           ;main.c: 294:     printf("$PUBX,40,RMC,0,0,0,0*47\r\n");
  4863  0FF8  303D               	movlw	low (STR_6| (0+32768))
  4864  0FF9  0021               	movlb	1	; select bank1
  4865  0FFA  00A3               	movwf	printf@fmt^(0+128)
  4866  0FFB  3090               	movlw	high (STR_6| (0+32768))
  4867  0FFC  00A4               	movwf	(printf@fmt^(0+128)+1)
  4868  0FFD  318D  250B         	fcall	_printf
  4869  0FFF  0008               	return
  4870  1000                     __end_of_SetupGPS:	
  4871                           
  4872                           	psect	text9
  4873  0D0B                     __ptext9:	
  4874 ;; *************** function _printf *****************
  4875 ;; Defined at:
  4876 ;;		line 5 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\printf.c"
  4877 ;; Parameters:    Size  Location     Type
  4878 ;;  fmt             2    3[BANK1 ] PTR const unsigned char 
  4879 ;;		 -> STR_6(26), STR_5(26), STR_4(26), STR_3(26), 
  4880 ;;		 -> STR_2(26), STR_1(26), 
  4881 ;; Auto vars:     Size  Location     Type
  4882 ;;  ret             2    0        int 
  4883 ;;  ap              1    7[BANK1 ] PTR void [1]
  4884 ;;		 -> ?_printf(2), ?_sprintf(2), 
  4885 ;; Return value:  Size  Location     Type
  4886 ;;                  2    3[BANK1 ] int 
  4887 ;; Registers used:
  4888 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4889 ;; Tracked objects:
  4890 ;;		On entry : 0/0
  4891 ;;		On exit  : 0/0
  4892 ;;		Unchanged: 0/0
  4893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4894 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  4895 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  4896 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4897 ;;      Totals:         0       1       5       0       0       0       0       0       0       0       0       0       
      +0       0
  4898 ;;Total ram usage:        6 bytes
  4899 ;; Hardware stack levels used:    1
  4900 ;; Hardware stack levels required when called:   12
  4901 ;; This function calls:
  4902 ;;		_vfprintf
  4903 ;; This function is called by:
  4904 ;;		_SetupGPS
  4905 ;; This function uses a non-reentrant model
  4906 ;;
  4907                           
  4908                           
  4909                           ;psect for function _printf
  4910  0D0B                     _printf:	
  4911                           
  4912                           ;incstack = 0
  4913                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4914  0D0B  30A5               	movlw	(low ((?_printf| 0+2)))& (0+255)
  4915  0D0C  0020               	movlb	0	; select bank0
  4916  0D0D  00EF               	movwf	??_printf
  4917  0D0E  086F               	movf	??_printf,w
  4918  0D0F  0021               	movlb	1	; select bank1
  4919  0D10  00A7               	movwf	printf@ap^(0+128)
  4920  0D11  0824               	movf	(printf@fmt+1)^(0+128),w
  4921  0D12  0020               	movlb	0	; select bank0
  4922  0D13  00EB               	movwf	vfprintf@fmt+1
  4923  0D14  0021               	movlb	1	; select bank1
  4924  0D15  0823               	movf	printf@fmt^(0+128),w
  4925  0D16  0020               	movlb	0	; select bank0
  4926  0D17  00EA               	movwf	vfprintf@fmt
  4927  0D18  30A7               	movlw	(low (printf@ap| 0))& (0+255)
  4928  0D19  00EF               	movwf	??_printf
  4929  0D1A  086F               	movf	??_printf,w
  4930  0D1B  00EC               	movwf	vfprintf@ap
  4931  0D1C  3000               	movlw	0
  4932  0D1D  3187  27BD         	fcall	_vfprintf
  4933  0D1F  0008               	return
  4934  0D20                     __end_of_printf:	
  4935                           
  4936                           	psect	text10
  4937  07BD                     __ptext10:	
  4938 ;; *************** function _vfprintf *****************
  4939 ;; Defined at:
  4940 ;;		line 1368 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c"
  4941 ;; Parameters:    Size  Location     Type
  4942 ;;  fp              1    wreg     PTR struct _IO_FILE
  4943 ;;		 -> sprintf@f(5), NULL(0), 
  4944 ;;  fmt             2   74[BANK0 ] PTR const unsigned char 
  4945 ;;		 -> STR_7(35), STR_6(26), STR_5(26), STR_4(26), 
  4946 ;;		 -> STR_3(26), STR_2(26), STR_1(26), 
  4947 ;;  ap              1   76[BANK0 ] PTR PTR void 
  4948 ;;		 -> printf@ap(1), sprintf@ap(1), 
  4949 ;; Auto vars:     Size  Location     Type
  4950 ;;  fp              1    0[BANK1 ] PTR struct _IO_FILE
  4951 ;;		 -> sprintf@f(5), NULL(0), 
  4952 ;;  cfmt            2    1[BANK1 ] PTR unsigned char 
  4953 ;;		 -> STR_7(35), STR_6(26), STR_5(26), STR_4(26), 
  4954 ;;		 -> STR_3(26), STR_2(26), STR_1(26), 
  4955 ;; Return value:  Size  Location     Type
  4956 ;;                  2   74[BANK0 ] int 
  4957 ;; Registers used:
  4958 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4959 ;; Tracked objects:
  4960 ;;		On entry : 0/0
  4961 ;;		On exit  : 0/0
  4962 ;;		Unchanged: 0/0
  4963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4964 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4965 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  4966 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4967 ;;      Totals:         0       5       3       0       0       0       0       0       0       0       0       0       
      +0       0
  4968 ;;Total ram usage:        8 bytes
  4969 ;; Hardware stack levels used:    1
  4970 ;; Hardware stack levels required when called:   11
  4971 ;; This function calls:
  4972 ;;		_vfpfcnvrt
  4973 ;; This function is called by:
  4974 ;;		_sprintf
  4975 ;;		_printf
  4976 ;; This function uses a non-reentrant model
  4977 ;;
  4978                           
  4979                           
  4980                           ;psect for function _vfprintf
  4981  07BD                     _vfprintf:	
  4982                           
  4983                           ;incstack = 0
  4984                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4985                           ;vfprintf@fp stored from wreg
  4986  07BD  0021               	movlb	1	; select bank1
  4987  07BE  00A0               	movwf	vfprintf@fp^(0+128)
  4988                           
  4989                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 1368: int vfprintf(FIL
      +                          E *fp, const char *fmt, va_list ap);K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\comm
      +                          on\doprnt.c: 1369: {;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 13
      +                          71:     char *cfmt;;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 137
      +                          3:     cfmt = (char *)fmt;
  4990  07BF  0020               	movlb	0	; select bank0
  4991  07C0  086B               	movf	vfprintf@fmt+1,w
  4992  07C1  0021               	movlb	1	; select bank1
  4993  07C2  00A2               	movwf	(vfprintf@cfmt+1)^(0+128)
  4994  07C3  0020               	movlb	0	; select bank0
  4995  07C4  086A               	movf	vfprintf@fmt,w
  4996  07C5  0021               	movlb	1	; select bank1
  4997  07C6  00A1               	movwf	vfprintf@cfmt^(0+128)
  4998                           
  4999                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 1374:     nout = 0;
  5000  07C7  0022               	movlb	2	; select bank2
  5001  07C8  01A4               	clrf	_nout^(0+256)
  5002  07C9  01A5               	clrf	(_nout+1)^(0+256)
  5003  07CA                     l2964:	
  5004                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 1375:     while (*cfmt
      +                          ) {
  5005                           
  5006                           
  5007                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 1375:     while (*cfmt
      +                          ) {
  5008  07CA  0021               	movlb	1	; select bank1
  5009  07CB  0821               	movf	vfprintf@cfmt^(0+128),w
  5010  07CC  0084               	movwf	4
  5011  07CD  0822               	movf	(vfprintf@cfmt+1)^(0+128),w
  5012  07CE  0085               	movwf	5
  5013  07CF  0012               	moviw fsr0++
  5014  07D0  1903               	btfsc	3,2
  5015  07D1  2FE9               	goto	l2966
  5016                           
  5017                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 1376:         nout += 
      +                          vfpfcnvrt(fp, &cfmt, ap);
  5018  07D2  30A1               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  5019  07D3  0020               	movlb	0	; select bank0
  5020  07D4  00ED               	movwf	??_vfprintf
  5021  07D5  086D               	movf	??_vfprintf,w
  5022  07D6  00D8               	movwf	vfpfcnvrt@fmt
  5023  07D7  086C               	movf	vfprintf@ap,w
  5024  07D8  00EE               	movwf	??_vfprintf+1
  5025  07D9  086E               	movf	??_vfprintf+1,w
  5026  07DA  00D9               	movwf	vfpfcnvrt@ap
  5027  07DB  0021               	movlb	1	; select bank1
  5028  07DC  0820               	movf	vfprintf@fp^(0+128),w
  5029  07DD  3182  22B8  3187   	fcall	_vfpfcnvrt
  5030  07E0  0020               	movlb	0	; select bank0
  5031  07E1  0858               	movf	?_vfpfcnvrt,w
  5032  07E2  0022               	movlb	2	; select bank2
  5033  07E3  07A4               	addwf	_nout^(0+256),f
  5034  07E4  0020               	movlb	0	; select bank0
  5035  07E5  0859               	movf	?_vfpfcnvrt+1,w
  5036  07E6  0022               	movlb	2	; select bank2
  5037  07E7  3DA5               	addwfc	(_nout+1)^(0+256),f
  5038  07E8  2FCA               	goto	l2964
  5039  07E9                     l2966:	
  5040                           
  5041                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 1378:     return nout;
  5042  07E9  0022               	movlb	2	; select bank2
  5043  07EA  0825               	movf	(_nout+1)^(0+256),w
  5044  07EB  0020               	movlb	0	; select bank0
  5045  07EC  00EB               	movwf	?_vfprintf+1
  5046  07ED  0022               	movlb	2	; select bank2
  5047  07EE  0824               	movf	_nout^(0+256),w
  5048  07EF  0020               	movlb	0	; select bank0
  5049  07F0  00EA               	movwf	?_vfprintf
  5050  07F1  0008               	return
  5051  07F2                     __end_of_vfprintf:	
  5052                           
  5053                           	psect	text11
  5054  02B8                     __ptext11:	
  5055 ;; *************** function _vfpfcnvrt *****************
  5056 ;; Defined at:
  5057 ;;		line 670 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c"
  5058 ;; Parameters:    Size  Location     Type
  5059 ;;  fp              1    wreg     PTR struct _IO_FILE
  5060 ;;		 -> sprintf@f(5), NULL(0), 
  5061 ;;  fmt             1   56[BANK0 ] PTR PTR unsigned char 
  5062 ;;		 -> vfprintf@cfmt(2), 
  5063 ;;  ap              1   57[BANK0 ] PTR PTR void 
  5064 ;;		 -> printf@ap(1), sprintf@ap(1), 
  5065 ;; Auto vars:     Size  Location     Type
  5066 ;;  fp              1   73[BANK0 ] PTR struct _IO_FILE
  5067 ;;		 -> sprintf@f(5), NULL(0), 
  5068 ;;  ll              8   63[BANK0 ] long long 
  5069 ;;  llu             8    0        unsigned long long 
  5070 ;;  f               4    0        unsigned long long 
  5071 ;;  ct              3    0        unsigned char [3]
  5072 ;;  cp              2   71[BANK0 ] PTR unsigned char 
  5073 ;;		 -> ?_printf(2), ?_sprintf(2), gps_vertical_velocity(12), gps_course_over_ground(12), 
  5074 ;;		 -> gps_speed_over_ground(12), gps_altitude(16), gps_longitude(16), gps_latitude(16), 
  5075 ;;		 -> gps_time(16), 
  5076 ;;  vp              2    0        PTR void 
  5077 ;;  i               2    0        int 
  5078 ;;  done            2    0        int 
  5079 ;;  c               1    0        unsigned char 
  5080 ;; Return value:  Size  Location     Type
  5081 ;;                  2   56[BANK0 ] int 
  5082 ;; Registers used:
  5083 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5084 ;; Tracked objects:
  5085 ;;		On entry : 0/0
  5086 ;;		On exit  : 0/0
  5087 ;;		Unchanged: 0/0
  5088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5089 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5090 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5091 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5092 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5093 ;;Total ram usage:       18 bytes
  5094 ;; Hardware stack levels used:    1
  5095 ;; Hardware stack levels required when called:   10
  5096 ;; This function calls:
  5097 ;;		_dtoa
  5098 ;;		_fputc
  5099 ;;		_stoa
  5100 ;; This function is called by:
  5101 ;;		_vfprintf
  5102 ;; This function uses a non-reentrant model
  5103 ;;
  5104                           
  5105                           
  5106                           ;psect for function _vfpfcnvrt
  5107  02B8                     _vfpfcnvrt:	
  5108                           
  5109                           ;incstack = 0
  5110                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5111                           ;vfpfcnvrt@fp stored from wreg
  5112  02B8  0020               	movlb	0	; select bank0
  5113  02B9  00E9               	movwf	vfpfcnvrt@fp
  5114                           
  5115                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 670: static int vfpfcn
      +                          vrt(FILE *fp, char *fmt[], va_list ap);K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\c
      +                          ommon\doprnt.c: 671: {;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 
      +                          672:     char c, *cp, ct[3];;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\dopr
      +                          nt.c: 673:     int done, i;;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprn
      +                          t.c: 674:     long long ll;;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprn
      +                          t.c: 675:     unsigned long long llu;
  5116  02BA  0858               	movf	vfpfcnvrt@fmt,w
  5117  02BB  0086               	movwf	6
  5118  02BC  0187               	clrf	7
  5119  02BD  3F40               	moviw [0]fsr1
  5120  02BE  00DA               	movwf	??_vfpfcnvrt
  5121  02BF  3F41               	moviw [1]fsr1
  5122  02C0  00DB               	movwf	??_vfpfcnvrt+1
  5123  02C1  085A               	movf	??_vfpfcnvrt,w
  5124  02C2  0084               	movwf	4
  5125  02C3  085B               	movf	??_vfpfcnvrt+1,w
  5126  02C4  0085               	movwf	5
  5127  02C5  0012               	moviw fsr0++
  5128  02C6  3A25               	xorlw	37
  5129  02C7  1D03               	btfss	3,2
  5130  02C8  2B96               	goto	l2924
  5131                           
  5132                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 681:         ++*fmt;
  5133  02C9  0858               	movf	vfpfcnvrt@fmt,w
  5134  02CA  0086               	movwf	6
  5135  02CB  0187               	clrf	7
  5136  02CC  3001               	movlw	1
  5137  02CD  0781               	addwf	1,f
  5138  02CE  3141               	addfsr 1,1
  5139  02CF  1803               	skipnc
  5140  02D0  0A81               	incf	1,f
  5141                           
  5142                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 683:         flags = w
      +                          idth = 0;
  5143  02D1  0022               	movlb	2	; select bank2
  5144  02D2  01A6               	clrf	_width^(0+256)
  5145  02D3  01A7               	clrf	(_width+1)^(0+256)
  5146  02D4  01FA               	clrf	_flags
  5147  02D5  01FB               	clrf	_flags+1
  5148                           
  5149                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 684:         prec = -1
      +                          ;
  5150  02D6  30FF               	movlw	255
  5151  02D7  0021               	movlb	1	; select bank1
  5152  02D8  00BF               	movwf	_prec^(0+128)
  5153  02D9  30FF               	movlw	255
  5154  02DA  00C0               	movwf	(_prec^(0+128)+1)
  5155                           
  5156                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 825:         if ((*fmt
      +                          [0] == 'd') || (*fmt[0] == 'i')) {
  5157  02DB  0020               	movlb	0	; select bank0
  5158  02DC  0858               	movf	vfpfcnvrt@fmt,w
  5159  02DD  0086               	movwf	6
  5160  02DE  0187               	clrf	7
  5161  02DF  3F40               	moviw [0]fsr1
  5162  02E0  00DA               	movwf	??_vfpfcnvrt
  5163  02E1  3F41               	moviw [1]fsr1
  5164  02E2  00DB               	movwf	??_vfpfcnvrt+1
  5165  02E3  085A               	movf	??_vfpfcnvrt,w
  5166  02E4  0084               	movwf	4
  5167  02E5  085B               	movf	??_vfpfcnvrt+1,w
  5168  02E6  0085               	movwf	5
  5169  02E7  0012               	moviw fsr0++
  5170  02E8  3A64               	xorlw	100
  5171  02E9  1903               	btfsc	3,2
  5172  02EA  2AFA               	goto	l2890
  5173  02EB  0858               	movf	vfpfcnvrt@fmt,w
  5174  02EC  0086               	movwf	6
  5175  02ED  0187               	clrf	7
  5176  02EE  3F40               	moviw [0]fsr1
  5177  02EF  00DA               	movwf	??_vfpfcnvrt
  5178  02F0  3F41               	moviw [1]fsr1
  5179  02F1  00DB               	movwf	??_vfpfcnvrt+1
  5180  02F2  085A               	movf	??_vfpfcnvrt,w
  5181  02F3  0084               	movwf	4
  5182  02F4  085B               	movf	??_vfpfcnvrt+1,w
  5183  02F5  0085               	movwf	5
  5184  02F6  0012               	moviw fsr0++
  5185  02F7  3A69               	xorlw	105
  5186  02F8  1D03               	btfss	3,2
  5187  02F9  2B34               	goto	l2898
  5188  02FA                     l2890:	
  5189                           
  5190                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 827:             ++*fm
      +                          t;
  5191  02FA  0858               	movf	vfpfcnvrt@fmt,w
  5192  02FB  0086               	movwf	6
  5193  02FC  0187               	clrf	7
  5194  02FD  3001               	movlw	1
  5195  02FE  0781               	addwf	1,f
  5196  02FF  3141               	addfsr 1,1
  5197  0300  1803               	skipnc
  5198  0301  0A81               	incf	1,f
  5199                           
  5200                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 828:             ll = 
      +                          (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  5201  0302  0859               	movf	vfpfcnvrt@ap,w
  5202  0303  0086               	movwf	6
  5203  0304  0187               	clrf	7
  5204  0305  0801               	movf	1,w
  5205  0306  0084               	movwf	4
  5206  0307  0185               	clrf	5
  5207  0308  3002               	movlw	2
  5208  0309  0781               	addwf	1,f
  5209  030A  3F00               	moviw [0]fsr0
  5210  030B  00DA               	movwf	??_vfpfcnvrt
  5211  030C  3F01               	moviw [1]fsr0
  5212  030D  00DB               	movwf	??_vfpfcnvrt+1
  5213  030E  085A               	movf	??_vfpfcnvrt,w
  5214  030F  00DF               	movwf	vfpfcnvrt@ll
  5215  0310  085B               	movf	??_vfpfcnvrt+1,w
  5216  0311  00E0               	movwf	vfpfcnvrt@ll+1
  5217  0312  0D89               	rlf	9,f
  5218  0313  3B89               	subwfb	9,f
  5219  0314  0989               	comf	9,f
  5220  0315  00E1               	movwf	vfpfcnvrt@ll+2
  5221  0316  00E2               	movwf	vfpfcnvrt@ll+3
  5222  0317  00E3               	movwf	vfpfcnvrt@ll+4
  5223  0318  00E4               	movwf	vfpfcnvrt@ll+5
  5224  0319  00E5               	movwf	vfpfcnvrt@ll+6
  5225  031A  00E6               	movwf	vfpfcnvrt@ll+7
  5226                           
  5227                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 830:             retur
      +                          n dtoa(fp, ll);
  5228  031B  085F               	movf	vfpfcnvrt@ll,w
  5229  031C  00BA               	movwf	dtoa@d
  5230  031D  0860               	movf	vfpfcnvrt@ll+1,w
  5231  031E  00BB               	movwf	dtoa@d+1
  5232  031F  0861               	movf	vfpfcnvrt@ll+2,w
  5233  0320  00BC               	movwf	dtoa@d+2
  5234  0321  0862               	movf	vfpfcnvrt@ll+3,w
  5235  0322  00BD               	movwf	dtoa@d+3
  5236  0323  0863               	movf	vfpfcnvrt@ll+4,w
  5237  0324  00BE               	movwf	dtoa@d+4
  5238  0325  0864               	movf	vfpfcnvrt@ll+5,w
  5239  0326  00BF               	movwf	dtoa@d+5
  5240  0327  0865               	movf	vfpfcnvrt@ll+6,w
  5241  0328  00C0               	movwf	dtoa@d+6
  5242  0329  0866               	movf	vfpfcnvrt@ll+7,w
  5243  032A  00C1               	movwf	dtoa@d+7
  5244  032B  0869               	movf	vfpfcnvrt@fp,w
  5245  032C  3180  2045         	fcall	_dtoa
  5246  032E  0020               	movlb	0	; select bank0
  5247  032F  083B               	movf	?_dtoa+1,w
  5248  0330  00D9               	movwf	?_vfpfcnvrt+1
  5249  0331  083A               	movf	?_dtoa,w
  5250  0332  00D8               	movwf	?_vfpfcnvrt
  5251  0333  0008               	return
  5252  0334                     l2898:	
  5253                           
  5254                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 1149:         if (*fmt
      +                          [0] == 's') {
  5255  0334  0858               	movf	vfpfcnvrt@fmt,w
  5256  0335  0086               	movwf	6
  5257  0336  0187               	clrf	7
  5258  0337  3F40               	moviw [0]fsr1
  5259  0338  00DA               	movwf	??_vfpfcnvrt
  5260  0339  3F41               	moviw [1]fsr1
  5261  033A  00DB               	movwf	??_vfpfcnvrt+1
  5262  033B  085A               	movf	??_vfpfcnvrt,w
  5263  033C  0084               	movwf	4
  5264  033D  085B               	movf	??_vfpfcnvrt+1,w
  5265  033E  0085               	movwf	5
  5266  033F  0012               	moviw fsr0++
  5267  0340  3A73               	xorlw	115
  5268  0341  1D03               	btfss	3,2
  5269  0342  2B64               	goto	l2908
  5270                           
  5271                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 1151:             ++*f
      +                          mt;
  5272  0343  0858               	movf	vfpfcnvrt@fmt,w
  5273  0344  0086               	movwf	6
  5274  0345  0187               	clrf	7
  5275  0346  3001               	movlw	1
  5276  0347  0781               	addwf	1,f
  5277  0348  3141               	addfsr 1,1
  5278  0349  1803               	skipnc
  5279  034A  0A81               	incf	1,f
  5280                           
  5281                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 1152:             cp =
      +                           (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  5282  034B  0859               	movf	vfpfcnvrt@ap,w
  5283  034C  0086               	movwf	6
  5284  034D  0187               	clrf	7
  5285  034E  0801               	movf	1,w
  5286  034F  0084               	movwf	4
  5287  0350  0185               	clrf	5
  5288  0351  3002               	movlw	2
  5289  0352  0781               	addwf	1,f
  5290  0353  3F00               	moviw [0]fsr0
  5291  0354  00E7               	movwf	vfpfcnvrt@cp
  5292  0355  3F01               	moviw [1]fsr0
  5293  0356  00E8               	movwf	vfpfcnvrt@cp+1
  5294                           
  5295                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 1154:             retu
      +                          rn stoa(fp, cp);
  5296  0357  0868               	movf	vfpfcnvrt@cp+1,w
  5297  0358  00A6               	movwf	stoa@s+1
  5298  0359  0867               	movf	vfpfcnvrt@cp,w
  5299  035A  00A5               	movwf	stoa@s
  5300  035B  0869               	movf	vfpfcnvrt@fp,w
  5301  035C  3185  258B         	fcall	_stoa
  5302  035E  0020               	movlb	0	; select bank0
  5303  035F  0826               	movf	?_stoa+1,w
  5304  0360  00D9               	movwf	?_vfpfcnvrt+1
  5305  0361  0825               	movf	?_stoa,w
  5306  0362  00D8               	movwf	?_vfpfcnvrt
  5307  0363  0008               	return
  5308  0364                     l2908:	
  5309                           
  5310                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 1350:         if ((*fm
      +                          t)[0] == '%') {
  5311  0364  0858               	movf	vfpfcnvrt@fmt,w
  5312  0365  0086               	movwf	6
  5313  0366  0187               	clrf	7
  5314  0367  3F40               	moviw [0]fsr1
  5315  0368  00DA               	movwf	??_vfpfcnvrt
  5316  0369  3F41               	moviw [1]fsr1
  5317  036A  00DB               	movwf	??_vfpfcnvrt+1
  5318  036B  085A               	movf	??_vfpfcnvrt,w
  5319  036C  0084               	movwf	4
  5320  036D  085B               	movf	??_vfpfcnvrt+1,w
  5321  036E  0085               	movwf	5
  5322  036F  0012               	moviw fsr0++
  5323  0370  3A25               	xorlw	37
  5324  0371  1D03               	btfss	3,2
  5325  0372  2B8B               	goto	l2918
  5326                           
  5327                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 1351:             ++*f
      +                          mt;
  5328  0373  0858               	movf	vfpfcnvrt@fmt,w
  5329  0374  0086               	movwf	6
  5330  0375  0187               	clrf	7
  5331  0376  3001               	movlw	1
  5332  0377  0781               	addwf	1,f
  5333  0378  3141               	addfsr 1,1
  5334  0379  1803               	skipnc
  5335  037A  0A81               	incf	1,f
  5336                           
  5337                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 1352:             fput
      +                          c((int)'%', fp);
  5338  037B  3025               	movlw	37
  5339  037C  00F4               	movwf	fputc@c
  5340  037D  3000               	movlw	0
  5341  037E  00F5               	movwf	fputc@c+1
  5342  037F  0869               	movf	vfpfcnvrt@fp,w
  5343  0380  00DA               	movwf	??_vfpfcnvrt
  5344  0381  085A               	movf	??_vfpfcnvrt,w
  5345  0382  00F6               	movwf	fputc@fp
  5346  0383  318E  26CB         	fcall	_fputc
  5347  0385                     l2914:	
  5348                           
  5349                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 1353:             retu
      +                          rn 1;
  5350  0385  3001               	movlw	1
  5351  0386  0020               	movlb	0	; select bank0
  5352  0387  00D8               	movwf	?_vfpfcnvrt
  5353  0388  3000               	movlw	0
  5354  0389  00D9               	movwf	?_vfpfcnvrt+1
  5355  038A  0008               	return
  5356  038B                     l2918:	
  5357                           
  5358                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 1357:         ++*fmt;
  5359  038B  0858               	movf	vfpfcnvrt@fmt,w
  5360  038C  0086               	movwf	6
  5361  038D  0187               	clrf	7
  5362  038E  3001               	movlw	1
  5363  038F  0781               	addwf	1,f
  5364  0390  3141               	addfsr 1,1
  5365  0391  1803               	skipnc
  5366  0392  0A81               	incf	1,f
  5367                           
  5368                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 1358:         return 0
      +                          ;
  5369  0393  01D8               	clrf	?_vfpfcnvrt
  5370  0394  01D9               	clrf	?_vfpfcnvrt+1
  5371  0395  0008               	return
  5372  0396                     l2924:	
  5373                           
  5374                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 1362:     fputc((int)(
      +                          *fmt)[0], fp);
  5375  0396  0858               	movf	vfpfcnvrt@fmt,w
  5376  0397  0086               	movwf	6
  5377  0398  0187               	clrf	7
  5378  0399  3F40               	moviw [0]fsr1
  5379  039A  00DA               	movwf	??_vfpfcnvrt
  5380  039B  3F41               	moviw [1]fsr1
  5381  039C  00DB               	movwf	??_vfpfcnvrt+1
  5382  039D  085A               	movf	??_vfpfcnvrt,w
  5383  039E  0084               	movwf	4
  5384  039F  085B               	movf	??_vfpfcnvrt+1,w
  5385  03A0  0085               	movwf	5
  5386  03A1  0800               	movf	0,w	;code access
  5387  03A2  00DC               	movwf	??_vfpfcnvrt+2
  5388  03A3  01DD               	clrf	??_vfpfcnvrt+3
  5389  03A4  085C               	movf	??_vfpfcnvrt+2,w
  5390  03A5  00F4               	movwf	fputc@c
  5391  03A6  085D               	movf	??_vfpfcnvrt+3,w
  5392  03A7  00F5               	movwf	fputc@c+1
  5393  03A8  0869               	movf	vfpfcnvrt@fp,w
  5394  03A9  00DE               	movwf	??_vfpfcnvrt+4
  5395  03AA  085E               	movf	??_vfpfcnvrt+4,w
  5396  03AB  00F6               	movwf	fputc@fp
  5397  03AC  318E  26CB  3182   	fcall	_fputc
  5398                           
  5399                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 1363:     ++*fmt;
  5400  03AF  0020               	movlb	0	; select bank0
  5401  03B0  0858               	movf	vfpfcnvrt@fmt,w
  5402  03B1  0086               	movwf	6
  5403  03B2  0187               	clrf	7
  5404  03B3  3001               	movlw	1
  5405  03B4  0781               	addwf	1,f
  5406  03B5  3141               	addfsr 1,1
  5407  03B6  1803               	skipnc
  5408  03B7  0A81               	incf	1,f
  5409  03B8  2B85               	goto	l2914
  5410  03B9                     __end_of_vfpfcnvrt:	
  5411                           
  5412                           	psect	text12
  5413  058B                     __ptext12:	
  5414 ;; *************** function _stoa *****************
  5415 ;; Defined at:
  5416 ;;		line 546 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c"
  5417 ;; Parameters:    Size  Location     Type
  5418 ;;  fp              1    wreg     PTR struct _IO_FILE
  5419 ;;		 -> sprintf@f(5), NULL(0), 
  5420 ;;  s               2    5[BANK0 ] PTR unsigned char 
  5421 ;;		 -> ?_printf(2), ?_sprintf(2), gps_vertical_velocity(12), gps_course_over_ground(12), 
  5422 ;;		 -> gps_speed_over_ground(12), gps_altitude(16), gps_longitude(16), gps_latitude(16), 
  5423 ;;		 -> gps_time(16), 
  5424 ;; Auto vars:     Size  Location     Type
  5425 ;;  fp              1   18[BANK0 ] PTR struct _IO_FILE
  5426 ;;		 -> sprintf@f(5), NULL(0), 
  5427 ;;  nuls            7    7[BANK0 ] unsigned char [7]
  5428 ;;  l               2   23[BANK0 ] int 
  5429 ;;  p               2   21[BANK0 ] int 
  5430 ;;  cp              2   19[BANK0 ] PTR unsigned char 
  5431 ;;		 -> ?_printf(2), ?_sprintf(2), stoa@nuls(7), gps_vertical_velocity(12), 
  5432 ;;		 -> gps_course_over_ground(12), gps_speed_over_ground(12), gps_altitude(16), gps_longitude(16), 
  5433 ;;		 -> gps_latitude(16), gps_time(16), 
  5434 ;;  w               2   16[BANK0 ] int 
  5435 ;;  i               2   14[BANK0 ] int 
  5436 ;; Return value:  Size  Location     Type
  5437 ;;                  2    5[BANK0 ] int 
  5438 ;; Registers used:
  5439 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5440 ;; Tracked objects:
  5441 ;;		On entry : 0/0
  5442 ;;		On exit  : 0/0
  5443 ;;		Unchanged: 0/0
  5444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5445 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5446 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5447 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5448 ;;      Totals:         3      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5449 ;;Total ram usage:       23 bytes
  5450 ;; Hardware stack levels used:    1
  5451 ;; Hardware stack levels required when called:    7
  5452 ;; This function calls:
  5453 ;;		_fputc
  5454 ;;		_strlen
  5455 ;; This function is called by:
  5456 ;;		_vfpfcnvrt
  5457 ;; This function uses a non-reentrant model
  5458 ;;
  5459                           
  5460                           
  5461                           ;psect for function _stoa
  5462  058B                     _stoa:	
  5463                           
  5464                           ;incstack = 0
  5465                           ; Regs used in _stoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5466                           ;stoa@fp stored from wreg
  5467  058B  0020               	movlb	0	; select bank0
  5468  058C  00B2               	movwf	stoa@fp
  5469                           
  5470                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 546: static int stoa(F
      +                          ILE *fp, char *s);K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 547: 
      +                          {;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 548:     char *cp, nu
      +                          ls[] = "(null)";
  5471  058D  305C               	movlw	low stoa@F1139
  5472  058E  0086               	movwf	6
  5473  058F  3001               	movlw	high stoa@F1139
  5474  0590  0087               	movwf	7
  5475  0591  3027               	movlw	low stoa@nuls
  5476  0592  0084               	movwf	4
  5477  0593  3000               	movlw	high stoa@nuls
  5478  0594  0085               	movwf	5
  5479  0595  3007               	movlw	7
  5480  0596  00F7               	movwf	??_stoa
  5481  0597                     u2520:	
  5482  0597  0016               	moviw fsr1++
  5483  0598  001A               	movwi fsr0++
  5484  0599  0BF7               	decfsz	??_stoa,f
  5485  059A  2D97               	goto	u2520
  5486                           
  5487                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 549:     int i, l, p, 
      +                          w;;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 552:     cp = s;
  5488  059B  0826               	movf	stoa@s+1,w
  5489  059C  00B4               	movwf	stoa@cp+1
  5490  059D  0825               	movf	stoa@s,w
  5491  059E  00B3               	movwf	stoa@cp
  5492                           
  5493                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 553:     if (!cp) {
  5494  059F  0833               	movf	stoa@cp,w
  5495  05A0  0434               	iorwf	stoa@cp+1,w
  5496  05A1  1D03               	btfss	3,2
  5497  05A2  2DA7               	goto	l2836
  5498                           
  5499                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 554:         cp = nuls
      +                          ;
  5500  05A3  3027               	movlw	low stoa@nuls
  5501  05A4  00B3               	movwf	stoa@cp
  5502  05A5  3000               	movlw	high stoa@nuls
  5503  05A6  00B4               	movwf	stoa@cp+1
  5504  05A7                     l2836:	
  5505                           
  5506                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 558:     l = strlen(cp
      +                          );
  5507  05A7  0834               	movf	stoa@cp+1,w
  5508  05A8  00F3               	movwf	strlen@s+1
  5509  05A9  0833               	movf	stoa@cp,w
  5510  05AA  00F2               	movwf	strlen@s
  5511  05AB  318D  2520  3185   	fcall	_strlen
  5512  05AE  0873               	movf	?_strlen+1,w
  5513  05AF  0020               	movlb	0	; select bank0
  5514  05B0  00B8               	movwf	stoa@l+1
  5515  05B1  0872               	movf	?_strlen,w
  5516  05B2  00B7               	movwf	stoa@l
  5517                           
  5518                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 559:     p = prec;
  5519  05B3  0021               	movlb	1	; select bank1
  5520  05B4  0840               	movf	(_prec+1)^(0+128),w
  5521  05B5  0020               	movlb	0	; select bank0
  5522  05B6  00B6               	movwf	stoa@p+1
  5523  05B7  0021               	movlb	1	; select bank1
  5524  05B8  083F               	movf	_prec^(0+128),w
  5525  05B9  0020               	movlb	0	; select bank0
  5526  05BA  00B5               	movwf	stoa@p
  5527                           
  5528                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 560:     l = (!(p < 0)
      +                           && (p < l)) ? p : l;
  5529  05BB  1BB6               	btfsc	stoa@p+1,7
  5530  05BC  2DCE               	goto	l522
  5531  05BD  0836               	movf	stoa@p+1,w
  5532  05BE  3A80               	xorlw	128
  5533  05BF  00F7               	movwf	??_stoa
  5534  05C0  0838               	movf	stoa@l+1,w
  5535  05C1  3A80               	xorlw	128
  5536  05C2  0277               	subwf	??_stoa,w
  5537  05C3  1D03               	skipz
  5538  05C4  2DC7               	goto	u2555
  5539  05C5  0837               	movf	stoa@l,w
  5540  05C6  0235               	subwf	stoa@p,w
  5541  05C7                     u2555:	
  5542  05C7  1803               	btfsc	3,0
  5543  05C8  2DCE               	goto	l522
  5544  05C9  0020               	movlb	0	; select bank0
  5545  05CA  0836               	movf	stoa@p+1,w
  5546  05CB  00B8               	movwf	stoa@l+1
  5547  05CC  0835               	movf	stoa@p,w
  5548  05CD  00B7               	movwf	stoa@l
  5549  05CE                     l522:	
  5550                           
  5551                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 561:     p = l;
  5552  05CE  0020               	movlb	0	; select bank0
  5553  05CF  0838               	movf	stoa@l+1,w
  5554  05D0  00B6               	movwf	stoa@p+1
  5555  05D1  0837               	movf	stoa@l,w
  5556  05D2  00B5               	movwf	stoa@p
  5557                           
  5558                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 562:     w = width;
  5559  05D3  0022               	movlb	2	; select bank2
  5560  05D4  0827               	movf	(_width+1)^(0+256),w
  5561  05D5  0020               	movlb	0	; select bank0
  5562  05D6  00B1               	movwf	stoa@w+1
  5563  05D7  0022               	movlb	2	; select bank2
  5564  05D8  0826               	movf	_width^(0+256),w
  5565  05D9  0020               	movlb	0	; select bank0
  5566  05DA  00B0               	movwf	stoa@w
  5567                           
  5568                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 565:     if (!(flags &
      +                           (1 << 0))) {
  5569  05DB  1C7A               	btfss	_flags,0
  5570  05DC  2DEF               	goto	l2854
  5571  05DD  2DFB               	goto	l2856
  5572  05DE                     l2850:	
  5573                           
  5574                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 567:             fputc
      +                          (' ', fp);
  5575  05DE  3020               	movlw	32
  5576  05DF  00F4               	movwf	fputc@c
  5577  05E0  3000               	movlw	0
  5578  05E1  00F5               	movwf	fputc@c+1
  5579  05E2  0020               	movlb	0	; select bank0
  5580  05E3  0832               	movf	stoa@fp,w
  5581  05E4  00F7               	movwf	??_stoa
  5582  05E5  0877               	movf	??_stoa,w
  5583  05E6  00F6               	movwf	fputc@fp
  5584  05E7  318E  26CB  3185   	fcall	_fputc
  5585                           
  5586                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 568:             ++l;
  5587  05EA  3001               	movlw	1
  5588  05EB  0020               	movlb	0	; select bank0
  5589  05EC  07B7               	addwf	stoa@l,f
  5590  05ED  3000               	movlw	0
  5591  05EE  3DB8               	addwfc	stoa@l+1,f
  5592  05EF                     l2854:	
  5593                           
  5594                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 566:         while (l 
      +                          < w) {
  5595  05EF  0838               	movf	stoa@l+1,w
  5596  05F0  3A80               	xorlw	128
  5597  05F1  00F7               	movwf	??_stoa
  5598  05F2  0831               	movf	stoa@w+1,w
  5599  05F3  3A80               	xorlw	128
  5600  05F4  0277               	subwf	??_stoa,w
  5601  05F5  1D03               	skipz
  5602  05F6  2DF9               	goto	u2575
  5603  05F7  0830               	movf	stoa@w,w
  5604  05F8  0237               	subwf	stoa@l,w
  5605  05F9                     u2575:	
  5606  05F9  1C03               	skipc
  5607  05FA  2DDE               	goto	l2850
  5608  05FB                     l2856:	
  5609                           
  5610                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 573:     i = 0;
  5611  05FB  0020               	movlb	0	; select bank0
  5612  05FC  01AE               	clrf	stoa@i
  5613  05FD  01AF               	clrf	stoa@i+1
  5614  05FE                     l2864:	
  5615                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 574:     while (i < p)
      +                           {
  5616                           
  5617                           
  5618                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 574:     while (i < p)
      +                           {
  5619  05FE  082F               	movf	stoa@i+1,w
  5620  05FF  3A80               	xorlw	128
  5621  0600  00F7               	movwf	??_stoa
  5622  0601  0836               	movf	stoa@p+1,w
  5623  0602  3A80               	xorlw	128
  5624  0603  0277               	subwf	??_stoa,w
  5625  0604  1D03               	skipz
  5626  0605  2E08               	goto	u2585
  5627  0606  0835               	movf	stoa@p,w
  5628  0607  022E               	subwf	stoa@i,w
  5629  0608                     u2585:	
  5630  0608  1803               	btfsc	3,0
  5631  0609  2E27               	goto	l531
  5632                           
  5633                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 575:         fputc(*cp
      +                          , fp);
  5634  060A  0020               	movlb	0	; select bank0
  5635  060B  0833               	movf	stoa@cp,w
  5636  060C  0086               	movwf	6
  5637  060D  0834               	movf	stoa@cp+1,w
  5638  060E  0087               	movwf	7
  5639  060F  0801               	movf	1,w
  5640  0610  00F7               	movwf	??_stoa
  5641  0611  01F8               	clrf	??_stoa+1
  5642  0612  0877               	movf	??_stoa,w
  5643  0613  00F4               	movwf	fputc@c
  5644  0614  0878               	movf	??_stoa+1,w
  5645  0615  00F5               	movwf	fputc@c+1
  5646  0616  0832               	movf	stoa@fp,w
  5647  0617  00F9               	movwf	??_stoa+2
  5648  0618  0879               	movf	??_stoa+2,w
  5649  0619  00F6               	movwf	fputc@fp
  5650  061A  318E  26CB  3185   	fcall	_fputc
  5651                           
  5652                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 576:         ++cp;
  5653  061D  3001               	movlw	1
  5654  061E  0020               	movlb	0	; select bank0
  5655  061F  07B3               	addwf	stoa@cp,f
  5656  0620  3000               	movlw	0
  5657  0621  3DB4               	addwfc	stoa@cp+1,f
  5658                           
  5659                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 577:         ++i;
  5660  0622  3001               	movlw	1
  5661  0623  07AE               	addwf	stoa@i,f
  5662  0624  3000               	movlw	0
  5663  0625  3DAF               	addwfc	stoa@i+1,f
  5664  0626  2DFE               	goto	l2864
  5665  0627                     l531:	
  5666                           
  5667                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 581:     if (flags & (
      +                          1 << 0)) {
  5668  0627  187A               	btfsc	_flags,0
  5669  0628  2E3B               	goto	l2872
  5670  0629  2E48               	goto	l2874
  5671  062A                     l2868:	
  5672                           
  5673                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 583:             fputc
      +                          (' ', fp);
  5674  062A  3020               	movlw	32
  5675  062B  00F4               	movwf	fputc@c
  5676  062C  3000               	movlw	0
  5677  062D  00F5               	movwf	fputc@c+1
  5678  062E  0020               	movlb	0	; select bank0
  5679  062F  0832               	movf	stoa@fp,w
  5680  0630  00F7               	movwf	??_stoa
  5681  0631  0877               	movf	??_stoa,w
  5682  0632  00F6               	movwf	fputc@fp
  5683  0633  318E  26CB  3185   	fcall	_fputc
  5684                           
  5685                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 584:             ++l;
  5686  0636  3001               	movlw	1
  5687  0637  0020               	movlb	0	; select bank0
  5688  0638  07B7               	addwf	stoa@l,f
  5689  0639  3000               	movlw	0
  5690  063A  3DB8               	addwfc	stoa@l+1,f
  5691  063B                     l2872:	
  5692                           
  5693                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 582:         while (l 
      +                          < w) {
  5694  063B  0020               	movlb	0	; select bank0
  5695  063C  0838               	movf	stoa@l+1,w
  5696  063D  3A80               	xorlw	128
  5697  063E  00F7               	movwf	??_stoa
  5698  063F  0831               	movf	stoa@w+1,w
  5699  0640  3A80               	xorlw	128
  5700  0641  0277               	subwf	??_stoa,w
  5701  0642  1D03               	skipz
  5702  0643  2E46               	goto	u2605
  5703  0644  0830               	movf	stoa@w,w
  5704  0645  0237               	subwf	stoa@l,w
  5705  0646                     u2605:	
  5706  0646  1C03               	skipc
  5707  0647  2E2A               	goto	l2868
  5708  0648                     l2874:	
  5709                           
  5710                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 588:     return l;
  5711  0648  0020               	movlb	0	; select bank0
  5712  0649  0838               	movf	stoa@l+1,w
  5713  064A  00A6               	movwf	?_stoa+1
  5714  064B  0837               	movf	stoa@l,w
  5715  064C  00A5               	movwf	?_stoa
  5716  064D  0008               	return
  5717  064E                     __end_of_stoa:	
  5718                           
  5719                           	psect	text13
  5720  0045                     __ptext13:	
  5721 ;; *************** function _dtoa *****************
  5722 ;; Defined at:
  5723 ;;		line 274 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c"
  5724 ;; Parameters:    Size  Location     Type
  5725 ;;  fp              1    wreg     PTR struct _IO_FILE
  5726 ;;		 -> sprintf@f(5), NULL(0), 
  5727 ;;  d               8   26[BANK0 ] long long 
  5728 ;; Auto vars:     Size  Location     Type
  5729 ;;  fp              1   37[BANK0 ] PTR struct _IO_FILE
  5730 ;;		 -> sprintf@f(5), NULL(0), 
  5731 ;;  n               8   46[BANK0 ] long long 
  5732 ;;  i               2   54[BANK0 ] int 
  5733 ;;  s               2   44[BANK0 ] int 
  5734 ;;  w               2   42[BANK0 ] int 
  5735 ;;  p               2   40[BANK0 ] int 
  5736 ;; Return value:  Size  Location     Type
  5737 ;;                  2   26[BANK0 ] int 
  5738 ;; Registers used:
  5739 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5740 ;; Tracked objects:
  5741 ;;		On entry : 0/0
  5742 ;;		On exit  : 0/0
  5743 ;;		Unchanged: 0/0
  5744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5745 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5746 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5747 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5748 ;;      Totals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5749 ;;Total ram usage:       30 bytes
  5750 ;; Hardware stack levels used:    1
  5751 ;; Hardware stack levels required when called:    9
  5752 ;; This function calls:
  5753 ;;		___aodiv
  5754 ;;		___aomod
  5755 ;;		_abs
  5756 ;;		_pad
  5757 ;; This function is called by:
  5758 ;;		_vfpfcnvrt
  5759 ;; This function uses a non-reentrant model
  5760 ;;
  5761                           
  5762                           
  5763                           ;psect for function _dtoa
  5764  0045                     _dtoa:	
  5765                           
  5766                           ;incstack = 0
  5767                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5768                           ;dtoa@fp stored from wreg
  5769  0045  0020               	movlb	0	; select bank0
  5770  0046  00C5               	movwf	dtoa@fp
  5771                           
  5772                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 274: static int dtoa(F
      +                          ILE *fp, long long d);K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 2
      +                          75: {;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 276:     int i, p
      +                          , s, w;;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 277:     long l
      +                          ong n;;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 280:     n = d;
  5773  0047  083A               	movf	dtoa@d,w
  5774  0048  00CE               	movwf	dtoa@n
  5775  0049  083B               	movf	dtoa@d+1,w
  5776  004A  00CF               	movwf	dtoa@n+1
  5777  004B  083C               	movf	dtoa@d+2,w
  5778  004C  00D0               	movwf	dtoa@n+2
  5779  004D  083D               	movf	dtoa@d+3,w
  5780  004E  00D1               	movwf	dtoa@n+3
  5781  004F  083E               	movf	dtoa@d+4,w
  5782  0050  00D2               	movwf	dtoa@n+4
  5783  0051  083F               	movf	dtoa@d+5,w
  5784  0052  00D3               	movwf	dtoa@n+5
  5785  0053  0840               	movf	dtoa@d+6,w
  5786  0054  00D4               	movwf	dtoa@n+6
  5787  0055  0841               	movf	dtoa@d+7,w
  5788  0056  00D5               	movwf	dtoa@n+7
  5789                           
  5790                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 281:     s = n < 0 ? 1
      +                           : 0;
  5791  0057  304E               	movlw	low dtoa@n
  5792  0058  0086               	movwf	6
  5793  0059  3000               	movlw	high dtoa@n
  5794  005A  0087               	movwf	7
  5795  005B  3F47               	moviw [7]fsr1
  5796  005C  00C2               	movwf	??_dtoa
  5797  005D  1FC2               	btfss	??_dtoa,7
  5798  005E  2861               	goto	u2360
  5799  005F  3001               	movlw	1
  5800  0060  2862               	goto	u2370
  5801  0061                     u2360:	
  5802  0061  3000               	movlw	0
  5803  0062                     u2370:	
  5804  0062  0020               	movlb	0	; select bank0
  5805  0063  00C3               	movwf	??_dtoa+1
  5806  0064  01C4               	clrf	??_dtoa+2
  5807  0065  0843               	movf	??_dtoa+1,w
  5808  0066  00CC               	movwf	dtoa@s
  5809  0067  0844               	movf	??_dtoa+2,w
  5810  0068  00CD               	movwf	dtoa@s+1
  5811                           
  5812                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 282:     if (s) {
  5813  0069  084C               	movf	dtoa@s,w
  5814  006A  044D               	iorwf	dtoa@s+1,w
  5815  006B  1903               	btfsc	3,2
  5816  006C  288B               	goto	l490
  5817                           
  5818                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 283:         n = -n;
  5819  006D  09CE               	comf	dtoa@n,f
  5820  006E  09CF               	comf	dtoa@n+1,f
  5821  006F  09D0               	comf	dtoa@n+2,f
  5822  0070  09D1               	comf	dtoa@n+3,f
  5823  0071  09D2               	comf	dtoa@n+4,f
  5824  0072  09D3               	comf	dtoa@n+5,f
  5825  0073  09D4               	comf	dtoa@n+6,f
  5826  0074  09D5               	comf	dtoa@n+7,f
  5827  0075  0ACE               	incf	dtoa@n,f
  5828  0076  1D03               	skipz
  5829  0077  288B               	goto	l490
  5830  0078  0ACF               	incf	dtoa@n+1,f
  5831  0079  1D03               	skipz
  5832  007A  288B               	goto	l490
  5833  007B  0AD0               	incf	dtoa@n+2,f
  5834  007C  1D03               	skipz
  5835  007D  288B               	goto	l490
  5836  007E  0AD1               	incf	dtoa@n+3,f
  5837  007F  1D03               	skipz
  5838  0080  288B               	goto	l490
  5839  0081  0AD2               	incf	dtoa@n+4,f
  5840  0082  1D03               	skipz
  5841  0083  288B               	goto	l490
  5842  0084  0AD3               	incf	dtoa@n+5,f
  5843  0085  1D03               	skipz
  5844  0086  288B               	goto	l490
  5845  0087  0AD4               	incf	dtoa@n+6,f
  5846  0088  1D03               	skipz
  5847  0089  288B               	goto	l490
  5848  008A  0AD5               	incf	dtoa@n+7,f
  5849  008B                     l490:	
  5850                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 284:     }
  5851                           
  5852                           
  5853                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 287:     if (!(prec < 
      +                          0)) {
  5854  008B  0021               	movlb	1	; select bank1
  5855  008C  1BC0               	btfsc	(_prec+1)^(0+128),7
  5856  008D  2892               	goto	l491
  5857                           
  5858                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 288:         flags &= 
      +                          ~(1 << 1);
  5859  008E  30FD               	movlw	253
  5860  008F  05FA               	andwf	_flags,f
  5861  0090  30FF               	movlw	255
  5862  0091  05FB               	andwf	_flags+1,f
  5863  0092                     l491:	
  5864                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 289:     }
  5865                           
  5866                           
  5867                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 290:     p = (0 < prec
      +                          ) ? prec : 1;
  5868  0092  0840               	movf	(_prec+1)^(0+128),w
  5869  0093  3A80               	xorlw	128
  5870  0094  0020               	movlb	0	; select bank0
  5871  0095  00C2               	movwf	??_dtoa
  5872  0096  3080               	movlw	128
  5873  0097  0242               	subwf	??_dtoa,w
  5874  0098  1D03               	skipz
  5875  0099  289D               	goto	u2415
  5876  009A  3001               	movlw	1
  5877  009B  0021               	movlb	1	; select bank1
  5878  009C  023F               	subwf	_prec^(0+128),w
  5879  009D                     u2415:	
  5880  009D  1803               	skipnc
  5881  009E  28A5               	goto	l2782
  5882  009F  3001               	movlw	1
  5883  00A0  0020               	movlb	0	; select bank0
  5884  00A1  00C8               	movwf	dtoa@p
  5885  00A2  3000               	movlw	0
  5886  00A3  00C9               	movwf	dtoa@p+1
  5887  00A4  28AD               	goto	l495
  5888  00A5                     l2782:	
  5889  00A5  0021               	movlb	1	; select bank1
  5890  00A6  0840               	movf	(_prec+1)^(0+128),w
  5891  00A7  0020               	movlb	0	; select bank0
  5892  00A8  00C9               	movwf	dtoa@p+1
  5893  00A9  0021               	movlb	1	; select bank1
  5894  00AA  083F               	movf	_prec^(0+128),w
  5895  00AB  0020               	movlb	0	; select bank0
  5896  00AC  00C8               	movwf	dtoa@p
  5897  00AD                     l495:	
  5898                           
  5899                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 291:     w = width;
  5900  00AD  0022               	movlb	2	; select bank2
  5901  00AE  0827               	movf	(_width+1)^(0+256),w
  5902  00AF  0020               	movlb	0	; select bank0
  5903  00B0  00CB               	movwf	dtoa@w+1
  5904  00B1  0022               	movlb	2	; select bank2
  5905  00B2  0826               	movf	_width^(0+256),w
  5906  00B3  0020               	movlb	0	; select bank0
  5907  00B4  00CA               	movwf	dtoa@w
  5908                           
  5909                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 292:     if (s || (fla
      +                          gs & (1 << 2))) {
  5910  00B5  084C               	movf	dtoa@s,w
  5911  00B6  044D               	iorwf	dtoa@s+1,w
  5912  00B7  1D03               	btfss	3,2
  5913  00B8  28BB               	goto	l2788
  5914  00B9  1D7A               	btfss	_flags,2
  5915  00BA  28BF               	goto	l496
  5916  00BB                     l2788:	
  5917                           
  5918                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 293:         --w;
  5919  00BB  30FF               	movlw	255
  5920  00BC  07CA               	addwf	dtoa@w,f
  5921  00BD  30FF               	movlw	255
  5922  00BE  3DCB               	addwfc	dtoa@w+1,f
  5923  00BF                     l496:	
  5924                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 294:     }
  5925                           
  5926                           
  5927                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 297:     i = sizeof(db
      +                          uf) - 1;
  5928  00BF  301F               	movlw	31
  5929  00C0  00D6               	movwf	dtoa@i
  5930  00C1  3000               	movlw	0
  5931  00C2  00D7               	movwf	dtoa@i+1
  5932                           
  5933                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 298:     dbuf[i] = '\0
      +                          ';
  5934  00C3  0023               	movlb	3	; select bank3
  5935  00C4  01BF               	clrf	(_dbuf^(0+384)+31)
  5936                           
  5937                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 299:     while (!(i < 
      +                          1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5938  00C5  2952               	goto	l499
  5939  00C6                     l2802:	
  5940  00C6  0020               	movlb	0	; select bank0
  5941  00C7  084E               	movf	dtoa@n,w
  5942  00C8  044F               	iorwf	dtoa@n+1,w
  5943  00C9  0450               	iorwf	dtoa@n+2,w
  5944  00CA  0451               	iorwf	dtoa@n+3,w
  5945  00CB  0452               	iorwf	dtoa@n+4,w
  5946  00CC  0453               	iorwf	dtoa@n+5,w
  5947  00CD  0454               	iorwf	dtoa@n+6,w
  5948  00CE  0455               	iorwf	dtoa@n+7,w
  5949  00CF  1D03               	skipz
  5950  00D0  28E9               	goto	l2792
  5951  00D1  0849               	movf	dtoa@p+1,w
  5952  00D2  3A80               	xorlw	128
  5953  00D3  00C2               	movwf	??_dtoa
  5954  00D4  3080               	movlw	128
  5955  00D5  0242               	subwf	??_dtoa,w
  5956  00D6  1D03               	skipz
  5957  00D7  28DA               	goto	u2465
  5958  00D8  3001               	movlw	1
  5959  00D9  0248               	subwf	dtoa@p,w
  5960  00DA                     u2465:	
  5961  00DA  1803               	skipnc
  5962  00DB  28E9               	goto	l2792
  5963  00DC  0020               	movlb	0	; select bank0
  5964  00DD  084B               	movf	dtoa@w+1,w
  5965  00DE  3A80               	xorlw	128
  5966  00DF  00C2               	movwf	??_dtoa
  5967  00E0  3080               	movlw	128
  5968  00E1  0242               	subwf	??_dtoa,w
  5969  00E2  1D03               	skipz
  5970  00E3  28E6               	goto	u2475
  5971  00E4  3001               	movlw	1
  5972  00E5  024A               	subwf	dtoa@w,w
  5973  00E6                     u2475:	
  5974  00E6  1803               	btfsc	3,0
  5975  00E7  1CFA               	btfss	_flags,1
  5976  00E8  295E               	goto	l2810
  5977  00E9                     l2792:	
  5978                           
  5979                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 300:         --i;
  5980  00E9  30FF               	movlw	255
  5981  00EA  0020               	movlb	0	; select bank0
  5982  00EB  07D6               	addwf	dtoa@i,f
  5983  00EC  30FF               	movlw	255
  5984  00ED  3DD7               	addwfc	dtoa@i+1,f
  5985                           
  5986                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 301:         dbuf[i] =
      +                           '0' + abs(n % 10);
  5987  00EE  300A               	movlw	10
  5988  00EF  00A0               	movwf	___aomod@divisor
  5989  00F0  01A1               	clrf	___aomod@divisor+1
  5990  00F1  01A2               	clrf	___aomod@divisor+2
  5991  00F2  01A3               	clrf	___aomod@divisor+3
  5992  00F3  01A4               	clrf	___aomod@divisor+4
  5993  00F4  01A5               	clrf	___aomod@divisor+5
  5994  00F5  01A6               	clrf	___aomod@divisor+6
  5995  00F6  01A7               	clrf	___aomod@divisor+7
  5996  00F7  084E               	movf	dtoa@n,w
  5997  00F8  00A8               	movwf	___aomod@dividend
  5998  00F9  084F               	movf	dtoa@n+1,w
  5999  00FA  00A9               	movwf	___aomod@dividend+1
  6000  00FB  0850               	movf	dtoa@n+2,w
  6001  00FC  00AA               	movwf	___aomod@dividend+2
  6002  00FD  0851               	movf	dtoa@n+3,w
  6003  00FE  00AB               	movwf	___aomod@dividend+3
  6004  00FF  0852               	movf	dtoa@n+4,w
  6005  0100  00AC               	movwf	___aomod@dividend+4
  6006  0101  0853               	movf	dtoa@n+5,w
  6007  0102  00AD               	movwf	___aomod@dividend+5
  6008  0103  0854               	movf	dtoa@n+6,w
  6009  0104  00AE               	movwf	___aomod@dividend+6
  6010  0105  0855               	movf	dtoa@n+7,w
  6011  0106  00AF               	movwf	___aomod@dividend+7
  6012  0107  3184  24AF  3180   	fcall	___aomod
  6013  010A  0020               	movlb	0	; select bank0
  6014  010B  0821               	movf	?___aomod+1,w
  6015  010C  00F6               	movwf	abs@a+1
  6016  010D  0820               	movf	?___aomod,w
  6017  010E  00F5               	movwf	abs@a
  6018  010F  318D  2537  3180   	fcall	_abs
  6019  0112  0875               	movf	?_abs,w
  6020  0113  3E30               	addlw	48
  6021  0114  0020               	movlb	0	; select bank0
  6022  0115  00C2               	movwf	??_dtoa
  6023  0116  0856               	movf	dtoa@i,w
  6024  0117  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  6025  0118  0086               	movwf	6
  6026  0119  3001               	movlw	1	; select bank3/4
  6027  011A  0087               	movwf	7
  6028  011B  0842               	movf	??_dtoa,w
  6029  011C  0081               	movwf	1
  6030                           
  6031                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 302:         --p;
  6032  011D  30FF               	movlw	255
  6033  011E  07C8               	addwf	dtoa@p,f
  6034  011F  30FF               	movlw	255
  6035  0120  3DC9               	addwfc	dtoa@p+1,f
  6036                           
  6037                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 303:         --w;
  6038  0121  30FF               	movlw	255
  6039  0122  07CA               	addwf	dtoa@w,f
  6040  0123  30FF               	movlw	255
  6041  0124  3DCB               	addwfc	dtoa@w+1,f
  6042                           
  6043                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 304:         n = n / 1
      +                          0;
  6044  0125  300A               	movlw	10
  6045  0126  00A0               	movwf	___aodiv@divisor
  6046  0127  01A1               	clrf	___aodiv@divisor+1
  6047  0128  01A2               	clrf	___aodiv@divisor+2
  6048  0129  01A3               	clrf	___aodiv@divisor+3
  6049  012A  01A4               	clrf	___aodiv@divisor+4
  6050  012B  01A5               	clrf	___aodiv@divisor+5
  6051  012C  01A6               	clrf	___aodiv@divisor+6
  6052  012D  01A7               	clrf	___aodiv@divisor+7
  6053  012E  084E               	movf	dtoa@n,w
  6054  012F  00A8               	movwf	___aodiv@dividend
  6055  0130  084F               	movf	dtoa@n+1,w
  6056  0131  00A9               	movwf	___aodiv@dividend+1
  6057  0132  0850               	movf	dtoa@n+2,w
  6058  0133  00AA               	movwf	___aodiv@dividend+2
  6059  0134  0851               	movf	dtoa@n+3,w
  6060  0135  00AB               	movwf	___aodiv@dividend+3
  6061  0136  0852               	movf	dtoa@n+4,w
  6062  0137  00AC               	movwf	___aodiv@dividend+4
  6063  0138  0853               	movf	dtoa@n+5,w
  6064  0139  00AD               	movwf	___aodiv@dividend+5
  6065  013A  0854               	movf	dtoa@n+6,w
  6066  013B  00AE               	movwf	___aodiv@dividend+6
  6067  013C  0855               	movf	dtoa@n+7,w
  6068  013D  00AF               	movwf	___aodiv@dividend+7
  6069  013E  3183  23B9  3180   	fcall	___aodiv
  6070  0141  0020               	movlb	0	; select bank0
  6071  0142  0820               	movf	?___aodiv,w
  6072  0143  00CE               	movwf	dtoa@n
  6073  0144  0821               	movf	?___aodiv+1,w
  6074  0145  00CF               	movwf	dtoa@n+1
  6075  0146  0822               	movf	?___aodiv+2,w
  6076  0147  00D0               	movwf	dtoa@n+2
  6077  0148  0823               	movf	?___aodiv+3,w
  6078  0149  00D1               	movwf	dtoa@n+3
  6079  014A  0824               	movf	?___aodiv+4,w
  6080  014B  00D2               	movwf	dtoa@n+4
  6081  014C  0825               	movf	?___aodiv+5,w
  6082  014D  00D3               	movwf	dtoa@n+5
  6083  014E  0826               	movf	?___aodiv+6,w
  6084  014F  00D4               	movwf	dtoa@n+6
  6085  0150  0827               	movf	?___aodiv+7,w
  6086  0151  00D5               	movwf	dtoa@n+7
  6087  0152                     l499:	
  6088                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 305:     }
  6089                           
  6090                           
  6091                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 299:     while (!(i < 
      +                          1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6092  0152  0020               	movlb	0	; select bank0
  6093  0153  0857               	movf	dtoa@i+1,w
  6094  0154  3A80               	xorlw	128
  6095  0155  00C2               	movwf	??_dtoa
  6096  0156  3080               	movlw	128
  6097  0157  0242               	subwf	??_dtoa,w
  6098  0158  1D03               	skipz
  6099  0159  295C               	goto	u2445
  6100  015A  3001               	movlw	1
  6101  015B  0256               	subwf	dtoa@i,w
  6102  015C                     u2445:	
  6103  015C  1803               	btfsc	3,0
  6104  015D  28C6               	goto	l2802
  6105  015E                     l2810:	
  6106                           
  6107                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 308:     if (s || (fla
      +                          gs & (1 << 2))) {
  6108  015E  0020               	movlb	0	; select bank0
  6109  015F  084C               	movf	dtoa@s,w
  6110  0160  044D               	iorwf	dtoa@s+1,w
  6111  0161  1D03               	btfss	3,2
  6112  0162  2965               	goto	l2814
  6113  0163  1D7A               	btfss	_flags,2
  6114  0164  297C               	goto	l2824
  6115  0165                     l2814:	
  6116                           
  6117                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 309:         --i;
  6118  0165  30FF               	movlw	255
  6119  0166  07D6               	addwf	dtoa@i,f
  6120  0167  30FF               	movlw	255
  6121  0168  3DD7               	addwfc	dtoa@i+1,f
  6122                           
  6123                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 310:         dbuf[i] =
      +                           s ? '-' : '+';
  6124  0169  084C               	movf	dtoa@s,w
  6125  016A  044D               	iorwf	dtoa@s+1,w
  6126  016B  1D03               	btfss	3,2
  6127  016C  296F               	goto	l2820
  6128  016D  302B               	movlw	43
  6129  016E  2970               	goto	L2
  6130  016F                     l2820:	
  6131  016F  302D               	movlw	45
  6132  0170                     L2:	
  6133  0170  00C6               	movwf	_dtoa$701
  6134  0171  3000               	movlw	0
  6135  0172  00C7               	movwf	_dtoa$701+1
  6136  0173  0846               	movf	_dtoa$701,w
  6137  0174  00C2               	movwf	??_dtoa
  6138  0175  0856               	movf	dtoa@i,w
  6139  0176  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  6140  0177  0086               	movwf	6
  6141  0178  3001               	movlw	1	; select bank3/4
  6142  0179  0087               	movwf	7
  6143  017A  0842               	movf	??_dtoa,w
  6144  017B  0081               	movwf	1
  6145  017C                     l2824:	
  6146                           
  6147                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 314:     return pad(fp
      +                          , &dbuf[i], w);
  6148  017C  0856               	movf	dtoa@i,w
  6149  017D  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  6150  017E  00C2               	movwf	??_dtoa
  6151  017F  0842               	movf	??_dtoa,w
  6152  0180  00AA               	movwf	pad@buf
  6153  0181  084B               	movf	dtoa@w+1,w
  6154  0182  00AC               	movwf	pad@p+1
  6155  0183  084A               	movf	dtoa@w,w
  6156  0184  00AB               	movwf	pad@p
  6157  0185  0845               	movf	dtoa@fp,w
  6158  0186  318F  275E         	fcall	_pad
  6159  0188  0020               	movlb	0	; select bank0
  6160  0189  082B               	movf	?_pad+1,w
  6161  018A  00BB               	movwf	?_dtoa+1
  6162  018B  082A               	movf	?_pad,w
  6163  018C  00BA               	movwf	?_dtoa
  6164  018D  0008               	return
  6165  018E                     __end_of_dtoa:	
  6166                           
  6167                           	psect	text14
  6168  0F5E                     __ptext14:	
  6169 ;; *************** function _pad *****************
  6170 ;; Defined at:
  6171 ;;		line 72 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c"
  6172 ;; Parameters:    Size  Location     Type
  6173 ;;  fp              1    wreg     PTR struct _IO_FILE
  6174 ;;		 -> sprintf@f(5), NULL(0), 
  6175 ;;  buf             1   10[BANK0 ] PTR unsigned char 
  6176 ;;		 -> dbuf(32), 
  6177 ;;  p               2   11[BANK0 ] int 
  6178 ;; Auto vars:     Size  Location     Type
  6179 ;;  fp              1   18[BANK0 ] PTR struct _IO_FILE
  6180 ;;		 -> sprintf@f(5), NULL(0), 
  6181 ;;  w               2   16[BANK0 ] int 
  6182 ;;  i               2   14[BANK0 ] int 
  6183 ;; Return value:  Size  Location     Type
  6184 ;;                  2   10[BANK0 ] int 
  6185 ;; Registers used:
  6186 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6187 ;; Tracked objects:
  6188 ;;		On entry : 0/0
  6189 ;;		On exit  : 0/0
  6190 ;;		Unchanged: 0/0
  6191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6192 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6193 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6194 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6195 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6196 ;;Total ram usage:        9 bytes
  6197 ;; Hardware stack levels used:    1
  6198 ;; Hardware stack levels required when called:    8
  6199 ;; This function calls:
  6200 ;;		_fputc
  6201 ;;		_fputs
  6202 ;;		_strlen
  6203 ;; This function is called by:
  6204 ;;		_dtoa
  6205 ;; This function uses a non-reentrant model
  6206 ;;
  6207                           
  6208                           
  6209                           ;psect for function _pad
  6210  0F5E                     _pad:	
  6211                           
  6212                           ;incstack = 0
  6213                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6214                           ;pad@fp stored from wreg
  6215  0F5E  0020               	movlb	0	; select bank0
  6216  0F5F  00B2               	movwf	pad@fp
  6217                           
  6218                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 72: static int pad(FIL
      +                          E *fp, char *buf, int p);K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c
      +                          : 73: {;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 74:     int i, 
      +                          w;;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 77:     if (flags & 
      +                          (1 << 0)) {
  6219  0F60  1C7A               	btfss	_flags,0
  6220  0F61  2F6A               	goto	l2680
  6221                           
  6222                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 78:         fputs((con
      +                          st char *)buf, fp);
  6223  0F62  0832               	movf	pad@fp,w
  6224  0F63  00AD               	movwf	??_pad
  6225  0F64  082D               	movf	??_pad,w
  6226  0F65  00A5               	movwf	fputs@fp
  6227  0F66  082A               	movf	pad@buf,w
  6228  0F67  318D  259E  318F   	fcall	_fputs
  6229  0F6A                     l2680:	
  6230                           
  6231                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 82:     w = (p < 0) ? 
      +                          0 : p;
  6232  0F6A  0020               	movlb	0	; select bank0
  6233  0F6B  1BAC               	btfsc	pad@p+1,7
  6234  0F6C  2F72               	goto	l2684
  6235  0F6D  082C               	movf	pad@p+1,w
  6236  0F6E  00B1               	movwf	pad@w+1
  6237  0F6F  082B               	movf	pad@p,w
  6238  0F70  00B0               	movwf	pad@w
  6239  0F71  2F74               	goto	l482
  6240  0F72                     l2684:	
  6241  0F72  01B0               	clrf	pad@w
  6242  0F73  01B1               	clrf	pad@w+1
  6243  0F74                     l482:	
  6244                           
  6245                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  6246  0F74  01AE               	clrf	pad@i
  6247  0F75  01AF               	clrf	pad@i+1
  6248  0F76                     l2690:	
  6249                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 84:     while (i < w) 
      +                          {
  6250                           
  6251                           
  6252                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 84:     while (i < w) 
      +                          {
  6253  0F76  082F               	movf	pad@i+1,w
  6254  0F77  3A80               	xorlw	128
  6255  0F78  00AD               	movwf	??_pad
  6256  0F79  0831               	movf	pad@w+1,w
  6257  0F7A  3A80               	xorlw	128
  6258  0F7B  022D               	subwf	??_pad,w
  6259  0F7C  1D03               	skipz
  6260  0F7D  2F80               	goto	u2125
  6261  0F7E  0830               	movf	pad@w,w
  6262  0F7F  022E               	subwf	pad@i,w
  6263  0F80                     u2125:	
  6264  0F80  1803               	btfsc	3,0
  6265  0F81  2F94               	goto	l485
  6266                           
  6267                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 85:         fputc(' ',
      +                           fp);
  6268  0F82  3020               	movlw	32
  6269  0F83  00F4               	movwf	fputc@c
  6270  0F84  3000               	movlw	0
  6271  0F85  00F5               	movwf	fputc@c+1
  6272  0F86  0020               	movlb	0	; select bank0
  6273  0F87  0832               	movf	pad@fp,w
  6274  0F88  00AD               	movwf	??_pad
  6275  0F89  082D               	movf	??_pad,w
  6276  0F8A  00F6               	movwf	fputc@fp
  6277  0F8B  318E  26CB  318F   	fcall	_fputc
  6278                           
  6279                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 86:         ++i;
  6280  0F8E  3001               	movlw	1
  6281  0F8F  0020               	movlb	0	; select bank0
  6282  0F90  07AE               	addwf	pad@i,f
  6283  0F91  3000               	movlw	0
  6284  0F92  3DAF               	addwfc	pad@i+1,f
  6285  0F93  2F76               	goto	l2690
  6286  0F94                     l485:	
  6287                           
  6288                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 90:     if (!(flags & 
      +                          (1 << 0))) {
  6289  0F94  187A               	btfsc	_flags,0
  6290  0F95  2F9F               	goto	l2694
  6291                           
  6292                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 91:         fputs((con
      +                          st char *)buf, fp);
  6293  0F96  0020               	movlb	0	; select bank0
  6294  0F97  0832               	movf	pad@fp,w
  6295  0F98  00AD               	movwf	??_pad
  6296  0F99  082D               	movf	??_pad,w
  6297  0F9A  00A5               	movwf	fputs@fp
  6298  0F9B  082A               	movf	pad@buf,w
  6299  0F9C  318D  259E  318F   	fcall	_fputs
  6300  0F9F                     l2694:	
  6301                           
  6302                           ;K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\doprnt.c: 94:     return strlen(
      +                          buf) + w;
  6303  0F9F  0020               	movlb	0	; select bank0
  6304  0FA0  082A               	movf	pad@buf,w
  6305  0FA1  00F2               	movwf	strlen@s
  6306  0FA2  3001               	movlw	1
  6307  0FA3  00F3               	movwf	strlen@s+1
  6308  0FA4  318D  2520         	fcall	_strlen
  6309  0FA6  0020               	movlb	0	; select bank0
  6310  0FA7  0830               	movf	pad@w,w
  6311  0FA8  0772               	addwf	?_strlen,w
  6312  0FA9  00AA               	movwf	?_pad
  6313  0FAA  0831               	movf	pad@w+1,w
  6314  0FAB  3D73               	addwfc	?_strlen+1,w
  6315  0FAC  00AB               	movwf	?_pad+1
  6316  0FAD  0008               	return
  6317  0FAE                     __end_of_pad:	
  6318                           
  6319                           	psect	text15
  6320  0D9E                     __ptext15:	
  6321 ;; *************** function _fputs *****************
  6322 ;; Defined at:
  6323 ;;		line 8 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\nf_fputs.c"
  6324 ;; Parameters:    Size  Location     Type
  6325 ;;  s               1    wreg     PTR const unsigned char 
  6326 ;;		 -> dbuf(32), 
  6327 ;;  fp              1    5[BANK0 ] PTR struct _IO_FILE
  6328 ;;		 -> sprintf@f(5), NULL(0), 
  6329 ;; Auto vars:     Size  Location     Type
  6330 ;;  s               1    9[BANK0 ] PTR const unsigned char 
  6331 ;;		 -> dbuf(32), 
  6332 ;;  i               2    7[BANK0 ] int 
  6333 ;;  c               1    6[BANK0 ] unsigned char 
  6334 ;; Return value:  Size  Location     Type
  6335 ;;                  2    5[BANK0 ] int 
  6336 ;; Registers used:
  6337 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6338 ;; Tracked objects:
  6339 ;;		On entry : 0/0
  6340 ;;		On exit  : 0/0
  6341 ;;		Unchanged: 0/0
  6342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6343 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6344 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6345 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6346 ;;      Totals:         3       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6347 ;;Total ram usage:        8 bytes
  6348 ;; Hardware stack levels used:    1
  6349 ;; Hardware stack levels required when called:    7
  6350 ;; This function calls:
  6351 ;;		_fputc
  6352 ;; This function is called by:
  6353 ;;		_pad
  6354 ;; This function uses a non-reentrant model
  6355 ;;
  6356                           
  6357                           
  6358                           ;psect for function _fputs
  6359  0D9E                     _fputs:	
  6360                           
  6361                           ;incstack = 0
  6362                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6363                           ;fputs@s stored from wreg
  6364  0D9E  0020               	movlb	0	; select bank0
  6365  0D9F  00A9               	movwf	fputs@s
  6366  0DA0  01A7               	clrf	fputs@i
  6367  0DA1  01A8               	clrf	fputs@i+1
  6368  0DA2                     l2674:	
  6369  0DA2  0827               	movf	fputs@i,w
  6370  0DA3  0729               	addwf	fputs@s,w
  6371  0DA4  00F7               	movwf	??_fputs
  6372  0DA5  0877               	movf	??_fputs,w
  6373  0DA6  0086               	movwf	6
  6374  0DA7  3001               	movlw	1	; select bank2/3
  6375  0DA8  0087               	movwf	7
  6376  0DA9  0801               	movf	1,w
  6377  0DAA  00F8               	movwf	??_fputs+1
  6378  0DAB  0878               	movf	??_fputs+1,w
  6379  0DAC  00A6               	movwf	fputs@c
  6380  0DAD  0826               	movf	fputs@c,w
  6381  0DAE  1903               	btfsc	3,2
  6382  0DAF  0008               	return
  6383  0DB0  0826               	movf	fputs@c,w
  6384  0DB1  00F7               	movwf	??_fputs
  6385  0DB2  01F8               	clrf	??_fputs+1
  6386  0DB3  0877               	movf	??_fputs,w
  6387  0DB4  00F4               	movwf	fputc@c
  6388  0DB5  0878               	movf	??_fputs+1,w
  6389  0DB6  00F5               	movwf	fputc@c+1
  6390  0DB7  0825               	movf	fputs@fp,w
  6391  0DB8  00F9               	movwf	??_fputs+2
  6392  0DB9  0879               	movf	??_fputs+2,w
  6393  0DBA  00F6               	movwf	fputc@fp
  6394  0DBB  318E  26CB  318D   	fcall	_fputc
  6395  0DBE  3001               	movlw	1
  6396  0DBF  0020               	movlb	0	; select bank0
  6397  0DC0  07A7               	addwf	fputs@i,f
  6398  0DC1  3000               	movlw	0
  6399  0DC2  3DA8               	addwfc	fputs@i+1,f
  6400  0DC3  2DA2               	goto	l2674
  6401  0DC4                     __end_of_fputs:	
  6402                           
  6403                           	psect	text16
  6404  0ECB                     __ptext16:	
  6405 ;; *************** function _fputc *****************
  6406 ;; Defined at:
  6407 ;;		line 8 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\nf_fputc.c"
  6408 ;; Parameters:    Size  Location     Type
  6409 ;;  c               2    4[COMMON] int 
  6410 ;;  fp              1    6[COMMON] PTR struct _IO_FILE
  6411 ;;		 -> sprintf@f(5), NULL(0), 
  6412 ;; Auto vars:     Size  Location     Type
  6413 ;;		None
  6414 ;; Return value:  Size  Location     Type
  6415 ;;                  2    4[COMMON] int 
  6416 ;; Registers used:
  6417 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6418 ;; Tracked objects:
  6419 ;;		On entry : 0/0
  6420 ;;		On exit  : 0/0
  6421 ;;		Unchanged: 0/0
  6422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6423 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6425 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6426 ;;      Totals:         3       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6427 ;;Total ram usage:        8 bytes
  6428 ;; Hardware stack levels used:    1
  6429 ;; Hardware stack levels required when called:    6
  6430 ;; This function calls:
  6431 ;;		_putch
  6432 ;; This function is called by:
  6433 ;;		_pad
  6434 ;;		_stoa
  6435 ;;		_vfpfcnvrt
  6436 ;;		_fputs
  6437 ;; This function uses a non-reentrant model
  6438 ;;
  6439                           
  6440                           
  6441                           ;psect for function _fputc
  6442  0ECB                     _fputc:	
  6443                           
  6444                           ;incstack = 0
  6445                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6446  0ECB  0876               	movf	fputc@fp,w
  6447  0ECC  1D03               	btfss	3,2
  6448  0ECD  0876               	movf	fputc@fp,w
  6449  0ECE  1D03               	btfss	3,2
  6450  0ECF  2ED4               	goto	l2648
  6451  0ED0  0874               	movf	fputc@c,w
  6452  0ED1  318C  2486         	fcall	_putch
  6453  0ED3  0008               	return
  6454  0ED4                     l2648:	
  6455  0ED4  0876               	movf	fputc@fp,w
  6456  0ED5  3E03               	addlw	3
  6457  0ED6  0086               	movwf	6
  6458  0ED7  0187               	clrf	7
  6459  0ED8  0016               	moviw fsr1++
  6460  0ED9  0401               	iorwf	1,w
  6461  0EDA  1903               	btfsc	3,2
  6462  0EDB  2EF8               	goto	l2652
  6463  0EDC  0876               	movf	fputc@fp,w
  6464  0EDD  3E03               	addlw	3
  6465  0EDE  0086               	movwf	6
  6466  0EDF  0187               	clrf	7
  6467  0EE0  3F40               	moviw [0]fsr1
  6468  0EE1  0020               	movlb	0	; select bank0
  6469  0EE2  00A0               	movwf	??_fputc
  6470  0EE3  3F41               	moviw [1]fsr1
  6471  0EE4  00A1               	movwf	??_fputc+1
  6472  0EE5  0A76               	incf	fputc@fp,w
  6473  0EE6  0086               	movwf	6
  6474  0EE7  0187               	clrf	7
  6475  0EE8  3F40               	moviw [0]fsr1
  6476  0EE9  00A2               	movwf	??_fputc+2
  6477  0EEA  3F41               	moviw [1]fsr1
  6478  0EEB  00A3               	movwf	??_fputc+3
  6479  0EEC  0823               	movf	??_fputc+3,w
  6480  0EED  3A80               	xorlw	128
  6481  0EEE  00A4               	movwf	??_fputc+4
  6482  0EEF  0821               	movf	??_fputc+1,w
  6483  0EF0  3A80               	xorlw	128
  6484  0EF1  0224               	subwf	??_fputc+4,w
  6485  0EF2  1D03               	skipz
  6486  0EF3  2EF6               	goto	u2075
  6487  0EF4  0820               	movf	??_fputc,w
  6488  0EF5  0222               	subwf	??_fputc+2,w
  6489  0EF6                     u2075:	
  6490  0EF6  1803               	skipnc
  6491  0EF7  0008               	return
  6492  0EF8                     l2652:	
  6493  0EF8  0874               	movf	fputc@c,w
  6494  0EF9  0020               	movlb	0	; select bank0
  6495  0EFA  00A0               	movwf	??_fputc
  6496  0EFB  0876               	movf	fputc@fp,w
  6497  0EFC  0086               	movwf	6
  6498  0EFD  0187               	clrf	7
  6499  0EFE  0A76               	incf	fputc@fp,w
  6500  0EFF  0084               	movwf	4
  6501  0F00  0185               	clrf	5
  6502  0F01  0800               	movf	0,w
  6503  0F02  0701               	addwf	1,w
  6504  0F03  00A1               	movwf	??_fputc+1
  6505  0F04  0821               	movf	??_fputc+1,w
  6506  0F05  0086               	movwf	6
  6507  0F06  3002               	movlw	2	; select bank4/5
  6508  0F07  0087               	movwf	7
  6509  0F08  0820               	movf	??_fputc,w
  6510  0F09  0081               	movwf	1
  6511  0F0A  0A76               	incf	fputc@fp,w
  6512  0F0B  0086               	movwf	6
  6513  0F0C  0187               	clrf	7
  6514  0F0D  3001               	movlw	1
  6515  0F0E  0781               	addwf	1,f
  6516  0F0F  3141               	addfsr 1,1
  6517  0F10  1803               	skipnc
  6518  0F11  0A81               	incf	1,f
  6519  0F12  0008               	return
  6520  0F13                     __end_of_fputc:	
  6521                           
  6522                           	psect	text17
  6523  0C86                     __ptext17:	
  6524 ;; *************** function _putch *****************
  6525 ;; Defined at:
  6526 ;;		line 125 in file "mcc_generated_files/eusart.c"
  6527 ;; Parameters:    Size  Location     Type
  6528 ;;  txData          1    wreg     unsigned char 
  6529 ;; Auto vars:     Size  Location     Type
  6530 ;;  txData          1    3[COMMON] unsigned char 
  6531 ;; Return value:  Size  Location     Type
  6532 ;;                  1    wreg      void 
  6533 ;; Registers used:
  6534 ;;		wreg, status,2, status,0, pclath, cstack
  6535 ;; Tracked objects:
  6536 ;;		On entry : 0/0
  6537 ;;		On exit  : 0/0
  6538 ;;		Unchanged: 0/0
  6539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6541 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6543 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6544 ;;Total ram usage:        1 bytes
  6545 ;; Hardware stack levels used:    1
  6546 ;; Hardware stack levels required when called:    5
  6547 ;; This function calls:
  6548 ;;		_EUSART_Write
  6549 ;; This function is called by:
  6550 ;;		_fputc
  6551 ;; This function uses a non-reentrant model
  6552 ;;
  6553                           
  6554                           
  6555                           ;psect for function _putch
  6556  0C86                     _putch:	
  6557                           
  6558                           ;incstack = 0
  6559                           ; Regs used in _putch: [wreg+status,2+status,0+pclath+cstack]
  6560                           ;putch@txData stored from wreg
  6561  0C86  00F3               	movwf	putch@txData
  6562                           
  6563                           ;mcc_generated_files/eusart.c: 125: void putch(char txData);mcc_generated_files/eusart.c
      +                          : 126: {;mcc_generated_files/eusart.c: 127:     EUSART_Write(txData);
  6564  0C87  0873               	movf	putch@txData,w
  6565  0C88  318C  24AB         	fcall	_EUSART_Write
  6566  0C8A  0008               	return
  6567  0C8B                     __end_of_putch:	
  6568                           
  6569                           	psect	text18
  6570  0D37                     __ptext18:	
  6571 ;; *************** function _abs *****************
  6572 ;; Defined at:
  6573 ;;		line 1 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\abs.c"
  6574 ;; Parameters:    Size  Location     Type
  6575 ;;  a               2    5[COMMON] int 
  6576 ;; Auto vars:     Size  Location     Type
  6577 ;;		None
  6578 ;; Return value:  Size  Location     Type
  6579 ;;                  2    5[COMMON] int 
  6580 ;; Registers used:
  6581 ;;		wreg, status,2, status,0
  6582 ;; Tracked objects:
  6583 ;;		On entry : 0/0
  6584 ;;		On exit  : 0/0
  6585 ;;		Unchanged: 0/0
  6586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6587 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6589 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6590 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6591 ;;Total ram usage:        4 bytes
  6592 ;; Hardware stack levels used:    1
  6593 ;; Hardware stack levels required when called:    4
  6594 ;; This function calls:
  6595 ;;		Nothing
  6596 ;; This function is called by:
  6597 ;;		_dtoa
  6598 ;; This function uses a non-reentrant model
  6599 ;;
  6600                           
  6601                           
  6602                           ;psect for function _abs
  6603  0D37                     _abs:	
  6604                           
  6605                           ;incstack = 0
  6606                           ; Regs used in _abs: [wreg+status,2+status,0]
  6607  0D37  0876               	movf	abs@a+1,w
  6608  0D38  3A80               	xorlw	128
  6609  0D39  00F7               	movwf	??_abs
  6610  0D3A  3080               	movlw	128
  6611  0D3B  0277               	subwf	??_abs,w
  6612  0D3C  1D03               	skipz
  6613  0D3D  2D40               	goto	u2145
  6614  0D3E  3001               	movlw	1
  6615  0D3F  0275               	subwf	abs@a,w
  6616  0D40                     u2145:	
  6617  0D40  1803               	skipnc
  6618  0D41  0008               	return
  6619  0D42  0975               	comf	abs@a,w
  6620  0D43  00F7               	movwf	??_abs
  6621  0D44  0976               	comf	abs@a+1,w
  6622  0D45  00F8               	movwf	??_abs+1
  6623  0D46  0AF7               	incf	??_abs,f
  6624  0D47  1903               	skipnz
  6625  0D48  0AF8               	incf	??_abs+1,f
  6626  0D49  0877               	movf	??_abs,w
  6627  0D4A  00F5               	movwf	?_abs
  6628  0D4B  0878               	movf	??_abs+1,w
  6629  0D4C  00F6               	movwf	?_abs+1
  6630  0D4D  0008               	return
  6631  0D4E                     __end_of_abs:	
  6632                           
  6633                           	psect	text19
  6634  04AF                     __ptext19:	
  6635 ;; *************** function ___aomod *****************
  6636 ;; Defined at:
  6637 ;;		line 7 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\aomod.c"
  6638 ;; Parameters:    Size  Location     Type
  6639 ;;  divisor         8    0[BANK0 ] long long 
  6640 ;;  dividend        8    8[BANK0 ] long long 
  6641 ;; Auto vars:     Size  Location     Type
  6642 ;;  sign            1    4[COMMON] unsigned char 
  6643 ;;  counter         1    3[COMMON] unsigned char 
  6644 ;; Return value:  Size  Location     Type
  6645 ;;                  8    0[BANK0 ] long long 
  6646 ;; Registers used:
  6647 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6648 ;; Tracked objects:
  6649 ;;		On entry : 0/0
  6650 ;;		On exit  : 0/0
  6651 ;;		Unchanged: 0/0
  6652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6653 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6654 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6655 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6656 ;;      Totals:         3      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6657 ;;Total ram usage:       19 bytes
  6658 ;; Hardware stack levels used:    1
  6659 ;; Hardware stack levels required when called:    4
  6660 ;; This function calls:
  6661 ;;		Nothing
  6662 ;; This function is called by:
  6663 ;;		_dtoa
  6664 ;; This function uses a non-reentrant model
  6665 ;;
  6666                           
  6667                           
  6668                           ;psect for function ___aomod
  6669  04AF                     ___aomod:	
  6670                           
  6671                           ;incstack = 0
  6672                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  6673  04AF  01F4               	clrf	___aomod@sign
  6674  04B0  3028               	movlw	low ___aomod@dividend
  6675  04B1  0086               	movwf	6
  6676  04B2  3000               	movlw	high ___aomod@dividend
  6677  04B3  0087               	movwf	7
  6678  04B4  3F47               	moviw [7]fsr1
  6679  04B5  00F2               	movwf	??___aomod
  6680  04B6  1FF2               	btfss	??___aomod,7
  6681  04B7  2CD9               	goto	l2746
  6682  04B8  0020               	movlb	0	; select bank0
  6683  04B9  09A8               	comf	___aomod@dividend,f
  6684  04BA  09A9               	comf	___aomod@dividend+1,f
  6685  04BB  09AA               	comf	___aomod@dividend+2,f
  6686  04BC  09AB               	comf	___aomod@dividend+3,f
  6687  04BD  09AC               	comf	___aomod@dividend+4,f
  6688  04BE  09AD               	comf	___aomod@dividend+5,f
  6689  04BF  09AE               	comf	___aomod@dividend+6,f
  6690  04C0  09AF               	comf	___aomod@dividend+7,f
  6691  04C1  0AA8               	incf	___aomod@dividend,f
  6692  04C2  1D03               	skipz
  6693  04C3  2CD7               	goto	u227lld
  6694  04C4  0AA9               	incf	___aomod@dividend+1,f
  6695  04C5  1D03               	skipz
  6696  04C6  2CD7               	goto	u227lld
  6697  04C7  0AAA               	incf	___aomod@dividend+2,f
  6698  04C8  1D03               	skipz
  6699  04C9  2CD7               	goto	u227lld
  6700  04CA  0AAB               	incf	___aomod@dividend+3,f
  6701  04CB  1D03               	skipz
  6702  04CC  2CD7               	goto	u227lld
  6703  04CD  0AAC               	incf	___aomod@dividend+4,f
  6704  04CE  1D03               	skipz
  6705  04CF  2CD7               	goto	u227lld
  6706  04D0  0AAD               	incf	___aomod@dividend+5,f
  6707  04D1  1D03               	skipz
  6708  04D2  2CD7               	goto	u227lld
  6709  04D3  0AAE               	incf	___aomod@dividend+6,f
  6710  04D4  1D03               	skipz
  6711  04D5  2CD7               	goto	u227lld
  6712  04D6  0AAF               	incf	___aomod@dividend+7,f
  6713  04D7                     u227lld:	
  6714  04D7  01F4               	clrf	___aomod@sign
  6715  04D8  0AF4               	incf	___aomod@sign,f
  6716  04D9                     l2746:	
  6717  04D9  3020               	movlw	low ___aomod@divisor
  6718  04DA  0086               	movwf	6
  6719  04DB  3000               	movlw	high ___aomod@divisor
  6720  04DC  0087               	movwf	7
  6721  04DD  3F47               	moviw [7]fsr1
  6722  04DE  00F2               	movwf	??___aomod
  6723  04DF  1FF2               	btfss	??___aomod,7
  6724  04E0  2D00               	goto	l2750
  6725  04E1  0020               	movlb	0	; select bank0
  6726  04E2  09A0               	comf	___aomod@divisor,f
  6727  04E3  09A1               	comf	___aomod@divisor+1,f
  6728  04E4  09A2               	comf	___aomod@divisor+2,f
  6729  04E5  09A3               	comf	___aomod@divisor+3,f
  6730  04E6  09A4               	comf	___aomod@divisor+4,f
  6731  04E7  09A5               	comf	___aomod@divisor+5,f
  6732  04E8  09A6               	comf	___aomod@divisor+6,f
  6733  04E9  09A7               	comf	___aomod@divisor+7,f
  6734  04EA  0AA0               	incf	___aomod@divisor,f
  6735  04EB  1D03               	skipz
  6736  04EC  2D00               	goto	l2750
  6737  04ED  0AA1               	incf	___aomod@divisor+1,f
  6738  04EE  1D03               	skipz
  6739  04EF  2D00               	goto	l2750
  6740  04F0  0AA2               	incf	___aomod@divisor+2,f
  6741  04F1  1D03               	skipz
  6742  04F2  2D00               	goto	l2750
  6743  04F3  0AA3               	incf	___aomod@divisor+3,f
  6744  04F4  1D03               	skipz
  6745  04F5  2D00               	goto	l2750
  6746  04F6  0AA4               	incf	___aomod@divisor+4,f
  6747  04F7  1D03               	skipz
  6748  04F8  2D00               	goto	l2750
  6749  04F9  0AA5               	incf	___aomod@divisor+5,f
  6750  04FA  1D03               	skipz
  6751  04FB  2D00               	goto	l2750
  6752  04FC  0AA6               	incf	___aomod@divisor+6,f
  6753  04FD  1D03               	skipz
  6754  04FE  2D00               	goto	l2750
  6755  04FF  0AA7               	incf	___aomod@divisor+7,f
  6756  0500                     l2750:	
  6757  0500  0020               	movlb	0	; select bank0
  6758  0501  0820               	movf	___aomod@divisor,w
  6759  0502  0421               	iorwf	___aomod@divisor+1,w
  6760  0503  0422               	iorwf	___aomod@divisor+2,w
  6761  0504  0423               	iorwf	___aomod@divisor+3,w
  6762  0505  0424               	iorwf	___aomod@divisor+4,w
  6763  0506  0425               	iorwf	___aomod@divisor+5,w
  6764  0507  0426               	iorwf	___aomod@divisor+6,w
  6765  0508  0427               	iorwf	___aomod@divisor+7,w
  6766  0509  1903               	skipnz
  6767  050A  2D58               	goto	l2766
  6768  050B  01F3               	clrf	___aomod@counter
  6769  050C  0AF3               	incf	___aomod@counter,f
  6770  050D                     l2758:	
  6771  050D  1BA7               	btfsc	___aomod@divisor+7,7
  6772  050E  2D1C               	goto	l2760
  6773  050F  35A0               	lslf	___aomod@divisor,f
  6774  0510  0DA1               	rlf	___aomod@divisor+1,f
  6775  0511  0DA2               	rlf	___aomod@divisor+2,f
  6776  0512  0DA3               	rlf	___aomod@divisor+3,f
  6777  0513  0DA4               	rlf	___aomod@divisor+4,f
  6778  0514  0DA5               	rlf	___aomod@divisor+5,f
  6779  0515  0DA6               	rlf	___aomod@divisor+6,f
  6780  0516  0DA7               	rlf	___aomod@divisor+7,f
  6781  0517  3001               	movlw	1
  6782  0518  00F2               	movwf	??___aomod
  6783  0519  0872               	movf	??___aomod,w
  6784  051A  07F3               	addwf	___aomod@counter,f
  6785  051B  2D0D               	goto	l2758
  6786  051C                     l2760:	
  6787  051C  0827               	movf	___aomod@divisor+7,w
  6788  051D  022F               	subwf	___aomod@dividend+7,w
  6789  051E  1D03               	skipz
  6790  051F  2D3A               	goto	u2325
  6791  0520  0826               	movf	___aomod@divisor+6,w
  6792  0521  022E               	subwf	___aomod@dividend+6,w
  6793  0522  1D03               	skipz
  6794  0523  2D3A               	goto	u2325
  6795  0524  0825               	movf	___aomod@divisor+5,w
  6796  0525  022D               	subwf	___aomod@dividend+5,w
  6797  0526  1D03               	skipz
  6798  0527  2D3A               	goto	u2325
  6799  0528  0824               	movf	___aomod@divisor+4,w
  6800  0529  022C               	subwf	___aomod@dividend+4,w
  6801  052A  1D03               	skipz
  6802  052B  2D3A               	goto	u2325
  6803  052C  0823               	movf	___aomod@divisor+3,w
  6804  052D  022B               	subwf	___aomod@dividend+3,w
  6805  052E  1D03               	skipz
  6806  052F  2D3A               	goto	u2325
  6807  0530  0822               	movf	___aomod@divisor+2,w
  6808  0531  022A               	subwf	___aomod@dividend+2,w
  6809  0532  1D03               	skipz
  6810  0533  2D3A               	goto	u2325
  6811  0534  0821               	movf	___aomod@divisor+1,w
  6812  0535  0229               	subwf	___aomod@dividend+1,w
  6813  0536  1D03               	skipz
  6814  0537  2D3A               	goto	u2325
  6815  0538  0820               	movf	___aomod@divisor,w
  6816  0539  0228               	subwf	___aomod@dividend,w
  6817  053A                     u2325:	
  6818  053A  1C03               	skipc
  6819  053B  2D4C               	goto	l2764
  6820  053C  0820               	movf	___aomod@divisor,w
  6821  053D  02A8               	subwf	___aomod@dividend,f
  6822  053E  0821               	movf	___aomod@divisor+1,w
  6823  053F  3BA9               	subwfb	___aomod@dividend+1,f
  6824  0540  0822               	movf	___aomod@divisor+2,w
  6825  0541  3BAA               	subwfb	___aomod@dividend+2,f
  6826  0542  0823               	movf	___aomod@divisor+3,w
  6827  0543  3BAB               	subwfb	___aomod@dividend+3,f
  6828  0544  0824               	movf	___aomod@divisor+4,w
  6829  0545  3BAC               	subwfb	___aomod@dividend+4,f
  6830  0546  0825               	movf	___aomod@divisor+5,w
  6831  0547  3BAD               	subwfb	___aomod@dividend+5,f
  6832  0548  0826               	movf	___aomod@divisor+6,w
  6833  0549  3BAE               	subwfb	___aomod@dividend+6,f
  6834  054A  0827               	movf	___aomod@divisor+7,w
  6835  054B  3BAF               	subwfb	___aomod@dividend+7,f
  6836  054C                     l2764:	
  6837  054C  36A7               	lsrf	___aomod@divisor+7,f
  6838  054D  0CA6               	rrf	___aomod@divisor+6,f
  6839  054E  0CA5               	rrf	___aomod@divisor+5,f
  6840  054F  0CA4               	rrf	___aomod@divisor+4,f
  6841  0550  0CA3               	rrf	___aomod@divisor+3,f
  6842  0551  0CA2               	rrf	___aomod@divisor+2,f
  6843  0552  0CA1               	rrf	___aomod@divisor+1,f
  6844  0553  0CA0               	rrf	___aomod@divisor,f
  6845  0554  3001               	movlw	1
  6846  0555  02F3               	subwf	___aomod@counter,f
  6847  0556  1D03               	btfss	3,2
  6848  0557  2D1C               	goto	l2760
  6849  0558                     l2766:	
  6850  0558  0874               	movf	___aomod@sign,w
  6851  0559  1903               	btfsc	3,2
  6852  055A  2D79               	goto	l668
  6853  055B  09A8               	comf	___aomod@dividend,f
  6854  055C  09A9               	comf	___aomod@dividend+1,f
  6855  055D  09AA               	comf	___aomod@dividend+2,f
  6856  055E  09AB               	comf	___aomod@dividend+3,f
  6857  055F  09AC               	comf	___aomod@dividend+4,f
  6858  0560  09AD               	comf	___aomod@dividend+5,f
  6859  0561  09AE               	comf	___aomod@dividend+6,f
  6860  0562  09AF               	comf	___aomod@dividend+7,f
  6861  0563  0AA8               	incf	___aomod@dividend,f
  6862  0564  1D03               	skipz
  6863  0565  2D79               	goto	l668
  6864  0566  0AA9               	incf	___aomod@dividend+1,f
  6865  0567  1D03               	skipz
  6866  0568  2D79               	goto	l668
  6867  0569  0AAA               	incf	___aomod@dividend+2,f
  6868  056A  1D03               	skipz
  6869  056B  2D79               	goto	l668
  6870  056C  0AAB               	incf	___aomod@dividend+3,f
  6871  056D  1D03               	skipz
  6872  056E  2D79               	goto	l668
  6873  056F  0AAC               	incf	___aomod@dividend+4,f
  6874  0570  1D03               	skipz
  6875  0571  2D79               	goto	l668
  6876  0572  0AAD               	incf	___aomod@dividend+5,f
  6877  0573  1D03               	skipz
  6878  0574  2D79               	goto	l668
  6879  0575  0AAE               	incf	___aomod@dividend+6,f
  6880  0576  1D03               	skipz
  6881  0577  2D79               	goto	l668
  6882  0578  0AAF               	incf	___aomod@dividend+7,f
  6883  0579                     l668:	
  6884  0579  0020               	movlb	0	; select bank0
  6885  057A  0828               	movf	___aomod@dividend,w
  6886  057B  00A0               	movwf	?___aomod
  6887  057C  0829               	movf	___aomod@dividend+1,w
  6888  057D  00A1               	movwf	?___aomod+1
  6889  057E  082A               	movf	___aomod@dividend+2,w
  6890  057F  00A2               	movwf	?___aomod+2
  6891  0580  082B               	movf	___aomod@dividend+3,w
  6892  0581  00A3               	movwf	?___aomod+3
  6893  0582  082C               	movf	___aomod@dividend+4,w
  6894  0583  00A4               	movwf	?___aomod+4
  6895  0584  082D               	movf	___aomod@dividend+5,w
  6896  0585  00A5               	movwf	?___aomod+5
  6897  0586  082E               	movf	___aomod@dividend+6,w
  6898  0587  00A6               	movwf	?___aomod+6
  6899  0588  082F               	movf	___aomod@dividend+7,w
  6900  0589  00A7               	movwf	?___aomod+7
  6901  058A  0008               	return
  6902  058B                     __end_of___aomod:	
  6903                           
  6904                           	psect	text20
  6905  03B9                     __ptext20:	
  6906 ;; *************** function ___aodiv *****************
  6907 ;; Defined at:
  6908 ;;		line 7 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\aodiv.c"
  6909 ;; Parameters:    Size  Location     Type
  6910 ;;  divisor         8    0[BANK0 ] long long 
  6911 ;;  dividend        8    8[BANK0 ] long long 
  6912 ;; Auto vars:     Size  Location     Type
  6913 ;;  quotient        8   18[BANK0 ] long long 
  6914 ;;  sign            1   17[BANK0 ] unsigned char 
  6915 ;;  counter         1   16[BANK0 ] unsigned char 
  6916 ;; Return value:  Size  Location     Type
  6917 ;;                  8    0[BANK0 ] long long 
  6918 ;; Registers used:
  6919 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6920 ;; Tracked objects:
  6921 ;;		On entry : 0/0
  6922 ;;		On exit  : 0/0
  6923 ;;		Unchanged: 0/0
  6924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6925 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6926 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6927 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6928 ;;      Totals:         1      26       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6929 ;;Total ram usage:       27 bytes
  6930 ;; Hardware stack levels used:    1
  6931 ;; Hardware stack levels required when called:    4
  6932 ;; This function calls:
  6933 ;;		Nothing
  6934 ;; This function is called by:
  6935 ;;		_dtoa
  6936 ;; This function uses a non-reentrant model
  6937 ;;
  6938                           
  6939                           
  6940                           ;psect for function ___aodiv
  6941  03B9                     ___aodiv:	
  6942                           
  6943                           ;incstack = 0
  6944                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  6945  03B9  0020               	movlb	0	; select bank0
  6946  03BA  01B1               	clrf	___aodiv@sign
  6947  03BB  3020               	movlw	low ___aodiv@divisor
  6948  03BC  0086               	movwf	6
  6949  03BD  3000               	movlw	high ___aodiv@divisor
  6950  03BE  0087               	movwf	7
  6951  03BF  3F47               	moviw [7]fsr1
  6952  03C0  00F2               	movwf	??___aodiv
  6953  03C1  1FF2               	btfss	??___aodiv,7
  6954  03C2  2BE5               	goto	l2708
  6955  03C3  0020               	movlb	0	; select bank0
  6956  03C4  09A0               	comf	___aodiv@divisor,f
  6957  03C5  09A1               	comf	___aodiv@divisor+1,f
  6958  03C6  09A2               	comf	___aodiv@divisor+2,f
  6959  03C7  09A3               	comf	___aodiv@divisor+3,f
  6960  03C8  09A4               	comf	___aodiv@divisor+4,f
  6961  03C9  09A5               	comf	___aodiv@divisor+5,f
  6962  03CA  09A6               	comf	___aodiv@divisor+6,f
  6963  03CB  09A7               	comf	___aodiv@divisor+7,f
  6964  03CC  0AA0               	incf	___aodiv@divisor,f
  6965  03CD  1D03               	skipz
  6966  03CE  2BE2               	goto	u216lld
  6967  03CF  0AA1               	incf	___aodiv@divisor+1,f
  6968  03D0  1D03               	skipz
  6969  03D1  2BE2               	goto	u216lld
  6970  03D2  0AA2               	incf	___aodiv@divisor+2,f
  6971  03D3  1D03               	skipz
  6972  03D4  2BE2               	goto	u216lld
  6973  03D5  0AA3               	incf	___aodiv@divisor+3,f
  6974  03D6  1D03               	skipz
  6975  03D7  2BE2               	goto	u216lld
  6976  03D8  0AA4               	incf	___aodiv@divisor+4,f
  6977  03D9  1D03               	skipz
  6978  03DA  2BE2               	goto	u216lld
  6979  03DB  0AA5               	incf	___aodiv@divisor+5,f
  6980  03DC  1D03               	skipz
  6981  03DD  2BE2               	goto	u216lld
  6982  03DE  0AA6               	incf	___aodiv@divisor+6,f
  6983  03DF  1D03               	skipz
  6984  03E0  2BE2               	goto	u216lld
  6985  03E1  0AA7               	incf	___aodiv@divisor+7,f
  6986  03E2                     u216lld:	
  6987  03E2  0020               	movlb	0	; select bank0
  6988  03E3  01B1               	clrf	___aodiv@sign
  6989  03E4  0AB1               	incf	___aodiv@sign,f
  6990  03E5                     l2708:	
  6991  03E5  3028               	movlw	low ___aodiv@dividend
  6992  03E6  0086               	movwf	6
  6993  03E7  3000               	movlw	high ___aodiv@dividend
  6994  03E8  0087               	movwf	7
  6995  03E9  3F47               	moviw [7]fsr1
  6996  03EA  00F2               	movwf	??___aodiv
  6997  03EB  1FF2               	btfss	??___aodiv,7
  6998  03EC  2C11               	goto	l2714
  6999  03ED  0020               	movlb	0	; select bank0
  7000  03EE  09A8               	comf	___aodiv@dividend,f
  7001  03EF  09A9               	comf	___aodiv@dividend+1,f
  7002  03F0  09AA               	comf	___aodiv@dividend+2,f
  7003  03F1  09AB               	comf	___aodiv@dividend+3,f
  7004  03F2  09AC               	comf	___aodiv@dividend+4,f
  7005  03F3  09AD               	comf	___aodiv@dividend+5,f
  7006  03F4  09AE               	comf	___aodiv@dividend+6,f
  7007  03F5  09AF               	comf	___aodiv@dividend+7,f
  7008  03F6  0AA8               	incf	___aodiv@dividend,f
  7009  03F7  1D03               	skipz
  7010  03F8  2C0C               	goto	l2712
  7011  03F9  0AA9               	incf	___aodiv@dividend+1,f
  7012  03FA  1D03               	skipz
  7013  03FB  2C0C               	goto	l2712
  7014  03FC  0AAA               	incf	___aodiv@dividend+2,f
  7015  03FD  1D03               	skipz
  7016  03FE  2C0C               	goto	l2712
  7017  03FF  0AAB               	incf	___aodiv@dividend+3,f
  7018  0400  1D03               	skipz
  7019  0401  2C0C               	goto	l2712
  7020  0402  0AAC               	incf	___aodiv@dividend+4,f
  7021  0403  1D03               	skipz
  7022  0404  2C0C               	goto	l2712
  7023  0405  0AAD               	incf	___aodiv@dividend+5,f
  7024  0406  1D03               	skipz
  7025  0407  2C0C               	goto	l2712
  7026  0408  0AAE               	incf	___aodiv@dividend+6,f
  7027  0409  1D03               	skipz
  7028  040A  2C0C               	goto	l2712
  7029  040B  0AAF               	incf	___aodiv@dividend+7,f
  7030  040C                     l2712:	
  7031  040C  3001               	movlw	1
  7032  040D  00F2               	movwf	??___aodiv
  7033  040E  0872               	movf	??___aodiv,w
  7034  040F  0020               	movlb	0	; select bank0
  7035  0410  06B1               	xorwf	___aodiv@sign,f
  7036  0411                     l2714:	
  7037  0411  3032               	movlw	low ___aodiv@quotient
  7038  0412  0086               	movwf	6
  7039  0413  3000               	movlw	high ___aodiv@quotient
  7040  0414  0087               	movwf	7
  7041  0415  3008               	movlw	8
  7042  0416  00F2               	movwf	??___aodiv
  7043  0417  3000               	movlw	0
  7044  0418                     u2190:	
  7045  0418  001E               	movwi fsr1++
  7046  0419  0BF2               	decfsz	??___aodiv,f
  7047  041A  2C18               	goto	u2190
  7048  041B  0020               	movlb	0	; select bank0
  7049  041C  0820               	movf	___aodiv@divisor,w
  7050  041D  0421               	iorwf	___aodiv@divisor+1,w
  7051  041E  0422               	iorwf	___aodiv@divisor+2,w
  7052  041F  0423               	iorwf	___aodiv@divisor+3,w
  7053  0420  0424               	iorwf	___aodiv@divisor+4,w
  7054  0421  0425               	iorwf	___aodiv@divisor+5,w
  7055  0422  0426               	iorwf	___aodiv@divisor+6,w
  7056  0423  0427               	iorwf	___aodiv@divisor+7,w
  7057  0424  1903               	skipnz
  7058  0425  2C7C               	goto	l2736
  7059  0426  01B0               	clrf	___aodiv@counter
  7060  0427  0AB0               	incf	___aodiv@counter,f
  7061  0428                     l2724:	
  7062  0428  1BA7               	btfsc	___aodiv@divisor+7,7
  7063  0429  2C37               	goto	l2726
  7064  042A  35A0               	lslf	___aodiv@divisor,f
  7065  042B  0DA1               	rlf	___aodiv@divisor+1,f
  7066  042C  0DA2               	rlf	___aodiv@divisor+2,f
  7067  042D  0DA3               	rlf	___aodiv@divisor+3,f
  7068  042E  0DA4               	rlf	___aodiv@divisor+4,f
  7069  042F  0DA5               	rlf	___aodiv@divisor+5,f
  7070  0430  0DA6               	rlf	___aodiv@divisor+6,f
  7071  0431  0DA7               	rlf	___aodiv@divisor+7,f
  7072  0432  3001               	movlw	1
  7073  0433  00F2               	movwf	??___aodiv
  7074  0434  0872               	movf	??___aodiv,w
  7075  0435  07B0               	addwf	___aodiv@counter,f
  7076  0436  2C28               	goto	l2724
  7077  0437                     l2726:	
  7078  0437  35B2               	lslf	___aodiv@quotient,f
  7079  0438  0DB3               	rlf	___aodiv@quotient+1,f
  7080  0439  0DB4               	rlf	___aodiv@quotient+2,f
  7081  043A  0DB5               	rlf	___aodiv@quotient+3,f
  7082  043B  0DB6               	rlf	___aodiv@quotient+4,f
  7083  043C  0DB7               	rlf	___aodiv@quotient+5,f
  7084  043D  0DB8               	rlf	___aodiv@quotient+6,f
  7085  043E  0DB9               	rlf	___aodiv@quotient+7,f
  7086  043F  0827               	movf	___aodiv@divisor+7,w
  7087  0440  022F               	subwf	___aodiv@dividend+7,w
  7088  0441  1D03               	skipz
  7089  0442  2C5D               	goto	u2225
  7090  0443  0826               	movf	___aodiv@divisor+6,w
  7091  0444  022E               	subwf	___aodiv@dividend+6,w
  7092  0445  1D03               	skipz
  7093  0446  2C5D               	goto	u2225
  7094  0447  0825               	movf	___aodiv@divisor+5,w
  7095  0448  022D               	subwf	___aodiv@dividend+5,w
  7096  0449  1D03               	skipz
  7097  044A  2C5D               	goto	u2225
  7098  044B  0824               	movf	___aodiv@divisor+4,w
  7099  044C  022C               	subwf	___aodiv@dividend+4,w
  7100  044D  1D03               	skipz
  7101  044E  2C5D               	goto	u2225
  7102  044F  0823               	movf	___aodiv@divisor+3,w
  7103  0450  022B               	subwf	___aodiv@dividend+3,w
  7104  0451  1D03               	skipz
  7105  0452  2C5D               	goto	u2225
  7106  0453  0822               	movf	___aodiv@divisor+2,w
  7107  0454  022A               	subwf	___aodiv@dividend+2,w
  7108  0455  1D03               	skipz
  7109  0456  2C5D               	goto	u2225
  7110  0457  0821               	movf	___aodiv@divisor+1,w
  7111  0458  0229               	subwf	___aodiv@dividend+1,w
  7112  0459  1D03               	skipz
  7113  045A  2C5D               	goto	u2225
  7114  045B  0820               	movf	___aodiv@divisor,w
  7115  045C  0228               	subwf	___aodiv@dividend,w
  7116  045D                     u2225:	
  7117  045D  1C03               	skipc
  7118  045E  2C70               	goto	l2734
  7119  045F  0820               	movf	___aodiv@divisor,w
  7120  0460  02A8               	subwf	___aodiv@dividend,f
  7121  0461  0821               	movf	___aodiv@divisor+1,w
  7122  0462  3BA9               	subwfb	___aodiv@dividend+1,f
  7123  0463  0822               	movf	___aodiv@divisor+2,w
  7124  0464  3BAA               	subwfb	___aodiv@dividend+2,f
  7125  0465  0823               	movf	___aodiv@divisor+3,w
  7126  0466  3BAB               	subwfb	___aodiv@dividend+3,f
  7127  0467  0824               	movf	___aodiv@divisor+4,w
  7128  0468  3BAC               	subwfb	___aodiv@dividend+4,f
  7129  0469  0825               	movf	___aodiv@divisor+5,w
  7130  046A  3BAD               	subwfb	___aodiv@dividend+5,f
  7131  046B  0826               	movf	___aodiv@divisor+6,w
  7132  046C  3BAE               	subwfb	___aodiv@dividend+6,f
  7133  046D  0827               	movf	___aodiv@divisor+7,w
  7134  046E  3BAF               	subwfb	___aodiv@dividend+7,f
  7135  046F  1432               	bsf	___aodiv@quotient,0
  7136  0470                     l2734:	
  7137  0470  36A7               	lsrf	___aodiv@divisor+7,f
  7138  0471  0CA6               	rrf	___aodiv@divisor+6,f
  7139  0472  0CA5               	rrf	___aodiv@divisor+5,f
  7140  0473  0CA4               	rrf	___aodiv@divisor+4,f
  7141  0474  0CA3               	rrf	___aodiv@divisor+3,f
  7142  0475  0CA2               	rrf	___aodiv@divisor+2,f
  7143  0476  0CA1               	rrf	___aodiv@divisor+1,f
  7144  0477  0CA0               	rrf	___aodiv@divisor,f
  7145  0478  3001               	movlw	1
  7146  0479  02B0               	subwf	___aodiv@counter,f
  7147  047A  1D03               	btfss	3,2
  7148  047B  2C37               	goto	l2726
  7149  047C                     l2736:	
  7150  047C  0831               	movf	___aodiv@sign,w
  7151  047D  1903               	btfsc	3,2
  7152  047E  2C9D               	goto	l655
  7153  047F  09B2               	comf	___aodiv@quotient,f
  7154  0480  09B3               	comf	___aodiv@quotient+1,f
  7155  0481  09B4               	comf	___aodiv@quotient+2,f
  7156  0482  09B5               	comf	___aodiv@quotient+3,f
  7157  0483  09B6               	comf	___aodiv@quotient+4,f
  7158  0484  09B7               	comf	___aodiv@quotient+5,f
  7159  0485  09B8               	comf	___aodiv@quotient+6,f
  7160  0486  09B9               	comf	___aodiv@quotient+7,f
  7161  0487  0AB2               	incf	___aodiv@quotient,f
  7162  0488  1D03               	skipz
  7163  0489  2C9D               	goto	l655
  7164  048A  0AB3               	incf	___aodiv@quotient+1,f
  7165  048B  1D03               	skipz
  7166  048C  2C9D               	goto	l655
  7167  048D  0AB4               	incf	___aodiv@quotient+2,f
  7168  048E  1D03               	skipz
  7169  048F  2C9D               	goto	l655
  7170  0490  0AB5               	incf	___aodiv@quotient+3,f
  7171  0491  1D03               	skipz
  7172  0492  2C9D               	goto	l655
  7173  0493  0AB6               	incf	___aodiv@quotient+4,f
  7174  0494  1D03               	skipz
  7175  0495  2C9D               	goto	l655
  7176  0496  0AB7               	incf	___aodiv@quotient+5,f
  7177  0497  1D03               	skipz
  7178  0498  2C9D               	goto	l655
  7179  0499  0AB8               	incf	___aodiv@quotient+6,f
  7180  049A  1D03               	skipz
  7181  049B  2C9D               	goto	l655
  7182  049C  0AB9               	incf	___aodiv@quotient+7,f
  7183  049D                     l655:	
  7184  049D  0020               	movlb	0	; select bank0
  7185  049E  0832               	movf	___aodiv@quotient,w
  7186  049F  00A0               	movwf	?___aodiv
  7187  04A0  0833               	movf	___aodiv@quotient+1,w
  7188  04A1  00A1               	movwf	?___aodiv+1
  7189  04A2  0834               	movf	___aodiv@quotient+2,w
  7190  04A3  00A2               	movwf	?___aodiv+2
  7191  04A4  0835               	movf	___aodiv@quotient+3,w
  7192  04A5  00A3               	movwf	?___aodiv+3
  7193  04A6  0836               	movf	___aodiv@quotient+4,w
  7194  04A7  00A4               	movwf	?___aodiv+4
  7195  04A8  0837               	movf	___aodiv@quotient+5,w
  7196  04A9  00A5               	movwf	?___aodiv+5
  7197  04AA  0838               	movf	___aodiv@quotient+6,w
  7198  04AB  00A6               	movwf	?___aodiv+6
  7199  04AC  0839               	movf	___aodiv@quotient+7,w
  7200  04AD  00A7               	movwf	?___aodiv+7
  7201  04AE  0008               	return
  7202  04AF                     __end_of___aodiv:	
  7203                           
  7204                           	psect	text21
  7205  0DEE                     __ptext21:	
  7206 ;; *************** function _GPS_SendUBX *****************
  7207 ;; Defined at:
  7208 ;;		line 195 in file "main.c"
  7209 ;; Parameters:    Size  Location     Type
  7210 ;;  data            1    wreg     PTR unsigned char 
  7211 ;;		 -> setNavFlightMode(44), 
  7212 ;; Auto vars:     Size  Location     Type
  7213 ;;  data            1    2[BANK0 ] PTR unsigned char 
  7214 ;;		 -> setNavFlightMode(44), 
  7215 ;;  i               2    3[BANK0 ] int 
  7216 ;;  length          2    0[BANK0 ] int 
  7217 ;; Return value:  Size  Location     Type
  7218 ;;                  1    wreg      void 
  7219 ;; Registers used:
  7220 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7221 ;; Tracked objects:
  7222 ;;		On entry : 0/0
  7223 ;;		On exit  : 0/0
  7224 ;;		Unchanged: 0/0
  7225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7227 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7228 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7229 ;;      Totals:         1       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7230 ;;Total ram usage:        6 bytes
  7231 ;; Hardware stack levels used:    1
  7232 ;; Hardware stack levels required when called:    5
  7233 ;; This function calls:
  7234 ;;		_EUSART_Write
  7235 ;;		_GetLengthUBX
  7236 ;; This function is called by:
  7237 ;;		_SetupGPS
  7238 ;; This function uses a non-reentrant model
  7239 ;;
  7240                           
  7241                           
  7242                           ;psect for function _GPS_SendUBX
  7243  0DEE                     _GPS_SendUBX:	
  7244                           
  7245                           ;incstack = 0
  7246                           ; Regs used in _GPS_SendUBX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7247                           ;GPS_SendUBX@data stored from wreg
  7248  0DEE  0020               	movlb	0	; select bank0
  7249  0DEF  00A2               	movwf	GPS_SendUBX@data
  7250                           
  7251                           ;main.c: 195: void GPS_SendUBX(uint8_t* data);main.c: 196: {;main.c: 197:     for (int i
      +                           = 0, length = GetLengthUBX(data); i < length; i++)
  7252  0DF0  01A3               	clrf	GPS_SendUBX@i
  7253  0DF1  01A4               	clrf	GPS_SendUBX@i+1
  7254  0DF2  0822               	movf	GPS_SendUBX@data,w
  7255  0DF3  318C  24F9  318D   	fcall	_GetLengthUBX
  7256  0DF6  0873               	movf	?_GetLengthUBX+1,w
  7257  0DF7  0020               	movlb	0	; select bank0
  7258  0DF8  00A1               	movwf	GPS_SendUBX@length+1
  7259  0DF9  0872               	movf	?_GetLengthUBX,w
  7260  0DFA  00A0               	movwf	GPS_SendUBX@length
  7261  0DFB                     l3048:	
  7262  0DFB  0824               	movf	GPS_SendUBX@i+1,w
  7263  0DFC  3A80               	xorlw	128
  7264  0DFD  00F6               	movwf	??_GPS_SendUBX
  7265  0DFE  0821               	movf	GPS_SendUBX@length+1,w
  7266  0DFF  3A80               	xorlw	128
  7267  0E00  0276               	subwf	??_GPS_SendUBX,w
  7268  0E01  1D03               	skipz
  7269  0E02  2E05               	goto	u2745
  7270  0E03  0820               	movf	GPS_SendUBX@length,w
  7271  0E04  0223               	subwf	GPS_SendUBX@i,w
  7272  0E05                     u2745:	
  7273  0E05  1803               	btfsc	3,0
  7274  0E06  0008               	return
  7275                           
  7276                           ;main.c: 198:     {;main.c: 199:         EUSART_Write(data[i]);
  7277  0E07  0020               	movlb	0	; select bank0
  7278  0E08  0823               	movf	GPS_SendUBX@i,w
  7279  0E09  0722               	addwf	GPS_SendUBX@data,w
  7280  0E0A  00F6               	movwf	??_GPS_SendUBX
  7281  0E0B  0876               	movf	??_GPS_SendUBX,w
  7282  0E0C  0086               	movwf	6
  7283  0E0D  3002               	movlw	2	; select bank4/5
  7284  0E0E  0087               	movwf	7
  7285  0E0F  0801               	movf	1,w
  7286  0E10  318C  24AB  318D   	fcall	_EUSART_Write
  7287                           
  7288                           ;main.c: 200:     }
  7289  0E13  3001               	movlw	1
  7290  0E14  0020               	movlb	0	; select bank0
  7291  0E15  07A3               	addwf	GPS_SendUBX@i,f
  7292  0E16  3000               	movlw	0
  7293  0E17  3DA4               	addwfc	GPS_SendUBX@i+1,f
  7294  0E18  2DFB               	goto	l3048
  7295  0E19                     __end_of_GPS_SendUBX:	
  7296                           
  7297                           	psect	text22
  7298  0CF9                     __ptext22:	
  7299 ;; *************** function _GetLengthUBX *****************
  7300 ;; Defined at:
  7301 ;;		line 189 in file "main.c"
  7302 ;; Parameters:    Size  Location     Type
  7303 ;;  data            1    wreg     PTR unsigned char 
  7304 ;;		 -> setNavFlightMode(44), 
  7305 ;; Auto vars:     Size  Location     Type
  7306 ;;  data            1    5[COMMON] PTR unsigned char 
  7307 ;;		 -> setNavFlightMode(44), 
  7308 ;; Return value:  Size  Location     Type
  7309 ;;                  2    2[COMMON] unsigned int 
  7310 ;; Registers used:
  7311 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  7312 ;; Tracked objects:
  7313 ;;		On entry : 0/0
  7314 ;;		On exit  : 0/0
  7315 ;;		Unchanged: 0/0
  7316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7317 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7318 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7320 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7321 ;;Total ram usage:        4 bytes
  7322 ;; Hardware stack levels used:    1
  7323 ;; Hardware stack levels required when called:    4
  7324 ;; This function calls:
  7325 ;;		Nothing
  7326 ;; This function is called by:
  7327 ;;		_GPS_SendUBX
  7328 ;; This function uses a non-reentrant model
  7329 ;;
  7330                           
  7331                           
  7332                           ;psect for function _GetLengthUBX
  7333  0CF9                     _GetLengthUBX:	
  7334                           
  7335                           ;incstack = 0
  7336                           ; Regs used in _GetLengthUBX: [wreg-fsr1h+status,2+status,0]
  7337                           ;GetLengthUBX@data stored from wreg
  7338  0CF9  00F5               	movwf	GetLengthUBX@data
  7339                           
  7340                           ;main.c: 189: size_t GetLengthUBX(uint8_t* data);main.c: 190: {;main.c: 191:     return 
      +                          8 + (short)((short)(data[4] << 8) + (short)data[5]);
  7341  0CFA  0875               	movf	GetLengthUBX@data,w
  7342  0CFB  3E05               	addlw	5
  7343  0CFC  0086               	movwf	6
  7344  0CFD  3002               	movlw	2	; select bank4/5
  7345  0CFE  0087               	movwf	7
  7346  0CFF  0875               	movf	GetLengthUBX@data,w
  7347  0D00  3E04               	addlw	4
  7348  0D01  0084               	movwf	4
  7349  0D02  3002               	movlw	2	; select bank4/5
  7350  0D03  0085               	movwf	5
  7351  0D04  0801               	movf	1,w
  7352  0D05  3E08               	addlw	8
  7353  0D06  00F2               	movwf	?_GetLengthUBX
  7354  0D07  3000               	movlw	0
  7355  0D08  3D00               	addwfc	0,w
  7356  0D09  00F3               	movwf	?_GetLengthUBX+1
  7357  0D0A  0008               	return
  7358  0D0B                     __end_of_GetLengthUBX:	
  7359                           
  7360                           	psect	text23
  7361  0CAB                     __ptext23:	
  7362 ;; *************** function _EUSART_Write *****************
  7363 ;; Defined at:
  7364 ;;		line 111 in file "mcc_generated_files/eusart.c"
  7365 ;; Parameters:    Size  Location     Type
  7366 ;;  txData          1    wreg     unsigned char 
  7367 ;; Auto vars:     Size  Location     Type
  7368 ;;  txData          1    2[COMMON] unsigned char 
  7369 ;; Return value:  Size  Location     Type
  7370 ;;                  1    wreg      void 
  7371 ;; Registers used:
  7372 ;;		wreg
  7373 ;; Tracked objects:
  7374 ;;		On entry : 0/0
  7375 ;;		On exit  : 0/0
  7376 ;;		Unchanged: 0/0
  7377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7379 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7381 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7382 ;;Total ram usage:        1 bytes
  7383 ;; Hardware stack levels used:    1
  7384 ;; Hardware stack levels required when called:    4
  7385 ;; This function calls:
  7386 ;;		Nothing
  7387 ;; This function is called by:
  7388 ;;		_putch
  7389 ;;		_GPS_SendUBX
  7390 ;; This function uses a non-reentrant model
  7391 ;;
  7392                           
  7393                           
  7394                           ;psect for function _EUSART_Write
  7395  0CAB                     _EUSART_Write:	
  7396                           
  7397                           ;incstack = 0
  7398                           ; Regs used in _EUSART_Write: [wreg]
  7399                           ;EUSART_Write@txData stored from wreg
  7400  0CAB  00F2               	movwf	EUSART_Write@txData
  7401  0CAC                     l112:	
  7402                           ;mcc_generated_files/eusart.c: 114:     {;mcc_generated_files/eusart.c: 115:     }
  7403                           
  7404                           
  7405                           ;mcc_generated_files/eusart.c: 113:     while(0 == PIR1bits.TXIF)
  7406  0CAC  0020               	movlb	0	; select bank0
  7407  0CAD  1E10               	btfss	16,4	;volatile
  7408  0CAE  2CAC               	goto	l112
  7409                           
  7410                           ;mcc_generated_files/eusart.c: 117:     TX1REG = txData;
  7411  0CAF  0872               	movf	EUSART_Write@txData,w
  7412  0CB0  0023               	movlb	3	; select bank3
  7413  0CB1  009A               	movwf	26	;volatile
  7414  0CB2  0008               	return
  7415  0CB3                     __end_of_EUSART_Write:	
  7416                           
  7417                           	psect	text24
  7418  064E                     __ptext24:	
  7419 ;; *************** function _GPS_HasAcknowledged *****************
  7420 ;; Defined at:
  7421 ;;		line 207 in file "main.c"
  7422 ;; Parameters:    Size  Location     Type
  7423 ;;  data            1    wreg     PTR unsigned char 
  7424 ;;		 -> setNavFlightMode(44), 
  7425 ;; Auto vars:     Size  Location     Type
  7426 ;;  data            1   23[BANK0 ] PTR unsigned char 
  7427 ;;		 -> setNavFlightMode(44), 
  7428 ;;  i               1   25[BANK0 ] unsigned char 
  7429 ;;  ackPacket      10   13[BANK0 ] unsigned char [10]
  7430 ;;  startTime       4    8[BANK0 ] unsigned long 
  7431 ;;  ackByteID       1   24[BANK0 ] unsigned char 
  7432 ;;  ackByte         1   12[BANK0 ] unsigned char 
  7433 ;; Return value:  Size  Location     Type
  7434 ;;                  1    wreg      _Bool 
  7435 ;; Registers used:
  7436 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7437 ;; Tracked objects:
  7438 ;;		On entry : 0/0
  7439 ;;		On exit  : 0/0
  7440 ;;		Unchanged: 0/0
  7441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7443 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7444 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7445 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7446 ;;Total ram usage:       22 bytes
  7447 ;; Hardware stack levels used:    1
  7448 ;; Hardware stack levels required when called:    5
  7449 ;; This function calls:
  7450 ;;		_EUSART_Read
  7451 ;;		_EUSART_is_rx_ready
  7452 ;;		_TMR1_ReadTimer
  7453 ;; This function is called by:
  7454 ;;		_SetupGPS
  7455 ;; This function uses a non-reentrant model
  7456 ;;
  7457                           
  7458                           
  7459                           ;psect for function _GPS_HasAcknowledged
  7460  064E                     _GPS_HasAcknowledged:	
  7461                           
  7462                           ;incstack = 0
  7463                           ; Regs used in _GPS_HasAcknowledged: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7464                           ;GPS_HasAcknowledged@data stored from wreg
  7465  064E  0020               	movlb	0	; select bank0
  7466  064F  00B7               	movwf	GPS_HasAcknowledged@data
  7467                           
  7468                           ;main.c: 207: _Bool GPS_HasAcknowledged(uint8_t* data);main.c: 208: {;main.c: 209:     u
      +                          int8_t ackPacket[10];;main.c: 210:     unsigned long startTime = TMR1_ReadTimer();
  7469  0650  318D  2581  3186   	fcall	_TMR1_ReadTimer
  7470  0653  0872               	movf	?_TMR1_ReadTimer,w
  7471  0654  0020               	movlb	0	; select bank0
  7472  0655  00A8               	movwf	GPS_HasAcknowledged@startTime
  7473  0656  0873               	movf	?_TMR1_ReadTimer+1,w
  7474  0657  00A9               	movwf	GPS_HasAcknowledged@startTime+1
  7475  0658  01AA               	clrf	GPS_HasAcknowledged@startTime+2
  7476  0659  01AB               	clrf	GPS_HasAcknowledged@startTime+3
  7477                           
  7478                           ;main.c: 213:     ackPacket[0] = 0xB5;
  7479  065A  30B5               	movlw	181
  7480  065B  00A4               	movwf	??_GPS_HasAcknowledged
  7481  065C  0824               	movf	??_GPS_HasAcknowledged,w
  7482  065D  00AD               	movwf	GPS_HasAcknowledged@ackPacket
  7483                           
  7484                           ;main.c: 214:     ackPacket[1] = 0x62;
  7485  065E  3062               	movlw	98
  7486  065F  00A4               	movwf	??_GPS_HasAcknowledged
  7487  0660  0824               	movf	??_GPS_HasAcknowledged,w
  7488  0661  00AE               	movwf	GPS_HasAcknowledged@ackPacket+1
  7489                           
  7490                           ;main.c: 215:     ackPacket[2] = 0x05;
  7491  0662  3005               	movlw	5
  7492  0663  00A4               	movwf	??_GPS_HasAcknowledged
  7493  0664  0824               	movf	??_GPS_HasAcknowledged,w
  7494  0665  00AF               	movwf	GPS_HasAcknowledged@ackPacket+2
  7495                           
  7496                           ;main.c: 216:     ackPacket[3] = 0x01;
  7497  0666  01B0               	clrf	GPS_HasAcknowledged@ackPacket+3
  7498  0667  0AB0               	incf	GPS_HasAcknowledged@ackPacket+3,f
  7499                           
  7500                           ;main.c: 217:     ackPacket[4] = 0x02;
  7501  0668  3002               	movlw	2
  7502  0669  00A4               	movwf	??_GPS_HasAcknowledged
  7503  066A  0824               	movf	??_GPS_HasAcknowledged,w
  7504  066B  00B1               	movwf	GPS_HasAcknowledged@ackPacket+4
  7505                           
  7506                           ;main.c: 218:     ackPacket[5] = 0x00;
  7507  066C  01B2               	clrf	GPS_HasAcknowledged@ackPacket+5
  7508                           
  7509                           ;main.c: 219:     ackPacket[6] = data[2];
  7510  066D  0837               	movf	GPS_HasAcknowledged@data,w
  7511  066E  0086               	movwf	6
  7512  066F  3002               	movlw	2	; select bank4/5
  7513  0670  0087               	movwf	7
  7514  0671  3002               	movlw	2	; select bank4/5
  7515  0672  3F42               	moviw [2]fsr1
  7516  0673  00B3               	movwf	GPS_HasAcknowledged@ackPacket+6
  7517                           
  7518                           ;main.c: 220:     ackPacket[7] = data[3];
  7519  0674  0837               	movf	GPS_HasAcknowledged@data,w
  7520  0675  0086               	movwf	6
  7521  0676  3002               	movlw	2	; select bank4/5
  7522  0677  0087               	movwf	7
  7523  0678  3002               	movlw	2	; select bank4/5
  7524  0679  3F43               	moviw [3]fsr1
  7525  067A  00B4               	movwf	GPS_HasAcknowledged@ackPacket+7
  7526                           
  7527                           ;main.c: 221:     ackPacket[8] = 0;
  7528  067B  01B5               	clrf	GPS_HasAcknowledged@ackPacket+8
  7529                           
  7530                           ;main.c: 222:     ackPacket[9] = 0;
  7531  067C  01B6               	clrf	GPS_HasAcknowledged@ackPacket+9
  7532                           
  7533                           ;main.c: 225:     for (uint8_t i = 2; i < 8; i++)
  7534  067D  3002               	movlw	2
  7535  067E  00A4               	movwf	??_GPS_HasAcknowledged
  7536  067F  0824               	movf	??_GPS_HasAcknowledged,w
  7537  0680  00B9               	movwf	GPS_HasAcknowledged@i
  7538  0681                     l3078:	
  7539                           
  7540                           ;main.c: 226:     {;main.c: 227:         ackPacket[8] = ackPacket[8] + ackPacket[i];
  7541  0681  0839               	movf	GPS_HasAcknowledged@i,w
  7542  0682  3E2D               	addlw	(low (GPS_HasAcknowledged@ackPacket| 0))& (0+255)
  7543  0683  0086               	movwf	6
  7544  0684  0187               	clrf	7
  7545  0685  0835               	movf	GPS_HasAcknowledged@ackPacket+8,w
  7546  0686  0701               	addwf	1,w
  7547  0687  00A4               	movwf	??_GPS_HasAcknowledged
  7548  0688  0824               	movf	??_GPS_HasAcknowledged,w
  7549  0689  00B5               	movwf	GPS_HasAcknowledged@ackPacket+8
  7550                           
  7551                           ;main.c: 228:         ackPacket[9] = ackPacket[9] + ackPacket[8];
  7552  068A  0836               	movf	GPS_HasAcknowledged@ackPacket+9,w
  7553  068B  0735               	addwf	GPS_HasAcknowledged@ackPacket+8,w
  7554  068C  00A4               	movwf	??_GPS_HasAcknowledged
  7555  068D  0824               	movf	??_GPS_HasAcknowledged,w
  7556  068E  00B6               	movwf	GPS_HasAcknowledged@ackPacket+9
  7557                           
  7558                           ;main.c: 229:     }
  7559  068F  3001               	movlw	1
  7560  0690  00A4               	movwf	??_GPS_HasAcknowledged
  7561  0691  0824               	movf	??_GPS_HasAcknowledged,w
  7562  0692  07B9               	addwf	GPS_HasAcknowledged@i,f
  7563  0693  3008               	movlw	8
  7564  0694  0239               	subwf	GPS_HasAcknowledged@i,w
  7565  0695  1C03               	skipc
  7566  0696  2E81               	goto	l3078
  7567  0697                     l3086:	
  7568                           
  7569                           ;main.c: 232:     uint8_t ackByte;;main.c: 235:     uint8_t ackByteID = 0;
  7570  0697  01B8               	clrf	GPS_HasAcknowledged@ackByteID
  7571  0698                     l3088:	
  7572                           
  7573                           ;main.c: 239:     {;main.c: 242:         if (ackByteID > 9)
  7574  0698  300A               	movlw	10
  7575  0699  0020               	movlb	0	; select bank0
  7576  069A  0238               	subwf	GPS_HasAcknowledged@ackByteID,w
  7577  069B  1C03               	skipc
  7578  069C  2E9F               	goto	l3094
  7579                           
  7580                           ;main.c: 243:         {;main.c: 246:             return 1;
  7581  069D  3001               	movlw	1
  7582  069E  0008               	return
  7583  069F                     l3094:	
  7584                           
  7585                           ;main.c: 250:         if (TMR1_ReadTimer() - startTime > 3000)
  7586  069F  318D  2581  3186   	fcall	_TMR1_ReadTimer
  7587  06A2  0872               	movf	?_TMR1_ReadTimer,w
  7588  06A3  0020               	movlb	0	; select bank0
  7589  06A4  00A4               	movwf	??_GPS_HasAcknowledged
  7590  06A5  0873               	movf	?_TMR1_ReadTimer+1,w
  7591  06A6  00A5               	movwf	??_GPS_HasAcknowledged+1
  7592  06A7  01A6               	clrf	??_GPS_HasAcknowledged+2
  7593  06A8  01A7               	clrf	??_GPS_HasAcknowledged+3
  7594  06A9  0828               	movf	GPS_HasAcknowledged@startTime,w
  7595  06AA  02A4               	subwf	??_GPS_HasAcknowledged,f
  7596  06AB  0829               	movf	GPS_HasAcknowledged@startTime+1,w
  7597  06AC  3BA5               	subwfb	??_GPS_HasAcknowledged+1,f
  7598  06AD  082A               	movf	GPS_HasAcknowledged@startTime+2,w
  7599  06AE  3BA6               	subwfb	??_GPS_HasAcknowledged+2,f
  7600  06AF  082B               	movf	GPS_HasAcknowledged@startTime+3,w
  7601  06B0  3BA7               	subwfb	??_GPS_HasAcknowledged+3,f
  7602  06B1  0827               	movf	??_GPS_HasAcknowledged+3,w
  7603  06B2  1D03               	btfss	3,2
  7604  06B3  2EBD               	goto	l3096
  7605  06B4  0826               	movf	??_GPS_HasAcknowledged+2,w
  7606  06B5  1D03               	btfss	3,2
  7607  06B6  2EBD               	goto	l3096
  7608  06B7  30B9               	movlw	185
  7609  06B8  0224               	subwf	??_GPS_HasAcknowledged,w
  7610  06B9  300B               	movlw	11
  7611  06BA  3B25               	subwfb	??_GPS_HasAcknowledged+1,w
  7612  06BB  1C03               	btfss	3,0
  7613  06BC  2EBF               	goto	l3100
  7614  06BD                     l3096:	
  7615                           
  7616                           ;main.c: 251:         {;main.c: 252:             return 0;
  7617  06BD  3000               	movlw	0
  7618  06BE  0008               	return
  7619  06BF                     l3100:	
  7620                           
  7621                           ;main.c: 256:         if (EUSART_is_rx_ready())
  7622  06BF  318C  2481  3186   	fcall	_EUSART_is_rx_ready
  7623  06C2  3A00               	xorlw	0
  7624  06C3  1903               	skipnz
  7625  06C4  2E98               	goto	l3088
  7626                           
  7627                           ;main.c: 257:         {;main.c: 258:             ackByte = EUSART_Read();
  7628  06C5  318C  24B3  3186   	fcall	_EUSART_Read
  7629  06C8  0020               	movlb	0	; select bank0
  7630  06C9  00A4               	movwf	??_GPS_HasAcknowledged
  7631  06CA  0824               	movf	??_GPS_HasAcknowledged,w
  7632  06CB  00AC               	movwf	GPS_HasAcknowledged@ackByte
  7633                           
  7634                           ;main.c: 261:             if (ackByte == ackPacket[ackByteID]) {
  7635  06CC  0838               	movf	GPS_HasAcknowledged@ackByteID,w
  7636  06CD  3E2D               	addlw	(low (GPS_HasAcknowledged@ackPacket| 0))& (0+255)
  7637  06CE  0086               	movwf	6
  7638  06CF  0187               	clrf	7
  7639  06D0  0801               	movf	1,w
  7640  06D1  062C               	xorwf	GPS_HasAcknowledged@ackByte,w
  7641  06D2  1D03               	skipz
  7642  06D3  2E97               	goto	l3086
  7643                           
  7644                           ;main.c: 262:                 ackByteID++;
  7645  06D4  3001               	movlw	1
  7646  06D5  00A4               	movwf	??_GPS_HasAcknowledged
  7647  06D6  0824               	movf	??_GPS_HasAcknowledged,w
  7648  06D7  07B8               	addwf	GPS_HasAcknowledged@ackByteID,f
  7649                           
  7650                           ;main.c: 263:             }
  7651  06D8  2E98               	goto	l3088
  7652  06D9                     __end_of_GPS_HasAcknowledged:	
  7653                           
  7654                           	psect	text25
  7655  0CDE                     __ptext25:	
  7656 ;; *************** function _SYSTEM_Initialize *****************
  7657 ;; Defined at:
  7658 ;;		line 50 in file "mcc_generated_files/mcc.c"
  7659 ;; Parameters:    Size  Location     Type
  7660 ;;		None
  7661 ;; Auto vars:     Size  Location     Type
  7662 ;;		None
  7663 ;; Return value:  Size  Location     Type
  7664 ;;                  1    wreg      void 
  7665 ;; Registers used:
  7666 ;;		wreg, status,2, status,0, pclath, cstack
  7667 ;; Tracked objects:
  7668 ;;		On entry : 0/0
  7669 ;;		On exit  : 0/0
  7670 ;;		Unchanged: 0/0
  7671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7675 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7676 ;;Total ram usage:        0 bytes
  7677 ;; Hardware stack levels used:    1
  7678 ;; Hardware stack levels required when called:    6
  7679 ;; This function calls:
  7680 ;;		_EUSART_Initialize
  7681 ;;		_OSCILLATOR_Initialize
  7682 ;;		_PIN_MANAGER_Initialize
  7683 ;;		_TMR1_Initialize
  7684 ;; This function is called by:
  7685 ;;		_main
  7686 ;; This function uses a non-reentrant model
  7687 ;;
  7688                           
  7689                           
  7690                           ;psect for function _SYSTEM_Initialize
  7691  0CDE                     _SYSTEM_Initialize:	
  7692                           
  7693                           ;mcc_generated_files/mcc.c: 52:     PIN_MANAGER_Initialize();
  7694                           
  7695                           ;incstack = 0
  7696                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7697  0CDE  318D  25C4  318C   	fcall	_PIN_MANAGER_Initialize
  7698                           
  7699                           ;mcc_generated_files/mcc.c: 53:     OSCILLATOR_Initialize();
  7700  0CE1  318C  249D  318C   	fcall	_OSCILLATOR_Initialize
  7701                           
  7702                           ;mcc_generated_files/mcc.c: 54:     TMR1_Initialize();
  7703  0CE4  318D  2566  318C   	fcall	_TMR1_Initialize
  7704                           
  7705                           ;mcc_generated_files/mcc.c: 55:     EUSART_Initialize();
  7706  0CE7  318C  24C8         	fcall	_EUSART_Initialize
  7707  0CE9  0008               	return
  7708  0CEA                     __end_of_SYSTEM_Initialize:	
  7709                           
  7710                           	psect	text26
  7711  0D66                     __ptext26:	
  7712 ;; *************** function _TMR1_Initialize *****************
  7713 ;; Defined at:
  7714 ;;		line 64 in file "mcc_generated_files/tmr1.c"
  7715 ;; Parameters:    Size  Location     Type
  7716 ;;		None
  7717 ;; Auto vars:     Size  Location     Type
  7718 ;;		None
  7719 ;; Return value:  Size  Location     Type
  7720 ;;                  1    wreg      void 
  7721 ;; Registers used:
  7722 ;;		wreg, status,2, status,0, pclath, cstack
  7723 ;; Tracked objects:
  7724 ;;		On entry : 0/0
  7725 ;;		On exit  : 0/0
  7726 ;;		Unchanged: 0/0
  7727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7731 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7732 ;;Total ram usage:        0 bytes
  7733 ;; Hardware stack levels used:    1
  7734 ;; Hardware stack levels required when called:    5
  7735 ;; This function calls:
  7736 ;;		_TMR1_SetInterruptHandler
  7737 ;; This function is called by:
  7738 ;;		_SYSTEM_Initialize
  7739 ;; This function uses a non-reentrant model
  7740 ;;
  7741                           
  7742                           
  7743                           ;psect for function _TMR1_Initialize
  7744  0D66                     _TMR1_Initialize:	
  7745                           
  7746                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
  7747                           
  7748                           ;incstack = 0
  7749                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  7750  0D66  0020               	movlb	0	; select bank0
  7751  0D67  0199               	clrf	25	;volatile
  7752                           
  7753                           ;mcc_generated_files/tmr1.c: 72:     TMR1H = 0xFF;
  7754  0D68  30FF               	movlw	255
  7755  0D69  0097               	movwf	23	;volatile
  7756                           
  7757                           ;mcc_generated_files/tmr1.c: 75:     TMR1L = 0x06;
  7758  0D6A  3006               	movlw	6
  7759  0D6B  0096               	movwf	22	;volatile
  7760                           
  7761                           ;mcc_generated_files/tmr1.c: 78:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  7762  0D6C  0817               	movf	23,w	;volatile
  7763  0D6D  0022               	movlb	2	; select bank2
  7764  0D6E  00E6               	movwf	(_timer1ReloadVal+1)^(0+256)	;volatile
  7765  0D6F  0020               	movlb	0	; select bank0
  7766  0D70  0816               	movf	22,w	;volatile
  7767  0D71  0022               	movlb	2	; select bank2
  7768  0D72  00E5               	movwf	_timer1ReloadVal^(0+256)	;volatile
  7769                           
  7770                           ;mcc_generated_files/tmr1.c: 81:     PIR1bits.TMR1IF = 0;
  7771  0D73  0020               	movlb	0	; select bank0
  7772  0D74  1010               	bcf	16,0	;volatile
  7773                           
  7774                           ;mcc_generated_files/tmr1.c: 84:     PIE1bits.TMR1IE = 1;
  7775  0D75  0021               	movlb	1	; select bank1
  7776  0D76  1410               	bsf	16,0	;volatile
  7777                           
  7778                           ;mcc_generated_files/tmr1.c: 87:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  7779  0D77  30FF               	movlw	low _TMR1_DefaultInterruptHandler
  7780  0D78  00F2               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  7781  0D79  3007               	movlw	high _TMR1_DefaultInterruptHandler
  7782  0D7A  00F3               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  7783  0D7B  318C  248B         	fcall	_TMR1_SetInterruptHandler
  7784                           
  7785                           ;mcc_generated_files/tmr1.c: 90:     T1CON = 0x21;
  7786  0D7D  3021               	movlw	33
  7787  0D7E  0020               	movlb	0	; select bank0
  7788  0D7F  0098               	movwf	24	;volatile
  7789  0D80  0008               	return
  7790  0D81                     __end_of_TMR1_Initialize:	
  7791                           
  7792                           	psect	text27
  7793  0C8B                     __ptext27:	
  7794 ;; *************** function _TMR1_SetInterruptHandler *****************
  7795 ;; Defined at:
  7796 ;;		line 178 in file "mcc_generated_files/tmr1.c"
  7797 ;; Parameters:    Size  Location     Type
  7798 ;;  InterruptHan    2    2[COMMON] PTR FTN()void 
  7799 ;;		 -> TMR1_DefaultInterruptHandler(1), 
  7800 ;; Auto vars:     Size  Location     Type
  7801 ;;		None
  7802 ;; Return value:  Size  Location     Type
  7803 ;;                  1    wreg      void 
  7804 ;; Registers used:
  7805 ;;		wreg
  7806 ;; Tracked objects:
  7807 ;;		On entry : 0/0
  7808 ;;		On exit  : 0/0
  7809 ;;		Unchanged: 0/0
  7810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7811 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7814 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7815 ;;Total ram usage:        2 bytes
  7816 ;; Hardware stack levels used:    1
  7817 ;; Hardware stack levels required when called:    4
  7818 ;; This function calls:
  7819 ;;		Nothing
  7820 ;; This function is called by:
  7821 ;;		_TMR1_Initialize
  7822 ;; This function uses a non-reentrant model
  7823 ;;
  7824                           
  7825                           
  7826                           ;psect for function _TMR1_SetInterruptHandler
  7827  0C8B                     _TMR1_SetInterruptHandler:	
  7828                           
  7829                           ;mcc_generated_files/tmr1.c: 179:     TMR1_InterruptHandler = InterruptHandler;
  7830                           
  7831                           ;incstack = 0
  7832                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
  7833  0C8B  0873               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
  7834  0C8C  0022               	movlb	2	; select bank2
  7835  0C8D  00E4               	movwf	(_TMR1_InterruptHandler+1)^(0+256)
  7836  0C8E  0872               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
  7837  0C8F  00E3               	movwf	_TMR1_InterruptHandler^(0+256)
  7838  0C90  0008               	return
  7839  0C91                     __end_of_TMR1_SetInterruptHandler:	
  7840                           
  7841                           	psect	text28
  7842  0DC4                     __ptext28:	
  7843 ;; *************** function _PIN_MANAGER_Initialize *****************
  7844 ;; Defined at:
  7845 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
  7846 ;; Parameters:    Size  Location     Type
  7847 ;;		None
  7848 ;; Auto vars:     Size  Location     Type
  7849 ;;		None
  7850 ;; Return value:  Size  Location     Type
  7851 ;;                  1    wreg      void 
  7852 ;; Registers used:
  7853 ;;		wreg, status,2
  7854 ;; Tracked objects:
  7855 ;;		On entry : 0/0
  7856 ;;		On exit  : 0/0
  7857 ;;		Unchanged: 0/0
  7858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7862 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7863 ;;Total ram usage:        0 bytes
  7864 ;; Hardware stack levels used:    1
  7865 ;; Hardware stack levels required when called:    4
  7866 ;; This function calls:
  7867 ;;		Nothing
  7868 ;; This function is called by:
  7869 ;;		_SYSTEM_Initialize
  7870 ;; This function uses a non-reentrant model
  7871 ;;
  7872                           
  7873                           
  7874                           ;psect for function _PIN_MANAGER_Initialize
  7875  0DC4                     _PIN_MANAGER_Initialize:	
  7876                           
  7877                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  7878                           
  7879                           ;incstack = 0
  7880                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  7881  0DC4  0022               	movlb	2	; select bank2
  7882  0DC5  018C               	clrf	12	;volatile
  7883                           
  7884                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  7885  0DC6  018D               	clrf	13	;volatile
  7886                           
  7887                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  7888  0DC7  018E               	clrf	14	;volatile
  7889                           
  7890                           ;mcc_generated_files/pin_manager.c: 69:     TRISA = 0x07;
  7891  0DC8  3007               	movlw	7
  7892  0DC9  0021               	movlb	1	; select bank1
  7893  0DCA  008C               	movwf	12	;volatile
  7894                           
  7895                           ;mcc_generated_files/pin_manager.c: 70:     TRISB = 0x70;
  7896  0DCB  3070               	movlw	112
  7897  0DCC  008D               	movwf	13	;volatile
  7898                           
  7899                           ;mcc_generated_files/pin_manager.c: 71:     TRISC = 0xDF;
  7900  0DCD  30DF               	movlw	223
  7901  0DCE  008E               	movwf	14	;volatile
  7902                           
  7903                           ;mcc_generated_files/pin_manager.c: 76:     ANSELC = 0x4F;
  7904  0DCF  304F               	movlw	79
  7905  0DD0  0023               	movlb	3	; select bank3
  7906  0DD1  008E               	movwf	14	;volatile
  7907                           
  7908                           ;mcc_generated_files/pin_manager.c: 77:     ANSELB = 0xB0;
  7909  0DD2  30B0               	movlw	176
  7910  0DD3  008D               	movwf	13	;volatile
  7911                           
  7912                           ;mcc_generated_files/pin_manager.c: 78:     ANSELA = 0x07;
  7913  0DD4  3007               	movlw	7
  7914  0DD5  008C               	movwf	12	;volatile
  7915                           
  7916                           ;mcc_generated_files/pin_manager.c: 83:     WPUB = 0x00;
  7917  0DD6  0024               	movlb	4	; select bank4
  7918  0DD7  018D               	clrf	13	;volatile
  7919                           
  7920                           ;mcc_generated_files/pin_manager.c: 84:     WPUA = 0x00;
  7921  0DD8  018C               	clrf	12	;volatile
  7922                           
  7923                           ;mcc_generated_files/pin_manager.c: 85:     WPUC = 0x00;
  7924  0DD9  018E               	clrf	14	;volatile
  7925                           
  7926                           ;mcc_generated_files/pin_manager.c: 86:     OPTION_REGbits.nWPUEN = 1;
  7927  0DDA  0021               	movlb	1	; select bank1
  7928  0DDB  1795               	bsf	21,7	;volatile
  7929                           
  7930                           ;mcc_generated_files/pin_manager.c: 91:     ODCONA = 0x00;
  7931  0DDC  0025               	movlb	5	; select bank5
  7932  0DDD  018C               	clrf	12	;volatile
  7933                           
  7934                           ;mcc_generated_files/pin_manager.c: 92:     ODCONB = 0x00;
  7935  0DDE  018D               	clrf	13	;volatile
  7936                           
  7937                           ;mcc_generated_files/pin_manager.c: 93:     ODCONC = 0x00;
  7938  0DDF  018E               	clrf	14	;volatile
  7939                           
  7940                           ;mcc_generated_files/pin_manager.c: 98:     SLRCONA = 0x37;
  7941  0DE0  3037               	movlw	55
  7942  0DE1  0026               	movlb	6	; select bank6
  7943  0DE2  008C               	movwf	12	;volatile
  7944                           
  7945                           ;mcc_generated_files/pin_manager.c: 99:     SLRCONB = 0xF0;
  7946  0DE3  30F0               	movlw	240
  7947  0DE4  008D               	movwf	13	;volatile
  7948                           
  7949                           ;mcc_generated_files/pin_manager.c: 100:     SLRCONC = 0xFF;
  7950  0DE5  30FF               	movlw	255
  7951  0DE6  008E               	movwf	14	;volatile
  7952                           
  7953                           ;mcc_generated_files/pin_manager.c: 109:     RXPPS = 0x0E;
  7954  0DE7  300E               	movlw	14
  7955  0DE8  003C               	movlb	28	; select bank28
  7956  0DE9  00A4               	movwf	36	;volatile
  7957                           
  7958                           ;mcc_generated_files/pin_manager.c: 110:     RB7PPS = 0x12;
  7959  0DEA  3012               	movlw	18
  7960  0DEB  003D               	movlb	29	; select bank29
  7961  0DEC  009F               	movwf	31	;volatile
  7962  0DED  0008               	return
  7963  0DEE                     __end_of_PIN_MANAGER_Initialize:	
  7964                           
  7965                           	psect	text29
  7966  0C9D                     __ptext29:	
  7967 ;; *************** function _OSCILLATOR_Initialize *****************
  7968 ;; Defined at:
  7969 ;;		line 58 in file "mcc_generated_files/mcc.c"
  7970 ;; Parameters:    Size  Location     Type
  7971 ;;		None
  7972 ;; Auto vars:     Size  Location     Type
  7973 ;;		None
  7974 ;; Return value:  Size  Location     Type
  7975 ;;                  1    wreg      void 
  7976 ;; Registers used:
  7977 ;;		wreg, status,2
  7978 ;; Tracked objects:
  7979 ;;		On entry : 0/0
  7980 ;;		On exit  : 0/0
  7981 ;;		Unchanged: 0/0
  7982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7986 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7987 ;;Total ram usage:        0 bytes
  7988 ;; Hardware stack levels used:    1
  7989 ;; Hardware stack levels required when called:    4
  7990 ;; This function calls:
  7991 ;;		Nothing
  7992 ;; This function is called by:
  7993 ;;		_SYSTEM_Initialize
  7994 ;; This function uses a non-reentrant model
  7995 ;;
  7996                           
  7997                           
  7998                           ;psect for function _OSCILLATOR_Initialize
  7999  0C9D                     _OSCILLATOR_Initialize:	
  8000                           
  8001                           ;mcc_generated_files/mcc.c: 61:     OSCCON = 0x68;
  8002                           
  8003                           ;incstack = 0
  8004                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  8005  0C9D  3068               	movlw	104
  8006  0C9E  0021               	movlb	1	; select bank1
  8007  0C9F  0099               	movwf	25	;volatile
  8008                           
  8009                           ;mcc_generated_files/mcc.c: 63:     OSCTUNE = 0x00;
  8010  0CA0  0198               	clrf	24	;volatile
  8011                           
  8012                           ;mcc_generated_files/mcc.c: 65:     BORCON = 0x00;
  8013  0CA1  0022               	movlb	2	; select bank2
  8014  0CA2  0196               	clrf	22	;volatile
  8015  0CA3  0008               	return
  8016  0CA4                     __end_of_OSCILLATOR_Initialize:	
  8017                           
  8018                           	psect	text30
  8019  0CC8                     __ptext30:	
  8020 ;; *************** function _EUSART_Initialize *****************
  8021 ;; Defined at:
  8022 ;;		line 56 in file "mcc_generated_files/eusart.c"
  8023 ;; Parameters:    Size  Location     Type
  8024 ;;		None
  8025 ;; Auto vars:     Size  Location     Type
  8026 ;;		None
  8027 ;; Return value:  Size  Location     Type
  8028 ;;                  1    wreg      void 
  8029 ;; Registers used:
  8030 ;;		wreg, status,2
  8031 ;; Tracked objects:
  8032 ;;		On entry : 0/0
  8033 ;;		On exit  : 0/0
  8034 ;;		Unchanged: 0/0
  8035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8037 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8039 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8040 ;;Total ram usage:        0 bytes
  8041 ;; Hardware stack levels used:    1
  8042 ;; Hardware stack levels required when called:    4
  8043 ;; This function calls:
  8044 ;;		Nothing
  8045 ;; This function is called by:
  8046 ;;		_SYSTEM_Initialize
  8047 ;; This function uses a non-reentrant model
  8048 ;;
  8049                           
  8050                           
  8051                           ;psect for function _EUSART_Initialize
  8052  0CC8                     _EUSART_Initialize:	
  8053                           
  8054                           ;mcc_generated_files/eusart.c: 61:     BAUD1CON = 0x08;
  8055                           
  8056                           ;incstack = 0
  8057                           ; Regs used in _EUSART_Initialize: [wreg+status,2]
  8058  0CC8  3008               	movlw	8
  8059  0CC9  0023               	movlb	3	; select bank3
  8060  0CCA  009F               	movwf	31	;volatile
  8061                           
  8062                           ;mcc_generated_files/eusart.c: 64:     RC1STA = 0x90;
  8063  0CCB  3090               	movlw	144
  8064  0CCC  009D               	movwf	29	;volatile
  8065                           
  8066                           ;mcc_generated_files/eusart.c: 67:     TX1STA = 0x24;
  8067  0CCD  3024               	movlw	36
  8068  0CCE  009E               	movwf	30	;volatile
  8069                           
  8070                           ;mcc_generated_files/eusart.c: 70:     SPBRGL = 0x67;
  8071  0CCF  3067               	movlw	103
  8072  0CD0  009B               	movwf	27	;volatile
  8073                           
  8074                           ;mcc_generated_files/eusart.c: 73:     SPBRGH = 0x00;
  8075  0CD1  019C               	clrf	28	;volatile
  8076  0CD2  0008               	return
  8077  0CD3                     __end_of_EUSART_Initialize:	
  8078                           
  8079                           	psect	text31
  8080  018E                     __ptext31:	
  8081 ;; *************** function _GetNavData *****************
  8082 ;; Defined at:
  8083 ;;		line 333 in file "main.c"
  8084 ;; Parameters:    Size  Location     Type
  8085 ;;		None
  8086 ;; Auto vars:     Size  Location     Type
  8087 ;;  i               2   19[BANK0 ] int 
  8088 ;;  skip            1   16[BANK0 ] _Bool 
  8089 ;;  byte            1   24[BANK0 ] unsigned char 
  8090 ;;  startTime       4    8[BANK0 ] unsigned long 
  8091 ;;  dataIndex       2   22[BANK0 ] int 
  8092 ;;  dataFieldTyp    2   17[BANK0 ] int 
  8093 ;;  success         1   21[BANK0 ] _Bool 
  8094 ;; Return value:  Size  Location     Type
  8095 ;;                  1    wreg      _Bool 
  8096 ;; Registers used:
  8097 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8098 ;; Tracked objects:
  8099 ;;		On entry : 0/0
  8100 ;;		On exit  : 0/0
  8101 ;;		Unchanged: 0/0
  8102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8104 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8105 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8106 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8107 ;;Total ram usage:       21 bytes
  8108 ;; Hardware stack levels used:    1
  8109 ;; Hardware stack levels required when called:    5
  8110 ;; This function calls:
  8111 ;;		_EUSART_Read
  8112 ;;		_EUSART_is_rx_ready
  8113 ;;		_TMR1_ReadTimer
  8114 ;; This function is called by:
  8115 ;;		_main
  8116 ;; This function uses a non-reentrant model
  8117 ;;
  8118                           
  8119                           
  8120                           ;psect for function _GetNavData
  8121  018E                     _GetNavData:	
  8122                           
  8123                           ;main.c: 335:     _Bool success = 0;
  8124                           
  8125                           ;incstack = 0
  8126                           ; Regs used in _GetNavData: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8127  018E  0020               	movlb	0	; select bank0
  8128  018F  01B5               	clrf	GetNavData@success
  8129  0190  0022               	movlb	2	; select bank2
  8130  0191  168E               	bsf	14,5	;volatile
  8131                           
  8132                           ;main.c: 338:     unsigned long startTime = TMR1_ReadTimer();
  8133  0192  318D  2581  3181   	fcall	_TMR1_ReadTimer
  8134  0195  0872               	movf	?_TMR1_ReadTimer,w
  8135  0196  0020               	movlb	0	; select bank0
  8136  0197  00A8               	movwf	GetNavData@startTime
  8137  0198  0873               	movf	?_TMR1_ReadTimer+1,w
  8138  0199  00A9               	movwf	GetNavData@startTime+1
  8139  019A  01AA               	clrf	GetNavData@startTime+2
  8140  019B  01AB               	clrf	GetNavData@startTime+3
  8141                           
  8142                           ;main.c: 341:     int dataIndex = 0;
  8143  019C  01B6               	clrf	GetNavData@dataIndex
  8144  019D  01B7               	clrf	GetNavData@dataIndex+1
  8145                           
  8146                           ;main.c: 343:     int dataFieldType = PUBX_HEADER;
  8147  019E  01B1               	clrf	GetNavData@dataFieldType
  8148  019F  01B2               	clrf	GetNavData@dataFieldType+1
  8149  01A0                     l3276:	
  8150                           ;main.c: 345:     while (!success)
  8151                           
  8152                           
  8153                           ;main.c: 345:     while (!success)
  8154  01A0  0020               	movlb	0	; select bank0
  8155  01A1  0835               	movf	GetNavData@success,w
  8156  01A2  1D03               	btfss	3,2
  8157  01A3  2A82               	goto	l3278
  8158  01A4  318C  24B3  3181   	fcall	_EUSART_Read
  8159                           
  8160                           ;main.c: 350:         if (TMR1_ReadTimer() - startTime > 3000)
  8161  01A7  318D  2581  3181   	fcall	_TMR1_ReadTimer
  8162  01AA  0872               	movf	?_TMR1_ReadTimer,w
  8163  01AB  0020               	movlb	0	; select bank0
  8164  01AC  00A4               	movwf	??_GetNavData
  8165  01AD  0873               	movf	?_TMR1_ReadTimer+1,w
  8166  01AE  00A5               	movwf	??_GetNavData+1
  8167  01AF  01A6               	clrf	??_GetNavData+2
  8168  01B0  01A7               	clrf	??_GetNavData+3
  8169  01B1  0828               	movf	GetNavData@startTime,w
  8170  01B2  02A4               	subwf	??_GetNavData,f
  8171  01B3  0829               	movf	GetNavData@startTime+1,w
  8172  01B4  3BA5               	subwfb	??_GetNavData+1,f
  8173  01B5  082A               	movf	GetNavData@startTime+2,w
  8174  01B6  3BA6               	subwfb	??_GetNavData+2,f
  8175  01B7  082B               	movf	GetNavData@startTime+3,w
  8176  01B8  3BA7               	subwfb	??_GetNavData+3,f
  8177  01B9  0827               	movf	??_GetNavData+3,w
  8178  01BA  1D03               	btfss	3,2
  8179  01BB  2A82               	goto	l3278
  8180  01BC  0826               	movf	??_GetNavData+2,w
  8181  01BD  1D03               	btfss	3,2
  8182  01BE  2A82               	goto	l3278
  8183  01BF  30B9               	movlw	185
  8184  01C0  0224               	subwf	??_GetNavData,w
  8185  01C1  300B               	movlw	11
  8186  01C2  3B25               	subwfb	??_GetNavData+1,w
  8187  01C3  1803               	btfsc	3,0
  8188  01C4  2A82               	goto	l3278
  8189                           
  8190                           ;main.c: 356:         if (EUSART_is_rx_ready())
  8191  01C5  318C  2481  3181   	fcall	_EUSART_is_rx_ready
  8192  01C8  3A00               	xorlw	0
  8193  01C9  1903               	skipnz
  8194  01CA  29A0               	goto	l3276
  8195                           
  8196                           ;main.c: 357:         {;main.c: 358:             byte = EUSART_Read();
  8197  01CB  318C  24B3  3181   	fcall	_EUSART_Read
  8198  01CE  0020               	movlb	0	; select bank0
  8199  01CF  00A4               	movwf	??_GetNavData
  8200  01D0  0824               	movf	??_GetNavData,w
  8201  01D1  00B8               	movwf	GetNavData@byte
  8202                           
  8203                           ;main.c: 360:             _Bool skip = 1;
  8204  01D2  01B0               	clrf	GetNavData@skip
  8205  01D3  0AB0               	incf	GetNavData@skip,f
  8206                           
  8207                           ;main.c: 361:             switch (byte)
  8208  01D4  29F1               	goto	l3236
  8209  01D5                     l3226:	
  8210                           
  8211                           ;main.c: 364:                 dataFieldType++;
  8212  01D5  3001               	movlw	1
  8213  01D6  07B1               	addwf	GetNavData@dataFieldType,f
  8214  01D7  3000               	movlw	0
  8215  01D8  3DB2               	addwfc	GetNavData@dataFieldType+1,f
  8216                           
  8217                           ;main.c: 365:                 dataIndex = 0;
  8218  01D9  01B6               	clrf	GetNavData@dataIndex
  8219  01DA  01B7               	clrf	GetNavData@dataIndex+1
  8220                           
  8221                           ;main.c: 366:                 break;
  8222  01DB  2A01               	goto	l3238
  8223  01DC                     l3230:	
  8224                           
  8225                           ;main.c: 368:                 success = dataFieldType > 13;
  8226  01DC  0832               	movf	GetNavData@dataFieldType+1,w
  8227  01DD  3A80               	xorlw	128
  8228  01DE  00A4               	movwf	??_GetNavData
  8229  01DF  3080               	movlw	128
  8230  01E0  0224               	subwf	??_GetNavData,w
  8231  01E1  1D03               	skipz
  8232  01E2  29E5               	goto	u2895
  8233  01E3  300E               	movlw	14
  8234  01E4  0231               	subwf	GetNavData@dataFieldType,w
  8235  01E5                     u2895:	
  8236  01E5  1C03               	btfss	3,0
  8237  01E6  29E9               	goto	u2890
  8238  01E7  3001               	movlw	1
  8239  01E8  29EA               	goto	u2900
  8240  01E9                     u2890:	
  8241  01E9  3000               	movlw	0
  8242  01EA                     u2900:	
  8243  01EA  0020               	movlb	0	; select bank0
  8244  01EB  00A5               	movwf	??_GetNavData+1
  8245  01EC  0825               	movf	??_GetNavData+1,w
  8246  01ED  00B5               	movwf	GetNavData@success
  8247                           
  8248                           ;main.c: 369:                 break;
  8249  01EE  2A01               	goto	l3238
  8250  01EF                     l3232:	
  8251                           
  8252                           ;main.c: 371:                 skip = 0;
  8253  01EF  01B0               	clrf	GetNavData@skip
  8254                           
  8255                           ;main.c: 372:                 break;
  8256  01F0  2A01               	goto	l3238
  8257  01F1                     l3236:	
  8258  01F1  0838               	movf	GetNavData@byte,w
  8259  01F2  00A4               	movwf	??_GetNavData
  8260  01F3  01A5               	clrf	??_GetNavData+1
  8261                           
  8262                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8263                           ; Switch size 1, requested type "simple"
  8264                           ; Number of cases is 1, Range of values is 0 to 0
  8265                           ; switch strategies available:
  8266                           ; Name         Instructions Cycles
  8267                           ; simple_byte            4     3 (average)
  8268                           ; direct_byte            8     6 (fixed)
  8269                           ; jumptable            260     6 (fixed)
  8270                           ;	Chosen strategy is simple_byte
  8271  01F4  0825               	movf	??_GetNavData+1,w
  8272  01F5  3A00               	xorlw	0	; case 0
  8273  01F6  1903               	skipnz
  8274  01F7  29F9               	goto	l3382
  8275  01F8  29EF               	goto	l3232
  8276  01F9                     l3382:	
  8277                           
  8278                           ; Switch size 1, requested type "simple"
  8279                           ; Number of cases is 2, Range of values is 10 to 44
  8280                           ; switch strategies available:
  8281                           ; Name         Instructions Cycles
  8282                           ; simple_byte            7     4 (average)
  8283                           ; direct_byte           79     9 (fixed)
  8284                           ; jumptable            263     9 (fixed)
  8285                           ;	Chosen strategy is simple_byte
  8286  01F9  0824               	movf	??_GetNavData,w
  8287  01FA  3A0A               	xorlw	10	; case 10
  8288  01FB  1903               	skipnz
  8289  01FC  29DC               	goto	l3230
  8290  01FD  3A26               	xorlw	38	; case 44
  8291  01FE  1903               	skipnz
  8292  01FF  29D5               	goto	l3226
  8293  0200  29EF               	goto	l3232
  8294  0201                     l3238:	
  8295                           
  8296                           ;main.c: 375:             if (!skip)
  8297  0201  0830               	movf	GetNavData@skip,w
  8298  0202  1903               	btfsc	3,2
  8299  0203  2A57               	goto	l3272
  8300  0204  29A0               	goto	l3276
  8301  0205                     l3242:	
  8302                           
  8303                           ;main.c: 381:                     gps_time[dataIndex] = byte;
  8304  0205  0838               	movf	GetNavData@byte,w
  8305  0206  00A4               	movwf	??_GetNavData
  8306  0207  0836               	movf	GetNavData@dataIndex,w
  8307  0208  3E28               	addlw	(low (_gps_time| (0+256)))& (0+255)
  8308  0209  2A4C               	goto	L11
  8309  020A                     l3244:	
  8310                           ;main.c: 382:                     break;
  8311                           
  8312                           
  8313                           ;main.c: 384:                     gps_latitude[dataIndex + 1] = byte;
  8314  020A  0838               	movf	GetNavData@byte,w
  8315  020B  00A4               	movwf	??_GetNavData
  8316  020C  0836               	movf	GetNavData@dataIndex,w
  8317  020D  3EE1               	addlw	(low ((_gps_latitude| (0+256)+1)))& (0+255)
  8318  020E  2A4C               	goto	L11
  8319  020F                     l3246:	
  8320                           ;main.c: 385:                     break;
  8321                           
  8322                           
  8323                           ;main.c: 388:                     gps_latitude[0] = byte == 'N' ? '+' : '-';
  8324  020F  304E               	movlw	78
  8325  0210  0638               	xorwf	GetNavData@byte,w
  8326  0211  1903               	btfsc	3,2
  8327  0212  2A15               	goto	l3250
  8328  0213  302D               	movlw	45
  8329  0214  2A16               	goto	L5
  8330  0215                     l3250:	
  8331  0215  302B               	movlw	43
  8332  0216                     L5:	
  8333  0216  00AC               	movwf	_GetNavData$607
  8334  0217  3000               	movlw	0
  8335  0218  00AD               	movwf	_GetNavData$607+1
  8336  0219  082C               	movf	_GetNavData$607,w
  8337  021A  00A4               	movwf	??_GetNavData
  8338  021B  0824               	movf	??_GetNavData,w
  8339  021C  0023               	movlb	3	; select bank3
  8340  021D  00E0               	movwf	_gps_latitude^(0+384)
  8341                           
  8342                           ;main.c: 389:                     break;
  8343  021E  2A7C               	goto	l3274
  8344  021F                     l3252:	
  8345                           
  8346                           ;main.c: 391:                     gps_longitude[dataIndex + 1] = byte;
  8347  021F  0838               	movf	GetNavData@byte,w
  8348  0220  00A4               	movwf	??_GetNavData
  8349  0221  0836               	movf	GetNavData@dataIndex,w
  8350  0222  3ED1               	addlw	(low ((_gps_longitude| (0+256)+1)))& (0+255)
  8351  0223  2A4C               	goto	L11
  8352  0224                     l3254:	
  8353                           ;main.c: 392:                     break;
  8354                           
  8355                           
  8356                           ;main.c: 395:                     gps_longitude[0] = byte == 'E' ? '+' : '-';
  8357  0224  3045               	movlw	69
  8358  0225  0638               	xorwf	GetNavData@byte,w
  8359  0226  1903               	btfsc	3,2
  8360  0227  2A2A               	goto	l3258
  8361  0228  302D               	movlw	45
  8362  0229  2A2B               	goto	L7
  8363  022A                     l3258:	
  8364  022A  302B               	movlw	43
  8365  022B                     L7:	
  8366  022B  00AE               	movwf	_GetNavData$608
  8367  022C  3000               	movlw	0
  8368  022D  00AF               	movwf	_GetNavData$608+1
  8369  022E  082E               	movf	_GetNavData$608,w
  8370  022F  00A4               	movwf	??_GetNavData
  8371  0230  0824               	movf	??_GetNavData,w
  8372  0231  0023               	movlb	3	; select bank3
  8373  0232  00D0               	movwf	_gps_longitude^(0+384)
  8374                           
  8375                           ;main.c: 396:                     break;
  8376  0233  2A7C               	goto	l3274
  8377  0234                     l3260:	
  8378                           
  8379                           ;main.c: 398:                     gps_altitude[dataIndex] = byte;
  8380  0234  0838               	movf	GetNavData@byte,w
  8381  0235  00A4               	movwf	??_GetNavData
  8382  0236  0836               	movf	GetNavData@dataIndex,w
  8383  0237  3EC0               	addlw	(low (_gps_altitude| (0+256)))& (0+255)
  8384  0238  2A4C               	goto	L11
  8385  0239                     l3262:	
  8386                           ;main.c: 399:                     break;
  8387                           
  8388                           
  8389                           ;main.c: 401:                     gps_nav_status[dataIndex] = byte;
  8390  0239  0838               	movf	GetNavData@byte,w
  8391  023A  00A4               	movwf	??_GetNavData
  8392  023B  0836               	movf	GetNavData@dataIndex,w
  8393  023C  3E20               	addlw	(low (_gps_nav_status| (0+256)))& (0+255)
  8394  023D  2A4C               	goto	L11
  8395  023E                     l3264:	
  8396                           ;main.c: 402:                     break;
  8397                           
  8398                           
  8399                           ;main.c: 404:                     gps_speed_over_ground[dataIndex] = byte;
  8400  023E  0838               	movf	GetNavData@byte,w
  8401  023F  00A4               	movwf	??_GetNavData
  8402  0240  0836               	movf	GetNavData@dataIndex,w
  8403  0241  3E50               	addlw	(low (_gps_speed_over_ground| (0+256)))& (0+255)
  8404  0242  2A4C               	goto	L11
  8405  0243                     l3266:	
  8406                           ;main.c: 405:                     break;
  8407                           
  8408                           
  8409                           ;main.c: 407:                     gps_course_over_ground[dataIndex] = byte;
  8410  0243  0838               	movf	GetNavData@byte,w
  8411  0244  00A4               	movwf	??_GetNavData
  8412  0245  0836               	movf	GetNavData@dataIndex,w
  8413  0246  3E44               	addlw	(low (_gps_course_over_ground| (0+256)))& (0+255)
  8414  0247  2A4C               	goto	L11
  8415  0248                     l3268:	
  8416                           ;main.c: 408:                     break;
  8417                           
  8418                           
  8419                           ;main.c: 410:                     gps_vertical_velocity[dataIndex] = byte;
  8420  0248  0838               	movf	GetNavData@byte,w
  8421  0249  00A4               	movwf	??_GetNavData
  8422  024A  0836               	movf	GetNavData@dataIndex,w
  8423  024B  3E38               	addlw	(low (_gps_vertical_velocity| (0+256)))& (0+255)
  8424  024C                     L11:	
  8425  024C  0086               	movwf	6
  8426  024D  3001               	movlw	1	; select bank2/3
  8427  024E  0087               	movwf	7
  8428  024F  0824               	movf	??_GetNavData,w
  8429  0250  0081               	movwf	1
  8430                           
  8431                           ;main.c: 411:                     break;
  8432  0251  2A7C               	goto	l3274
  8433  0252                     l3270:	
  8434                           
  8435                           ;main.c: 413:                     dataIndex = -1;
  8436  0252  30FF               	movlw	255
  8437  0253  00B6               	movwf	GetNavData@dataIndex
  8438  0254  30FF               	movlw	255
  8439  0255  00B7               	movwf	GetNavData@dataIndex+1
  8440                           
  8441                           ;main.c: 414:                 }
  8442  0256  2A7C               	goto	l3274
  8443  0257                     l3272:	
  8444                           
  8445                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8446                           ; Switch size 1, requested type "simple"
  8447                           ; Number of cases is 1, Range of values is 0 to 0
  8448                           ; switch strategies available:
  8449                           ; Name         Instructions Cycles
  8450                           ; simple_byte            4     3 (average)
  8451                           ; direct_byte            8     6 (fixed)
  8452                           ; jumptable            260     6 (fixed)
  8453                           ;	Chosen strategy is simple_byte
  8454  0257  0832               	movf	GetNavData@dataFieldType+1,w
  8455  0258  3A00               	xorlw	0	; case 0
  8456  0259  1903               	skipnz
  8457  025A  2A5C               	goto	l3384
  8458  025B  2A52               	goto	l3270
  8459  025C                     l3384:	
  8460                           
  8461                           ; Switch size 1, requested type "simple"
  8462                           ; Number of cases is 10, Range of values is 2 to 13
  8463                           ; switch strategies available:
  8464                           ; Name         Instructions Cycles
  8465                           ; simple_byte           31    16 (average)
  8466                           ; direct_byte           33     9 (fixed)
  8467                           ; jumptable            263     9 (fixed)
  8468                           ;	Chosen strategy is simple_byte
  8469  025C  0831               	movf	GetNavData@dataFieldType,w
  8470  025D  3A02               	xorlw	2	; case 2
  8471  025E  1903               	skipnz
  8472  025F  2A05               	goto	l3242
  8473  0260  3A01               	xorlw	1	; case 3
  8474  0261  1903               	skipnz
  8475  0262  2A0A               	goto	l3244
  8476  0263  3A07               	xorlw	7	; case 4
  8477  0264  1903               	skipnz
  8478  0265  2A0F               	goto	l3246
  8479  0266  3A01               	xorlw	1	; case 5
  8480  0267  1903               	skipnz
  8481  0268  2A1F               	goto	l3252
  8482  0269  3A03               	xorlw	3	; case 6
  8483  026A  1903               	skipnz
  8484  026B  2A24               	goto	l3254
  8485  026C  3A01               	xorlw	1	; case 7
  8486  026D  1903               	skipnz
  8487  026E  2A34               	goto	l3260
  8488  026F  3A0F               	xorlw	15	; case 8
  8489  0270  1903               	skipnz
  8490  0271  2A39               	goto	l3262
  8491  0272  3A03               	xorlw	3	; case 11
  8492  0273  1903               	skipnz
  8493  0274  2A3E               	goto	l3264
  8494  0275  3A07               	xorlw	7	; case 12
  8495  0276  1903               	skipnz
  8496  0277  2A43               	goto	l3266
  8497  0278  3A01               	xorlw	1	; case 13
  8498  0279  1903               	skipnz
  8499  027A  2A48               	goto	l3268
  8500  027B  2A52               	goto	l3270
  8501  027C                     l3274:	
  8502                           
  8503                           ;main.c: 415:                 dataIndex++;
  8504  027C  3001               	movlw	1
  8505  027D  0020               	movlb	0	; select bank0
  8506  027E  07B6               	addwf	GetNavData@dataIndex,f
  8507  027F  3000               	movlw	0
  8508  0280  3DB7               	addwfc	GetNavData@dataIndex+1,f
  8509  0281  29A0               	goto	l3276
  8510  0282                     l3278:	
  8511                           
  8512                           ;main.c: 422:     if (!success)
  8513  0282  0835               	movf	GetNavData@success,w
  8514  0283  1D03               	btfss	3,2
  8515  0284  2AB5               	goto	l379
  8516                           
  8517                           ;main.c: 423:     {;main.c: 425:         for (int i = 0; i < 4; i++)
  8518  0285  01B3               	clrf	GetNavData@i
  8519  0286  01B4               	clrf	GetNavData@i+1
  8520  0287                     l3286:	
  8521                           
  8522                           ;main.c: 426:         {;main.c: 427:             _delay((unsigned long)((250)*(4000000/4
      +                          000.0)));
  8523  0287  3002               	movlw	2
  8524  0288  0020               	movlb	0	; select bank0
  8525  0289  00A5               	movwf	??_GetNavData+1
  8526  028A  3045               	movlw	69
  8527  028B  00A4               	movwf	??_GetNavData
  8528  028C  30A9               	movlw	169
  8529  028D                     u3027:	
  8530  028D  0B89               	decfsz	9,f
  8531  028E  2A8D               	goto	u3027
  8532  028F  0BA4               	decfsz	??_GetNavData,f
  8533  0290  2A8D               	goto	u3027
  8534  0291  0BA5               	decfsz	??_GetNavData+1,f
  8535  0292  2A8D               	goto	u3027
  8536  0293  3200               	nop2
  8537  0294  0022               	movlb	2	; select bank2
  8538  0295  128E               	bcf	14,5	;volatile
  8539                           
  8540                           ;main.c: 429:             _delay((unsigned long)((250)*(4000000/4000.0)));
  8541  0296  3002               	movlw	2
  8542  0297  0020               	movlb	0	; select bank0
  8543  0298  00A5               	movwf	??_GetNavData+1
  8544  0299  3045               	movlw	69
  8545  029A  00A4               	movwf	??_GetNavData
  8546  029B  30A9               	movlw	169
  8547  029C                     u3037:	
  8548  029C  0B89               	decfsz	9,f
  8549  029D  2A9C               	goto	u3037
  8550  029E  0BA4               	decfsz	??_GetNavData,f
  8551  029F  2A9C               	goto	u3037
  8552  02A0  0BA5               	decfsz	??_GetNavData+1,f
  8553  02A1  2A9C               	goto	u3037
  8554  02A2  3200               	nop2
  8555  02A3  0022               	movlb	2	; select bank2
  8556  02A4  168E               	bsf	14,5	;volatile
  8557                           
  8558                           ;main.c: 431:         }
  8559  02A5  3001               	movlw	1
  8560  02A6  0020               	movlb	0	; select bank0
  8561  02A7  07B3               	addwf	GetNavData@i,f
  8562  02A8  3000               	movlw	0
  8563  02A9  3DB4               	addwfc	GetNavData@i+1,f
  8564  02AA  0834               	movf	GetNavData@i+1,w
  8565  02AB  3A80               	xorlw	128
  8566  02AC  00A4               	movwf	??_GetNavData
  8567  02AD  3080               	movlw	128
  8568  02AE  0224               	subwf	??_GetNavData,w
  8569  02AF  1D03               	skipz
  8570  02B0  2AB3               	goto	u2965
  8571  02B1  3004               	movlw	4
  8572  02B2  0233               	subwf	GetNavData@i,w
  8573  02B3                     u2965:	
  8574  02B3  1C03               	skipc
  8575  02B4  2A87               	goto	l3286
  8576  02B5                     l379:	
  8577                           ;main.c: 433:     do { LATCbits.LATC5 = 0; } while(0);
  8578                           
  8579  02B5  0022               	movlb	2	; select bank2
  8580  02B6  128E               	bcf	14,5	;volatile
  8581  02B7  0008               	return
  8582  02B8                     __end_of_GetNavData:	
  8583                           
  8584                           	psect	text32
  8585  0D81                     __ptext32:	
  8586 ;; *************** function _TMR1_ReadTimer *****************
  8587 ;; Defined at:
  8588 ;;		line 105 in file "mcc_generated_files/tmr1.c"
  8589 ;; Parameters:    Size  Location     Type
  8590 ;;		None
  8591 ;; Auto vars:     Size  Location     Type
  8592 ;;  readVal         2    0[BANK0 ] unsigned short 
  8593 ;;  readValLow      1    3[BANK0 ] unsigned char 
  8594 ;;  readValHigh     1    2[BANK0 ] unsigned char 
  8595 ;; Return value:  Size  Location     Type
  8596 ;;                  2    2[COMMON] unsigned short 
  8597 ;; Registers used:
  8598 ;;		wreg
  8599 ;; Tracked objects:
  8600 ;;		On entry : 0/0
  8601 ;;		On exit  : 0/0
  8602 ;;		Unchanged: 0/0
  8603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8604 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8605 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8606 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8607 ;;      Totals:         7       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8608 ;;Total ram usage:       11 bytes
  8609 ;; Hardware stack levels used:    1
  8610 ;; Hardware stack levels required when called:    4
  8611 ;; This function calls:
  8612 ;;		Nothing
  8613 ;; This function is called by:
  8614 ;;		_GPS_HasAcknowledged
  8615 ;;		_GetNavData
  8616 ;; This function uses a non-reentrant model
  8617 ;;
  8618                           
  8619                           
  8620                           ;psect for function _TMR1_ReadTimer
  8621  0D81                     _TMR1_ReadTimer:	
  8622                           
  8623                           ;mcc_generated_files/tmr1.c: 107:     uint16_t readVal;;mcc_generated_files/tmr1.c: 108:
      +                               uint8_t readValHigh;;mcc_generated_files/tmr1.c: 109:     uint8_t readValLow;;mcc_g
      +                          enerated_files/tmr1.c: 112:     readValLow = TMR1L;
  8624                           
  8625                           ;incstack = 0
  8626                           ; Regs used in _TMR1_ReadTimer: [wreg]
  8627  0D81  0020               	movlb	0	; select bank0
  8628  0D82  0816               	movf	22,w	;volatile
  8629  0D83  00F4               	movwf	??_TMR1_ReadTimer
  8630  0D84  0874               	movf	??_TMR1_ReadTimer,w
  8631  0D85  00A3               	movwf	TMR1_ReadTimer@readValLow
  8632                           
  8633                           ;mcc_generated_files/tmr1.c: 113:     readValHigh = TMR1H;
  8634  0D86  0817               	movf	23,w	;volatile
  8635  0D87  00F4               	movwf	??_TMR1_ReadTimer
  8636  0D88  0874               	movf	??_TMR1_ReadTimer,w
  8637  0D89  00A2               	movwf	TMR1_ReadTimer@readValHigh
  8638                           
  8639                           ;mcc_generated_files/tmr1.c: 115:     readVal = ((uint16_t)readValHigh << 8) | readValLo
      +                          w;
  8640  0D8A  0823               	movf	TMR1_ReadTimer@readValLow,w
  8641  0D8B  00F4               	movwf	??_TMR1_ReadTimer
  8642  0D8C  01F5               	clrf	??_TMR1_ReadTimer+1
  8643  0D8D  0822               	movf	TMR1_ReadTimer@readValHigh,w
  8644  0D8E  00F6               	movwf	??_TMR1_ReadTimer+2
  8645  0D8F  01F7               	clrf	??_TMR1_ReadTimer+3
  8646  0D90  0876               	movf	??_TMR1_ReadTimer+2,w
  8647  0D91  00F7               	movwf	??_TMR1_ReadTimer+3
  8648  0D92  01F6               	clrf	??_TMR1_ReadTimer+2
  8649  0D93  0874               	movf	??_TMR1_ReadTimer,w
  8650  0D94  0476               	iorwf	??_TMR1_ReadTimer+2,w
  8651  0D95  00A0               	movwf	TMR1_ReadTimer@readVal
  8652  0D96  0875               	movf	??_TMR1_ReadTimer+1,w
  8653  0D97  0477               	iorwf	??_TMR1_ReadTimer+3,w
  8654  0D98  00A1               	movwf	TMR1_ReadTimer@readVal+1
  8655                           
  8656                           ;mcc_generated_files/tmr1.c: 117:     return readVal;
  8657  0D99  0821               	movf	TMR1_ReadTimer@readVal+1,w
  8658  0D9A  00F3               	movwf	?_TMR1_ReadTimer+1
  8659  0D9B  0820               	movf	TMR1_ReadTimer@readVal,w
  8660  0D9C  00F2               	movwf	?_TMR1_ReadTimer
  8661  0D9D  0008               	return
  8662  0D9E                     __end_of_TMR1_ReadTimer:	
  8663                           
  8664                           	psect	text33
  8665  0C81                     __ptext33:	
  8666 ;; *************** function _EUSART_is_rx_ready *****************
  8667 ;; Defined at:
  8668 ;;		line 83 in file "mcc_generated_files/eusart.c"
  8669 ;; Parameters:    Size  Location     Type
  8670 ;;		None
  8671 ;; Auto vars:     Size  Location     Type
  8672 ;;		None
  8673 ;; Return value:  Size  Location     Type
  8674 ;;                  1    wreg      _Bool 
  8675 ;; Registers used:
  8676 ;;		wreg, status,2, status,0
  8677 ;; Tracked objects:
  8678 ;;		On entry : 0/0
  8679 ;;		On exit  : 0/0
  8680 ;;		Unchanged: 0/0
  8681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8685 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8686 ;;Total ram usage:        0 bytes
  8687 ;; Hardware stack levels used:    1
  8688 ;; Hardware stack levels required when called:    4
  8689 ;; This function calls:
  8690 ;;		Nothing
  8691 ;; This function is called by:
  8692 ;;		_GPS_HasAcknowledged
  8693 ;;		_GetNavData
  8694 ;; This function uses a non-reentrant model
  8695 ;;
  8696                           
  8697                           
  8698                           ;psect for function _EUSART_is_rx_ready
  8699  0C81                     _EUSART_is_rx_ready:	
  8700                           
  8701                           ;mcc_generated_files/eusart.c: 85:     return PIR1bits.RCIF;
  8702                           
  8703                           ;incstack = 0
  8704                           ; Regs used in _EUSART_is_rx_ready: [wreg+status,2+status,0]
  8705  0C81  0020               	movlb	0	; select bank0
  8706  0C82  0E10               	swapf	16,w	;volatile
  8707  0C83  0C89               	rrf	9,f
  8708  0C84  3901               	andlw	1
  8709  0C85  0008               	return
  8710  0C86                     __end_of_EUSART_is_rx_ready:	
  8711                           
  8712                           	psect	text34
  8713  0CB3                     __ptext34:	
  8714 ;; *************** function _EUSART_Read *****************
  8715 ;; Defined at:
  8716 ;;		line 93 in file "mcc_generated_files/eusart.c"
  8717 ;; Parameters:    Size  Location     Type
  8718 ;;		None
  8719 ;; Auto vars:     Size  Location     Type
  8720 ;;		None
  8721 ;; Return value:  Size  Location     Type
  8722 ;;                  1    wreg      unsigned char 
  8723 ;; Registers used:
  8724 ;;		wreg
  8725 ;; Tracked objects:
  8726 ;;		On entry : 0/0
  8727 ;;		On exit  : 0/0
  8728 ;;		Unchanged: 0/0
  8729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8733 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8734 ;;Total ram usage:        0 bytes
  8735 ;; Hardware stack levels used:    1
  8736 ;; Hardware stack levels required when called:    4
  8737 ;; This function calls:
  8738 ;;		Nothing
  8739 ;; This function is called by:
  8740 ;;		_GPS_HasAcknowledged
  8741 ;;		_GetNavData
  8742 ;;		_getch
  8743 ;; This function uses a non-reentrant model
  8744 ;;
  8745                           
  8746                           
  8747                           ;psect for function _EUSART_Read
  8748  0CB3                     _EUSART_Read:	
  8749  0CB3                     l105:	
  8750                           ;mcc_generated_files/eusart.c: 96:     {;mcc_generated_files/eusart.c: 97:     }
  8751                           
  8752                           ;incstack = 0
  8753                           ; Regs used in _EUSART_Read: [wreg]
  8754                           
  8755                           
  8756                           ;mcc_generated_files/eusart.c: 95:     while(!PIR1bits.RCIF)
  8757  0CB3  0020               	movlb	0	; select bank0
  8758  0CB4  1E90               	btfss	16,5	;volatile
  8759  0CB5  2CB3               	goto	l105
  8760                           
  8761                           ;mcc_generated_files/eusart.c: 100:     if(1 == RC1STAbits.OERR)
  8762  0CB6  0023               	movlb	3	; select bank3
  8763  0CB7  1C9D               	btfss	29,1	;volatile
  8764  0CB8  2CBB               	goto	l2940
  8765                           
  8766                           ;mcc_generated_files/eusart.c: 101:     {;mcc_generated_files/eusart.c: 104:         RC1
      +                          STAbits.CREN = 0;
  8767  0CB9  121D               	bcf	29,4	;volatile
  8768                           
  8769                           ;mcc_generated_files/eusart.c: 105:         RC1STAbits.CREN = 1;
  8770  0CBA  161D               	bsf	29,4	;volatile
  8771  0CBB                     l2940:	
  8772                           
  8773                           ;mcc_generated_files/eusart.c: 108:     return RC1REG;
  8774  0CBB  0819               	movf	25,w	;volatile
  8775  0CBC  0008               	return
  8776  0CBD                     __end_of_EUSART_Read:	
  8777                           
  8778                           	psect	text35
  8779  0F13                     __ptext35:	
  8780 ;; *************** function _AppendCRC *****************
  8781 ;; Defined at:
  8782 ;;		line 151 in file "main.c"
  8783 ;; Parameters:    Size  Location     Type
  8784 ;;  data            1    wreg     PTR unsigned char 
  8785 ;;		 -> main@message(43), 
  8786 ;;  crc             2   13[BANK0 ] unsigned short 
  8787 ;; Auto vars:     Size  Location     Type
  8788 ;;  data            1   15[BANK0 ] PTR unsigned char 
  8789 ;;		 -> main@message(43), 
  8790 ;;  len             2   16[BANK0 ] int 
  8791 ;; Return value:  Size  Location     Type
  8792 ;;                  1    wreg      void 
  8793 ;; Registers used:
  8794 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8795 ;; Tracked objects:
  8796 ;;		On entry : 0/0
  8797 ;;		On exit  : 0/0
  8798 ;;		Unchanged: 0/0
  8799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8800 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8801 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8802 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8803 ;;      Totals:         2       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8804 ;;Total ram usage:        7 bytes
  8805 ;; Hardware stack levels used:    1
  8806 ;; Hardware stack levels required when called:    5
  8807 ;; This function calls:
  8808 ;;		_strlen
  8809 ;; This function is called by:
  8810 ;;		_main
  8811 ;; This function uses a non-reentrant model
  8812 ;;
  8813                           
  8814                           
  8815                           ;psect for function _AppendCRC
  8816  0F13                     _AppendCRC:	
  8817                           
  8818                           ;incstack = 0
  8819                           ; Regs used in _AppendCRC: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8820                           ;AppendCRC@data stored from wreg
  8821  0F13  0020               	movlb	0	; select bank0
  8822  0F14  00AF               	movwf	AppendCRC@data
  8823                           
  8824                           ;main.c: 151: void AppendCRC(char* data, unsigned short crc);main.c: 152: {;main.c: 153:
      +                            int len = strlen(data);
  8825  0F15  082F               	movf	AppendCRC@data,w
  8826  0F16  00F2               	movwf	strlen@s
  8827  0F17  3002               	movlw	2
  8828  0F18  00F3               	movwf	strlen@s+1
  8829  0F19  318D  2520  318F   	fcall	_strlen
  8830  0F1C  0873               	movf	?_strlen+1,w
  8831  0F1D  0020               	movlb	0	; select bank0
  8832  0F1E  00B1               	movwf	AppendCRC@len+1
  8833  0F1F  0872               	movf	?_strlen,w
  8834  0F20  00B0               	movwf	AppendCRC@len
  8835                           
  8836                           ;main.c: 154:  if (len >= 40 - 1)
  8837  0F21  0831               	movf	AppendCRC@len+1,w
  8838  0F22  3A80               	xorlw	128
  8839  0F23  00F8               	movwf	??_AppendCRC
  8840  0F24  3080               	movlw	128
  8841  0F25  0278               	subwf	??_AppendCRC,w
  8842  0F26  1D03               	skipz
  8843  0F27  2F2A               	goto	u2855
  8844  0F28  3027               	movlw	39
  8845  0F29  0230               	subwf	AppendCRC@len,w
  8846  0F2A                     u2855:	
  8847  0F2A  1C03               	skipc
  8848  0F2B  2F31               	goto	l3170
  8849                           
  8850                           ;main.c: 155:  {;main.c: 157:   len = 40 - 2;
  8851  0F2C  3026               	movlw	38
  8852  0F2D  0020               	movlb	0	; select bank0
  8853  0F2E  00B0               	movwf	AppendCRC@len
  8854  0F2F  3000               	movlw	0
  8855  0F30  00B1               	movwf	AppendCRC@len+1
  8856  0F31                     l3170:	
  8857                           
  8858                           ;main.c: 159:  data[len] = (char)(crc >> 8);
  8859  0F31  0020               	movlb	0	; select bank0
  8860  0F32  082E               	movf	AppendCRC@crc+1,w
  8861  0F33  00F8               	movwf	??_AppendCRC
  8862  0F34  0830               	movf	AppendCRC@len,w
  8863  0F35  072F               	addwf	AppendCRC@data,w
  8864  0F36  00F9               	movwf	??_AppendCRC+1
  8865  0F37  0879               	movf	??_AppendCRC+1,w
  8866  0F38  0086               	movwf	6
  8867  0F39  3002               	movlw	2	; select bank4/5
  8868  0F3A  0087               	movwf	7
  8869  0F3B  0878               	movf	??_AppendCRC,w
  8870  0F3C  0081               	movwf	1
  8871                           
  8872                           ;main.c: 160:  data[len + 1] = (char)(crc);
  8873  0F3D  082D               	movf	AppendCRC@crc,w
  8874  0F3E  00F8               	movwf	??_AppendCRC
  8875  0F3F  0830               	movf	AppendCRC@len,w
  8876  0F40  072F               	addwf	AppendCRC@data,w
  8877  0F41  00F9               	movwf	??_AppendCRC+1
  8878  0F42  0A79               	incf	??_AppendCRC+1,w
  8879  0F43  0086               	movwf	6
  8880  0F44  3002               	movlw	2	; select bank4/5
  8881  0F45  0087               	movwf	7
  8882  0F46  0878               	movf	??_AppendCRC,w
  8883  0F47  0081               	movwf	1
  8884                           
  8885                           ;main.c: 161:  data[len + 2] = '\n';
  8886  0F48  300A               	movlw	10
  8887  0F49  00F8               	movwf	??_AppendCRC
  8888  0F4A  0830               	movf	AppendCRC@len,w
  8889  0F4B  072F               	addwf	AppendCRC@data,w
  8890  0F4C  00F9               	movwf	??_AppendCRC+1
  8891  0F4D  0879               	movf	??_AppendCRC+1,w
  8892  0F4E  3E02               	addlw	2
  8893  0F4F  0086               	movwf	6
  8894  0F50  3002               	movlw	2	; select bank4/5
  8895  0F51  0087               	movwf	7
  8896  0F52  0878               	movf	??_AppendCRC,w
  8897  0F53  0081               	movwf	1
  8898                           
  8899                           ;main.c: 162:  data[len + 3] = '\0';
  8900  0F54  0830               	movf	AppendCRC@len,w
  8901  0F55  072F               	addwf	AppendCRC@data,w
  8902  0F56  00F8               	movwf	??_AppendCRC
  8903  0F57  0878               	movf	??_AppendCRC,w
  8904  0F58  3E03               	addlw	3
  8905  0F59  0086               	movwf	6
  8906  0F5A  3002               	movlw	2	; select bank4/5
  8907  0F5B  0087               	movwf	7
  8908  0F5C  0181               	clrf	1
  8909  0F5D  0008               	return
  8910  0F5E                     __end_of_AppendCRC:	
  8911                           
  8912                           	psect	text36
  8913  0D20                     __ptext36:	
  8914 ;; *************** function _strlen *****************
  8915 ;; Defined at:
  8916 ;;		line 12 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\strlen.c"
  8917 ;; Parameters:    Size  Location     Type
  8918 ;;  s               2    2[COMMON] PTR const unsigned char 
  8919 ;;		 -> ?_printf(2), ?_sprintf(2), stoa@nuls(7), dbuf(32), 
  8920 ;;		 -> main@message(43), gps_vertical_velocity(12), gps_course_over_ground(12), gps_speed_over_ground(12), 
  8921 ;;		 -> gps_altitude(16), gps_longitude(16), gps_latitude(16), gps_time(16), 
  8922 ;; Auto vars:     Size  Location     Type
  8923 ;;  a               2    4[COMMON] PTR const unsigned char 
  8924 ;;		 -> ?_printf(2), ?_sprintf(2), stoa@nuls(7), dbuf(32), 
  8925 ;;		 -> main@message(43), gps_vertical_velocity(12), gps_course_over_ground(12), gps_speed_over_ground(12), 
  8926 ;;		 -> gps_altitude(16), gps_longitude(16), gps_latitude(16), gps_time(16), 
  8927 ;; Return value:  Size  Location     Type
  8928 ;;                  2    2[COMMON] unsigned int 
  8929 ;; Registers used:
  8930 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8931 ;; Tracked objects:
  8932 ;;		On entry : 0/0
  8933 ;;		On exit  : 0/0
  8934 ;;		Unchanged: 0/0
  8935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8936 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8937 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8939 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8940 ;;Total ram usage:        4 bytes
  8941 ;; Hardware stack levels used:    1
  8942 ;; Hardware stack levels required when called:    4
  8943 ;; This function calls:
  8944 ;;		Nothing
  8945 ;; This function is called by:
  8946 ;;		_crc16
  8947 ;;		_TransmitString
  8948 ;;		_AppendCRC
  8949 ;;		_pad
  8950 ;;		_stoa
  8951 ;; This function uses a non-reentrant model
  8952 ;;
  8953                           
  8954                           
  8955                           ;psect for function _strlen
  8956  0D20                     _strlen:	
  8957                           
  8958                           ;incstack = 0
  8959                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  8960  0D20  0873               	movf	strlen@s+1,w
  8961  0D21  00F5               	movwf	strlen@a+1
  8962  0D22  0872               	movf	strlen@s,w
  8963  0D23  00F4               	movwf	strlen@a
  8964  0D24                     l2662:	
  8965  0D24  0872               	movf	strlen@s,w
  8966  0D25  0086               	movwf	6
  8967  0D26  0873               	movf	strlen@s+1,w
  8968  0D27  0087               	movwf	7
  8969  0D28  0801               	movf	1,w
  8970  0D29  1903               	btfsc	3,2
  8971  0D2A  2D30               	goto	l2664
  8972  0D2B  3001               	movlw	1
  8973  0D2C  07F2               	addwf	strlen@s,f
  8974  0D2D  3000               	movlw	0
  8975  0D2E  3DF3               	addwfc	strlen@s+1,f
  8976  0D2F  2D24               	goto	l2662
  8977  0D30                     l2664:	
  8978  0D30  0874               	movf	strlen@a,w
  8979  0D31  0272               	subwf	strlen@s,w
  8980  0D32  00F2               	movwf	?_strlen
  8981  0D33  0875               	movf	strlen@a+1,w
  8982  0D34  3B73               	subwfb	strlen@s+1,w
  8983  0D35  00F3               	movwf	?_strlen+1
  8984  0D36  0008               	return
  8985  0D37                     __end_of_strlen:	
  8986                           
  8987                           	psect	intentry
  8988  0004                     __pintentry:	
  8989 ;; *************** function _INTERRUPT_InterruptManager *****************
  8990 ;; Defined at:
  8991 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  8992 ;; Parameters:    Size  Location     Type
  8993 ;;		None
  8994 ;; Auto vars:     Size  Location     Type
  8995 ;;		None
  8996 ;; Return value:  Size  Location     Type
  8997 ;;                  1    wreg      void 
  8998 ;; Registers used:
  8999 ;;		wreg, status,2, status,0, pclath, cstack
  9000 ;; Tracked objects:
  9001 ;;		On entry : 0/0
  9002 ;;		On exit  : 0/0
  9003 ;;		Unchanged: 0/0
  9004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9008 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9009 ;;Total ram usage:        0 bytes
  9010 ;; Hardware stack levels used:    1
  9011 ;; Hardware stack levels required when called:    3
  9012 ;; This function calls:
  9013 ;;		_TMR1_ISR
  9014 ;; This function is called by:
  9015 ;;		Interrupt level 1
  9016 ;; This function uses a non-reentrant model
  9017 ;;
  9018                           
  9019  0004                     _INTERRUPT_InterruptManager:	
  9020                           
  9021                           ;incstack = 0
  9022  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  9023                           
  9024                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  9025  0005  3180               	pagesel	$
  9026                           
  9027                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.PEIE == 1)
  9028  0006  1F0B               	btfss	11,6	;volatile
  9029  0007  2810               	goto	i1l203
  9030                           
  9031                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
  9032  0008  0021               	movlb	1	; select bank1
  9033  0009  1C10               	btfss	16,0	;volatile
  9034  000A  2810               	goto	i1l203
  9035  000B  0020               	movlb	0	; select bank0
  9036  000C  1C10               	btfss	16,0	;volatile
  9037  000D  2810               	goto	i1l203
  9038                           
  9039                           ;mcc_generated_files/interrupt_manager.c: 58:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 59:             TMR1_ISR();
  9040  000E  3187  27F2         	fcall	_TMR1_ISR
  9041  0010                     i1l203:	
  9042                           ;mcc_generated_files/interrupt_manager.c: 60:         }
  9043                           
  9044  0010  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  9045  0011  0009               	retfie
  9046  0012                     __end_of_INTERRUPT_InterruptManager:	
  9047                           
  9048                           	psect	text38
  9049  07F2                     __ptext38:	
  9050 ;; *************** function _TMR1_ISR *****************
  9051 ;; Defined at:
  9052 ;;		line 157 in file "mcc_generated_files/tmr1.c"
  9053 ;; Parameters:    Size  Location     Type
  9054 ;;		None
  9055 ;; Auto vars:     Size  Location     Type
  9056 ;;		None
  9057 ;; Return value:  Size  Location     Type
  9058 ;;                  1    wreg      void 
  9059 ;; Registers used:
  9060 ;;		wreg, status,2, status,0, pclath, cstack
  9061 ;; Tracked objects:
  9062 ;;		On entry : 0/0
  9063 ;;		On exit  : 0/0
  9064 ;;		Unchanged: 0/0
  9065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9069 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9070 ;;Total ram usage:        0 bytes
  9071 ;; Hardware stack levels used:    1
  9072 ;; Hardware stack levels required when called:    2
  9073 ;; This function calls:
  9074 ;;		_TMR1_CallBack
  9075 ;;		_TMR1_WriteTimer
  9076 ;; This function is called by:
  9077 ;;		_INTERRUPT_InterruptManager
  9078 ;; This function uses a non-reentrant model
  9079 ;;
  9080                           
  9081                           
  9082                           ;psect for function _TMR1_ISR
  9083  07F2                     _TMR1_ISR:	
  9084                           
  9085                           ;mcc_generated_files/tmr1.c: 161:     PIR1bits.TMR1IF = 0;
  9086                           
  9087                           ;incstack = 0
  9088                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
  9089  07F2  0020               	movlb	0	; select bank0
  9090  07F3  1010               	bcf	16,0	;volatile
  9091                           
  9092                           ;mcc_generated_files/tmr1.c: 162:     TMR1_WriteTimer(timer1ReloadVal);
  9093  07F4  0022               	movlb	2	; select bank2
  9094  07F5  0866               	movf	(_timer1ReloadVal+1)^(0+256),w	;volatile
  9095  07F6  00F1               	movwf	TMR1_WriteTimer@timerVal+1
  9096  07F7  0865               	movf	_timer1ReloadVal^(0+256),w	;volatile
  9097  07F8  00F0               	movwf	TMR1_WriteTimer@timerVal
  9098  07F9  318C  24EA  3187   	fcall	_TMR1_WriteTimer
  9099                           
  9100                           ;mcc_generated_files/tmr1.c: 166:     TMR1_CallBack();
  9101  07FC  318C  24BD         	fcall	_TMR1_CallBack
  9102  07FE  0008               	return
  9103  07FF                     __end_of_TMR1_ISR:	
  9104                           
  9105                           	psect	text39
  9106  0CEA                     __ptext39:	
  9107 ;; *************** function _TMR1_WriteTimer *****************
  9108 ;; Defined at:
  9109 ;;		line 120 in file "mcc_generated_files/tmr1.c"
  9110 ;; Parameters:    Size  Location     Type
  9111 ;;  timerVal        2    0[COMMON] unsigned short 
  9112 ;; Auto vars:     Size  Location     Type
  9113 ;;		None
  9114 ;; Return value:  Size  Location     Type
  9115 ;;                  1    wreg      void 
  9116 ;; Registers used:
  9117 ;;		wreg, status,2
  9118 ;; Tracked objects:
  9119 ;;		On entry : 0/0
  9120 ;;		On exit  : 0/0
  9121 ;;		Unchanged: 0/0
  9122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9123 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9126 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9127 ;;Total ram usage:        2 bytes
  9128 ;; Hardware stack levels used:    1
  9129 ;; This function calls:
  9130 ;;		Nothing
  9131 ;; This function is called by:
  9132 ;;		_TMR1_ISR
  9133 ;;		_TMR1_Reload
  9134 ;; This function uses a non-reentrant model
  9135 ;;
  9136                           
  9137                           
  9138                           ;psect for function _TMR1_WriteTimer
  9139  0CEA                     _TMR1_WriteTimer:	
  9140                           
  9141                           ;mcc_generated_files/tmr1.c: 120: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 121: {;mcc_generated_files/tmr1.c: 122:     if (T1CONbits.nT1SYNC == 1)
  9142                           
  9143                           ;incstack = 0
  9144                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
  9145  0CEA  0020               	movlb	0	; select bank0
  9146  0CEB  1D18               	btfss	24,2	;volatile
  9147  0CEC  2CF4               	goto	i1l2256
  9148                           
  9149                           ;mcc_generated_files/tmr1.c: 123:     {;mcc_generated_files/tmr1.c: 125:         T1CONbi
      +                          ts.TMR1ON = 0;
  9150  0CED  1018               	bcf	24,0	;volatile
  9151                           
  9152                           ;mcc_generated_files/tmr1.c: 128:         TMR1H = (timerVal >> 8);
  9153  0CEE  0871               	movf	TMR1_WriteTimer@timerVal+1,w
  9154  0CEF  0097               	movwf	23	;volatile
  9155                           
  9156                           ;mcc_generated_files/tmr1.c: 129:         TMR1L = timerVal;
  9157  0CF0  0870               	movf	TMR1_WriteTimer@timerVal,w
  9158  0CF1  0096               	movwf	22	;volatile
  9159                           
  9160                           ;mcc_generated_files/tmr1.c: 132:         T1CONbits.TMR1ON =1;
  9161  0CF2  1418               	bsf	24,0	;volatile
  9162                           
  9163                           ;mcc_generated_files/tmr1.c: 133:     }
  9164  0CF3  0008               	return
  9165  0CF4                     i1l2256:	
  9166                           
  9167                           ;mcc_generated_files/tmr1.c: 135:     {;mcc_generated_files/tmr1.c: 137:         TMR1H =
      +                           (timerVal >> 8);
  9168  0CF4  0871               	movf	TMR1_WriteTimer@timerVal+1,w
  9169  0CF5  0097               	movwf	23	;volatile
  9170                           
  9171                           ;mcc_generated_files/tmr1.c: 138:         TMR1L = timerVal;
  9172  0CF6  0870               	movf	TMR1_WriteTimer@timerVal,w
  9173  0CF7  0096               	movwf	22	;volatile
  9174  0CF8  0008               	return
  9175  0CF9                     __end_of_TMR1_WriteTimer:	
  9176                           
  9177                           	psect	text40
  9178  0CBD                     __ptext40:	
  9179 ;; *************** function _TMR1_CallBack *****************
  9180 ;; Defined at:
  9181 ;;		line 169 in file "mcc_generated_files/tmr1.c"
  9182 ;; Parameters:    Size  Location     Type
  9183 ;;		None
  9184 ;; Auto vars:     Size  Location     Type
  9185 ;;		None
  9186 ;; Return value:  Size  Location     Type
  9187 ;;                  1    wreg      void 
  9188 ;; Registers used:
  9189 ;;		wreg, status,2, status,0, pclath, cstack
  9190 ;; Tracked objects:
  9191 ;;		On entry : 0/0
  9192 ;;		On exit  : 0/0
  9193 ;;		Unchanged: 0/0
  9194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9198 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9199 ;;Total ram usage:        0 bytes
  9200 ;; Hardware stack levels used:    1
  9201 ;; Hardware stack levels required when called:    1
  9202 ;; This function calls:
  9203 ;;		Absolute function
  9204 ;;		_TMR1_DefaultInterruptHandler
  9205 ;; This function is called by:
  9206 ;;		_TMR1_ISR
  9207 ;; This function uses a non-reentrant model
  9208 ;;
  9209                           
  9210                           
  9211                           ;psect for function _TMR1_CallBack
  9212  0CBD                     _TMR1_CallBack:	
  9213                           
  9214                           ;mcc_generated_files/tmr1.c: 172:     if(TMR1_InterruptHandler)
  9215                           
  9216                           ;incstack = 0
  9217                           ; Regs used in _TMR1_CallBack: [wreg+status,2+status,0+pclath+cstack]
  9218  0CBD  0022               	movlb	2	; select bank2
  9219  0CBE  0863               	movf	_TMR1_InterruptHandler^(0+256),w
  9220  0CBF  0464               	iorwf	(_TMR1_InterruptHandler+1)^(0+256),w
  9221  0CC0  1903               	btfsc	3,2
  9222  0CC1  0008               	return
  9223                           
  9224                           ;mcc_generated_files/tmr1.c: 173:     {;mcc_generated_files/tmr1.c: 174:         TMR1_In
      +                          terruptHandler();
  9225  0CC2  0864               	movf	(_TMR1_InterruptHandler+1)^(0+256),w
  9226  0CC3  008A               	movwf	10
  9227  0CC4  0863               	movf	_TMR1_InterruptHandler^(0+256),w
  9228  0CC5  000A               	callw
  9229  0CC6  318C               	pagesel	$
  9230  0CC7  0008               	return
  9231  0CC8                     __end_of_TMR1_CallBack:	
  9232                           
  9233                           	psect	text41
  9234  07FF                     __ptext41:	
  9235 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  9236 ;; Defined at:
  9237 ;;		line 182 in file "mcc_generated_files/tmr1.c"
  9238 ;; Parameters:    Size  Location     Type
  9239 ;;		None
  9240 ;; Auto vars:     Size  Location     Type
  9241 ;;		None
  9242 ;; Return value:  Size  Location     Type
  9243 ;;                  1    wreg      void 
  9244 ;; Registers used:
  9245 ;;		None
  9246 ;; Tracked objects:
  9247 ;;		On entry : 0/0
  9248 ;;		On exit  : 0/0
  9249 ;;		Unchanged: 0/0
  9250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9254 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9255 ;;Total ram usage:        0 bytes
  9256 ;; Hardware stack levels used:    1
  9257 ;; This function calls:
  9258 ;;		Nothing
  9259 ;; This function is called by:
  9260 ;;		_TMR1_Initialize
  9261 ;;		_TMR1_CallBack
  9262 ;; This function uses a non-reentrant model
  9263 ;;
  9264                           
  9265                           
  9266                           ;psect for function _TMR1_DefaultInterruptHandler
  9267  07FF                     _TMR1_DefaultInterruptHandler:	
  9268                           
  9269                           ;incstack = 0
  9270                           ; Regs used in _TMR1_DefaultInterruptHandler: []
  9271  07FF  0008               	return
  9272  0800                     __end_of_TMR1_DefaultInterruptHandler:	
  9273  007E                     btemp	set	126	;btemp
  9274  007E                     int$flags	set	126
  9275  007E                     wtemp0	set	126


Data Sizes:
    Strings     191
    Constant    8
    Data        51
    BSS         145
    Persistent  36
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     80      80
    BANK1            80     31      34
    BANK2            80      0      71
    BANK3            80      0      80
    BANK4            80      0      44
    BANK5            80     47      47
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 43
		 -> ?_printf(BANK1[2]), ?_sprintf(BANK1[2]), stoa@nuls(BANK0[7]), dbuf(BANK3[32]), 
		 -> main@message(BANK5[43]), gps_vertical_velocity(BANK2[12]), gps_course_over_ground(BANK2[12]), gps_speed_over_ground(BANK2[12]), 
		 -> gps_altitude(BANK3[16]), gps_longitude(BANK3[16]), gps_latitude(BANK3[16]), gps_time(BANK2[16]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 43
		 -> ?_printf(BANK1[2]), ?_sprintf(BANK1[2]), stoa@nuls(BANK0[7]), dbuf(BANK3[32]), 
		 -> main@message(BANK5[43]), gps_vertical_velocity(BANK2[12]), gps_course_over_ground(BANK2[12]), gps_speed_over_ground(BANK2[12]), 
		 -> gps_altitude(BANK3[16]), gps_longitude(BANK3[16]), gps_latitude(BANK3[16]), gps_time(BANK2[16]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 26
		 -> STR_6(CODE[26]), STR_5(CODE[26]), STR_4(CODE[26]), STR_3(CODE[26]), 
		 -> STR_2(CODE[26]), STR_1(CODE[26]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK1[2]), ?_sprintf(BANK1[2]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 35
		 -> STR_7(CODE[35]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 43
		 -> main@message(BANK5[43]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK1[2]), ?_sprintf(BANK1[2]), 

    f.buffer	PTR unsigned char  size(1) Largest target is 43
		 -> main@message(BANK5[43]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), NULL(NULL[0]), 

    S1012_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 43
		 -> main@message(BANK5[43]), 

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 43
		 -> main@message(BANK5[43]), 

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK1[1]), sprintf@ap(BANK1[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 35
		 -> STR_7(CODE[35]), STR_6(CODE[26]), STR_5(CODE[26]), STR_4(CODE[26]), 
		 -> STR_3(CODE[26]), STR_2(CODE[26]), STR_1(CODE[26]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 35
		 -> STR_7(CODE[35]), STR_6(CODE[26]), STR_5(CODE[26]), STR_4(CODE[26]), 
		 -> STR_3(CODE[26]), STR_2(CODE[26]), STR_1(CODE[26]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 16
		 -> ?_printf(BANK1[2]), ?_sprintf(BANK1[2]), gps_vertical_velocity(BANK2[12]), gps_course_over_ground(BANK2[12]), 
		 -> gps_speed_over_ground(BANK2[12]), gps_altitude(BANK3[16]), gps_longitude(BANK3[16]), gps_latitude(BANK3[16]), 
		 -> gps_time(BANK2[16]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(BANK1[1]), sprintf@ap(BANK1[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    stoa@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), NULL(NULL[0]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 16
		 -> ?_printf(BANK1[2]), ?_sprintf(BANK1[2]), gps_vertical_velocity(BANK2[12]), gps_course_over_ground(BANK2[12]), 
		 -> gps_speed_over_ground(BANK2[12]), gps_altitude(BANK3[16]), gps_longitude(BANK3[16]), gps_latitude(BANK3[16]), 
		 -> gps_time(BANK2[16]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 16
		 -> ?_printf(BANK1[2]), ?_sprintf(BANK1[2]), stoa@nuls(BANK0[7]), gps_vertical_velocity(BANK2[12]), 
		 -> gps_course_over_ground(BANK2[12]), gps_speed_over_ground(BANK2[12]), gps_altitude(BANK3[16]), gps_longitude(BANK3[16]), 
		 -> gps_latitude(BANK3[16]), gps_time(BANK2[16]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    GPS_HasAcknowledged@data	PTR unsigned char  size(1) Largest target is 44
		 -> setNavFlightMode(BANK4[44]), 

    GPS_SendUBX@data	PTR unsigned char  size(1) Largest target is 44
		 -> setNavFlightMode(BANK4[44]), 

    GetLengthUBX@data	PTR unsigned char  size(1) Largest target is 44
		 -> setNavFlightMode(BANK4[44]), 

    AppendCRC@data	PTR unsigned char  size(1) Largest target is 43
		 -> main@message(BANK5[43]), 

    TransmitString@message	PTR unsigned char  size(1) Largest target is 43
		 -> main@message(BANK5[43]), 

    crc16@message	PTR const unsigned char  size(1) Largest target is 43
		 -> main@message(BANK5[43]), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR1_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    _main->_AppendCRC
    _crc16->_strlen
    _TransmitString->_TransmitByte
    _TransmitByte->_TransmitBit
    _vfpfcnvrt->_stoa
    _stoa->_fputc
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART_Write
    _abs->___aomod
    _GPS_SendUBX->_GetLengthUBX
    _GPS_HasAcknowledged->_TMR1_ReadTimer
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _GetNavData->_TMR1_ReadTimer
    _AppendCRC->_crc16

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR1_ISR->_TMR1_WriteTimer

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _SetupGPS->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _stoa->_fputc
    _dtoa->___aodiv
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _GPS_HasAcknowledged->_TMR1_ReadTimer
    _GetNavData->_TMR1_ReadTimer
    _AppendCRC->_crc16

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->_vfprintf
    _SetupGPS->_printf
    _printf->_vfprintf

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                48    48      0   31991
                                             30 BANK1      1     1      0
                                              0 BANK5     47    47      0
                          _AppendCRC
                         _GetNavData
                  _SYSTEM_Initialize
                           _SetupGPS
                  _TIMER1_Initialize
                     _TransmitString
                              _crc16
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             28    10     18   13184
                                             79 BANK0      1     1      0
                                              3 BANK1     27     9     18
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _crc16                                               15    13      2    1022
                                              6 COMMON     2     0      2
                                              0 BANK0     13    13      0
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _TransmitString                                       6     6      0     731
                                              8 COMMON     1     1      0
                                              0 BANK0      5     5      0
                       _TransmitByte
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _TransmitByte                                         4     4      0     161
                                              4 COMMON     4     4      0
                        _TransmitBit
 ---------------------------------------------------------------------------------
 (3) _TransmitBit                                          2     2      0      31
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _TIMER1_Initialize                                    0     0      0       0
                    _TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (2) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SetupGPS                                             2     2      0   14720
                                              8 BANK1      2     2      0
                _GPS_HasAcknowledged
                        _GPS_SendUBX
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                               6     4      2   13373
                                             79 BANK0      1     1      0
                                              3 BANK1      5     3      2
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     5      3   12746
                                             74 BANK0      5     2      3
                                              0 BANK1      3     3      0
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           40    38      2   12102
                                             56 BANK0     18    16      2
                               _dtoa
                              _fputc
                               _stoa
 ---------------------------------------------------------------------------------
 (4) _stoa                                                23    21      2    2800
                                              7 COMMON     3     3      0
                                              5 BANK0     20    18      2
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                30    22      8    6821
                                             26 BANK0     30    22      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    4609
                                             10 BANK0      9     6      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _fputs                                                8     7      1    2031
                                              7 COMMON     3     3      0
                                              5 BANK0      5     4      1
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3    1639
                                              4 COMMON     3     0      3
                                              0 BANK0      5     5      0
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0      62
                                              3 COMMON     1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                              5 COMMON     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             19     3     16     613
                                              2 COMMON     3     3      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             27    11     16     625
                                              2 COMMON     1     1      0
                                              0 BANK0     26    10     16
 ---------------------------------------------------------------------------------
 (2) _GPS_SendUBX                                          6     6      0     329
                                              6 COMMON     1     1      0
                                              0 BANK0      5     5      0
                       _EUSART_Write
                       _GetLengthUBX
 ---------------------------------------------------------------------------------
 (3) _GetLengthUBX                                         4     1      3      98
                                              2 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (7) _EUSART_Write                                         1     1      0      31
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _GPS_HasAcknowledged                                 22    22      0    1018
                                              4 BANK0     22    22      0
                        _EUSART_Read
                 _EUSART_is_rx_ready
                     _TMR1_ReadTimer
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     121
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     121
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             2     0      2     121
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GetNavData                                          21    21      0    1065
                                              4 BANK0     21    21      0
                        _EUSART_Read
                 _EUSART_is_rx_ready
                     _TMR1_ReadTimer
 ---------------------------------------------------------------------------------
 (3) _TMR1_ReadTimer                                      11     9      2     102
                                              2 COMMON     7     5      2
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (3) _EUSART_is_rx_ready                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EUSART_Read                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _AppendCRC                                            7     5      2     874
                                              8 COMMON     2     2      0
                                             13 BANK0      5     3      2
                              _crc16 (ARG)
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _strlen                                               4     2      2     370
                                              2 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INTERRUPT_InterruptManager                          0     0      0     240
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (12) _TMR1_ISR                                            0     0      0     240
                      _TMR1_CallBack
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (13) _TMR1_WriteTimer                                     2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (13) _TMR1_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AppendCRC
     _crc16 (ARG)
       _strlen
     _strlen (ARG)
   _GetNavData
     _EUSART_Read
     _EUSART_is_rx_ready
     _TMR1_ReadTimer
   _SYSTEM_Initialize
     _EUSART_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
   _SetupGPS
     _GPS_HasAcknowledged
       _EUSART_Read
       _EUSART_is_rx_ready
       _TMR1_ReadTimer
     _GPS_SendUBX
       _EUSART_Write
       _GetLengthUBX
     _printf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _EUSART_Write
               _fputs
                 _fputc
                   _putch
                     _EUSART_Write
               _strlen
           _fputc
             _putch
               _EUSART_Write
           _stoa
             _fputc
               _putch
                 _EUSART_Write
             _strlen
   _TIMER1_Initialize
     _TMR1_StartTimer
   _TransmitString
     _TransmitByte
       _TransmitBit
     _strlen
   _crc16
     _strlen
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
                 _EUSART_Write
             _fputs
               _fputc
                 _putch
                   _EUSART_Write
             _strlen
         _fputc
           _putch
             _EUSART_Write
         _stoa
           _fputc
             _putch
               _EUSART_Write
           _strlen

 _INTERRUPT_InterruptManager (ROOT)
   _TMR1_ISR
     _TMR1_CallBack
       Absolute function(Fake) *
       _TMR1_DefaultInterruptHandler *
     _TMR1_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     1F      22       7       42.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      47       9       88.8%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      50      11      100.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      2C      13       55.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50     2F      2F      15       58.8%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     170      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     170      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sat Jun 15 12:11:07 2019

                             __CFG_CP$OFF 0000                           GPS_SendUBX@data 0022  
                             __CFG_LVP$ON 0000                                       l112 0CAC  
                                     l105 0CB3                                       l253 0770  
                                     l255 0791                                       l522 05CE  
                                     l266 0D55                                       l531 0627  
                                     l482 0F74                                       l490 008B  
                                     l379 02B5                                       l491 0092  
                                     l485 0F94                                       l655 049D  
                                     l495 00AD                                       l496 00BF  
                                     l499 0152                                       l668 0579  
                                     _GIE 005F                           _timer1ReloadVal 0165  
                                     _abs 0D37                                       _pad 0F5E  
                         crc16@polynomial 0076                              __CFG_BORV$LO 0000  
                                     wreg 0009                              __CFG_IESO$ON 0000  
                            ?_EUSART_Read 0070                              __CFG_ZCD$OFF 0000  
                                    ?_abs 0075                                      l3100 06BF  
                                    l3032 0E77                                      l3130 0761  
                                    l3230 01DC                                      l3150 07B8  
                                    l3232 01EF                                      l3048 0DFB  
                                    l3170 0F31                                      l3250 0215  
                                    l3242 0205                                      l3226 01D5  
                                    l3162 0EAD                                      l3146 07A0  
                                    l3260 0234                                      l3252 021F  
                                    l3244 020A                                      l3236 01F1  
                                    l3340 0732                                      l3324 06E5  
                                    l3270 0252                                      l3262 0239  
                                    l3254 0224                                      l3246 020F  
                                    l3238 0201                                      l3094 069F  
                                    l3086 0697                                      l3078 0681  
                                    l3190 0FD0                                      l3264 023E  
                                    l3272 0257                                      l3096 06BD  
                                    l3088 0698                                      l2712 040C  
                                    l3266 0243                                      l3258 022A  
                                    l3274 027C                                      l2714 0411  
                                    l2802 00C6                                      l2810 015E  
                                    l3268 0248                                      l3276 01A0  
                                    l2724 0428                                      l2708 03E5  
                                    l2652 0EF8                                      l2820 016F  
                                    l3188 0FAE                                      l2662 0D24  
                                    l3286 0287                                      l3382 01F9  
                                    l3278 0282                                      l2734 0470  
                                    l2726 0437                                      l2750 0500  
                                    l2814 0165                                      l2664 0D30  
                                    l3384 025C                                      l2736 047C  
                                    l2760 051C                                      l2648 0ED4  
                                    l2680 0F6A                                      l2824 017C  
                                    l2746 04D9                                      l2674 0DA2  
                                    l2690 0F76                                      l2850 05DE  
                                    l2914 0385                                      l2940 0CBB  
                                    l2764 054C                                      l2684 0F72  
                                    l2836 05A7                                      l2908 0364  
                                    l2924 0396                                      l2758 050D  
                                    l2766 0558                                      l2694 0F9F  
                                    l2782 00A5                                      l2854 05EF  
                                    l2918 038B                                      ?_pad 002A  
                                    l2792 00E9                                      l2872 063B  
                                    l2864 05FE                                      l2856 05FB  
                                    l2952 0D57                                      l2874 0648  
                                    l2890 02FA                                      l2788 00BB  
                                    l2868 062A                                      l2964 07CA  
                                    l2966 07E9                                      l2898 0334  
                                    STR_1 1071                                      STR_2 1023  
                                    STR_3 10A5                                      STR_4 1057  
                                    STR_5 108B                                      STR_6 103D  
                                    STR_7 1000                                      u2125 0F80  
                                    _LATA 010C                                      _LATB 010D  
                                    u3007 0D61                                      _LATC 010E  
                                    u2225 045D                                      u2145 0D40  
                                    u3017 0FC8                                      u3027 028D  
                                    u2075 0EF6                                      u3037 029C  
                                    u2325 053A                                      u2190 0418  
                                    u2415 009D                                      u2360 0061  
                                    u2520 0597                                      u2370 0062  
                                    u2445 015C                                      u2605 0646  
                                    u2710 0E82                                      u2720 0E83  
                                    u2704 0E7C                                      u2465 00DA  
                                    u2705 0E7B                                      u2475 00E6  
                                    u2555 05C7                                      u2900 01EA  
                                    u2575 05F9                                      u2735 0E93  
                                    u2745 0E05                                      u2585 0608  
                                    u2835 0776                                      _PEIE 005E  
                                    u2845 0EB7                                      u2855 0F2A  
                                    u2890 01E9                                      u2965 02B3  
                                    u2895 01E5                                      u2975 074A  
                                    u2987 0736                                      u2997 0D5A  
                                    _WPUA 020C                                      _WPUB 020D  
                                    _WPUC 020E                               main@message 02A0  
                            __CFG_WRT$OFF 0000                             __CFG_FCMEN$ON 0000  
                                    abs@a 0075                                      _dbuf 01A0  
                       GetNavData@success 0035                                      _main 06D9  
                                    _dtoa 0045                      __end_of_GetLengthUBX 0D0B  
                                    _prec 00BF                              TransmitBit@b 0073  
                                    _nout 0124                                      pad@i 002E  
                                    pad@p 002B                                      fsr0h 0005  
                                    fsr1h 0007                                      indf0 0000  
                                    fsr0l 0004                                      indf1 0001  
                                    fsr1l 0006                                      pad@w 0030  
                                    _stoa 058B                                      btemp 007E  
                           __CFG_BOREN$ON 0000                         GPS_SendUBX@length 0020  
            GPS_HasAcknowledged@startTime 0028                                      start 0012  
              ??_TMR1_SetInterruptHandler 0074                             __CFG_MCLRE$ON 0000  
                              _GetNavData 018E                                     ??_abs 0077  
                                   ??_pad 002D                             ?_EUSART_Write 0070  
          __size_of_OSCILLATOR_Initialize 0007             __end_of_OSCILLATOR_Initialize 0CA4  
                         __end_of___aodiv 04AF                                     ?_main 0070  
                                   ?_dtoa 003A                GPS_HasAcknowledged@ackByte 002C  
                         __end_of___aomod 058B                             __CFG_WDTE$OFF 0000  
                         _TMR1_StartTimer 0C7E                                     ?_stoa 0025  
                                   _T1CON 0018                                     i1l203 0010  
                            vfpfcnvrt@fmt 0058                                     _TMR1H 0017  
                                   _TMR1L 0016                                     _TRISA 008C  
                                   _TRISB 008D                                     _TRISC 008E  
                                   _RXPPS 0E24                            _GetNavData$607 002C  
                          _GetNavData$608 002E                          __end_of_TMR1_ISR 07FF  
                                   _crc16 074D                                     _flags 007A  
                                   _fputc 0ECB                                     _fputs 0D9E  
                            ?_GPS_SendUBX 0070                                     pad@fp 0032  
                                   _width 0126                                     _putch 0C86  
                                   main@i 02CD                                     dtoa@d 003A  
                                   dtoa@i 0056                                     dtoa@n 004E  
                                   dtoa@p 0048                                     dtoa@s 004C  
                                   dtoa@w 004A                   __end_of_TMR1_Initialize 0D81  
                       __end_of_BAUD_RATE 10C5                                     pclath 000A  
                     GetNavData@dataIndex 0036                   GPS_HasAcknowledged@data 0037  
                           TransmitByte@i 0076                                     stoa@i 002E  
                                   stoa@l 0037                                     stoa@p 0035  
                                   stoa@s 0025                                     stoa@w 0030  
                                   status 0003                                     wtemp0 007E  
                         __end_of_sprintf 0E44                  __end_of_MESSAGE_INTERVAL 10C7  
                         _TMR1_WriteTimer 0CEA                __size_of_TIMER1_Initialize 000B  
                         __initialization 0014                              __end_of_main 074D  
                            __end_of_dtoa 018E                      GPS_HasAcknowledged@i 0039  
                            __end_of_stoa 064E                            ??_EUSART_Write 0072  
                          __CFG_LPBOR$OFF 0000               ?_INTERRUPT_InterruptManager 0070  
                                  ??_main 00BE                                    ??_dtoa 0042  
                                  ??_stoa 0077                        __size_of_AppendCRC 004B  
                          __CFG_PLLEN$OFF 0000                          __end_of_SetupGPS 1000  
                                  ?_crc16 0076                                    ?_fputc 0074  
                                  ?_fputs 0025                                    _ANSELA 018C  
                                  ?_putch 0070                                    _ANSELB 018D  
                                  _ANSELC 018E                __end_of_EUSART_is_rx_ready 0C86  
                                  _BORCON 0116                                    _T1GCON 0019  
                                  _RC1REG 0199                                    _RC1STA 019D  
                 TMR1_WriteTimer@timerVal 0070                                    _RB7PPS 0E9F  
                                  _ODCONA 028C                                    _ODCONB 028D  
                                  _ODCONC 028E                                    i1l2256 0CF4  
                                  _OSCCON 0099                                    u216lld 03E2  
                                  _TMR1IE 0480                                    _TMR1IF 0080  
                                  u227lld 04D7                                    _SPBRGH 019C  
                                  _TMR1ON 00C0                                    _SPBRGL 019B  
                                  _TX1REG 019A                                    _TX1STA 019E  
                          __CFG_PWRTE$OFF 0000      __end_of_TMR1_DefaultInterruptHandler 0800  
   __size_of_TMR1_DefaultInterruptHandler 0001              _TMR1_DefaultInterruptHandler 07FF  
                            vfprintf@cfmt 00A1                               ?_GetNavData 0070  
                 __end_of_TMR1_StartTimer 0C81                                 ??___aodiv 0072  
                               ??___aomod 0072                                    crc16@i 0026  
                          __CFG_STVREN$ON 0000                       GetNavData@startTime 0028  
                                  _printf 0D0B                                    pad@buf 002A  
                                  main@id 02CB                                    dtoa@fp 0045  
                                  _strlen 0D20                                    fputc@c 0074  
                                  fputs@c 0026                                    fputs@i 0027  
                                  fputs@s 0029                          ??_TransmitString 0078  
                                  stoa@cp 0033                                    stoa@fp 0032  
                        __end_of_vfprintf 07F2  TMR1_SetInterruptHandler@InterruptHandler 0072  
                   __size_of_GetLengthUBX 0012                        __end_of_DELAY_MULT 10C3  
                               ??_sprintf 006F                   __end_of_TMR1_WriteTimer 0CF9  
                            crc16@message 002A                     __end_of_TMR1_CallBack 0CC8  
                        ?_TMR1_Initialize 0070                      __size_of_EUSART_Read 000A  
                       _SYSTEM_Initialize 0CDE                   __end_of__initialization 0041  
                      ?_SYSTEM_Initialize 0070                         __end_of_AppendCRC 0F5E  
                          __pcstackCOMMON 0070                              __pidataBANK2 0CA4  
                            __pidataBANK4 0E44                             __end_of_crc16 07BD  
                     ??_SYSTEM_Initialize 0074                                 ?_TMR1_ISR 0070  
           ?_TMR1_DefaultInterruptHandler 0070                             __end_of_fputc 0F13  
                           __end_of_fputs 0DC4                             ??_TransmitBit 0072  
                           __end_of_putch 0C8B                              _GetLengthUBX 0CF9  
                          _OPTION_REGbits 0095                   __size_of_TMR1_ReadTimer 001D  
                           _gps_longitude 01D0                                   ??_crc16 0020  
                              crc16@i_535 0028                                   ??_fputc 0020  
             __end_of_GPS_HasAcknowledged 06D9                 __end_of_SYSTEM_Initialize 0CEA  
                     __size_of_GetNavData 012A                                   ??_fputs 0077  
                                 ??_putch 0073                                __pbssBANK1 00BF  
                              __pbssBANK2 0120                                __pbssBANK3 01A0  
                    __end_of_EUSART_Write 0CB3                      __size_of_GPS_SendUBX 002B  
                        _setNavFlightMode 0220                                __pmaintext 06D9  
                               ?_SetupGPS 0070                          ?_TMR1_StartTimer 0070  
                              ??_TMR1_ISR 0072                           __CFG_PPS1WAY$ON 0000  
                              __pintentry 0004                                   ?_printf 00A3  
                                 ?_strlen 0072                           __CFG_WDTCCS$SWC 0000  
                     __end_of_TransmitBit 0D66                        __size_of_vfpfcnvrt 0101  
                                 _OSCTUNE 0098                                   _SLRCONA 030C  
                                 _SLRCONB 030D                                   _SLRCONC 030E  
                        ?_TMR1_WriteTimer 0070                                 _BAUD_RATE 10C3  
                              ??_SetupGPS 00A8                                   ___aodiv 03B9  
                                 ___aomod 04AF                          GetLengthUBX@data 0075  
                               ?_vfprintf 006A                  TMR1_ReadTimer@readValLow 0023  
                                 __ptext1 0E19                                   __ptext2 074D  
                                 __ptext3 0E9D                                   __ptext4 0E70  
                                 __ptext5 0D4E                                   __ptext6 0CD3  
                                 __ptext7 0C7E                                   __ptext8 0FAE  
                                 __ptext9 0D0B                           __size_of_printf 0015  
          ??_TMR1_DefaultInterruptHandler 0070                 TMR1_ReadTimer@readValHigh 0022  
                         __size_of_strlen 0017                                 _T1CONbits 0018  
                   _OSCILLATOR_Initialize 0C9D                              __size_of_abs 0017  
                            __size_of_pad 0050         __size_of_TMR1_SetInterruptHandler 0006  
                ??_PIN_MANAGER_Initialize 0072                 ?_TMR1_SetInterruptHandler 0072  
              __size_of_SYSTEM_Initialize 000C                                   _sprintf 0E19  
                                 clrloop0 0C92                      end_of_initialization 0041  
                                 fputc@fp 0076                                   init_ram 0C97  
                                 fputs@fp 0025                                   initloop 0C98  
                       _EUSART_Initialize 0CC8                        ?_EUSART_Initialize 0070  
                            ??_GetNavData 0024                         __end_of_vfpfcnvrt 03B9  
                      _EUSART_is_rx_ready 0C81                                ??_vfprintf 006D  
                             _TransmitBit 0D4E                                   strlen@a 0074  
                                 strlen@s 0072                       ??_EUSART_Initialize 0072  
                     ?_EUSART_is_rx_ready 0070                           TransmitString@i 0023  
                           ?_TransmitByte 0070                          __CFG_FOSC$INTOSC 0000  
                          _TMR1_ReadTimer 0D81                     __size_of_EUSART_Write 0008  
                            GPS_SendUBX@i 0023                        __end_of_GetNavData 02B8  
               __end_of_EUSART_Initialize 0CD3                      ??_EUSART_is_rx_ready 0072  
                          _gps_configured 00C1                     TransmitString@message 0022  
                               _AppendCRC 0F13                               vfpfcnvrt@ap 0059  
                             vfpfcnvrt@cp 0067                               vfpfcnvrt@fp 0069  
                             vfpfcnvrt@ll 005F                             AppendCRC@data 002F  
                            _EUSART_Write 0CAB                         __size_of_TMR1_ISR 000D  
                  ?_OSCILLATOR_Initialize 0070                    __end_of_TMR1_ReadTimer 0D9E  
                          ??_TransmitByte 0074                            __end_of_printf 0D20  
                          __end_of_strlen 0D37                       start_initialization 0014  
         __size_of_PIN_MANAGER_Initialize 002A                               __end_of_abs 0D4E  
                             __end_of_pad 0FAE                             ??_EUSART_Read 0072  
                          _gps_nav_status 0120                               putch@txData 0073  
                __size_of_TMR1_Initialize 001B                               vfprintf@fmt 006A  
                              ?_AppendCRC 002D                               __pdataBANK2 015C  
                             __pdataBANK4 0220                         __size_of_SetupGPS 0052  
                  __size_of_TMR1_CallBack 000B                                  ??_printf 006F  
                             crc16@counti 0023                                  ??_strlen 0074  
                         ?_TMR1_ReadTimer 0072                              _gps_altitude 01C0  
                             __pbssCOMMON 007A                                 ___latbits 0002  
                           __pcstackBANK0 0020                             __pcstackBANK1 00A0  
                           __pcstackBANK5 02A0                          ___aodiv@dividend 0028  
                           ??_GPS_SendUBX 0076                              _gps_latitude 01E0  
              __size_of_EUSART_Initialize 000B                       __end_of_EUSART_Read 0CBD  
                               crc16@byte 0025                   __size_of_TransmitString 002E  
                               __pnvBANK2 0163              __size_of_GPS_HasAcknowledged 008B  
                  _PIN_MANAGER_Initialize 0DC4          __end_of_TMR1_SetInterruptHandler 0C91  
                                ?___aodiv 0020                                  ?___aomod 0020  
                        ___aodiv@quotient 0032              ??_INTERRUPT_InterruptManager 0072  
                       __size_of_vfprintf 0035                                  _BAUD1CON 019F  
                __size_of_TMR1_StartTimer 0003                            __size_of_crc16 0070  
                                ?_sprintf 00A3                            __size_of_fputc 0048  
                          __size_of_fputs 0026                            crc16@FRONT_BIT 10BF  
                          __size_of_putch 0005                             _TMR1_CallBack 0CBD  
                   _gps_vertical_velocity 0138                                  _LATAbits 010C  
                                _LATCbits 010E                       __end_of_GPS_SendUBX 0E19  
                               clear_ram0 0C91                                  _PIE1bits 0090  
                    __end_of_TransmitByte 0E9D                  __size_of_TMR1_WriteTimer 000F  
     __size_of_INTERRUPT_InterruptManager 000E                                  _PIR1bits 0010  
                   _gps_speed_over_ground 0150                      __CFG_WDTCPS$WDTCPS1F 0000  
                             ??_AppendCRC 0078                                  _TMR1_ISR 07F2  
                            ?_TransmitBit 0070                                 _vfpfcnvrt 02B8  
                       ??_TMR1_Initialize 0074                            GetNavData@byte 0038  
                          GetNavData@skip 0030                      TransmitString@counti 0020  
                  __end_ofcrc16@FRONT_BIT 10C1                               _EUSART_Read 0CB3  
                            AppendCRC@crc 002D                              AppendCRC@len 0030  
                          ?_TMR1_CallBack 0070                   GetNavData@dataFieldType 0031  
                  _gps_course_over_ground 0144                                _DELAY_MULT 10C1  
                              vfprintf@ap 006C                                vfprintf@fp 00A0  
                                _SetupGPS 0FAE                     TMR1_ReadTimer@readVal 0020  
                 ??_OSCILLATOR_Initialize 0072                          __size_of___aodiv 00F6  
                        __size_of___aomod 00DC                                ?_vfpfcnvrt 0058  
                         ___aodiv@divisor 0020                  _TMR1_SetInterruptHandler 0C8B  
                         ___aodiv@counter 0030                             ?_GetLengthUBX 0072  
                   _TMR1_InterruptHandler 0163                                sprintf@fmt 00A3  
                                crc16@crc 002B                                  _dtoa$701 0046  
                                __ptext10 07BD                                  __ptext11 02B8  
                                __ptext20 03B9                                  __ptext12 058B  
                                __ptext21 0DEE                                  __ptext13 0045  
                              _T1GCONbits 0019                                  __ptext30 0CC8  
                                __ptext22 0CF9                                  __ptext14 0F5E  
                                __ptext31 018E                                  __ptext23 0CAB  
                                __ptext15 0D9E                                  __ptext40 0CBD  
                                __ptext32 0D81                                  __ptext24 064E  
                                __ptext16 0ECB                                  __ptext41 07FF  
                                __ptext33 0C81                                  __ptext25 0CDE  
                                __ptext17 0C86                                  __ptext34 0CB3  
                                __ptext26 0D66                                  __ptext18 0D37  
                                __ptext35 0F13                                  __ptext27 0C8B  
                                __ptext19 04AF                                  __ptext36 0D20  
                                __ptext28 0DC4                                  __ptext29 0C9D  
                                __ptext38 07F2                                  __ptext39 0CEA  
                             _GPS_SendUBX 0DEE                         ??_TMR1_StartTimer 0072  
                             GetNavData@i 0033                          __size_of_sprintf 002B  
             __size_of_EUSART_is_rx_ready 0005                            _TransmitString 0E9D  
                           __size_of_main 0074                             __size_of_dtoa 0149  
                                _gps_time 0128                             __size_of_stoa 00C3  
                    __CFG_WDTCWS$WDTCWSSW 0000                                _RC1STAbits 019D  
                               stoa@F1139 015C                          ??_TMR1_ReadTimer 0074  
                                int$flags 007E                                  _vfprintf 07BD  
      __end_of_INTERRUPT_InterruptManager 0012                _INTERRUPT_InterruptManager 0004  
                               printf@fmt 00A3                         ??_TMR1_WriteTimer 0072  
                          ??_GetLengthUBX 0075                          _MESSAGE_INTERVAL 10C5  
                        ___aomod@dividend 0028                       _GPS_HasAcknowledged 064E  
                              _INTCONbits 000B                            __pstringtext10 108B  
                          __pstringtext11 10A5                            __pstringtext12 0000  
                         ??_TMR1_CallBack 0070                    __end_of_TransmitString 0ECB  
                   __size_of_TransmitByte 002D                                  intlevel1 0000  
                               sprintf@ap 00B8                          TransmitByte@byte 0075  
                 ?_PIN_MANAGER_Initialize 0070                         __CFG_CLKOUTEN$OFF 0000  
                    ?_GPS_HasAcknowledged 0070              GPS_HasAcknowledged@ackByteID 0038  
            GPS_HasAcknowledged@ackPacket 002D                                  printf@ap 00A7  
                       _TIMER1_Initialize 0CD3                           ___aomod@divisor 0020  
                             ??_vfpfcnvrt 005A                                  stoa@nuls 0027  
                         ___aomod@counter 0073                        ?_TIMER1_Initialize 0070  
                           __pstringtext1 10BF                             __pstringtext2 10C1  
                           __pstringtext3 10C3                             __pstringtext4 10C5  
                           __pstringtext5 1000                             __pstringtext6 1023  
                           __pstringtext7 103D                             __pstringtext8 1057  
                           __pstringtext9 1071                      __size_of_TransmitBit 0018  
                                sprintf@f 00B9                                  sprintf@s 00B7  
                            _TransmitByte 0E70                       ??_TIMER1_Initialize 0072  
                              _TX1STAbits 019E                        EUSART_Write@txData 0072  
                            ___aodiv@sign 0031                           ?_TransmitString 0070  
          __end_of_PIN_MANAGER_Initialize 0DEE                     ??_GPS_HasAcknowledged 0024  
                            ___aomod@sign 0074                           _TMR1_Initialize 0D66  
               __end_of_TIMER1_Initialize 0CDE  
