

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sat Sep 14 15:28:54 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F18446
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK3,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     7                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1
     8                           	psect	stringtext2,global,class=STRCODE,delta=2
     9                           	psect	stringtext3,global,class=STRCODE,delta=2
    10                           	psect	stringtext4,global,class=STRCODE,delta=2
    11                           	psect	stringtext5,global,class=STRCODE,delta=2
    12                           	psect	stringtext6,global,class=STRCODE,delta=2
    13                           	psect	stringtext7,global,class=STRCODE,delta=2
    14                           	psect	stringtext8,global,class=STRCODE,delta=2
    15                           	psect	stringtext9,global,class=STRCODE,delta=2
    16                           	psect	stringtext10,global,class=STRCODE,delta=2
    17                           	psect	stringtext11,global,class=STRCODE,delta=2
    18                           	psect	cinit,global,class=CODE,merge=1,delta=2
    19                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    20                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    21                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    22                           	psect	inittext,global,class=CODE,delta=2
    23                           	psect	clrtext,global,class=CODE,delta=2
    24                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    25                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    26                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    27                           	psect	text1,local,class=CODE,merge=1,delta=2
    28                           	psect	text2,local,class=CODE,merge=1,delta=2
    29                           	psect	text3,local,class=CODE,merge=1,delta=2
    30                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text6,local,class=CODE,merge=1,delta=2
    33                           	psect	text7,local,class=CODE,merge=1,delta=2
    34                           	psect	text8,local,class=CODE,merge=1,delta=2
    35                           	psect	text9,local,class=CODE,merge=1,delta=2
    36                           	psect	text10,local,class=CODE,merge=1,delta=2
    37                           	psect	text11,local,class=CODE,merge=1,delta=2
    38                           	psect	text12,local,class=CODE,merge=1,delta=2
    39                           	psect	text13,local,class=CODE,merge=1,delta=2
    40                           	psect	text14,local,class=CODE,merge=1,delta=2
    41                           	psect	text15,local,class=CODE,merge=1,delta=2
    42                           	psect	text16,local,class=CODE,merge=1,delta=2
    43                           	psect	text17,local,class=CODE,merge=1,delta=2
    44                           	psect	text18,local,class=CODE,merge=1,delta=2
    45                           	psect	text19,local,class=CODE,merge=1,delta=2
    46                           	psect	text20,local,class=CODE,merge=1,delta=2
    47                           	psect	text21,local,class=CODE,merge=1,delta=2
    48                           	psect	text22,local,class=CODE,merge=1,delta=2
    49                           	psect	text23,local,class=CODE,merge=1,delta=2
    50                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    51                           	psect	text25,local,class=CODE,merge=1,delta=2
    52                           	psect	text26,local,class=CODE,merge=1,delta=2
    53                           	psect	text27,local,class=CODE,merge=1,delta=2
    54                           	psect	text28,local,class=CODE,merge=1,delta=2
    55                           	psect	text29,local,class=CODE,merge=1,delta=2
    56                           	psect	text30,local,class=CODE,merge=1,delta=2
    57                           	psect	text31,local,class=CODE,merge=1,delta=2
    58                           	psect	text32,local,class=CODE,merge=1,delta=2
    59                           	psect	text33,local,class=CODE,merge=1,delta=2
    60                           	psect	text34,local,class=CODE,merge=1,delta=2
    61                           	psect	text35,local,class=CODE,merge=1,delta=2
    62                           	psect	text36,local,class=CODE,merge=1,delta=2
    63                           	psect	text37,local,class=CODE,merge=1,delta=2,group=1
    64                           	psect	text38,local,class=CODE,merge=1,delta=2
    65                           	psect	text39,local,class=CODE,merge=1,delta=2,group=1
    66                           	psect	text40,local,class=CODE,merge=1,delta=2
    67                           	psect	text41,local,class=CODE,merge=1,delta=2
    68                           	psect	text42,local,class=CODE,merge=1,delta=2
    69                           	psect	text43,local,class=CODE,merge=1,delta=2
    70                           	psect	text44,local,class=CODE,merge=1,delta=2
    71                           	psect	text45,local,class=CODE,merge=1,delta=2
    72                           	psect	text46,local,class=CODE,merge=1,delta=2,group=2
    73                           	psect	intentry,global,class=CODE,delta=2
    74                           	psect	text48,local,class=CODE,merge=1,delta=2
    75                           	psect	text49,local,class=CODE,merge=1,delta=2
    76                           	psect	text50,local,class=CODE,merge=1,delta=2
    77                           	dabs	1,0xCA0,32
    78                           	dabs	1,0xC20,80
    79                           	dabs	1,0xBD4,28
    80                           	dabs	1,0xBA0,52
    81                           	dabs	1,0xB20,80
    82                           	dabs	1,0xAE8,8
    83                           	dabs	1,0x26D8,0,_nmea_data
    84                           	dabs	1,0x2764,0,_txdata
    85                           	dabs	1,0x7E,2
    86  0000                     
    87                           ; Version 2.05
    88                           ; Generated 20/12/2018 GMT
    89                           ; 
    90                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    91                           ; All rights reserved.
    92                           ; 
    93                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    94                           ; 
    95                           ; Redistribution and use in source and binary forms, with or without modification, are
    96                           ; permitted provided that the following conditions are met:
    97                           ; 
    98                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    99                           ;        conditions and the following disclaimer.
   100                           ; 
   101                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   102                           ;        of conditions and the following disclaimer in the documentation and/or other
   103                           ;        materials provided with the distribution.
   104                           ; 
   105                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   106                           ;        software without specific prior written permission.
   107                           ; 
   108                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   109                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   110                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   111                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   112                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   113                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   114                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   115                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   116                           ; 
   117                           ; 
   118                           ; Code-generator required, PIC16F18446 Definitions
   119                           ; 
   120                           ; SFR Addresses
   121  0000                     	;# 
   122  0001                     	;# 
   123  0002                     	;# 
   124  0003                     	;# 
   125  0004                     	;# 
   126  0005                     	;# 
   127  0006                     	;# 
   128  0007                     	;# 
   129  0008                     	;# 
   130  0009                     	;# 
   131  000A                     	;# 
   132  000B                     	;# 
   133  000C                     	;# 
   134  000D                     	;# 
   135  000E                     	;# 
   136  0012                     	;# 
   137  0013                     	;# 
   138  0014                     	;# 
   139  0018                     	;# 
   140  0019                     	;# 
   141  001A                     	;# 
   142  008C                     	;# 
   143  008C                     	;# 
   144  008D                     	;# 
   145  008E                     	;# 
   146  008E                     	;# 
   147  008F                     	;# 
   148  0090                     	;# 
   149  0090                     	;# 
   150  0091                     	;# 
   151  0092                     	;# 
   152  0092                     	;# 
   153  0093                     	;# 
   154  0094                     	;# 
   155  0094                     	;# 
   156  0095                     	;# 
   157  0096                     	;# 
   158  0096                     	;# 
   159  0097                     	;# 
   160  0098                     	;# 
   161  0099                     	;# 
   162  009A                     	;# 
   163  009B                     	;# 
   164  009B                     	;# 
   165  009C                     	;# 
   166  009D                     	;# 
   167  009D                     	;# 
   168  009E                     	;# 
   169  009F                     	;# 
   170  010C                     	;# 
   171  010C                     	;# 
   172  010D                     	;# 
   173  010E                     	;# 
   174  010F                     	;# 
   175  010F                     	;# 
   176  0110                     	;# 
   177  0111                     	;# 
   178  0112                     	;# 
   179  0113                     	;# 
   180  0114                     	;# 
   181  0115                     	;# 
   182  0116                     	;# 
   183  0117                     	;# 
   184  0118                     	;# 
   185  0119                     	;# 
   186  0119                     	;# 
   187  0119                     	;# 
   188  011A                     	;# 
   189  011A                     	;# 
   190  011A                     	;# 
   191  011B                     	;# 
   192  011B                     	;# 
   193  011B                     	;# 
   194  011B                     	;# 
   195  011B                     	;# 
   196  011C                     	;# 
   197  011C                     	;# 
   198  011C                     	;# 
   199  011D                     	;# 
   200  011D                     	;# 
   201  011D                     	;# 
   202  011E                     	;# 
   203  011E                     	;# 
   204  011E                     	;# 
   205  011F                     	;# 
   206  011F                     	;# 
   207  011F                     	;# 
   208  011F                     	;# 
   209  011F                     	;# 
   210  018C                     	;# 
   211  018D                     	;# 
   212  018E                     	;# 
   213  018F                     	;# 
   214  0190                     	;# 
   215  0191                     	;# 
   216  0192                     	;# 
   217  0196                     	;# 
   218  0197                     	;# 
   219  0198                     	;# 
   220  0199                     	;# 
   221  019A                     	;# 
   222  019B                     	;# 
   223  019C                     	;# 
   224  020C                     	;# 
   225  020D                     	;# 
   226  020E                     	;# 
   227  020E                     	;# 
   228  020F                     	;# 
   229  020F                     	;# 
   230  0210                     	;# 
   231  0210                     	;# 
   232  0211                     	;# 
   233  0211                     	;# 
   234  0212                     	;# 
   235  0213                     	;# 
   236  0214                     	;# 
   237  0214                     	;# 
   238  0215                     	;# 
   239  0215                     	;# 
   240  0216                     	;# 
   241  0216                     	;# 
   242  0217                     	;# 
   243  0217                     	;# 
   244  0218                     	;# 
   245  0219                     	;# 
   246  021A                     	;# 
   247  021A                     	;# 
   248  021B                     	;# 
   249  021B                     	;# 
   250  021C                     	;# 
   251  021C                     	;# 
   252  021D                     	;# 
   253  021D                     	;# 
   254  021E                     	;# 
   255  021F                     	;# 
   256  028C                     	;# 
   257  028C                     	;# 
   258  028D                     	;# 
   259  028D                     	;# 
   260  028E                     	;# 
   261  028F                     	;# 
   262  0290                     	;# 
   263  0291                     	;# 
   264  0292                     	;# 
   265  0292                     	;# 
   266  0293                     	;# 
   267  0293                     	;# 
   268  0294                     	;# 
   269  0295                     	;# 
   270  0296                     	;# 
   271  0297                     	;# 
   272  0298                     	;# 
   273  0298                     	;# 
   274  0299                     	;# 
   275  0299                     	;# 
   276  029A                     	;# 
   277  029B                     	;# 
   278  029C                     	;# 
   279  029D                     	;# 
   280  029F                     	;# 
   281  030C                     	;# 
   282  030C                     	;# 
   283  030D                     	;# 
   284  030E                     	;# 
   285  030F                     	;# 
   286  0310                     	;# 
   287  0310                     	;# 
   288  0311                     	;# 
   289  0312                     	;# 
   290  0313                     	;# 
   291  0314                     	;# 
   292  0314                     	;# 
   293  0315                     	;# 
   294  0316                     	;# 
   295  0317                     	;# 
   296  0318                     	;# 
   297  0318                     	;# 
   298  0319                     	;# 
   299  031A                     	;# 
   300  031B                     	;# 
   301  038C                     	;# 
   302  038C                     	;# 
   303  038D                     	;# 
   304  038E                     	;# 
   305  0390                     	;# 
   306  0390                     	;# 
   307  0391                     	;# 
   308  0392                     	;# 
   309  048C                     	;# 
   310  048C                     	;# 
   311  048D                     	;# 
   312  048E                     	;# 
   313  048F                     	;# 
   314  048F                     	;# 
   315  0490                     	;# 
   316  0491                     	;# 
   317  0492                     	;# 
   318  0492                     	;# 
   319  0493                     	;# 
   320  0494                     	;# 
   321  0495                     	;# 
   322  0495                     	;# 
   323  0496                     	;# 
   324  0497                     	;# 
   325  0498                     	;# 
   326  0499                     	;# 
   327  049A                     	;# 
   328  049B                     	;# 
   329  049C                     	;# 
   330  049D                     	;# 
   331  058C                     	;# 
   332  058C                     	;# 
   333  058D                     	;# 
   334  058E                     	;# 
   335  058F                     	;# 
   336  058F                     	;# 
   337  0590                     	;# 
   338  0591                     	;# 
   339  0592                     	;# 
   340  0593                     	;# 
   341  059C                     	;# 
   342  059C                     	;# 
   343  059D                     	;# 
   344  059D                     	;# 
   345  059E                     	;# 
   346  059F                     	;# 
   347  060C                     	;# 
   348  060C                     	;# 
   349  060D                     	;# 
   350  060D                     	;# 
   351  060E                     	;# 
   352  060F                     	;# 
   353  0610                     	;# 
   354  0611                     	;# 
   355  0612                     	;# 
   356  0613                     	;# 
   357  0614                     	;# 
   358  0616                     	;# 
   359  0616                     	;# 
   360  0617                     	;# 
   361  0617                     	;# 
   362  0618                     	;# 
   363  0619                     	;# 
   364  061A                     	;# 
   365  061B                     	;# 
   366  061C                     	;# 
   367  061D                     	;# 
   368  061E                     	;# 
   369  070C                     	;# 
   370  070D                     	;# 
   371  070E                     	;# 
   372  070F                     	;# 
   373  0710                     	;# 
   374  0711                     	;# 
   375  0712                     	;# 
   376  0713                     	;# 
   377  0714                     	;# 
   378  0716                     	;# 
   379  0717                     	;# 
   380  0718                     	;# 
   381  0719                     	;# 
   382  071A                     	;# 
   383  071B                     	;# 
   384  071C                     	;# 
   385  071D                     	;# 
   386  071E                     	;# 
   387  0796                     	;# 
   388  0797                     	;# 
   389  0798                     	;# 
   390  0799                     	;# 
   391  079A                     	;# 
   392  079B                     	;# 
   393  079C                     	;# 
   394  079D                     	;# 
   395  080C                     	;# 
   396  080D                     	;# 
   397  080E                     	;# 
   398  080F                     	;# 
   399  0810                     	;# 
   400  0811                     	;# 
   401  0812                     	;# 
   402  0813                     	;# 
   403  0814                     	;# 
   404  081A                     	;# 
   405  081A                     	;# 
   406  081B                     	;# 
   407  081C                     	;# 
   408  081C                     	;# 
   409  081D                     	;# 
   410  081E                     	;# 
   411  081F                     	;# 
   412  088C                     	;# 
   413  088D                     	;# 
   414  088E                     	;# 
   415  088F                     	;# 
   416  0890                     	;# 
   417  0891                     	;# 
   418  0892                     	;# 
   419  0893                     	;# 
   420  0895                     	;# 
   421  0896                     	;# 
   422  0897                     	;# 
   423  0898                     	;# 
   424  0899                     	;# 
   425  089A                     	;# 
   426  089B                     	;# 
   427  090C                     	;# 
   428  090E                     	;# 
   429  090F                     	;# 
   430  091F                     	;# 
   431  098F                     	;# 
   432  098F                     	;# 
   433  0990                     	;# 
   434  0991                     	;# 
   435  0992                     	;# 
   436  0993                     	;# 
   437  0994                     	;# 
   438  0995                     	;# 
   439  0996                     	;# 
   440  0997                     	;# 
   441  1E0F                     	;# 
   442  1E10                     	;# 
   443  1E11                     	;# 
   444  1E12                     	;# 
   445  1E13                     	;# 
   446  1E14                     	;# 
   447  1E15                     	;# 
   448  1E16                     	;# 
   449  1E17                     	;# 
   450  1E18                     	;# 
   451  1E19                     	;# 
   452  1E1A                     	;# 
   453  1E1B                     	;# 
   454  1E1C                     	;# 
   455  1E1D                     	;# 
   456  1E1E                     	;# 
   457  1E1F                     	;# 
   458  1E20                     	;# 
   459  1E21                     	;# 
   460  1E22                     	;# 
   461  1E23                     	;# 
   462  1E24                     	;# 
   463  1E25                     	;# 
   464  1E26                     	;# 
   465  1E27                     	;# 
   466  1E28                     	;# 
   467  1E29                     	;# 
   468  1E2A                     	;# 
   469  1E2B                     	;# 
   470  1E2C                     	;# 
   471  1E2D                     	;# 
   472  1E2E                     	;# 
   473  1E2F                     	;# 
   474  1E30                     	;# 
   475  1E31                     	;# 
   476  1E32                     	;# 
   477  1E33                     	;# 
   478  1E34                     	;# 
   479  1E35                     	;# 
   480  1E36                     	;# 
   481  1E37                     	;# 
   482  1E8F                     	;# 
   483  1E90                     	;# 
   484  1E91                     	;# 
   485  1E92                     	;# 
   486  1E93                     	;# 
   487  1E94                     	;# 
   488  1E95                     	;# 
   489  1E96                     	;# 
   490  1E97                     	;# 
   491  1E9C                     	;# 
   492  1E9D                     	;# 
   493  1E9E                     	;# 
   494  1EA1                     	;# 
   495  1EA2                     	;# 
   496  1EA3                     	;# 
   497  1EA4                     	;# 
   498  1EA9                     	;# 
   499  1EAA                     	;# 
   500  1EB1                     	;# 
   501  1EB2                     	;# 
   502  1EB8                     	;# 
   503  1EB9                     	;# 
   504  1EBA                     	;# 
   505  1EBB                     	;# 
   506  1EBC                     	;# 
   507  1EBD                     	;# 
   508  1EBE                     	;# 
   509  1EC3                     	;# 
   510  1EC5                     	;# 
   511  1EC6                     	;# 
   512  1EC7                     	;# 
   513  1EC8                     	;# 
   514  1EC9                     	;# 
   515  1ECA                     	;# 
   516  1ECB                     	;# 
   517  1ECB                     	;# 
   518  1ECB                     	;# 
   519  1ECC                     	;# 
   520  1ECC                     	;# 
   521  1ECC                     	;# 
   522  1F10                     	;# 
   523  1F11                     	;# 
   524  1F12                     	;# 
   525  1F14                     	;# 
   526  1F15                     	;# 
   527  1F1C                     	;# 
   528  1F1D                     	;# 
   529  1F1E                     	;# 
   530  1F1F                     	;# 
   531  1F20                     	;# 
   532  1F21                     	;# 
   533  1F22                     	;# 
   534  1F23                     	;# 
   535  1F24                     	;# 
   536  1F25                     	;# 
   537  1F26                     	;# 
   538  1F27                     	;# 
   539  1F38                     	;# 
   540  1F39                     	;# 
   541  1F3A                     	;# 
   542  1F3B                     	;# 
   543  1F3C                     	;# 
   544  1F3D                     	;# 
   545  1F3E                     	;# 
   546  1F3F                     	;# 
   547  1F43                     	;# 
   548  1F44                     	;# 
   549  1F45                     	;# 
   550  1F46                     	;# 
   551  1F47                     	;# 
   552  1F48                     	;# 
   553  1F49                     	;# 
   554  1F4A                     	;# 
   555  1F4E                     	;# 
   556  1F4F                     	;# 
   557  1F50                     	;# 
   558  1F51                     	;# 
   559  1F52                     	;# 
   560  1F53                     	;# 
   561  1F54                     	;# 
   562  1F55                     	;# 
   563  1FE4                     	;# 
   564  1FE5                     	;# 
   565  1FE6                     	;# 
   566  1FE7                     	;# 
   567  1FE8                     	;# 
   568  1FE8                     	;# 
   569  1FE9                     	;# 
   570  1FEA                     	;# 
   571  1FEB                     	;# 
   572  1FED                     	;# 
   573  1FEE                     	;# 
   574  1FEF                     	;# 
   575  0000                     	;# 
   576  0001                     	;# 
   577  0002                     	;# 
   578  0003                     	;# 
   579  0004                     	;# 
   580  0005                     	;# 
   581  0006                     	;# 
   582  0007                     	;# 
   583  0008                     	;# 
   584  0009                     	;# 
   585  000A                     	;# 
   586  000B                     	;# 
   587  000C                     	;# 
   588  000D                     	;# 
   589  000E                     	;# 
   590  0012                     	;# 
   591  0013                     	;# 
   592  0014                     	;# 
   593  0018                     	;# 
   594  0019                     	;# 
   595  001A                     	;# 
   596  008C                     	;# 
   597  008C                     	;# 
   598  008D                     	;# 
   599  008E                     	;# 
   600  008E                     	;# 
   601  008F                     	;# 
   602  0090                     	;# 
   603  0090                     	;# 
   604  0091                     	;# 
   605  0092                     	;# 
   606  0092                     	;# 
   607  0093                     	;# 
   608  0094                     	;# 
   609  0094                     	;# 
   610  0095                     	;# 
   611  0096                     	;# 
   612  0096                     	;# 
   613  0097                     	;# 
   614  0098                     	;# 
   615  0099                     	;# 
   616  009A                     	;# 
   617  009B                     	;# 
   618  009B                     	;# 
   619  009C                     	;# 
   620  009D                     	;# 
   621  009D                     	;# 
   622  009E                     	;# 
   623  009F                     	;# 
   624  010C                     	;# 
   625  010C                     	;# 
   626  010D                     	;# 
   627  010E                     	;# 
   628  010F                     	;# 
   629  010F                     	;# 
   630  0110                     	;# 
   631  0111                     	;# 
   632  0112                     	;# 
   633  0113                     	;# 
   634  0114                     	;# 
   635  0115                     	;# 
   636  0116                     	;# 
   637  0117                     	;# 
   638  0118                     	;# 
   639  0119                     	;# 
   640  0119                     	;# 
   641  0119                     	;# 
   642  011A                     	;# 
   643  011A                     	;# 
   644  011A                     	;# 
   645  011B                     	;# 
   646  011B                     	;# 
   647  011B                     	;# 
   648  011B                     	;# 
   649  011B                     	;# 
   650  011C                     	;# 
   651  011C                     	;# 
   652  011C                     	;# 
   653  011D                     	;# 
   654  011D                     	;# 
   655  011D                     	;# 
   656  011E                     	;# 
   657  011E                     	;# 
   658  011E                     	;# 
   659  011F                     	;# 
   660  011F                     	;# 
   661  011F                     	;# 
   662  011F                     	;# 
   663  011F                     	;# 
   664  018C                     	;# 
   665  018D                     	;# 
   666  018E                     	;# 
   667  018F                     	;# 
   668  0190                     	;# 
   669  0191                     	;# 
   670  0192                     	;# 
   671  0196                     	;# 
   672  0197                     	;# 
   673  0198                     	;# 
   674  0199                     	;# 
   675  019A                     	;# 
   676  019B                     	;# 
   677  019C                     	;# 
   678  020C                     	;# 
   679  020D                     	;# 
   680  020E                     	;# 
   681  020E                     	;# 
   682  020F                     	;# 
   683  020F                     	;# 
   684  0210                     	;# 
   685  0210                     	;# 
   686  0211                     	;# 
   687  0211                     	;# 
   688  0212                     	;# 
   689  0213                     	;# 
   690  0214                     	;# 
   691  0214                     	;# 
   692  0215                     	;# 
   693  0215                     	;# 
   694  0216                     	;# 
   695  0216                     	;# 
   696  0217                     	;# 
   697  0217                     	;# 
   698  0218                     	;# 
   699  0219                     	;# 
   700  021A                     	;# 
   701  021A                     	;# 
   702  021B                     	;# 
   703  021B                     	;# 
   704  021C                     	;# 
   705  021C                     	;# 
   706  021D                     	;# 
   707  021D                     	;# 
   708  021E                     	;# 
   709  021F                     	;# 
   710  028C                     	;# 
   711  028C                     	;# 
   712  028D                     	;# 
   713  028D                     	;# 
   714  028E                     	;# 
   715  028F                     	;# 
   716  0290                     	;# 
   717  0291                     	;# 
   718  0292                     	;# 
   719  0292                     	;# 
   720  0293                     	;# 
   721  0293                     	;# 
   722  0294                     	;# 
   723  0295                     	;# 
   724  0296                     	;# 
   725  0297                     	;# 
   726  0298                     	;# 
   727  0298                     	;# 
   728  0299                     	;# 
   729  0299                     	;# 
   730  029A                     	;# 
   731  029B                     	;# 
   732  029C                     	;# 
   733  029D                     	;# 
   734  029F                     	;# 
   735  030C                     	;# 
   736  030C                     	;# 
   737  030D                     	;# 
   738  030E                     	;# 
   739  030F                     	;# 
   740  0310                     	;# 
   741  0310                     	;# 
   742  0311                     	;# 
   743  0312                     	;# 
   744  0313                     	;# 
   745  0314                     	;# 
   746  0314                     	;# 
   747  0315                     	;# 
   748  0316                     	;# 
   749  0317                     	;# 
   750  0318                     	;# 
   751  0318                     	;# 
   752  0319                     	;# 
   753  031A                     	;# 
   754  031B                     	;# 
   755  038C                     	;# 
   756  038C                     	;# 
   757  038D                     	;# 
   758  038E                     	;# 
   759  0390                     	;# 
   760  0390                     	;# 
   761  0391                     	;# 
   762  0392                     	;# 
   763  048C                     	;# 
   764  048C                     	;# 
   765  048D                     	;# 
   766  048E                     	;# 
   767  048F                     	;# 
   768  048F                     	;# 
   769  0490                     	;# 
   770  0491                     	;# 
   771  0492                     	;# 
   772  0492                     	;# 
   773  0493                     	;# 
   774  0494                     	;# 
   775  0495                     	;# 
   776  0495                     	;# 
   777  0496                     	;# 
   778  0497                     	;# 
   779  0498                     	;# 
   780  0499                     	;# 
   781  049A                     	;# 
   782  049B                     	;# 
   783  049C                     	;# 
   784  049D                     	;# 
   785  058C                     	;# 
   786  058C                     	;# 
   787  058D                     	;# 
   788  058E                     	;# 
   789  058F                     	;# 
   790  058F                     	;# 
   791  0590                     	;# 
   792  0591                     	;# 
   793  0592                     	;# 
   794  0593                     	;# 
   795  059C                     	;# 
   796  059C                     	;# 
   797  059D                     	;# 
   798  059D                     	;# 
   799  059E                     	;# 
   800  059F                     	;# 
   801  060C                     	;# 
   802  060C                     	;# 
   803  060D                     	;# 
   804  060D                     	;# 
   805  060E                     	;# 
   806  060F                     	;# 
   807  0610                     	;# 
   808  0611                     	;# 
   809  0612                     	;# 
   810  0613                     	;# 
   811  0614                     	;# 
   812  0616                     	;# 
   813  0616                     	;# 
   814  0617                     	;# 
   815  0617                     	;# 
   816  0618                     	;# 
   817  0619                     	;# 
   818  061A                     	;# 
   819  061B                     	;# 
   820  061C                     	;# 
   821  061D                     	;# 
   822  061E                     	;# 
   823  070C                     	;# 
   824  070D                     	;# 
   825  070E                     	;# 
   826  070F                     	;# 
   827  0710                     	;# 
   828  0711                     	;# 
   829  0712                     	;# 
   830  0713                     	;# 
   831  0714                     	;# 
   832  0716                     	;# 
   833  0717                     	;# 
   834  0718                     	;# 
   835  0719                     	;# 
   836  071A                     	;# 
   837  071B                     	;# 
   838  071C                     	;# 
   839  071D                     	;# 
   840  071E                     	;# 
   841  0796                     	;# 
   842  0797                     	;# 
   843  0798                     	;# 
   844  0799                     	;# 
   845  079A                     	;# 
   846  079B                     	;# 
   847  079C                     	;# 
   848  079D                     	;# 
   849  080C                     	;# 
   850  080D                     	;# 
   851  080E                     	;# 
   852  080F                     	;# 
   853  0810                     	;# 
   854  0811                     	;# 
   855  0812                     	;# 
   856  0813                     	;# 
   857  0814                     	;# 
   858  081A                     	;# 
   859  081A                     	;# 
   860  081B                     	;# 
   861  081C                     	;# 
   862  081C                     	;# 
   863  081D                     	;# 
   864  081E                     	;# 
   865  081F                     	;# 
   866  088C                     	;# 
   867  088D                     	;# 
   868  088E                     	;# 
   869  088F                     	;# 
   870  0890                     	;# 
   871  0891                     	;# 
   872  0892                     	;# 
   873  0893                     	;# 
   874  0895                     	;# 
   875  0896                     	;# 
   876  0897                     	;# 
   877  0898                     	;# 
   878  0899                     	;# 
   879  089A                     	;# 
   880  089B                     	;# 
   881  090C                     	;# 
   882  090E                     	;# 
   883  090F                     	;# 
   884  091F                     	;# 
   885  098F                     	;# 
   886  098F                     	;# 
   887  0990                     	;# 
   888  0991                     	;# 
   889  0992                     	;# 
   890  0993                     	;# 
   891  0994                     	;# 
   892  0995                     	;# 
   893  0996                     	;# 
   894  0997                     	;# 
   895  1E0F                     	;# 
   896  1E10                     	;# 
   897  1E11                     	;# 
   898  1E12                     	;# 
   899  1E13                     	;# 
   900  1E14                     	;# 
   901  1E15                     	;# 
   902  1E16                     	;# 
   903  1E17                     	;# 
   904  1E18                     	;# 
   905  1E19                     	;# 
   906  1E1A                     	;# 
   907  1E1B                     	;# 
   908  1E1C                     	;# 
   909  1E1D                     	;# 
   910  1E1E                     	;# 
   911  1E1F                     	;# 
   912  1E20                     	;# 
   913  1E21                     	;# 
   914  1E22                     	;# 
   915  1E23                     	;# 
   916  1E24                     	;# 
   917  1E25                     	;# 
   918  1E26                     	;# 
   919  1E27                     	;# 
   920  1E28                     	;# 
   921  1E29                     	;# 
   922  1E2A                     	;# 
   923  1E2B                     	;# 
   924  1E2C                     	;# 
   925  1E2D                     	;# 
   926  1E2E                     	;# 
   927  1E2F                     	;# 
   928  1E30                     	;# 
   929  1E31                     	;# 
   930  1E32                     	;# 
   931  1E33                     	;# 
   932  1E34                     	;# 
   933  1E35                     	;# 
   934  1E36                     	;# 
   935  1E37                     	;# 
   936  1E8F                     	;# 
   937  1E90                     	;# 
   938  1E91                     	;# 
   939  1E92                     	;# 
   940  1E93                     	;# 
   941  1E94                     	;# 
   942  1E95                     	;# 
   943  1E96                     	;# 
   944  1E97                     	;# 
   945  1E9C                     	;# 
   946  1E9D                     	;# 
   947  1E9E                     	;# 
   948  1EA1                     	;# 
   949  1EA2                     	;# 
   950  1EA3                     	;# 
   951  1EA4                     	;# 
   952  1EA9                     	;# 
   953  1EAA                     	;# 
   954  1EB1                     	;# 
   955  1EB2                     	;# 
   956  1EB8                     	;# 
   957  1EB9                     	;# 
   958  1EBA                     	;# 
   959  1EBB                     	;# 
   960  1EBC                     	;# 
   961  1EBD                     	;# 
   962  1EBE                     	;# 
   963  1EC3                     	;# 
   964  1EC5                     	;# 
   965  1EC6                     	;# 
   966  1EC7                     	;# 
   967  1EC8                     	;# 
   968  1EC9                     	;# 
   969  1ECA                     	;# 
   970  1ECB                     	;# 
   971  1ECB                     	;# 
   972  1ECB                     	;# 
   973  1ECC                     	;# 
   974  1ECC                     	;# 
   975  1ECC                     	;# 
   976  1F10                     	;# 
   977  1F11                     	;# 
   978  1F12                     	;# 
   979  1F14                     	;# 
   980  1F15                     	;# 
   981  1F1C                     	;# 
   982  1F1D                     	;# 
   983  1F1E                     	;# 
   984  1F1F                     	;# 
   985  1F20                     	;# 
   986  1F21                     	;# 
   987  1F22                     	;# 
   988  1F23                     	;# 
   989  1F24                     	;# 
   990  1F25                     	;# 
   991  1F26                     	;# 
   992  1F27                     	;# 
   993  1F38                     	;# 
   994  1F39                     	;# 
   995  1F3A                     	;# 
   996  1F3B                     	;# 
   997  1F3C                     	;# 
   998  1F3D                     	;# 
   999  1F3E                     	;# 
  1000  1F3F                     	;# 
  1001  1F43                     	;# 
  1002  1F44                     	;# 
  1003  1F45                     	;# 
  1004  1F46                     	;# 
  1005  1F47                     	;# 
  1006  1F48                     	;# 
  1007  1F49                     	;# 
  1008  1F4A                     	;# 
  1009  1F4E                     	;# 
  1010  1F4F                     	;# 
  1011  1F50                     	;# 
  1012  1F51                     	;# 
  1013  1F52                     	;# 
  1014  1F53                     	;# 
  1015  1F54                     	;# 
  1016  1F55                     	;# 
  1017  1FE4                     	;# 
  1018  1FE5                     	;# 
  1019  1FE6                     	;# 
  1020  1FE7                     	;# 
  1021  1FE8                     	;# 
  1022  1FE8                     	;# 
  1023  1FE9                     	;# 
  1024  1FEA                     	;# 
  1025  1FEB                     	;# 
  1026  1FED                     	;# 
  1027  1FEE                     	;# 
  1028  1FEF                     	;# 
  1029  0000                     	;# 
  1030  0001                     	;# 
  1031  0002                     	;# 
  1032  0003                     	;# 
  1033  0004                     	;# 
  1034  0005                     	;# 
  1035  0006                     	;# 
  1036  0007                     	;# 
  1037  0008                     	;# 
  1038  0009                     	;# 
  1039  000A                     	;# 
  1040  000B                     	;# 
  1041  000C                     	;# 
  1042  000D                     	;# 
  1043  000E                     	;# 
  1044  0012                     	;# 
  1045  0013                     	;# 
  1046  0014                     	;# 
  1047  0018                     	;# 
  1048  0019                     	;# 
  1049  001A                     	;# 
  1050  008C                     	;# 
  1051  008C                     	;# 
  1052  008D                     	;# 
  1053  008E                     	;# 
  1054  008E                     	;# 
  1055  008F                     	;# 
  1056  0090                     	;# 
  1057  0090                     	;# 
  1058  0091                     	;# 
  1059  0092                     	;# 
  1060  0092                     	;# 
  1061  0093                     	;# 
  1062  0094                     	;# 
  1063  0094                     	;# 
  1064  0095                     	;# 
  1065  0096                     	;# 
  1066  0096                     	;# 
  1067  0097                     	;# 
  1068  0098                     	;# 
  1069  0099                     	;# 
  1070  009A                     	;# 
  1071  009B                     	;# 
  1072  009B                     	;# 
  1073  009C                     	;# 
  1074  009D                     	;# 
  1075  009D                     	;# 
  1076  009E                     	;# 
  1077  009F                     	;# 
  1078  010C                     	;# 
  1079  010C                     	;# 
  1080  010D                     	;# 
  1081  010E                     	;# 
  1082  010F                     	;# 
  1083  010F                     	;# 
  1084  0110                     	;# 
  1085  0111                     	;# 
  1086  0112                     	;# 
  1087  0113                     	;# 
  1088  0114                     	;# 
  1089  0115                     	;# 
  1090  0116                     	;# 
  1091  0117                     	;# 
  1092  0118                     	;# 
  1093  0119                     	;# 
  1094  0119                     	;# 
  1095  0119                     	;# 
  1096  011A                     	;# 
  1097  011A                     	;# 
  1098  011A                     	;# 
  1099  011B                     	;# 
  1100  011B                     	;# 
  1101  011B                     	;# 
  1102  011B                     	;# 
  1103  011B                     	;# 
  1104  011C                     	;# 
  1105  011C                     	;# 
  1106  011C                     	;# 
  1107  011D                     	;# 
  1108  011D                     	;# 
  1109  011D                     	;# 
  1110  011E                     	;# 
  1111  011E                     	;# 
  1112  011E                     	;# 
  1113  011F                     	;# 
  1114  011F                     	;# 
  1115  011F                     	;# 
  1116  011F                     	;# 
  1117  011F                     	;# 
  1118  018C                     	;# 
  1119  018D                     	;# 
  1120  018E                     	;# 
  1121  018F                     	;# 
  1122  0190                     	;# 
  1123  0191                     	;# 
  1124  0192                     	;# 
  1125  0196                     	;# 
  1126  0197                     	;# 
  1127  0198                     	;# 
  1128  0199                     	;# 
  1129  019A                     	;# 
  1130  019B                     	;# 
  1131  019C                     	;# 
  1132  020C                     	;# 
  1133  020D                     	;# 
  1134  020E                     	;# 
  1135  020E                     	;# 
  1136  020F                     	;# 
  1137  020F                     	;# 
  1138  0210                     	;# 
  1139  0210                     	;# 
  1140  0211                     	;# 
  1141  0211                     	;# 
  1142  0212                     	;# 
  1143  0213                     	;# 
  1144  0214                     	;# 
  1145  0214                     	;# 
  1146  0215                     	;# 
  1147  0215                     	;# 
  1148  0216                     	;# 
  1149  0216                     	;# 
  1150  0217                     	;# 
  1151  0217                     	;# 
  1152  0218                     	;# 
  1153  0219                     	;# 
  1154  021A                     	;# 
  1155  021A                     	;# 
  1156  021B                     	;# 
  1157  021B                     	;# 
  1158  021C                     	;# 
  1159  021C                     	;# 
  1160  021D                     	;# 
  1161  021D                     	;# 
  1162  021E                     	;# 
  1163  021F                     	;# 
  1164  028C                     	;# 
  1165  028C                     	;# 
  1166  028D                     	;# 
  1167  028D                     	;# 
  1168  028E                     	;# 
  1169  028F                     	;# 
  1170  0290                     	;# 
  1171  0291                     	;# 
  1172  0292                     	;# 
  1173  0292                     	;# 
  1174  0293                     	;# 
  1175  0293                     	;# 
  1176  0294                     	;# 
  1177  0295                     	;# 
  1178  0296                     	;# 
  1179  0297                     	;# 
  1180  0298                     	;# 
  1181  0298                     	;# 
  1182  0299                     	;# 
  1183  0299                     	;# 
  1184  029A                     	;# 
  1185  029B                     	;# 
  1186  029C                     	;# 
  1187  029D                     	;# 
  1188  029F                     	;# 
  1189  030C                     	;# 
  1190  030C                     	;# 
  1191  030D                     	;# 
  1192  030E                     	;# 
  1193  030F                     	;# 
  1194  0310                     	;# 
  1195  0310                     	;# 
  1196  0311                     	;# 
  1197  0312                     	;# 
  1198  0313                     	;# 
  1199  0314                     	;# 
  1200  0314                     	;# 
  1201  0315                     	;# 
  1202  0316                     	;# 
  1203  0317                     	;# 
  1204  0318                     	;# 
  1205  0318                     	;# 
  1206  0319                     	;# 
  1207  031A                     	;# 
  1208  031B                     	;# 
  1209  038C                     	;# 
  1210  038C                     	;# 
  1211  038D                     	;# 
  1212  038E                     	;# 
  1213  0390                     	;# 
  1214  0390                     	;# 
  1215  0391                     	;# 
  1216  0392                     	;# 
  1217  048C                     	;# 
  1218  048C                     	;# 
  1219  048D                     	;# 
  1220  048E                     	;# 
  1221  048F                     	;# 
  1222  048F                     	;# 
  1223  0490                     	;# 
  1224  0491                     	;# 
  1225  0492                     	;# 
  1226  0492                     	;# 
  1227  0493                     	;# 
  1228  0494                     	;# 
  1229  0495                     	;# 
  1230  0495                     	;# 
  1231  0496                     	;# 
  1232  0497                     	;# 
  1233  0498                     	;# 
  1234  0499                     	;# 
  1235  049A                     	;# 
  1236  049B                     	;# 
  1237  049C                     	;# 
  1238  049D                     	;# 
  1239  058C                     	;# 
  1240  058C                     	;# 
  1241  058D                     	;# 
  1242  058E                     	;# 
  1243  058F                     	;# 
  1244  058F                     	;# 
  1245  0590                     	;# 
  1246  0591                     	;# 
  1247  0592                     	;# 
  1248  0593                     	;# 
  1249  059C                     	;# 
  1250  059C                     	;# 
  1251  059D                     	;# 
  1252  059D                     	;# 
  1253  059E                     	;# 
  1254  059F                     	;# 
  1255  060C                     	;# 
  1256  060C                     	;# 
  1257  060D                     	;# 
  1258  060D                     	;# 
  1259  060E                     	;# 
  1260  060F                     	;# 
  1261  0610                     	;# 
  1262  0611                     	;# 
  1263  0612                     	;# 
  1264  0613                     	;# 
  1265  0614                     	;# 
  1266  0616                     	;# 
  1267  0616                     	;# 
  1268  0617                     	;# 
  1269  0617                     	;# 
  1270  0618                     	;# 
  1271  0619                     	;# 
  1272  061A                     	;# 
  1273  061B                     	;# 
  1274  061C                     	;# 
  1275  061D                     	;# 
  1276  061E                     	;# 
  1277  070C                     	;# 
  1278  070D                     	;# 
  1279  070E                     	;# 
  1280  070F                     	;# 
  1281  0710                     	;# 
  1282  0711                     	;# 
  1283  0712                     	;# 
  1284  0713                     	;# 
  1285  0714                     	;# 
  1286  0716                     	;# 
  1287  0717                     	;# 
  1288  0718                     	;# 
  1289  0719                     	;# 
  1290  071A                     	;# 
  1291  071B                     	;# 
  1292  071C                     	;# 
  1293  071D                     	;# 
  1294  071E                     	;# 
  1295  0796                     	;# 
  1296  0797                     	;# 
  1297  0798                     	;# 
  1298  0799                     	;# 
  1299  079A                     	;# 
  1300  079B                     	;# 
  1301  079C                     	;# 
  1302  079D                     	;# 
  1303  080C                     	;# 
  1304  080D                     	;# 
  1305  080E                     	;# 
  1306  080F                     	;# 
  1307  0810                     	;# 
  1308  0811                     	;# 
  1309  0812                     	;# 
  1310  0813                     	;# 
  1311  0814                     	;# 
  1312  081A                     	;# 
  1313  081A                     	;# 
  1314  081B                     	;# 
  1315  081C                     	;# 
  1316  081C                     	;# 
  1317  081D                     	;# 
  1318  081E                     	;# 
  1319  081F                     	;# 
  1320  088C                     	;# 
  1321  088D                     	;# 
  1322  088E                     	;# 
  1323  088F                     	;# 
  1324  0890                     	;# 
  1325  0891                     	;# 
  1326  0892                     	;# 
  1327  0893                     	;# 
  1328  0895                     	;# 
  1329  0896                     	;# 
  1330  0897                     	;# 
  1331  0898                     	;# 
  1332  0899                     	;# 
  1333  089A                     	;# 
  1334  089B                     	;# 
  1335  090C                     	;# 
  1336  090E                     	;# 
  1337  090F                     	;# 
  1338  091F                     	;# 
  1339  098F                     	;# 
  1340  098F                     	;# 
  1341  0990                     	;# 
  1342  0991                     	;# 
  1343  0992                     	;# 
  1344  0993                     	;# 
  1345  0994                     	;# 
  1346  0995                     	;# 
  1347  0996                     	;# 
  1348  0997                     	;# 
  1349  1E0F                     	;# 
  1350  1E10                     	;# 
  1351  1E11                     	;# 
  1352  1E12                     	;# 
  1353  1E13                     	;# 
  1354  1E14                     	;# 
  1355  1E15                     	;# 
  1356  1E16                     	;# 
  1357  1E17                     	;# 
  1358  1E18                     	;# 
  1359  1E19                     	;# 
  1360  1E1A                     	;# 
  1361  1E1B                     	;# 
  1362  1E1C                     	;# 
  1363  1E1D                     	;# 
  1364  1E1E                     	;# 
  1365  1E1F                     	;# 
  1366  1E20                     	;# 
  1367  1E21                     	;# 
  1368  1E22                     	;# 
  1369  1E23                     	;# 
  1370  1E24                     	;# 
  1371  1E25                     	;# 
  1372  1E26                     	;# 
  1373  1E27                     	;# 
  1374  1E28                     	;# 
  1375  1E29                     	;# 
  1376  1E2A                     	;# 
  1377  1E2B                     	;# 
  1378  1E2C                     	;# 
  1379  1E2D                     	;# 
  1380  1E2E                     	;# 
  1381  1E2F                     	;# 
  1382  1E30                     	;# 
  1383  1E31                     	;# 
  1384  1E32                     	;# 
  1385  1E33                     	;# 
  1386  1E34                     	;# 
  1387  1E35                     	;# 
  1388  1E36                     	;# 
  1389  1E37                     	;# 
  1390  1E8F                     	;# 
  1391  1E90                     	;# 
  1392  1E91                     	;# 
  1393  1E92                     	;# 
  1394  1E93                     	;# 
  1395  1E94                     	;# 
  1396  1E95                     	;# 
  1397  1E96                     	;# 
  1398  1E97                     	;# 
  1399  1E9C                     	;# 
  1400  1E9D                     	;# 
  1401  1E9E                     	;# 
  1402  1EA1                     	;# 
  1403  1EA2                     	;# 
  1404  1EA3                     	;# 
  1405  1EA4                     	;# 
  1406  1EA9                     	;# 
  1407  1EAA                     	;# 
  1408  1EB1                     	;# 
  1409  1EB2                     	;# 
  1410  1EB8                     	;# 
  1411  1EB9                     	;# 
  1412  1EBA                     	;# 
  1413  1EBB                     	;# 
  1414  1EBC                     	;# 
  1415  1EBD                     	;# 
  1416  1EBE                     	;# 
  1417  1EC3                     	;# 
  1418  1EC5                     	;# 
  1419  1EC6                     	;# 
  1420  1EC7                     	;# 
  1421  1EC8                     	;# 
  1422  1EC9                     	;# 
  1423  1ECA                     	;# 
  1424  1ECB                     	;# 
  1425  1ECB                     	;# 
  1426  1ECB                     	;# 
  1427  1ECC                     	;# 
  1428  1ECC                     	;# 
  1429  1ECC                     	;# 
  1430  1F10                     	;# 
  1431  1F11                     	;# 
  1432  1F12                     	;# 
  1433  1F14                     	;# 
  1434  1F15                     	;# 
  1435  1F1C                     	;# 
  1436  1F1D                     	;# 
  1437  1F1E                     	;# 
  1438  1F1F                     	;# 
  1439  1F20                     	;# 
  1440  1F21                     	;# 
  1441  1F22                     	;# 
  1442  1F23                     	;# 
  1443  1F24                     	;# 
  1444  1F25                     	;# 
  1445  1F26                     	;# 
  1446  1F27                     	;# 
  1447  1F38                     	;# 
  1448  1F39                     	;# 
  1449  1F3A                     	;# 
  1450  1F3B                     	;# 
  1451  1F3C                     	;# 
  1452  1F3D                     	;# 
  1453  1F3E                     	;# 
  1454  1F3F                     	;# 
  1455  1F43                     	;# 
  1456  1F44                     	;# 
  1457  1F45                     	;# 
  1458  1F46                     	;# 
  1459  1F47                     	;# 
  1460  1F48                     	;# 
  1461  1F49                     	;# 
  1462  1F4A                     	;# 
  1463  1F4E                     	;# 
  1464  1F4F                     	;# 
  1465  1F50                     	;# 
  1466  1F51                     	;# 
  1467  1F52                     	;# 
  1468  1F53                     	;# 
  1469  1F54                     	;# 
  1470  1F55                     	;# 
  1471  1FE4                     	;# 
  1472  1FE5                     	;# 
  1473  1FE6                     	;# 
  1474  1FE7                     	;# 
  1475  1FE8                     	;# 
  1476  1FE8                     	;# 
  1477  1FE9                     	;# 
  1478  1FEA                     	;# 
  1479  1FEB                     	;# 
  1480  1FED                     	;# 
  1481  1FEE                     	;# 
  1482  1FEF                     	;# 
  1483  0000                     	;# 
  1484  0001                     	;# 
  1485  0002                     	;# 
  1486  0003                     	;# 
  1487  0004                     	;# 
  1488  0005                     	;# 
  1489  0006                     	;# 
  1490  0007                     	;# 
  1491  0008                     	;# 
  1492  0009                     	;# 
  1493  000A                     	;# 
  1494  000B                     	;# 
  1495  000C                     	;# 
  1496  000D                     	;# 
  1497  000E                     	;# 
  1498  0012                     	;# 
  1499  0013                     	;# 
  1500  0014                     	;# 
  1501  0018                     	;# 
  1502  0019                     	;# 
  1503  001A                     	;# 
  1504  008C                     	;# 
  1505  008C                     	;# 
  1506  008D                     	;# 
  1507  008E                     	;# 
  1508  008E                     	;# 
  1509  008F                     	;# 
  1510  0090                     	;# 
  1511  0090                     	;# 
  1512  0091                     	;# 
  1513  0092                     	;# 
  1514  0092                     	;# 
  1515  0093                     	;# 
  1516  0094                     	;# 
  1517  0094                     	;# 
  1518  0095                     	;# 
  1519  0096                     	;# 
  1520  0096                     	;# 
  1521  0097                     	;# 
  1522  0098                     	;# 
  1523  0099                     	;# 
  1524  009A                     	;# 
  1525  009B                     	;# 
  1526  009B                     	;# 
  1527  009C                     	;# 
  1528  009D                     	;# 
  1529  009D                     	;# 
  1530  009E                     	;# 
  1531  009F                     	;# 
  1532  010C                     	;# 
  1533  010C                     	;# 
  1534  010D                     	;# 
  1535  010E                     	;# 
  1536  010F                     	;# 
  1537  010F                     	;# 
  1538  0110                     	;# 
  1539  0111                     	;# 
  1540  0112                     	;# 
  1541  0113                     	;# 
  1542  0114                     	;# 
  1543  0115                     	;# 
  1544  0116                     	;# 
  1545  0117                     	;# 
  1546  0118                     	;# 
  1547  0119                     	;# 
  1548  0119                     	;# 
  1549  0119                     	;# 
  1550  011A                     	;# 
  1551  011A                     	;# 
  1552  011A                     	;# 
  1553  011B                     	;# 
  1554  011B                     	;# 
  1555  011B                     	;# 
  1556  011B                     	;# 
  1557  011B                     	;# 
  1558  011C                     	;# 
  1559  011C                     	;# 
  1560  011C                     	;# 
  1561  011D                     	;# 
  1562  011D                     	;# 
  1563  011D                     	;# 
  1564  011E                     	;# 
  1565  011E                     	;# 
  1566  011E                     	;# 
  1567  011F                     	;# 
  1568  011F                     	;# 
  1569  011F                     	;# 
  1570  011F                     	;# 
  1571  011F                     	;# 
  1572  018C                     	;# 
  1573  018D                     	;# 
  1574  018E                     	;# 
  1575  018F                     	;# 
  1576  0190                     	;# 
  1577  0191                     	;# 
  1578  0192                     	;# 
  1579  0196                     	;# 
  1580  0197                     	;# 
  1581  0198                     	;# 
  1582  0199                     	;# 
  1583  019A                     	;# 
  1584  019B                     	;# 
  1585  019C                     	;# 
  1586  020C                     	;# 
  1587  020D                     	;# 
  1588  020E                     	;# 
  1589  020E                     	;# 
  1590  020F                     	;# 
  1591  020F                     	;# 
  1592  0210                     	;# 
  1593  0210                     	;# 
  1594  0211                     	;# 
  1595  0211                     	;# 
  1596  0212                     	;# 
  1597  0213                     	;# 
  1598  0214                     	;# 
  1599  0214                     	;# 
  1600  0215                     	;# 
  1601  0215                     	;# 
  1602  0216                     	;# 
  1603  0216                     	;# 
  1604  0217                     	;# 
  1605  0217                     	;# 
  1606  0218                     	;# 
  1607  0219                     	;# 
  1608  021A                     	;# 
  1609  021A                     	;# 
  1610  021B                     	;# 
  1611  021B                     	;# 
  1612  021C                     	;# 
  1613  021C                     	;# 
  1614  021D                     	;# 
  1615  021D                     	;# 
  1616  021E                     	;# 
  1617  021F                     	;# 
  1618  028C                     	;# 
  1619  028C                     	;# 
  1620  028D                     	;# 
  1621  028D                     	;# 
  1622  028E                     	;# 
  1623  028F                     	;# 
  1624  0290                     	;# 
  1625  0291                     	;# 
  1626  0292                     	;# 
  1627  0292                     	;# 
  1628  0293                     	;# 
  1629  0293                     	;# 
  1630  0294                     	;# 
  1631  0295                     	;# 
  1632  0296                     	;# 
  1633  0297                     	;# 
  1634  0298                     	;# 
  1635  0298                     	;# 
  1636  0299                     	;# 
  1637  0299                     	;# 
  1638  029A                     	;# 
  1639  029B                     	;# 
  1640  029C                     	;# 
  1641  029D                     	;# 
  1642  029F                     	;# 
  1643  030C                     	;# 
  1644  030C                     	;# 
  1645  030D                     	;# 
  1646  030E                     	;# 
  1647  030F                     	;# 
  1648  0310                     	;# 
  1649  0310                     	;# 
  1650  0311                     	;# 
  1651  0312                     	;# 
  1652  0313                     	;# 
  1653  0314                     	;# 
  1654  0314                     	;# 
  1655  0315                     	;# 
  1656  0316                     	;# 
  1657  0317                     	;# 
  1658  0318                     	;# 
  1659  0318                     	;# 
  1660  0319                     	;# 
  1661  031A                     	;# 
  1662  031B                     	;# 
  1663  038C                     	;# 
  1664  038C                     	;# 
  1665  038D                     	;# 
  1666  038E                     	;# 
  1667  0390                     	;# 
  1668  0390                     	;# 
  1669  0391                     	;# 
  1670  0392                     	;# 
  1671  048C                     	;# 
  1672  048C                     	;# 
  1673  048D                     	;# 
  1674  048E                     	;# 
  1675  048F                     	;# 
  1676  048F                     	;# 
  1677  0490                     	;# 
  1678  0491                     	;# 
  1679  0492                     	;# 
  1680  0492                     	;# 
  1681  0493                     	;# 
  1682  0494                     	;# 
  1683  0495                     	;# 
  1684  0495                     	;# 
  1685  0496                     	;# 
  1686  0497                     	;# 
  1687  0498                     	;# 
  1688  0499                     	;# 
  1689  049A                     	;# 
  1690  049B                     	;# 
  1691  049C                     	;# 
  1692  049D                     	;# 
  1693  058C                     	;# 
  1694  058C                     	;# 
  1695  058D                     	;# 
  1696  058E                     	;# 
  1697  058F                     	;# 
  1698  058F                     	;# 
  1699  0590                     	;# 
  1700  0591                     	;# 
  1701  0592                     	;# 
  1702  0593                     	;# 
  1703  059C                     	;# 
  1704  059C                     	;# 
  1705  059D                     	;# 
  1706  059D                     	;# 
  1707  059E                     	;# 
  1708  059F                     	;# 
  1709  060C                     	;# 
  1710  060C                     	;# 
  1711  060D                     	;# 
  1712  060D                     	;# 
  1713  060E                     	;# 
  1714  060F                     	;# 
  1715  0610                     	;# 
  1716  0611                     	;# 
  1717  0612                     	;# 
  1718  0613                     	;# 
  1719  0614                     	;# 
  1720  0616                     	;# 
  1721  0616                     	;# 
  1722  0617                     	;# 
  1723  0617                     	;# 
  1724  0618                     	;# 
  1725  0619                     	;# 
  1726  061A                     	;# 
  1727  061B                     	;# 
  1728  061C                     	;# 
  1729  061D                     	;# 
  1730  061E                     	;# 
  1731  070C                     	;# 
  1732  070D                     	;# 
  1733  070E                     	;# 
  1734  070F                     	;# 
  1735  0710                     	;# 
  1736  0711                     	;# 
  1737  0712                     	;# 
  1738  0713                     	;# 
  1739  0714                     	;# 
  1740  0716                     	;# 
  1741  0717                     	;# 
  1742  0718                     	;# 
  1743  0719                     	;# 
  1744  071A                     	;# 
  1745  071B                     	;# 
  1746  071C                     	;# 
  1747  071D                     	;# 
  1748  071E                     	;# 
  1749  0796                     	;# 
  1750  0797                     	;# 
  1751  0798                     	;# 
  1752  0799                     	;# 
  1753  079A                     	;# 
  1754  079B                     	;# 
  1755  079C                     	;# 
  1756  079D                     	;# 
  1757  080C                     	;# 
  1758  080D                     	;# 
  1759  080E                     	;# 
  1760  080F                     	;# 
  1761  0810                     	;# 
  1762  0811                     	;# 
  1763  0812                     	;# 
  1764  0813                     	;# 
  1765  0814                     	;# 
  1766  081A                     	;# 
  1767  081A                     	;# 
  1768  081B                     	;# 
  1769  081C                     	;# 
  1770  081C                     	;# 
  1771  081D                     	;# 
  1772  081E                     	;# 
  1773  081F                     	;# 
  1774  088C                     	;# 
  1775  088D                     	;# 
  1776  088E                     	;# 
  1777  088F                     	;# 
  1778  0890                     	;# 
  1779  0891                     	;# 
  1780  0892                     	;# 
  1781  0893                     	;# 
  1782  0895                     	;# 
  1783  0896                     	;# 
  1784  0897                     	;# 
  1785  0898                     	;# 
  1786  0899                     	;# 
  1787  089A                     	;# 
  1788  089B                     	;# 
  1789  090C                     	;# 
  1790  090E                     	;# 
  1791  090F                     	;# 
  1792  091F                     	;# 
  1793  098F                     	;# 
  1794  098F                     	;# 
  1795  0990                     	;# 
  1796  0991                     	;# 
  1797  0992                     	;# 
  1798  0993                     	;# 
  1799  0994                     	;# 
  1800  0995                     	;# 
  1801  0996                     	;# 
  1802  0997                     	;# 
  1803  1E0F                     	;# 
  1804  1E10                     	;# 
  1805  1E11                     	;# 
  1806  1E12                     	;# 
  1807  1E13                     	;# 
  1808  1E14                     	;# 
  1809  1E15                     	;# 
  1810  1E16                     	;# 
  1811  1E17                     	;# 
  1812  1E18                     	;# 
  1813  1E19                     	;# 
  1814  1E1A                     	;# 
  1815  1E1B                     	;# 
  1816  1E1C                     	;# 
  1817  1E1D                     	;# 
  1818  1E1E                     	;# 
  1819  1E1F                     	;# 
  1820  1E20                     	;# 
  1821  1E21                     	;# 
  1822  1E22                     	;# 
  1823  1E23                     	;# 
  1824  1E24                     	;# 
  1825  1E25                     	;# 
  1826  1E26                     	;# 
  1827  1E27                     	;# 
  1828  1E28                     	;# 
  1829  1E29                     	;# 
  1830  1E2A                     	;# 
  1831  1E2B                     	;# 
  1832  1E2C                     	;# 
  1833  1E2D                     	;# 
  1834  1E2E                     	;# 
  1835  1E2F                     	;# 
  1836  1E30                     	;# 
  1837  1E31                     	;# 
  1838  1E32                     	;# 
  1839  1E33                     	;# 
  1840  1E34                     	;# 
  1841  1E35                     	;# 
  1842  1E36                     	;# 
  1843  1E37                     	;# 
  1844  1E8F                     	;# 
  1845  1E90                     	;# 
  1846  1E91                     	;# 
  1847  1E92                     	;# 
  1848  1E93                     	;# 
  1849  1E94                     	;# 
  1850  1E95                     	;# 
  1851  1E96                     	;# 
  1852  1E97                     	;# 
  1853  1E9C                     	;# 
  1854  1E9D                     	;# 
  1855  1E9E                     	;# 
  1856  1EA1                     	;# 
  1857  1EA2                     	;# 
  1858  1EA3                     	;# 
  1859  1EA4                     	;# 
  1860  1EA9                     	;# 
  1861  1EAA                     	;# 
  1862  1EB1                     	;# 
  1863  1EB2                     	;# 
  1864  1EB8                     	;# 
  1865  1EB9                     	;# 
  1866  1EBA                     	;# 
  1867  1EBB                     	;# 
  1868  1EBC                     	;# 
  1869  1EBD                     	;# 
  1870  1EBE                     	;# 
  1871  1EC3                     	;# 
  1872  1EC5                     	;# 
  1873  1EC6                     	;# 
  1874  1EC7                     	;# 
  1875  1EC8                     	;# 
  1876  1EC9                     	;# 
  1877  1ECA                     	;# 
  1878  1ECB                     	;# 
  1879  1ECB                     	;# 
  1880  1ECB                     	;# 
  1881  1ECC                     	;# 
  1882  1ECC                     	;# 
  1883  1ECC                     	;# 
  1884  1F10                     	;# 
  1885  1F11                     	;# 
  1886  1F12                     	;# 
  1887  1F14                     	;# 
  1888  1F15                     	;# 
  1889  1F1C                     	;# 
  1890  1F1D                     	;# 
  1891  1F1E                     	;# 
  1892  1F1F                     	;# 
  1893  1F20                     	;# 
  1894  1F21                     	;# 
  1895  1F22                     	;# 
  1896  1F23                     	;# 
  1897  1F24                     	;# 
  1898  1F25                     	;# 
  1899  1F26                     	;# 
  1900  1F27                     	;# 
  1901  1F38                     	;# 
  1902  1F39                     	;# 
  1903  1F3A                     	;# 
  1904  1F3B                     	;# 
  1905  1F3C                     	;# 
  1906  1F3D                     	;# 
  1907  1F3E                     	;# 
  1908  1F3F                     	;# 
  1909  1F43                     	;# 
  1910  1F44                     	;# 
  1911  1F45                     	;# 
  1912  1F46                     	;# 
  1913  1F47                     	;# 
  1914  1F48                     	;# 
  1915  1F49                     	;# 
  1916  1F4A                     	;# 
  1917  1F4E                     	;# 
  1918  1F4F                     	;# 
  1919  1F50                     	;# 
  1920  1F51                     	;# 
  1921  1F52                     	;# 
  1922  1F53                     	;# 
  1923  1F54                     	;# 
  1924  1F55                     	;# 
  1925  1FE4                     	;# 
  1926  1FE5                     	;# 
  1927  1FE6                     	;# 
  1928  1FE7                     	;# 
  1929  1FE8                     	;# 
  1930  1FE8                     	;# 
  1931  1FE9                     	;# 
  1932  1FEA                     	;# 
  1933  1FEB                     	;# 
  1934  1FED                     	;# 
  1935  1FEE                     	;# 
  1936  1FEF                     	;# 
  1937  0000                     	;# 
  1938  0001                     	;# 
  1939  0002                     	;# 
  1940  0003                     	;# 
  1941  0004                     	;# 
  1942  0005                     	;# 
  1943  0006                     	;# 
  1944  0007                     	;# 
  1945  0008                     	;# 
  1946  0009                     	;# 
  1947  000A                     	;# 
  1948  000B                     	;# 
  1949  000C                     	;# 
  1950  000D                     	;# 
  1951  000E                     	;# 
  1952  0012                     	;# 
  1953  0013                     	;# 
  1954  0014                     	;# 
  1955  0018                     	;# 
  1956  0019                     	;# 
  1957  001A                     	;# 
  1958  008C                     	;# 
  1959  008C                     	;# 
  1960  008D                     	;# 
  1961  008E                     	;# 
  1962  008E                     	;# 
  1963  008F                     	;# 
  1964  0090                     	;# 
  1965  0090                     	;# 
  1966  0091                     	;# 
  1967  0092                     	;# 
  1968  0092                     	;# 
  1969  0093                     	;# 
  1970  0094                     	;# 
  1971  0094                     	;# 
  1972  0095                     	;# 
  1973  0096                     	;# 
  1974  0096                     	;# 
  1975  0097                     	;# 
  1976  0098                     	;# 
  1977  0099                     	;# 
  1978  009A                     	;# 
  1979  009B                     	;# 
  1980  009B                     	;# 
  1981  009C                     	;# 
  1982  009D                     	;# 
  1983  009D                     	;# 
  1984  009E                     	;# 
  1985  009F                     	;# 
  1986  010C                     	;# 
  1987  010C                     	;# 
  1988  010D                     	;# 
  1989  010E                     	;# 
  1990  010F                     	;# 
  1991  010F                     	;# 
  1992  0110                     	;# 
  1993  0111                     	;# 
  1994  0112                     	;# 
  1995  0113                     	;# 
  1996  0114                     	;# 
  1997  0115                     	;# 
  1998  0116                     	;# 
  1999  0117                     	;# 
  2000  0118                     	;# 
  2001  0119                     	;# 
  2002  0119                     	;# 
  2003  0119                     	;# 
  2004  011A                     	;# 
  2005  011A                     	;# 
  2006  011A                     	;# 
  2007  011B                     	;# 
  2008  011B                     	;# 
  2009  011B                     	;# 
  2010  011B                     	;# 
  2011  011B                     	;# 
  2012  011C                     	;# 
  2013  011C                     	;# 
  2014  011C                     	;# 
  2015  011D                     	;# 
  2016  011D                     	;# 
  2017  011D                     	;# 
  2018  011E                     	;# 
  2019  011E                     	;# 
  2020  011E                     	;# 
  2021  011F                     	;# 
  2022  011F                     	;# 
  2023  011F                     	;# 
  2024  011F                     	;# 
  2025  011F                     	;# 
  2026  018C                     	;# 
  2027  018D                     	;# 
  2028  018E                     	;# 
  2029  018F                     	;# 
  2030  0190                     	;# 
  2031  0191                     	;# 
  2032  0192                     	;# 
  2033  0196                     	;# 
  2034  0197                     	;# 
  2035  0198                     	;# 
  2036  0199                     	;# 
  2037  019A                     	;# 
  2038  019B                     	;# 
  2039  019C                     	;# 
  2040  020C                     	;# 
  2041  020D                     	;# 
  2042  020E                     	;# 
  2043  020E                     	;# 
  2044  020F                     	;# 
  2045  020F                     	;# 
  2046  0210                     	;# 
  2047  0210                     	;# 
  2048  0211                     	;# 
  2049  0211                     	;# 
  2050  0212                     	;# 
  2051  0213                     	;# 
  2052  0214                     	;# 
  2053  0214                     	;# 
  2054  0215                     	;# 
  2055  0215                     	;# 
  2056  0216                     	;# 
  2057  0216                     	;# 
  2058  0217                     	;# 
  2059  0217                     	;# 
  2060  0218                     	;# 
  2061  0219                     	;# 
  2062  021A                     	;# 
  2063  021A                     	;# 
  2064  021B                     	;# 
  2065  021B                     	;# 
  2066  021C                     	;# 
  2067  021C                     	;# 
  2068  021D                     	;# 
  2069  021D                     	;# 
  2070  021E                     	;# 
  2071  021F                     	;# 
  2072  028C                     	;# 
  2073  028C                     	;# 
  2074  028D                     	;# 
  2075  028D                     	;# 
  2076  028E                     	;# 
  2077  028F                     	;# 
  2078  0290                     	;# 
  2079  0291                     	;# 
  2080  0292                     	;# 
  2081  0292                     	;# 
  2082  0293                     	;# 
  2083  0293                     	;# 
  2084  0294                     	;# 
  2085  0295                     	;# 
  2086  0296                     	;# 
  2087  0297                     	;# 
  2088  0298                     	;# 
  2089  0298                     	;# 
  2090  0299                     	;# 
  2091  0299                     	;# 
  2092  029A                     	;# 
  2093  029B                     	;# 
  2094  029C                     	;# 
  2095  029D                     	;# 
  2096  029F                     	;# 
  2097  030C                     	;# 
  2098  030C                     	;# 
  2099  030D                     	;# 
  2100  030E                     	;# 
  2101  030F                     	;# 
  2102  0310                     	;# 
  2103  0310                     	;# 
  2104  0311                     	;# 
  2105  0312                     	;# 
  2106  0313                     	;# 
  2107  0314                     	;# 
  2108  0314                     	;# 
  2109  0315                     	;# 
  2110  0316                     	;# 
  2111  0317                     	;# 
  2112  0318                     	;# 
  2113  0318                     	;# 
  2114  0319                     	;# 
  2115  031A                     	;# 
  2116  031B                     	;# 
  2117  038C                     	;# 
  2118  038C                     	;# 
  2119  038D                     	;# 
  2120  038E                     	;# 
  2121  0390                     	;# 
  2122  0390                     	;# 
  2123  0391                     	;# 
  2124  0392                     	;# 
  2125  048C                     	;# 
  2126  048C                     	;# 
  2127  048D                     	;# 
  2128  048E                     	;# 
  2129  048F                     	;# 
  2130  048F                     	;# 
  2131  0490                     	;# 
  2132  0491                     	;# 
  2133  0492                     	;# 
  2134  0492                     	;# 
  2135  0493                     	;# 
  2136  0494                     	;# 
  2137  0495                     	;# 
  2138  0495                     	;# 
  2139  0496                     	;# 
  2140  0497                     	;# 
  2141  0498                     	;# 
  2142  0499                     	;# 
  2143  049A                     	;# 
  2144  049B                     	;# 
  2145  049C                     	;# 
  2146  049D                     	;# 
  2147  058C                     	;# 
  2148  058C                     	;# 
  2149  058D                     	;# 
  2150  058E                     	;# 
  2151  058F                     	;# 
  2152  058F                     	;# 
  2153  0590                     	;# 
  2154  0591                     	;# 
  2155  0592                     	;# 
  2156  0593                     	;# 
  2157  059C                     	;# 
  2158  059C                     	;# 
  2159  059D                     	;# 
  2160  059D                     	;# 
  2161  059E                     	;# 
  2162  059F                     	;# 
  2163  060C                     	;# 
  2164  060C                     	;# 
  2165  060D                     	;# 
  2166  060D                     	;# 
  2167  060E                     	;# 
  2168  060F                     	;# 
  2169  0610                     	;# 
  2170  0611                     	;# 
  2171  0612                     	;# 
  2172  0613                     	;# 
  2173  0614                     	;# 
  2174  0616                     	;# 
  2175  0616                     	;# 
  2176  0617                     	;# 
  2177  0617                     	;# 
  2178  0618                     	;# 
  2179  0619                     	;# 
  2180  061A                     	;# 
  2181  061B                     	;# 
  2182  061C                     	;# 
  2183  061D                     	;# 
  2184  061E                     	;# 
  2185  070C                     	;# 
  2186  070D                     	;# 
  2187  070E                     	;# 
  2188  070F                     	;# 
  2189  0710                     	;# 
  2190  0711                     	;# 
  2191  0712                     	;# 
  2192  0713                     	;# 
  2193  0714                     	;# 
  2194  0716                     	;# 
  2195  0717                     	;# 
  2196  0718                     	;# 
  2197  0719                     	;# 
  2198  071A                     	;# 
  2199  071B                     	;# 
  2200  071C                     	;# 
  2201  071D                     	;# 
  2202  071E                     	;# 
  2203  0796                     	;# 
  2204  0797                     	;# 
  2205  0798                     	;# 
  2206  0799                     	;# 
  2207  079A                     	;# 
  2208  079B                     	;# 
  2209  079C                     	;# 
  2210  079D                     	;# 
  2211  080C                     	;# 
  2212  080D                     	;# 
  2213  080E                     	;# 
  2214  080F                     	;# 
  2215  0810                     	;# 
  2216  0811                     	;# 
  2217  0812                     	;# 
  2218  0813                     	;# 
  2219  0814                     	;# 
  2220  081A                     	;# 
  2221  081A                     	;# 
  2222  081B                     	;# 
  2223  081C                     	;# 
  2224  081C                     	;# 
  2225  081D                     	;# 
  2226  081E                     	;# 
  2227  081F                     	;# 
  2228  088C                     	;# 
  2229  088D                     	;# 
  2230  088E                     	;# 
  2231  088F                     	;# 
  2232  0890                     	;# 
  2233  0891                     	;# 
  2234  0892                     	;# 
  2235  0893                     	;# 
  2236  0895                     	;# 
  2237  0896                     	;# 
  2238  0897                     	;# 
  2239  0898                     	;# 
  2240  0899                     	;# 
  2241  089A                     	;# 
  2242  089B                     	;# 
  2243  090C                     	;# 
  2244  090E                     	;# 
  2245  090F                     	;# 
  2246  091F                     	;# 
  2247  098F                     	;# 
  2248  098F                     	;# 
  2249  0990                     	;# 
  2250  0991                     	;# 
  2251  0992                     	;# 
  2252  0993                     	;# 
  2253  0994                     	;# 
  2254  0995                     	;# 
  2255  0996                     	;# 
  2256  0997                     	;# 
  2257  1E0F                     	;# 
  2258  1E10                     	;# 
  2259  1E11                     	;# 
  2260  1E12                     	;# 
  2261  1E13                     	;# 
  2262  1E14                     	;# 
  2263  1E15                     	;# 
  2264  1E16                     	;# 
  2265  1E17                     	;# 
  2266  1E18                     	;# 
  2267  1E19                     	;# 
  2268  1E1A                     	;# 
  2269  1E1B                     	;# 
  2270  1E1C                     	;# 
  2271  1E1D                     	;# 
  2272  1E1E                     	;# 
  2273  1E1F                     	;# 
  2274  1E20                     	;# 
  2275  1E21                     	;# 
  2276  1E22                     	;# 
  2277  1E23                     	;# 
  2278  1E24                     	;# 
  2279  1E25                     	;# 
  2280  1E26                     	;# 
  2281  1E27                     	;# 
  2282  1E28                     	;# 
  2283  1E29                     	;# 
  2284  1E2A                     	;# 
  2285  1E2B                     	;# 
  2286  1E2C                     	;# 
  2287  1E2D                     	;# 
  2288  1E2E                     	;# 
  2289  1E2F                     	;# 
  2290  1E30                     	;# 
  2291  1E31                     	;# 
  2292  1E32                     	;# 
  2293  1E33                     	;# 
  2294  1E34                     	;# 
  2295  1E35                     	;# 
  2296  1E36                     	;# 
  2297  1E37                     	;# 
  2298  1E8F                     	;# 
  2299  1E90                     	;# 
  2300  1E91                     	;# 
  2301  1E92                     	;# 
  2302  1E93                     	;# 
  2303  1E94                     	;# 
  2304  1E95                     	;# 
  2305  1E96                     	;# 
  2306  1E97                     	;# 
  2307  1E9C                     	;# 
  2308  1E9D                     	;# 
  2309  1E9E                     	;# 
  2310  1EA1                     	;# 
  2311  1EA2                     	;# 
  2312  1EA3                     	;# 
  2313  1EA4                     	;# 
  2314  1EA9                     	;# 
  2315  1EAA                     	;# 
  2316  1EB1                     	;# 
  2317  1EB2                     	;# 
  2318  1EB8                     	;# 
  2319  1EB9                     	;# 
  2320  1EBA                     	;# 
  2321  1EBB                     	;# 
  2322  1EBC                     	;# 
  2323  1EBD                     	;# 
  2324  1EBE                     	;# 
  2325  1EC3                     	;# 
  2326  1EC5                     	;# 
  2327  1EC6                     	;# 
  2328  1EC7                     	;# 
  2329  1EC8                     	;# 
  2330  1EC9                     	;# 
  2331  1ECA                     	;# 
  2332  1ECB                     	;# 
  2333  1ECB                     	;# 
  2334  1ECB                     	;# 
  2335  1ECC                     	;# 
  2336  1ECC                     	;# 
  2337  1ECC                     	;# 
  2338  1F10                     	;# 
  2339  1F11                     	;# 
  2340  1F12                     	;# 
  2341  1F14                     	;# 
  2342  1F15                     	;# 
  2343  1F1C                     	;# 
  2344  1F1D                     	;# 
  2345  1F1E                     	;# 
  2346  1F1F                     	;# 
  2347  1F20                     	;# 
  2348  1F21                     	;# 
  2349  1F22                     	;# 
  2350  1F23                     	;# 
  2351  1F24                     	;# 
  2352  1F25                     	;# 
  2353  1F26                     	;# 
  2354  1F27                     	;# 
  2355  1F38                     	;# 
  2356  1F39                     	;# 
  2357  1F3A                     	;# 
  2358  1F3B                     	;# 
  2359  1F3C                     	;# 
  2360  1F3D                     	;# 
  2361  1F3E                     	;# 
  2362  1F3F                     	;# 
  2363  1F43                     	;# 
  2364  1F44                     	;# 
  2365  1F45                     	;# 
  2366  1F46                     	;# 
  2367  1F47                     	;# 
  2368  1F48                     	;# 
  2369  1F49                     	;# 
  2370  1F4A                     	;# 
  2371  1F4E                     	;# 
  2372  1F4F                     	;# 
  2373  1F50                     	;# 
  2374  1F51                     	;# 
  2375  1F52                     	;# 
  2376  1F53                     	;# 
  2377  1F54                     	;# 
  2378  1F55                     	;# 
  2379  1FE4                     	;# 
  2380  1FE5                     	;# 
  2381  1FE6                     	;# 
  2382  1FE7                     	;# 
  2383  1FE8                     	;# 
  2384  1FE8                     	;# 
  2385  1FE9                     	;# 
  2386  1FEA                     	;# 
  2387  1FEB                     	;# 
  2388  1FED                     	;# 
  2389  1FEE                     	;# 
  2390  1FEF                     	;# 
  2391  0000                     	;# 
  2392  0001                     	;# 
  2393  0002                     	;# 
  2394  0003                     	;# 
  2395  0004                     	;# 
  2396  0005                     	;# 
  2397  0006                     	;# 
  2398  0007                     	;# 
  2399  0008                     	;# 
  2400  0009                     	;# 
  2401  000A                     	;# 
  2402  000B                     	;# 
  2403  000C                     	;# 
  2404  000D                     	;# 
  2405  000E                     	;# 
  2406  0012                     	;# 
  2407  0013                     	;# 
  2408  0014                     	;# 
  2409  0018                     	;# 
  2410  0019                     	;# 
  2411  001A                     	;# 
  2412  008C                     	;# 
  2413  008C                     	;# 
  2414  008D                     	;# 
  2415  008E                     	;# 
  2416  008E                     	;# 
  2417  008F                     	;# 
  2418  0090                     	;# 
  2419  0090                     	;# 
  2420  0091                     	;# 
  2421  0092                     	;# 
  2422  0092                     	;# 
  2423  0093                     	;# 
  2424  0094                     	;# 
  2425  0094                     	;# 
  2426  0095                     	;# 
  2427  0096                     	;# 
  2428  0096                     	;# 
  2429  0097                     	;# 
  2430  0098                     	;# 
  2431  0099                     	;# 
  2432  009A                     	;# 
  2433  009B                     	;# 
  2434  009B                     	;# 
  2435  009C                     	;# 
  2436  009D                     	;# 
  2437  009D                     	;# 
  2438  009E                     	;# 
  2439  009F                     	;# 
  2440  010C                     	;# 
  2441  010C                     	;# 
  2442  010D                     	;# 
  2443  010E                     	;# 
  2444  010F                     	;# 
  2445  010F                     	;# 
  2446  0110                     	;# 
  2447  0111                     	;# 
  2448  0112                     	;# 
  2449  0113                     	;# 
  2450  0114                     	;# 
  2451  0115                     	;# 
  2452  0116                     	;# 
  2453  0117                     	;# 
  2454  0118                     	;# 
  2455  0119                     	;# 
  2456  0119                     	;# 
  2457  0119                     	;# 
  2458  011A                     	;# 
  2459  011A                     	;# 
  2460  011A                     	;# 
  2461  011B                     	;# 
  2462  011B                     	;# 
  2463  011B                     	;# 
  2464  011B                     	;# 
  2465  011B                     	;# 
  2466  011C                     	;# 
  2467  011C                     	;# 
  2468  011C                     	;# 
  2469  011D                     	;# 
  2470  011D                     	;# 
  2471  011D                     	;# 
  2472  011E                     	;# 
  2473  011E                     	;# 
  2474  011E                     	;# 
  2475  011F                     	;# 
  2476  011F                     	;# 
  2477  011F                     	;# 
  2478  011F                     	;# 
  2479  011F                     	;# 
  2480  018C                     	;# 
  2481  018D                     	;# 
  2482  018E                     	;# 
  2483  018F                     	;# 
  2484  0190                     	;# 
  2485  0191                     	;# 
  2486  0192                     	;# 
  2487  0196                     	;# 
  2488  0197                     	;# 
  2489  0198                     	;# 
  2490  0199                     	;# 
  2491  019A                     	;# 
  2492  019B                     	;# 
  2493  019C                     	;# 
  2494  020C                     	;# 
  2495  020D                     	;# 
  2496  020E                     	;# 
  2497  020E                     	;# 
  2498  020F                     	;# 
  2499  020F                     	;# 
  2500  0210                     	;# 
  2501  0210                     	;# 
  2502  0211                     	;# 
  2503  0211                     	;# 
  2504  0212                     	;# 
  2505  0213                     	;# 
  2506  0214                     	;# 
  2507  0214                     	;# 
  2508  0215                     	;# 
  2509  0215                     	;# 
  2510  0216                     	;# 
  2511  0216                     	;# 
  2512  0217                     	;# 
  2513  0217                     	;# 
  2514  0218                     	;# 
  2515  0219                     	;# 
  2516  021A                     	;# 
  2517  021A                     	;# 
  2518  021B                     	;# 
  2519  021B                     	;# 
  2520  021C                     	;# 
  2521  021C                     	;# 
  2522  021D                     	;# 
  2523  021D                     	;# 
  2524  021E                     	;# 
  2525  021F                     	;# 
  2526  028C                     	;# 
  2527  028C                     	;# 
  2528  028D                     	;# 
  2529  028D                     	;# 
  2530  028E                     	;# 
  2531  028F                     	;# 
  2532  0290                     	;# 
  2533  0291                     	;# 
  2534  0292                     	;# 
  2535  0292                     	;# 
  2536  0293                     	;# 
  2537  0293                     	;# 
  2538  0294                     	;# 
  2539  0295                     	;# 
  2540  0296                     	;# 
  2541  0297                     	;# 
  2542  0298                     	;# 
  2543  0298                     	;# 
  2544  0299                     	;# 
  2545  0299                     	;# 
  2546  029A                     	;# 
  2547  029B                     	;# 
  2548  029C                     	;# 
  2549  029D                     	;# 
  2550  029F                     	;# 
  2551  030C                     	;# 
  2552  030C                     	;# 
  2553  030D                     	;# 
  2554  030E                     	;# 
  2555  030F                     	;# 
  2556  0310                     	;# 
  2557  0310                     	;# 
  2558  0311                     	;# 
  2559  0312                     	;# 
  2560  0313                     	;# 
  2561  0314                     	;# 
  2562  0314                     	;# 
  2563  0315                     	;# 
  2564  0316                     	;# 
  2565  0317                     	;# 
  2566  0318                     	;# 
  2567  0318                     	;# 
  2568  0319                     	;# 
  2569  031A                     	;# 
  2570  031B                     	;# 
  2571  038C                     	;# 
  2572  038C                     	;# 
  2573  038D                     	;# 
  2574  038E                     	;# 
  2575  0390                     	;# 
  2576  0390                     	;# 
  2577  0391                     	;# 
  2578  0392                     	;# 
  2579  048C                     	;# 
  2580  048C                     	;# 
  2581  048D                     	;# 
  2582  048E                     	;# 
  2583  048F                     	;# 
  2584  048F                     	;# 
  2585  0490                     	;# 
  2586  0491                     	;# 
  2587  0492                     	;# 
  2588  0492                     	;# 
  2589  0493                     	;# 
  2590  0494                     	;# 
  2591  0495                     	;# 
  2592  0495                     	;# 
  2593  0496                     	;# 
  2594  0497                     	;# 
  2595  0498                     	;# 
  2596  0499                     	;# 
  2597  049A                     	;# 
  2598  049B                     	;# 
  2599  049C                     	;# 
  2600  049D                     	;# 
  2601  058C                     	;# 
  2602  058C                     	;# 
  2603  058D                     	;# 
  2604  058E                     	;# 
  2605  058F                     	;# 
  2606  058F                     	;# 
  2607  0590                     	;# 
  2608  0591                     	;# 
  2609  0592                     	;# 
  2610  0593                     	;# 
  2611  059C                     	;# 
  2612  059C                     	;# 
  2613  059D                     	;# 
  2614  059D                     	;# 
  2615  059E                     	;# 
  2616  059F                     	;# 
  2617  060C                     	;# 
  2618  060C                     	;# 
  2619  060D                     	;# 
  2620  060D                     	;# 
  2621  060E                     	;# 
  2622  060F                     	;# 
  2623  0610                     	;# 
  2624  0611                     	;# 
  2625  0612                     	;# 
  2626  0613                     	;# 
  2627  0614                     	;# 
  2628  0616                     	;# 
  2629  0616                     	;# 
  2630  0617                     	;# 
  2631  0617                     	;# 
  2632  0618                     	;# 
  2633  0619                     	;# 
  2634  061A                     	;# 
  2635  061B                     	;# 
  2636  061C                     	;# 
  2637  061D                     	;# 
  2638  061E                     	;# 
  2639  070C                     	;# 
  2640  070D                     	;# 
  2641  070E                     	;# 
  2642  070F                     	;# 
  2643  0710                     	;# 
  2644  0711                     	;# 
  2645  0712                     	;# 
  2646  0713                     	;# 
  2647  0714                     	;# 
  2648  0716                     	;# 
  2649  0717                     	;# 
  2650  0718                     	;# 
  2651  0719                     	;# 
  2652  071A                     	;# 
  2653  071B                     	;# 
  2654  071C                     	;# 
  2655  071D                     	;# 
  2656  071E                     	;# 
  2657  0796                     	;# 
  2658  0797                     	;# 
  2659  0798                     	;# 
  2660  0799                     	;# 
  2661  079A                     	;# 
  2662  079B                     	;# 
  2663  079C                     	;# 
  2664  079D                     	;# 
  2665  080C                     	;# 
  2666  080D                     	;# 
  2667  080E                     	;# 
  2668  080F                     	;# 
  2669  0810                     	;# 
  2670  0811                     	;# 
  2671  0812                     	;# 
  2672  0813                     	;# 
  2673  0814                     	;# 
  2674  081A                     	;# 
  2675  081A                     	;# 
  2676  081B                     	;# 
  2677  081C                     	;# 
  2678  081C                     	;# 
  2679  081D                     	;# 
  2680  081E                     	;# 
  2681  081F                     	;# 
  2682  088C                     	;# 
  2683  088D                     	;# 
  2684  088E                     	;# 
  2685  088F                     	;# 
  2686  0890                     	;# 
  2687  0891                     	;# 
  2688  0892                     	;# 
  2689  0893                     	;# 
  2690  0895                     	;# 
  2691  0896                     	;# 
  2692  0897                     	;# 
  2693  0898                     	;# 
  2694  0899                     	;# 
  2695  089A                     	;# 
  2696  089B                     	;# 
  2697  090C                     	;# 
  2698  090E                     	;# 
  2699  090F                     	;# 
  2700  091F                     	;# 
  2701  098F                     	;# 
  2702  098F                     	;# 
  2703  0990                     	;# 
  2704  0991                     	;# 
  2705  0992                     	;# 
  2706  0993                     	;# 
  2707  0994                     	;# 
  2708  0995                     	;# 
  2709  0996                     	;# 
  2710  0997                     	;# 
  2711  1E0F                     	;# 
  2712  1E10                     	;# 
  2713  1E11                     	;# 
  2714  1E12                     	;# 
  2715  1E13                     	;# 
  2716  1E14                     	;# 
  2717  1E15                     	;# 
  2718  1E16                     	;# 
  2719  1E17                     	;# 
  2720  1E18                     	;# 
  2721  1E19                     	;# 
  2722  1E1A                     	;# 
  2723  1E1B                     	;# 
  2724  1E1C                     	;# 
  2725  1E1D                     	;# 
  2726  1E1E                     	;# 
  2727  1E1F                     	;# 
  2728  1E20                     	;# 
  2729  1E21                     	;# 
  2730  1E22                     	;# 
  2731  1E23                     	;# 
  2732  1E24                     	;# 
  2733  1E25                     	;# 
  2734  1E26                     	;# 
  2735  1E27                     	;# 
  2736  1E28                     	;# 
  2737  1E29                     	;# 
  2738  1E2A                     	;# 
  2739  1E2B                     	;# 
  2740  1E2C                     	;# 
  2741  1E2D                     	;# 
  2742  1E2E                     	;# 
  2743  1E2F                     	;# 
  2744  1E30                     	;# 
  2745  1E31                     	;# 
  2746  1E32                     	;# 
  2747  1E33                     	;# 
  2748  1E34                     	;# 
  2749  1E35                     	;# 
  2750  1E36                     	;# 
  2751  1E37                     	;# 
  2752  1E8F                     	;# 
  2753  1E90                     	;# 
  2754  1E91                     	;# 
  2755  1E92                     	;# 
  2756  1E93                     	;# 
  2757  1E94                     	;# 
  2758  1E95                     	;# 
  2759  1E96                     	;# 
  2760  1E97                     	;# 
  2761  1E9C                     	;# 
  2762  1E9D                     	;# 
  2763  1E9E                     	;# 
  2764  1EA1                     	;# 
  2765  1EA2                     	;# 
  2766  1EA3                     	;# 
  2767  1EA4                     	;# 
  2768  1EA9                     	;# 
  2769  1EAA                     	;# 
  2770  1EB1                     	;# 
  2771  1EB2                     	;# 
  2772  1EB8                     	;# 
  2773  1EB9                     	;# 
  2774  1EBA                     	;# 
  2775  1EBB                     	;# 
  2776  1EBC                     	;# 
  2777  1EBD                     	;# 
  2778  1EBE                     	;# 
  2779  1EC3                     	;# 
  2780  1EC5                     	;# 
  2781  1EC6                     	;# 
  2782  1EC7                     	;# 
  2783  1EC8                     	;# 
  2784  1EC9                     	;# 
  2785  1ECA                     	;# 
  2786  1ECB                     	;# 
  2787  1ECB                     	;# 
  2788  1ECB                     	;# 
  2789  1ECC                     	;# 
  2790  1ECC                     	;# 
  2791  1ECC                     	;# 
  2792  1F10                     	;# 
  2793  1F11                     	;# 
  2794  1F12                     	;# 
  2795  1F14                     	;# 
  2796  1F15                     	;# 
  2797  1F1C                     	;# 
  2798  1F1D                     	;# 
  2799  1F1E                     	;# 
  2800  1F1F                     	;# 
  2801  1F20                     	;# 
  2802  1F21                     	;# 
  2803  1F22                     	;# 
  2804  1F23                     	;# 
  2805  1F24                     	;# 
  2806  1F25                     	;# 
  2807  1F26                     	;# 
  2808  1F27                     	;# 
  2809  1F38                     	;# 
  2810  1F39                     	;# 
  2811  1F3A                     	;# 
  2812  1F3B                     	;# 
  2813  1F3C                     	;# 
  2814  1F3D                     	;# 
  2815  1F3E                     	;# 
  2816  1F3F                     	;# 
  2817  1F43                     	;# 
  2818  1F44                     	;# 
  2819  1F45                     	;# 
  2820  1F46                     	;# 
  2821  1F47                     	;# 
  2822  1F48                     	;# 
  2823  1F49                     	;# 
  2824  1F4A                     	;# 
  2825  1F4E                     	;# 
  2826  1F4F                     	;# 
  2827  1F50                     	;# 
  2828  1F51                     	;# 
  2829  1F52                     	;# 
  2830  1F53                     	;# 
  2831  1F54                     	;# 
  2832  1F55                     	;# 
  2833  1FE4                     	;# 
  2834  1FE5                     	;# 
  2835  1FE6                     	;# 
  2836  1FE7                     	;# 
  2837  1FE8                     	;# 
  2838  1FE8                     	;# 
  2839  1FE9                     	;# 
  2840  1FEA                     	;# 
  2841  1FEB                     	;# 
  2842  1FED                     	;# 
  2843  1FEE                     	;# 
  2844  1FEF                     	;# 
  2845  0000                     	;# 
  2846  0001                     	;# 
  2847  0002                     	;# 
  2848  0003                     	;# 
  2849  0004                     	;# 
  2850  0005                     	;# 
  2851  0006                     	;# 
  2852  0007                     	;# 
  2853  0008                     	;# 
  2854  0009                     	;# 
  2855  000A                     	;# 
  2856  000B                     	;# 
  2857  000C                     	;# 
  2858  000D                     	;# 
  2859  000E                     	;# 
  2860  0012                     	;# 
  2861  0013                     	;# 
  2862  0014                     	;# 
  2863  0018                     	;# 
  2864  0019                     	;# 
  2865  001A                     	;# 
  2866  008C                     	;# 
  2867  008C                     	;# 
  2868  008D                     	;# 
  2869  008E                     	;# 
  2870  008E                     	;# 
  2871  008F                     	;# 
  2872  0090                     	;# 
  2873  0090                     	;# 
  2874  0091                     	;# 
  2875  0092                     	;# 
  2876  0092                     	;# 
  2877  0093                     	;# 
  2878  0094                     	;# 
  2879  0094                     	;# 
  2880  0095                     	;# 
  2881  0096                     	;# 
  2882  0096                     	;# 
  2883  0097                     	;# 
  2884  0098                     	;# 
  2885  0099                     	;# 
  2886  009A                     	;# 
  2887  009B                     	;# 
  2888  009B                     	;# 
  2889  009C                     	;# 
  2890  009D                     	;# 
  2891  009D                     	;# 
  2892  009E                     	;# 
  2893  009F                     	;# 
  2894  010C                     	;# 
  2895  010C                     	;# 
  2896  010D                     	;# 
  2897  010E                     	;# 
  2898  010F                     	;# 
  2899  010F                     	;# 
  2900  0110                     	;# 
  2901  0111                     	;# 
  2902  0112                     	;# 
  2903  0113                     	;# 
  2904  0114                     	;# 
  2905  0115                     	;# 
  2906  0116                     	;# 
  2907  0117                     	;# 
  2908  0118                     	;# 
  2909  0119                     	;# 
  2910  0119                     	;# 
  2911  0119                     	;# 
  2912  011A                     	;# 
  2913  011A                     	;# 
  2914  011A                     	;# 
  2915  011B                     	;# 
  2916  011B                     	;# 
  2917  011B                     	;# 
  2918  011B                     	;# 
  2919  011B                     	;# 
  2920  011C                     	;# 
  2921  011C                     	;# 
  2922  011C                     	;# 
  2923  011D                     	;# 
  2924  011D                     	;# 
  2925  011D                     	;# 
  2926  011E                     	;# 
  2927  011E                     	;# 
  2928  011E                     	;# 
  2929  011F                     	;# 
  2930  011F                     	;# 
  2931  011F                     	;# 
  2932  011F                     	;# 
  2933  011F                     	;# 
  2934  018C                     	;# 
  2935  018D                     	;# 
  2936  018E                     	;# 
  2937  018F                     	;# 
  2938  0190                     	;# 
  2939  0191                     	;# 
  2940  0192                     	;# 
  2941  0196                     	;# 
  2942  0197                     	;# 
  2943  0198                     	;# 
  2944  0199                     	;# 
  2945  019A                     	;# 
  2946  019B                     	;# 
  2947  019C                     	;# 
  2948  020C                     	;# 
  2949  020D                     	;# 
  2950  020E                     	;# 
  2951  020E                     	;# 
  2952  020F                     	;# 
  2953  020F                     	;# 
  2954  0210                     	;# 
  2955  0210                     	;# 
  2956  0211                     	;# 
  2957  0211                     	;# 
  2958  0212                     	;# 
  2959  0213                     	;# 
  2960  0214                     	;# 
  2961  0214                     	;# 
  2962  0215                     	;# 
  2963  0215                     	;# 
  2964  0216                     	;# 
  2965  0216                     	;# 
  2966  0217                     	;# 
  2967  0217                     	;# 
  2968  0218                     	;# 
  2969  0219                     	;# 
  2970  021A                     	;# 
  2971  021A                     	;# 
  2972  021B                     	;# 
  2973  021B                     	;# 
  2974  021C                     	;# 
  2975  021C                     	;# 
  2976  021D                     	;# 
  2977  021D                     	;# 
  2978  021E                     	;# 
  2979  021F                     	;# 
  2980  028C                     	;# 
  2981  028C                     	;# 
  2982  028D                     	;# 
  2983  028D                     	;# 
  2984  028E                     	;# 
  2985  028F                     	;# 
  2986  0290                     	;# 
  2987  0291                     	;# 
  2988  0292                     	;# 
  2989  0292                     	;# 
  2990  0293                     	;# 
  2991  0293                     	;# 
  2992  0294                     	;# 
  2993  0295                     	;# 
  2994  0296                     	;# 
  2995  0297                     	;# 
  2996  0298                     	;# 
  2997  0298                     	;# 
  2998  0299                     	;# 
  2999  0299                     	;# 
  3000  029A                     	;# 
  3001  029B                     	;# 
  3002  029C                     	;# 
  3003  029D                     	;# 
  3004  029F                     	;# 
  3005  030C                     	;# 
  3006  030C                     	;# 
  3007  030D                     	;# 
  3008  030E                     	;# 
  3009  030F                     	;# 
  3010  0310                     	;# 
  3011  0310                     	;# 
  3012  0311                     	;# 
  3013  0312                     	;# 
  3014  0313                     	;# 
  3015  0314                     	;# 
  3016  0314                     	;# 
  3017  0315                     	;# 
  3018  0316                     	;# 
  3019  0317                     	;# 
  3020  0318                     	;# 
  3021  0318                     	;# 
  3022  0319                     	;# 
  3023  031A                     	;# 
  3024  031B                     	;# 
  3025  038C                     	;# 
  3026  038C                     	;# 
  3027  038D                     	;# 
  3028  038E                     	;# 
  3029  0390                     	;# 
  3030  0390                     	;# 
  3031  0391                     	;# 
  3032  0392                     	;# 
  3033  048C                     	;# 
  3034  048C                     	;# 
  3035  048D                     	;# 
  3036  048E                     	;# 
  3037  048F                     	;# 
  3038  048F                     	;# 
  3039  0490                     	;# 
  3040  0491                     	;# 
  3041  0492                     	;# 
  3042  0492                     	;# 
  3043  0493                     	;# 
  3044  0494                     	;# 
  3045  0495                     	;# 
  3046  0495                     	;# 
  3047  0496                     	;# 
  3048  0497                     	;# 
  3049  0498                     	;# 
  3050  0499                     	;# 
  3051  049A                     	;# 
  3052  049B                     	;# 
  3053  049C                     	;# 
  3054  049D                     	;# 
  3055  058C                     	;# 
  3056  058C                     	;# 
  3057  058D                     	;# 
  3058  058E                     	;# 
  3059  058F                     	;# 
  3060  058F                     	;# 
  3061  0590                     	;# 
  3062  0591                     	;# 
  3063  0592                     	;# 
  3064  0593                     	;# 
  3065  059C                     	;# 
  3066  059C                     	;# 
  3067  059D                     	;# 
  3068  059D                     	;# 
  3069  059E                     	;# 
  3070  059F                     	;# 
  3071  060C                     	;# 
  3072  060C                     	;# 
  3073  060D                     	;# 
  3074  060D                     	;# 
  3075  060E                     	;# 
  3076  060F                     	;# 
  3077  0610                     	;# 
  3078  0611                     	;# 
  3079  0612                     	;# 
  3080  0613                     	;# 
  3081  0614                     	;# 
  3082  0616                     	;# 
  3083  0616                     	;# 
  3084  0617                     	;# 
  3085  0617                     	;# 
  3086  0618                     	;# 
  3087  0619                     	;# 
  3088  061A                     	;# 
  3089  061B                     	;# 
  3090  061C                     	;# 
  3091  061D                     	;# 
  3092  061E                     	;# 
  3093  070C                     	;# 
  3094  070D                     	;# 
  3095  070E                     	;# 
  3096  070F                     	;# 
  3097  0710                     	;# 
  3098  0711                     	;# 
  3099  0712                     	;# 
  3100  0713                     	;# 
  3101  0714                     	;# 
  3102  0716                     	;# 
  3103  0717                     	;# 
  3104  0718                     	;# 
  3105  0719                     	;# 
  3106  071A                     	;# 
  3107  071B                     	;# 
  3108  071C                     	;# 
  3109  071D                     	;# 
  3110  071E                     	;# 
  3111  0796                     	;# 
  3112  0797                     	;# 
  3113  0798                     	;# 
  3114  0799                     	;# 
  3115  079A                     	;# 
  3116  079B                     	;# 
  3117  079C                     	;# 
  3118  079D                     	;# 
  3119  080C                     	;# 
  3120  080D                     	;# 
  3121  080E                     	;# 
  3122  080F                     	;# 
  3123  0810                     	;# 
  3124  0811                     	;# 
  3125  0812                     	;# 
  3126  0813                     	;# 
  3127  0814                     	;# 
  3128  081A                     	;# 
  3129  081A                     	;# 
  3130  081B                     	;# 
  3131  081C                     	;# 
  3132  081C                     	;# 
  3133  081D                     	;# 
  3134  081E                     	;# 
  3135  081F                     	;# 
  3136  088C                     	;# 
  3137  088D                     	;# 
  3138  088E                     	;# 
  3139  088F                     	;# 
  3140  0890                     	;# 
  3141  0891                     	;# 
  3142  0892                     	;# 
  3143  0893                     	;# 
  3144  0895                     	;# 
  3145  0896                     	;# 
  3146  0897                     	;# 
  3147  0898                     	;# 
  3148  0899                     	;# 
  3149  089A                     	;# 
  3150  089B                     	;# 
  3151  090C                     	;# 
  3152  090E                     	;# 
  3153  090F                     	;# 
  3154  091F                     	;# 
  3155  098F                     	;# 
  3156  098F                     	;# 
  3157  0990                     	;# 
  3158  0991                     	;# 
  3159  0992                     	;# 
  3160  0993                     	;# 
  3161  0994                     	;# 
  3162  0995                     	;# 
  3163  0996                     	;# 
  3164  0997                     	;# 
  3165  1E0F                     	;# 
  3166  1E10                     	;# 
  3167  1E11                     	;# 
  3168  1E12                     	;# 
  3169  1E13                     	;# 
  3170  1E14                     	;# 
  3171  1E15                     	;# 
  3172  1E16                     	;# 
  3173  1E17                     	;# 
  3174  1E18                     	;# 
  3175  1E19                     	;# 
  3176  1E1A                     	;# 
  3177  1E1B                     	;# 
  3178  1E1C                     	;# 
  3179  1E1D                     	;# 
  3180  1E1E                     	;# 
  3181  1E1F                     	;# 
  3182  1E20                     	;# 
  3183  1E21                     	;# 
  3184  1E22                     	;# 
  3185  1E23                     	;# 
  3186  1E24                     	;# 
  3187  1E25                     	;# 
  3188  1E26                     	;# 
  3189  1E27                     	;# 
  3190  1E28                     	;# 
  3191  1E29                     	;# 
  3192  1E2A                     	;# 
  3193  1E2B                     	;# 
  3194  1E2C                     	;# 
  3195  1E2D                     	;# 
  3196  1E2E                     	;# 
  3197  1E2F                     	;# 
  3198  1E30                     	;# 
  3199  1E31                     	;# 
  3200  1E32                     	;# 
  3201  1E33                     	;# 
  3202  1E34                     	;# 
  3203  1E35                     	;# 
  3204  1E36                     	;# 
  3205  1E37                     	;# 
  3206  1E8F                     	;# 
  3207  1E90                     	;# 
  3208  1E91                     	;# 
  3209  1E92                     	;# 
  3210  1E93                     	;# 
  3211  1E94                     	;# 
  3212  1E95                     	;# 
  3213  1E96                     	;# 
  3214  1E97                     	;# 
  3215  1E9C                     	;# 
  3216  1E9D                     	;# 
  3217  1E9E                     	;# 
  3218  1EA1                     	;# 
  3219  1EA2                     	;# 
  3220  1EA3                     	;# 
  3221  1EA4                     	;# 
  3222  1EA9                     	;# 
  3223  1EAA                     	;# 
  3224  1EB1                     	;# 
  3225  1EB2                     	;# 
  3226  1EB8                     	;# 
  3227  1EB9                     	;# 
  3228  1EBA                     	;# 
  3229  1EBB                     	;# 
  3230  1EBC                     	;# 
  3231  1EBD                     	;# 
  3232  1EBE                     	;# 
  3233  1EC3                     	;# 
  3234  1EC5                     	;# 
  3235  1EC6                     	;# 
  3236  1EC7                     	;# 
  3237  1EC8                     	;# 
  3238  1EC9                     	;# 
  3239  1ECA                     	;# 
  3240  1ECB                     	;# 
  3241  1ECB                     	;# 
  3242  1ECB                     	;# 
  3243  1ECC                     	;# 
  3244  1ECC                     	;# 
  3245  1ECC                     	;# 
  3246  1F10                     	;# 
  3247  1F11                     	;# 
  3248  1F12                     	;# 
  3249  1F14                     	;# 
  3250  1F15                     	;# 
  3251  1F1C                     	;# 
  3252  1F1D                     	;# 
  3253  1F1E                     	;# 
  3254  1F1F                     	;# 
  3255  1F20                     	;# 
  3256  1F21                     	;# 
  3257  1F22                     	;# 
  3258  1F23                     	;# 
  3259  1F24                     	;# 
  3260  1F25                     	;# 
  3261  1F26                     	;# 
  3262  1F27                     	;# 
  3263  1F38                     	;# 
  3264  1F39                     	;# 
  3265  1F3A                     	;# 
  3266  1F3B                     	;# 
  3267  1F3C                     	;# 
  3268  1F3D                     	;# 
  3269  1F3E                     	;# 
  3270  1F3F                     	;# 
  3271  1F43                     	;# 
  3272  1F44                     	;# 
  3273  1F45                     	;# 
  3274  1F46                     	;# 
  3275  1F47                     	;# 
  3276  1F48                     	;# 
  3277  1F49                     	;# 
  3278  1F4A                     	;# 
  3279  1F4E                     	;# 
  3280  1F4F                     	;# 
  3281  1F50                     	;# 
  3282  1F51                     	;# 
  3283  1F52                     	;# 
  3284  1F53                     	;# 
  3285  1F54                     	;# 
  3286  1F55                     	;# 
  3287  1FE4                     	;# 
  3288  1FE5                     	;# 
  3289  1FE6                     	;# 
  3290  1FE7                     	;# 
  3291  1FE8                     	;# 
  3292  1FE8                     	;# 
  3293  1FE9                     	;# 
  3294  1FEA                     	;# 
  3295  1FEB                     	;# 
  3296  1FED                     	;# 
  3297  1FEE                     	;# 
  3298  1FEF                     	;# 
  3299  0000                     	;# 
  3300  0001                     	;# 
  3301  0002                     	;# 
  3302  0003                     	;# 
  3303  0004                     	;# 
  3304  0005                     	;# 
  3305  0006                     	;# 
  3306  0007                     	;# 
  3307  0008                     	;# 
  3308  0009                     	;# 
  3309  000A                     	;# 
  3310  000B                     	;# 
  3311  000C                     	;# 
  3312  000D                     	;# 
  3313  000E                     	;# 
  3314  0012                     	;# 
  3315  0013                     	;# 
  3316  0014                     	;# 
  3317  0018                     	;# 
  3318  0019                     	;# 
  3319  001A                     	;# 
  3320  008C                     	;# 
  3321  008C                     	;# 
  3322  008D                     	;# 
  3323  008E                     	;# 
  3324  008E                     	;# 
  3325  008F                     	;# 
  3326  0090                     	;# 
  3327  0090                     	;# 
  3328  0091                     	;# 
  3329  0092                     	;# 
  3330  0092                     	;# 
  3331  0093                     	;# 
  3332  0094                     	;# 
  3333  0094                     	;# 
  3334  0095                     	;# 
  3335  0096                     	;# 
  3336  0096                     	;# 
  3337  0097                     	;# 
  3338  0098                     	;# 
  3339  0099                     	;# 
  3340  009A                     	;# 
  3341  009B                     	;# 
  3342  009B                     	;# 
  3343  009C                     	;# 
  3344  009D                     	;# 
  3345  009D                     	;# 
  3346  009E                     	;# 
  3347  009F                     	;# 
  3348  010C                     	;# 
  3349  010C                     	;# 
  3350  010D                     	;# 
  3351  010E                     	;# 
  3352  010F                     	;# 
  3353  010F                     	;# 
  3354  0110                     	;# 
  3355  0111                     	;# 
  3356  0112                     	;# 
  3357  0113                     	;# 
  3358  0114                     	;# 
  3359  0115                     	;# 
  3360  0116                     	;# 
  3361  0117                     	;# 
  3362  0118                     	;# 
  3363  0119                     	;# 
  3364  0119                     	;# 
  3365  0119                     	;# 
  3366  011A                     	;# 
  3367  011A                     	;# 
  3368  011A                     	;# 
  3369  011B                     	;# 
  3370  011B                     	;# 
  3371  011B                     	;# 
  3372  011B                     	;# 
  3373  011B                     	;# 
  3374  011C                     	;# 
  3375  011C                     	;# 
  3376  011C                     	;# 
  3377  011D                     	;# 
  3378  011D                     	;# 
  3379  011D                     	;# 
  3380  011E                     	;# 
  3381  011E                     	;# 
  3382  011E                     	;# 
  3383  011F                     	;# 
  3384  011F                     	;# 
  3385  011F                     	;# 
  3386  011F                     	;# 
  3387  011F                     	;# 
  3388  018C                     	;# 
  3389  018D                     	;# 
  3390  018E                     	;# 
  3391  018F                     	;# 
  3392  0190                     	;# 
  3393  0191                     	;# 
  3394  0192                     	;# 
  3395  0196                     	;# 
  3396  0197                     	;# 
  3397  0198                     	;# 
  3398  0199                     	;# 
  3399  019A                     	;# 
  3400  019B                     	;# 
  3401  019C                     	;# 
  3402  020C                     	;# 
  3403  020D                     	;# 
  3404  020E                     	;# 
  3405  020E                     	;# 
  3406  020F                     	;# 
  3407  020F                     	;# 
  3408  0210                     	;# 
  3409  0210                     	;# 
  3410  0211                     	;# 
  3411  0211                     	;# 
  3412  0212                     	;# 
  3413  0213                     	;# 
  3414  0214                     	;# 
  3415  0214                     	;# 
  3416  0215                     	;# 
  3417  0215                     	;# 
  3418  0216                     	;# 
  3419  0216                     	;# 
  3420  0217                     	;# 
  3421  0217                     	;# 
  3422  0218                     	;# 
  3423  0219                     	;# 
  3424  021A                     	;# 
  3425  021A                     	;# 
  3426  021B                     	;# 
  3427  021B                     	;# 
  3428  021C                     	;# 
  3429  021C                     	;# 
  3430  021D                     	;# 
  3431  021D                     	;# 
  3432  021E                     	;# 
  3433  021F                     	;# 
  3434  028C                     	;# 
  3435  028C                     	;# 
  3436  028D                     	;# 
  3437  028D                     	;# 
  3438  028E                     	;# 
  3439  028F                     	;# 
  3440  0290                     	;# 
  3441  0291                     	;# 
  3442  0292                     	;# 
  3443  0292                     	;# 
  3444  0293                     	;# 
  3445  0293                     	;# 
  3446  0294                     	;# 
  3447  0295                     	;# 
  3448  0296                     	;# 
  3449  0297                     	;# 
  3450  0298                     	;# 
  3451  0298                     	;# 
  3452  0299                     	;# 
  3453  0299                     	;# 
  3454  029A                     	;# 
  3455  029B                     	;# 
  3456  029C                     	;# 
  3457  029D                     	;# 
  3458  029F                     	;# 
  3459  030C                     	;# 
  3460  030C                     	;# 
  3461  030D                     	;# 
  3462  030E                     	;# 
  3463  030F                     	;# 
  3464  0310                     	;# 
  3465  0310                     	;# 
  3466  0311                     	;# 
  3467  0312                     	;# 
  3468  0313                     	;# 
  3469  0314                     	;# 
  3470  0314                     	;# 
  3471  0315                     	;# 
  3472  0316                     	;# 
  3473  0317                     	;# 
  3474  0318                     	;# 
  3475  0318                     	;# 
  3476  0319                     	;# 
  3477  031A                     	;# 
  3478  031B                     	;# 
  3479  038C                     	;# 
  3480  038C                     	;# 
  3481  038D                     	;# 
  3482  038E                     	;# 
  3483  0390                     	;# 
  3484  0390                     	;# 
  3485  0391                     	;# 
  3486  0392                     	;# 
  3487  048C                     	;# 
  3488  048C                     	;# 
  3489  048D                     	;# 
  3490  048E                     	;# 
  3491  048F                     	;# 
  3492  048F                     	;# 
  3493  0490                     	;# 
  3494  0491                     	;# 
  3495  0492                     	;# 
  3496  0492                     	;# 
  3497  0493                     	;# 
  3498  0494                     	;# 
  3499  0495                     	;# 
  3500  0495                     	;# 
  3501  0496                     	;# 
  3502  0497                     	;# 
  3503  0498                     	;# 
  3504  0499                     	;# 
  3505  049A                     	;# 
  3506  049B                     	;# 
  3507  049C                     	;# 
  3508  049D                     	;# 
  3509  058C                     	;# 
  3510  058C                     	;# 
  3511  058D                     	;# 
  3512  058E                     	;# 
  3513  058F                     	;# 
  3514  058F                     	;# 
  3515  0590                     	;# 
  3516  0591                     	;# 
  3517  0592                     	;# 
  3518  0593                     	;# 
  3519  059C                     	;# 
  3520  059C                     	;# 
  3521  059D                     	;# 
  3522  059D                     	;# 
  3523  059E                     	;# 
  3524  059F                     	;# 
  3525  060C                     	;# 
  3526  060C                     	;# 
  3527  060D                     	;# 
  3528  060D                     	;# 
  3529  060E                     	;# 
  3530  060F                     	;# 
  3531  0610                     	;# 
  3532  0611                     	;# 
  3533  0612                     	;# 
  3534  0613                     	;# 
  3535  0614                     	;# 
  3536  0616                     	;# 
  3537  0616                     	;# 
  3538  0617                     	;# 
  3539  0617                     	;# 
  3540  0618                     	;# 
  3541  0619                     	;# 
  3542  061A                     	;# 
  3543  061B                     	;# 
  3544  061C                     	;# 
  3545  061D                     	;# 
  3546  061E                     	;# 
  3547  070C                     	;# 
  3548  070D                     	;# 
  3549  070E                     	;# 
  3550  070F                     	;# 
  3551  0710                     	;# 
  3552  0711                     	;# 
  3553  0712                     	;# 
  3554  0713                     	;# 
  3555  0714                     	;# 
  3556  0716                     	;# 
  3557  0717                     	;# 
  3558  0718                     	;# 
  3559  0719                     	;# 
  3560  071A                     	;# 
  3561  071B                     	;# 
  3562  071C                     	;# 
  3563  071D                     	;# 
  3564  071E                     	;# 
  3565  0796                     	;# 
  3566  0797                     	;# 
  3567  0798                     	;# 
  3568  0799                     	;# 
  3569  079A                     	;# 
  3570  079B                     	;# 
  3571  079C                     	;# 
  3572  079D                     	;# 
  3573  080C                     	;# 
  3574  080D                     	;# 
  3575  080E                     	;# 
  3576  080F                     	;# 
  3577  0810                     	;# 
  3578  0811                     	;# 
  3579  0812                     	;# 
  3580  0813                     	;# 
  3581  0814                     	;# 
  3582  081A                     	;# 
  3583  081A                     	;# 
  3584  081B                     	;# 
  3585  081C                     	;# 
  3586  081C                     	;# 
  3587  081D                     	;# 
  3588  081E                     	;# 
  3589  081F                     	;# 
  3590  088C                     	;# 
  3591  088D                     	;# 
  3592  088E                     	;# 
  3593  088F                     	;# 
  3594  0890                     	;# 
  3595  0891                     	;# 
  3596  0892                     	;# 
  3597  0893                     	;# 
  3598  0895                     	;# 
  3599  0896                     	;# 
  3600  0897                     	;# 
  3601  0898                     	;# 
  3602  0899                     	;# 
  3603  089A                     	;# 
  3604  089B                     	;# 
  3605  090C                     	;# 
  3606  090E                     	;# 
  3607  090F                     	;# 
  3608  091F                     	;# 
  3609  098F                     	;# 
  3610  098F                     	;# 
  3611  0990                     	;# 
  3612  0991                     	;# 
  3613  0992                     	;# 
  3614  0993                     	;# 
  3615  0994                     	;# 
  3616  0995                     	;# 
  3617  0996                     	;# 
  3618  0997                     	;# 
  3619  1E0F                     	;# 
  3620  1E10                     	;# 
  3621  1E11                     	;# 
  3622  1E12                     	;# 
  3623  1E13                     	;# 
  3624  1E14                     	;# 
  3625  1E15                     	;# 
  3626  1E16                     	;# 
  3627  1E17                     	;# 
  3628  1E18                     	;# 
  3629  1E19                     	;# 
  3630  1E1A                     	;# 
  3631  1E1B                     	;# 
  3632  1E1C                     	;# 
  3633  1E1D                     	;# 
  3634  1E1E                     	;# 
  3635  1E1F                     	;# 
  3636  1E20                     	;# 
  3637  1E21                     	;# 
  3638  1E22                     	;# 
  3639  1E23                     	;# 
  3640  1E24                     	;# 
  3641  1E25                     	;# 
  3642  1E26                     	;# 
  3643  1E27                     	;# 
  3644  1E28                     	;# 
  3645  1E29                     	;# 
  3646  1E2A                     	;# 
  3647  1E2B                     	;# 
  3648  1E2C                     	;# 
  3649  1E2D                     	;# 
  3650  1E2E                     	;# 
  3651  1E2F                     	;# 
  3652  1E30                     	;# 
  3653  1E31                     	;# 
  3654  1E32                     	;# 
  3655  1E33                     	;# 
  3656  1E34                     	;# 
  3657  1E35                     	;# 
  3658  1E36                     	;# 
  3659  1E37                     	;# 
  3660  1E8F                     	;# 
  3661  1E90                     	;# 
  3662  1E91                     	;# 
  3663  1E92                     	;# 
  3664  1E93                     	;# 
  3665  1E94                     	;# 
  3666  1E95                     	;# 
  3667  1E96                     	;# 
  3668  1E97                     	;# 
  3669  1E9C                     	;# 
  3670  1E9D                     	;# 
  3671  1E9E                     	;# 
  3672  1EA1                     	;# 
  3673  1EA2                     	;# 
  3674  1EA3                     	;# 
  3675  1EA4                     	;# 
  3676  1EA9                     	;# 
  3677  1EAA                     	;# 
  3678  1EB1                     	;# 
  3679  1EB2                     	;# 
  3680  1EB8                     	;# 
  3681  1EB9                     	;# 
  3682  1EBA                     	;# 
  3683  1EBB                     	;# 
  3684  1EBC                     	;# 
  3685  1EBD                     	;# 
  3686  1EBE                     	;# 
  3687  1EC3                     	;# 
  3688  1EC5                     	;# 
  3689  1EC6                     	;# 
  3690  1EC7                     	;# 
  3691  1EC8                     	;# 
  3692  1EC9                     	;# 
  3693  1ECA                     	;# 
  3694  1ECB                     	;# 
  3695  1ECB                     	;# 
  3696  1ECB                     	;# 
  3697  1ECC                     	;# 
  3698  1ECC                     	;# 
  3699  1ECC                     	;# 
  3700  1F10                     	;# 
  3701  1F11                     	;# 
  3702  1F12                     	;# 
  3703  1F14                     	;# 
  3704  1F15                     	;# 
  3705  1F1C                     	;# 
  3706  1F1D                     	;# 
  3707  1F1E                     	;# 
  3708  1F1F                     	;# 
  3709  1F20                     	;# 
  3710  1F21                     	;# 
  3711  1F22                     	;# 
  3712  1F23                     	;# 
  3713  1F24                     	;# 
  3714  1F25                     	;# 
  3715  1F26                     	;# 
  3716  1F27                     	;# 
  3717  1F38                     	;# 
  3718  1F39                     	;# 
  3719  1F3A                     	;# 
  3720  1F3B                     	;# 
  3721  1F3C                     	;# 
  3722  1F3D                     	;# 
  3723  1F3E                     	;# 
  3724  1F3F                     	;# 
  3725  1F43                     	;# 
  3726  1F44                     	;# 
  3727  1F45                     	;# 
  3728  1F46                     	;# 
  3729  1F47                     	;# 
  3730  1F48                     	;# 
  3731  1F49                     	;# 
  3732  1F4A                     	;# 
  3733  1F4E                     	;# 
  3734  1F4F                     	;# 
  3735  1F50                     	;# 
  3736  1F51                     	;# 
  3737  1F52                     	;# 
  3738  1F53                     	;# 
  3739  1F54                     	;# 
  3740  1F55                     	;# 
  3741  1FE4                     	;# 
  3742  1FE5                     	;# 
  3743  1FE6                     	;# 
  3744  1FE7                     	;# 
  3745  1FE8                     	;# 
  3746  1FE8                     	;# 
  3747  1FE9                     	;# 
  3748  1FEA                     	;# 
  3749  1FEB                     	;# 
  3750  1FED                     	;# 
  3751  1FEE                     	;# 
  3752  1FEF                     	;# 
  3753  0000                     	;# 
  3754  0001                     	;# 
  3755  0002                     	;# 
  3756  0003                     	;# 
  3757  0004                     	;# 
  3758  0005                     	;# 
  3759  0006                     	;# 
  3760  0007                     	;# 
  3761  0008                     	;# 
  3762  0009                     	;# 
  3763  000A                     	;# 
  3764  000B                     	;# 
  3765  000C                     	;# 
  3766  000D                     	;# 
  3767  000E                     	;# 
  3768  0012                     	;# 
  3769  0013                     	;# 
  3770  0014                     	;# 
  3771  0018                     	;# 
  3772  0019                     	;# 
  3773  001A                     	;# 
  3774  008C                     	;# 
  3775  008C                     	;# 
  3776  008D                     	;# 
  3777  008E                     	;# 
  3778  008E                     	;# 
  3779  008F                     	;# 
  3780  0090                     	;# 
  3781  0090                     	;# 
  3782  0091                     	;# 
  3783  0092                     	;# 
  3784  0092                     	;# 
  3785  0093                     	;# 
  3786  0094                     	;# 
  3787  0094                     	;# 
  3788  0095                     	;# 
  3789  0096                     	;# 
  3790  0096                     	;# 
  3791  0097                     	;# 
  3792  0098                     	;# 
  3793  0099                     	;# 
  3794  009A                     	;# 
  3795  009B                     	;# 
  3796  009B                     	;# 
  3797  009C                     	;# 
  3798  009D                     	;# 
  3799  009D                     	;# 
  3800  009E                     	;# 
  3801  009F                     	;# 
  3802  010C                     	;# 
  3803  010C                     	;# 
  3804  010D                     	;# 
  3805  010E                     	;# 
  3806  010F                     	;# 
  3807  010F                     	;# 
  3808  0110                     	;# 
  3809  0111                     	;# 
  3810  0112                     	;# 
  3811  0113                     	;# 
  3812  0114                     	;# 
  3813  0115                     	;# 
  3814  0116                     	;# 
  3815  0117                     	;# 
  3816  0118                     	;# 
  3817  0119                     	;# 
  3818  0119                     	;# 
  3819  0119                     	;# 
  3820  011A                     	;# 
  3821  011A                     	;# 
  3822  011A                     	;# 
  3823  011B                     	;# 
  3824  011B                     	;# 
  3825  011B                     	;# 
  3826  011B                     	;# 
  3827  011B                     	;# 
  3828  011C                     	;# 
  3829  011C                     	;# 
  3830  011C                     	;# 
  3831  011D                     	;# 
  3832  011D                     	;# 
  3833  011D                     	;# 
  3834  011E                     	;# 
  3835  011E                     	;# 
  3836  011E                     	;# 
  3837  011F                     	;# 
  3838  011F                     	;# 
  3839  011F                     	;# 
  3840  011F                     	;# 
  3841  011F                     	;# 
  3842  018C                     	;# 
  3843  018D                     	;# 
  3844  018E                     	;# 
  3845  018F                     	;# 
  3846  0190                     	;# 
  3847  0191                     	;# 
  3848  0192                     	;# 
  3849  0196                     	;# 
  3850  0197                     	;# 
  3851  0198                     	;# 
  3852  0199                     	;# 
  3853  019A                     	;# 
  3854  019B                     	;# 
  3855  019C                     	;# 
  3856  020C                     	;# 
  3857  020D                     	;# 
  3858  020E                     	;# 
  3859  020E                     	;# 
  3860  020F                     	;# 
  3861  020F                     	;# 
  3862  0210                     	;# 
  3863  0210                     	;# 
  3864  0211                     	;# 
  3865  0211                     	;# 
  3866  0212                     	;# 
  3867  0213                     	;# 
  3868  0214                     	;# 
  3869  0214                     	;# 
  3870  0215                     	;# 
  3871  0215                     	;# 
  3872  0216                     	;# 
  3873  0216                     	;# 
  3874  0217                     	;# 
  3875  0217                     	;# 
  3876  0218                     	;# 
  3877  0219                     	;# 
  3878  021A                     	;# 
  3879  021A                     	;# 
  3880  021B                     	;# 
  3881  021B                     	;# 
  3882  021C                     	;# 
  3883  021C                     	;# 
  3884  021D                     	;# 
  3885  021D                     	;# 
  3886  021E                     	;# 
  3887  021F                     	;# 
  3888  028C                     	;# 
  3889  028C                     	;# 
  3890  028D                     	;# 
  3891  028D                     	;# 
  3892  028E                     	;# 
  3893  028F                     	;# 
  3894  0290                     	;# 
  3895  0291                     	;# 
  3896  0292                     	;# 
  3897  0292                     	;# 
  3898  0293                     	;# 
  3899  0293                     	;# 
  3900  0294                     	;# 
  3901  0295                     	;# 
  3902  0296                     	;# 
  3903  0297                     	;# 
  3904  0298                     	;# 
  3905  0298                     	;# 
  3906  0299                     	;# 
  3907  0299                     	;# 
  3908  029A                     	;# 
  3909  029B                     	;# 
  3910  029C                     	;# 
  3911  029D                     	;# 
  3912  029F                     	;# 
  3913  030C                     	;# 
  3914  030C                     	;# 
  3915  030D                     	;# 
  3916  030E                     	;# 
  3917  030F                     	;# 
  3918  0310                     	;# 
  3919  0310                     	;# 
  3920  0311                     	;# 
  3921  0312                     	;# 
  3922  0313                     	;# 
  3923  0314                     	;# 
  3924  0314                     	;# 
  3925  0315                     	;# 
  3926  0316                     	;# 
  3927  0317                     	;# 
  3928  0318                     	;# 
  3929  0318                     	;# 
  3930  0319                     	;# 
  3931  031A                     	;# 
  3932  031B                     	;# 
  3933  038C                     	;# 
  3934  038C                     	;# 
  3935  038D                     	;# 
  3936  038E                     	;# 
  3937  0390                     	;# 
  3938  0390                     	;# 
  3939  0391                     	;# 
  3940  0392                     	;# 
  3941  048C                     	;# 
  3942  048C                     	;# 
  3943  048D                     	;# 
  3944  048E                     	;# 
  3945  048F                     	;# 
  3946  048F                     	;# 
  3947  0490                     	;# 
  3948  0491                     	;# 
  3949  0492                     	;# 
  3950  0492                     	;# 
  3951  0493                     	;# 
  3952  0494                     	;# 
  3953  0495                     	;# 
  3954  0495                     	;# 
  3955  0496                     	;# 
  3956  0497                     	;# 
  3957  0498                     	;# 
  3958  0499                     	;# 
  3959  049A                     	;# 
  3960  049B                     	;# 
  3961  049C                     	;# 
  3962  049D                     	;# 
  3963  058C                     	;# 
  3964  058C                     	;# 
  3965  058D                     	;# 
  3966  058E                     	;# 
  3967  058F                     	;# 
  3968  058F                     	;# 
  3969  0590                     	;# 
  3970  0591                     	;# 
  3971  0592                     	;# 
  3972  0593                     	;# 
  3973  059C                     	;# 
  3974  059C                     	;# 
  3975  059D                     	;# 
  3976  059D                     	;# 
  3977  059E                     	;# 
  3978  059F                     	;# 
  3979  060C                     	;# 
  3980  060C                     	;# 
  3981  060D                     	;# 
  3982  060D                     	;# 
  3983  060E                     	;# 
  3984  060F                     	;# 
  3985  0610                     	;# 
  3986  0611                     	;# 
  3987  0612                     	;# 
  3988  0613                     	;# 
  3989  0614                     	;# 
  3990  0616                     	;# 
  3991  0616                     	;# 
  3992  0617                     	;# 
  3993  0617                     	;# 
  3994  0618                     	;# 
  3995  0619                     	;# 
  3996  061A                     	;# 
  3997  061B                     	;# 
  3998  061C                     	;# 
  3999  061D                     	;# 
  4000  061E                     	;# 
  4001  070C                     	;# 
  4002  070D                     	;# 
  4003  070E                     	;# 
  4004  070F                     	;# 
  4005  0710                     	;# 
  4006  0711                     	;# 
  4007  0712                     	;# 
  4008  0713                     	;# 
  4009  0714                     	;# 
  4010  0716                     	;# 
  4011  0717                     	;# 
  4012  0718                     	;# 
  4013  0719                     	;# 
  4014  071A                     	;# 
  4015  071B                     	;# 
  4016  071C                     	;# 
  4017  071D                     	;# 
  4018  071E                     	;# 
  4019  0796                     	;# 
  4020  0797                     	;# 
  4021  0798                     	;# 
  4022  0799                     	;# 
  4023  079A                     	;# 
  4024  079B                     	;# 
  4025  079C                     	;# 
  4026  079D                     	;# 
  4027  080C                     	;# 
  4028  080D                     	;# 
  4029  080E                     	;# 
  4030  080F                     	;# 
  4031  0810                     	;# 
  4032  0811                     	;# 
  4033  0812                     	;# 
  4034  0813                     	;# 
  4035  0814                     	;# 
  4036  081A                     	;# 
  4037  081A                     	;# 
  4038  081B                     	;# 
  4039  081C                     	;# 
  4040  081C                     	;# 
  4041  081D                     	;# 
  4042  081E                     	;# 
  4043  081F                     	;# 
  4044  088C                     	;# 
  4045  088D                     	;# 
  4046  088E                     	;# 
  4047  088F                     	;# 
  4048  0890                     	;# 
  4049  0891                     	;# 
  4050  0892                     	;# 
  4051  0893                     	;# 
  4052  0895                     	;# 
  4053  0896                     	;# 
  4054  0897                     	;# 
  4055  0898                     	;# 
  4056  0899                     	;# 
  4057  089A                     	;# 
  4058  089B                     	;# 
  4059  090C                     	;# 
  4060  090E                     	;# 
  4061  090F                     	;# 
  4062  091F                     	;# 
  4063  098F                     	;# 
  4064  098F                     	;# 
  4065  0990                     	;# 
  4066  0991                     	;# 
  4067  0992                     	;# 
  4068  0993                     	;# 
  4069  0994                     	;# 
  4070  0995                     	;# 
  4071  0996                     	;# 
  4072  0997                     	;# 
  4073  1E0F                     	;# 
  4074  1E10                     	;# 
  4075  1E11                     	;# 
  4076  1E12                     	;# 
  4077  1E13                     	;# 
  4078  1E14                     	;# 
  4079  1E15                     	;# 
  4080  1E16                     	;# 
  4081  1E17                     	;# 
  4082  1E18                     	;# 
  4083  1E19                     	;# 
  4084  1E1A                     	;# 
  4085  1E1B                     	;# 
  4086  1E1C                     	;# 
  4087  1E1D                     	;# 
  4088  1E1E                     	;# 
  4089  1E1F                     	;# 
  4090  1E20                     	;# 
  4091  1E21                     	;# 
  4092  1E22                     	;# 
  4093  1E23                     	;# 
  4094  1E24                     	;# 
  4095  1E25                     	;# 
  4096  1E26                     	;# 
  4097  1E27                     	;# 
  4098  1E28                     	;# 
  4099  1E29                     	;# 
  4100  1E2A                     	;# 
  4101  1E2B                     	;# 
  4102  1E2C                     	;# 
  4103  1E2D                     	;# 
  4104  1E2E                     	;# 
  4105  1E2F                     	;# 
  4106  1E30                     	;# 
  4107  1E31                     	;# 
  4108  1E32                     	;# 
  4109  1E33                     	;# 
  4110  1E34                     	;# 
  4111  1E35                     	;# 
  4112  1E36                     	;# 
  4113  1E37                     	;# 
  4114  1E8F                     	;# 
  4115  1E90                     	;# 
  4116  1E91                     	;# 
  4117  1E92                     	;# 
  4118  1E93                     	;# 
  4119  1E94                     	;# 
  4120  1E95                     	;# 
  4121  1E96                     	;# 
  4122  1E97                     	;# 
  4123  1E9C                     	;# 
  4124  1E9D                     	;# 
  4125  1E9E                     	;# 
  4126  1EA1                     	;# 
  4127  1EA2                     	;# 
  4128  1EA3                     	;# 
  4129  1EA4                     	;# 
  4130  1EA9                     	;# 
  4131  1EAA                     	;# 
  4132  1EB1                     	;# 
  4133  1EB2                     	;# 
  4134  1EB8                     	;# 
  4135  1EB9                     	;# 
  4136  1EBA                     	;# 
  4137  1EBB                     	;# 
  4138  1EBC                     	;# 
  4139  1EBD                     	;# 
  4140  1EBE                     	;# 
  4141  1EC3                     	;# 
  4142  1EC5                     	;# 
  4143  1EC6                     	;# 
  4144  1EC7                     	;# 
  4145  1EC8                     	;# 
  4146  1EC9                     	;# 
  4147  1ECA                     	;# 
  4148  1ECB                     	;# 
  4149  1ECB                     	;# 
  4150  1ECB                     	;# 
  4151  1ECC                     	;# 
  4152  1ECC                     	;# 
  4153  1ECC                     	;# 
  4154  1F10                     	;# 
  4155  1F11                     	;# 
  4156  1F12                     	;# 
  4157  1F14                     	;# 
  4158  1F15                     	;# 
  4159  1F1C                     	;# 
  4160  1F1D                     	;# 
  4161  1F1E                     	;# 
  4162  1F1F                     	;# 
  4163  1F20                     	;# 
  4164  1F21                     	;# 
  4165  1F22                     	;# 
  4166  1F23                     	;# 
  4167  1F24                     	;# 
  4168  1F25                     	;# 
  4169  1F26                     	;# 
  4170  1F27                     	;# 
  4171  1F38                     	;# 
  4172  1F39                     	;# 
  4173  1F3A                     	;# 
  4174  1F3B                     	;# 
  4175  1F3C                     	;# 
  4176  1F3D                     	;# 
  4177  1F3E                     	;# 
  4178  1F3F                     	;# 
  4179  1F43                     	;# 
  4180  1F44                     	;# 
  4181  1F45                     	;# 
  4182  1F46                     	;# 
  4183  1F47                     	;# 
  4184  1F48                     	;# 
  4185  1F49                     	;# 
  4186  1F4A                     	;# 
  4187  1F4E                     	;# 
  4188  1F4F                     	;# 
  4189  1F50                     	;# 
  4190  1F51                     	;# 
  4191  1F52                     	;# 
  4192  1F53                     	;# 
  4193  1F54                     	;# 
  4194  1F55                     	;# 
  4195  1FE4                     	;# 
  4196  1FE5                     	;# 
  4197  1FE6                     	;# 
  4198  1FE7                     	;# 
  4199  1FE8                     	;# 
  4200  1FE8                     	;# 
  4201  1FE9                     	;# 
  4202  1FEA                     	;# 
  4203  1FEB                     	;# 
  4204  1FED                     	;# 
  4205  1FEE                     	;# 
  4206  1FEF                     	;# 
  4207  0000                     	;# 
  4208  0001                     	;# 
  4209  0002                     	;# 
  4210  0003                     	;# 
  4211  0004                     	;# 
  4212  0005                     	;# 
  4213  0006                     	;# 
  4214  0007                     	;# 
  4215  0008                     	;# 
  4216  0009                     	;# 
  4217  000A                     	;# 
  4218  000B                     	;# 
  4219  000C                     	;# 
  4220  000D                     	;# 
  4221  000E                     	;# 
  4222  0012                     	;# 
  4223  0013                     	;# 
  4224  0014                     	;# 
  4225  0018                     	;# 
  4226  0019                     	;# 
  4227  001A                     	;# 
  4228  008C                     	;# 
  4229  008C                     	;# 
  4230  008D                     	;# 
  4231  008E                     	;# 
  4232  008E                     	;# 
  4233  008F                     	;# 
  4234  0090                     	;# 
  4235  0090                     	;# 
  4236  0091                     	;# 
  4237  0092                     	;# 
  4238  0092                     	;# 
  4239  0093                     	;# 
  4240  0094                     	;# 
  4241  0094                     	;# 
  4242  0095                     	;# 
  4243  0096                     	;# 
  4244  0096                     	;# 
  4245  0097                     	;# 
  4246  0098                     	;# 
  4247  0099                     	;# 
  4248  009A                     	;# 
  4249  009B                     	;# 
  4250  009B                     	;# 
  4251  009C                     	;# 
  4252  009D                     	;# 
  4253  009D                     	;# 
  4254  009E                     	;# 
  4255  009F                     	;# 
  4256  010C                     	;# 
  4257  010C                     	;# 
  4258  010D                     	;# 
  4259  010E                     	;# 
  4260  010F                     	;# 
  4261  010F                     	;# 
  4262  0110                     	;# 
  4263  0111                     	;# 
  4264  0112                     	;# 
  4265  0113                     	;# 
  4266  0114                     	;# 
  4267  0115                     	;# 
  4268  0116                     	;# 
  4269  0117                     	;# 
  4270  0118                     	;# 
  4271  0119                     	;# 
  4272  0119                     	;# 
  4273  0119                     	;# 
  4274  011A                     	;# 
  4275  011A                     	;# 
  4276  011A                     	;# 
  4277  011B                     	;# 
  4278  011B                     	;# 
  4279  011B                     	;# 
  4280  011B                     	;# 
  4281  011B                     	;# 
  4282  011C                     	;# 
  4283  011C                     	;# 
  4284  011C                     	;# 
  4285  011D                     	;# 
  4286  011D                     	;# 
  4287  011D                     	;# 
  4288  011E                     	;# 
  4289  011E                     	;# 
  4290  011E                     	;# 
  4291  011F                     	;# 
  4292  011F                     	;# 
  4293  011F                     	;# 
  4294  011F                     	;# 
  4295  011F                     	;# 
  4296  018C                     	;# 
  4297  018D                     	;# 
  4298  018E                     	;# 
  4299  018F                     	;# 
  4300  0190                     	;# 
  4301  0191                     	;# 
  4302  0192                     	;# 
  4303  0196                     	;# 
  4304  0197                     	;# 
  4305  0198                     	;# 
  4306  0199                     	;# 
  4307  019A                     	;# 
  4308  019B                     	;# 
  4309  019C                     	;# 
  4310  020C                     	;# 
  4311  020D                     	;# 
  4312  020E                     	;# 
  4313  020E                     	;# 
  4314  020F                     	;# 
  4315  020F                     	;# 
  4316  0210                     	;# 
  4317  0210                     	;# 
  4318  0211                     	;# 
  4319  0211                     	;# 
  4320  0212                     	;# 
  4321  0213                     	;# 
  4322  0214                     	;# 
  4323  0214                     	;# 
  4324  0215                     	;# 
  4325  0215                     	;# 
  4326  0216                     	;# 
  4327  0216                     	;# 
  4328  0217                     	;# 
  4329  0217                     	;# 
  4330  0218                     	;# 
  4331  0219                     	;# 
  4332  021A                     	;# 
  4333  021A                     	;# 
  4334  021B                     	;# 
  4335  021B                     	;# 
  4336  021C                     	;# 
  4337  021C                     	;# 
  4338  021D                     	;# 
  4339  021D                     	;# 
  4340  021E                     	;# 
  4341  021F                     	;# 
  4342  028C                     	;# 
  4343  028C                     	;# 
  4344  028D                     	;# 
  4345  028D                     	;# 
  4346  028E                     	;# 
  4347  028F                     	;# 
  4348  0290                     	;# 
  4349  0291                     	;# 
  4350  0292                     	;# 
  4351  0292                     	;# 
  4352  0293                     	;# 
  4353  0293                     	;# 
  4354  0294                     	;# 
  4355  0295                     	;# 
  4356  0296                     	;# 
  4357  0297                     	;# 
  4358  0298                     	;# 
  4359  0298                     	;# 
  4360  0299                     	;# 
  4361  0299                     	;# 
  4362  029A                     	;# 
  4363  029B                     	;# 
  4364  029C                     	;# 
  4365  029D                     	;# 
  4366  029F                     	;# 
  4367  030C                     	;# 
  4368  030C                     	;# 
  4369  030D                     	;# 
  4370  030E                     	;# 
  4371  030F                     	;# 
  4372  0310                     	;# 
  4373  0310                     	;# 
  4374  0311                     	;# 
  4375  0312                     	;# 
  4376  0313                     	;# 
  4377  0314                     	;# 
  4378  0314                     	;# 
  4379  0315                     	;# 
  4380  0316                     	;# 
  4381  0317                     	;# 
  4382  0318                     	;# 
  4383  0318                     	;# 
  4384  0319                     	;# 
  4385  031A                     	;# 
  4386  031B                     	;# 
  4387  038C                     	;# 
  4388  038C                     	;# 
  4389  038D                     	;# 
  4390  038E                     	;# 
  4391  0390                     	;# 
  4392  0390                     	;# 
  4393  0391                     	;# 
  4394  0392                     	;# 
  4395  048C                     	;# 
  4396  048C                     	;# 
  4397  048D                     	;# 
  4398  048E                     	;# 
  4399  048F                     	;# 
  4400  048F                     	;# 
  4401  0490                     	;# 
  4402  0491                     	;# 
  4403  0492                     	;# 
  4404  0492                     	;# 
  4405  0493                     	;# 
  4406  0494                     	;# 
  4407  0495                     	;# 
  4408  0495                     	;# 
  4409  0496                     	;# 
  4410  0497                     	;# 
  4411  0498                     	;# 
  4412  0499                     	;# 
  4413  049A                     	;# 
  4414  049B                     	;# 
  4415  049C                     	;# 
  4416  049D                     	;# 
  4417  058C                     	;# 
  4418  058C                     	;# 
  4419  058D                     	;# 
  4420  058E                     	;# 
  4421  058F                     	;# 
  4422  058F                     	;# 
  4423  0590                     	;# 
  4424  0591                     	;# 
  4425  0592                     	;# 
  4426  0593                     	;# 
  4427  059C                     	;# 
  4428  059C                     	;# 
  4429  059D                     	;# 
  4430  059D                     	;# 
  4431  059E                     	;# 
  4432  059F                     	;# 
  4433  060C                     	;# 
  4434  060C                     	;# 
  4435  060D                     	;# 
  4436  060D                     	;# 
  4437  060E                     	;# 
  4438  060F                     	;# 
  4439  0610                     	;# 
  4440  0611                     	;# 
  4441  0612                     	;# 
  4442  0613                     	;# 
  4443  0614                     	;# 
  4444  0616                     	;# 
  4445  0616                     	;# 
  4446  0617                     	;# 
  4447  0617                     	;# 
  4448  0618                     	;# 
  4449  0619                     	;# 
  4450  061A                     	;# 
  4451  061B                     	;# 
  4452  061C                     	;# 
  4453  061D                     	;# 
  4454  061E                     	;# 
  4455  070C                     	;# 
  4456  070D                     	;# 
  4457  070E                     	;# 
  4458  070F                     	;# 
  4459  0710                     	;# 
  4460  0711                     	;# 
  4461  0712                     	;# 
  4462  0713                     	;# 
  4463  0714                     	;# 
  4464  0716                     	;# 
  4465  0717                     	;# 
  4466  0718                     	;# 
  4467  0719                     	;# 
  4468  071A                     	;# 
  4469  071B                     	;# 
  4470  071C                     	;# 
  4471  071D                     	;# 
  4472  071E                     	;# 
  4473  0796                     	;# 
  4474  0797                     	;# 
  4475  0798                     	;# 
  4476  0799                     	;# 
  4477  079A                     	;# 
  4478  079B                     	;# 
  4479  079C                     	;# 
  4480  079D                     	;# 
  4481  080C                     	;# 
  4482  080D                     	;# 
  4483  080E                     	;# 
  4484  080F                     	;# 
  4485  0810                     	;# 
  4486  0811                     	;# 
  4487  0812                     	;# 
  4488  0813                     	;# 
  4489  0814                     	;# 
  4490  081A                     	;# 
  4491  081A                     	;# 
  4492  081B                     	;# 
  4493  081C                     	;# 
  4494  081C                     	;# 
  4495  081D                     	;# 
  4496  081E                     	;# 
  4497  081F                     	;# 
  4498  088C                     	;# 
  4499  088D                     	;# 
  4500  088E                     	;# 
  4501  088F                     	;# 
  4502  0890                     	;# 
  4503  0891                     	;# 
  4504  0892                     	;# 
  4505  0893                     	;# 
  4506  0895                     	;# 
  4507  0896                     	;# 
  4508  0897                     	;# 
  4509  0898                     	;# 
  4510  0899                     	;# 
  4511  089A                     	;# 
  4512  089B                     	;# 
  4513  090C                     	;# 
  4514  090E                     	;# 
  4515  090F                     	;# 
  4516  091F                     	;# 
  4517  098F                     	;# 
  4518  098F                     	;# 
  4519  0990                     	;# 
  4520  0991                     	;# 
  4521  0992                     	;# 
  4522  0993                     	;# 
  4523  0994                     	;# 
  4524  0995                     	;# 
  4525  0996                     	;# 
  4526  0997                     	;# 
  4527  1E0F                     	;# 
  4528  1E10                     	;# 
  4529  1E11                     	;# 
  4530  1E12                     	;# 
  4531  1E13                     	;# 
  4532  1E14                     	;# 
  4533  1E15                     	;# 
  4534  1E16                     	;# 
  4535  1E17                     	;# 
  4536  1E18                     	;# 
  4537  1E19                     	;# 
  4538  1E1A                     	;# 
  4539  1E1B                     	;# 
  4540  1E1C                     	;# 
  4541  1E1D                     	;# 
  4542  1E1E                     	;# 
  4543  1E1F                     	;# 
  4544  1E20                     	;# 
  4545  1E21                     	;# 
  4546  1E22                     	;# 
  4547  1E23                     	;# 
  4548  1E24                     	;# 
  4549  1E25                     	;# 
  4550  1E26                     	;# 
  4551  1E27                     	;# 
  4552  1E28                     	;# 
  4553  1E29                     	;# 
  4554  1E2A                     	;# 
  4555  1E2B                     	;# 
  4556  1E2C                     	;# 
  4557  1E2D                     	;# 
  4558  1E2E                     	;# 
  4559  1E2F                     	;# 
  4560  1E30                     	;# 
  4561  1E31                     	;# 
  4562  1E32                     	;# 
  4563  1E33                     	;# 
  4564  1E34                     	;# 
  4565  1E35                     	;# 
  4566  1E36                     	;# 
  4567  1E37                     	;# 
  4568  1E8F                     	;# 
  4569  1E90                     	;# 
  4570  1E91                     	;# 
  4571  1E92                     	;# 
  4572  1E93                     	;# 
  4573  1E94                     	;# 
  4574  1E95                     	;# 
  4575  1E96                     	;# 
  4576  1E97                     	;# 
  4577  1E9C                     	;# 
  4578  1E9D                     	;# 
  4579  1E9E                     	;# 
  4580  1EA1                     	;# 
  4581  1EA2                     	;# 
  4582  1EA3                     	;# 
  4583  1EA4                     	;# 
  4584  1EA9                     	;# 
  4585  1EAA                     	;# 
  4586  1EB1                     	;# 
  4587  1EB2                     	;# 
  4588  1EB8                     	;# 
  4589  1EB9                     	;# 
  4590  1EBA                     	;# 
  4591  1EBB                     	;# 
  4592  1EBC                     	;# 
  4593  1EBD                     	;# 
  4594  1EBE                     	;# 
  4595  1EC3                     	;# 
  4596  1EC5                     	;# 
  4597  1EC6                     	;# 
  4598  1EC7                     	;# 
  4599  1EC8                     	;# 
  4600  1EC9                     	;# 
  4601  1ECA                     	;# 
  4602  1ECB                     	;# 
  4603  1ECB                     	;# 
  4604  1ECB                     	;# 
  4605  1ECC                     	;# 
  4606  1ECC                     	;# 
  4607  1ECC                     	;# 
  4608  1F10                     	;# 
  4609  1F11                     	;# 
  4610  1F12                     	;# 
  4611  1F14                     	;# 
  4612  1F15                     	;# 
  4613  1F1C                     	;# 
  4614  1F1D                     	;# 
  4615  1F1E                     	;# 
  4616  1F1F                     	;# 
  4617  1F20                     	;# 
  4618  1F21                     	;# 
  4619  1F22                     	;# 
  4620  1F23                     	;# 
  4621  1F24                     	;# 
  4622  1F25                     	;# 
  4623  1F26                     	;# 
  4624  1F27                     	;# 
  4625  1F38                     	;# 
  4626  1F39                     	;# 
  4627  1F3A                     	;# 
  4628  1F3B                     	;# 
  4629  1F3C                     	;# 
  4630  1F3D                     	;# 
  4631  1F3E                     	;# 
  4632  1F3F                     	;# 
  4633  1F43                     	;# 
  4634  1F44                     	;# 
  4635  1F45                     	;# 
  4636  1F46                     	;# 
  4637  1F47                     	;# 
  4638  1F48                     	;# 
  4639  1F49                     	;# 
  4640  1F4A                     	;# 
  4641  1F4E                     	;# 
  4642  1F4F                     	;# 
  4643  1F50                     	;# 
  4644  1F51                     	;# 
  4645  1F52                     	;# 
  4646  1F53                     	;# 
  4647  1F54                     	;# 
  4648  1F55                     	;# 
  4649  1FE4                     	;# 
  4650  1FE5                     	;# 
  4651  1FE6                     	;# 
  4652  1FE7                     	;# 
  4653  1FE8                     	;# 
  4654  1FE8                     	;# 
  4655  1FE9                     	;# 
  4656  1FEA                     	;# 
  4657  1FEB                     	;# 
  4658  1FED                     	;# 
  4659  1FEE                     	;# 
  4660  1FEF                     	;# 
  4661  0000                     	;# 
  4662  0001                     	;# 
  4663  0002                     	;# 
  4664  0003                     	;# 
  4665  0004                     	;# 
  4666  0005                     	;# 
  4667  0006                     	;# 
  4668  0007                     	;# 
  4669  0008                     	;# 
  4670  0009                     	;# 
  4671  000A                     	;# 
  4672  000B                     	;# 
  4673  000C                     	;# 
  4674  000D                     	;# 
  4675  000E                     	;# 
  4676  0012                     	;# 
  4677  0013                     	;# 
  4678  0014                     	;# 
  4679  0018                     	;# 
  4680  0019                     	;# 
  4681  001A                     	;# 
  4682  008C                     	;# 
  4683  008C                     	;# 
  4684  008D                     	;# 
  4685  008E                     	;# 
  4686  008E                     	;# 
  4687  008F                     	;# 
  4688  0090                     	;# 
  4689  0090                     	;# 
  4690  0091                     	;# 
  4691  0092                     	;# 
  4692  0092                     	;# 
  4693  0093                     	;# 
  4694  0094                     	;# 
  4695  0094                     	;# 
  4696  0095                     	;# 
  4697  0096                     	;# 
  4698  0096                     	;# 
  4699  0097                     	;# 
  4700  0098                     	;# 
  4701  0099                     	;# 
  4702  009A                     	;# 
  4703  009B                     	;# 
  4704  009B                     	;# 
  4705  009C                     	;# 
  4706  009D                     	;# 
  4707  009D                     	;# 
  4708  009E                     	;# 
  4709  009F                     	;# 
  4710  010C                     	;# 
  4711  010C                     	;# 
  4712  010D                     	;# 
  4713  010E                     	;# 
  4714  010F                     	;# 
  4715  010F                     	;# 
  4716  0110                     	;# 
  4717  0111                     	;# 
  4718  0112                     	;# 
  4719  0113                     	;# 
  4720  0114                     	;# 
  4721  0115                     	;# 
  4722  0116                     	;# 
  4723  0117                     	;# 
  4724  0118                     	;# 
  4725  0119                     	;# 
  4726  0119                     	;# 
  4727  0119                     	;# 
  4728  011A                     	;# 
  4729  011A                     	;# 
  4730  011A                     	;# 
  4731  011B                     	;# 
  4732  011B                     	;# 
  4733  011B                     	;# 
  4734  011B                     	;# 
  4735  011B                     	;# 
  4736  011C                     	;# 
  4737  011C                     	;# 
  4738  011C                     	;# 
  4739  011D                     	;# 
  4740  011D                     	;# 
  4741  011D                     	;# 
  4742  011E                     	;# 
  4743  011E                     	;# 
  4744  011E                     	;# 
  4745  011F                     	;# 
  4746  011F                     	;# 
  4747  011F                     	;# 
  4748  011F                     	;# 
  4749  011F                     	;# 
  4750  018C                     	;# 
  4751  018D                     	;# 
  4752  018E                     	;# 
  4753  018F                     	;# 
  4754  0190                     	;# 
  4755  0191                     	;# 
  4756  0192                     	;# 
  4757  0196                     	;# 
  4758  0197                     	;# 
  4759  0198                     	;# 
  4760  0199                     	;# 
  4761  019A                     	;# 
  4762  019B                     	;# 
  4763  019C                     	;# 
  4764  020C                     	;# 
  4765  020D                     	;# 
  4766  020E                     	;# 
  4767  020E                     	;# 
  4768  020F                     	;# 
  4769  020F                     	;# 
  4770  0210                     	;# 
  4771  0210                     	;# 
  4772  0211                     	;# 
  4773  0211                     	;# 
  4774  0212                     	;# 
  4775  0213                     	;# 
  4776  0214                     	;# 
  4777  0214                     	;# 
  4778  0215                     	;# 
  4779  0215                     	;# 
  4780  0216                     	;# 
  4781  0216                     	;# 
  4782  0217                     	;# 
  4783  0217                     	;# 
  4784  0218                     	;# 
  4785  0219                     	;# 
  4786  021A                     	;# 
  4787  021A                     	;# 
  4788  021B                     	;# 
  4789  021B                     	;# 
  4790  021C                     	;# 
  4791  021C                     	;# 
  4792  021D                     	;# 
  4793  021D                     	;# 
  4794  021E                     	;# 
  4795  021F                     	;# 
  4796  028C                     	;# 
  4797  028C                     	;# 
  4798  028D                     	;# 
  4799  028D                     	;# 
  4800  028E                     	;# 
  4801  028F                     	;# 
  4802  0290                     	;# 
  4803  0291                     	;# 
  4804  0292                     	;# 
  4805  0292                     	;# 
  4806  0293                     	;# 
  4807  0293                     	;# 
  4808  0294                     	;# 
  4809  0295                     	;# 
  4810  0296                     	;# 
  4811  0297                     	;# 
  4812  0298                     	;# 
  4813  0298                     	;# 
  4814  0299                     	;# 
  4815  0299                     	;# 
  4816  029A                     	;# 
  4817  029B                     	;# 
  4818  029C                     	;# 
  4819  029D                     	;# 
  4820  029F                     	;# 
  4821  030C                     	;# 
  4822  030C                     	;# 
  4823  030D                     	;# 
  4824  030E                     	;# 
  4825  030F                     	;# 
  4826  0310                     	;# 
  4827  0310                     	;# 
  4828  0311                     	;# 
  4829  0312                     	;# 
  4830  0313                     	;# 
  4831  0314                     	;# 
  4832  0314                     	;# 
  4833  0315                     	;# 
  4834  0316                     	;# 
  4835  0317                     	;# 
  4836  0318                     	;# 
  4837  0318                     	;# 
  4838  0319                     	;# 
  4839  031A                     	;# 
  4840  031B                     	;# 
  4841  038C                     	;# 
  4842  038C                     	;# 
  4843  038D                     	;# 
  4844  038E                     	;# 
  4845  0390                     	;# 
  4846  0390                     	;# 
  4847  0391                     	;# 
  4848  0392                     	;# 
  4849  048C                     	;# 
  4850  048C                     	;# 
  4851  048D                     	;# 
  4852  048E                     	;# 
  4853  048F                     	;# 
  4854  048F                     	;# 
  4855  0490                     	;# 
  4856  0491                     	;# 
  4857  0492                     	;# 
  4858  0492                     	;# 
  4859  0493                     	;# 
  4860  0494                     	;# 
  4861  0495                     	;# 
  4862  0495                     	;# 
  4863  0496                     	;# 
  4864  0497                     	;# 
  4865  0498                     	;# 
  4866  0499                     	;# 
  4867  049A                     	;# 
  4868  049B                     	;# 
  4869  049C                     	;# 
  4870  049D                     	;# 
  4871  058C                     	;# 
  4872  058C                     	;# 
  4873  058D                     	;# 
  4874  058E                     	;# 
  4875  058F                     	;# 
  4876  058F                     	;# 
  4877  0590                     	;# 
  4878  0591                     	;# 
  4879  0592                     	;# 
  4880  0593                     	;# 
  4881  059C                     	;# 
  4882  059C                     	;# 
  4883  059D                     	;# 
  4884  059D                     	;# 
  4885  059E                     	;# 
  4886  059F                     	;# 
  4887  060C                     	;# 
  4888  060C                     	;# 
  4889  060D                     	;# 
  4890  060D                     	;# 
  4891  060E                     	;# 
  4892  060F                     	;# 
  4893  0610                     	;# 
  4894  0611                     	;# 
  4895  0612                     	;# 
  4896  0613                     	;# 
  4897  0614                     	;# 
  4898  0616                     	;# 
  4899  0616                     	;# 
  4900  0617                     	;# 
  4901  0617                     	;# 
  4902  0618                     	;# 
  4903  0619                     	;# 
  4904  061A                     	;# 
  4905  061B                     	;# 
  4906  061C                     	;# 
  4907  061D                     	;# 
  4908  061E                     	;# 
  4909  070C                     	;# 
  4910  070D                     	;# 
  4911  070E                     	;# 
  4912  070F                     	;# 
  4913  0710                     	;# 
  4914  0711                     	;# 
  4915  0712                     	;# 
  4916  0713                     	;# 
  4917  0714                     	;# 
  4918  0716                     	;# 
  4919  0717                     	;# 
  4920  0718                     	;# 
  4921  0719                     	;# 
  4922  071A                     	;# 
  4923  071B                     	;# 
  4924  071C                     	;# 
  4925  071D                     	;# 
  4926  071E                     	;# 
  4927  0796                     	;# 
  4928  0797                     	;# 
  4929  0798                     	;# 
  4930  0799                     	;# 
  4931  079A                     	;# 
  4932  079B                     	;# 
  4933  079C                     	;# 
  4934  079D                     	;# 
  4935  080C                     	;# 
  4936  080D                     	;# 
  4937  080E                     	;# 
  4938  080F                     	;# 
  4939  0810                     	;# 
  4940  0811                     	;# 
  4941  0812                     	;# 
  4942  0813                     	;# 
  4943  0814                     	;# 
  4944  081A                     	;# 
  4945  081A                     	;# 
  4946  081B                     	;# 
  4947  081C                     	;# 
  4948  081C                     	;# 
  4949  081D                     	;# 
  4950  081E                     	;# 
  4951  081F                     	;# 
  4952  088C                     	;# 
  4953  088D                     	;# 
  4954  088E                     	;# 
  4955  088F                     	;# 
  4956  0890                     	;# 
  4957  0891                     	;# 
  4958  0892                     	;# 
  4959  0893                     	;# 
  4960  0895                     	;# 
  4961  0896                     	;# 
  4962  0897                     	;# 
  4963  0898                     	;# 
  4964  0899                     	;# 
  4965  089A                     	;# 
  4966  089B                     	;# 
  4967  090C                     	;# 
  4968  090E                     	;# 
  4969  090F                     	;# 
  4970  091F                     	;# 
  4971  098F                     	;# 
  4972  098F                     	;# 
  4973  0990                     	;# 
  4974  0991                     	;# 
  4975  0992                     	;# 
  4976  0993                     	;# 
  4977  0994                     	;# 
  4978  0995                     	;# 
  4979  0996                     	;# 
  4980  0997                     	;# 
  4981  1E0F                     	;# 
  4982  1E10                     	;# 
  4983  1E11                     	;# 
  4984  1E12                     	;# 
  4985  1E13                     	;# 
  4986  1E14                     	;# 
  4987  1E15                     	;# 
  4988  1E16                     	;# 
  4989  1E17                     	;# 
  4990  1E18                     	;# 
  4991  1E19                     	;# 
  4992  1E1A                     	;# 
  4993  1E1B                     	;# 
  4994  1E1C                     	;# 
  4995  1E1D                     	;# 
  4996  1E1E                     	;# 
  4997  1E1F                     	;# 
  4998  1E20                     	;# 
  4999  1E21                     	;# 
  5000  1E22                     	;# 
  5001  1E23                     	;# 
  5002  1E24                     	;# 
  5003  1E25                     	;# 
  5004  1E26                     	;# 
  5005  1E27                     	;# 
  5006  1E28                     	;# 
  5007  1E29                     	;# 
  5008  1E2A                     	;# 
  5009  1E2B                     	;# 
  5010  1E2C                     	;# 
  5011  1E2D                     	;# 
  5012  1E2E                     	;# 
  5013  1E2F                     	;# 
  5014  1E30                     	;# 
  5015  1E31                     	;# 
  5016  1E32                     	;# 
  5017  1E33                     	;# 
  5018  1E34                     	;# 
  5019  1E35                     	;# 
  5020  1E36                     	;# 
  5021  1E37                     	;# 
  5022  1E8F                     	;# 
  5023  1E90                     	;# 
  5024  1E91                     	;# 
  5025  1E92                     	;# 
  5026  1E93                     	;# 
  5027  1E94                     	;# 
  5028  1E95                     	;# 
  5029  1E96                     	;# 
  5030  1E97                     	;# 
  5031  1E9C                     	;# 
  5032  1E9D                     	;# 
  5033  1E9E                     	;# 
  5034  1EA1                     	;# 
  5035  1EA2                     	;# 
  5036  1EA3                     	;# 
  5037  1EA4                     	;# 
  5038  1EA9                     	;# 
  5039  1EAA                     	;# 
  5040  1EB1                     	;# 
  5041  1EB2                     	;# 
  5042  1EB8                     	;# 
  5043  1EB9                     	;# 
  5044  1EBA                     	;# 
  5045  1EBB                     	;# 
  5046  1EBC                     	;# 
  5047  1EBD                     	;# 
  5048  1EBE                     	;# 
  5049  1EC3                     	;# 
  5050  1EC5                     	;# 
  5051  1EC6                     	;# 
  5052  1EC7                     	;# 
  5053  1EC8                     	;# 
  5054  1EC9                     	;# 
  5055  1ECA                     	;# 
  5056  1ECB                     	;# 
  5057  1ECB                     	;# 
  5058  1ECB                     	;# 
  5059  1ECC                     	;# 
  5060  1ECC                     	;# 
  5061  1ECC                     	;# 
  5062  1F10                     	;# 
  5063  1F11                     	;# 
  5064  1F12                     	;# 
  5065  1F14                     	;# 
  5066  1F15                     	;# 
  5067  1F1C                     	;# 
  5068  1F1D                     	;# 
  5069  1F1E                     	;# 
  5070  1F1F                     	;# 
  5071  1F20                     	;# 
  5072  1F21                     	;# 
  5073  1F22                     	;# 
  5074  1F23                     	;# 
  5075  1F24                     	;# 
  5076  1F25                     	;# 
  5077  1F26                     	;# 
  5078  1F27                     	;# 
  5079  1F38                     	;# 
  5080  1F39                     	;# 
  5081  1F3A                     	;# 
  5082  1F3B                     	;# 
  5083  1F3C                     	;# 
  5084  1F3D                     	;# 
  5085  1F3E                     	;# 
  5086  1F3F                     	;# 
  5087  1F43                     	;# 
  5088  1F44                     	;# 
  5089  1F45                     	;# 
  5090  1F46                     	;# 
  5091  1F47                     	;# 
  5092  1F48                     	;# 
  5093  1F49                     	;# 
  5094  1F4A                     	;# 
  5095  1F4E                     	;# 
  5096  1F4F                     	;# 
  5097  1F50                     	;# 
  5098  1F51                     	;# 
  5099  1F52                     	;# 
  5100  1F53                     	;# 
  5101  1F54                     	;# 
  5102  1F55                     	;# 
  5103  1FE4                     	;# 
  5104  1FE5                     	;# 
  5105  1FE6                     	;# 
  5106  1FE7                     	;# 
  5107  1FE8                     	;# 
  5108  1FE8                     	;# 
  5109  1FE9                     	;# 
  5110  1FEA                     	;# 
  5111  1FEB                     	;# 
  5112  1FED                     	;# 
  5113  1FEE                     	;# 
  5114  1FEF                     	;_nmea_data
  5115                           
  5116 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
  5117  0000                     
  5118 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
  5119  0000                     
  5120 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
  5121  0000                     
  5122 ;; Function _ReadEnvSensor is unused but had its address taken
  5123  0000                     
  5124 ;; Function _WriteEnvSensor is unused but had its address taken
  5125  0000                     
  5126                           	psect	idataBANK3
  5127  0E12                     __pidataBANK3:	
  5128                           
  5129                           ;initializer for _setNavFlightMode
  5130  0E12  34B5               	retlw	181
  5131  0E13  3462               	retlw	98
  5132  0E14  3406               	retlw	6
  5133  0E15  3424               	retlw	36
  5134  0E16  3424               	retlw	36
  5135  0E17  3400               	retlw	0
  5136  0E18  34FF               	retlw	255
  5137  0E19  34FF               	retlw	255
  5138  0E1A  3406               	retlw	6
  5139  0E1B  3403               	retlw	3
  5140  0E1C  3400               	retlw	0
  5141  0E1D  3400               	retlw	0
  5142  0E1E  3400               	retlw	0
  5143  0E1F  3400               	retlw	0
  5144  0E20  3410               	retlw	16
  5145  0E21  3427               	retlw	39
  5146  0E22  3400               	retlw	0
  5147  0E23  3400               	retlw	0
  5148  0E24  3405               	retlw	5
  5149  0E25  3400               	retlw	0
  5150  0E26  34FA               	retlw	250
  5151  0E27  3400               	retlw	0
  5152  0E28  34FA               	retlw	250
  5153  0E29  3400               	retlw	0
  5154  0E2A  3464               	retlw	100
  5155  0E2B  3400               	retlw	0
  5156  0E2C  342C               	retlw	44
  5157  0E2D  3401               	retlw	1
  5158  0E2E  3400               	retlw	0
  5159  0E2F  3400               	retlw	0
  5160  0E30  3400               	retlw	0
  5161  0E31  3400               	retlw	0
  5162  0E32  3400               	retlw	0
  5163  0E33  3400               	retlw	0
  5164  0E34  3400               	retlw	0
  5165  0E35  3400               	retlw	0
  5166  0E36  3400               	retlw	0
  5167  0E37  3400               	retlw	0
  5168  0E38  3400               	retlw	0
  5169  0E39  3400               	retlw	0
  5170  0E3A  3400               	retlw	0
  5171  0E3B  3400               	retlw	0
  5172  0E3C  3416               	retlw	22
  5173  0E3D  34DC               	retlw	220
  5174                           
  5175                           	psect	stringtext1
  5176  10B4                     __pstringtext1:	
  5177  10B4                     _HALF_BAUD_DELAY:	
  5178  10B4  340A               	retlw	10
  5179  10B5  3400               	retlw	0
  5180  10B6                     __end_of_HALF_BAUD_DELAY:	
  5181                           
  5182                           	psect	nvBANK1
  5183  00EA                     __pnvBANK1:	
  5184  00EA                     _EUSART1_OverrunErrorHandler:	
  5185  00EA                     	ds	2
  5186  00EC                     _EUSART1_FramingErrorHandler:	
  5187  00EC                     	ds	2
  5188  00EE                     _TMR0_InterruptHandler:	
  5189  00EE                     	ds	2
  5190                           
  5191                           	psect	nvBANK2
  5192  016D                     __pnvBANK2:	
  5193  016D                     _EUSART1_ErrorHandler:	
  5194  016D                     	ds	2
  5195  000B                     _INTCONbits	set	11
  5196  0018                     _LATAbits	set	24
  5197  001A                     _LATCbits	set	26
  5198  0014                     _TRISC	set	20
  5199  0013                     _TRISB	set	19
  5200  0012                     _TRISA	set	18
  5201  001A                     _LATC	set	26
  5202  0019                     _LATB	set	25
  5203  0018                     _LATA	set	24
  5204  011A                     _TX1REG	set	282
  5205  0119                     _RC1REG	set	281
  5206  011D                     _RC1STAbits	set	285
  5207  011E                     _TX1STAbits	set	286
  5208  011C                     _SP1BRGH	set	284
  5209  011B                     _SP1BRGL	set	283
  5210  011E                     _TX1STA	set	286
  5211  011D                     _RC1STA	set	285
  5212  011F                     _BAUD1CON	set	287
  5213  0191                     _SSP1CON2bits	set	401
  5214  018C                     _SSP1BUF	set	396
  5215  0190                     _SSP1CON1bits	set	400
  5216  018D                     _SSP1ADD	set	397
  5217  0192                     _SSP1CON3	set	402
  5218  0190                     _SSP1CON1	set	400
  5219  018F                     _SSP1STAT	set	399
  5220  059E                     _T0CON0bits	set	1438
  5221  059E                     _T0CON0	set	1438
  5222  059C                     _TMR0L	set	1436
  5223  059D                     _TMR0H	set	1437
  5224  059F                     _T0CON1	set	1439
  5225  070F                     _PIR3bits	set	1807
  5226  0716                     _PIE0bits	set	1814
  5227  070C                     _PIR0bits	set	1804
  5228  079D                     _PMD7	set	1949
  5229  079C                     _PMD6	set	1948
  5230  079B                     _PMD5	set	1947
  5231  079A                     _PMD4	set	1946
  5232  0799                     _PMD3	set	1945
  5233  0798                     _PMD2	set	1944
  5234  0797                     _PMD1	set	1943
  5235  0796                     _PMD0	set	1942
  5236  0892                     _OSCTUNE	set	2194
  5237  0893                     _OSCFRQ	set	2195
  5238  0891                     _OSCEN	set	2193
  5239  088F                     _OSCCON3	set	2191
  5240  088D                     _OSCCON1	set	2189
  5241  1EC6                     _SSP1DATPPS	set	7878
  5242  1EC5                     _SSP1CLKPPS	set	7877
  5243  1ECB                     _RX1DTPPS	set	7883
  5244  1F1C                     _RB4PPS	set	7964
  5245  1F1E                     _RB6PPS	set	7966
  5246  1F1F                     _RB7PPS	set	7967
  5247  1F52                     _INLVLC	set	8018
  5248  1F47                     _INLVLB	set	8007
  5249  1F3C                     _INLVLA	set	7996
  5250  1F51                     _SLRCONC	set	8017
  5251  1F46                     _SLRCONB	set	8006
  5252  1F3B                     _SLRCONA	set	7995
  5253  1F50                     _ODCONC	set	8016
  5254  1F45                     _ODCONB	set	8005
  5255  1F3A                     _ODCONA	set	7994
  5256  1F4F                     _WPUC	set	8015
  5257  1F39                     _WPUA	set	7993
  5258  1F44                     _WPUB	set	8004
  5259  1F38                     _ANSELA	set	7992
  5260  1F43                     _ANSELB	set	8003
  5261  1F4E                     _ANSELC	set	8014
  5262                           
  5263                           	psect	stringtext2
  5264  1000                     __pstringtext2:	
  5265  1000                     STR_6:	
  5266  1000  3424               	retlw	36	;'$'
  5267  1001  3450               	retlw	80	;'P'
  5268  1002  3455               	retlw	85	;'U'
  5269  1003  3442               	retlw	66	;'B'
  5270  1004  3458               	retlw	88	;'X'
  5271  1005  342C               	retlw	44	;','
  5272  1006  3434               	retlw	52	;'4'
  5273  1007  3430               	retlw	48	;'0'
  5274  1008  342C               	retlw	44	;','
  5275  1009  3452               	retlw	82	;'R'
  5276  100A  344D               	retlw	77	;'M'
  5277  100B  3443               	retlw	67	;'C'
  5278  100C  342C               	retlw	44	;','
  5279  100D  3430               	retlw	48	;'0'
  5280  100E  342C               	retlw	44	;','
  5281  100F  3430               	retlw	48	;'0'
  5282  1010  342C               	retlw	44	;','
  5283  1011  3430               	retlw	48	;'0'
  5284  1012  342C               	retlw	44	;','
  5285  1013  3430               	retlw	48	;'0'
  5286  1014  342A               	retlw	42	;'*'
  5287  1015  3434               	retlw	52	;'4'
  5288  1016  3437               	retlw	55	;'7'
  5289  1017  340D               	retlw	13
  5290  1018  340A               	retlw	10
  5291  1019  3400               	retlw	0
  5292                           
  5293                           	psect	stringtext3
  5294  101A                     __pstringtext3:	
  5295  101A                     STR_4:	
  5296  101A  3424               	retlw	36	;'$'
  5297  101B  3450               	retlw	80	;'P'
  5298  101C  3455               	retlw	85	;'U'
  5299  101D  3442               	retlw	66	;'B'
  5300  101E  3458               	retlw	88	;'X'
  5301  101F  342C               	retlw	44	;','
  5302  1020  3434               	retlw	52	;'4'
  5303  1021  3430               	retlw	48	;'0'
  5304  1022  342C               	retlw	44	;','
  5305  1023  3447               	retlw	71	;'G'
  5306  1024  3453               	retlw	83	;'S'
  5307  1025  3456               	retlw	86	;'V'
  5308  1026  342C               	retlw	44	;','
  5309  1027  3430               	retlw	48	;'0'
  5310  1028  342C               	retlw	44	;','
  5311  1029  3430               	retlw	48	;'0'
  5312  102A  342C               	retlw	44	;','
  5313  102B  3430               	retlw	48	;'0'
  5314  102C  342C               	retlw	44	;','
  5315  102D  3430               	retlw	48	;'0'
  5316  102E  342A               	retlw	42	;'*'
  5317  102F  3435               	retlw	53	;'5'
  5318  1030  3439               	retlw	57	;'9'
  5319  1031  340D               	retlw	13
  5320  1032  340A               	retlw	10
  5321  1033  3400               	retlw	0
  5322                           
  5323                           	psect	stringtext4
  5324  1034                     __pstringtext4:	
  5325  1034                     STR_2:	
  5326  1034  3424               	retlw	36	;'$'
  5327  1035  3450               	retlw	80	;'P'
  5328  1036  3455               	retlw	85	;'U'
  5329  1037  3442               	retlw	66	;'B'
  5330  1038  3458               	retlw	88	;'X'
  5331  1039  342C               	retlw	44	;','
  5332  103A  3434               	retlw	52	;'4'
  5333  103B  3430               	retlw	48	;'0'
  5334  103C  342C               	retlw	44	;','
  5335  103D  3447               	retlw	71	;'G'
  5336  103E  3447               	retlw	71	;'G'
  5337  103F  3441               	retlw	65	;'A'
  5338  1040  342C               	retlw	44	;','
  5339  1041  3430               	retlw	48	;'0'
  5340  1042  342C               	retlw	44	;','
  5341  1043  3430               	retlw	48	;'0'
  5342  1044  342C               	retlw	44	;','
  5343  1045  3430               	retlw	48	;'0'
  5344  1046  342C               	retlw	44	;','
  5345  1047  3430               	retlw	48	;'0'
  5346  1048  342A               	retlw	42	;'*'
  5347  1049  3435               	retlw	53	;'5'
  5348  104A  3441               	retlw	65	;'A'
  5349  104B  340D               	retlw	13
  5350  104C  340A               	retlw	10
  5351  104D  3400               	retlw	0
  5352                           
  5353                           	psect	stringtext5
  5354  104E                     __pstringtext5:	
  5355  104E                     STR_1:	
  5356  104E  3424               	retlw	36	;'$'
  5357  104F  3450               	retlw	80	;'P'
  5358  1050  3455               	retlw	85	;'U'
  5359  1051  3442               	retlw	66	;'B'
  5360  1052  3458               	retlw	88	;'X'
  5361  1053  342C               	retlw	44	;','
  5362  1054  3434               	retlw	52	;'4'
  5363  1055  3430               	retlw	48	;'0'
  5364  1056  342C               	retlw	44	;','
  5365  1057  3447               	retlw	71	;'G'
  5366  1058  344C               	retlw	76	;'L'
  5367  1059  344C               	retlw	76	;'L'
  5368  105A  342C               	retlw	44	;','
  5369  105B  3430               	retlw	48	;'0'
  5370  105C  342C               	retlw	44	;','
  5371  105D  3430               	retlw	48	;'0'
  5372  105E  342C               	retlw	44	;','
  5373  105F  3430               	retlw	48	;'0'
  5374  1060  342C               	retlw	44	;','
  5375  1061  3430               	retlw	48	;'0'
  5376  1062  342A               	retlw	42	;'*'
  5377  1063  3435               	retlw	53	;'5'
  5378  1064  3443               	retlw	67	;'C'
  5379  1065  340D               	retlw	13
  5380  1066  340A               	retlw	10
  5381  1067  3400               	retlw	0
  5382                           
  5383                           	psect	stringtext6
  5384  1068                     __pstringtext6:	
  5385  1068                     STR_5:	
  5386  1068  3424               	retlw	36	;'$'
  5387  1069  3450               	retlw	80	;'P'
  5388  106A  3455               	retlw	85	;'U'
  5389  106B  3442               	retlw	66	;'B'
  5390  106C  3458               	retlw	88	;'X'
  5391  106D  342C               	retlw	44	;','
  5392  106E  3434               	retlw	52	;'4'
  5393  106F  3430               	retlw	48	;'0'
  5394  1070  342C               	retlw	44	;','
  5395  1071  3447               	retlw	71	;'G'
  5396  1072  3453               	retlw	83	;'S'
  5397  1073  3441               	retlw	65	;'A'
  5398  1074  342C               	retlw	44	;','
  5399  1075  3430               	retlw	48	;'0'
  5400  1076  342C               	retlw	44	;','
  5401  1077  3430               	retlw	48	;'0'
  5402  1078  342C               	retlw	44	;','
  5403  1079  3430               	retlw	48	;'0'
  5404  107A  342C               	retlw	44	;','
  5405  107B  3430               	retlw	48	;'0'
  5406  107C  342A               	retlw	42	;'*'
  5407  107D  3434               	retlw	52	;'4'
  5408  107E  3445               	retlw	69	;'E'
  5409  107F  340D               	retlw	13
  5410  1080  340A               	retlw	10
  5411  1081  3400               	retlw	0
  5412                           
  5413                           	psect	stringtext7
  5414  1082                     __pstringtext7:	
  5415  1082                     STR_3:	
  5416  1082  3424               	retlw	36	;'$'
  5417  1083  3450               	retlw	80	;'P'
  5418  1084  3455               	retlw	85	;'U'
  5419  1085  3442               	retlw	66	;'B'
  5420  1086  3458               	retlw	88	;'X'
  5421  1087  342C               	retlw	44	;','
  5422  1088  3434               	retlw	52	;'4'
  5423  1089  3430               	retlw	48	;'0'
  5424  108A  342C               	retlw	44	;','
  5425  108B  3456               	retlw	86	;'V'
  5426  108C  3454               	retlw	84	;'T'
  5427  108D  3447               	retlw	71	;'G'
  5428  108E  342C               	retlw	44	;','
  5429  108F  3430               	retlw	48	;'0'
  5430  1090  342C               	retlw	44	;','
  5431  1091  3430               	retlw	48	;'0'
  5432  1092  342C               	retlw	44	;','
  5433  1093  3430               	retlw	48	;'0'
  5434  1094  342C               	retlw	44	;','
  5435  1095  3430               	retlw	48	;'0'
  5436  1096  342A               	retlw	42	;'*'
  5437  1097  3435               	retlw	53	;'5'
  5438  1098  3445               	retlw	69	;'E'
  5439  1099  340D               	retlw	13
  5440  109A  340A               	retlw	10
  5441  109B  3400               	retlw	0
  5442                           
  5443                           	psect	stringtext8
  5444  109C                     __pstringtext8:	
  5445  109C                     STR_7:	
  5446  109C  3424               	retlw	36	;'$'
  5447  109D  3450               	retlw	80	;'P'
  5448  109E  3455               	retlw	85	;'U'
  5449  109F  3442               	retlw	66	;'B'
  5450  10A0  3458               	retlw	88	;'X'
  5451  10A1  342C               	retlw	44	;','
  5452  10A2  3430               	retlw	48	;'0'
  5453  10A3  3430               	retlw	48	;'0'
  5454  10A4  342A               	retlw	42	;'*'
  5455  10A5  3433               	retlw	51	;'3'
  5456  10A6  3433               	retlw	51	;'3'
  5457  10A7  340D               	retlw	13
  5458  10A8  340A               	retlw	10
  5459  10A9  3400               	retlw	0
  5460                           
  5461                           	psect	stringtext9
  5462  10AA                     __pstringtext9:	
  5463  10AA                     STR_8:	
  5464  10AA  3457               	retlw	87	;'W'
  5465  10AB  3469               	retlw	105	;'i'
  5466  10AC  3473               	retlw	115	;'s'
  5467  10AD  3470               	retlw	112	;'p'
  5468  10AE  342D               	retlw	45	;'-'
  5469  10AF  3431               	retlw	49	;'1'
  5470  10B0  3400               	retlw	0
  5471                           
  5472                           	psect	stringtext10
  5473  10B1                     __pstringtext10:	
  5474  10B1                     STR_9:	
  5475  10B1  3424               	retlw	36	;'$'
  5476  10B2  3424               	retlw	36	;'$'
  5477  10B3  3400               	retlw	0
  5478                           
  5479                           	psect	stringtext11
  5480  0000                     __pstringtext11:	
  5481                           
  5482                           ; #config settings
  5483  0000                     
  5484                           	psect	cinit
  5485  0010                     start_initialization:	
  5486  0010                     __initialization:		;BIGRAM
  5487                           
  5488                           ; Initialize objects allocated to BANK3
  5489  0010  3012               	movlw	low __pidataBANK3
  5490  0011  0084               	movwf	4
  5491  0012  308E               	movlw	(high __pidataBANK3)| (0+128)
  5492  0013  0085               	movwf	5
  5493  0014  30A0               	movlw	low __pdataBANK3
  5494  0015  0086               	movwf	6
  5495  0016  3001               	movlw	high __pdataBANK3
  5496  0017  0087               	movwf	7
  5497  0018  3000               	movlw	0
  5498  0019  00FF               	movwf	btemp+1
  5499  001A  302C               	movlw	44
  5500  001B  318B  239C  3180   	fcall	init_ram
  5501                           
  5502                           ; Clear objects allocated to BIGRAM
  5503  001E  30D8               	movlw	low (0+9944)
  5504  001F  0084               	movwf	4
  5505  0020  3026               	movlw	high (0+9944)
  5506  0021  0085               	movwf	5
  5507  0022  3018               	movlw	24
  5508  0023  00FE               	movwf	btemp
  5509  0024  3001               	movlw	1
  5510  0025  00FF               	movwf	btemp+1
  5511  0026  318B  2390  3180   	fcall	clear_ram0
  5512                           
  5513                           ; Clear objects allocated to BANK1
  5514  0029  30A0               	movlw	low __pbssBANK1
  5515  002A  0084               	movwf	4
  5516  002B  3000               	movlw	high __pbssBANK1
  5517  002C  0085               	movwf	5
  5518  002D  304A               	movlw	74
  5519  002E  00FE               	movwf	btemp
  5520  002F  3000               	movlw	0
  5521  0030  00FF               	movwf	btemp+1
  5522  0031  318B  2390  3180   	fcall	clear_ram0
  5523                           
  5524                           ; Clear objects allocated to BANK2
  5525  0034  3020               	movlw	low __pbssBANK2
  5526  0035  0084               	movwf	4
  5527  0036  3001               	movlw	high __pbssBANK2
  5528  0037  0085               	movwf	5
  5529  0038  304D               	movlw	77
  5530  0039  00FE               	movwf	btemp
  5531  003A  3000               	movlw	0
  5532  003B  00FF               	movwf	btemp+1
  5533  003C  318B  2390         	fcall	clear_ram0
  5534  003E                     end_of_initialization:	
  5535                           ;End of C runtime variable initialization code
  5536                           
  5537  003E                     __end_of__initialization:	
  5538  003E  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  5539  003F  0140               	movlb	0
  5540  0040  3182  2A72         	ljmp	_main	;jump to C main() function
  5541                           
  5542                           	psect	bssBANK1
  5543  00A0                     __pbssBANK1:	
  5544  00A0                     main@F11370:	
  5545  00A0                     	ds	16
  5546  00B0                     bme280_get_sensor_data@F273:	
  5547  00B0                     	ds	12
  5548  00BC                     bme280_get_sensor_data@F271:	
  5549  00BC                     	ds	8
  5550  00C4                     _ticks:	
  5551  00C4                     	ds	4
  5552  00C8                     ___g_timeout_start:	
  5553  00C8                     	ds	4
  5554  00CC                     _id:	
  5555  00CC                     	ds	2
  5556  00CE                     _gps_configured:	
  5557  00CE                     	ds	1
  5558  00CF                     _eusart1RxLastError:	
  5559  00CF                     	ds	1
  5560  00D0                     _csvField:	
  5561  00D0                     	ds	20
  5562  00E4                     _checksum:	
  5563  00E4                     	ds	6
  5564                           
  5565                           	psect	bssBANK2
  5566  0120                     __pbssBANK2:	
  5567  0120                     get_calib_data@F376:	
  5568  0120                     	ds	26
  5569  013A                     _EnvSensor:	
  5570  013A                     	ds	51
  5571                           
  5572                           	psect	dataBANK3
  5573  01A0                     __pdataBANK3:	
  5574  01A0                     _setNavFlightMode:	
  5575  01A0                     	ds	44
  5576                           
  5577                           	psect	inittext
  5578  0B9C                     init_ram:	
  5579  0B9C  00FE               	movwf	126
  5580  0B9D                     initloop:	
  5581  0B9D  0012               	moviw fsr0++
  5582  0B9E  001E               	movwi fsr1++
  5583  0B9F  3001               	movlw	1
  5584  0BA0  02FE               	subwf	126,f
  5585  0BA1  3000               	movlw	0
  5586  0BA2  3BFF               	subwfb	127,f
  5587  0BA3  087F               	movf	127,w
  5588  0BA4  047E               	iorwf	126,w
  5589  0BA5  1903               	btfsc	3,2
  5590  0BA6  3400               	retlw	0
  5591  0BA7  2B9D               	goto	initloop
  5592                           
  5593                           	psect	clrtext
  5594  0B90                     clear_ram0:	
  5595                           ;	Called with FSR0 containing the base address, and
  5596                           ;	btemp/btemp+1 has the size to clear
  5597                           
  5598  0B90  0064               	clrwdt	;clear the watchdog before getting into this loop
  5599  0B91                     clrloop0:	
  5600  0B91  0180               	clrf	0	;clear RAM location pointed to by FSR
  5601  0B92  3101               	addfsr 0,1
  5602  0B93  3001               	movlw	1
  5603  0B94  02FE               	subwf	126,f
  5604  0B95  3000               	movlw	0
  5605  0B96  3BFF               	subwfb	127,f
  5606  0B97  087F               	movf	127,w
  5607  0B98  047E               	iorwf	126,w
  5608  0B99  1903               	btfsc	3,2
  5609  0B9A  3400               	retlw	0	;all done for this memory range, return
  5610  0B9B  2B91               	goto	clrloop0	;have we reached the end yet?
  5611                           
  5612                           	psect	cstackCOMMON
  5613  0070                     __pcstackCOMMON:	
  5614  0070                     ?_TMR0_SetInterruptHandler:	
  5615  0070                     ?_TMR0_DefaultInterruptHandler:	
  5616                           ; 1 bytes @ 0x0
  5617                           
  5618  0070                     ??_TMR0_DefaultInterruptHandler:	
  5619                           ; 1 bytes @ 0x0
  5620                           
  5621  0070                     ?_EUSART1_SetFramingErrorHandler:	
  5622                           ; 1 bytes @ 0x0
  5623                           
  5624  0070                     ?_EUSART1_SetOverrunErrorHandler:	
  5625                           ; 1 bytes @ 0x0
  5626                           
  5627  0070                     ?_EUSART1_SetErrorHandler:	
  5628                           ; 1 bytes @ 0x0
  5629                           
  5630  0070                     ?_PMD_Initialize:	
  5631                           ; 1 bytes @ 0x0
  5632                           
  5633  0070                     ??_PMD_Initialize:	
  5634                           ; 1 bytes @ 0x0
  5635                           
  5636  0070                     ?_PIN_MANAGER_Initialize:	
  5637                           ; 1 bytes @ 0x0
  5638                           
  5639  0070                     ??_PIN_MANAGER_Initialize:	
  5640                           ; 1 bytes @ 0x0
  5641                           
  5642  0070                     ?_OSCILLATOR_Initialize:	
  5643                           ; 1 bytes @ 0x0
  5644                           
  5645  0070                     ??_OSCILLATOR_Initialize:	
  5646                           ; 1 bytes @ 0x0
  5647                           
  5648  0070                     ?_Sleep:	
  5649                           ; 1 bytes @ 0x0
  5650                           
  5651  0070                     ?_InitTiming:	
  5652                           ; 1 bytes @ 0x0
  5653                           
  5654  0070                     ?_TMR0_Initialize:	
  5655                           ; 1 bytes @ 0x0
  5656                           
  5657  0070                     ?_TMR0_ISR:	
  5658                           ; 1 bytes @ 0x0
  5659                           
  5660  0070                     ??_TMR0_ISR:	
  5661                           ; 1 bytes @ 0x0
  5662                           
  5663  0070                     ?_EUSART1_Initialize:	
  5664                           ; 1 bytes @ 0x0
  5665                           
  5666  0070                     ?_EUSART1_is_rx_ready:	
  5667                           ; 1 bytes @ 0x0
  5668                           
  5669  0070                     ??_EUSART1_is_rx_ready:	
  5670                           ; 1 bytes @ 0x0
  5671                           
  5672  0070                     ?_EUSART1_Read:	
  5673                           ; 1 bytes @ 0x0
  5674                           
  5675  0070                     ??_EUSART1_Read:	
  5676                           ; 1 bytes @ 0x0
  5677                           
  5678  0070                     ?_EUSART1_Write:	
  5679                           ; 1 bytes @ 0x0
  5680                           
  5681  0070                     ??_EUSART1_Write:	
  5682                           ; 1 bytes @ 0x0
  5683                           
  5684  0070                     ?_INTERRUPT_InterruptManager:	
  5685                           ; 1 bytes @ 0x0
  5686                           
  5687  0070                     ??_INTERRUPT_InterruptManager:	
  5688                           ; 1 bytes @ 0x0
  5689                           
  5690  0070                     ?_SYSTEM_Initialize:	
  5691                           ; 1 bytes @ 0x0
  5692                           
  5693  0070                     ?_ClearString:	
  5694                           ; 1 bytes @ 0x0
  5695                           
  5696  0070                     ?_ClearStringn:	
  5697                           ; 1 bytes @ 0x0
  5698                           
  5699  0070                     ?_ReverseString:	
  5700                           ; 1 bytes @ 0x0
  5701                           
  5702  0070                     ?_ClearTxData:	
  5703                           ; 1 bytes @ 0x0
  5704                           
  5705  0070                     ??_ClearTxData:	
  5706                           ; 1 bytes @ 0x0
  5707                           
  5708  0070                     ?_GPS_SendUBX:	
  5709                           ; 1 bytes @ 0x0
  5710                           
  5711  0070                     ?_GPS_HasAcknowledged:	
  5712                           ; 1 bytes @ 0x0
  5713                           
  5714  0070                     ??_GPS_HasAcknowledged:	
  5715                           ; 1 bytes @ 0x0
  5716                           
  5717  0070                     ?_SetupGPS:	
  5718                           ; 1 bytes @ 0x0
  5719                           
  5720  0070                     ?_ClearNMEA:	
  5721                           ; 1 bytes @ 0x0
  5722                           
  5723  0070                     ??_ClearNMEA:	
  5724                           ; 1 bytes @ 0x0
  5725                           
  5726  0070                     ?_PollGPS:	
  5727                           ; 1 bytes @ 0x0
  5728                           
  5729  0070                     ?_main:	
  5730                           ; 1 bytes @ 0x0
  5731                           
  5732  0070                     ?_TransmitBit:	
  5733                           ; 1 bytes @ 0x0
  5734                           
  5735  0070                     ?_TransmitChar:	
  5736                           ; 1 bytes @ 0x0
  5737                           
  5738  0070                     ?_TimerISR:	
  5739                           ; 1 bytes @ 0x0
  5740                           
  5741  0070                     ??_TimerISR:	
  5742                           ; 1 bytes @ 0x0
  5743                           
  5744  0070                     ?_strlen:	
  5745                           ; 1 bytes @ 0x0
  5746                           
  5747  0070                     ?_GetLengthUBX:	
  5748                           ; 2 bytes @ 0x0
  5749                           
  5750  0070                     ?___awdiv:	
  5751                           ; 2 bytes @ 0x0
  5752                           
  5753  0070                     ?___awmod:	
  5754                           ; 2 bytes @ 0x0
  5755                           
  5756  0070                     ?___lldiv:	
  5757                           ; 2 bytes @ 0x0
  5758                           
  5759  0070                     ?___llmod:	
  5760                           ; 4 bytes @ 0x0
  5761                           
  5762  0070                     EUSART1_Write@txData:	
  5763                           ; 4 bytes @ 0x0
  5764                           
  5765  0070                     TMR0_SetInterruptHandler@InterruptHandler:	
  5766                           ; 1 bytes @ 0x0
  5767                           
  5768  0070                     EUSART1_SetFramingErrorHandler@interruptHandler:	
  5769                           ; 2 bytes @ 0x0
  5770                           
  5771  0070                     EUSART1_SetOverrunErrorHandler@interruptHandler:	
  5772                           ; 2 bytes @ 0x0
  5773                           
  5774  0070                     EUSART1_SetErrorHandler@interruptHandler:	
  5775                           ; 2 bytes @ 0x0
  5776                           
  5777  0070                     ClearStringn@length:	
  5778                           ; 2 bytes @ 0x0
  5779                           
  5780  0070                     ___awdiv@divisor:	
  5781                           ; 2 bytes @ 0x0
  5782                           
  5783  0070                     ___awmod@divisor:	
  5784                           ; 2 bytes @ 0x0
  5785                           
  5786  0070                     strlen@s:	
  5787                           ; 2 bytes @ 0x0
  5788                           
  5789  0070                     Sleep@ms:	
  5790                           ; 2 bytes @ 0x0
  5791                           
  5792  0070                     ___lldiv@divisor:	
  5793                           ; 4 bytes @ 0x0
  5794                           
  5795  0070                     ___llmod@divisor:	
  5796                           ; 4 bytes @ 0x0
  5797                           
  5798                           
  5799                           ; 4 bytes @ 0x0
  5800  0070                     	ds	2
  5801  0072                     ??_TMR0_SetInterruptHandler:	
  5802  0072                     ??_EUSART1_SetFramingErrorHandler:	
  5803                           ; 1 bytes @ 0x2
  5804                           
  5805  0072                     ??_EUSART1_SetOverrunErrorHandler:	
  5806                           ; 1 bytes @ 0x2
  5807                           
  5808  0072                     ??_EUSART1_SetErrorHandler:	
  5809                           ; 1 bytes @ 0x2
  5810                           
  5811  0072                     ??_strlen:	
  5812                           ; 1 bytes @ 0x2
  5813                           
  5814  0072                     ??_InitTiming:	
  5815                           ; 1 bytes @ 0x2
  5816                           
  5817  0072                     ??_TMR0_Initialize:	
  5818                           ; 1 bytes @ 0x2
  5819                           
  5820  0072                     ??_EUSART1_Initialize:	
  5821                           ; 1 bytes @ 0x2
  5822                           
  5823  0072                     ??_SYSTEM_Initialize:	
  5824                           ; 1 bytes @ 0x2
  5825                           
  5826  0072                     ??_ClearStringn:	
  5827                           ; 1 bytes @ 0x2
  5828                           
  5829  0072                     ClearTxData@i:	
  5830                           ; 1 bytes @ 0x2
  5831                           
  5832  0072                     ClearNMEA@i:	
  5833                           ; 2 bytes @ 0x2
  5834                           
  5835  0072                     ___awdiv@dividend:	
  5836                           ; 2 bytes @ 0x2
  5837                           
  5838  0072                     ___awmod@dividend:	
  5839                           ; 2 bytes @ 0x2
  5840                           
  5841                           
  5842                           ; 2 bytes @ 0x2
  5843  0072                     	ds	1
  5844  0073                     ??_GetLengthUBX:	
  5845  0073                     ClearStringn@str:	
  5846                           ; 1 bytes @ 0x3
  5847                           
  5848  0073                     GetLengthUBX@data:	
  5849                           ; 1 bytes @ 0x3
  5850                           
  5851  0073                     strlen@a:	
  5852                           ; 1 bytes @ 0x3
  5853                           
  5854                           
  5855                           ; 2 bytes @ 0x3
  5856  0073                     	ds	1
  5857  0074                     ??_Sleep:	
  5858  0074                     ??_GPS_SendUBX:	
  5859                           ; 1 bytes @ 0x4
  5860                           
  5861  0074                     ??___awdiv:	
  5862                           ; 1 bytes @ 0x4
  5863                           
  5864  0074                     ??___awmod:	
  5865                           ; 1 bytes @ 0x4
  5866                           
  5867  0074                     ClearStringn@i:	
  5868                           ; 1 bytes @ 0x4
  5869                           
  5870  0074                     ___lldiv@dividend:	
  5871                           ; 2 bytes @ 0x4
  5872                           
  5873  0074                     ___llmod@dividend:	
  5874                           ; 4 bytes @ 0x4
  5875                           
  5876                           
  5877                           ; 4 bytes @ 0x4
  5878  0074                     	ds	1
  5879  0075                     ??_ClearString:	
  5880  0075                     ?_WriteGPS:	
  5881                           ; 1 bytes @ 0x5
  5882                           
  5883  0075                     ?_Insert:	
  5884                           ; 1 bytes @ 0x5
  5885                           
  5886  0075                     ?_crc16_update:	
  5887                           ; 2 bytes @ 0x5
  5888                           
  5889  0075                     ___awdiv@counter:	
  5890                           ; 2 bytes @ 0x5
  5891                           
  5892  0075                     ___awmod@counter:	
  5893                           ; 1 bytes @ 0x5
  5894                           
  5895  0075                     Insert@dest:	
  5896                           ; 1 bytes @ 0x5
  5897                           
  5898  0075                     WriteGPS@message:	
  5899                           ; 2 bytes @ 0x5
  5900                           
  5901  0075                     GPS_SendUBX@length:	
  5902                           ; 2 bytes @ 0x5
  5903                           
  5904  0075                     crc16_update@pData:	
  5905                           ; 2 bytes @ 0x5
  5906                           
  5907                           
  5908                           ; 2 bytes @ 0x5
  5909  0075                     	ds	1
  5910  0076                     ?_GetAtRowCSV:	
  5911  0076                     ___awdiv@sign:	
  5912                           ; 1 bytes @ 0x6
  5913                           
  5914  0076                     ___awmod@sign:	
  5915                           ; 1 bytes @ 0x6
  5916                           
  5917  0076                     ClearString@counti:	
  5918                           ; 1 bytes @ 0x6
  5919                           
  5920  0076                     GetAtRowCSV@src:	
  5921                           ; 2 bytes @ 0x6
  5922                           
  5923                           
  5924                           ; 2 bytes @ 0x6
  5925  0076                     	ds	1
  5926  0077                     ??_WriteGPS:	
  5927  0077                     Insert@src:	
  5928                           ; 1 bytes @ 0x7
  5929                           
  5930  0077                     GPS_SendUBX@i:	
  5931                           ; 1 bytes @ 0x7
  5932                           
  5933  0077                     crc16_update@length:	
  5934                           ; 2 bytes @ 0x7
  5935                           
  5936  0077                     ___awdiv@quotient:	
  5937                           ; 2 bytes @ 0x7
  5938                           
  5939                           
  5940                           ; 2 bytes @ 0x7
  5941  0077                     	ds	1
  5942  0078                     ??___lldiv:	
  5943  0078                     ??___llmod:	
  5944                           ; 1 bytes @ 0x8
  5945                           
  5946  0078                     ClearString@i:	
  5947                           ; 1 bytes @ 0x8
  5948                           
  5949  0078                     GetAtRowCSV@column:	
  5950                           ; 2 bytes @ 0x8
  5951                           
  5952  0078                     Insert@index:	
  5953                           ; 2 bytes @ 0x8
  5954                           
  5955  0078                     WriteGPS@counti:	
  5956                           ; 2 bytes @ 0x8
  5957                           
  5958  0078                     Sleep@start:	
  5959                           ; 2 bytes @ 0x8
  5960                           
  5961                           
  5962                           ; 4 bytes @ 0x8
  5963  0078                     	ds	1
  5964  0079                     ??_ReverseString:	
  5965  0079                     GPS_SendUBX@data:	
  5966                           ; 1 bytes @ 0x9
  5967                           
  5968  0079                     ___llmod@counter:	
  5969                           ; 1 bytes @ 0x9
  5970                           
  5971  0079                     crc16_update@wCrc:	
  5972                           ; 1 bytes @ 0x9
  5973                           
  5974  0079                     ___lldiv@quotient:	
  5975                           ; 2 bytes @ 0x9
  5976                           
  5977                           
  5978                           ; 4 bytes @ 0x9
  5979  0079                     	ds	1
  5980  007A                     ??_GetAtRowCSV:	
  5981  007A                     ClearString@str:	
  5982                           ; 1 bytes @ 0xA
  5983                           
  5984  007A                     Insert@destLimit:	
  5985                           ; 1 bytes @ 0xA
  5986                           
  5987  007A                     WriteGPS@i:	
  5988                           ; 2 bytes @ 0xA
  5989                           
  5990                           
  5991                           ; 2 bytes @ 0xA
  5992  007A                     	ds	1
  5993  007B                     ?_IntToString:	
  5994  007B                     ??_crc16_update:	
  5995                           ; 1 bytes @ 0xB
  5996                           
  5997  007B                     ?_strcmp:	
  5998                           ; 1 bytes @ 0xB
  5999                           
  6000  007B                     IntToString@n:	
  6001                           ; 2 bytes @ 0xB
  6002                           
  6003  007B                     strcmp@r:	
  6004                           ; 2 bytes @ 0xB
  6005                           
  6006                           
  6007                           ; 2 bytes @ 0xB
  6008  007B                     	ds	1
  6009  007C                     ??_DebugAlert:	
  6010  007C                     ??_InsertString:	
  6011                           ; 1 bytes @ 0xC
  6012                           
  6013  007C                     ??_SetupGPS:	
  6014                           ; 1 bytes @ 0xC
  6015                           
  6016  007C                     ??_TransmitBit:	
  6017                           ; 1 bytes @ 0xC
  6018                           
  6019  007C                     ?_InsertTxDataSep:	
  6020                           ; 1 bytes @ 0xC
  6021                           
  6022  007C                     TransmitBit@b:	
  6023                           ; 2 bytes @ 0xC
  6024                           
  6025  007C                     InsertTxDataSep@index:	
  6026                           ; 1 bytes @ 0xC
  6027                           
  6028                           
  6029                           ; 2 bytes @ 0xC
  6030  007C                     	ds	1
  6031  007D                     ??_strcmp:	
  6032  007D                     ??_TransmitChar:	
  6033                           ; 1 bytes @ 0xD
  6034                           
  6035  007D                     IntToString@dest:	
  6036                           ; 1 bytes @ 0xD
  6037                           
  6038  007D                     ___lldiv@counter:	
  6039                           ; 1 bytes @ 0xD
  6040                           
  6041                           
  6042                           ; 1 bytes @ 0xD
  6043  007D                     	ds	1
  6044  007E                     ??_crc16:	
  6045  007E                     ??_InsertTxData:	
  6046                           ; 1 bytes @ 0xE
  6047                           
  6048                           
  6049                           	psect	cstackBANK0
  6050  0020                     __pcstackBANK0:	
  6051                           ; 1 bytes @ 0xE
  6052                           
  6053  0020                     ?_DebugAlert:	
  6054  0020                     ??_Insert:	
  6055                           ; 1 bytes @ 0x0
  6056                           
  6057  0020                     crc16_update@i:	
  6058                           ; 1 bytes @ 0x0
  6059                           
  6060  0020                     TransmitChar@byte:	
  6061                           ; 1 bytes @ 0x0
  6062                           
  6063  0020                     DebugAlert@delay_high:	
  6064                           ; 1 bytes @ 0x0
  6065                           
  6066  0020                     GetAtRowCSV@counti:	
  6067                           ; 2 bytes @ 0x0
  6068                           
  6069  0020                     ReverseString@halfway:	
  6070                           ; 2 bytes @ 0x0
  6071                           
  6072  0020                     GPS_HasAcknowledged@startTime:	
  6073                           ; 2 bytes @ 0x0
  6074                           
  6075                           
  6076                           ; 4 bytes @ 0x0
  6077  0020                     	ds	1
  6078  0021                     ?_crc16:	
  6079  0021                     crc16@data:	
  6080                           ; 2 bytes @ 0x1
  6081                           
  6082  0021                     TransmitChar@i:	
  6083                           ; 2 bytes @ 0x1
  6084                           
  6085                           
  6086                           ; 2 bytes @ 0x1
  6087  0021                     	ds	1
  6088  0022                     ReverseString@temp:	
  6089  0022                     DebugAlert@delay_low:	
  6090                           ; 1 bytes @ 0x2
  6091                           
  6092  0022                     GetAtRowCSV@col:	
  6093                           ; 2 bytes @ 0x2
  6094                           
  6095                           
  6096                           ; 2 bytes @ 0x2
  6097  0022                     	ds	1
  6098  0023                     ?_TransmitString:	
  6099  0023                     ReverseString@opposite:	
  6100                           ; 1 bytes @ 0x3
  6101                           
  6102  0023                     crc16@crc:	
  6103                           ; 1 bytes @ 0x3
  6104                           
  6105  0023                     TransmitString@message:	
  6106                           ; 2 bytes @ 0x3
  6107                           
  6108                           
  6109                           ; 2 bytes @ 0x3
  6110  0023                     	ds	1
  6111  0024                     DebugAlert@num_flashes:	
  6112  0024                     GPS_HasAcknowledged@ackByte:	
  6113                           ; 1 bytes @ 0x4
  6114                           
  6115  0024                     GetAtRowCSV@index:	
  6116                           ; 1 bytes @ 0x4
  6117                           
  6118  0024                     ReverseString@counti:	
  6119                           ; 2 bytes @ 0x4
  6120                           
  6121                           
  6122                           ; 2 bytes @ 0x4
  6123  0024                     	ds	1
  6124  0025                     ??_TransmitString:	
  6125  0025                     DebugAlert@i:	
  6126                           ; 1 bytes @ 0x5
  6127                           
  6128  0025                     Insert@length:	
  6129                           ; 2 bytes @ 0x5
  6130                           
  6131  0025                     GPS_HasAcknowledged@ackPacket:	
  6132                           ; 2 bytes @ 0x5
  6133                           
  6134                           
  6135                           ; 10 bytes @ 0x5
  6136  0025                     	ds	1
  6137  0026                     GetAtRowCSV@i:	
  6138  0026                     ReverseString@i:	
  6139                           ; 2 bytes @ 0x6
  6140                           
  6141  0026                     TransmitString@counti:	
  6142                           ; 2 bytes @ 0x6
  6143                           
  6144                           
  6145                           ; 2 bytes @ 0x6
  6146  0026                     	ds	1
  6147  0027                     Insert@i:	
  6148                           
  6149                           ; 2 bytes @ 0x7
  6150  0027                     	ds	1
  6151  0028                     ReverseString@str:	
  6152  0028                     strcmp@l:	
  6153                           ; 1 bytes @ 0x8
  6154                           
  6155  0028                     TransmitString@i:	
  6156                           ; 1 bytes @ 0x8
  6157                           
  6158                           
  6159                           ; 2 bytes @ 0x8
  6160  0028                     	ds	1
  6161  0029                     ??_InsertTxDataSep:	
  6162  0029                     ?_UIntToHexString:	
  6163                           ; 1 bytes @ 0x9
  6164                           
  6165  0029                     ??_IntToString:	
  6166                           ; 1 bytes @ 0x9
  6167                           
  6168  0029                     ?_UIntToString:	
  6169                           ; 1 bytes @ 0x9
  6170                           
  6171  0029                     ?_InsertString:	
  6172                           ; 1 bytes @ 0x9
  6173                           
  6174  0029                     InsertString@dest:	
  6175                           ; 2 bytes @ 0x9
  6176                           
  6177  0029                     UIntToHexString@n:	
  6178                           ; 2 bytes @ 0x9
  6179                           
  6180  0029                     UIntToString@n:	
  6181                           ; 4 bytes @ 0x9
  6182                           
  6183                           
  6184                           ; 4 bytes @ 0x9
  6185  0029                     	ds	2
  6186  002B                     IntToString@sign:	
  6187  002B                     InsertString@src:	
  6188                           ; 1 bytes @ 0xB
  6189                           
  6190                           
  6191                           ; 2 bytes @ 0xB
  6192  002B                     	ds	1
  6193  002C                     IntToString@i:	
  6194                           
  6195                           ; 2 bytes @ 0xC
  6196  002C                     	ds	1
  6197  002D                     UIntToHexString@dest:	
  6198  002D                     UIntToString@dest:	
  6199                           ; 1 bytes @ 0xD
  6200                           
  6201  002D                     InsertString@index:	
  6202                           ; 1 bytes @ 0xD
  6203                           
  6204                           
  6205                           ; 2 bytes @ 0xD
  6206  002D                     	ds	1
  6207  002E                     ??_UIntToHexString:	
  6208  002E                     ??_UIntToString:	
  6209                           ; 1 bytes @ 0xE
  6210                           
  6211                           
  6212                           ; 1 bytes @ 0xE
  6213  002E                     	ds	1
  6214  002F                     GPS_HasAcknowledged@data:	
  6215  002F                     InsertString@destLimit:	
  6216                           ; 1 bytes @ 0xF
  6217                           
  6218                           
  6219                           ; 2 bytes @ 0xF
  6220  002F                     	ds	1
  6221  0030                     GPS_HasAcknowledged@ackByteID:	
  6222  0030                     UIntToString@i:	
  6223                           ; 1 bytes @ 0x10
  6224                           
  6225  0030                     _UIntToHexString$1752:	
  6226                           ; 2 bytes @ 0x10
  6227                           
  6228                           
  6229                           ; 4 bytes @ 0x10
  6230  0030                     	ds	1
  6231  0031                     GPS_HasAcknowledged@i:	
  6232  0031                     InsertString@counti:	
  6233                           ; 1 bytes @ 0x11
  6234                           
  6235                           
  6236                           ; 2 bytes @ 0x11
  6237  0031                     	ds	2
  6238  0033                     InsertString@i:	
  6239                           
  6240                           ; 2 bytes @ 0x13
  6241  0033                     	ds	1
  6242  0034                     UIntToHexString@remainder:	
  6243                           
  6244                           ; 4 bytes @ 0x14
  6245  0034                     	ds	1
  6246  0035                     ?_InsertTxData:	
  6247  0035                     InsertTxData@index:	
  6248                           ; 2 bytes @ 0x15
  6249                           
  6250                           
  6251                           ; 2 bytes @ 0x15
  6252  0035                     	ds	2
  6253  0037                     InsertTxData@field:	
  6254                           
  6255                           ; 2 bytes @ 0x17
  6256  0037                     	ds	1
  6257  0038                     UIntToHexString@i:	
  6258                           
  6259                           ; 4 bytes @ 0x18
  6260  0038                     	ds	1
  6261  0039                     ??_PollGPS:	
  6262                           
  6263                           ; 1 bytes @ 0x19
  6264  0039                     	ds	4
  6265  003D                     PollGPS@startTime:	
  6266                           
  6267                           ; 4 bytes @ 0x1D
  6268  003D                     	ds	4
  6269  0041                     PollGPS@counti:	
  6270                           
  6271                           ; 2 bytes @ 0x21
  6272  0041                     	ds	2
  6273  0043                     PollGPS@success:	
  6274                           
  6275                           ; 1 bytes @ 0x23
  6276  0043                     	ds	1
  6277  0044                     _PollGPS$2657:	
  6278                           
  6279                           ; 1 bytes @ 0x24
  6280  0044                     	ds	1
  6281  0045                     PollGPS@eusart_complete:	
  6282                           
  6283                           ; 1 bytes @ 0x25
  6284  0045                     	ds	1
  6285  0046                     PollGPS@byte:	
  6286                           
  6287                           ; 1 bytes @ 0x26
  6288  0046                     	ds	1
  6289  0047                     PollGPS@i:	
  6290                           
  6291                           ; 2 bytes @ 0x27
  6292  0047                     	ds	2
  6293  0049                     PollGPS@index:	
  6294                           
  6295                           ; 2 bytes @ 0x29
  6296  0049                     	ds	2
  6297  004B                     ??_main:	
  6298                           
  6299                           ; 1 bytes @ 0x2B
  6300  004B                     	ds	5
  6301  0050                     main@convertedNumber:	
  6302                           
  6303                           ; 16 bytes @ 0x30
  6304  0050                     	ds	16
  6305  0060                     main@end:	
  6306                           
  6307                           ; 2 bytes @ 0x40
  6308  0060                     	ds	2
  6309  0062                     main@sensor_data:	
  6310                           
  6311                           ; 12 bytes @ 0x42
  6312  0062                     	ds	12
  6313  006E                     main@index:	
  6314                           
  6315                           ; 2 bytes @ 0x4E
  6316  006E                     	ds	2
  6317                           
  6318                           	psect	maintext
  6319  0272                     __pmaintext:	
  6320 ;;
  6321 ;;Main: autosize = 0, tempsize = 5, incstack = 0, save=0
  6322 ;;
  6323 ;; *************** function _main *****************
  6324 ;; Defined at:
  6325 ;;		line 602 in file "main.c"
  6326 ;; Parameters:    Size  Location     Type
  6327 ;;		None
  6328 ;; Auto vars:     Size  Location     Type
  6329 ;;  sensor_data    12   66[BANK0 ] struct bme280_data
  6330 ;;  end             2   64[BANK0 ] int 
  6331 ;;  convertedNum   16   48[BANK0 ] unsigned char [16]
  6332 ;;  index           2   78[BANK0 ] int 
  6333 ;; Return value:  Size  Location     Type
  6334 ;;                  1    wreg      void 
  6335 ;; Registers used:
  6336 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6337 ;; Tracked objects:
  6338 ;;		On entry : B3F/0
  6339 ;;		On exit  : 0/0
  6340 ;;		Unchanged: 0/0
  6341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6343 ;;      Locals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6344 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6345 ;;      Totals:         0      37       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6346 ;;Total ram usage:       37 bytes
  6347 ;; Hardware stack levels required when called:    8
  6348 ;; This function calls:
  6349 ;;		_ClearString
  6350 ;;		_ClearTxData
  6351 ;;		_DebugAlert
  6352 ;;		_InitTiming
  6353 ;;		_Insert
  6354 ;;		_InsertString
  6355 ;;		_IntToString
  6356 ;;		_PollGPS
  6357 ;;		_SYSTEM_Initialize
  6358 ;;		_SetupGPS
  6359 ;;		_Sleep
  6360 ;;		_TransmitString
  6361 ;;		_UIntToHexString
  6362 ;;		_UIntToString
  6363 ;;		_crc16
  6364 ;;		_strlen
  6365 ;; This function is called by:
  6366 ;;		Startup code after reset
  6367 ;; This function uses a non-reentrant model
  6368 ;;
  6369                           
  6370                           
  6371                           ;psect for function _main
  6372  0272                     _main:	
  6373                           
  6374                           ;main.c: 605:     SYSTEM_Initialize();
  6375                           
  6376                           ;incstack = 0
  6377                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6378  0272  318B  23B5  3182   	fcall	_SYSTEM_Initialize
  6379                           
  6380                           ;main.c: 606:     InitTiming();
  6381  0275  318B  2357  3182   	fcall	_InitTiming
  6382                           
  6383                           ;main.c: 612:     SetupGPS();
  6384  0278  318F  2763  3182   	fcall	_SetupGPS
  6385  027B                     l4686:	
  6386                           
  6387                           ;main.c: 616:     {;main.c: 617:         int index = 0;
  6388  027B  0140               	movlb	0	; select bank0
  6389  027C  01EE               	clrf	main@index
  6390  027D  01EF               	clrf	main@index+1
  6391                           
  6392                           ;main.c: 618:         char convertedNumber[16] = {'\0'};
  6393  027E  3050               	movlw	low main@convertedNumber
  6394  027F  0086               	movwf	6
  6395  0280  3000               	movlw	high main@convertedNumber
  6396  0281  0087               	movwf	7
  6397  0282  3010               	movlw	16
  6398  0283  00CB               	movwf	??_main
  6399  0284  3000               	movlw	0
  6400  0285                     u4360:	
  6401  0285  001E               	movwi fsr1++
  6402  0286  0BCB               	decfsz	??_main,f
  6403  0287  2A85               	goto	u4360
  6404                           
  6405                           ;main.c: 621:         ClearTxData();
  6406  0288  318C  2447  3182   	fcall	_ClearTxData
  6407                           
  6408                           ;main.c: 624:         index = InsertString(txdata, "Wisp-1", index, 140);
  6409  028B  3064               	movlw	100
  6410  028C  0140               	movlb	0	; select bank0
  6411  028D  00A9               	movwf	InsertString@dest
  6412  028E  3027               	movlw	39
  6413  028F  00AA               	movwf	InsertString@dest+1
  6414  0290  30AA               	movlw	low (STR_8| (0+32768))
  6415  0291  00AB               	movwf	InsertString@src
  6416  0292  3090               	movlw	high (STR_8| (0+32768))
  6417  0293  00AC               	movwf	InsertString@src+1
  6418  0294  086F               	movf	main@index+1,w
  6419  0295  00AE               	movwf	InsertString@index+1
  6420  0296  086E               	movf	main@index,w
  6421  0297  00AD               	movwf	InsertString@index
  6422  0298  308C               	movlw	140
  6423  0299  00AF               	movwf	InsertString@destLimit
  6424  029A  3000               	movlw	0
  6425  029B  00B0               	movwf	InsertString@destLimit+1
  6426  029C  3187  27AA  3182   	fcall	_InsertString
  6427  029F  0140               	movlb	0	; select bank0
  6428  02A0  082A               	movf	?_InsertString+1,w
  6429  02A1  00EF               	movwf	main@index+1
  6430  02A2  0829               	movf	?_InsertString,w
  6431  02A3  00EE               	movwf	main@index
  6432                           
  6433                           ;main.c: 625:         index = Insert(txdata, ',', index, 140);
  6434  02A4  3064               	movlw	100
  6435  02A5  00F5               	movwf	Insert@dest
  6436  02A6  3027               	movlw	39
  6437  02A7  00F6               	movwf	Insert@dest+1
  6438  02A8  302C               	movlw	44
  6439  02A9  00CB               	movwf	??_main
  6440  02AA  084B               	movf	??_main,w
  6441  02AB  00F7               	movwf	Insert@src
  6442  02AC  086F               	movf	main@index+1,w
  6443  02AD  00F9               	movwf	Insert@index+1
  6444  02AE  086E               	movf	main@index,w
  6445  02AF  00F8               	movwf	Insert@index
  6446  02B0  308C               	movlw	140
  6447  02B1  00FA               	movwf	Insert@destLimit
  6448  02B2  3000               	movlw	0
  6449  02B3  00FB               	movwf	Insert@destLimit+1
  6450  02B4  3185  2569  3182   	fcall	_Insert
  6451  02B7  0876               	movf	?_Insert+1,w
  6452  02B8  0140               	movlb	0	; select bank0
  6453  02B9  00EF               	movwf	main@index+1
  6454  02BA  0875               	movf	?_Insert,w
  6455  02BB  00EE               	movwf	main@index
  6456                           
  6457                           ;main.c: 626:         ClearString(convertedNumber);
  6458  02BC  3050               	movlw	(low (main@convertedNumber| 0))& (0+255)
  6459  02BD  318C  24C7  3182   	fcall	_ClearString
  6460                           
  6461                           ;main.c: 627:         IntToString(id, convertedNumber);
  6462  02C0  0141               	movlb	1	; select bank1
  6463  02C1  084D               	movf	(_id+1)^(0+128),w
  6464  02C2  00FC               	movwf	IntToString@n+1
  6465  02C3  084C               	movf	_id^(0+128),w
  6466  02C4  00FB               	movwf	IntToString@n
  6467  02C5  3050               	movlw	(low (main@convertedNumber| 0))& (0+255)
  6468  02C6  0140               	movlb	0	; select bank0
  6469  02C7  00CB               	movwf	??_main
  6470  02C8  084B               	movf	??_main,w
  6471  02C9  00FD               	movwf	IntToString@dest
  6472  02CA  3185  25DE  3182   	fcall	_IntToString
  6473                           
  6474                           ;main.c: 628:         index = InsertString(txdata, convertedNumber, index, 140);
  6475  02CD  3064               	movlw	100
  6476  02CE  0140               	movlb	0	; select bank0
  6477  02CF  00A9               	movwf	InsertString@dest
  6478  02D0  3027               	movlw	39
  6479  02D1  00AA               	movwf	InsertString@dest+1
  6480  02D2  3050               	movlw	low main@convertedNumber
  6481  02D3  00AB               	movwf	InsertString@src
  6482  02D4  3000               	movlw	high main@convertedNumber
  6483  02D5  00AC               	movwf	InsertString@src+1
  6484  02D6  086F               	movf	main@index+1,w
  6485  02D7  00AE               	movwf	InsertString@index+1
  6486  02D8  086E               	movf	main@index,w
  6487  02D9  00AD               	movwf	InsertString@index
  6488  02DA  308C               	movlw	140
  6489  02DB  00AF               	movwf	InsertString@destLimit
  6490  02DC  3000               	movlw	0
  6491  02DD  00B0               	movwf	InsertString@destLimit+1
  6492  02DE  3187  27AA  3182   	fcall	_InsertString
  6493  02E1  0140               	movlb	0	; select bank0
  6494  02E2  082A               	movf	?_InsertString+1,w
  6495  02E3  00EF               	movwf	main@index+1
  6496  02E4  0829               	movf	?_InsertString,w
  6497  02E5  00EE               	movwf	main@index
  6498                           
  6499                           ;main.c: 629:         index = Insert(txdata, ',', index, 140);
  6500  02E6  3064               	movlw	100
  6501  02E7  00F5               	movwf	Insert@dest
  6502  02E8  3027               	movlw	39
  6503  02E9  00F6               	movwf	Insert@dest+1
  6504  02EA  302C               	movlw	44
  6505  02EB  00CB               	movwf	??_main
  6506  02EC  084B               	movf	??_main,w
  6507  02ED  00F7               	movwf	Insert@src
  6508  02EE  086F               	movf	main@index+1,w
  6509  02EF  00F9               	movwf	Insert@index+1
  6510  02F0  086E               	movf	main@index,w
  6511  02F1  00F8               	movwf	Insert@index
  6512  02F2  308C               	movlw	140
  6513  02F3  00FA               	movwf	Insert@destLimit
  6514  02F4  3000               	movlw	0
  6515  02F5  00FB               	movwf	Insert@destLimit+1
  6516  02F6  3185  2569  3182   	fcall	_Insert
  6517  02F9  0876               	movf	?_Insert+1,w
  6518  02FA  0140               	movlb	0	; select bank0
  6519  02FB  00EF               	movwf	main@index+1
  6520  02FC  0875               	movf	?_Insert,w
  6521  02FD  00EE               	movwf	main@index
  6522                           
  6523                           ;main.c: 633:         if (PollGPS())
  6524  02FE  3180  2042  3182   	fcall	_PollGPS
  6525  0301  3A00               	xorlw	0
  6526  0302  1903               	skipnz
  6527  0303  2C45               	goto	l4744
  6528                           
  6529                           ;main.c: 637:         {;main.c: 638:             struct bme280_data sensor_data;;main.c:
      +                           642:             index = strlen(txdata);
  6530  0304  3064               	movlw	100
  6531  0305  00F0               	movwf	strlen@s
  6532  0306  3027               	movlw	39
  6533  0307  00F1               	movwf	strlen@s+1
  6534  0308  318B  23FD  3182   	fcall	_strlen
  6535  030B  0871               	movf	?_strlen+1,w
  6536  030C  0140               	movlb	0	; select bank0
  6537  030D  00EF               	movwf	main@index+1
  6538  030E  0870               	movf	?_strlen,w
  6539  030F  00EE               	movwf	main@index
  6540                           
  6541                           ;main.c: 645:             IntToString(sensor_data.temperature, convertedNumber);
  6542  0310  0867               	movf	main@sensor_data+5,w
  6543  0311  00FC               	movwf	IntToString@n+1
  6544  0312  0866               	movf	main@sensor_data+4,w
  6545  0313  00FB               	movwf	IntToString@n
  6546  0314  3050               	movlw	(low (main@convertedNumber| 0))& (0+255)
  6547  0315  00CB               	movwf	??_main
  6548  0316  084B               	movf	??_main,w
  6549  0317  00FD               	movwf	IntToString@dest
  6550  0318  3185  25DE  3182   	fcall	_IntToString
  6551                           
  6552                           ;main.c: 646:             index = InsertString(txdata, convertedNumber, index, 140);
  6553  031B  3064               	movlw	100
  6554  031C  0140               	movlb	0	; select bank0
  6555  031D  00A9               	movwf	InsertString@dest
  6556  031E  3027               	movlw	39
  6557  031F  00AA               	movwf	InsertString@dest+1
  6558  0320  3050               	movlw	low main@convertedNumber
  6559  0321  00AB               	movwf	InsertString@src
  6560  0322  3000               	movlw	high main@convertedNumber
  6561  0323  00AC               	movwf	InsertString@src+1
  6562  0324  086F               	movf	main@index+1,w
  6563  0325  00AE               	movwf	InsertString@index+1
  6564  0326  086E               	movf	main@index,w
  6565  0327  00AD               	movwf	InsertString@index
  6566  0328  308C               	movlw	140
  6567  0329  00AF               	movwf	InsertString@destLimit
  6568  032A  3000               	movlw	0
  6569  032B  00B0               	movwf	InsertString@destLimit+1
  6570  032C  3187  27AA  3182   	fcall	_InsertString
  6571  032F  0140               	movlb	0	; select bank0
  6572  0330  082A               	movf	?_InsertString+1,w
  6573  0331  00EF               	movwf	main@index+1
  6574  0332  0829               	movf	?_InsertString,w
  6575  0333  00EE               	movwf	main@index
  6576                           
  6577                           ;main.c: 647:             index = Insert(txdata, ',', index, 140);
  6578  0334  3064               	movlw	100
  6579  0335  00F5               	movwf	Insert@dest
  6580  0336  3027               	movlw	39
  6581  0337  00F6               	movwf	Insert@dest+1
  6582  0338  302C               	movlw	44
  6583  0339  00CB               	movwf	??_main
  6584  033A  084B               	movf	??_main,w
  6585  033B  00F7               	movwf	Insert@src
  6586  033C  086F               	movf	main@index+1,w
  6587  033D  00F9               	movwf	Insert@index+1
  6588  033E  086E               	movf	main@index,w
  6589  033F  00F8               	movwf	Insert@index
  6590  0340  308C               	movlw	140
  6591  0341  00FA               	movwf	Insert@destLimit
  6592  0342  3000               	movlw	0
  6593  0343  00FB               	movwf	Insert@destLimit+1
  6594  0344  3185  2569  3182   	fcall	_Insert
  6595  0347  0876               	movf	?_Insert+1,w
  6596  0348  0140               	movlb	0	; select bank0
  6597  0349  00EF               	movwf	main@index+1
  6598  034A  0875               	movf	?_Insert,w
  6599  034B  00EE               	movwf	main@index
  6600                           
  6601                           ;main.c: 648:             ClearString(convertedNumber);
  6602  034C  3050               	movlw	(low (main@convertedNumber| 0))& (0+255)
  6603  034D  318C  24C7  3182   	fcall	_ClearString
  6604                           
  6605                           ;main.c: 650:             UIntToString(sensor_data.pressure, convertedNumber);
  6606  0350  0140               	movlb	0	; select bank0
  6607  0351  0865               	movf	main@sensor_data+3,w
  6608  0352  00AC               	movwf	UIntToString@n+3
  6609  0353  0864               	movf	main@sensor_data+2,w
  6610  0354  00AB               	movwf	UIntToString@n+2
  6611  0355  0863               	movf	main@sensor_data+1,w
  6612  0356  00AA               	movwf	UIntToString@n+1
  6613  0357  0862               	movf	main@sensor_data,w
  6614  0358  00A9               	movwf	UIntToString@n
  6615  0359  3050               	movlw	(low (main@convertedNumber| 0))& (0+255)
  6616  035A  00CB               	movwf	??_main
  6617  035B  084B               	movf	??_main,w
  6618  035C  00AD               	movwf	UIntToString@dest
  6619  035D  3187  2705  3182   	fcall	_UIntToString
  6620                           
  6621                           ;main.c: 651:             index = InsertString(txdata, convertedNumber, index, 140);
  6622  0360  3064               	movlw	100
  6623  0361  0140               	movlb	0	; select bank0
  6624  0362  00A9               	movwf	InsertString@dest
  6625  0363  3027               	movlw	39
  6626  0364  00AA               	movwf	InsertString@dest+1
  6627  0365  3050               	movlw	low main@convertedNumber
  6628  0366  00AB               	movwf	InsertString@src
  6629  0367  3000               	movlw	high main@convertedNumber
  6630  0368  00AC               	movwf	InsertString@src+1
  6631  0369  086F               	movf	main@index+1,w
  6632  036A  00AE               	movwf	InsertString@index+1
  6633  036B  086E               	movf	main@index,w
  6634  036C  00AD               	movwf	InsertString@index
  6635  036D  308C               	movlw	140
  6636  036E  00AF               	movwf	InsertString@destLimit
  6637  036F  3000               	movlw	0
  6638  0370  00B0               	movwf	InsertString@destLimit+1
  6639  0371  3187  27AA  3182   	fcall	_InsertString
  6640  0374  0140               	movlb	0	; select bank0
  6641  0375  082A               	movf	?_InsertString+1,w
  6642  0376  00EF               	movwf	main@index+1
  6643  0377  0829               	movf	?_InsertString,w
  6644  0378  00EE               	movwf	main@index
  6645                           
  6646                           ;main.c: 652:             index = Insert(txdata, ',', index, 140);
  6647  0379  3064               	movlw	100
  6648  037A  00F5               	movwf	Insert@dest
  6649  037B  3027               	movlw	39
  6650  037C  00F6               	movwf	Insert@dest+1
  6651  037D  302C               	movlw	44
  6652  037E  00CB               	movwf	??_main
  6653  037F  084B               	movf	??_main,w
  6654  0380  00F7               	movwf	Insert@src
  6655  0381  086F               	movf	main@index+1,w
  6656  0382  00F9               	movwf	Insert@index+1
  6657  0383  086E               	movf	main@index,w
  6658  0384  00F8               	movwf	Insert@index
  6659  0385  308C               	movlw	140
  6660  0386  00FA               	movwf	Insert@destLimit
  6661  0387  3000               	movlw	0
  6662  0388  00FB               	movwf	Insert@destLimit+1
  6663  0389  3185  2569  3182   	fcall	_Insert
  6664  038C  0876               	movf	?_Insert+1,w
  6665  038D  0140               	movlb	0	; select bank0
  6666  038E  00EF               	movwf	main@index+1
  6667  038F  0875               	movf	?_Insert,w
  6668  0390  00EE               	movwf	main@index
  6669                           
  6670                           ;main.c: 653:             ClearString(convertedNumber);
  6671  0391  3050               	movlw	(low (main@convertedNumber| 0))& (0+255)
  6672  0392  318C  24C7  3182   	fcall	_ClearString
  6673                           
  6674                           ;main.c: 655:             UIntToString(sensor_data.humidity, convertedNumber);
  6675  0395  3008               	movlw	8
  6676  0396  3E62               	addlw	(low (main@sensor_data| 0))& (0+255)
  6677  0397  0086               	movwf	6
  6678  0398  0187               	clrf	7
  6679  0399  3F40               	moviw [0]fsr1
  6680  039A  0140               	movlb	0	; select bank0
  6681  039B  00A9               	movwf	UIntToString@n
  6682  039C  3F41               	moviw [1]fsr1
  6683  039D  00AA               	movwf	UIntToString@n+1
  6684  039E  3F42               	moviw [2]fsr1
  6685  039F  00AB               	movwf	UIntToString@n+2
  6686  03A0  3F43               	moviw [3]fsr1
  6687  03A1  00AC               	movwf	UIntToString@n+3
  6688  03A2  3050               	movlw	(low (main@convertedNumber| 0))& (0+255)
  6689  03A3  00CB               	movwf	??_main
  6690  03A4  084B               	movf	??_main,w
  6691  03A5  00AD               	movwf	UIntToString@dest
  6692  03A6  3187  2705  3182   	fcall	_UIntToString
  6693                           
  6694                           ;main.c: 656:             index = InsertString(txdata, convertedNumber, index, 140);
  6695  03A9  3064               	movlw	100
  6696  03AA  0140               	movlb	0	; select bank0
  6697  03AB  00A9               	movwf	InsertString@dest
  6698  03AC  3027               	movlw	39
  6699  03AD  00AA               	movwf	InsertString@dest+1
  6700  03AE  3050               	movlw	low main@convertedNumber
  6701  03AF  00AB               	movwf	InsertString@src
  6702  03B0  3000               	movlw	high main@convertedNumber
  6703  03B1  00AC               	movwf	InsertString@src+1
  6704  03B2  086F               	movf	main@index+1,w
  6705  03B3  00AE               	movwf	InsertString@index+1
  6706  03B4  086E               	movf	main@index,w
  6707  03B5  00AD               	movwf	InsertString@index
  6708  03B6  308C               	movlw	140
  6709  03B7  00AF               	movwf	InsertString@destLimit
  6710  03B8  3000               	movlw	0
  6711  03B9  00B0               	movwf	InsertString@destLimit+1
  6712  03BA  3187  27AA  3182   	fcall	_InsertString
  6713  03BD  0140               	movlb	0	; select bank0
  6714  03BE  082A               	movf	?_InsertString+1,w
  6715  03BF  00EF               	movwf	main@index+1
  6716  03C0  0829               	movf	?_InsertString,w
  6717  03C1  00EE               	movwf	main@index
  6718                           
  6719                           ;main.c: 658:             int end = index;
  6720  03C2  086F               	movf	main@index+1,w
  6721  03C3  00E1               	movwf	main@end+1
  6722  03C4  086E               	movf	main@index,w
  6723  03C5  00E0               	movwf	main@end
  6724                           
  6725                           ;main.c: 661:             UIntToHexString(crc16(txdata), checksum);
  6726  03C6  3064               	movlw	100
  6727  03C7  00A1               	movwf	crc16@data
  6728  03C8  3027               	movlw	39
  6729  03C9  00A2               	movwf	crc16@data+1
  6730  03CA  318C  24A2  3182   	fcall	_crc16
  6731  03CD  0140               	movlb	0	; select bank0
  6732  03CE  0821               	movf	?_crc16,w
  6733  03CF  00CB               	movwf	??_main
  6734  03D0  0822               	movf	?_crc16+1,w
  6735  03D1  00CC               	movwf	??_main+1
  6736  03D2  01CD               	clrf	??_main+2
  6737  03D3  01CE               	clrf	??_main+3
  6738  03D4  084E               	movf	??_main+3,w
  6739  03D5  00AC               	movwf	UIntToHexString@n+3
  6740  03D6  084D               	movf	??_main+2,w
  6741  03D7  00AB               	movwf	UIntToHexString@n+2
  6742  03D8  084C               	movf	??_main+1,w
  6743  03D9  00AA               	movwf	UIntToHexString@n+1
  6744  03DA  084B               	movf	??_main,w
  6745  03DB  00A9               	movwf	UIntToHexString@n
  6746  03DC  30E4               	movlw	(low (_checksum| 0))& (0+255)
  6747  03DD  00CF               	movwf	??_main+4
  6748  03DE  084F               	movf	??_main+4,w
  6749  03DF  00AD               	movwf	UIntToHexString@dest
  6750  03E0  3184  24F3  3182   	fcall	_UIntToHexString
  6751                           
  6752                           ;main.c: 663:             index = Insert(txdata, '*', end, 140);
  6753  03E3  3064               	movlw	100
  6754  03E4  00F5               	movwf	Insert@dest
  6755  03E5  3027               	movlw	39
  6756  03E6  00F6               	movwf	Insert@dest+1
  6757  03E7  302A               	movlw	42
  6758  03E8  0140               	movlb	0	; select bank0
  6759  03E9  00CB               	movwf	??_main
  6760  03EA  084B               	movf	??_main,w
  6761  03EB  00F7               	movwf	Insert@src
  6762  03EC  0861               	movf	main@end+1,w
  6763  03ED  00F9               	movwf	Insert@index+1
  6764  03EE  0860               	movf	main@end,w
  6765  03EF  00F8               	movwf	Insert@index
  6766  03F0  308C               	movlw	140
  6767  03F1  00FA               	movwf	Insert@destLimit
  6768  03F2  3000               	movlw	0
  6769  03F3  00FB               	movwf	Insert@destLimit+1
  6770  03F4  3185  2569  3182   	fcall	_Insert
  6771  03F7  0876               	movf	?_Insert+1,w
  6772  03F8  0140               	movlb	0	; select bank0
  6773  03F9  00EF               	movwf	main@index+1
  6774  03FA  0875               	movf	?_Insert,w
  6775  03FB  00EE               	movwf	main@index
  6776                           
  6777                           ;main.c: 664:             index = InsertString(txdata, checksum, index, 140);
  6778  03FC  3064               	movlw	100
  6779  03FD  00A9               	movwf	InsertString@dest
  6780  03FE  3027               	movlw	39
  6781  03FF  00AA               	movwf	InsertString@dest+1
  6782  0400  30E4               	movlw	low _checksum
  6783  0401  00AB               	movwf	InsertString@src
  6784  0402  3000               	movlw	high _checksum
  6785  0403  00AC               	movwf	InsertString@src+1
  6786  0404  086F               	movf	main@index+1,w
  6787  0405  00AE               	movwf	InsertString@index+1
  6788  0406  086E               	movf	main@index,w
  6789  0407  00AD               	movwf	InsertString@index
  6790  0408  308C               	movlw	140
  6791  0409  00AF               	movwf	InsertString@destLimit
  6792  040A  3000               	movlw	0
  6793  040B  00B0               	movwf	InsertString@destLimit+1
  6794  040C  3187  27AA  3182   	fcall	_InsertString
  6795  040F  0140               	movlb	0	; select bank0
  6796  0410  082A               	movf	?_InsertString+1,w
  6797  0411  00EF               	movwf	main@index+1
  6798  0412  0829               	movf	?_InsertString,w
  6799  0413  00EE               	movwf	main@index
  6800                           
  6801                           ;main.c: 665:             index = Insert(txdata, '\n', index, 140);
  6802  0414  3064               	movlw	100
  6803  0415  00F5               	movwf	Insert@dest
  6804  0416  3027               	movlw	39
  6805  0417  00F6               	movwf	Insert@dest+1
  6806  0418  300A               	movlw	10
  6807  0419  00CB               	movwf	??_main
  6808  041A  084B               	movf	??_main,w
  6809  041B  00F7               	movwf	Insert@src
  6810  041C  086F               	movf	main@index+1,w
  6811  041D  00F9               	movwf	Insert@index+1
  6812  041E  086E               	movf	main@index,w
  6813  041F  00F8               	movwf	Insert@index
  6814  0420  308C               	movlw	140
  6815  0421  00FA               	movwf	Insert@destLimit
  6816  0422  3000               	movlw	0
  6817  0423  00FB               	movwf	Insert@destLimit+1
  6818  0424  3185  2569  3182   	fcall	_Insert
  6819  0427  0876               	movf	?_Insert+1,w
  6820  0428  0140               	movlb	0	; select bank0
  6821  0429  00EF               	movwf	main@index+1
  6822  042A  0875               	movf	?_Insert,w
  6823  042B  00EE               	movwf	main@index
  6824                           
  6825                           ;main.c: 668:             id++;
  6826  042C  3001               	movlw	1
  6827  042D  0141               	movlb	1	; select bank1
  6828  042E  07CC               	addwf	_id^(0+128),f
  6829  042F  3000               	movlw	0
  6830  0430  3DCD               	addwfc	(_id+1)^(0+128),f
  6831  0431  0140               	movlb	0	; select bank0
  6832  0432  1518               	bsf	24,2	;volatile
  6833                           
  6834                           ;main.c: 670:             TransmitString("$$");
  6835  0433  30B1               	movlw	low (STR_9| (0+32768))
  6836  0434  00A3               	movwf	TransmitString@message
  6837  0435  3090               	movlw	high (STR_9| (0+32768))
  6838  0436  00A4               	movwf	TransmitString@message+1
  6839  0437  318D  25E6  3182   	fcall	_TransmitString
  6840                           
  6841                           ;main.c: 671:             TransmitString(txdata);
  6842  043A  3064               	movlw	100
  6843  043B  0140               	movlb	0	; select bank0
  6844  043C  00A3               	movwf	TransmitString@message
  6845  043D  3027               	movlw	39
  6846  043E  00A4               	movwf	TransmitString@message+1
  6847  043F  318D  25E6  3182   	fcall	_TransmitString
  6848  0442  0140               	movlb	0	; select bank0
  6849  0443  1118               	bcf	24,2	;volatile
  6850  0444  2C55               	goto	l826
  6851  0445                     l4744:	
  6852                           
  6853                           ;main.c: 676:         {;main.c: 678:             DebugAlert(400, 200, 3);
  6854  0445  3090               	movlw	144
  6855  0446  0140               	movlb	0	; select bank0
  6856  0447  00A0               	movwf	DebugAlert@delay_high
  6857  0448  3001               	movlw	1
  6858  0449  00A1               	movwf	DebugAlert@delay_high+1
  6859  044A  30C8               	movlw	200
  6860  044B  00A2               	movwf	DebugAlert@delay_low
  6861  044C  3000               	movlw	0
  6862  044D  00A3               	movwf	DebugAlert@delay_low+1
  6863  044E  3003               	movlw	3
  6864  044F  00CB               	movwf	??_main
  6865  0450  084B               	movf	??_main,w
  6866  0451  00A4               	movwf	DebugAlert@num_flashes
  6867  0452  318D  2565  3182   	fcall	_DebugAlert
  6868  0455                     l826:	
  6869                           ;main.c: 679:         }
  6870                           
  6871                           
  6872                           ;main.c: 681:         Sleep(5000);
  6873  0455  3000               	movlw	0
  6874  0456  00F3               	movwf	Sleep@ms+3
  6875  0457  3000               	movlw	0
  6876  0458  00F2               	movwf	Sleep@ms+2
  6877  0459  3013               	movlw	19
  6878  045A  00F1               	movwf	Sleep@ms+1
  6879  045B  3088               	movlw	136
  6880  045C  00F0               	movwf	Sleep@ms
  6881  045D  318D  258F  3182   	fcall	_Sleep
  6882  0460  2A7B               	goto	l4686
  6883  0461                     __end_of_main:	
  6884                           
  6885                           	psect	text1
  6886  0CA2                     __ptext1:	
  6887 ;; *************** function _crc16 *****************
  6888 ;; Defined at:
  6889 ;;		line 22 in file "rtty.c"
  6890 ;; Parameters:    Size  Location     Type
  6891 ;;  data            2    1[BANK0 ] PTR unsigned char 
  6892 ;;		 -> txdata(140), 
  6893 ;; Auto vars:     Size  Location     Type
  6894 ;;  crc             2    3[BANK0 ] unsigned short 
  6895 ;; Return value:  Size  Location     Type
  6896 ;;                  2    1[BANK0 ] unsigned short 
  6897 ;; Registers used:
  6898 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6899 ;; Tracked objects:
  6900 ;;		On entry : 0/0
  6901 ;;		On exit  : 0/0
  6902 ;;		Unchanged: 0/0
  6903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6904 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6905 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6907 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6908 ;;Total ram usage:        4 bytes
  6909 ;; Hardware stack levels used:    1
  6910 ;; Hardware stack levels required when called:    4
  6911 ;; This function calls:
  6912 ;;		_crc16_update
  6913 ;;		_strlen
  6914 ;; This function is called by:
  6915 ;;		_main
  6916 ;; This function uses a non-reentrant model
  6917 ;;
  6918                           
  6919                           
  6920                           ;psect for function _crc16
  6921  0CA2                     _crc16:	
  6922                           
  6923                           ;rtty.c: 22: uint16_t crc16(char* data);rtty.c: 23: {;rtty.c: 24:     uint16_t crc = 0xF
      +                          FFF;
  6924                           
  6925                           ;incstack = 0
  6926                           ; Regs used in _crc16: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6927  0CA2  30FF               	movlw	255
  6928  0CA3  0140               	movlb	0	; select bank0
  6929  0CA4  00A3               	movwf	crc16@crc
  6930  0CA5  30FF               	movlw	255
  6931  0CA6  00A4               	movwf	crc16@crc+1
  6932                           
  6933                           ;rtty.c: 25:     crc = crc16_update(data, strlen(data), crc);
  6934  0CA7  0822               	movf	crc16@data+1,w
  6935  0CA8  00F6               	movwf	crc16_update@pData+1
  6936  0CA9  0821               	movf	crc16@data,w
  6937  0CAA  00F5               	movwf	crc16_update@pData
  6938  0CAB  0822               	movf	crc16@data+1,w
  6939  0CAC  00F1               	movwf	strlen@s+1
  6940  0CAD  0821               	movf	crc16@data,w
  6941  0CAE  00F0               	movwf	strlen@s
  6942  0CAF  318B  23FD  318C   	fcall	_strlen
  6943  0CB2  0871               	movf	?_strlen+1,w
  6944  0CB3  00F8               	movwf	crc16_update@length+1
  6945  0CB4  0870               	movf	?_strlen,w
  6946  0CB5  00F7               	movwf	crc16_update@length
  6947  0CB6  0140               	movlb	0	; select bank0
  6948  0CB7  0824               	movf	crc16@crc+1,w
  6949  0CB8  00FA               	movwf	crc16_update@wCrc+1
  6950  0CB9  0823               	movf	crc16@crc,w
  6951  0CBA  00F9               	movwf	crc16_update@wCrc
  6952  0CBB  318E  269F         	fcall	_crc16_update
  6953  0CBD  0876               	movf	?_crc16_update+1,w
  6954  0CBE  0140               	movlb	0	; select bank0
  6955  0CBF  00A4               	movwf	crc16@crc+1
  6956  0CC0  0875               	movf	?_crc16_update,w
  6957  0CC1  00A3               	movwf	crc16@crc
  6958                           
  6959                           ;rtty.c: 26:     return crc & 0xFFFF;
  6960  0CC2  0824               	movf	crc16@crc+1,w
  6961  0CC3  00A2               	movwf	?_crc16+1
  6962  0CC4  0823               	movf	crc16@crc,w
  6963  0CC5  00A1               	movwf	?_crc16
  6964  0CC6  0008               	return
  6965  0CC7                     __end_of_crc16:	
  6966                           
  6967                           	psect	text2
  6968  0E9F                     __ptext2:	
  6969 ;; *************** function _crc16_update *****************
  6970 ;; Defined at:
  6971 ;;		line 11 in file "rtty.c"
  6972 ;; Parameters:    Size  Location     Type
  6973 ;;  pData           2    5[COMMON] PTR unsigned char 
  6974 ;;		 -> txdata(140), 
  6975 ;;  length          2    7[COMMON] int 
  6976 ;;  wCrc            2    9[COMMON] unsigned short 
  6977 ;; Auto vars:     Size  Location     Type
  6978 ;;  i               1    0[BANK0 ] unsigned char 
  6979 ;; Return value:  Size  Location     Type
  6980 ;;                  2    5[COMMON] unsigned short 
  6981 ;; Registers used:
  6982 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6983 ;; Tracked objects:
  6984 ;;		On entry : 0/0
  6985 ;;		On exit  : 0/0
  6986 ;;		Unchanged: 0/0
  6987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6988 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6989 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6990 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6991 ;;      Totals:         9       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6992 ;;Total ram usage:       10 bytes
  6993 ;; Hardware stack levels used:    1
  6994 ;; Hardware stack levels required when called:    3
  6995 ;; This function calls:
  6996 ;;		Nothing
  6997 ;; This function is called by:
  6998 ;;		_crc16
  6999 ;; This function uses a non-reentrant model
  7000 ;;
  7001                           
  7002                           
  7003                           ;psect for function _crc16_update
  7004  0E9F                     _crc16_update:	
  7005  0E9F                     l3860:	
  7006                           ;rtty.c: 11: uint16_t crc16_update(char* pData, int length, uint16_t wCrc);rtty.c: 12: {
      +                          ;rtty.c: 13:     uint8_t i;;rtty.c: 14:     while (length--) {
  7007                           
  7008                           ;incstack = 0
  7009                           ; Regs used in _crc16_update: [wreg+fsr1l+fsr1h+status,2+status,0]
  7010                           
  7011                           
  7012                           ;rtty.c: 14:     while (length--) {
  7013  0E9F  30FF               	movlw	255
  7014  0EA0  07F7               	addwf	crc16_update@length,f
  7015  0EA1  30FF               	movlw	255
  7016  0EA2  3DF8               	addwfc	crc16_update@length+1,f
  7017  0EA3  0A77               	incf	crc16_update@length,w
  7018  0EA4  1903               	btfsc	3,2
  7019  0EA5  0A78               	incf	crc16_update@length+1,w
  7020  0EA6  1903               	btfsc	3,2
  7021  0EA7  2ED7               	goto	l3862
  7022                           
  7023                           ;rtty.c: 15:         wCrc ^= *(unsigned char *)pData++ << 8;
  7024  0EA8  0875               	movf	crc16_update@pData,w
  7025  0EA9  0086               	movwf	6
  7026  0EAA  0876               	movf	crc16_update@pData+1,w
  7027  0EAB  0087               	movwf	7
  7028  0EAC  0801               	movf	1,w
  7029  0EAD  00FB               	movwf	??_crc16_update
  7030  0EAE  01FC               	clrf	??_crc16_update+1
  7031  0EAF  087B               	movf	??_crc16_update,w
  7032  0EB0  00FC               	movwf	??_crc16_update+1
  7033  0EB1  01FB               	clrf	??_crc16_update
  7034  0EB2  087B               	movf	??_crc16_update,w
  7035  0EB3  06F9               	xorwf	crc16_update@wCrc,f
  7036  0EB4  087C               	movf	??_crc16_update+1,w
  7037  0EB5  06FA               	xorwf	crc16_update@wCrc+1,f
  7038  0EB6  3001               	movlw	1
  7039  0EB7  07F5               	addwf	crc16_update@pData,f
  7040  0EB8  3000               	movlw	0
  7041  0EB9  3DF6               	addwfc	crc16_update@pData+1,f
  7042                           
  7043                           ;rtty.c: 16:         for (i=0; i < 8; i++)
  7044  0EBA  0140               	movlb	0	; select bank0
  7045  0EBB  01A0               	clrf	crc16_update@i
  7046  0EBC                     l842:	
  7047                           
  7048                           ;rtty.c: 17:             wCrc = wCrc & 0x8000 ? (wCrc << 1) ^ 0x1021 : wCrc << 1;
  7049  0EBC  1BFA               	btfsc	crc16_update@wCrc+1,7
  7050  0EBD  2EC2               	goto	l3856
  7051  0EBE  3579               	lslf	crc16_update@wCrc,w
  7052  0EBF  00F9               	movwf	crc16_update@wCrc
  7053  0EC0  0D7A               	rlf	crc16_update@wCrc+1,w
  7054  0EC1  2ECD               	goto	L1
  7055  0EC2                     l3856:	
  7056  0EC2  087A               	movf	crc16_update@wCrc+1,w
  7057  0EC3  00FC               	movwf	??_crc16_update+1
  7058  0EC4  0879               	movf	crc16_update@wCrc,w
  7059  0EC5  00FB               	movwf	??_crc16_update
  7060  0EC6  35FB               	lslf	??_crc16_update,f
  7061  0EC7  0DFC               	rlf	??_crc16_update+1,f
  7062  0EC8  3021               	movlw	33
  7063  0EC9  067B               	xorwf	??_crc16_update,w
  7064  0ECA  00F9               	movwf	crc16_update@wCrc
  7065  0ECB  3010               	movlw	16
  7066  0ECC  067C               	xorwf	??_crc16_update+1,w
  7067  0ECD                     L1:	
  7068  0ECD  00FA               	movwf	crc16_update@wCrc+1
  7069  0ECE  3001               	movlw	1
  7070  0ECF  00FB               	movwf	??_crc16_update
  7071  0ED0  087B               	movf	??_crc16_update,w
  7072  0ED1  07A0               	addwf	crc16_update@i,f
  7073  0ED2  3008               	movlw	8
  7074  0ED3  0220               	subwf	crc16_update@i,w
  7075  0ED4  1803               	btfsc	3,0
  7076  0ED5  2E9F               	goto	l3860
  7077  0ED6  2EBC               	goto	l842
  7078  0ED7                     l3862:	
  7079                           
  7080                           ;rtty.c: 19:     return wCrc;
  7081  0ED7  087A               	movf	crc16_update@wCrc+1,w
  7082  0ED8  00F6               	movwf	?_crc16_update+1
  7083  0ED9  0879               	movf	crc16_update@wCrc,w
  7084  0EDA  00F5               	movwf	?_crc16_update
  7085  0EDB  0008               	return
  7086  0EDC                     __end_of_crc16_update:	
  7087                           
  7088                           	psect	text3
  7089  0705                     __ptext3:	
  7090 ;; *************** function _UIntToString *****************
  7091 ;; Defined at:
  7092 ;;		line 207 in file "main.c"
  7093 ;; Parameters:    Size  Location     Type
  7094 ;;  n               4    9[BANK0 ] unsigned long 
  7095 ;;  dest            1   13[BANK0 ] PTR unsigned char 
  7096 ;;		 -> main@convertedNumber(16), 
  7097 ;; Auto vars:     Size  Location     Type
  7098 ;;  i               2   16[BANK0 ] int 
  7099 ;; Return value:  Size  Location     Type
  7100 ;;                  1    wreg      void 
  7101 ;; Registers used:
  7102 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7103 ;; Tracked objects:
  7104 ;;		On entry : 0/0
  7105 ;;		On exit  : 0/0
  7106 ;;		Unchanged: 0/0
  7107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7108 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7109 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7110 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7111 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7112 ;;Total ram usage:        9 bytes
  7113 ;; Hardware stack levels used:    1
  7114 ;; Hardware stack levels required when called:    5
  7115 ;; This function calls:
  7116 ;;		_ReverseString
  7117 ;;		___lldiv
  7118 ;;		___llmod
  7119 ;; This function is called by:
  7120 ;;		_main
  7121 ;; This function uses a non-reentrant model
  7122 ;;
  7123                           
  7124                           
  7125                           ;psect for function _UIntToString
  7126  0705                     _UIntToString:	
  7127                           
  7128                           ;main.c: 207: void UIntToString(uint32_t n, char* dest);main.c: 208: {;main.c: 209:     
      +                          int i = 0;
  7129                           
  7130                           ;incstack = 0
  7131                           ; Regs used in _UIntToString: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7132  0705  0140               	movlb	0	; select bank0
  7133  0706  01B0               	clrf	UIntToString@i
  7134  0707  01B1               	clrf	UIntToString@i+1
  7135  0708                     l4168:	
  7136                           
  7137                           ;main.c: 214:         dest[i++] = n % 10 + '0';
  7138  0708  3000               	movlw	0
  7139  0709  00F3               	movwf	___llmod@divisor+3
  7140  070A  3000               	movlw	0
  7141  070B  00F2               	movwf	___llmod@divisor+2
  7142  070C  3000               	movlw	0
  7143  070D  00F1               	movwf	___llmod@divisor+1
  7144  070E  300A               	movlw	10
  7145  070F  00F0               	movwf	___llmod@divisor
  7146  0710  082C               	movf	UIntToString@n+3,w
  7147  0711  00F7               	movwf	___llmod@dividend+3
  7148  0712  082B               	movf	UIntToString@n+2,w
  7149  0713  00F6               	movwf	___llmod@dividend+2
  7150  0714  082A               	movf	UIntToString@n+1,w
  7151  0715  00F5               	movwf	___llmod@dividend+1
  7152  0716  0829               	movf	UIntToString@n,w
  7153  0717  00F4               	movwf	___llmod@dividend
  7154  0718  318E  26DC  3187   	fcall	___llmod
  7155  071B  0870               	movf	?___llmod,w
  7156  071C  3E30               	addlw	48
  7157  071D  0140               	movlb	0	; select bank0
  7158  071E  00AE               	movwf	??_UIntToString
  7159  071F  0830               	movf	UIntToString@i,w
  7160  0720  072D               	addwf	UIntToString@dest,w
  7161  0721  00AF               	movwf	??_UIntToString+1
  7162  0722  082F               	movf	??_UIntToString+1,w
  7163  0723  0086               	movwf	6
  7164  0724  0187               	clrf	7
  7165  0725  082E               	movf	??_UIntToString,w
  7166  0726  0081               	movwf	1
  7167  0727  3001               	movlw	1
  7168  0728  07B0               	addwf	UIntToString@i,f
  7169  0729  3000               	movlw	0
  7170  072A  3DB1               	addwfc	UIntToString@i+1,f
  7171                           
  7172                           ;main.c: 216:     } while ((n /= 10) > 0);
  7173  072B  3000               	movlw	0
  7174  072C  00F3               	movwf	___lldiv@divisor+3
  7175  072D  3000               	movlw	0
  7176  072E  00F2               	movwf	___lldiv@divisor+2
  7177  072F  3000               	movlw	0
  7178  0730  00F1               	movwf	___lldiv@divisor+1
  7179  0731  300A               	movlw	10
  7180  0732  00F0               	movwf	___lldiv@divisor
  7181  0733  082C               	movf	UIntToString@n+3,w
  7182  0734  00F7               	movwf	___lldiv@dividend+3
  7183  0735  082B               	movf	UIntToString@n+2,w
  7184  0736  00F6               	movwf	___lldiv@dividend+2
  7185  0737  082A               	movf	UIntToString@n+1,w
  7186  0738  00F5               	movwf	___lldiv@dividend+1
  7187  0739  0829               	movf	UIntToString@n,w
  7188  073A  00F4               	movwf	___lldiv@dividend
  7189  073B  3187  2758  3187   	fcall	___lldiv
  7190  073E  0873               	movf	?___lldiv+3,w
  7191  073F  0140               	movlb	0	; select bank0
  7192  0740  00AC               	movwf	UIntToString@n+3
  7193  0741  0872               	movf	?___lldiv+2,w
  7194  0742  00AB               	movwf	UIntToString@n+2
  7195  0743  0871               	movf	?___lldiv+1,w
  7196  0744  00AA               	movwf	UIntToString@n+1
  7197  0745  0870               	movf	?___lldiv,w
  7198  0746  00A9               	movwf	UIntToString@n
  7199  0747  082C               	movf	UIntToString@n+3,w
  7200  0748  042B               	iorwf	UIntToString@n+2,w
  7201  0749  042A               	iorwf	UIntToString@n+1,w
  7202  074A  0429               	iorwf	UIntToString@n,w
  7203  074B  1D03               	skipz
  7204  074C  2F08               	goto	l4168
  7205                           
  7206                           ;main.c: 217:     dest[i] = '\0';
  7207  074D  0830               	movf	UIntToString@i,w
  7208  074E  072D               	addwf	UIntToString@dest,w
  7209  074F  00AE               	movwf	??_UIntToString
  7210  0750  082E               	movf	??_UIntToString,w
  7211  0751  0086               	movwf	6
  7212  0752  0187               	clrf	7
  7213  0753  0181               	clrf	1
  7214                           
  7215                           ;main.c: 219:     ReverseString(dest);
  7216  0754  082D               	movf	UIntToString@dest,w
  7217  0755  3186  26A5         	fcall	_ReverseString
  7218  0757  0008               	return
  7219  0758                     __end_of_UIntToString:	
  7220                           
  7221                           	psect	text4
  7222  0EDC                     __ptext4:	
  7223 ;; *************** function ___llmod *****************
  7224 ;; Defined at:
  7225 ;;		line 5 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\llmod.c"
  7226 ;; Parameters:    Size  Location     Type
  7227 ;;  divisor         4    0[COMMON] unsigned long 
  7228 ;;  dividend        4    4[COMMON] unsigned long 
  7229 ;; Auto vars:     Size  Location     Type
  7230 ;;  counter         1    9[COMMON] unsigned char 
  7231 ;; Return value:  Size  Location     Type
  7232 ;;                  4    0[COMMON] unsigned long 
  7233 ;; Registers used:
  7234 ;;		wreg, status,2, status,0
  7235 ;; Tracked objects:
  7236 ;;		On entry : 0/0
  7237 ;;		On exit  : 0/0
  7238 ;;		Unchanged: 0/0
  7239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7240 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7241 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7242 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7243 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7244 ;;Total ram usage:       10 bytes
  7245 ;; Hardware stack levels used:    1
  7246 ;; Hardware stack levels required when called:    3
  7247 ;; This function calls:
  7248 ;;		Nothing
  7249 ;; This function is called by:
  7250 ;;		_UIntToString
  7251 ;; This function uses a non-reentrant model
  7252 ;;
  7253                           
  7254                           
  7255                           ;psect for function ___llmod
  7256  0EDC                     ___llmod:	
  7257                           
  7258                           ;incstack = 0
  7259                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  7260  0EDC  0873               	movf	___llmod@divisor+3,w
  7261  0EDD  0472               	iorwf	___llmod@divisor+2,w
  7262  0EDE  0471               	iorwf	___llmod@divisor+1,w
  7263  0EDF  0470               	iorwf	___llmod@divisor,w
  7264  0EE0  1903               	skipnz
  7265  0EE1  2F15               	goto	l3962
  7266  0EE2  01F9               	clrf	___llmod@counter
  7267  0EE3  0AF9               	incf	___llmod@counter,f
  7268  0EE4                     l3952:	
  7269  0EE4  1BF3               	btfsc	___llmod@divisor+3,7
  7270  0EE5  2EF2               	goto	l3954
  7271  0EE6  3001               	movlw	1
  7272  0EE7                     u3285:	
  7273  0EE7  35F0               	lslf	___llmod@divisor,f
  7274  0EE8  0DF1               	rlf	___llmod@divisor+1,f
  7275  0EE9  0DF2               	rlf	___llmod@divisor+2,f
  7276  0EEA  0DF3               	rlf	___llmod@divisor+3,f
  7277  0EEB  0B89               	decfsz	9,f
  7278  0EEC  2EE7               	goto	u3285
  7279  0EED  3001               	movlw	1
  7280  0EEE  00F8               	movwf	??___llmod
  7281  0EEF  0878               	movf	??___llmod,w
  7282  0EF0  07F9               	addwf	___llmod@counter,f
  7283  0EF1  2EE4               	goto	l3952
  7284  0EF2                     l3954:	
  7285  0EF2  0873               	movf	___llmod@divisor+3,w
  7286  0EF3  0277               	subwf	___llmod@dividend+3,w
  7287  0EF4  1D03               	skipz
  7288  0EF5  2F00               	goto	u3305
  7289  0EF6  0872               	movf	___llmod@divisor+2,w
  7290  0EF7  0276               	subwf	___llmod@dividend+2,w
  7291  0EF8  1D03               	skipz
  7292  0EF9  2F00               	goto	u3305
  7293  0EFA  0871               	movf	___llmod@divisor+1,w
  7294  0EFB  0275               	subwf	___llmod@dividend+1,w
  7295  0EFC  1D03               	skipz
  7296  0EFD  2F00               	goto	u3305
  7297  0EFE  0870               	movf	___llmod@divisor,w
  7298  0EFF  0274               	subwf	___llmod@dividend,w
  7299  0F00                     u3305:	
  7300  0F00  1C03               	skipc
  7301  0F01  2F0A               	goto	l3958
  7302  0F02  0870               	movf	___llmod@divisor,w
  7303  0F03  02F4               	subwf	___llmod@dividend,f
  7304  0F04  0871               	movf	___llmod@divisor+1,w
  7305  0F05  3BF5               	subwfb	___llmod@dividend+1,f
  7306  0F06  0872               	movf	___llmod@divisor+2,w
  7307  0F07  3BF6               	subwfb	___llmod@dividend+2,f
  7308  0F08  0873               	movf	___llmod@divisor+3,w
  7309  0F09  3BF7               	subwfb	___llmod@dividend+3,f
  7310  0F0A                     l3958:	
  7311  0F0A  3001               	movlw	1
  7312  0F0B                     u3315:	
  7313  0F0B  36F3               	lsrf	___llmod@divisor+3,f
  7314  0F0C  0CF2               	rrf	___llmod@divisor+2,f
  7315  0F0D  0CF1               	rrf	___llmod@divisor+1,f
  7316  0F0E  0CF0               	rrf	___llmod@divisor,f
  7317  0F0F  0B89               	decfsz	9,f
  7318  0F10  2F0B               	goto	u3315
  7319  0F11  3001               	movlw	1
  7320  0F12  02F9               	subwf	___llmod@counter,f
  7321  0F13  1D03               	btfss	3,2
  7322  0F14  2EF2               	goto	l3954
  7323  0F15                     l3962:	
  7324  0F15  0877               	movf	___llmod@dividend+3,w
  7325  0F16  00F3               	movwf	?___llmod+3
  7326  0F17  0876               	movf	___llmod@dividend+2,w
  7327  0F18  00F2               	movwf	?___llmod+2
  7328  0F19  0875               	movf	___llmod@dividend+1,w
  7329  0F1A  00F1               	movwf	?___llmod+1
  7330  0F1B  0874               	movf	___llmod@dividend,w
  7331  0F1C  00F0               	movwf	?___llmod
  7332  0F1D  0008               	return
  7333  0F1E                     __end_of___llmod:	
  7334                           
  7335                           	psect	text5
  7336  0758                     __ptext5:	
  7337 ;; *************** function ___lldiv *****************
  7338 ;; Defined at:
  7339 ;;		line 5 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\__lldiv.c"
  7340 ;; Parameters:    Size  Location     Type
  7341 ;;  divisor         4    0[COMMON] unsigned long 
  7342 ;;  dividend        4    4[COMMON] unsigned long 
  7343 ;; Auto vars:     Size  Location     Type
  7344 ;;  quotient        4    9[COMMON] unsigned long 
  7345 ;;  counter         1   13[COMMON] unsigned char 
  7346 ;; Return value:  Size  Location     Type
  7347 ;;                  4    0[COMMON] unsigned long 
  7348 ;; Registers used:
  7349 ;;		wreg, status,2, status,0
  7350 ;; Tracked objects:
  7351 ;;		On entry : 0/0
  7352 ;;		On exit  : 0/0
  7353 ;;		Unchanged: 0/0
  7354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7355 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7356 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7357 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7358 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7359 ;;Total ram usage:       14 bytes
  7360 ;; Hardware stack levels used:    1
  7361 ;; Hardware stack levels required when called:    3
  7362 ;; This function calls:
  7363 ;;		Nothing
  7364 ;; This function is called by:
  7365 ;;		_UIntToString
  7366 ;;		_compensate_pressure
  7367 ;; This function uses a non-reentrant model
  7368 ;;
  7369                           
  7370                           
  7371                           ;psect for function ___lldiv
  7372  0758                     ___lldiv:	
  7373                           
  7374                           ;incstack = 0
  7375                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  7376  0758  3000               	movlw	0
  7377  0759  00FC               	movwf	___lldiv@quotient+3
  7378  075A  3000               	movlw	0
  7379  075B  00FB               	movwf	___lldiv@quotient+2
  7380  075C  3000               	movlw	0
  7381  075D  00FA               	movwf	___lldiv@quotient+1
  7382  075E  3000               	movlw	0
  7383  075F  00F9               	movwf	___lldiv@quotient
  7384  0760  0873               	movf	___lldiv@divisor+3,w
  7385  0761  0472               	iorwf	___lldiv@divisor+2,w
  7386  0762  0471               	iorwf	___lldiv@divisor+1,w
  7387  0763  0470               	iorwf	___lldiv@divisor,w
  7388  0764  1903               	skipnz
  7389  0765  2FA1               	goto	l3904
  7390  0766  01FD               	clrf	___lldiv@counter
  7391  0767  0AFD               	incf	___lldiv@counter,f
  7392  0768                     l3890:	
  7393  0768  1BF3               	btfsc	___lldiv@divisor+3,7
  7394  0769  2F76               	goto	l3892
  7395  076A  3001               	movlw	1
  7396  076B                     u3125:	
  7397  076B  35F0               	lslf	___lldiv@divisor,f
  7398  076C  0DF1               	rlf	___lldiv@divisor+1,f
  7399  076D  0DF2               	rlf	___lldiv@divisor+2,f
  7400  076E  0DF3               	rlf	___lldiv@divisor+3,f
  7401  076F  0B89               	decfsz	9,f
  7402  0770  2F6B               	goto	u3125
  7403  0771  3001               	movlw	1
  7404  0772  00F8               	movwf	??___lldiv
  7405  0773  0878               	movf	??___lldiv,w
  7406  0774  07FD               	addwf	___lldiv@counter,f
  7407  0775  2F68               	goto	l3890
  7408  0776                     l3892:	
  7409  0776  3001               	movlw	1
  7410  0777                     u3145:	
  7411  0777  35F9               	lslf	___lldiv@quotient,f
  7412  0778  0DFA               	rlf	___lldiv@quotient+1,f
  7413  0779  0DFB               	rlf	___lldiv@quotient+2,f
  7414  077A  0DFC               	rlf	___lldiv@quotient+3,f
  7415  077B  0B89               	decfsz	9,f
  7416  077C  2F77               	goto	u3145
  7417  077D  0873               	movf	___lldiv@divisor+3,w
  7418  077E  0277               	subwf	___lldiv@dividend+3,w
  7419  077F  1D03               	skipz
  7420  0780  2F8B               	goto	u3155
  7421  0781  0872               	movf	___lldiv@divisor+2,w
  7422  0782  0276               	subwf	___lldiv@dividend+2,w
  7423  0783  1D03               	skipz
  7424  0784  2F8B               	goto	u3155
  7425  0785  0871               	movf	___lldiv@divisor+1,w
  7426  0786  0275               	subwf	___lldiv@dividend+1,w
  7427  0787  1D03               	skipz
  7428  0788  2F8B               	goto	u3155
  7429  0789  0870               	movf	___lldiv@divisor,w
  7430  078A  0274               	subwf	___lldiv@dividend,w
  7431  078B                     u3155:	
  7432  078B  1C03               	skipc
  7433  078C  2F96               	goto	l3900
  7434  078D  0870               	movf	___lldiv@divisor,w
  7435  078E  02F4               	subwf	___lldiv@dividend,f
  7436  078F  0871               	movf	___lldiv@divisor+1,w
  7437  0790  3BF5               	subwfb	___lldiv@dividend+1,f
  7438  0791  0872               	movf	___lldiv@divisor+2,w
  7439  0792  3BF6               	subwfb	___lldiv@dividend+2,f
  7440  0793  0873               	movf	___lldiv@divisor+3,w
  7441  0794  3BF7               	subwfb	___lldiv@dividend+3,f
  7442  0795  1479               	bsf	___lldiv@quotient,0
  7443  0796                     l3900:	
  7444  0796  3001               	movlw	1
  7445  0797                     u3165:	
  7446  0797  36F3               	lsrf	___lldiv@divisor+3,f
  7447  0798  0CF2               	rrf	___lldiv@divisor+2,f
  7448  0799  0CF1               	rrf	___lldiv@divisor+1,f
  7449  079A  0CF0               	rrf	___lldiv@divisor,f
  7450  079B  0B89               	decfsz	9,f
  7451  079C  2F97               	goto	u3165
  7452  079D  3001               	movlw	1
  7453  079E  02FD               	subwf	___lldiv@counter,f
  7454  079F  1D03               	btfss	3,2
  7455  07A0  2F76               	goto	l3892
  7456  07A1                     l3904:	
  7457  07A1  087C               	movf	___lldiv@quotient+3,w
  7458  07A2  00F3               	movwf	?___lldiv+3
  7459  07A3  087B               	movf	___lldiv@quotient+2,w
  7460  07A4  00F2               	movwf	?___lldiv+2
  7461  07A5  087A               	movf	___lldiv@quotient+1,w
  7462  07A6  00F1               	movwf	?___lldiv+1
  7463  07A7  0879               	movf	___lldiv@quotient,w
  7464  07A8  00F0               	movwf	?___lldiv
  7465  07A9  0008               	return
  7466  07AA                     __end_of___lldiv:	
  7467                           
  7468                           	psect	text6
  7469  04F3                     __ptext6:	
  7470 ;; *************** function _UIntToHexString *****************
  7471 ;; Defined at:
  7472 ;;		line 138 in file "main.c"
  7473 ;; Parameters:    Size  Location     Type
  7474 ;;  n               4    9[BANK0 ] unsigned long 
  7475 ;;  dest            1   13[BANK0 ] PTR unsigned char 
  7476 ;;		 -> checksum(6), 
  7477 ;; Auto vars:     Size  Location     Type
  7478 ;;  remainder       4   20[BANK0 ] unsigned long 
  7479 ;;  i               4   24[BANK0 ] unsigned long 
  7480 ;; Return value:  Size  Location     Type
  7481 ;;                  1    wreg      void 
  7482 ;; Registers used:
  7483 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7484 ;; Tracked objects:
  7485 ;;		On entry : 0/0
  7486 ;;		On exit  : 0/0
  7487 ;;		Unchanged: 0/0
  7488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7489 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7490 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7491 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7492 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7493 ;;Total ram usage:       19 bytes
  7494 ;; Hardware stack levels used:    1
  7495 ;; Hardware stack levels required when called:    5
  7496 ;; This function calls:
  7497 ;;		_ReverseString
  7498 ;; This function is called by:
  7499 ;;		_main
  7500 ;; This function uses a non-reentrant model
  7501 ;;
  7502                           
  7503                           
  7504                           ;psect for function _UIntToHexString
  7505  04F3                     _UIntToHexString:	
  7506                           
  7507                           ;main.c: 138: void UIntToHexString(uint32_t n, char* dest);main.c: 139: {;main.c: 140:  
      +                             uint32_t i = 0;
  7508                           
  7509                           ;incstack = 0
  7510                           ; Regs used in _UIntToHexString: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7511  04F3  3000               	movlw	0
  7512  04F4  0140               	movlb	0	; select bank0
  7513  04F5  00BB               	movwf	UIntToHexString@i+3
  7514  04F6  3000               	movlw	0
  7515  04F7  00BA               	movwf	UIntToHexString@i+2
  7516  04F8  3000               	movlw	0
  7517  04F9  00B9               	movwf	UIntToHexString@i+1
  7518  04FA  3000               	movlw	0
  7519  04FB  00B8               	movwf	UIntToHexString@i
  7520  04FC                     l677:	
  7521                           ;main.c: 141:     do {
  7522                           
  7523                           
  7524                           ;main.c: 144:         uint32_t remainder = n % 16;
  7525  04FC  300F               	movlw	15
  7526  04FD  0529               	andwf	UIntToHexString@n,w
  7527  04FE  00B4               	movwf	UIntToHexString@remainder
  7528  04FF  3000               	movlw	0
  7529  0500  052A               	andwf	UIntToHexString@n+1,w
  7530  0501  00B5               	movwf	UIntToHexString@remainder+1
  7531  0502  3000               	movlw	0
  7532  0503  052B               	andwf	UIntToHexString@n+2,w
  7533  0504  00B6               	movwf	UIntToHexString@remainder+2
  7534  0505  3000               	movlw	0
  7535  0506  052C               	andwf	UIntToHexString@n+3,w
  7536  0507  00B7               	movwf	UIntToHexString@remainder+3
  7537                           
  7538                           ;main.c: 146:         dest[i++] = remainder + (remainder >= 10 ? 55 : '0');
  7539  0508  0837               	movf	UIntToHexString@remainder+3,w
  7540  0509  1D03               	btfss	3,2
  7541  050A  2D1D               	goto	l4126
  7542  050B  0836               	movf	UIntToHexString@remainder+2,w
  7543  050C  1D03               	btfss	3,2
  7544  050D  2D1D               	goto	l4126
  7545  050E  0835               	movf	UIntToHexString@remainder+1,w
  7546  050F  1D03               	btfss	3,2
  7547  0510  2D1D               	goto	l4126
  7548  0511  300A               	movlw	10
  7549  0512  0234               	subwf	UIntToHexString@remainder,w
  7550  0513  1803               	btfsc	3,0
  7551  0514  2D1D               	goto	l4126
  7552  0515  3000               	movlw	0
  7553  0516  00B3               	movwf	_UIntToHexString$1752+3
  7554  0517  3000               	movlw	0
  7555  0518  00B2               	movwf	_UIntToHexString$1752+2
  7556  0519  3000               	movlw	0
  7557  051A  00B1               	movwf	_UIntToHexString$1752+1
  7558  051B  3030               	movlw	48
  7559  051C  2D24               	goto	L2
  7560  051D                     l4126:	
  7561  051D  3000               	movlw	0
  7562  051E  00B3               	movwf	_UIntToHexString$1752+3
  7563  051F  3000               	movlw	0
  7564  0520  00B2               	movwf	_UIntToHexString$1752+2
  7565  0521  3000               	movlw	0
  7566  0522  00B1               	movwf	_UIntToHexString$1752+1
  7567  0523  3037               	movlw	55
  7568  0524                     L2:	
  7569  0524  00B0               	movwf	_UIntToHexString$1752
  7570  0525  0830               	movf	_UIntToHexString$1752,w
  7571  0526  0734               	addwf	UIntToHexString@remainder,w
  7572  0527  00AE               	movwf	??_UIntToHexString
  7573  0528  0838               	movf	UIntToHexString@i,w
  7574  0529  072D               	addwf	UIntToHexString@dest,w
  7575  052A  00AF               	movwf	??_UIntToHexString+1
  7576  052B  082F               	movf	??_UIntToHexString+1,w
  7577  052C  0086               	movwf	6
  7578  052D  0187               	clrf	7
  7579  052E  082E               	movf	??_UIntToHexString,w
  7580  052F  0081               	movwf	1
  7581  0530  3001               	movlw	1
  7582  0531  07B8               	addwf	UIntToHexString@i,f
  7583  0532  3000               	movlw	0
  7584  0533  3DB9               	addwfc	UIntToHexString@i+1,f
  7585  0534  3000               	movlw	0
  7586  0535  3DBA               	addwfc	UIntToHexString@i+2,f
  7587  0536  3000               	movlw	0
  7588  0537  3DBB               	addwfc	UIntToHexString@i+3,f
  7589                           
  7590                           ;main.c: 148:     } while ((n /= 16) > 0);
  7591  0538  3004               	movlw	4
  7592  0539                     u3555:	
  7593  0539  36AC               	lsrf	UIntToHexString@n+3,f
  7594  053A  0CAB               	rrf	UIntToHexString@n+2,f
  7595  053B  0CAA               	rrf	UIntToHexString@n+1,f
  7596  053C  0CA9               	rrf	UIntToHexString@n,f
  7597  053D  0B89               	decfsz	9,f
  7598  053E  2D39               	goto	u3555
  7599  053F  082C               	movf	UIntToHexString@n+3,w
  7600  0540  042B               	iorwf	UIntToHexString@n+2,w
  7601  0541  042A               	iorwf	UIntToHexString@n+1,w
  7602  0542  0429               	iorwf	UIntToHexString@n,w
  7603  0543  1903               	btfsc	3,2
  7604  0544  2D58               	goto	l4138
  7605  0545  2CFC               	goto	l677
  7606  0546                     l4134:	
  7607                           
  7608                           ;main.c: 150:     {;main.c: 151:         dest[i] = '0';
  7609  0546  3030               	movlw	48
  7610  0547  00AE               	movwf	??_UIntToHexString
  7611  0548  0838               	movf	UIntToHexString@i,w
  7612  0549  072D               	addwf	UIntToHexString@dest,w
  7613  054A  00AF               	movwf	??_UIntToHexString+1
  7614  054B  082F               	movf	??_UIntToHexString+1,w
  7615  054C  0086               	movwf	6
  7616  054D  0187               	clrf	7
  7617  054E  082E               	movf	??_UIntToHexString,w
  7618  054F  0081               	movwf	1
  7619                           
  7620                           ;main.c: 152:         i++;
  7621  0550  3001               	movlw	1
  7622  0551  07B8               	addwf	UIntToHexString@i,f
  7623  0552  3000               	movlw	0
  7624  0553  3DB9               	addwfc	UIntToHexString@i+1,f
  7625  0554  3000               	movlw	0
  7626  0555  3DBA               	addwfc	UIntToHexString@i+2,f
  7627  0556  3000               	movlw	0
  7628  0557  3DBB               	addwfc	UIntToHexString@i+3,f
  7629  0558                     l4138:	
  7630                           
  7631                           ;main.c: 149:     while (i < 4)
  7632  0558  083B               	movf	UIntToHexString@i+3,w
  7633  0559  1D03               	btfss	3,2
  7634  055A  2D65               	goto	l4140
  7635  055B  083A               	movf	UIntToHexString@i+2,w
  7636  055C  1D03               	btfss	3,2
  7637  055D  2D65               	goto	l4140
  7638  055E  0839               	movf	UIntToHexString@i+1,w
  7639  055F  1D03               	btfss	3,2
  7640  0560  2D65               	goto	l4140
  7641  0561  3004               	movlw	4
  7642  0562  0238               	subwf	UIntToHexString@i,w
  7643  0563  1C03               	btfss	3,0
  7644  0564  2D46               	goto	l4134
  7645  0565                     l4140:	
  7646                           
  7647                           ;main.c: 154:     ReverseString(dest);
  7648  0565  082D               	movf	UIntToHexString@dest,w
  7649  0566  3186  26A5         	fcall	_ReverseString
  7650  0568  0008               	return
  7651  0569                     __end_of_UIntToHexString:	
  7652                           
  7653                           	psect	text7
  7654  0DE6                     __ptext7:	
  7655 ;; *************** function _TransmitString *****************
  7656 ;; Defined at:
  7657 ;;		line 71 in file "rtty.c"
  7658 ;; Parameters:    Size  Location     Type
  7659 ;;  message         2    3[BANK0 ] PTR unsigned char 
  7660 ;;		 -> STR_9(3), txdata(140), 
  7661 ;; Auto vars:     Size  Location     Type
  7662 ;;  i               2    8[BANK0 ] int 
  7663 ;;  counti          2    6[BANK0 ] int 
  7664 ;; Return value:  Size  Location     Type
  7665 ;;                  1    wreg      void 
  7666 ;; Registers used:
  7667 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7668 ;; Tracked objects:
  7669 ;;		On entry : 0/0
  7670 ;;		On exit  : 0/0
  7671 ;;		Unchanged: 0/0
  7672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7673 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7674 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7675 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7676 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7677 ;;Total ram usage:        7 bytes
  7678 ;; Hardware stack levels used:    1
  7679 ;; Hardware stack levels required when called:    6
  7680 ;; This function calls:
  7681 ;;		_TransmitChar
  7682 ;;		_strlen
  7683 ;; This function is called by:
  7684 ;;		_main
  7685 ;; This function uses a non-reentrant model
  7686 ;;
  7687                           
  7688                           
  7689                           ;psect for function _TransmitString
  7690  0DE6                     _TransmitString:	
  7691                           
  7692                           ;rtty.c: 71: void TransmitString(char* message);rtty.c: 72: {;rtty.c: 76:  for (int i = 
      +                          0, counti = strlen(message); i < counti; i++)
  7693                           
  7694                           ;incstack = 0
  7695                           ; Regs used in _TransmitString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7696  0DE6  0140               	movlb	0	; select bank0
  7697  0DE7  01A8               	clrf	TransmitString@i
  7698  0DE8  01A9               	clrf	TransmitString@i+1
  7699  0DE9  0824               	movf	TransmitString@message+1,w
  7700  0DEA  00F1               	movwf	strlen@s+1
  7701  0DEB  0823               	movf	TransmitString@message,w
  7702  0DEC  00F0               	movwf	strlen@s
  7703  0DED  318B  23FD  318D   	fcall	_strlen
  7704  0DF0  0871               	movf	?_strlen+1,w
  7705  0DF1  0140               	movlb	0	; select bank0
  7706  0DF2  00A7               	movwf	TransmitString@counti+1
  7707  0DF3  0870               	movf	?_strlen,w
  7708  0DF4  00A6               	movwf	TransmitString@counti
  7709  0DF5                     l4296:	
  7710  0DF5  0829               	movf	TransmitString@i+1,w
  7711  0DF6  3A80               	xorlw	128
  7712  0DF7  00A5               	movwf	??_TransmitString
  7713  0DF8  0827               	movf	TransmitString@counti+1,w
  7714  0DF9  3A80               	xorlw	128
  7715  0DFA  0225               	subwf	??_TransmitString,w
  7716  0DFB  1D03               	skipz
  7717  0DFC  2DFF               	goto	u3765
  7718  0DFD  0826               	movf	TransmitString@counti,w
  7719  0DFE  0228               	subwf	TransmitString@i,w
  7720  0DFF                     u3765:	
  7721  0DFF  1803               	btfsc	3,0
  7722  0E00  0008               	return
  7723                           
  7724                           ;rtty.c: 77:  {;rtty.c: 78:   TransmitChar(message[i]);
  7725  0E01  0140               	movlb	0	; select bank0
  7726  0E02  0823               	movf	TransmitString@message,w
  7727  0E03  0728               	addwf	TransmitString@i,w
  7728  0E04  0084               	movwf	4
  7729  0E05  0824               	movf	TransmitString@message+1,w
  7730  0E06  3D29               	addwfc	TransmitString@i+1,w
  7731  0E07  0085               	movwf	5
  7732  0E08  0800               	movf	0,w	;code access
  7733  0E09  318E  266E  318D   	fcall	_TransmitChar
  7734                           
  7735                           ;rtty.c: 79:  }
  7736  0E0C  3001               	movlw	1
  7737  0E0D  0140               	movlb	0	; select bank0
  7738  0E0E  07A8               	addwf	TransmitString@i,f
  7739  0E0F  3000               	movlw	0
  7740  0E10  3DA9               	addwfc	TransmitString@i+1,f
  7741  0E11  2DF5               	goto	l4296
  7742  0E12                     __end_of_TransmitString:	
  7743                           
  7744                           	psect	text8
  7745  0E6E                     __ptext8:	
  7746 ;; *************** function _TransmitChar *****************
  7747 ;; Defined at:
  7748 ;;		line 49 in file "rtty.c"
  7749 ;; Parameters:    Size  Location     Type
  7750 ;;  byte            1    wreg     unsigned char 
  7751 ;; Auto vars:     Size  Location     Type
  7752 ;;  byte            1    0[BANK0 ] unsigned char 
  7753 ;;  i               2    1[BANK0 ] int 
  7754 ;; Return value:  Size  Location     Type
  7755 ;;                  1    wreg      void 
  7756 ;; Registers used:
  7757 ;;		wreg, status,2, status,0, pclath, cstack
  7758 ;; Tracked objects:
  7759 ;;		On entry : 0/0
  7760 ;;		On exit  : 0/0
  7761 ;;		Unchanged: 0/0
  7762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7764 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7765 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7766 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7767 ;;Total ram usage:        4 bytes
  7768 ;; Hardware stack levels used:    1
  7769 ;; Hardware stack levels required when called:    5
  7770 ;; This function calls:
  7771 ;;		_TransmitBit
  7772 ;; This function is called by:
  7773 ;;		_TransmitString
  7774 ;; This function uses a non-reentrant model
  7775 ;;
  7776                           
  7777                           
  7778                           ;psect for function _TransmitChar
  7779  0E6E                     _TransmitChar:	
  7780                           
  7781                           ;incstack = 0
  7782                           ; Regs used in _TransmitChar: [wreg+status,2+status,0+pclath+cstack]
  7783                           ;TransmitChar@byte stored from wreg
  7784  0E6E  0140               	movlb	0	; select bank0
  7785  0E6F  00A0               	movwf	TransmitChar@byte
  7786                           
  7787                           ;rtty.c: 49: void TransmitChar(char byte);rtty.c: 50: {;rtty.c: 60:     TransmitBit(0);
  7788  0E70  3000               	movlw	0
  7789  0E71  318B  23E9  318E   	fcall	_TransmitBit
  7790                           
  7791                           ;rtty.c: 62:  for (int i = 0; i < 7; i++)
  7792  0E74  0140               	movlb	0	; select bank0
  7793  0E75  01A1               	clrf	TransmitChar@i
  7794  0E76  01A2               	clrf	TransmitChar@i+1
  7795  0E77                     l3874:	
  7796                           
  7797                           ;rtty.c: 63:  {;rtty.c: 64:   TransmitBit((byte >> i) & 1);
  7798  0E77  0140               	movlb	0	; select bank0
  7799  0E78  0820               	movf	TransmitChar@byte,w
  7800  0E79  00FD               	movwf	??_TransmitChar
  7801  0E7A  0A21               	incf	TransmitChar@i,w
  7802  0E7B  2E7D               	goto	u3074
  7803  0E7C                     u3075:	
  7804  0E7C  36FD               	lsrf	??_TransmitChar,f
  7805  0E7D                     u3074:	
  7806  0E7D  0B89               	decfsz	9,f
  7807  0E7E  2E7C               	goto	u3075
  7808  0E7F  1C7D               	btfss	??_TransmitChar,0
  7809  0E80  2E83               	goto	u3080
  7810  0E81  3001               	movlw	1
  7811  0E82  2E84               	goto	u3090
  7812  0E83                     u3080:	
  7813  0E83  3000               	movlw	0
  7814  0E84                     u3090:	
  7815  0E84  318B  23E9  318E   	fcall	_TransmitBit
  7816                           
  7817                           ;rtty.c: 65:  }
  7818  0E87  3001               	movlw	1
  7819  0E88  0140               	movlb	0	; select bank0
  7820  0E89  07A1               	addwf	TransmitChar@i,f
  7821  0E8A  3000               	movlw	0
  7822  0E8B  3DA2               	addwfc	TransmitChar@i+1,f
  7823  0E8C  0822               	movf	TransmitChar@i+1,w
  7824  0E8D  3A80               	xorlw	128
  7825  0E8E  00FD               	movwf	??_TransmitChar
  7826  0E8F  3080               	movlw	128
  7827  0E90  027D               	subwf	??_TransmitChar,w
  7828  0E91  1D03               	skipz
  7829  0E92  2E95               	goto	u3105
  7830  0E93  3007               	movlw	7
  7831  0E94  0221               	subwf	TransmitChar@i,w
  7832  0E95                     u3105:	
  7833  0E95  1C03               	skipc
  7834  0E96  2E77               	goto	l3874
  7835                           
  7836                           ;rtty.c: 67:  TransmitBit(1);
  7837  0E97  3001               	movlw	1
  7838  0E98  318B  23E9  318E   	fcall	_TransmitBit
  7839                           
  7840                           ;rtty.c: 68:  TransmitBit(1);
  7841  0E9B  3001               	movlw	1
  7842  0E9C  318B  23E9         	fcall	_TransmitBit
  7843  0E9E  0008               	return
  7844  0E9F                     __end_of_TransmitChar:	
  7845                           
  7846                           	psect	text9
  7847  0BE9                     __ptext9:	
  7848 ;; *************** function _TransmitBit *****************
  7849 ;; Defined at:
  7850 ;;		line 29 in file "rtty.c"
  7851 ;; Parameters:    Size  Location     Type
  7852 ;;  b               1    wreg     _Bool 
  7853 ;; Auto vars:     Size  Location     Type
  7854 ;;  b               1   12[COMMON] _Bool 
  7855 ;; Return value:  Size  Location     Type
  7856 ;;                  1    wreg      void 
  7857 ;; Registers used:
  7858 ;;		wreg, status,2, status,0, pclath, cstack
  7859 ;; Tracked objects:
  7860 ;;		On entry : 0/0
  7861 ;;		On exit  : 0/0
  7862 ;;		Unchanged: 0/0
  7863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7865 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7867 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7868 ;;Total ram usage:        1 bytes
  7869 ;; Hardware stack levels used:    1
  7870 ;; Hardware stack levels required when called:    4
  7871 ;; This function calls:
  7872 ;;		_Sleep
  7873 ;; This function is called by:
  7874 ;;		_TransmitChar
  7875 ;; This function uses a non-reentrant model
  7876 ;;
  7877                           
  7878                           
  7879                           ;psect for function _TransmitBit
  7880  0BE9                     _TransmitBit:	
  7881                           
  7882                           ;incstack = 0
  7883                           ; Regs used in _TransmitBit: [wreg+status,2+status,0+pclath+cstack]
  7884                           ;TransmitBit@b stored from wreg
  7885  0BE9  00FC               	movwf	TransmitBit@b
  7886                           
  7887                           ;rtty.c: 29: void TransmitBit(_Bool b);rtty.c: 30: {;rtty.c: 31:  if (b)
  7888  0BEA  087C               	movf	TransmitBit@b,w
  7889  0BEB  1903               	btfsc	3,2
  7890  0BEC  2BF0               	goto	l859
  7891                           
  7892                           ;rtty.c: 32:  {;rtty.c: 33:   do { LATAbits.LATA4 = 1; } while(0);
  7893  0BED  0140               	movlb	0	; select bank0
  7894  0BEE  1618               	bsf	24,4	;volatile
  7895  0BEF  2BF2               	goto	l3530
  7896  0BF0                     l859:	
  7897                           ;rtty.c: 36:  {;rtty.c: 37:   do { LATAbits.LATA4 = 0; } while(0);
  7898                           
  7899  0BF0  0140               	movlb	0	; select bank0
  7900  0BF1  1218               	bcf	24,4	;volatile
  7901  0BF2                     l3530:	
  7902  0BF2  3000               	movlw	0
  7903  0BF3  00F3               	movwf	Sleep@ms+3
  7904  0BF4  3000               	movlw	0
  7905  0BF5  00F2               	movwf	Sleep@ms+2
  7906  0BF6  3000               	movlw	0
  7907  0BF7  00F1               	movwf	Sleep@ms+1
  7908  0BF8  3014               	movlw	20
  7909  0BF9  00F0               	movwf	Sleep@ms
  7910  0BFA  318D  258F         	fcall	_Sleep
  7911  0BFC  0008               	return
  7912  0BFD                     __end_of_TransmitBit:	
  7913                           
  7914                           	psect	text10
  7915  0F63                     __ptext10:	
  7916 ;; *************** function _SetupGPS *****************
  7917 ;; Defined at:
  7918 ;;		line 429 in file "main.c"
  7919 ;; Parameters:    Size  Location     Type
  7920 ;;		None
  7921 ;; Auto vars:     Size  Location     Type
  7922 ;;		None
  7923 ;; Return value:  Size  Location     Type
  7924 ;;                  1    wreg      void 
  7925 ;; Registers used:
  7926 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7927 ;; Tracked objects:
  7928 ;;		On entry : 0/0
  7929 ;;		On exit  : 0/0
  7930 ;;		Unchanged: 0/0
  7931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7934 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7935 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7936 ;;Total ram usage:        1 bytes
  7937 ;; Hardware stack levels used:    1
  7938 ;; Hardware stack levels required when called:    5
  7939 ;; This function calls:
  7940 ;;		_GPS_HasAcknowledged
  7941 ;;		_GPS_SendUBX
  7942 ;;		_Sleep
  7943 ;;		_WriteGPS
  7944 ;; This function is called by:
  7945 ;;		_main
  7946 ;; This function uses a non-reentrant model
  7947 ;;
  7948                           
  7949                           
  7950                           ;psect for function _SetupGPS
  7951  0F63                     _SetupGPS:	
  7952                           
  7953                           ;incstack = 0
  7954                           ; Regs used in _SetupGPS: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7955                           ;main.c: 431:     do { LATAbits.LATA5 = 0; } while(0);
  7956  0F63  0140               	movlb	0	; select bank0
  7957  0F64  1298               	bcf	24,5	;volatile
  7958  0F65                     l4196:	
  7959                           
  7960                           ;main.c: 432:     while (!gps_configured)
  7961  0F65  0141               	movlb	1	; select bank1
  7962  0F66  084E               	movf	_gps_configured^(0+128),w
  7963  0F67  1D03               	btfss	3,2
  7964  0F68  2F81               	goto	l777
  7965                           
  7966                           ;main.c: 433:     {;main.c: 434:         GPS_SendUBX(setNavFlightMode);
  7967  0F69  30A0               	movlw	(low (_setNavFlightMode| (0+256)))& (0+255)
  7968  0F6A  318C  24ED  318F   	fcall	_GPS_SendUBX
  7969                           
  7970                           ;main.c: 435:         gps_configured = GPS_HasAcknowledged(setNavFlightMode);
  7971  0F6D  30A0               	movlw	(low (_setNavFlightMode| (0+256)))& (0+255)
  7972  0F6E  3184  2461  318F   	fcall	_GPS_HasAcknowledged
  7973  0F71  00FC               	movwf	??_SetupGPS
  7974  0F72  087C               	movf	??_SetupGPS,w
  7975  0F73  0141               	movlb	1	; select bank1
  7976  0F74  00CE               	movwf	_gps_configured^(0+128)
  7977                           
  7978                           ;main.c: 436:         Sleep(500);
  7979  0F75  3000               	movlw	0
  7980  0F76  00F3               	movwf	Sleep@ms+3
  7981  0F77  3000               	movlw	0
  7982  0F78  00F2               	movwf	Sleep@ms+2
  7983  0F79  3001               	movlw	1
  7984  0F7A  00F1               	movwf	Sleep@ms+1
  7985  0F7B  30F4               	movlw	244
  7986  0F7C  00F0               	movwf	Sleep@ms
  7987  0F7D  318D  258F  318F   	fcall	_Sleep
  7988  0F80  2F65               	goto	l4196
  7989  0F81                     l777:	
  7990                           ;main.c: 438:     do { LATAbits.LATA5 = 1; } while(0);
  7991                           
  7992  0F81  0140               	movlb	0	; select bank0
  7993  0F82  1698               	bsf	24,5	;volatile
  7994                           
  7995                           ;main.c: 439:     gps_configured = 0;
  7996  0F83  0141               	movlb	1	; select bank1
  7997  0F84  01CE               	clrf	_gps_configured^(0+128)
  7998                           
  7999                           ;main.c: 441:     WriteGPS("$PUBX,40,GLL,0,0,0,0*5C\r\n");
  8000  0F85  304E               	movlw	low (STR_1| (0+32768))
  8001  0F86  00F5               	movwf	WriteGPS@message
  8002  0F87  3090               	movlw	high (STR_1| (0+32768))
  8003  0F88  00F6               	movwf	WriteGPS@message+1
  8004  0F89  318D  2514  318F   	fcall	_WriteGPS
  8005                           
  8006                           ;main.c: 442:     WriteGPS("$PUBX,40,GGA,0,0,0,0*5A\r\n");
  8007  0F8C  3034               	movlw	low (STR_2| (0+32768))
  8008  0F8D  00F5               	movwf	WriteGPS@message
  8009  0F8E  3090               	movlw	high (STR_2| (0+32768))
  8010  0F8F  00F6               	movwf	WriteGPS@message+1
  8011  0F90  318D  2514  318F   	fcall	_WriteGPS
  8012                           
  8013                           ;main.c: 443:     WriteGPS("$PUBX,40,VTG,0,0,0,0*5E\r\n");
  8014  0F93  3082               	movlw	low (STR_3| (0+32768))
  8015  0F94  00F5               	movwf	WriteGPS@message
  8016  0F95  3090               	movlw	high (STR_3| (0+32768))
  8017  0F96  00F6               	movwf	WriteGPS@message+1
  8018  0F97  318D  2514  318F   	fcall	_WriteGPS
  8019                           
  8020                           ;main.c: 444:     WriteGPS("$PUBX,40,GSV,0,0,0,0*59\r\n");
  8021  0F9A  301A               	movlw	low (STR_4| (0+32768))
  8022  0F9B  00F5               	movwf	WriteGPS@message
  8023  0F9C  3090               	movlw	high (STR_4| (0+32768))
  8024  0F9D  00F6               	movwf	WriteGPS@message+1
  8025  0F9E  318D  2514  318F   	fcall	_WriteGPS
  8026                           
  8027                           ;main.c: 445:     WriteGPS("$PUBX,40,GSA,0,0,0,0*4E\r\n");
  8028  0FA1  3068               	movlw	low (STR_5| (0+32768))
  8029  0FA2  00F5               	movwf	WriteGPS@message
  8030  0FA3  3090               	movlw	high (STR_5| (0+32768))
  8031  0FA4  00F6               	movwf	WriteGPS@message+1
  8032  0FA5  318D  2514  318F   	fcall	_WriteGPS
  8033                           
  8034                           ;main.c: 446:     WriteGPS("$PUBX,40,RMC,0,0,0,0*47\r\n");
  8035  0FA8  3000               	movlw	low (STR_6| (0+32768))
  8036  0FA9  00F5               	movwf	WriteGPS@message
  8037  0FAA  3090               	movlw	high (STR_6| (0+32768))
  8038  0FAB  00F6               	movwf	WriteGPS@message+1
  8039  0FAC  318D  2514         	fcall	_WriteGPS
  8040  0FAE  0008               	return
  8041  0FAF                     __end_of_SetupGPS:	
  8042                           
  8043                           	psect	text11
  8044  0CED                     __ptext11:	
  8045 ;; *************** function _GPS_SendUBX *****************
  8046 ;; Defined at:
  8047 ;;		line 345 in file "main.c"
  8048 ;; Parameters:    Size  Location     Type
  8049 ;;  data            1    wreg     PTR unsigned char 
  8050 ;;		 -> setNavFlightMode(44), 
  8051 ;; Auto vars:     Size  Location     Type
  8052 ;;  data            1    9[COMMON] PTR unsigned char 
  8053 ;;		 -> setNavFlightMode(44), 
  8054 ;;  i               2    7[COMMON] int 
  8055 ;;  length          2    5[COMMON] int 
  8056 ;; Return value:  Size  Location     Type
  8057 ;;                  1    wreg      void 
  8058 ;; Registers used:
  8059 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8060 ;; Tracked objects:
  8061 ;;		On entry : 0/0
  8062 ;;		On exit  : 0/0
  8063 ;;		Unchanged: 0/0
  8064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8066 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8067 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8068 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8069 ;;Total ram usage:        6 bytes
  8070 ;; Hardware stack levels used:    1
  8071 ;; Hardware stack levels required when called:    4
  8072 ;; This function calls:
  8073 ;;		_EUSART1_Write
  8074 ;;		_GetLengthUBX
  8075 ;; This function is called by:
  8076 ;;		_SetupGPS
  8077 ;; This function uses a non-reentrant model
  8078 ;;
  8079                           
  8080                           
  8081                           ;psect for function _GPS_SendUBX
  8082  0CED                     _GPS_SendUBX:	
  8083                           
  8084                           ;incstack = 0
  8085                           ; Regs used in _GPS_SendUBX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8086                           ;GPS_SendUBX@data stored from wreg
  8087  0CED  00F9               	movwf	GPS_SendUBX@data
  8088                           
  8089                           ;main.c: 345: void GPS_SendUBX(uint8_t* data);main.c: 346: {;main.c: 347:     for (int i
      +                           = 0, length = GetLengthUBX(data); i < length; i++)
  8090  0CEE  01F7               	clrf	GPS_SendUBX@i
  8091  0CEF  01F8               	clrf	GPS_SendUBX@i+1
  8092  0CF0  0879               	movf	GPS_SendUBX@data,w
  8093  0CF1  318B  23C4  318C   	fcall	_GetLengthUBX
  8094  0CF4  0871               	movf	?_GetLengthUBX+1,w
  8095  0CF5  00F6               	movwf	GPS_SendUBX@length+1
  8096  0CF6  0870               	movf	?_GetLengthUBX,w
  8097  0CF7  00F5               	movwf	GPS_SendUBX@length
  8098  0CF8                     l3756:	
  8099  0CF8  0878               	movf	GPS_SendUBX@i+1,w
  8100  0CF9  3A80               	xorlw	128
  8101  0CFA  00F4               	movwf	??_GPS_SendUBX
  8102  0CFB  0876               	movf	GPS_SendUBX@length+1,w
  8103  0CFC  3A80               	xorlw	128
  8104  0CFD  0274               	subwf	??_GPS_SendUBX,w
  8105  0CFE  1D03               	skipz
  8106  0CFF  2D02               	goto	u2955
  8107  0D00  0875               	movf	GPS_SendUBX@length,w
  8108  0D01  0277               	subwf	GPS_SendUBX@i,w
  8109  0D02                     u2955:	
  8110  0D02  1803               	btfsc	3,0
  8111  0D03  0008               	return
  8112                           
  8113                           ;main.c: 348:     {;main.c: 349:         EUSART1_Write(data[i]);
  8114  0D04  0877               	movf	GPS_SendUBX@i,w
  8115  0D05  0779               	addwf	GPS_SendUBX@data,w
  8116  0D06  00F4               	movwf	??_GPS_SendUBX
  8117  0D07  0874               	movf	??_GPS_SendUBX,w
  8118  0D08  0086               	movwf	6
  8119  0D09  3001               	movlw	1	; select bank2/3
  8120  0D0A  0087               	movwf	7
  8121  0D0B  0801               	movf	1,w
  8122  0D0C  318B  235F  318C   	fcall	_EUSART1_Write
  8123                           
  8124                           ;main.c: 350:     }
  8125  0D0F  3001               	movlw	1
  8126  0D10  07F7               	addwf	GPS_SendUBX@i,f
  8127  0D11  3000               	movlw	0
  8128  0D12  3DF8               	addwfc	GPS_SendUBX@i+1,f
  8129  0D13  2CF8               	goto	l3756
  8130  0D14                     __end_of_GPS_SendUBX:	
  8131                           
  8132                           	psect	text12
  8133  0BC4                     __ptext12:	
  8134 ;; *************** function _GetLengthUBX *****************
  8135 ;; Defined at:
  8136 ;;		line 339 in file "main.c"
  8137 ;; Parameters:    Size  Location     Type
  8138 ;;  data            1    wreg     PTR unsigned char 
  8139 ;;		 -> setNavFlightMode(44), 
  8140 ;; Auto vars:     Size  Location     Type
  8141 ;;  data            1    3[COMMON] PTR unsigned char 
  8142 ;;		 -> setNavFlightMode(44), 
  8143 ;; Return value:  Size  Location     Type
  8144 ;;                  2    0[COMMON] unsigned int 
  8145 ;; Registers used:
  8146 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  8147 ;; Tracked objects:
  8148 ;;		On entry : 0/0
  8149 ;;		On exit  : 0/0
  8150 ;;		Unchanged: 0/0
  8151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8152 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8153 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8155 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8156 ;;Total ram usage:        4 bytes
  8157 ;; Hardware stack levels used:    1
  8158 ;; Hardware stack levels required when called:    3
  8159 ;; This function calls:
  8160 ;;		Nothing
  8161 ;; This function is called by:
  8162 ;;		_GPS_SendUBX
  8163 ;; This function uses a non-reentrant model
  8164 ;;
  8165                           
  8166                           
  8167                           ;psect for function _GetLengthUBX
  8168  0BC4                     _GetLengthUBX:	
  8169                           
  8170                           ;incstack = 0
  8171                           ; Regs used in _GetLengthUBX: [wreg-fsr1h+status,2+status,0]
  8172                           ;GetLengthUBX@data stored from wreg
  8173  0BC4  00F3               	movwf	GetLengthUBX@data
  8174                           
  8175                           ;main.c: 339: size_t GetLengthUBX(uint8_t* data);main.c: 340: {;main.c: 341:     return 
      +                          (short)(8 + (short)((short)data[4] + (short)(data[5] << 8)));
  8176  0BC5  0873               	movf	GetLengthUBX@data,w
  8177  0BC6  3E05               	addlw	5
  8178  0BC7  0086               	movwf	6
  8179  0BC8  3001               	movlw	1	; select bank2/3
  8180  0BC9  0087               	movwf	7
  8181  0BCA  0873               	movf	GetLengthUBX@data,w
  8182  0BCB  3E04               	addlw	4
  8183  0BCC  0084               	movwf	4
  8184  0BCD  3001               	movlw	1	; select bank2/3
  8185  0BCE  0085               	movwf	5
  8186  0BCF  0800               	movf	0,w
  8187  0BD0  3E08               	addlw	8
  8188  0BD1  00F0               	movwf	?_GetLengthUBX
  8189  0BD2  3000               	movlw	0
  8190  0BD3  3D01               	addwfc	1,w
  8191  0BD4  00F1               	movwf	?_GetLengthUBX+1
  8192  0BD5  0008               	return
  8193  0BD6                     __end_of_GetLengthUBX:	
  8194                           
  8195                           	psect	text13
  8196  0461                     __ptext13:	
  8197 ;; *************** function _GPS_HasAcknowledged *****************
  8198 ;; Defined at:
  8199 ;;		line 357 in file "main.c"
  8200 ;; Parameters:    Size  Location     Type
  8201 ;;  data            1    wreg     PTR unsigned char 
  8202 ;;		 -> setNavFlightMode(44), 
  8203 ;; Auto vars:     Size  Location     Type
  8204 ;;  data            1   15[BANK0 ] PTR unsigned char 
  8205 ;;		 -> setNavFlightMode(44), 
  8206 ;;  i               1   17[BANK0 ] unsigned char 
  8207 ;;  ackPacket      10    5[BANK0 ] unsigned char [10]
  8208 ;;  startTime       4    0[BANK0 ] unsigned long 
  8209 ;;  ackByteID       1   16[BANK0 ] unsigned char 
  8210 ;;  ackByte         1    4[BANK0 ] unsigned char 
  8211 ;; Return value:  Size  Location     Type
  8212 ;;                  1    wreg      _Bool 
  8213 ;; Registers used:
  8214 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8215 ;; Tracked objects:
  8216 ;;		On entry : 0/0
  8217 ;;		On exit  : 0/0
  8218 ;;		Unchanged: 0/0
  8219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8221 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8222 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8223 ;;      Totals:         4      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8224 ;;Total ram usage:       22 bytes
  8225 ;; Hardware stack levels used:    1
  8226 ;; Hardware stack levels required when called:    4
  8227 ;; This function calls:
  8228 ;;		_EUSART1_Read
  8229 ;;		_EUSART1_is_rx_ready
  8230 ;; This function is called by:
  8231 ;;		_SetupGPS
  8232 ;; This function uses a non-reentrant model
  8233 ;;
  8234                           
  8235                           
  8236                           ;psect for function _GPS_HasAcknowledged
  8237  0461                     _GPS_HasAcknowledged:	
  8238                           
  8239                           ;incstack = 0
  8240                           ; Regs used in _GPS_HasAcknowledged: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8241                           ;GPS_HasAcknowledged@data stored from wreg
  8242  0461  0140               	movlb	0	; select bank0
  8243  0462  00AF               	movwf	GPS_HasAcknowledged@data
  8244                           
  8245                           ;main.c: 357: _Bool GPS_HasAcknowledged(uint8_t* data);main.c: 358: {;main.c: 359:     u
      +                          int8_t ackPacket[10];;main.c: 360:     uint32_t startTime = ticks;
  8246  0463  0141               	movlb	1	; select bank1
  8247  0464  0847               	movf	(_ticks+3)^(0+128),w
  8248  0465  0140               	movlb	0	; select bank0
  8249  0466  00A3               	movwf	GPS_HasAcknowledged@startTime+3
  8250  0467  0141               	movlb	1	; select bank1
  8251  0468  0846               	movf	(_ticks+2)^(0+128),w
  8252  0469  0140               	movlb	0	; select bank0
  8253  046A  00A2               	movwf	GPS_HasAcknowledged@startTime+2
  8254  046B  0141               	movlb	1	; select bank1
  8255  046C  0845               	movf	(_ticks+1)^(0+128),w
  8256  046D  0140               	movlb	0	; select bank0
  8257  046E  00A1               	movwf	GPS_HasAcknowledged@startTime+1
  8258  046F  0141               	movlb	1	; select bank1
  8259  0470  0844               	movf	_ticks^(0+128),w
  8260  0471  0140               	movlb	0	; select bank0
  8261  0472  00A0               	movwf	GPS_HasAcknowledged@startTime
  8262                           
  8263                           ;main.c: 363:     ackPacket[0] = 0xB5;
  8264  0473  30B5               	movlw	181
  8265  0474  00F0               	movwf	??_GPS_HasAcknowledged
  8266  0475  0870               	movf	??_GPS_HasAcknowledged,w
  8267  0476  00A5               	movwf	GPS_HasAcknowledged@ackPacket
  8268                           
  8269                           ;main.c: 364:     ackPacket[1] = 0x62;
  8270  0477  3062               	movlw	98
  8271  0478  00F0               	movwf	??_GPS_HasAcknowledged
  8272  0479  0870               	movf	??_GPS_HasAcknowledged,w
  8273  047A  00A6               	movwf	GPS_HasAcknowledged@ackPacket+1
  8274                           
  8275                           ;main.c: 365:     ackPacket[2] = 0x05;
  8276  047B  3005               	movlw	5
  8277  047C  00F0               	movwf	??_GPS_HasAcknowledged
  8278  047D  0870               	movf	??_GPS_HasAcknowledged,w
  8279  047E  00A7               	movwf	GPS_HasAcknowledged@ackPacket+2
  8280                           
  8281                           ;main.c: 366:     ackPacket[3] = 0x01;
  8282  047F  01A8               	clrf	GPS_HasAcknowledged@ackPacket+3
  8283  0480  0AA8               	incf	GPS_HasAcknowledged@ackPacket+3,f
  8284                           
  8285                           ;main.c: 367:     ackPacket[4] = 0x02;
  8286  0481  3002               	movlw	2
  8287  0482  00F0               	movwf	??_GPS_HasAcknowledged
  8288  0483  0870               	movf	??_GPS_HasAcknowledged,w
  8289  0484  00A9               	movwf	GPS_HasAcknowledged@ackPacket+4
  8290                           
  8291                           ;main.c: 368:     ackPacket[5] = 0x00;
  8292  0485  01AA               	clrf	GPS_HasAcknowledged@ackPacket+5
  8293                           
  8294                           ;main.c: 369:     ackPacket[6] = data[2];
  8295  0486  082F               	movf	GPS_HasAcknowledged@data,w
  8296  0487  0086               	movwf	6
  8297  0488  3001               	movlw	1	; select bank2/3
  8298  0489  0087               	movwf	7
  8299  048A  3001               	movlw	1	; select bank2/3
  8300  048B  3F42               	moviw [2]fsr1
  8301  048C  00AB               	movwf	GPS_HasAcknowledged@ackPacket+6
  8302                           
  8303                           ;main.c: 370:     ackPacket[7] = data[3];
  8304  048D  082F               	movf	GPS_HasAcknowledged@data,w
  8305  048E  0086               	movwf	6
  8306  048F  3001               	movlw	1	; select bank2/3
  8307  0490  0087               	movwf	7
  8308  0491  3001               	movlw	1	; select bank2/3
  8309  0492  3F43               	moviw [3]fsr1
  8310  0493  00AC               	movwf	GPS_HasAcknowledged@ackPacket+7
  8311                           
  8312                           ;main.c: 371:     ackPacket[8] = 0;
  8313  0494  01AD               	clrf	GPS_HasAcknowledged@ackPacket+8
  8314                           
  8315                           ;main.c: 372:     ackPacket[9] = 0;
  8316  0495  01AE               	clrf	GPS_HasAcknowledged@ackPacket+9
  8317                           
  8318                           ;main.c: 375:     for (uint8_t i = 2; i < 8; i++)
  8319  0496  3002               	movlw	2
  8320  0497  00F0               	movwf	??_GPS_HasAcknowledged
  8321  0498  0870               	movf	??_GPS_HasAcknowledged,w
  8322  0499  00B1               	movwf	GPS_HasAcknowledged@i
  8323  049A                     l3778:	
  8324                           
  8325                           ;main.c: 376:     {;main.c: 377:         ackPacket[8] = ackPacket[8] + ackPacket[i];
  8326  049A  0831               	movf	GPS_HasAcknowledged@i,w
  8327  049B  3E25               	addlw	(low (GPS_HasAcknowledged@ackPacket| 0))& (0+255)
  8328  049C  0086               	movwf	6
  8329  049D  0187               	clrf	7
  8330  049E  082D               	movf	GPS_HasAcknowledged@ackPacket+8,w
  8331  049F  0701               	addwf	1,w
  8332  04A0  00F0               	movwf	??_GPS_HasAcknowledged
  8333  04A1  0870               	movf	??_GPS_HasAcknowledged,w
  8334  04A2  00AD               	movwf	GPS_HasAcknowledged@ackPacket+8
  8335                           
  8336                           ;main.c: 378:         ackPacket[9] = ackPacket[9] + ackPacket[8];
  8337  04A3  082E               	movf	GPS_HasAcknowledged@ackPacket+9,w
  8338  04A4  072D               	addwf	GPS_HasAcknowledged@ackPacket+8,w
  8339  04A5  00F0               	movwf	??_GPS_HasAcknowledged
  8340  04A6  0870               	movf	??_GPS_HasAcknowledged,w
  8341  04A7  00AE               	movwf	GPS_HasAcknowledged@ackPacket+9
  8342                           
  8343                           ;main.c: 379:     }
  8344  04A8  3001               	movlw	1
  8345  04A9  00F0               	movwf	??_GPS_HasAcknowledged
  8346  04AA  0870               	movf	??_GPS_HasAcknowledged,w
  8347  04AB  07B1               	addwf	GPS_HasAcknowledged@i,f
  8348  04AC  3008               	movlw	8
  8349  04AD  0231               	subwf	GPS_HasAcknowledged@i,w
  8350  04AE  1C03               	skipc
  8351  04AF  2C9A               	goto	l3778
  8352  04B0                     l3786:	
  8353                           
  8354                           ;main.c: 382:     uint8_t ackByte;;main.c: 385:     uint8_t ackByteID = 0;
  8355  04B0  01B0               	clrf	GPS_HasAcknowledged@ackByteID
  8356  04B1                     l3788:	
  8357                           
  8358                           ;main.c: 389:     {;main.c: 392:         if (ackByteID > 9)
  8359  04B1  300A               	movlw	10
  8360  04B2  0140               	movlb	0	; select bank0
  8361  04B3  0230               	subwf	GPS_HasAcknowledged@ackByteID,w
  8362  04B4  1C03               	skipc
  8363  04B5  2CB8               	goto	l3794
  8364                           
  8365                           ;main.c: 393:         {;main.c: 396:             return 1;
  8366  04B6  3001               	movlw	1
  8367  04B7  0008               	return
  8368  04B8                     l3794:	
  8369                           
  8370                           ;main.c: 400:         if (ticks - startTime > 3000)
  8371  04B8  0820               	movf	GPS_HasAcknowledged@startTime,w
  8372  04B9  0141               	movlb	1	; select bank1
  8373  04BA  0244               	subwf	_ticks^(0+128),w
  8374  04BB  00F0               	movwf	??_GPS_HasAcknowledged
  8375  04BC  0140               	movlb	0	; select bank0
  8376  04BD  0821               	movf	GPS_HasAcknowledged@startTime+1,w
  8377  04BE  0141               	movlb	1	; select bank1
  8378  04BF  3B45               	subwfb	(_ticks+1)^(0+128),w
  8379  04C0  00F1               	movwf	??_GPS_HasAcknowledged+1
  8380  04C1  0140               	movlb	0	; select bank0
  8381  04C2  0822               	movf	GPS_HasAcknowledged@startTime+2,w
  8382  04C3  0141               	movlb	1	; select bank1
  8383  04C4  3B46               	subwfb	(_ticks+2)^(0+128),w
  8384  04C5  00F2               	movwf	??_GPS_HasAcknowledged+2
  8385  04C6  0140               	movlb	0	; select bank0
  8386  04C7  0823               	movf	GPS_HasAcknowledged@startTime+3,w
  8387  04C8  0141               	movlb	1	; select bank1
  8388  04C9  3B47               	subwfb	(_ticks+3)^(0+128),w
  8389  04CA  00F3               	movwf	??_GPS_HasAcknowledged+3
  8390  04CB  0873               	movf	??_GPS_HasAcknowledged+3,w
  8391  04CC  1D03               	btfss	3,2
  8392  04CD  2CD7               	goto	l3796
  8393  04CE  0872               	movf	??_GPS_HasAcknowledged+2,w
  8394  04CF  1D03               	btfss	3,2
  8395  04D0  2CD7               	goto	l3796
  8396  04D1  30B9               	movlw	185
  8397  04D2  0270               	subwf	??_GPS_HasAcknowledged,w
  8398  04D3  300B               	movlw	11
  8399  04D4  3B71               	subwfb	??_GPS_HasAcknowledged+1,w
  8400  04D5  1C03               	btfss	3,0
  8401  04D6  2CD9               	goto	l3800
  8402  04D7                     l3796:	
  8403                           
  8404                           ;main.c: 401:         {;main.c: 402:             return 0;
  8405  04D7  3000               	movlw	0
  8406  04D8  0008               	return
  8407  04D9                     l3800:	
  8408                           
  8409                           ;main.c: 406:         if (EUSART1_is_rx_ready())
  8410  04D9  318B  233A  3184   	fcall	_EUSART1_is_rx_ready
  8411  04DC  3A00               	xorlw	0
  8412  04DD  1903               	skipnz
  8413  04DE  2CB1               	goto	l3788
  8414                           
  8415                           ;main.c: 407:         {;main.c: 408:             ackByte = EUSART1_Read();
  8416  04DF  318B  2384  3184   	fcall	_EUSART1_Read
  8417  04E2  00F0               	movwf	??_GPS_HasAcknowledged
  8418  04E3  0870               	movf	??_GPS_HasAcknowledged,w
  8419  04E4  0140               	movlb	0	; select bank0
  8420  04E5  00A4               	movwf	GPS_HasAcknowledged@ackByte
  8421                           
  8422                           ;main.c: 411:             if (ackByte == ackPacket[ackByteID]) {
  8423  04E6  0830               	movf	GPS_HasAcknowledged@ackByteID,w
  8424  04E7  3E25               	addlw	(low (GPS_HasAcknowledged@ackPacket| 0))& (0+255)
  8425  04E8  0086               	movwf	6
  8426  04E9  0187               	clrf	7
  8427  04EA  0801               	movf	1,w
  8428  04EB  0624               	xorwf	GPS_HasAcknowledged@ackByte,w
  8429  04EC  1D03               	skipz
  8430  04ED  2CB0               	goto	l3786
  8431                           
  8432                           ;main.c: 412:                 ackByteID++;
  8433  04EE  3001               	movlw	1
  8434  04EF  00F0               	movwf	??_GPS_HasAcknowledged
  8435  04F0  0870               	movf	??_GPS_HasAcknowledged,w
  8436  04F1  07B0               	addwf	GPS_HasAcknowledged@ackByteID,f
  8437                           
  8438                           ;main.c: 413:             }
  8439  04F2  2CB1               	goto	l3788
  8440  04F3                     __end_of_GPS_HasAcknowledged:	
  8441                           
  8442                           	psect	text14
  8443  0BB5                     __ptext14:	
  8444 ;; *************** function _SYSTEM_Initialize *****************
  8445 ;; Defined at:
  8446 ;;		line 50 in file "mcc_generated_files/mcc.c"
  8447 ;; Parameters:    Size  Location     Type
  8448 ;;		None
  8449 ;; Auto vars:     Size  Location     Type
  8450 ;;		None
  8451 ;; Return value:  Size  Location     Type
  8452 ;;                  1    wreg      void 
  8453 ;; Registers used:
  8454 ;;		wreg, status,2, status,0, pclath, cstack
  8455 ;; Tracked objects:
  8456 ;;		On entry : 0/0
  8457 ;;		On exit  : 0/0
  8458 ;;		Unchanged: 0/0
  8459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8463 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8464 ;;Total ram usage:        0 bytes
  8465 ;; Hardware stack levels used:    1
  8466 ;; Hardware stack levels required when called:    5
  8467 ;; This function calls:
  8468 ;;		_EUSART1_Initialize
  8469 ;;		_OSCILLATOR_Initialize
  8470 ;;		_PIN_MANAGER_Initialize
  8471 ;;		_PMD_Initialize
  8472 ;;		_TMR0_Initialize
  8473 ;; This function is called by:
  8474 ;;		_main
  8475 ;; This function uses a non-reentrant model
  8476 ;;
  8477                           
  8478                           
  8479                           ;psect for function _SYSTEM_Initialize
  8480  0BB5                     _SYSTEM_Initialize:	
  8481                           
  8482                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
  8483                           
  8484                           ;incstack = 0
  8485                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8486  0BB5  318B  237A  318B   	fcall	_PMD_Initialize
  8487                           
  8488                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  8489  0BB8  318D  253C  318B   	fcall	_PIN_MANAGER_Initialize
  8490                           
  8491                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  8492  0BBB  318B  2367  318B   	fcall	_OSCILLATOR_Initialize
  8493                           
  8494                           ;mcc_generated_files/mcc.c: 55:     TMR0_Initialize();
  8495  0BBE  318B  23D6  318B   	fcall	_TMR0_Initialize
  8496                           
  8497                           ;mcc_generated_files/mcc.c: 56:     EUSART1_Initialize();
  8498  0BC1  318C  2481         	fcall	_EUSART1_Initialize
  8499  0BC3  0008               	return
  8500  0BC4                     __end_of_SYSTEM_Initialize:	
  8501                           
  8502                           	psect	text15
  8503  0BD6                     __ptext15:	
  8504 ;; *************** function _TMR0_Initialize *****************
  8505 ;; Defined at:
  8506 ;;		line 61 in file "mcc_generated_files/tmr0.c"
  8507 ;; Parameters:    Size  Location     Type
  8508 ;;		None
  8509 ;; Auto vars:     Size  Location     Type
  8510 ;;		None
  8511 ;; Return value:  Size  Location     Type
  8512 ;;                  1    wreg      void 
  8513 ;; Registers used:
  8514 ;;		wreg, status,2, status,0, pclath, cstack
  8515 ;; Tracked objects:
  8516 ;;		On entry : 0/0
  8517 ;;		On exit  : 0/0
  8518 ;;		Unchanged: 0/0
  8519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8521 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8523 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8524 ;;Total ram usage:        0 bytes
  8525 ;; Hardware stack levels used:    1
  8526 ;; Hardware stack levels required when called:    4
  8527 ;; This function calls:
  8528 ;;		_TMR0_SetInterruptHandler
  8529 ;; This function is called by:
  8530 ;;		_SYSTEM_Initialize
  8531 ;; This function uses a non-reentrant model
  8532 ;;
  8533                           
  8534                           
  8535                           ;psect for function _TMR0_Initialize
  8536  0BD6                     _TMR0_Initialize:	
  8537                           
  8538                           ;mcc_generated_files/tmr0.c: 66:     T0CON1 = 0x40;
  8539                           
  8540                           ;incstack = 0
  8541                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8542  0BD6  3040               	movlw	64
  8543  0BD7  014B               	movlb	11	; select bank11
  8544  0BD8  009F               	movwf	31	;volatile
  8545                           
  8546                           ;mcc_generated_files/tmr0.c: 69:     TMR0H = 0xF9;
  8547  0BD9  30F9               	movlw	249
  8548  0BDA  009D               	movwf	29	;volatile
  8549                           
  8550                           ;mcc_generated_files/tmr0.c: 72:     TMR0L = 0x00;
  8551  0BDB  019C               	clrf	28	;volatile
  8552                           
  8553                           ;mcc_generated_files/tmr0.c: 75:     PIR0bits.TMR0IF = 0;
  8554  0BDC  014E               	movlb	14	; select bank14
  8555  0BDD  128C               	bcf	12,5	;volatile
  8556                           
  8557                           ;mcc_generated_files/tmr0.c: 78:     PIE0bits.TMR0IE = 1;
  8558  0BDE  1696               	bsf	22,5	;volatile
  8559                           
  8560                           ;mcc_generated_files/tmr0.c: 81:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  8561  0BDF  30FC               	movlw	low _TMR0_DefaultInterruptHandler
  8562  0BE0  00F0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  8563  0BE1  3007               	movlw	high _TMR0_DefaultInterruptHandler
  8564  0BE2  00F1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  8565  0BE3  318B  233F         	fcall	_TMR0_SetInterruptHandler
  8566                           
  8567                           ;mcc_generated_files/tmr0.c: 84:     T0CON0 = 0x80;
  8568  0BE5  3080               	movlw	128
  8569  0BE6  014B               	movlb	11	; select bank11
  8570  0BE7  009E               	movwf	30	;volatile
  8571  0BE8  0008               	return
  8572  0BE9                     __end_of_TMR0_Initialize:	
  8573                           
  8574                           	psect	text16
  8575  0B7A                     __ptext16:	
  8576 ;; *************** function _PMD_Initialize *****************
  8577 ;; Defined at:
  8578 ;;		line 73 in file "mcc_generated_files/mcc.c"
  8579 ;; Parameters:    Size  Location     Type
  8580 ;;		None
  8581 ;; Auto vars:     Size  Location     Type
  8582 ;;		None
  8583 ;; Return value:  Size  Location     Type
  8584 ;;                  1    wreg      void 
  8585 ;; Registers used:
  8586 ;;		status,2
  8587 ;; Tracked objects:
  8588 ;;		On entry : 0/0
  8589 ;;		On exit  : 0/0
  8590 ;;		Unchanged: 0/0
  8591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8595 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8596 ;;Total ram usage:        0 bytes
  8597 ;; Hardware stack levels used:    1
  8598 ;; Hardware stack levels required when called:    3
  8599 ;; This function calls:
  8600 ;;		Nothing
  8601 ;; This function is called by:
  8602 ;;		_SYSTEM_Initialize
  8603 ;; This function uses a non-reentrant model
  8604 ;;
  8605                           
  8606                           
  8607                           ;psect for function _PMD_Initialize
  8608  0B7A                     _PMD_Initialize:	
  8609                           
  8610                           ;mcc_generated_files/mcc.c: 76:     PMD0 = 0x00;
  8611                           
  8612                           ;incstack = 0
  8613                           ; Regs used in _PMD_Initialize: [status,2]
  8614  0B7A  014F               	movlb	15	; select bank15
  8615  0B7B  0196               	clrf	22	;volatile
  8616                           
  8617                           ;mcc_generated_files/mcc.c: 78:     PMD1 = 0x00;
  8618  0B7C  0197               	clrf	23	;volatile
  8619                           
  8620                           ;mcc_generated_files/mcc.c: 80:     PMD2 = 0x00;
  8621  0B7D  0198               	clrf	24	;volatile
  8622                           
  8623                           ;mcc_generated_files/mcc.c: 82:     PMD3 = 0x00;
  8624  0B7E  0199               	clrf	25	;volatile
  8625                           
  8626                           ;mcc_generated_files/mcc.c: 84:     PMD4 = 0x00;
  8627  0B7F  019A               	clrf	26	;volatile
  8628                           
  8629                           ;mcc_generated_files/mcc.c: 86:     PMD5 = 0x00;
  8630  0B80  019B               	clrf	27	;volatile
  8631                           
  8632                           ;mcc_generated_files/mcc.c: 88:     PMD6 = 0x00;
  8633  0B81  019C               	clrf	28	;volatile
  8634                           
  8635                           ;mcc_generated_files/mcc.c: 90:     PMD7 = 0x00;
  8636  0B82  019D               	clrf	29	;volatile
  8637  0B83  0008               	return
  8638  0B84                     __end_of_PMD_Initialize:	
  8639                           
  8640                           	psect	text17
  8641  0D3C                     __ptext17:	
  8642 ;; *************** function _PIN_MANAGER_Initialize *****************
  8643 ;; Defined at:
  8644 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  8645 ;; Parameters:    Size  Location     Type
  8646 ;;		None
  8647 ;; Auto vars:     Size  Location     Type
  8648 ;;		None
  8649 ;; Return value:  Size  Location     Type
  8650 ;;                  1    wreg      void 
  8651 ;; Registers used:
  8652 ;;		wreg, status,2
  8653 ;; Tracked objects:
  8654 ;;		On entry : 0/0
  8655 ;;		On exit  : 0/0
  8656 ;;		Unchanged: 0/0
  8657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8661 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8662 ;;Total ram usage:        0 bytes
  8663 ;; Hardware stack levels used:    1
  8664 ;; Hardware stack levels required when called:    3
  8665 ;; This function calls:
  8666 ;;		Nothing
  8667 ;; This function is called by:
  8668 ;;		_SYSTEM_Initialize
  8669 ;; This function uses a non-reentrant model
  8670 ;;
  8671                           
  8672                           
  8673                           ;psect for function _PIN_MANAGER_Initialize
  8674  0D3C                     _PIN_MANAGER_Initialize:	
  8675                           
  8676                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  8677                           
  8678                           ;incstack = 0
  8679                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  8680  0D3C  0140               	movlb	0	; select bank0
  8681  0D3D  0198               	clrf	24	;volatile
  8682                           
  8683                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  8684  0D3E  0199               	clrf	25	;volatile
  8685                           
  8686                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  8687  0D3F  019A               	clrf	26	;volatile
  8688                           
  8689                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x0B;
  8690  0D40  300B               	movlw	11
  8691  0D41  0092               	movwf	18	;volatile
  8692                           
  8693                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0x30;
  8694  0D42  3030               	movlw	48
  8695  0D43  0093               	movwf	19	;volatile
  8696                           
  8697                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xDF;
  8698  0D44  30DF               	movlw	223
  8699  0D45  0094               	movwf	20	;volatile
  8700                           
  8701                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0xFF;
  8702  0D46  30FF               	movlw	255
  8703  0D47  017E               	movlb	62	; select bank62
  8704  0D48  00CE               	movwf	78	;volatile
  8705                           
  8706                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x80;
  8707  0D49  3080               	movlw	128
  8708  0D4A  00C3               	movwf	67	;volatile
  8709                           
  8710                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x37;
  8711  0D4B  3037               	movlw	55
  8712  0D4C  00B8               	movwf	56	;volatile
  8713                           
  8714                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  8715  0D4D  01C4               	clrf	68	;volatile
  8716                           
  8717                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x00;
  8718  0D4E  01B9               	clrf	57	;volatile
  8719                           
  8720                           ;mcc_generated_files/pin_manager.c: 83:     WPUC = 0x00;
  8721  0D4F  01CF               	clrf	79	;volatile
  8722                           
  8723                           ;mcc_generated_files/pin_manager.c: 88:     ODCONA = 0x00;
  8724  0D50  01BA               	clrf	58	;volatile
  8725                           
  8726                           ;mcc_generated_files/pin_manager.c: 89:     ODCONB = 0x00;
  8727  0D51  01C5               	clrf	69	;volatile
  8728                           
  8729                           ;mcc_generated_files/pin_manager.c: 90:     ODCONC = 0x00;
  8730  0D52  01D0               	clrf	80	;volatile
  8731                           
  8732                           ;mcc_generated_files/pin_manager.c: 95:     SLRCONA = 0x37;
  8733  0D53  3037               	movlw	55
  8734  0D54  00BB               	movwf	59	;volatile
  8735                           
  8736                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONB = 0xF0;
  8737  0D55  30F0               	movlw	240
  8738  0D56  00C6               	movwf	70	;volatile
  8739                           
  8740                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONC = 0xFF;
  8741  0D57  30FF               	movlw	255
  8742  0D58  00D1               	movwf	81	;volatile
  8743                           
  8744                           ;mcc_generated_files/pin_manager.c: 102:     INLVLA = 0x3F;
  8745  0D59  303F               	movlw	63
  8746  0D5A  00BC               	movwf	60	;volatile
  8747                           
  8748                           ;mcc_generated_files/pin_manager.c: 103:     INLVLB = 0xF0;
  8749  0D5B  30F0               	movlw	240
  8750  0D5C  00C7               	movwf	71	;volatile
  8751                           
  8752                           ;mcc_generated_files/pin_manager.c: 104:     INLVLC = 0xFF;
  8753  0D5D  30FF               	movlw	255
  8754  0D5E  00D2               	movwf	82	;volatile
  8755                           
  8756                           ;mcc_generated_files/pin_manager.c: 113:     RB7PPS = 0x0F;
  8757  0D5F  300F               	movlw	15
  8758  0D60  009F               	movwf	31	;volatile
  8759                           
  8760                           ;mcc_generated_files/pin_manager.c: 114:     RX1DTPPS = 0x0D;
  8761  0D61  300D               	movlw	13
  8762  0D62  017D               	movlb	61	; select bank61
  8763  0D63  00CB               	movwf	75	;volatile
  8764  0D64  0008               	return
  8765  0D65                     __end_of_PIN_MANAGER_Initialize:	
  8766                           
  8767                           	psect	text18
  8768  0B67                     __ptext18:	
  8769 ;; *************** function _OSCILLATOR_Initialize *****************
  8770 ;; Defined at:
  8771 ;;		line 59 in file "mcc_generated_files/mcc.c"
  8772 ;; Parameters:    Size  Location     Type
  8773 ;;		None
  8774 ;; Auto vars:     Size  Location     Type
  8775 ;;		None
  8776 ;; Return value:  Size  Location     Type
  8777 ;;                  1    wreg      void 
  8778 ;; Registers used:
  8779 ;;		wreg, status,2
  8780 ;; Tracked objects:
  8781 ;;		On entry : 0/0
  8782 ;;		On exit  : 0/0
  8783 ;;		Unchanged: 0/0
  8784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8788 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8789 ;;Total ram usage:        0 bytes
  8790 ;; Hardware stack levels used:    1
  8791 ;; Hardware stack levels required when called:    3
  8792 ;; This function calls:
  8793 ;;		Nothing
  8794 ;; This function is called by:
  8795 ;;		_SYSTEM_Initialize
  8796 ;; This function uses a non-reentrant model
  8797 ;;
  8798                           
  8799                           
  8800                           ;psect for function _OSCILLATOR_Initialize
  8801  0B67                     _OSCILLATOR_Initialize:	
  8802                           
  8803                           ;mcc_generated_files/mcc.c: 62:     OSCCON1 = 0x62;
  8804                           
  8805                           ;incstack = 0
  8806                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  8807  0B67  3062               	movlw	98
  8808  0B68  0151               	movlb	17	; select bank17
  8809  0B69  008D               	movwf	13	;volatile
  8810                           
  8811                           ;mcc_generated_files/mcc.c: 64:     OSCCON3 = 0x00;
  8812  0B6A  018F               	clrf	15	;volatile
  8813                           
  8814                           ;mcc_generated_files/mcc.c: 66:     OSCEN = 0x00;
  8815  0B6B  0191               	clrf	17	;volatile
  8816                           
  8817                           ;mcc_generated_files/mcc.c: 68:     OSCFRQ = 0x02;
  8818  0B6C  3002               	movlw	2
  8819  0B6D  0093               	movwf	19	;volatile
  8820                           
  8821                           ;mcc_generated_files/mcc.c: 70:     OSCTUNE = 0x00;
  8822  0B6E  0192               	clrf	18	;volatile
  8823  0B6F  0008               	return
  8824  0B70                     __end_of_OSCILLATOR_Initialize:	
  8825                           
  8826                           	psect	text19
  8827  0C81                     __ptext19:	
  8828 ;; *************** function _EUSART1_Initialize *****************
  8829 ;; Defined at:
  8830 ;;		line 66 in file "mcc_generated_files/eusart1.c"
  8831 ;; Parameters:    Size  Location     Type
  8832 ;;		None
  8833 ;; Auto vars:     Size  Location     Type
  8834 ;;		None
  8835 ;; Return value:  Size  Location     Type
  8836 ;;                  1    wreg      void 
  8837 ;; Registers used:
  8838 ;;		wreg, status,2, status,0, pclath, cstack
  8839 ;; Tracked objects:
  8840 ;;		On entry : 0/0
  8841 ;;		On exit  : 0/0
  8842 ;;		Unchanged: 0/0
  8843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8847 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8848 ;;Total ram usage:        0 bytes
  8849 ;; Hardware stack levels used:    1
  8850 ;; Hardware stack levels required when called:    4
  8851 ;; This function calls:
  8852 ;;		_EUSART1_SetErrorHandler
  8853 ;;		_EUSART1_SetFramingErrorHandler
  8854 ;;		_EUSART1_SetOverrunErrorHandler
  8855 ;; This function is called by:
  8856 ;;		_SYSTEM_Initialize
  8857 ;; This function uses a non-reentrant model
  8858 ;;
  8859                           
  8860                           
  8861                           ;psect for function _EUSART1_Initialize
  8862  0C81                     _EUSART1_Initialize:	
  8863                           
  8864                           ;mcc_generated_files/eusart1.c: 71:     BAUD1CON = 0x08;
  8865                           
  8866                           ;incstack = 0
  8867                           ; Regs used in _EUSART1_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8868  0C81  3008               	movlw	8
  8869  0C82  0142               	movlb	2	; select bank2
  8870  0C83  009F               	movwf	31	;volatile
  8871                           
  8872                           ;mcc_generated_files/eusart1.c: 74:     RC1STA = 0x90;
  8873  0C84  3090               	movlw	144
  8874  0C85  009D               	movwf	29	;volatile
  8875                           
  8876                           ;mcc_generated_files/eusart1.c: 77:     TX1STA = 0x24;
  8877  0C86  3024               	movlw	36
  8878  0C87  009E               	movwf	30	;volatile
  8879                           
  8880                           ;mcc_generated_files/eusart1.c: 80:     SP1BRGL = 0x19;
  8881  0C88  3019               	movlw	25
  8882  0C89  009B               	movwf	27	;volatile
  8883                           
  8884                           ;mcc_generated_files/eusart1.c: 83:     SP1BRGH = 0x00;
  8885  0C8A  019C               	clrf	28	;volatile
  8886                           
  8887                           ;mcc_generated_files/eusart1.c: 86:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultFr
      +                          amingErrorHandler);
  8888  0C8B  3000               	movlw	0
  8889  0C8C  00F0               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler
  8890  0C8D  3000               	movlw	0
  8891  0C8E  00F1               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler+1
  8892  0C8F  318B  234B  318C   	fcall	_EUSART1_SetFramingErrorHandler
  8893                           
  8894                           ;mcc_generated_files/eusart1.c: 87:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOv
      +                          errunErrorHandler);
  8895  0C92  3000               	movlw	0
  8896  0C93  00F0               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler
  8897  0C94  3000               	movlw	0
  8898  0C95  00F1               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler+1
  8899  0C96  318B  2351  318C   	fcall	_EUSART1_SetOverrunErrorHandler
  8900                           
  8901                           ;mcc_generated_files/eusart1.c: 88:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHand
      +                          ler);
  8902  0C99  3000               	movlw	0
  8903  0C9A  00F0               	movwf	EUSART1_SetErrorHandler@interruptHandler
  8904  0C9B  3000               	movlw	0
  8905  0C9C  00F1               	movwf	EUSART1_SetErrorHandler@interruptHandler+1
  8906  0C9D  318B  2345         	fcall	_EUSART1_SetErrorHandler
  8907                           
  8908                           ;mcc_generated_files/eusart1.c: 90:     eusart1RxLastError.status = 0;
  8909  0C9F  0141               	movlb	1	; select bank1
  8910  0CA0  01CF               	clrf	_eusart1RxLastError^(0+128)	;volatile
  8911  0CA1  0008               	return
  8912  0CA2                     __end_of_EUSART1_Initialize:	
  8913                           
  8914                           	psect	text20
  8915  0B51                     __ptext20:	
  8916 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  8917 ;; Defined at:
  8918 ;;		line 161 in file "mcc_generated_files/eusart1.c"
  8919 ;; Parameters:    Size  Location     Type
  8920 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  8921 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  8922 ;; Auto vars:     Size  Location     Type
  8923 ;;		None
  8924 ;; Return value:  Size  Location     Type
  8925 ;;                  1    wreg      void 
  8926 ;; Registers used:
  8927 ;;		wreg
  8928 ;; Tracked objects:
  8929 ;;		On entry : 0/0
  8930 ;;		On exit  : 0/0
  8931 ;;		Unchanged: 0/0
  8932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8933 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8936 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8937 ;;Total ram usage:        2 bytes
  8938 ;; Hardware stack levels used:    1
  8939 ;; Hardware stack levels required when called:    3
  8940 ;; This function calls:
  8941 ;;		Nothing
  8942 ;; This function is called by:
  8943 ;;		_EUSART1_Initialize
  8944 ;; This function uses a non-reentrant model
  8945 ;;
  8946                           
  8947                           
  8948                           ;psect for function _EUSART1_SetOverrunErrorHandler
  8949  0B51                     _EUSART1_SetOverrunErrorHandler:	
  8950                           
  8951                           ;mcc_generated_files/eusart1.c: 162:     EUSART1_OverrunErrorHandler = interruptHandler;
  8952                           
  8953                           ;incstack = 0
  8954                           ; Regs used in _EUSART1_SetOverrunErrorHandler: [wreg]
  8955  0B51  0871               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler+1,w
  8956  0B52  0141               	movlb	1	; select bank1
  8957  0B53  00EB               	movwf	(_EUSART1_OverrunErrorHandler+1)^(0+128)
  8958  0B54  0870               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler,w
  8959  0B55  00EA               	movwf	_EUSART1_OverrunErrorHandler^(0+128)
  8960  0B56  0008               	return
  8961  0B57                     __end_of_EUSART1_SetOverrunErrorHandler:	
  8962                           
  8963                           	psect	text21
  8964  0B4B                     __ptext21:	
  8965 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  8966 ;; Defined at:
  8967 ;;		line 157 in file "mcc_generated_files/eusart1.c"
  8968 ;; Parameters:    Size  Location     Type
  8969 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  8970 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  8971 ;; Auto vars:     Size  Location     Type
  8972 ;;		None
  8973 ;; Return value:  Size  Location     Type
  8974 ;;                  1    wreg      void 
  8975 ;; Registers used:
  8976 ;;		wreg
  8977 ;; Tracked objects:
  8978 ;;		On entry : 0/0
  8979 ;;		On exit  : 0/0
  8980 ;;		Unchanged: 0/0
  8981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8982 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8985 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8986 ;;Total ram usage:        2 bytes
  8987 ;; Hardware stack levels used:    1
  8988 ;; Hardware stack levels required when called:    3
  8989 ;; This function calls:
  8990 ;;		Nothing
  8991 ;; This function is called by:
  8992 ;;		_EUSART1_Initialize
  8993 ;; This function uses a non-reentrant model
  8994 ;;
  8995                           
  8996                           
  8997                           ;psect for function _EUSART1_SetFramingErrorHandler
  8998  0B4B                     _EUSART1_SetFramingErrorHandler:	
  8999                           
  9000                           ;mcc_generated_files/eusart1.c: 158:     EUSART1_FramingErrorHandler = interruptHandler;
  9001                           
  9002                           ;incstack = 0
  9003                           ; Regs used in _EUSART1_SetFramingErrorHandler: [wreg]
  9004  0B4B  0871               	movf	EUSART1_SetFramingErrorHandler@interruptHandler+1,w
  9005  0B4C  0141               	movlb	1	; select bank1
  9006  0B4D  00ED               	movwf	(_EUSART1_FramingErrorHandler+1)^(0+128)
  9007  0B4E  0870               	movf	EUSART1_SetFramingErrorHandler@interruptHandler,w
  9008  0B4F  00EC               	movwf	_EUSART1_FramingErrorHandler^(0+128)
  9009  0B50  0008               	return
  9010  0B51                     __end_of_EUSART1_SetFramingErrorHandler:	
  9011                           
  9012                           	psect	text22
  9013  0B45                     __ptext22:	
  9014 ;; *************** function _EUSART1_SetErrorHandler *****************
  9015 ;; Defined at:
  9016 ;;		line 165 in file "mcc_generated_files/eusart1.c"
  9017 ;; Parameters:    Size  Location     Type
  9018 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  9019 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  9020 ;; Auto vars:     Size  Location     Type
  9021 ;;		None
  9022 ;; Return value:  Size  Location     Type
  9023 ;;                  1    wreg      void 
  9024 ;; Registers used:
  9025 ;;		wreg
  9026 ;; Tracked objects:
  9027 ;;		On entry : 0/0
  9028 ;;		On exit  : 0/0
  9029 ;;		Unchanged: 0/0
  9030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9031 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9034 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9035 ;;Total ram usage:        2 bytes
  9036 ;; Hardware stack levels used:    1
  9037 ;; Hardware stack levels required when called:    3
  9038 ;; This function calls:
  9039 ;;		Nothing
  9040 ;; This function is called by:
  9041 ;;		_EUSART1_Initialize
  9042 ;; This function uses a non-reentrant model
  9043 ;;
  9044                           
  9045                           
  9046                           ;psect for function _EUSART1_SetErrorHandler
  9047  0B45                     _EUSART1_SetErrorHandler:	
  9048                           
  9049                           ;mcc_generated_files/eusart1.c: 166:     EUSART1_ErrorHandler = interruptHandler;
  9050                           
  9051                           ;incstack = 0
  9052                           ; Regs used in _EUSART1_SetErrorHandler: [wreg]
  9053  0B45  0871               	movf	EUSART1_SetErrorHandler@interruptHandler+1,w
  9054  0B46  0142               	movlb	2	; select bank2
  9055  0B47  00EE               	movwf	(_EUSART1_ErrorHandler+1)^(0+256)
  9056  0B48  0870               	movf	EUSART1_SetErrorHandler@interruptHandler,w
  9057  0B49  00ED               	movwf	_EUSART1_ErrorHandler^(0+256)
  9058  0B4A  0008               	return
  9059  0B4B                     __end_of_EUSART1_SetErrorHandler:	
  9060                           
  9061                           	psect	text23
  9062  0042                     __ptext23:	
  9063 ;; *************** function _PollGPS *****************
  9064 ;; Defined at:
  9065 ;;		line 509 in file "main.c"
  9066 ;; Parameters:    Size  Location     Type
  9067 ;;		None
  9068 ;; Auto vars:     Size  Location     Type
  9069 ;;  byte            1   38[BANK0 ] unsigned char 
  9070 ;;  i               2   39[BANK0 ] int 
  9071 ;;  counti          2   33[BANK0 ] int 
  9072 ;;  startTime       4   29[BANK0 ] unsigned long 
  9073 ;;  index           2   41[BANK0 ] int 
  9074 ;;  eusart_compl    1   37[BANK0 ] _Bool 
  9075 ;;  success         1   35[BANK0 ] _Bool 
  9076 ;; Return value:  Size  Location     Type
  9077 ;;                  1    wreg      _Bool 
  9078 ;; Registers used:
  9079 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9080 ;; Tracked objects:
  9081 ;;		On entry : 0/0
  9082 ;;		On exit  : 0/0
  9083 ;;		Unchanged: 0/0
  9084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9086 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9087 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9088 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9089 ;;Total ram usage:       18 bytes
  9090 ;; Hardware stack levels used:    1
  9091 ;; Hardware stack levels required when called:    7
  9092 ;; This function calls:
  9093 ;;		_ClearNMEA
  9094 ;;		_EUSART1_Read
  9095 ;;		_EUSART1_is_rx_ready
  9096 ;;		_GetAtRowCSV
  9097 ;;		_Insert
  9098 ;;		_InsertString
  9099 ;;		_InsertTxData
  9100 ;;		_InsertTxDataSep
  9101 ;;		_WriteGPS
  9102 ;;		_strcmp
  9103 ;;		_strlen
  9104 ;; This function is called by:
  9105 ;;		_main
  9106 ;; This function uses a non-reentrant model
  9107 ;;
  9108                           
  9109                           
  9110                           ;psect for function _PollGPS
  9111  0042                     _PollGPS:	
  9112                           
  9113                           ;main.c: 511:     _Bool success = 0;
  9114                           
  9115                           ;incstack = 0
  9116                           ; Regs used in _PollGPS: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9117  0042  0140               	movlb	0	; select bank0
  9118  0043  01C3               	clrf	PollGPS@success
  9119                           
  9120                           ;main.c: 512:     uint32_t startTime = ticks;
  9121  0044  0141               	movlb	1	; select bank1
  9122  0045  0847               	movf	(_ticks+3)^(0+128),w
  9123  0046  0140               	movlb	0	; select bank0
  9124  0047  00C0               	movwf	PollGPS@startTime+3
  9125  0048  0141               	movlb	1	; select bank1
  9126  0049  0846               	movf	(_ticks+2)^(0+128),w
  9127  004A  0140               	movlb	0	; select bank0
  9128  004B  00BF               	movwf	PollGPS@startTime+2
  9129  004C  0141               	movlb	1	; select bank1
  9130  004D  0845               	movf	(_ticks+1)^(0+128),w
  9131  004E  0140               	movlb	0	; select bank0
  9132  004F  00BE               	movwf	PollGPS@startTime+1
  9133  0050  0141               	movlb	1	; select bank1
  9134  0051  0844               	movf	_ticks^(0+128),w
  9135  0052  0140               	movlb	0	; select bank0
  9136  0053  00BD               	movwf	PollGPS@startTime
  9137                           
  9138                           ;main.c: 515:     ClearNMEA();
  9139  0054  318C  2464  3180   	fcall	_ClearNMEA
  9140                           
  9141                           ;main.c: 518:     int index = 0;
  9142  0057  0140               	movlb	0	; select bank0
  9143  0058  01C9               	clrf	PollGPS@index
  9144  0059  01CA               	clrf	PollGPS@index+1
  9145                           
  9146                           ;main.c: 521:     _Bool eusart_complete = 0;
  9147  005A  01C5               	clrf	PollGPS@eusart_complete
  9148                           
  9149                           ;main.c: 524:     WriteGPS("$PUBX,00*33\r\n");
  9150  005B  309C               	movlw	low (STR_7| (0+32768))
  9151  005C  00F5               	movwf	WriteGPS@message
  9152  005D  3090               	movlw	high (STR_7| (0+32768))
  9153  005E  00F6               	movwf	WriteGPS@message+1
  9154  005F  318D  2514  3180   	fcall	_WriteGPS
  9155  0062                     l4270:	
  9156                           ;main.c: 527:     while (ticks - startTime < 3000)
  9157                           
  9158                           
  9159                           ;main.c: 527:     while (ticks - startTime < 3000)
  9160  0062  0140               	movlb	0	; select bank0
  9161  0063  083D               	movf	PollGPS@startTime,w
  9162  0064  0141               	movlb	1	; select bank1
  9163  0065  0244               	subwf	_ticks^(0+128),w
  9164  0066  0140               	movlb	0	; select bank0
  9165  0067  00B9               	movwf	??_PollGPS
  9166  0068  083E               	movf	PollGPS@startTime+1,w
  9167  0069  0141               	movlb	1	; select bank1
  9168  006A  3B45               	subwfb	(_ticks+1)^(0+128),w
  9169  006B  0140               	movlb	0	; select bank0
  9170  006C  00BA               	movwf	??_PollGPS+1
  9171  006D  083F               	movf	PollGPS@startTime+2,w
  9172  006E  0141               	movlb	1	; select bank1
  9173  006F  3B46               	subwfb	(_ticks+2)^(0+128),w
  9174  0070  0140               	movlb	0	; select bank0
  9175  0071  00BB               	movwf	??_PollGPS+2
  9176  0072  0840               	movf	PollGPS@startTime+3,w
  9177  0073  0141               	movlb	1	; select bank1
  9178  0074  3B47               	subwfb	(_ticks+3)^(0+128),w
  9179  0075  0140               	movlb	0	; select bank0
  9180  0076  00BC               	movwf	??_PollGPS+3
  9181  0077  083C               	movf	??_PollGPS+3,w
  9182  0078  1D03               	btfss	3,2
  9183  0079  2A70               	goto	l4272
  9184  007A  083B               	movf	??_PollGPS+2,w
  9185  007B  1D03               	btfss	3,2
  9186  007C  2A70               	goto	l4272
  9187  007D  30B8               	movlw	184
  9188  007E  0239               	subwf	??_PollGPS,w
  9189  007F  300B               	movlw	11
  9190  0080  3B3A               	subwfb	??_PollGPS+1,w
  9191  0081  1803               	btfsc	3,0
  9192  0082  2A70               	goto	l4272
  9193                           
  9194                           ;main.c: 528:     {;main.c: 530:         if (eusart_complete)
  9195  0083  0845               	movf	PollGPS@eusart_complete,w
  9196  0084  1903               	btfsc	3,2
  9197  0085  2A48               	goto	l4258
  9198                           
  9199                           ;main.c: 531:         {;main.c: 532:             index = strlen(txdata);
  9200  0086  3064               	movlw	100
  9201  0087  00F0               	movwf	strlen@s
  9202  0088  3027               	movlw	39
  9203  0089  00F1               	movwf	strlen@s+1
  9204  008A  318B  23FD  3180   	fcall	_strlen
  9205  008D  0871               	movf	?_strlen+1,w
  9206  008E  0140               	movlb	0	; select bank0
  9207  008F  00CA               	movwf	PollGPS@index+1
  9208  0090  0870               	movf	?_strlen,w
  9209  0091  00C9               	movwf	PollGPS@index
  9210                           
  9211                           ;main.c: 534:             for (int i = 0, counti = strlen(GetAtRowCSV(nmea_data, PUBX_TI
      +                          ME)); i < counti; i++)
  9212  0092  01C7               	clrf	PollGPS@i
  9213  0093  01C8               	clrf	PollGPS@i+1
  9214  0094  30D8               	movlw	216
  9215  0095  00F6               	movwf	GetAtRowCSV@src
  9216  0096  3026               	movlw	38
  9217  0097  00F7               	movwf	GetAtRowCSV@src+1
  9218  0098  3000               	movlw	0
  9219  0099  00F9               	movwf	GetAtRowCSV@column+1
  9220  009A  3002               	movlw	2
  9221  009B  00F8               	movwf	GetAtRowCSV@column
  9222  009C  3186  2644  3180   	fcall	_GetAtRowCSV
  9223  009F  0140               	movlb	0	; select bank0
  9224  00A0  00B9               	movwf	??_PollGPS
  9225  00A1  0839               	movf	??_PollGPS,w
  9226  00A2  00C4               	movwf	_PollGPS$2657
  9227  00A3  0844               	movf	_PollGPS$2657,w
  9228  00A4  00F0               	movwf	strlen@s
  9229  00A5  3000               	movlw	0
  9230  00A6  00F1               	movwf	strlen@s+1
  9231  00A7  318B  23FD  3180   	fcall	_strlen
  9232  00AA  0871               	movf	?_strlen+1,w
  9233  00AB  0140               	movlb	0	; select bank0
  9234  00AC  00C2               	movwf	PollGPS@counti+1
  9235  00AD  0870               	movf	?_strlen,w
  9236  00AE  00C1               	movwf	PollGPS@counti
  9237  00AF                     l4244:	
  9238  00AF  0848               	movf	PollGPS@i+1,w
  9239  00B0  3A80               	xorlw	128
  9240  00B1  00B9               	movwf	??_PollGPS
  9241  00B2  0842               	movf	PollGPS@counti+1,w
  9242  00B3  3A80               	xorlw	128
  9243  00B4  0239               	subwf	??_PollGPS,w
  9244  00B5  1D03               	skipz
  9245  00B6  28B9               	goto	u3705
  9246  00B7  0841               	movf	PollGPS@counti,w
  9247  00B8  0247               	subwf	PollGPS@i,w
  9248  00B9                     u3705:	
  9249  00B9  1803               	btfsc	3,0
  9250  00BA  290C               	goto	l4246
  9251                           
  9252                           ;main.c: 535:             {;main.c: 536:                 if (i < 6)
  9253  00BB  0140               	movlb	0	; select bank0
  9254  00BC  0848               	movf	PollGPS@i+1,w
  9255  00BD  3A80               	xorlw	128
  9256  00BE  00B9               	movwf	??_PollGPS
  9257  00BF  3080               	movlw	128
  9258  00C0  0239               	subwf	??_PollGPS,w
  9259  00C1  1D03               	skipz
  9260  00C2  28C5               	goto	u3675
  9261  00C3  3006               	movlw	6
  9262  00C4  0247               	subwf	PollGPS@i,w
  9263  00C5                     u3675:	
  9264  00C5  1803               	skipnc
  9265  00C6  2906               	goto	l4242
  9266                           
  9267                           ;main.c: 537:                 {;main.c: 538:                     if (i == 2 || i == 4)
  9268  00C7  3002               	movlw	2
  9269  00C8  0140               	movlb	0	; select bank0
  9270  00C9  0647               	xorwf	PollGPS@i,w
  9271  00CA  0448               	iorwf	PollGPS@i+1,w
  9272  00CB  1903               	btfsc	3,2
  9273  00CC  28D2               	goto	l4240
  9274  00CD  3004               	movlw	4
  9275  00CE  0647               	xorwf	PollGPS@i,w
  9276  00CF  0448               	iorwf	PollGPS@i+1,w
  9277  00D0  1D03               	btfss	3,2
  9278  00D1  28EA               	goto	l801
  9279  00D2                     l4240:	
  9280                           
  9281                           ;main.c: 539:                     {;main.c: 540:                         index = Insert(
      +                          txdata, ':', index, 140);
  9282  00D2  3064               	movlw	100
  9283  00D3  00F5               	movwf	Insert@dest
  9284  00D4  3027               	movlw	39
  9285  00D5  00F6               	movwf	Insert@dest+1
  9286  00D6  303A               	movlw	58
  9287  00D7  00B9               	movwf	??_PollGPS
  9288  00D8  0839               	movf	??_PollGPS,w
  9289  00D9  00F7               	movwf	Insert@src
  9290  00DA  084A               	movf	PollGPS@index+1,w
  9291  00DB  00F9               	movwf	Insert@index+1
  9292  00DC  0849               	movf	PollGPS@index,w
  9293  00DD  00F8               	movwf	Insert@index
  9294  00DE  308C               	movlw	140
  9295  00DF  00FA               	movwf	Insert@destLimit
  9296  00E0  3000               	movlw	0
  9297  00E1  00FB               	movwf	Insert@destLimit+1
  9298  00E2  3185  2569  3180   	fcall	_Insert
  9299  00E5  0876               	movf	?_Insert+1,w
  9300  00E6  0140               	movlb	0	; select bank0
  9301  00E7  00CA               	movwf	PollGPS@index+1
  9302  00E8  0875               	movf	?_Insert,w
  9303  00E9  00C9               	movwf	PollGPS@index
  9304  00EA                     l801:	
  9305                           ;main.c: 541:                     }
  9306                           
  9307                           
  9308                           ;main.c: 542:                     index = Insert(txdata, csvField[i], index, 140);
  9309  00EA  3064               	movlw	100
  9310  00EB  00F5               	movwf	Insert@dest
  9311  00EC  3027               	movlw	39
  9312  00ED  00F6               	movwf	Insert@dest+1
  9313  00EE  0847               	movf	PollGPS@i,w
  9314  00EF  3ED0               	addlw	(low (_csvField| 0))& (0+255)
  9315  00F0  0086               	movwf	6
  9316  00F1  0187               	clrf	7
  9317  00F2  0801               	movf	1,w
  9318  00F3  00B9               	movwf	??_PollGPS
  9319  00F4  0839               	movf	??_PollGPS,w
  9320  00F5  00F7               	movwf	Insert@src
  9321  00F6  084A               	movf	PollGPS@index+1,w
  9322  00F7  00F9               	movwf	Insert@index+1
  9323  00F8  0849               	movf	PollGPS@index,w
  9324  00F9  00F8               	movwf	Insert@index
  9325  00FA  308C               	movlw	140
  9326  00FB  00FA               	movwf	Insert@destLimit
  9327  00FC  3000               	movlw	0
  9328  00FD  00FB               	movwf	Insert@destLimit+1
  9329  00FE  3185  2569  3180   	fcall	_Insert
  9330  0101  0876               	movf	?_Insert+1,w
  9331  0102  0140               	movlb	0	; select bank0
  9332  0103  00CA               	movwf	PollGPS@index+1
  9333  0104  0875               	movf	?_Insert,w
  9334  0105  00C9               	movwf	PollGPS@index
  9335  0106                     l4242:	
  9336                           
  9337                           ;main.c: 544:             }
  9338  0106  3001               	movlw	1
  9339  0107  0140               	movlb	0	; select bank0
  9340  0108  07C7               	addwf	PollGPS@i,f
  9341  0109  3000               	movlw	0
  9342  010A  3DC8               	addwfc	PollGPS@i+1,f
  9343  010B  28AF               	goto	l4244
  9344  010C                     l4246:	
  9345                           
  9346                           ;main.c: 545:             index = InsertTxDataSep(index);
  9347  010C  0140               	movlb	0	; select bank0
  9348  010D  084A               	movf	PollGPS@index+1,w
  9349  010E  00FD               	movwf	InsertTxDataSep@index+1
  9350  010F  0849               	movf	PollGPS@index,w
  9351  0110  00FC               	movwf	InsertTxDataSep@index
  9352  0111  318C  2414  3180   	fcall	_InsertTxDataSep
  9353  0114  087D               	movf	?_InsertTxDataSep+1,w
  9354  0115  0140               	movlb	0	; select bank0
  9355  0116  00CA               	movwf	PollGPS@index+1
  9356  0117  087C               	movf	?_InsertTxDataSep,w
  9357  0118  00C9               	movwf	PollGPS@index
  9358                           
  9359                           ;main.c: 547:             if (strcmp(GetAtRowCSV(nmea_data, PUBX_NS), 'S') == 0)
  9360  0119  3053               	movlw	83
  9361  011A  00FB               	movwf	strcmp@r
  9362  011B  3080               	movlw	128
  9363  011C  00FC               	movwf	strcmp@r+1
  9364  011D  30D8               	movlw	216
  9365  011E  00F6               	movwf	GetAtRowCSV@src
  9366  011F  3026               	movlw	38
  9367  0120  00F7               	movwf	GetAtRowCSV@src+1
  9368  0121  3000               	movlw	0
  9369  0122  00F9               	movwf	GetAtRowCSV@column+1
  9370  0123  3004               	movlw	4
  9371  0124  00F8               	movwf	GetAtRowCSV@column
  9372  0125  3186  2644  3180   	fcall	_GetAtRowCSV
  9373  0128  318D  25BA  3180   	fcall	_strcmp
  9374  012B  087B               	movf	?_strcmp,w
  9375  012C  047C               	iorwf	?_strcmp+1,w
  9376  012D  1D03               	btfss	3,2
  9377  012E  2948               	goto	l805
  9378                           
  9379                           ;main.c: 548:             {;main.c: 549:                 index = Insert(txdata, '-', ind
      +                          ex, 140);
  9380  012F  3064               	movlw	100
  9381  0130  00F5               	movwf	Insert@dest
  9382  0131  3027               	movlw	39
  9383  0132  00F6               	movwf	Insert@dest+1
  9384  0133  302D               	movlw	45
  9385  0134  0140               	movlb	0	; select bank0
  9386  0135  00B9               	movwf	??_PollGPS
  9387  0136  0839               	movf	??_PollGPS,w
  9388  0137  00F7               	movwf	Insert@src
  9389  0138  084A               	movf	PollGPS@index+1,w
  9390  0139  00F9               	movwf	Insert@index+1
  9391  013A  0849               	movf	PollGPS@index,w
  9392  013B  00F8               	movwf	Insert@index
  9393  013C  308C               	movlw	140
  9394  013D  00FA               	movwf	Insert@destLimit
  9395  013E  3000               	movlw	0
  9396  013F  00FB               	movwf	Insert@destLimit+1
  9397  0140  3185  2569  3180   	fcall	_Insert
  9398  0143  0876               	movf	?_Insert+1,w
  9399  0144  0140               	movlb	0	; select bank0
  9400  0145  00CA               	movwf	PollGPS@index+1
  9401  0146  0875               	movf	?_Insert,w
  9402  0147  00C9               	movwf	PollGPS@index
  9403  0148                     l805:	
  9404                           ;main.c: 550:             }
  9405                           
  9406                           
  9407                           ;main.c: 551:             index = InsertString(txdata, GetAtRowCSV(nmea_data, PUBX_LAT),
      +                           index, 140);
  9408  0148  3064               	movlw	100
  9409  0149  0140               	movlb	0	; select bank0
  9410  014A  00A9               	movwf	InsertString@dest
  9411  014B  3027               	movlw	39
  9412  014C  00AA               	movwf	InsertString@dest+1
  9413  014D  30D8               	movlw	216
  9414  014E  00F6               	movwf	GetAtRowCSV@src
  9415  014F  3026               	movlw	38
  9416  0150  00F7               	movwf	GetAtRowCSV@src+1
  9417  0151  3000               	movlw	0
  9418  0152  00F9               	movwf	GetAtRowCSV@column+1
  9419  0153  3003               	movlw	3
  9420  0154  00F8               	movwf	GetAtRowCSV@column
  9421  0155  3186  2644  3180   	fcall	_GetAtRowCSV
  9422  0158  0140               	movlb	0	; select bank0
  9423  0159  00AB               	movwf	InsertString@src
  9424  015A  3000               	movlw	0
  9425  015B  00AC               	movwf	InsertString@src+1
  9426  015C  084A               	movf	PollGPS@index+1,w
  9427  015D  00AE               	movwf	InsertString@index+1
  9428  015E  0849               	movf	PollGPS@index,w
  9429  015F  00AD               	movwf	InsertString@index
  9430  0160  308C               	movlw	140
  9431  0161  00AF               	movwf	InsertString@destLimit
  9432  0162  3000               	movlw	0
  9433  0163  00B0               	movwf	InsertString@destLimit+1
  9434  0164  3187  27AA  3180   	fcall	_InsertString
  9435  0167  0140               	movlb	0	; select bank0
  9436  0168  082A               	movf	?_InsertString+1,w
  9437  0169  00CA               	movwf	PollGPS@index+1
  9438  016A  0829               	movf	?_InsertString,w
  9439  016B  00C9               	movwf	PollGPS@index
  9440                           
  9441                           ;main.c: 552:             index = InsertTxDataSep(index);
  9442  016C  084A               	movf	PollGPS@index+1,w
  9443  016D  00FD               	movwf	InsertTxDataSep@index+1
  9444  016E  0849               	movf	PollGPS@index,w
  9445  016F  00FC               	movwf	InsertTxDataSep@index
  9446  0170  318C  2414  3180   	fcall	_InsertTxDataSep
  9447  0173  087D               	movf	?_InsertTxDataSep+1,w
  9448  0174  0140               	movlb	0	; select bank0
  9449  0175  00CA               	movwf	PollGPS@index+1
  9450  0176  087C               	movf	?_InsertTxDataSep,w
  9451  0177  00C9               	movwf	PollGPS@index
  9452                           
  9453                           ;main.c: 554:             if (strcmp(GetAtRowCSV(nmea_data, PUBX_EW), 'S') == 0)
  9454  0178  3053               	movlw	83
  9455  0179  00FB               	movwf	strcmp@r
  9456  017A  3080               	movlw	128
  9457  017B  00FC               	movwf	strcmp@r+1
  9458  017C  30D8               	movlw	216
  9459  017D  00F6               	movwf	GetAtRowCSV@src
  9460  017E  3026               	movlw	38
  9461  017F  00F7               	movwf	GetAtRowCSV@src+1
  9462  0180  3000               	movlw	0
  9463  0181  00F9               	movwf	GetAtRowCSV@column+1
  9464  0182  3006               	movlw	6
  9465  0183  00F8               	movwf	GetAtRowCSV@column
  9466  0184  3186  2644  3180   	fcall	_GetAtRowCSV
  9467  0187  318D  25BA  3180   	fcall	_strcmp
  9468  018A  087B               	movf	?_strcmp,w
  9469  018B  047C               	iorwf	?_strcmp+1,w
  9470  018C  1D03               	btfss	3,2
  9471  018D  29A7               	goto	l806
  9472                           
  9473                           ;main.c: 555:             {;main.c: 556:                 index = Insert(txdata, '-', ind
      +                          ex, 140);
  9474  018E  3064               	movlw	100
  9475  018F  00F5               	movwf	Insert@dest
  9476  0190  3027               	movlw	39
  9477  0191  00F6               	movwf	Insert@dest+1
  9478  0192  302D               	movlw	45
  9479  0193  0140               	movlb	0	; select bank0
  9480  0194  00B9               	movwf	??_PollGPS
  9481  0195  0839               	movf	??_PollGPS,w
  9482  0196  00F7               	movwf	Insert@src
  9483  0197  084A               	movf	PollGPS@index+1,w
  9484  0198  00F9               	movwf	Insert@index+1
  9485  0199  0849               	movf	PollGPS@index,w
  9486  019A  00F8               	movwf	Insert@index
  9487  019B  308C               	movlw	140
  9488  019C  00FA               	movwf	Insert@destLimit
  9489  019D  3000               	movlw	0
  9490  019E  00FB               	movwf	Insert@destLimit+1
  9491  019F  3185  2569  3180   	fcall	_Insert
  9492  01A2  0876               	movf	?_Insert+1,w
  9493  01A3  0140               	movlb	0	; select bank0
  9494  01A4  00CA               	movwf	PollGPS@index+1
  9495  01A5  0875               	movf	?_Insert,w
  9496  01A6  00C9               	movwf	PollGPS@index
  9497  01A7                     l806:	
  9498                           ;main.c: 557:             }
  9499                           
  9500                           
  9501                           ;main.c: 558:             index = InsertString(txdata, GetAtRowCSV(nmea_data, PUBX_LONG)
      +                          , index, 140);
  9502  01A7  3064               	movlw	100
  9503  01A8  0140               	movlb	0	; select bank0
  9504  01A9  00A9               	movwf	InsertString@dest
  9505  01AA  3027               	movlw	39
  9506  01AB  00AA               	movwf	InsertString@dest+1
  9507  01AC  30D8               	movlw	216
  9508  01AD  00F6               	movwf	GetAtRowCSV@src
  9509  01AE  3026               	movlw	38
  9510  01AF  00F7               	movwf	GetAtRowCSV@src+1
  9511  01B0  3000               	movlw	0
  9512  01B1  00F9               	movwf	GetAtRowCSV@column+1
  9513  01B2  3005               	movlw	5
  9514  01B3  00F8               	movwf	GetAtRowCSV@column
  9515  01B4  3186  2644  3180   	fcall	_GetAtRowCSV
  9516  01B7  0140               	movlb	0	; select bank0
  9517  01B8  00AB               	movwf	InsertString@src
  9518  01B9  3000               	movlw	0
  9519  01BA  00AC               	movwf	InsertString@src+1
  9520  01BB  084A               	movf	PollGPS@index+1,w
  9521  01BC  00AE               	movwf	InsertString@index+1
  9522  01BD  0849               	movf	PollGPS@index,w
  9523  01BE  00AD               	movwf	InsertString@index
  9524  01BF  308C               	movlw	140
  9525  01C0  00AF               	movwf	InsertString@destLimit
  9526  01C1  3000               	movlw	0
  9527  01C2  00B0               	movwf	InsertString@destLimit+1
  9528  01C3  3187  27AA  3180   	fcall	_InsertString
  9529  01C6  0140               	movlb	0	; select bank0
  9530  01C7  082A               	movf	?_InsertString+1,w
  9531  01C8  00CA               	movwf	PollGPS@index+1
  9532  01C9  0829               	movf	?_InsertString,w
  9533  01CA  00C9               	movwf	PollGPS@index
  9534                           
  9535                           ;main.c: 559:             index = InsertTxDataSep(index);
  9536  01CB  084A               	movf	PollGPS@index+1,w
  9537  01CC  00FD               	movwf	InsertTxDataSep@index+1
  9538  01CD  0849               	movf	PollGPS@index,w
  9539  01CE  00FC               	movwf	InsertTxDataSep@index
  9540  01CF  318C  2414  3180   	fcall	_InsertTxDataSep
  9541  01D2  087D               	movf	?_InsertTxDataSep+1,w
  9542  01D3  0140               	movlb	0	; select bank0
  9543  01D4  00CA               	movwf	PollGPS@index+1
  9544  01D5  087C               	movf	?_InsertTxDataSep,w
  9545  01D6  00C9               	movwf	PollGPS@index
  9546                           
  9547                           ;main.c: 561:             index = InsertTxData(index, PUBX_ALT);
  9548  01D7  084A               	movf	PollGPS@index+1,w
  9549  01D8  00B6               	movwf	InsertTxData@index+1
  9550  01D9  0849               	movf	PollGPS@index,w
  9551  01DA  00B5               	movwf	InsertTxData@index
  9552  01DB  3000               	movlw	0
  9553  01DC  00B8               	movwf	InsertTxData@field+1
  9554  01DD  3007               	movlw	7
  9555  01DE  00B7               	movwf	InsertTxData@field
  9556  01DF  318E  263E  3180   	fcall	_InsertTxData
  9557  01E2  0140               	movlb	0	; select bank0
  9558  01E3  0836               	movf	?_InsertTxData+1,w
  9559  01E4  00CA               	movwf	PollGPS@index+1
  9560  01E5  0835               	movf	?_InsertTxData,w
  9561  01E6  00C9               	movwf	PollGPS@index
  9562                           
  9563                           ;main.c: 562:             index = InsertTxData(index, PUBX_HDOP);
  9564  01E7  084A               	movf	PollGPS@index+1,w
  9565  01E8  00B6               	movwf	InsertTxData@index+1
  9566  01E9  0849               	movf	PollGPS@index,w
  9567  01EA  00B5               	movwf	InsertTxData@index
  9568  01EB  3000               	movlw	0
  9569  01EC  00B8               	movwf	InsertTxData@field+1
  9570  01ED  3009               	movlw	9
  9571  01EE  00B7               	movwf	InsertTxData@field
  9572  01EF  318E  263E  3180   	fcall	_InsertTxData
  9573  01F2  0140               	movlb	0	; select bank0
  9574  01F3  0836               	movf	?_InsertTxData+1,w
  9575  01F4  00CA               	movwf	PollGPS@index+1
  9576  01F5  0835               	movf	?_InsertTxData,w
  9577  01F6  00C9               	movwf	PollGPS@index
  9578                           
  9579                           ;main.c: 563:             index = InsertTxData(index, PUBX_VDOP);
  9580  01F7  084A               	movf	PollGPS@index+1,w
  9581  01F8  00B6               	movwf	InsertTxData@index+1
  9582  01F9  0849               	movf	PollGPS@index,w
  9583  01FA  00B5               	movwf	InsertTxData@index
  9584  01FB  3000               	movlw	0
  9585  01FC  00B8               	movwf	InsertTxData@field+1
  9586  01FD  300A               	movlw	10
  9587  01FE  00B7               	movwf	InsertTxData@field
  9588  01FF  318E  263E  3180   	fcall	_InsertTxData
  9589  0202  0140               	movlb	0	; select bank0
  9590  0203  0836               	movf	?_InsertTxData+1,w
  9591  0204  00CA               	movwf	PollGPS@index+1
  9592  0205  0835               	movf	?_InsertTxData,w
  9593  0206  00C9               	movwf	PollGPS@index
  9594                           
  9595                           ;main.c: 564:             index = InsertTxData(index, PUBX_SOG);
  9596  0207  084A               	movf	PollGPS@index+1,w
  9597  0208  00B6               	movwf	InsertTxData@index+1
  9598  0209  0849               	movf	PollGPS@index,w
  9599  020A  00B5               	movwf	InsertTxData@index
  9600  020B  3000               	movlw	0
  9601  020C  00B8               	movwf	InsertTxData@field+1
  9602  020D  300B               	movlw	11
  9603  020E  00B7               	movwf	InsertTxData@field
  9604  020F  318E  263E  3180   	fcall	_InsertTxData
  9605  0212  0140               	movlb	0	; select bank0
  9606  0213  0836               	movf	?_InsertTxData+1,w
  9607  0214  00CA               	movwf	PollGPS@index+1
  9608  0215  0835               	movf	?_InsertTxData,w
  9609  0216  00C9               	movwf	PollGPS@index
  9610                           
  9611                           ;main.c: 565:             index = InsertTxData(index, PUBX_COG);
  9612  0217  084A               	movf	PollGPS@index+1,w
  9613  0218  00B6               	movwf	InsertTxData@index+1
  9614  0219  0849               	movf	PollGPS@index,w
  9615  021A  00B5               	movwf	InsertTxData@index
  9616  021B  3000               	movlw	0
  9617  021C  00B8               	movwf	InsertTxData@field+1
  9618  021D  300C               	movlw	12
  9619  021E  00B7               	movwf	InsertTxData@field
  9620  021F  318E  263E  3180   	fcall	_InsertTxData
  9621  0222  0140               	movlb	0	; select bank0
  9622  0223  0836               	movf	?_InsertTxData+1,w
  9623  0224  00CA               	movwf	PollGPS@index+1
  9624  0225  0835               	movf	?_InsertTxData,w
  9625  0226  00C9               	movwf	PollGPS@index
  9626                           
  9627                           ;main.c: 566:             index = InsertTxData(index, PUBX_VVEL);
  9628  0227  084A               	movf	PollGPS@index+1,w
  9629  0228  00B6               	movwf	InsertTxData@index+1
  9630  0229  0849               	movf	PollGPS@index,w
  9631  022A  00B5               	movwf	InsertTxData@index
  9632  022B  3000               	movlw	0
  9633  022C  00B8               	movwf	InsertTxData@field+1
  9634  022D  300D               	movlw	13
  9635  022E  00B7               	movwf	InsertTxData@field
  9636  022F  318E  263E  3180   	fcall	_InsertTxData
  9637  0232  0140               	movlb	0	; select bank0
  9638  0233  0836               	movf	?_InsertTxData+1,w
  9639  0234  00CA               	movwf	PollGPS@index+1
  9640  0235  0835               	movf	?_InsertTxData,w
  9641  0236  00C9               	movwf	PollGPS@index
  9642                           
  9643                           ;main.c: 567:             index = InsertTxData(index, PUBX_NAVSTAT);
  9644  0237  084A               	movf	PollGPS@index+1,w
  9645  0238  00B6               	movwf	InsertTxData@index+1
  9646  0239  0849               	movf	PollGPS@index,w
  9647  023A  00B5               	movwf	InsertTxData@index
  9648  023B  3000               	movlw	0
  9649  023C  00B8               	movwf	InsertTxData@field+1
  9650  023D  3008               	movlw	8
  9651  023E  00B7               	movwf	InsertTxData@field
  9652  023F  318E  263E         	fcall	_InsertTxData
  9653  0241  0140               	movlb	0	; select bank0
  9654  0242  0836               	movf	?_InsertTxData+1,w
  9655  0243  00CA               	movwf	PollGPS@index+1
  9656  0244  0835               	movf	?_InsertTxData,w
  9657  0245  00C9               	movwf	PollGPS@index
  9658                           
  9659                           ;main.c: 568:             return 1;
  9660  0246  3001               	movlw	1
  9661  0247  0008               	return
  9662  0248                     l4258:	
  9663                           
  9664                           ;main.c: 571:         {;main.c: 573:             if (EUSART1_is_rx_ready())
  9665  0248  318B  233A  3180   	fcall	_EUSART1_is_rx_ready
  9666  024B  3A00               	xorlw	0
  9667  024C  1903               	skipnz
  9668  024D  2862               	goto	l4270
  9669                           
  9670                           ;main.c: 574:             {;main.c: 575:                 char byte = EUSART1_Read();
  9671  024E  318B  2384  3180   	fcall	_EUSART1_Read
  9672  0251  0140               	movlb	0	; select bank0
  9673  0252  00B9               	movwf	??_PollGPS
  9674  0253  0839               	movf	??_PollGPS,w
  9675  0254  00C6               	movwf	PollGPS@byte
  9676                           
  9677                           ;main.c: 580:                 nmea_data[index] = byte;
  9678  0255  30D8               	movlw	216
  9679  0256  00B9               	movwf	??_PollGPS
  9680  0257  3026               	movlw	38
  9681  0258  00BA               	movwf	??_PollGPS+1
  9682  0259  0849               	movf	PollGPS@index,w
  9683  025A  0739               	addwf	??_PollGPS,w
  9684  025B  00BB               	movwf	??_PollGPS+2
  9685  025C  084A               	movf	PollGPS@index+1,w
  9686  025D  3D3A               	addwfc	??_PollGPS+1,w
  9687  025E  00BC               	movwf	??_PollGPS+3
  9688  025F  083B               	movf	??_PollGPS+2,w
  9689  0260  0086               	movwf	6
  9690  0261  083C               	movf	??_PollGPS+3,w
  9691  0262  0087               	movwf	7
  9692  0263  0846               	movf	PollGPS@byte,w
  9693  0264  0081               	movwf	1
  9694                           
  9695                           ;main.c: 582:                 if (byte == '\n')
  9696  0265  300A               	movlw	10
  9697  0266  0646               	xorwf	PollGPS@byte,w
  9698  0267  1D03               	btfss	3,2
  9699  0268  2A6B               	goto	l4268
  9700                           
  9701                           ;main.c: 583:                 {;main.c: 584:                     eusart_complete = 1;
  9702  0269  01C5               	clrf	PollGPS@eusart_complete
  9703  026A  0AC5               	incf	PollGPS@eusart_complete,f
  9704  026B                     l4268:	
  9705                           
  9706                           ;main.c: 589:                 index++;
  9707  026B  3001               	movlw	1
  9708  026C  07C9               	addwf	PollGPS@index,f
  9709  026D  3000               	movlw	0
  9710  026E  3DCA               	addwfc	PollGPS@index+1,f
  9711  026F  2862               	goto	l4270
  9712  0270                     l4272:	
  9713                           
  9714                           ;main.c: 595:     return success;
  9715  0270  0843               	movf	PollGPS@success,w
  9716  0271  0008               	return
  9717  0272                     __end_of_PollGPS:	
  9718                           
  9719                           	psect	text24
  9720  0DBA                     __ptext24:	
  9721 ;; *************** function _strcmp *****************
  9722 ;; Defined at:
  9723 ;;		line 3 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\strcmp.c"
  9724 ;; Parameters:    Size  Location     Type
  9725 ;;  l               1    wreg     PTR const unsigned char 
  9726 ;;		 -> csvField(20), 
  9727 ;;  r               2   11[COMMON] PTR const unsigned char 
  9728 ;;		 -> ROM(16384), 
  9729 ;; Auto vars:     Size  Location     Type
  9730 ;;  l               1    8[BANK0 ] PTR const unsigned char 
  9731 ;;		 -> csvField(20), 
  9732 ;; Return value:  Size  Location     Type
  9733 ;;                  2   11[COMMON] int 
  9734 ;; Registers used:
  9735 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  9736 ;; Tracked objects:
  9737 ;;		On entry : 0/0
  9738 ;;		On exit  : 0/0
  9739 ;;		Unchanged: 0/0
  9740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9741 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9742 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9743 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9744 ;;      Totals:         3       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9745 ;;Total ram usage:        4 bytes
  9746 ;; Hardware stack levels used:    1
  9747 ;; Hardware stack levels required when called:    3
  9748 ;; This function calls:
  9749 ;;		Nothing
  9750 ;; This function is called by:
  9751 ;;		_PollGPS
  9752 ;; This function uses a non-reentrant model
  9753 ;;
  9754                           
  9755                           
  9756                           ;psect for function _strcmp
  9757  0DBA                     _strcmp:	
  9758                           
  9759                           ;incstack = 0
  9760                           ; Regs used in _strcmp: [wreg-fsr1h+status,2+status,0+pclath]
  9761                           ;strcmp@l stored from wreg
  9762  0DBA  0140               	movlb	0	; select bank0
  9763  0DBB  00A8               	movwf	strcmp@l
  9764  0DBC  2DCB               	goto	l3834
  9765  0DBD                     l3836:	
  9766  0DBD  0828               	movf	strcmp@l,w
  9767  0DBE  0086               	movwf	6
  9768  0DBF  0187               	clrf	7
  9769  0DC0  0801               	movf	1,w
  9770  0DC1  1903               	btfsc	3,2
  9771  0DC2  2DD8               	goto	l3838
  9772  0DC3  3001               	movlw	1
  9773  0DC4  00FD               	movwf	??_strcmp
  9774  0DC5  087D               	movf	??_strcmp,w
  9775  0DC6  07A8               	addwf	strcmp@l,f
  9776  0DC7  3001               	movlw	1
  9777  0DC8  07FB               	addwf	strcmp@r,f
  9778  0DC9  3000               	movlw	0
  9779  0DCA  3DFC               	addwfc	strcmp@r+1,f
  9780  0DCB                     l3834:	
  9781  0DCB  087B               	movf	strcmp@r,w
  9782  0DCC  0084               	movwf	4
  9783  0DCD  087C               	movf	strcmp@r+1,w
  9784  0DCE  0085               	movwf	5
  9785  0DCF  0800               	movf	0,w	;code access
  9786  0DD0  00FD               	movwf	??_strcmp
  9787  0DD1  0828               	movf	strcmp@l,w
  9788  0DD2  0086               	movwf	6
  9789  0DD3  0187               	clrf	7
  9790  0DD4  0801               	movf	1,w
  9791  0DD5  067D               	xorwf	??_strcmp,w
  9792  0DD6  1903               	btfsc	3,2
  9793  0DD7  2DBD               	goto	l3836
  9794  0DD8                     l3838:	
  9795  0DD8  0828               	movf	strcmp@l,w
  9796  0DD9  0086               	movwf	6
  9797  0DDA  0187               	clrf	7
  9798  0DDB  087B               	movf	strcmp@r,w
  9799  0DDC  0084               	movwf	4
  9800  0DDD  087C               	movf	strcmp@r+1,w
  9801  0DDE  0085               	movwf	5
  9802  0DDF  0800               	movf	0,w	;code access
  9803  0DE0  0201               	subwf	1,w
  9804  0DE1  00FB               	movwf	?_strcmp
  9805  0DE2  01FC               	clrf	?_strcmp+1
  9806  0DE3  1C03               	skipc
  9807  0DE4  03FC               	decf	?_strcmp+1,f
  9808  0DE5  0008               	return
  9809  0DE6                     __end_of_strcmp:	
  9810                           
  9811                           	psect	text25
  9812  0D14                     __ptext25:	
  9813 ;; *************** function _WriteGPS *****************
  9814 ;; Defined at:
  9815 ;;		line 310 in file "main.c"
  9816 ;; Parameters:    Size  Location     Type
  9817 ;;  message         2    5[COMMON] PTR unsigned char 
  9818 ;;		 -> STR_7(14), STR_6(26), STR_5(26), STR_4(26), 
  9819 ;;		 -> STR_3(26), STR_2(26), STR_1(26), 
  9820 ;; Auto vars:     Size  Location     Type
  9821 ;;  i               2   10[COMMON] int 
  9822 ;;  counti          2    8[COMMON] int 
  9823 ;; Return value:  Size  Location     Type
  9824 ;;                  1    wreg      void 
  9825 ;; Registers used:
  9826 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9827 ;; Tracked objects:
  9828 ;;		On entry : 0/0
  9829 ;;		On exit  : 0/0
  9830 ;;		Unchanged: 0/0
  9831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9832 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9833 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9834 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9835 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9836 ;;Total ram usage:        7 bytes
  9837 ;; Hardware stack levels used:    1
  9838 ;; Hardware stack levels required when called:    4
  9839 ;; This function calls:
  9840 ;;		_EUSART1_Write
  9841 ;;		_strlen
  9842 ;; This function is called by:
  9843 ;;		_SetupGPS
  9844 ;;		_PollGPS
  9845 ;; This function uses a non-reentrant model
  9846 ;;
  9847                           
  9848                           
  9849                           ;psect for function _WriteGPS
  9850  0D14                     _WriteGPS:	
  9851                           
  9852                           ;main.c: 310: void WriteGPS(char* message);main.c: 311: {;main.c: 312:     for (int i = 
      +                          0, counti = strlen(message); i <= counti; i++)
  9853                           
  9854                           ;incstack = 0
  9855                           ; Regs used in _WriteGPS: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9856  0D14  01FA               	clrf	WriteGPS@i
  9857  0D15  01FB               	clrf	WriteGPS@i+1
  9858  0D16  0876               	movf	WriteGPS@message+1,w
  9859  0D17  00F1               	movwf	strlen@s+1
  9860  0D18  0875               	movf	WriteGPS@message,w
  9861  0D19  00F0               	movwf	strlen@s
  9862  0D1A  318B  23FD  318D   	fcall	_strlen
  9863  0D1D  0871               	movf	?_strlen+1,w
  9864  0D1E  00F9               	movwf	WriteGPS@counti+1
  9865  0D1F  0870               	movf	?_strlen,w
  9866  0D20  00F8               	movwf	WriteGPS@counti
  9867  0D21                     l3746:	
  9868  0D21  0879               	movf	WriteGPS@counti+1,w
  9869  0D22  3A80               	xorlw	128
  9870  0D23  00F7               	movwf	??_WriteGPS
  9871  0D24  087B               	movf	WriteGPS@i+1,w
  9872  0D25  3A80               	xorlw	128
  9873  0D26  0277               	subwf	??_WriteGPS,w
  9874  0D27  1D03               	skipz
  9875  0D28  2D2B               	goto	u2945
  9876  0D29  087A               	movf	WriteGPS@i,w
  9877  0D2A  0278               	subwf	WriteGPS@counti,w
  9878  0D2B                     u2945:	
  9879  0D2B  1C03               	btfss	3,0
  9880  0D2C  0008               	return
  9881                           
  9882                           ;main.c: 313:     {;main.c: 314:         EUSART1_Write((uint8_t)message[i]);
  9883  0D2D  0875               	movf	WriteGPS@message,w
  9884  0D2E  077A               	addwf	WriteGPS@i,w
  9885  0D2F  0084               	movwf	4
  9886  0D30  0876               	movf	WriteGPS@message+1,w
  9887  0D31  3D7B               	addwfc	WriteGPS@i+1,w
  9888  0D32  0085               	movwf	5
  9889  0D33  0800               	movf	0,w	;code access
  9890  0D34  318B  235F  318D   	fcall	_EUSART1_Write
  9891                           
  9892                           ;main.c: 315:     }
  9893  0D37  3001               	movlw	1
  9894  0D38  07FA               	addwf	WriteGPS@i,f
  9895  0D39  3000               	movlw	0
  9896  0D3A  3DFB               	addwfc	WriteGPS@i+1,f
  9897  0D3B  2D21               	goto	l3746
  9898  0D3C                     __end_of_WriteGPS:	
  9899                           
  9900                           	psect	text26
  9901  0B5F                     __ptext26:	
  9902 ;; *************** function _EUSART1_Write *****************
  9903 ;; Defined at:
  9904 ;;		line 132 in file "mcc_generated_files/eusart1.c"
  9905 ;; Parameters:    Size  Location     Type
  9906 ;;  txData          1    wreg     unsigned char 
  9907 ;; Auto vars:     Size  Location     Type
  9908 ;;  txData          1    0[COMMON] unsigned char 
  9909 ;; Return value:  Size  Location     Type
  9910 ;;                  1    wreg      void 
  9911 ;; Registers used:
  9912 ;;		wreg
  9913 ;; Tracked objects:
  9914 ;;		On entry : 0/0
  9915 ;;		On exit  : 0/0
  9916 ;;		Unchanged: 0/0
  9917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9919 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9921 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9922 ;;Total ram usage:        1 bytes
  9923 ;; Hardware stack levels used:    1
  9924 ;; Hardware stack levels required when called:    3
  9925 ;; This function calls:
  9926 ;;		Nothing
  9927 ;; This function is called by:
  9928 ;;		_WriteGPS
  9929 ;;		_GPS_SendUBX
  9930 ;; This function uses a non-reentrant model
  9931 ;;
  9932                           
  9933                           
  9934                           ;psect for function _EUSART1_Write
  9935  0B5F                     _EUSART1_Write:	
  9936                           
  9937                           ;incstack = 0
  9938                           ; Regs used in _EUSART1_Write: [wreg]
  9939                           ;EUSART1_Write@txData stored from wreg
  9940  0B5F  00F0               	movwf	EUSART1_Write@txData
  9941  0B60                     l355:	
  9942                           ;mcc_generated_files/eusart1.c: 135:     {;mcc_generated_files/eusart1.c: 136:     }
  9943                           
  9944                           
  9945                           ;mcc_generated_files/eusart1.c: 134:     while(0 == PIR3bits.TX1IF)
  9946  0B60  014E               	movlb	14	; select bank14
  9947  0B61  1E0F               	btfss	15,4	;volatile
  9948  0B62  2B60               	goto	l355
  9949                           
  9950                           ;mcc_generated_files/eusart1.c: 138:     TX1REG = txData;
  9951  0B63  0870               	movf	EUSART1_Write@txData,w
  9952  0B64  0142               	movlb	2	; select bank2
  9953  0B65  009A               	movwf	26	;volatile
  9954  0B66  0008               	return
  9955  0B67                     __end_of_EUSART1_Write:	
  9956                           
  9957                           	psect	text27
  9958  0E3E                     __ptext27:	
  9959 ;; *************** function _InsertTxData *****************
  9960 ;; Defined at:
  9961 ;;		line 498 in file "main.c"
  9962 ;; Parameters:    Size  Location     Type
  9963 ;;  index           2   21[BANK0 ] int 
  9964 ;;  field           2   23[BANK0 ] int 
  9965 ;; Auto vars:     Size  Location     Type
  9966 ;;		None
  9967 ;; Return value:  Size  Location     Type
  9968 ;;                  2   21[BANK0 ] int 
  9969 ;; Registers used:
  9970 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9971 ;; Tracked objects:
  9972 ;;		On entry : 0/0
  9973 ;;		On exit  : 0/0
  9974 ;;		Unchanged: 0/0
  9975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9976 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9979 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9980 ;;Total ram usage:        4 bytes
  9981 ;; Hardware stack levels used:    1
  9982 ;; Hardware stack levels required when called:    6
  9983 ;; This function calls:
  9984 ;;		_GetAtRowCSV
  9985 ;;		_InsertString
  9986 ;;		_InsertTxDataSep
  9987 ;; This function is called by:
  9988 ;;		_PollGPS
  9989 ;; This function uses a non-reentrant model
  9990 ;;
  9991                           
  9992                           
  9993                           ;psect for function _InsertTxData
  9994  0E3E                     _InsertTxData:	
  9995                           
  9996                           ;main.c: 498: int InsertTxData(int index, int field);main.c: 499: {;main.c: 500:     ind
      +                          ex = InsertString(txdata, GetAtRowCSV(nmea_data, field), index, 140);
  9997                           
  9998                           ;incstack = 0
  9999                           ; Regs used in _InsertTxData: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10000  0E3E  3064               	movlw	100
 10001  0E3F  0140               	movlb	0	; select bank0
 10002  0E40  00A9               	movwf	InsertString@dest
 10003  0E41  3027               	movlw	39
 10004  0E42  00AA               	movwf	InsertString@dest+1
 10005  0E43  30D8               	movlw	216
 10006  0E44  00F6               	movwf	GetAtRowCSV@src
 10007  0E45  3026               	movlw	38
 10008  0E46  00F7               	movwf	GetAtRowCSV@src+1
 10009  0E47  0838               	movf	InsertTxData@field+1,w
 10010  0E48  00F9               	movwf	GetAtRowCSV@column+1
 10011  0E49  0837               	movf	InsertTxData@field,w
 10012  0E4A  00F8               	movwf	GetAtRowCSV@column
 10013  0E4B  3186  2644  318E   	fcall	_GetAtRowCSV
 10014  0E4E  0140               	movlb	0	; select bank0
 10015  0E4F  00AB               	movwf	InsertString@src
 10016  0E50  3000               	movlw	0
 10017  0E51  00AC               	movwf	InsertString@src+1
 10018  0E52  0836               	movf	InsertTxData@index+1,w
 10019  0E53  00AE               	movwf	InsertString@index+1
 10020  0E54  0835               	movf	InsertTxData@index,w
 10021  0E55  00AD               	movwf	InsertString@index
 10022  0E56  308C               	movlw	140
 10023  0E57  00AF               	movwf	InsertString@destLimit
 10024  0E58  3000               	movlw	0
 10025  0E59  00B0               	movwf	InsertString@destLimit+1
 10026  0E5A  3187  27AA  318E   	fcall	_InsertString
 10027  0E5D  0140               	movlb	0	; select bank0
 10028  0E5E  082A               	movf	?_InsertString+1,w
 10029  0E5F  00B6               	movwf	InsertTxData@index+1
 10030  0E60  0829               	movf	?_InsertString,w
 10031  0E61  00B5               	movwf	InsertTxData@index
 10032                           
 10033                           ;main.c: 501:     return InsertTxDataSep(index);
 10034  0E62  0836               	movf	InsertTxData@index+1,w
 10035  0E63  00FD               	movwf	InsertTxDataSep@index+1
 10036  0E64  0835               	movf	InsertTxData@index,w
 10037  0E65  00FC               	movwf	InsertTxDataSep@index
 10038  0E66  318C  2414         	fcall	_InsertTxDataSep
 10039  0E68  087D               	movf	?_InsertTxDataSep+1,w
 10040  0E69  0140               	movlb	0	; select bank0
 10041  0E6A  00B6               	movwf	?_InsertTxData+1
 10042  0E6B  087C               	movf	?_InsertTxDataSep,w
 10043  0E6C  00B5               	movwf	?_InsertTxData
 10044  0E6D  0008               	return
 10045  0E6E                     __end_of_InsertTxData:	
 10046                           
 10047                           	psect	text28
 10048  0C14                     __ptext28:	
 10049 ;; *************** function _InsertTxDataSep *****************
 10050 ;; Defined at:
 10051 ;;		line 504 in file "main.c"
 10052 ;; Parameters:    Size  Location     Type
 10053 ;;  index           2   12[COMMON] int 
 10054 ;; Auto vars:     Size  Location     Type
 10055 ;;		None
 10056 ;; Return value:  Size  Location     Type
 10057 ;;                  2   12[COMMON] int 
 10058 ;; Registers used:
 10059 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10060 ;; Tracked objects:
 10061 ;;		On entry : 0/0
 10062 ;;		On exit  : 0/0
 10063 ;;		Unchanged: 0/0
 10064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10065 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10066 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10067 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10068 ;;      Totals:         2       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10069 ;;Total ram usage:        3 bytes
 10070 ;; Hardware stack levels used:    1
 10071 ;; Hardware stack levels required when called:    5
 10072 ;; This function calls:
 10073 ;;		_Insert
 10074 ;; This function is called by:
 10075 ;;		_InsertTxData
 10076 ;;		_PollGPS
 10077 ;; This function uses a non-reentrant model
 10078 ;;
 10079                           
 10080                           
 10081                           ;psect for function _InsertTxDataSep
 10082  0C14                     _InsertTxDataSep:	
 10083                           
 10084                           ;main.c: 504: int InsertTxDataSep(int index);main.c: 505: {;main.c: 506:     return Inse
      +                          rt(txdata, ',', index, 140);
 10085                           
 10086                           ;incstack = 0
 10087                           ; Regs used in _InsertTxDataSep: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10088  0C14  3064               	movlw	100
 10089  0C15  00F5               	movwf	Insert@dest
 10090  0C16  3027               	movlw	39
 10091  0C17  00F6               	movwf	Insert@dest+1
 10092  0C18  302C               	movlw	44
 10093  0C19  0140               	movlb	0	; select bank0
 10094  0C1A  00A9               	movwf	??_InsertTxDataSep
 10095  0C1B  0829               	movf	??_InsertTxDataSep,w
 10096  0C1C  00F7               	movwf	Insert@src
 10097  0C1D  087D               	movf	InsertTxDataSep@index+1,w
 10098  0C1E  00F9               	movwf	Insert@index+1
 10099  0C1F  087C               	movf	InsertTxDataSep@index,w
 10100  0C20  00F8               	movwf	Insert@index
 10101  0C21  308C               	movlw	140
 10102  0C22  00FA               	movwf	Insert@destLimit
 10103  0C23  3000               	movlw	0
 10104  0C24  00FB               	movwf	Insert@destLimit+1
 10105  0C25  3185  2569         	fcall	_Insert
 10106  0C27  0876               	movf	?_Insert+1,w
 10107  0C28  00FD               	movwf	?_InsertTxDataSep+1
 10108  0C29  0875               	movf	?_Insert,w
 10109  0C2A  00FC               	movwf	?_InsertTxDataSep
 10110  0C2B  0008               	return
 10111  0C2C                     __end_of_InsertTxDataSep:	
 10112                           
 10113                           	psect	text29
 10114  07AA                     __ptext29:	
 10115 ;; *************** function _InsertString *****************
 10116 ;; Defined at:
 10117 ;;		line 112 in file "main.c"
 10118 ;; Parameters:    Size  Location     Type
 10119 ;;  dest            2    9[BANK0 ] PTR unsigned char 
 10120 ;;		 -> txdata(140), 
 10121 ;;  src             2   11[BANK0 ] PTR unsigned char 
 10122 ;;		 -> checksum(6), STR_8(7), main@convertedNumber(16), csvField(20), 
 10123 ;;  index           2   13[BANK0 ] int 
 10124 ;;  destLimit       2   15[BANK0 ] int 
 10125 ;; Auto vars:     Size  Location     Type
 10126 ;;  i               2   19[BANK0 ] int 
 10127 ;;  counti          2   17[BANK0 ] int 
 10128 ;; Return value:  Size  Location     Type
 10129 ;;                  2    9[BANK0 ] int 
 10130 ;; Registers used:
 10131 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10132 ;; Tracked objects:
 10133 ;;		On entry : 0/0
 10134 ;;		On exit  : 0/0
 10135 ;;		Unchanged: 0/0
 10136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10137 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10138 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10139 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10140 ;;      Totals:         1      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10141 ;;Total ram usage:       13 bytes
 10142 ;; Hardware stack levels used:    1
 10143 ;; Hardware stack levels required when called:    5
 10144 ;; This function calls:
 10145 ;;		_Insert
 10146 ;;		_strlen
 10147 ;; This function is called by:
 10148 ;;		_InsertTxData
 10149 ;;		_PollGPS
 10150 ;;		_main
 10151 ;; This function uses a non-reentrant model
 10152 ;;
 10153                           
 10154                           
 10155                           ;psect for function _InsertString
 10156  07AA                     _InsertString:	
 10157                           
 10158                           ;main.c: 112: int InsertString(char* dest, char* src, int index, int destLimit);main.c: 
      +                          113: {;main.c: 114:     for (int i = 0, counti = strlen(src); i < counti && index < dest
      +                          Limit; i++)
 10159                           
 10160                           ;incstack = 0
 10161                           ; Regs used in _InsertString: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10162  07AA  0140               	movlb	0	; select bank0
 10163  07AB  01B3               	clrf	InsertString@i
 10164  07AC  01B4               	clrf	InsertString@i+1
 10165  07AD  082C               	movf	InsertString@src+1,w
 10166  07AE  00F1               	movwf	strlen@s+1
 10167  07AF  082B               	movf	InsertString@src,w
 10168  07B0  00F0               	movwf	strlen@s
 10169  07B1  318B  23FD  3187   	fcall	_strlen
 10170  07B4  0871               	movf	?_strlen+1,w
 10171  07B5  0140               	movlb	0	; select bank0
 10172  07B6  00B2               	movwf	InsertString@counti+1
 10173  07B7  0870               	movf	?_strlen,w
 10174  07B8  00B1               	movwf	InsertString@counti
 10175  07B9  2FEA               	goto	l3512
 10176  07BA                     l3514:	
 10177  07BA  0140               	movlb	0	; select bank0
 10178  07BB  082E               	movf	InsertString@index+1,w
 10179  07BC  3A80               	xorlw	128
 10180  07BD  00FC               	movwf	??_InsertString
 10181  07BE  0830               	movf	InsertString@destLimit+1,w
 10182  07BF  3A80               	xorlw	128
 10183  07C0  027C               	subwf	??_InsertString,w
 10184  07C1  1D03               	skipz
 10185  07C2  2FC5               	goto	u2735
 10186  07C3  082F               	movf	InsertString@destLimit,w
 10187  07C4  022D               	subwf	InsertString@index,w
 10188  07C5                     u2735:	
 10189  07C5  1803               	btfsc	3,0
 10190  07C6  2FF6               	goto	l3516
 10191                           
 10192                           ;main.c: 115:     {;main.c: 117:         index = Insert(dest, src[i], index, destLimit);
 10193  07C7  0140               	movlb	0	; select bank0
 10194  07C8  082A               	movf	InsertString@dest+1,w
 10195  07C9  00F6               	movwf	Insert@dest+1
 10196  07CA  0829               	movf	InsertString@dest,w
 10197  07CB  00F5               	movwf	Insert@dest
 10198  07CC  082B               	movf	InsertString@src,w
 10199  07CD  0733               	addwf	InsertString@i,w
 10200  07CE  0084               	movwf	4
 10201  07CF  082C               	movf	InsertString@src+1,w
 10202  07D0  3D34               	addwfc	InsertString@i+1,w
 10203  07D1  0085               	movwf	5
 10204  07D2  0800               	movf	0,w	;code access
 10205  07D3  00FC               	movwf	??_InsertString
 10206  07D4  087C               	movf	??_InsertString,w
 10207  07D5  00F7               	movwf	Insert@src
 10208  07D6  082E               	movf	InsertString@index+1,w
 10209  07D7  00F9               	movwf	Insert@index+1
 10210  07D8  082D               	movf	InsertString@index,w
 10211  07D9  00F8               	movwf	Insert@index
 10212  07DA  0830               	movf	InsertString@destLimit+1,w
 10213  07DB  00FB               	movwf	Insert@destLimit+1
 10214  07DC  082F               	movf	InsertString@destLimit,w
 10215  07DD  00FA               	movwf	Insert@destLimit
 10216  07DE  3185  2569  3187   	fcall	_Insert
 10217  07E1  0876               	movf	?_Insert+1,w
 10218  07E2  0140               	movlb	0	; select bank0
 10219  07E3  00AE               	movwf	InsertString@index+1
 10220  07E4  0875               	movf	?_Insert,w
 10221  07E5  00AD               	movwf	InsertString@index
 10222                           
 10223                           ;main.c: 118:     }
 10224  07E6  3001               	movlw	1
 10225  07E7  07B3               	addwf	InsertString@i,f
 10226  07E8  3000               	movlw	0
 10227  07E9  3DB4               	addwfc	InsertString@i+1,f
 10228  07EA                     l3512:	
 10229  07EA  0834               	movf	InsertString@i+1,w
 10230  07EB  3A80               	xorlw	128
 10231  07EC  00FC               	movwf	??_InsertString
 10232  07ED  0832               	movf	InsertString@counti+1,w
 10233  07EE  3A80               	xorlw	128
 10234  07EF  027C               	subwf	??_InsertString,w
 10235  07F0  1D03               	skipz
 10236  07F1  2FF4               	goto	u2725
 10237  07F2  0831               	movf	InsertString@counti,w
 10238  07F3  0233               	subwf	InsertString@i,w
 10239  07F4                     u2725:	
 10240  07F4  1C03               	btfss	3,0
 10241  07F5  2FBA               	goto	l3514
 10242  07F6                     l3516:	
 10243                           
 10244                           ;main.c: 119:     return index;
 10245  07F6  0140               	movlb	0	; select bank0
 10246  07F7  082E               	movf	InsertString@index+1,w
 10247  07F8  00AA               	movwf	?_InsertString+1
 10248  07F9  082D               	movf	InsertString@index,w
 10249  07FA  00A9               	movwf	?_InsertString
 10250  07FB  0008               	return
 10251  07FC                     __end_of_InsertString:	
 10252                           
 10253                           	psect	text30
 10254  0569                     __ptext30:	
 10255 ;; *************** function _Insert *****************
 10256 ;; Defined at:
 10257 ;;		line 93 in file "main.c"
 10258 ;; Parameters:    Size  Location     Type
 10259 ;;  dest            2    5[COMMON] PTR unsigned char 
 10260 ;;		 -> txdata(140), 
 10261 ;;  src             1    7[COMMON] unsigned char 
 10262 ;;  index           2    8[COMMON] int 
 10263 ;;  destLimit       2   10[COMMON] int 
 10264 ;; Auto vars:     Size  Location     Type
 10265 ;;  i               2    7[BANK0 ] int 
 10266 ;;  length          2    5[BANK0 ] int 
 10267 ;; Return value:  Size  Location     Type
 10268 ;;                  2    5[COMMON] int 
 10269 ;; Registers used:
 10270 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10271 ;; Tracked objects:
 10272 ;;		On entry : 0/0
 10273 ;;		On exit  : 0/0
 10274 ;;		Unchanged: 0/0
 10275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10276 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10277 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10278 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10279 ;;      Totals:         7       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10280 ;;Total ram usage:       16 bytes
 10281 ;; Hardware stack levels used:    1
 10282 ;; Hardware stack levels required when called:    4
 10283 ;; This function calls:
 10284 ;;		_strlen
 10285 ;; This function is called by:
 10286 ;;		_InsertString
 10287 ;;		_InsertTxDataSep
 10288 ;;		_PollGPS
 10289 ;;		_main
 10290 ;; This function uses a non-reentrant model
 10291 ;;
 10292                           
 10293                           
 10294                           ;psect for function _Insert
 10295  0569                     _Insert:	
 10296                           
 10297                           ;main.c: 93: int Insert(char* dest, char src, int index, int destLimit);main.c: 94: {;ma
      +                          in.c: 95:     int length = strlen(dest);
 10298                           
 10299                           ;incstack = 0
 10300                           ; Regs used in _Insert: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10301  0569  0876               	movf	Insert@dest+1,w
 10302  056A  00F1               	movwf	strlen@s+1
 10303  056B  0875               	movf	Insert@dest,w
 10304  056C  00F0               	movwf	strlen@s
 10305  056D  318B  23FD  3185   	fcall	_strlen
 10306  0570  0871               	movf	?_strlen+1,w
 10307  0571  0140               	movlb	0	; select bank0
 10308  0572  00A6               	movwf	Insert@length+1
 10309  0573  0870               	movf	?_strlen,w
 10310  0574  00A5               	movwf	Insert@length
 10311                           
 10312                           ;main.c: 96:     if (length < destLimit - 1)
 10313  0575  087A               	movf	Insert@destLimit,w
 10314  0576  3EFF               	addlw	255
 10315  0577  00A0               	movwf	??_Insert
 10316  0578  30FF               	movlw	255
 10317  0579  3D7B               	addwfc	Insert@destLimit+1,w
 10318  057A  00A1               	movwf	??_Insert+1
 10319  057B  0826               	movf	Insert@length+1,w
 10320  057C  3A80               	xorlw	128
 10321  057D  00A2               	movwf	??_Insert+2
 10322  057E  0821               	movf	??_Insert+1,w
 10323  057F  3A80               	xorlw	128
 10324  0580  0222               	subwf	??_Insert+2,w
 10325  0581  1D03               	skipz
 10326  0582  2D85               	goto	u2565
 10327  0583  0820               	movf	??_Insert,w
 10328  0584  0225               	subwf	Insert@length,w
 10329  0585                     u2565:	
 10330  0585  1803               	skipnc
 10331  0586  2DD2               	goto	l3362
 10332                           
 10333                           ;main.c: 97:     {;main.c: 98:         dest[length + 1] = '\0';
 10334  0587  0140               	movlb	0	; select bank0
 10335  0588  0825               	movf	Insert@length,w
 10336  0589  0775               	addwf	Insert@dest,w
 10337  058A  00A0               	movwf	??_Insert
 10338  058B  0826               	movf	Insert@length+1,w
 10339  058C  3D76               	addwfc	Insert@dest+1,w
 10340  058D  00A1               	movwf	??_Insert+1
 10341  058E  0820               	movf	??_Insert,w
 10342  058F  0086               	movwf	6
 10343  0590  0821               	movf	??_Insert+1,w
 10344  0591  0087               	movwf	7
 10345  0592  3141               	addfsr 1,1
 10346  0593  0181               	clrf	1
 10347                           
 10348                           ;main.c: 99:         for (int i = length; i > index; i--)
 10349  0594  0826               	movf	Insert@length+1,w
 10350  0595  00A8               	movwf	Insert@i+1
 10351  0596  0825               	movf	Insert@length,w
 10352  0597  00A7               	movwf	Insert@i
 10353  0598                     l3358:	
 10354  0598  0879               	movf	Insert@index+1,w
 10355  0599  3A80               	xorlw	128
 10356  059A  00A0               	movwf	??_Insert
 10357  059B  0828               	movf	Insert@i+1,w
 10358  059C  3A80               	xorlw	128
 10359  059D  0220               	subwf	??_Insert,w
 10360  059E  1D03               	skipz
 10361  059F  2DA2               	goto	u2575
 10362  05A0  0827               	movf	Insert@i,w
 10363  05A1  0278               	subwf	Insert@index,w
 10364  05A2                     u2575:	
 10365  05A2  1803               	btfsc	3,0
 10366  05A3  2DC4               	goto	l3360
 10367                           
 10368                           ;main.c: 100:         {;main.c: 101:             dest[i] = dest[i - 1];
 10369  05A4  0140               	movlb	0	; select bank0
 10370  05A5  0827               	movf	Insert@i,w
 10371  05A6  0775               	addwf	Insert@dest,w
 10372  05A7  00A0               	movwf	??_Insert
 10373  05A8  0828               	movf	Insert@i+1,w
 10374  05A9  3D76               	addwfc	Insert@dest+1,w
 10375  05AA  00A1               	movwf	??_Insert+1
 10376  05AB  0820               	movf	??_Insert,w
 10377  05AC  3EFF               	addlw	255
 10378  05AD  0086               	movwf	6
 10379  05AE  30FF               	movlw	255
 10380  05AF  3D21               	addwfc	??_Insert+1,w
 10381  05B0  0087               	movwf	7
 10382  05B1  0801               	movf	1,w
 10383  05B2  00A2               	movwf	??_Insert+2
 10384  05B3  0827               	movf	Insert@i,w
 10385  05B4  0775               	addwf	Insert@dest,w
 10386  05B5  00A3               	movwf	??_Insert+3
 10387  05B6  0828               	movf	Insert@i+1,w
 10388  05B7  3D76               	addwfc	Insert@dest+1,w
 10389  05B8  00A4               	movwf	??_Insert+4
 10390  05B9  0823               	movf	??_Insert+3,w
 10391  05BA  0086               	movwf	6
 10392  05BB  0824               	movf	??_Insert+4,w
 10393  05BC  0087               	movwf	7
 10394  05BD  0822               	movf	??_Insert+2,w
 10395  05BE  0081               	movwf	1
 10396                           
 10397                           ;main.c: 102:         }
 10398  05BF  30FF               	movlw	255
 10399  05C0  07A7               	addwf	Insert@i,f
 10400  05C1  30FF               	movlw	255
 10401  05C2  3DA8               	addwfc	Insert@i+1,f
 10402  05C3  2D98               	goto	l3358
 10403  05C4                     l3360:	
 10404                           
 10405                           ;main.c: 103:         dest[index] = src;
 10406  05C4  0878               	movf	Insert@index,w
 10407  05C5  0775               	addwf	Insert@dest,w
 10408  05C6  0140               	movlb	0	; select bank0
 10409  05C7  00A0               	movwf	??_Insert
 10410  05C8  0879               	movf	Insert@index+1,w
 10411  05C9  3D76               	addwfc	Insert@dest+1,w
 10412  05CA  00A1               	movwf	??_Insert+1
 10413  05CB  0820               	movf	??_Insert,w
 10414  05CC  0086               	movwf	6
 10415  05CD  0821               	movf	??_Insert+1,w
 10416  05CE  0087               	movwf	7
 10417  05CF  0877               	movf	Insert@src,w
 10418  05D0  0081               	movwf	1
 10419                           
 10420                           ;main.c: 104:     }
 10421  05D1  2DD7               	goto	l3366
 10422  05D2                     l3362:	
 10423                           
 10424                           ;main.c: 106:     {;main.c: 107:         return index;
 10425  05D2  0879               	movf	Insert@index+1,w
 10426  05D3  00F6               	movwf	?_Insert+1
 10427  05D4  0878               	movf	Insert@index,w
 10428  05D5  00F5               	movwf	?_Insert
 10429  05D6  0008               	return
 10430  05D7                     l3366:	
 10431                           
 10432                           ;main.c: 109:     return index + 1;
 10433  05D7  0878               	movf	Insert@index,w
 10434  05D8  3E01               	addlw	1
 10435  05D9  00F5               	movwf	?_Insert
 10436  05DA  3000               	movlw	0
 10437  05DB  3D79               	addwfc	Insert@index+1,w
 10438  05DC  00F6               	movwf	?_Insert+1
 10439  05DD  0008               	return
 10440  05DE                     __end_of_Insert:	
 10441                           
 10442                           	psect	text31
 10443  0644                     __ptext31:	
 10444 ;; *************** function _GetAtRowCSV *****************
 10445 ;; Defined at:
 10446 ;;		line 67 in file "main.c"
 10447 ;; Parameters:    Size  Location     Type
 10448 ;;  src             2    6[COMMON] PTR unsigned char 
 10449 ;;		 -> nmea_data(140), 
 10450 ;;  column          2    8[COMMON] int 
 10451 ;; Auto vars:     Size  Location     Type
 10452 ;;  i               2    6[BANK0 ] int 
 10453 ;;  counti          2    0[BANK0 ] int 
 10454 ;;  index           2    4[BANK0 ] int 
 10455 ;;  col             2    2[BANK0 ] int 
 10456 ;; Return value:  Size  Location     Type
 10457 ;;                  1    wreg      PTR unsigned char 
 10458 ;; Registers used:
 10459 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10460 ;; Tracked objects:
 10461 ;;		On entry : 0/0
 10462 ;;		On exit  : 0/0
 10463 ;;		Unchanged: 0/0
 10464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10465 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10466 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10467 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10468 ;;      Totals:         5       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10469 ;;Total ram usage:       13 bytes
 10470 ;; Hardware stack levels used:    1
 10471 ;; Hardware stack levels required when called:    4
 10472 ;; This function calls:
 10473 ;;		_ClearStringn
 10474 ;;		_strlen
 10475 ;; This function is called by:
 10476 ;;		_InsertTxData
 10477 ;;		_PollGPS
 10478 ;; This function uses a non-reentrant model
 10479 ;;
 10480                           
 10481                           
 10482                           ;psect for function _GetAtRowCSV
 10483  0644                     _GetAtRowCSV:	
 10484                           
 10485                           ;main.c: 67: char* GetAtRowCSV(char* src, int column);main.c: 68: {;main.c: 69:     Clea
      +                          rStringn(csvField, 20);
 10486                           
 10487                           ;incstack = 0
 10488                           ; Regs used in _GetAtRowCSV: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10489  0644  3014               	movlw	20
 10490  0645  00F0               	movwf	ClearStringn@length
 10491  0646  3000               	movlw	0
 10492  0647  00F1               	movwf	ClearStringn@length+1
 10493  0648  30D0               	movlw	(low (_csvField| 0))& (0+255)
 10494  0649  318C  242C  3186   	fcall	_ClearStringn
 10495                           
 10496                           ;main.c: 70:     int col = 0;
 10497  064C  0140               	movlb	0	; select bank0
 10498  064D  01A2               	clrf	GetAtRowCSV@col
 10499  064E  01A3               	clrf	GetAtRowCSV@col+1
 10500                           
 10501                           ;main.c: 71:     int index = 0;
 10502  064F  01A4               	clrf	GetAtRowCSV@index
 10503  0650  01A5               	clrf	GetAtRowCSV@index+1
 10504                           
 10505                           ;main.c: 72:     for (int i = 0, counti = strlen(src); i < counti; i++)
 10506  0651  01A6               	clrf	GetAtRowCSV@i
 10507  0652  01A7               	clrf	GetAtRowCSV@i+1
 10508  0653  0877               	movf	GetAtRowCSV@src+1,w
 10509  0654  00F1               	movwf	strlen@s+1
 10510  0655  0876               	movf	GetAtRowCSV@src,w
 10511  0656  00F0               	movwf	strlen@s
 10512  0657  318B  23FD  3186   	fcall	_strlen
 10513  065A  0871               	movf	?_strlen+1,w
 10514  065B  0140               	movlb	0	; select bank0
 10515  065C  00A1               	movwf	GetAtRowCSV@counti+1
 10516  065D  0870               	movf	?_strlen,w
 10517  065E  00A0               	movwf	GetAtRowCSV@counti
 10518  065F                     l646:	
 10519  065F  0827               	movf	GetAtRowCSV@i+1,w
 10520  0660  3A80               	xorlw	128
 10521  0661  00FA               	movwf	??_GetAtRowCSV
 10522  0662  0821               	movf	GetAtRowCSV@counti+1,w
 10523  0663  3A80               	xorlw	128
 10524  0664  027A               	subwf	??_GetAtRowCSV,w
 10525  0665  1D03               	skipz
 10526  0666  2E69               	goto	u2715
 10527  0667  0820               	movf	GetAtRowCSV@counti,w
 10528  0668  0226               	subwf	GetAtRowCSV@i,w
 10529  0669                     u2715:	
 10530  0669  1803               	btfsc	3,0
 10531  066A  2EA3               	goto	l3500
 10532                           
 10533                           ;main.c: 73:     {;main.c: 74:         if (col == column)
 10534  066B  0879               	movf	GetAtRowCSV@column+1,w
 10535  066C  0140               	movlb	0	; select bank0
 10536  066D  0623               	xorwf	GetAtRowCSV@col+1,w
 10537  066E  1D03               	skipz
 10538  066F  2E72               	goto	u2685
 10539  0670  0878               	movf	GetAtRowCSV@column,w
 10540  0671  0622               	xorwf	GetAtRowCSV@col,w
 10541  0672                     u2685:	
 10542  0672  1D03               	skipz
 10543  0673  2E90               	goto	l3496
 10544                           
 10545                           ;main.c: 75:         {;main.c: 76:             if (src[i] == ',')
 10546  0674  0826               	movf	GetAtRowCSV@i,w
 10547  0675  0776               	addwf	GetAtRowCSV@src,w
 10548  0676  0086               	movwf	6
 10549  0677  0827               	movf	GetAtRowCSV@i+1,w
 10550  0678  3D77               	addwfc	GetAtRowCSV@src+1,w
 10551  0679  0087               	movwf	7
 10552  067A  302C               	movlw	44
 10553  067B  0601               	xorwf	1,w
 10554  067C  1903               	btfsc	3,2
 10555  067D  2EA3               	goto	l3500
 10556                           
 10557                           ;main.c: 80:             csvField[index] = src[i];
 10558  067E  0826               	movf	GetAtRowCSV@i,w
 10559  067F  0776               	addwf	GetAtRowCSV@src,w
 10560  0680  0086               	movwf	6
 10561  0681  0827               	movf	GetAtRowCSV@i+1,w
 10562  0682  3D77               	addwfc	GetAtRowCSV@src+1,w
 10563  0683  0087               	movwf	7
 10564  0684  0801               	movf	1,w
 10565  0685  00FA               	movwf	??_GetAtRowCSV
 10566  0686  0824               	movf	GetAtRowCSV@index,w
 10567  0687  3ED0               	addlw	(low (_csvField| 0))& (0+255)
 10568  0688  0086               	movwf	6
 10569  0689  0187               	clrf	7
 10570  068A  087A               	movf	??_GetAtRowCSV,w
 10571  068B  0081               	movwf	1
 10572                           
 10573                           ;main.c: 81:             index++;
 10574  068C  3001               	movlw	1
 10575  068D  07A4               	addwf	GetAtRowCSV@index,f
 10576  068E  3000               	movlw	0
 10577  068F  3DA5               	addwfc	GetAtRowCSV@index+1,f
 10578  0690                     l3496:	
 10579                           
 10580                           ;main.c: 83:         if (src[i] == ',')
 10581  0690  0826               	movf	GetAtRowCSV@i,w
 10582  0691  0776               	addwf	GetAtRowCSV@src,w
 10583  0692  0086               	movwf	6
 10584  0693  0827               	movf	GetAtRowCSV@i+1,w
 10585  0694  3D77               	addwfc	GetAtRowCSV@src+1,w
 10586  0695  0087               	movwf	7
 10587  0696  302C               	movlw	44
 10588  0697  0601               	xorwf	1,w
 10589  0698  1D03               	btfss	3,2
 10590  0699  2E9E               	goto	l651
 10591                           
 10592                           ;main.c: 84:         {;main.c: 85:             col++;
 10593  069A  3001               	movlw	1
 10594  069B  07A2               	addwf	GetAtRowCSV@col,f
 10595  069C  3000               	movlw	0
 10596  069D  3DA3               	addwfc	GetAtRowCSV@col+1,f
 10597  069E                     l651:	
 10598                           ;main.c: 86:         }
 10599                           
 10600                           
 10601                           ;main.c: 87:     }
 10602  069E  3001               	movlw	1
 10603  069F  07A6               	addwf	GetAtRowCSV@i,f
 10604  06A0  3000               	movlw	0
 10605  06A1  3DA7               	addwfc	GetAtRowCSV@i+1,f
 10606  06A2  2E5F               	goto	l646
 10607  06A3                     l3500:	
 10608                           
 10609                           ;main.c: 88:     return csvField;
 10610  06A3  30D0               	movlw	(low (_csvField| 0))& (0+255)
 10611  06A4  0008               	return
 10612  06A5                     __end_of_GetAtRowCSV:	
 10613                           
 10614                           	psect	text32
 10615  0C2C                     __ptext32:	
 10616 ;; *************** function _ClearStringn *****************
 10617 ;; Defined at:
 10618 ;;		line 56 in file "main.c"
 10619 ;; Parameters:    Size  Location     Type
 10620 ;;  str             1    wreg     PTR unsigned char 
 10621 ;;		 -> csvField(20), 
 10622 ;;  length          2    0[COMMON] int 
 10623 ;; Auto vars:     Size  Location     Type
 10624 ;;  str             1    3[COMMON] PTR unsigned char 
 10625 ;;		 -> csvField(20), 
 10626 ;;  i               2    4[COMMON] int 
 10627 ;; Return value:  Size  Location     Type
 10628 ;;                  1    wreg      void 
 10629 ;; Registers used:
 10630 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10631 ;; Tracked objects:
 10632 ;;		On entry : 0/0
 10633 ;;		On exit  : 0/0
 10634 ;;		Unchanged: 0/0
 10635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10636 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10637 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10638 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10639 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10640 ;;Total ram usage:        6 bytes
 10641 ;; Hardware stack levels used:    1
 10642 ;; Hardware stack levels required when called:    3
 10643 ;; This function calls:
 10644 ;;		Nothing
 10645 ;; This function is called by:
 10646 ;;		_GetAtRowCSV
 10647 ;; This function uses a non-reentrant model
 10648 ;;
 10649                           
 10650                           
 10651                           ;psect for function _ClearStringn
 10652  0C2C                     _ClearStringn:	
 10653                           
 10654                           ;incstack = 0
 10655                           ; Regs used in _ClearStringn: [wreg+fsr1l+fsr1h+status,2+status,0]
 10656                           ;ClearStringn@str stored from wreg
 10657  0C2C  00F3               	movwf	ClearStringn@str
 10658                           
 10659                           ;main.c: 56: void ClearStringn(char* str, int length);main.c: 57: {;main.c: 58:     for 
      +                          (int i = 0; i < length; i++)
 10660  0C2D  01F4               	clrf	ClearStringn@i
 10661  0C2E  01F5               	clrf	ClearStringn@i+1
 10662  0C2F                     l3344:	
 10663  0C2F  0875               	movf	ClearStringn@i+1,w
 10664  0C30  3A80               	xorlw	128
 10665  0C31  00F2               	movwf	??_ClearStringn
 10666  0C32  0871               	movf	ClearStringn@length+1,w
 10667  0C33  3A80               	xorlw	128
 10668  0C34  0272               	subwf	??_ClearStringn,w
 10669  0C35  1D03               	skipz
 10670  0C36  2C39               	goto	u2555
 10671  0C37  0870               	movf	ClearStringn@length,w
 10672  0C38  0274               	subwf	ClearStringn@i,w
 10673  0C39                     u2555:	
 10674  0C39  1803               	btfsc	3,0
 10675  0C3A  0008               	return
 10676                           
 10677                           ;main.c: 59:     {;main.c: 60:         str[i] = '\0';
 10678  0C3B  0874               	movf	ClearStringn@i,w
 10679  0C3C  0773               	addwf	ClearStringn@str,w
 10680  0C3D  00F2               	movwf	??_ClearStringn
 10681  0C3E  0872               	movf	??_ClearStringn,w
 10682  0C3F  0086               	movwf	6
 10683  0C40  0187               	clrf	7
 10684  0C41  0181               	clrf	1
 10685                           
 10686                           ;main.c: 61:     }
 10687  0C42  3001               	movlw	1
 10688  0C43  07F4               	addwf	ClearStringn@i,f
 10689  0C44  3000               	movlw	0
 10690  0C45  3DF5               	addwfc	ClearStringn@i+1,f
 10691  0C46  2C2F               	goto	l3344
 10692  0C47                     __end_of_ClearStringn:	
 10693                           
 10694                           	psect	text33
 10695  0B3A                     __ptext33:	
 10696 ;; *************** function _EUSART1_is_rx_ready *****************
 10697 ;; Defined at:
 10698 ;;		line 99 in file "mcc_generated_files/eusart1.c"
 10699 ;; Parameters:    Size  Location     Type
 10700 ;;		None
 10701 ;; Auto vars:     Size  Location     Type
 10702 ;;		None
 10703 ;; Return value:  Size  Location     Type
 10704 ;;                  1    wreg      _Bool 
 10705 ;; Registers used:
 10706 ;;		wreg, status,2, status,0
 10707 ;; Tracked objects:
 10708 ;;		On entry : 0/0
 10709 ;;		On exit  : 0/0
 10710 ;;		Unchanged: 0/0
 10711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10715 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10716 ;;Total ram usage:        0 bytes
 10717 ;; Hardware stack levels used:    1
 10718 ;; Hardware stack levels required when called:    3
 10719 ;; This function calls:
 10720 ;;		Nothing
 10721 ;; This function is called by:
 10722 ;;		_GPS_HasAcknowledged
 10723 ;;		_PollGPS
 10724 ;; This function uses a non-reentrant model
 10725 ;;
 10726                           
 10727                           
 10728                           ;psect for function _EUSART1_is_rx_ready
 10729  0B3A                     _EUSART1_is_rx_ready:	
 10730                           
 10731                           ;mcc_generated_files/eusart1.c: 101:     return (_Bool)(PIR3bits.RC1IF);
 10732                           
 10733                           ;incstack = 0
 10734                           ; Regs used in _EUSART1_is_rx_ready: [wreg+status,2+status,0]
 10735  0B3A  014E               	movlb	14	; select bank14
 10736  0B3B  0E0F               	swapf	15,w	;volatile
 10737  0B3C  0C89               	rrf	9,f
 10738  0B3D  3901               	andlw	1
 10739  0B3E  0008               	return
 10740  0B3F                     __end_of_EUSART1_is_rx_ready:	
 10741                           
 10742                           	psect	text34
 10743  0B84                     __ptext34:	
 10744 ;; *************** function _EUSART1_Read *****************
 10745 ;; Defined at:
 10746 ;;		line 113 in file "mcc_generated_files/eusart1.c"
 10747 ;; Parameters:    Size  Location     Type
 10748 ;;		None
 10749 ;; Auto vars:     Size  Location     Type
 10750 ;;		None
 10751 ;; Return value:  Size  Location     Type
 10752 ;;                  1    wreg      unsigned char 
 10753 ;; Registers used:
 10754 ;;		wreg, status,2
 10755 ;; Tracked objects:
 10756 ;;		On entry : 0/0
 10757 ;;		On exit  : 0/0
 10758 ;;		Unchanged: 0/0
 10759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10763 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10764 ;;Total ram usage:        0 bytes
 10765 ;; Hardware stack levels used:    1
 10766 ;; Hardware stack levels required when called:    3
 10767 ;; This function calls:
 10768 ;;		Nothing
 10769 ;; This function is called by:
 10770 ;;		_GPS_HasAcknowledged
 10771 ;;		_PollGPS
 10772 ;; This function uses a non-reentrant model
 10773 ;;
 10774                           
 10775                           
 10776                           ;psect for function _EUSART1_Read
 10777  0B84                     _EUSART1_Read:	
 10778  0B84                     l348:	
 10779                           ;mcc_generated_files/eusart1.c: 116:     {;mcc_generated_files/eusart1.c: 117:     }
 10780                           
 10781                           ;incstack = 0
 10782                           ; Regs used in _EUSART1_Read: [wreg+status,2]
 10783                           
 10784                           
 10785                           ;mcc_generated_files/eusart1.c: 115:     while(!PIR3bits.RC1IF)
 10786  0B84  014E               	movlb	14	; select bank14
 10787  0B85  1E8F               	btfss	15,5	;volatile
 10788  0B86  2B84               	goto	l348
 10789                           
 10790                           ;mcc_generated_files/eusart1.c: 119:     eusart1RxLastError.status = 0;
 10791  0B87  0141               	movlb	1	; select bank1
 10792  0B88  01CF               	clrf	_eusart1RxLastError^(0+128)	;volatile
 10793                           
 10794                           ;mcc_generated_files/eusart1.c: 121:     if(1 == RC1STAbits.OERR)
 10795  0B89  0142               	movlb	2	; select bank2
 10796  0B8A  1C9D               	btfss	29,1	;volatile
 10797  0B8B  2B8E               	goto	l3464
 10798                           
 10799                           ;mcc_generated_files/eusart1.c: 122:     {;mcc_generated_files/eusart1.c: 125:         R
      +                          C1STAbits.CREN = 0;
 10800  0B8C  121D               	bcf	29,4	;volatile
 10801                           
 10802                           ;mcc_generated_files/eusart1.c: 126:         RC1STAbits.CREN = 1;
 10803  0B8D  161D               	bsf	29,4	;volatile
 10804  0B8E                     l3464:	
 10805                           
 10806                           ;mcc_generated_files/eusart1.c: 129:     return RC1REG;
 10807  0B8E  0819               	movf	25,w	;volatile
 10808  0B8F  0008               	return
 10809  0B90                     __end_of_EUSART1_Read:	
 10810                           
 10811                           	psect	text35
 10812  0C64                     __ptext35:	
 10813 ;; *************** function _ClearNMEA *****************
 10814 ;; Defined at:
 10815 ;;		line 490 in file "main.c"
 10816 ;; Parameters:    Size  Location     Type
 10817 ;;		None
 10818 ;; Auto vars:     Size  Location     Type
 10819 ;;  i               2    2[COMMON] int 
 10820 ;; Return value:  Size  Location     Type
 10821 ;;                  1    wreg      void 
 10822 ;; Registers used:
 10823 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10824 ;; Tracked objects:
 10825 ;;		On entry : 0/0
 10826 ;;		On exit  : 0/0
 10827 ;;		Unchanged: 0/0
 10828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10830 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10831 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10832 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10833 ;;Total ram usage:        4 bytes
 10834 ;; Hardware stack levels used:    1
 10835 ;; Hardware stack levels required when called:    3
 10836 ;; This function calls:
 10837 ;;		Nothing
 10838 ;; This function is called by:
 10839 ;;		_PollGPS
 10840 ;; This function uses a non-reentrant model
 10841 ;;
 10842                           
 10843                           
 10844                           ;psect for function _ClearNMEA
 10845  0C64                     _ClearNMEA:	
 10846                           
 10847                           ;main.c: 492:     for (int i = 0; i < 140; i++)
 10848                           
 10849                           ;incstack = 0
 10850                           ; Regs used in _ClearNMEA: [wreg+fsr1l+fsr1h+status,2+status,0]
 10851  0C64  01F2               	clrf	ClearNMEA@i
 10852  0C65  01F3               	clrf	ClearNMEA@i+1
 10853  0C66                     l3820:	
 10854                           
 10855                           ;main.c: 493:     {;main.c: 494:         nmea_data[i] = '\0';
 10856  0C66  30D8               	movlw	216
 10857  0C67  00F0               	movwf	??_ClearNMEA
 10858  0C68  3026               	movlw	38
 10859  0C69  00F1               	movwf	??_ClearNMEA+1
 10860  0C6A  0872               	movf	ClearNMEA@i,w
 10861  0C6B  0770               	addwf	??_ClearNMEA,w
 10862  0C6C  0086               	movwf	6
 10863  0C6D  0873               	movf	ClearNMEA@i+1,w
 10864  0C6E  3D71               	addwfc	??_ClearNMEA+1,w
 10865  0C6F  0087               	movwf	7
 10866  0C70  0181               	clrf	1
 10867                           
 10868                           ;main.c: 495:     }
 10869  0C71  3001               	movlw	1
 10870  0C72  07F2               	addwf	ClearNMEA@i,f
 10871  0C73  3000               	movlw	0
 10872  0C74  3DF3               	addwfc	ClearNMEA@i+1,f
 10873  0C75  0873               	movf	ClearNMEA@i+1,w
 10874  0C76  3A80               	xorlw	128
 10875  0C77  00F0               	movwf	??_ClearNMEA
 10876  0C78  3080               	movlw	128
 10877  0C79  0270               	subwf	??_ClearNMEA,w
 10878  0C7A  1D03               	skipz
 10879  0C7B  2C7E               	goto	u3015
 10880  0C7C  308C               	movlw	140
 10881  0C7D  0272               	subwf	ClearNMEA@i,w
 10882  0C7E                     u3015:	
 10883  0C7E  1803               	btfsc	3,0
 10884  0C7F  0008               	return
 10885  0C80  2C66               	goto	l3820
 10886  0C81                     __end_of_ClearNMEA:	
 10887                           
 10888                           	psect	text36
 10889  05DE                     __ptext36:	
 10890 ;; *************** function _IntToString *****************
 10891 ;; Defined at:
 10892 ;;		line 180 in file "main.c"
 10893 ;; Parameters:    Size  Location     Type
 10894 ;;  n               2   11[COMMON] int 
 10895 ;;  dest            1   13[COMMON] PTR unsigned char 
 10896 ;;		 -> main@convertedNumber(16), 
 10897 ;; Auto vars:     Size  Location     Type
 10898 ;;  i               2   12[BANK0 ] int 
 10899 ;;  sign            1   11[BANK0 ] _Bool 
 10900 ;; Return value:  Size  Location     Type
 10901 ;;                  1    wreg      void 
 10902 ;; Registers used:
 10903 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10904 ;; Tracked objects:
 10905 ;;		On entry : 0/0
 10906 ;;		On exit  : 0/0
 10907 ;;		Unchanged: 0/0
 10908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10909 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10910 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10911 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10912 ;;      Totals:         3       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10913 ;;Total ram usage:        8 bytes
 10914 ;; Hardware stack levels used:    1
 10915 ;; Hardware stack levels required when called:    5
 10916 ;; This function calls:
 10917 ;;		_ReverseString
 10918 ;;		___awdiv
 10919 ;;		___awmod
 10920 ;; This function is called by:
 10921 ;;		_main
 10922 ;;		_FloatToString
 10923 ;; This function uses a non-reentrant model
 10924 ;;
 10925                           
 10926                           
 10927                           ;psect for function _IntToString
 10928  05DE                     _IntToString:	
 10929                           
 10930                           ;main.c: 180: void IntToString(int n, char* dest);main.c: 181: {;main.c: 182:     int i 
      +                          = 0;
 10931                           
 10932                           ;incstack = 0
 10933                           ; Regs used in _IntToString: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10934  05DE  0140               	movlb	0	; select bank0
 10935  05DF  01AC               	clrf	IntToString@i
 10936  05E0  01AD               	clrf	IntToString@i+1
 10937                           
 10938                           ;main.c: 183:     _Bool sign = n < 0;
 10939  05E1  1FFC               	btfss	IntToString@n+1,7
 10940  05E2  2DE5               	goto	u3580
 10941  05E3  3001               	movlw	1
 10942  05E4  2DE6               	goto	u3590
 10943  05E5                     u3580:	
 10944  05E5  3000               	movlw	0
 10945  05E6                     u3590:	
 10946  05E6  00A9               	movwf	??_IntToString
 10947  05E7  0829               	movf	??_IntToString,w
 10948  05E8  00AB               	movwf	IntToString@sign
 10949                           
 10950                           ;main.c: 184:     if (sign)
 10951  05E9  082B               	movf	IntToString@sign,w
 10952  05EA  1903               	btfsc	3,2
 10953  05EB  2DF1               	goto	l4150
 10954                           
 10955                           ;main.c: 185:     {;main.c: 187:         n = -n;
 10956  05EC  09FB               	comf	IntToString@n,f
 10957  05ED  09FC               	comf	IntToString@n+1,f
 10958  05EE  0AFB               	incf	IntToString@n,f
 10959  05EF  1903               	skipnz
 10960  05F0  0AFC               	incf	IntToString@n+1,f
 10961  05F1                     l4150:	
 10962                           
 10963                           ;main.c: 193:         dest[i++] = n % 10 + '0';
 10964  05F1  300A               	movlw	10
 10965  05F2  00F0               	movwf	___awmod@divisor
 10966  05F3  3000               	movlw	0
 10967  05F4  00F1               	movwf	___awmod@divisor+1
 10968  05F5  087C               	movf	IntToString@n+1,w
 10969  05F6  00F3               	movwf	___awmod@dividend+1
 10970  05F7  087B               	movf	IntToString@n,w
 10971  05F8  00F2               	movwf	___awmod@dividend
 10972  05F9  318F  271E  3185   	fcall	___awmod
 10973  05FC  0870               	movf	?___awmod,w
 10974  05FD  3E30               	addlw	48
 10975  05FE  0140               	movlb	0	; select bank0
 10976  05FF  00A9               	movwf	??_IntToString
 10977  0600  082C               	movf	IntToString@i,w
 10978  0601  077D               	addwf	IntToString@dest,w
 10979  0602  00AA               	movwf	??_IntToString+1
 10980  0603  082A               	movf	??_IntToString+1,w
 10981  0604  0086               	movwf	6
 10982  0605  0187               	clrf	7
 10983  0606  0829               	movf	??_IntToString,w
 10984  0607  0081               	movwf	1
 10985  0608  3001               	movlw	1
 10986  0609  07AC               	addwf	IntToString@i,f
 10987  060A  3000               	movlw	0
 10988  060B  3DAD               	addwfc	IntToString@i+1,f
 10989                           
 10990                           ;main.c: 195:     } while ((n /= 10) > 0);
 10991  060C  300A               	movlw	10
 10992  060D  00F0               	movwf	___awdiv@divisor
 10993  060E  3000               	movlw	0
 10994  060F  00F1               	movwf	___awdiv@divisor+1
 10995  0610  087C               	movf	IntToString@n+1,w
 10996  0611  00F3               	movwf	___awdiv@dividend+1
 10997  0612  087B               	movf	IntToString@n,w
 10998  0613  00F2               	movwf	___awdiv@dividend
 10999  0614  318F  27AF  3185   	fcall	___awdiv
 11000  0617  0871               	movf	?___awdiv+1,w
 11001  0618  00FC               	movwf	IntToString@n+1
 11002  0619  0870               	movf	?___awdiv,w
 11003  061A  00FB               	movwf	IntToString@n
 11004  061B  087C               	movf	IntToString@n+1,w
 11005  061C  3A80               	xorlw	128
 11006  061D  0140               	movlb	0	; select bank0
 11007  061E  00A9               	movwf	??_IntToString
 11008  061F  3080               	movlw	128
 11009  0620  0229               	subwf	??_IntToString,w
 11010  0621  1D03               	skipz
 11011  0622  2E25               	goto	u3615
 11012  0623  3001               	movlw	1
 11013  0624  027B               	subwf	IntToString@n,w
 11014  0625                     u3615:	
 11015  0625  1803               	skipnc
 11016  0626  2DF1               	goto	l4150
 11017                           
 11018                           ;main.c: 196:     if (sign)
 11019  0627  0140               	movlb	0	; select bank0
 11020  0628  082B               	movf	IntToString@sign,w
 11021  0629  1903               	btfsc	3,2
 11022  062A  2E39               	goto	l4162
 11023                           
 11024                           ;main.c: 197:     {;main.c: 198:         dest[i++] = '-';
 11025  062B  302D               	movlw	45
 11026  062C  00A9               	movwf	??_IntToString
 11027  062D  082C               	movf	IntToString@i,w
 11028  062E  077D               	addwf	IntToString@dest,w
 11029  062F  00AA               	movwf	??_IntToString+1
 11030  0630  082A               	movf	??_IntToString+1,w
 11031  0631  0086               	movwf	6
 11032  0632  0187               	clrf	7
 11033  0633  0829               	movf	??_IntToString,w
 11034  0634  0081               	movwf	1
 11035  0635  3001               	movlw	1
 11036  0636  07AC               	addwf	IntToString@i,f
 11037  0637  3000               	movlw	0
 11038  0638  3DAD               	addwfc	IntToString@i+1,f
 11039  0639                     l4162:	
 11040                           
 11041                           ;main.c: 200:     dest[i] = '\0';
 11042  0639  082C               	movf	IntToString@i,w
 11043  063A  077D               	addwf	IntToString@dest,w
 11044  063B  00A9               	movwf	??_IntToString
 11045  063C  0829               	movf	??_IntToString,w
 11046  063D  0086               	movwf	6
 11047  063E  0187               	clrf	7
 11048  063F  0181               	clrf	1
 11049                           
 11050                           ;main.c: 202:     ReverseString(dest);
 11051  0640  087D               	movf	IntToString@dest,w
 11052  0641  3186  26A5         	fcall	_ReverseString
 11053  0643  0008               	return
 11054  0644                     __end_of_IntToString:	
 11055                           
 11056                           	psect	text37
 11057  0F1E                     __ptext37:	
 11058 ;; *************** function ___awmod *****************
 11059 ;; Defined at:
 11060 ;;		line 5 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\awmod.c"
 11061 ;; Parameters:    Size  Location     Type
 11062 ;;  divisor         2    0[COMMON] int 
 11063 ;;  dividend        2    2[COMMON] int 
 11064 ;; Auto vars:     Size  Location     Type
 11065 ;;  sign            1    6[COMMON] unsigned char 
 11066 ;;  counter         1    5[COMMON] unsigned char 
 11067 ;; Return value:  Size  Location     Type
 11068 ;;                  2    0[COMMON] int 
 11069 ;; Registers used:
 11070 ;;		wreg, status,2, status,0
 11071 ;; Tracked objects:
 11072 ;;		On entry : 0/0
 11073 ;;		On exit  : 0/0
 11074 ;;		Unchanged: 0/0
 11075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11076 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11077 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11078 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11079 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11080 ;;Total ram usage:        7 bytes
 11081 ;; Hardware stack levels used:    1
 11082 ;; Hardware stack levels required when called:    3
 11083 ;; This function calls:
 11084 ;;		Nothing
 11085 ;; This function is called by:
 11086 ;;		_IntToString
 11087 ;; This function uses a non-reentrant model
 11088 ;;
 11089                           
 11090                           
 11091                           ;psect for function ___awmod
 11092  0F1E                     ___awmod:	
 11093                           
 11094                           ;incstack = 0
 11095                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 11096  0F1E  01F6               	clrf	___awmod@sign
 11097  0F1F  1FF3               	btfss	___awmod@dividend+1,7
 11098  0F20  2F28               	goto	l3916
 11099  0F21  09F2               	comf	___awmod@dividend,f
 11100  0F22  09F3               	comf	___awmod@dividend+1,f
 11101  0F23  0AF2               	incf	___awmod@dividend,f
 11102  0F24  1903               	skipnz
 11103  0F25  0AF3               	incf	___awmod@dividend+1,f
 11104  0F26  01F6               	clrf	___awmod@sign
 11105  0F27  0AF6               	incf	___awmod@sign,f
 11106  0F28                     l3916:	
 11107  0F28  1FF1               	btfss	___awmod@divisor+1,7
 11108  0F29  2F2F               	goto	l3920
 11109  0F2A  09F0               	comf	___awmod@divisor,f
 11110  0F2B  09F1               	comf	___awmod@divisor+1,f
 11111  0F2C  0AF0               	incf	___awmod@divisor,f
 11112  0F2D  1903               	skipnz
 11113  0F2E  0AF1               	incf	___awmod@divisor+1,f
 11114  0F2F                     l3920:	
 11115  0F2F  0870               	movf	___awmod@divisor,w
 11116  0F30  0471               	iorwf	___awmod@divisor+1,w
 11117  0F31  1903               	btfsc	3,2
 11118  0F32  2F56               	goto	l3938
 11119  0F33  01F5               	clrf	___awmod@counter
 11120  0F34  0AF5               	incf	___awmod@counter,f
 11121  0F35                     l3928:	
 11122  0F35  1BF1               	btfsc	___awmod@divisor+1,7
 11123  0F36  2F41               	goto	l3930
 11124  0F37  3001               	movlw	1
 11125  0F38                     u3215:	
 11126  0F38  35F0               	lslf	___awmod@divisor,f
 11127  0F39  0DF1               	rlf	___awmod@divisor+1,f
 11128  0F3A  0B89               	decfsz	9,f
 11129  0F3B  2F38               	goto	u3215
 11130  0F3C  3001               	movlw	1
 11131  0F3D  00F4               	movwf	??___awmod
 11132  0F3E  0874               	movf	??___awmod,w
 11133  0F3F  07F5               	addwf	___awmod@counter,f
 11134  0F40  2F35               	goto	l3928
 11135  0F41                     l3930:	
 11136  0F41  0871               	movf	___awmod@divisor+1,w
 11137  0F42  0273               	subwf	___awmod@dividend+1,w
 11138  0F43  1D03               	skipz
 11139  0F44  2F47               	goto	u3235
 11140  0F45  0870               	movf	___awmod@divisor,w
 11141  0F46  0272               	subwf	___awmod@dividend,w
 11142  0F47                     u3235:	
 11143  0F47  1C03               	skipc
 11144  0F48  2F4D               	goto	l3934
 11145  0F49  0870               	movf	___awmod@divisor,w
 11146  0F4A  02F2               	subwf	___awmod@dividend,f
 11147  0F4B  0871               	movf	___awmod@divisor+1,w
 11148  0F4C  3BF3               	subwfb	___awmod@dividend+1,f
 11149  0F4D                     l3934:	
 11150  0F4D  3001               	movlw	1
 11151  0F4E                     u3245:	
 11152  0F4E  36F1               	lsrf	___awmod@divisor+1,f
 11153  0F4F  0CF0               	rrf	___awmod@divisor,f
 11154  0F50  0B89               	decfsz	9,f
 11155  0F51  2F4E               	goto	u3245
 11156  0F52  3001               	movlw	1
 11157  0F53  02F5               	subwf	___awmod@counter,f
 11158  0F54  1D03               	btfss	3,2
 11159  0F55  2F41               	goto	l3930
 11160  0F56                     l3938:	
 11161  0F56  0876               	movf	___awmod@sign,w
 11162  0F57  1903               	btfsc	3,2
 11163  0F58  2F5E               	goto	l3942
 11164  0F59  09F2               	comf	___awmod@dividend,f
 11165  0F5A  09F3               	comf	___awmod@dividend+1,f
 11166  0F5B  0AF2               	incf	___awmod@dividend,f
 11167  0F5C  1903               	skipnz
 11168  0F5D  0AF3               	incf	___awmod@dividend+1,f
 11169  0F5E                     l3942:	
 11170  0F5E  0873               	movf	___awmod@dividend+1,w
 11171  0F5F  00F1               	movwf	?___awmod+1
 11172  0F60  0872               	movf	___awmod@dividend,w
 11173  0F61  00F0               	movwf	?___awmod
 11174  0F62  0008               	return
 11175  0F63                     __end_of___awmod:	
 11176                           
 11177                           	psect	text38
 11178  06A5                     __ptext38:	
 11179 ;; *************** function _ReverseString *****************
 11180 ;; Defined at:
 11181 ;;		line 125 in file "main.c"
 11182 ;; Parameters:    Size  Location     Type
 11183 ;;  str             1    wreg     PTR unsigned char 
 11184 ;;		 -> checksum(6), main@convertedNumber(16), 
 11185 ;; Auto vars:     Size  Location     Type
 11186 ;;  str             1    8[BANK0 ] PTR unsigned char 
 11187 ;;		 -> checksum(6), main@convertedNumber(16), 
 11188 ;;  opposite        1    3[BANK0 ] PTR unsigned char 
 11189 ;;		 -> checksum(6), main@convertedNumber(16), 
 11190 ;;  temp            1    2[BANK0 ] unsigned char 
 11191 ;;  i               2    6[BANK0 ] int 
 11192 ;;  halfway         2    0[BANK0 ] int 
 11193 ;;  counti          2    4[BANK0 ] int 
 11194 ;; Return value:  Size  Location     Type
 11195 ;;                  1    wreg      void 
 11196 ;; Registers used:
 11197 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11198 ;; Tracked objects:
 11199 ;;		On entry : 0/0
 11200 ;;		On exit  : 0/0
 11201 ;;		Unchanged: 0/0
 11202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11204 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11205 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11206 ;;      Totals:         2       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11207 ;;Total ram usage:       11 bytes
 11208 ;; Hardware stack levels used:    1
 11209 ;; Hardware stack levels required when called:    4
 11210 ;; This function calls:
 11211 ;;		___awdiv
 11212 ;;		_strlen
 11213 ;; This function is called by:
 11214 ;;		_UIntToHexString
 11215 ;;		_IntToString
 11216 ;;		_UIntToString
 11217 ;;		_IntToHexString
 11218 ;; This function uses a non-reentrant model
 11219 ;;
 11220                           
 11221                           
 11222                           ;psect for function _ReverseString
 11223  06A5                     _ReverseString:	
 11224                           
 11225                           ;incstack = 0
 11226                           ; Regs used in _ReverseString: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11227                           ;ReverseString@str stored from wreg
 11228  06A5  0140               	movlb	0	; select bank0
 11229  06A6  00A8               	movwf	ReverseString@str
 11230                           
 11231                           ;main.c: 125: void ReverseString(char* str);main.c: 126: {;main.c: 127:     int counti =
      +                           strlen(str);
 11232  06A7  0828               	movf	ReverseString@str,w
 11233  06A8  00F0               	movwf	strlen@s
 11234  06A9  3000               	movlw	0
 11235  06AA  00F1               	movwf	strlen@s+1
 11236  06AB  318B  23FD  3186   	fcall	_strlen
 11237  06AE  0871               	movf	?_strlen+1,w
 11238  06AF  0140               	movlb	0	; select bank0
 11239  06B0  00A5               	movwf	ReverseString@counti+1
 11240  06B1  0870               	movf	?_strlen,w
 11241  06B2  00A4               	movwf	ReverseString@counti
 11242                           
 11243                           ;main.c: 128:     for (int i = 0, halfway = counti / 2; i < halfway; i++)
 11244  06B3  01A6               	clrf	ReverseString@i
 11245  06B4  01A7               	clrf	ReverseString@i+1
 11246  06B5  3002               	movlw	2
 11247  06B6  00F0               	movwf	___awdiv@divisor
 11248  06B7  3000               	movlw	0
 11249  06B8  00F1               	movwf	___awdiv@divisor+1
 11250  06B9  0825               	movf	ReverseString@counti+1,w
 11251  06BA  00F3               	movwf	___awdiv@dividend+1
 11252  06BB  0824               	movf	ReverseString@counti,w
 11253  06BC  00F2               	movwf	___awdiv@dividend
 11254  06BD  318F  27AF  3186   	fcall	___awdiv
 11255  06C0  0871               	movf	?___awdiv+1,w
 11256  06C1  0140               	movlb	0	; select bank0
 11257  06C2  00A1               	movwf	ReverseString@halfway+1
 11258  06C3  0870               	movf	?___awdiv,w
 11259  06C4  00A0               	movwf	ReverseString@halfway
 11260  06C5                     l3734:	
 11261  06C5  0827               	movf	ReverseString@i+1,w
 11262  06C6  3A80               	xorlw	128
 11263  06C7  00F9               	movwf	??_ReverseString
 11264  06C8  0821               	movf	ReverseString@halfway+1,w
 11265  06C9  3A80               	xorlw	128
 11266  06CA  0279               	subwf	??_ReverseString,w
 11267  06CB  1D03               	skipz
 11268  06CC  2ECF               	goto	u2935
 11269  06CD  0820               	movf	ReverseString@halfway,w
 11270  06CE  0226               	subwf	ReverseString@i,w
 11271  06CF                     u2935:	
 11272  06CF  1803               	btfsc	3,0
 11273  06D0  2EFC               	goto	l3736
 11274                           
 11275                           ;main.c: 129:     {;main.c: 130:         char temp = str[i];
 11276  06D1  0140               	movlb	0	; select bank0
 11277  06D2  0826               	movf	ReverseString@i,w
 11278  06D3  0728               	addwf	ReverseString@str,w
 11279  06D4  00F9               	movwf	??_ReverseString
 11280  06D5  0879               	movf	??_ReverseString,w
 11281  06D6  0086               	movwf	6
 11282  06D7  0187               	clrf	7
 11283  06D8  0801               	movf	1,w
 11284  06D9  00FA               	movwf	??_ReverseString+1
 11285  06DA  087A               	movf	??_ReverseString+1,w
 11286  06DB  00A2               	movwf	ReverseString@temp
 11287                           
 11288                           ;main.c: 131:         char* opposite = str + (counti - 1 - i);
 11289  06DC  0826               	movf	ReverseString@i,w
 11290  06DD  0228               	subwf	ReverseString@str,w
 11291  06DE  0724               	addwf	ReverseString@counti,w
 11292  06DF  3EFF               	addlw	-1
 11293  06E0  00F9               	movwf	??_ReverseString
 11294  06E1  0879               	movf	??_ReverseString,w
 11295  06E2  00A3               	movwf	ReverseString@opposite
 11296                           
 11297                           ;main.c: 132:         str[i] = *opposite;
 11298  06E3  0823               	movf	ReverseString@opposite,w
 11299  06E4  0086               	movwf	6
 11300  06E5  0187               	clrf	7
 11301  06E6  0801               	movf	1,w
 11302  06E7  00F9               	movwf	??_ReverseString
 11303  06E8  0826               	movf	ReverseString@i,w
 11304  06E9  0728               	addwf	ReverseString@str,w
 11305  06EA  00FA               	movwf	??_ReverseString+1
 11306  06EB  087A               	movf	??_ReverseString+1,w
 11307  06EC  0086               	movwf	6
 11308  06ED  0187               	clrf	7
 11309  06EE  0879               	movf	??_ReverseString,w
 11310  06EF  0081               	movwf	1
 11311                           
 11312                           ;main.c: 133:         *opposite = temp;
 11313  06F0  0822               	movf	ReverseString@temp,w
 11314  06F1  00F9               	movwf	??_ReverseString
 11315  06F2  0823               	movf	ReverseString@opposite,w
 11316  06F3  0086               	movwf	6
 11317  06F4  0187               	clrf	7
 11318  06F5  0879               	movf	??_ReverseString,w
 11319  06F6  0081               	movwf	1
 11320                           
 11321                           ;main.c: 134:     }
 11322  06F7  3001               	movlw	1
 11323  06F8  07A6               	addwf	ReverseString@i,f
 11324  06F9  3000               	movlw	0
 11325  06FA  3DA7               	addwfc	ReverseString@i+1,f
 11326  06FB  2EC5               	goto	l3734
 11327  06FC                     l3736:	
 11328                           
 11329                           ;main.c: 135:     str[counti] = '\0';
 11330  06FC  0140               	movlb	0	; select bank0
 11331  06FD  0824               	movf	ReverseString@counti,w
 11332  06FE  0728               	addwf	ReverseString@str,w
 11333  06FF  00F9               	movwf	??_ReverseString
 11334  0700  0879               	movf	??_ReverseString,w
 11335  0701  0086               	movwf	6
 11336  0702  0187               	clrf	7
 11337  0703  0181               	clrf	1
 11338  0704  0008               	return
 11339  0705                     __end_of_ReverseString:	
 11340                           
 11341                           	psect	text39
 11342  0FAF                     __ptext39:	
 11343 ;; *************** function ___awdiv *****************
 11344 ;; Defined at:
 11345 ;;		line 5 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\awdiv.c"
 11346 ;; Parameters:    Size  Location     Type
 11347 ;;  divisor         2    0[COMMON] int 
 11348 ;;  dividend        2    2[COMMON] int 
 11349 ;; Auto vars:     Size  Location     Type
 11350 ;;  quotient        2    7[COMMON] int 
 11351 ;;  sign            1    6[COMMON] unsigned char 
 11352 ;;  counter         1    5[COMMON] unsigned char 
 11353 ;; Return value:  Size  Location     Type
 11354 ;;                  2    0[COMMON] int 
 11355 ;; Registers used:
 11356 ;;		wreg, status,2, status,0
 11357 ;; Tracked objects:
 11358 ;;		On entry : 0/0
 11359 ;;		On exit  : 0/0
 11360 ;;		Unchanged: 0/0
 11361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11362 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11363 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11364 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11365 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11366 ;;Total ram usage:        9 bytes
 11367 ;; Hardware stack levels used:    1
 11368 ;; Hardware stack levels required when called:    3
 11369 ;; This function calls:
 11370 ;;		Nothing
 11371 ;; This function is called by:
 11372 ;;		_ReverseString
 11373 ;;		_IntToString
 11374 ;;		_IntToHexString
 11375 ;; This function uses a non-reentrant model
 11376 ;;
 11377                           
 11378                           
 11379                           ;psect for function ___awdiv
 11380  0FAF                     ___awdiv:	
 11381                           
 11382                           ;incstack = 0
 11383                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 11384  0FAF  01F6               	clrf	___awdiv@sign
 11385  0FB0  1FF1               	btfss	___awdiv@divisor+1,7
 11386  0FB1  2FB9               	goto	l3540
 11387  0FB2  09F0               	comf	___awdiv@divisor,f
 11388  0FB3  09F1               	comf	___awdiv@divisor+1,f
 11389  0FB4  0AF0               	incf	___awdiv@divisor,f
 11390  0FB5  1903               	skipnz
 11391  0FB6  0AF1               	incf	___awdiv@divisor+1,f
 11392  0FB7  01F6               	clrf	___awdiv@sign
 11393  0FB8  0AF6               	incf	___awdiv@sign,f
 11394  0FB9                     l3540:	
 11395  0FB9  1FF3               	btfss	___awdiv@dividend+1,7
 11396  0FBA  2FC4               	goto	l3546
 11397  0FBB  09F2               	comf	___awdiv@dividend,f
 11398  0FBC  09F3               	comf	___awdiv@dividend+1,f
 11399  0FBD  0AF2               	incf	___awdiv@dividend,f
 11400  0FBE  1903               	skipnz
 11401  0FBF  0AF3               	incf	___awdiv@dividend+1,f
 11402  0FC0  3001               	movlw	1
 11403  0FC1  00F4               	movwf	??___awdiv
 11404  0FC2  0874               	movf	??___awdiv,w
 11405  0FC3  06F6               	xorwf	___awdiv@sign,f
 11406  0FC4                     l3546:	
 11407  0FC4  01F7               	clrf	___awdiv@quotient
 11408  0FC5  01F8               	clrf	___awdiv@quotient+1
 11409  0FC6  0870               	movf	___awdiv@divisor,w
 11410  0FC7  0471               	iorwf	___awdiv@divisor+1,w
 11411  0FC8  1903               	btfsc	3,2
 11412  0FC9  2FF3               	goto	l3568
 11413  0FCA  01F5               	clrf	___awdiv@counter
 11414  0FCB  0AF5               	incf	___awdiv@counter,f
 11415  0FCC                     l3556:	
 11416  0FCC  1BF1               	btfsc	___awdiv@divisor+1,7
 11417  0FCD  2FD8               	goto	l3558
 11418  0FCE  3001               	movlw	1
 11419  0FCF                     u2785:	
 11420  0FCF  35F0               	lslf	___awdiv@divisor,f
 11421  0FD0  0DF1               	rlf	___awdiv@divisor+1,f
 11422  0FD1  0B89               	decfsz	9,f
 11423  0FD2  2FCF               	goto	u2785
 11424  0FD3  3001               	movlw	1
 11425  0FD4  00F4               	movwf	??___awdiv
 11426  0FD5  0874               	movf	??___awdiv,w
 11427  0FD6  07F5               	addwf	___awdiv@counter,f
 11428  0FD7  2FCC               	goto	l3556
 11429  0FD8                     l3558:	
 11430  0FD8  3001               	movlw	1
 11431  0FD9                     u2805:	
 11432  0FD9  35F7               	lslf	___awdiv@quotient,f
 11433  0FDA  0DF8               	rlf	___awdiv@quotient+1,f
 11434  0FDB  0B89               	decfsz	9,f
 11435  0FDC  2FD9               	goto	u2805
 11436  0FDD  0871               	movf	___awdiv@divisor+1,w
 11437  0FDE  0273               	subwf	___awdiv@dividend+1,w
 11438  0FDF  1D03               	skipz
 11439  0FE0  2FE3               	goto	u2815
 11440  0FE1  0870               	movf	___awdiv@divisor,w
 11441  0FE2  0272               	subwf	___awdiv@dividend,w
 11442  0FE3                     u2815:	
 11443  0FE3  1C03               	skipc
 11444  0FE4  2FEA               	goto	l3564
 11445  0FE5  0870               	movf	___awdiv@divisor,w
 11446  0FE6  02F2               	subwf	___awdiv@dividend,f
 11447  0FE7  0871               	movf	___awdiv@divisor+1,w
 11448  0FE8  3BF3               	subwfb	___awdiv@dividend+1,f
 11449  0FE9  1477               	bsf	___awdiv@quotient,0
 11450  0FEA                     l3564:	
 11451  0FEA  3001               	movlw	1
 11452  0FEB                     u2825:	
 11453  0FEB  36F1               	lsrf	___awdiv@divisor+1,f
 11454  0FEC  0CF0               	rrf	___awdiv@divisor,f
 11455  0FED  0B89               	decfsz	9,f
 11456  0FEE  2FEB               	goto	u2825
 11457  0FEF  3001               	movlw	1
 11458  0FF0  02F5               	subwf	___awdiv@counter,f
 11459  0FF1  1D03               	btfss	3,2
 11460  0FF2  2FD8               	goto	l3558
 11461  0FF3                     l3568:	
 11462  0FF3  0876               	movf	___awdiv@sign,w
 11463  0FF4  1903               	btfsc	3,2
 11464  0FF5  2FFB               	goto	l3572
 11465  0FF6  09F7               	comf	___awdiv@quotient,f
 11466  0FF7  09F8               	comf	___awdiv@quotient+1,f
 11467  0FF8  0AF7               	incf	___awdiv@quotient,f
 11468  0FF9  1903               	skipnz
 11469  0FFA  0AF8               	incf	___awdiv@quotient+1,f
 11470  0FFB                     l3572:	
 11471  0FFB  0878               	movf	___awdiv@quotient+1,w
 11472  0FFC  00F1               	movwf	?___awdiv+1
 11473  0FFD  0877               	movf	___awdiv@quotient,w
 11474  0FFE  00F0               	movwf	?___awdiv
 11475  0FFF  0008               	return
 11476  1000                     __end_of___awdiv:	
 11477                           
 11478                           	psect	text40
 11479  0B57                     __ptext40:	
 11480 ;; *************** function _InitTiming *****************
 11481 ;; Defined at:
 11482 ;;		line 11 in file "timing.c"
 11483 ;; Parameters:    Size  Location     Type
 11484 ;;		None
 11485 ;; Auto vars:     Size  Location     Type
 11486 ;;		None
 11487 ;; Return value:  Size  Location     Type
 11488 ;;                  1    wreg      void 
 11489 ;; Registers used:
 11490 ;;		wreg, status,2, status,0, pclath, cstack
 11491 ;; Tracked objects:
 11492 ;;		On entry : 0/0
 11493 ;;		On exit  : 0/0
 11494 ;;		Unchanged: 0/0
 11495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11499 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11500 ;;Total ram usage:        0 bytes
 11501 ;; Hardware stack levels used:    1
 11502 ;; Hardware stack levels required when called:    4
 11503 ;; This function calls:
 11504 ;;		_TMR0_SetInterruptHandler
 11505 ;; This function is called by:
 11506 ;;		_main
 11507 ;; This function uses a non-reentrant model
 11508 ;;
 11509                           
 11510                           
 11511                           ;psect for function _InitTiming
 11512  0B57                     _InitTiming:	
 11513                           
 11514                           ;timing.c: 13:     (INTCONbits.GIE = 1);
 11515                           
 11516                           ;incstack = 0
 11517                           ; Regs used in _InitTiming: [wreg+status,2+status,0+pclath+cstack]
 11518  0B57  178B               	bsf	11,7	;volatile
 11519                           
 11520                           ;timing.c: 14:     TMR0_SetInterruptHandler(TimerISR);
 11521  0B58  3070               	movlw	low _TimerISR
 11522  0B59  00F0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 11523  0B5A  300B               	movlw	high _TimerISR
 11524  0B5B  00F1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 11525  0B5C  318B  233F         	fcall	_TMR0_SetInterruptHandler
 11526  0B5E  0008               	return
 11527  0B5F                     __end_of_InitTiming:	
 11528                           
 11529                           	psect	text41
 11530  0B3F                     __ptext41:	
 11531 ;; *************** function _TMR0_SetInterruptHandler *****************
 11532 ;; Defined at:
 11533 ;;		line 134 in file "mcc_generated_files/tmr0.c"
 11534 ;; Parameters:    Size  Location     Type
 11535 ;;  InterruptHan    2    0[COMMON] PTR FTN()void 
 11536 ;;		 -> TimerISR(1), TMR0_DefaultInterruptHandler(1), 
 11537 ;; Auto vars:     Size  Location     Type
 11538 ;;		None
 11539 ;; Return value:  Size  Location     Type
 11540 ;;                  1    wreg      void 
 11541 ;; Registers used:
 11542 ;;		wreg
 11543 ;; Tracked objects:
 11544 ;;		On entry : 0/0
 11545 ;;		On exit  : 0/0
 11546 ;;		Unchanged: 0/0
 11547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11548 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11551 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11552 ;;Total ram usage:        2 bytes
 11553 ;; Hardware stack levels used:    1
 11554 ;; Hardware stack levels required when called:    3
 11555 ;; This function calls:
 11556 ;;		Nothing
 11557 ;; This function is called by:
 11558 ;;		_TMR0_Initialize
 11559 ;;		_InitTiming
 11560 ;; This function uses a non-reentrant model
 11561 ;;
 11562                           
 11563                           
 11564                           ;psect for function _TMR0_SetInterruptHandler
 11565  0B3F                     _TMR0_SetInterruptHandler:	
 11566                           
 11567                           ;mcc_generated_files/tmr0.c: 135:     TMR0_InterruptHandler = InterruptHandler;
 11568                           
 11569                           ;incstack = 0
 11570                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
 11571  0B3F  0871               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
 11572  0B40  0141               	movlb	1	; select bank1
 11573  0B41  00EF               	movwf	(_TMR0_InterruptHandler+1)^(0+128)
 11574  0B42  0870               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
 11575  0B43  00EE               	movwf	_TMR0_InterruptHandler^(0+128)
 11576  0B44  0008               	return
 11577  0B45                     __end_of_TMR0_SetInterruptHandler:	
 11578                           
 11579                           	psect	text42
 11580  0D65                     __ptext42:	
 11581 ;; *************** function _DebugAlert *****************
 11582 ;; Defined at:
 11583 ;;		line 4 in file "debug.c"
 11584 ;; Parameters:    Size  Location     Type
 11585 ;;  delay_high      2    0[BANK0 ] unsigned int 
 11586 ;;  delay_low       2    2[BANK0 ] unsigned int 
 11587 ;;  num_flashes     1    4[BANK0 ] unsigned char 
 11588 ;; Auto vars:     Size  Location     Type
 11589 ;;  i               2    5[BANK0 ] int 
 11590 ;; Return value:  Size  Location     Type
 11591 ;;                  1    wreg      void 
 11592 ;; Registers used:
 11593 ;;		wreg, status,2, status,0, pclath, cstack
 11594 ;; Tracked objects:
 11595 ;;		On entry : 0/0
 11596 ;;		On exit  : 0/0
 11597 ;;		Unchanged: 0/0
 11598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11599 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11600 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11601 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11602 ;;      Totals:         1       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11603 ;;Total ram usage:        8 bytes
 11604 ;; Hardware stack levels used:    1
 11605 ;; Hardware stack levels required when called:    4
 11606 ;; This function calls:
 11607 ;;		_Sleep
 11608 ;; This function is called by:
 11609 ;;		_main
 11610 ;;		_I2C_Wait_SSPIF
 11611 ;;		_BME280_Init
 11612 ;; This function uses a non-reentrant model
 11613 ;;
 11614                           
 11615                           
 11616                           ;psect for function _DebugAlert
 11617  0D65                     _DebugAlert:	
 11618                           
 11619                           ;debug.c: 4: void DebugAlert(unsigned int delay_high, unsigned int delay_low, uint8_t nu
      +                          m_flashes);debug.c: 5: {;debug.c: 7:     for (int i = 0; i < num_flashes; i++)
 11620                           
 11621                           ;incstack = 0
 11622                           ; Regs used in _DebugAlert: [wreg+status,2+status,0+pclath+cstack]
 11623  0D65  0140               	movlb	0	; select bank0
 11624  0D66  01A5               	clrf	DebugAlert@i
 11625  0D67  01A6               	clrf	DebugAlert@i+1
 11626  0D68                     l4074:	
 11627  0D68  0826               	movf	DebugAlert@i+1,w
 11628  0D69  3A80               	xorlw	128
 11629  0D6A  00FC               	movwf	??_DebugAlert
 11630  0D6B  3080               	movlw	128
 11631  0D6C  027C               	subwf	??_DebugAlert,w
 11632  0D6D  1D03               	skipz
 11633  0D6E  2D71               	goto	u3515
 11634  0D6F  0824               	movf	DebugAlert@num_flashes,w
 11635  0D70  0225               	subwf	DebugAlert@i,w
 11636  0D71                     u3515:	
 11637  0D71  1803               	btfsc	3,0
 11638  0D72  0008               	return
 11639                           
 11640                           ;debug.c: 8:     {;debug.c: 9:         do { LATCbits.LATC5 = 1; } while(0);
 11641  0D73  0140               	movlb	0	; select bank0
 11642  0D74  169A               	bsf	26,5	;volatile
 11643                           
 11644                           ;debug.c: 10:         Sleep(delay_high);
 11645  0D75  0820               	movf	DebugAlert@delay_high,w
 11646  0D76  00F0               	movwf	Sleep@ms
 11647  0D77  0821               	movf	DebugAlert@delay_high+1,w
 11648  0D78  00F1               	movwf	Sleep@ms+1
 11649  0D79  01F2               	clrf	Sleep@ms+2
 11650  0D7A  01F3               	clrf	Sleep@ms+3
 11651  0D7B  318D  258F  318D   	fcall	_Sleep
 11652  0D7E  0140               	movlb	0	; select bank0
 11653  0D7F  129A               	bcf	26,5	;volatile
 11654                           
 11655                           ;debug.c: 12:         Sleep(delay_low);
 11656  0D80  0822               	movf	DebugAlert@delay_low,w
 11657  0D81  00F0               	movwf	Sleep@ms
 11658  0D82  0823               	movf	DebugAlert@delay_low+1,w
 11659  0D83  00F1               	movwf	Sleep@ms+1
 11660  0D84  01F2               	clrf	Sleep@ms+2
 11661  0D85  01F3               	clrf	Sleep@ms+3
 11662  0D86  318D  258F  318D   	fcall	_Sleep
 11663                           
 11664                           ;debug.c: 13:     }
 11665  0D89  3001               	movlw	1
 11666  0D8A  0140               	movlb	0	; select bank0
 11667  0D8B  07A5               	addwf	DebugAlert@i,f
 11668  0D8C  3000               	movlw	0
 11669  0D8D  3DA6               	addwfc	DebugAlert@i+1,f
 11670  0D8E  2D68               	goto	l4074
 11671  0D8F                     __end_of_DebugAlert:	
 11672                           
 11673                           	psect	text43
 11674  0D8F                     __ptext43:	
 11675 ;; *************** function _Sleep *****************
 11676 ;; Defined at:
 11677 ;;		line 17 in file "timing.c"
 11678 ;; Parameters:    Size  Location     Type
 11679 ;;  ms              4    0[COMMON] unsigned long 
 11680 ;; Auto vars:     Size  Location     Type
 11681 ;;  start           4    8[COMMON] unsigned long 
 11682 ;; Return value:  Size  Location     Type
 11683 ;;                  1    wreg      void 
 11684 ;; Registers used:
 11685 ;;		wreg
 11686 ;; Tracked objects:
 11687 ;;		On entry : 0/0
 11688 ;;		On exit  : 0/0
 11689 ;;		Unchanged: 0/0
 11690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11691 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11692 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11693 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11694 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11695 ;;Total ram usage:       12 bytes
 11696 ;; Hardware stack levels used:    1
 11697 ;; Hardware stack levels required when called:    3
 11698 ;; This function calls:
 11699 ;;		Nothing
 11700 ;; This function is called by:
 11701 ;;		_DebugAlert
 11702 ;;		_SetupGPS
 11703 ;;		_main
 11704 ;;		_TransmitBit
 11705 ;;		_BME280_Init
 11706 ;;		_bme280_soft_reset
 11707 ;;		_bme280_init
 11708 ;; This function uses a non-reentrant model
 11709 ;;
 11710                           
 11711                           
 11712                           ;psect for function _Sleep
 11713  0D8F                     _Sleep:	
 11714                           
 11715                           ;timing.c: 17: void Sleep(uint32_t ms);timing.c: 18: {;timing.c: 19:     uint32_t start 
      +                          = ticks;
 11716                           
 11717                           ;incstack = 0
 11718                           ; Regs used in _Sleep: [wreg]
 11719  0D8F  0141               	movlb	1	; select bank1
 11720  0D90  0847               	movf	(_ticks+3)^(0+128),w
 11721  0D91  00FB               	movwf	Sleep@start+3
 11722  0D92  0846               	movf	(_ticks+2)^(0+128),w
 11723  0D93  00FA               	movwf	Sleep@start+2
 11724  0D94  0845               	movf	(_ticks+1)^(0+128),w
 11725  0D95  00F9               	movwf	Sleep@start+1
 11726  0D96  0844               	movf	_ticks^(0+128),w
 11727  0D97  00F8               	movwf	Sleep@start
 11728  0D98                     l889:	
 11729                           ;timing.c: 23:     }
 11730                           
 11731                           ;timing.c: 20:     while (ticks - start < ms)
 11732                           
 11733                           
 11734                           ;timing.c: 20:     while (ticks - start < ms)
 11735  0D98  0878               	movf	Sleep@start,w
 11736  0D99  0141               	movlb	1	; select bank1
 11737  0D9A  0244               	subwf	_ticks^(0+128),w
 11738  0D9B  00F4               	movwf	??_Sleep
 11739  0D9C  0879               	movf	Sleep@start+1,w
 11740  0D9D  3B45               	subwfb	(_ticks+1)^(0+128),w
 11741  0D9E  00F5               	movwf	??_Sleep+1
 11742  0D9F  087A               	movf	Sleep@start+2,w
 11743  0DA0  3B46               	subwfb	(_ticks+2)^(0+128),w
 11744  0DA1  00F6               	movwf	??_Sleep+2
 11745  0DA2  087B               	movf	Sleep@start+3,w
 11746  0DA3  3B47               	subwfb	(_ticks+3)^(0+128),w
 11747  0DA4  00F7               	movwf	??_Sleep+3
 11748  0DA5  0873               	movf	Sleep@ms+3,w
 11749  0DA6  0277               	subwf	??_Sleep+3,w
 11750  0DA7  1D03               	skipz
 11751  0DA8  2DB3               	goto	u2545
 11752  0DA9  0872               	movf	Sleep@ms+2,w
 11753  0DAA  0276               	subwf	??_Sleep+2,w
 11754  0DAB  1D03               	skipz
 11755  0DAC  2DB3               	goto	u2545
 11756  0DAD  0871               	movf	Sleep@ms+1,w
 11757  0DAE  0275               	subwf	??_Sleep+1,w
 11758  0DAF  1D03               	skipz
 11759  0DB0  2DB3               	goto	u2545
 11760  0DB1  0870               	movf	Sleep@ms,w
 11761  0DB2  0274               	subwf	??_Sleep,w
 11762  0DB3                     u2545:	
 11763  0DB3  1803               	btfsc	3,0
 11764  0DB4  0008               	return
 11765                           
 11766                           ;timing.c: 21:     {;timing.c: 22:         _delay((unsigned long)((1)*(1000000/4000.0)))
      +                          ;
 11767  0DB5  3053               	movlw	83
 11768  0DB6                     u4827:	
 11769  0DB6  0B89               	decfsz	9,f
 11770  0DB7  2DB6               	goto	u4827
 11771  0DB8  0000               	nop
 11772  0DB9  2D98               	goto	l889
 11773  0DBA                     __end_of_Sleep:	
 11774                           
 11775                           	psect	text44
 11776  0C47                     __ptext44:	
 11777 ;; *************** function _ClearTxData *****************
 11778 ;; Defined at:
 11779 ;;		line 300 in file "main.c"
 11780 ;; Parameters:    Size  Location     Type
 11781 ;;		None
 11782 ;; Auto vars:     Size  Location     Type
 11783 ;;  i               2    2[COMMON] int 
 11784 ;; Return value:  Size  Location     Type
 11785 ;;                  1    wreg      void 
 11786 ;; Registers used:
 11787 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11788 ;; Tracked objects:
 11789 ;;		On entry : 0/0
 11790 ;;		On exit  : 0/0
 11791 ;;		Unchanged: 0/0
 11792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11794 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11795 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11796 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11797 ;;Total ram usage:        4 bytes
 11798 ;; Hardware stack levels used:    1
 11799 ;; Hardware stack levels required when called:    3
 11800 ;; This function calls:
 11801 ;;		Nothing
 11802 ;; This function is called by:
 11803 ;;		_main
 11804 ;; This function uses a non-reentrant model
 11805 ;;
 11806                           
 11807                           
 11808                           ;psect for function _ClearTxData
 11809  0C47                     _ClearTxData:	
 11810                           
 11811                           ;main.c: 302:     for (int i = 0; i < 140; i++)
 11812                           
 11813                           ;incstack = 0
 11814                           ; Regs used in _ClearTxData: [wreg+fsr1l+fsr1h+status,2+status,0]
 11815  0C47  01F2               	clrf	ClearTxData@i
 11816  0C48  01F3               	clrf	ClearTxData@i+1
 11817  0C49                     l4184:	
 11818                           
 11819                           ;main.c: 303:     {;main.c: 304:         txdata[i] = '\0';
 11820  0C49  3064               	movlw	100
 11821  0C4A  00F0               	movwf	??_ClearTxData
 11822  0C4B  3027               	movlw	39
 11823  0C4C  00F1               	movwf	??_ClearTxData+1
 11824  0C4D  0872               	movf	ClearTxData@i,w
 11825  0C4E  0770               	addwf	??_ClearTxData,w
 11826  0C4F  0086               	movwf	6
 11827  0C50  0873               	movf	ClearTxData@i+1,w
 11828  0C51  3D71               	addwfc	??_ClearTxData+1,w
 11829  0C52  0087               	movwf	7
 11830  0C53  0181               	clrf	1
 11831                           
 11832                           ;main.c: 305:     }
 11833  0C54  3001               	movlw	1
 11834  0C55  07F2               	addwf	ClearTxData@i,f
 11835  0C56  3000               	movlw	0
 11836  0C57  3DF3               	addwfc	ClearTxData@i+1,f
 11837  0C58  0873               	movf	ClearTxData@i+1,w
 11838  0C59  3A80               	xorlw	128
 11839  0C5A  00F0               	movwf	??_ClearTxData
 11840  0C5B  3080               	movlw	128
 11841  0C5C  0270               	subwf	??_ClearTxData,w
 11842  0C5D  1D03               	skipz
 11843  0C5E  2C61               	goto	u3645
 11844  0C5F  308C               	movlw	140
 11845  0C60  0272               	subwf	ClearTxData@i,w
 11846  0C61                     u3645:	
 11847  0C61  1803               	btfsc	3,0
 11848  0C62  0008               	return
 11849  0C63  2C49               	goto	l4184
 11850  0C64                     __end_of_ClearTxData:	
 11851                           
 11852                           	psect	text45
 11853  0CC7                     __ptext45:	
 11854 ;; *************** function _ClearString *****************
 11855 ;; Defined at:
 11856 ;;		line 26 in file "main.c"
 11857 ;; Parameters:    Size  Location     Type
 11858 ;;  str             1    wreg     PTR unsigned char 
 11859 ;;		 -> main@convertedNumber(16), 
 11860 ;; Auto vars:     Size  Location     Type
 11861 ;;  str             1   10[COMMON] PTR unsigned char 
 11862 ;;		 -> main@convertedNumber(16), 
 11863 ;;  i               2    8[COMMON] int 
 11864 ;;  counti          2    6[COMMON] int 
 11865 ;; Return value:  Size  Location     Type
 11866 ;;                  1    wreg      void 
 11867 ;; Registers used:
 11868 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11869 ;; Tracked objects:
 11870 ;;		On entry : 0/0
 11871 ;;		On exit  : 0/0
 11872 ;;		Unchanged: 0/0
 11873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11875 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11876 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11877 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11878 ;;Total ram usage:        6 bytes
 11879 ;; Hardware stack levels used:    1
 11880 ;; Hardware stack levels required when called:    4
 11881 ;; This function calls:
 11882 ;;		_strlen
 11883 ;; This function is called by:
 11884 ;;		_main
 11885 ;; This function uses a non-reentrant model
 11886 ;;
 11887                           
 11888                           
 11889                           ;psect for function _ClearString
 11890  0CC7                     _ClearString:	
 11891                           
 11892                           ;incstack = 0
 11893                           ; Regs used in _ClearString: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11894                           ;ClearString@str stored from wreg
 11895  0CC7  00FA               	movwf	ClearString@str
 11896                           
 11897                           ;main.c: 26: void ClearString(char* str);main.c: 27: {;main.c: 28:     for (int i = 0, c
      +                          ounti = strlen(str); i < counti; i++)
 11898  0CC8  01F8               	clrf	ClearString@i
 11899  0CC9  01F9               	clrf	ClearString@i+1
 11900  0CCA  087A               	movf	ClearString@str,w
 11901  0CCB  00F0               	movwf	strlen@s
 11902  0CCC  3000               	movlw	0
 11903  0CCD  00F1               	movwf	strlen@s+1
 11904  0CCE  318B  23FD  318C   	fcall	_strlen
 11905  0CD1  0871               	movf	?_strlen+1,w
 11906  0CD2  00F7               	movwf	ClearString@counti+1
 11907  0CD3  0870               	movf	?_strlen,w
 11908  0CD4  00F6               	movwf	ClearString@counti
 11909  0CD5                     l4118:	
 11910  0CD5  0879               	movf	ClearString@i+1,w
 11911  0CD6  3A80               	xorlw	128
 11912  0CD7  00F5               	movwf	??_ClearString
 11913  0CD8  0877               	movf	ClearString@counti+1,w
 11914  0CD9  3A80               	xorlw	128
 11915  0CDA  0275               	subwf	??_ClearString,w
 11916  0CDB  1D03               	skipz
 11917  0CDC  2CDF               	goto	u3535
 11918  0CDD  0876               	movf	ClearString@counti,w
 11919  0CDE  0278               	subwf	ClearString@i,w
 11920  0CDF                     u3535:	
 11921  0CDF  1803               	btfsc	3,0
 11922  0CE0  0008               	return
 11923                           
 11924                           ;main.c: 29:     {;main.c: 30:         str[i] = '\0';
 11925  0CE1  0878               	movf	ClearString@i,w
 11926  0CE2  077A               	addwf	ClearString@str,w
 11927  0CE3  00F5               	movwf	??_ClearString
 11928  0CE4  0875               	movf	??_ClearString,w
 11929  0CE5  0086               	movwf	6
 11930  0CE6  0187               	clrf	7
 11931  0CE7  0181               	clrf	1
 11932                           
 11933                           ;main.c: 31:     }
 11934  0CE8  3001               	movlw	1
 11935  0CE9  07F8               	addwf	ClearString@i,f
 11936  0CEA  3000               	movlw	0
 11937  0CEB  3DF9               	addwfc	ClearString@i+1,f
 11938  0CEC  2CD5               	goto	l4118
 11939  0CED                     __end_of_ClearString:	
 11940                           
 11941                           	psect	text46
 11942  0BFD                     __ptext46:	
 11943 ;; *************** function _strlen *****************
 11944 ;; Defined at:
 11945 ;;		line 12 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\strlen.c"
 11946 ;; Parameters:    Size  Location     Type
 11947 ;;  s               2    0[COMMON] PTR const unsigned char 
 11948 ;;		 -> STR_9(3), checksum(6), STR_8(7), main@convertedNumber(16), 
 11949 ;;		 -> STR_7(14), nmea_data(140), STR_6(26), STR_5(26), 
 11950 ;;		 -> STR_4(26), STR_3(26), STR_2(26), STR_1(26), 
 11951 ;;		 -> txdata(140), csvField(20), 
 11952 ;; Auto vars:     Size  Location     Type
 11953 ;;  a               2    3[COMMON] PTR const unsigned char 
 11954 ;;		 -> STR_9(3), checksum(6), STR_8(7), main@convertedNumber(16), 
 11955 ;;		 -> STR_7(14), nmea_data(140), STR_6(26), STR_5(26), 
 11956 ;;		 -> STR_4(26), STR_3(26), STR_2(26), STR_1(26), 
 11957 ;;		 -> txdata(140), csvField(20), 
 11958 ;; Return value:  Size  Location     Type
 11959 ;;                  2    0[COMMON] unsigned int 
 11960 ;; Registers used:
 11961 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 11962 ;; Tracked objects:
 11963 ;;		On entry : 0/0
 11964 ;;		On exit  : 0/0
 11965 ;;		Unchanged: 0/0
 11966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11967 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11968 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11969 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11970 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11971 ;;Total ram usage:        5 bytes
 11972 ;; Hardware stack levels used:    1
 11973 ;; Hardware stack levels required when called:    3
 11974 ;; This function calls:
 11975 ;;		Nothing
 11976 ;; This function is called by:
 11977 ;;		_ClearString
 11978 ;;		_GetAtRowCSV
 11979 ;;		_Insert
 11980 ;;		_InsertString
 11981 ;;		_ReverseString
 11982 ;;		_WriteGPS
 11983 ;;		_PollGPS
 11984 ;;		_main
 11985 ;;		_crc16
 11986 ;;		_TransmitString
 11987 ;; This function uses a non-reentrant model
 11988 ;;
 11989                           
 11990                           
 11991                           ;psect for function _strlen
 11992  0BFD                     _strlen:	
 11993                           
 11994                           ;incstack = 0
 11995                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
 11996  0BFD  0871               	movf	strlen@s+1,w
 11997  0BFE  00F4               	movwf	strlen@a+1
 11998  0BFF  0870               	movf	strlen@s,w
 11999  0C00  00F3               	movwf	strlen@a
 12000  0C01                     l3288:	
 12001  0C01  0870               	movf	strlen@s,w
 12002  0C02  0084               	movwf	4
 12003  0C03  0871               	movf	strlen@s+1,w
 12004  0C04  0085               	movwf	5
 12005  0C05  0012               	moviw fsr0++
 12006  0C06  1903               	btfsc	3,2
 12007  0C07  2C0D               	goto	l3290
 12008  0C08  3001               	movlw	1
 12009  0C09  07F0               	addwf	strlen@s,f
 12010  0C0A  3000               	movlw	0
 12011  0C0B  3DF1               	addwfc	strlen@s+1,f
 12012  0C0C  2C01               	goto	l3288
 12013  0C0D                     l3290:	
 12014  0C0D  0873               	movf	strlen@a,w
 12015  0C0E  0270               	subwf	strlen@s,w
 12016  0C0F  00F0               	movwf	?_strlen
 12017  0C10  0874               	movf	strlen@a+1,w
 12018  0C11  3B71               	subwfb	strlen@s+1,w
 12019  0C12  00F1               	movwf	?_strlen+1
 12020  0C13  0008               	return
 12021  0C14                     __end_of_strlen:	
 12022                           
 12023                           	psect	intentry
 12024  0004                     __pintentry:	
 12025 ;; *************** function _INTERRUPT_InterruptManager *****************
 12026 ;; Defined at:
 12027 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 12028 ;; Parameters:    Size  Location     Type
 12029 ;;		None
 12030 ;; Auto vars:     Size  Location     Type
 12031 ;;		None
 12032 ;; Return value:  Size  Location     Type
 12033 ;;                  1    wreg      void 
 12034 ;; Registers used:
 12035 ;;		wreg, status,2, status,0, pclath, cstack
 12036 ;; Tracked objects:
 12037 ;;		On entry : 0/0
 12038 ;;		On exit  : 0/0
 12039 ;;		Unchanged: 0/0
 12040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12044 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12045 ;;Total ram usage:        0 bytes
 12046 ;; Hardware stack levels used:    1
 12047 ;; Hardware stack levels required when called:    2
 12048 ;; This function calls:
 12049 ;;		_TMR0_ISR
 12050 ;; This function is called by:
 12051 ;;		Interrupt level 1
 12052 ;; This function uses a non-reentrant model
 12053 ;;
 12054                           
 12055  0004                     _INTERRUPT_InterruptManager:	
 12056                           
 12057                           ;incstack = 0
 12058  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 12059                           
 12060                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
 12061  0005  3180               	pagesel	$
 12062                           
 12063                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.TMR0IE == 1 && PIR0bits.TM
      +                          R0IF == 1)
 12064  0006  014E               	movlb	14	; select bank14
 12065  0007  1A96               	btfsc	22,5	;volatile
 12066  0008  1E8C               	btfss	12,5	;volatile
 12067  0009  280C               	goto	i1l389
 12068                           
 12069                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
 12070  000A  318B  23A8         	fcall	_TMR0_ISR
 12071  000C                     i1l389:	
 12072                           ;mcc_generated_files/interrupt_manager.c: 58:     }
 12073                           
 12074  000C  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 12075  000D  0009               	retfie
 12076  000E                     __end_of_INTERRUPT_InterruptManager:	
 12077                           
 12078                           	psect	text48
 12079  0BA8                     __ptext48:	
 12080 ;; *************** function _TMR0_ISR *****************
 12081 ;; Defined at:
 12082 ;;		line 121 in file "mcc_generated_files/tmr0.c"
 12083 ;; Parameters:    Size  Location     Type
 12084 ;;		None
 12085 ;; Auto vars:     Size  Location     Type
 12086 ;;		None
 12087 ;; Return value:  Size  Location     Type
 12088 ;;                  1    wreg      void 
 12089 ;; Registers used:
 12090 ;;		wreg, status,2, status,0, pclath, cstack
 12091 ;; Tracked objects:
 12092 ;;		On entry : 0/0
 12093 ;;		On exit  : 0/0
 12094 ;;		Unchanged: 0/0
 12095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12096 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12097 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12099 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12100 ;;Total ram usage:        0 bytes
 12101 ;; Hardware stack levels used:    1
 12102 ;; Hardware stack levels required when called:    1
 12103 ;; This function calls:
 12104 ;;		Absolute function
 12105 ;;		_TMR0_DefaultInterruptHandler
 12106 ;;		_TimerISR
 12107 ;; This function is called by:
 12108 ;;		_INTERRUPT_InterruptManager
 12109 ;; This function uses a non-reentrant model
 12110 ;;
 12111                           
 12112                           
 12113                           ;psect for function _TMR0_ISR
 12114  0BA8                     _TMR0_ISR:	
 12115                           
 12116                           ;mcc_generated_files/tmr0.c: 124:     PIR0bits.TMR0IF = 0;
 12117                           
 12118                           ;incstack = 0
 12119                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
 12120  0BA8  014E               	movlb	14	; select bank14
 12121  0BA9  128C               	bcf	12,5	;volatile
 12122                           
 12123                           ;mcc_generated_files/tmr0.c: 125:     if(TMR0_InterruptHandler)
 12124  0BAA  0141               	movlb	1	; select bank1
 12125  0BAB  086E               	movf	_TMR0_InterruptHandler^(0+128),w
 12126  0BAC  046F               	iorwf	(_TMR0_InterruptHandler+1)^(0+128),w
 12127  0BAD  1903               	btfsc	3,2
 12128  0BAE  0008               	return
 12129                           
 12130                           ;mcc_generated_files/tmr0.c: 126:     {;mcc_generated_files/tmr0.c: 127:         TMR0_In
      +                          terruptHandler();
 12131  0BAF  086F               	movf	(_TMR0_InterruptHandler+1)^(0+128),w
 12132  0BB0  008A               	movwf	10
 12133  0BB1  086E               	movf	_TMR0_InterruptHandler^(0+128),w
 12134  0BB2  000A               	callw
 12135  0BB3  318B               	pagesel	$
 12136  0BB4  0008               	return
 12137  0BB5                     __end_of_TMR0_ISR:	
 12138                           
 12139                           	psect	text49
 12140  07FC                     __ptext49:	
 12141 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 12142 ;; Defined at:
 12143 ;;		line 138 in file "mcc_generated_files/tmr0.c"
 12144 ;; Parameters:    Size  Location     Type
 12145 ;;		None
 12146 ;; Auto vars:     Size  Location     Type
 12147 ;;		None
 12148 ;; Return value:  Size  Location     Type
 12149 ;;                  1    wreg      void 
 12150 ;; Registers used:
 12151 ;;		None
 12152 ;; Tracked objects:
 12153 ;;		On entry : 0/0
 12154 ;;		On exit  : 0/0
 12155 ;;		Unchanged: 0/0
 12156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12160 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12161 ;;Total ram usage:        0 bytes
 12162 ;; Hardware stack levels used:    1
 12163 ;; This function calls:
 12164 ;;		Nothing
 12165 ;; This function is called by:
 12166 ;;		_TMR0_Initialize
 12167 ;;		_TMR0_ISR
 12168 ;; This function uses a non-reentrant model
 12169 ;;
 12170                           
 12171                           
 12172                           ;psect for function _TMR0_DefaultInterruptHandler
 12173  07FC                     _TMR0_DefaultInterruptHandler:	
 12174                           
 12175                           ;incstack = 0
 12176                           ; Regs used in _TMR0_DefaultInterruptHandler: []
 12177  07FC  0008               	return
 12178  07FD                     __end_of_TMR0_DefaultInterruptHandler:	
 12179                           
 12180                           	psect	text50
 12181  0B70                     __ptext50:	
 12182 ;; *************** function _TimerISR *****************
 12183 ;; Defined at:
 12184 ;;		line 6 in file "timing.c"
 12185 ;; Parameters:    Size  Location     Type
 12186 ;;		None
 12187 ;; Auto vars:     Size  Location     Type
 12188 ;;		None
 12189 ;; Return value:  Size  Location     Type
 12190 ;;                  1    wreg      void 
 12191 ;; Registers used:
 12192 ;;		wreg
 12193 ;; Tracked objects:
 12194 ;;		On entry : 0/0
 12195 ;;		On exit  : 0/0
 12196 ;;		Unchanged: 0/0
 12197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12199 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12201 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12202 ;;Total ram usage:        0 bytes
 12203 ;; Hardware stack levels used:    1
 12204 ;; This function calls:
 12205 ;;		Nothing
 12206 ;; This function is called by:
 12207 ;;		_InitTiming
 12208 ;;		_TMR0_ISR
 12209 ;; This function uses a non-reentrant model
 12210 ;;
 12211                           
 12212                           
 12213                           ;psect for function _TimerISR
 12214  0B70                     _TimerISR:	
 12215                           
 12216                           ;timing.c: 8:     ticks++;
 12217                           
 12218                           ;incstack = 0
 12219                           ; Regs used in _TimerISR: [wreg]
 12220  0B70  3001               	movlw	1
 12221  0B71  0141               	movlb	1	; select bank1
 12222  0B72  07C4               	addwf	_ticks^(0+128),f
 12223  0B73  3000               	movlw	0
 12224  0B74  3DC5               	addwfc	(_ticks+1)^(0+128),f
 12225  0B75  3000               	movlw	0
 12226  0B76  3DC6               	addwfc	(_ticks+2)^(0+128),f
 12227  0B77  3000               	movlw	0
 12228  0B78  3DC7               	addwfc	(_ticks+3)^(0+128),f
 12229  0B79  0008               	return
 12230  0B7A                     __end_of_TimerISR:	
 12231  007E                     btemp	set	126	;btemp
 12232  007E                     int$flags	set	126
 12233  007E                     wtemp0	set	126


Data Sizes:
    Strings     180
    Constant    2
    Data        44
    BSS         151
    Persistent  40
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80      0      80
    BANK2            80      0      79
    BANK3            80      0      44
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           72      0       0
    BANK22            0      0       0
    BANK23            0      0       0
    BANK24            0      0       0
    BANK25            0      0       0

Pointer List with Targets:

    put_device_to_sleep@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 0
		 -> Sleep(), 

    put_device_to_sleep@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 0
		 -> WriteEnvSensor(), 

    put_device_to_sleep@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 0
		 -> ReadEnvSensor(), 

    get_calib_data@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 0
		 -> Sleep(), 

    get_calib_data@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 0
		 -> WriteEnvSensor(), 

    get_calib_data@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 0
		 -> ReadEnvSensor(), 

    PollGPS$2657	PTR const unsigned char  size(1) Largest target is 20
		 -> csvField(BANK1[20]), 

    S54$4$2	PTR unsigned char  size(1) Largest target is 20
		 -> bme280_set_regs@temp_buff(BANK0[20]), 

    S54$3$2	PTR unsigned char  size(1) Largest target is 26
		 -> get_calib_data@calib_data(BANK0[26]), put_device_to_sleep@reg_data(COMMON[4]), write_power_mode@sensor_mode_reg_val(COMMON[1]), set_filter_standby_settings@reg_data(COMMON[1]), 
		 -> set_osr_press_temp_settings@reg_data(COMMON[1]), set_osr_humidity_settings@ctrl_meas(COMMON[1]), bme280_get_sensor_data@reg_data(COMMON[8]), bme280_set_sensor_mode@last_set_mode(COMMON[1]), 
		 -> bme280_get_sensor_settings@reg_data(COMMON[4]), bme280_set_sensor_settings@sensor_mode(COMMON[1]), bme280_init@chip_id(COMMON[1]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 140
		 -> STR_9(CODE[3]), checksum(BANK1[6]), STR_8(CODE[7]), main@convertedNumber(BANK0[16]), 
		 -> STR_7(CODE[14]), nmea_data(BIGRAM[140]), STR_6(CODE[26]), STR_5(CODE[26]), 
		 -> STR_4(CODE[26]), STR_3(CODE[26]), STR_2(CODE[26]), STR_1(CODE[26]), 
		 -> txdata(BIGRAM[140]), csvField(BANK1[20]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 140
		 -> STR_9(CODE[3]), checksum(BANK1[6]), STR_8(CODE[7]), main@convertedNumber(BANK0[16]), 
		 -> STR_7(CODE[14]), nmea_data(BIGRAM[140]), STR_6(CODE[26]), STR_5(CODE[26]), 
		 -> STR_4(CODE[26]), STR_3(CODE[26]), STR_2(CODE[26]), STR_1(CODE[26]), 
		 -> txdata(BIGRAM[140]), csvField(BANK1[20]), 

    strcmp@r	PTR const unsigned char  size(2) Largest target is 16384
		 -> ROM(CODE[16384]), 

    strcmp@l	PTR const unsigned char  size(1) Largest target is 20
		 -> csvField(BANK1[20]), 

    TransmitString@message	PTR unsigned char  size(2) Largest target is 140
		 -> STR_9(CODE[3]), txdata(BIGRAM[140]), 

    crc16@data	PTR unsigned char  size(2) Largest target is 140
		 -> txdata(BIGRAM[140]), 

    crc16_update@pData	PTR unsigned char  size(2) Largest target is 140
		 -> txdata(BIGRAM[140]), 

    GPS_HasAcknowledged@data	PTR unsigned char  size(1) Largest target is 44
		 -> setNavFlightMode(BANK3[44]), 

    GPS_SendUBX@data	PTR unsigned char  size(1) Largest target is 44
		 -> setNavFlightMode(BANK3[44]), 

    GetLengthUBX@data	PTR unsigned char  size(1) Largest target is 44
		 -> setNavFlightMode(BANK3[44]), 

    WriteGPS@message	PTR unsigned char  size(2) Largest target is 26
		 -> STR_7(CODE[14]), STR_6(CODE[26]), STR_5(CODE[26]), STR_4(CODE[26]), 
		 -> STR_3(CODE[26]), STR_2(CODE[26]), STR_1(CODE[26]), 

    UIntToString@dest	PTR unsigned char  size(1) Largest target is 16
		 -> main@convertedNumber(BANK0[16]), 

    IntToString@dest	PTR unsigned char  size(1) Largest target is 16
		 -> main@convertedNumber(BANK0[16]), 

    UIntToHexString@dest	PTR unsigned char  size(1) Largest target is 6
		 -> checksum(BANK1[6]), 

    ReverseString@opposite	PTR unsigned char  size(1) Largest target is 16
		 -> checksum(BANK1[6]), main@convertedNumber(BANK0[16]), 

    ReverseString@str	PTR unsigned char  size(1) Largest target is 16
		 -> checksum(BANK1[6]), main@convertedNumber(BANK0[16]), 

    InsertString@dest	PTR unsigned char  size(2) Largest target is 140
		 -> txdata(BIGRAM[140]), 

    InsertString@src	PTR unsigned char  size(2) Largest target is 20
		 -> checksum(BANK1[6]), STR_8(CODE[7]), main@convertedNumber(BANK0[16]), csvField(BANK1[20]), 

    Insert@dest	PTR unsigned char  size(2) Largest target is 140
		 -> txdata(BIGRAM[140]), 

    sp__GetAtRowCSV	PTR unsigned char  size(1) Largest target is 20
		 -> csvField(BANK1[20]), 

    GetAtRowCSV@src	PTR unsigned char  size(2) Largest target is 140
		 -> nmea_data(BIGRAM[140]), 

    ClearStringn@str	PTR unsigned char  size(1) Largest target is 20
		 -> csvField(BANK1[20]), 

    ClearString@str	PTR unsigned char  size(1) Largest target is 16
		 -> main@convertedNumber(BANK0[16]), 

    EnvSensor.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> Sleep(), 

    EnvSensor.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> WriteEnvSensor(), 

    EnvSensor.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> ReadEnvSensor(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), Absolute function(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TimerISR(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TimerISR(), Absolute function(), TMR0_DefaultInterruptHandler(), 

    null_ptr_check@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> Sleep(), 

    null_ptr_check@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> WriteEnvSensor(), 

    null_ptr_check@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> ReadEnvSensor(), 

    parse_humidity_calib_data@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> Sleep(), 

    parse_humidity_calib_data@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> WriteEnvSensor(), 

    parse_humidity_calib_data@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> ReadEnvSensor(), 

    parse_temp_press_calib_data@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> Sleep(), 

    parse_temp_press_calib_data@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> WriteEnvSensor(), 

    parse_temp_press_calib_data@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> ReadEnvSensor(), 

    bme280_get_sensor_data@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> Sleep(), 

    bme280_get_sensor_data@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> WriteEnvSensor(), 

    bme280_get_sensor_data@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> ReadEnvSensor(), 

    bme280_soft_reset@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> Sleep(), 

    bme280_soft_reset@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> WriteEnvSensor(), 

    bme280_soft_reset@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> ReadEnvSensor(), 

    bme280_get_sensor_settings@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> Sleep(), 

    bme280_get_sensor_settings@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> WriteEnvSensor(), 

    bme280_get_sensor_settings@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> ReadEnvSensor(), 

    bme280_set_sensor_settings@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> Sleep(), 

    bme280_set_sensor_settings@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> WriteEnvSensor(), 

    bme280_set_sensor_settings@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> ReadEnvSensor(), 

    bme280_set_regs@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> Sleep(), 

    bme280_set_regs@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> WriteEnvSensor(), 

    bme280_set_regs@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> ReadEnvSensor(), 

    bme280_get_regs@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> Sleep(), 

    bme280_get_regs@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> WriteEnvSensor(), 

    bme280_get_regs@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> ReadEnvSensor(), 

    S54bme280_dev$delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> Sleep(), 

    bme280_init@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> Sleep(), 

    S54bme280_dev$write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> WriteEnvSensor(), 

    bme280_init@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> WriteEnvSensor(), 

    S54bme280_dev$read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> ReadEnvSensor(), 

    bme280_init@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> ReadEnvSensor(), 


Critical Paths under _main in COMMON

    _main->_IntToString
    _crc16->_crc16_update
    _crc16_update->_strlen
    _UIntToString->___lldiv
    _TransmitString->_TransmitChar
    _TransmitChar->_TransmitBit
    _TransmitBit->_Sleep
    _SetupGPS->_Sleep
    _SetupGPS->_WriteGPS
    _GPS_SendUBX->_GetLengthUBX
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _PollGPS->_InsertTxDataSep
    _PollGPS->_strcmp
    _strcmp->_GetAtRowCSV
    _WriteGPS->_strlen
    _InsertTxData->_InsertTxDataSep
    _InsertTxDataSep->_Insert
    _InsertString->_Insert
    _Insert->_strlen
    _GetAtRowCSV->_ClearStringn
    _IntToString->_ReverseString
    _ReverseString->___awdiv
    _InitTiming->_TMR0_SetInterruptHandler
    _DebugAlert->_Sleep
    _ClearString->_strlen

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_PollGPS
    _crc16->_crc16_update
    _UIntToString->_ReverseString
    _UIntToHexString->_ReverseString
    _TransmitString->_TransmitChar
    _SetupGPS->_GPS_HasAcknowledged
    _PollGPS->_InsertTxData
    _strcmp->_GetAtRowCSV
    _InsertTxData->_InsertString
    _InsertTxDataSep->_Insert
    _InsertString->_Insert
    _IntToString->_ReverseString

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                37    37      0   78340
                                             43 BANK0     37    37      0
                        _ClearString
                        _ClearTxData
                         _DebugAlert
                         _InitTiming
                             _Insert
                       _InsertString
                        _IntToString
                            _PollGPS
                  _SYSTEM_Initialize
                           _SetupGPS
                              _Sleep
                     _TransmitString
                    _UIntToHexString
                       _UIntToString
                              _crc16
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _crc16                                                4     2      2    1502
                                              1 BANK0      4     2      2
                       _crc16_update
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _crc16_update                                        10     4      6     410
                                              5 COMMON     9     3      6
                                              0 BANK0      1     1      0
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (1) _UIntToString                                         9     4      5    3562
                                              9 BANK0      9     4      5
                      _ReverseString
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     311
                                              0 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     618
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _UIntToHexString                                     19    14      5    2572
                                              9 BANK0     19    14      5
                      _ReverseString
                              _crc16 (ARG)
 ---------------------------------------------------------------------------------
 (1) _TransmitString                                       7     5      2    1834
                                              3 BANK0      7     5      2
                       _TransmitChar
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _TransmitChar                                         4     4      0     643
                                             13 COMMON     1     1      0
                                              0 BANK0      3     3      0
                        _TransmitBit
 ---------------------------------------------------------------------------------
 (3) _TransmitBit                                          1     1      0     553
                                             12 COMMON     1     1      0
                              _Sleep
 ---------------------------------------------------------------------------------
 (1) _SetupGPS                                             1     1      0    2987
                                             12 COMMON     1     1      0
                _GPS_HasAcknowledged
                        _GPS_SendUBX
                              _Sleep
                           _WriteGPS
 ---------------------------------------------------------------------------------
 (2) _GPS_SendUBX                                          6     6      0     245
                                              4 COMMON     6     6      0
                      _EUSART1_Write
                       _GetLengthUBX
 ---------------------------------------------------------------------------------
 (3) _GetLengthUBX                                         4     1      3      77
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (2) _GPS_HasAcknowledged                                 22    22      0     618
                                              0 COMMON     4     4      0
                                              0 BANK0     18    18      0
                       _EUSART1_Read
                _EUSART1_is_rx_ready
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     468
                 _EUSART1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     174
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     294
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _PollGPS                                             18    18      0   42553
                                             25 BANK0     18    18      0
                          _ClearNMEA
                       _EUSART1_Read
                _EUSART1_is_rx_ready
                        _GetAtRowCSV
                             _Insert
                       _InsertString
                       _InsertTxData
                    _InsertTxDataSep
                           _WriteGPS
                             _strcmp
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strcmp                                               4     2      2     330
                                             11 COMMON     3     1      2
                                              8 BANK0      1     1      0
                        _GetAtRowCSV (ARG)
 ---------------------------------------------------------------------------------
 (2) _WriteGPS                                             7     5      2    1593
                                              5 COMMON     7     5      2
                      _EUSART1_Write
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _EUSART1_Write                                        1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _InsertTxData                                         4     0      4   17575
                                             21 BANK0      4     0      4
                        _GetAtRowCSV
                       _InsertString
                    _InsertTxDataSep
 ---------------------------------------------------------------------------------
 (2) _InsertTxDataSep                                      3     1      2    5277
                                             12 COMMON     2     0      2
                                              9 BANK0      1     1      0
                             _Insert
 ---------------------------------------------------------------------------------
 (3) _InsertString                                        13     5      8    8859
                                             12 COMMON     1     1      0
                                              9 BANK0     12     4      8
                        _GetAtRowCSV (ARG)
                             _Insert
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _Insert                                              16     9      7    4951
                                              5 COMMON     7     0      7
                                              0 BANK0      9     9      0
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _GetAtRowCSV                                         13     9      4    2308
                                              6 COMMON     5     1      4
                                              0 BANK0      8     8      0
                       _ClearStringn
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _ClearStringn                                         6     4      2     199
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EUSART1_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ClearNMEA                                            4     4      0      68
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _IntToString                                          8     5      3    4276
                                             11 COMMON     3     0      3
                                              9 BANK0      5     5      0
                      _ReverseString
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) _ReverseString                                       11    11      0    2172
                                              9 COMMON     2     2      0
                                              0 BANK0      9     9      0
                            ___awdiv
                             _strlen
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     756
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _InitTiming                                           0     0      0     174
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2     174
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _DebugAlert                                           8     3      5    1305
                                             12 COMMON     1     1      0
                                              0 BANK0      7     2      5
                              _Sleep
 ---------------------------------------------------------------------------------
 (4) _Sleep                                               12     8      4     531
                                              0 COMMON    12     8      4
 ---------------------------------------------------------------------------------
 (1) _ClearTxData                                          4     4      0      68
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _ClearString                                          6     6      0    1138
                                              5 COMMON     6     6      0
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _strlen                                               5     3      2     926
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                           0     0      0       0
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (7) _TMR0_ISR                                             0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                           _TimerISR *
 ---------------------------------------------------------------------------------
 (8) _TimerISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ClearString
     _strlen
   _ClearTxData
   _DebugAlert
     _Sleep
   _InitTiming
     _TMR0_SetInterruptHandler
   _Insert
     _strlen
   _InsertString
     _GetAtRowCSV (ARG)
       _ClearStringn
       _strlen
     _Insert (ARG)
       _strlen
     _strlen (ARG)
   _IntToString
     _ReverseString
       ___awdiv
       _strlen
     ___awdiv
     ___awmod
   _PollGPS
     _ClearNMEA
     _EUSART1_Read
     _EUSART1_is_rx_ready
     _GetAtRowCSV
       _ClearStringn
       _strlen
     _Insert
       _strlen
     _InsertString
       _GetAtRowCSV (ARG)
         _ClearStringn
         _strlen
       _Insert (ARG)
         _strlen
       _strlen (ARG)
     _InsertTxData
       _GetAtRowCSV
         _ClearStringn
         _strlen
       _InsertString
         _GetAtRowCSV (ARG)
           _ClearStringn
           _strlen
         _Insert (ARG)
           _strlen
         _strlen (ARG)
       _InsertTxDataSep
         _Insert
           _strlen
     _InsertTxDataSep
       _Insert
         _strlen
     _WriteGPS
       _EUSART1_Write
       _strlen
     _strcmp
       _GetAtRowCSV (ARG)
         _ClearStringn
         _strlen
     _strlen
   _SYSTEM_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
   _SetupGPS
     _GPS_HasAcknowledged
       _EUSART1_Read
       _EUSART1_is_rx_ready
     _GPS_SendUBX
       _EUSART1_Write
       _GetLengthUBX
     _Sleep
     _WriteGPS
       _EUSART1_Write
       _strlen
   _Sleep
   _TransmitString
     _TransmitChar
       _TransmitBit
         _Sleep
     _strlen
   _UIntToHexString
     _ReverseString
       ___awdiv
       _strlen
     _crc16 (ARG)
       _crc16_update
         _strlen (ARG)
       _strlen
   _UIntToString
     _ReverseString
       ___awdiv
       _strlen
     ___lldiv
     ___llmod
   _crc16
     _crc16_update
       _strlen (ARG)
     _strlen
   _strlen

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _TimerISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
ABS                  0      0     129       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      50       8      100.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      4F      10       98.8%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0      2C      12       55.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITBANK13           50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BANK13              50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITBANK14           50      0       0      33        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BANK14              50      0       0      34        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITBANK15           50      0       0      35        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BANK15              50      0       0      36        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITBANK16           50      0       0      37        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BANK16              50      0       0      38        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITBANK17           50      0       0      39        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BANK17              50      0       0      40        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITBANK18           50      0       0      41        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BANK18              50      0       0      42        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITBANK19           50      0       0      43        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BANK19              50      0       0      44        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITBANK20           50      0       0      45        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BANK20              50      0       0      46        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITBANK21           50      0       0      47        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BANK21              48      0       0      48        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITBANK22           50      0       0      49        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BANK22               0      0       0      50        0.0%
BITBANK23           50      0       0      51        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BANK23               0      0       0      52        0.0%
BITBANK24           50      0       0      53        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BANK24               0      0       0      54        0.0%
BITBANK25           20      0       0      55        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BANK25               0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
DATA                 0      0     129      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sat Sep 14 15:28:54 2019

                           __end_of_ClearString 0CED                             __end_of_GetAtRowCSV 06A5  
                              GetAtRowCSV@index 0024                            __end_of_ClearStringn 0C47  
                             GetAtRowCSV@column 0078                                     __CFG_CP$OFF 0000  
                             GetAtRowCSV@counti 0020                                    ___awdiv@sign 0076  
                               GPS_SendUBX@data 0079                                              _id 00CC  
                                   __CFG_LVP$ON 0000                                             l355 0B60  
                                           l348 0B84                                             l801 00EA  
                                           l651 069E                                             l805 0148  
                                           l646 065F                                             l806 01A7  
                                           l842 0EBC                                             l826 0455  
                                           l677 04FC                                             l777 0F81  
                                           l859 0BF0                                             l889 0D98  
                       __size_of_PMD_Initialize 000A                                    ___awmod@sign 0076  
                                  __CFG_BORV$LO 0000                                             wreg 0009  
                               _InsertTxDataSep 0C14                                   __CFG_BBEN$OFF 0000  
                             ___g_timeout_start 00C8                                  ReverseString@i 0026  
                                WriteGPS@counti 0078                                      _DebugAlert 0D65  
                                          l3500 06A3                                            l4140 0565  
                                          l4118 0CD5                                            l4150 05F1  
                                          l4134 0546                                            l4126 051D  
                         __size_of_crc16_update 003D                                            l3344 0C2F  
                                          l3360 05C4                                            l3512 07EA  
                                          l4240 00D2                                            l3290 0C0D  
                                          l4074 0D68                                            l4162 0639  
                                          l3362 05D2                                            l3514 07BA  
                                          l4242 0106                                            l3530 0BF2  
                                          l4138 0558                                            l3540 0FB9  
                                          l3516 07F6                                            l4244 00AF  
                                          l3366 05D7                                            l3358 0598  
                                          l4246 010C                                            l4270 0062  
                                          l3288 0C01                                            l4184 0C49  
                                          l3464 0B8E                                            l4272 0270  
                                          l3800 04D9                                            l4168 0708  
                                          l3546 0FC4                                            l4258 0248  
                                          l3572 0FFB                                            l3564 0FEA  
                                          l3556 0FCC                                            l3820 0C66  
                                          l4268 026B                                            l4196 0F65  
                                          l3900 0796                                            l3558 0FD8  
                                          l3734 06C5                                            l3568 0FF3  
                                          l3736 06FC                                            l3920 0F2F  
                                          l3496 0690                                            l4296 0DF5  
                                          l3904 07A1                                            l3930 0F41  
                                          l3746 0D21                                            l3834 0DCB  
                                          l3916 0F28                                            l3836 0DBD  
                                          l3756 0CF8                                            l3860 0E9F  
                                          l3942 0F5E                                            l3934 0F4D  
                                          l3838 0DD8                                            l3862 0ED7  
                                          l3928 0F35                                            l3952 0EE4  
                                          l3856 0EC2                                            l4744 0445  
                                          l3938 0F56                                            l3794 04B8  
                                          l3786 04B0                                            l3778 049A  
                                          l3874 0E77                                            l3890 0768  
                                          l3954 0EF2                                            l3962 0F15  
                                          l3796 04D7                                            l3788 04B1  
                                          l3892 0776                                            l3958 0F0A  
                                          l4686 027B                                            STR_1 104E  
                                          STR_2 1034                                            STR_3 1082  
                                          STR_4 101A                                            STR_5 1068  
                                          STR_6 1000                                            STR_7 109C  
                                          STR_8 10AA                                            STR_9 10B1  
                                          _LATA 0018                                            _LATB 0019  
                                          u3015 0C7E                                            _LATC 001A  
                                          u3105 0E95                                            u3125 076B  
                                          u3215 0F38                                            u3080 0E83  
                                          u3145 0777                                            u3305 0F00  
                                          u3090 0E84                                            u3074 0E7D  
                                          u3235 0F47                                            u3075 0E7C  
                                          u3155 078B                                            u3315 0F0B  
                                          u3245 0F4E                                            u3165 0797  
                                          u2545 0DB3                                            u3515 0D71  
                                          u2555 0C39                                            u2715 0669  
                                          u2805 0FD9                                            u2565 0585  
                                          u2725 07F4                                            u3285 0EE7  
                                          u3535 0CDF                                            u2815 0FE3  
                                          u3615 0625                                            u2575 05A2  
                                          u2735 07C5                                            u4360 0285  
                                          u2825 0FEB                                            u3705 00B9  
                                          u3555 0539                                            u3580 05E5  
                                          _PMD0 0796                                            u3645 0C61  
                                          u2685 0672                                            _PMD1 0797  
                                          u3590 05E6                                            _PMD2 0798  
                                          u2935 06CF                                            _PMD3 0799  
                                          _PMD4 079A                                            u2785 0FCF  
                                          u2945 0D2B                                            _PMD5 079B  
                                          _PMD6 079C                                            u3675 00C5  
                                          u2955 0D02                                            _PMD7 079D  
                                          u3765 0DFF                                            u4827 0DB6  
                                          _WPUA 1F39                                            _WPUB 1F44  
                                          _WPUC 1F4F                                   _EUSART1_Write 0B5F  
                                 __CFG_FCMEN$ON 0000                                            _main 0272  
                          __end_of_GetLengthUBX 0BD6                                   ?_EUSART1_Read 0070  
                                  TransmitBit@b 007C                                            fsr0h 0005  
                                          fsr1h 0007                                            indf0 0000  
                                          fsr0l 0004                                            indf1 0001  
                                          fsr1l 0006                                            btemp 007E  
                                 __CFG_BOREN$ON 0000                               GPS_SendUBX@length 0075  
                  GPS_HasAcknowledged@startTime 0020                                            start 000E  
                               _HALF_BAUD_DELAY 10B4                                   __CFG_CSWEN$ON 0000  
                                 __CFG_MCLRE$ON 0000                                   ??_IntToString 0029  
                                 _ReadEnvSensor 0000                                 __end_of_PollGPS 0272  
                       __end_of_TMR0_Initialize 0BE9                  ??_TMR0_DefaultInterruptHandler 0070  
                __size_of_OSCILLATOR_Initialize 0009                   __end_of_OSCILLATOR_Initialize 0B70  
                              PollGPS@startTime 003D                           ReverseString@opposite 0023  
                                         ?_main 0070                      GPS_HasAcknowledged@ackByte 0024  
                               __end_of___awdiv 1000                                   __CFG_WDTE$OFF 0000  
                               __end_of___awmod 0F63                                 WriteGPS@message 0075  
                               __end_of___lldiv 07AA                                 ___awdiv@divisor 0070  
                               __end_of___llmod 0F1E                                           i1l389 000C  
                               ___awdiv@counter 0075                                           _OSCEN 0891  
                                  _crc16_update 0E9F                                           _TMR0H 059D  
                                         _TMR0L 059C                                      Insert@dest 0075  
                                         _TRISA 0012                                           _TRISB 0013  
                                         _TRISC 0014               __size_of_TMR0_SetInterruptHandler 0006  
                     ?_TMR0_SetInterruptHandler 0070                                           _Sleep 0D8F  
                              __end_of_TMR0_ISR 0BB5                                   __CFG_WRTB$OFF 0000  
                                 __CFG_WRTC$OFF 0000                                   __CFG_WRTD$OFF 0000  
                      UIntToHexString@remainder 0034                                           _crc16 0CA2  
                              crc16_update@wCrc 0079                                ?_UIntToHexString 0029  
                                  ?_GPS_SendUBX 0070                                           _ticks 00C4  
                                 TransmitChar@i 0021                                  ?_EUSART1_Write 0070  
                                         pclath 000A                         GPS_HasAcknowledged@data 002F  
                                   _ClearTxData 0C47                                  ??_EUSART1_Read 0070  
                                         status 0003                                           wtemp0 007E  
                                   _ClearString 0CC7                                     _GetAtRowCSV 0644  
            _EUSART1_DefaultFramingErrorHandler 0000                                   PollGPS@counti 0041  
                          __end_of_UIntToString 0758                                 __initialization 0010  
                         DebugAlert@num_flashes 0024                                      _InitTiming 0B57  
                    __end_of_EUSART1_Initialize 0CA2                                    __end_of_main 0461  
                          GPS_HasAcknowledged@i 0031                                  __CFG_SAFEN$OFF 0000  
                            __size_of_ClearNMEA 001D                     ?_INTERRUPT_InterruptManager 0070  
                       __end_of_InsertTxDataSep 0C2C                                          ??_main 004B  
                         __end_of_ReverseString 0705                             __end_of_IntToString 0644  
                              ReverseString@str 0028                                   ?_InsertTxData 0035  
                              __end_of_TimerISR 0B7A                                __end_of_SetupGPS 0FAF  
                                 ?_InsertString 0029                                          ?_Sleep 0070  
                                        ?_crc16 0021                                      Sleep@start 0078  
                              ___llmod@dividend 0074                                ___awdiv@dividend 0072  
                                   ?_DebugAlert 0020                                          _ANSELA 1F38  
                                        _ANSELB 1F43                                          _ANSELC 1F4E  
                            __CFG_RSTOSC$HFINT1 0000                                          _T0CON0 059E  
                                        _T0CON1 059F                         __end_of_HALF_BAUD_DELAY 10B6  
                              __end_of_WriteGPS 0D3C                                          _RC1REG 0119  
                                        _RC1STA 011D                                          _RB4PPS 1F1C  
                                        _RB6PPS 1F1E                                          _RB7PPS 1F1F  
                                        _ODCONA 1F3A                                          _ODCONB 1F45  
                                        _ODCONC 1F50                    __size_of_EUSART1_is_rx_ready 0005  
                                __CFG_WDTCCS$SC 0000                                          _INLVLA 1F3C  
                                        _INLVLB 1F47                                          _INLVLC 1F52  
                                        _OSCFRQ 0893                                          _TX1REG 011A  
                                        _TX1STA 011E                                     Insert@index 0078  
                         __size_of_ClearStringn 001B                                       ??_PollGPS 0039  
                                        _Insert 0569                                  __CFG_PWRTS$OFF 0000  
                             crc16_update@pData 0075                                       ??___awdiv 0074  
                                __CFG_STVREN$ON 0000                                       ??___awmod 0074  
                                     ??___lldiv 0078                                       ??___llmod 0078  
                           DebugAlert@delay_low 0022                        ?_EUSART1_SetErrorHandler 0070  
                              ?_TMR0_Initialize 0070                                ___awdiv@quotient 0077  
                               ___awmod@divisor 0070                                 ___awmod@counter 0075  
              ??_EUSART1_SetOverrunErrorHandler 0072                 ?_EUSART1_SetOverrunErrorHandler 0070  
                                        _txdata 2764                                          _strcmp 0DBA  
                                        _strlen 0BFD                                  ??_InsertTxData 007E  
                                  IntToString@i 002C                                    IntToString@n 007B  
                               InsertString@src 002B                                  _PMD_Initialize 0B7A  
                                ??_InsertString 007C                                ??_TransmitString 0025  
                               ??_EUSART1_Write 0070        TMR0_SetInterruptHandler@InterruptHandler 0070  
                         __size_of_GetLengthUBX 0012                                   ClearStringn@i 0074  
                                  _ClearStringn 0C2C                               __end_of_ClearNMEA 0C81  
                             _SYSTEM_Initialize 0BB5                         __end_of__initialization 003E  
                            ?_SYSTEM_Initialize 0070                             main@convertedNumber 0050  
                          _UIntToHexString$1752 0030                             ReverseString@counti 0024  
                                __pcstackCOMMON 0070                                     ?_InitTiming 0070  
                                 __end_of_Sleep 0DBA                                  PollGPS@success 0043  
                                  __pidataBANK3 0E12                                   __end_of_crc16 0CC7  
                           ??_SYSTEM_Initialize 0072                                     _IntToString 05DE  
                                     ?_TMR0_ISR 0070                                   ??_TransmitBit 007C  
                           __size_of_DebugAlert 002A                                     PollGPS@byte 0046  
                        __end_of_PMD_Initialize 0B84                                ?_InsertTxDataSep 007C  
                          __end_of_EUSART1_Read 0B90                                    _GetLengthUBX 0BC4  
                                       ??_Sleep 0074                                         ??_crc16 007E  
                   __end_of_GPS_HasAcknowledged 04F3                       __end_of_SYSTEM_Initialize 0BC4  
                                    __pbssBANK1 00A0                                      __pbssBANK2 0120  
                         __size_of_UIntToString 0053                            __size_of_GPS_SendUBX 0027  
                             ReverseString@temp 0022                           InsertString@destLimit 002F  
                              _setNavFlightMode 01A0                                         ?_Insert 0075  
               __end_of_EUSART1_SetErrorHandler 0B4B                                      __pmaintext 0272  
                                     ?_TimerISR 0070                                       ?_SetupGPS 0070  
              __end_of_TMR0_SetInterruptHandler 0B45                                      ??_TMR0_ISR 0070  
                               __CFG_PPS1WAY$ON 0000                                      __pintentry 0004  
                                     ?_WriteGPS 0075                                 __CFG_ZCDDIS$OFF 0000  
                               ?_PMD_Initialize 0070                                  _WriteEnvSensor 0000  
                                       ?_strcmp 007B                                         ?_strlen 0070  
        __end_of_EUSART1_SetFramingErrorHandler 0B51         __size_of_EUSART1_SetFramingErrorHandler 0006  
                _EUSART1_SetFramingErrorHandler 0B4B                             __end_of_TransmitBit 0BFD  
                                       _SP1BRGH 011C                                         _SP1BRGL 011B  
                                       _OSCCON1 088D                                         _OSCCON3 088F  
                                  _UIntToString 0705                                         _OSCTUNE 0892  
                                       _SSP1ADD 018D                                         _SLRCONA 1F3B  
                                       _SLRCONB 1F46                                         _SLRCONC 1F51  
                                       _SSP1BUF 018C                             __size_of_InitTiming 0008  
                                  Insert@length 0025                                    ?_ClearTxData 0070  
                                       Insert@i 0027                                    ?_ClearString 0070  
                                  ?_GetAtRowCSV 0076                            __end_of_InsertTxData 0E6E  
                                       Sleep@ms 0070                                         _PollGPS 0042  
                          __end_of_InsertString 07FC                                 __size_of_Insert 0075  
                                    ??_TimerISR 0070                                      ??_SetupGPS 007C  
                              GetLengthUBX@data 0073                                         ___awdiv 0FAF  
                                       ___awmod 0F1E                                         ___lldiv 0758  
                                       ___llmod 0EDC                             _EUSART1_is_rx_ready 0B3A  
                                    ??_WriteGPS 0077                              crc16_update@length 0077  
                                       __ptext1 0CA2                                         __ptext2 0E9F  
                                       __ptext3 0705                                         __ptext4 0EDC  
                                       __ptext5 0758                                         __ptext6 04F3  
                                       __ptext7 0DE6                                         __ptext8 0E6E  
                                       __ptext9 0BE9                            DebugAlert@delay_high 0020  
                               __CFG_WRTAPP$OFF 0000                                 __size_of_strcmp 002C  
                               __size_of_strlen 0017                           _OSCILLATOR_Initialize 0B67  
                              ___awmod@dividend 0072                              _EUSART1_Initialize 0C81  
                      ??_PIN_MANAGER_Initialize 0070                                 __CFG_WRTSAF$OFF 0000  
                            get_calib_data@F376 0120                                         main@end 0060  
                    __size_of_SYSTEM_Initialize 000F                                         clrloop0 0B91  
                                  ??_DebugAlert 007C                            end_of_initialization 003E  
                          ?_EUSART1_is_rx_ready 0070                             ?_EUSART1_Initialize 0070  
                              InsertString@dest 0029                                         init_ram 0B9C  
                   _EUSART1_OverrunErrorHandler 00EA                                         initloop 0B9D  
                      __size_of_UIntToHexString 0076                                 ___lldiv@divisor 0070  
                               ___lldiv@counter 007D                           __size_of_EUSART1_Read 000C  
                                    main@F11370 00A0                            ??_EUSART1_Initialize 0072  
                                ClearString@str 007A                                         strcmp@l 0028  
                                       strcmp@r 007B                                     _TransmitBit 0BE9  
                         __CFG_WDTCPS$WDTCPS_31 0000                                         strlen@a 0073  
                                       strlen@s 0070                              __end_of_DebugAlert 0D8F  
                      _TMR0_SetInterruptHandler 0B3F                                   ?_TransmitChar 0070  
                               TransmitString@i 0028                                  GetAtRowCSV@col 0022  
                                  GPS_SendUBX@i 0077                                  GetAtRowCSV@src 0076  
              __size_of_EUSART1_SetErrorHandler 0006                             EUSART1_Write@txData 0070  
                              __CFG_FEXTOSC$OFF 0000                           ??_EUSART1_is_rx_ready 0070  
                                  _EUSART1_Read 0B84                                  _gps_configured 00CE  
                                     _ClearNMEA 0C64                            ReverseString@halfway 0020  
                        __size_of_ReverseString 0060                           TransmitString@message 0023  
                                  ??_InitTiming 0072                                  __end_of_Insert 05DE  
                                  ?_IntToString 007B                                       Insert@src 0077  
                             __size_of_TMR0_ISR 000D                          ?_OSCILLATOR_Initialize 0070  
                                     _EnvSensor 013A                                  ??_TransmitChar 007D  
                                __end_of_strcmp 0DE6                                  __end_of_strlen 0C14  
                           start_initialization 0010                             UIntToHexString@dest 002D  
                                  PollGPS@index 0049                        __size_of_TMR0_Initialize 0013  
               __size_of_PIN_MANAGER_Initialize 0029                                UIntToHexString@i 0038  
                              UIntToHexString@n 0029                              __end_of_InitTiming 0B5F  
                         __end_of_EUSART1_Write 0B67                               InsertTxData@field 0037  
                         __size_of_InsertTxData 0030                               InsertTxData@index 0035  
                         __size_of_InsertString 0052                                 ___llmod@divisor 0070  
                               ___llmod@counter 0079                                      ?_ClearNMEA 0070  
                          __size_of_ClearTxData 001D                            __size_of_ClearString 0026  
                                      ??_Insert 0020                                __CFG_LPBOREN$OFF 0000  
                          __size_of_GetAtRowCSV 0061                                    ClearTxData@i 0072  
                              ??_PMD_Initialize 0070                               ??_UIntToHexString 002E  
                             __size_of_TimerISR 000A                                     __pdataBANK3 01A0  
                             __size_of_SetupGPS 004C                                    ClearString@i 0078  
                                      ??_strcmp 007D                                        ??_strlen 0072  
                                 ?_crc16_update 0075                                   _ReverseString 06A5  
                                  GetAtRowCSV@i 0026                               __size_of_WriteGPS 0028  
                                   __pbssBIGRAM 26D8                                    _InsertTxData 0E3E  
                                     ___latbits 0003                                   __pcstackBANK0 0020  
                                  _InsertString 07AA                                   crc16_update@i 0020  
                      __size_of_InsertTxDataSep 0018                                   ??_GPS_SendUBX 0074  
              ??_EUSART1_SetFramingErrorHandler 0072                 ?_EUSART1_SetFramingErrorHandler 0070  
                        PollGPS@eusart_complete 0045                                       crc16@data 0021  
                       __size_of_TransmitString 002C                           _TMR0_InterruptHandler 00EE  
                                     WriteGPS@i 007A                                       __pnvBANK1 00EA  
                                     __pnvBANK2 016D                    __size_of_GPS_HasAcknowledged 0092  
                                      ?_PollGPS 0070                          _PIN_MANAGER_Initialize 0D3C  
                                      ?___awdiv 0070                                        ?___awmod 0070  
                                      ?___lldiv 0070                                        ?___llmod 0070  
                  ??_INTERRUPT_InterruptManager 0070                                  ??_crc16_update 007B  
                                ?_ReverseString 0070                                        _BAUD1CON 011F  
            _EUSART1_DefaultOverrunErrorHandler 0000                                    _PollGPS$2657 0044  
                          _EUSART1_ErrorHandler 016D                              ClearStringn@length 0070  
                       _EUSART1_SetErrorHandler 0B45                                  __size_of_Sleep 002B  
                                __size_of_crc16 0025                            InsertTxDataSep@index 007C  
                                     _nmea_data 26D8                               ??_TMR0_Initialize 0072  
                                      _LATAbits 0018         EUSART1_SetErrorHandler@interruptHandler 0070  
                                      _LATCbits 001A                                     ??_ClearNMEA 0070  
                           __end_of_GPS_SendUBX 0D14                                       clear_ram0 0B90  
                          __end_of_TransmitChar 0E9F                                        _PIE0bits 0716  
           __size_of_INTERRUPT_InterruptManager 000A                      ??_TMR0_SetInterruptHandler 0072  
                                      _PIR0bits 070C                                        _PIR3bits 070F  
                                      _RX1DTPPS 1ECB                                     DebugAlert@i 0025  
                                 UIntToString@i 0030                                   UIntToString@n 0029  
                             __CFG_BBSIZE$BB512 0000                                        _SSP1CON1 0190  
                                      _SSP1CON3 0192                                        _TMR0_ISR 0BA8  
                                      _SSP1STAT 018F                                    ?_TransmitBit 0070  
                          __size_of_IntToString 0066                                       main@index 006E  
                          TransmitString@counti 0026                                   ?_ClearStringn 0070  
                                      PollGPS@i 0047                               ??_InsertTxDataSep 0029  
                            InsertString@counti 0031                                 IntToString@dest 007D  
                               IntToString@sign 002B                                        _TimerISR 0B70  
                                      _SetupGPS 0F63                                __size_of_PollGPS 0230  
                                 InsertString@i 0033                         ??_OSCILLATOR_Initialize 0070  
                              __size_of___awdiv 0051                                __size_of___awmod 0045  
                              __size_of___lldiv 0052                                __size_of___llmod 0042  
                   __size_of_EUSART1_Initialize 0021                                 ??_ReverseString 0079  
                                      _WriteGPS 0D14                                   ?_GetLengthUBX 0070  
                             ClearString@counti 0076                       ??_EUSART1_SetErrorHandler 0072  
                   _EUSART1_DefaultErrorHandler 0000                                        crc16@crc 0023  
                   __end_of_EUSART1_is_rx_ready 0B3F                                      _T0CON0bits 059E  
                                      _checksum 00E4                                        __ptext10 0F63  
                                      __ptext11 0CED                                        __ptext20 0B51  
                                      __ptext12 0BC4                                        __ptext21 0B4B  
                                      __ptext13 0461                                        __ptext30 0569  
                                      __ptext22 0B45                                        __ptext14 0BB5  
                                      __ptext31 0644                                        __ptext23 0042  
                                      __ptext15 0BD6                                        __ptext40 0B57  
                                      __ptext32 0C2C                                        __ptext24 0DBA  
                                      __ptext16 0B7A                                        __ptext41 0B3F  
                                      __ptext33 0B3A                                        __ptext25 0D14  
                                      __ptext17 0D3C                                        __ptext50 0B70  
                                      __ptext42 0D65                                        __ptext34 0B84  
                                      __ptext26 0B5F                                        __ptext18 0B67  
                                      __ptext43 0D8F                                        __ptext35 0C64  
                                      __ptext27 0E3E                                        __ptext19 0C81  
                                ??_ClearStringn 0072                                        __ptext44 0C47  
                                      __ptext36 05DE                                        __ptext28 0C14  
                                      __ptext45 0CC7                                        __ptext37 0F1E  
                                      __ptext29 07AA                                        __ptext46 0BFD  
                                      __ptext38 06A5                                        __ptext39 0FAF  
                                      __ptext48 0BA8                                        __ptext49 07FC  
                                  _SSP1CON1bits 0190                                    _SSP1CON2bits 0191  
                                      _csvField 00D0                                     _GPS_SendUBX 0CED  
                               _UIntToHexString 04F3                                  _TransmitString 0DE6  
                                 __size_of_main 01EF                            __end_of_crc16_update 0EDC  
          __end_of_TMR0_DefaultInterruptHandler 07FD           __size_of_TMR0_DefaultInterruptHandler 0001  
                  _TMR0_DefaultInterruptHandler 07FC                            __CFG_WDTCWS$WDTCWS_7 0000  
                                    _RC1STAbits 011D  EUSART1_SetOverrunErrorHandler@interruptHandler 0070  
                              TransmitChar@byte 0020                                        int$flags 007E  
            __end_of_INTERRUPT_InterruptManager 000E                      _INTERRUPT_InterruptManager 0004  
                                    ClearNMEA@i 0072                                UIntToString@dest 002D  
                   _EUSART1_FramingErrorHandler 00EC                                  ??_GetLengthUBX 0073  
                               main@sensor_data 0062                             _GPS_HasAcknowledged 0461  
                                    _INTCONbits 000B                               InsertString@index 002D  
                                 ?_UIntToString 0029                                  __pstringtext10 10B1  
                                __pstringtext11 0000                      bme280_get_sensor_data@F271 00BC  
                    bme280_get_sensor_data@F273 00B0                           __size_of_TransmitChar 0031  
                        __end_of_TransmitString 0E12                                        intlevel1 0000  
                                 ??_ClearTxData 0070                                   ??_ClearString 0075  
                              ___lldiv@dividend 0074                                   ??_GetAtRowCSV 007A  
                       ?_PIN_MANAGER_Initialize 0070                               __CFG_CLKOUTEN$OFF 0000  
        __end_of_EUSART1_SetOverrunErrorHandler 0B57         __size_of_EUSART1_SetOverrunErrorHandler 0006  
                _EUSART1_SetOverrunErrorHandler 0B51                            ?_GPS_HasAcknowledged 0070  
                 ?_TMR0_DefaultInterruptHandler 0070                    GPS_HasAcknowledged@ackByteID 0030  
                  GPS_HasAcknowledged@ackPacket 0025  EUSART1_SetFramingErrorHandler@interruptHandler 0070  
                        __size_of_EUSART1_Write 0008                              _eusart1RxLastError 00CF  
                                 __pstringtext1 10B4                                   __pstringtext2 1000  
                                 __pstringtext3 101A                                   __pstringtext4 1034  
                                 __pstringtext5 104E                                   __pstringtext6 1068  
                                 __pstringtext7 1082                                   __pstringtext8 109C  
                                 __pstringtext9 10AA                            __size_of_TransmitBit 0014  
                                    _SSP1DATPPS 1EC6                                      _SSP1CLKPPS 1EC5  
                                  _TransmitChar 0E6E                                ___lldiv@quotient 0079  
                                ??_UIntToString 002E                                 _TMR0_Initialize 0BD6  
                               ClearStringn@str 0073                         __end_of_UIntToHexString 0569  
                                    _TX1STAbits 011E                                 ?_TransmitString 0023  
                __end_of_PIN_MANAGER_Initialize 0D65                                 Insert@destLimit 007A  
                         ??_GPS_HasAcknowledged 0070                             __end_of_ClearTxData 0C64  
