

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Tue Sep 10 13:03:56 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F18446
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK2,global,class=CODE,delta=2
     5                           	psect	idataBANK4,global,class=CODE,delta=2
     6                           	psect	stringtext1,global,class=STRCODE,delta=2
     7                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1
     9                           	psect	nvBANK3,global,class=BANK3,space=1,delta=1
    10                           	psect	stringtext2,global,class=STRCODE,delta=2
    11                           	psect	stringtext3,global,class=STRCODE,delta=2
    12                           	psect	stringtext4,global,class=STRCODE,delta=2
    13                           	psect	stringtext5,global,class=STRCODE,delta=2
    14                           	psect	stringtext6,global,class=STRCODE,delta=2
    15                           	psect	stringtext7,global,class=STRCODE,delta=2
    16                           	psect	stringtext8,global,class=STRCODE,delta=2
    17                           	psect	stringtext9,global,class=STRCODE,delta=2
    18                           	psect	stringtext10,global,class=STRCODE,delta=2
    19                           	psect	stringtext11,global,class=STRCODE,delta=2
    20                           	psect	stringtext12,global,class=STRCODE,delta=2
    21                           	psect	cinit,global,class=CODE,merge=1,delta=2
    22                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    23                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    24                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    25                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    26                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1
    27                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    28                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1
    29                           	psect	inittext,global,class=CODE,delta=2
    30                           	psect	clrtext,global,class=CODE,delta=2
    31                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    32                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    33                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    34                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    35                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    36                           	psect	text1,local,class=CODE,merge=1,delta=2
    37                           	psect	text2,local,class=CODE,merge=1,delta=2
    38                           	psect	text3,local,class=CODE,merge=1,delta=2
    39                           	psect	text4,local,class=CODE,merge=1,delta=2
    40                           	psect	text5,local,class=CODE,merge=1,delta=2
    41                           	psect	text6,local,class=CODE,merge=1,delta=2
    42                           	psect	text7,local,class=CODE,merge=1,delta=2
    43                           	psect	text8,local,class=CODE,merge=1,delta=2
    44                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    45                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    46                           	psect	text11,local,class=CODE,merge=1,delta=2
    47                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    48                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    49                           	psect	text14,local,class=CODE,merge=1,delta=2
    50                           	psect	text15,local,class=CODE,merge=1,delta=2
    51                           	psect	text16,local,class=CODE,merge=1,delta=2
    52                           	psect	text17,local,class=CODE,merge=1,delta=2
    53                           	psect	text18,local,class=CODE,merge=1,delta=2
    54                           	psect	text19,local,class=CODE,merge=1,delta=2
    55                           	psect	text20,local,class=CODE,merge=1,delta=2
    56                           	psect	text21,local,class=CODE,merge=1,delta=2
    57                           	psect	text22,local,class=CODE,merge=1,delta=2
    58                           	psect	text23,local,class=CODE,merge=1,delta=2
    59                           	psect	text24,local,class=CODE,merge=1,delta=2
    60                           	psect	text25,local,class=CODE,merge=1,delta=2
    61                           	psect	text26,local,class=CODE,merge=1,delta=2
    62                           	psect	text27,local,class=CODE,merge=1,delta=2
    63                           	psect	text28,local,class=CODE,merge=1,delta=2
    64                           	psect	text29,local,class=CODE,merge=1,delta=2
    65                           	psect	text30,local,class=CODE,merge=1,delta=2
    66                           	psect	text31,local,class=CODE,merge=1,delta=2
    67                           	psect	text32,local,class=CODE,merge=1,delta=2,group=2
    68                           	psect	text33,local,class=CODE,merge=1,delta=2
    69                           	psect	text34,local,class=CODE,merge=1,delta=2
    70                           	psect	text35,local,class=CODE,merge=1,delta=2
    71                           	psect	text36,local,class=CODE,merge=1,delta=2
    72                           	psect	text37,local,class=CODE,merge=1,delta=2
    73                           	psect	text38,local,class=CODE,merge=1,delta=2
    74                           	psect	text39,local,class=CODE,merge=1,delta=2
    75                           	psect	text40,local,class=CODE,merge=1,delta=2
    76                           	psect	text41,local,class=CODE,merge=1,delta=2
    77                           	psect	text42,local,class=CODE,merge=1,delta=2,group=1
    78                           	psect	text43,local,class=CODE,merge=1,delta=2
    79                           	psect	text44,local,class=CODE,merge=1,delta=2,group=2
    80                           	psect	text45,local,class=CODE,merge=1,delta=2,group=1
    81                           	psect	text46,local,class=CODE,merge=1,delta=2
    82                           	psect	text47,local,class=CODE,merge=1,delta=2
    83                           	psect	text48,local,class=CODE,merge=1,delta=2
    84                           	psect	text49,local,class=CODE,merge=1,delta=2
    85                           	psect	text50,local,class=CODE,merge=1,delta=2
    86                           	psect	text51,local,class=CODE,merge=1,delta=2
    87                           	psect	text52,local,class=CODE,merge=1,delta=2
    88                           	psect	text53,local,class=CODE,merge=1,delta=2
    89                           	psect	text54,local,class=CODE,merge=1,delta=2
    90                           	psect	text55,local,class=CODE,merge=1,delta=2
    91                           	psect	text56,local,class=CODE,merge=1,delta=2
    92                           	psect	text57,local,class=CODE,merge=1,delta=2
    93                           	psect	text58,local,class=CODE,merge=1,delta=2
    94                           	psect	text59,local,class=CODE,merge=1,delta=2
    95                           	psect	text60,local,class=CODE,merge=1,delta=2
    96                           	psect	text61,local,class=CODE,merge=1,delta=2
    97                           	psect	text62,local,class=CODE,merge=1,delta=2
    98                           	psect	text63,local,class=CODE,merge=1,delta=2
    99                           	psect	text64,local,class=CODE,merge=1,delta=2
   100                           	psect	text65,local,class=CODE,merge=1,delta=2
   101                           	psect	text66,local,class=CODE,merge=1,delta=2
   102                           	psect	text67,local,class=CODE,merge=1,delta=2
   103                           	psect	text68,local,class=CODE,merge=1,delta=2
   104                           	psect	text69,local,class=CODE,merge=1,delta=2
   105                           	psect	text70,local,class=CODE,merge=1,delta=2
   106                           	psect	text71,local,class=CODE,merge=1,delta=2
   107                           	psect	text72,local,class=CODE,merge=1,delta=2
   108                           	psect	text73,local,class=CODE,merge=1,delta=2
   109                           	psect	text74,local,class=CODE,merge=1,delta=2
   110                           	psect	text75,local,class=CODE,merge=1,delta=2
   111                           	psect	text76,local,class=CODE,merge=1,delta=2
   112                           	psect	text77,local,class=CODE,merge=1,delta=2
   113                           	psect	text78,local,class=CODE,merge=1,delta=2
   114                           	psect	text79,local,class=CODE,merge=1,delta=2
   115                           	psect	text80,local,class=CODE,merge=1,delta=2
   116                           	psect	text81,local,class=CODE,merge=1,delta=2
   117                           	psect	text82,local,class=CODE,merge=1,delta=2
   118                           	psect	text83,local,class=CODE,merge=1,delta=2
   119                           	psect	intentry,global,class=CODE,delta=2
   120                           	psect	text85,local,class=CODE,merge=1,delta=2
   121                           	psect	text86,local,class=CODE,merge=1,delta=2
   122                           	psect	text87,local,class=CODE,merge=1,delta=2
   123                           	dabs	1,0x7E,2
   124  0000                     
   125                           ; Version 2.05
   126                           ; Generated 20/12/2018 GMT
   127                           ; 
   128                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   129                           ; All rights reserved.
   130                           ; 
   131                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   132                           ; 
   133                           ; Redistribution and use in source and binary forms, with or without modification, are
   134                           ; permitted provided that the following conditions are met:
   135                           ; 
   136                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   137                           ;        conditions and the following disclaimer.
   138                           ; 
   139                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   140                           ;        of conditions and the following disclaimer in the documentation and/or other
   141                           ;        materials provided with the distribution.
   142                           ; 
   143                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   144                           ;        software without specific prior written permission.
   145                           ; 
   146                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   147                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   148                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   149                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   150                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   151                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   152                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   153                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   154                           ; 
   155                           ; 
   156                           ; Code-generator required, PIC16F18446 Definitions
   157                           ; 
   158                           ; SFR Addresses
   159  0000                     	;# 
   160  0001                     	;# 
   161  0002                     	;# 
   162  0003                     	;# 
   163  0004                     	;# 
   164  0005                     	;# 
   165  0006                     	;# 
   166  0007                     	;# 
   167  0008                     	;# 
   168  0009                     	;# 
   169  000A                     	;# 
   170  000B                     	;# 
   171  000C                     	;# 
   172  000D                     	;# 
   173  000E                     	;# 
   174  0012                     	;# 
   175  0013                     	;# 
   176  0014                     	;# 
   177  0018                     	;# 
   178  0019                     	;# 
   179  001A                     	;# 
   180  008C                     	;# 
   181  008C                     	;# 
   182  008D                     	;# 
   183  008E                     	;# 
   184  008E                     	;# 
   185  008F                     	;# 
   186  0090                     	;# 
   187  0090                     	;# 
   188  0091                     	;# 
   189  0092                     	;# 
   190  0092                     	;# 
   191  0093                     	;# 
   192  0094                     	;# 
   193  0094                     	;# 
   194  0095                     	;# 
   195  0096                     	;# 
   196  0096                     	;# 
   197  0097                     	;# 
   198  0098                     	;# 
   199  0099                     	;# 
   200  009A                     	;# 
   201  009B                     	;# 
   202  009B                     	;# 
   203  009C                     	;# 
   204  009D                     	;# 
   205  009D                     	;# 
   206  009E                     	;# 
   207  009F                     	;# 
   208  010C                     	;# 
   209  010C                     	;# 
   210  010D                     	;# 
   211  010E                     	;# 
   212  010F                     	;# 
   213  010F                     	;# 
   214  0110                     	;# 
   215  0111                     	;# 
   216  0112                     	;# 
   217  0113                     	;# 
   218  0114                     	;# 
   219  0115                     	;# 
   220  0116                     	;# 
   221  0117                     	;# 
   222  0118                     	;# 
   223  0119                     	;# 
   224  0119                     	;# 
   225  0119                     	;# 
   226  011A                     	;# 
   227  011A                     	;# 
   228  011A                     	;# 
   229  011B                     	;# 
   230  011B                     	;# 
   231  011B                     	;# 
   232  011B                     	;# 
   233  011B                     	;# 
   234  011C                     	;# 
   235  011C                     	;# 
   236  011C                     	;# 
   237  011D                     	;# 
   238  011D                     	;# 
   239  011D                     	;# 
   240  011E                     	;# 
   241  011E                     	;# 
   242  011E                     	;# 
   243  011F                     	;# 
   244  011F                     	;# 
   245  011F                     	;# 
   246  011F                     	;# 
   247  011F                     	;# 
   248  018C                     	;# 
   249  018D                     	;# 
   250  018E                     	;# 
   251  018F                     	;# 
   252  0190                     	;# 
   253  0191                     	;# 
   254  0192                     	;# 
   255  0196                     	;# 
   256  0197                     	;# 
   257  0198                     	;# 
   258  0199                     	;# 
   259  019A                     	;# 
   260  019B                     	;# 
   261  019C                     	;# 
   262  020C                     	;# 
   263  020D                     	;# 
   264  020E                     	;# 
   265  020E                     	;# 
   266  020F                     	;# 
   267  020F                     	;# 
   268  0210                     	;# 
   269  0210                     	;# 
   270  0211                     	;# 
   271  0211                     	;# 
   272  0212                     	;# 
   273  0213                     	;# 
   274  0214                     	;# 
   275  0214                     	;# 
   276  0215                     	;# 
   277  0215                     	;# 
   278  0216                     	;# 
   279  0216                     	;# 
   280  0217                     	;# 
   281  0217                     	;# 
   282  0218                     	;# 
   283  0219                     	;# 
   284  021A                     	;# 
   285  021A                     	;# 
   286  021B                     	;# 
   287  021B                     	;# 
   288  021C                     	;# 
   289  021C                     	;# 
   290  021D                     	;# 
   291  021D                     	;# 
   292  021E                     	;# 
   293  021F                     	;# 
   294  028C                     	;# 
   295  028C                     	;# 
   296  028D                     	;# 
   297  028D                     	;# 
   298  028E                     	;# 
   299  028F                     	;# 
   300  0290                     	;# 
   301  0291                     	;# 
   302  0292                     	;# 
   303  0292                     	;# 
   304  0293                     	;# 
   305  0293                     	;# 
   306  0294                     	;# 
   307  0295                     	;# 
   308  0296                     	;# 
   309  0297                     	;# 
   310  0298                     	;# 
   311  0298                     	;# 
   312  0299                     	;# 
   313  0299                     	;# 
   314  029A                     	;# 
   315  029B                     	;# 
   316  029C                     	;# 
   317  029D                     	;# 
   318  029F                     	;# 
   319  030C                     	;# 
   320  030C                     	;# 
   321  030D                     	;# 
   322  030E                     	;# 
   323  030F                     	;# 
   324  0310                     	;# 
   325  0310                     	;# 
   326  0311                     	;# 
   327  0312                     	;# 
   328  0313                     	;# 
   329  0314                     	;# 
   330  0314                     	;# 
   331  0315                     	;# 
   332  0316                     	;# 
   333  0317                     	;# 
   334  0318                     	;# 
   335  0318                     	;# 
   336  0319                     	;# 
   337  031A                     	;# 
   338  031B                     	;# 
   339  038C                     	;# 
   340  038C                     	;# 
   341  038D                     	;# 
   342  038E                     	;# 
   343  0390                     	;# 
   344  0390                     	;# 
   345  0391                     	;# 
   346  0392                     	;# 
   347  048C                     	;# 
   348  048C                     	;# 
   349  048D                     	;# 
   350  048E                     	;# 
   351  048F                     	;# 
   352  048F                     	;# 
   353  0490                     	;# 
   354  0491                     	;# 
   355  0492                     	;# 
   356  0492                     	;# 
   357  0493                     	;# 
   358  0494                     	;# 
   359  0495                     	;# 
   360  0495                     	;# 
   361  0496                     	;# 
   362  0497                     	;# 
   363  0498                     	;# 
   364  0499                     	;# 
   365  049A                     	;# 
   366  049B                     	;# 
   367  049C                     	;# 
   368  049D                     	;# 
   369  058C                     	;# 
   370  058C                     	;# 
   371  058D                     	;# 
   372  058E                     	;# 
   373  058F                     	;# 
   374  058F                     	;# 
   375  0590                     	;# 
   376  0591                     	;# 
   377  0592                     	;# 
   378  0593                     	;# 
   379  059C                     	;# 
   380  059C                     	;# 
   381  059D                     	;# 
   382  059D                     	;# 
   383  059E                     	;# 
   384  059F                     	;# 
   385  060C                     	;# 
   386  060C                     	;# 
   387  060D                     	;# 
   388  060D                     	;# 
   389  060E                     	;# 
   390  060F                     	;# 
   391  0610                     	;# 
   392  0611                     	;# 
   393  0612                     	;# 
   394  0613                     	;# 
   395  0614                     	;# 
   396  0616                     	;# 
   397  0616                     	;# 
   398  0617                     	;# 
   399  0617                     	;# 
   400  0618                     	;# 
   401  0619                     	;# 
   402  061A                     	;# 
   403  061B                     	;# 
   404  061C                     	;# 
   405  061D                     	;# 
   406  061E                     	;# 
   407  070C                     	;# 
   408  070D                     	;# 
   409  070E                     	;# 
   410  070F                     	;# 
   411  0710                     	;# 
   412  0711                     	;# 
   413  0712                     	;# 
   414  0713                     	;# 
   415  0714                     	;# 
   416  0716                     	;# 
   417  0717                     	;# 
   418  0718                     	;# 
   419  0719                     	;# 
   420  071A                     	;# 
   421  071B                     	;# 
   422  071C                     	;# 
   423  071D                     	;# 
   424  071E                     	;# 
   425  0796                     	;# 
   426  0797                     	;# 
   427  0798                     	;# 
   428  0799                     	;# 
   429  079A                     	;# 
   430  079B                     	;# 
   431  079C                     	;# 
   432  079D                     	;# 
   433  080C                     	;# 
   434  080D                     	;# 
   435  080E                     	;# 
   436  080F                     	;# 
   437  0810                     	;# 
   438  0811                     	;# 
   439  0812                     	;# 
   440  0813                     	;# 
   441  0814                     	;# 
   442  081A                     	;# 
   443  081A                     	;# 
   444  081B                     	;# 
   445  081C                     	;# 
   446  081C                     	;# 
   447  081D                     	;# 
   448  081E                     	;# 
   449  081F                     	;# 
   450  088C                     	;# 
   451  088D                     	;# 
   452  088E                     	;# 
   453  088F                     	;# 
   454  0890                     	;# 
   455  0891                     	;# 
   456  0892                     	;# 
   457  0893                     	;# 
   458  0895                     	;# 
   459  0896                     	;# 
   460  0897                     	;# 
   461  0898                     	;# 
   462  0899                     	;# 
   463  089A                     	;# 
   464  089B                     	;# 
   465  090C                     	;# 
   466  090E                     	;# 
   467  090F                     	;# 
   468  091F                     	;# 
   469  098F                     	;# 
   470  098F                     	;# 
   471  0990                     	;# 
   472  0991                     	;# 
   473  0992                     	;# 
   474  0993                     	;# 
   475  0994                     	;# 
   476  0995                     	;# 
   477  0996                     	;# 
   478  0997                     	;# 
   479  1E0F                     	;# 
   480  1E10                     	;# 
   481  1E11                     	;# 
   482  1E12                     	;# 
   483  1E13                     	;# 
   484  1E14                     	;# 
   485  1E15                     	;# 
   486  1E16                     	;# 
   487  1E17                     	;# 
   488  1E18                     	;# 
   489  1E19                     	;# 
   490  1E1A                     	;# 
   491  1E1B                     	;# 
   492  1E1C                     	;# 
   493  1E1D                     	;# 
   494  1E1E                     	;# 
   495  1E1F                     	;# 
   496  1E20                     	;# 
   497  1E21                     	;# 
   498  1E22                     	;# 
   499  1E23                     	;# 
   500  1E24                     	;# 
   501  1E25                     	;# 
   502  1E26                     	;# 
   503  1E27                     	;# 
   504  1E28                     	;# 
   505  1E29                     	;# 
   506  1E2A                     	;# 
   507  1E2B                     	;# 
   508  1E2C                     	;# 
   509  1E2D                     	;# 
   510  1E2E                     	;# 
   511  1E2F                     	;# 
   512  1E30                     	;# 
   513  1E31                     	;# 
   514  1E32                     	;# 
   515  1E33                     	;# 
   516  1E34                     	;# 
   517  1E35                     	;# 
   518  1E36                     	;# 
   519  1E37                     	;# 
   520  1E8F                     	;# 
   521  1E90                     	;# 
   522  1E91                     	;# 
   523  1E92                     	;# 
   524  1E93                     	;# 
   525  1E94                     	;# 
   526  1E95                     	;# 
   527  1E96                     	;# 
   528  1E97                     	;# 
   529  1E9C                     	;# 
   530  1E9D                     	;# 
   531  1E9E                     	;# 
   532  1EA1                     	;# 
   533  1EA2                     	;# 
   534  1EA3                     	;# 
   535  1EA4                     	;# 
   536  1EA9                     	;# 
   537  1EAA                     	;# 
   538  1EB1                     	;# 
   539  1EB2                     	;# 
   540  1EB8                     	;# 
   541  1EB9                     	;# 
   542  1EBA                     	;# 
   543  1EBB                     	;# 
   544  1EBC                     	;# 
   545  1EBD                     	;# 
   546  1EBE                     	;# 
   547  1EC3                     	;# 
   548  1EC5                     	;# 
   549  1EC6                     	;# 
   550  1EC7                     	;# 
   551  1EC8                     	;# 
   552  1EC9                     	;# 
   553  1ECA                     	;# 
   554  1ECB                     	;# 
   555  1ECB                     	;# 
   556  1ECB                     	;# 
   557  1ECC                     	;# 
   558  1ECC                     	;# 
   559  1ECC                     	;# 
   560  1F10                     	;# 
   561  1F11                     	;# 
   562  1F12                     	;# 
   563  1F14                     	;# 
   564  1F15                     	;# 
   565  1F1C                     	;# 
   566  1F1D                     	;# 
   567  1F1E                     	;# 
   568  1F1F                     	;# 
   569  1F20                     	;# 
   570  1F21                     	;# 
   571  1F22                     	;# 
   572  1F23                     	;# 
   573  1F24                     	;# 
   574  1F25                     	;# 
   575  1F26                     	;# 
   576  1F27                     	;# 
   577  1F38                     	;# 
   578  1F39                     	;# 
   579  1F3A                     	;# 
   580  1F3B                     	;# 
   581  1F3C                     	;# 
   582  1F3D                     	;# 
   583  1F3E                     	;# 
   584  1F3F                     	;# 
   585  1F43                     	;# 
   586  1F44                     	;# 
   587  1F45                     	;# 
   588  1F46                     	;# 
   589  1F47                     	;# 
   590  1F48                     	;# 
   591  1F49                     	;# 
   592  1F4A                     	;# 
   593  1F4E                     	;# 
   594  1F4F                     	;# 
   595  1F50                     	;# 
   596  1F51                     	;# 
   597  1F52                     	;# 
   598  1F53                     	;# 
   599  1F54                     	;# 
   600  1F55                     	;# 
   601  1FE4                     	;# 
   602  1FE5                     	;# 
   603  1FE6                     	;# 
   604  1FE7                     	;# 
   605  1FE8                     	;# 
   606  1FE8                     	;# 
   607  1FE9                     	;# 
   608  1FEA                     	;# 
   609  1FEB                     	;# 
   610  1FED                     	;# 
   611  1FEE                     	;# 
   612  1FEF                     	;# 
   613  0000                     	;# 
   614  0001                     	;# 
   615  0002                     	;# 
   616  0003                     	;# 
   617  0004                     	;# 
   618  0005                     	;# 
   619  0006                     	;# 
   620  0007                     	;# 
   621  0008                     	;# 
   622  0009                     	;# 
   623  000A                     	;# 
   624  000B                     	;# 
   625  000C                     	;# 
   626  000D                     	;# 
   627  000E                     	;# 
   628  0012                     	;# 
   629  0013                     	;# 
   630  0014                     	;# 
   631  0018                     	;# 
   632  0019                     	;# 
   633  001A                     	;# 
   634  008C                     	;# 
   635  008C                     	;# 
   636  008D                     	;# 
   637  008E                     	;# 
   638  008E                     	;# 
   639  008F                     	;# 
   640  0090                     	;# 
   641  0090                     	;# 
   642  0091                     	;# 
   643  0092                     	;# 
   644  0092                     	;# 
   645  0093                     	;# 
   646  0094                     	;# 
   647  0094                     	;# 
   648  0095                     	;# 
   649  0096                     	;# 
   650  0096                     	;# 
   651  0097                     	;# 
   652  0098                     	;# 
   653  0099                     	;# 
   654  009A                     	;# 
   655  009B                     	;# 
   656  009B                     	;# 
   657  009C                     	;# 
   658  009D                     	;# 
   659  009D                     	;# 
   660  009E                     	;# 
   661  009F                     	;# 
   662  010C                     	;# 
   663  010C                     	;# 
   664  010D                     	;# 
   665  010E                     	;# 
   666  010F                     	;# 
   667  010F                     	;# 
   668  0110                     	;# 
   669  0111                     	;# 
   670  0112                     	;# 
   671  0113                     	;# 
   672  0114                     	;# 
   673  0115                     	;# 
   674  0116                     	;# 
   675  0117                     	;# 
   676  0118                     	;# 
   677  0119                     	;# 
   678  0119                     	;# 
   679  0119                     	;# 
   680  011A                     	;# 
   681  011A                     	;# 
   682  011A                     	;# 
   683  011B                     	;# 
   684  011B                     	;# 
   685  011B                     	;# 
   686  011B                     	;# 
   687  011B                     	;# 
   688  011C                     	;# 
   689  011C                     	;# 
   690  011C                     	;# 
   691  011D                     	;# 
   692  011D                     	;# 
   693  011D                     	;# 
   694  011E                     	;# 
   695  011E                     	;# 
   696  011E                     	;# 
   697  011F                     	;# 
   698  011F                     	;# 
   699  011F                     	;# 
   700  011F                     	;# 
   701  011F                     	;# 
   702  018C                     	;# 
   703  018D                     	;# 
   704  018E                     	;# 
   705  018F                     	;# 
   706  0190                     	;# 
   707  0191                     	;# 
   708  0192                     	;# 
   709  0196                     	;# 
   710  0197                     	;# 
   711  0198                     	;# 
   712  0199                     	;# 
   713  019A                     	;# 
   714  019B                     	;# 
   715  019C                     	;# 
   716  020C                     	;# 
   717  020D                     	;# 
   718  020E                     	;# 
   719  020E                     	;# 
   720  020F                     	;# 
   721  020F                     	;# 
   722  0210                     	;# 
   723  0210                     	;# 
   724  0211                     	;# 
   725  0211                     	;# 
   726  0212                     	;# 
   727  0213                     	;# 
   728  0214                     	;# 
   729  0214                     	;# 
   730  0215                     	;# 
   731  0215                     	;# 
   732  0216                     	;# 
   733  0216                     	;# 
   734  0217                     	;# 
   735  0217                     	;# 
   736  0218                     	;# 
   737  0219                     	;# 
   738  021A                     	;# 
   739  021A                     	;# 
   740  021B                     	;# 
   741  021B                     	;# 
   742  021C                     	;# 
   743  021C                     	;# 
   744  021D                     	;# 
   745  021D                     	;# 
   746  021E                     	;# 
   747  021F                     	;# 
   748  028C                     	;# 
   749  028C                     	;# 
   750  028D                     	;# 
   751  028D                     	;# 
   752  028E                     	;# 
   753  028F                     	;# 
   754  0290                     	;# 
   755  0291                     	;# 
   756  0292                     	;# 
   757  0292                     	;# 
   758  0293                     	;# 
   759  0293                     	;# 
   760  0294                     	;# 
   761  0295                     	;# 
   762  0296                     	;# 
   763  0297                     	;# 
   764  0298                     	;# 
   765  0298                     	;# 
   766  0299                     	;# 
   767  0299                     	;# 
   768  029A                     	;# 
   769  029B                     	;# 
   770  029C                     	;# 
   771  029D                     	;# 
   772  029F                     	;# 
   773  030C                     	;# 
   774  030C                     	;# 
   775  030D                     	;# 
   776  030E                     	;# 
   777  030F                     	;# 
   778  0310                     	;# 
   779  0310                     	;# 
   780  0311                     	;# 
   781  0312                     	;# 
   782  0313                     	;# 
   783  0314                     	;# 
   784  0314                     	;# 
   785  0315                     	;# 
   786  0316                     	;# 
   787  0317                     	;# 
   788  0318                     	;# 
   789  0318                     	;# 
   790  0319                     	;# 
   791  031A                     	;# 
   792  031B                     	;# 
   793  038C                     	;# 
   794  038C                     	;# 
   795  038D                     	;# 
   796  038E                     	;# 
   797  0390                     	;# 
   798  0390                     	;# 
   799  0391                     	;# 
   800  0392                     	;# 
   801  048C                     	;# 
   802  048C                     	;# 
   803  048D                     	;# 
   804  048E                     	;# 
   805  048F                     	;# 
   806  048F                     	;# 
   807  0490                     	;# 
   808  0491                     	;# 
   809  0492                     	;# 
   810  0492                     	;# 
   811  0493                     	;# 
   812  0494                     	;# 
   813  0495                     	;# 
   814  0495                     	;# 
   815  0496                     	;# 
   816  0497                     	;# 
   817  0498                     	;# 
   818  0499                     	;# 
   819  049A                     	;# 
   820  049B                     	;# 
   821  049C                     	;# 
   822  049D                     	;# 
   823  058C                     	;# 
   824  058C                     	;# 
   825  058D                     	;# 
   826  058E                     	;# 
   827  058F                     	;# 
   828  058F                     	;# 
   829  0590                     	;# 
   830  0591                     	;# 
   831  0592                     	;# 
   832  0593                     	;# 
   833  059C                     	;# 
   834  059C                     	;# 
   835  059D                     	;# 
   836  059D                     	;# 
   837  059E                     	;# 
   838  059F                     	;# 
   839  060C                     	;# 
   840  060C                     	;# 
   841  060D                     	;# 
   842  060D                     	;# 
   843  060E                     	;# 
   844  060F                     	;# 
   845  0610                     	;# 
   846  0611                     	;# 
   847  0612                     	;# 
   848  0613                     	;# 
   849  0614                     	;# 
   850  0616                     	;# 
   851  0616                     	;# 
   852  0617                     	;# 
   853  0617                     	;# 
   854  0618                     	;# 
   855  0619                     	;# 
   856  061A                     	;# 
   857  061B                     	;# 
   858  061C                     	;# 
   859  061D                     	;# 
   860  061E                     	;# 
   861  070C                     	;# 
   862  070D                     	;# 
   863  070E                     	;# 
   864  070F                     	;# 
   865  0710                     	;# 
   866  0711                     	;# 
   867  0712                     	;# 
   868  0713                     	;# 
   869  0714                     	;# 
   870  0716                     	;# 
   871  0717                     	;# 
   872  0718                     	;# 
   873  0719                     	;# 
   874  071A                     	;# 
   875  071B                     	;# 
   876  071C                     	;# 
   877  071D                     	;# 
   878  071E                     	;# 
   879  0796                     	;# 
   880  0797                     	;# 
   881  0798                     	;# 
   882  0799                     	;# 
   883  079A                     	;# 
   884  079B                     	;# 
   885  079C                     	;# 
   886  079D                     	;# 
   887  080C                     	;# 
   888  080D                     	;# 
   889  080E                     	;# 
   890  080F                     	;# 
   891  0810                     	;# 
   892  0811                     	;# 
   893  0812                     	;# 
   894  0813                     	;# 
   895  0814                     	;# 
   896  081A                     	;# 
   897  081A                     	;# 
   898  081B                     	;# 
   899  081C                     	;# 
   900  081C                     	;# 
   901  081D                     	;# 
   902  081E                     	;# 
   903  081F                     	;# 
   904  088C                     	;# 
   905  088D                     	;# 
   906  088E                     	;# 
   907  088F                     	;# 
   908  0890                     	;# 
   909  0891                     	;# 
   910  0892                     	;# 
   911  0893                     	;# 
   912  0895                     	;# 
   913  0896                     	;# 
   914  0897                     	;# 
   915  0898                     	;# 
   916  0899                     	;# 
   917  089A                     	;# 
   918  089B                     	;# 
   919  090C                     	;# 
   920  090E                     	;# 
   921  090F                     	;# 
   922  091F                     	;# 
   923  098F                     	;# 
   924  098F                     	;# 
   925  0990                     	;# 
   926  0991                     	;# 
   927  0992                     	;# 
   928  0993                     	;# 
   929  0994                     	;# 
   930  0995                     	;# 
   931  0996                     	;# 
   932  0997                     	;# 
   933  1E0F                     	;# 
   934  1E10                     	;# 
   935  1E11                     	;# 
   936  1E12                     	;# 
   937  1E13                     	;# 
   938  1E14                     	;# 
   939  1E15                     	;# 
   940  1E16                     	;# 
   941  1E17                     	;# 
   942  1E18                     	;# 
   943  1E19                     	;# 
   944  1E1A                     	;# 
   945  1E1B                     	;# 
   946  1E1C                     	;# 
   947  1E1D                     	;# 
   948  1E1E                     	;# 
   949  1E1F                     	;# 
   950  1E20                     	;# 
   951  1E21                     	;# 
   952  1E22                     	;# 
   953  1E23                     	;# 
   954  1E24                     	;# 
   955  1E25                     	;# 
   956  1E26                     	;# 
   957  1E27                     	;# 
   958  1E28                     	;# 
   959  1E29                     	;# 
   960  1E2A                     	;# 
   961  1E2B                     	;# 
   962  1E2C                     	;# 
   963  1E2D                     	;# 
   964  1E2E                     	;# 
   965  1E2F                     	;# 
   966  1E30                     	;# 
   967  1E31                     	;# 
   968  1E32                     	;# 
   969  1E33                     	;# 
   970  1E34                     	;# 
   971  1E35                     	;# 
   972  1E36                     	;# 
   973  1E37                     	;# 
   974  1E8F                     	;# 
   975  1E90                     	;# 
   976  1E91                     	;# 
   977  1E92                     	;# 
   978  1E93                     	;# 
   979  1E94                     	;# 
   980  1E95                     	;# 
   981  1E96                     	;# 
   982  1E97                     	;# 
   983  1E9C                     	;# 
   984  1E9D                     	;# 
   985  1E9E                     	;# 
   986  1EA1                     	;# 
   987  1EA2                     	;# 
   988  1EA3                     	;# 
   989  1EA4                     	;# 
   990  1EA9                     	;# 
   991  1EAA                     	;# 
   992  1EB1                     	;# 
   993  1EB2                     	;# 
   994  1EB8                     	;# 
   995  1EB9                     	;# 
   996  1EBA                     	;# 
   997  1EBB                     	;# 
   998  1EBC                     	;# 
   999  1EBD                     	;# 
  1000  1EBE                     	;# 
  1001  1EC3                     	;# 
  1002  1EC5                     	;# 
  1003  1EC6                     	;# 
  1004  1EC7                     	;# 
  1005  1EC8                     	;# 
  1006  1EC9                     	;# 
  1007  1ECA                     	;# 
  1008  1ECB                     	;# 
  1009  1ECB                     	;# 
  1010  1ECB                     	;# 
  1011  1ECC                     	;# 
  1012  1ECC                     	;# 
  1013  1ECC                     	;# 
  1014  1F10                     	;# 
  1015  1F11                     	;# 
  1016  1F12                     	;# 
  1017  1F14                     	;# 
  1018  1F15                     	;# 
  1019  1F1C                     	;# 
  1020  1F1D                     	;# 
  1021  1F1E                     	;# 
  1022  1F1F                     	;# 
  1023  1F20                     	;# 
  1024  1F21                     	;# 
  1025  1F22                     	;# 
  1026  1F23                     	;# 
  1027  1F24                     	;# 
  1028  1F25                     	;# 
  1029  1F26                     	;# 
  1030  1F27                     	;# 
  1031  1F38                     	;# 
  1032  1F39                     	;# 
  1033  1F3A                     	;# 
  1034  1F3B                     	;# 
  1035  1F3C                     	;# 
  1036  1F3D                     	;# 
  1037  1F3E                     	;# 
  1038  1F3F                     	;# 
  1039  1F43                     	;# 
  1040  1F44                     	;# 
  1041  1F45                     	;# 
  1042  1F46                     	;# 
  1043  1F47                     	;# 
  1044  1F48                     	;# 
  1045  1F49                     	;# 
  1046  1F4A                     	;# 
  1047  1F4E                     	;# 
  1048  1F4F                     	;# 
  1049  1F50                     	;# 
  1050  1F51                     	;# 
  1051  1F52                     	;# 
  1052  1F53                     	;# 
  1053  1F54                     	;# 
  1054  1F55                     	;# 
  1055  1FE4                     	;# 
  1056  1FE5                     	;# 
  1057  1FE6                     	;# 
  1058  1FE7                     	;# 
  1059  1FE8                     	;# 
  1060  1FE8                     	;# 
  1061  1FE9                     	;# 
  1062  1FEA                     	;# 
  1063  1FEB                     	;# 
  1064  1FED                     	;# 
  1065  1FEE                     	;# 
  1066  1FEF                     	;# 
  1067  0000                     	;# 
  1068  0001                     	;# 
  1069  0002                     	;# 
  1070  0003                     	;# 
  1071  0004                     	;# 
  1072  0005                     	;# 
  1073  0006                     	;# 
  1074  0007                     	;# 
  1075  0008                     	;# 
  1076  0009                     	;# 
  1077  000A                     	;# 
  1078  000B                     	;# 
  1079  000C                     	;# 
  1080  000D                     	;# 
  1081  000E                     	;# 
  1082  0012                     	;# 
  1083  0013                     	;# 
  1084  0014                     	;# 
  1085  0018                     	;# 
  1086  0019                     	;# 
  1087  001A                     	;# 
  1088  008C                     	;# 
  1089  008C                     	;# 
  1090  008D                     	;# 
  1091  008E                     	;# 
  1092  008E                     	;# 
  1093  008F                     	;# 
  1094  0090                     	;# 
  1095  0090                     	;# 
  1096  0091                     	;# 
  1097  0092                     	;# 
  1098  0092                     	;# 
  1099  0093                     	;# 
  1100  0094                     	;# 
  1101  0094                     	;# 
  1102  0095                     	;# 
  1103  0096                     	;# 
  1104  0096                     	;# 
  1105  0097                     	;# 
  1106  0098                     	;# 
  1107  0099                     	;# 
  1108  009A                     	;# 
  1109  009B                     	;# 
  1110  009B                     	;# 
  1111  009C                     	;# 
  1112  009D                     	;# 
  1113  009D                     	;# 
  1114  009E                     	;# 
  1115  009F                     	;# 
  1116  010C                     	;# 
  1117  010C                     	;# 
  1118  010D                     	;# 
  1119  010E                     	;# 
  1120  010F                     	;# 
  1121  010F                     	;# 
  1122  0110                     	;# 
  1123  0111                     	;# 
  1124  0112                     	;# 
  1125  0113                     	;# 
  1126  0114                     	;# 
  1127  0115                     	;# 
  1128  0116                     	;# 
  1129  0117                     	;# 
  1130  0118                     	;# 
  1131  0119                     	;# 
  1132  0119                     	;# 
  1133  0119                     	;# 
  1134  011A                     	;# 
  1135  011A                     	;# 
  1136  011A                     	;# 
  1137  011B                     	;# 
  1138  011B                     	;# 
  1139  011B                     	;# 
  1140  011B                     	;# 
  1141  011B                     	;# 
  1142  011C                     	;# 
  1143  011C                     	;# 
  1144  011C                     	;# 
  1145  011D                     	;# 
  1146  011D                     	;# 
  1147  011D                     	;# 
  1148  011E                     	;# 
  1149  011E                     	;# 
  1150  011E                     	;# 
  1151  011F                     	;# 
  1152  011F                     	;# 
  1153  011F                     	;# 
  1154  011F                     	;# 
  1155  011F                     	;# 
  1156  018C                     	;# 
  1157  018D                     	;# 
  1158  018E                     	;# 
  1159  018F                     	;# 
  1160  0190                     	;# 
  1161  0191                     	;# 
  1162  0192                     	;# 
  1163  0196                     	;# 
  1164  0197                     	;# 
  1165  0198                     	;# 
  1166  0199                     	;# 
  1167  019A                     	;# 
  1168  019B                     	;# 
  1169  019C                     	;# 
  1170  020C                     	;# 
  1171  020D                     	;# 
  1172  020E                     	;# 
  1173  020E                     	;# 
  1174  020F                     	;# 
  1175  020F                     	;# 
  1176  0210                     	;# 
  1177  0210                     	;# 
  1178  0211                     	;# 
  1179  0211                     	;# 
  1180  0212                     	;# 
  1181  0213                     	;# 
  1182  0214                     	;# 
  1183  0214                     	;# 
  1184  0215                     	;# 
  1185  0215                     	;# 
  1186  0216                     	;# 
  1187  0216                     	;# 
  1188  0217                     	;# 
  1189  0217                     	;# 
  1190  0218                     	;# 
  1191  0219                     	;# 
  1192  021A                     	;# 
  1193  021A                     	;# 
  1194  021B                     	;# 
  1195  021B                     	;# 
  1196  021C                     	;# 
  1197  021C                     	;# 
  1198  021D                     	;# 
  1199  021D                     	;# 
  1200  021E                     	;# 
  1201  021F                     	;# 
  1202  028C                     	;# 
  1203  028C                     	;# 
  1204  028D                     	;# 
  1205  028D                     	;# 
  1206  028E                     	;# 
  1207  028F                     	;# 
  1208  0290                     	;# 
  1209  0291                     	;# 
  1210  0292                     	;# 
  1211  0292                     	;# 
  1212  0293                     	;# 
  1213  0293                     	;# 
  1214  0294                     	;# 
  1215  0295                     	;# 
  1216  0296                     	;# 
  1217  0297                     	;# 
  1218  0298                     	;# 
  1219  0298                     	;# 
  1220  0299                     	;# 
  1221  0299                     	;# 
  1222  029A                     	;# 
  1223  029B                     	;# 
  1224  029C                     	;# 
  1225  029D                     	;# 
  1226  029F                     	;# 
  1227  030C                     	;# 
  1228  030C                     	;# 
  1229  030D                     	;# 
  1230  030E                     	;# 
  1231  030F                     	;# 
  1232  0310                     	;# 
  1233  0310                     	;# 
  1234  0311                     	;# 
  1235  0312                     	;# 
  1236  0313                     	;# 
  1237  0314                     	;# 
  1238  0314                     	;# 
  1239  0315                     	;# 
  1240  0316                     	;# 
  1241  0317                     	;# 
  1242  0318                     	;# 
  1243  0318                     	;# 
  1244  0319                     	;# 
  1245  031A                     	;# 
  1246  031B                     	;# 
  1247  038C                     	;# 
  1248  038C                     	;# 
  1249  038D                     	;# 
  1250  038E                     	;# 
  1251  0390                     	;# 
  1252  0390                     	;# 
  1253  0391                     	;# 
  1254  0392                     	;# 
  1255  048C                     	;# 
  1256  048C                     	;# 
  1257  048D                     	;# 
  1258  048E                     	;# 
  1259  048F                     	;# 
  1260  048F                     	;# 
  1261  0490                     	;# 
  1262  0491                     	;# 
  1263  0492                     	;# 
  1264  0492                     	;# 
  1265  0493                     	;# 
  1266  0494                     	;# 
  1267  0495                     	;# 
  1268  0495                     	;# 
  1269  0496                     	;# 
  1270  0497                     	;# 
  1271  0498                     	;# 
  1272  0499                     	;# 
  1273  049A                     	;# 
  1274  049B                     	;# 
  1275  049C                     	;# 
  1276  049D                     	;# 
  1277  058C                     	;# 
  1278  058C                     	;# 
  1279  058D                     	;# 
  1280  058E                     	;# 
  1281  058F                     	;# 
  1282  058F                     	;# 
  1283  0590                     	;# 
  1284  0591                     	;# 
  1285  0592                     	;# 
  1286  0593                     	;# 
  1287  059C                     	;# 
  1288  059C                     	;# 
  1289  059D                     	;# 
  1290  059D                     	;# 
  1291  059E                     	;# 
  1292  059F                     	;# 
  1293  060C                     	;# 
  1294  060C                     	;# 
  1295  060D                     	;# 
  1296  060D                     	;# 
  1297  060E                     	;# 
  1298  060F                     	;# 
  1299  0610                     	;# 
  1300  0611                     	;# 
  1301  0612                     	;# 
  1302  0613                     	;# 
  1303  0614                     	;# 
  1304  0616                     	;# 
  1305  0616                     	;# 
  1306  0617                     	;# 
  1307  0617                     	;# 
  1308  0618                     	;# 
  1309  0619                     	;# 
  1310  061A                     	;# 
  1311  061B                     	;# 
  1312  061C                     	;# 
  1313  061D                     	;# 
  1314  061E                     	;# 
  1315  070C                     	;# 
  1316  070D                     	;# 
  1317  070E                     	;# 
  1318  070F                     	;# 
  1319  0710                     	;# 
  1320  0711                     	;# 
  1321  0712                     	;# 
  1322  0713                     	;# 
  1323  0714                     	;# 
  1324  0716                     	;# 
  1325  0717                     	;# 
  1326  0718                     	;# 
  1327  0719                     	;# 
  1328  071A                     	;# 
  1329  071B                     	;# 
  1330  071C                     	;# 
  1331  071D                     	;# 
  1332  071E                     	;# 
  1333  0796                     	;# 
  1334  0797                     	;# 
  1335  0798                     	;# 
  1336  0799                     	;# 
  1337  079A                     	;# 
  1338  079B                     	;# 
  1339  079C                     	;# 
  1340  079D                     	;# 
  1341  080C                     	;# 
  1342  080D                     	;# 
  1343  080E                     	;# 
  1344  080F                     	;# 
  1345  0810                     	;# 
  1346  0811                     	;# 
  1347  0812                     	;# 
  1348  0813                     	;# 
  1349  0814                     	;# 
  1350  081A                     	;# 
  1351  081A                     	;# 
  1352  081B                     	;# 
  1353  081C                     	;# 
  1354  081C                     	;# 
  1355  081D                     	;# 
  1356  081E                     	;# 
  1357  081F                     	;# 
  1358  088C                     	;# 
  1359  088D                     	;# 
  1360  088E                     	;# 
  1361  088F                     	;# 
  1362  0890                     	;# 
  1363  0891                     	;# 
  1364  0892                     	;# 
  1365  0893                     	;# 
  1366  0895                     	;# 
  1367  0896                     	;# 
  1368  0897                     	;# 
  1369  0898                     	;# 
  1370  0899                     	;# 
  1371  089A                     	;# 
  1372  089B                     	;# 
  1373  090C                     	;# 
  1374  090E                     	;# 
  1375  090F                     	;# 
  1376  091F                     	;# 
  1377  098F                     	;# 
  1378  098F                     	;# 
  1379  0990                     	;# 
  1380  0991                     	;# 
  1381  0992                     	;# 
  1382  0993                     	;# 
  1383  0994                     	;# 
  1384  0995                     	;# 
  1385  0996                     	;# 
  1386  0997                     	;# 
  1387  1E0F                     	;# 
  1388  1E10                     	;# 
  1389  1E11                     	;# 
  1390  1E12                     	;# 
  1391  1E13                     	;# 
  1392  1E14                     	;# 
  1393  1E15                     	;# 
  1394  1E16                     	;# 
  1395  1E17                     	;# 
  1396  1E18                     	;# 
  1397  1E19                     	;# 
  1398  1E1A                     	;# 
  1399  1E1B                     	;# 
  1400  1E1C                     	;# 
  1401  1E1D                     	;# 
  1402  1E1E                     	;# 
  1403  1E1F                     	;# 
  1404  1E20                     	;# 
  1405  1E21                     	;# 
  1406  1E22                     	;# 
  1407  1E23                     	;# 
  1408  1E24                     	;# 
  1409  1E25                     	;# 
  1410  1E26                     	;# 
  1411  1E27                     	;# 
  1412  1E28                     	;# 
  1413  1E29                     	;# 
  1414  1E2A                     	;# 
  1415  1E2B                     	;# 
  1416  1E2C                     	;# 
  1417  1E2D                     	;# 
  1418  1E2E                     	;# 
  1419  1E2F                     	;# 
  1420  1E30                     	;# 
  1421  1E31                     	;# 
  1422  1E32                     	;# 
  1423  1E33                     	;# 
  1424  1E34                     	;# 
  1425  1E35                     	;# 
  1426  1E36                     	;# 
  1427  1E37                     	;# 
  1428  1E8F                     	;# 
  1429  1E90                     	;# 
  1430  1E91                     	;# 
  1431  1E92                     	;# 
  1432  1E93                     	;# 
  1433  1E94                     	;# 
  1434  1E95                     	;# 
  1435  1E96                     	;# 
  1436  1E97                     	;# 
  1437  1E9C                     	;# 
  1438  1E9D                     	;# 
  1439  1E9E                     	;# 
  1440  1EA1                     	;# 
  1441  1EA2                     	;# 
  1442  1EA3                     	;# 
  1443  1EA4                     	;# 
  1444  1EA9                     	;# 
  1445  1EAA                     	;# 
  1446  1EB1                     	;# 
  1447  1EB2                     	;# 
  1448  1EB8                     	;# 
  1449  1EB9                     	;# 
  1450  1EBA                     	;# 
  1451  1EBB                     	;# 
  1452  1EBC                     	;# 
  1453  1EBD                     	;# 
  1454  1EBE                     	;# 
  1455  1EC3                     	;# 
  1456  1EC5                     	;# 
  1457  1EC6                     	;# 
  1458  1EC7                     	;# 
  1459  1EC8                     	;# 
  1460  1EC9                     	;# 
  1461  1ECA                     	;# 
  1462  1ECB                     	;# 
  1463  1ECB                     	;# 
  1464  1ECB                     	;# 
  1465  1ECC                     	;# 
  1466  1ECC                     	;# 
  1467  1ECC                     	;# 
  1468  1F10                     	;# 
  1469  1F11                     	;# 
  1470  1F12                     	;# 
  1471  1F14                     	;# 
  1472  1F15                     	;# 
  1473  1F1C                     	;# 
  1474  1F1D                     	;# 
  1475  1F1E                     	;# 
  1476  1F1F                     	;# 
  1477  1F20                     	;# 
  1478  1F21                     	;# 
  1479  1F22                     	;# 
  1480  1F23                     	;# 
  1481  1F24                     	;# 
  1482  1F25                     	;# 
  1483  1F26                     	;# 
  1484  1F27                     	;# 
  1485  1F38                     	;# 
  1486  1F39                     	;# 
  1487  1F3A                     	;# 
  1488  1F3B                     	;# 
  1489  1F3C                     	;# 
  1490  1F3D                     	;# 
  1491  1F3E                     	;# 
  1492  1F3F                     	;# 
  1493  1F43                     	;# 
  1494  1F44                     	;# 
  1495  1F45                     	;# 
  1496  1F46                     	;# 
  1497  1F47                     	;# 
  1498  1F48                     	;# 
  1499  1F49                     	;# 
  1500  1F4A                     	;# 
  1501  1F4E                     	;# 
  1502  1F4F                     	;# 
  1503  1F50                     	;# 
  1504  1F51                     	;# 
  1505  1F52                     	;# 
  1506  1F53                     	;# 
  1507  1F54                     	;# 
  1508  1F55                     	;# 
  1509  1FE4                     	;# 
  1510  1FE5                     	;# 
  1511  1FE6                     	;# 
  1512  1FE7                     	;# 
  1513  1FE8                     	;# 
  1514  1FE8                     	;# 
  1515  1FE9                     	;# 
  1516  1FEA                     	;# 
  1517  1FEB                     	;# 
  1518  1FED                     	;# 
  1519  1FEE                     	;# 
  1520  1FEF                     	;# 
  1521  0000                     	;# 
  1522  0001                     	;# 
  1523  0002                     	;# 
  1524  0003                     	;# 
  1525  0004                     	;# 
  1526  0005                     	;# 
  1527  0006                     	;# 
  1528  0007                     	;# 
  1529  0008                     	;# 
  1530  0009                     	;# 
  1531  000A                     	;# 
  1532  000B                     	;# 
  1533  000C                     	;# 
  1534  000D                     	;# 
  1535  000E                     	;# 
  1536  0012                     	;# 
  1537  0013                     	;# 
  1538  0014                     	;# 
  1539  0018                     	;# 
  1540  0019                     	;# 
  1541  001A                     	;# 
  1542  008C                     	;# 
  1543  008C                     	;# 
  1544  008D                     	;# 
  1545  008E                     	;# 
  1546  008E                     	;# 
  1547  008F                     	;# 
  1548  0090                     	;# 
  1549  0090                     	;# 
  1550  0091                     	;# 
  1551  0092                     	;# 
  1552  0092                     	;# 
  1553  0093                     	;# 
  1554  0094                     	;# 
  1555  0094                     	;# 
  1556  0095                     	;# 
  1557  0096                     	;# 
  1558  0096                     	;# 
  1559  0097                     	;# 
  1560  0098                     	;# 
  1561  0099                     	;# 
  1562  009A                     	;# 
  1563  009B                     	;# 
  1564  009B                     	;# 
  1565  009C                     	;# 
  1566  009D                     	;# 
  1567  009D                     	;# 
  1568  009E                     	;# 
  1569  009F                     	;# 
  1570  010C                     	;# 
  1571  010C                     	;# 
  1572  010D                     	;# 
  1573  010E                     	;# 
  1574  010F                     	;# 
  1575  010F                     	;# 
  1576  0110                     	;# 
  1577  0111                     	;# 
  1578  0112                     	;# 
  1579  0113                     	;# 
  1580  0114                     	;# 
  1581  0115                     	;# 
  1582  0116                     	;# 
  1583  0117                     	;# 
  1584  0118                     	;# 
  1585  0119                     	;# 
  1586  0119                     	;# 
  1587  0119                     	;# 
  1588  011A                     	;# 
  1589  011A                     	;# 
  1590  011A                     	;# 
  1591  011B                     	;# 
  1592  011B                     	;# 
  1593  011B                     	;# 
  1594  011B                     	;# 
  1595  011B                     	;# 
  1596  011C                     	;# 
  1597  011C                     	;# 
  1598  011C                     	;# 
  1599  011D                     	;# 
  1600  011D                     	;# 
  1601  011D                     	;# 
  1602  011E                     	;# 
  1603  011E                     	;# 
  1604  011E                     	;# 
  1605  011F                     	;# 
  1606  011F                     	;# 
  1607  011F                     	;# 
  1608  011F                     	;# 
  1609  011F                     	;# 
  1610  018C                     	;# 
  1611  018D                     	;# 
  1612  018E                     	;# 
  1613  018F                     	;# 
  1614  0190                     	;# 
  1615  0191                     	;# 
  1616  0192                     	;# 
  1617  0196                     	;# 
  1618  0197                     	;# 
  1619  0198                     	;# 
  1620  0199                     	;# 
  1621  019A                     	;# 
  1622  019B                     	;# 
  1623  019C                     	;# 
  1624  020C                     	;# 
  1625  020D                     	;# 
  1626  020E                     	;# 
  1627  020E                     	;# 
  1628  020F                     	;# 
  1629  020F                     	;# 
  1630  0210                     	;# 
  1631  0210                     	;# 
  1632  0211                     	;# 
  1633  0211                     	;# 
  1634  0212                     	;# 
  1635  0213                     	;# 
  1636  0214                     	;# 
  1637  0214                     	;# 
  1638  0215                     	;# 
  1639  0215                     	;# 
  1640  0216                     	;# 
  1641  0216                     	;# 
  1642  0217                     	;# 
  1643  0217                     	;# 
  1644  0218                     	;# 
  1645  0219                     	;# 
  1646  021A                     	;# 
  1647  021A                     	;# 
  1648  021B                     	;# 
  1649  021B                     	;# 
  1650  021C                     	;# 
  1651  021C                     	;# 
  1652  021D                     	;# 
  1653  021D                     	;# 
  1654  021E                     	;# 
  1655  021F                     	;# 
  1656  028C                     	;# 
  1657  028C                     	;# 
  1658  028D                     	;# 
  1659  028D                     	;# 
  1660  028E                     	;# 
  1661  028F                     	;# 
  1662  0290                     	;# 
  1663  0291                     	;# 
  1664  0292                     	;# 
  1665  0292                     	;# 
  1666  0293                     	;# 
  1667  0293                     	;# 
  1668  0294                     	;# 
  1669  0295                     	;# 
  1670  0296                     	;# 
  1671  0297                     	;# 
  1672  0298                     	;# 
  1673  0298                     	;# 
  1674  0299                     	;# 
  1675  0299                     	;# 
  1676  029A                     	;# 
  1677  029B                     	;# 
  1678  029C                     	;# 
  1679  029D                     	;# 
  1680  029F                     	;# 
  1681  030C                     	;# 
  1682  030C                     	;# 
  1683  030D                     	;# 
  1684  030E                     	;# 
  1685  030F                     	;# 
  1686  0310                     	;# 
  1687  0310                     	;# 
  1688  0311                     	;# 
  1689  0312                     	;# 
  1690  0313                     	;# 
  1691  0314                     	;# 
  1692  0314                     	;# 
  1693  0315                     	;# 
  1694  0316                     	;# 
  1695  0317                     	;# 
  1696  0318                     	;# 
  1697  0318                     	;# 
  1698  0319                     	;# 
  1699  031A                     	;# 
  1700  031B                     	;# 
  1701  038C                     	;# 
  1702  038C                     	;# 
  1703  038D                     	;# 
  1704  038E                     	;# 
  1705  0390                     	;# 
  1706  0390                     	;# 
  1707  0391                     	;# 
  1708  0392                     	;# 
  1709  048C                     	;# 
  1710  048C                     	;# 
  1711  048D                     	;# 
  1712  048E                     	;# 
  1713  048F                     	;# 
  1714  048F                     	;# 
  1715  0490                     	;# 
  1716  0491                     	;# 
  1717  0492                     	;# 
  1718  0492                     	;# 
  1719  0493                     	;# 
  1720  0494                     	;# 
  1721  0495                     	;# 
  1722  0495                     	;# 
  1723  0496                     	;# 
  1724  0497                     	;# 
  1725  0498                     	;# 
  1726  0499                     	;# 
  1727  049A                     	;# 
  1728  049B                     	;# 
  1729  049C                     	;# 
  1730  049D                     	;# 
  1731  058C                     	;# 
  1732  058C                     	;# 
  1733  058D                     	;# 
  1734  058E                     	;# 
  1735  058F                     	;# 
  1736  058F                     	;# 
  1737  0590                     	;# 
  1738  0591                     	;# 
  1739  0592                     	;# 
  1740  0593                     	;# 
  1741  059C                     	;# 
  1742  059C                     	;# 
  1743  059D                     	;# 
  1744  059D                     	;# 
  1745  059E                     	;# 
  1746  059F                     	;# 
  1747  060C                     	;# 
  1748  060C                     	;# 
  1749  060D                     	;# 
  1750  060D                     	;# 
  1751  060E                     	;# 
  1752  060F                     	;# 
  1753  0610                     	;# 
  1754  0611                     	;# 
  1755  0612                     	;# 
  1756  0613                     	;# 
  1757  0614                     	;# 
  1758  0616                     	;# 
  1759  0616                     	;# 
  1760  0617                     	;# 
  1761  0617                     	;# 
  1762  0618                     	;# 
  1763  0619                     	;# 
  1764  061A                     	;# 
  1765  061B                     	;# 
  1766  061C                     	;# 
  1767  061D                     	;# 
  1768  061E                     	;# 
  1769  070C                     	;# 
  1770  070D                     	;# 
  1771  070E                     	;# 
  1772  070F                     	;# 
  1773  0710                     	;# 
  1774  0711                     	;# 
  1775  0712                     	;# 
  1776  0713                     	;# 
  1777  0714                     	;# 
  1778  0716                     	;# 
  1779  0717                     	;# 
  1780  0718                     	;# 
  1781  0719                     	;# 
  1782  071A                     	;# 
  1783  071B                     	;# 
  1784  071C                     	;# 
  1785  071D                     	;# 
  1786  071E                     	;# 
  1787  0796                     	;# 
  1788  0797                     	;# 
  1789  0798                     	;# 
  1790  0799                     	;# 
  1791  079A                     	;# 
  1792  079B                     	;# 
  1793  079C                     	;# 
  1794  079D                     	;# 
  1795  080C                     	;# 
  1796  080D                     	;# 
  1797  080E                     	;# 
  1798  080F                     	;# 
  1799  0810                     	;# 
  1800  0811                     	;# 
  1801  0812                     	;# 
  1802  0813                     	;# 
  1803  0814                     	;# 
  1804  081A                     	;# 
  1805  081A                     	;# 
  1806  081B                     	;# 
  1807  081C                     	;# 
  1808  081C                     	;# 
  1809  081D                     	;# 
  1810  081E                     	;# 
  1811  081F                     	;# 
  1812  088C                     	;# 
  1813  088D                     	;# 
  1814  088E                     	;# 
  1815  088F                     	;# 
  1816  0890                     	;# 
  1817  0891                     	;# 
  1818  0892                     	;# 
  1819  0893                     	;# 
  1820  0895                     	;# 
  1821  0896                     	;# 
  1822  0897                     	;# 
  1823  0898                     	;# 
  1824  0899                     	;# 
  1825  089A                     	;# 
  1826  089B                     	;# 
  1827  090C                     	;# 
  1828  090E                     	;# 
  1829  090F                     	;# 
  1830  091F                     	;# 
  1831  098F                     	;# 
  1832  098F                     	;# 
  1833  0990                     	;# 
  1834  0991                     	;# 
  1835  0992                     	;# 
  1836  0993                     	;# 
  1837  0994                     	;# 
  1838  0995                     	;# 
  1839  0996                     	;# 
  1840  0997                     	;# 
  1841  1E0F                     	;# 
  1842  1E10                     	;# 
  1843  1E11                     	;# 
  1844  1E12                     	;# 
  1845  1E13                     	;# 
  1846  1E14                     	;# 
  1847  1E15                     	;# 
  1848  1E16                     	;# 
  1849  1E17                     	;# 
  1850  1E18                     	;# 
  1851  1E19                     	;# 
  1852  1E1A                     	;# 
  1853  1E1B                     	;# 
  1854  1E1C                     	;# 
  1855  1E1D                     	;# 
  1856  1E1E                     	;# 
  1857  1E1F                     	;# 
  1858  1E20                     	;# 
  1859  1E21                     	;# 
  1860  1E22                     	;# 
  1861  1E23                     	;# 
  1862  1E24                     	;# 
  1863  1E25                     	;# 
  1864  1E26                     	;# 
  1865  1E27                     	;# 
  1866  1E28                     	;# 
  1867  1E29                     	;# 
  1868  1E2A                     	;# 
  1869  1E2B                     	;# 
  1870  1E2C                     	;# 
  1871  1E2D                     	;# 
  1872  1E2E                     	;# 
  1873  1E2F                     	;# 
  1874  1E30                     	;# 
  1875  1E31                     	;# 
  1876  1E32                     	;# 
  1877  1E33                     	;# 
  1878  1E34                     	;# 
  1879  1E35                     	;# 
  1880  1E36                     	;# 
  1881  1E37                     	;# 
  1882  1E8F                     	;# 
  1883  1E90                     	;# 
  1884  1E91                     	;# 
  1885  1E92                     	;# 
  1886  1E93                     	;# 
  1887  1E94                     	;# 
  1888  1E95                     	;# 
  1889  1E96                     	;# 
  1890  1E97                     	;# 
  1891  1E9C                     	;# 
  1892  1E9D                     	;# 
  1893  1E9E                     	;# 
  1894  1EA1                     	;# 
  1895  1EA2                     	;# 
  1896  1EA3                     	;# 
  1897  1EA4                     	;# 
  1898  1EA9                     	;# 
  1899  1EAA                     	;# 
  1900  1EB1                     	;# 
  1901  1EB2                     	;# 
  1902  1EB8                     	;# 
  1903  1EB9                     	;# 
  1904  1EBA                     	;# 
  1905  1EBB                     	;# 
  1906  1EBC                     	;# 
  1907  1EBD                     	;# 
  1908  1EBE                     	;# 
  1909  1EC3                     	;# 
  1910  1EC5                     	;# 
  1911  1EC6                     	;# 
  1912  1EC7                     	;# 
  1913  1EC8                     	;# 
  1914  1EC9                     	;# 
  1915  1ECA                     	;# 
  1916  1ECB                     	;# 
  1917  1ECB                     	;# 
  1918  1ECB                     	;# 
  1919  1ECC                     	;# 
  1920  1ECC                     	;# 
  1921  1ECC                     	;# 
  1922  1F10                     	;# 
  1923  1F11                     	;# 
  1924  1F12                     	;# 
  1925  1F14                     	;# 
  1926  1F15                     	;# 
  1927  1F1C                     	;# 
  1928  1F1D                     	;# 
  1929  1F1E                     	;# 
  1930  1F1F                     	;# 
  1931  1F20                     	;# 
  1932  1F21                     	;# 
  1933  1F22                     	;# 
  1934  1F23                     	;# 
  1935  1F24                     	;# 
  1936  1F25                     	;# 
  1937  1F26                     	;# 
  1938  1F27                     	;# 
  1939  1F38                     	;# 
  1940  1F39                     	;# 
  1941  1F3A                     	;# 
  1942  1F3B                     	;# 
  1943  1F3C                     	;# 
  1944  1F3D                     	;# 
  1945  1F3E                     	;# 
  1946  1F3F                     	;# 
  1947  1F43                     	;# 
  1948  1F44                     	;# 
  1949  1F45                     	;# 
  1950  1F46                     	;# 
  1951  1F47                     	;# 
  1952  1F48                     	;# 
  1953  1F49                     	;# 
  1954  1F4A                     	;# 
  1955  1F4E                     	;# 
  1956  1F4F                     	;# 
  1957  1F50                     	;# 
  1958  1F51                     	;# 
  1959  1F52                     	;# 
  1960  1F53                     	;# 
  1961  1F54                     	;# 
  1962  1F55                     	;# 
  1963  1FE4                     	;# 
  1964  1FE5                     	;# 
  1965  1FE6                     	;# 
  1966  1FE7                     	;# 
  1967  1FE8                     	;# 
  1968  1FE8                     	;# 
  1969  1FE9                     	;# 
  1970  1FEA                     	;# 
  1971  1FEB                     	;# 
  1972  1FED                     	;# 
  1973  1FEE                     	;# 
  1974  1FEF                     	;# 
  1975  0000                     	;# 
  1976  0001                     	;# 
  1977  0002                     	;# 
  1978  0003                     	;# 
  1979  0004                     	;# 
  1980  0005                     	;# 
  1981  0006                     	;# 
  1982  0007                     	;# 
  1983  0008                     	;# 
  1984  0009                     	;# 
  1985  000A                     	;# 
  1986  000B                     	;# 
  1987  000C                     	;# 
  1988  000D                     	;# 
  1989  000E                     	;# 
  1990  0012                     	;# 
  1991  0013                     	;# 
  1992  0014                     	;# 
  1993  0018                     	;# 
  1994  0019                     	;# 
  1995  001A                     	;# 
  1996  008C                     	;# 
  1997  008C                     	;# 
  1998  008D                     	;# 
  1999  008E                     	;# 
  2000  008E                     	;# 
  2001  008F                     	;# 
  2002  0090                     	;# 
  2003  0090                     	;# 
  2004  0091                     	;# 
  2005  0092                     	;# 
  2006  0092                     	;# 
  2007  0093                     	;# 
  2008  0094                     	;# 
  2009  0094                     	;# 
  2010  0095                     	;# 
  2011  0096                     	;# 
  2012  0096                     	;# 
  2013  0097                     	;# 
  2014  0098                     	;# 
  2015  0099                     	;# 
  2016  009A                     	;# 
  2017  009B                     	;# 
  2018  009B                     	;# 
  2019  009C                     	;# 
  2020  009D                     	;# 
  2021  009D                     	;# 
  2022  009E                     	;# 
  2023  009F                     	;# 
  2024  010C                     	;# 
  2025  010C                     	;# 
  2026  010D                     	;# 
  2027  010E                     	;# 
  2028  010F                     	;# 
  2029  010F                     	;# 
  2030  0110                     	;# 
  2031  0111                     	;# 
  2032  0112                     	;# 
  2033  0113                     	;# 
  2034  0114                     	;# 
  2035  0115                     	;# 
  2036  0116                     	;# 
  2037  0117                     	;# 
  2038  0118                     	;# 
  2039  0119                     	;# 
  2040  0119                     	;# 
  2041  0119                     	;# 
  2042  011A                     	;# 
  2043  011A                     	;# 
  2044  011A                     	;# 
  2045  011B                     	;# 
  2046  011B                     	;# 
  2047  011B                     	;# 
  2048  011B                     	;# 
  2049  011B                     	;# 
  2050  011C                     	;# 
  2051  011C                     	;# 
  2052  011C                     	;# 
  2053  011D                     	;# 
  2054  011D                     	;# 
  2055  011D                     	;# 
  2056  011E                     	;# 
  2057  011E                     	;# 
  2058  011E                     	;# 
  2059  011F                     	;# 
  2060  011F                     	;# 
  2061  011F                     	;# 
  2062  011F                     	;# 
  2063  011F                     	;# 
  2064  018C                     	;# 
  2065  018D                     	;# 
  2066  018E                     	;# 
  2067  018F                     	;# 
  2068  0190                     	;# 
  2069  0191                     	;# 
  2070  0192                     	;# 
  2071  0196                     	;# 
  2072  0197                     	;# 
  2073  0198                     	;# 
  2074  0199                     	;# 
  2075  019A                     	;# 
  2076  019B                     	;# 
  2077  019C                     	;# 
  2078  020C                     	;# 
  2079  020D                     	;# 
  2080  020E                     	;# 
  2081  020E                     	;# 
  2082  020F                     	;# 
  2083  020F                     	;# 
  2084  0210                     	;# 
  2085  0210                     	;# 
  2086  0211                     	;# 
  2087  0211                     	;# 
  2088  0212                     	;# 
  2089  0213                     	;# 
  2090  0214                     	;# 
  2091  0214                     	;# 
  2092  0215                     	;# 
  2093  0215                     	;# 
  2094  0216                     	;# 
  2095  0216                     	;# 
  2096  0217                     	;# 
  2097  0217                     	;# 
  2098  0218                     	;# 
  2099  0219                     	;# 
  2100  021A                     	;# 
  2101  021A                     	;# 
  2102  021B                     	;# 
  2103  021B                     	;# 
  2104  021C                     	;# 
  2105  021C                     	;# 
  2106  021D                     	;# 
  2107  021D                     	;# 
  2108  021E                     	;# 
  2109  021F                     	;# 
  2110  028C                     	;# 
  2111  028C                     	;# 
  2112  028D                     	;# 
  2113  028D                     	;# 
  2114  028E                     	;# 
  2115  028F                     	;# 
  2116  0290                     	;# 
  2117  0291                     	;# 
  2118  0292                     	;# 
  2119  0292                     	;# 
  2120  0293                     	;# 
  2121  0293                     	;# 
  2122  0294                     	;# 
  2123  0295                     	;# 
  2124  0296                     	;# 
  2125  0297                     	;# 
  2126  0298                     	;# 
  2127  0298                     	;# 
  2128  0299                     	;# 
  2129  0299                     	;# 
  2130  029A                     	;# 
  2131  029B                     	;# 
  2132  029C                     	;# 
  2133  029D                     	;# 
  2134  029F                     	;# 
  2135  030C                     	;# 
  2136  030C                     	;# 
  2137  030D                     	;# 
  2138  030E                     	;# 
  2139  030F                     	;# 
  2140  0310                     	;# 
  2141  0310                     	;# 
  2142  0311                     	;# 
  2143  0312                     	;# 
  2144  0313                     	;# 
  2145  0314                     	;# 
  2146  0314                     	;# 
  2147  0315                     	;# 
  2148  0316                     	;# 
  2149  0317                     	;# 
  2150  0318                     	;# 
  2151  0318                     	;# 
  2152  0319                     	;# 
  2153  031A                     	;# 
  2154  031B                     	;# 
  2155  038C                     	;# 
  2156  038C                     	;# 
  2157  038D                     	;# 
  2158  038E                     	;# 
  2159  0390                     	;# 
  2160  0390                     	;# 
  2161  0391                     	;# 
  2162  0392                     	;# 
  2163  048C                     	;# 
  2164  048C                     	;# 
  2165  048D                     	;# 
  2166  048E                     	;# 
  2167  048F                     	;# 
  2168  048F                     	;# 
  2169  0490                     	;# 
  2170  0491                     	;# 
  2171  0492                     	;# 
  2172  0492                     	;# 
  2173  0493                     	;# 
  2174  0494                     	;# 
  2175  0495                     	;# 
  2176  0495                     	;# 
  2177  0496                     	;# 
  2178  0497                     	;# 
  2179  0498                     	;# 
  2180  0499                     	;# 
  2181  049A                     	;# 
  2182  049B                     	;# 
  2183  049C                     	;# 
  2184  049D                     	;# 
  2185  058C                     	;# 
  2186  058C                     	;# 
  2187  058D                     	;# 
  2188  058E                     	;# 
  2189  058F                     	;# 
  2190  058F                     	;# 
  2191  0590                     	;# 
  2192  0591                     	;# 
  2193  0592                     	;# 
  2194  0593                     	;# 
  2195  059C                     	;# 
  2196  059C                     	;# 
  2197  059D                     	;# 
  2198  059D                     	;# 
  2199  059E                     	;# 
  2200  059F                     	;# 
  2201  060C                     	;# 
  2202  060C                     	;# 
  2203  060D                     	;# 
  2204  060D                     	;# 
  2205  060E                     	;# 
  2206  060F                     	;# 
  2207  0610                     	;# 
  2208  0611                     	;# 
  2209  0612                     	;# 
  2210  0613                     	;# 
  2211  0614                     	;# 
  2212  0616                     	;# 
  2213  0616                     	;# 
  2214  0617                     	;# 
  2215  0617                     	;# 
  2216  0618                     	;# 
  2217  0619                     	;# 
  2218  061A                     	;# 
  2219  061B                     	;# 
  2220  061C                     	;# 
  2221  061D                     	;# 
  2222  061E                     	;# 
  2223  070C                     	;# 
  2224  070D                     	;# 
  2225  070E                     	;# 
  2226  070F                     	;# 
  2227  0710                     	;# 
  2228  0711                     	;# 
  2229  0712                     	;# 
  2230  0713                     	;# 
  2231  0714                     	;# 
  2232  0716                     	;# 
  2233  0717                     	;# 
  2234  0718                     	;# 
  2235  0719                     	;# 
  2236  071A                     	;# 
  2237  071B                     	;# 
  2238  071C                     	;# 
  2239  071D                     	;# 
  2240  071E                     	;# 
  2241  0796                     	;# 
  2242  0797                     	;# 
  2243  0798                     	;# 
  2244  0799                     	;# 
  2245  079A                     	;# 
  2246  079B                     	;# 
  2247  079C                     	;# 
  2248  079D                     	;# 
  2249  080C                     	;# 
  2250  080D                     	;# 
  2251  080E                     	;# 
  2252  080F                     	;# 
  2253  0810                     	;# 
  2254  0811                     	;# 
  2255  0812                     	;# 
  2256  0813                     	;# 
  2257  0814                     	;# 
  2258  081A                     	;# 
  2259  081A                     	;# 
  2260  081B                     	;# 
  2261  081C                     	;# 
  2262  081C                     	;# 
  2263  081D                     	;# 
  2264  081E                     	;# 
  2265  081F                     	;# 
  2266  088C                     	;# 
  2267  088D                     	;# 
  2268  088E                     	;# 
  2269  088F                     	;# 
  2270  0890                     	;# 
  2271  0891                     	;# 
  2272  0892                     	;# 
  2273  0893                     	;# 
  2274  0895                     	;# 
  2275  0896                     	;# 
  2276  0897                     	;# 
  2277  0898                     	;# 
  2278  0899                     	;# 
  2279  089A                     	;# 
  2280  089B                     	;# 
  2281  090C                     	;# 
  2282  090E                     	;# 
  2283  090F                     	;# 
  2284  091F                     	;# 
  2285  098F                     	;# 
  2286  098F                     	;# 
  2287  0990                     	;# 
  2288  0991                     	;# 
  2289  0992                     	;# 
  2290  0993                     	;# 
  2291  0994                     	;# 
  2292  0995                     	;# 
  2293  0996                     	;# 
  2294  0997                     	;# 
  2295  1E0F                     	;# 
  2296  1E10                     	;# 
  2297  1E11                     	;# 
  2298  1E12                     	;# 
  2299  1E13                     	;# 
  2300  1E14                     	;# 
  2301  1E15                     	;# 
  2302  1E16                     	;# 
  2303  1E17                     	;# 
  2304  1E18                     	;# 
  2305  1E19                     	;# 
  2306  1E1A                     	;# 
  2307  1E1B                     	;# 
  2308  1E1C                     	;# 
  2309  1E1D                     	;# 
  2310  1E1E                     	;# 
  2311  1E1F                     	;# 
  2312  1E20                     	;# 
  2313  1E21                     	;# 
  2314  1E22                     	;# 
  2315  1E23                     	;# 
  2316  1E24                     	;# 
  2317  1E25                     	;# 
  2318  1E26                     	;# 
  2319  1E27                     	;# 
  2320  1E28                     	;# 
  2321  1E29                     	;# 
  2322  1E2A                     	;# 
  2323  1E2B                     	;# 
  2324  1E2C                     	;# 
  2325  1E2D                     	;# 
  2326  1E2E                     	;# 
  2327  1E2F                     	;# 
  2328  1E30                     	;# 
  2329  1E31                     	;# 
  2330  1E32                     	;# 
  2331  1E33                     	;# 
  2332  1E34                     	;# 
  2333  1E35                     	;# 
  2334  1E36                     	;# 
  2335  1E37                     	;# 
  2336  1E8F                     	;# 
  2337  1E90                     	;# 
  2338  1E91                     	;# 
  2339  1E92                     	;# 
  2340  1E93                     	;# 
  2341  1E94                     	;# 
  2342  1E95                     	;# 
  2343  1E96                     	;# 
  2344  1E97                     	;# 
  2345  1E9C                     	;# 
  2346  1E9D                     	;# 
  2347  1E9E                     	;# 
  2348  1EA1                     	;# 
  2349  1EA2                     	;# 
  2350  1EA3                     	;# 
  2351  1EA4                     	;# 
  2352  1EA9                     	;# 
  2353  1EAA                     	;# 
  2354  1EB1                     	;# 
  2355  1EB2                     	;# 
  2356  1EB8                     	;# 
  2357  1EB9                     	;# 
  2358  1EBA                     	;# 
  2359  1EBB                     	;# 
  2360  1EBC                     	;# 
  2361  1EBD                     	;# 
  2362  1EBE                     	;# 
  2363  1EC3                     	;# 
  2364  1EC5                     	;# 
  2365  1EC6                     	;# 
  2366  1EC7                     	;# 
  2367  1EC8                     	;# 
  2368  1EC9                     	;# 
  2369  1ECA                     	;# 
  2370  1ECB                     	;# 
  2371  1ECB                     	;# 
  2372  1ECB                     	;# 
  2373  1ECC                     	;# 
  2374  1ECC                     	;# 
  2375  1ECC                     	;# 
  2376  1F10                     	;# 
  2377  1F11                     	;# 
  2378  1F12                     	;# 
  2379  1F14                     	;# 
  2380  1F15                     	;# 
  2381  1F1C                     	;# 
  2382  1F1D                     	;# 
  2383  1F1E                     	;# 
  2384  1F1F                     	;# 
  2385  1F20                     	;# 
  2386  1F21                     	;# 
  2387  1F22                     	;# 
  2388  1F23                     	;# 
  2389  1F24                     	;# 
  2390  1F25                     	;# 
  2391  1F26                     	;# 
  2392  1F27                     	;# 
  2393  1F38                     	;# 
  2394  1F39                     	;# 
  2395  1F3A                     	;# 
  2396  1F3B                     	;# 
  2397  1F3C                     	;# 
  2398  1F3D                     	;# 
  2399  1F3E                     	;# 
  2400  1F3F                     	;# 
  2401  1F43                     	;# 
  2402  1F44                     	;# 
  2403  1F45                     	;# 
  2404  1F46                     	;# 
  2405  1F47                     	;# 
  2406  1F48                     	;# 
  2407  1F49                     	;# 
  2408  1F4A                     	;# 
  2409  1F4E                     	;# 
  2410  1F4F                     	;# 
  2411  1F50                     	;# 
  2412  1F51                     	;# 
  2413  1F52                     	;# 
  2414  1F53                     	;# 
  2415  1F54                     	;# 
  2416  1F55                     	;# 
  2417  1FE4                     	;# 
  2418  1FE5                     	;# 
  2419  1FE6                     	;# 
  2420  1FE7                     	;# 
  2421  1FE8                     	;# 
  2422  1FE8                     	;# 
  2423  1FE9                     	;# 
  2424  1FEA                     	;# 
  2425  1FEB                     	;# 
  2426  1FED                     	;# 
  2427  1FEE                     	;# 
  2428  1FEF                     	;# 
  2429  0000                     	;# 
  2430  0001                     	;# 
  2431  0002                     	;# 
  2432  0003                     	;# 
  2433  0004                     	;# 
  2434  0005                     	;# 
  2435  0006                     	;# 
  2436  0007                     	;# 
  2437  0008                     	;# 
  2438  0009                     	;# 
  2439  000A                     	;# 
  2440  000B                     	;# 
  2441  000C                     	;# 
  2442  000D                     	;# 
  2443  000E                     	;# 
  2444  0012                     	;# 
  2445  0013                     	;# 
  2446  0014                     	;# 
  2447  0018                     	;# 
  2448  0019                     	;# 
  2449  001A                     	;# 
  2450  008C                     	;# 
  2451  008C                     	;# 
  2452  008D                     	;# 
  2453  008E                     	;# 
  2454  008E                     	;# 
  2455  008F                     	;# 
  2456  0090                     	;# 
  2457  0090                     	;# 
  2458  0091                     	;# 
  2459  0092                     	;# 
  2460  0092                     	;# 
  2461  0093                     	;# 
  2462  0094                     	;# 
  2463  0094                     	;# 
  2464  0095                     	;# 
  2465  0096                     	;# 
  2466  0096                     	;# 
  2467  0097                     	;# 
  2468  0098                     	;# 
  2469  0099                     	;# 
  2470  009A                     	;# 
  2471  009B                     	;# 
  2472  009B                     	;# 
  2473  009C                     	;# 
  2474  009D                     	;# 
  2475  009D                     	;# 
  2476  009E                     	;# 
  2477  009F                     	;# 
  2478  010C                     	;# 
  2479  010C                     	;# 
  2480  010D                     	;# 
  2481  010E                     	;# 
  2482  010F                     	;# 
  2483  010F                     	;# 
  2484  0110                     	;# 
  2485  0111                     	;# 
  2486  0112                     	;# 
  2487  0113                     	;# 
  2488  0114                     	;# 
  2489  0115                     	;# 
  2490  0116                     	;# 
  2491  0117                     	;# 
  2492  0118                     	;# 
  2493  0119                     	;# 
  2494  0119                     	;# 
  2495  0119                     	;# 
  2496  011A                     	;# 
  2497  011A                     	;# 
  2498  011A                     	;# 
  2499  011B                     	;# 
  2500  011B                     	;# 
  2501  011B                     	;# 
  2502  011B                     	;# 
  2503  011B                     	;# 
  2504  011C                     	;# 
  2505  011C                     	;# 
  2506  011C                     	;# 
  2507  011D                     	;# 
  2508  011D                     	;# 
  2509  011D                     	;# 
  2510  011E                     	;# 
  2511  011E                     	;# 
  2512  011E                     	;# 
  2513  011F                     	;# 
  2514  011F                     	;# 
  2515  011F                     	;# 
  2516  011F                     	;# 
  2517  011F                     	;# 
  2518  018C                     	;# 
  2519  018D                     	;# 
  2520  018E                     	;# 
  2521  018F                     	;# 
  2522  0190                     	;# 
  2523  0191                     	;# 
  2524  0192                     	;# 
  2525  0196                     	;# 
  2526  0197                     	;# 
  2527  0198                     	;# 
  2528  0199                     	;# 
  2529  019A                     	;# 
  2530  019B                     	;# 
  2531  019C                     	;# 
  2532  020C                     	;# 
  2533  020D                     	;# 
  2534  020E                     	;# 
  2535  020E                     	;# 
  2536  020F                     	;# 
  2537  020F                     	;# 
  2538  0210                     	;# 
  2539  0210                     	;# 
  2540  0211                     	;# 
  2541  0211                     	;# 
  2542  0212                     	;# 
  2543  0213                     	;# 
  2544  0214                     	;# 
  2545  0214                     	;# 
  2546  0215                     	;# 
  2547  0215                     	;# 
  2548  0216                     	;# 
  2549  0216                     	;# 
  2550  0217                     	;# 
  2551  0217                     	;# 
  2552  0218                     	;# 
  2553  0219                     	;# 
  2554  021A                     	;# 
  2555  021A                     	;# 
  2556  021B                     	;# 
  2557  021B                     	;# 
  2558  021C                     	;# 
  2559  021C                     	;# 
  2560  021D                     	;# 
  2561  021D                     	;# 
  2562  021E                     	;# 
  2563  021F                     	;# 
  2564  028C                     	;# 
  2565  028C                     	;# 
  2566  028D                     	;# 
  2567  028D                     	;# 
  2568  028E                     	;# 
  2569  028F                     	;# 
  2570  0290                     	;# 
  2571  0291                     	;# 
  2572  0292                     	;# 
  2573  0292                     	;# 
  2574  0293                     	;# 
  2575  0293                     	;# 
  2576  0294                     	;# 
  2577  0295                     	;# 
  2578  0296                     	;# 
  2579  0297                     	;# 
  2580  0298                     	;# 
  2581  0298                     	;# 
  2582  0299                     	;# 
  2583  0299                     	;# 
  2584  029A                     	;# 
  2585  029B                     	;# 
  2586  029C                     	;# 
  2587  029D                     	;# 
  2588  029F                     	;# 
  2589  030C                     	;# 
  2590  030C                     	;# 
  2591  030D                     	;# 
  2592  030E                     	;# 
  2593  030F                     	;# 
  2594  0310                     	;# 
  2595  0310                     	;# 
  2596  0311                     	;# 
  2597  0312                     	;# 
  2598  0313                     	;# 
  2599  0314                     	;# 
  2600  0314                     	;# 
  2601  0315                     	;# 
  2602  0316                     	;# 
  2603  0317                     	;# 
  2604  0318                     	;# 
  2605  0318                     	;# 
  2606  0319                     	;# 
  2607  031A                     	;# 
  2608  031B                     	;# 
  2609  038C                     	;# 
  2610  038C                     	;# 
  2611  038D                     	;# 
  2612  038E                     	;# 
  2613  0390                     	;# 
  2614  0390                     	;# 
  2615  0391                     	;# 
  2616  0392                     	;# 
  2617  048C                     	;# 
  2618  048C                     	;# 
  2619  048D                     	;# 
  2620  048E                     	;# 
  2621  048F                     	;# 
  2622  048F                     	;# 
  2623  0490                     	;# 
  2624  0491                     	;# 
  2625  0492                     	;# 
  2626  0492                     	;# 
  2627  0493                     	;# 
  2628  0494                     	;# 
  2629  0495                     	;# 
  2630  0495                     	;# 
  2631  0496                     	;# 
  2632  0497                     	;# 
  2633  0498                     	;# 
  2634  0499                     	;# 
  2635  049A                     	;# 
  2636  049B                     	;# 
  2637  049C                     	;# 
  2638  049D                     	;# 
  2639  058C                     	;# 
  2640  058C                     	;# 
  2641  058D                     	;# 
  2642  058E                     	;# 
  2643  058F                     	;# 
  2644  058F                     	;# 
  2645  0590                     	;# 
  2646  0591                     	;# 
  2647  0592                     	;# 
  2648  0593                     	;# 
  2649  059C                     	;# 
  2650  059C                     	;# 
  2651  059D                     	;# 
  2652  059D                     	;# 
  2653  059E                     	;# 
  2654  059F                     	;# 
  2655  060C                     	;# 
  2656  060C                     	;# 
  2657  060D                     	;# 
  2658  060D                     	;# 
  2659  060E                     	;# 
  2660  060F                     	;# 
  2661  0610                     	;# 
  2662  0611                     	;# 
  2663  0612                     	;# 
  2664  0613                     	;# 
  2665  0614                     	;# 
  2666  0616                     	;# 
  2667  0616                     	;# 
  2668  0617                     	;# 
  2669  0617                     	;# 
  2670  0618                     	;# 
  2671  0619                     	;# 
  2672  061A                     	;# 
  2673  061B                     	;# 
  2674  061C                     	;# 
  2675  061D                     	;# 
  2676  061E                     	;# 
  2677  070C                     	;# 
  2678  070D                     	;# 
  2679  070E                     	;# 
  2680  070F                     	;# 
  2681  0710                     	;# 
  2682  0711                     	;# 
  2683  0712                     	;# 
  2684  0713                     	;# 
  2685  0714                     	;# 
  2686  0716                     	;# 
  2687  0717                     	;# 
  2688  0718                     	;# 
  2689  0719                     	;# 
  2690  071A                     	;# 
  2691  071B                     	;# 
  2692  071C                     	;# 
  2693  071D                     	;# 
  2694  071E                     	;# 
  2695  0796                     	;# 
  2696  0797                     	;# 
  2697  0798                     	;# 
  2698  0799                     	;# 
  2699  079A                     	;# 
  2700  079B                     	;# 
  2701  079C                     	;# 
  2702  079D                     	;# 
  2703  080C                     	;# 
  2704  080D                     	;# 
  2705  080E                     	;# 
  2706  080F                     	;# 
  2707  0810                     	;# 
  2708  0811                     	;# 
  2709  0812                     	;# 
  2710  0813                     	;# 
  2711  0814                     	;# 
  2712  081A                     	;# 
  2713  081A                     	;# 
  2714  081B                     	;# 
  2715  081C                     	;# 
  2716  081C                     	;# 
  2717  081D                     	;# 
  2718  081E                     	;# 
  2719  081F                     	;# 
  2720  088C                     	;# 
  2721  088D                     	;# 
  2722  088E                     	;# 
  2723  088F                     	;# 
  2724  0890                     	;# 
  2725  0891                     	;# 
  2726  0892                     	;# 
  2727  0893                     	;# 
  2728  0895                     	;# 
  2729  0896                     	;# 
  2730  0897                     	;# 
  2731  0898                     	;# 
  2732  0899                     	;# 
  2733  089A                     	;# 
  2734  089B                     	;# 
  2735  090C                     	;# 
  2736  090E                     	;# 
  2737  090F                     	;# 
  2738  091F                     	;# 
  2739  098F                     	;# 
  2740  098F                     	;# 
  2741  0990                     	;# 
  2742  0991                     	;# 
  2743  0992                     	;# 
  2744  0993                     	;# 
  2745  0994                     	;# 
  2746  0995                     	;# 
  2747  0996                     	;# 
  2748  0997                     	;# 
  2749  1E0F                     	;# 
  2750  1E10                     	;# 
  2751  1E11                     	;# 
  2752  1E12                     	;# 
  2753  1E13                     	;# 
  2754  1E14                     	;# 
  2755  1E15                     	;# 
  2756  1E16                     	;# 
  2757  1E17                     	;# 
  2758  1E18                     	;# 
  2759  1E19                     	;# 
  2760  1E1A                     	;# 
  2761  1E1B                     	;# 
  2762  1E1C                     	;# 
  2763  1E1D                     	;# 
  2764  1E1E                     	;# 
  2765  1E1F                     	;# 
  2766  1E20                     	;# 
  2767  1E21                     	;# 
  2768  1E22                     	;# 
  2769  1E23                     	;# 
  2770  1E24                     	;# 
  2771  1E25                     	;# 
  2772  1E26                     	;# 
  2773  1E27                     	;# 
  2774  1E28                     	;# 
  2775  1E29                     	;# 
  2776  1E2A                     	;# 
  2777  1E2B                     	;# 
  2778  1E2C                     	;# 
  2779  1E2D                     	;# 
  2780  1E2E                     	;# 
  2781  1E2F                     	;# 
  2782  1E30                     	;# 
  2783  1E31                     	;# 
  2784  1E32                     	;# 
  2785  1E33                     	;# 
  2786  1E34                     	;# 
  2787  1E35                     	;# 
  2788  1E36                     	;# 
  2789  1E37                     	;# 
  2790  1E8F                     	;# 
  2791  1E90                     	;# 
  2792  1E91                     	;# 
  2793  1E92                     	;# 
  2794  1E93                     	;# 
  2795  1E94                     	;# 
  2796  1E95                     	;# 
  2797  1E96                     	;# 
  2798  1E97                     	;# 
  2799  1E9C                     	;# 
  2800  1E9D                     	;# 
  2801  1E9E                     	;# 
  2802  1EA1                     	;# 
  2803  1EA2                     	;# 
  2804  1EA3                     	;# 
  2805  1EA4                     	;# 
  2806  1EA9                     	;# 
  2807  1EAA                     	;# 
  2808  1EB1                     	;# 
  2809  1EB2                     	;# 
  2810  1EB8                     	;# 
  2811  1EB9                     	;# 
  2812  1EBA                     	;# 
  2813  1EBB                     	;# 
  2814  1EBC                     	;# 
  2815  1EBD                     	;# 
  2816  1EBE                     	;# 
  2817  1EC3                     	;# 
  2818  1EC5                     	;# 
  2819  1EC6                     	;# 
  2820  1EC7                     	;# 
  2821  1EC8                     	;# 
  2822  1EC9                     	;# 
  2823  1ECA                     	;# 
  2824  1ECB                     	;# 
  2825  1ECB                     	;# 
  2826  1ECB                     	;# 
  2827  1ECC                     	;# 
  2828  1ECC                     	;# 
  2829  1ECC                     	;# 
  2830  1F10                     	;# 
  2831  1F11                     	;# 
  2832  1F12                     	;# 
  2833  1F14                     	;# 
  2834  1F15                     	;# 
  2835  1F1C                     	;# 
  2836  1F1D                     	;# 
  2837  1F1E                     	;# 
  2838  1F1F                     	;# 
  2839  1F20                     	;# 
  2840  1F21                     	;# 
  2841  1F22                     	;# 
  2842  1F23                     	;# 
  2843  1F24                     	;# 
  2844  1F25                     	;# 
  2845  1F26                     	;# 
  2846  1F27                     	;# 
  2847  1F38                     	;# 
  2848  1F39                     	;# 
  2849  1F3A                     	;# 
  2850  1F3B                     	;# 
  2851  1F3C                     	;# 
  2852  1F3D                     	;# 
  2853  1F3E                     	;# 
  2854  1F3F                     	;# 
  2855  1F43                     	;# 
  2856  1F44                     	;# 
  2857  1F45                     	;# 
  2858  1F46                     	;# 
  2859  1F47                     	;# 
  2860  1F48                     	;# 
  2861  1F49                     	;# 
  2862  1F4A                     	;# 
  2863  1F4E                     	;# 
  2864  1F4F                     	;# 
  2865  1F50                     	;# 
  2866  1F51                     	;# 
  2867  1F52                     	;# 
  2868  1F53                     	;# 
  2869  1F54                     	;# 
  2870  1F55                     	;# 
  2871  1FE4                     	;# 
  2872  1FE5                     	;# 
  2873  1FE6                     	;# 
  2874  1FE7                     	;# 
  2875  1FE8                     	;# 
  2876  1FE8                     	;# 
  2877  1FE9                     	;# 
  2878  1FEA                     	;# 
  2879  1FEB                     	;# 
  2880  1FED                     	;# 
  2881  1FEE                     	;# 
  2882  1FEF                     	;# 
  2883  0000                     	;# 
  2884  0001                     	;# 
  2885  0002                     	;# 
  2886  0003                     	;# 
  2887  0004                     	;# 
  2888  0005                     	;# 
  2889  0006                     	;# 
  2890  0007                     	;# 
  2891  0008                     	;# 
  2892  0009                     	;# 
  2893  000A                     	;# 
  2894  000B                     	;# 
  2895  000C                     	;# 
  2896  000D                     	;# 
  2897  000E                     	;# 
  2898  0012                     	;# 
  2899  0013                     	;# 
  2900  0014                     	;# 
  2901  0018                     	;# 
  2902  0019                     	;# 
  2903  001A                     	;# 
  2904  008C                     	;# 
  2905  008C                     	;# 
  2906  008D                     	;# 
  2907  008E                     	;# 
  2908  008E                     	;# 
  2909  008F                     	;# 
  2910  0090                     	;# 
  2911  0090                     	;# 
  2912  0091                     	;# 
  2913  0092                     	;# 
  2914  0092                     	;# 
  2915  0093                     	;# 
  2916  0094                     	;# 
  2917  0094                     	;# 
  2918  0095                     	;# 
  2919  0096                     	;# 
  2920  0096                     	;# 
  2921  0097                     	;# 
  2922  0098                     	;# 
  2923  0099                     	;# 
  2924  009A                     	;# 
  2925  009B                     	;# 
  2926  009B                     	;# 
  2927  009C                     	;# 
  2928  009D                     	;# 
  2929  009D                     	;# 
  2930  009E                     	;# 
  2931  009F                     	;# 
  2932  010C                     	;# 
  2933  010C                     	;# 
  2934  010D                     	;# 
  2935  010E                     	;# 
  2936  010F                     	;# 
  2937  010F                     	;# 
  2938  0110                     	;# 
  2939  0111                     	;# 
  2940  0112                     	;# 
  2941  0113                     	;# 
  2942  0114                     	;# 
  2943  0115                     	;# 
  2944  0116                     	;# 
  2945  0117                     	;# 
  2946  0118                     	;# 
  2947  0119                     	;# 
  2948  0119                     	;# 
  2949  0119                     	;# 
  2950  011A                     	;# 
  2951  011A                     	;# 
  2952  011A                     	;# 
  2953  011B                     	;# 
  2954  011B                     	;# 
  2955  011B                     	;# 
  2956  011B                     	;# 
  2957  011B                     	;# 
  2958  011C                     	;# 
  2959  011C                     	;# 
  2960  011C                     	;# 
  2961  011D                     	;# 
  2962  011D                     	;# 
  2963  011D                     	;# 
  2964  011E                     	;# 
  2965  011E                     	;# 
  2966  011E                     	;# 
  2967  011F                     	;# 
  2968  011F                     	;# 
  2969  011F                     	;# 
  2970  011F                     	;# 
  2971  011F                     	;# 
  2972  018C                     	;# 
  2973  018D                     	;# 
  2974  018E                     	;# 
  2975  018F                     	;# 
  2976  0190                     	;# 
  2977  0191                     	;# 
  2978  0192                     	;# 
  2979  0196                     	;# 
  2980  0197                     	;# 
  2981  0198                     	;# 
  2982  0199                     	;# 
  2983  019A                     	;# 
  2984  019B                     	;# 
  2985  019C                     	;# 
  2986  020C                     	;# 
  2987  020D                     	;# 
  2988  020E                     	;# 
  2989  020E                     	;# 
  2990  020F                     	;# 
  2991  020F                     	;# 
  2992  0210                     	;# 
  2993  0210                     	;# 
  2994  0211                     	;# 
  2995  0211                     	;# 
  2996  0212                     	;# 
  2997  0213                     	;# 
  2998  0214                     	;# 
  2999  0214                     	;# 
  3000  0215                     	;# 
  3001  0215                     	;# 
  3002  0216                     	;# 
  3003  0216                     	;# 
  3004  0217                     	;# 
  3005  0217                     	;# 
  3006  0218                     	;# 
  3007  0219                     	;# 
  3008  021A                     	;# 
  3009  021A                     	;# 
  3010  021B                     	;# 
  3011  021B                     	;# 
  3012  021C                     	;# 
  3013  021C                     	;# 
  3014  021D                     	;# 
  3015  021D                     	;# 
  3016  021E                     	;# 
  3017  021F                     	;# 
  3018  028C                     	;# 
  3019  028C                     	;# 
  3020  028D                     	;# 
  3021  028D                     	;# 
  3022  028E                     	;# 
  3023  028F                     	;# 
  3024  0290                     	;# 
  3025  0291                     	;# 
  3026  0292                     	;# 
  3027  0292                     	;# 
  3028  0293                     	;# 
  3029  0293                     	;# 
  3030  0294                     	;# 
  3031  0295                     	;# 
  3032  0296                     	;# 
  3033  0297                     	;# 
  3034  0298                     	;# 
  3035  0298                     	;# 
  3036  0299                     	;# 
  3037  0299                     	;# 
  3038  029A                     	;# 
  3039  029B                     	;# 
  3040  029C                     	;# 
  3041  029D                     	;# 
  3042  029F                     	;# 
  3043  030C                     	;# 
  3044  030C                     	;# 
  3045  030D                     	;# 
  3046  030E                     	;# 
  3047  030F                     	;# 
  3048  0310                     	;# 
  3049  0310                     	;# 
  3050  0311                     	;# 
  3051  0312                     	;# 
  3052  0313                     	;# 
  3053  0314                     	;# 
  3054  0314                     	;# 
  3055  0315                     	;# 
  3056  0316                     	;# 
  3057  0317                     	;# 
  3058  0318                     	;# 
  3059  0318                     	;# 
  3060  0319                     	;# 
  3061  031A                     	;# 
  3062  031B                     	;# 
  3063  038C                     	;# 
  3064  038C                     	;# 
  3065  038D                     	;# 
  3066  038E                     	;# 
  3067  0390                     	;# 
  3068  0390                     	;# 
  3069  0391                     	;# 
  3070  0392                     	;# 
  3071  048C                     	;# 
  3072  048C                     	;# 
  3073  048D                     	;# 
  3074  048E                     	;# 
  3075  048F                     	;# 
  3076  048F                     	;# 
  3077  0490                     	;# 
  3078  0491                     	;# 
  3079  0492                     	;# 
  3080  0492                     	;# 
  3081  0493                     	;# 
  3082  0494                     	;# 
  3083  0495                     	;# 
  3084  0495                     	;# 
  3085  0496                     	;# 
  3086  0497                     	;# 
  3087  0498                     	;# 
  3088  0499                     	;# 
  3089  049A                     	;# 
  3090  049B                     	;# 
  3091  049C                     	;# 
  3092  049D                     	;# 
  3093  058C                     	;# 
  3094  058C                     	;# 
  3095  058D                     	;# 
  3096  058E                     	;# 
  3097  058F                     	;# 
  3098  058F                     	;# 
  3099  0590                     	;# 
  3100  0591                     	;# 
  3101  0592                     	;# 
  3102  0593                     	;# 
  3103  059C                     	;# 
  3104  059C                     	;# 
  3105  059D                     	;# 
  3106  059D                     	;# 
  3107  059E                     	;# 
  3108  059F                     	;# 
  3109  060C                     	;# 
  3110  060C                     	;# 
  3111  060D                     	;# 
  3112  060D                     	;# 
  3113  060E                     	;# 
  3114  060F                     	;# 
  3115  0610                     	;# 
  3116  0611                     	;# 
  3117  0612                     	;# 
  3118  0613                     	;# 
  3119  0614                     	;# 
  3120  0616                     	;# 
  3121  0616                     	;# 
  3122  0617                     	;# 
  3123  0617                     	;# 
  3124  0618                     	;# 
  3125  0619                     	;# 
  3126  061A                     	;# 
  3127  061B                     	;# 
  3128  061C                     	;# 
  3129  061D                     	;# 
  3130  061E                     	;# 
  3131  070C                     	;# 
  3132  070D                     	;# 
  3133  070E                     	;# 
  3134  070F                     	;# 
  3135  0710                     	;# 
  3136  0711                     	;# 
  3137  0712                     	;# 
  3138  0713                     	;# 
  3139  0714                     	;# 
  3140  0716                     	;# 
  3141  0717                     	;# 
  3142  0718                     	;# 
  3143  0719                     	;# 
  3144  071A                     	;# 
  3145  071B                     	;# 
  3146  071C                     	;# 
  3147  071D                     	;# 
  3148  071E                     	;# 
  3149  0796                     	;# 
  3150  0797                     	;# 
  3151  0798                     	;# 
  3152  0799                     	;# 
  3153  079A                     	;# 
  3154  079B                     	;# 
  3155  079C                     	;# 
  3156  079D                     	;# 
  3157  080C                     	;# 
  3158  080D                     	;# 
  3159  080E                     	;# 
  3160  080F                     	;# 
  3161  0810                     	;# 
  3162  0811                     	;# 
  3163  0812                     	;# 
  3164  0813                     	;# 
  3165  0814                     	;# 
  3166  081A                     	;# 
  3167  081A                     	;# 
  3168  081B                     	;# 
  3169  081C                     	;# 
  3170  081C                     	;# 
  3171  081D                     	;# 
  3172  081E                     	;# 
  3173  081F                     	;# 
  3174  088C                     	;# 
  3175  088D                     	;# 
  3176  088E                     	;# 
  3177  088F                     	;# 
  3178  0890                     	;# 
  3179  0891                     	;# 
  3180  0892                     	;# 
  3181  0893                     	;# 
  3182  0895                     	;# 
  3183  0896                     	;# 
  3184  0897                     	;# 
  3185  0898                     	;# 
  3186  0899                     	;# 
  3187  089A                     	;# 
  3188  089B                     	;# 
  3189  090C                     	;# 
  3190  090E                     	;# 
  3191  090F                     	;# 
  3192  091F                     	;# 
  3193  098F                     	;# 
  3194  098F                     	;# 
  3195  0990                     	;# 
  3196  0991                     	;# 
  3197  0992                     	;# 
  3198  0993                     	;# 
  3199  0994                     	;# 
  3200  0995                     	;# 
  3201  0996                     	;# 
  3202  0997                     	;# 
  3203  1E0F                     	;# 
  3204  1E10                     	;# 
  3205  1E11                     	;# 
  3206  1E12                     	;# 
  3207  1E13                     	;# 
  3208  1E14                     	;# 
  3209  1E15                     	;# 
  3210  1E16                     	;# 
  3211  1E17                     	;# 
  3212  1E18                     	;# 
  3213  1E19                     	;# 
  3214  1E1A                     	;# 
  3215  1E1B                     	;# 
  3216  1E1C                     	;# 
  3217  1E1D                     	;# 
  3218  1E1E                     	;# 
  3219  1E1F                     	;# 
  3220  1E20                     	;# 
  3221  1E21                     	;# 
  3222  1E22                     	;# 
  3223  1E23                     	;# 
  3224  1E24                     	;# 
  3225  1E25                     	;# 
  3226  1E26                     	;# 
  3227  1E27                     	;# 
  3228  1E28                     	;# 
  3229  1E29                     	;# 
  3230  1E2A                     	;# 
  3231  1E2B                     	;# 
  3232  1E2C                     	;# 
  3233  1E2D                     	;# 
  3234  1E2E                     	;# 
  3235  1E2F                     	;# 
  3236  1E30                     	;# 
  3237  1E31                     	;# 
  3238  1E32                     	;# 
  3239  1E33                     	;# 
  3240  1E34                     	;# 
  3241  1E35                     	;# 
  3242  1E36                     	;# 
  3243  1E37                     	;# 
  3244  1E8F                     	;# 
  3245  1E90                     	;# 
  3246  1E91                     	;# 
  3247  1E92                     	;# 
  3248  1E93                     	;# 
  3249  1E94                     	;# 
  3250  1E95                     	;# 
  3251  1E96                     	;# 
  3252  1E97                     	;# 
  3253  1E9C                     	;# 
  3254  1E9D                     	;# 
  3255  1E9E                     	;# 
  3256  1EA1                     	;# 
  3257  1EA2                     	;# 
  3258  1EA3                     	;# 
  3259  1EA4                     	;# 
  3260  1EA9                     	;# 
  3261  1EAA                     	;# 
  3262  1EB1                     	;# 
  3263  1EB2                     	;# 
  3264  1EB8                     	;# 
  3265  1EB9                     	;# 
  3266  1EBA                     	;# 
  3267  1EBB                     	;# 
  3268  1EBC                     	;# 
  3269  1EBD                     	;# 
  3270  1EBE                     	;# 
  3271  1EC3                     	;# 
  3272  1EC5                     	;# 
  3273  1EC6                     	;# 
  3274  1EC7                     	;# 
  3275  1EC8                     	;# 
  3276  1EC9                     	;# 
  3277  1ECA                     	;# 
  3278  1ECB                     	;# 
  3279  1ECB                     	;# 
  3280  1ECB                     	;# 
  3281  1ECC                     	;# 
  3282  1ECC                     	;# 
  3283  1ECC                     	;# 
  3284  1F10                     	;# 
  3285  1F11                     	;# 
  3286  1F12                     	;# 
  3287  1F14                     	;# 
  3288  1F15                     	;# 
  3289  1F1C                     	;# 
  3290  1F1D                     	;# 
  3291  1F1E                     	;# 
  3292  1F1F                     	;# 
  3293  1F20                     	;# 
  3294  1F21                     	;# 
  3295  1F22                     	;# 
  3296  1F23                     	;# 
  3297  1F24                     	;# 
  3298  1F25                     	;# 
  3299  1F26                     	;# 
  3300  1F27                     	;# 
  3301  1F38                     	;# 
  3302  1F39                     	;# 
  3303  1F3A                     	;# 
  3304  1F3B                     	;# 
  3305  1F3C                     	;# 
  3306  1F3D                     	;# 
  3307  1F3E                     	;# 
  3308  1F3F                     	;# 
  3309  1F43                     	;# 
  3310  1F44                     	;# 
  3311  1F45                     	;# 
  3312  1F46                     	;# 
  3313  1F47                     	;# 
  3314  1F48                     	;# 
  3315  1F49                     	;# 
  3316  1F4A                     	;# 
  3317  1F4E                     	;# 
  3318  1F4F                     	;# 
  3319  1F50                     	;# 
  3320  1F51                     	;# 
  3321  1F52                     	;# 
  3322  1F53                     	;# 
  3323  1F54                     	;# 
  3324  1F55                     	;# 
  3325  1FE4                     	;# 
  3326  1FE5                     	;# 
  3327  1FE6                     	;# 
  3328  1FE7                     	;# 
  3329  1FE8                     	;# 
  3330  1FE8                     	;# 
  3331  1FE9                     	;# 
  3332  1FEA                     	;# 
  3333  1FEB                     	;# 
  3334  1FED                     	;# 
  3335  1FEE                     	;# 
  3336  1FEF                     	;# 
  3337  0000                     	;# 
  3338  0001                     	;# 
  3339  0002                     	;# 
  3340  0003                     	;# 
  3341  0004                     	;# 
  3342  0005                     	;# 
  3343  0006                     	;# 
  3344  0007                     	;# 
  3345  0008                     	;# 
  3346  0009                     	;# 
  3347  000A                     	;# 
  3348  000B                     	;# 
  3349  000C                     	;# 
  3350  000D                     	;# 
  3351  000E                     	;# 
  3352  0012                     	;# 
  3353  0013                     	;# 
  3354  0014                     	;# 
  3355  0018                     	;# 
  3356  0019                     	;# 
  3357  001A                     	;# 
  3358  008C                     	;# 
  3359  008C                     	;# 
  3360  008D                     	;# 
  3361  008E                     	;# 
  3362  008E                     	;# 
  3363  008F                     	;# 
  3364  0090                     	;# 
  3365  0090                     	;# 
  3366  0091                     	;# 
  3367  0092                     	;# 
  3368  0092                     	;# 
  3369  0093                     	;# 
  3370  0094                     	;# 
  3371  0094                     	;# 
  3372  0095                     	;# 
  3373  0096                     	;# 
  3374  0096                     	;# 
  3375  0097                     	;# 
  3376  0098                     	;# 
  3377  0099                     	;# 
  3378  009A                     	;# 
  3379  009B                     	;# 
  3380  009B                     	;# 
  3381  009C                     	;# 
  3382  009D                     	;# 
  3383  009D                     	;# 
  3384  009E                     	;# 
  3385  009F                     	;# 
  3386  010C                     	;# 
  3387  010C                     	;# 
  3388  010D                     	;# 
  3389  010E                     	;# 
  3390  010F                     	;# 
  3391  010F                     	;# 
  3392  0110                     	;# 
  3393  0111                     	;# 
  3394  0112                     	;# 
  3395  0113                     	;# 
  3396  0114                     	;# 
  3397  0115                     	;# 
  3398  0116                     	;# 
  3399  0117                     	;# 
  3400  0118                     	;# 
  3401  0119                     	;# 
  3402  0119                     	;# 
  3403  0119                     	;# 
  3404  011A                     	;# 
  3405  011A                     	;# 
  3406  011A                     	;# 
  3407  011B                     	;# 
  3408  011B                     	;# 
  3409  011B                     	;# 
  3410  011B                     	;# 
  3411  011B                     	;# 
  3412  011C                     	;# 
  3413  011C                     	;# 
  3414  011C                     	;# 
  3415  011D                     	;# 
  3416  011D                     	;# 
  3417  011D                     	;# 
  3418  011E                     	;# 
  3419  011E                     	;# 
  3420  011E                     	;# 
  3421  011F                     	;# 
  3422  011F                     	;# 
  3423  011F                     	;# 
  3424  011F                     	;# 
  3425  011F                     	;# 
  3426  018C                     	;# 
  3427  018D                     	;# 
  3428  018E                     	;# 
  3429  018F                     	;# 
  3430  0190                     	;# 
  3431  0191                     	;# 
  3432  0192                     	;# 
  3433  0196                     	;# 
  3434  0197                     	;# 
  3435  0198                     	;# 
  3436  0199                     	;# 
  3437  019A                     	;# 
  3438  019B                     	;# 
  3439  019C                     	;# 
  3440  020C                     	;# 
  3441  020D                     	;# 
  3442  020E                     	;# 
  3443  020E                     	;# 
  3444  020F                     	;# 
  3445  020F                     	;# 
  3446  0210                     	;# 
  3447  0210                     	;# 
  3448  0211                     	;# 
  3449  0211                     	;# 
  3450  0212                     	;# 
  3451  0213                     	;# 
  3452  0214                     	;# 
  3453  0214                     	;# 
  3454  0215                     	;# 
  3455  0215                     	;# 
  3456  0216                     	;# 
  3457  0216                     	;# 
  3458  0217                     	;# 
  3459  0217                     	;# 
  3460  0218                     	;# 
  3461  0219                     	;# 
  3462  021A                     	;# 
  3463  021A                     	;# 
  3464  021B                     	;# 
  3465  021B                     	;# 
  3466  021C                     	;# 
  3467  021C                     	;# 
  3468  021D                     	;# 
  3469  021D                     	;# 
  3470  021E                     	;# 
  3471  021F                     	;# 
  3472  028C                     	;# 
  3473  028C                     	;# 
  3474  028D                     	;# 
  3475  028D                     	;# 
  3476  028E                     	;# 
  3477  028F                     	;# 
  3478  0290                     	;# 
  3479  0291                     	;# 
  3480  0292                     	;# 
  3481  0292                     	;# 
  3482  0293                     	;# 
  3483  0293                     	;# 
  3484  0294                     	;# 
  3485  0295                     	;# 
  3486  0296                     	;# 
  3487  0297                     	;# 
  3488  0298                     	;# 
  3489  0298                     	;# 
  3490  0299                     	;# 
  3491  0299                     	;# 
  3492  029A                     	;# 
  3493  029B                     	;# 
  3494  029C                     	;# 
  3495  029D                     	;# 
  3496  029F                     	;# 
  3497  030C                     	;# 
  3498  030C                     	;# 
  3499  030D                     	;# 
  3500  030E                     	;# 
  3501  030F                     	;# 
  3502  0310                     	;# 
  3503  0310                     	;# 
  3504  0311                     	;# 
  3505  0312                     	;# 
  3506  0313                     	;# 
  3507  0314                     	;# 
  3508  0314                     	;# 
  3509  0315                     	;# 
  3510  0316                     	;# 
  3511  0317                     	;# 
  3512  0318                     	;# 
  3513  0318                     	;# 
  3514  0319                     	;# 
  3515  031A                     	;# 
  3516  031B                     	;# 
  3517  038C                     	;# 
  3518  038C                     	;# 
  3519  038D                     	;# 
  3520  038E                     	;# 
  3521  0390                     	;# 
  3522  0390                     	;# 
  3523  0391                     	;# 
  3524  0392                     	;# 
  3525  048C                     	;# 
  3526  048C                     	;# 
  3527  048D                     	;# 
  3528  048E                     	;# 
  3529  048F                     	;# 
  3530  048F                     	;# 
  3531  0490                     	;# 
  3532  0491                     	;# 
  3533  0492                     	;# 
  3534  0492                     	;# 
  3535  0493                     	;# 
  3536  0494                     	;# 
  3537  0495                     	;# 
  3538  0495                     	;# 
  3539  0496                     	;# 
  3540  0497                     	;# 
  3541  0498                     	;# 
  3542  0499                     	;# 
  3543  049A                     	;# 
  3544  049B                     	;# 
  3545  049C                     	;# 
  3546  049D                     	;# 
  3547  058C                     	;# 
  3548  058C                     	;# 
  3549  058D                     	;# 
  3550  058E                     	;# 
  3551  058F                     	;# 
  3552  058F                     	;# 
  3553  0590                     	;# 
  3554  0591                     	;# 
  3555  0592                     	;# 
  3556  0593                     	;# 
  3557  059C                     	;# 
  3558  059C                     	;# 
  3559  059D                     	;# 
  3560  059D                     	;# 
  3561  059E                     	;# 
  3562  059F                     	;# 
  3563  060C                     	;# 
  3564  060C                     	;# 
  3565  060D                     	;# 
  3566  060D                     	;# 
  3567  060E                     	;# 
  3568  060F                     	;# 
  3569  0610                     	;# 
  3570  0611                     	;# 
  3571  0612                     	;# 
  3572  0613                     	;# 
  3573  0614                     	;# 
  3574  0616                     	;# 
  3575  0616                     	;# 
  3576  0617                     	;# 
  3577  0617                     	;# 
  3578  0618                     	;# 
  3579  0619                     	;# 
  3580  061A                     	;# 
  3581  061B                     	;# 
  3582  061C                     	;# 
  3583  061D                     	;# 
  3584  061E                     	;# 
  3585  070C                     	;# 
  3586  070D                     	;# 
  3587  070E                     	;# 
  3588  070F                     	;# 
  3589  0710                     	;# 
  3590  0711                     	;# 
  3591  0712                     	;# 
  3592  0713                     	;# 
  3593  0714                     	;# 
  3594  0716                     	;# 
  3595  0717                     	;# 
  3596  0718                     	;# 
  3597  0719                     	;# 
  3598  071A                     	;# 
  3599  071B                     	;# 
  3600  071C                     	;# 
  3601  071D                     	;# 
  3602  071E                     	;# 
  3603  0796                     	;# 
  3604  0797                     	;# 
  3605  0798                     	;# 
  3606  0799                     	;# 
  3607  079A                     	;# 
  3608  079B                     	;# 
  3609  079C                     	;# 
  3610  079D                     	;# 
  3611  080C                     	;# 
  3612  080D                     	;# 
  3613  080E                     	;# 
  3614  080F                     	;# 
  3615  0810                     	;# 
  3616  0811                     	;# 
  3617  0812                     	;# 
  3618  0813                     	;# 
  3619  0814                     	;# 
  3620  081A                     	;# 
  3621  081A                     	;# 
  3622  081B                     	;# 
  3623  081C                     	;# 
  3624  081C                     	;# 
  3625  081D                     	;# 
  3626  081E                     	;# 
  3627  081F                     	;# 
  3628  088C                     	;# 
  3629  088D                     	;# 
  3630  088E                     	;# 
  3631  088F                     	;# 
  3632  0890                     	;# 
  3633  0891                     	;# 
  3634  0892                     	;# 
  3635  0893                     	;# 
  3636  0895                     	;# 
  3637  0896                     	;# 
  3638  0897                     	;# 
  3639  0898                     	;# 
  3640  0899                     	;# 
  3641  089A                     	;# 
  3642  089B                     	;# 
  3643  090C                     	;# 
  3644  090E                     	;# 
  3645  090F                     	;# 
  3646  091F                     	;# 
  3647  098F                     	;# 
  3648  098F                     	;# 
  3649  0990                     	;# 
  3650  0991                     	;# 
  3651  0992                     	;# 
  3652  0993                     	;# 
  3653  0994                     	;# 
  3654  0995                     	;# 
  3655  0996                     	;# 
  3656  0997                     	;# 
  3657  1E0F                     	;# 
  3658  1E10                     	;# 
  3659  1E11                     	;# 
  3660  1E12                     	;# 
  3661  1E13                     	;# 
  3662  1E14                     	;# 
  3663  1E15                     	;# 
  3664  1E16                     	;# 
  3665  1E17                     	;# 
  3666  1E18                     	;# 
  3667  1E19                     	;# 
  3668  1E1A                     	;# 
  3669  1E1B                     	;# 
  3670  1E1C                     	;# 
  3671  1E1D                     	;# 
  3672  1E1E                     	;# 
  3673  1E1F                     	;# 
  3674  1E20                     	;# 
  3675  1E21                     	;# 
  3676  1E22                     	;# 
  3677  1E23                     	;# 
  3678  1E24                     	;# 
  3679  1E25                     	;# 
  3680  1E26                     	;# 
  3681  1E27                     	;# 
  3682  1E28                     	;# 
  3683  1E29                     	;# 
  3684  1E2A                     	;# 
  3685  1E2B                     	;# 
  3686  1E2C                     	;# 
  3687  1E2D                     	;# 
  3688  1E2E                     	;# 
  3689  1E2F                     	;# 
  3690  1E30                     	;# 
  3691  1E31                     	;# 
  3692  1E32                     	;# 
  3693  1E33                     	;# 
  3694  1E34                     	;# 
  3695  1E35                     	;# 
  3696  1E36                     	;# 
  3697  1E37                     	;# 
  3698  1E8F                     	;# 
  3699  1E90                     	;# 
  3700  1E91                     	;# 
  3701  1E92                     	;# 
  3702  1E93                     	;# 
  3703  1E94                     	;# 
  3704  1E95                     	;# 
  3705  1E96                     	;# 
  3706  1E97                     	;# 
  3707  1E9C                     	;# 
  3708  1E9D                     	;# 
  3709  1E9E                     	;# 
  3710  1EA1                     	;# 
  3711  1EA2                     	;# 
  3712  1EA3                     	;# 
  3713  1EA4                     	;# 
  3714  1EA9                     	;# 
  3715  1EAA                     	;# 
  3716  1EB1                     	;# 
  3717  1EB2                     	;# 
  3718  1EB8                     	;# 
  3719  1EB9                     	;# 
  3720  1EBA                     	;# 
  3721  1EBB                     	;# 
  3722  1EBC                     	;# 
  3723  1EBD                     	;# 
  3724  1EBE                     	;# 
  3725  1EC3                     	;# 
  3726  1EC5                     	;# 
  3727  1EC6                     	;# 
  3728  1EC7                     	;# 
  3729  1EC8                     	;# 
  3730  1EC9                     	;# 
  3731  1ECA                     	;# 
  3732  1ECB                     	;# 
  3733  1ECB                     	;# 
  3734  1ECB                     	;# 
  3735  1ECC                     	;# 
  3736  1ECC                     	;# 
  3737  1ECC                     	;# 
  3738  1F10                     	;# 
  3739  1F11                     	;# 
  3740  1F12                     	;# 
  3741  1F14                     	;# 
  3742  1F15                     	;# 
  3743  1F1C                     	;# 
  3744  1F1D                     	;# 
  3745  1F1E                     	;# 
  3746  1F1F                     	;# 
  3747  1F20                     	;# 
  3748  1F21                     	;# 
  3749  1F22                     	;# 
  3750  1F23                     	;# 
  3751  1F24                     	;# 
  3752  1F25                     	;# 
  3753  1F26                     	;# 
  3754  1F27                     	;# 
  3755  1F38                     	;# 
  3756  1F39                     	;# 
  3757  1F3A                     	;# 
  3758  1F3B                     	;# 
  3759  1F3C                     	;# 
  3760  1F3D                     	;# 
  3761  1F3E                     	;# 
  3762  1F3F                     	;# 
  3763  1F43                     	;# 
  3764  1F44                     	;# 
  3765  1F45                     	;# 
  3766  1F46                     	;# 
  3767  1F47                     	;# 
  3768  1F48                     	;# 
  3769  1F49                     	;# 
  3770  1F4A                     	;# 
  3771  1F4E                     	;# 
  3772  1F4F                     	;# 
  3773  1F50                     	;# 
  3774  1F51                     	;# 
  3775  1F52                     	;# 
  3776  1F53                     	;# 
  3777  1F54                     	;# 
  3778  1F55                     	;# 
  3779  1FE4                     	;# 
  3780  1FE5                     	;# 
  3781  1FE6                     	;# 
  3782  1FE7                     	;# 
  3783  1FE8                     	;# 
  3784  1FE8                     	;# 
  3785  1FE9                     	;# 
  3786  1FEA                     	;# 
  3787  1FEB                     	;# 
  3788  1FED                     	;# 
  3789  1FEE                     	;# 
  3790  1FEF                     	;# 
  3791  0000                     	;# 
  3792  0001                     	;# 
  3793  0002                     	;# 
  3794  0003                     	;# 
  3795  0004                     	;# 
  3796  0005                     	;# 
  3797  0006                     	;# 
  3798  0007                     	;# 
  3799  0008                     	;# 
  3800  0009                     	;# 
  3801  000A                     	;# 
  3802  000B                     	;# 
  3803  000C                     	;# 
  3804  000D                     	;# 
  3805  000E                     	;# 
  3806  0012                     	;# 
  3807  0013                     	;# 
  3808  0014                     	;# 
  3809  0018                     	;# 
  3810  0019                     	;# 
  3811  001A                     	;# 
  3812  008C                     	;# 
  3813  008C                     	;# 
  3814  008D                     	;# 
  3815  008E                     	;# 
  3816  008E                     	;# 
  3817  008F                     	;# 
  3818  0090                     	;# 
  3819  0090                     	;# 
  3820  0091                     	;# 
  3821  0092                     	;# 
  3822  0092                     	;# 
  3823  0093                     	;# 
  3824  0094                     	;# 
  3825  0094                     	;# 
  3826  0095                     	;# 
  3827  0096                     	;# 
  3828  0096                     	;# 
  3829  0097                     	;# 
  3830  0098                     	;# 
  3831  0099                     	;# 
  3832  009A                     	;# 
  3833  009B                     	;# 
  3834  009B                     	;# 
  3835  009C                     	;# 
  3836  009D                     	;# 
  3837  009D                     	;# 
  3838  009E                     	;# 
  3839  009F                     	;# 
  3840  010C                     	;# 
  3841  010C                     	;# 
  3842  010D                     	;# 
  3843  010E                     	;# 
  3844  010F                     	;# 
  3845  010F                     	;# 
  3846  0110                     	;# 
  3847  0111                     	;# 
  3848  0112                     	;# 
  3849  0113                     	;# 
  3850  0114                     	;# 
  3851  0115                     	;# 
  3852  0116                     	;# 
  3853  0117                     	;# 
  3854  0118                     	;# 
  3855  0119                     	;# 
  3856  0119                     	;# 
  3857  0119                     	;# 
  3858  011A                     	;# 
  3859  011A                     	;# 
  3860  011A                     	;# 
  3861  011B                     	;# 
  3862  011B                     	;# 
  3863  011B                     	;# 
  3864  011B                     	;# 
  3865  011B                     	;# 
  3866  011C                     	;# 
  3867  011C                     	;# 
  3868  011C                     	;# 
  3869  011D                     	;# 
  3870  011D                     	;# 
  3871  011D                     	;# 
  3872  011E                     	;# 
  3873  011E                     	;# 
  3874  011E                     	;# 
  3875  011F                     	;# 
  3876  011F                     	;# 
  3877  011F                     	;# 
  3878  011F                     	;# 
  3879  011F                     	;# 
  3880  018C                     	;# 
  3881  018D                     	;# 
  3882  018E                     	;# 
  3883  018F                     	;# 
  3884  0190                     	;# 
  3885  0191                     	;# 
  3886  0192                     	;# 
  3887  0196                     	;# 
  3888  0197                     	;# 
  3889  0198                     	;# 
  3890  0199                     	;# 
  3891  019A                     	;# 
  3892  019B                     	;# 
  3893  019C                     	;# 
  3894  020C                     	;# 
  3895  020D                     	;# 
  3896  020E                     	;# 
  3897  020E                     	;# 
  3898  020F                     	;# 
  3899  020F                     	;# 
  3900  0210                     	;# 
  3901  0210                     	;# 
  3902  0211                     	;# 
  3903  0211                     	;# 
  3904  0212                     	;# 
  3905  0213                     	;# 
  3906  0214                     	;# 
  3907  0214                     	;# 
  3908  0215                     	;# 
  3909  0215                     	;# 
  3910  0216                     	;# 
  3911  0216                     	;# 
  3912  0217                     	;# 
  3913  0217                     	;# 
  3914  0218                     	;# 
  3915  0219                     	;# 
  3916  021A                     	;# 
  3917  021A                     	;# 
  3918  021B                     	;# 
  3919  021B                     	;# 
  3920  021C                     	;# 
  3921  021C                     	;# 
  3922  021D                     	;# 
  3923  021D                     	;# 
  3924  021E                     	;# 
  3925  021F                     	;# 
  3926  028C                     	;# 
  3927  028C                     	;# 
  3928  028D                     	;# 
  3929  028D                     	;# 
  3930  028E                     	;# 
  3931  028F                     	;# 
  3932  0290                     	;# 
  3933  0291                     	;# 
  3934  0292                     	;# 
  3935  0292                     	;# 
  3936  0293                     	;# 
  3937  0293                     	;# 
  3938  0294                     	;# 
  3939  0295                     	;# 
  3940  0296                     	;# 
  3941  0297                     	;# 
  3942  0298                     	;# 
  3943  0298                     	;# 
  3944  0299                     	;# 
  3945  0299                     	;# 
  3946  029A                     	;# 
  3947  029B                     	;# 
  3948  029C                     	;# 
  3949  029D                     	;# 
  3950  029F                     	;# 
  3951  030C                     	;# 
  3952  030C                     	;# 
  3953  030D                     	;# 
  3954  030E                     	;# 
  3955  030F                     	;# 
  3956  0310                     	;# 
  3957  0310                     	;# 
  3958  0311                     	;# 
  3959  0312                     	;# 
  3960  0313                     	;# 
  3961  0314                     	;# 
  3962  0314                     	;# 
  3963  0315                     	;# 
  3964  0316                     	;# 
  3965  0317                     	;# 
  3966  0318                     	;# 
  3967  0318                     	;# 
  3968  0319                     	;# 
  3969  031A                     	;# 
  3970  031B                     	;# 
  3971  038C                     	;# 
  3972  038C                     	;# 
  3973  038D                     	;# 
  3974  038E                     	;# 
  3975  0390                     	;# 
  3976  0390                     	;# 
  3977  0391                     	;# 
  3978  0392                     	;# 
  3979  048C                     	;# 
  3980  048C                     	;# 
  3981  048D                     	;# 
  3982  048E                     	;# 
  3983  048F                     	;# 
  3984  048F                     	;# 
  3985  0490                     	;# 
  3986  0491                     	;# 
  3987  0492                     	;# 
  3988  0492                     	;# 
  3989  0493                     	;# 
  3990  0494                     	;# 
  3991  0495                     	;# 
  3992  0495                     	;# 
  3993  0496                     	;# 
  3994  0497                     	;# 
  3995  0498                     	;# 
  3996  0499                     	;# 
  3997  049A                     	;# 
  3998  049B                     	;# 
  3999  049C                     	;# 
  4000  049D                     	;# 
  4001  058C                     	;# 
  4002  058C                     	;# 
  4003  058D                     	;# 
  4004  058E                     	;# 
  4005  058F                     	;# 
  4006  058F                     	;# 
  4007  0590                     	;# 
  4008  0591                     	;# 
  4009  0592                     	;# 
  4010  0593                     	;# 
  4011  059C                     	;# 
  4012  059C                     	;# 
  4013  059D                     	;# 
  4014  059D                     	;# 
  4015  059E                     	;# 
  4016  059F                     	;# 
  4017  060C                     	;# 
  4018  060C                     	;# 
  4019  060D                     	;# 
  4020  060D                     	;# 
  4021  060E                     	;# 
  4022  060F                     	;# 
  4023  0610                     	;# 
  4024  0611                     	;# 
  4025  0612                     	;# 
  4026  0613                     	;# 
  4027  0614                     	;# 
  4028  0616                     	;# 
  4029  0616                     	;# 
  4030  0617                     	;# 
  4031  0617                     	;# 
  4032  0618                     	;# 
  4033  0619                     	;# 
  4034  061A                     	;# 
  4035  061B                     	;# 
  4036  061C                     	;# 
  4037  061D                     	;# 
  4038  061E                     	;# 
  4039  070C                     	;# 
  4040  070D                     	;# 
  4041  070E                     	;# 
  4042  070F                     	;# 
  4043  0710                     	;# 
  4044  0711                     	;# 
  4045  0712                     	;# 
  4046  0713                     	;# 
  4047  0714                     	;# 
  4048  0716                     	;# 
  4049  0717                     	;# 
  4050  0718                     	;# 
  4051  0719                     	;# 
  4052  071A                     	;# 
  4053  071B                     	;# 
  4054  071C                     	;# 
  4055  071D                     	;# 
  4056  071E                     	;# 
  4057  0796                     	;# 
  4058  0797                     	;# 
  4059  0798                     	;# 
  4060  0799                     	;# 
  4061  079A                     	;# 
  4062  079B                     	;# 
  4063  079C                     	;# 
  4064  079D                     	;# 
  4065  080C                     	;# 
  4066  080D                     	;# 
  4067  080E                     	;# 
  4068  080F                     	;# 
  4069  0810                     	;# 
  4070  0811                     	;# 
  4071  0812                     	;# 
  4072  0813                     	;# 
  4073  0814                     	;# 
  4074  081A                     	;# 
  4075  081A                     	;# 
  4076  081B                     	;# 
  4077  081C                     	;# 
  4078  081C                     	;# 
  4079  081D                     	;# 
  4080  081E                     	;# 
  4081  081F                     	;# 
  4082  088C                     	;# 
  4083  088D                     	;# 
  4084  088E                     	;# 
  4085  088F                     	;# 
  4086  0890                     	;# 
  4087  0891                     	;# 
  4088  0892                     	;# 
  4089  0893                     	;# 
  4090  0895                     	;# 
  4091  0896                     	;# 
  4092  0897                     	;# 
  4093  0898                     	;# 
  4094  0899                     	;# 
  4095  089A                     	;# 
  4096  089B                     	;# 
  4097  090C                     	;# 
  4098  090E                     	;# 
  4099  090F                     	;# 
  4100  091F                     	;# 
  4101  098F                     	;# 
  4102  098F                     	;# 
  4103  0990                     	;# 
  4104  0991                     	;# 
  4105  0992                     	;# 
  4106  0993                     	;# 
  4107  0994                     	;# 
  4108  0995                     	;# 
  4109  0996                     	;# 
  4110  0997                     	;# 
  4111  1E0F                     	;# 
  4112  1E10                     	;# 
  4113  1E11                     	;# 
  4114  1E12                     	;# 
  4115  1E13                     	;# 
  4116  1E14                     	;# 
  4117  1E15                     	;# 
  4118  1E16                     	;# 
  4119  1E17                     	;# 
  4120  1E18                     	;# 
  4121  1E19                     	;# 
  4122  1E1A                     	;# 
  4123  1E1B                     	;# 
  4124  1E1C                     	;# 
  4125  1E1D                     	;# 
  4126  1E1E                     	;# 
  4127  1E1F                     	;# 
  4128  1E20                     	;# 
  4129  1E21                     	;# 
  4130  1E22                     	;# 
  4131  1E23                     	;# 
  4132  1E24                     	;# 
  4133  1E25                     	;# 
  4134  1E26                     	;# 
  4135  1E27                     	;# 
  4136  1E28                     	;# 
  4137  1E29                     	;# 
  4138  1E2A                     	;# 
  4139  1E2B                     	;# 
  4140  1E2C                     	;# 
  4141  1E2D                     	;# 
  4142  1E2E                     	;# 
  4143  1E2F                     	;# 
  4144  1E30                     	;# 
  4145  1E31                     	;# 
  4146  1E32                     	;# 
  4147  1E33                     	;# 
  4148  1E34                     	;# 
  4149  1E35                     	;# 
  4150  1E36                     	;# 
  4151  1E37                     	;# 
  4152  1E8F                     	;# 
  4153  1E90                     	;# 
  4154  1E91                     	;# 
  4155  1E92                     	;# 
  4156  1E93                     	;# 
  4157  1E94                     	;# 
  4158  1E95                     	;# 
  4159  1E96                     	;# 
  4160  1E97                     	;# 
  4161  1E9C                     	;# 
  4162  1E9D                     	;# 
  4163  1E9E                     	;# 
  4164  1EA1                     	;# 
  4165  1EA2                     	;# 
  4166  1EA3                     	;# 
  4167  1EA4                     	;# 
  4168  1EA9                     	;# 
  4169  1EAA                     	;# 
  4170  1EB1                     	;# 
  4171  1EB2                     	;# 
  4172  1EB8                     	;# 
  4173  1EB9                     	;# 
  4174  1EBA                     	;# 
  4175  1EBB                     	;# 
  4176  1EBC                     	;# 
  4177  1EBD                     	;# 
  4178  1EBE                     	;# 
  4179  1EC3                     	;# 
  4180  1EC5                     	;# 
  4181  1EC6                     	;# 
  4182  1EC7                     	;# 
  4183  1EC8                     	;# 
  4184  1EC9                     	;# 
  4185  1ECA                     	;# 
  4186  1ECB                     	;# 
  4187  1ECB                     	;# 
  4188  1ECB                     	;# 
  4189  1ECC                     	;# 
  4190  1ECC                     	;# 
  4191  1ECC                     	;# 
  4192  1F10                     	;# 
  4193  1F11                     	;# 
  4194  1F12                     	;# 
  4195  1F14                     	;# 
  4196  1F15                     	;# 
  4197  1F1C                     	;# 
  4198  1F1D                     	;# 
  4199  1F1E                     	;# 
  4200  1F1F                     	;# 
  4201  1F20                     	;# 
  4202  1F21                     	;# 
  4203  1F22                     	;# 
  4204  1F23                     	;# 
  4205  1F24                     	;# 
  4206  1F25                     	;# 
  4207  1F26                     	;# 
  4208  1F27                     	;# 
  4209  1F38                     	;# 
  4210  1F39                     	;# 
  4211  1F3A                     	;# 
  4212  1F3B                     	;# 
  4213  1F3C                     	;# 
  4214  1F3D                     	;# 
  4215  1F3E                     	;# 
  4216  1F3F                     	;# 
  4217  1F43                     	;# 
  4218  1F44                     	;# 
  4219  1F45                     	;# 
  4220  1F46                     	;# 
  4221  1F47                     	;# 
  4222  1F48                     	;# 
  4223  1F49                     	;# 
  4224  1F4A                     	;# 
  4225  1F4E                     	;# 
  4226  1F4F                     	;# 
  4227  1F50                     	;# 
  4228  1F51                     	;# 
  4229  1F52                     	;# 
  4230  1F53                     	;# 
  4231  1F54                     	;# 
  4232  1F55                     	;# 
  4233  1FE4                     	;# 
  4234  1FE5                     	;# 
  4235  1FE6                     	;# 
  4236  1FE7                     	;# 
  4237  1FE8                     	;# 
  4238  1FE8                     	;# 
  4239  1FE9                     	;# 
  4240  1FEA                     	;# 
  4241  1FEB                     	;# 
  4242  1FED                     	;# 
  4243  1FEE                     	;# 
  4244  1FEF                     	;# 
  4245  0000                     	;# 
  4246  0001                     	;# 
  4247  0002                     	;# 
  4248  0003                     	;# 
  4249  0004                     	;# 
  4250  0005                     	;# 
  4251  0006                     	;# 
  4252  0007                     	;# 
  4253  0008                     	;# 
  4254  0009                     	;# 
  4255  000A                     	;# 
  4256  000B                     	;# 
  4257  000C                     	;# 
  4258  000D                     	;# 
  4259  000E                     	;# 
  4260  0012                     	;# 
  4261  0013                     	;# 
  4262  0014                     	;# 
  4263  0018                     	;# 
  4264  0019                     	;# 
  4265  001A                     	;# 
  4266  008C                     	;# 
  4267  008C                     	;# 
  4268  008D                     	;# 
  4269  008E                     	;# 
  4270  008E                     	;# 
  4271  008F                     	;# 
  4272  0090                     	;# 
  4273  0090                     	;# 
  4274  0091                     	;# 
  4275  0092                     	;# 
  4276  0092                     	;# 
  4277  0093                     	;# 
  4278  0094                     	;# 
  4279  0094                     	;# 
  4280  0095                     	;# 
  4281  0096                     	;# 
  4282  0096                     	;# 
  4283  0097                     	;# 
  4284  0098                     	;# 
  4285  0099                     	;# 
  4286  009A                     	;# 
  4287  009B                     	;# 
  4288  009B                     	;# 
  4289  009C                     	;# 
  4290  009D                     	;# 
  4291  009D                     	;# 
  4292  009E                     	;# 
  4293  009F                     	;# 
  4294  010C                     	;# 
  4295  010C                     	;# 
  4296  010D                     	;# 
  4297  010E                     	;# 
  4298  010F                     	;# 
  4299  010F                     	;# 
  4300  0110                     	;# 
  4301  0111                     	;# 
  4302  0112                     	;# 
  4303  0113                     	;# 
  4304  0114                     	;# 
  4305  0115                     	;# 
  4306  0116                     	;# 
  4307  0117                     	;# 
  4308  0118                     	;# 
  4309  0119                     	;# 
  4310  0119                     	;# 
  4311  0119                     	;# 
  4312  011A                     	;# 
  4313  011A                     	;# 
  4314  011A                     	;# 
  4315  011B                     	;# 
  4316  011B                     	;# 
  4317  011B                     	;# 
  4318  011B                     	;# 
  4319  011B                     	;# 
  4320  011C                     	;# 
  4321  011C                     	;# 
  4322  011C                     	;# 
  4323  011D                     	;# 
  4324  011D                     	;# 
  4325  011D                     	;# 
  4326  011E                     	;# 
  4327  011E                     	;# 
  4328  011E                     	;# 
  4329  011F                     	;# 
  4330  011F                     	;# 
  4331  011F                     	;# 
  4332  011F                     	;# 
  4333  011F                     	;# 
  4334  018C                     	;# 
  4335  018D                     	;# 
  4336  018E                     	;# 
  4337  018F                     	;# 
  4338  0190                     	;# 
  4339  0191                     	;# 
  4340  0192                     	;# 
  4341  0196                     	;# 
  4342  0197                     	;# 
  4343  0198                     	;# 
  4344  0199                     	;# 
  4345  019A                     	;# 
  4346  019B                     	;# 
  4347  019C                     	;# 
  4348  020C                     	;# 
  4349  020D                     	;# 
  4350  020E                     	;# 
  4351  020E                     	;# 
  4352  020F                     	;# 
  4353  020F                     	;# 
  4354  0210                     	;# 
  4355  0210                     	;# 
  4356  0211                     	;# 
  4357  0211                     	;# 
  4358  0212                     	;# 
  4359  0213                     	;# 
  4360  0214                     	;# 
  4361  0214                     	;# 
  4362  0215                     	;# 
  4363  0215                     	;# 
  4364  0216                     	;# 
  4365  0216                     	;# 
  4366  0217                     	;# 
  4367  0217                     	;# 
  4368  0218                     	;# 
  4369  0219                     	;# 
  4370  021A                     	;# 
  4371  021A                     	;# 
  4372  021B                     	;# 
  4373  021B                     	;# 
  4374  021C                     	;# 
  4375  021C                     	;# 
  4376  021D                     	;# 
  4377  021D                     	;# 
  4378  021E                     	;# 
  4379  021F                     	;# 
  4380  028C                     	;# 
  4381  028C                     	;# 
  4382  028D                     	;# 
  4383  028D                     	;# 
  4384  028E                     	;# 
  4385  028F                     	;# 
  4386  0290                     	;# 
  4387  0291                     	;# 
  4388  0292                     	;# 
  4389  0292                     	;# 
  4390  0293                     	;# 
  4391  0293                     	;# 
  4392  0294                     	;# 
  4393  0295                     	;# 
  4394  0296                     	;# 
  4395  0297                     	;# 
  4396  0298                     	;# 
  4397  0298                     	;# 
  4398  0299                     	;# 
  4399  0299                     	;# 
  4400  029A                     	;# 
  4401  029B                     	;# 
  4402  029C                     	;# 
  4403  029D                     	;# 
  4404  029F                     	;# 
  4405  030C                     	;# 
  4406  030C                     	;# 
  4407  030D                     	;# 
  4408  030E                     	;# 
  4409  030F                     	;# 
  4410  0310                     	;# 
  4411  0310                     	;# 
  4412  0311                     	;# 
  4413  0312                     	;# 
  4414  0313                     	;# 
  4415  0314                     	;# 
  4416  0314                     	;# 
  4417  0315                     	;# 
  4418  0316                     	;# 
  4419  0317                     	;# 
  4420  0318                     	;# 
  4421  0318                     	;# 
  4422  0319                     	;# 
  4423  031A                     	;# 
  4424  031B                     	;# 
  4425  038C                     	;# 
  4426  038C                     	;# 
  4427  038D                     	;# 
  4428  038E                     	;# 
  4429  0390                     	;# 
  4430  0390                     	;# 
  4431  0391                     	;# 
  4432  0392                     	;# 
  4433  048C                     	;# 
  4434  048C                     	;# 
  4435  048D                     	;# 
  4436  048E                     	;# 
  4437  048F                     	;# 
  4438  048F                     	;# 
  4439  0490                     	;# 
  4440  0491                     	;# 
  4441  0492                     	;# 
  4442  0492                     	;# 
  4443  0493                     	;# 
  4444  0494                     	;# 
  4445  0495                     	;# 
  4446  0495                     	;# 
  4447  0496                     	;# 
  4448  0497                     	;# 
  4449  0498                     	;# 
  4450  0499                     	;# 
  4451  049A                     	;# 
  4452  049B                     	;# 
  4453  049C                     	;# 
  4454  049D                     	;# 
  4455  058C                     	;# 
  4456  058C                     	;# 
  4457  058D                     	;# 
  4458  058E                     	;# 
  4459  058F                     	;# 
  4460  058F                     	;# 
  4461  0590                     	;# 
  4462  0591                     	;# 
  4463  0592                     	;# 
  4464  0593                     	;# 
  4465  059C                     	;# 
  4466  059C                     	;# 
  4467  059D                     	;# 
  4468  059D                     	;# 
  4469  059E                     	;# 
  4470  059F                     	;# 
  4471  060C                     	;# 
  4472  060C                     	;# 
  4473  060D                     	;# 
  4474  060D                     	;# 
  4475  060E                     	;# 
  4476  060F                     	;# 
  4477  0610                     	;# 
  4478  0611                     	;# 
  4479  0612                     	;# 
  4480  0613                     	;# 
  4481  0614                     	;# 
  4482  0616                     	;# 
  4483  0616                     	;# 
  4484  0617                     	;# 
  4485  0617                     	;# 
  4486  0618                     	;# 
  4487  0619                     	;# 
  4488  061A                     	;# 
  4489  061B                     	;# 
  4490  061C                     	;# 
  4491  061D                     	;# 
  4492  061E                     	;# 
  4493  070C                     	;# 
  4494  070D                     	;# 
  4495  070E                     	;# 
  4496  070F                     	;# 
  4497  0710                     	;# 
  4498  0711                     	;# 
  4499  0712                     	;# 
  4500  0713                     	;# 
  4501  0714                     	;# 
  4502  0716                     	;# 
  4503  0717                     	;# 
  4504  0718                     	;# 
  4505  0719                     	;# 
  4506  071A                     	;# 
  4507  071B                     	;# 
  4508  071C                     	;# 
  4509  071D                     	;# 
  4510  071E                     	;# 
  4511  0796                     	;# 
  4512  0797                     	;# 
  4513  0798                     	;# 
  4514  0799                     	;# 
  4515  079A                     	;# 
  4516  079B                     	;# 
  4517  079C                     	;# 
  4518  079D                     	;# 
  4519  080C                     	;# 
  4520  080D                     	;# 
  4521  080E                     	;# 
  4522  080F                     	;# 
  4523  0810                     	;# 
  4524  0811                     	;# 
  4525  0812                     	;# 
  4526  0813                     	;# 
  4527  0814                     	;# 
  4528  081A                     	;# 
  4529  081A                     	;# 
  4530  081B                     	;# 
  4531  081C                     	;# 
  4532  081C                     	;# 
  4533  081D                     	;# 
  4534  081E                     	;# 
  4535  081F                     	;# 
  4536  088C                     	;# 
  4537  088D                     	;# 
  4538  088E                     	;# 
  4539  088F                     	;# 
  4540  0890                     	;# 
  4541  0891                     	;# 
  4542  0892                     	;# 
  4543  0893                     	;# 
  4544  0895                     	;# 
  4545  0896                     	;# 
  4546  0897                     	;# 
  4547  0898                     	;# 
  4548  0899                     	;# 
  4549  089A                     	;# 
  4550  089B                     	;# 
  4551  090C                     	;# 
  4552  090E                     	;# 
  4553  090F                     	;# 
  4554  091F                     	;# 
  4555  098F                     	;# 
  4556  098F                     	;# 
  4557  0990                     	;# 
  4558  0991                     	;# 
  4559  0992                     	;# 
  4560  0993                     	;# 
  4561  0994                     	;# 
  4562  0995                     	;# 
  4563  0996                     	;# 
  4564  0997                     	;# 
  4565  1E0F                     	;# 
  4566  1E10                     	;# 
  4567  1E11                     	;# 
  4568  1E12                     	;# 
  4569  1E13                     	;# 
  4570  1E14                     	;# 
  4571  1E15                     	;# 
  4572  1E16                     	;# 
  4573  1E17                     	;# 
  4574  1E18                     	;# 
  4575  1E19                     	;# 
  4576  1E1A                     	;# 
  4577  1E1B                     	;# 
  4578  1E1C                     	;# 
  4579  1E1D                     	;# 
  4580  1E1E                     	;# 
  4581  1E1F                     	;# 
  4582  1E20                     	;# 
  4583  1E21                     	;# 
  4584  1E22                     	;# 
  4585  1E23                     	;# 
  4586  1E24                     	;# 
  4587  1E25                     	;# 
  4588  1E26                     	;# 
  4589  1E27                     	;# 
  4590  1E28                     	;# 
  4591  1E29                     	;# 
  4592  1E2A                     	;# 
  4593  1E2B                     	;# 
  4594  1E2C                     	;# 
  4595  1E2D                     	;# 
  4596  1E2E                     	;# 
  4597  1E2F                     	;# 
  4598  1E30                     	;# 
  4599  1E31                     	;# 
  4600  1E32                     	;# 
  4601  1E33                     	;# 
  4602  1E34                     	;# 
  4603  1E35                     	;# 
  4604  1E36                     	;# 
  4605  1E37                     	;# 
  4606  1E8F                     	;# 
  4607  1E90                     	;# 
  4608  1E91                     	;# 
  4609  1E92                     	;# 
  4610  1E93                     	;# 
  4611  1E94                     	;# 
  4612  1E95                     	;# 
  4613  1E96                     	;# 
  4614  1E97                     	;# 
  4615  1E9C                     	;# 
  4616  1E9D                     	;# 
  4617  1E9E                     	;# 
  4618  1EA1                     	;# 
  4619  1EA2                     	;# 
  4620  1EA3                     	;# 
  4621  1EA4                     	;# 
  4622  1EA9                     	;# 
  4623  1EAA                     	;# 
  4624  1EB1                     	;# 
  4625  1EB2                     	;# 
  4626  1EB8                     	;# 
  4627  1EB9                     	;# 
  4628  1EBA                     	;# 
  4629  1EBB                     	;# 
  4630  1EBC                     	;# 
  4631  1EBD                     	;# 
  4632  1EBE                     	;# 
  4633  1EC3                     	;# 
  4634  1EC5                     	;# 
  4635  1EC6                     	;# 
  4636  1EC7                     	;# 
  4637  1EC8                     	;# 
  4638  1EC9                     	;# 
  4639  1ECA                     	;# 
  4640  1ECB                     	;# 
  4641  1ECB                     	;# 
  4642  1ECB                     	;# 
  4643  1ECC                     	;# 
  4644  1ECC                     	;# 
  4645  1ECC                     	;# 
  4646  1F10                     	;# 
  4647  1F11                     	;# 
  4648  1F12                     	;# 
  4649  1F14                     	;# 
  4650  1F15                     	;# 
  4651  1F1C                     	;# 
  4652  1F1D                     	;# 
  4653  1F1E                     	;# 
  4654  1F1F                     	;# 
  4655  1F20                     	;# 
  4656  1F21                     	;# 
  4657  1F22                     	;# 
  4658  1F23                     	;# 
  4659  1F24                     	;# 
  4660  1F25                     	;# 
  4661  1F26                     	;# 
  4662  1F27                     	;# 
  4663  1F38                     	;# 
  4664  1F39                     	;# 
  4665  1F3A                     	;# 
  4666  1F3B                     	;# 
  4667  1F3C                     	;# 
  4668  1F3D                     	;# 
  4669  1F3E                     	;# 
  4670  1F3F                     	;# 
  4671  1F43                     	;# 
  4672  1F44                     	;# 
  4673  1F45                     	;# 
  4674  1F46                     	;# 
  4675  1F47                     	;# 
  4676  1F48                     	;# 
  4677  1F49                     	;# 
  4678  1F4A                     	;# 
  4679  1F4E                     	;# 
  4680  1F4F                     	;# 
  4681  1F50                     	;# 
  4682  1F51                     	;# 
  4683  1F52                     	;# 
  4684  1F53                     	;# 
  4685  1F54                     	;# 
  4686  1F55                     	;# 
  4687  1FE4                     	;# 
  4688  1FE5                     	;# 
  4689  1FE6                     	;# 
  4690  1FE7                     	;# 
  4691  1FE8                     	;# 
  4692  1FE8                     	;# 
  4693  1FE9                     	;# 
  4694  1FEA                     	;# 
  4695  1FEB                     	;# 
  4696  1FED                     	;# 
  4697  1FEE                     	;# 
  4698  1FEF                     	;# 
  4699  0000                     	;# 
  4700  0001                     	;# 
  4701  0002                     	;# 
  4702  0003                     	;# 
  4703  0004                     	;# 
  4704  0005                     	;# 
  4705  0006                     	;# 
  4706  0007                     	;# 
  4707  0008                     	;# 
  4708  0009                     	;# 
  4709  000A                     	;# 
  4710  000B                     	;# 
  4711  000C                     	;# 
  4712  000D                     	;# 
  4713  000E                     	;# 
  4714  0012                     	;# 
  4715  0013                     	;# 
  4716  0014                     	;# 
  4717  0018                     	;# 
  4718  0019                     	;# 
  4719  001A                     	;# 
  4720  008C                     	;# 
  4721  008C                     	;# 
  4722  008D                     	;# 
  4723  008E                     	;# 
  4724  008E                     	;# 
  4725  008F                     	;# 
  4726  0090                     	;# 
  4727  0090                     	;# 
  4728  0091                     	;# 
  4729  0092                     	;# 
  4730  0092                     	;# 
  4731  0093                     	;# 
  4732  0094                     	;# 
  4733  0094                     	;# 
  4734  0095                     	;# 
  4735  0096                     	;# 
  4736  0096                     	;# 
  4737  0097                     	;# 
  4738  0098                     	;# 
  4739  0099                     	;# 
  4740  009A                     	;# 
  4741  009B                     	;# 
  4742  009B                     	;# 
  4743  009C                     	;# 
  4744  009D                     	;# 
  4745  009D                     	;# 
  4746  009E                     	;# 
  4747  009F                     	;# 
  4748  010C                     	;# 
  4749  010C                     	;# 
  4750  010D                     	;# 
  4751  010E                     	;# 
  4752  010F                     	;# 
  4753  010F                     	;# 
  4754  0110                     	;# 
  4755  0111                     	;# 
  4756  0112                     	;# 
  4757  0113                     	;# 
  4758  0114                     	;# 
  4759  0115                     	;# 
  4760  0116                     	;# 
  4761  0117                     	;# 
  4762  0118                     	;# 
  4763  0119                     	;# 
  4764  0119                     	;# 
  4765  0119                     	;# 
  4766  011A                     	;# 
  4767  011A                     	;# 
  4768  011A                     	;# 
  4769  011B                     	;# 
  4770  011B                     	;# 
  4771  011B                     	;# 
  4772  011B                     	;# 
  4773  011B                     	;# 
  4774  011C                     	;# 
  4775  011C                     	;# 
  4776  011C                     	;# 
  4777  011D                     	;# 
  4778  011D                     	;# 
  4779  011D                     	;# 
  4780  011E                     	;# 
  4781  011E                     	;# 
  4782  011E                     	;# 
  4783  011F                     	;# 
  4784  011F                     	;# 
  4785  011F                     	;# 
  4786  011F                     	;# 
  4787  011F                     	;# 
  4788  018C                     	;# 
  4789  018D                     	;# 
  4790  018E                     	;# 
  4791  018F                     	;# 
  4792  0190                     	;# 
  4793  0191                     	;# 
  4794  0192                     	;# 
  4795  0196                     	;# 
  4796  0197                     	;# 
  4797  0198                     	;# 
  4798  0199                     	;# 
  4799  019A                     	;# 
  4800  019B                     	;# 
  4801  019C                     	;# 
  4802  020C                     	;# 
  4803  020D                     	;# 
  4804  020E                     	;# 
  4805  020E                     	;# 
  4806  020F                     	;# 
  4807  020F                     	;# 
  4808  0210                     	;# 
  4809  0210                     	;# 
  4810  0211                     	;# 
  4811  0211                     	;# 
  4812  0212                     	;# 
  4813  0213                     	;# 
  4814  0214                     	;# 
  4815  0214                     	;# 
  4816  0215                     	;# 
  4817  0215                     	;# 
  4818  0216                     	;# 
  4819  0216                     	;# 
  4820  0217                     	;# 
  4821  0217                     	;# 
  4822  0218                     	;# 
  4823  0219                     	;# 
  4824  021A                     	;# 
  4825  021A                     	;# 
  4826  021B                     	;# 
  4827  021B                     	;# 
  4828  021C                     	;# 
  4829  021C                     	;# 
  4830  021D                     	;# 
  4831  021D                     	;# 
  4832  021E                     	;# 
  4833  021F                     	;# 
  4834  028C                     	;# 
  4835  028C                     	;# 
  4836  028D                     	;# 
  4837  028D                     	;# 
  4838  028E                     	;# 
  4839  028F                     	;# 
  4840  0290                     	;# 
  4841  0291                     	;# 
  4842  0292                     	;# 
  4843  0292                     	;# 
  4844  0293                     	;# 
  4845  0293                     	;# 
  4846  0294                     	;# 
  4847  0295                     	;# 
  4848  0296                     	;# 
  4849  0297                     	;# 
  4850  0298                     	;# 
  4851  0298                     	;# 
  4852  0299                     	;# 
  4853  0299                     	;# 
  4854  029A                     	;# 
  4855  029B                     	;# 
  4856  029C                     	;# 
  4857  029D                     	;# 
  4858  029F                     	;# 
  4859  030C                     	;# 
  4860  030C                     	;# 
  4861  030D                     	;# 
  4862  030E                     	;# 
  4863  030F                     	;# 
  4864  0310                     	;# 
  4865  0310                     	;# 
  4866  0311                     	;# 
  4867  0312                     	;# 
  4868  0313                     	;# 
  4869  0314                     	;# 
  4870  0314                     	;# 
  4871  0315                     	;# 
  4872  0316                     	;# 
  4873  0317                     	;# 
  4874  0318                     	;# 
  4875  0318                     	;# 
  4876  0319                     	;# 
  4877  031A                     	;# 
  4878  031B                     	;# 
  4879  038C                     	;# 
  4880  038C                     	;# 
  4881  038D                     	;# 
  4882  038E                     	;# 
  4883  0390                     	;# 
  4884  0390                     	;# 
  4885  0391                     	;# 
  4886  0392                     	;# 
  4887  048C                     	;# 
  4888  048C                     	;# 
  4889  048D                     	;# 
  4890  048E                     	;# 
  4891  048F                     	;# 
  4892  048F                     	;# 
  4893  0490                     	;# 
  4894  0491                     	;# 
  4895  0492                     	;# 
  4896  0492                     	;# 
  4897  0493                     	;# 
  4898  0494                     	;# 
  4899  0495                     	;# 
  4900  0495                     	;# 
  4901  0496                     	;# 
  4902  0497                     	;# 
  4903  0498                     	;# 
  4904  0499                     	;# 
  4905  049A                     	;# 
  4906  049B                     	;# 
  4907  049C                     	;# 
  4908  049D                     	;# 
  4909  058C                     	;# 
  4910  058C                     	;# 
  4911  058D                     	;# 
  4912  058E                     	;# 
  4913  058F                     	;# 
  4914  058F                     	;# 
  4915  0590                     	;# 
  4916  0591                     	;# 
  4917  0592                     	;# 
  4918  0593                     	;# 
  4919  059C                     	;# 
  4920  059C                     	;# 
  4921  059D                     	;# 
  4922  059D                     	;# 
  4923  059E                     	;# 
  4924  059F                     	;# 
  4925  060C                     	;# 
  4926  060C                     	;# 
  4927  060D                     	;# 
  4928  060D                     	;# 
  4929  060E                     	;# 
  4930  060F                     	;# 
  4931  0610                     	;# 
  4932  0611                     	;# 
  4933  0612                     	;# 
  4934  0613                     	;# 
  4935  0614                     	;# 
  4936  0616                     	;# 
  4937  0616                     	;# 
  4938  0617                     	;# 
  4939  0617                     	;# 
  4940  0618                     	;# 
  4941  0619                     	;# 
  4942  061A                     	;# 
  4943  061B                     	;# 
  4944  061C                     	;# 
  4945  061D                     	;# 
  4946  061E                     	;# 
  4947  070C                     	;# 
  4948  070D                     	;# 
  4949  070E                     	;# 
  4950  070F                     	;# 
  4951  0710                     	;# 
  4952  0711                     	;# 
  4953  0712                     	;# 
  4954  0713                     	;# 
  4955  0714                     	;# 
  4956  0716                     	;# 
  4957  0717                     	;# 
  4958  0718                     	;# 
  4959  0719                     	;# 
  4960  071A                     	;# 
  4961  071B                     	;# 
  4962  071C                     	;# 
  4963  071D                     	;# 
  4964  071E                     	;# 
  4965  0796                     	;# 
  4966  0797                     	;# 
  4967  0798                     	;# 
  4968  0799                     	;# 
  4969  079A                     	;# 
  4970  079B                     	;# 
  4971  079C                     	;# 
  4972  079D                     	;# 
  4973  080C                     	;# 
  4974  080D                     	;# 
  4975  080E                     	;# 
  4976  080F                     	;# 
  4977  0810                     	;# 
  4978  0811                     	;# 
  4979  0812                     	;# 
  4980  0813                     	;# 
  4981  0814                     	;# 
  4982  081A                     	;# 
  4983  081A                     	;# 
  4984  081B                     	;# 
  4985  081C                     	;# 
  4986  081C                     	;# 
  4987  081D                     	;# 
  4988  081E                     	;# 
  4989  081F                     	;# 
  4990  088C                     	;# 
  4991  088D                     	;# 
  4992  088E                     	;# 
  4993  088F                     	;# 
  4994  0890                     	;# 
  4995  0891                     	;# 
  4996  0892                     	;# 
  4997  0893                     	;# 
  4998  0895                     	;# 
  4999  0896                     	;# 
  5000  0897                     	;# 
  5001  0898                     	;# 
  5002  0899                     	;# 
  5003  089A                     	;# 
  5004  089B                     	;# 
  5005  090C                     	;# 
  5006  090E                     	;# 
  5007  090F                     	;# 
  5008  091F                     	;# 
  5009  098F                     	;# 
  5010  098F                     	;# 
  5011  0990                     	;# 
  5012  0991                     	;# 
  5013  0992                     	;# 
  5014  0993                     	;# 
  5015  0994                     	;# 
  5016  0995                     	;# 
  5017  0996                     	;# 
  5018  0997                     	;# 
  5019  1E0F                     	;# 
  5020  1E10                     	;# 
  5021  1E11                     	;# 
  5022  1E12                     	;# 
  5023  1E13                     	;# 
  5024  1E14                     	;# 
  5025  1E15                     	;# 
  5026  1E16                     	;# 
  5027  1E17                     	;# 
  5028  1E18                     	;# 
  5029  1E19                     	;# 
  5030  1E1A                     	;# 
  5031  1E1B                     	;# 
  5032  1E1C                     	;# 
  5033  1E1D                     	;# 
  5034  1E1E                     	;# 
  5035  1E1F                     	;# 
  5036  1E20                     	;# 
  5037  1E21                     	;# 
  5038  1E22                     	;# 
  5039  1E23                     	;# 
  5040  1E24                     	;# 
  5041  1E25                     	;# 
  5042  1E26                     	;# 
  5043  1E27                     	;# 
  5044  1E28                     	;# 
  5045  1E29                     	;# 
  5046  1E2A                     	;# 
  5047  1E2B                     	;# 
  5048  1E2C                     	;# 
  5049  1E2D                     	;# 
  5050  1E2E                     	;# 
  5051  1E2F                     	;# 
  5052  1E30                     	;# 
  5053  1E31                     	;# 
  5054  1E32                     	;# 
  5055  1E33                     	;# 
  5056  1E34                     	;# 
  5057  1E35                     	;# 
  5058  1E36                     	;# 
  5059  1E37                     	;# 
  5060  1E8F                     	;# 
  5061  1E90                     	;# 
  5062  1E91                     	;# 
  5063  1E92                     	;# 
  5064  1E93                     	;# 
  5065  1E94                     	;# 
  5066  1E95                     	;# 
  5067  1E96                     	;# 
  5068  1E97                     	;# 
  5069  1E9C                     	;# 
  5070  1E9D                     	;# 
  5071  1E9E                     	;# 
  5072  1EA1                     	;# 
  5073  1EA2                     	;# 
  5074  1EA3                     	;# 
  5075  1EA4                     	;# 
  5076  1EA9                     	;# 
  5077  1EAA                     	;# 
  5078  1EB1                     	;# 
  5079  1EB2                     	;# 
  5080  1EB8                     	;# 
  5081  1EB9                     	;# 
  5082  1EBA                     	;# 
  5083  1EBB                     	;# 
  5084  1EBC                     	;# 
  5085  1EBD                     	;# 
  5086  1EBE                     	;# 
  5087  1EC3                     	;# 
  5088  1EC5                     	;# 
  5089  1EC6                     	;# 
  5090  1EC7                     	;# 
  5091  1EC8                     	;# 
  5092  1EC9                     	;# 
  5093  1ECA                     	;# 
  5094  1ECB                     	;# 
  5095  1ECB                     	;# 
  5096  1ECB                     	;# 
  5097  1ECC                     	;# 
  5098  1ECC                     	;# 
  5099  1ECC                     	;# 
  5100  1F10                     	;# 
  5101  1F11                     	;# 
  5102  1F12                     	;# 
  5103  1F14                     	;# 
  5104  1F15                     	;# 
  5105  1F1C                     	;# 
  5106  1F1D                     	;# 
  5107  1F1E                     	;# 
  5108  1F1F                     	;# 
  5109  1F20                     	;# 
  5110  1F21                     	;# 
  5111  1F22                     	;# 
  5112  1F23                     	;# 
  5113  1F24                     	;# 
  5114  1F25                     	;# 
  5115  1F26                     	;# 
  5116  1F27                     	;# 
  5117  1F38                     	;# 
  5118  1F39                     	;# 
  5119  1F3A                     	;# 
  5120  1F3B                     	;# 
  5121  1F3C                     	;# 
  5122  1F3D                     	;# 
  5123  1F3E                     	;# 
  5124  1F3F                     	;# 
  5125  1F43                     	;# 
  5126  1F44                     	;# 
  5127  1F45                     	;# 
  5128  1F46                     	;# 
  5129  1F47                     	;# 
  5130  1F48                     	;# 
  5131  1F49                     	;# 
  5132  1F4A                     	;# 
  5133  1F4E                     	;# 
  5134  1F4F                     	;# 
  5135  1F50                     	;# 
  5136  1F51                     	;# 
  5137  1F52                     	;# 
  5138  1F53                     	;# 
  5139  1F54                     	;# 
  5140  1F55                     	;# 
  5141  1FE4                     	;# 
  5142  1FE5                     	;# 
  5143  1FE6                     	;# 
  5144  1FE7                     	;# 
  5145  1FE8                     	;# 
  5146  1FE8                     	;# 
  5147  1FE9                     	;# 
  5148  1FEA                     	;# 
  5149  1FEB                     	;# 
  5150  1FED                     	;# 
  5151  1FEE                     	;# 
  5152  1FEF                     	;# 
  5153                           
  5154 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
  5155  0000                     
  5156 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
  5157  0000                     
  5158 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
  5159  0000                     
  5160                           	psect	idataBANK2
  5161  0800                     __pidataBANK2:	
  5162                           
  5163                           ;initializer for _messages
  5164  0800  34A0               	retlw	low (_message_start| (0+512))
  5165  0801  3402               	retlw	high (_message_start| (0+512))
  5166  0802  3420               	retlw	low (_message_end| (0+768))
  5167  0803  3403               	retlw	high (_message_end| (0+768))
  5168                           
  5169                           	psect	idataBANK4
  5170  19C6                     __pidataBANK4:	
  5171                           
  5172                           ;initializer for _setNavFlightMode
  5173  19C6  34B5               	retlw	181
  5174  19C7  3462               	retlw	98
  5175  19C8  3406               	retlw	6
  5176  19C9  3424               	retlw	36
  5177  19CA  3424               	retlw	36
  5178  19CB  3400               	retlw	0
  5179  19CC  34FF               	retlw	255
  5180  19CD  34FF               	retlw	255
  5181  19CE  3406               	retlw	6
  5182  19CF  3403               	retlw	3
  5183  19D0  3400               	retlw	0
  5184  19D1  3400               	retlw	0
  5185  19D2  3400               	retlw	0
  5186  19D3  3400               	retlw	0
  5187  19D4  3410               	retlw	16
  5188  19D5  3427               	retlw	39
  5189  19D6  3400               	retlw	0
  5190  19D7  3400               	retlw	0
  5191  19D8  3405               	retlw	5
  5192  19D9  3400               	retlw	0
  5193  19DA  34FA               	retlw	250
  5194  19DB  3400               	retlw	0
  5195  19DC  34FA               	retlw	250
  5196  19DD  3400               	retlw	0
  5197  19DE  3464               	retlw	100
  5198  19DF  3400               	retlw	0
  5199  19E0  342C               	retlw	44
  5200  19E1  3401               	retlw	1
  5201  19E2  3400               	retlw	0
  5202  19E3  3400               	retlw	0
  5203  19E4  3400               	retlw	0
  5204  19E5  3400               	retlw	0
  5205  19E6  3400               	retlw	0
  5206  19E7  3400               	retlw	0
  5207  19E8  3400               	retlw	0
  5208  19E9  3400               	retlw	0
  5209  19EA  3400               	retlw	0
  5210  19EB  3400               	retlw	0
  5211  19EC  3400               	retlw	0
  5212  19ED  3400               	retlw	0
  5213  19EE  3400               	retlw	0
  5214  19EF  3400               	retlw	0
  5215  19F0  3416               	retlw	22
  5216  19F1  34DC               	retlw	220
  5217                           
  5218                           	psect	stringtext1
  5219  28B9                     __pstringtext1:	
  5220  28B9                     _HALF_BAUD_DELAY:	
  5221  28B9  340A               	retlw	10
  5222  28BA  3400               	retlw	0
  5223  28BB                     __end_of_HALF_BAUD_DELAY:	
  5224                           
  5225                           	psect	nvBANK1
  5226  00EE                     __pnvBANK1:	
  5227  00EE                     _TMR0_InterruptHandler:	
  5228  00EE                     	ds	2
  5229                           
  5230                           	psect	nvBANK2
  5231  0167                     __pnvBANK2:	
  5232  0167                     _EUSART1_OverrunErrorHandler:	
  5233  0167                     	ds	2
  5234  0169                     _EUSART1_FramingErrorHandler:	
  5235  0169                     	ds	2
  5236                           
  5237                           	psect	nvBANK3
  5238  01ED                     __pnvBANK3:	
  5239  01ED                     _EUSART1_ErrorHandler:	
  5240  01ED                     	ds	2
  5241  000B                     _INTCONbits	set	11
  5242  0018                     _LATAbits	set	24
  5243  001A                     _LATCbits	set	26
  5244  0014                     _TRISC	set	20
  5245  0013                     _TRISB	set	19
  5246  0012                     _TRISA	set	18
  5247  001A                     _LATC	set	26
  5248  0019                     _LATB	set	25
  5249  0018                     _LATA	set	24
  5250  011A                     _TX1REG	set	282
  5251  0119                     _RC1REG	set	281
  5252  011D                     _RC1STAbits	set	285
  5253  011E                     _TX1STAbits	set	286
  5254  011C                     _SP1BRGH	set	284
  5255  011B                     _SP1BRGL	set	283
  5256  011E                     _TX1STA	set	286
  5257  011D                     _RC1STA	set	285
  5258  011F                     _BAUD1CON	set	287
  5259  0191                     _SSP1CON2bits	set	401
  5260  018C                     _SSP1BUF	set	396
  5261  0190                     _SSP1CON1bits	set	400
  5262  018D                     _SSP1ADD	set	397
  5263  0192                     _SSP1CON3	set	402
  5264  0190                     _SSP1CON1	set	400
  5265  018F                     _SSP1STAT	set	399
  5266  059E                     _T0CON0bits	set	1438
  5267  059E                     _T0CON0	set	1438
  5268  059C                     _TMR0L	set	1436
  5269  059D                     _TMR0H	set	1437
  5270  059F                     _T0CON1	set	1439
  5271  070F                     _PIR3bits	set	1807
  5272  0716                     _PIE0bits	set	1814
  5273  070C                     _PIR0bits	set	1804
  5274  079D                     _PMD7	set	1949
  5275  079C                     _PMD6	set	1948
  5276  079B                     _PMD5	set	1947
  5277  079A                     _PMD4	set	1946
  5278  0799                     _PMD3	set	1945
  5279  0798                     _PMD2	set	1944
  5280  0797                     _PMD1	set	1943
  5281  0796                     _PMD0	set	1942
  5282  0892                     _OSCTUNE	set	2194
  5283  0893                     _OSCFRQ	set	2195
  5284  0891                     _OSCEN	set	2193
  5285  088F                     _OSCCON3	set	2191
  5286  088D                     _OSCCON1	set	2189
  5287  1EC6                     _SSP1DATPPS	set	7878
  5288  1EC5                     _SSP1CLKPPS	set	7877
  5289  1ECB                     _RX1DTPPS	set	7883
  5290  1F1C                     _RB4PPS	set	7964
  5291  1F1E                     _RB6PPS	set	7966
  5292  1F1F                     _RB7PPS	set	7967
  5293  1F52                     _INLVLC	set	8018
  5294  1F47                     _INLVLB	set	8007
  5295  1F3C                     _INLVLA	set	7996
  5296  1F51                     _SLRCONC	set	8017
  5297  1F46                     _SLRCONB	set	8006
  5298  1F3B                     _SLRCONA	set	7995
  5299  1F50                     _ODCONC	set	8016
  5300  1F45                     _ODCONB	set	8005
  5301  1F3A                     _ODCONA	set	7994
  5302  1F4F                     _WPUC	set	8015
  5303  1F39                     _WPUA	set	7993
  5304  1F44                     _WPUB	set	8004
  5305  1F38                     _ANSELA	set	7992
  5306  1F43                     _ANSELB	set	8003
  5307  1F4E                     _ANSELC	set	8014
  5308                           
  5309                           	psect	stringtext2
  5310  2800                     __pstringtext2:	
  5311  2800                     STR_6:	
  5312  2800  3424               	retlw	36	;'$'
  5313  2801  3450               	retlw	80	;'P'
  5314  2802  3455               	retlw	85	;'U'
  5315  2803  3442               	retlw	66	;'B'
  5316  2804  3458               	retlw	88	;'X'
  5317  2805  342C               	retlw	44	;','
  5318  2806  3434               	retlw	52	;'4'
  5319  2807  3430               	retlw	48	;'0'
  5320  2808  342C               	retlw	44	;','
  5321  2809  3452               	retlw	82	;'R'
  5322  280A  344D               	retlw	77	;'M'
  5323  280B  3443               	retlw	67	;'C'
  5324  280C  342C               	retlw	44	;','
  5325  280D  3430               	retlw	48	;'0'
  5326  280E  342C               	retlw	44	;','
  5327  280F  3430               	retlw	48	;'0'
  5328  2810  342C               	retlw	44	;','
  5329  2811  3430               	retlw	48	;'0'
  5330  2812  342C               	retlw	44	;','
  5331  2813  3430               	retlw	48	;'0'
  5332  2814  342A               	retlw	42	;'*'
  5333  2815  3434               	retlw	52	;'4'
  5334  2816  3437               	retlw	55	;'7'
  5335  2817  340D               	retlw	13
  5336  2818  340A               	retlw	10
  5337  2819  3400               	retlw	0
  5338                           
  5339                           	psect	stringtext3
  5340  281A                     __pstringtext3:	
  5341  281A                     STR_4:	
  5342  281A  3424               	retlw	36	;'$'
  5343  281B  3450               	retlw	80	;'P'
  5344  281C  3455               	retlw	85	;'U'
  5345  281D  3442               	retlw	66	;'B'
  5346  281E  3458               	retlw	88	;'X'
  5347  281F  342C               	retlw	44	;','
  5348  2820  3434               	retlw	52	;'4'
  5349  2821  3430               	retlw	48	;'0'
  5350  2822  342C               	retlw	44	;','
  5351  2823  3447               	retlw	71	;'G'
  5352  2824  3453               	retlw	83	;'S'
  5353  2825  3456               	retlw	86	;'V'
  5354  2826  342C               	retlw	44	;','
  5355  2827  3430               	retlw	48	;'0'
  5356  2828  342C               	retlw	44	;','
  5357  2829  3430               	retlw	48	;'0'
  5358  282A  342C               	retlw	44	;','
  5359  282B  3430               	retlw	48	;'0'
  5360  282C  342C               	retlw	44	;','
  5361  282D  3430               	retlw	48	;'0'
  5362  282E  342A               	retlw	42	;'*'
  5363  282F  3435               	retlw	53	;'5'
  5364  2830  3439               	retlw	57	;'9'
  5365  2831  340D               	retlw	13
  5366  2832  340A               	retlw	10
  5367  2833  3400               	retlw	0
  5368                           
  5369                           	psect	stringtext4
  5370  2834                     __pstringtext4:	
  5371  2834                     STR_2:	
  5372  2834  3424               	retlw	36	;'$'
  5373  2835  3450               	retlw	80	;'P'
  5374  2836  3455               	retlw	85	;'U'
  5375  2837  3442               	retlw	66	;'B'
  5376  2838  3458               	retlw	88	;'X'
  5377  2839  342C               	retlw	44	;','
  5378  283A  3434               	retlw	52	;'4'
  5379  283B  3430               	retlw	48	;'0'
  5380  283C  342C               	retlw	44	;','
  5381  283D  3447               	retlw	71	;'G'
  5382  283E  3447               	retlw	71	;'G'
  5383  283F  3441               	retlw	65	;'A'
  5384  2840  342C               	retlw	44	;','
  5385  2841  3430               	retlw	48	;'0'
  5386  2842  342C               	retlw	44	;','
  5387  2843  3430               	retlw	48	;'0'
  5388  2844  342C               	retlw	44	;','
  5389  2845  3430               	retlw	48	;'0'
  5390  2846  342C               	retlw	44	;','
  5391  2847  3430               	retlw	48	;'0'
  5392  2848  342A               	retlw	42	;'*'
  5393  2849  3435               	retlw	53	;'5'
  5394  284A  3441               	retlw	65	;'A'
  5395  284B  340D               	retlw	13
  5396  284C  340A               	retlw	10
  5397  284D  3400               	retlw	0
  5398                           
  5399                           	psect	stringtext5
  5400  284E                     __pstringtext5:	
  5401  284E                     STR_1:	
  5402  284E  3424               	retlw	36	;'$'
  5403  284F  3450               	retlw	80	;'P'
  5404  2850  3455               	retlw	85	;'U'
  5405  2851  3442               	retlw	66	;'B'
  5406  2852  3458               	retlw	88	;'X'
  5407  2853  342C               	retlw	44	;','
  5408  2854  3434               	retlw	52	;'4'
  5409  2855  3430               	retlw	48	;'0'
  5410  2856  342C               	retlw	44	;','
  5411  2857  3447               	retlw	71	;'G'
  5412  2858  344C               	retlw	76	;'L'
  5413  2859  344C               	retlw	76	;'L'
  5414  285A  342C               	retlw	44	;','
  5415  285B  3430               	retlw	48	;'0'
  5416  285C  342C               	retlw	44	;','
  5417  285D  3430               	retlw	48	;'0'
  5418  285E  342C               	retlw	44	;','
  5419  285F  3430               	retlw	48	;'0'
  5420  2860  342C               	retlw	44	;','
  5421  2861  3430               	retlw	48	;'0'
  5422  2862  342A               	retlw	42	;'*'
  5423  2863  3435               	retlw	53	;'5'
  5424  2864  3443               	retlw	67	;'C'
  5425  2865  340D               	retlw	13
  5426  2866  340A               	retlw	10
  5427  2867  3400               	retlw	0
  5428                           
  5429                           	psect	stringtext6
  5430  2868                     __pstringtext6:	
  5431  2868                     STR_5:	
  5432  2868  3424               	retlw	36	;'$'
  5433  2869  3450               	retlw	80	;'P'
  5434  286A  3455               	retlw	85	;'U'
  5435  286B  3442               	retlw	66	;'B'
  5436  286C  3458               	retlw	88	;'X'
  5437  286D  342C               	retlw	44	;','
  5438  286E  3434               	retlw	52	;'4'
  5439  286F  3430               	retlw	48	;'0'
  5440  2870  342C               	retlw	44	;','
  5441  2871  3447               	retlw	71	;'G'
  5442  2872  3453               	retlw	83	;'S'
  5443  2873  3441               	retlw	65	;'A'
  5444  2874  342C               	retlw	44	;','
  5445  2875  3430               	retlw	48	;'0'
  5446  2876  342C               	retlw	44	;','
  5447  2877  3430               	retlw	48	;'0'
  5448  2878  342C               	retlw	44	;','
  5449  2879  3430               	retlw	48	;'0'
  5450  287A  342C               	retlw	44	;','
  5451  287B  3430               	retlw	48	;'0'
  5452  287C  342A               	retlw	42	;'*'
  5453  287D  3434               	retlw	52	;'4'
  5454  287E  3445               	retlw	69	;'E'
  5455  287F  340D               	retlw	13
  5456  2880  340A               	retlw	10
  5457  2881  3400               	retlw	0
  5458                           
  5459                           	psect	stringtext7
  5460  2882                     __pstringtext7:	
  5461  2882                     STR_3:	
  5462  2882  3424               	retlw	36	;'$'
  5463  2883  3450               	retlw	80	;'P'
  5464  2884  3455               	retlw	85	;'U'
  5465  2885  3442               	retlw	66	;'B'
  5466  2886  3458               	retlw	88	;'X'
  5467  2887  342C               	retlw	44	;','
  5468  2888  3434               	retlw	52	;'4'
  5469  2889  3430               	retlw	48	;'0'
  5470  288A  342C               	retlw	44	;','
  5471  288B  3456               	retlw	86	;'V'
  5472  288C  3454               	retlw	84	;'T'
  5473  288D  3447               	retlw	71	;'G'
  5474  288E  342C               	retlw	44	;','
  5475  288F  3430               	retlw	48	;'0'
  5476  2890  342C               	retlw	44	;','
  5477  2891  3430               	retlw	48	;'0'
  5478  2892  342C               	retlw	44	;','
  5479  2893  3430               	retlw	48	;'0'
  5480  2894  342C               	retlw	44	;','
  5481  2895  3430               	retlw	48	;'0'
  5482  2896  342A               	retlw	42	;'*'
  5483  2897  3435               	retlw	53	;'5'
  5484  2898  3445               	retlw	69	;'E'
  5485  2899  340D               	retlw	13
  5486  289A  340A               	retlw	10
  5487  289B  3400               	retlw	0
  5488                           
  5489                           	psect	stringtext8
  5490  289C                     __pstringtext8:	
  5491  289C                     STR_7:	
  5492  289C  3424               	retlw	36	;'$'
  5493  289D  3450               	retlw	80	;'P'
  5494  289E  3455               	retlw	85	;'U'
  5495  289F  3442               	retlw	66	;'B'
  5496  28A0  3458               	retlw	88	;'X'
  5497  28A1  342C               	retlw	44	;','
  5498  28A2  3430               	retlw	48	;'0'
  5499  28A3  3430               	retlw	48	;'0'
  5500  28A4  342A               	retlw	42	;'*'
  5501  28A5  3433               	retlw	51	;'3'
  5502  28A6  3433               	retlw	51	;'3'
  5503  28A7  340D               	retlw	13
  5504  28A8  340A               	retlw	10
  5505  28A9  3400               	retlw	0
  5506                           
  5507                           	psect	stringtext9
  5508  28AA                     __pstringtext9:	
  5509  28AA                     STR_9:	
  5510  28AA  3457               	retlw	87	;'W'
  5511  28AB  3469               	retlw	105	;'i'
  5512  28AC  3473               	retlw	115	;'s'
  5513  28AD  3470               	retlw	112	;'p'
  5514  28AE  342D               	retlw	45	;'-'
  5515  28AF  3431               	retlw	49	;'1'
  5516  28B0  3400               	retlw	0
  5517                           
  5518                           	psect	stringtext10
  5519  28B1                     __pstringtext10:	
  5520  28B1                     STR_8:	
  5521  28B1  3450               	retlw	80	;'P'
  5522  28B2  3455               	retlw	85	;'U'
  5523  28B3  3442               	retlw	66	;'B'
  5524  28B4  3458               	retlw	88	;'X'
  5525  28B5  3400               	retlw	0
  5526                           
  5527                           	psect	stringtext11
  5528  28B6                     __pstringtext11:	
  5529  28B6                     STR_10:	
  5530  28B6  3424               	retlw	36	;'$'
  5531  28B7  3424               	retlw	36	;'$'
  5532  28B8  3400               	retlw	0
  5533                           
  5534                           	psect	stringtext12
  5535  0000                     __pstringtext12:	
  5536                           
  5537                           ; #config settings
  5538  0000                     
  5539                           	psect	cinit
  5540  0010                     start_initialization:	
  5541  0010                     __initialization:	
  5542                           
  5543                           ; Initialize objects allocated to BANK2
  5544  0010  3000               	movlw	low __pidataBANK2
  5545  0011  0084               	movwf	4
  5546  0012  3088               	movlw	(high __pidataBANK2)| (0+128)
  5547  0013  0085               	movwf	5
  5548  0014  306B               	movlw	low __pdataBANK2
  5549  0015  0086               	movwf	6
  5550  0016  3001               	movlw	high __pdataBANK2
  5551  0017  0087               	movwf	7
  5552  0018  3004               	movlw	4
  5553  0019  31A6  2669  3180   	fcall	init_ram
  5554                           
  5555                           ; Initialize objects allocated to BANK4
  5556  001C  30C6               	movlw	low __pidataBANK4
  5557  001D  0084               	movwf	4
  5558  001E  3099               	movlw	(high __pidataBANK4)| (0+128)
  5559  001F  0085               	movwf	5
  5560  0020  3020               	movlw	low __pdataBANK4
  5561  0021  0086               	movwf	6
  5562  0022  3002               	movlw	high __pdataBANK4
  5563  0023  0087               	movwf	7
  5564  0024  302C               	movlw	44
  5565  0025  31A6  2669  3180   	fcall	init_ram
  5566                           
  5567                           ; Clear objects allocated to BANK1
  5568  0028  0141               	movlb	1	; select bank1
  5569  0029  01E8               	clrf	__pbssBANK1& (0+127)
  5570  002A  01E9               	clrf	(__pbssBANK1+1)& (0+127)
  5571  002B  01EA               	clrf	(__pbssBANK1+2)& (0+127)
  5572  002C  01EB               	clrf	(__pbssBANK1+3)& (0+127)
  5573  002D  01EC               	clrf	(__pbssBANK1+4)& (0+127)
  5574  002E  01ED               	clrf	(__pbssBANK1+5)& (0+127)
  5575                           
  5576                           ; Clear objects allocated to BANK2
  5577  002F  3020               	movlw	low __pbssBANK2
  5578  0030  0084               	movwf	4
  5579  0031  3001               	movlw	high __pbssBANK2
  5580  0032  0085               	movwf	5
  5581  0033  3027               	movlw	39
  5582  0034  31A6  2663  3180   	fcall	clear_ram0
  5583                           
  5584                           ; Clear objects allocated to BANK3
  5585  0037  30A0               	movlw	low __pbssBANK3
  5586  0038  0084               	movwf	4
  5587  0039  3001               	movlw	high __pbssBANK3
  5588  003A  0085               	movwf	5
  5589  003B  304D               	movlw	77
  5590  003C  31A6  2663  3180   	fcall	clear_ram0
  5591                           
  5592                           ; Clear objects allocated to BANK5
  5593  003F  30A0               	movlw	low __pbssBANK5
  5594  0040  0084               	movwf	4
  5595  0041  3002               	movlw	high __pbssBANK5
  5596  0042  0085               	movwf	5
  5597  0043  3046               	movlw	70
  5598  0044  31A6  2663  3180   	fcall	clear_ram0
  5599                           
  5600                           ; Clear objects allocated to BANK6
  5601  0047  3020               	movlw	low __pbssBANK6
  5602  0048  0084               	movwf	4
  5603  0049  3003               	movlw	high __pbssBANK6
  5604  004A  0085               	movwf	5
  5605  004B  3046               	movlw	70
  5606  004C  31A6  2663         	fcall	clear_ram0
  5607  004E                     end_of_initialization:	
  5608                           ;End of C runtime variable initialization code
  5609                           
  5610  004E                     __end_of__initialization:	
  5611  004E  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  5612  004F  0140               	movlb	0
  5613  0050  318A  2AA1         	ljmp	_main	;jump to C main() function
  5614                           
  5615                           	psect	bssBANK1
  5616  00E8                     __pbssBANK1:	
  5617  00E8                     _ticks:	
  5618  00E8                     	ds	4
  5619  00EC                     _gps_configured:	
  5620  00EC                     	ds	1
  5621  00ED                     _eusart1RxLastError:	
  5622  00ED                     	ds	1
  5623                           
  5624                           	psect	bssBANK2
  5625  0120                     __pbssBANK2:	
  5626  0120                     bme280_get_sensor_data@F273:	
  5627  0120                     	ds	12
  5628  012C                     bme280_get_sensor_data@F271:	
  5629  012C                     	ds	8
  5630  0134                     PollGPS@F11346:	
  5631  0134                     	ds	7
  5632  013B                     ___g_timeout_start:	
  5633  013B                     	ds	4
  5634  013F                     _id:	
  5635  013F                     	ds	2
  5636  0141                     _checksum:	
  5637  0141                     	ds	6
  5638                           
  5639                           	psect	dataBANK2
  5640  016B                     __pdataBANK2:	
  5641  016B                     _messages:	
  5642  016B                     	ds	4
  5643                           
  5644                           	psect	bssBANK3
  5645  01A0                     __pbssBANK3:	
  5646  01A0                     get_calib_data@F376:	
  5647  01A0                     	ds	26
  5648  01BA                     _EnvSensor:	
  5649  01BA                     	ds	51
  5650                           
  5651                           	psect	dataBANK4
  5652  0220                     __pdataBANK4:	
  5653  0220                     _setNavFlightMode:	
  5654  0220                     	ds	44
  5655                           
  5656                           	psect	bssBANK5
  5657  02A0                     __pbssBANK5:	
  5658  02A0                     _message_start:	
  5659  02A0                     	ds	70
  5660                           
  5661                           	psect	bssBANK6
  5662  0320                     __pbssBANK6:	
  5663  0320                     _message_end:	
  5664  0320                     	ds	70
  5665                           
  5666                           	psect	inittext
  5667  2669                     init_ram:	
  5668  2669  00FE               	movwf	126
  5669  266A                     initloop:	
  5670  266A  0012               	moviw fsr0++
  5671  266B  001E               	movwi fsr1++
  5672  266C  0BFE               	decfsz	126,f
  5673  266D  2E6A               	goto	initloop
  5674  266E  3400               	retlw	0
  5675                           
  5676                           	psect	clrtext
  5677  2663                     clear_ram0:	
  5678                           ;	Called with FSR0 containing the base address, and
  5679                           ;	WREG with the size to clear
  5680                           
  5681  2663  0064               	clrwdt	;clear the watchdog before getting into this loop
  5682  2664                     clrloop0:	
  5683  2664  0180               	clrf	0	;clear RAM location pointed to by FSR
  5684  2665  3101               	addfsr 0,1
  5685  2666  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  5686  2667  2E64               	goto	clrloop0	;have we reached the end yet?
  5687  2668  3400               	retlw	0	;all done for this memory range, return
  5688                           
  5689                           	psect	cstackBANK2
  5690  0147                     __pcstackBANK2:	
  5691  0147                     main@convertedNumber:	
  5692                           
  5693                           ; 16 bytes @ 0x0
  5694  0147                     	ds	16
  5695  0157                     main@end:	
  5696                           
  5697                           ; 2 bytes @ 0x10
  5698  0157                     	ds	2
  5699  0159                     main@sensor_data:	
  5700                           
  5701                           ; 12 bytes @ 0x12
  5702  0159                     	ds	12
  5703  0165                     main@index:	
  5704                           
  5705                           ; 2 bytes @ 0x1E
  5706  0165                     	ds	2
  5707                           
  5708                           	psect	cstackBANK1
  5709  00A0                     __pcstackBANK1:	
  5710  00A0                     put_device_to_sleep@reg_data:	
  5711  00A0                     compensate_pressure@var3:	
  5712                           ; 4 bytes @ 0x0
  5713                           
  5714                           
  5715                           ; 4 bytes @ 0x0
  5716  00A0                     	ds	4
  5717  00A4                     put_device_to_sleep@dev:	
  5718  00A4                     compensate_pressure@var4:	
  5719                           ; 1 bytes @ 0x4
  5720                           
  5721                           
  5722                           ; 4 bytes @ 0x4
  5723  00A4                     	ds	1
  5724  00A5                     put_device_to_sleep@rslt:	
  5725                           
  5726                           ; 1 bytes @ 0x5
  5727  00A5                     	ds	1
  5728  00A6                     put_device_to_sleep@settings:	
  5729                           
  5730                           ; 5 bytes @ 0x6
  5731  00A6                     	ds	2
  5732  00A8                     compensate_pressure@var5:	
  5733                           
  5734                           ; 4 bytes @ 0x8
  5735  00A8                     	ds	3
  5736  00AB                     bme280_set_sensor_settings@desired_settings:	
  5737  00AB                     bme280_set_sensor_mode@sensor_mode:	
  5738                           ; 1 bytes @ 0xB
  5739                           
  5740                           
  5741                           ; 1 bytes @ 0xB
  5742  00AB                     	ds	1
  5743  00AC                     bme280_set_sensor_settings@sensor_mode:	
  5744  00AC                     bme280_set_sensor_mode@last_set_mode:	
  5745                           ; 1 bytes @ 0xC
  5746                           
  5747  00AC                     _compensate_pressure$2689:	
  5748                           ; 1 bytes @ 0xC
  5749                           
  5750                           
  5751                           ; 4 bytes @ 0xC
  5752  00AC                     	ds	1
  5753  00AD                     bme280_set_sensor_settings@rslt:	
  5754  00AD                     bme280_set_sensor_mode@rslt:	
  5755                           ; 1 bytes @ 0xD
  5756                           
  5757                           
  5758                           ; 1 bytes @ 0xD
  5759  00AD                     	ds	1
  5760  00AE                     ??_BME280_Init:	
  5761                           
  5762                           ; 1 bytes @ 0xE
  5763  00AE                     	ds	2
  5764  00B0                     BME280_Init@settings_sel:	
  5765  00B0                     _compensate_pressure$2690:	
  5766                           ; 1 bytes @ 0x10
  5767                           
  5768                           
  5769                           ; 4 bytes @ 0x10
  5770  00B0                     	ds	1
  5771  00B1                     BME280_Init@rslt:	
  5772                           
  5773                           ; 1 bytes @ 0x11
  5774  00B1                     	ds	3
  5775  00B4                     compensate_pressure@uncomp_data:	
  5776                           
  5777                           ; 1 bytes @ 0x14
  5778  00B4                     	ds	1
  5779  00B5                     compensate_pressure@pressure_max:	
  5780                           
  5781                           ; 4 bytes @ 0x15
  5782  00B5                     	ds	4
  5783  00B9                     _compensate_pressure$2688:	
  5784                           
  5785                           ; 4 bytes @ 0x19
  5786  00B9                     	ds	8
  5787  00C1                     compensate_pressure@var2:	
  5788                           
  5789                           ; 4 bytes @ 0x21
  5790  00C1                     	ds	4
  5791  00C5                     compensate_pressure@pressure:	
  5792                           
  5793                           ; 4 bytes @ 0x25
  5794  00C5                     	ds	4
  5795  00C9                     compensate_pressure@var1:	
  5796                           
  5797                           ; 4 bytes @ 0x29
  5798  00C9                     	ds	4
  5799  00CD                     bme280_get_sensor_data@reg_data:	
  5800                           
  5801                           ; 8 bytes @ 0x2D
  5802  00CD                     	ds	8
  5803  00D5                     bme280_get_sensor_data@sensor_comp:	
  5804                           
  5805                           ; 1 bytes @ 0x35
  5806  00D5                     	ds	1
  5807  00D6                     bme280_get_sensor_data@rslt:	
  5808                           
  5809                           ; 1 bytes @ 0x36
  5810  00D6                     	ds	1
  5811  00D7                     bme280_get_sensor_data@uncomp_data:	
  5812                           
  5813                           ; 12 bytes @ 0x37
  5814  00D7                     	ds	12
  5815  00E3                     ??_main:	
  5816                           
  5817                           ; 1 bytes @ 0x43
  5818  00E3                     	ds	5
  5819                           
  5820                           	psect	cstackCOMMON
  5821  0070                     __pcstackCOMMON:	
  5822  0070                     ?_null_ptr_check:	
  5823  0070                     ??_null_ptr_check:	
  5824                           ; 1 bytes @ 0x0
  5825                           
  5826  0070                     ?_bme280_soft_reset:	
  5827                           ; 1 bytes @ 0x0
  5828                           
  5829  0070                     ?_get_calib_data:	
  5830                           ; 1 bytes @ 0x0
  5831                           
  5832  0070                     ?_interleave_reg_addr:	
  5833                           ; 1 bytes @ 0x0
  5834                           
  5835  0070                     ?_put_device_to_sleep:	
  5836                           ; 1 bytes @ 0x0
  5837                           
  5838  0070                     ?_are_settings_changed:	
  5839                           ; 1 bytes @ 0x0
  5840                           
  5841  0070                     ?_parse_device_settings:	
  5842                           ; 1 bytes @ 0x0
  5843                           
  5844  0070                     ?_bme280_parse_sensor_data:	
  5845                           ; 1 bytes @ 0x0
  5846                           
  5847  0070                     ?_fill_osr_press_settings:	
  5848                           ; 1 bytes @ 0x0
  5849                           
  5850  0070                     ?_fill_osr_temp_settings:	
  5851                           ; 1 bytes @ 0x0
  5852                           
  5853  0070                     ?_fill_filter_settings:	
  5854                           ; 1 bytes @ 0x0
  5855                           
  5856  0070                     ?_fill_standby_settings:	
  5857                           ; 1 bytes @ 0x0
  5858                           
  5859  0070                     ?_parse_temp_press_calib_data:	
  5860                           ; 1 bytes @ 0x0
  5861                           
  5862  0070                     ?_parse_humidity_calib_data:	
  5863                           ; 1 bytes @ 0x0
  5864                           
  5865  0070                     ?_TMR0_SetInterruptHandler:	
  5866                           ; 1 bytes @ 0x0
  5867                           
  5868  0070                     ?_TMR0_DefaultInterruptHandler:	
  5869                           ; 1 bytes @ 0x0
  5870                           
  5871  0070                     ??_TMR0_DefaultInterruptHandler:	
  5872                           ; 1 bytes @ 0x0
  5873                           
  5874  0070                     ?_EUSART1_SetFramingErrorHandler:	
  5875                           ; 1 bytes @ 0x0
  5876                           
  5877  0070                     ?_EUSART1_SetOverrunErrorHandler:	
  5878                           ; 1 bytes @ 0x0
  5879                           
  5880  0070                     ?_EUSART1_SetErrorHandler:	
  5881                           ; 1 bytes @ 0x0
  5882                           
  5883  0070                     ?_PMD_Initialize:	
  5884                           ; 1 bytes @ 0x0
  5885                           
  5886  0070                     ??_PMD_Initialize:	
  5887                           ; 1 bytes @ 0x0
  5888                           
  5889  0070                     ?_PIN_MANAGER_Initialize:	
  5890                           ; 1 bytes @ 0x0
  5891                           
  5892  0070                     ??_PIN_MANAGER_Initialize:	
  5893                           ; 1 bytes @ 0x0
  5894                           
  5895  0070                     ?_OSCILLATOR_Initialize:	
  5896                           ; 1 bytes @ 0x0
  5897                           
  5898  0070                     ??_OSCILLATOR_Initialize:	
  5899                           ; 1 bytes @ 0x0
  5900                           
  5901  0070                     ?_I2C_UserAlert:	
  5902                           ; 1 bytes @ 0x0
  5903                           
  5904  0070                     ?_Sleep:	
  5905                           ; 1 bytes @ 0x0
  5906                           
  5907  0070                     ?_InitTiming:	
  5908                           ; 1 bytes @ 0x0
  5909                           
  5910  0070                     ?_bme280_init:	
  5911                           ; 1 bytes @ 0x0
  5912                           
  5913  0070                     ?_TMR0_Initialize:	
  5914                           ; 1 bytes @ 0x0
  5915                           
  5916  0070                     ?_TMR0_ISR:	
  5917                           ; 1 bytes @ 0x0
  5918                           
  5919  0070                     ??_TMR0_ISR:	
  5920                           ; 1 bytes @ 0x0
  5921                           
  5922  0070                     ?_EUSART1_Initialize:	
  5923                           ; 1 bytes @ 0x0
  5924                           
  5925  0070                     ?_EUSART1_is_rx_ready:	
  5926                           ; 1 bytes @ 0x0
  5927                           
  5928  0070                     ??_EUSART1_is_rx_ready:	
  5929                           ; 1 bytes @ 0x0
  5930                           
  5931  0070                     ?_EUSART1_Read:	
  5932                           ; 1 bytes @ 0x0
  5933                           
  5934  0070                     ??_EUSART1_Read:	
  5935                           ; 1 bytes @ 0x0
  5936                           
  5937  0070                     ?_EUSART1_Write:	
  5938                           ; 1 bytes @ 0x0
  5939                           
  5940  0070                     ??_EUSART1_Write:	
  5941                           ; 1 bytes @ 0x0
  5942                           
  5943  0070                     ?_INTERRUPT_InterruptManager:	
  5944                           ; 1 bytes @ 0x0
  5945                           
  5946  0070                     ??_INTERRUPT_InterruptManager:	
  5947                           ; 1 bytes @ 0x0
  5948                           
  5949  0070                     ?_SYSTEM_Initialize:	
  5950                           ; 1 bytes @ 0x0
  5951                           
  5952  0070                     ?_I2C_Wait_SSPIF:	
  5953                           ; 1 bytes @ 0x0
  5954                           
  5955  0070                     ?_I2C_Init:	
  5956                           ; 1 bytes @ 0x0
  5957                           
  5958  0070                     ??_I2C_Init:	
  5959                           ; 1 bytes @ 0x0
  5960                           
  5961  0070                     ?_I2C_WriteByte:	
  5962                           ; 1 bytes @ 0x0
  5963                           
  5964  0070                     ?_I2C_ReadByte:	
  5965                           ; 1 bytes @ 0x0
  5966                           
  5967  0070                     ?_I2C_Stop:	
  5968                           ; 1 bytes @ 0x0
  5969                           
  5970  0070                     ?_BME280_Init:	
  5971                           ; 1 bytes @ 0x0
  5972                           
  5973  0070                     ?_ReverseString:	
  5974                           ; 1 bytes @ 0x0
  5975                           
  5976  0070                     ?_ClearMessages:	
  5977                           ; 1 bytes @ 0x0
  5978                           
  5979  0070                     ??_ClearMessages:	
  5980                           ; 1 bytes @ 0x0
  5981                           
  5982  0070                     ?_GPS_SendUBX:	
  5983                           ; 1 bytes @ 0x0
  5984                           
  5985  0070                     ?_GPS_HasAcknowledged:	
  5986                           ; 1 bytes @ 0x0
  5987                           
  5988  0070                     ??_GPS_HasAcknowledged:	
  5989                           ; 1 bytes @ 0x0
  5990                           
  5991  0070                     ?_SetupGPS:	
  5992                           ; 1 bytes @ 0x0
  5993                           
  5994  0070                     ?_PollGPS:	
  5995                           ; 1 bytes @ 0x0
  5996                           
  5997  0070                     ?_main:	
  5998                           ; 1 bytes @ 0x0
  5999                           
  6000  0070                     ?_TransmitBit:	
  6001                           ; 1 bytes @ 0x0
  6002                           
  6003  0070                     ?_TransmitChar:	
  6004                           ; 1 bytes @ 0x0
  6005                           
  6006  0070                     ?_TimerISR:	
  6007                           ; 1 bytes @ 0x0
  6008                           
  6009  0070                     ??_TimerISR:	
  6010                           ; 1 bytes @ 0x0
  6011                           
  6012  0070                     ?_strlen:	
  6013                           ; 1 bytes @ 0x0
  6014                           
  6015  0070                     ?_strcmp:	
  6016                           ; 2 bytes @ 0x0
  6017                           
  6018  0070                     ?_Insert:	
  6019                           ; 2 bytes @ 0x0
  6020                           
  6021  0070                     ?_GetLengthUBX:	
  6022                           ; 2 bytes @ 0x0
  6023                           
  6024  0070                     ?___awdiv:	
  6025                           ; 2 bytes @ 0x0
  6026                           
  6027  0070                     ?___awmod:	
  6028                           ; 2 bytes @ 0x0
  6029                           
  6030  0070                     ?___lmul:	
  6031                           ; 2 bytes @ 0x0
  6032                           
  6033  0070                     ?___lldiv:	
  6034                           ; 4 bytes @ 0x0
  6035                           
  6036  0070                     ?___llmod:	
  6037                           ; 4 bytes @ 0x0
  6038                           
  6039  0070                     bme280_parse_sensor_data@uncomp_data:	
  6040                           ; 4 bytes @ 0x0
  6041                           
  6042  0070                     parse_device_settings@settings:	
  6043                           ; 1 bytes @ 0x0
  6044                           
  6045  0070                     interleave_reg_addr@temp_buff:	
  6046                           ; 1 bytes @ 0x0
  6047                           
  6048  0070                     parse_temp_press_calib_data@dev:	
  6049                           ; 1 bytes @ 0x0
  6050                           
  6051  0070                     parse_humidity_calib_data@dev:	
  6052                           ; 1 bytes @ 0x0
  6053                           
  6054  0070                     are_settings_changed@desired_settings:	
  6055                           ; 1 bytes @ 0x0
  6056                           
  6057  0070                     EUSART1_Write@txData:	
  6058                           ; 1 bytes @ 0x0
  6059                           
  6060  0070                     I2C_UserAlert@status:	
  6061                           ; 1 bytes @ 0x0
  6062                           
  6063  0070                     fill_filter_settings@settings:	
  6064                           ; 1 bytes @ 0x0
  6065                           
  6066  0070                     fill_standby_settings@settings:	
  6067                           ; 2 bytes @ 0x0
  6068                           
  6069  0070                     fill_osr_press_settings@settings:	
  6070                           ; 2 bytes @ 0x0
  6071                           
  6072  0070                     fill_osr_temp_settings@settings:	
  6073                           ; 2 bytes @ 0x0
  6074                           
  6075  0070                     TMR0_SetInterruptHandler@InterruptHandler:	
  6076                           ; 2 bytes @ 0x0
  6077                           
  6078  0070                     EUSART1_SetFramingErrorHandler@interruptHandler:	
  6079                           ; 2 bytes @ 0x0
  6080                           
  6081  0070                     EUSART1_SetOverrunErrorHandler@interruptHandler:	
  6082                           ; 2 bytes @ 0x0
  6083                           
  6084  0070                     EUSART1_SetErrorHandler@interruptHandler:	
  6085                           ; 2 bytes @ 0x0
  6086                           
  6087  0070                     Insert@dest:	
  6088                           ; 2 bytes @ 0x0
  6089                           
  6090  0070                     ___awdiv@divisor:	
  6091                           ; 2 bytes @ 0x0
  6092                           
  6093  0070                     ___awmod@divisor:	
  6094                           ; 2 bytes @ 0x0
  6095                           
  6096  0070                     strcmp@r:	
  6097                           ; 2 bytes @ 0x0
  6098                           
  6099  0070                     strlen@s:	
  6100                           ; 2 bytes @ 0x0
  6101                           
  6102  0070                     Sleep@ms:	
  6103                           ; 2 bytes @ 0x0
  6104                           
  6105  0070                     ___lmul@multiplier:	
  6106                           ; 4 bytes @ 0x0
  6107                           
  6108  0070                     ___lldiv@divisor:	
  6109                           ; 4 bytes @ 0x0
  6110                           
  6111  0070                     ___llmod@divisor:	
  6112                           ; 4 bytes @ 0x0
  6113                           
  6114                           
  6115                           ; 4 bytes @ 0x0
  6116  0070                     	ds	1
  6117  0071                     ??_are_settings_changed:	
  6118  0071                     ??_parse_device_settings:	
  6119                           ; 1 bytes @ 0x1
  6120                           
  6121  0071                     ??_bme280_parse_sensor_data:	
  6122                           ; 1 bytes @ 0x1
  6123                           
  6124  0071                     ??_parse_temp_press_calib_data:	
  6125                           ; 1 bytes @ 0x1
  6126                           
  6127  0071                     ??_parse_humidity_calib_data:	
  6128                           ; 1 bytes @ 0x1
  6129                           
  6130  0071                     interleave_reg_addr@reg_data:	
  6131                           ; 1 bytes @ 0x1
  6132                           
  6133  0071                     are_settings_changed@sub_settings:	
  6134                           ; 1 bytes @ 0x1
  6135                           
  6136  0071                     ClearMessages@i:	
  6137                           ; 1 bytes @ 0x1
  6138                           
  6139                           
  6140                           ; 2 bytes @ 0x1
  6141  0071                     	ds	1
  6142  0072                     ??_fill_osr_press_settings:	
  6143  0072                     ??_fill_osr_temp_settings:	
  6144                           ; 1 bytes @ 0x2
  6145                           
  6146  0072                     ??_fill_filter_settings:	
  6147                           ; 1 bytes @ 0x2
  6148                           
  6149  0072                     ??_fill_standby_settings:	
  6150                           ; 1 bytes @ 0x2
  6151                           
  6152  0072                     ??_TMR0_SetInterruptHandler:	
  6153                           ; 1 bytes @ 0x2
  6154                           
  6155  0072                     ??_EUSART1_SetFramingErrorHandler:	
  6156                           ; 1 bytes @ 0x2
  6157                           
  6158  0072                     ??_EUSART1_SetOverrunErrorHandler:	
  6159                           ; 1 bytes @ 0x2
  6160                           
  6161  0072                     ??_EUSART1_SetErrorHandler:	
  6162                           ; 1 bytes @ 0x2
  6163                           
  6164  0072                     ??_strlen:	
  6165                           ; 1 bytes @ 0x2
  6166                           
  6167  0072                     ??_strcmp:	
  6168                           ; 1 bytes @ 0x2
  6169                           
  6170  0072                     ??_InitTiming:	
  6171                           ; 1 bytes @ 0x2
  6172                           
  6173  0072                     ??_TMR0_Initialize:	
  6174                           ; 1 bytes @ 0x2
  6175                           
  6176  0072                     ??_EUSART1_Initialize:	
  6177                           ; 1 bytes @ 0x2
  6178                           
  6179  0072                     ??_SYSTEM_Initialize:	
  6180                           ; 1 bytes @ 0x2
  6181                           
  6182  0072                     interleave_reg_addr@len:	
  6183                           ; 1 bytes @ 0x2
  6184                           
  6185  0072                     parse_temp_press_calib_data@calib_data:	
  6186                           ; 1 bytes @ 0x2
  6187                           
  6188  0072                     are_settings_changed@settings_changed:	
  6189                           ; 1 bytes @ 0x2
  6190                           
  6191  0072                     null_ptr_check@rslt:	
  6192                           ; 1 bytes @ 0x2
  6193                           
  6194  0072                     Insert@src:	
  6195                           ; 1 bytes @ 0x2
  6196                           
  6197  0072                     ___awdiv@dividend:	
  6198                           ; 1 bytes @ 0x2
  6199                           
  6200  0072                     ___awmod@dividend:	
  6201                           ; 2 bytes @ 0x2
  6202                           
  6203                           
  6204                           ; 2 bytes @ 0x2
  6205  0072                     	ds	1
  6206  0073                     ??_interleave_reg_addr:	
  6207  0073                     ??_GetLengthUBX:	
  6208                           ; 1 bytes @ 0x3
  6209                           
  6210  0073                     parse_device_settings@reg_data:	
  6211                           ; 1 bytes @ 0x3
  6212                           
  6213  0073                     parse_temp_press_calib_data@reg_data:	
  6214                           ; 1 bytes @ 0x3
  6215                           
  6216  0073                     null_ptr_check@dev:	
  6217                           ; 1 bytes @ 0x3
  6218                           
  6219  0073                     GetLengthUBX@data:	
  6220                           ; 1 bytes @ 0x3
  6221                           
  6222  0073                     strcmp@l:	
  6223                           ; 1 bytes @ 0x3
  6224                           
  6225  0073                     Insert@index:	
  6226                           ; 1 bytes @ 0x3
  6227                           
  6228  0073                     strlen@a:	
  6229                           ; 2 bytes @ 0x3
  6230                           
  6231                           
  6232                           ; 2 bytes @ 0x3
  6233  0073                     	ds	1
  6234  0074                     ??_Sleep:	
  6235  0074                     ??_GPS_SendUBX:	
  6236                           ; 1 bytes @ 0x4
  6237                           
  6238  0074                     ??___awdiv:	
  6239                           ; 1 bytes @ 0x4
  6240                           
  6241  0074                     ??___awmod:	
  6242                           ; 1 bytes @ 0x4
  6243                           
  6244  0074                     parse_humidity_calib_data@dig_H4_lsb:	
  6245                           ; 1 bytes @ 0x4
  6246                           
  6247  0074                     ___lmul@multiplicand:	
  6248                           ; 2 bytes @ 0x4
  6249                           
  6250  0074                     ___lldiv@dividend:	
  6251                           ; 4 bytes @ 0x4
  6252                           
  6253  0074                     ___llmod@dividend:	
  6254                           ; 4 bytes @ 0x4
  6255                           
  6256                           
  6257                           ; 4 bytes @ 0x4
  6258  0074                     	ds	1
  6259  0075                     ?_ClearString:	
  6260  0075                     ?_WriteGPS:	
  6261                           ; 1 bytes @ 0x5
  6262                           
  6263  0075                     ?_crc16_update:	
  6264                           ; 1 bytes @ 0x5
  6265                           
  6266  0075                     fill_filter_settings@reg_data:	
  6267                           ; 2 bytes @ 0x5
  6268                           
  6269  0075                     fill_standby_settings@reg_data:	
  6270                           ; 1 bytes @ 0x5
  6271                           
  6272  0075                     fill_osr_press_settings@reg_data:	
  6273                           ; 1 bytes @ 0x5
  6274                           
  6275  0075                     fill_osr_temp_settings@reg_data:	
  6276                           ; 1 bytes @ 0x5
  6277                           
  6278  0075                     ___awdiv@counter:	
  6279                           ; 1 bytes @ 0x5
  6280                           
  6281  0075                     ___awmod@counter:	
  6282                           ; 1 bytes @ 0x5
  6283                           
  6284  0075                     ClearString@str:	
  6285                           ; 1 bytes @ 0x5
  6286                           
  6287  0075                     Insert@destLimit:	
  6288                           ; 2 bytes @ 0x5
  6289                           
  6290  0075                     WriteGPS@message:	
  6291                           ; 2 bytes @ 0x5
  6292                           
  6293  0075                     GPS_SendUBX@length:	
  6294                           ; 2 bytes @ 0x5
  6295                           
  6296  0075                     crc16_update@pData:	
  6297                           ; 2 bytes @ 0x5
  6298                           
  6299                           
  6300                           ; 2 bytes @ 0x5
  6301  0075                     	ds	1
  6302  0076                     interleave_reg_addr@reg_addr:	
  6303  0076                     ___awdiv@sign:	
  6304                           ; 1 bytes @ 0x6
  6305                           
  6306  0076                     ___awmod@sign:	
  6307                           ; 1 bytes @ 0x6
  6308                           
  6309  0076                     parse_humidity_calib_data@dig_H4_msb:	
  6310                           ; 1 bytes @ 0x6
  6311                           
  6312                           
  6313                           ; 2 bytes @ 0x6
  6314  0076                     	ds	1
  6315  0077                     ??_ClearString:	
  6316  0077                     ??_Insert:	
  6317                           ; 1 bytes @ 0x7
  6318                           
  6319  0077                     ??_WriteGPS:	
  6320                           ; 1 bytes @ 0x7
  6321                           
  6322  0077                     interleave_reg_addr@index:	
  6323                           ; 1 bytes @ 0x7
  6324                           
  6325  0077                     GPS_SendUBX@i:	
  6326                           ; 1 bytes @ 0x7
  6327                           
  6328  0077                     crc16_update@length:	
  6329                           ; 2 bytes @ 0x7
  6330                           
  6331  0077                     ___awdiv@quotient:	
  6332                           ; 2 bytes @ 0x7
  6333                           
  6334                           
  6335                           ; 2 bytes @ 0x7
  6336  0077                     	ds	1
  6337  0078                     ??___lmul:	
  6338  0078                     ??___lldiv:	
  6339                           ; 1 bytes @ 0x8
  6340                           
  6341  0078                     ??___llmod:	
  6342                           ; 1 bytes @ 0x8
  6343                           
  6344  0078                     parse_humidity_calib_data@dig_H5_lsb:	
  6345                           ; 1 bytes @ 0x8
  6346                           
  6347  0078                     ClearString@counti:	
  6348                           ; 2 bytes @ 0x8
  6349                           
  6350  0078                     WriteGPS@counti:	
  6351                           ; 2 bytes @ 0x8
  6352                           
  6353  0078                     Sleep@start:	
  6354                           ; 2 bytes @ 0x8
  6355                           
  6356  0078                     ___lmul@product:	
  6357                           ; 4 bytes @ 0x8
  6358                           
  6359                           
  6360                           ; 4 bytes @ 0x8
  6361  0078                     	ds	1
  6362  0079                     ??_ReverseString:	
  6363  0079                     Insert@current:	
  6364                           ; 1 bytes @ 0x9
  6365                           
  6366  0079                     GPS_SendUBX@data:	
  6367                           ; 1 bytes @ 0x9
  6368                           
  6369  0079                     ___llmod@counter:	
  6370                           ; 1 bytes @ 0x9
  6371                           
  6372  0079                     crc16_update@wCrc:	
  6373                           ; 1 bytes @ 0x9
  6374                           
  6375  0079                     ___lldiv@quotient:	
  6376                           ; 2 bytes @ 0x9
  6377                           
  6378                           
  6379                           ; 4 bytes @ 0x9
  6380  0079                     	ds	1
  6381  007A                     Insert@temp:	
  6382  007A                     parse_humidity_calib_data@dig_H5_msb:	
  6383                           ; 1 bytes @ 0xA
  6384                           
  6385  007A                     ClearString@i:	
  6386                           ; 2 bytes @ 0xA
  6387                           
  6388  007A                     WriteGPS@i:	
  6389                           ; 2 bytes @ 0xA
  6390                           
  6391                           
  6392                           ; 2 bytes @ 0xA
  6393  007A                     	ds	1
  6394  007B                     ?_IntToString:	
  6395  007B                     ??_crc16_update:	
  6396                           ; 1 bytes @ 0xB
  6397                           
  6398  007B                     Insert@i:	
  6399                           ; 1 bytes @ 0xB
  6400                           
  6401  007B                     IntToString@n:	
  6402                           ; 2 bytes @ 0xB
  6403                           
  6404                           
  6405                           ; 2 bytes @ 0xB
  6406  007B                     	ds	1
  6407  007C                     ??_DebugAlert:	
  6408  007C                     ??_SetupGPS:	
  6409                           ; 1 bytes @ 0xC
  6410                           
  6411  007C                     ??_TransmitBit:	
  6412                           ; 1 bytes @ 0xC
  6413                           
  6414  007C                     ??___aldiv:	
  6415                           ; 1 bytes @ 0xC
  6416                           
  6417  007C                     parse_humidity_calib_data@calib_data:	
  6418                           ; 1 bytes @ 0xC
  6419                           
  6420  007C                     TransmitBit@b:	
  6421                           ; 1 bytes @ 0xC
  6422                           
  6423                           
  6424                           ; 1 bytes @ 0xC
  6425  007C                     	ds	1
  6426  007D                     ??_I2C_UserAlert:	
  6427  007D                     ??_I2C_WriteByte:	
  6428                           ; 1 bytes @ 0xD
  6429                           
  6430  007D                     ??_I2C_ReadByte:	
  6431                           ; 1 bytes @ 0xD
  6432                           
  6433  007D                     ??_I2C_Stop:	
  6434                           ; 1 bytes @ 0xD
  6435                           
  6436  007D                     ??_InsertString:	
  6437                           ; 1 bytes @ 0xD
  6438                           
  6439  007D                     ??_TransmitChar:	
  6440                           ; 1 bytes @ 0xD
  6441                           
  6442  007D                     parse_humidity_calib_data@reg_data:	
  6443                           ; 1 bytes @ 0xD
  6444                           
  6445  007D                     I2C_WriteByte@data:	
  6446                           ; 1 bytes @ 0xD
  6447                           
  6448  007D                     IntToString@dest:	
  6449                           ; 1 bytes @ 0xD
  6450                           
  6451  007D                     ___lldiv@counter:	
  6452                           ; 1 bytes @ 0xD
  6453                           
  6454                           
  6455                           ; 1 bytes @ 0xD
  6456  007D                     	ds	1
  6457                           
  6458                           	psect	cstackBANK0
  6459  0020                     __pcstackBANK0:	
  6460  0020                     ?_DebugAlert:	
  6461  0020                     ?_InsertString:	
  6462                           ; 1 bytes @ 0x0
  6463                           
  6464  0020                     ?___aldiv:	
  6465                           ; 2 bytes @ 0x0
  6466                           
  6467  0020                     crc16_update@i:	
  6468                           ; 4 bytes @ 0x0
  6469                           
  6470  0020                     TransmitChar@byte:	
  6471                           ; 1 bytes @ 0x0
  6472                           
  6473  0020                     DebugAlert@delay_high:	
  6474                           ; 1 bytes @ 0x0
  6475                           
  6476  0020                     InsertString@dest:	
  6477                           ; 2 bytes @ 0x0
  6478                           
  6479  0020                     ReverseString@halfway:	
  6480                           ; 2 bytes @ 0x0
  6481                           
  6482  0020                     bme280_parse_sensor_data@data_xlsb:	
  6483                           ; 2 bytes @ 0x0
  6484                           
  6485  0020                     GPS_HasAcknowledged@startTime:	
  6486                           ; 4 bytes @ 0x0
  6487                           
  6488  0020                     ___aldiv@divisor:	
  6489                           ; 4 bytes @ 0x0
  6490                           
  6491                           
  6492                           ; 4 bytes @ 0x0
  6493  0020                     	ds	1
  6494  0021                     ?_crc16:	
  6495  0021                     crc16@segments:	
  6496                           ; 2 bytes @ 0x1
  6497                           
  6498  0021                     TransmitChar@i:	
  6499                           ; 2 bytes @ 0x1
  6500                           
  6501                           
  6502                           ; 2 bytes @ 0x1
  6503  0021                     	ds	1
  6504  0022                     ReverseString@temp:	
  6505  0022                     DebugAlert@delay_low:	
  6506                           ; 1 bytes @ 0x2
  6507                           
  6508  0022                     InsertString@src:	
  6509                           ; 2 bytes @ 0x2
  6510                           
  6511                           
  6512                           ; 2 bytes @ 0x2
  6513  0022                     	ds	1
  6514  0023                     ??_crc16:	
  6515  0023                     ?_TransmitString:	
  6516                           ; 1 bytes @ 0x3
  6517                           
  6518  0023                     ReverseString@opposite:	
  6519                           ; 1 bytes @ 0x3
  6520                           
  6521  0023                     TransmitString@message:	
  6522                           ; 1 bytes @ 0x3
  6523                           
  6524                           
  6525                           ; 2 bytes @ 0x3
  6526  0023                     	ds	1
  6527  0024                     DebugAlert@num_flashes:	
  6528  0024                     GPS_HasAcknowledged@ackByte:	
  6529                           ; 1 bytes @ 0x4
  6530                           
  6531  0024                     InsertString@index:	
  6532                           ; 1 bytes @ 0x4
  6533                           
  6534  0024                     ReverseString@counti:	
  6535                           ; 2 bytes @ 0x4
  6536                           
  6537  0024                     bme280_parse_sensor_data@data_lsb:	
  6538                           ; 2 bytes @ 0x4
  6539                           
  6540  0024                     ___aldiv@dividend:	
  6541                           ; 4 bytes @ 0x4
  6542                           
  6543                           
  6544                           ; 4 bytes @ 0x4
  6545  0024                     	ds	1
  6546  0025                     ??_TransmitString:	
  6547  0025                     crc16@data:	
  6548                           ; 1 bytes @ 0x5
  6549                           
  6550  0025                     DebugAlert@i:	
  6551                           ; 1 bytes @ 0x5
  6552                           
  6553  0025                     GPS_HasAcknowledged@ackPacket:	
  6554                           ; 2 bytes @ 0x5
  6555                           
  6556                           
  6557                           ; 10 bytes @ 0x5
  6558  0025                     	ds	1
  6559  0026                     InsertString@destLimit:	
  6560  0026                     ReverseString@i:	
  6561                           ; 2 bytes @ 0x6
  6562                           
  6563  0026                     crc16@crc:	
  6564                           ; 2 bytes @ 0x6
  6565                           
  6566  0026                     TransmitString@counti:	
  6567                           ; 2 bytes @ 0x6
  6568                           
  6569                           
  6570                           ; 2 bytes @ 0x6
  6571  0026                     	ds	1
  6572  0027                     ??_I2C_Wait_SSPIF:	
  6573                           
  6574                           ; 1 bytes @ 0x7
  6575  0027                     	ds	1
  6576  0028                     ReverseString@str:	
  6577  0028                     ___aldiv@counter:	
  6578                           ; 1 bytes @ 0x8
  6579                           
  6580  0028                     InsertString@counti:	
  6581                           ; 1 bytes @ 0x8
  6582                           
  6583  0028                     crc16@i:	
  6584                           ; 2 bytes @ 0x8
  6585                           
  6586  0028                     TransmitString@i:	
  6587                           ; 2 bytes @ 0x8
  6588                           
  6589  0028                     bme280_parse_sensor_data@data_msb:	
  6590                           ; 2 bytes @ 0x8
  6591                           
  6592                           
  6593                           ; 4 bytes @ 0x8
  6594  0028                     	ds	1
  6595  0029                     ??_IntToString:	
  6596  0029                     ?_UIntToString:	
  6597                           ; 1 bytes @ 0x9
  6598                           
  6599  0029                     ___aldiv@sign:	
  6600                           ; 1 bytes @ 0x9
  6601                           
  6602  0029                     UIntToString@n:	
  6603                           ; 1 bytes @ 0x9
  6604                           
  6605                           
  6606                           ; 4 bytes @ 0x9
  6607  0029                     	ds	1
  6608  002A                     ?_UIntToHexString:	
  6609  002A                     InsertString@i:	
  6610                           ; 1 bytes @ 0xA
  6611                           
  6612  002A                     UIntToHexString@n:	
  6613                           ; 2 bytes @ 0xA
  6614                           
  6615  002A                     ___aldiv@quotient:	
  6616                           ; 4 bytes @ 0xA
  6617                           
  6618                           
  6619                           ; 4 bytes @ 0xA
  6620  002A                     	ds	1
  6621  002B                     ?_WriteEnvSensor:	
  6622  002B                     I2C_ReadByte@ackbit:	
  6623                           ; 1 bytes @ 0xB
  6624                           
  6625  002B                     WriteEnvSensor@dev_id:	
  6626                           ; 1 bytes @ 0xB
  6627                           
  6628  002B                     IntToString@sign:	
  6629                           ; 1 bytes @ 0xB
  6630                           
  6631                           
  6632                           ; 1 bytes @ 0xB
  6633  002B                     	ds	1
  6634  002C                     ??_PollGPS:	
  6635  002C                     bme280_parse_sensor_data@reg_data:	
  6636                           ; 1 bytes @ 0xC
  6637                           
  6638  002C                     I2C_ReadByte@rcvdata:	
  6639                           ; 1 bytes @ 0xC
  6640                           
  6641  002C                     WriteEnvSensor@reg_addr:	
  6642                           ; 1 bytes @ 0xC
  6643                           
  6644  002C                     IntToString@i:	
  6645                           ; 1 bytes @ 0xC
  6646                           
  6647                           
  6648                           ; 2 bytes @ 0xC
  6649  002C                     	ds	1
  6650  002D                     ?_ReadEnvSensor:	
  6651  002D                     ReadEnvSensor@dev_id:	
  6652                           ; 1 bytes @ 0xD
  6653                           
  6654  002D                     WriteEnvSensor@reg_data:	
  6655                           ; 1 bytes @ 0xD
  6656                           
  6657  002D                     UIntToString@dest:	
  6658                           ; 1 bytes @ 0xD
  6659                           
  6660                           
  6661                           ; 1 bytes @ 0xD
  6662  002D                     	ds	1
  6663  002E                     ??_UIntToString:	
  6664  002E                     ?_compensate_temperature:	
  6665                           ; 1 bytes @ 0xE
  6666                           
  6667  002E                     ?_compensate_pressure:	
  6668                           ; 4 bytes @ 0xE
  6669                           
  6670  002E                     ?_compensate_humidity:	
  6671                           ; 4 bytes @ 0xE
  6672                           
  6673  002E                     compensate_temperature@calib_data:	
  6674                           ; 4 bytes @ 0xE
  6675                           
  6676  002E                     compensate_pressure@calib_data:	
  6677                           ; 1 bytes @ 0xE
  6678                           
  6679  002E                     compensate_humidity@calib_data:	
  6680                           ; 1 bytes @ 0xE
  6681                           
  6682  002E                     ReadEnvSensor@reg_addr:	
  6683                           ; 1 bytes @ 0xE
  6684                           
  6685  002E                     UIntToHexString@dest:	
  6686                           ; 1 bytes @ 0xE
  6687                           
  6688  002E                     WriteEnvSensor@len:	
  6689                           ; 1 bytes @ 0xE
  6690                           
  6691                           
  6692                           ; 2 bytes @ 0xE
  6693  002E                     	ds	1
  6694  002F                     ??_UIntToHexString:	
  6695  002F                     ReadEnvSensor@reg_data:	
  6696                           ; 1 bytes @ 0xF
  6697                           
  6698  002F                     GPS_HasAcknowledged@data:	
  6699                           ; 1 bytes @ 0xF
  6700                           
  6701                           
  6702                           ; 1 bytes @ 0xF
  6703  002F                     	ds	1
  6704  0030                     ??_WriteEnvSensor:	
  6705  0030                     GPS_HasAcknowledged@ackByteID:	
  6706                           ; 1 bytes @ 0x10
  6707                           
  6708  0030                     ReadEnvSensor@len:	
  6709                           ; 1 bytes @ 0x10
  6710                           
  6711  0030                     UIntToString@i:	
  6712                           ; 2 bytes @ 0x10
  6713                           
  6714  0030                     PollGPS@startTime:	
  6715                           ; 2 bytes @ 0x10
  6716                           
  6717                           
  6718                           ; 4 bytes @ 0x10
  6719  0030                     	ds	1
  6720  0031                     WriteEnvSensor@rslt:	
  6721  0031                     GPS_HasAcknowledged@i:	
  6722                           ; 1 bytes @ 0x11
  6723                           
  6724  0031                     _UIntToHexString$1795:	
  6725                           ; 1 bytes @ 0x11
  6726                           
  6727                           
  6728                           ; 4 bytes @ 0x11
  6729  0031                     	ds	1
  6730  0032                     ??_compensate_temperature:	
  6731  0032                     ??_compensate_pressure:	
  6732                           ; 1 bytes @ 0x12
  6733                           
  6734  0032                     ??_compensate_humidity:	
  6735                           ; 1 bytes @ 0x12
  6736                           
  6737  0032                     ??_ReadEnvSensor:	
  6738                           ; 1 bytes @ 0x12
  6739                           
  6740  0032                     WriteEnvSensor@i:	
  6741                           ; 1 bytes @ 0x12
  6742                           
  6743                           
  6744                           ; 2 bytes @ 0x12
  6745  0032                     	ds	2
  6746  0034                     ?_bme280_set_regs:	
  6747  0034                     bme280_set_regs@reg_data:	
  6748                           ; 1 bytes @ 0x14
  6749                           
  6750  0034                     ReadEnvSensor@rslt:	
  6751                           ; 1 bytes @ 0x14
  6752                           
  6753  0034                     PollGPS@data_type:	
  6754                           ; 1 bytes @ 0x14
  6755                           
  6756                           
  6757                           ; 7 bytes @ 0x14
  6758  0034                     	ds	1
  6759  0035                     bme280_set_regs@len:	
  6760  0035                     ReadEnvSensor@i:	
  6761                           ; 1 bytes @ 0x15
  6762                           
  6763  0035                     UIntToHexString@remainder:	
  6764                           ; 2 bytes @ 0x15
  6765                           
  6766                           
  6767                           ; 4 bytes @ 0x15
  6768  0035                     	ds	1
  6769  0036                     bme280_set_regs@dev:	
  6770                           
  6771                           ; 1 bytes @ 0x16
  6772  0036                     	ds	1
  6773  0037                     ?_bme280_get_regs:	
  6774  0037                     ??_bme280_set_regs:	
  6775                           ; 1 bytes @ 0x17
  6776                           
  6777  0037                     bme280_get_regs@reg_data:	
  6778                           ; 1 bytes @ 0x17
  6779                           
  6780                           
  6781                           ; 1 bytes @ 0x17
  6782  0037                     	ds	1
  6783  0038                     bme280_get_regs@len:	
  6784                           
  6785                           ; 2 bytes @ 0x18
  6786  0038                     	ds	1
  6787  0039                     UIntToHexString@i:	
  6788                           
  6789                           ; 4 bytes @ 0x19
  6790  0039                     	ds	1
  6791  003A                     bme280_get_regs@dev:	
  6792  003A                     _compensate_humidity$2691:	
  6793                           ; 1 bytes @ 0x1A
  6794                           
  6795  003A                     bme280_set_regs@temp_buff:	
  6796                           ; 4 bytes @ 0x1A
  6797                           
  6798                           
  6799                           ; 20 bytes @ 0x1A
  6800  003A                     	ds	1
  6801  003B                     ??_bme280_get_regs:	
  6802  003B                     PollGPS@skip:	
  6803                           ; 1 bytes @ 0x1B
  6804                           
  6805                           
  6806                           ; 1 bytes @ 0x1B
  6807  003B                     	ds	1
  6808  003C                     _PollGPS$1882:	
  6809  003C                     _compensate_temperature$2687:	
  6810                           ; 1 bytes @ 0x1C
  6811                           
  6812                           
  6813                           ; 4 bytes @ 0x1C
  6814  003C                     	ds	1
  6815  003D                     PollGPS@success:	
  6816                           
  6817                           ; 1 bytes @ 0x1D
  6818  003D                     	ds	1
  6819  003E                     bme280_get_regs@reg_addr:	
  6820  003E                     compensate_humidity@uncomp_data:	
  6821                           ; 1 bytes @ 0x1E
  6822                           
  6823  003E                     PollGPS@doParse:	
  6824                           ; 1 bytes @ 0x1E
  6825                           
  6826                           
  6827                           ; 1 bytes @ 0x1E
  6828  003E                     	ds	1
  6829  003F                     bme280_get_regs@rslt:	
  6830  003F                     PollGPS@signInsertIndex:	
  6831                           ; 1 bytes @ 0x1F
  6832                           
  6833                           
  6834                           ; 2 bytes @ 0x1F
  6835  003F                     	ds	1
  6836  0040                     ??_get_calib_data:	
  6837  0040                     ?_bme280_get_sensor_mode:	
  6838                           ; 1 bytes @ 0x20
  6839                           
  6840  0040                     bme280_get_sensor_mode@dev:	
  6841                           ; 1 bytes @ 0x20
  6842                           
  6843                           
  6844                           ; 1 bytes @ 0x20
  6845  0040                     	ds	1
  6846  0041                     ??_bme280_get_sensor_mode:	
  6847  0041                     PollGPS@dataIndex:	
  6848                           ; 1 bytes @ 0x21
  6849                           
  6850                           
  6851                           ; 2 bytes @ 0x21
  6852  0041                     	ds	2
  6853  0043                     PollGPS@byte:	
  6854  0043                     compensate_humidity@humidity:	
  6855                           ; 1 bytes @ 0x23
  6856                           
  6857  0043                     get_calib_data@calib_data:	
  6858                           ; 4 bytes @ 0x23
  6859                           
  6860                           
  6861                           ; 26 bytes @ 0x23
  6862  0043                     	ds	1
  6863  0044                     bme280_get_sensor_mode@rslt:	
  6864  0044                     PollGPS@dataFieldType:	
  6865                           ; 1 bytes @ 0x24
  6866                           
  6867  0044                     compensate_temperature@temperature_max:	
  6868                           ; 2 bytes @ 0x24
  6869                           
  6870                           
  6871                           ; 4 bytes @ 0x24
  6872  0044                     	ds	1
  6873  0045                     bme280_get_sensor_mode@sensor_mode:	
  6874                           
  6875                           ; 1 bytes @ 0x25
  6876  0045                     	ds	1
  6877  0046                     PollGPS@index:	
  6878                           
  6879                           ; 2 bytes @ 0x26
  6880  0046                     	ds	1
  6881  0047                     compensate_humidity@var1:	
  6882                           
  6883                           ; 4 bytes @ 0x27
  6884  0047                     	ds	1
  6885  0048                     compensate_temperature@var1:	
  6886                           
  6887                           ; 4 bytes @ 0x28
  6888  0048                     	ds	3
  6889  004B                     compensate_humidity@var2:	
  6890                           
  6891                           ; 4 bytes @ 0x2B
  6892  004B                     	ds	1
  6893  004C                     compensate_temperature@uncomp_data:	
  6894                           
  6895                           ; 1 bytes @ 0x2C
  6896  004C                     	ds	1
  6897  004D                     compensate_temperature@var2:	
  6898                           
  6899                           ; 4 bytes @ 0x2D
  6900  004D                     	ds	1
  6901  004E                     bme280_set_regs@temp_len:	
  6902                           
  6903                           ; 2 bytes @ 0x2E
  6904  004E                     	ds	1
  6905  004F                     compensate_humidity@var4:	
  6906                           
  6907                           ; 4 bytes @ 0x2F
  6908  004F                     	ds	1
  6909  0050                     bme280_set_regs@reg_addr_cnt:	
  6910                           
  6911                           ; 1 bytes @ 0x30
  6912  0050                     	ds	1
  6913  0051                     bme280_set_regs@rslt:	
  6914  0051                     compensate_temperature@temperature:	
  6915                           ; 1 bytes @ 0x31
  6916                           
  6917                           
  6918                           ; 4 bytes @ 0x31
  6919  0051                     	ds	1
  6920  0052                     bme280_set_regs@reg_addr:	
  6921                           
  6922                           ; 1 bytes @ 0x32
  6923  0052                     	ds	1
  6924  0053                     ??_bme280_soft_reset:	
  6925  0053                     ?_set_filter_standby_settings:	
  6926                           ; 1 bytes @ 0x33
  6927                           
  6928  0053                     ?_write_power_mode:	
  6929                           ; 1 bytes @ 0x33
  6930                           
  6931  0053                     ?_set_osr_humidity_settings:	
  6932                           ; 1 bytes @ 0x33
  6933                           
  6934  0053                     ?_set_osr_press_temp_settings:	
  6935                           ; 1 bytes @ 0x33
  6936                           
  6937  0053                     write_power_mode@dev:	
  6938                           ; 1 bytes @ 0x33
  6939                           
  6940  0053                     set_osr_humidity_settings@settings:	
  6941                           ; 1 bytes @ 0x33
  6942                           
  6943  0053                     set_osr_press_temp_settings@settings:	
  6944                           ; 2 bytes @ 0x33
  6945                           
  6946  0053                     set_filter_standby_settings@settings:	
  6947                           ; 2 bytes @ 0x33
  6948                           
  6949  0053                     compensate_humidity@var5:	
  6950                           ; 2 bytes @ 0x33
  6951                           
  6952                           
  6953                           ; 4 bytes @ 0x33
  6954  0053                     	ds	1
  6955  0054                     ??_write_power_mode:	
  6956                           
  6957                           ; 1 bytes @ 0x34
  6958  0054                     	ds	1
  6959  0055                     set_osr_humidity_settings@dev:	
  6960  0055                     set_osr_press_temp_settings@dev:	
  6961                           ; 1 bytes @ 0x35
  6962                           
  6963  0055                     set_filter_standby_settings@dev:	
  6964                           ; 1 bytes @ 0x35
  6965                           
  6966                           
  6967                           ; 1 bytes @ 0x35
  6968  0055                     	ds	1
  6969  0056                     ??_set_filter_standby_settings:	
  6970  0056                     ??_set_osr_humidity_settings:	
  6971                           ; 1 bytes @ 0x36
  6972                           
  6973  0056                     ??_set_osr_press_temp_settings:	
  6974                           ; 1 bytes @ 0x36
  6975                           
  6976  0056                     bme280_soft_reset@soft_rst_cmd:	
  6977                           ; 1 bytes @ 0x36
  6978                           
  6979                           
  6980                           ; 1 bytes @ 0x36
  6981  0056                     	ds	1
  6982  0057                     bme280_soft_reset@rslt:	
  6983  0057                     write_power_mode@sensor_mode:	
  6984                           ; 1 bytes @ 0x37
  6985                           
  6986  0057                     compensate_humidity@var3:	
  6987                           ; 1 bytes @ 0x37
  6988                           
  6989                           
  6990                           ; 4 bytes @ 0x37
  6991  0057                     	ds	1
  6992  0058                     bme280_soft_reset@reg_addr:	
  6993  0058                     write_power_mode@rslt:	
  6994                           ; 1 bytes @ 0x38
  6995                           
  6996                           
  6997                           ; 1 bytes @ 0x38
  6998  0058                     	ds	1
  6999  0059                     bme280_soft_reset@dev:	
  7000  0059                     set_osr_humidity_settings@ctrl_hum:	
  7001                           ; 1 bytes @ 0x39
  7002                           
  7003  0059                     set_osr_press_temp_settings@desired_settings:	
  7004                           ; 1 bytes @ 0x39
  7005                           
  7006  0059                     set_filter_standby_settings@desired_settings:	
  7007                           ; 1 bytes @ 0x39
  7008                           
  7009  0059                     write_power_mode@reg_addr:	
  7010                           ; 1 bytes @ 0x39
  7011                           
  7012                           
  7013                           ; 1 bytes @ 0x39
  7014  0059                     	ds	1
  7015  005A                     set_osr_humidity_settings@ctrl_meas:	
  7016  005A                     set_osr_press_temp_settings@rslt:	
  7017                           ; 1 bytes @ 0x3A
  7018                           
  7019  005A                     set_filter_standby_settings@rslt:	
  7020                           ; 1 bytes @ 0x3A
  7021                           
  7022  005A                     write_power_mode@sensor_mode_reg_val:	
  7023                           ; 1 bytes @ 0x3A
  7024                           
  7025                           
  7026                           ; 1 bytes @ 0x3A
  7027  005A                     	ds	1
  7028  005B                     ?_bme280_compensate_data:	
  7029  005B                     bme280_compensate_data@uncomp_data:	
  7030                           ; 1 bytes @ 0x3B
  7031                           
  7032  005B                     set_osr_humidity_settings@rslt:	
  7033                           ; 1 bytes @ 0x3B
  7034                           
  7035  005B                     set_osr_press_temp_settings@reg_addr:	
  7036                           ; 1 bytes @ 0x3B
  7037                           
  7038  005B                     set_filter_standby_settings@reg_addr:	
  7039                           ; 1 bytes @ 0x3B
  7040                           
  7041                           
  7042                           ; 1 bytes @ 0x3B
  7043  005B                     	ds	1
  7044  005C                     bme280_compensate_data@comp_data:	
  7045  005C                     set_osr_humidity_settings@reg_addr:	
  7046                           ; 1 bytes @ 0x3C
  7047                           
  7048  005C                     set_osr_press_temp_settings@reg_data:	
  7049                           ; 1 bytes @ 0x3C
  7050                           
  7051  005C                     set_filter_standby_settings@reg_data:	
  7052                           ; 1 bytes @ 0x3C
  7053                           
  7054                           
  7055                           ; 1 bytes @ 0x3C
  7056  005C                     	ds	1
  7057  005D                     ?_set_osr_settings:	
  7058  005D                     bme280_compensate_data@calib_data:	
  7059                           ; 1 bytes @ 0x3D
  7060                           
  7061  005D                     set_osr_settings@settings:	
  7062                           ; 1 bytes @ 0x3D
  7063                           
  7064                           
  7065                           ; 2 bytes @ 0x3D
  7066  005D                     	ds	1
  7067  005E                     ??_bme280_compensate_data:	
  7068  005E                     get_calib_data@rslt:	
  7069                           ; 1 bytes @ 0x3E
  7070                           
  7071                           
  7072                           ; 1 bytes @ 0x3E
  7073  005E                     	ds	1
  7074  005F                     bme280_compensate_data@rslt:	
  7075  005F                     set_osr_settings@dev:	
  7076                           ; 1 bytes @ 0x3F
  7077                           
  7078  005F                     get_calib_data@dev:	
  7079                           ; 1 bytes @ 0x3F
  7080                           
  7081                           
  7082                           ; 1 bytes @ 0x3F
  7083  005F                     	ds	1
  7084  0060                     ??_set_osr_settings:	
  7085  0060                     ??_bme280_init:	
  7086                           ; 1 bytes @ 0x40
  7087                           
  7088  0060                     bme280_compensate_data@sensor_comp:	
  7089                           ; 1 bytes @ 0x40
  7090                           
  7091                           
  7092                           ; 1 bytes @ 0x40
  7093  0060                     	ds	1
  7094  0061                     ?_bme280_get_sensor_data:	
  7095  0061                     bme280_get_sensor_data@comp_data:	
  7096                           ; 1 bytes @ 0x41
  7097                           
  7098                           
  7099                           ; 1 bytes @ 0x41
  7100  0061                     	ds	1
  7101  0062                     bme280_get_sensor_data@dev:	
  7102  0062                     set_osr_settings@rslt:	
  7103                           ; 1 bytes @ 0x42
  7104                           
  7105                           
  7106                           ; 1 bytes @ 0x42
  7107  0062                     	ds	1
  7108  0063                     ??_bme280_get_sensor_data:	
  7109  0063                     bme280_init@try_count:	
  7110                           ; 1 bytes @ 0x43
  7111                           
  7112  0063                     set_osr_settings@desired_settings:	
  7113                           ; 1 bytes @ 0x43
  7114                           
  7115                           
  7116                           ; 1 bytes @ 0x43
  7117  0063                     	ds	1
  7118  0064                     ?_reload_device_settings:	
  7119  0064                     bme280_init@chip_id:	
  7120                           ; 1 bytes @ 0x44
  7121                           
  7122  0064                     reload_device_settings@dev:	
  7123                           ; 1 bytes @ 0x44
  7124                           
  7125                           
  7126                           ; 1 bytes @ 0x44
  7127  0064                     	ds	1
  7128  0065                     ??_reload_device_settings:	
  7129  0065                     bme280_init@rslt:	
  7130                           ; 1 bytes @ 0x45
  7131                           
  7132                           
  7133                           ; 1 bytes @ 0x45
  7134  0065                     	ds	1
  7135  0066                     bme280_init@dev:	
  7136                           
  7137                           ; 1 bytes @ 0x46
  7138  0066                     	ds	1
  7139  0067                     reload_device_settings@settings:	
  7140                           
  7141                           ; 1 bytes @ 0x47
  7142  0067                     	ds	1
  7143  0068                     reload_device_settings@rslt:	
  7144                           
  7145                           ; 1 bytes @ 0x48
  7146  0068                     	ds	1
  7147  0069                     ??_put_device_to_sleep:	
  7148                           
  7149                           ; 1 bytes @ 0x49
  7150  0069                     	ds	3
  7151  006C                     ?_bme280_set_sensor_settings:	
  7152  006C                     ?_bme280_set_sensor_mode:	
  7153                           ; 1 bytes @ 0x4C
  7154                           
  7155  006C                     bme280_set_sensor_settings@dev:	
  7156                           ; 1 bytes @ 0x4C
  7157                           
  7158  006C                     bme280_set_sensor_mode@dev:	
  7159                           ; 1 bytes @ 0x4C
  7160                           
  7161                           
  7162                           ; 1 bytes @ 0x4C
  7163  006C                     	ds	1
  7164  006D                     ??_bme280_set_sensor_settings:	
  7165  006D                     ??_bme280_set_sensor_mode:	
  7166                           ; 1 bytes @ 0x4D
  7167                           
  7168                           
  7169                           ; 1 bytes @ 0x4D
  7170  006D                     	ds	2
  7171                           
  7172                           	psect	maintext
  7173  0AA1                     __pmaintext:	
  7174 ;;
  7175 ;;Main: autosize = 0, tempsize = 5, incstack = 0, save=0
  7176 ;;
  7177 ;; *************** function _main *****************
  7178 ;; Defined at:
  7179 ;;		line 657 in file "main.c"
  7180 ;; Parameters:    Size  Location     Type
  7181 ;;		None
  7182 ;; Auto vars:     Size  Location     Type
  7183 ;;  convertedNum   16    0[BANK2 ] unsigned char [16]
  7184 ;;  sensor_data    12   18[BANK2 ] struct bme280_data
  7185 ;;  index           2   30[BANK2 ] int 
  7186 ;;  end             2   16[BANK2 ] int 
  7187 ;; Return value:  Size  Location     Type
  7188 ;;                  1    wreg      void 
  7189 ;; Registers used:
  7190 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7191 ;; Tracked objects:
  7192 ;;		On entry : B3F/0
  7193 ;;		On exit  : 0/0
  7194 ;;		Unchanged: 0/0
  7195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7196 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7197 ;;      Locals:         0       0       0      32       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7198 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7199 ;;      Totals:         0       0       5      32       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7200 ;;Total ram usage:       37 bytes
  7201 ;; Hardware stack levels required when called:   17
  7202 ;; This function calls:
  7203 ;;		_BME280_Init
  7204 ;;		_ClearString
  7205 ;;		_DebugAlert
  7206 ;;		_InitTiming
  7207 ;;		_Insert
  7208 ;;		_InsertString
  7209 ;;		_IntToString
  7210 ;;		_PollGPS
  7211 ;;		_SYSTEM_Initialize
  7212 ;;		_SetupGPS
  7213 ;;		_Sleep
  7214 ;;		_TransmitString
  7215 ;;		_UIntToHexString
  7216 ;;		_UIntToString
  7217 ;;		_bme280_get_sensor_data
  7218 ;;		_crc16
  7219 ;;		_strlen
  7220 ;; This function is called by:
  7221 ;;		Startup code after reset
  7222 ;; This function uses a non-reentrant model
  7223 ;;
  7224                           
  7225                           
  7226                           ;psect for function _main
  7227  0AA1                     _main:	
  7228                           
  7229                           ;main.c: 660:     SYSTEM_Initialize();
  7230                           
  7231                           ;incstack = 0
  7232 ;; hardware stack exceeded
  7233                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7234  0AA1  31A6  26C6  318A   	fcall	_SYSTEM_Initialize
  7235                           
  7236                           ;main.c: 661:     InitTiming();
  7237  0AA4  31A6  266F  318A   	fcall	_InitTiming
  7238                           
  7239                           ;main.c: 664:     BME280_Init();
  7240  0AA7  3192  2249  318A   	fcall	_BME280_Init
  7241                           
  7242                           ;main.c: 667:     SetupGPS();
  7243  0AAA  319D  25CF  318A   	fcall	_SetupGPS
  7244  0AAD                     l5946:	
  7245                           
  7246                           ;main.c: 671:     {;main.c: 674:         if (PollGPS())
  7247  0AAD  3185  25AA  318A   	fcall	_PollGPS
  7248  0AB0  3A00               	xorlw	0
  7249  0AB1  1903               	skipnz
  7250  0AB2  2D18               	goto	l6012
  7251                           
  7252                           ;main.c: 678:         {;main.c: 679:             struct bme280_data sensor_data;;main.c:
      +                           680:             bme280_get_sensor_data(0x07, &sensor_data, &EnvSensor);
  7253  0AB3  3059               	movlw	(low (main@sensor_data| (0+256)))& (0+255)
  7254  0AB4  0141               	movlb	1	; select bank1
  7255  0AB5  00E3               	movwf	??_main^(0+128)
  7256  0AB6  0863               	movf	??_main^(0+128),w
  7257  0AB7  0140               	movlb	0	; select bank0
  7258  0AB8  00E1               	movwf	bme280_get_sensor_data@comp_data
  7259  0AB9  30BA               	movlw	(low (_EnvSensor| (0+256)))& (0+255)
  7260  0ABA  0141               	movlb	1	; select bank1
  7261  0ABB  00E4               	movwf	(??_main+1)^(0+128)
  7262  0ABC  0864               	movf	(??_main+1)^(0+128),w
  7263  0ABD  0140               	movlb	0	; select bank0
  7264  0ABE  00E2               	movwf	bme280_get_sensor_data@dev
  7265  0ABF  3007               	movlw	7
  7266  0AC0  3190  20B1  318A   	fcall	_bme280_get_sensor_data
  7267                           
  7268                           ;main.c: 683:             int index = strlen(messages[1]);
  7269  0AC3  0142               	movlb	2	; select bank2
  7270  0AC4  086E               	movf	((low ((_messages| (0+256)+2))+1))^0,w
  7271  0AC5  00F1               	movwf	strlen@s+1
  7272  0AC6  086D               	movf	(low ((_messages| (0+256)+2)))^0,w
  7273  0AC7  00F0               	movwf	strlen@s
  7274  0AC8  31A7  2722  318A   	fcall	_strlen
  7275  0ACB  0871               	movf	?_strlen+1,w
  7276  0ACC  0142               	movlb	2	; select bank2
  7277  0ACD  00E6               	movwf	(main@index+1)^(0+256)
  7278  0ACE  0870               	movf	?_strlen,w
  7279  0ACF  00E5               	movwf	main@index^(0+256)
  7280                           
  7281                           ;main.c: 684:             index = Insert(messages[1], ',', index, 70);
  7282  0AD0  086E               	movf	((low ((_messages| (0+256)+2))+1))^0,w
  7283  0AD1  00F1               	movwf	Insert@dest+1
  7284  0AD2  086D               	movf	(low ((_messages| (0+256)+2)))^0,w
  7285  0AD3  00F0               	movwf	Insert@dest
  7286  0AD4  302C               	movlw	44
  7287  0AD5  0141               	movlb	1	; select bank1
  7288  0AD6  00E3               	movwf	??_main^(0+128)
  7289  0AD7  0863               	movf	??_main^(0+128),w
  7290  0AD8  00F2               	movwf	Insert@src
  7291  0AD9  0142               	movlb	2	; select bank2
  7292  0ADA  0866               	movf	(main@index+1)^(0+256),w
  7293  0ADB  00F4               	movwf	Insert@index+1
  7294  0ADC  0865               	movf	main@index^(0+256),w
  7295  0ADD  00F3               	movwf	Insert@index
  7296  0ADE  3046               	movlw	70
  7297  0ADF  00F5               	movwf	Insert@destLimit
  7298  0AE0  3000               	movlw	0
  7299  0AE1  00F6               	movwf	Insert@destLimit+1
  7300  0AE2  3193  232C  318A   	fcall	_Insert
  7301  0AE5  0871               	movf	?_Insert+1,w
  7302  0AE6  0142               	movlb	2	; select bank2
  7303  0AE7  00E6               	movwf	(main@index+1)^(0+256)
  7304  0AE8  0870               	movf	?_Insert,w
  7305  0AE9  00E5               	movwf	main@index^(0+256)
  7306                           
  7307                           ;main.c: 686:             char convertedNumber[16];;main.c: 687:             convertedNu
      +                          mber[15] = '\0';
  7308  0AEA  01D6               	clrf	(main@convertedNumber^(0+256)+15)
  7309                           
  7310                           ;main.c: 688:             ClearString(convertedNumber);
  7311  0AEB  3047               	movlw	low main@convertedNumber
  7312  0AEC  00F5               	movwf	ClearString@str
  7313  0AED  3001               	movlw	high main@convertedNumber
  7314  0AEE  00F6               	movwf	ClearString@str+1
  7315  0AEF  3198  202D  318A   	fcall	_ClearString
  7316                           
  7317                           ;main.c: 691:             IntToString(sensor_data.temperature, convertedNumber);
  7318  0AF2  0142               	movlb	2	; select bank2
  7319  0AF3  085E               	movf	((main@sensor_data+1)^(0+256)+4),w
  7320  0AF4  00FC               	movwf	IntToString@n+1
  7321  0AF5  085D               	movf	(main@sensor_data^(0+256)+4),w
  7322  0AF6  00FB               	movwf	IntToString@n
  7323  0AF7  3047               	movlw	(low (main@convertedNumber| (0+256)))& (0+255)
  7324  0AF8  0141               	movlb	1	; select bank1
  7325  0AF9  00E3               	movwf	??_main^(0+128)
  7326  0AFA  0863               	movf	??_main^(0+128),w
  7327  0AFB  00FD               	movwf	IntToString@dest
  7328  0AFC  3191  2175  318A   	fcall	_IntToString
  7329                           
  7330                           ;main.c: 692:             index = InsertString(messages[1], convertedNumber, index, 70);
  7331  0AFF  0142               	movlb	2	; select bank2
  7332  0B00  086E               	movf	((low ((_messages| (0+256)+2))+1))^0,w
  7333  0B01  0140               	movlb	0	; select bank0
  7334  0B02  00A1               	movwf	InsertString@dest+1
  7335  0B03  0142               	movlb	2	; select bank2
  7336  0B04  086D               	movf	(low ((_messages| (0+256)+2)))^0,w
  7337  0B05  0140               	movlb	0	; select bank0
  7338  0B06  00A0               	movwf	InsertString@dest
  7339  0B07  3047               	movlw	low main@convertedNumber
  7340  0B08  00A2               	movwf	InsertString@src
  7341  0B09  3001               	movlw	high main@convertedNumber
  7342  0B0A  00A3               	movwf	InsertString@src+1
  7343  0B0B  0142               	movlb	2	; select bank2
  7344  0B0C  0866               	movf	(main@index+1)^(0+256),w
  7345  0B0D  0140               	movlb	0	; select bank0
  7346  0B0E  00A5               	movwf	InsertString@index+1
  7347  0B0F  0142               	movlb	2	; select bank2
  7348  0B10  0865               	movf	main@index^(0+256),w
  7349  0B11  0140               	movlb	0	; select bank0
  7350  0B12  00A4               	movwf	InsertString@index
  7351  0B13  3046               	movlw	70
  7352  0B14  00A6               	movwf	InsertString@destLimit
  7353  0B15  3000               	movlw	0
  7354  0B16  00A7               	movwf	InsertString@destLimit+1
  7355  0B17  319F  275C  318A   	fcall	_InsertString
  7356  0B1A  0140               	movlb	0	; select bank0
  7357  0B1B  0821               	movf	?_InsertString+1,w
  7358  0B1C  0142               	movlb	2	; select bank2
  7359  0B1D  00E6               	movwf	(main@index+1)^(0+256)
  7360  0B1E  0140               	movlb	0	; select bank0
  7361  0B1F  0820               	movf	?_InsertString,w
  7362  0B20  0142               	movlb	2	; select bank2
  7363  0B21  00E5               	movwf	main@index^(0+256)
  7364                           
  7365                           ;main.c: 693:             index = Insert(messages[1], ',', index, 70);
  7366  0B22  086E               	movf	((low ((_messages| (0+256)+2))+1))^0,w
  7367  0B23  00F1               	movwf	Insert@dest+1
  7368  0B24  086D               	movf	(low ((_messages| (0+256)+2)))^0,w
  7369  0B25  00F0               	movwf	Insert@dest
  7370  0B26  302C               	movlw	44
  7371  0B27  0141               	movlb	1	; select bank1
  7372  0B28  00E3               	movwf	??_main^(0+128)
  7373  0B29  0863               	movf	??_main^(0+128),w
  7374  0B2A  00F2               	movwf	Insert@src
  7375  0B2B  0142               	movlb	2	; select bank2
  7376  0B2C  0866               	movf	(main@index+1)^(0+256),w
  7377  0B2D  00F4               	movwf	Insert@index+1
  7378  0B2E  0865               	movf	main@index^(0+256),w
  7379  0B2F  00F3               	movwf	Insert@index
  7380  0B30  3046               	movlw	70
  7381  0B31  00F5               	movwf	Insert@destLimit
  7382  0B32  3000               	movlw	0
  7383  0B33  00F6               	movwf	Insert@destLimit+1
  7384  0B34  3193  232C  318A   	fcall	_Insert
  7385  0B37  0871               	movf	?_Insert+1,w
  7386  0B38  0142               	movlb	2	; select bank2
  7387  0B39  00E6               	movwf	(main@index+1)^(0+256)
  7388  0B3A  0870               	movf	?_Insert,w
  7389  0B3B  00E5               	movwf	main@index^(0+256)
  7390                           
  7391                           ;main.c: 694:             ClearString(convertedNumber);
  7392  0B3C  3047               	movlw	low main@convertedNumber
  7393  0B3D  00F5               	movwf	ClearString@str
  7394  0B3E  3001               	movlw	high main@convertedNumber
  7395  0B3F  00F6               	movwf	ClearString@str+1
  7396  0B40  3198  202D  318A   	fcall	_ClearString
  7397                           
  7398                           ;main.c: 696:             UIntToString(sensor_data.pressure, convertedNumber);
  7399  0B43  0142               	movlb	2	; select bank2
  7400  0B44  085C               	movf	(main@sensor_data+3)^(0+256),w
  7401  0B45  0140               	movlb	0	; select bank0
  7402  0B46  00AC               	movwf	UIntToString@n+3
  7403  0B47  0142               	movlb	2	; select bank2
  7404  0B48  085B               	movf	(main@sensor_data+2)^(0+256),w
  7405  0B49  0140               	movlb	0	; select bank0
  7406  0B4A  00AB               	movwf	UIntToString@n+2
  7407  0B4B  0142               	movlb	2	; select bank2
  7408  0B4C  085A               	movf	(main@sensor_data+1)^(0+256),w
  7409  0B4D  0140               	movlb	0	; select bank0
  7410  0B4E  00AA               	movwf	UIntToString@n+1
  7411  0B4F  0142               	movlb	2	; select bank2
  7412  0B50  0859               	movf	main@sensor_data^(0+256),w
  7413  0B51  0140               	movlb	0	; select bank0
  7414  0B52  00A9               	movwf	UIntToString@n
  7415  0B53  3047               	movlw	(low (main@convertedNumber| (0+256)))& (0+255)
  7416  0B54  0141               	movlb	1	; select bank1
  7417  0B55  00E3               	movwf	??_main^(0+128)
  7418  0B56  0863               	movf	??_main^(0+128),w
  7419  0B57  0140               	movlb	0	; select bank0
  7420  0B58  00AD               	movwf	UIntToString@dest
  7421  0B59  3190  2004  318A   	fcall	_UIntToString
  7422                           
  7423                           ;main.c: 697:             index = InsertString(messages[1], convertedNumber, index, 70);
  7424  0B5C  0142               	movlb	2	; select bank2
  7425  0B5D  086E               	movf	((low ((_messages| (0+256)+2))+1))^0,w
  7426  0B5E  0140               	movlb	0	; select bank0
  7427  0B5F  00A1               	movwf	InsertString@dest+1
  7428  0B60  0142               	movlb	2	; select bank2
  7429  0B61  086D               	movf	(low ((_messages| (0+256)+2)))^0,w
  7430  0B62  0140               	movlb	0	; select bank0
  7431  0B63  00A0               	movwf	InsertString@dest
  7432  0B64  3047               	movlw	low main@convertedNumber
  7433  0B65  00A2               	movwf	InsertString@src
  7434  0B66  3001               	movlw	high main@convertedNumber
  7435  0B67  00A3               	movwf	InsertString@src+1
  7436  0B68  0142               	movlb	2	; select bank2
  7437  0B69  0866               	movf	(main@index+1)^(0+256),w
  7438  0B6A  0140               	movlb	0	; select bank0
  7439  0B6B  00A5               	movwf	InsertString@index+1
  7440  0B6C  0142               	movlb	2	; select bank2
  7441  0B6D  0865               	movf	main@index^(0+256),w
  7442  0B6E  0140               	movlb	0	; select bank0
  7443  0B6F  00A4               	movwf	InsertString@index
  7444  0B70  3046               	movlw	70
  7445  0B71  00A6               	movwf	InsertString@destLimit
  7446  0B72  3000               	movlw	0
  7447  0B73  00A7               	movwf	InsertString@destLimit+1
  7448  0B74  319F  275C  318A   	fcall	_InsertString
  7449  0B77  0140               	movlb	0	; select bank0
  7450  0B78  0821               	movf	?_InsertString+1,w
  7451  0B79  0142               	movlb	2	; select bank2
  7452  0B7A  00E6               	movwf	(main@index+1)^(0+256)
  7453  0B7B  0140               	movlb	0	; select bank0
  7454  0B7C  0820               	movf	?_InsertString,w
  7455  0B7D  0142               	movlb	2	; select bank2
  7456  0B7E  00E5               	movwf	main@index^(0+256)
  7457                           
  7458                           ;main.c: 698:             index = Insert(messages[1], ',', index, 70);
  7459  0B7F  086E               	movf	((low ((_messages| (0+256)+2))+1))^0,w
  7460  0B80  00F1               	movwf	Insert@dest+1
  7461  0B81  086D               	movf	(low ((_messages| (0+256)+2)))^0,w
  7462  0B82  00F0               	movwf	Insert@dest
  7463  0B83  302C               	movlw	44
  7464  0B84  0141               	movlb	1	; select bank1
  7465  0B85  00E3               	movwf	??_main^(0+128)
  7466  0B86  0863               	movf	??_main^(0+128),w
  7467  0B87  00F2               	movwf	Insert@src
  7468  0B88  0142               	movlb	2	; select bank2
  7469  0B89  0866               	movf	(main@index+1)^(0+256),w
  7470  0B8A  00F4               	movwf	Insert@index+1
  7471  0B8B  0865               	movf	main@index^(0+256),w
  7472  0B8C  00F3               	movwf	Insert@index
  7473  0B8D  3046               	movlw	70
  7474  0B8E  00F5               	movwf	Insert@destLimit
  7475  0B8F  3000               	movlw	0
  7476  0B90  00F6               	movwf	Insert@destLimit+1
  7477  0B91  3193  232C  318A   	fcall	_Insert
  7478  0B94  0871               	movf	?_Insert+1,w
  7479  0B95  0142               	movlb	2	; select bank2
  7480  0B96  00E6               	movwf	(main@index+1)^(0+256)
  7481  0B97  0870               	movf	?_Insert,w
  7482  0B98  00E5               	movwf	main@index^(0+256)
  7483                           
  7484                           ;main.c: 699:             ClearString(convertedNumber);
  7485  0B99  3047               	movlw	low main@convertedNumber
  7486  0B9A  00F5               	movwf	ClearString@str
  7487  0B9B  3001               	movlw	high main@convertedNumber
  7488  0B9C  00F6               	movwf	ClearString@str+1
  7489  0B9D  3198  202D  318A   	fcall	_ClearString
  7490                           
  7491                           ;main.c: 701:             UIntToString(sensor_data.humidity, convertedNumber);
  7492  0BA0  3008               	movlw	8
  7493  0BA1  3E59               	addlw	(low (main@sensor_data| (0+256)))& (0+255)
  7494  0BA2  0086               	movwf	6
  7495  0BA3  3001               	movlw	1	; select bank2/3
  7496  0BA4  0087               	movwf	7
  7497  0BA5  3F40               	moviw [0]fsr1
  7498  0BA6  0140               	movlb	0	; select bank0
  7499  0BA7  00A9               	movwf	UIntToString@n
  7500  0BA8  3F41               	moviw [1]fsr1
  7501  0BA9  00AA               	movwf	UIntToString@n+1
  7502  0BAA  3F42               	moviw [2]fsr1
  7503  0BAB  00AB               	movwf	UIntToString@n+2
  7504  0BAC  3F43               	moviw [3]fsr1
  7505  0BAD  00AC               	movwf	UIntToString@n+3
  7506  0BAE  3047               	movlw	(low (main@convertedNumber| (0+256)))& (0+255)
  7507  0BAF  0141               	movlb	1	; select bank1
  7508  0BB0  00E3               	movwf	??_main^(0+128)
  7509  0BB1  0863               	movf	??_main^(0+128),w
  7510  0BB2  0140               	movlb	0	; select bank0
  7511  0BB3  00AD               	movwf	UIntToString@dest
  7512  0BB4  3190  2004  318A   	fcall	_UIntToString
  7513                           
  7514                           ;main.c: 702:             index = InsertString(messages[1], convertedNumber, index, 70);
  7515  0BB7  0142               	movlb	2	; select bank2
  7516  0BB8  086E               	movf	((low ((_messages| (0+256)+2))+1))^0,w
  7517  0BB9  0140               	movlb	0	; select bank0
  7518  0BBA  00A1               	movwf	InsertString@dest+1
  7519  0BBB  0142               	movlb	2	; select bank2
  7520  0BBC  086D               	movf	(low ((_messages| (0+256)+2)))^0,w
  7521  0BBD  0140               	movlb	0	; select bank0
  7522  0BBE  00A0               	movwf	InsertString@dest
  7523  0BBF  3047               	movlw	low main@convertedNumber
  7524  0BC0  00A2               	movwf	InsertString@src
  7525  0BC1  3001               	movlw	high main@convertedNumber
  7526  0BC2  00A3               	movwf	InsertString@src+1
  7527  0BC3  0142               	movlb	2	; select bank2
  7528  0BC4  0866               	movf	(main@index+1)^(0+256),w
  7529  0BC5  0140               	movlb	0	; select bank0
  7530  0BC6  00A5               	movwf	InsertString@index+1
  7531  0BC7  0142               	movlb	2	; select bank2
  7532  0BC8  0865               	movf	main@index^(0+256),w
  7533  0BC9  0140               	movlb	0	; select bank0
  7534  0BCA  00A4               	movwf	InsertString@index
  7535  0BCB  3046               	movlw	70
  7536  0BCC  00A6               	movwf	InsertString@destLimit
  7537  0BCD  3000               	movlw	0
  7538  0BCE  00A7               	movwf	InsertString@destLimit+1
  7539  0BCF  319F  275C  318A   	fcall	_InsertString
  7540  0BD2  0140               	movlb	0	; select bank0
  7541  0BD3  0821               	movf	?_InsertString+1,w
  7542  0BD4  0142               	movlb	2	; select bank2
  7543  0BD5  00E6               	movwf	(main@index+1)^(0+256)
  7544  0BD6  0140               	movlb	0	; select bank0
  7545  0BD7  0820               	movf	?_InsertString,w
  7546  0BD8  0142               	movlb	2	; select bank2
  7547  0BD9  00E5               	movwf	main@index^(0+256)
  7548                           
  7549                           ;main.c: 704:             int end = index;
  7550  0BDA  0866               	movf	(main@index+1)^(0+256),w
  7551  0BDB  00D8               	movwf	(main@end+1)^(0+256)
  7552  0BDC  0865               	movf	main@index^(0+256),w
  7553  0BDD  00D7               	movwf	main@end^(0+256)
  7554                           
  7555                           ;main.c: 707:             index = InsertString(messages[0], "Wisp-1", 0, 70);
  7556  0BDE  086C               	movf	(_messages+1)^(0+256),w
  7557  0BDF  0140               	movlb	0	; select bank0
  7558  0BE0  00A1               	movwf	InsertString@dest+1
  7559  0BE1  0142               	movlb	2	; select bank2
  7560  0BE2  086B               	movf	_messages^(0+256),w
  7561  0BE3  0140               	movlb	0	; select bank0
  7562  0BE4  00A0               	movwf	InsertString@dest
  7563  0BE5  30AA               	movlw	low (STR_9| (0+32768))
  7564  0BE6  00A2               	movwf	InsertString@src
  7565  0BE7  30A8               	movlw	high (STR_9| (0+32768))
  7566  0BE8  00A3               	movwf	InsertString@src+1
  7567  0BE9  3000               	movlw	0
  7568  0BEA  00A4               	movwf	InsertString@index
  7569  0BEB  00A5               	movwf	InsertString@index+1
  7570  0BEC  3046               	movlw	70
  7571  0BED  00A6               	movwf	InsertString@destLimit
  7572  0BEE  3000               	movlw	0
  7573  0BEF  00A7               	movwf	InsertString@destLimit+1
  7574  0BF0  319F  275C  318A   	fcall	_InsertString
  7575  0BF3  0140               	movlb	0	; select bank0
  7576  0BF4  0821               	movf	?_InsertString+1,w
  7577  0BF5  0142               	movlb	2	; select bank2
  7578  0BF6  00E6               	movwf	(main@index+1)^(0+256)
  7579  0BF7  0140               	movlb	0	; select bank0
  7580  0BF8  0820               	movf	?_InsertString,w
  7581  0BF9  0142               	movlb	2	; select bank2
  7582  0BFA  00E5               	movwf	main@index^(0+256)
  7583                           
  7584                           ;main.c: 708:             index = Insert(messages[0], ',', index, 70);
  7585  0BFB  086C               	movf	(_messages+1)^(0+256),w
  7586  0BFC  00F1               	movwf	Insert@dest+1
  7587  0BFD  086B               	movf	_messages^(0+256),w
  7588  0BFE  00F0               	movwf	Insert@dest
  7589  0BFF  302C               	movlw	44
  7590  0C00  0141               	movlb	1	; select bank1
  7591  0C01  00E3               	movwf	??_main^(0+128)
  7592  0C02  0863               	movf	??_main^(0+128),w
  7593  0C03  00F2               	movwf	Insert@src
  7594  0C04  0142               	movlb	2	; select bank2
  7595  0C05  0866               	movf	(main@index+1)^(0+256),w
  7596  0C06  00F4               	movwf	Insert@index+1
  7597  0C07  0865               	movf	main@index^(0+256),w
  7598  0C08  00F3               	movwf	Insert@index
  7599  0C09  3046               	movlw	70
  7600  0C0A  00F5               	movwf	Insert@destLimit
  7601  0C0B  3000               	movlw	0
  7602  0C0C  00F6               	movwf	Insert@destLimit+1
  7603  0C0D  3193  232C  318A   	fcall	_Insert
  7604  0C10  0871               	movf	?_Insert+1,w
  7605  0C11  0142               	movlb	2	; select bank2
  7606  0C12  00E6               	movwf	(main@index+1)^(0+256)
  7607  0C13  0870               	movf	?_Insert,w
  7608  0C14  00E5               	movwf	main@index^(0+256)
  7609                           
  7610                           ;main.c: 709:             ClearString(convertedNumber);
  7611  0C15  3047               	movlw	low main@convertedNumber
  7612  0C16  00F5               	movwf	ClearString@str
  7613  0C17  3001               	movlw	high main@convertedNumber
  7614  0C18  00F6               	movwf	ClearString@str+1
  7615  0C19  3198  202D  318A   	fcall	_ClearString
  7616                           
  7617                           ;main.c: 710:             IntToString(id, convertedNumber);
  7618  0C1C  0142               	movlb	2	; select bank2
  7619  0C1D  0840               	movf	(_id+1)^(0+256),w
  7620  0C1E  00FC               	movwf	IntToString@n+1
  7621  0C1F  083F               	movf	_id^(0+256),w
  7622  0C20  00FB               	movwf	IntToString@n
  7623  0C21  3047               	movlw	(low (main@convertedNumber| (0+256)))& (0+255)
  7624  0C22  0141               	movlb	1	; select bank1
  7625  0C23  00E3               	movwf	??_main^(0+128)
  7626  0C24  0863               	movf	??_main^(0+128),w
  7627  0C25  00FD               	movwf	IntToString@dest
  7628  0C26  3191  2175  318A   	fcall	_IntToString
  7629                           
  7630                           ;main.c: 711:             index = InsertString(messages[0], convertedNumber, index, 70);
  7631  0C29  0142               	movlb	2	; select bank2
  7632  0C2A  086C               	movf	(_messages+1)^(0+256),w
  7633  0C2B  0140               	movlb	0	; select bank0
  7634  0C2C  00A1               	movwf	InsertString@dest+1
  7635  0C2D  0142               	movlb	2	; select bank2
  7636  0C2E  086B               	movf	_messages^(0+256),w
  7637  0C2F  0140               	movlb	0	; select bank0
  7638  0C30  00A0               	movwf	InsertString@dest
  7639  0C31  3047               	movlw	low main@convertedNumber
  7640  0C32  00A2               	movwf	InsertString@src
  7641  0C33  3001               	movlw	high main@convertedNumber
  7642  0C34  00A3               	movwf	InsertString@src+1
  7643  0C35  0142               	movlb	2	; select bank2
  7644  0C36  0866               	movf	(main@index+1)^(0+256),w
  7645  0C37  0140               	movlb	0	; select bank0
  7646  0C38  00A5               	movwf	InsertString@index+1
  7647  0C39  0142               	movlb	2	; select bank2
  7648  0C3A  0865               	movf	main@index^(0+256),w
  7649  0C3B  0140               	movlb	0	; select bank0
  7650  0C3C  00A4               	movwf	InsertString@index
  7651  0C3D  3046               	movlw	70
  7652  0C3E  00A6               	movwf	InsertString@destLimit
  7653  0C3F  3000               	movlw	0
  7654  0C40  00A7               	movwf	InsertString@destLimit+1
  7655  0C41  319F  275C  318A   	fcall	_InsertString
  7656  0C44  0140               	movlb	0	; select bank0
  7657  0C45  0821               	movf	?_InsertString+1,w
  7658  0C46  0142               	movlb	2	; select bank2
  7659  0C47  00E6               	movwf	(main@index+1)^(0+256)
  7660  0C48  0140               	movlb	0	; select bank0
  7661  0C49  0820               	movf	?_InsertString,w
  7662  0C4A  0142               	movlb	2	; select bank2
  7663  0C4B  00E5               	movwf	main@index^(0+256)
  7664                           
  7665                           ;main.c: 712:             Insert(messages[0], ',', index, 70);
  7666  0C4C  086C               	movf	(_messages+1)^(0+256),w
  7667  0C4D  00F1               	movwf	Insert@dest+1
  7668  0C4E  086B               	movf	_messages^(0+256),w
  7669  0C4F  00F0               	movwf	Insert@dest
  7670  0C50  302C               	movlw	44
  7671  0C51  0141               	movlb	1	; select bank1
  7672  0C52  00E3               	movwf	??_main^(0+128)
  7673  0C53  0863               	movf	??_main^(0+128),w
  7674  0C54  00F2               	movwf	Insert@src
  7675  0C55  0142               	movlb	2	; select bank2
  7676  0C56  0866               	movf	(main@index+1)^(0+256),w
  7677  0C57  00F4               	movwf	Insert@index+1
  7678  0C58  0865               	movf	main@index^(0+256),w
  7679  0C59  00F3               	movwf	Insert@index
  7680  0C5A  3046               	movlw	70
  7681  0C5B  00F5               	movwf	Insert@destLimit
  7682  0C5C  3000               	movlw	0
  7683  0C5D  00F6               	movwf	Insert@destLimit+1
  7684  0C5E  3193  232C  318A   	fcall	_Insert
  7685                           
  7686                           ;main.c: 714:             UIntToHexString(crc16(messages, 2), checksum);
  7687  0C61  3002               	movlw	2
  7688  0C62  0140               	movlb	0	; select bank0
  7689  0C63  00A1               	movwf	crc16@segments
  7690  0C64  3000               	movlw	0
  7691  0C65  00A2               	movwf	crc16@segments+1
  7692  0C66  306B               	movlw	(low (_messages| (0+256)))& (0+255)
  7693  0C67  319D  2585  318A   	fcall	_crc16
  7694  0C6A  0140               	movlb	0	; select bank0
  7695  0C6B  0821               	movf	?_crc16,w
  7696  0C6C  0141               	movlb	1	; select bank1
  7697  0C6D  00E3               	movwf	??_main^(0+128)
  7698  0C6E  0140               	movlb	0	; select bank0
  7699  0C6F  0822               	movf	?_crc16+1,w
  7700  0C70  0141               	movlb	1	; select bank1
  7701  0C71  00E4               	movwf	(??_main^(0+128)+1)
  7702  0C72  01E5               	clrf	(??_main^(0+128)+2)
  7703  0C73  01E6               	clrf	(??_main^(0+128)+3)
  7704  0C74  0866               	movf	(??_main+3)^(0+128),w
  7705  0C75  0140               	movlb	0	; select bank0
  7706  0C76  00AD               	movwf	UIntToHexString@n+3
  7707  0C77  0141               	movlb	1	; select bank1
  7708  0C78  0865               	movf	(??_main+2)^(0+128),w
  7709  0C79  0140               	movlb	0	; select bank0
  7710  0C7A  00AC               	movwf	UIntToHexString@n+2
  7711  0C7B  0141               	movlb	1	; select bank1
  7712  0C7C  0864               	movf	(??_main+1)^(0+128),w
  7713  0C7D  0140               	movlb	0	; select bank0
  7714  0C7E  00AB               	movwf	UIntToHexString@n+1
  7715  0C7F  0141               	movlb	1	; select bank1
  7716  0C80  0863               	movf	??_main^(0+128),w
  7717  0C81  0140               	movlb	0	; select bank0
  7718  0C82  00AA               	movwf	UIntToHexString@n
  7719  0C83  3041               	movlw	(low (_checksum| (0+256)))& (0+255)
  7720  0C84  0141               	movlb	1	; select bank1
  7721  0C85  00E7               	movwf	(??_main+4)^(0+128)
  7722  0C86  0867               	movf	(??_main+4)^(0+128),w
  7723  0C87  0140               	movlb	0	; select bank0
  7724  0C88  00AE               	movwf	UIntToHexString@dest
  7725  0C89  3193  23A2  318A   	fcall	_UIntToHexString
  7726                           
  7727                           ;main.c: 717:             InsertString(messages[0], "$$", 0, 70);
  7728  0C8C  0142               	movlb	2	; select bank2
  7729  0C8D  086C               	movf	(_messages+1)^(0+256),w
  7730  0C8E  0140               	movlb	0	; select bank0
  7731  0C8F  00A1               	movwf	InsertString@dest+1
  7732  0C90  0142               	movlb	2	; select bank2
  7733  0C91  086B               	movf	_messages^(0+256),w
  7734  0C92  0140               	movlb	0	; select bank0
  7735  0C93  00A0               	movwf	InsertString@dest
  7736  0C94  30B6               	movlw	low (STR_10| (0+32768))
  7737  0C95  00A2               	movwf	InsertString@src
  7738  0C96  30A8               	movlw	high (STR_10| (0+32768))
  7739  0C97  00A3               	movwf	InsertString@src+1
  7740  0C98  3000               	movlw	0
  7741  0C99  00A4               	movwf	InsertString@index
  7742  0C9A  00A5               	movwf	InsertString@index+1
  7743  0C9B  3046               	movlw	70
  7744  0C9C  00A6               	movwf	InsertString@destLimit
  7745  0C9D  3000               	movlw	0
  7746  0C9E  00A7               	movwf	InsertString@destLimit+1
  7747  0C9F  319F  275C  318A   	fcall	_InsertString
  7748                           
  7749                           ;main.c: 719:             index = Insert(messages[1], '*', end, 70);
  7750  0CA2  0142               	movlb	2	; select bank2
  7751  0CA3  086E               	movf	((low ((_messages| (0+256)+2))+1))^0,w
  7752  0CA4  00F1               	movwf	Insert@dest+1
  7753  0CA5  086D               	movf	(low ((_messages| (0+256)+2)))^0,w
  7754  0CA6  00F0               	movwf	Insert@dest
  7755  0CA7  302A               	movlw	42
  7756  0CA8  0141               	movlb	1	; select bank1
  7757  0CA9  00E3               	movwf	??_main^(0+128)
  7758  0CAA  0863               	movf	??_main^(0+128),w
  7759  0CAB  00F2               	movwf	Insert@src
  7760  0CAC  0142               	movlb	2	; select bank2
  7761  0CAD  0858               	movf	(main@end+1)^(0+256),w
  7762  0CAE  00F4               	movwf	Insert@index+1
  7763  0CAF  0857               	movf	main@end^(0+256),w
  7764  0CB0  00F3               	movwf	Insert@index
  7765  0CB1  3046               	movlw	70
  7766  0CB2  00F5               	movwf	Insert@destLimit
  7767  0CB3  3000               	movlw	0
  7768  0CB4  00F6               	movwf	Insert@destLimit+1
  7769  0CB5  3193  232C  318A   	fcall	_Insert
  7770  0CB8  0871               	movf	?_Insert+1,w
  7771  0CB9  0142               	movlb	2	; select bank2
  7772  0CBA  00E6               	movwf	(main@index+1)^(0+256)
  7773  0CBB  0870               	movf	?_Insert,w
  7774  0CBC  00E5               	movwf	main@index^(0+256)
  7775                           
  7776                           ;main.c: 720:             index = InsertString(messages[1], checksum, index, 70);
  7777  0CBD  086E               	movf	((low ((_messages| (0+256)+2))+1))^0,w
  7778  0CBE  0140               	movlb	0	; select bank0
  7779  0CBF  00A1               	movwf	InsertString@dest+1
  7780  0CC0  0142               	movlb	2	; select bank2
  7781  0CC1  086D               	movf	(low ((_messages| (0+256)+2)))^0,w
  7782  0CC2  0140               	movlb	0	; select bank0
  7783  0CC3  00A0               	movwf	InsertString@dest
  7784  0CC4  3041               	movlw	low _checksum
  7785  0CC5  00A2               	movwf	InsertString@src
  7786  0CC6  3001               	movlw	high _checksum
  7787  0CC7  00A3               	movwf	InsertString@src+1
  7788  0CC8  0142               	movlb	2	; select bank2
  7789  0CC9  0866               	movf	(main@index+1)^(0+256),w
  7790  0CCA  0140               	movlb	0	; select bank0
  7791  0CCB  00A5               	movwf	InsertString@index+1
  7792  0CCC  0142               	movlb	2	; select bank2
  7793  0CCD  0865               	movf	main@index^(0+256),w
  7794  0CCE  0140               	movlb	0	; select bank0
  7795  0CCF  00A4               	movwf	InsertString@index
  7796  0CD0  3046               	movlw	70
  7797  0CD1  00A6               	movwf	InsertString@destLimit
  7798  0CD2  3000               	movlw	0
  7799  0CD3  00A7               	movwf	InsertString@destLimit+1
  7800  0CD4  319F  275C  318A   	fcall	_InsertString
  7801  0CD7  0140               	movlb	0	; select bank0
  7802  0CD8  0821               	movf	?_InsertString+1,w
  7803  0CD9  0142               	movlb	2	; select bank2
  7804  0CDA  00E6               	movwf	(main@index+1)^(0+256)
  7805  0CDB  0140               	movlb	0	; select bank0
  7806  0CDC  0820               	movf	?_InsertString,w
  7807  0CDD  0142               	movlb	2	; select bank2
  7808  0CDE  00E5               	movwf	main@index^(0+256)
  7809                           
  7810                           ;main.c: 721:             index = Insert(messages[1], '\n', index, 70);
  7811  0CDF  086E               	movf	((low ((_messages| (0+256)+2))+1))^0,w
  7812  0CE0  00F1               	movwf	Insert@dest+1
  7813  0CE1  086D               	movf	(low ((_messages| (0+256)+2)))^0,w
  7814  0CE2  00F0               	movwf	Insert@dest
  7815  0CE3  300A               	movlw	10
  7816  0CE4  0141               	movlb	1	; select bank1
  7817  0CE5  00E3               	movwf	??_main^(0+128)
  7818  0CE6  0863               	movf	??_main^(0+128),w
  7819  0CE7  00F2               	movwf	Insert@src
  7820  0CE8  0142               	movlb	2	; select bank2
  7821  0CE9  0866               	movf	(main@index+1)^(0+256),w
  7822  0CEA  00F4               	movwf	Insert@index+1
  7823  0CEB  0865               	movf	main@index^(0+256),w
  7824  0CEC  00F3               	movwf	Insert@index
  7825  0CED  3046               	movlw	70
  7826  0CEE  00F5               	movwf	Insert@destLimit
  7827  0CEF  3000               	movlw	0
  7828  0CF0  00F6               	movwf	Insert@destLimit+1
  7829  0CF1  3193  232C  318A   	fcall	_Insert
  7830  0CF4  0871               	movf	?_Insert+1,w
  7831  0CF5  0142               	movlb	2	; select bank2
  7832  0CF6  00E6               	movwf	(main@index+1)^(0+256)
  7833  0CF7  0870               	movf	?_Insert,w
  7834  0CF8  00E5               	movwf	main@index^(0+256)
  7835                           
  7836                           ;main.c: 723:             id++;
  7837  0CF9  3001               	movlw	1
  7838  0CFA  07BF               	addwf	_id^(0+256),f
  7839  0CFB  3000               	movlw	0
  7840  0CFC  3DC0               	addwfc	(_id+1)^(0+256),f
  7841  0CFD  0140               	movlb	0	; select bank0
  7842  0CFE  1518               	bsf	24,2	;volatile
  7843                           
  7844                           ;main.c: 726:             TransmitString(messages[0]);
  7845  0CFF  0142               	movlb	2	; select bank2
  7846  0D00  086C               	movf	(_messages+1)^(0+256),w
  7847  0D01  0140               	movlb	0	; select bank0
  7848  0D02  00A4               	movwf	TransmitString@message+1
  7849  0D03  0142               	movlb	2	; select bank2
  7850  0D04  086B               	movf	_messages^(0+256),w
  7851  0D05  0140               	movlb	0	; select bank0
  7852  0D06  00A3               	movwf	TransmitString@message
  7853  0D07  3199  219A  318A   	fcall	_TransmitString
  7854                           
  7855                           ;main.c: 727:             TransmitString(messages[1]);
  7856  0D0A  0142               	movlb	2	; select bank2
  7857  0D0B  086E               	movf	((low ((_messages| (0+256)+2))+1))^0,w
  7858  0D0C  0140               	movlb	0	; select bank0
  7859  0D0D  00A4               	movwf	TransmitString@message+1
  7860  0D0E  0142               	movlb	2	; select bank2
  7861  0D0F  086D               	movf	(low ((_messages| (0+256)+2)))^0,w
  7862  0D10  0140               	movlb	0	; select bank0
  7863  0D11  00A3               	movwf	TransmitString@message
  7864  0D12  3199  219A  318A   	fcall	_TransmitString
  7865  0D15  0140               	movlb	0	; select bank0
  7866  0D16  1118               	bcf	24,2	;volatile
  7867  0D17  2D2A               	goto	l831
  7868  0D18                     l6012:	
  7869                           
  7870                           ;main.c: 732:         {;main.c: 734:             DebugAlert(400, 200, 3);
  7871  0D18  3090               	movlw	144
  7872  0D19  0140               	movlb	0	; select bank0
  7873  0D1A  00A0               	movwf	DebugAlert@delay_high
  7874  0D1B  3001               	movlw	1
  7875  0D1C  00A1               	movwf	DebugAlert@delay_high+1
  7876  0D1D  30C8               	movlw	200
  7877  0D1E  00A2               	movwf	DebugAlert@delay_low
  7878  0D1F  3000               	movlw	0
  7879  0D20  00A3               	movwf	DebugAlert@delay_low+1
  7880  0D21  3003               	movlw	3
  7881  0D22  0141               	movlb	1	; select bank1
  7882  0D23  00E3               	movwf	??_main^(0+128)
  7883  0D24  0863               	movf	??_main^(0+128),w
  7884  0D25  0140               	movlb	0	; select bank0
  7885  0D26  00A4               	movwf	DebugAlert@num_flashes
  7886  0D27  3198  20F0  318A   	fcall	_DebugAlert
  7887  0D2A                     l831:	
  7888                           ;main.c: 735:         }
  7889                           
  7890                           
  7891                           ;main.c: 737:         Sleep(5000);
  7892  0D2A  3000               	movlw	0
  7893  0D2B  00F3               	movwf	Sleep@ms+3
  7894  0D2C  3000               	movlw	0
  7895  0D2D  00F2               	movwf	Sleep@ms+2
  7896  0D2E  3013               	movlw	19
  7897  0D2F  00F1               	movwf	Sleep@ms+1
  7898  0D30  3088               	movlw	136
  7899  0D31  00F0               	movwf	Sleep@ms
  7900  0D32  3199  2144  318A   	fcall	_Sleep
  7901  0D35  2AAD               	goto	l5946
  7902  0D36                     __end_of_main:	
  7903                           
  7904                           	psect	text1
  7905  1D85                     __ptext1:	
  7906 ;; *************** function _crc16 *****************
  7907 ;; Defined at:
  7908 ;;		line 22 in file "rtty.c"
  7909 ;; Parameters:    Size  Location     Type
  7910 ;;  data            1    wreg     PTR PTR unsigned char 
  7911 ;;		 -> messages(4), 
  7912 ;;  segments        2    1[BANK0 ] int 
  7913 ;; Auto vars:     Size  Location     Type
  7914 ;;  data            1    5[BANK0 ] PTR PTR unsigned char 
  7915 ;;		 -> messages(4), 
  7916 ;;  i               2    8[BANK0 ] int 
  7917 ;;  crc             2    6[BANK0 ] unsigned short 
  7918 ;; Return value:  Size  Location     Type
  7919 ;;                  2    1[BANK0 ] unsigned short 
  7920 ;; Registers used:
  7921 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7922 ;; Tracked objects:
  7923 ;;		On entry : 0/0
  7924 ;;		On exit  : 0/0
  7925 ;;		Unchanged: 0/0
  7926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7927 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7928 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7929 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7930 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7931 ;;Total ram usage:        9 bytes
  7932 ;; Hardware stack levels used:    1
  7933 ;; Hardware stack levels required when called:    4
  7934 ;; This function calls:
  7935 ;;		_crc16_update
  7936 ;;		_strlen
  7937 ;; This function is called by:
  7938 ;;		_main
  7939 ;; This function uses a non-reentrant model
  7940 ;;
  7941                           
  7942                           
  7943                           ;psect for function _crc16
  7944  1D85                     _crc16:	
  7945                           
  7946                           ;incstack = 0
  7947                           ; Regs used in _crc16: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7948                           ;crc16@data stored from wreg
  7949  1D85  0140               	movlb	0	; select bank0
  7950  1D86  00A5               	movwf	crc16@data
  7951                           
  7952                           ;rtty.c: 22: uint16_t crc16(char** data, int segments);rtty.c: 23: {;rtty.c: 24:     uin
      +                          t16_t crc = 0xFFFF;
  7953  1D87  30FF               	movlw	255
  7954  1D88  00A6               	movwf	crc16@crc
  7955  1D89  30FF               	movlw	255
  7956  1D8A  00A7               	movwf	crc16@crc+1
  7957                           
  7958                           ;rtty.c: 25:     for (int i = 0; i < segments; i++)
  7959  1D8B  01A8               	clrf	crc16@i
  7960  1D8C  01A9               	clrf	crc16@i+1
  7961  1D8D                     l5912:	
  7962  1D8D  0829               	movf	crc16@i+1,w
  7963  1D8E  3A80               	xorlw	128
  7964  1D8F  00A3               	movwf	??_crc16
  7965  1D90  0822               	movf	crc16@segments+1,w
  7966  1D91  3A80               	xorlw	128
  7967  1D92  0223               	subwf	??_crc16,w
  7968  1D93  1D03               	skipz
  7969  1D94  2D97               	goto	u6275
  7970  1D95  0821               	movf	crc16@segments,w
  7971  1D96  0228               	subwf	crc16@i,w
  7972  1D97                     u6275:	
  7973  1D97  1803               	btfsc	3,0
  7974  1D98  2DC9               	goto	l5914
  7975                           
  7976                           ;rtty.c: 26:     {;rtty.c: 27:         crc = crc16_update(data[i], strlen(data[i]), crc)
      +                          ;
  7977  1D99  0140               	movlb	0	; select bank0
  7978  1D9A  3528               	lslf	crc16@i,w
  7979  1D9B  0725               	addwf	crc16@data,w
  7980  1D9C  00A3               	movwf	??_crc16
  7981  1D9D  0823               	movf	??_crc16,w
  7982  1D9E  0086               	movwf	6
  7983  1D9F  3001               	movlw	1	; select bank2/3
  7984  1DA0  0087               	movwf	7
  7985  1DA1  3F40               	moviw [0]fsr1
  7986  1DA2  00F5               	movwf	crc16_update@pData
  7987  1DA3  3F41               	moviw [1]fsr1
  7988  1DA4  00F6               	movwf	crc16_update@pData+1
  7989  1DA5  3528               	lslf	crc16@i,w
  7990  1DA6  0725               	addwf	crc16@data,w
  7991  1DA7  00A4               	movwf	??_crc16+1
  7992  1DA8  0824               	movf	??_crc16+1,w
  7993  1DA9  0086               	movwf	6
  7994  1DAA  3001               	movlw	1	; select bank2/3
  7995  1DAB  0087               	movwf	7
  7996  1DAC  3F40               	moviw [0]fsr1
  7997  1DAD  00F0               	movwf	strlen@s
  7998  1DAE  3F41               	moviw [1]fsr1
  7999  1DAF  00F1               	movwf	strlen@s+1
  8000  1DB0  31A7  2722  319D   	fcall	_strlen
  8001  1DB3  0871               	movf	?_strlen+1,w
  8002  1DB4  00F8               	movwf	crc16_update@length+1
  8003  1DB5  0870               	movf	?_strlen,w
  8004  1DB6  00F7               	movwf	crc16_update@length
  8005  1DB7  0140               	movlb	0	; select bank0
  8006  1DB8  0827               	movf	crc16@crc+1,w
  8007  1DB9  00FA               	movwf	crc16_update@wCrc+1
  8008  1DBA  0826               	movf	crc16@crc,w
  8009  1DBB  00F9               	movwf	crc16_update@wCrc
  8010  1DBC  319B  2327  319D   	fcall	_crc16_update
  8011  1DBF  0876               	movf	?_crc16_update+1,w
  8012  1DC0  0140               	movlb	0	; select bank0
  8013  1DC1  00A7               	movwf	crc16@crc+1
  8014  1DC2  0875               	movf	?_crc16_update,w
  8015  1DC3  00A6               	movwf	crc16@crc
  8016                           
  8017                           ;rtty.c: 28:     }
  8018  1DC4  3001               	movlw	1
  8019  1DC5  07A8               	addwf	crc16@i,f
  8020  1DC6  3000               	movlw	0
  8021  1DC7  3DA9               	addwfc	crc16@i+1,f
  8022  1DC8  2D8D               	goto	l5912
  8023  1DC9                     l5914:	
  8024                           
  8025                           ;rtty.c: 29:     return crc & 0xFFFF;
  8026  1DC9  0140               	movlb	0	; select bank0
  8027  1DCA  0827               	movf	crc16@crc+1,w
  8028  1DCB  00A2               	movwf	?_crc16+1
  8029  1DCC  0826               	movf	crc16@crc,w
  8030  1DCD  00A1               	movwf	?_crc16
  8031  1DCE  0008               	return
  8032  1DCF                     __end_of_crc16:	
  8033                           
  8034                           	psect	text2
  8035  1B27                     __ptext2:	
  8036 ;; *************** function _crc16_update *****************
  8037 ;; Defined at:
  8038 ;;		line 11 in file "rtty.c"
  8039 ;; Parameters:    Size  Location     Type
  8040 ;;  pData           2    5[COMMON] PTR unsigned char 
  8041 ;;		 -> message_end(70), message_start(70), 
  8042 ;;  length          2    7[COMMON] int 
  8043 ;;  wCrc            2    9[COMMON] unsigned short 
  8044 ;; Auto vars:     Size  Location     Type
  8045 ;;  i               1    0[BANK0 ] unsigned char 
  8046 ;; Return value:  Size  Location     Type
  8047 ;;                  2    5[COMMON] unsigned short 
  8048 ;; Registers used:
  8049 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8050 ;; Tracked objects:
  8051 ;;		On entry : 0/0
  8052 ;;		On exit  : 0/0
  8053 ;;		Unchanged: 0/0
  8054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8055 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8056 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8057 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8058 ;;      Totals:         9       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8059 ;;Total ram usage:       10 bytes
  8060 ;; Hardware stack levels used:    1
  8061 ;; Hardware stack levels required when called:    3
  8062 ;; This function calls:
  8063 ;;		Nothing
  8064 ;; This function is called by:
  8065 ;;		_crc16
  8066 ;; This function uses a non-reentrant model
  8067 ;;
  8068                           
  8069                           
  8070                           ;psect for function _crc16_update
  8071  1B27                     _crc16_update:	
  8072  1B27                     l5634:	
  8073                           ;rtty.c: 11: uint16_t crc16_update(char* pData, int length, uint16_t wCrc);rtty.c: 12: {
      +                          ;rtty.c: 13:     uint8_t i;;rtty.c: 14:     while (length--) {
  8074                           
  8075                           ;incstack = 0
  8076                           ; Regs used in _crc16_update: [wreg+fsr1l+fsr1h+status,2+status,0]
  8077                           
  8078                           
  8079                           ;rtty.c: 14:     while (length--) {
  8080  1B27  30FF               	movlw	255
  8081  1B28  07F7               	addwf	crc16_update@length,f
  8082  1B29  30FF               	movlw	255
  8083  1B2A  3DF8               	addwfc	crc16_update@length+1,f
  8084  1B2B  0A77               	incf	crc16_update@length,w
  8085  1B2C  1903               	btfsc	3,2
  8086  1B2D  0A78               	incf	crc16_update@length+1,w
  8087  1B2E  1903               	btfsc	3,2
  8088  1B2F  2B5F               	goto	l5636
  8089                           
  8090                           ;rtty.c: 15:         wCrc ^= *(unsigned char *)pData++ << 8;
  8091  1B30  0875               	movf	crc16_update@pData,w
  8092  1B31  0086               	movwf	6
  8093  1B32  0876               	movf	crc16_update@pData+1,w
  8094  1B33  0087               	movwf	7
  8095  1B34  0801               	movf	1,w
  8096  1B35  00FB               	movwf	??_crc16_update
  8097  1B36  01FC               	clrf	??_crc16_update+1
  8098  1B37  087B               	movf	??_crc16_update,w
  8099  1B38  00FC               	movwf	??_crc16_update+1
  8100  1B39  01FB               	clrf	??_crc16_update
  8101  1B3A  087B               	movf	??_crc16_update,w
  8102  1B3B  06F9               	xorwf	crc16_update@wCrc,f
  8103  1B3C  087C               	movf	??_crc16_update+1,w
  8104  1B3D  06FA               	xorwf	crc16_update@wCrc+1,f
  8105  1B3E  3001               	movlw	1
  8106  1B3F  07F5               	addwf	crc16_update@pData,f
  8107  1B40  3000               	movlw	0
  8108  1B41  3DF6               	addwfc	crc16_update@pData+1,f
  8109                           
  8110                           ;rtty.c: 16:         for (i=0; i < 8; i++)
  8111  1B42  0140               	movlb	0	; select bank0
  8112  1B43  01A0               	clrf	crc16_update@i
  8113  1B44                     l847:	
  8114                           
  8115                           ;rtty.c: 17:             wCrc = wCrc & 0x8000 ? (wCrc << 1) ^ 0x1021 : wCrc << 1;
  8116  1B44  1BFA               	btfsc	crc16_update@wCrc+1,7
  8117  1B45  2B4A               	goto	l5630
  8118  1B46  3579               	lslf	crc16_update@wCrc,w
  8119  1B47  00F9               	movwf	crc16_update@wCrc
  8120  1B48  0D7A               	rlf	crc16_update@wCrc+1,w
  8121  1B49  2B55               	goto	L1
  8122  1B4A                     l5630:	
  8123  1B4A  087A               	movf	crc16_update@wCrc+1,w
  8124  1B4B  00FC               	movwf	??_crc16_update+1
  8125  1B4C  0879               	movf	crc16_update@wCrc,w
  8126  1B4D  00FB               	movwf	??_crc16_update
  8127  1B4E  35FB               	lslf	??_crc16_update,f
  8128  1B4F  0DFC               	rlf	??_crc16_update+1,f
  8129  1B50  3021               	movlw	33
  8130  1B51  067B               	xorwf	??_crc16_update,w
  8131  1B52  00F9               	movwf	crc16_update@wCrc
  8132  1B53  3010               	movlw	16
  8133  1B54  067C               	xorwf	??_crc16_update+1,w
  8134  1B55                     L1:	
  8135  1B55  00FA               	movwf	crc16_update@wCrc+1
  8136  1B56  3001               	movlw	1
  8137  1B57  00FB               	movwf	??_crc16_update
  8138  1B58  087B               	movf	??_crc16_update,w
  8139  1B59  07A0               	addwf	crc16_update@i,f
  8140  1B5A  3008               	movlw	8
  8141  1B5B  0220               	subwf	crc16_update@i,w
  8142  1B5C  1803               	btfsc	3,0
  8143  1B5D  2B27               	goto	l5634
  8144  1B5E  2B44               	goto	l847
  8145  1B5F                     l5636:	
  8146                           
  8147                           ;rtty.c: 19:     return wCrc;
  8148  1B5F  087A               	movf	crc16_update@wCrc+1,w
  8149  1B60  00F6               	movwf	?_crc16_update+1
  8150  1B61  0879               	movf	crc16_update@wCrc,w
  8151  1B62  00F5               	movwf	?_crc16_update
  8152  1B63  0008               	return
  8153  1B64                     __end_of_crc16_update:	
  8154                           
  8155                           	psect	text3
  8156  10B1                     __ptext3:	
  8157 ;; *************** function _bme280_get_sensor_data *****************
  8158 ;; Defined at:
  8159 ;;		line 660 in file "BME280_driver/bme280.c"
  8160 ;; Parameters:    Size  Location     Type
  8161 ;;  sensor_comp     1    wreg     unsigned char 
  8162 ;;  comp_data       1   65[BANK0 ] PTR struct bme280_data
  8163 ;;		 -> main@sensor_data(12), 
  8164 ;;  dev             1   66[BANK0 ] PTR struct bme280_dev
  8165 ;;		 -> EnvSensor(51), 
  8166 ;; Auto vars:     Size  Location     Type
  8167 ;;  sensor_comp     1   53[BANK1 ] unsigned char 
  8168 ;;  uncomp_data    12   55[BANK1 ] struct bme280_uncomp_dat
  8169 ;;  reg_data        8   45[BANK1 ] unsigned char [8]
  8170 ;;  rslt            1   54[BANK1 ] char 
  8171 ;; Return value:  Size  Location     Type
  8172 ;;                  1    wreg      char 
  8173 ;; Registers used:
  8174 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8175 ;; Tracked objects:
  8176 ;;		On entry : 0/0
  8177 ;;		On exit  : 0/0
  8178 ;;		Unchanged: 0/0
  8179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8180 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8181 ;;      Locals:         0       0      22       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8182 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8183 ;;      Totals:         0       5      22       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8184 ;;Total ram usage:       27 bytes
  8185 ;; Hardware stack levels used:    1
  8186 ;; Hardware stack levels required when called:   11
  8187 ;; This function calls:
  8188 ;;		_bme280_compensate_data
  8189 ;;		_bme280_get_regs
  8190 ;;		_bme280_parse_sensor_data
  8191 ;;		_null_ptr_check
  8192 ;; This function is called by:
  8193 ;;		_main
  8194 ;; This function uses a non-reentrant model
  8195 ;;
  8196                           
  8197                           
  8198                           ;psect for function _bme280_get_sensor_data
  8199  10B1                     _bme280_get_sensor_data:	
  8200                           
  8201                           ;incstack = 0
  8202                           ; Regs used in _bme280_get_sensor_data: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8203                           ;bme280_get_sensor_data@sensor_comp stored from wreg
  8204  10B1  0141               	movlb	1	; select bank1
  8205  10B2  00D5               	movwf	bme280_get_sensor_data@sensor_comp^(0+128)
  8206                           
  8207                           ;BME280_driver/bme280.c: 660: int8_t bme280_get_sensor_data(uint8_t sensor_comp, struct 
      +                          bme280_data *comp_data, struct bme280_dev *dev);BME280_driver/bme280.c: 661: {;BME280_dr
      +                          iver/bme280.c: 662:     int8_t rslt;;BME280_driver/bme280.c: 667:     uint8_t reg_data[8
      +                          ] = { 0 };
  8208  10B3  30CD               	movlw	low bme280_get_sensor_data@reg_data
  8209  10B4  0086               	movwf	6
  8210  10B5  3000               	movlw	high bme280_get_sensor_data@reg_data
  8211  10B6  0087               	movwf	7
  8212  10B7  3008               	movlw	8
  8213  10B8  0140               	movlb	0	; select bank0
  8214  10B9  00E3               	movwf	??_bme280_get_sensor_data
  8215  10BA  3000               	movlw	0
  8216  10BB                     u5870:	
  8217  10BB  001E               	movwi fsr1++
  8218  10BC  0BE3               	decfsz	??_bme280_get_sensor_data,f
  8219  10BD  28BB               	goto	u5870
  8220                           
  8221                           ;BME280_driver/bme280.c: 668:     struct bme280_uncomp_data uncomp_data = { 0 };
  8222  10BE  3020               	movlw	low bme280_get_sensor_data@F273
  8223  10BF  0086               	movwf	6
  8224  10C0  3001               	movlw	high bme280_get_sensor_data@F273
  8225  10C1  0087               	movwf	7
  8226  10C2  30D7               	movlw	low bme280_get_sensor_data@uncomp_data
  8227  10C3  0084               	movwf	4
  8228  10C4  3000               	movlw	high bme280_get_sensor_data@uncomp_data
  8229  10C5  0085               	movwf	5
  8230  10C6  300C               	movlw	12
  8231  10C7  00E3               	movwf	??_bme280_get_sensor_data
  8232  10C8                     u5880:	
  8233  10C8  0016               	moviw fsr1++
  8234  10C9  001A               	movwi fsr0++
  8235  10CA  0BE3               	decfsz	??_bme280_get_sensor_data,f
  8236  10CB  28C8               	goto	u5880
  8237                           
  8238                           ;BME280_driver/bme280.c: 671:     rslt = null_ptr_check(dev);
  8239  10CC  0862               	movf	bme280_get_sensor_data@dev,w
  8240  10CD  3198  2008  3190   	fcall	_null_ptr_check
  8241  10D0  0140               	movlb	0	; select bank0
  8242  10D1  00E3               	movwf	??_bme280_get_sensor_data
  8243  10D2  0863               	movf	??_bme280_get_sensor_data,w
  8244  10D3  0141               	movlb	1	; select bank1
  8245  10D4  00D6               	movwf	bme280_get_sensor_data@rslt^(0+128)
  8246                           
  8247                           ;BME280_driver/bme280.c: 672:     if ((rslt == 0) && (comp_data != ((void*)0)))
  8248  10D5  0856               	movf	bme280_get_sensor_data@rslt^(0+128),w
  8249  10D6  1D03               	btfss	3,2
  8250  10D7  0008               	return
  8251  10D8  0140               	movlb	0	; select bank0
  8252  10D9  0861               	movf	bme280_get_sensor_data@comp_data,w
  8253  10DA  1903               	btfsc	3,2
  8254  10DB  0008               	return
  8255                           
  8256                           ;BME280_driver/bme280.c: 673:     {;BME280_driver/bme280.c: 675:         rslt = bme280_g
      +                          et_regs(0xF7, reg_data, 8, dev);
  8257  10DC  30CD               	movlw	(low (bme280_get_sensor_data@reg_data| 0))& (0+255)
  8258  10DD  00E3               	movwf	??_bme280_get_sensor_data
  8259  10DE  0863               	movf	??_bme280_get_sensor_data,w
  8260  10DF  00B7               	movwf	bme280_get_regs@reg_data
  8261  10E0  3008               	movlw	8
  8262  10E1  00B8               	movwf	bme280_get_regs@len
  8263  10E2  3000               	movlw	0
  8264  10E3  00B9               	movwf	bme280_get_regs@len+1
  8265  10E4  0862               	movf	bme280_get_sensor_data@dev,w
  8266  10E5  00E4               	movwf	??_bme280_get_sensor_data+1
  8267  10E6  0864               	movf	??_bme280_get_sensor_data+1,w
  8268  10E7  00BA               	movwf	bme280_get_regs@dev
  8269  10E8  30F7               	movlw	247
  8270  10E9  319C  2428  3190   	fcall	_bme280_get_regs
  8271  10EC  0140               	movlb	0	; select bank0
  8272  10ED  00E5               	movwf	??_bme280_get_sensor_data+2
  8273  10EE  0865               	movf	??_bme280_get_sensor_data+2,w
  8274  10EF  0141               	movlb	1	; select bank1
  8275  10F0  00D6               	movwf	bme280_get_sensor_data@rslt^(0+128)
  8276                           
  8277                           ;BME280_driver/bme280.c: 676:         if (rslt == 0)
  8278  10F1  0856               	movf	bme280_get_sensor_data@rslt^(0+128),w
  8279  10F2  1D03               	btfss	3,2
  8280  10F3  0008               	return
  8281                           
  8282                           ;BME280_driver/bme280.c: 677:         {;BME280_driver/bme280.c: 679:             bme280_
      +                          parse_sensor_data(reg_data, &uncomp_data);
  8283  10F4  30D7               	movlw	(low (bme280_get_sensor_data@uncomp_data| 0))& (0+255)
  8284  10F5  0140               	movlb	0	; select bank0
  8285  10F6  00E3               	movwf	??_bme280_get_sensor_data
  8286  10F7  0863               	movf	??_bme280_get_sensor_data,w
  8287  10F8  00F0               	movwf	bme280_parse_sensor_data@uncomp_data
  8288  10F9  30CD               	movlw	(low (bme280_get_sensor_data@reg_data| 0))& (0+255)
  8289  10FA  3196  26E1  3190   	fcall	_bme280_parse_sensor_data
  8290  10FD  30D7               	movlw	(low (bme280_get_sensor_data@uncomp_data| 0))& (0+255)
  8291  10FE  0140               	movlb	0	; select bank0
  8292  10FF  00E3               	movwf	??_bme280_get_sensor_data
  8293  1100  0863               	movf	??_bme280_get_sensor_data,w
  8294  1101  00DB               	movwf	bme280_compensate_data@uncomp_data
  8295  1102  0861               	movf	bme280_get_sensor_data@comp_data,w
  8296  1103  00E4               	movwf	??_bme280_get_sensor_data+1
  8297  1104  0864               	movf	??_bme280_get_sensor_data+1,w
  8298  1105  00DC               	movwf	bme280_compensate_data@comp_data
  8299  1106  0862               	movf	bme280_get_sensor_data@dev,w
  8300  1107  3E09               	addlw	9
  8301  1108  00E5               	movwf	??_bme280_get_sensor_data+2
  8302  1109  0865               	movf	??_bme280_get_sensor_data+2,w
  8303  110A  00DD               	movwf	bme280_compensate_data@calib_data
  8304  110B  0141               	movlb	1	; select bank1
  8305  110C  0855               	movf	bme280_get_sensor_data@sensor_comp^(0+128),w
  8306  110D  3194  241A         	fcall	_bme280_compensate_data
  8307  110F  0008               	return
  8308  1110                     __end_of_bme280_get_sensor_data:	
  8309                           ;BME280_driver/bme280.c: 687:     else
  8310                           
  8311                           
  8312                           	psect	text4
  8313  16E1                     __ptext4:	
  8314 ;; *************** function _bme280_parse_sensor_data *****************
  8315 ;; Defined at:
  8316 ;;		line 699 in file "BME280_driver/bme280.c"
  8317 ;; Parameters:    Size  Location     Type
  8318 ;;  reg_data        1    wreg     PTR const unsigned char 
  8319 ;;		 -> bme280_get_sensor_data@reg_data(8), 
  8320 ;;  uncomp_data     1    0[COMMON] PTR struct bme280_uncomp
  8321 ;;		 -> bme280_get_sensor_data@uncomp_data(12), 
  8322 ;; Auto vars:     Size  Location     Type
  8323 ;;  reg_data        1   12[BANK0 ] PTR const unsigned char 
  8324 ;;		 -> bme280_get_sensor_data@reg_data(8), 
  8325 ;;  data_msb        4    8[BANK0 ] unsigned long 
  8326 ;;  data_lsb        4    4[BANK0 ] unsigned long 
  8327 ;;  data_xlsb       4    0[BANK0 ] unsigned long 
  8328 ;; Return value:  Size  Location     Type
  8329 ;;                  1    wreg      void 
  8330 ;; Registers used:
  8331 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8332 ;; Tracked objects:
  8333 ;;		On entry : 0/0
  8334 ;;		On exit  : 0/0
  8335 ;;		Unchanged: 0/0
  8336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8337 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8338 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8339 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8340 ;;      Totals:         9      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8341 ;;Total ram usage:       22 bytes
  8342 ;; Hardware stack levels used:    1
  8343 ;; Hardware stack levels required when called:    3
  8344 ;; This function calls:
  8345 ;;		Nothing
  8346 ;; This function is called by:
  8347 ;;		_bme280_get_sensor_data
  8348 ;; This function uses a non-reentrant model
  8349 ;;
  8350                           
  8351                           
  8352                           ;psect for function _bme280_parse_sensor_data
  8353  16E1                     _bme280_parse_sensor_data:	
  8354                           
  8355                           ;incstack = 0
  8356                           ; Regs used in _bme280_parse_sensor_data: [wreg+fsr1l+fsr1h+status,2+status,0]
  8357                           ;bme280_parse_sensor_data@reg_data stored from wreg
  8358  16E1  0140               	movlb	0	; select bank0
  8359  16E2  00AC               	movwf	bme280_parse_sensor_data@reg_data
  8360                           
  8361                           ;BME280_driver/bme280.c: 699: void bme280_parse_sensor_data(const uint8_t *reg_data, str
      +                          uct bme280_uncomp_data *uncomp_data);BME280_driver/bme280.c: 700: {;BME280_driver/bme280
      +                          .c: 702:     uint32_t data_xlsb;;BME280_driver/bme280.c: 703:     uint32_t data_lsb;;BME
      +                          280_driver/bme280.c: 704:     uint32_t data_msb;;BME280_driver/bme280.c: 707:     data_m
      +                          sb = (uint32_t)reg_data[0] << 12;
  8362  16E3  082C               	movf	bme280_parse_sensor_data@reg_data,w
  8363  16E4  0086               	movwf	6
  8364  16E5  0187               	clrf	7
  8365  16E6  0801               	movf	1,w
  8366  16E7  00F1               	movwf	??_bme280_parse_sensor_data
  8367  16E8  01F2               	clrf	??_bme280_parse_sensor_data+1
  8368  16E9  01F3               	clrf	??_bme280_parse_sensor_data+2
  8369  16EA  01F4               	clrf	??_bme280_parse_sensor_data+3
  8370  16EB  300C               	movlw	12
  8371  16EC                     u3835:	
  8372  16EC  35F1               	lslf	??_bme280_parse_sensor_data,f
  8373  16ED  0DF2               	rlf	??_bme280_parse_sensor_data+1,f
  8374  16EE  0DF3               	rlf	??_bme280_parse_sensor_data+2,f
  8375  16EF  0DF4               	rlf	??_bme280_parse_sensor_data+3,f
  8376  16F0  0B89               	decfsz	9,f
  8377  16F1  2EEC               	goto	u3835
  8378  16F2  0874               	movf	??_bme280_parse_sensor_data+3,w
  8379  16F3  00AB               	movwf	bme280_parse_sensor_data@data_msb+3
  8380  16F4  0873               	movf	??_bme280_parse_sensor_data+2,w
  8381  16F5  00AA               	movwf	bme280_parse_sensor_data@data_msb+2
  8382  16F6  0872               	movf	??_bme280_parse_sensor_data+1,w
  8383  16F7  00A9               	movwf	bme280_parse_sensor_data@data_msb+1
  8384  16F8  0871               	movf	??_bme280_parse_sensor_data,w
  8385  16F9  00A8               	movwf	bme280_parse_sensor_data@data_msb
  8386                           
  8387                           ;BME280_driver/bme280.c: 708:     data_lsb = (uint32_t)reg_data[1] << 4;
  8388  16FA  0A2C               	incf	bme280_parse_sensor_data@reg_data,w
  8389  16FB  0086               	movwf	6
  8390  16FC  0187               	clrf	7
  8391  16FD  0801               	movf	1,w
  8392  16FE  00F1               	movwf	??_bme280_parse_sensor_data
  8393  16FF  01F2               	clrf	??_bme280_parse_sensor_data+1
  8394  1700  01F3               	clrf	??_bme280_parse_sensor_data+2
  8395  1701  01F4               	clrf	??_bme280_parse_sensor_data+3
  8396  1702  3004               	movlw	4
  8397  1703                     u3845:	
  8398  1703  35F1               	lslf	??_bme280_parse_sensor_data,f
  8399  1704  0DF2               	rlf	??_bme280_parse_sensor_data+1,f
  8400  1705  0DF3               	rlf	??_bme280_parse_sensor_data+2,f
  8401  1706  0DF4               	rlf	??_bme280_parse_sensor_data+3,f
  8402  1707  0B89               	decfsz	9,f
  8403  1708  2F03               	goto	u3845
  8404  1709  0874               	movf	??_bme280_parse_sensor_data+3,w
  8405  170A  00A7               	movwf	bme280_parse_sensor_data@data_lsb+3
  8406  170B  0873               	movf	??_bme280_parse_sensor_data+2,w
  8407  170C  00A6               	movwf	bme280_parse_sensor_data@data_lsb+2
  8408  170D  0872               	movf	??_bme280_parse_sensor_data+1,w
  8409  170E  00A5               	movwf	bme280_parse_sensor_data@data_lsb+1
  8410  170F  0871               	movf	??_bme280_parse_sensor_data,w
  8411  1710  00A4               	movwf	bme280_parse_sensor_data@data_lsb
  8412                           
  8413                           ;BME280_driver/bme280.c: 709:     data_xlsb = (uint32_t)reg_data[2] >> 4;
  8414  1711  082C               	movf	bme280_parse_sensor_data@reg_data,w
  8415  1712  3E02               	addlw	2
  8416  1713  0086               	movwf	6
  8417  1714  0187               	clrf	7
  8418  1715  0801               	movf	1,w
  8419  1716  00F1               	movwf	??_bme280_parse_sensor_data
  8420  1717  3004               	movlw	4
  8421  1718                     u3855:	
  8422  1718  36F1               	lsrf	??_bme280_parse_sensor_data,f
  8423  1719  0B89               	decfsz	9,f
  8424  171A  2F18               	goto	u3855
  8425  171B  0871               	movf	??_bme280_parse_sensor_data,w
  8426  171C  00F2               	movwf	??_bme280_parse_sensor_data+1
  8427  171D  01F3               	clrf	??_bme280_parse_sensor_data+2
  8428  171E  01F4               	clrf	??_bme280_parse_sensor_data+3
  8429  171F  01F5               	clrf	??_bme280_parse_sensor_data+4
  8430  1720  0875               	movf	??_bme280_parse_sensor_data+4,w
  8431  1721  00A3               	movwf	bme280_parse_sensor_data@data_xlsb+3
  8432  1722  0874               	movf	??_bme280_parse_sensor_data+3,w
  8433  1723  00A2               	movwf	bme280_parse_sensor_data@data_xlsb+2
  8434  1724  0873               	movf	??_bme280_parse_sensor_data+2,w
  8435  1725  00A1               	movwf	bme280_parse_sensor_data@data_xlsb+1
  8436  1726  0872               	movf	??_bme280_parse_sensor_data+1,w
  8437  1727  00A0               	movwf	bme280_parse_sensor_data@data_xlsb
  8438                           
  8439                           ;BME280_driver/bme280.c: 710:     uncomp_data->pressure = data_msb | data_lsb | data_xls
      +                          b;
  8440  1728  0820               	movf	bme280_parse_sensor_data@data_xlsb,w
  8441  1729  00F1               	movwf	??_bme280_parse_sensor_data
  8442  172A  0821               	movf	bme280_parse_sensor_data@data_xlsb+1,w
  8443  172B  00F2               	movwf	??_bme280_parse_sensor_data+1
  8444  172C  0822               	movf	bme280_parse_sensor_data@data_xlsb+2,w
  8445  172D  00F3               	movwf	??_bme280_parse_sensor_data+2
  8446  172E  0823               	movf	bme280_parse_sensor_data@data_xlsb+3,w
  8447  172F  00F4               	movwf	??_bme280_parse_sensor_data+3
  8448  1730  0828               	movf	bme280_parse_sensor_data@data_msb,w
  8449  1731  0424               	iorwf	bme280_parse_sensor_data@data_lsb,w
  8450  1732  00F5               	movwf	??_bme280_parse_sensor_data+4
  8451  1733  0829               	movf	bme280_parse_sensor_data@data_msb+1,w
  8452  1734  0425               	iorwf	bme280_parse_sensor_data@data_lsb+1,w
  8453  1735  00F6               	movwf	??_bme280_parse_sensor_data+5
  8454  1736  082A               	movf	bme280_parse_sensor_data@data_msb+2,w
  8455  1737  0426               	iorwf	bme280_parse_sensor_data@data_lsb+2,w
  8456  1738  00F7               	movwf	??_bme280_parse_sensor_data+6
  8457  1739  082B               	movf	bme280_parse_sensor_data@data_msb+3,w
  8458  173A  0427               	iorwf	bme280_parse_sensor_data@data_lsb+3,w
  8459  173B  00F8               	movwf	??_bme280_parse_sensor_data+7
  8460  173C  0875               	movf	??_bme280_parse_sensor_data+4,w
  8461  173D  04F1               	iorwf	??_bme280_parse_sensor_data,f
  8462  173E  0876               	movf	??_bme280_parse_sensor_data+5,w
  8463  173F  04F2               	iorwf	??_bme280_parse_sensor_data+1,f
  8464  1740  0877               	movf	??_bme280_parse_sensor_data+6,w
  8465  1741  04F3               	iorwf	??_bme280_parse_sensor_data+2,f
  8466  1742  0878               	movf	??_bme280_parse_sensor_data+7,w
  8467  1743  04F4               	iorwf	??_bme280_parse_sensor_data+3,f
  8468  1744  0870               	movf	bme280_parse_sensor_data@uncomp_data,w
  8469  1745  0086               	movwf	6
  8470  1746  0187               	clrf	7
  8471  1747  0871               	movf	??_bme280_parse_sensor_data,w
  8472  1748  3FC0               	movwi [0]fsr1
  8473  1749  0872               	movf	??_bme280_parse_sensor_data+1,w
  8474  174A  3FC1               	movwi [1]fsr1
  8475  174B  0873               	movf	??_bme280_parse_sensor_data+2,w
  8476  174C  3FC2               	movwi [2]fsr1
  8477  174D  0874               	movf	??_bme280_parse_sensor_data+3,w
  8478  174E  3FC3               	movwi [3]fsr1
  8479                           
  8480                           ;BME280_driver/bme280.c: 713:     data_msb = (uint32_t)reg_data[3] << 12;
  8481  174F  082C               	movf	bme280_parse_sensor_data@reg_data,w
  8482  1750  3E03               	addlw	3
  8483  1751  0086               	movwf	6
  8484  1752  0187               	clrf	7
  8485  1753  0801               	movf	1,w
  8486  1754  00F1               	movwf	??_bme280_parse_sensor_data
  8487  1755  01F2               	clrf	??_bme280_parse_sensor_data+1
  8488  1756  01F3               	clrf	??_bme280_parse_sensor_data+2
  8489  1757  01F4               	clrf	??_bme280_parse_sensor_data+3
  8490  1758  300C               	movlw	12
  8491  1759                     u3865:	
  8492  1759  35F1               	lslf	??_bme280_parse_sensor_data,f
  8493  175A  0DF2               	rlf	??_bme280_parse_sensor_data+1,f
  8494  175B  0DF3               	rlf	??_bme280_parse_sensor_data+2,f
  8495  175C  0DF4               	rlf	??_bme280_parse_sensor_data+3,f
  8496  175D  0B89               	decfsz	9,f
  8497  175E  2F59               	goto	u3865
  8498  175F  0874               	movf	??_bme280_parse_sensor_data+3,w
  8499  1760  00AB               	movwf	bme280_parse_sensor_data@data_msb+3
  8500  1761  0873               	movf	??_bme280_parse_sensor_data+2,w
  8501  1762  00AA               	movwf	bme280_parse_sensor_data@data_msb+2
  8502  1763  0872               	movf	??_bme280_parse_sensor_data+1,w
  8503  1764  00A9               	movwf	bme280_parse_sensor_data@data_msb+1
  8504  1765  0871               	movf	??_bme280_parse_sensor_data,w
  8505  1766  00A8               	movwf	bme280_parse_sensor_data@data_msb
  8506                           
  8507                           ;BME280_driver/bme280.c: 714:     data_lsb = (uint32_t)reg_data[4] << 4;
  8508  1767  082C               	movf	bme280_parse_sensor_data@reg_data,w
  8509  1768  3E04               	addlw	4
  8510  1769  0086               	movwf	6
  8511  176A  0187               	clrf	7
  8512  176B  0801               	movf	1,w
  8513  176C  00F1               	movwf	??_bme280_parse_sensor_data
  8514  176D  01F2               	clrf	??_bme280_parse_sensor_data+1
  8515  176E  01F3               	clrf	??_bme280_parse_sensor_data+2
  8516  176F  01F4               	clrf	??_bme280_parse_sensor_data+3
  8517  1770  3004               	movlw	4
  8518  1771                     u3875:	
  8519  1771  35F1               	lslf	??_bme280_parse_sensor_data,f
  8520  1772  0DF2               	rlf	??_bme280_parse_sensor_data+1,f
  8521  1773  0DF3               	rlf	??_bme280_parse_sensor_data+2,f
  8522  1774  0DF4               	rlf	??_bme280_parse_sensor_data+3,f
  8523  1775  0B89               	decfsz	9,f
  8524  1776  2F71               	goto	u3875
  8525  1777  0874               	movf	??_bme280_parse_sensor_data+3,w
  8526  1778  00A7               	movwf	bme280_parse_sensor_data@data_lsb+3
  8527  1779  0873               	movf	??_bme280_parse_sensor_data+2,w
  8528  177A  00A6               	movwf	bme280_parse_sensor_data@data_lsb+2
  8529  177B  0872               	movf	??_bme280_parse_sensor_data+1,w
  8530  177C  00A5               	movwf	bme280_parse_sensor_data@data_lsb+1
  8531  177D  0871               	movf	??_bme280_parse_sensor_data,w
  8532  177E  00A4               	movwf	bme280_parse_sensor_data@data_lsb
  8533                           
  8534                           ;BME280_driver/bme280.c: 715:     data_xlsb = (uint32_t)reg_data[5] >> 4;
  8535  177F  082C               	movf	bme280_parse_sensor_data@reg_data,w
  8536  1780  3E05               	addlw	5
  8537  1781  0086               	movwf	6
  8538  1782  0187               	clrf	7
  8539  1783  0801               	movf	1,w
  8540  1784  00F1               	movwf	??_bme280_parse_sensor_data
  8541  1785  3004               	movlw	4
  8542  1786                     u3885:	
  8543  1786  36F1               	lsrf	??_bme280_parse_sensor_data,f
  8544  1787  0B89               	decfsz	9,f
  8545  1788  2F86               	goto	u3885
  8546  1789  0871               	movf	??_bme280_parse_sensor_data,w
  8547  178A  00F2               	movwf	??_bme280_parse_sensor_data+1
  8548  178B  01F3               	clrf	??_bme280_parse_sensor_data+2
  8549  178C  01F4               	clrf	??_bme280_parse_sensor_data+3
  8550  178D  01F5               	clrf	??_bme280_parse_sensor_data+4
  8551  178E  0875               	movf	??_bme280_parse_sensor_data+4,w
  8552  178F  00A3               	movwf	bme280_parse_sensor_data@data_xlsb+3
  8553  1790  0874               	movf	??_bme280_parse_sensor_data+3,w
  8554  1791  00A2               	movwf	bme280_parse_sensor_data@data_xlsb+2
  8555  1792  0873               	movf	??_bme280_parse_sensor_data+2,w
  8556  1793  00A1               	movwf	bme280_parse_sensor_data@data_xlsb+1
  8557  1794  0872               	movf	??_bme280_parse_sensor_data+1,w
  8558  1795  00A0               	movwf	bme280_parse_sensor_data@data_xlsb
  8559                           
  8560                           ;BME280_driver/bme280.c: 716:     uncomp_data->temperature = data_msb | data_lsb | data_
      +                          xlsb;
  8561  1796  0820               	movf	bme280_parse_sensor_data@data_xlsb,w
  8562  1797  00F1               	movwf	??_bme280_parse_sensor_data
  8563  1798  0821               	movf	bme280_parse_sensor_data@data_xlsb+1,w
  8564  1799  00F2               	movwf	??_bme280_parse_sensor_data+1
  8565  179A  0822               	movf	bme280_parse_sensor_data@data_xlsb+2,w
  8566  179B  00F3               	movwf	??_bme280_parse_sensor_data+2
  8567  179C  0823               	movf	bme280_parse_sensor_data@data_xlsb+3,w
  8568  179D  00F4               	movwf	??_bme280_parse_sensor_data+3
  8569  179E  0828               	movf	bme280_parse_sensor_data@data_msb,w
  8570  179F  0424               	iorwf	bme280_parse_sensor_data@data_lsb,w
  8571  17A0  00F5               	movwf	??_bme280_parse_sensor_data+4
  8572  17A1  0829               	movf	bme280_parse_sensor_data@data_msb+1,w
  8573  17A2  0425               	iorwf	bme280_parse_sensor_data@data_lsb+1,w
  8574  17A3  00F6               	movwf	??_bme280_parse_sensor_data+5
  8575  17A4  082A               	movf	bme280_parse_sensor_data@data_msb+2,w
  8576  17A5  0426               	iorwf	bme280_parse_sensor_data@data_lsb+2,w
  8577  17A6  00F7               	movwf	??_bme280_parse_sensor_data+6
  8578  17A7  082B               	movf	bme280_parse_sensor_data@data_msb+3,w
  8579  17A8  0427               	iorwf	bme280_parse_sensor_data@data_lsb+3,w
  8580  17A9  00F8               	movwf	??_bme280_parse_sensor_data+7
  8581  17AA  0875               	movf	??_bme280_parse_sensor_data+4,w
  8582  17AB  04F1               	iorwf	??_bme280_parse_sensor_data,f
  8583  17AC  0876               	movf	??_bme280_parse_sensor_data+5,w
  8584  17AD  04F2               	iorwf	??_bme280_parse_sensor_data+1,f
  8585  17AE  0877               	movf	??_bme280_parse_sensor_data+6,w
  8586  17AF  04F3               	iorwf	??_bme280_parse_sensor_data+2,f
  8587  17B0  0878               	movf	??_bme280_parse_sensor_data+7,w
  8588  17B1  04F4               	iorwf	??_bme280_parse_sensor_data+3,f
  8589  17B2  0870               	movf	bme280_parse_sensor_data@uncomp_data,w
  8590  17B3  3E04               	addlw	4
  8591  17B4  0086               	movwf	6
  8592  17B5  0187               	clrf	7
  8593  17B6  0871               	movf	??_bme280_parse_sensor_data,w
  8594  17B7  3FC0               	movwi [0]fsr1
  8595  17B8  0872               	movf	??_bme280_parse_sensor_data+1,w
  8596  17B9  3FC1               	movwi [1]fsr1
  8597  17BA  0873               	movf	??_bme280_parse_sensor_data+2,w
  8598  17BB  3FC2               	movwi [2]fsr1
  8599  17BC  0874               	movf	??_bme280_parse_sensor_data+3,w
  8600  17BD  3FC3               	movwi [3]fsr1
  8601                           
  8602                           ;BME280_driver/bme280.c: 719:     data_lsb = (uint32_t)reg_data[6] << 8;
  8603  17BE  082C               	movf	bme280_parse_sensor_data@reg_data,w
  8604  17BF  3E06               	addlw	6
  8605  17C0  0086               	movwf	6
  8606  17C1  0187               	clrf	7
  8607  17C2  0801               	movf	1,w
  8608  17C3  00F1               	movwf	??_bme280_parse_sensor_data
  8609  17C4  01F2               	clrf	??_bme280_parse_sensor_data+1
  8610  17C5  01F3               	clrf	??_bme280_parse_sensor_data+2
  8611  17C6  01F4               	clrf	??_bme280_parse_sensor_data+3
  8612  17C7  3008               	movlw	8
  8613  17C8                     u3895:	
  8614  17C8  35F1               	lslf	??_bme280_parse_sensor_data,f
  8615  17C9  0DF2               	rlf	??_bme280_parse_sensor_data+1,f
  8616  17CA  0DF3               	rlf	??_bme280_parse_sensor_data+2,f
  8617  17CB  0DF4               	rlf	??_bme280_parse_sensor_data+3,f
  8618  17CC  0B89               	decfsz	9,f
  8619  17CD  2FC8               	goto	u3895
  8620  17CE  0874               	movf	??_bme280_parse_sensor_data+3,w
  8621  17CF  00A7               	movwf	bme280_parse_sensor_data@data_lsb+3
  8622  17D0  0873               	movf	??_bme280_parse_sensor_data+2,w
  8623  17D1  00A6               	movwf	bme280_parse_sensor_data@data_lsb+2
  8624  17D2  0872               	movf	??_bme280_parse_sensor_data+1,w
  8625  17D3  00A5               	movwf	bme280_parse_sensor_data@data_lsb+1
  8626  17D4  0871               	movf	??_bme280_parse_sensor_data,w
  8627  17D5  00A4               	movwf	bme280_parse_sensor_data@data_lsb
  8628                           
  8629                           ;BME280_driver/bme280.c: 720:     data_msb = (uint32_t)reg_data[7];
  8630  17D6  082C               	movf	bme280_parse_sensor_data@reg_data,w
  8631  17D7  3E07               	addlw	7
  8632  17D8  0086               	movwf	6
  8633  17D9  0187               	clrf	7
  8634  17DA  0801               	movf	1,w
  8635  17DB  00F1               	movwf	??_bme280_parse_sensor_data
  8636  17DC  01F2               	clrf	??_bme280_parse_sensor_data+1
  8637  17DD  01F3               	clrf	??_bme280_parse_sensor_data+2
  8638  17DE  01F4               	clrf	??_bme280_parse_sensor_data+3
  8639  17DF  0874               	movf	??_bme280_parse_sensor_data+3,w
  8640  17E0  00AB               	movwf	bme280_parse_sensor_data@data_msb+3
  8641  17E1  0873               	movf	??_bme280_parse_sensor_data+2,w
  8642  17E2  00AA               	movwf	bme280_parse_sensor_data@data_msb+2
  8643  17E3  0872               	movf	??_bme280_parse_sensor_data+1,w
  8644  17E4  00A9               	movwf	bme280_parse_sensor_data@data_msb+1
  8645  17E5  0871               	movf	??_bme280_parse_sensor_data,w
  8646  17E6  00A8               	movwf	bme280_parse_sensor_data@data_msb
  8647                           
  8648                           ;BME280_driver/bme280.c: 721:     uncomp_data->humidity = data_msb | data_lsb;
  8649  17E7  0828               	movf	bme280_parse_sensor_data@data_msb,w
  8650  17E8  0424               	iorwf	bme280_parse_sensor_data@data_lsb,w
  8651  17E9  00F1               	movwf	??_bme280_parse_sensor_data
  8652  17EA  0829               	movf	bme280_parse_sensor_data@data_msb+1,w
  8653  17EB  0425               	iorwf	bme280_parse_sensor_data@data_lsb+1,w
  8654  17EC  00F2               	movwf	??_bme280_parse_sensor_data+1
  8655  17ED  082A               	movf	bme280_parse_sensor_data@data_msb+2,w
  8656  17EE  0426               	iorwf	bme280_parse_sensor_data@data_lsb+2,w
  8657  17EF  00F3               	movwf	??_bme280_parse_sensor_data+2
  8658  17F0  082B               	movf	bme280_parse_sensor_data@data_msb+3,w
  8659  17F1  0427               	iorwf	bme280_parse_sensor_data@data_lsb+3,w
  8660  17F2  00F4               	movwf	??_bme280_parse_sensor_data+3
  8661  17F3  0870               	movf	bme280_parse_sensor_data@uncomp_data,w
  8662  17F4  3E08               	addlw	8
  8663  17F5  0086               	movwf	6
  8664  17F6  0187               	clrf	7
  8665  17F7  0871               	movf	??_bme280_parse_sensor_data,w
  8666  17F8  3FC0               	movwi [0]fsr1
  8667  17F9  0872               	movf	??_bme280_parse_sensor_data+1,w
  8668  17FA  3FC1               	movwi [1]fsr1
  8669  17FB  0873               	movf	??_bme280_parse_sensor_data+2,w
  8670  17FC  3FC2               	movwi [2]fsr1
  8671  17FD  0874               	movf	??_bme280_parse_sensor_data+3,w
  8672  17FE  3FC3               	movwi [3]fsr1
  8673  17FF  0008               	return
  8674  1800                     __end_of_bme280_parse_sensor_data:	
  8675                           
  8676                           	psect	text5
  8677  141A                     __ptext5:	
  8678 ;; *************** function _bme280_compensate_data *****************
  8679 ;; Defined at:
  8680 ;;		line 729 in file "BME280_driver/bme280.c"
  8681 ;; Parameters:    Size  Location     Type
  8682 ;;  sensor_comp     1    wreg     unsigned char 
  8683 ;;  uncomp_data     1   59[BANK0 ] PTR const struct bme280_
  8684 ;;		 -> bme280_get_sensor_data@uncomp_data(12), 
  8685 ;;  comp_data       1   60[BANK0 ] PTR struct bme280_data
  8686 ;;		 -> main@sensor_data(12), 
  8687 ;;  calib_data      1   61[BANK0 ] PTR struct bme280_calib_
  8688 ;;		 -> EnvSensor(51), 
  8689 ;; Auto vars:     Size  Location     Type
  8690 ;;  sensor_comp     1   64[BANK0 ] unsigned char 
  8691 ;;  rslt            1   63[BANK0 ] char 
  8692 ;; Return value:  Size  Location     Type
  8693 ;;                  1    wreg      char 
  8694 ;; Registers used:
  8695 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8696 ;; Tracked objects:
  8697 ;;		On entry : 0/0
  8698 ;;		On exit  : 0/0
  8699 ;;		Unchanged: 0/0
  8700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8701 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8702 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8703 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8704 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8705 ;;Total ram usage:        6 bytes
  8706 ;; Hardware stack levels used:    1
  8707 ;; Hardware stack levels required when called:    5
  8708 ;; This function calls:
  8709 ;;		_compensate_humidity
  8710 ;;		_compensate_pressure
  8711 ;;		_compensate_temperature
  8712 ;; This function is called by:
  8713 ;;		_bme280_get_sensor_data
  8714 ;; This function uses a non-reentrant model
  8715 ;;
  8716                           
  8717                           
  8718                           ;psect for function _bme280_compensate_data
  8719  141A                     _bme280_compensate_data:	
  8720                           
  8721                           ;incstack = 0
  8722                           ; Regs used in _bme280_compensate_data: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
  8723                           ;bme280_compensate_data@sensor_comp stored from wreg
  8724  141A  0140               	movlb	0	; select bank0
  8725  141B  00E0               	movwf	bme280_compensate_data@sensor_comp
  8726                           
  8727                           ;BME280_driver/bme280.c: 729: int8_t bme280_compensate_data(uint8_t sensor_comp,;BME280_
      +                          driver/bme280.c: 730:                               const struct bme280_uncomp_data *unc
      +                          omp_data,;BME280_driver/bme280.c: 731:                               struct bme280_data 
      +                          *comp_data,;BME280_driver/bme280.c: 732:                               struct bme280_cal
      +                          ib_data *calib_data);BME280_driver/bme280.c: 733: {;BME280_driver/bme280.c: 734:     int
      +                          8_t rslt = 0;
  8728  141C  01DF               	clrf	bme280_compensate_data@rslt
  8729                           
  8730                           ;BME280_driver/bme280.c: 736:     if ((uncomp_data != ((void*)0)) && (comp_data != ((voi
      +                          d*)0)) && (calib_data != ((void*)0)))
  8731  141D  085B               	movf	bme280_compensate_data@uncomp_data,w
  8732  141E  1903               	btfsc	3,2
  8733  141F  2C8F               	goto	l126
  8734  1420  085C               	movf	bme280_compensate_data@comp_data,w
  8735  1421  1903               	btfsc	3,2
  8736  1422  2C8F               	goto	l126
  8737  1423  085D               	movf	bme280_compensate_data@calib_data,w
  8738  1424  1903               	btfsc	3,2
  8739  1425  2C8F               	goto	l126
  8740                           
  8741                           ;BME280_driver/bme280.c: 737:     {;BME280_driver/bme280.c: 739:         comp_data->temp
      +                          erature = 0;
  8742  1426  085C               	movf	bme280_compensate_data@comp_data,w
  8743  1427  3E04               	addlw	4
  8744  1428  0086               	movwf	6
  8745  1429  3001               	movlw	1	; select bank2/3
  8746  142A  0087               	movwf	7
  8747  142B  3000               	movlw	0
  8748  142C  3FC0               	movwi [0]fsr1
  8749  142D  3000               	movlw	0
  8750  142E  3FC1               	movwi [1]fsr1
  8751  142F  3FC2               	movwi [2]fsr1
  8752  1430  3FC3               	movwi [3]fsr1
  8753                           
  8754                           ;BME280_driver/bme280.c: 740:         comp_data->pressure = 0;
  8755  1431  085C               	movf	bme280_compensate_data@comp_data,w
  8756  1432  0086               	movwf	6
  8757  1433  3001               	movlw	1	; select bank2/3
  8758  1434  0087               	movwf	7
  8759  1435  3000               	movlw	0
  8760  1436  3FC0               	movwi [0]fsr1
  8761  1437  3FC1               	movwi [1]fsr1
  8762  1438  3FC2               	movwi [2]fsr1
  8763  1439  3FC3               	movwi [3]fsr1
  8764                           
  8765                           ;BME280_driver/bme280.c: 741:         comp_data->humidity = 0;
  8766  143A  085C               	movf	bme280_compensate_data@comp_data,w
  8767  143B  3E08               	addlw	8
  8768  143C  0086               	movwf	6
  8769  143D  3001               	movlw	1	; select bank2/3
  8770  143E  0087               	movwf	7
  8771  143F  3000               	movlw	0
  8772  1440  3FC0               	movwi [0]fsr1
  8773  1441  3000               	movlw	0
  8774  1442  3FC1               	movwi [1]fsr1
  8775  1443  3FC2               	movwi [2]fsr1
  8776  1444  3FC3               	movwi [3]fsr1
  8777                           
  8778                           ;BME280_driver/bme280.c: 744:         if (sensor_comp & (1 | 1 << 1 | 1 << 2))
  8779  1445  0860               	movf	bme280_compensate_data@sensor_comp,w
  8780  1446  3907               	andlw	7
  8781  1447  1903               	btfsc	3,2
  8782  1448  2C5F               	goto	l4174
  8783                           
  8784                           ;BME280_driver/bme280.c: 745:         {;BME280_driver/bme280.c: 747:             comp_da
      +                          ta->temperature = compensate_temperature(uncomp_data, calib_data);
  8785  1449  085D               	movf	bme280_compensate_data@calib_data,w
  8786  144A  00DE               	movwf	??_bme280_compensate_data
  8787  144B  085E               	movf	??_bme280_compensate_data,w
  8788  144C  00AE               	movwf	compensate_temperature@calib_data
  8789  144D  085B               	movf	bme280_compensate_data@uncomp_data,w
  8790  144E  3188  20F9  3194   	fcall	_compensate_temperature
  8791  1451  0140               	movlb	0	; select bank0
  8792  1452  085C               	movf	bme280_compensate_data@comp_data,w
  8793  1453  3E04               	addlw	4
  8794  1454  0086               	movwf	6
  8795  1455  3001               	movlw	1	; select bank2/3
  8796  1456  0087               	movwf	7
  8797  1457  082E               	movf	?_compensate_temperature,w
  8798  1458  3FC0               	movwi [0]fsr1
  8799  1459  082F               	movf	?_compensate_temperature+1,w
  8800  145A  3FC1               	movwi [1]fsr1
  8801  145B  0830               	movf	?_compensate_temperature+2,w
  8802  145C  3FC2               	movwi [2]fsr1
  8803  145D  0831               	movf	?_compensate_temperature+3,w
  8804  145E  3FC3               	movwi [3]fsr1
  8805  145F                     l4174:	
  8806                           
  8807                           ;BME280_driver/bme280.c: 749:         if (sensor_comp & 1)
  8808  145F  1C60               	btfss	bme280_compensate_data@sensor_comp,0
  8809  1460  2C76               	goto	l4178
  8810                           
  8811                           ;BME280_driver/bme280.c: 750:         {;BME280_driver/bme280.c: 752:             comp_da
      +                          ta->pressure = compensate_pressure(uncomp_data, calib_data);
  8812  1461  085D               	movf	bme280_compensate_data@calib_data,w
  8813  1462  00DE               	movwf	??_bme280_compensate_data
  8814  1463  085E               	movf	??_bme280_compensate_data,w
  8815  1464  00AE               	movwf	compensate_pressure@calib_data
  8816  1465  085B               	movf	bme280_compensate_data@uncomp_data,w
  8817  1466  3180  2052  3194   	fcall	_compensate_pressure
  8818  1469  0140               	movlb	0	; select bank0
  8819  146A  085C               	movf	bme280_compensate_data@comp_data,w
  8820  146B  0086               	movwf	6
  8821  146C  3001               	movlw	1	; select bank2/3
  8822  146D  0087               	movwf	7
  8823  146E  082E               	movf	?_compensate_pressure,w
  8824  146F  3FC0               	movwi [0]fsr1
  8825  1470  082F               	movf	?_compensate_pressure+1,w
  8826  1471  3FC1               	movwi [1]fsr1
  8827  1472  0830               	movf	?_compensate_pressure+2,w
  8828  1473  3FC2               	movwi [2]fsr1
  8829  1474  0831               	movf	?_compensate_pressure+3,w
  8830  1475  3FC3               	movwi [3]fsr1
  8831  1476                     l4178:	
  8832                           
  8833                           ;BME280_driver/bme280.c: 754:         if (sensor_comp & 1 << 2)
  8834  1476  1D60               	btfss	bme280_compensate_data@sensor_comp,2
  8835  1477  2C91               	goto	l4182
  8836                           
  8837                           ;BME280_driver/bme280.c: 755:         {;BME280_driver/bme280.c: 758:             comp_da
      +                          ta->humidity = compensate_humidity(uncomp_data, calib_data);
  8838  1478  085D               	movf	bme280_compensate_data@calib_data,w
  8839  1479  00DE               	movwf	??_bme280_compensate_data
  8840  147A  085E               	movf	??_bme280_compensate_data,w
  8841  147B  00AE               	movwf	compensate_humidity@calib_data
  8842  147C  085B               	movf	bme280_compensate_data@uncomp_data,w
  8843  147D  318D  2536  3194   	fcall	_compensate_humidity
  8844  1480  0140               	movlb	0	; select bank0
  8845  1481  085C               	movf	bme280_compensate_data@comp_data,w
  8846  1482  3E08               	addlw	8
  8847  1483  0086               	movwf	6
  8848  1484  3001               	movlw	1	; select bank2/3
  8849  1485  0087               	movwf	7
  8850  1486  082E               	movf	?_compensate_humidity,w
  8851  1487  3FC0               	movwi [0]fsr1
  8852  1488  082F               	movf	?_compensate_humidity+1,w
  8853  1489  3FC1               	movwi [1]fsr1
  8854  148A  0830               	movf	?_compensate_humidity+2,w
  8855  148B  3FC2               	movwi [2]fsr1
  8856  148C  0831               	movf	?_compensate_humidity+3,w
  8857  148D  3FC3               	movwi [3]fsr1
  8858  148E  2C91               	goto	l4182
  8859  148F                     l126:	
  8860                           ;BME280_driver/bme280.c: 765:     else
  8861                           
  8862                           
  8863                           ;BME280_driver/bme280.c: 766:     {;BME280_driver/bme280.c: 767:         rslt = -1;
  8864  148F  01DF               	clrf	bme280_compensate_data@rslt
  8865  1490  03DF               	decf	bme280_compensate_data@rslt,f
  8866  1491                     l4182:	
  8867                           
  8868                           ;BME280_driver/bme280.c: 770:     return rslt;
  8869  1491  085F               	movf	bme280_compensate_data@rslt,w
  8870  1492  0008               	return
  8871  1493                     __end_of_bme280_compensate_data:	
  8872                           
  8873                           	psect	text6
  8874  08F9                     __ptext6:	
  8875 ;; *************** function _compensate_temperature *****************
  8876 ;; Defined at:
  8877 ;;		line 1126 in file "BME280_driver/bme280.c"
  8878 ;; Parameters:    Size  Location     Type
  8879 ;;  uncomp_data     1    wreg     PTR const struct bme280_
  8880 ;;		 -> bme280_get_sensor_data@uncomp_data(12), 
  8881 ;;  calib_data      1   14[BANK0 ] PTR struct bme280_calib_
  8882 ;;		 -> EnvSensor(51), 
  8883 ;; Auto vars:     Size  Location     Type
  8884 ;;  uncomp_data     1   44[BANK0 ] PTR const struct bme280_
  8885 ;;		 -> bme280_get_sensor_data@uncomp_data(12), 
  8886 ;;  temperature     4   49[BANK0 ] long 
  8887 ;;  var2            4   45[BANK0 ] long 
  8888 ;;  var1            4   40[BANK0 ] long 
  8889 ;;  temperature_    4   36[BANK0 ] long 
  8890 ;;  temperature_    4    0        long 
  8891 ;; Return value:  Size  Location     Type
  8892 ;;                  4   14[BANK0 ] long 
  8893 ;; Registers used:
  8894 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8895 ;; Tracked objects:
  8896 ;;		On entry : 0/0
  8897 ;;		On exit  : 0/0
  8898 ;;		Unchanged: 0/0
  8899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8900 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8901 ;;      Locals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8902 ;;      Temps:          0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8903 ;;      Totals:         0      39       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8904 ;;Total ram usage:       39 bytes
  8905 ;; Hardware stack levels used:    1
  8906 ;; Hardware stack levels required when called:    4
  8907 ;; This function calls:
  8908 ;;		___aldiv
  8909 ;;		___lmul
  8910 ;; This function is called by:
  8911 ;;		_bme280_compensate_data
  8912 ;; This function uses a non-reentrant model
  8913 ;;
  8914                           
  8915                           
  8916                           ;psect for function _compensate_temperature
  8917  08F9                     _compensate_temperature:	
  8918                           
  8919                           ;incstack = 0
  8920                           ; Regs used in _compensate_temperature: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
  8921                           ;compensate_temperature@uncomp_data stored from wreg
  8922  08F9  0140               	movlb	0	; select bank0
  8923  08FA  00CC               	movwf	compensate_temperature@uncomp_data
  8924                           
  8925                           ;BME280_driver/bme280.c: 1133:     int32_t temperature_max = 8500;
  8926  08FB  3000               	movlw	0
  8927  08FC  00C7               	movwf	compensate_temperature@temperature_max+3
  8928  08FD  3000               	movlw	0
  8929  08FE  00C6               	movwf	compensate_temperature@temperature_max+2
  8930  08FF  3021               	movlw	33
  8931  0900  00C5               	movwf	compensate_temperature@temperature_max+1
  8932  0901  3034               	movlw	52
  8933  0902  00C4               	movwf	compensate_temperature@temperature_max
  8934                           
  8935                           ;BME280_driver/bme280.c: 1135:     var1 = (int32_t)((uncomp_data->temperature / 8) - ((i
      +                          nt32_t)calib_data->dig_T1 * 2));
  8936  0903  082E               	movf	compensate_temperature@calib_data,w
  8937  0904  0086               	movwf	6
  8938  0905  3001               	movlw	1	; select bank2/3
  8939  0906  0087               	movwf	7
  8940  0907  3F40               	moviw [0]fsr1
  8941  0908  00B2               	movwf	??_compensate_temperature
  8942  0909  3F41               	moviw [1]fsr1
  8943  090A  00B3               	movwf	??_compensate_temperature+1
  8944  090B  0832               	movf	??_compensate_temperature,w
  8945  090C  00B4               	movwf	??_compensate_temperature+2
  8946  090D  0833               	movf	??_compensate_temperature+1,w
  8947  090E  00B5               	movwf	??_compensate_temperature+3
  8948  090F  01B6               	clrf	??_compensate_temperature+4
  8949  0910  01B7               	clrf	??_compensate_temperature+5
  8950  0911  3001               	movlw	1
  8951  0912                     u3275:	
  8952  0912  35B4               	lslf	??_compensate_temperature+2,f
  8953  0913  0DB5               	rlf	??_compensate_temperature+3,f
  8954  0914  0DB6               	rlf	??_compensate_temperature+4,f
  8955  0915  0DB7               	rlf	??_compensate_temperature+5,f
  8956  0916  0B89               	decfsz	9,f
  8957  0917  2912               	goto	u3275
  8958  0918  084C               	movf	compensate_temperature@uncomp_data,w
  8959  0919  3E04               	addlw	4
  8960  091A  0086               	movwf	6
  8961  091B  0187               	clrf	7
  8962  091C  3F40               	moviw [0]fsr1
  8963  091D  00B8               	movwf	??_compensate_temperature+6
  8964  091E  3F41               	moviw [1]fsr1
  8965  091F  00B9               	movwf	??_compensate_temperature+7
  8966  0920  3F42               	moviw [2]fsr1
  8967  0921  00BA               	movwf	??_compensate_temperature+8
  8968  0922  3F43               	moviw [3]fsr1
  8969  0923  00BB               	movwf	??_compensate_temperature+9
  8970  0924  3003               	movlw	3
  8971  0925                     u3285:	
  8972  0925  36BB               	lsrf	??_compensate_temperature+9,f
  8973  0926  0CBA               	rrf	??_compensate_temperature+8,f
  8974  0927  0CB9               	rrf	??_compensate_temperature+7,f
  8975  0928  0CB8               	rrf	??_compensate_temperature+6,f
  8976  0929  0B89               	decfsz	9,f
  8977  092A  2925               	goto	u3285
  8978  092B  0834               	movf	??_compensate_temperature+2,w
  8979  092C  02B8               	subwf	??_compensate_temperature+6,f
  8980  092D  0835               	movf	??_compensate_temperature+3,w
  8981  092E  3BB9               	subwfb	??_compensate_temperature+7,f
  8982  092F  0836               	movf	??_compensate_temperature+4,w
  8983  0930  3BBA               	subwfb	??_compensate_temperature+8,f
  8984  0931  0837               	movf	??_compensate_temperature+5,w
  8985  0932  3BBB               	subwfb	??_compensate_temperature+9,f
  8986  0933  083B               	movf	??_compensate_temperature+9,w
  8987  0934  00CB               	movwf	compensate_temperature@var1+3
  8988  0935  083A               	movf	??_compensate_temperature+8,w
  8989  0936  00CA               	movwf	compensate_temperature@var1+2
  8990  0937  0839               	movf	??_compensate_temperature+7,w
  8991  0938  00C9               	movwf	compensate_temperature@var1+1
  8992  0939  0838               	movf	??_compensate_temperature+6,w
  8993  093A  00C8               	movwf	compensate_temperature@var1
  8994                           
  8995                           ;BME280_driver/bme280.c: 1136:     var1 = (var1 * ((int32_t)calib_data->dig_T2)) / 2048;
  8996  093B  3000               	movlw	0
  8997  093C  00A3               	movwf	___aldiv@divisor+3
  8998  093D  3000               	movlw	0
  8999  093E  00A2               	movwf	___aldiv@divisor+2
  9000  093F  3008               	movlw	8
  9001  0940  00A1               	movwf	___aldiv@divisor+1
  9002  0941  3000               	movlw	0
  9003  0942  00A0               	movwf	___aldiv@divisor
  9004  0943  082E               	movf	compensate_temperature@calib_data,w
  9005  0944  3E02               	addlw	2
  9006  0945  0086               	movwf	6
  9007  0946  3001               	movlw	1	; select bank2/3
  9008  0947  0087               	movwf	7
  9009  0948  3F40               	moviw [0]fsr1
  9010  0949  00B2               	movwf	??_compensate_temperature
  9011  094A  3F41               	moviw [1]fsr1
  9012  094B  00B3               	movwf	??_compensate_temperature+1
  9013  094C  0832               	movf	??_compensate_temperature,w
  9014  094D  00F0               	movwf	___lmul@multiplier
  9015  094E  0833               	movf	??_compensate_temperature+1,w
  9016  094F  00F1               	movwf	___lmul@multiplier+1
  9017  0950  0D89               	rlf	9,f
  9018  0951  3B89               	subwfb	9,f
  9019  0952  0989               	comf	9,f
  9020  0953  00F2               	movwf	___lmul@multiplier+2
  9021  0954  00F3               	movwf	___lmul@multiplier+3
  9022  0955  084B               	movf	compensate_temperature@var1+3,w
  9023  0956  00F7               	movwf	___lmul@multiplicand+3
  9024  0957  084A               	movf	compensate_temperature@var1+2,w
  9025  0958  00F6               	movwf	___lmul@multiplicand+2
  9026  0959  0849               	movf	compensate_temperature@var1+1,w
  9027  095A  00F5               	movwf	___lmul@multiplicand+1
  9028  095B  0848               	movf	compensate_temperature@var1,w
  9029  095C  00F4               	movwf	___lmul@multiplicand
  9030  095D  319A  221F  3188   	fcall	___lmul
  9031  0960  0873               	movf	?___lmul+3,w
  9032  0961  0140               	movlb	0	; select bank0
  9033  0962  00A7               	movwf	___aldiv@dividend+3
  9034  0963  0872               	movf	?___lmul+2,w
  9035  0964  00A6               	movwf	___aldiv@dividend+2
  9036  0965  0871               	movf	?___lmul+1,w
  9037  0966  00A5               	movwf	___aldiv@dividend+1
  9038  0967  0870               	movf	?___lmul,w
  9039  0968  00A4               	movwf	___aldiv@dividend
  9040  0969  3194  2493  3188   	fcall	___aldiv
  9041  096C  0140               	movlb	0	; select bank0
  9042  096D  0823               	movf	?___aldiv+3,w
  9043  096E  00CB               	movwf	compensate_temperature@var1+3
  9044  096F  0822               	movf	?___aldiv+2,w
  9045  0970  00CA               	movwf	compensate_temperature@var1+2
  9046  0971  0821               	movf	?___aldiv+1,w
  9047  0972  00C9               	movwf	compensate_temperature@var1+1
  9048  0973  0820               	movf	?___aldiv,w
  9049  0974  00C8               	movwf	compensate_temperature@var1
  9050                           
  9051                           ;BME280_driver/bme280.c: 1137:     var2 = (int32_t)((uncomp_data->temperature / 16) - ((
      +                          int32_t)calib_data->dig_T1));
  9052  0975  082E               	movf	compensate_temperature@calib_data,w
  9053  0976  0086               	movwf	6
  9054  0977  3001               	movlw	1	; select bank2/3
  9055  0978  0087               	movwf	7
  9056  0979  3F40               	moviw [0]fsr1
  9057  097A  00B2               	movwf	??_compensate_temperature
  9058  097B  3F41               	moviw [1]fsr1
  9059  097C  00B3               	movwf	??_compensate_temperature+1
  9060  097D  0832               	movf	??_compensate_temperature,w
  9061  097E  00B4               	movwf	??_compensate_temperature+2
  9062  097F  0833               	movf	??_compensate_temperature+1,w
  9063  0980  00B5               	movwf	??_compensate_temperature+3
  9064  0981  01B6               	clrf	??_compensate_temperature+4
  9065  0982  01B7               	clrf	??_compensate_temperature+5
  9066  0983  084C               	movf	compensate_temperature@uncomp_data,w
  9067  0984  3E04               	addlw	4
  9068  0985  0086               	movwf	6
  9069  0986  0187               	clrf	7
  9070  0987  3F40               	moviw [0]fsr1
  9071  0988  00B8               	movwf	??_compensate_temperature+6
  9072  0989  3F41               	moviw [1]fsr1
  9073  098A  00B9               	movwf	??_compensate_temperature+7
  9074  098B  3F42               	moviw [2]fsr1
  9075  098C  00BA               	movwf	??_compensate_temperature+8
  9076  098D  3F43               	moviw [3]fsr1
  9077  098E  00BB               	movwf	??_compensate_temperature+9
  9078  098F  3004               	movlw	4
  9079  0990                     u3295:	
  9080  0990  36BB               	lsrf	??_compensate_temperature+9,f
  9081  0991  0CBA               	rrf	??_compensate_temperature+8,f
  9082  0992  0CB9               	rrf	??_compensate_temperature+7,f
  9083  0993  0CB8               	rrf	??_compensate_temperature+6,f
  9084  0994  0B89               	decfsz	9,f
  9085  0995  2990               	goto	u3295
  9086  0996  0834               	movf	??_compensate_temperature+2,w
  9087  0997  02B8               	subwf	??_compensate_temperature+6,f
  9088  0998  0835               	movf	??_compensate_temperature+3,w
  9089  0999  3BB9               	subwfb	??_compensate_temperature+7,f
  9090  099A  0836               	movf	??_compensate_temperature+4,w
  9091  099B  3BBA               	subwfb	??_compensate_temperature+8,f
  9092  099C  0837               	movf	??_compensate_temperature+5,w
  9093  099D  3BBB               	subwfb	??_compensate_temperature+9,f
  9094  099E  083B               	movf	??_compensate_temperature+9,w
  9095  099F  00D0               	movwf	compensate_temperature@var2+3
  9096  09A0  083A               	movf	??_compensate_temperature+8,w
  9097  09A1  00CF               	movwf	compensate_temperature@var2+2
  9098  09A2  0839               	movf	??_compensate_temperature+7,w
  9099  09A3  00CE               	movwf	compensate_temperature@var2+1
  9100  09A4  0838               	movf	??_compensate_temperature+6,w
  9101  09A5  00CD               	movwf	compensate_temperature@var2
  9102                           
  9103                           ;BME280_driver/bme280.c: 1138:     var2 = (((var2 * var2) / 4096) * ((int32_t)calib_data
      +                          ->dig_T3)) / 16384;
  9104  09A6  3000               	movlw	0
  9105  09A7  00A3               	movwf	___aldiv@divisor+3
  9106  09A8  3000               	movlw	0
  9107  09A9  00A2               	movwf	___aldiv@divisor+2
  9108  09AA  3010               	movlw	16
  9109  09AB  00A1               	movwf	___aldiv@divisor+1
  9110  09AC  3000               	movlw	0
  9111  09AD  00A0               	movwf	___aldiv@divisor
  9112  09AE  0850               	movf	compensate_temperature@var2+3,w
  9113  09AF  00F3               	movwf	___lmul@multiplier+3
  9114  09B0  084F               	movf	compensate_temperature@var2+2,w
  9115  09B1  00F2               	movwf	___lmul@multiplier+2
  9116  09B2  084E               	movf	compensate_temperature@var2+1,w
  9117  09B3  00F1               	movwf	___lmul@multiplier+1
  9118  09B4  084D               	movf	compensate_temperature@var2,w
  9119  09B5  00F0               	movwf	___lmul@multiplier
  9120  09B6  0850               	movf	compensate_temperature@var2+3,w
  9121  09B7  00F7               	movwf	___lmul@multiplicand+3
  9122  09B8  084F               	movf	compensate_temperature@var2+2,w
  9123  09B9  00F6               	movwf	___lmul@multiplicand+2
  9124  09BA  084E               	movf	compensate_temperature@var2+1,w
  9125  09BB  00F5               	movwf	___lmul@multiplicand+1
  9126  09BC  084D               	movf	compensate_temperature@var2,w
  9127  09BD  00F4               	movwf	___lmul@multiplicand
  9128  09BE  319A  221F  3188   	fcall	___lmul
  9129  09C1  0873               	movf	?___lmul+3,w
  9130  09C2  0140               	movlb	0	; select bank0
  9131  09C3  00A7               	movwf	___aldiv@dividend+3
  9132  09C4  0872               	movf	?___lmul+2,w
  9133  09C5  00A6               	movwf	___aldiv@dividend+2
  9134  09C6  0871               	movf	?___lmul+1,w
  9135  09C7  00A5               	movwf	___aldiv@dividend+1
  9136  09C8  0870               	movf	?___lmul,w
  9137  09C9  00A4               	movwf	___aldiv@dividend
  9138  09CA  3194  2493  3188   	fcall	___aldiv
  9139  09CD  0140               	movlb	0	; select bank0
  9140  09CE  0823               	movf	?___aldiv+3,w
  9141  09CF  00BF               	movwf	_compensate_temperature$2687+3
  9142  09D0  0822               	movf	?___aldiv+2,w
  9143  09D1  00BE               	movwf	_compensate_temperature$2687+2
  9144  09D2  0821               	movf	?___aldiv+1,w
  9145  09D3  00BD               	movwf	_compensate_temperature$2687+1
  9146  09D4  0820               	movf	?___aldiv,w
  9147  09D5  00BC               	movwf	_compensate_temperature$2687
  9148                           
  9149                           ;BME280_driver/bme280.c: 1138:     var2 = (((var2 * var2) / 4096) * ((int32_t)calib_data
      +                          ->dig_T3)) / 16384;
  9150  09D6  3000               	movlw	0
  9151  09D7  00A3               	movwf	___aldiv@divisor+3
  9152  09D8  3000               	movlw	0
  9153  09D9  00A2               	movwf	___aldiv@divisor+2
  9154  09DA  3040               	movlw	64
  9155  09DB  00A1               	movwf	___aldiv@divisor+1
  9156  09DC  3000               	movlw	0
  9157  09DD  00A0               	movwf	___aldiv@divisor
  9158  09DE  083F               	movf	_compensate_temperature$2687+3,w
  9159  09DF  00F3               	movwf	___lmul@multiplier+3
  9160  09E0  083E               	movf	_compensate_temperature$2687+2,w
  9161  09E1  00F2               	movwf	___lmul@multiplier+2
  9162  09E2  083D               	movf	_compensate_temperature$2687+1,w
  9163  09E3  00F1               	movwf	___lmul@multiplier+1
  9164  09E4  083C               	movf	_compensate_temperature$2687,w
  9165  09E5  00F0               	movwf	___lmul@multiplier
  9166  09E6  082E               	movf	compensate_temperature@calib_data,w
  9167  09E7  3E04               	addlw	4
  9168  09E8  0086               	movwf	6
  9169  09E9  3001               	movlw	1	; select bank2/3
  9170  09EA  0087               	movwf	7
  9171  09EB  3F40               	moviw [0]fsr1
  9172  09EC  00B2               	movwf	??_compensate_temperature
  9173  09ED  3F41               	moviw [1]fsr1
  9174  09EE  00B3               	movwf	??_compensate_temperature+1
  9175  09EF  0832               	movf	??_compensate_temperature,w
  9176  09F0  00F4               	movwf	___lmul@multiplicand
  9177  09F1  0833               	movf	??_compensate_temperature+1,w
  9178  09F2  00F5               	movwf	___lmul@multiplicand+1
  9179  09F3  0D89               	rlf	9,f
  9180  09F4  3B89               	subwfb	9,f
  9181  09F5  0989               	comf	9,f
  9182  09F6  00F6               	movwf	___lmul@multiplicand+2
  9183  09F7  00F7               	movwf	___lmul@multiplicand+3
  9184  09F8  319A  221F  3188   	fcall	___lmul
  9185  09FB  0873               	movf	?___lmul+3,w
  9186  09FC  0140               	movlb	0	; select bank0
  9187  09FD  00A7               	movwf	___aldiv@dividend+3
  9188  09FE  0872               	movf	?___lmul+2,w
  9189  09FF  00A6               	movwf	___aldiv@dividend+2
  9190  0A00  0871               	movf	?___lmul+1,w
  9191  0A01  00A5               	movwf	___aldiv@dividend+1
  9192  0A02  0870               	movf	?___lmul,w
  9193  0A03  00A4               	movwf	___aldiv@dividend
  9194  0A04  3194  2493  3188   	fcall	___aldiv
  9195  0A07  0140               	movlb	0	; select bank0
  9196  0A08  0823               	movf	?___aldiv+3,w
  9197  0A09  00D0               	movwf	compensate_temperature@var2+3
  9198  0A0A  0822               	movf	?___aldiv+2,w
  9199  0A0B  00CF               	movwf	compensate_temperature@var2+2
  9200  0A0C  0821               	movf	?___aldiv+1,w
  9201  0A0D  00CE               	movwf	compensate_temperature@var2+1
  9202  0A0E  0820               	movf	?___aldiv,w
  9203  0A0F  00CD               	movwf	compensate_temperature@var2
  9204                           
  9205                           ;BME280_driver/bme280.c: 1139:     calib_data->t_fine = var1 + var2;
  9206  0A10  0848               	movf	compensate_temperature@var1,w
  9207  0A11  074D               	addwf	compensate_temperature@var2,w
  9208  0A12  00B2               	movwf	??_compensate_temperature
  9209  0A13  0849               	movf	compensate_temperature@var1+1,w
  9210  0A14  3D4E               	addwfc	compensate_temperature@var2+1,w
  9211  0A15  00B3               	movwf	??_compensate_temperature+1
  9212  0A16  084A               	movf	compensate_temperature@var1+2,w
  9213  0A17  3D4F               	addwfc	compensate_temperature@var2+2,w
  9214  0A18  00B4               	movwf	??_compensate_temperature+2
  9215  0A19  084B               	movf	compensate_temperature@var1+3,w
  9216  0A1A  3D50               	addwfc	compensate_temperature@var2+3,w
  9217  0A1B  00B5               	movwf	??_compensate_temperature+3
  9218  0A1C  082E               	movf	compensate_temperature@calib_data,w
  9219  0A1D  3E21               	addlw	33
  9220  0A1E  0086               	movwf	6
  9221  0A1F  3001               	movlw	1	; select bank2/3
  9222  0A20  0087               	movwf	7
  9223  0A21  0832               	movf	??_compensate_temperature,w
  9224  0A22  3FC0               	movwi [0]fsr1
  9225  0A23  0833               	movf	??_compensate_temperature+1,w
  9226  0A24  3FC1               	movwi [1]fsr1
  9227  0A25  0834               	movf	??_compensate_temperature+2,w
  9228  0A26  3FC2               	movwi [2]fsr1
  9229  0A27  0835               	movf	??_compensate_temperature+3,w
  9230  0A28  3FC3               	movwi [3]fsr1
  9231                           
  9232                           ;BME280_driver/bme280.c: 1140:     temperature = (calib_data->t_fine * 5 + 128) / 256;
  9233  0A29  3000               	movlw	0
  9234  0A2A  00A3               	movwf	___aldiv@divisor+3
  9235  0A2B  3000               	movlw	0
  9236  0A2C  00A2               	movwf	___aldiv@divisor+2
  9237  0A2D  3001               	movlw	1
  9238  0A2E  00A1               	movwf	___aldiv@divisor+1
  9239  0A2F  3000               	movlw	0
  9240  0A30  00A0               	movwf	___aldiv@divisor
  9241  0A31  3080               	movlw	128
  9242  0A32  00B2               	movwf	??_compensate_temperature
  9243  0A33  3000               	movlw	0
  9244  0A34  00B3               	movwf	??_compensate_temperature+1
  9245  0A35  3000               	movlw	0
  9246  0A36  00B4               	movwf	??_compensate_temperature+2
  9247  0A37  3000               	movlw	0
  9248  0A38  00B5               	movwf	??_compensate_temperature+3
  9249  0A39  082E               	movf	compensate_temperature@calib_data,w
  9250  0A3A  3E21               	addlw	33
  9251  0A3B  0086               	movwf	6
  9252  0A3C  3001               	movlw	1	; select bank2/3
  9253  0A3D  0087               	movwf	7
  9254  0A3E  3F40               	moviw [0]fsr1
  9255  0A3F  00F0               	movwf	___lmul@multiplier
  9256  0A40  3F41               	moviw [1]fsr1
  9257  0A41  00F1               	movwf	___lmul@multiplier+1
  9258  0A42  3F42               	moviw [2]fsr1
  9259  0A43  00F2               	movwf	___lmul@multiplier+2
  9260  0A44  3F43               	moviw [3]fsr1
  9261  0A45  00F3               	movwf	___lmul@multiplier+3
  9262  0A46  3000               	movlw	0
  9263  0A47  00F7               	movwf	___lmul@multiplicand+3
  9264  0A48  3000               	movlw	0
  9265  0A49  00F6               	movwf	___lmul@multiplicand+2
  9266  0A4A  3000               	movlw	0
  9267  0A4B  00F5               	movwf	___lmul@multiplicand+1
  9268  0A4C  3005               	movlw	5
  9269  0A4D  00F4               	movwf	___lmul@multiplicand
  9270  0A4E  319A  221F  3188   	fcall	___lmul
  9271  0A51  0870               	movf	?___lmul,w
  9272  0A52  0140               	movlb	0	; select bank0
  9273  0A53  07B2               	addwf	??_compensate_temperature,f
  9274  0A54  0871               	movf	?___lmul+1,w
  9275  0A55  3DB3               	addwfc	??_compensate_temperature+1,f
  9276  0A56  0872               	movf	?___lmul+2,w
  9277  0A57  3DB4               	addwfc	??_compensate_temperature+2,f
  9278  0A58  0873               	movf	?___lmul+3,w
  9279  0A59  3DB5               	addwfc	??_compensate_temperature+3,f
  9280  0A5A  0835               	movf	??_compensate_temperature+3,w
  9281  0A5B  00A7               	movwf	___aldiv@dividend+3
  9282  0A5C  0834               	movf	??_compensate_temperature+2,w
  9283  0A5D  00A6               	movwf	___aldiv@dividend+2
  9284  0A5E  0833               	movf	??_compensate_temperature+1,w
  9285  0A5F  00A5               	movwf	___aldiv@dividend+1
  9286  0A60  0832               	movf	??_compensate_temperature,w
  9287  0A61  00A4               	movwf	___aldiv@dividend
  9288  0A62  3194  2493  3188   	fcall	___aldiv
  9289  0A65  0140               	movlb	0	; select bank0
  9290  0A66  0823               	movf	?___aldiv+3,w
  9291  0A67  00D4               	movwf	compensate_temperature@temperature+3
  9292  0A68  0822               	movf	?___aldiv+2,w
  9293  0A69  00D3               	movwf	compensate_temperature@temperature+2
  9294  0A6A  0821               	movf	?___aldiv+1,w
  9295  0A6B  00D2               	movwf	compensate_temperature@temperature+1
  9296  0A6C  0820               	movf	?___aldiv,w
  9297  0A6D  00D1               	movwf	compensate_temperature@temperature
  9298                           
  9299                           ;BME280_driver/bme280.c: 1141:     if (temperature < temperature_min)
  9300  0A6E  1FD4               	btfss	compensate_temperature@temperature+3,7
  9301  0A6F  2A82               	goto	l3844
  9302  0A70  3060               	movlw	96
  9303  0A71  0251               	subwf	compensate_temperature@temperature,w
  9304  0A72  30F0               	movlw	240
  9305  0A73  3B52               	subwfb	compensate_temperature@temperature+1,w
  9306  0A74  30FF               	movlw	255
  9307  0A75  3B53               	subwfb	compensate_temperature@temperature+2,w
  9308  0A76  30FF               	movlw	255
  9309  0A77  3B54               	subwfb	compensate_temperature@temperature+3,w
  9310  0A78  1803               	btfsc	3,0
  9311  0A79  2A82               	goto	l3844
  9312                           
  9313                           ;BME280_driver/bme280.c: 1142:     {;BME280_driver/bme280.c: 1143:         temperature =
      +                           temperature_min;
  9314  0A7A  30FF               	movlw	255
  9315  0A7B  00D4               	movwf	compensate_temperature@temperature+3
  9316  0A7C  30FF               	movlw	255
  9317  0A7D  00D3               	movwf	compensate_temperature@temperature+2
  9318  0A7E  30F0               	movlw	240
  9319  0A7F  00D2               	movwf	compensate_temperature@temperature+1
  9320  0A80  3060               	movlw	96
  9321  0A81  2A97               	goto	L2
  9322  0A82                     l3844:	
  9323                           ;BME280_driver/bme280.c: 1144:     }
  9324                           
  9325  0A82  1BD4               	btfsc	compensate_temperature@temperature+3,7
  9326  0A83  2A98               	goto	l185
  9327  0A84  0854               	movf	compensate_temperature@temperature+3,w
  9328  0A85  1D03               	btfss	3,2
  9329  0A86  2A90               	goto	l3846
  9330  0A87  0853               	movf	compensate_temperature@temperature+2,w
  9331  0A88  1D03               	btfss	3,2
  9332  0A89  2A90               	goto	l3846
  9333  0A8A  3035               	movlw	53
  9334  0A8B  0251               	subwf	compensate_temperature@temperature,w
  9335  0A8C  3021               	movlw	33
  9336  0A8D  3B52               	subwfb	compensate_temperature@temperature+1,w
  9337  0A8E  1C03               	btfss	3,0
  9338  0A8F  2A98               	goto	l185
  9339  0A90                     l3846:	
  9340                           
  9341                           ;BME280_driver/bme280.c: 1146:     {;BME280_driver/bme280.c: 1147:         temperature =
      +                           temperature_max;
  9342  0A90  3000               	movlw	0
  9343  0A91  00D4               	movwf	compensate_temperature@temperature+3
  9344  0A92  3000               	movlw	0
  9345  0A93  00D3               	movwf	compensate_temperature@temperature+2
  9346  0A94  3021               	movlw	33
  9347  0A95  00D2               	movwf	compensate_temperature@temperature+1
  9348  0A96  3034               	movlw	52
  9349  0A97                     L2:	
  9350  0A97  00D1               	movwf	compensate_temperature@temperature
  9351  0A98                     l185:	
  9352                           
  9353                           ;BME280_driver/bme280.c: 1150:     return temperature;
  9354  0A98  0854               	movf	compensate_temperature@temperature+3,w
  9355  0A99  00B1               	movwf	?_compensate_temperature+3
  9356  0A9A  0853               	movf	compensate_temperature@temperature+2,w
  9357  0A9B  00B0               	movwf	?_compensate_temperature+2
  9358  0A9C  0852               	movf	compensate_temperature@temperature+1,w
  9359  0A9D  00AF               	movwf	?_compensate_temperature+1
  9360  0A9E  0851               	movf	compensate_temperature@temperature,w
  9361  0A9F  00AE               	movwf	?_compensate_temperature
  9362  0AA0  0008               	return
  9363  0AA1                     __end_of_compensate_temperature:	
  9364                           
  9365                           	psect	text7
  9366  0052                     __ptext7:	
  9367 ;; *************** function _compensate_pressure *****************
  9368 ;; Defined at:
  9369 ;;		line 1209 in file "BME280_driver/bme280.c"
  9370 ;; Parameters:    Size  Location     Type
  9371 ;;  uncomp_data     1    wreg     PTR const struct bme280_
  9372 ;;		 -> bme280_get_sensor_data@uncomp_data(12), 
  9373 ;;  calib_data      1   14[BANK0 ] PTR const struct bme280_
  9374 ;;		 -> EnvSensor(51), 
  9375 ;; Auto vars:     Size  Location     Type
  9376 ;;  uncomp_data     1   20[BANK1 ] PTR const struct bme280_
  9377 ;;		 -> bme280_get_sensor_data@uncomp_data(12), 
  9378 ;;  var1            4   41[BANK1 ] long 
  9379 ;;  pressure        4   37[BANK1 ] unsigned long 
  9380 ;;  var2            4   33[BANK1 ] long 
  9381 ;;  pressure_min    4    0        unsigned long 
  9382 ;;  pressure_max    4   21[BANK1 ] unsigned long 
  9383 ;;  var5            4    8[BANK1 ] unsigned long 
  9384 ;;  var4            4    4[BANK1 ] long 
  9385 ;;  var3            4    0[BANK1 ] long 
  9386 ;; Return value:  Size  Location     Type
  9387 ;;                  4   14[BANK0 ] unsigned long 
  9388 ;; Registers used:
  9389 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9390 ;; Tracked objects:
  9391 ;;		On entry : 0/0
  9392 ;;		On exit  : 0/0
  9393 ;;		Unchanged: 0/0
  9394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9395 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9396 ;;      Locals:         0       0      45       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9397 ;;      Temps:          0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9398 ;;      Totals:         0      22      45       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9399 ;;Total ram usage:       67 bytes
  9400 ;; Hardware stack levels used:    1
  9401 ;; Hardware stack levels required when called:    4
  9402 ;; This function calls:
  9403 ;;		___aldiv
  9404 ;;		___lldiv
  9405 ;;		___lmul
  9406 ;; This function is called by:
  9407 ;;		_bme280_compensate_data
  9408 ;; This function uses a non-reentrant model
  9409 ;;
  9410                           
  9411                           
  9412                           ;psect for function _compensate_pressure
  9413  0052                     _compensate_pressure:	
  9414                           
  9415                           ;incstack = 0
  9416                           ; Regs used in _compensate_pressure: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9417                           ;compensate_pressure@uncomp_data stored from wreg
  9418  0052  0141               	movlb	1	; select bank1
  9419  0053  00B4               	movwf	compensate_pressure@uncomp_data^(0+128)
  9420                           
  9421                           ;BME280_driver/bme280.c: 1219:     uint32_t pressure_max = 110000;
  9422  0054  3000               	movlw	0
  9423  0055  00B8               	movwf	(compensate_pressure@pressure_max+3)^(0+128)
  9424  0056  3001               	movlw	1
  9425  0057  00B7               	movwf	(compensate_pressure@pressure_max+2)^(0+128)
  9426  0058  30AD               	movlw	173
  9427  0059  00B6               	movwf	(compensate_pressure@pressure_max+1)^(0+128)
  9428  005A  30B0               	movlw	176
  9429  005B  00B5               	movwf	compensate_pressure@pressure_max^(0+128)
  9430                           
  9431                           ;BME280_driver/bme280.c: 1221:     var1 = (((int32_t)calib_data->t_fine) / 2) - (int32_t
      +                          )64000;
  9432  005C  3000               	movlw	0
  9433  005D  0140               	movlb	0	; select bank0
  9434  005E  00A3               	movwf	___aldiv@divisor+3
  9435  005F  3000               	movlw	0
  9436  0060  00A2               	movwf	___aldiv@divisor+2
  9437  0061  3000               	movlw	0
  9438  0062  00A1               	movwf	___aldiv@divisor+1
  9439  0063  3002               	movlw	2
  9440  0064  00A0               	movwf	___aldiv@divisor
  9441  0065  082E               	movf	compensate_pressure@calib_data,w
  9442  0066  3E21               	addlw	33
  9443  0067  0086               	movwf	6
  9444  0068  3001               	movlw	1	; select bank2/3
  9445  0069  0087               	movwf	7
  9446  006A  3F40               	moviw [0]fsr1
  9447  006B  00A4               	movwf	___aldiv@dividend
  9448  006C  3F41               	moviw [1]fsr1
  9449  006D  00A5               	movwf	___aldiv@dividend+1
  9450  006E  3F42               	moviw [2]fsr1
  9451  006F  00A6               	movwf	___aldiv@dividend+2
  9452  0070  3F43               	moviw [3]fsr1
  9453  0071  00A7               	movwf	___aldiv@dividend+3
  9454  0072  3194  2493  3180   	fcall	___aldiv
  9455  0075  3000               	movlw	0
  9456  0076  0140               	movlb	0	; select bank0
  9457  0077  0720               	addwf	?___aldiv,w
  9458  0078  0141               	movlb	1	; select bank1
  9459  0079  00C9               	movwf	compensate_pressure@var1^(0+128)
  9460  007A  3006               	movlw	6
  9461  007B  0140               	movlb	0	; select bank0
  9462  007C  3D21               	addwfc	?___aldiv+1,w
  9463  007D  0141               	movlb	1	; select bank1
  9464  007E  00CA               	movwf	(compensate_pressure@var1+1)^(0+128)
  9465  007F  30FF               	movlw	255
  9466  0080  0140               	movlb	0	; select bank0
  9467  0081  3D22               	addwfc	?___aldiv+2,w
  9468  0082  0141               	movlb	1	; select bank1
  9469  0083  00CB               	movwf	(compensate_pressure@var1+2)^(0+128)
  9470  0084  30FF               	movlw	255
  9471  0085  0140               	movlb	0	; select bank0
  9472  0086  3D23               	addwfc	?___aldiv+3,w
  9473  0087  0141               	movlb	1	; select bank1
  9474  0088  00CC               	movwf	(compensate_pressure@var1+3)^(0+128)
  9475                           
  9476                           ;BME280_driver/bme280.c: 1222:     var2 = (((var1 / 4) * (var1 / 4)) / 2048) * ((int32_t
      +                          )calib_data->dig_P6);
  9477  0089  3000               	movlw	0
  9478  008A  0140               	movlb	0	; select bank0
  9479  008B  00A3               	movwf	___aldiv@divisor+3
  9480  008C  3000               	movlw	0
  9481  008D  00A2               	movwf	___aldiv@divisor+2
  9482  008E  3000               	movlw	0
  9483  008F  00A1               	movwf	___aldiv@divisor+1
  9484  0090  3004               	movlw	4
  9485  0091  00A0               	movwf	___aldiv@divisor
  9486  0092  0141               	movlb	1	; select bank1
  9487  0093  084C               	movf	(compensate_pressure@var1+3)^(0+128),w
  9488  0094  0140               	movlb	0	; select bank0
  9489  0095  00A7               	movwf	___aldiv@dividend+3
  9490  0096  0141               	movlb	1	; select bank1
  9491  0097  084B               	movf	(compensate_pressure@var1+2)^(0+128),w
  9492  0098  0140               	movlb	0	; select bank0
  9493  0099  00A6               	movwf	___aldiv@dividend+2
  9494  009A  0141               	movlb	1	; select bank1
  9495  009B  084A               	movf	(compensate_pressure@var1+1)^(0+128),w
  9496  009C  0140               	movlb	0	; select bank0
  9497  009D  00A5               	movwf	___aldiv@dividend+1
  9498  009E  0141               	movlb	1	; select bank1
  9499  009F  0849               	movf	compensate_pressure@var1^(0+128),w
  9500  00A0  0140               	movlb	0	; select bank0
  9501  00A1  00A4               	movwf	___aldiv@dividend
  9502  00A2  3194  2493  3180   	fcall	___aldiv
  9503  00A5  0140               	movlb	0	; select bank0
  9504  00A6  0823               	movf	?___aldiv+3,w
  9505  00A7  00F3               	movwf	___lmul@multiplier+3
  9506  00A8  0822               	movf	?___aldiv+2,w
  9507  00A9  00F2               	movwf	___lmul@multiplier+2
  9508  00AA  0821               	movf	?___aldiv+1,w
  9509  00AB  00F1               	movwf	___lmul@multiplier+1
  9510  00AC  0820               	movf	?___aldiv,w
  9511  00AD  00F0               	movwf	___lmul@multiplier
  9512  00AE  3000               	movlw	0
  9513  00AF  00A3               	movwf	___aldiv@divisor+3
  9514  00B0  3000               	movlw	0
  9515  00B1  00A2               	movwf	___aldiv@divisor+2
  9516  00B2  3000               	movlw	0
  9517  00B3  00A1               	movwf	___aldiv@divisor+1
  9518  00B4  3004               	movlw	4
  9519  00B5  00A0               	movwf	___aldiv@divisor
  9520  00B6  0141               	movlb	1	; select bank1
  9521  00B7  084C               	movf	(compensate_pressure@var1+3)^(0+128),w
  9522  00B8  0140               	movlb	0	; select bank0
  9523  00B9  00A7               	movwf	___aldiv@dividend+3
  9524  00BA  0141               	movlb	1	; select bank1
  9525  00BB  084B               	movf	(compensate_pressure@var1+2)^(0+128),w
  9526  00BC  0140               	movlb	0	; select bank0
  9527  00BD  00A6               	movwf	___aldiv@dividend+2
  9528  00BE  0141               	movlb	1	; select bank1
  9529  00BF  084A               	movf	(compensate_pressure@var1+1)^(0+128),w
  9530  00C0  0140               	movlb	0	; select bank0
  9531  00C1  00A5               	movwf	___aldiv@dividend+1
  9532  00C2  0141               	movlb	1	; select bank1
  9533  00C3  0849               	movf	compensate_pressure@var1^(0+128),w
  9534  00C4  0140               	movlb	0	; select bank0
  9535  00C5  00A4               	movwf	___aldiv@dividend
  9536  00C6  3194  2493  3180   	fcall	___aldiv
  9537  00C9  0140               	movlb	0	; select bank0
  9538  00CA  0823               	movf	?___aldiv+3,w
  9539  00CB  00F7               	movwf	___lmul@multiplicand+3
  9540  00CC  0822               	movf	?___aldiv+2,w
  9541  00CD  00F6               	movwf	___lmul@multiplicand+2
  9542  00CE  0821               	movf	?___aldiv+1,w
  9543  00CF  00F5               	movwf	___lmul@multiplicand+1
  9544  00D0  0820               	movf	?___aldiv,w
  9545  00D1  00F4               	movwf	___lmul@multiplicand
  9546  00D2  319A  221F  3180   	fcall	___lmul
  9547  00D5  0873               	movf	?___lmul+3,w
  9548  00D6  0141               	movlb	1	; select bank1
  9549  00D7  00BC               	movwf	(_compensate_pressure$2688+3)^(0+128)
  9550  00D8  0872               	movf	?___lmul+2,w
  9551  00D9  00BB               	movwf	(_compensate_pressure$2688+2)^(0+128)
  9552  00DA  0871               	movf	?___lmul+1,w
  9553  00DB  00BA               	movwf	(_compensate_pressure$2688+1)^(0+128)
  9554  00DC  0870               	movf	?___lmul,w
  9555  00DD  00B9               	movwf	_compensate_pressure$2688^(0+128)
  9556                           
  9557                           ;BME280_driver/bme280.c: 1222:     var2 = (((var1 / 4) * (var1 / 4)) / 2048) * ((int32_t
      +                          )calib_data->dig_P6);
  9558  00DE  3000               	movlw	0
  9559  00DF  0140               	movlb	0	; select bank0
  9560  00E0  00A3               	movwf	___aldiv@divisor+3
  9561  00E1  3000               	movlw	0
  9562  00E2  00A2               	movwf	___aldiv@divisor+2
  9563  00E3  3008               	movlw	8
  9564  00E4  00A1               	movwf	___aldiv@divisor+1
  9565  00E5  3000               	movlw	0
  9566  00E6  00A0               	movwf	___aldiv@divisor
  9567  00E7  0141               	movlb	1	; select bank1
  9568  00E8  083C               	movf	(_compensate_pressure$2688+3)^(0+128),w
  9569  00E9  0140               	movlb	0	; select bank0
  9570  00EA  00A7               	movwf	___aldiv@dividend+3
  9571  00EB  0141               	movlb	1	; select bank1
  9572  00EC  083B               	movf	(_compensate_pressure$2688+2)^(0+128),w
  9573  00ED  0140               	movlb	0	; select bank0
  9574  00EE  00A6               	movwf	___aldiv@dividend+2
  9575  00EF  0141               	movlb	1	; select bank1
  9576  00F0  083A               	movf	(_compensate_pressure$2688+1)^(0+128),w
  9577  00F1  0140               	movlb	0	; select bank0
  9578  00F2  00A5               	movwf	___aldiv@dividend+1
  9579  00F3  0141               	movlb	1	; select bank1
  9580  00F4  0839               	movf	_compensate_pressure$2688^(0+128),w
  9581  00F5  0140               	movlb	0	; select bank0
  9582  00F6  00A4               	movwf	___aldiv@dividend
  9583  00F7  3194  2493  3180   	fcall	___aldiv
  9584  00FA  0140               	movlb	0	; select bank0
  9585  00FB  0823               	movf	?___aldiv+3,w
  9586  00FC  00F3               	movwf	___lmul@multiplier+3
  9587  00FD  0822               	movf	?___aldiv+2,w
  9588  00FE  00F2               	movwf	___lmul@multiplier+2
  9589  00FF  0821               	movf	?___aldiv+1,w
  9590  0100  00F1               	movwf	___lmul@multiplier+1
  9591  0101  0820               	movf	?___aldiv,w
  9592  0102  00F0               	movwf	___lmul@multiplier
  9593  0103  082E               	movf	compensate_pressure@calib_data,w
  9594  0104  3E10               	addlw	16
  9595  0105  0086               	movwf	6
  9596  0106  3001               	movlw	1	; select bank2/3
  9597  0107  0087               	movwf	7
  9598  0108  3F40               	moviw [0]fsr1
  9599  0109  00B2               	movwf	??_compensate_pressure
  9600  010A  3F41               	moviw [1]fsr1
  9601  010B  00B3               	movwf	??_compensate_pressure+1
  9602  010C  0832               	movf	??_compensate_pressure,w
  9603  010D  00F4               	movwf	___lmul@multiplicand
  9604  010E  0833               	movf	??_compensate_pressure+1,w
  9605  010F  00F5               	movwf	___lmul@multiplicand+1
  9606  0110  0D89               	rlf	9,f
  9607  0111  3B89               	subwfb	9,f
  9608  0112  0989               	comf	9,f
  9609  0113  00F6               	movwf	___lmul@multiplicand+2
  9610  0114  00F7               	movwf	___lmul@multiplicand+3
  9611  0115  319A  221F  3180   	fcall	___lmul
  9612  0118  0873               	movf	?___lmul+3,w
  9613  0119  0141               	movlb	1	; select bank1
  9614  011A  00C4               	movwf	(compensate_pressure@var2+3)^(0+128)
  9615  011B  0872               	movf	?___lmul+2,w
  9616  011C  00C3               	movwf	(compensate_pressure@var2+2)^(0+128)
  9617  011D  0871               	movf	?___lmul+1,w
  9618  011E  00C2               	movwf	(compensate_pressure@var2+1)^(0+128)
  9619  011F  0870               	movf	?___lmul,w
  9620  0120  00C1               	movwf	compensate_pressure@var2^(0+128)
  9621                           
  9622                           ;BME280_driver/bme280.c: 1223:     var2 = var2 + ((var1 * ((int32_t)calib_data->dig_P5))
      +                           * 2);
  9623  0121  0841               	movf	compensate_pressure@var2^(0+128),w
  9624  0122  0140               	movlb	0	; select bank0
  9625  0123  00B2               	movwf	??_compensate_pressure
  9626  0124  0141               	movlb	1	; select bank1
  9627  0125  0842               	movf	(compensate_pressure@var2+1)^(0+128),w
  9628  0126  0140               	movlb	0	; select bank0
  9629  0127  00B3               	movwf	??_compensate_pressure+1
  9630  0128  0141               	movlb	1	; select bank1
  9631  0129  0843               	movf	(compensate_pressure@var2+2)^(0+128),w
  9632  012A  0140               	movlb	0	; select bank0
  9633  012B  00B4               	movwf	??_compensate_pressure+2
  9634  012C  0141               	movlb	1	; select bank1
  9635  012D  0844               	movf	(compensate_pressure@var2+3)^(0+128),w
  9636  012E  0140               	movlb	0	; select bank0
  9637  012F  00B5               	movwf	??_compensate_pressure+3
  9638  0130  082E               	movf	compensate_pressure@calib_data,w
  9639  0131  3E0E               	addlw	14
  9640  0132  0086               	movwf	6
  9641  0133  3001               	movlw	1	; select bank2/3
  9642  0134  0087               	movwf	7
  9643  0135  3F40               	moviw [0]fsr1
  9644  0136  00B6               	movwf	??_compensate_pressure+4
  9645  0137  3F41               	moviw [1]fsr1
  9646  0138  00B7               	movwf	??_compensate_pressure+5
  9647  0139  0836               	movf	??_compensate_pressure+4,w
  9648  013A  00F0               	movwf	___lmul@multiplier
  9649  013B  0837               	movf	??_compensate_pressure+5,w
  9650  013C  00F1               	movwf	___lmul@multiplier+1
  9651  013D  0D89               	rlf	9,f
  9652  013E  3B89               	subwfb	9,f
  9653  013F  0989               	comf	9,f
  9654  0140  00F2               	movwf	___lmul@multiplier+2
  9655  0141  00F3               	movwf	___lmul@multiplier+3
  9656  0142  0141               	movlb	1	; select bank1
  9657  0143  084C               	movf	(compensate_pressure@var1+3)^(0+128),w
  9658  0144  00F7               	movwf	___lmul@multiplicand+3
  9659  0145  084B               	movf	(compensate_pressure@var1+2)^(0+128),w
  9660  0146  00F6               	movwf	___lmul@multiplicand+2
  9661  0147  084A               	movf	(compensate_pressure@var1+1)^(0+128),w
  9662  0148  00F5               	movwf	___lmul@multiplicand+1
  9663  0149  0849               	movf	compensate_pressure@var1^(0+128),w
  9664  014A  00F4               	movwf	___lmul@multiplicand
  9665  014B  319A  221F  3180   	fcall	___lmul
  9666  014E  0870               	movf	?___lmul,w
  9667  014F  0140               	movlb	0	; select bank0
  9668  0150  00B8               	movwf	??_compensate_pressure+6
  9669  0151  0871               	movf	?___lmul+1,w
  9670  0152  00B9               	movwf	??_compensate_pressure+7
  9671  0153  0872               	movf	?___lmul+2,w
  9672  0154  00BA               	movwf	??_compensate_pressure+8
  9673  0155  0873               	movf	?___lmul+3,w
  9674  0156  00BB               	movwf	??_compensate_pressure+9
  9675  0157  3001               	movlw	1
  9676  0158                     u3325:	
  9677  0158  35B8               	lslf	??_compensate_pressure+6,f
  9678  0159  0DB9               	rlf	??_compensate_pressure+7,f
  9679  015A  0DBA               	rlf	??_compensate_pressure+8,f
  9680  015B  0DBB               	rlf	??_compensate_pressure+9,f
  9681  015C  0B89               	decfsz	9,f
  9682  015D  2958               	goto	u3325
  9683  015E  0838               	movf	??_compensate_pressure+6,w
  9684  015F  07B2               	addwf	??_compensate_pressure,f
  9685  0160  0839               	movf	??_compensate_pressure+7,w
  9686  0161  3DB3               	addwfc	??_compensate_pressure+1,f
  9687  0162  083A               	movf	??_compensate_pressure+8,w
  9688  0163  3DB4               	addwfc	??_compensate_pressure+2,f
  9689  0164  083B               	movf	??_compensate_pressure+9,w
  9690  0165  3DB5               	addwfc	??_compensate_pressure+3,f
  9691  0166  0835               	movf	??_compensate_pressure+3,w
  9692  0167  0141               	movlb	1	; select bank1
  9693  0168  00C4               	movwf	(compensate_pressure@var2+3)^(0+128)
  9694  0169  0140               	movlb	0	; select bank0
  9695  016A  0834               	movf	??_compensate_pressure+2,w
  9696  016B  0141               	movlb	1	; select bank1
  9697  016C  00C3               	movwf	(compensate_pressure@var2+2)^(0+128)
  9698  016D  0140               	movlb	0	; select bank0
  9699  016E  0833               	movf	??_compensate_pressure+1,w
  9700  016F  0141               	movlb	1	; select bank1
  9701  0170  00C2               	movwf	(compensate_pressure@var2+1)^(0+128)
  9702  0171  0140               	movlb	0	; select bank0
  9703  0172  0832               	movf	??_compensate_pressure,w
  9704  0173  0141               	movlb	1	; select bank1
  9705  0174  00C1               	movwf	compensate_pressure@var2^(0+128)
  9706                           
  9707                           ;BME280_driver/bme280.c: 1224:     var2 = (var2 / 4) + (((int32_t)calib_data->dig_P4) * 
      +                          65536);
  9708  0175  0140               	movlb	0	; select bank0
  9709  0176  082E               	movf	compensate_pressure@calib_data,w
  9710  0177  3E0C               	addlw	12
  9711  0178  0086               	movwf	6
  9712  0179  3001               	movlw	1	; select bank2/3
  9713  017A  0087               	movwf	7
  9714  017B  3F40               	moviw [0]fsr1
  9715  017C  00B2               	movwf	??_compensate_pressure
  9716  017D  3F41               	moviw [1]fsr1
  9717  017E  00B3               	movwf	??_compensate_pressure+1
  9718  017F  0832               	movf	??_compensate_pressure,w
  9719  0180  00B4               	movwf	??_compensate_pressure+2
  9720  0181  0833               	movf	??_compensate_pressure+1,w
  9721  0182  00B5               	movwf	??_compensate_pressure+3
  9722  0183  01B6               	clrf	??_compensate_pressure+4
  9723  0184  01B7               	clrf	??_compensate_pressure+5
  9724  0185  3010               	movlw	16
  9725  0186                     u3335:	
  9726  0186  35B4               	lslf	??_compensate_pressure+2,f
  9727  0187  0DB5               	rlf	??_compensate_pressure+3,f
  9728  0188  0DB6               	rlf	??_compensate_pressure+4,f
  9729  0189  0DB7               	rlf	??_compensate_pressure+5,f
  9730  018A  0B89               	decfsz	9,f
  9731  018B  2986               	goto	u3335
  9732  018C  3000               	movlw	0
  9733  018D  00A3               	movwf	___aldiv@divisor+3
  9734  018E  3000               	movlw	0
  9735  018F  00A2               	movwf	___aldiv@divisor+2
  9736  0190  3000               	movlw	0
  9737  0191  00A1               	movwf	___aldiv@divisor+1
  9738  0192  3004               	movlw	4
  9739  0193  00A0               	movwf	___aldiv@divisor
  9740  0194  0141               	movlb	1	; select bank1
  9741  0195  0844               	movf	(compensate_pressure@var2+3)^(0+128),w
  9742  0196  0140               	movlb	0	; select bank0
  9743  0197  00A7               	movwf	___aldiv@dividend+3
  9744  0198  0141               	movlb	1	; select bank1
  9745  0199  0843               	movf	(compensate_pressure@var2+2)^(0+128),w
  9746  019A  0140               	movlb	0	; select bank0
  9747  019B  00A6               	movwf	___aldiv@dividend+2
  9748  019C  0141               	movlb	1	; select bank1
  9749  019D  0842               	movf	(compensate_pressure@var2+1)^(0+128),w
  9750  019E  0140               	movlb	0	; select bank0
  9751  019F  00A5               	movwf	___aldiv@dividend+1
  9752  01A0  0141               	movlb	1	; select bank1
  9753  01A1  0841               	movf	compensate_pressure@var2^(0+128),w
  9754  01A2  0140               	movlb	0	; select bank0
  9755  01A3  00A4               	movwf	___aldiv@dividend
  9756  01A4  3194  2493  3180   	fcall	___aldiv
  9757  01A7  0140               	movlb	0	; select bank0
  9758  01A8  0820               	movf	?___aldiv,w
  9759  01A9  07B4               	addwf	??_compensate_pressure+2,f
  9760  01AA  0821               	movf	?___aldiv+1,w
  9761  01AB  3DB5               	addwfc	??_compensate_pressure+3,f
  9762  01AC  0822               	movf	?___aldiv+2,w
  9763  01AD  3DB6               	addwfc	??_compensate_pressure+4,f
  9764  01AE  0823               	movf	?___aldiv+3,w
  9765  01AF  3DB7               	addwfc	??_compensate_pressure+5,f
  9766  01B0  0837               	movf	??_compensate_pressure+5,w
  9767  01B1  0141               	movlb	1	; select bank1
  9768  01B2  00C4               	movwf	(compensate_pressure@var2+3)^(0+128)
  9769  01B3  0140               	movlb	0	; select bank0
  9770  01B4  0836               	movf	??_compensate_pressure+4,w
  9771  01B5  0141               	movlb	1	; select bank1
  9772  01B6  00C3               	movwf	(compensate_pressure@var2+2)^(0+128)
  9773  01B7  0140               	movlb	0	; select bank0
  9774  01B8  0835               	movf	??_compensate_pressure+3,w
  9775  01B9  0141               	movlb	1	; select bank1
  9776  01BA  00C2               	movwf	(compensate_pressure@var2+1)^(0+128)
  9777  01BB  0140               	movlb	0	; select bank0
  9778  01BC  0834               	movf	??_compensate_pressure+2,w
  9779  01BD  0141               	movlb	1	; select bank1
  9780  01BE  00C1               	movwf	compensate_pressure@var2^(0+128)
  9781                           
  9782                           ;BME280_driver/bme280.c: 1225:     var3 = (calib_data->dig_P3 * (((var1 / 4) * (var1 / 4
      +                          )) / 8192)) / 8;
  9783  01BF  3000               	movlw	0
  9784  01C0  0140               	movlb	0	; select bank0
  9785  01C1  00A3               	movwf	___aldiv@divisor+3
  9786  01C2  3000               	movlw	0
  9787  01C3  00A2               	movwf	___aldiv@divisor+2
  9788  01C4  3000               	movlw	0
  9789  01C5  00A1               	movwf	___aldiv@divisor+1
  9790  01C6  3004               	movlw	4
  9791  01C7  00A0               	movwf	___aldiv@divisor
  9792  01C8  0141               	movlb	1	; select bank1
  9793  01C9  084C               	movf	(compensate_pressure@var1+3)^(0+128),w
  9794  01CA  0140               	movlb	0	; select bank0
  9795  01CB  00A7               	movwf	___aldiv@dividend+3
  9796  01CC  0141               	movlb	1	; select bank1
  9797  01CD  084B               	movf	(compensate_pressure@var1+2)^(0+128),w
  9798  01CE  0140               	movlb	0	; select bank0
  9799  01CF  00A6               	movwf	___aldiv@dividend+2
  9800  01D0  0141               	movlb	1	; select bank1
  9801  01D1  084A               	movf	(compensate_pressure@var1+1)^(0+128),w
  9802  01D2  0140               	movlb	0	; select bank0
  9803  01D3  00A5               	movwf	___aldiv@dividend+1
  9804  01D4  0141               	movlb	1	; select bank1
  9805  01D5  0849               	movf	compensate_pressure@var1^(0+128),w
  9806  01D6  0140               	movlb	0	; select bank0
  9807  01D7  00A4               	movwf	___aldiv@dividend
  9808  01D8  3194  2493  3180   	fcall	___aldiv
  9809  01DB  0140               	movlb	0	; select bank0
  9810  01DC  0823               	movf	?___aldiv+3,w
  9811  01DD  00F3               	movwf	___lmul@multiplier+3
  9812  01DE  0822               	movf	?___aldiv+2,w
  9813  01DF  00F2               	movwf	___lmul@multiplier+2
  9814  01E0  0821               	movf	?___aldiv+1,w
  9815  01E1  00F1               	movwf	___lmul@multiplier+1
  9816  01E2  0820               	movf	?___aldiv,w
  9817  01E3  00F0               	movwf	___lmul@multiplier
  9818  01E4  3000               	movlw	0
  9819  01E5  00A3               	movwf	___aldiv@divisor+3
  9820  01E6  3000               	movlw	0
  9821  01E7  00A2               	movwf	___aldiv@divisor+2
  9822  01E8  3000               	movlw	0
  9823  01E9  00A1               	movwf	___aldiv@divisor+1
  9824  01EA  3004               	movlw	4
  9825  01EB  00A0               	movwf	___aldiv@divisor
  9826  01EC  0141               	movlb	1	; select bank1
  9827  01ED  084C               	movf	(compensate_pressure@var1+3)^(0+128),w
  9828  01EE  0140               	movlb	0	; select bank0
  9829  01EF  00A7               	movwf	___aldiv@dividend+3
  9830  01F0  0141               	movlb	1	; select bank1
  9831  01F1  084B               	movf	(compensate_pressure@var1+2)^(0+128),w
  9832  01F2  0140               	movlb	0	; select bank0
  9833  01F3  00A6               	movwf	___aldiv@dividend+2
  9834  01F4  0141               	movlb	1	; select bank1
  9835  01F5  084A               	movf	(compensate_pressure@var1+1)^(0+128),w
  9836  01F6  0140               	movlb	0	; select bank0
  9837  01F7  00A5               	movwf	___aldiv@dividend+1
  9838  01F8  0141               	movlb	1	; select bank1
  9839  01F9  0849               	movf	compensate_pressure@var1^(0+128),w
  9840  01FA  0140               	movlb	0	; select bank0
  9841  01FB  00A4               	movwf	___aldiv@dividend
  9842  01FC  3194  2493  3180   	fcall	___aldiv
  9843  01FF  0140               	movlb	0	; select bank0
  9844  0200  0823               	movf	?___aldiv+3,w
  9845  0201  00F7               	movwf	___lmul@multiplicand+3
  9846  0202  0822               	movf	?___aldiv+2,w
  9847  0203  00F6               	movwf	___lmul@multiplicand+2
  9848  0204  0821               	movf	?___aldiv+1,w
  9849  0205  00F5               	movwf	___lmul@multiplicand+1
  9850  0206  0820               	movf	?___aldiv,w
  9851  0207  00F4               	movwf	___lmul@multiplicand
  9852  0208  319A  221F  3180   	fcall	___lmul
  9853  020B  0873               	movf	?___lmul+3,w
  9854  020C  0141               	movlb	1	; select bank1
  9855  020D  00BC               	movwf	(_compensate_pressure$2688+3)^(0+128)
  9856  020E  0872               	movf	?___lmul+2,w
  9857  020F  00BB               	movwf	(_compensate_pressure$2688+2)^(0+128)
  9858  0210  0871               	movf	?___lmul+1,w
  9859  0211  00BA               	movwf	(_compensate_pressure$2688+1)^(0+128)
  9860  0212  0870               	movf	?___lmul,w
  9861  0213  00B9               	movwf	_compensate_pressure$2688^(0+128)
  9862                           
  9863                           ;BME280_driver/bme280.c: 1225:     var3 = (calib_data->dig_P3 * (((var1 / 4) * (var1 / 4
      +                          )) / 8192)) / 8;
  9864  0214  0140               	movlb	0	; select bank0
  9865  0215  082E               	movf	compensate_pressure@calib_data,w
  9866  0216  3E0A               	addlw	10
  9867  0217  0086               	movwf	6
  9868  0218  3001               	movlw	1	; select bank2/3
  9869  0219  0087               	movwf	7
  9870  021A  3F40               	moviw [0]fsr1
  9871  021B  00B2               	movwf	??_compensate_pressure
  9872  021C  3F41               	moviw [1]fsr1
  9873  021D  00B3               	movwf	??_compensate_pressure+1
  9874  021E  0832               	movf	??_compensate_pressure,w
  9875  021F  00F0               	movwf	___lmul@multiplier
  9876  0220  0833               	movf	??_compensate_pressure+1,w
  9877  0221  00F1               	movwf	___lmul@multiplier+1
  9878  0222  0D89               	rlf	9,f
  9879  0223  3B89               	subwfb	9,f
  9880  0224  0989               	comf	9,f
  9881  0225  00F2               	movwf	___lmul@multiplier+2
  9882  0226  00F3               	movwf	___lmul@multiplier+3
  9883  0227  3000               	movlw	0
  9884  0228  00A3               	movwf	___aldiv@divisor+3
  9885  0229  3000               	movlw	0
  9886  022A  00A2               	movwf	___aldiv@divisor+2
  9887  022B  3020               	movlw	32
  9888  022C  00A1               	movwf	___aldiv@divisor+1
  9889  022D  3000               	movlw	0
  9890  022E  00A0               	movwf	___aldiv@divisor
  9891  022F  0141               	movlb	1	; select bank1
  9892  0230  083C               	movf	(_compensate_pressure$2688+3)^(0+128),w
  9893  0231  0140               	movlb	0	; select bank0
  9894  0232  00A7               	movwf	___aldiv@dividend+3
  9895  0233  0141               	movlb	1	; select bank1
  9896  0234  083B               	movf	(_compensate_pressure$2688+2)^(0+128),w
  9897  0235  0140               	movlb	0	; select bank0
  9898  0236  00A6               	movwf	___aldiv@dividend+2
  9899  0237  0141               	movlb	1	; select bank1
  9900  0238  083A               	movf	(_compensate_pressure$2688+1)^(0+128),w
  9901  0239  0140               	movlb	0	; select bank0
  9902  023A  00A5               	movwf	___aldiv@dividend+1
  9903  023B  0141               	movlb	1	; select bank1
  9904  023C  0839               	movf	_compensate_pressure$2688^(0+128),w
  9905  023D  0140               	movlb	0	; select bank0
  9906  023E  00A4               	movwf	___aldiv@dividend
  9907  023F  3194  2493  3180   	fcall	___aldiv
  9908  0242  0140               	movlb	0	; select bank0
  9909  0243  0823               	movf	?___aldiv+3,w
  9910  0244  00F7               	movwf	___lmul@multiplicand+3
  9911  0245  0822               	movf	?___aldiv+2,w
  9912  0246  00F6               	movwf	___lmul@multiplicand+2
  9913  0247  0821               	movf	?___aldiv+1,w
  9914  0248  00F5               	movwf	___lmul@multiplicand+1
  9915  0249  0820               	movf	?___aldiv,w
  9916  024A  00F4               	movwf	___lmul@multiplicand
  9917  024B  319A  221F  3180   	fcall	___lmul
  9918  024E  0873               	movf	?___lmul+3,w
  9919  024F  0141               	movlb	1	; select bank1
  9920  0250  00AF               	movwf	(_compensate_pressure$2689+3)^(0+128)
  9921  0251  0872               	movf	?___lmul+2,w
  9922  0252  00AE               	movwf	(_compensate_pressure$2689+2)^(0+128)
  9923  0253  0871               	movf	?___lmul+1,w
  9924  0254  00AD               	movwf	(_compensate_pressure$2689+1)^(0+128)
  9925  0255  0870               	movf	?___lmul,w
  9926  0256  00AC               	movwf	_compensate_pressure$2689^(0+128)
  9927                           
  9928                           ;BME280_driver/bme280.c: 1225:     var3 = (calib_data->dig_P3 * (((var1 / 4) * (var1 / 4
      +                          )) / 8192)) / 8;
  9929  0257  3000               	movlw	0
  9930  0258  0140               	movlb	0	; select bank0
  9931  0259  00A3               	movwf	___aldiv@divisor+3
  9932  025A  3000               	movlw	0
  9933  025B  00A2               	movwf	___aldiv@divisor+2
  9934  025C  3000               	movlw	0
  9935  025D  00A1               	movwf	___aldiv@divisor+1
  9936  025E  3008               	movlw	8
  9937  025F  00A0               	movwf	___aldiv@divisor
  9938  0260  0141               	movlb	1	; select bank1
  9939  0261  082F               	movf	(_compensate_pressure$2689+3)^(0+128),w
  9940  0262  0140               	movlb	0	; select bank0
  9941  0263  00A7               	movwf	___aldiv@dividend+3
  9942  0264  0141               	movlb	1	; select bank1
  9943  0265  082E               	movf	(_compensate_pressure$2689+2)^(0+128),w
  9944  0266  0140               	movlb	0	; select bank0
  9945  0267  00A6               	movwf	___aldiv@dividend+2
  9946  0268  0141               	movlb	1	; select bank1
  9947  0269  082D               	movf	(_compensate_pressure$2689+1)^(0+128),w
  9948  026A  0140               	movlb	0	; select bank0
  9949  026B  00A5               	movwf	___aldiv@dividend+1
  9950  026C  0141               	movlb	1	; select bank1
  9951  026D  082C               	movf	_compensate_pressure$2689^(0+128),w
  9952  026E  0140               	movlb	0	; select bank0
  9953  026F  00A4               	movwf	___aldiv@dividend
  9954  0270  3194  2493  3180   	fcall	___aldiv
  9955  0273  0140               	movlb	0	; select bank0
  9956  0274  0823               	movf	?___aldiv+3,w
  9957  0275  0141               	movlb	1	; select bank1
  9958  0276  00A3               	movwf	(compensate_pressure@var3+3)^(0+128)
  9959  0277  0140               	movlb	0	; select bank0
  9960  0278  0822               	movf	?___aldiv+2,w
  9961  0279  0141               	movlb	1	; select bank1
  9962  027A  00A2               	movwf	(compensate_pressure@var3+2)^(0+128)
  9963  027B  0140               	movlb	0	; select bank0
  9964  027C  0821               	movf	?___aldiv+1,w
  9965  027D  0141               	movlb	1	; select bank1
  9966  027E  00A1               	movwf	(compensate_pressure@var3+1)^(0+128)
  9967  027F  0140               	movlb	0	; select bank0
  9968  0280  0820               	movf	?___aldiv,w
  9969  0281  0141               	movlb	1	; select bank1
  9970  0282  00A0               	movwf	compensate_pressure@var3^(0+128)
  9971                           
  9972                           ;BME280_driver/bme280.c: 1226:     var4 = (((int32_t)calib_data->dig_P2) * var1) / 2;
  9973  0283  3000               	movlw	0
  9974  0284  0140               	movlb	0	; select bank0
  9975  0285  00A3               	movwf	___aldiv@divisor+3
  9976  0286  3000               	movlw	0
  9977  0287  00A2               	movwf	___aldiv@divisor+2
  9978  0288  3000               	movlw	0
  9979  0289  00A1               	movwf	___aldiv@divisor+1
  9980  028A  3002               	movlw	2
  9981  028B  00A0               	movwf	___aldiv@divisor
  9982  028C  082E               	movf	compensate_pressure@calib_data,w
  9983  028D  3E08               	addlw	8
  9984  028E  0086               	movwf	6
  9985  028F  3001               	movlw	1	; select bank2/3
  9986  0290  0087               	movwf	7
  9987  0291  3F40               	moviw [0]fsr1
  9988  0292  00B2               	movwf	??_compensate_pressure
  9989  0293  3F41               	moviw [1]fsr1
  9990  0294  00B3               	movwf	??_compensate_pressure+1
  9991  0295  0832               	movf	??_compensate_pressure,w
  9992  0296  00F0               	movwf	___lmul@multiplier
  9993  0297  0833               	movf	??_compensate_pressure+1,w
  9994  0298  00F1               	movwf	___lmul@multiplier+1
  9995  0299  0D89               	rlf	9,f
  9996  029A  3B89               	subwfb	9,f
  9997  029B  0989               	comf	9,f
  9998  029C  00F2               	movwf	___lmul@multiplier+2
  9999  029D  00F3               	movwf	___lmul@multiplier+3
 10000  029E  0141               	movlb	1	; select bank1
 10001  029F  084C               	movf	(compensate_pressure@var1+3)^(0+128),w
 10002  02A0  00F7               	movwf	___lmul@multiplicand+3
 10003  02A1  084B               	movf	(compensate_pressure@var1+2)^(0+128),w
 10004  02A2  00F6               	movwf	___lmul@multiplicand+2
 10005  02A3  084A               	movf	(compensate_pressure@var1+1)^(0+128),w
 10006  02A4  00F5               	movwf	___lmul@multiplicand+1
 10007  02A5  0849               	movf	compensate_pressure@var1^(0+128),w
 10008  02A6  00F4               	movwf	___lmul@multiplicand
 10009  02A7  319A  221F  3180   	fcall	___lmul
 10010  02AA  0873               	movf	?___lmul+3,w
 10011  02AB  0140               	movlb	0	; select bank0
 10012  02AC  00A7               	movwf	___aldiv@dividend+3
 10013  02AD  0872               	movf	?___lmul+2,w
 10014  02AE  00A6               	movwf	___aldiv@dividend+2
 10015  02AF  0871               	movf	?___lmul+1,w
 10016  02B0  00A5               	movwf	___aldiv@dividend+1
 10017  02B1  0870               	movf	?___lmul,w
 10018  02B2  00A4               	movwf	___aldiv@dividend
 10019  02B3  3194  2493  3180   	fcall	___aldiv
 10020  02B6  0140               	movlb	0	; select bank0
 10021  02B7  0823               	movf	?___aldiv+3,w
 10022  02B8  0141               	movlb	1	; select bank1
 10023  02B9  00A7               	movwf	(compensate_pressure@var4+3)^(0+128)
 10024  02BA  0140               	movlb	0	; select bank0
 10025  02BB  0822               	movf	?___aldiv+2,w
 10026  02BC  0141               	movlb	1	; select bank1
 10027  02BD  00A6               	movwf	(compensate_pressure@var4+2)^(0+128)
 10028  02BE  0140               	movlb	0	; select bank0
 10029  02BF  0821               	movf	?___aldiv+1,w
 10030  02C0  0141               	movlb	1	; select bank1
 10031  02C1  00A5               	movwf	(compensate_pressure@var4+1)^(0+128)
 10032  02C2  0140               	movlb	0	; select bank0
 10033  02C3  0820               	movf	?___aldiv,w
 10034  02C4  0141               	movlb	1	; select bank1
 10035  02C5  00A4               	movwf	compensate_pressure@var4^(0+128)
 10036                           
 10037                           ;BME280_driver/bme280.c: 1227:     var1 = (var3 + var4) / 262144;
 10038  02C6  3000               	movlw	0
 10039  02C7  0140               	movlb	0	; select bank0
 10040  02C8  00A3               	movwf	___aldiv@divisor+3
 10041  02C9  3004               	movlw	4
 10042  02CA  00A2               	movwf	___aldiv@divisor+2
 10043  02CB  3000               	movlw	0
 10044  02CC  00A1               	movwf	___aldiv@divisor+1
 10045  02CD  3000               	movlw	0
 10046  02CE  00A0               	movwf	___aldiv@divisor
 10047  02CF  0141               	movlb	1	; select bank1
 10048  02D0  0820               	movf	compensate_pressure@var3^(0+128),w
 10049  02D1  0724               	addwf	compensate_pressure@var4^(0+128),w
 10050  02D2  0140               	movlb	0	; select bank0
 10051  02D3  00B2               	movwf	??_compensate_pressure
 10052  02D4  0141               	movlb	1	; select bank1
 10053  02D5  0821               	movf	(compensate_pressure@var3+1)^(0+128),w
 10054  02D6  3D25               	addwfc	(compensate_pressure@var4+1)^(0+128),w
 10055  02D7  0140               	movlb	0	; select bank0
 10056  02D8  00B3               	movwf	??_compensate_pressure+1
 10057  02D9  0141               	movlb	1	; select bank1
 10058  02DA  0822               	movf	(compensate_pressure@var3+2)^(0+128),w
 10059  02DB  3D26               	addwfc	(compensate_pressure@var4+2)^(0+128),w
 10060  02DC  0140               	movlb	0	; select bank0
 10061  02DD  00B4               	movwf	??_compensate_pressure+2
 10062  02DE  0141               	movlb	1	; select bank1
 10063  02DF  0823               	movf	(compensate_pressure@var3+3)^(0+128),w
 10064  02E0  3D27               	addwfc	(compensate_pressure@var4+3)^(0+128),w
 10065  02E1  0140               	movlb	0	; select bank0
 10066  02E2  00B5               	movwf	??_compensate_pressure+3
 10067  02E3  0835               	movf	??_compensate_pressure+3,w
 10068  02E4  00A7               	movwf	___aldiv@dividend+3
 10069  02E5  0834               	movf	??_compensate_pressure+2,w
 10070  02E6  00A6               	movwf	___aldiv@dividend+2
 10071  02E7  0833               	movf	??_compensate_pressure+1,w
 10072  02E8  00A5               	movwf	___aldiv@dividend+1
 10073  02E9  0832               	movf	??_compensate_pressure,w
 10074  02EA  00A4               	movwf	___aldiv@dividend
 10075  02EB  3194  2493  3180   	fcall	___aldiv
 10076  02EE  0140               	movlb	0	; select bank0
 10077  02EF  0823               	movf	?___aldiv+3,w
 10078  02F0  0141               	movlb	1	; select bank1
 10079  02F1  00CC               	movwf	(compensate_pressure@var1+3)^(0+128)
 10080  02F2  0140               	movlb	0	; select bank0
 10081  02F3  0822               	movf	?___aldiv+2,w
 10082  02F4  0141               	movlb	1	; select bank1
 10083  02F5  00CB               	movwf	(compensate_pressure@var1+2)^(0+128)
 10084  02F6  0140               	movlb	0	; select bank0
 10085  02F7  0821               	movf	?___aldiv+1,w
 10086  02F8  0141               	movlb	1	; select bank1
 10087  02F9  00CA               	movwf	(compensate_pressure@var1+1)^(0+128)
 10088  02FA  0140               	movlb	0	; select bank0
 10089  02FB  0820               	movf	?___aldiv,w
 10090  02FC  0141               	movlb	1	; select bank1
 10091  02FD  00C9               	movwf	compensate_pressure@var1^(0+128)
 10092                           
 10093                           ;BME280_driver/bme280.c: 1228:     var1 = (((32768 + var1)) * ((int32_t)calib_data->dig_
      +                          P1)) / 32768;
 10094  02FE  3000               	movlw	0
 10095  02FF  0140               	movlb	0	; select bank0
 10096  0300  00A3               	movwf	___aldiv@divisor+3
 10097  0301  3000               	movlw	0
 10098  0302  00A2               	movwf	___aldiv@divisor+2
 10099  0303  3080               	movlw	128
 10100  0304  00A1               	movwf	___aldiv@divisor+1
 10101  0305  3000               	movlw	0
 10102  0306  00A0               	movwf	___aldiv@divisor
 10103  0307  3000               	movlw	0
 10104  0308  0141               	movlb	1	; select bank1
 10105  0309  0749               	addwf	compensate_pressure@var1^(0+128),w
 10106  030A  00F0               	movwf	___lmul@multiplier
 10107  030B  3080               	movlw	128
 10108  030C  3D4A               	addwfc	(compensate_pressure@var1+1)^(0+128),w
 10109  030D  00F1               	movwf	___lmul@multiplier+1
 10110  030E  3000               	movlw	0
 10111  030F  3D4B               	addwfc	(compensate_pressure@var1+2)^(0+128),w
 10112  0310  00F2               	movwf	___lmul@multiplier+2
 10113  0311  3000               	movlw	0
 10114  0312  3D4C               	addwfc	(compensate_pressure@var1+3)^(0+128),w
 10115  0313  00F3               	movwf	___lmul@multiplier+3
 10116  0314  0140               	movlb	0	; select bank0
 10117  0315  082E               	movf	compensate_pressure@calib_data,w
 10118  0316  3E06               	addlw	6
 10119  0317  0086               	movwf	6
 10120  0318  3001               	movlw	1	; select bank2/3
 10121  0319  0087               	movwf	7
 10122  031A  3F40               	moviw [0]fsr1
 10123  031B  00B2               	movwf	??_compensate_pressure
 10124  031C  3F41               	moviw [1]fsr1
 10125  031D  00B3               	movwf	??_compensate_pressure+1
 10126  031E  0832               	movf	??_compensate_pressure,w
 10127  031F  00F4               	movwf	___lmul@multiplicand
 10128  0320  0833               	movf	??_compensate_pressure+1,w
 10129  0321  00F5               	movwf	___lmul@multiplicand+1
 10130  0322  01F6               	clrf	___lmul@multiplicand+2
 10131  0323  01F7               	clrf	___lmul@multiplicand+3
 10132  0324  319A  221F  3180   	fcall	___lmul
 10133  0327  0873               	movf	?___lmul+3,w
 10134  0328  0140               	movlb	0	; select bank0
 10135  0329  00A7               	movwf	___aldiv@dividend+3
 10136  032A  0872               	movf	?___lmul+2,w
 10137  032B  00A6               	movwf	___aldiv@dividend+2
 10138  032C  0871               	movf	?___lmul+1,w
 10139  032D  00A5               	movwf	___aldiv@dividend+1
 10140  032E  0870               	movf	?___lmul,w
 10141  032F  00A4               	movwf	___aldiv@dividend
 10142  0330  3194  2493  3180   	fcall	___aldiv
 10143  0333  0140               	movlb	0	; select bank0
 10144  0334  0823               	movf	?___aldiv+3,w
 10145  0335  0141               	movlb	1	; select bank1
 10146  0336  00CC               	movwf	(compensate_pressure@var1+3)^(0+128)
 10147  0337  0140               	movlb	0	; select bank0
 10148  0338  0822               	movf	?___aldiv+2,w
 10149  0339  0141               	movlb	1	; select bank1
 10150  033A  00CB               	movwf	(compensate_pressure@var1+2)^(0+128)
 10151  033B  0140               	movlb	0	; select bank0
 10152  033C  0821               	movf	?___aldiv+1,w
 10153  033D  0141               	movlb	1	; select bank1
 10154  033E  00CA               	movwf	(compensate_pressure@var1+1)^(0+128)
 10155  033F  0140               	movlb	0	; select bank0
 10156  0340  0820               	movf	?___aldiv,w
 10157  0341  0141               	movlb	1	; select bank1
 10158  0342  00C9               	movwf	compensate_pressure@var1^(0+128)
 10159                           
 10160                           ;BME280_driver/bme280.c: 1231:     if (var1)
 10161  0343  084C               	movf	(compensate_pressure@var1+3)^(0+128),w
 10162  0344  044B               	iorwf	(compensate_pressure@var1+2)^(0+128),w
 10163  0345  044A               	iorwf	(compensate_pressure@var1+1)^(0+128),w
 10164  0346  0449               	iorwf	compensate_pressure@var1^(0+128),w
 10165  0347  1903               	skipnz
 10166  0348  2D7F               	goto	l3894
 10167                           
 10168                           ;BME280_driver/bme280.c: 1232:     {;BME280_driver/bme280.c: 1233:         var5 = (uint3
      +                          2_t)((uint32_t)1048576) - uncomp_data->pressure;
 10169  0349  0834               	movf	compensate_pressure@uncomp_data^(0+128),w
 10170  034A  0086               	movwf	6
 10171  034B  0187               	clrf	7
 10172  034C  3F40               	moviw [0]fsr1
 10173  034D  0140               	movlb	0	; select bank0
 10174  034E  00B2               	movwf	??_compensate_pressure
 10175  034F  3F41               	moviw [1]fsr1
 10176  0350  00B3               	movwf	??_compensate_pressure+1
 10177  0351  3F42               	moviw [2]fsr1
 10178  0352  00B4               	movwf	??_compensate_pressure+2
 10179  0353  3F43               	moviw [3]fsr1
 10180  0354  00B5               	movwf	??_compensate_pressure+3
 10181  0355  3000               	movlw	0
 10182  0356  00B6               	movwf	??_compensate_pressure+4
 10183  0357  3000               	movlw	0
 10184  0358  00B7               	movwf	??_compensate_pressure+5
 10185  0359  3010               	movlw	16
 10186  035A  00B8               	movwf	??_compensate_pressure+6
 10187  035B  3000               	movlw	0
 10188  035C  00B9               	movwf	??_compensate_pressure+7
 10189  035D  0832               	movf	??_compensate_pressure,w
 10190  035E  02B6               	subwf	??_compensate_pressure+4,f
 10191  035F  0833               	movf	??_compensate_pressure+1,w
 10192  0360  3BB7               	subwfb	??_compensate_pressure+5,f
 10193  0361  0834               	movf	??_compensate_pressure+2,w
 10194  0362  3BB8               	subwfb	??_compensate_pressure+6,f
 10195  0363  0835               	movf	??_compensate_pressure+3,w
 10196  0364  3BB9               	subwfb	??_compensate_pressure+7,f
 10197  0365  0839               	movf	??_compensate_pressure+7,w
 10198  0366  0141               	movlb	1	; select bank1
 10199  0367  00AB               	movwf	(compensate_pressure@var5+3)^(0+128)
 10200  0368  0140               	movlb	0	; select bank0
 10201  0369  0838               	movf	??_compensate_pressure+6,w
 10202  036A  0141               	movlb	1	; select bank1
 10203  036B  00AA               	movwf	(compensate_pressure@var5+2)^(0+128)
 10204  036C  0140               	movlb	0	; select bank0
 10205  036D  0837               	movf	??_compensate_pressure+5,w
 10206  036E  0141               	movlb	1	; select bank1
 10207  036F  00A9               	movwf	(compensate_pressure@var5+1)^(0+128)
 10208  0370  0140               	movlb	0	; select bank0
 10209  0371  0836               	movf	??_compensate_pressure+4,w
 10210  0372  0141               	movlb	1	; select bank1
 10211  0373  00A8               	movwf	compensate_pressure@var5^(0+128)
 10212                           
 10213                           ;BME280_driver/bme280.c: 1234:         pressure = ((uint32_t)(var5 - (uint32_t)(var2 / 4
      +                          096))) * 3125;
 10214  0374  3000               	movlw	0
 10215  0375  0140               	movlb	0	; select bank0
 10216  0376  00A3               	movwf	___aldiv@divisor+3
 10217  0377  3000               	movlw	0
 10218  0378  00A2               	movwf	___aldiv@divisor+2
 10219  0379  3010               	movlw	16
 10220  037A  00A1               	movwf	___aldiv@divisor+1
 10221  037B  3000               	movlw	0
 10222  037C  00A0               	movwf	___aldiv@divisor
 10223  037D  0141               	movlb	1	; select bank1
 10224  037E  0844               	movf	(compensate_pressure@var2+3)^(0+128),w
 10225  037F  0140               	movlb	0	; select bank0
 10226  0380  00A7               	movwf	___aldiv@dividend+3
 10227  0381  0141               	movlb	1	; select bank1
 10228  0382  0843               	movf	(compensate_pressure@var2+2)^(0+128),w
 10229  0383  0140               	movlb	0	; select bank0
 10230  0384  00A6               	movwf	___aldiv@dividend+2
 10231  0385  0141               	movlb	1	; select bank1
 10232  0386  0842               	movf	(compensate_pressure@var2+1)^(0+128),w
 10233  0387  0140               	movlb	0	; select bank0
 10234  0388  00A5               	movwf	___aldiv@dividend+1
 10235  0389  0141               	movlb	1	; select bank1
 10236  038A  0841               	movf	compensate_pressure@var2^(0+128),w
 10237  038B  0140               	movlb	0	; select bank0
 10238  038C  00A4               	movwf	___aldiv@dividend
 10239  038D  3194  2493  3180   	fcall	___aldiv
 10240  0390  0140               	movlb	0	; select bank0
 10241  0391  0820               	movf	?___aldiv,w
 10242  0392  0141               	movlb	1	; select bank1
 10243  0393  0228               	subwf	compensate_pressure@var5^(0+128),w
 10244  0394  0140               	movlb	0	; select bank0
 10245  0395  00B2               	movwf	??_compensate_pressure
 10246  0396  0821               	movf	?___aldiv+1,w
 10247  0397  0141               	movlb	1	; select bank1
 10248  0398  3B29               	subwfb	(compensate_pressure@var5+1)^(0+128),w
 10249  0399  0140               	movlb	0	; select bank0
 10250  039A  00B3               	movwf	??_compensate_pressure+1
 10251  039B  0822               	movf	?___aldiv+2,w
 10252  039C  0141               	movlb	1	; select bank1
 10253  039D  3B2A               	subwfb	(compensate_pressure@var5+2)^(0+128),w
 10254  039E  0140               	movlb	0	; select bank0
 10255  039F  00B4               	movwf	??_compensate_pressure+2
 10256  03A0  0823               	movf	?___aldiv+3,w
 10257  03A1  0141               	movlb	1	; select bank1
 10258  03A2  3B2B               	subwfb	(compensate_pressure@var5+3)^(0+128),w
 10259  03A3  0140               	movlb	0	; select bank0
 10260  03A4  00B5               	movwf	??_compensate_pressure+3
 10261  03A5  0835               	movf	??_compensate_pressure+3,w
 10262  03A6  00F3               	movwf	___lmul@multiplier+3
 10263  03A7  0834               	movf	??_compensate_pressure+2,w
 10264  03A8  00F2               	movwf	___lmul@multiplier+2
 10265  03A9  0833               	movf	??_compensate_pressure+1,w
 10266  03AA  00F1               	movwf	___lmul@multiplier+1
 10267  03AB  0832               	movf	??_compensate_pressure,w
 10268  03AC  00F0               	movwf	___lmul@multiplier
 10269  03AD  3000               	movlw	0
 10270  03AE  00F7               	movwf	___lmul@multiplicand+3
 10271  03AF  3000               	movlw	0
 10272  03B0  00F6               	movwf	___lmul@multiplicand+2
 10273  03B1  300C               	movlw	12
 10274  03B2  00F5               	movwf	___lmul@multiplicand+1
 10275  03B3  3035               	movlw	53
 10276  03B4  00F4               	movwf	___lmul@multiplicand
 10277  03B5  319A  221F  3180   	fcall	___lmul
 10278  03B8  0873               	movf	?___lmul+3,w
 10279  03B9  0141               	movlb	1	; select bank1
 10280  03BA  00C8               	movwf	(compensate_pressure@pressure+3)^(0+128)
 10281  03BB  0872               	movf	?___lmul+2,w
 10282  03BC  00C7               	movwf	(compensate_pressure@pressure+2)^(0+128)
 10283  03BD  0871               	movf	?___lmul+1,w
 10284  03BE  00C6               	movwf	(compensate_pressure@pressure+1)^(0+128)
 10285  03BF  0870               	movf	?___lmul,w
 10286  03C0  00C5               	movwf	compensate_pressure@pressure^(0+128)
 10287                           
 10288                           ;BME280_driver/bme280.c: 1235:         if (pressure < 0x80000000)
 10289  03C1  3080               	movlw	128
 10290  03C2  0248               	subwf	(compensate_pressure@pressure+3)^(0+128),w
 10291  03C3  1803               	btfsc	3,0
 10292  03C4  2BE2               	goto	l3884
 10293                           
 10294                           ;BME280_driver/bme280.c: 1236:         {;BME280_driver/bme280.c: 1237:             press
      +                          ure = (pressure << 1) / ((uint32_t)var1);
 10295  03C5  084C               	movf	(compensate_pressure@var1+3)^(0+128),w
 10296  03C6  00F3               	movwf	___lldiv@divisor+3
 10297  03C7  084B               	movf	(compensate_pressure@var1+2)^(0+128),w
 10298  03C8  00F2               	movwf	___lldiv@divisor+2
 10299  03C9  084A               	movf	(compensate_pressure@var1+1)^(0+128),w
 10300  03CA  00F1               	movwf	___lldiv@divisor+1
 10301  03CB  0849               	movf	compensate_pressure@var1^(0+128),w
 10302  03CC  00F0               	movwf	___lldiv@divisor
 10303  03CD  3545               	lslf	compensate_pressure@pressure^(0+128),w
 10304  03CE  00F4               	movwf	___lldiv@dividend
 10305  03CF  0D46               	rlf	(compensate_pressure@pressure+1)^(0+128),w
 10306  03D0  00F5               	movwf	___lldiv@dividend+1
 10307  03D1  0D47               	rlf	(compensate_pressure@pressure+2)^(0+128),w
 10308  03D2  00F6               	movwf	___lldiv@dividend+2
 10309  03D3  0D48               	rlf	(compensate_pressure@pressure+3)^(0+128),w
 10310  03D4  00F7               	movwf	___lldiv@dividend+3
 10311  03D5  319F  27AE  3180   	fcall	___lldiv
 10312  03D8  0873               	movf	?___lldiv+3,w
 10313  03D9  0141               	movlb	1	; select bank1
 10314  03DA  00C8               	movwf	(compensate_pressure@pressure+3)^(0+128)
 10315  03DB  0872               	movf	?___lldiv+2,w
 10316  03DC  00C7               	movwf	(compensate_pressure@pressure+2)^(0+128)
 10317  03DD  0871               	movf	?___lldiv+1,w
 10318  03DE  00C6               	movwf	(compensate_pressure@pressure+1)^(0+128)
 10319  03DF  0870               	movf	?___lldiv,w
 10320  03E0  00C5               	movwf	compensate_pressure@pressure^(0+128)
 10321                           
 10322                           ;BME280_driver/bme280.c: 1238:         }
 10323  03E1  2BFE               	goto	l192
 10324  03E2                     l3884:	
 10325                           
 10326                           ;BME280_driver/bme280.c: 1240:         {;BME280_driver/bme280.c: 1241:             press
      +                          ure = (pressure / (uint32_t)var1) * 2;
 10327  03E2  084C               	movf	(compensate_pressure@var1+3)^(0+128),w
 10328  03E3  00F3               	movwf	___lldiv@divisor+3
 10329  03E4  084B               	movf	(compensate_pressure@var1+2)^(0+128),w
 10330  03E5  00F2               	movwf	___lldiv@divisor+2
 10331  03E6  084A               	movf	(compensate_pressure@var1+1)^(0+128),w
 10332  03E7  00F1               	movwf	___lldiv@divisor+1
 10333  03E8  0849               	movf	compensate_pressure@var1^(0+128),w
 10334  03E9  00F0               	movwf	___lldiv@divisor
 10335  03EA  0848               	movf	(compensate_pressure@pressure+3)^(0+128),w
 10336  03EB  00F7               	movwf	___lldiv@dividend+3
 10337  03EC  0847               	movf	(compensate_pressure@pressure+2)^(0+128),w
 10338  03ED  00F6               	movwf	___lldiv@dividend+2
 10339  03EE  0846               	movf	(compensate_pressure@pressure+1)^(0+128),w
 10340  03EF  00F5               	movwf	___lldiv@dividend+1
 10341  03F0  0845               	movf	compensate_pressure@pressure^(0+128),w
 10342  03F1  00F4               	movwf	___lldiv@dividend
 10343  03F2  319F  27AE  3180   	fcall	___lldiv
 10344  03F5  3570               	lslf	?___lldiv,w
 10345  03F6  0141               	movlb	1	; select bank1
 10346  03F7  00C5               	movwf	compensate_pressure@pressure^(0+128)
 10347  03F8  0D71               	rlf	?___lldiv+1,w
 10348  03F9  00C6               	movwf	(compensate_pressure@pressure+1)^(0+128)
 10349  03FA  0D72               	rlf	?___lldiv+2,w
 10350  03FB  00C7               	movwf	(compensate_pressure@pressure+2)^(0+128)
 10351  03FC  0D73               	rlf	?___lldiv+3,w
 10352  03FD  00C8               	movwf	(compensate_pressure@pressure+3)^(0+128)
 10353  03FE                     l192:	
 10354                           ;BME280_driver/bme280.c: 1242:         }
 10355                           
 10356                           
 10357                           ;BME280_driver/bme280.c: 1243:         var1 = (((int32_t)calib_data->dig_P9) * ((int32_t
      +                          )(((pressure / 8) * (pressure / 8)) / 8192))) / 4096;
 10358  03FE  0845               	movf	compensate_pressure@pressure^(0+128),w
 10359  03FF  0140               	movlb	0	; select bank0
 10360  0400  00B2               	movwf	??_compensate_pressure
 10361  0401  0141               	movlb	1	; select bank1
 10362  0402  0846               	movf	(compensate_pressure@pressure+1)^(0+128),w
 10363  0403  0140               	movlb	0	; select bank0
 10364  0404  00B3               	movwf	??_compensate_pressure+1
 10365  0405  0141               	movlb	1	; select bank1
 10366  0406  0847               	movf	(compensate_pressure@pressure+2)^(0+128),w
 10367  0407  0140               	movlb	0	; select bank0
 10368  0408  00B4               	movwf	??_compensate_pressure+2
 10369  0409  0141               	movlb	1	; select bank1
 10370  040A  0848               	movf	(compensate_pressure@pressure+3)^(0+128),w
 10371  040B  0140               	movlb	0	; select bank0
 10372  040C  00B5               	movwf	??_compensate_pressure+3
 10373  040D  3003               	movlw	3
 10374  040E                     u3365:	
 10375  040E  36B5               	lsrf	??_compensate_pressure+3,f
 10376  040F  0CB4               	rrf	??_compensate_pressure+2,f
 10377  0410  0CB3               	rrf	??_compensate_pressure+1,f
 10378  0411  0CB2               	rrf	??_compensate_pressure,f
 10379  0412  0B89               	decfsz	9,f
 10380  0413  2C0E               	goto	u3365
 10381  0414  0835               	movf	??_compensate_pressure+3,w
 10382  0415  00F7               	movwf	___lmul@multiplicand+3
 10383  0416  0834               	movf	??_compensate_pressure+2,w
 10384  0417  00F6               	movwf	___lmul@multiplicand+2
 10385  0418  0833               	movf	??_compensate_pressure+1,w
 10386  0419  00F5               	movwf	___lmul@multiplicand+1
 10387  041A  0832               	movf	??_compensate_pressure,w
 10388  041B  00F4               	movwf	___lmul@multiplicand
 10389  041C  0141               	movlb	1	; select bank1
 10390  041D  0845               	movf	compensate_pressure@pressure^(0+128),w
 10391  041E  0140               	movlb	0	; select bank0
 10392  041F  00B6               	movwf	??_compensate_pressure+4
 10393  0420  0141               	movlb	1	; select bank1
 10394  0421  0846               	movf	(compensate_pressure@pressure+1)^(0+128),w
 10395  0422  0140               	movlb	0	; select bank0
 10396  0423  00B7               	movwf	??_compensate_pressure+5
 10397  0424  0141               	movlb	1	; select bank1
 10398  0425  0847               	movf	(compensate_pressure@pressure+2)^(0+128),w
 10399  0426  0140               	movlb	0	; select bank0
 10400  0427  00B8               	movwf	??_compensate_pressure+6
 10401  0428  0141               	movlb	1	; select bank1
 10402  0429  0848               	movf	(compensate_pressure@pressure+3)^(0+128),w
 10403  042A  0140               	movlb	0	; select bank0
 10404  042B  00B9               	movwf	??_compensate_pressure+7
 10405  042C  3003               	movlw	3
 10406  042D                     u3375:	
 10407  042D  36B9               	lsrf	??_compensate_pressure+7,f
 10408  042E  0CB8               	rrf	??_compensate_pressure+6,f
 10409  042F  0CB7               	rrf	??_compensate_pressure+5,f
 10410  0430  0CB6               	rrf	??_compensate_pressure+4,f
 10411  0431  0B89               	decfsz	9,f
 10412  0432  2C2D               	goto	u3375
 10413  0433  0839               	movf	??_compensate_pressure+7,w
 10414  0434  00F3               	movwf	___lmul@multiplier+3
 10415  0435  0838               	movf	??_compensate_pressure+6,w
 10416  0436  00F2               	movwf	___lmul@multiplier+2
 10417  0437  0837               	movf	??_compensate_pressure+5,w
 10418  0438  00F1               	movwf	___lmul@multiplier+1
 10419  0439  0836               	movf	??_compensate_pressure+4,w
 10420  043A  00F0               	movwf	___lmul@multiplier
 10421  043B  319A  221F  3180   	fcall	___lmul
 10422  043E  0870               	movf	?___lmul,w
 10423  043F  0140               	movlb	0	; select bank0
 10424  0440  00BA               	movwf	??_compensate_pressure+8
 10425  0441  0871               	movf	?___lmul+1,w
 10426  0442  00BB               	movwf	??_compensate_pressure+9
 10427  0443  0872               	movf	?___lmul+2,w
 10428  0444  00BC               	movwf	??_compensate_pressure+10
 10429  0445  0873               	movf	?___lmul+3,w
 10430  0446  00BD               	movwf	??_compensate_pressure+11
 10431  0447  300D               	movlw	13
 10432  0448                     u3385:	
 10433  0448  36BD               	lsrf	??_compensate_pressure+11,f
 10434  0449  0CBC               	rrf	??_compensate_pressure+10,f
 10435  044A  0CBB               	rrf	??_compensate_pressure+9,f
 10436  044B  0CBA               	rrf	??_compensate_pressure+8,f
 10437  044C  0B89               	decfsz	9,f
 10438  044D  2C48               	goto	u3385
 10439  044E  083D               	movf	??_compensate_pressure+11,w
 10440  044F  0141               	movlb	1	; select bank1
 10441  0450  00B3               	movwf	(_compensate_pressure$2690+3)^(0+128)
 10442  0451  0140               	movlb	0	; select bank0
 10443  0452  083C               	movf	??_compensate_pressure+10,w
 10444  0453  0141               	movlb	1	; select bank1
 10445  0454  00B2               	movwf	(_compensate_pressure$2690+2)^(0+128)
 10446  0455  0140               	movlb	0	; select bank0
 10447  0456  083B               	movf	??_compensate_pressure+9,w
 10448  0457  0141               	movlb	1	; select bank1
 10449  0458  00B1               	movwf	(_compensate_pressure$2690+1)^(0+128)
 10450  0459  0140               	movlb	0	; select bank0
 10451  045A  083A               	movf	??_compensate_pressure+8,w
 10452  045B  0141               	movlb	1	; select bank1
 10453  045C  00B0               	movwf	_compensate_pressure$2690^(0+128)
 10454                           
 10455                           ;BME280_driver/bme280.c: 1243:         var1 = (((int32_t)calib_data->dig_P9) * ((int32_t
      +                          )(((pressure / 8) * (pressure / 8)) / 8192))) / 4096;
 10456  045D  3000               	movlw	0
 10457  045E  0140               	movlb	0	; select bank0
 10458  045F  00A3               	movwf	___aldiv@divisor+3
 10459  0460  3000               	movlw	0
 10460  0461  00A2               	movwf	___aldiv@divisor+2
 10461  0462  3010               	movlw	16
 10462  0463  00A1               	movwf	___aldiv@divisor+1
 10463  0464  3000               	movlw	0
 10464  0465  00A0               	movwf	___aldiv@divisor
 10465  0466  082E               	movf	compensate_pressure@calib_data,w
 10466  0467  3E16               	addlw	22
 10467  0468  0086               	movwf	6
 10468  0469  3001               	movlw	1	; select bank2/3
 10469  046A  0087               	movwf	7
 10470  046B  3F40               	moviw [0]fsr1
 10471  046C  00B2               	movwf	??_compensate_pressure
 10472  046D  3F41               	moviw [1]fsr1
 10473  046E  00B3               	movwf	??_compensate_pressure+1
 10474  046F  0832               	movf	??_compensate_pressure,w
 10475  0470  00F0               	movwf	___lmul@multiplier
 10476  0471  0833               	movf	??_compensate_pressure+1,w
 10477  0472  00F1               	movwf	___lmul@multiplier+1
 10478  0473  0D89               	rlf	9,f
 10479  0474  3B89               	subwfb	9,f
 10480  0475  0989               	comf	9,f
 10481  0476  00F2               	movwf	___lmul@multiplier+2
 10482  0477  00F3               	movwf	___lmul@multiplier+3
 10483  0478  0141               	movlb	1	; select bank1
 10484  0479  0833               	movf	(_compensate_pressure$2690+3)^(0+128),w
 10485  047A  00F7               	movwf	___lmul@multiplicand+3
 10486  047B  0832               	movf	(_compensate_pressure$2690+2)^(0+128),w
 10487  047C  00F6               	movwf	___lmul@multiplicand+2
 10488  047D  0831               	movf	(_compensate_pressure$2690+1)^(0+128),w
 10489  047E  00F5               	movwf	___lmul@multiplicand+1
 10490  047F  0830               	movf	_compensate_pressure$2690^(0+128),w
 10491  0480  00F4               	movwf	___lmul@multiplicand
 10492  0481  319A  221F  3180   	fcall	___lmul
 10493  0484  0873               	movf	?___lmul+3,w
 10494  0485  0140               	movlb	0	; select bank0
 10495  0486  00A7               	movwf	___aldiv@dividend+3
 10496  0487  0872               	movf	?___lmul+2,w
 10497  0488  00A6               	movwf	___aldiv@dividend+2
 10498  0489  0871               	movf	?___lmul+1,w
 10499  048A  00A5               	movwf	___aldiv@dividend+1
 10500  048B  0870               	movf	?___lmul,w
 10501  048C  00A4               	movwf	___aldiv@dividend
 10502  048D  3194  2493  3180   	fcall	___aldiv
 10503  0490  0140               	movlb	0	; select bank0
 10504  0491  0823               	movf	?___aldiv+3,w
 10505  0492  0141               	movlb	1	; select bank1
 10506  0493  00CC               	movwf	(compensate_pressure@var1+3)^(0+128)
 10507  0494  0140               	movlb	0	; select bank0
 10508  0495  0822               	movf	?___aldiv+2,w
 10509  0496  0141               	movlb	1	; select bank1
 10510  0497  00CB               	movwf	(compensate_pressure@var1+2)^(0+128)
 10511  0498  0140               	movlb	0	; select bank0
 10512  0499  0821               	movf	?___aldiv+1,w
 10513  049A  0141               	movlb	1	; select bank1
 10514  049B  00CA               	movwf	(compensate_pressure@var1+1)^(0+128)
 10515  049C  0140               	movlb	0	; select bank0
 10516  049D  0820               	movf	?___aldiv,w
 10517  049E  0141               	movlb	1	; select bank1
 10518  049F  00C9               	movwf	compensate_pressure@var1^(0+128)
 10519                           
 10520                           ;BME280_driver/bme280.c: 1244:         var2 = (((int32_t)(pressure / 4)) * ((int32_t)cal
      +                          ib_data->dig_P8)) / 8192;
 10521  04A0  3000               	movlw	0
 10522  04A1  0140               	movlb	0	; select bank0
 10523  04A2  00A3               	movwf	___aldiv@divisor+3
 10524  04A3  3000               	movlw	0
 10525  04A4  00A2               	movwf	___aldiv@divisor+2
 10526  04A5  3020               	movlw	32
 10527  04A6  00A1               	movwf	___aldiv@divisor+1
 10528  04A7  3000               	movlw	0
 10529  04A8  00A0               	movwf	___aldiv@divisor
 10530  04A9  0141               	movlb	1	; select bank1
 10531  04AA  0845               	movf	compensate_pressure@pressure^(0+128),w
 10532  04AB  0140               	movlb	0	; select bank0
 10533  04AC  00B2               	movwf	??_compensate_pressure
 10534  04AD  0141               	movlb	1	; select bank1
 10535  04AE  0846               	movf	(compensate_pressure@pressure+1)^(0+128),w
 10536  04AF  0140               	movlb	0	; select bank0
 10537  04B0  00B3               	movwf	??_compensate_pressure+1
 10538  04B1  0141               	movlb	1	; select bank1
 10539  04B2  0847               	movf	(compensate_pressure@pressure+2)^(0+128),w
 10540  04B3  0140               	movlb	0	; select bank0
 10541  04B4  00B4               	movwf	??_compensate_pressure+2
 10542  04B5  0141               	movlb	1	; select bank1
 10543  04B6  0848               	movf	(compensate_pressure@pressure+3)^(0+128),w
 10544  04B7  0140               	movlb	0	; select bank0
 10545  04B8  00B5               	movwf	??_compensate_pressure+3
 10546  04B9  3002               	movlw	2
 10547  04BA                     u3395:	
 10548  04BA  36B5               	lsrf	??_compensate_pressure+3,f
 10549  04BB  0CB4               	rrf	??_compensate_pressure+2,f
 10550  04BC  0CB3               	rrf	??_compensate_pressure+1,f
 10551  04BD  0CB2               	rrf	??_compensate_pressure,f
 10552  04BE  0B89               	decfsz	9,f
 10553  04BF  2CBA               	goto	u3395
 10554  04C0  0835               	movf	??_compensate_pressure+3,w
 10555  04C1  00F3               	movwf	___lmul@multiplier+3
 10556  04C2  0834               	movf	??_compensate_pressure+2,w
 10557  04C3  00F2               	movwf	___lmul@multiplier+2
 10558  04C4  0833               	movf	??_compensate_pressure+1,w
 10559  04C5  00F1               	movwf	___lmul@multiplier+1
 10560  04C6  0832               	movf	??_compensate_pressure,w
 10561  04C7  00F0               	movwf	___lmul@multiplier
 10562  04C8  082E               	movf	compensate_pressure@calib_data,w
 10563  04C9  3E14               	addlw	20
 10564  04CA  0086               	movwf	6
 10565  04CB  3001               	movlw	1	; select bank2/3
 10566  04CC  0087               	movwf	7
 10567  04CD  3F40               	moviw [0]fsr1
 10568  04CE  00B6               	movwf	??_compensate_pressure+4
 10569  04CF  3F41               	moviw [1]fsr1
 10570  04D0  00B7               	movwf	??_compensate_pressure+5
 10571  04D1  0836               	movf	??_compensate_pressure+4,w
 10572  04D2  00F4               	movwf	___lmul@multiplicand
 10573  04D3  0837               	movf	??_compensate_pressure+5,w
 10574  04D4  00F5               	movwf	___lmul@multiplicand+1
 10575  04D5  0D89               	rlf	9,f
 10576  04D6  3B89               	subwfb	9,f
 10577  04D7  0989               	comf	9,f
 10578  04D8  00F6               	movwf	___lmul@multiplicand+2
 10579  04D9  00F7               	movwf	___lmul@multiplicand+3
 10580  04DA  319A  221F  3180   	fcall	___lmul
 10581  04DD  0873               	movf	?___lmul+3,w
 10582  04DE  0140               	movlb	0	; select bank0
 10583  04DF  00A7               	movwf	___aldiv@dividend+3
 10584  04E0  0872               	movf	?___lmul+2,w
 10585  04E1  00A6               	movwf	___aldiv@dividend+2
 10586  04E2  0871               	movf	?___lmul+1,w
 10587  04E3  00A5               	movwf	___aldiv@dividend+1
 10588  04E4  0870               	movf	?___lmul,w
 10589  04E5  00A4               	movwf	___aldiv@dividend
 10590  04E6  3194  2493  3180   	fcall	___aldiv
 10591  04E9  0140               	movlb	0	; select bank0
 10592  04EA  0823               	movf	?___aldiv+3,w
 10593  04EB  0141               	movlb	1	; select bank1
 10594  04EC  00C4               	movwf	(compensate_pressure@var2+3)^(0+128)
 10595  04ED  0140               	movlb	0	; select bank0
 10596  04EE  0822               	movf	?___aldiv+2,w
 10597  04EF  0141               	movlb	1	; select bank1
 10598  04F0  00C3               	movwf	(compensate_pressure@var2+2)^(0+128)
 10599  04F1  0140               	movlb	0	; select bank0
 10600  04F2  0821               	movf	?___aldiv+1,w
 10601  04F3  0141               	movlb	1	; select bank1
 10602  04F4  00C2               	movwf	(compensate_pressure@var2+1)^(0+128)
 10603  04F5  0140               	movlb	0	; select bank0
 10604  04F6  0820               	movf	?___aldiv,w
 10605  04F7  0141               	movlb	1	; select bank1
 10606  04F8  00C1               	movwf	compensate_pressure@var2^(0+128)
 10607                           
 10608                           ;BME280_driver/bme280.c: 1245:         pressure = (uint32_t)((int32_t)pressure + ((var1 
      +                          + var2 + calib_data->dig_P7) / 16));
 10609  04F9  3000               	movlw	0
 10610  04FA  0140               	movlb	0	; select bank0
 10611  04FB  00A3               	movwf	___aldiv@divisor+3
 10612  04FC  3000               	movlw	0
 10613  04FD  00A2               	movwf	___aldiv@divisor+2
 10614  04FE  3000               	movlw	0
 10615  04FF  00A1               	movwf	___aldiv@divisor+1
 10616  0500  3010               	movlw	16
 10617  0501  00A0               	movwf	___aldiv@divisor
 10618  0502  0141               	movlb	1	; select bank1
 10619  0503  0841               	movf	compensate_pressure@var2^(0+128),w
 10620  0504  0140               	movlb	0	; select bank0
 10621  0505  00B2               	movwf	??_compensate_pressure
 10622  0506  0141               	movlb	1	; select bank1
 10623  0507  0842               	movf	(compensate_pressure@var2+1)^(0+128),w
 10624  0508  0140               	movlb	0	; select bank0
 10625  0509  00B3               	movwf	??_compensate_pressure+1
 10626  050A  0141               	movlb	1	; select bank1
 10627  050B  0843               	movf	(compensate_pressure@var2+2)^(0+128),w
 10628  050C  0140               	movlb	0	; select bank0
 10629  050D  00B4               	movwf	??_compensate_pressure+2
 10630  050E  0141               	movlb	1	; select bank1
 10631  050F  0844               	movf	(compensate_pressure@var2+3)^(0+128),w
 10632  0510  0140               	movlb	0	; select bank0
 10633  0511  00B5               	movwf	??_compensate_pressure+3
 10634  0512  0141               	movlb	1	; select bank1
 10635  0513  0849               	movf	compensate_pressure@var1^(0+128),w
 10636  0514  0140               	movlb	0	; select bank0
 10637  0515  00B6               	movwf	??_compensate_pressure+4
 10638  0516  0141               	movlb	1	; select bank1
 10639  0517  084A               	movf	(compensate_pressure@var1+1)^(0+128),w
 10640  0518  0140               	movlb	0	; select bank0
 10641  0519  00B7               	movwf	??_compensate_pressure+5
 10642  051A  0141               	movlb	1	; select bank1
 10643  051B  084B               	movf	(compensate_pressure@var1+2)^(0+128),w
 10644  051C  0140               	movlb	0	; select bank0
 10645  051D  00B8               	movwf	??_compensate_pressure+6
 10646  051E  0141               	movlb	1	; select bank1
 10647  051F  084C               	movf	(compensate_pressure@var1+3)^(0+128),w
 10648  0520  0140               	movlb	0	; select bank0
 10649  0521  00B9               	movwf	??_compensate_pressure+7
 10650  0522  082E               	movf	compensate_pressure@calib_data,w
 10651  0523  3E12               	addlw	18
 10652  0524  0086               	movwf	6
 10653  0525  3001               	movlw	1	; select bank2/3
 10654  0526  0087               	movwf	7
 10655  0527  3F40               	moviw [0]fsr1
 10656  0528  00BA               	movwf	??_compensate_pressure+8
 10657  0529  3F41               	moviw [1]fsr1
 10658  052A  00BB               	movwf	??_compensate_pressure+9
 10659  052B  083A               	movf	??_compensate_pressure+8,w
 10660  052C  00BC               	movwf	??_compensate_pressure+10
 10661  052D  083B               	movf	??_compensate_pressure+9,w
 10662  052E  00BD               	movwf	??_compensate_pressure+11
 10663  052F  3000               	movlw	0
 10664  0530  1BBD               	btfsc	??_compensate_pressure+11,7
 10665  0531  30FF               	movlw	255
 10666  0532  00BE               	movwf	??_compensate_pressure+12
 10667  0533  00BF               	movwf	??_compensate_pressure+13
 10668  0534  083C               	movf	??_compensate_pressure+10,w
 10669  0535  07B6               	addwf	??_compensate_pressure+4,f
 10670  0536  083D               	movf	??_compensate_pressure+11,w
 10671  0537  3DB7               	addwfc	??_compensate_pressure+5,f
 10672  0538  083E               	movf	??_compensate_pressure+12,w
 10673  0539  3DB8               	addwfc	??_compensate_pressure+6,f
 10674  053A  083F               	movf	??_compensate_pressure+13,w
 10675  053B  3DB9               	addwfc	??_compensate_pressure+7,f
 10676  053C  0836               	movf	??_compensate_pressure+4,w
 10677  053D  07B2               	addwf	??_compensate_pressure,f
 10678  053E  0837               	movf	??_compensate_pressure+5,w
 10679  053F  3DB3               	addwfc	??_compensate_pressure+1,f
 10680  0540  0838               	movf	??_compensate_pressure+6,w
 10681  0541  3DB4               	addwfc	??_compensate_pressure+2,f
 10682  0542  0839               	movf	??_compensate_pressure+7,w
 10683  0543  3DB5               	addwfc	??_compensate_pressure+3,f
 10684  0544  0835               	movf	??_compensate_pressure+3,w
 10685  0545  00A7               	movwf	___aldiv@dividend+3
 10686  0546  0834               	movf	??_compensate_pressure+2,w
 10687  0547  00A6               	movwf	___aldiv@dividend+2
 10688  0548  0833               	movf	??_compensate_pressure+1,w
 10689  0549  00A5               	movwf	___aldiv@dividend+1
 10690  054A  0832               	movf	??_compensate_pressure,w
 10691  054B  00A4               	movwf	___aldiv@dividend
 10692  054C  3194  2493  3180   	fcall	___aldiv
 10693  054F  0140               	movlb	0	; select bank0
 10694  0550  0820               	movf	?___aldiv,w
 10695  0551  0141               	movlb	1	; select bank1
 10696  0552  0745               	addwf	compensate_pressure@pressure^(0+128),w
 10697  0553  0140               	movlb	0	; select bank0
 10698  0554  00C0               	movwf	??_compensate_pressure+14
 10699  0555  0821               	movf	?___aldiv+1,w
 10700  0556  0141               	movlb	1	; select bank1
 10701  0557  3D46               	addwfc	(compensate_pressure@pressure+1)^(0+128),w
 10702  0558  0140               	movlb	0	; select bank0
 10703  0559  00C1               	movwf	??_compensate_pressure+15
 10704  055A  0822               	movf	?___aldiv+2,w
 10705  055B  0141               	movlb	1	; select bank1
 10706  055C  3D47               	addwfc	(compensate_pressure@pressure+2)^(0+128),w
 10707  055D  0140               	movlb	0	; select bank0
 10708  055E  00C2               	movwf	??_compensate_pressure+16
 10709  055F  0823               	movf	?___aldiv+3,w
 10710  0560  0141               	movlb	1	; select bank1
 10711  0561  3D48               	addwfc	(compensate_pressure@pressure+3)^(0+128),w
 10712  0562  0140               	movlb	0	; select bank0
 10713  0563  00C3               	movwf	??_compensate_pressure+17
 10714  0564  0843               	movf	??_compensate_pressure+17,w
 10715  0565  0141               	movlb	1	; select bank1
 10716  0566  00C8               	movwf	(compensate_pressure@pressure+3)^(0+128)
 10717  0567  0140               	movlb	0	; select bank0
 10718  0568  0842               	movf	??_compensate_pressure+16,w
 10719  0569  0141               	movlb	1	; select bank1
 10720  056A  00C7               	movwf	(compensate_pressure@pressure+2)^(0+128)
 10721  056B  0140               	movlb	0	; select bank0
 10722  056C  0841               	movf	??_compensate_pressure+15,w
 10723  056D  0141               	movlb	1	; select bank1
 10724  056E  00C6               	movwf	(compensate_pressure@pressure+1)^(0+128)
 10725  056F  0140               	movlb	0	; select bank0
 10726  0570  0840               	movf	??_compensate_pressure+14,w
 10727  0571  0141               	movlb	1	; select bank1
 10728  0572  00C5               	movwf	compensate_pressure@pressure^(0+128)
 10729                           
 10730                           ;BME280_driver/bme280.c: 1246:         if (pressure < pressure_min)
 10731  0573  0848               	movf	(compensate_pressure@pressure+3)^(0+128),w
 10732  0574  1D03               	btfss	3,2
 10733  0575  2D87               	goto	l3896
 10734  0576  0847               	movf	(compensate_pressure@pressure+2)^(0+128),w
 10735  0577  1D03               	btfss	3,2
 10736  0578  2D87               	goto	l3896
 10737  0579  3030               	movlw	48
 10738  057A  0245               	subwf	compensate_pressure@pressure^(0+128),w
 10739  057B  3075               	movlw	117
 10740  057C  3B46               	subwfb	(compensate_pressure@pressure+1)^(0+128),w
 10741  057D  1803               	btfsc	3,0
 10742  057E  2D87               	goto	l3896
 10743  057F                     l3894:	
 10744                           
 10745                           ;BME280_driver/bme280.c: 1247:         {;BME280_driver/bme280.c: 1248:             press
      +                          ure = pressure_min;
 10746  057F  3000               	movlw	0
 10747  0580  00C8               	movwf	(compensate_pressure@pressure+3)^(0+128)
 10748  0581  3000               	movlw	0
 10749  0582  00C7               	movwf	(compensate_pressure@pressure+2)^(0+128)
 10750  0583  3075               	movlw	117
 10751  0584  00C6               	movwf	(compensate_pressure@pressure+1)^(0+128)
 10752  0585  3030               	movlw	48
 10753  0586  2D99               	goto	L3
 10754  0587                     l3896:	
 10755                           ;BME280_driver/bme280.c: 1249:         }
 10756                           
 10757  0587  0848               	movf	(compensate_pressure@pressure+3)^(0+128),w
 10758  0588  1D03               	btfss	3,2
 10759  0589  2D92               	goto	l3898
 10760  058A  30B1               	movlw	177
 10761  058B  0245               	subwf	compensate_pressure@pressure^(0+128),w
 10762  058C  30AD               	movlw	173
 10763  058D  3B46               	subwfb	(compensate_pressure@pressure+1)^(0+128),w
 10764  058E  3001               	movlw	1
 10765  058F  3B47               	subwfb	(compensate_pressure@pressure+2)^(0+128),w
 10766  0590  1C03               	btfss	3,0
 10767  0591  2D9A               	goto	l196
 10768  0592                     l3898:	
 10769                           
 10770                           ;BME280_driver/bme280.c: 1251:         {;BME280_driver/bme280.c: 1252:             press
      +                          ure = pressure_max;
 10771  0592  3000               	movlw	0
 10772  0593  00C8               	movwf	(compensate_pressure@pressure+3)^(0+128)
 10773  0594  3001               	movlw	1
 10774  0595  00C7               	movwf	(compensate_pressure@pressure+2)^(0+128)
 10775  0596  30AD               	movlw	173
 10776  0597  00C6               	movwf	(compensate_pressure@pressure+1)^(0+128)
 10777  0598  30B0               	movlw	176
 10778  0599                     L3:	
 10779  0599  00C5               	movwf	compensate_pressure@pressure^(0+128)
 10780  059A                     l196:	
 10781                           ;BME280_driver/bme280.c: 1258:     }
 10782                           
 10783                           
 10784                           ;BME280_driver/bme280.c: 1260:     return pressure;
 10785  059A  0848               	movf	(compensate_pressure@pressure+3)^(0+128),w
 10786  059B  0140               	movlb	0	; select bank0
 10787  059C  00B1               	movwf	?_compensate_pressure+3
 10788  059D  0141               	movlb	1	; select bank1
 10789  059E  0847               	movf	(compensate_pressure@pressure+2)^(0+128),w
 10790  059F  0140               	movlb	0	; select bank0
 10791  05A0  00B0               	movwf	?_compensate_pressure+2
 10792  05A1  0141               	movlb	1	; select bank1
 10793  05A2  0846               	movf	(compensate_pressure@pressure+1)^(0+128),w
 10794  05A3  0140               	movlb	0	; select bank0
 10795  05A4  00AF               	movwf	?_compensate_pressure+1
 10796  05A5  0141               	movlb	1	; select bank1
 10797  05A6  0845               	movf	compensate_pressure@pressure^(0+128),w
 10798  05A7  0140               	movlb	0	; select bank0
 10799  05A8  00AE               	movwf	?_compensate_pressure
 10800  05A9  0008               	return
 10801  05AA                     __end_of_compensate_pressure:	
 10802                           
 10803                           	psect	text8
 10804  0D36                     __ptext8:	
 10805 ;; *************** function _compensate_humidity *****************
 10806 ;; Defined at:
 10807 ;;		line 1268 in file "BME280_driver/bme280.c"
 10808 ;; Parameters:    Size  Location     Type
 10809 ;;  uncomp_data     1    wreg     PTR const struct bme280_
 10810 ;;		 -> bme280_get_sensor_data@uncomp_data(12), 
 10811 ;;  calib_data      1   14[BANK0 ] PTR const struct bme280_
 10812 ;;		 -> EnvSensor(51), 
 10813 ;; Auto vars:     Size  Location     Type
 10814 ;;  uncomp_data     1   30[BANK0 ] PTR const struct bme280_
 10815 ;;		 -> bme280_get_sensor_data@uncomp_data(12), 
 10816 ;;  var3            4   55[BANK0 ] long 
 10817 ;;  var5            4   51[BANK0 ] long 
 10818 ;;  var4            4   47[BANK0 ] long 
 10819 ;;  var2            4   43[BANK0 ] long 
 10820 ;;  var1            4   39[BANK0 ] long 
 10821 ;;  humidity        4   35[BANK0 ] unsigned long 
 10822 ;;  humidity_max    4    0        unsigned long 
 10823 ;; Return value:  Size  Location     Type
 10824 ;;                  4   14[BANK0 ] unsigned long 
 10825 ;; Registers used:
 10826 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10827 ;; Tracked objects:
 10828 ;;		On entry : 0/0
 10829 ;;		On exit  : 0/0
 10830 ;;		Unchanged: 0/0
 10831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10832 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10833 ;;      Locals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10834 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10835 ;;      Totals:         0      45       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10836 ;;Total ram usage:       45 bytes
 10837 ;; Hardware stack levels used:    1
 10838 ;; Hardware stack levels required when called:    4
 10839 ;; This function calls:
 10840 ;;		___aldiv
 10841 ;;		___lmul
 10842 ;; This function is called by:
 10843 ;;		_bme280_compensate_data
 10844 ;; This function uses a non-reentrant model
 10845 ;;
 10846                           
 10847                           
 10848                           ;psect for function _compensate_humidity
 10849  0D36                     _compensate_humidity:	
 10850                           
 10851                           ;incstack = 0
 10852                           ; Regs used in _compensate_humidity: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10853                           ;compensate_humidity@uncomp_data stored from wreg
 10854  0D36  0140               	movlb	0	; select bank0
 10855  0D37  00BE               	movwf	compensate_humidity@uncomp_data
 10856                           
 10857                           ;BME280_driver/bme280.c: 1279:     var1 = calib_data->t_fine - ((int32_t)76800);
 10858  0D38  082E               	movf	compensate_humidity@calib_data,w
 10859  0D39  3E21               	addlw	33
 10860  0D3A  0086               	movwf	6
 10861  0D3B  3001               	movlw	1	; select bank2/3
 10862  0D3C  0087               	movwf	7
 10863  0D3D  3F40               	moviw [0]fsr1
 10864  0D3E  00B2               	movwf	??_compensate_humidity
 10865  0D3F  3F41               	moviw [1]fsr1
 10866  0D40  00B3               	movwf	??_compensate_humidity+1
 10867  0D41  3F42               	moviw [2]fsr1
 10868  0D42  00B4               	movwf	??_compensate_humidity+2
 10869  0D43  3F43               	moviw [3]fsr1
 10870  0D44  00B5               	movwf	??_compensate_humidity+3
 10871  0D45  3000               	movlw	0
 10872  0D46  0732               	addwf	??_compensate_humidity,w
 10873  0D47  00C7               	movwf	compensate_humidity@var1
 10874  0D48  30D4               	movlw	212
 10875  0D49  3D33               	addwfc	??_compensate_humidity+1,w
 10876  0D4A  00C8               	movwf	compensate_humidity@var1+1
 10877  0D4B  30FE               	movlw	254
 10878  0D4C  3D34               	addwfc	??_compensate_humidity+2,w
 10879  0D4D  00C9               	movwf	compensate_humidity@var1+2
 10880  0D4E  30FF               	movlw	255
 10881  0D4F  3D35               	addwfc	??_compensate_humidity+3,w
 10882  0D50  00CA               	movwf	compensate_humidity@var1+3
 10883                           
 10884                           ;BME280_driver/bme280.c: 1280:     var2 = (int32_t)(uncomp_data->humidity * 16384);
 10885  0D51  083E               	movf	compensate_humidity@uncomp_data,w
 10886  0D52  3E08               	addlw	8
 10887  0D53  0086               	movwf	6
 10888  0D54  0187               	clrf	7
 10889  0D55  3F40               	moviw [0]fsr1
 10890  0D56  00B2               	movwf	??_compensate_humidity
 10891  0D57  3F41               	moviw [1]fsr1
 10892  0D58  00B3               	movwf	??_compensate_humidity+1
 10893  0D59  3F42               	moviw [2]fsr1
 10894  0D5A  00B4               	movwf	??_compensate_humidity+2
 10895  0D5B  3F43               	moviw [3]fsr1
 10896  0D5C  00B5               	movwf	??_compensate_humidity+3
 10897  0D5D  300E               	movlw	14
 10898  0D5E                     u3425:	
 10899  0D5E  35B2               	lslf	??_compensate_humidity,f
 10900  0D5F  0DB3               	rlf	??_compensate_humidity+1,f
 10901  0D60  0DB4               	rlf	??_compensate_humidity+2,f
 10902  0D61  0DB5               	rlf	??_compensate_humidity+3,f
 10903  0D62  0B89               	decfsz	9,f
 10904  0D63  2D5E               	goto	u3425
 10905  0D64  0835               	movf	??_compensate_humidity+3,w
 10906  0D65  00CE               	movwf	compensate_humidity@var2+3
 10907  0D66  0834               	movf	??_compensate_humidity+2,w
 10908  0D67  00CD               	movwf	compensate_humidity@var2+2
 10909  0D68  0833               	movf	??_compensate_humidity+1,w
 10910  0D69  00CC               	movwf	compensate_humidity@var2+1
 10911  0D6A  0832               	movf	??_compensate_humidity,w
 10912  0D6B  00CB               	movwf	compensate_humidity@var2
 10913                           
 10914                           ;BME280_driver/bme280.c: 1281:     var3 = (int32_t)(((int32_t)calib_data->dig_H4) * 1048
      +                          576);
 10915  0D6C  082E               	movf	compensate_humidity@calib_data,w
 10916  0D6D  3E1C               	addlw	28
 10917  0D6E  0086               	movwf	6
 10918  0D6F  3001               	movlw	1	; select bank2/3
 10919  0D70  0087               	movwf	7
 10920  0D71  3F40               	moviw [0]fsr1
 10921  0D72  00B2               	movwf	??_compensate_humidity
 10922  0D73  3F41               	moviw [1]fsr1
 10923  0D74  00B3               	movwf	??_compensate_humidity+1
 10924  0D75  0832               	movf	??_compensate_humidity,w
 10925  0D76  00B4               	movwf	??_compensate_humidity+2
 10926  0D77  0833               	movf	??_compensate_humidity+1,w
 10927  0D78  00B5               	movwf	??_compensate_humidity+3
 10928  0D79  01B6               	clrf	??_compensate_humidity+4
 10929  0D7A  01B7               	clrf	??_compensate_humidity+5
 10930  0D7B  3014               	movlw	20
 10931  0D7C                     u3435:	
 10932  0D7C  35B4               	lslf	??_compensate_humidity+2,f
 10933  0D7D  0DB5               	rlf	??_compensate_humidity+3,f
 10934  0D7E  0DB6               	rlf	??_compensate_humidity+4,f
 10935  0D7F  0DB7               	rlf	??_compensate_humidity+5,f
 10936  0D80  0B89               	decfsz	9,f
 10937  0D81  2D7C               	goto	u3435
 10938  0D82  0837               	movf	??_compensate_humidity+5,w
 10939  0D83  00DA               	movwf	compensate_humidity@var3+3
 10940  0D84  0836               	movf	??_compensate_humidity+4,w
 10941  0D85  00D9               	movwf	compensate_humidity@var3+2
 10942  0D86  0835               	movf	??_compensate_humidity+3,w
 10943  0D87  00D8               	movwf	compensate_humidity@var3+1
 10944  0D88  0834               	movf	??_compensate_humidity+2,w
 10945  0D89  00D7               	movwf	compensate_humidity@var3
 10946                           
 10947                           ;BME280_driver/bme280.c: 1282:     var4 = ((int32_t)calib_data->dig_H5) * var1;
 10948  0D8A  082E               	movf	compensate_humidity@calib_data,w
 10949  0D8B  3E1E               	addlw	30
 10950  0D8C  0086               	movwf	6
 10951  0D8D  3001               	movlw	1	; select bank2/3
 10952  0D8E  0087               	movwf	7
 10953  0D8F  3F40               	moviw [0]fsr1
 10954  0D90  00B2               	movwf	??_compensate_humidity
 10955  0D91  3F41               	moviw [1]fsr1
 10956  0D92  00B3               	movwf	??_compensate_humidity+1
 10957  0D93  0832               	movf	??_compensate_humidity,w
 10958  0D94  00F0               	movwf	___lmul@multiplier
 10959  0D95  0833               	movf	??_compensate_humidity+1,w
 10960  0D96  00F1               	movwf	___lmul@multiplier+1
 10961  0D97  0D89               	rlf	9,f
 10962  0D98  3B89               	subwfb	9,f
 10963  0D99  0989               	comf	9,f
 10964  0D9A  00F2               	movwf	___lmul@multiplier+2
 10965  0D9B  00F3               	movwf	___lmul@multiplier+3
 10966  0D9C  084A               	movf	compensate_humidity@var1+3,w
 10967  0D9D  00F7               	movwf	___lmul@multiplicand+3
 10968  0D9E  0849               	movf	compensate_humidity@var1+2,w
 10969  0D9F  00F6               	movwf	___lmul@multiplicand+2
 10970  0DA0  0848               	movf	compensate_humidity@var1+1,w
 10971  0DA1  00F5               	movwf	___lmul@multiplicand+1
 10972  0DA2  0847               	movf	compensate_humidity@var1,w
 10973  0DA3  00F4               	movwf	___lmul@multiplicand
 10974  0DA4  319A  221F  318D   	fcall	___lmul
 10975  0DA7  0873               	movf	?___lmul+3,w
 10976  0DA8  0140               	movlb	0	; select bank0
 10977  0DA9  00D2               	movwf	compensate_humidity@var4+3
 10978  0DAA  0872               	movf	?___lmul+2,w
 10979  0DAB  00D1               	movwf	compensate_humidity@var4+2
 10980  0DAC  0871               	movf	?___lmul+1,w
 10981  0DAD  00D0               	movwf	compensate_humidity@var4+1
 10982  0DAE  0870               	movf	?___lmul,w
 10983  0DAF  00CF               	movwf	compensate_humidity@var4
 10984                           
 10985                           ;BME280_driver/bme280.c: 1283:     var5 = (((var2 - var3) - var4) + (int32_t)16384) / 32
      +                          768;
 10986  0DB0  3000               	movlw	0
 10987  0DB1  00A3               	movwf	___aldiv@divisor+3
 10988  0DB2  3000               	movlw	0
 10989  0DB3  00A2               	movwf	___aldiv@divisor+2
 10990  0DB4  3080               	movlw	128
 10991  0DB5  00A1               	movwf	___aldiv@divisor+1
 10992  0DB6  3000               	movlw	0
 10993  0DB7  00A0               	movwf	___aldiv@divisor
 10994  0DB8  084B               	movf	compensate_humidity@var2,w
 10995  0DB9  00B2               	movwf	??_compensate_humidity
 10996  0DBA  084C               	movf	compensate_humidity@var2+1,w
 10997  0DBB  00B3               	movwf	??_compensate_humidity+1
 10998  0DBC  084D               	movf	compensate_humidity@var2+2,w
 10999  0DBD  00B4               	movwf	??_compensate_humidity+2
 11000  0DBE  084E               	movf	compensate_humidity@var2+3,w
 11001  0DBF  00B5               	movwf	??_compensate_humidity+3
 11002  0DC0  0957               	comf	compensate_humidity@var3,w
 11003  0DC1  00B6               	movwf	??_compensate_humidity+4
 11004  0DC2  0958               	comf	compensate_humidity@var3+1,w
 11005  0DC3  00B7               	movwf	??_compensate_humidity+5
 11006  0DC4  0959               	comf	compensate_humidity@var3+2,w
 11007  0DC5  00B8               	movwf	??_compensate_humidity+6
 11008  0DC6  095A               	comf	compensate_humidity@var3+3,w
 11009  0DC7  00B9               	movwf	??_compensate_humidity+7
 11010  0DC8  0AB6               	incf	??_compensate_humidity+4,f
 11011  0DC9  1903               	skipnz
 11012  0DCA  0AB7               	incf	??_compensate_humidity+5,f
 11013  0DCB  1903               	skipnz
 11014  0DCC  0AB8               	incf	??_compensate_humidity+6,f
 11015  0DCD  1903               	skipnz
 11016  0DCE  0AB9               	incf	??_compensate_humidity+7,f
 11017  0DCF  084F               	movf	compensate_humidity@var4,w
 11018  0DD0  02B6               	subwf	??_compensate_humidity+4,f
 11019  0DD1  0850               	movf	compensate_humidity@var4+1,w
 11020  0DD2  3BB7               	subwfb	??_compensate_humidity+5,f
 11021  0DD3  0851               	movf	compensate_humidity@var4+2,w
 11022  0DD4  3BB8               	subwfb	??_compensate_humidity+6,f
 11023  0DD5  0852               	movf	compensate_humidity@var4+3,w
 11024  0DD6  3BB9               	subwfb	??_compensate_humidity+7,f
 11025  0DD7  0836               	movf	??_compensate_humidity+4,w
 11026  0DD8  07B2               	addwf	??_compensate_humidity,f
 11027  0DD9  0837               	movf	??_compensate_humidity+5,w
 11028  0DDA  3DB3               	addwfc	??_compensate_humidity+1,f
 11029  0DDB  0838               	movf	??_compensate_humidity+6,w
 11030  0DDC  3DB4               	addwfc	??_compensate_humidity+2,f
 11031  0DDD  0839               	movf	??_compensate_humidity+7,w
 11032  0DDE  3DB5               	addwfc	??_compensate_humidity+3,f
 11033  0DDF  3000               	movlw	0
 11034  0DE0  0732               	addwf	??_compensate_humidity,w
 11035  0DE1  00A4               	movwf	___aldiv@dividend
 11036  0DE2  3040               	movlw	64
 11037  0DE3  3D33               	addwfc	??_compensate_humidity+1,w
 11038  0DE4  00A5               	movwf	___aldiv@dividend+1
 11039  0DE5  3000               	movlw	0
 11040  0DE6  3D34               	addwfc	??_compensate_humidity+2,w
 11041  0DE7  00A6               	movwf	___aldiv@dividend+2
 11042  0DE8  3000               	movlw	0
 11043  0DE9  3D35               	addwfc	??_compensate_humidity+3,w
 11044  0DEA  00A7               	movwf	___aldiv@dividend+3
 11045  0DEB  3194  2493  318D   	fcall	___aldiv
 11046  0DEE  0140               	movlb	0	; select bank0
 11047  0DEF  0823               	movf	?___aldiv+3,w
 11048  0DF0  00D6               	movwf	compensate_humidity@var5+3
 11049  0DF1  0822               	movf	?___aldiv+2,w
 11050  0DF2  00D5               	movwf	compensate_humidity@var5+2
 11051  0DF3  0821               	movf	?___aldiv+1,w
 11052  0DF4  00D4               	movwf	compensate_humidity@var5+1
 11053  0DF5  0820               	movf	?___aldiv,w
 11054  0DF6  00D3               	movwf	compensate_humidity@var5
 11055                           
 11056                           ;BME280_driver/bme280.c: 1284:     var2 = (var1 * ((int32_t)calib_data->dig_H6)) / 1024;
 11057  0DF7  3000               	movlw	0
 11058  0DF8  00A3               	movwf	___aldiv@divisor+3
 11059  0DF9  3000               	movlw	0
 11060  0DFA  00A2               	movwf	___aldiv@divisor+2
 11061  0DFB  3004               	movlw	4
 11062  0DFC  00A1               	movwf	___aldiv@divisor+1
 11063  0DFD  3000               	movlw	0
 11064  0DFE  00A0               	movwf	___aldiv@divisor
 11065  0DFF  082E               	movf	compensate_humidity@calib_data,w
 11066  0E00  3E20               	addlw	32
 11067  0E01  0086               	movwf	6
 11068  0E02  3001               	movlw	1	; select bank2/3
 11069  0E03  0087               	movwf	7
 11070  0E04  0801               	movf	1,w
 11071  0E05  00F0               	movwf	___lmul@multiplier
 11072  0E06  3980               	andlw	128
 11073  0E07  1D03               	skipz
 11074  0E08  30FF               	movlw	255
 11075  0E09  00F1               	movwf	___lmul@multiplier+1
 11076  0E0A  00F2               	movwf	___lmul@multiplier+2
 11077  0E0B  00F3               	movwf	___lmul@multiplier+3
 11078  0E0C  084A               	movf	compensate_humidity@var1+3,w
 11079  0E0D  00F7               	movwf	___lmul@multiplicand+3
 11080  0E0E  0849               	movf	compensate_humidity@var1+2,w
 11081  0E0F  00F6               	movwf	___lmul@multiplicand+2
 11082  0E10  0848               	movf	compensate_humidity@var1+1,w
 11083  0E11  00F5               	movwf	___lmul@multiplicand+1
 11084  0E12  0847               	movf	compensate_humidity@var1,w
 11085  0E13  00F4               	movwf	___lmul@multiplicand
 11086  0E14  319A  221F  318D   	fcall	___lmul
 11087  0E17  0873               	movf	?___lmul+3,w
 11088  0E18  0140               	movlb	0	; select bank0
 11089  0E19  00A7               	movwf	___aldiv@dividend+3
 11090  0E1A  0872               	movf	?___lmul+2,w
 11091  0E1B  00A6               	movwf	___aldiv@dividend+2
 11092  0E1C  0871               	movf	?___lmul+1,w
 11093  0E1D  00A5               	movwf	___aldiv@dividend+1
 11094  0E1E  0870               	movf	?___lmul,w
 11095  0E1F  00A4               	movwf	___aldiv@dividend
 11096  0E20  3194  2493  318D   	fcall	___aldiv
 11097  0E23  0140               	movlb	0	; select bank0
 11098  0E24  0823               	movf	?___aldiv+3,w
 11099  0E25  00CE               	movwf	compensate_humidity@var2+3
 11100  0E26  0822               	movf	?___aldiv+2,w
 11101  0E27  00CD               	movwf	compensate_humidity@var2+2
 11102  0E28  0821               	movf	?___aldiv+1,w
 11103  0E29  00CC               	movwf	compensate_humidity@var2+1
 11104  0E2A  0820               	movf	?___aldiv,w
 11105  0E2B  00CB               	movwf	compensate_humidity@var2
 11106                           
 11107                           ;BME280_driver/bme280.c: 1285:     var3 = (var1 * ((int32_t)calib_data->dig_H3)) / 2048;
 11108  0E2C  3000               	movlw	0
 11109  0E2D  00A3               	movwf	___aldiv@divisor+3
 11110  0E2E  3000               	movlw	0
 11111  0E2F  00A2               	movwf	___aldiv@divisor+2
 11112  0E30  3008               	movlw	8
 11113  0E31  00A1               	movwf	___aldiv@divisor+1
 11114  0E32  3000               	movlw	0
 11115  0E33  00A0               	movwf	___aldiv@divisor
 11116  0E34  082E               	movf	compensate_humidity@calib_data,w
 11117  0E35  3E1B               	addlw	27
 11118  0E36  0086               	movwf	6
 11119  0E37  3001               	movlw	1	; select bank2/3
 11120  0E38  0087               	movwf	7
 11121  0E39  0801               	movf	1,w
 11122  0E3A  00B2               	movwf	??_compensate_humidity
 11123  0E3B  01B3               	clrf	??_compensate_humidity+1
 11124  0E3C  01B4               	clrf	??_compensate_humidity+2
 11125  0E3D  01B5               	clrf	??_compensate_humidity+3
 11126  0E3E  0835               	movf	??_compensate_humidity+3,w
 11127  0E3F  00F3               	movwf	___lmul@multiplier+3
 11128  0E40  0834               	movf	??_compensate_humidity+2,w
 11129  0E41  00F2               	movwf	___lmul@multiplier+2
 11130  0E42  0833               	movf	??_compensate_humidity+1,w
 11131  0E43  00F1               	movwf	___lmul@multiplier+1
 11132  0E44  0832               	movf	??_compensate_humidity,w
 11133  0E45  00F0               	movwf	___lmul@multiplier
 11134  0E46  084A               	movf	compensate_humidity@var1+3,w
 11135  0E47  00F7               	movwf	___lmul@multiplicand+3
 11136  0E48  0849               	movf	compensate_humidity@var1+2,w
 11137  0E49  00F6               	movwf	___lmul@multiplicand+2
 11138  0E4A  0848               	movf	compensate_humidity@var1+1,w
 11139  0E4B  00F5               	movwf	___lmul@multiplicand+1
 11140  0E4C  0847               	movf	compensate_humidity@var1,w
 11141  0E4D  00F4               	movwf	___lmul@multiplicand
 11142  0E4E  319A  221F  318D   	fcall	___lmul
 11143  0E51  0873               	movf	?___lmul+3,w
 11144  0E52  0140               	movlb	0	; select bank0
 11145  0E53  00A7               	movwf	___aldiv@dividend+3
 11146  0E54  0872               	movf	?___lmul+2,w
 11147  0E55  00A6               	movwf	___aldiv@dividend+2
 11148  0E56  0871               	movf	?___lmul+1,w
 11149  0E57  00A5               	movwf	___aldiv@dividend+1
 11150  0E58  0870               	movf	?___lmul,w
 11151  0E59  00A4               	movwf	___aldiv@dividend
 11152  0E5A  3194  2493  318D   	fcall	___aldiv
 11153  0E5D  0140               	movlb	0	; select bank0
 11154  0E5E  0823               	movf	?___aldiv+3,w
 11155  0E5F  00DA               	movwf	compensate_humidity@var3+3
 11156  0E60  0822               	movf	?___aldiv+2,w
 11157  0E61  00D9               	movwf	compensate_humidity@var3+2
 11158  0E62  0821               	movf	?___aldiv+1,w
 11159  0E63  00D8               	movwf	compensate_humidity@var3+1
 11160  0E64  0820               	movf	?___aldiv,w
 11161  0E65  00D7               	movwf	compensate_humidity@var3
 11162                           
 11163                           ;BME280_driver/bme280.c: 1286:     var4 = ((var2 * (var3 + (int32_t)32768)) / 1024) + (i
      +                          nt32_t)2097152;
 11164  0E66  3000               	movlw	0
 11165  0E67  00A3               	movwf	___aldiv@divisor+3
 11166  0E68  3000               	movlw	0
 11167  0E69  00A2               	movwf	___aldiv@divisor+2
 11168  0E6A  3004               	movlw	4
 11169  0E6B  00A1               	movwf	___aldiv@divisor+1
 11170  0E6C  3000               	movlw	0
 11171  0E6D  00A0               	movwf	___aldiv@divisor
 11172  0E6E  3000               	movlw	0
 11173  0E6F  0757               	addwf	compensate_humidity@var3,w
 11174  0E70  00F0               	movwf	___lmul@multiplier
 11175  0E71  3080               	movlw	128
 11176  0E72  3D58               	addwfc	compensate_humidity@var3+1,w
 11177  0E73  00F1               	movwf	___lmul@multiplier+1
 11178  0E74  3000               	movlw	0
 11179  0E75  3D59               	addwfc	compensate_humidity@var3+2,w
 11180  0E76  00F2               	movwf	___lmul@multiplier+2
 11181  0E77  3000               	movlw	0
 11182  0E78  3D5A               	addwfc	compensate_humidity@var3+3,w
 11183  0E79  00F3               	movwf	___lmul@multiplier+3
 11184  0E7A  084E               	movf	compensate_humidity@var2+3,w
 11185  0E7B  00F7               	movwf	___lmul@multiplicand+3
 11186  0E7C  084D               	movf	compensate_humidity@var2+2,w
 11187  0E7D  00F6               	movwf	___lmul@multiplicand+2
 11188  0E7E  084C               	movf	compensate_humidity@var2+1,w
 11189  0E7F  00F5               	movwf	___lmul@multiplicand+1
 11190  0E80  084B               	movf	compensate_humidity@var2,w
 11191  0E81  00F4               	movwf	___lmul@multiplicand
 11192  0E82  319A  221F  318D   	fcall	___lmul
 11193  0E85  0873               	movf	?___lmul+3,w
 11194  0E86  0140               	movlb	0	; select bank0
 11195  0E87  00A7               	movwf	___aldiv@dividend+3
 11196  0E88  0872               	movf	?___lmul+2,w
 11197  0E89  00A6               	movwf	___aldiv@dividend+2
 11198  0E8A  0871               	movf	?___lmul+1,w
 11199  0E8B  00A5               	movwf	___aldiv@dividend+1
 11200  0E8C  0870               	movf	?___lmul,w
 11201  0E8D  00A4               	movwf	___aldiv@dividend
 11202  0E8E  3194  2493  318D   	fcall	___aldiv
 11203  0E91  3000               	movlw	0
 11204  0E92  0140               	movlb	0	; select bank0
 11205  0E93  0720               	addwf	?___aldiv,w
 11206  0E94  00CF               	movwf	compensate_humidity@var4
 11207  0E95  3000               	movlw	0
 11208  0E96  3D21               	addwfc	?___aldiv+1,w
 11209  0E97  00D0               	movwf	compensate_humidity@var4+1
 11210  0E98  3020               	movlw	32
 11211  0E99  3D22               	addwfc	?___aldiv+2,w
 11212  0E9A  00D1               	movwf	compensate_humidity@var4+2
 11213  0E9B  3000               	movlw	0
 11214  0E9C  3D23               	addwfc	?___aldiv+3,w
 11215  0E9D  00D2               	movwf	compensate_humidity@var4+3
 11216                           
 11217                           ;BME280_driver/bme280.c: 1287:     var2 = ((var4 * ((int32_t)calib_data->dig_H2)) + 8192
      +                          ) / 16384;
 11218  0E9E  3000               	movlw	0
 11219  0E9F  00A3               	movwf	___aldiv@divisor+3
 11220  0EA0  3000               	movlw	0
 11221  0EA1  00A2               	movwf	___aldiv@divisor+2
 11222  0EA2  3040               	movlw	64
 11223  0EA3  00A1               	movwf	___aldiv@divisor+1
 11224  0EA4  3000               	movlw	0
 11225  0EA5  00A0               	movwf	___aldiv@divisor
 11226  0EA6  3000               	movlw	0
 11227  0EA7  00B2               	movwf	??_compensate_humidity
 11228  0EA8  3020               	movlw	32
 11229  0EA9  00B3               	movwf	??_compensate_humidity+1
 11230  0EAA  3000               	movlw	0
 11231  0EAB  00B4               	movwf	??_compensate_humidity+2
 11232  0EAC  3000               	movlw	0
 11233  0EAD  00B5               	movwf	??_compensate_humidity+3
 11234  0EAE  082E               	movf	compensate_humidity@calib_data,w
 11235  0EAF  3E19               	addlw	25
 11236  0EB0  0086               	movwf	6
 11237  0EB1  3001               	movlw	1	; select bank2/3
 11238  0EB2  0087               	movwf	7
 11239  0EB3  3F40               	moviw [0]fsr1
 11240  0EB4  00B6               	movwf	??_compensate_humidity+4
 11241  0EB5  3F41               	moviw [1]fsr1
 11242  0EB6  00B7               	movwf	??_compensate_humidity+5
 11243  0EB7  0836               	movf	??_compensate_humidity+4,w
 11244  0EB8  00F0               	movwf	___lmul@multiplier
 11245  0EB9  0837               	movf	??_compensate_humidity+5,w
 11246  0EBA  00F1               	movwf	___lmul@multiplier+1
 11247  0EBB  0D89               	rlf	9,f
 11248  0EBC  3B89               	subwfb	9,f
 11249  0EBD  0989               	comf	9,f
 11250  0EBE  00F2               	movwf	___lmul@multiplier+2
 11251  0EBF  00F3               	movwf	___lmul@multiplier+3
 11252  0EC0  0852               	movf	compensate_humidity@var4+3,w
 11253  0EC1  00F7               	movwf	___lmul@multiplicand+3
 11254  0EC2  0851               	movf	compensate_humidity@var4+2,w
 11255  0EC3  00F6               	movwf	___lmul@multiplicand+2
 11256  0EC4  0850               	movf	compensate_humidity@var4+1,w
 11257  0EC5  00F5               	movwf	___lmul@multiplicand+1
 11258  0EC6  084F               	movf	compensate_humidity@var4,w
 11259  0EC7  00F4               	movwf	___lmul@multiplicand
 11260  0EC8  319A  221F  318D   	fcall	___lmul
 11261  0ECB  0870               	movf	?___lmul,w
 11262  0ECC  0140               	movlb	0	; select bank0
 11263  0ECD  07B2               	addwf	??_compensate_humidity,f
 11264  0ECE  0871               	movf	?___lmul+1,w
 11265  0ECF  3DB3               	addwfc	??_compensate_humidity+1,f
 11266  0ED0  0872               	movf	?___lmul+2,w
 11267  0ED1  3DB4               	addwfc	??_compensate_humidity+2,f
 11268  0ED2  0873               	movf	?___lmul+3,w
 11269  0ED3  3DB5               	addwfc	??_compensate_humidity+3,f
 11270  0ED4  0835               	movf	??_compensate_humidity+3,w
 11271  0ED5  00A7               	movwf	___aldiv@dividend+3
 11272  0ED6  0834               	movf	??_compensate_humidity+2,w
 11273  0ED7  00A6               	movwf	___aldiv@dividend+2
 11274  0ED8  0833               	movf	??_compensate_humidity+1,w
 11275  0ED9  00A5               	movwf	___aldiv@dividend+1
 11276  0EDA  0832               	movf	??_compensate_humidity,w
 11277  0EDB  00A4               	movwf	___aldiv@dividend
 11278  0EDC  3194  2493  318D   	fcall	___aldiv
 11279  0EDF  0140               	movlb	0	; select bank0
 11280  0EE0  0823               	movf	?___aldiv+3,w
 11281  0EE1  00CE               	movwf	compensate_humidity@var2+3
 11282  0EE2  0822               	movf	?___aldiv+2,w
 11283  0EE3  00CD               	movwf	compensate_humidity@var2+2
 11284  0EE4  0821               	movf	?___aldiv+1,w
 11285  0EE5  00CC               	movwf	compensate_humidity@var2+1
 11286  0EE6  0820               	movf	?___aldiv,w
 11287  0EE7  00CB               	movwf	compensate_humidity@var2
 11288                           
 11289                           ;BME280_driver/bme280.c: 1288:     var3 = var5 * var2;
 11290  0EE8  0856               	movf	compensate_humidity@var5+3,w
 11291  0EE9  00F3               	movwf	___lmul@multiplier+3
 11292  0EEA  0855               	movf	compensate_humidity@var5+2,w
 11293  0EEB  00F2               	movwf	___lmul@multiplier+2
 11294  0EEC  0854               	movf	compensate_humidity@var5+1,w
 11295  0EED  00F1               	movwf	___lmul@multiplier+1
 11296  0EEE  0853               	movf	compensate_humidity@var5,w
 11297  0EEF  00F0               	movwf	___lmul@multiplier
 11298  0EF0  084E               	movf	compensate_humidity@var2+3,w
 11299  0EF1  00F7               	movwf	___lmul@multiplicand+3
 11300  0EF2  084D               	movf	compensate_humidity@var2+2,w
 11301  0EF3  00F6               	movwf	___lmul@multiplicand+2
 11302  0EF4  084C               	movf	compensate_humidity@var2+1,w
 11303  0EF5  00F5               	movwf	___lmul@multiplicand+1
 11304  0EF6  084B               	movf	compensate_humidity@var2,w
 11305  0EF7  00F4               	movwf	___lmul@multiplicand
 11306  0EF8  319A  221F  318D   	fcall	___lmul
 11307  0EFB  0873               	movf	?___lmul+3,w
 11308  0EFC  0140               	movlb	0	; select bank0
 11309  0EFD  00DA               	movwf	compensate_humidity@var3+3
 11310  0EFE  0872               	movf	?___lmul+2,w
 11311  0EFF  00D9               	movwf	compensate_humidity@var3+2
 11312  0F00  0871               	movf	?___lmul+1,w
 11313  0F01  00D8               	movwf	compensate_humidity@var3+1
 11314  0F02  0870               	movf	?___lmul,w
 11315  0F03  00D7               	movwf	compensate_humidity@var3
 11316                           
 11317                           ;BME280_driver/bme280.c: 1289:     var4 = ((var3 / 32768) * (var3 / 32768)) / 128;
 11318  0F04  3000               	movlw	0
 11319  0F05  00A3               	movwf	___aldiv@divisor+3
 11320  0F06  3000               	movlw	0
 11321  0F07  00A2               	movwf	___aldiv@divisor+2
 11322  0F08  3080               	movlw	128
 11323  0F09  00A1               	movwf	___aldiv@divisor+1
 11324  0F0A  3000               	movlw	0
 11325  0F0B  00A0               	movwf	___aldiv@divisor
 11326  0F0C  085A               	movf	compensate_humidity@var3+3,w
 11327  0F0D  00A7               	movwf	___aldiv@dividend+3
 11328  0F0E  0859               	movf	compensate_humidity@var3+2,w
 11329  0F0F  00A6               	movwf	___aldiv@dividend+2
 11330  0F10  0858               	movf	compensate_humidity@var3+1,w
 11331  0F11  00A5               	movwf	___aldiv@dividend+1
 11332  0F12  0857               	movf	compensate_humidity@var3,w
 11333  0F13  00A4               	movwf	___aldiv@dividend
 11334  0F14  3194  2493  318D   	fcall	___aldiv
 11335  0F17  0140               	movlb	0	; select bank0
 11336  0F18  0823               	movf	?___aldiv+3,w
 11337  0F19  00F3               	movwf	___lmul@multiplier+3
 11338  0F1A  0822               	movf	?___aldiv+2,w
 11339  0F1B  00F2               	movwf	___lmul@multiplier+2
 11340  0F1C  0821               	movf	?___aldiv+1,w
 11341  0F1D  00F1               	movwf	___lmul@multiplier+1
 11342  0F1E  0820               	movf	?___aldiv,w
 11343  0F1F  00F0               	movwf	___lmul@multiplier
 11344  0F20  3000               	movlw	0
 11345  0F21  00A3               	movwf	___aldiv@divisor+3
 11346  0F22  3000               	movlw	0
 11347  0F23  00A2               	movwf	___aldiv@divisor+2
 11348  0F24  3080               	movlw	128
 11349  0F25  00A1               	movwf	___aldiv@divisor+1
 11350  0F26  3000               	movlw	0
 11351  0F27  00A0               	movwf	___aldiv@divisor
 11352  0F28  085A               	movf	compensate_humidity@var3+3,w
 11353  0F29  00A7               	movwf	___aldiv@dividend+3
 11354  0F2A  0859               	movf	compensate_humidity@var3+2,w
 11355  0F2B  00A6               	movwf	___aldiv@dividend+2
 11356  0F2C  0858               	movf	compensate_humidity@var3+1,w
 11357  0F2D  00A5               	movwf	___aldiv@dividend+1
 11358  0F2E  0857               	movf	compensate_humidity@var3,w
 11359  0F2F  00A4               	movwf	___aldiv@dividend
 11360  0F30  3194  2493  318D   	fcall	___aldiv
 11361  0F33  0140               	movlb	0	; select bank0
 11362  0F34  0823               	movf	?___aldiv+3,w
 11363  0F35  00F7               	movwf	___lmul@multiplicand+3
 11364  0F36  0822               	movf	?___aldiv+2,w
 11365  0F37  00F6               	movwf	___lmul@multiplicand+2
 11366  0F38  0821               	movf	?___aldiv+1,w
 11367  0F39  00F5               	movwf	___lmul@multiplicand+1
 11368  0F3A  0820               	movf	?___aldiv,w
 11369  0F3B  00F4               	movwf	___lmul@multiplicand
 11370  0F3C  319A  221F  318D   	fcall	___lmul
 11371  0F3F  0873               	movf	?___lmul+3,w
 11372  0F40  0140               	movlb	0	; select bank0
 11373  0F41  00BD               	movwf	_compensate_humidity$2691+3
 11374  0F42  0872               	movf	?___lmul+2,w
 11375  0F43  00BC               	movwf	_compensate_humidity$2691+2
 11376  0F44  0871               	movf	?___lmul+1,w
 11377  0F45  00BB               	movwf	_compensate_humidity$2691+1
 11378  0F46  0870               	movf	?___lmul,w
 11379  0F47  00BA               	movwf	_compensate_humidity$2691
 11380                           
 11381                           ;BME280_driver/bme280.c: 1289:     var4 = ((var3 / 32768) * (var3 / 32768)) / 128;
 11382  0F48  3000               	movlw	0
 11383  0F49  00A3               	movwf	___aldiv@divisor+3
 11384  0F4A  3000               	movlw	0
 11385  0F4B  00A2               	movwf	___aldiv@divisor+2
 11386  0F4C  3000               	movlw	0
 11387  0F4D  00A1               	movwf	___aldiv@divisor+1
 11388  0F4E  3080               	movlw	128
 11389  0F4F  00A0               	movwf	___aldiv@divisor
 11390  0F50  083D               	movf	_compensate_humidity$2691+3,w
 11391  0F51  00A7               	movwf	___aldiv@dividend+3
 11392  0F52  083C               	movf	_compensate_humidity$2691+2,w
 11393  0F53  00A6               	movwf	___aldiv@dividend+2
 11394  0F54  083B               	movf	_compensate_humidity$2691+1,w
 11395  0F55  00A5               	movwf	___aldiv@dividend+1
 11396  0F56  083A               	movf	_compensate_humidity$2691,w
 11397  0F57  00A4               	movwf	___aldiv@dividend
 11398  0F58  3194  2493  318D   	fcall	___aldiv
 11399  0F5B  0140               	movlb	0	; select bank0
 11400  0F5C  0823               	movf	?___aldiv+3,w
 11401  0F5D  00D2               	movwf	compensate_humidity@var4+3
 11402  0F5E  0822               	movf	?___aldiv+2,w
 11403  0F5F  00D1               	movwf	compensate_humidity@var4+2
 11404  0F60  0821               	movf	?___aldiv+1,w
 11405  0F61  00D0               	movwf	compensate_humidity@var4+1
 11406  0F62  0820               	movf	?___aldiv,w
 11407  0F63  00CF               	movwf	compensate_humidity@var4
 11408                           
 11409                           ;BME280_driver/bme280.c: 1290:     var5 = var3 - ((var4 * ((int32_t)calib_data->dig_H1))
      +                           / 16);
 11410  0F64  3000               	movlw	0
 11411  0F65  00A3               	movwf	___aldiv@divisor+3
 11412  0F66  3000               	movlw	0
 11413  0F67  00A2               	movwf	___aldiv@divisor+2
 11414  0F68  3000               	movlw	0
 11415  0F69  00A1               	movwf	___aldiv@divisor+1
 11416  0F6A  3010               	movlw	16
 11417  0F6B  00A0               	movwf	___aldiv@divisor
 11418  0F6C  082E               	movf	compensate_humidity@calib_data,w
 11419  0F6D  3E18               	addlw	24
 11420  0F6E  0086               	movwf	6
 11421  0F6F  3001               	movlw	1	; select bank2/3
 11422  0F70  0087               	movwf	7
 11423  0F71  0801               	movf	1,w
 11424  0F72  00B2               	movwf	??_compensate_humidity
 11425  0F73  01B3               	clrf	??_compensate_humidity+1
 11426  0F74  01B4               	clrf	??_compensate_humidity+2
 11427  0F75  01B5               	clrf	??_compensate_humidity+3
 11428  0F76  0835               	movf	??_compensate_humidity+3,w
 11429  0F77  00F3               	movwf	___lmul@multiplier+3
 11430  0F78  0834               	movf	??_compensate_humidity+2,w
 11431  0F79  00F2               	movwf	___lmul@multiplier+2
 11432  0F7A  0833               	movf	??_compensate_humidity+1,w
 11433  0F7B  00F1               	movwf	___lmul@multiplier+1
 11434  0F7C  0832               	movf	??_compensate_humidity,w
 11435  0F7D  00F0               	movwf	___lmul@multiplier
 11436  0F7E  0852               	movf	compensate_humidity@var4+3,w
 11437  0F7F  00F7               	movwf	___lmul@multiplicand+3
 11438  0F80  0851               	movf	compensate_humidity@var4+2,w
 11439  0F81  00F6               	movwf	___lmul@multiplicand+2
 11440  0F82  0850               	movf	compensate_humidity@var4+1,w
 11441  0F83  00F5               	movwf	___lmul@multiplicand+1
 11442  0F84  084F               	movf	compensate_humidity@var4,w
 11443  0F85  00F4               	movwf	___lmul@multiplicand
 11444  0F86  319A  221F  318D   	fcall	___lmul
 11445  0F89  0873               	movf	?___lmul+3,w
 11446  0F8A  0140               	movlb	0	; select bank0
 11447  0F8B  00A7               	movwf	___aldiv@dividend+3
 11448  0F8C  0872               	movf	?___lmul+2,w
 11449  0F8D  00A6               	movwf	___aldiv@dividend+2
 11450  0F8E  0871               	movf	?___lmul+1,w
 11451  0F8F  00A5               	movwf	___aldiv@dividend+1
 11452  0F90  0870               	movf	?___lmul,w
 11453  0F91  00A4               	movwf	___aldiv@dividend
 11454  0F92  3194  2493  318D   	fcall	___aldiv
 11455  0F95  0140               	movlb	0	; select bank0
 11456  0F96  0820               	movf	?___aldiv,w
 11457  0F97  0257               	subwf	compensate_humidity@var3,w
 11458  0F98  00B6               	movwf	??_compensate_humidity+4
 11459  0F99  0821               	movf	?___aldiv+1,w
 11460  0F9A  3B58               	subwfb	compensate_humidity@var3+1,w
 11461  0F9B  00B7               	movwf	??_compensate_humidity+5
 11462  0F9C  0822               	movf	?___aldiv+2,w
 11463  0F9D  3B59               	subwfb	compensate_humidity@var3+2,w
 11464  0F9E  00B8               	movwf	??_compensate_humidity+6
 11465  0F9F  0823               	movf	?___aldiv+3,w
 11466  0FA0  3B5A               	subwfb	compensate_humidity@var3+3,w
 11467  0FA1  00B9               	movwf	??_compensate_humidity+7
 11468  0FA2  0839               	movf	??_compensate_humidity+7,w
 11469  0FA3  00D6               	movwf	compensate_humidity@var5+3
 11470  0FA4  0838               	movf	??_compensate_humidity+6,w
 11471  0FA5  00D5               	movwf	compensate_humidity@var5+2
 11472  0FA6  0837               	movf	??_compensate_humidity+5,w
 11473  0FA7  00D4               	movwf	compensate_humidity@var5+1
 11474  0FA8  0836               	movf	??_compensate_humidity+4,w
 11475  0FA9  00D3               	movwf	compensate_humidity@var5
 11476                           
 11477                           ;BME280_driver/bme280.c: 1291:     var5 = (var5 < 0 ? 0 : var5);
 11478  0FAA  1FD6               	btfss	compensate_humidity@var5+3,7
 11479  0FAB  2FB4               	goto	l3938
 11480  0FAC  3000               	movlw	0
 11481  0FAD  00D6               	movwf	compensate_humidity@var5+3
 11482  0FAE  3000               	movlw	0
 11483  0FAF  00D5               	movwf	compensate_humidity@var5+2
 11484  0FB0  3000               	movlw	0
 11485  0FB1  00D4               	movwf	compensate_humidity@var5+1
 11486  0FB2  3000               	movlw	0
 11487  0FB3  00D3               	movwf	compensate_humidity@var5
 11488  0FB4                     l3938:	
 11489                           
 11490                           ;BME280_driver/bme280.c: 1292:     var5 = (var5 > 419430400 ? 419430400 : var5);
 11491  0FB4  1BD6               	btfsc	compensate_humidity@var5+3,7
 11492  0FB5  2FC8               	goto	l3944
 11493  0FB6  3001               	movlw	1
 11494  0FB7  0253               	subwf	compensate_humidity@var5,w
 11495  0FB8  3000               	movlw	0
 11496  0FB9  3B54               	subwfb	compensate_humidity@var5+1,w
 11497  0FBA  3000               	movlw	0
 11498  0FBB  3B55               	subwfb	compensate_humidity@var5+2,w
 11499  0FBC  3019               	movlw	25
 11500  0FBD  3B56               	subwfb	compensate_humidity@var5+3,w
 11501  0FBE  1C03               	btfss	3,0
 11502  0FBF  2FC8               	goto	l3944
 11503  0FC0  3019               	movlw	25
 11504  0FC1  00D6               	movwf	compensate_humidity@var5+3
 11505  0FC2  3000               	movlw	0
 11506  0FC3  00D5               	movwf	compensate_humidity@var5+2
 11507  0FC4  3000               	movlw	0
 11508  0FC5  00D4               	movwf	compensate_humidity@var5+1
 11509  0FC6  3000               	movlw	0
 11510  0FC7  00D3               	movwf	compensate_humidity@var5
 11511  0FC8                     l3944:	
 11512                           
 11513                           ;BME280_driver/bme280.c: 1293:     humidity = (uint32_t)(var5 / 4096);
 11514  0FC8  3000               	movlw	0
 11515  0FC9  00A3               	movwf	___aldiv@divisor+3
 11516  0FCA  3000               	movlw	0
 11517  0FCB  00A2               	movwf	___aldiv@divisor+2
 11518  0FCC  3010               	movlw	16
 11519  0FCD  00A1               	movwf	___aldiv@divisor+1
 11520  0FCE  3000               	movlw	0
 11521  0FCF  00A0               	movwf	___aldiv@divisor
 11522  0FD0  0856               	movf	compensate_humidity@var5+3,w
 11523  0FD1  00A7               	movwf	___aldiv@dividend+3
 11524  0FD2  0855               	movf	compensate_humidity@var5+2,w
 11525  0FD3  00A6               	movwf	___aldiv@dividend+2
 11526  0FD4  0854               	movf	compensate_humidity@var5+1,w
 11527  0FD5  00A5               	movwf	___aldiv@dividend+1
 11528  0FD6  0853               	movf	compensate_humidity@var5,w
 11529  0FD7  00A4               	movwf	___aldiv@dividend
 11530  0FD8  3194  2493  318D   	fcall	___aldiv
 11531  0FDB  0140               	movlb	0	; select bank0
 11532  0FDC  0823               	movf	?___aldiv+3,w
 11533  0FDD  00C6               	movwf	compensate_humidity@humidity+3
 11534  0FDE  0822               	movf	?___aldiv+2,w
 11535  0FDF  00C5               	movwf	compensate_humidity@humidity+2
 11536  0FE0  0821               	movf	?___aldiv+1,w
 11537  0FE1  00C4               	movwf	compensate_humidity@humidity+1
 11538  0FE2  0820               	movf	?___aldiv,w
 11539  0FE3  00C3               	movwf	compensate_humidity@humidity
 11540                           
 11541                           ;BME280_driver/bme280.c: 1294:     if (humidity > humidity_max)
 11542  0FE4  0846               	movf	compensate_humidity@humidity+3,w
 11543  0FE5  1D03               	btfss	3,2
 11544  0FE6  2FEF               	goto	l3948
 11545  0FE7  3001               	movlw	1
 11546  0FE8  0243               	subwf	compensate_humidity@humidity,w
 11547  0FE9  3090               	movlw	144
 11548  0FEA  3B44               	subwfb	compensate_humidity@humidity+1,w
 11549  0FEB  3001               	movlw	1
 11550  0FEC  3B45               	subwfb	compensate_humidity@humidity+2,w
 11551  0FED  1C03               	btfss	3,0
 11552  0FEE  2FF7               	goto	l208
 11553  0FEF                     l3948:	
 11554                           
 11555                           ;BME280_driver/bme280.c: 1295:     {;BME280_driver/bme280.c: 1296:         humidity = hu
      +                          midity_max;
 11556  0FEF  3000               	movlw	0
 11557  0FF0  00C6               	movwf	compensate_humidity@humidity+3
 11558  0FF1  3001               	movlw	1
 11559  0FF2  00C5               	movwf	compensate_humidity@humidity+2
 11560  0FF3  3090               	movlw	144
 11561  0FF4  00C4               	movwf	compensate_humidity@humidity+1
 11562  0FF5  3000               	movlw	0
 11563  0FF6  00C3               	movwf	compensate_humidity@humidity
 11564  0FF7                     l208:	
 11565                           ;BME280_driver/bme280.c: 1297:     }
 11566                           
 11567                           
 11568                           ;BME280_driver/bme280.c: 1299:     return humidity;
 11569  0FF7  0846               	movf	compensate_humidity@humidity+3,w
 11570  0FF8  00B1               	movwf	?_compensate_humidity+3
 11571  0FF9  0845               	movf	compensate_humidity@humidity+2,w
 11572  0FFA  00B0               	movwf	?_compensate_humidity+2
 11573  0FFB  0844               	movf	compensate_humidity@humidity+1,w
 11574  0FFC  00AF               	movwf	?_compensate_humidity+1
 11575  0FFD  0843               	movf	compensate_humidity@humidity,w
 11576  0FFE  00AE               	movwf	?_compensate_humidity
 11577  0FFF  0008               	return
 11578  1000                     __end_of_compensate_humidity:	
 11579                           
 11580                           	psect	text9
 11581  1A1F                     __ptext9:	
 11582 ;; *************** function ___lmul *****************
 11583 ;; Defined at:
 11584 ;;		line 15 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\Umul32.c"
 11585 ;; Parameters:    Size  Location     Type
 11586 ;;  multiplier      4    0[COMMON] unsigned long 
 11587 ;;  multiplicand    4    4[COMMON] unsigned long 
 11588 ;; Auto vars:     Size  Location     Type
 11589 ;;  product         4    8[COMMON] unsigned long 
 11590 ;; Return value:  Size  Location     Type
 11591 ;;                  4    0[COMMON] unsigned long 
 11592 ;; Registers used:
 11593 ;;		wreg, status,2, status,0
 11594 ;; Tracked objects:
 11595 ;;		On entry : 0/0
 11596 ;;		On exit  : 0/0
 11597 ;;		Unchanged: 0/0
 11598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11599 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11600 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11602 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11603 ;;Total ram usage:       12 bytes
 11604 ;; Hardware stack levels used:    1
 11605 ;; Hardware stack levels required when called:    3
 11606 ;; This function calls:
 11607 ;;		Nothing
 11608 ;; This function is called by:
 11609 ;;		_compensate_temperature
 11610 ;;		_compensate_pressure
 11611 ;;		_compensate_humidity
 11612 ;; This function uses a non-reentrant model
 11613 ;;
 11614                           
 11615                           
 11616                           ;psect for function ___lmul
 11617  1A1F                     ___lmul:	
 11618                           
 11619                           ;incstack = 0
 11620                           ; Regs used in ___lmul: [wreg+status,2+status,0]
 11621  1A1F  3000               	movlw	0
 11622  1A20  00FB               	movwf	___lmul@product+3
 11623  1A21  3000               	movlw	0
 11624  1A22  00FA               	movwf	___lmul@product+2
 11625  1A23  3000               	movlw	0
 11626  1A24  00F9               	movwf	___lmul@product+1
 11627  1A25  3000               	movlw	0
 11628  1A26  00F8               	movwf	___lmul@product
 11629  1A27                     l3674:	
 11630  1A27  1C70               	btfss	___lmul@multiplier,0
 11631  1A28  2A31               	goto	l3678
 11632  1A29  0874               	movf	___lmul@multiplicand,w
 11633  1A2A  07F8               	addwf	___lmul@product,f
 11634  1A2B  0875               	movf	___lmul@multiplicand+1,w
 11635  1A2C  3DF9               	addwfc	___lmul@product+1,f
 11636  1A2D  0876               	movf	___lmul@multiplicand+2,w
 11637  1A2E  3DFA               	addwfc	___lmul@product+2,f
 11638  1A2F  0877               	movf	___lmul@multiplicand+3,w
 11639  1A30  3DFB               	addwfc	___lmul@product+3,f
 11640  1A31                     l3678:	
 11641  1A31  3001               	movlw	1
 11642  1A32                     u2995:	
 11643  1A32  35F4               	lslf	___lmul@multiplicand,f
 11644  1A33  0DF5               	rlf	___lmul@multiplicand+1,f
 11645  1A34  0DF6               	rlf	___lmul@multiplicand+2,f
 11646  1A35  0DF7               	rlf	___lmul@multiplicand+3,f
 11647  1A36  0B89               	decfsz	9,f
 11648  1A37  2A32               	goto	u2995
 11649  1A38  3001               	movlw	1
 11650  1A39                     u3005:	
 11651  1A39  36F3               	lsrf	___lmul@multiplier+3,f
 11652  1A3A  0CF2               	rrf	___lmul@multiplier+2,f
 11653  1A3B  0CF1               	rrf	___lmul@multiplier+1,f
 11654  1A3C  0CF0               	rrf	___lmul@multiplier,f
 11655  1A3D  0B89               	decfsz	9,f
 11656  1A3E  2A39               	goto	u3005
 11657  1A3F  0873               	movf	___lmul@multiplier+3,w
 11658  1A40  0472               	iorwf	___lmul@multiplier+2,w
 11659  1A41  0471               	iorwf	___lmul@multiplier+1,w
 11660  1A42  0470               	iorwf	___lmul@multiplier,w
 11661  1A43  1D03               	skipz
 11662  1A44  2A27               	goto	l3674
 11663  1A45  087B               	movf	___lmul@product+3,w
 11664  1A46  00F3               	movwf	?___lmul+3
 11665  1A47  087A               	movf	___lmul@product+2,w
 11666  1A48  00F2               	movwf	?___lmul+2
 11667  1A49  0879               	movf	___lmul@product+1,w
 11668  1A4A  00F1               	movwf	?___lmul+1
 11669  1A4B  0878               	movf	___lmul@product,w
 11670  1A4C  00F0               	movwf	?___lmul
 11671  1A4D  0008               	return
 11672  1A4E                     __end_of___lmul:	
 11673                           
 11674                           	psect	text10
 11675  1493                     __ptext10:	
 11676 ;; *************** function ___aldiv *****************
 11677 ;; Defined at:
 11678 ;;		line 5 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\aldiv.c"
 11679 ;; Parameters:    Size  Location     Type
 11680 ;;  divisor         4    0[BANK0 ] long 
 11681 ;;  dividend        4    4[BANK0 ] long 
 11682 ;; Auto vars:     Size  Location     Type
 11683 ;;  quotient        4   10[BANK0 ] long 
 11684 ;;  sign            1    9[BANK0 ] unsigned char 
 11685 ;;  counter         1    8[BANK0 ] unsigned char 
 11686 ;; Return value:  Size  Location     Type
 11687 ;;                  4    0[BANK0 ] long 
 11688 ;; Registers used:
 11689 ;;		wreg, status,2, status,0
 11690 ;; Tracked objects:
 11691 ;;		On entry : 0/0
 11692 ;;		On exit  : 0/0
 11693 ;;		Unchanged: 0/0
 11694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11695 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11696 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11697 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11698 ;;      Totals:         1      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11699 ;;Total ram usage:       15 bytes
 11700 ;; Hardware stack levels used:    1
 11701 ;; Hardware stack levels required when called:    3
 11702 ;; This function calls:
 11703 ;;		Nothing
 11704 ;; This function is called by:
 11705 ;;		_compensate_temperature
 11706 ;;		_compensate_pressure
 11707 ;;		_compensate_humidity
 11708 ;; This function uses a non-reentrant model
 11709 ;;
 11710                           
 11711                           
 11712                           ;psect for function ___aldiv
 11713  1493                     ___aldiv:	
 11714                           
 11715                           ;incstack = 0
 11716                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
 11717  1493  0140               	movlb	0	; select bank0
 11718  1494  01A9               	clrf	___aldiv@sign
 11719  1495  1FA3               	btfss	___aldiv@divisor+3,7
 11720  1496  2CA4               	goto	l1119
 11721  1497  09A0               	comf	___aldiv@divisor,f
 11722  1498  09A1               	comf	___aldiv@divisor+1,f
 11723  1499  09A2               	comf	___aldiv@divisor+2,f
 11724  149A  09A3               	comf	___aldiv@divisor+3,f
 11725  149B  0AA0               	incf	___aldiv@divisor,f
 11726  149C  1903               	skipnz
 11727  149D  0AA1               	incf	___aldiv@divisor+1,f
 11728  149E  1903               	skipnz
 11729  149F  0AA2               	incf	___aldiv@divisor+2,f
 11730  14A0  1903               	skipnz
 11731  14A1  0AA3               	incf	___aldiv@divisor+3,f
 11732  14A2  01A9               	clrf	___aldiv@sign
 11733  14A3  0AA9               	incf	___aldiv@sign,f
 11734  14A4                     l1119:	
 11735  14A4  1FA7               	btfss	___aldiv@dividend+3,7
 11736  14A5  2CB5               	goto	l3720
 11737  14A6  09A4               	comf	___aldiv@dividend,f
 11738  14A7  09A5               	comf	___aldiv@dividend+1,f
 11739  14A8  09A6               	comf	___aldiv@dividend+2,f
 11740  14A9  09A7               	comf	___aldiv@dividend+3,f
 11741  14AA  0AA4               	incf	___aldiv@dividend,f
 11742  14AB  1903               	skipnz
 11743  14AC  0AA5               	incf	___aldiv@dividend+1,f
 11744  14AD  1903               	skipnz
 11745  14AE  0AA6               	incf	___aldiv@dividend+2,f
 11746  14AF  1903               	skipnz
 11747  14B0  0AA7               	incf	___aldiv@dividend+3,f
 11748  14B1  3001               	movlw	1
 11749  14B2  00FC               	movwf	??___aldiv
 11750  14B3  087C               	movf	??___aldiv,w
 11751  14B4  06A9               	xorwf	___aldiv@sign,f
 11752  14B5                     l3720:	
 11753  14B5  3000               	movlw	0
 11754  14B6  00AD               	movwf	___aldiv@quotient+3
 11755  14B7  3000               	movlw	0
 11756  14B8  00AC               	movwf	___aldiv@quotient+2
 11757  14B9  3000               	movlw	0
 11758  14BA  00AB               	movwf	___aldiv@quotient+1
 11759  14BB  3000               	movlw	0
 11760  14BC  00AA               	movwf	___aldiv@quotient
 11761  14BD  0823               	movf	___aldiv@divisor+3,w
 11762  14BE  0422               	iorwf	___aldiv@divisor+2,w
 11763  14BF  0421               	iorwf	___aldiv@divisor+1,w
 11764  14C0  0420               	iorwf	___aldiv@divisor,w
 11765  14C1  1903               	skipnz
 11766  14C2  2CFE               	goto	l3742
 11767  14C3  01A8               	clrf	___aldiv@counter
 11768  14C4  0AA8               	incf	___aldiv@counter,f
 11769  14C5                     l3728:	
 11770  14C5  1BA3               	btfsc	___aldiv@divisor+3,7
 11771  14C6  2CD3               	goto	l3730
 11772  14C7  3001               	movlw	1
 11773  14C8                     u3125:	
 11774  14C8  35A0               	lslf	___aldiv@divisor,f
 11775  14C9  0DA1               	rlf	___aldiv@divisor+1,f
 11776  14CA  0DA2               	rlf	___aldiv@divisor+2,f
 11777  14CB  0DA3               	rlf	___aldiv@divisor+3,f
 11778  14CC  0B89               	decfsz	9,f
 11779  14CD  2CC8               	goto	u3125
 11780  14CE  3001               	movlw	1
 11781  14CF  00FC               	movwf	??___aldiv
 11782  14D0  087C               	movf	??___aldiv,w
 11783  14D1  07A8               	addwf	___aldiv@counter,f
 11784  14D2  2CC5               	goto	l3728
 11785  14D3                     l3730:	
 11786  14D3  3001               	movlw	1
 11787  14D4                     u3145:	
 11788  14D4  35AA               	lslf	___aldiv@quotient,f
 11789  14D5  0DAB               	rlf	___aldiv@quotient+1,f
 11790  14D6  0DAC               	rlf	___aldiv@quotient+2,f
 11791  14D7  0DAD               	rlf	___aldiv@quotient+3,f
 11792  14D8  0B89               	decfsz	9,f
 11793  14D9  2CD4               	goto	u3145
 11794  14DA  0823               	movf	___aldiv@divisor+3,w
 11795  14DB  0227               	subwf	___aldiv@dividend+3,w
 11796  14DC  1D03               	skipz
 11797  14DD  2CE8               	goto	u3155
 11798  14DE  0822               	movf	___aldiv@divisor+2,w
 11799  14DF  0226               	subwf	___aldiv@dividend+2,w
 11800  14E0  1D03               	skipz
 11801  14E1  2CE8               	goto	u3155
 11802  14E2  0821               	movf	___aldiv@divisor+1,w
 11803  14E3  0225               	subwf	___aldiv@dividend+1,w
 11804  14E4  1D03               	skipz
 11805  14E5  2CE8               	goto	u3155
 11806  14E6  0820               	movf	___aldiv@divisor,w
 11807  14E7  0224               	subwf	___aldiv@dividend,w
 11808  14E8                     u3155:	
 11809  14E8  1C03               	skipc
 11810  14E9  2CF3               	goto	l3738
 11811  14EA  0820               	movf	___aldiv@divisor,w
 11812  14EB  02A4               	subwf	___aldiv@dividend,f
 11813  14EC  0821               	movf	___aldiv@divisor+1,w
 11814  14ED  3BA5               	subwfb	___aldiv@dividend+1,f
 11815  14EE  0822               	movf	___aldiv@divisor+2,w
 11816  14EF  3BA6               	subwfb	___aldiv@dividend+2,f
 11817  14F0  0823               	movf	___aldiv@divisor+3,w
 11818  14F1  3BA7               	subwfb	___aldiv@dividend+3,f
 11819  14F2  142A               	bsf	___aldiv@quotient,0
 11820  14F3                     l3738:	
 11821  14F3  3001               	movlw	1
 11822  14F4                     u3165:	
 11823  14F4  36A3               	lsrf	___aldiv@divisor+3,f
 11824  14F5  0CA2               	rrf	___aldiv@divisor+2,f
 11825  14F6  0CA1               	rrf	___aldiv@divisor+1,f
 11826  14F7  0CA0               	rrf	___aldiv@divisor,f
 11827  14F8  0B89               	decfsz	9,f
 11828  14F9  2CF4               	goto	u3165
 11829  14FA  3001               	movlw	1
 11830  14FB  02A8               	subwf	___aldiv@counter,f
 11831  14FC  1D03               	btfss	3,2
 11832  14FD  2CD3               	goto	l3730
 11833  14FE                     l3742:	
 11834  14FE  0829               	movf	___aldiv@sign,w
 11835  14FF  1903               	btfsc	3,2
 11836  1500  2D0C               	goto	l3746
 11837  1501  09AA               	comf	___aldiv@quotient,f
 11838  1502  09AB               	comf	___aldiv@quotient+1,f
 11839  1503  09AC               	comf	___aldiv@quotient+2,f
 11840  1504  09AD               	comf	___aldiv@quotient+3,f
 11841  1505  0AAA               	incf	___aldiv@quotient,f
 11842  1506  1903               	skipnz
 11843  1507  0AAB               	incf	___aldiv@quotient+1,f
 11844  1508  1903               	skipnz
 11845  1509  0AAC               	incf	___aldiv@quotient+2,f
 11846  150A  1903               	skipnz
 11847  150B  0AAD               	incf	___aldiv@quotient+3,f
 11848  150C                     l3746:	
 11849  150C  082D               	movf	___aldiv@quotient+3,w
 11850  150D  00A3               	movwf	?___aldiv+3
 11851  150E  082C               	movf	___aldiv@quotient+2,w
 11852  150F  00A2               	movwf	?___aldiv+2
 11853  1510  082B               	movf	___aldiv@quotient+1,w
 11854  1511  00A1               	movwf	?___aldiv+1
 11855  1512  082A               	movf	___aldiv@quotient,w
 11856  1513  00A0               	movwf	?___aldiv
 11857  1514  0008               	return
 11858  1515                     __end_of___aldiv:	
 11859                           
 11860                           	psect	text11
 11861  1004                     __ptext11:	
 11862 ;; *************** function _UIntToString *****************
 11863 ;; Defined at:
 11864 ;;		line 185 in file "main.c"
 11865 ;; Parameters:    Size  Location     Type
 11866 ;;  n               4    9[BANK0 ] unsigned long 
 11867 ;;  dest            1   13[BANK0 ] PTR unsigned char 
 11868 ;;		 -> main@convertedNumber(16), 
 11869 ;; Auto vars:     Size  Location     Type
 11870 ;;  i               2   16[BANK0 ] int 
 11871 ;; Return value:  Size  Location     Type
 11872 ;;                  1    wreg      void 
 11873 ;; Registers used:
 11874 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11875 ;; Tracked objects:
 11876 ;;		On entry : 0/0
 11877 ;;		On exit  : 0/0
 11878 ;;		Unchanged: 0/0
 11879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11880 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11881 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11882 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11883 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11884 ;;Total ram usage:        9 bytes
 11885 ;; Hardware stack levels used:    1
 11886 ;; Hardware stack levels required when called:    5
 11887 ;; This function calls:
 11888 ;;		_ReverseString
 11889 ;;		___lldiv
 11890 ;;		___llmod
 11891 ;; This function is called by:
 11892 ;;		_main
 11893 ;; This function uses a non-reentrant model
 11894 ;;
 11895                           
 11896                           
 11897                           ;psect for function _UIntToString
 11898  1004                     _UIntToString:	
 11899                           
 11900                           ;main.c: 185: void UIntToString(uint32_t n, char* dest);main.c: 186: {;main.c: 187:     
      +                          int i = 0;
 11901                           
 11902                           ;incstack = 0
 11903                           ; Regs used in _UIntToString: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11904  1004  0140               	movlb	0	; select bank0
 11905  1005  01B0               	clrf	UIntToString@i
 11906  1006  01B1               	clrf	UIntToString@i+1
 11907  1007                     l4628:	
 11908                           
 11909                           ;main.c: 192:         dest[i++] = n % 10 + '0';
 11910  1007  3000               	movlw	0
 11911  1008  00F3               	movwf	___llmod@divisor+3
 11912  1009  3000               	movlw	0
 11913  100A  00F2               	movwf	___llmod@divisor+2
 11914  100B  3000               	movlw	0
 11915  100C  00F1               	movwf	___llmod@divisor+1
 11916  100D  300A               	movlw	10
 11917  100E  00F0               	movwf	___llmod@divisor
 11918  100F  082C               	movf	UIntToString@n+3,w
 11919  1010  00F7               	movwf	___llmod@dividend+3
 11920  1011  082B               	movf	UIntToString@n+2,w
 11921  1012  00F6               	movwf	___llmod@dividend+2
 11922  1013  082A               	movf	UIntToString@n+1,w
 11923  1014  00F5               	movwf	___llmod@dividend+1
 11924  1015  0829               	movf	UIntToString@n,w
 11925  1016  00F4               	movwf	___llmod@dividend
 11926  1017  319B  23E6  3190   	fcall	___llmod
 11927  101A  0870               	movf	?___llmod,w
 11928  101B  3E30               	addlw	48
 11929  101C  0140               	movlb	0	; select bank0
 11930  101D  00AE               	movwf	??_UIntToString
 11931  101E  0830               	movf	UIntToString@i,w
 11932  101F  072D               	addwf	UIntToString@dest,w
 11933  1020  00AF               	movwf	??_UIntToString+1
 11934  1021  082F               	movf	??_UIntToString+1,w
 11935  1022  0086               	movwf	6
 11936  1023  3001               	movlw	1	; select bank2/3
 11937  1024  0087               	movwf	7
 11938  1025  082E               	movf	??_UIntToString,w
 11939  1026  0081               	movwf	1
 11940  1027  3001               	movlw	1
 11941  1028  07B0               	addwf	UIntToString@i,f
 11942  1029  3000               	movlw	0
 11943  102A  3DB1               	addwfc	UIntToString@i+1,f
 11944                           
 11945                           ;main.c: 194:     } while ((n /= 10) > 0);
 11946  102B  3000               	movlw	0
 11947  102C  00F3               	movwf	___lldiv@divisor+3
 11948  102D  3000               	movlw	0
 11949  102E  00F2               	movwf	___lldiv@divisor+2
 11950  102F  3000               	movlw	0
 11951  1030  00F1               	movwf	___lldiv@divisor+1
 11952  1031  300A               	movlw	10
 11953  1032  00F0               	movwf	___lldiv@divisor
 11954  1033  082C               	movf	UIntToString@n+3,w
 11955  1034  00F7               	movwf	___lldiv@dividend+3
 11956  1035  082B               	movf	UIntToString@n+2,w
 11957  1036  00F6               	movwf	___lldiv@dividend+2
 11958  1037  082A               	movf	UIntToString@n+1,w
 11959  1038  00F5               	movwf	___lldiv@dividend+1
 11960  1039  0829               	movf	UIntToString@n,w
 11961  103A  00F4               	movwf	___lldiv@dividend
 11962  103B  319F  27AE  3190   	fcall	___lldiv
 11963  103E  0873               	movf	?___lldiv+3,w
 11964  103F  0140               	movlb	0	; select bank0
 11965  1040  00AC               	movwf	UIntToString@n+3
 11966  1041  0872               	movf	?___lldiv+2,w
 11967  1042  00AB               	movwf	UIntToString@n+2
 11968  1043  0871               	movf	?___lldiv+1,w
 11969  1044  00AA               	movwf	UIntToString@n+1
 11970  1045  0870               	movf	?___lldiv,w
 11971  1046  00A9               	movwf	UIntToString@n
 11972  1047  082C               	movf	UIntToString@n+3,w
 11973  1048  042B               	iorwf	UIntToString@n+2,w
 11974  1049  042A               	iorwf	UIntToString@n+1,w
 11975  104A  0429               	iorwf	UIntToString@n,w
 11976  104B  1D03               	skipz
 11977  104C  2807               	goto	l4628
 11978                           
 11979                           ;main.c: 195:     dest[i] = '\0';
 11980  104D  0830               	movf	UIntToString@i,w
 11981  104E  072D               	addwf	UIntToString@dest,w
 11982  104F  00AE               	movwf	??_UIntToString
 11983  1050  082E               	movf	??_UIntToString,w
 11984  1051  0086               	movwf	6
 11985  1052  3001               	movlw	1	; select bank2/3
 11986  1053  0087               	movwf	7
 11987  1054  0181               	clrf	1
 11988                           
 11989                           ;main.c: 197:     ReverseString(dest);
 11990  1055  082D               	movf	UIntToString@dest,w
 11991  1056  3191  2110         	fcall	_ReverseString
 11992  1058  0008               	return
 11993  1059                     __end_of_UIntToString:	
 11994                           
 11995                           	psect	text12
 11996  1BE6                     __ptext12:	
 11997 ;; *************** function ___llmod *****************
 11998 ;; Defined at:
 11999 ;;		line 5 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\llmod.c"
 12000 ;; Parameters:    Size  Location     Type
 12001 ;;  divisor         4    0[COMMON] unsigned long 
 12002 ;;  dividend        4    4[COMMON] unsigned long 
 12003 ;; Auto vars:     Size  Location     Type
 12004 ;;  counter         1    9[COMMON] unsigned char 
 12005 ;; Return value:  Size  Location     Type
 12006 ;;                  4    0[COMMON] unsigned long 
 12007 ;; Registers used:
 12008 ;;		wreg, status,2, status,0
 12009 ;; Tracked objects:
 12010 ;;		On entry : 0/0
 12011 ;;		On exit  : 0/0
 12012 ;;		Unchanged: 0/0
 12013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12014 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12015 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12016 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12017 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12018 ;;Total ram usage:       10 bytes
 12019 ;; Hardware stack levels used:    1
 12020 ;; Hardware stack levels required when called:    3
 12021 ;; This function calls:
 12022 ;;		Nothing
 12023 ;; This function is called by:
 12024 ;;		_UIntToString
 12025 ;; This function uses a non-reentrant model
 12026 ;;
 12027                           
 12028                           
 12029                           ;psect for function ___llmod
 12030  1BE6                     ___llmod:	
 12031                           
 12032                           ;incstack = 0
 12033                           ; Regs used in ___llmod: [wreg+status,2+status,0]
 12034  1BE6  0873               	movf	___llmod@divisor+3,w
 12035  1BE7  0472               	iorwf	___llmod@divisor+2,w
 12036  1BE8  0471               	iorwf	___llmod@divisor+1,w
 12037  1BE9  0470               	iorwf	___llmod@divisor,w
 12038  1BEA  1903               	skipnz
 12039  1BEB  2C1F               	goto	l4500
 12040  1BEC  01F9               	clrf	___llmod@counter
 12041  1BED  0AF9               	incf	___llmod@counter,f
 12042  1BEE                     l4490:	
 12043  1BEE  1BF3               	btfsc	___llmod@divisor+3,7
 12044  1BEF  2BFC               	goto	l4492
 12045  1BF0  3001               	movlw	1
 12046  1BF1                     u4275:	
 12047  1BF1  35F0               	lslf	___llmod@divisor,f
 12048  1BF2  0DF1               	rlf	___llmod@divisor+1,f
 12049  1BF3  0DF2               	rlf	___llmod@divisor+2,f
 12050  1BF4  0DF3               	rlf	___llmod@divisor+3,f
 12051  1BF5  0B89               	decfsz	9,f
 12052  1BF6  2BF1               	goto	u4275
 12053  1BF7  3001               	movlw	1
 12054  1BF8  00F8               	movwf	??___llmod
 12055  1BF9  0878               	movf	??___llmod,w
 12056  1BFA  07F9               	addwf	___llmod@counter,f
 12057  1BFB  2BEE               	goto	l4490
 12058  1BFC                     l4492:	
 12059  1BFC  0873               	movf	___llmod@divisor+3,w
 12060  1BFD  0277               	subwf	___llmod@dividend+3,w
 12061  1BFE  1D03               	skipz
 12062  1BFF  2C0A               	goto	u4295
 12063  1C00  0872               	movf	___llmod@divisor+2,w
 12064  1C01  0276               	subwf	___llmod@dividend+2,w
 12065  1C02  1D03               	skipz
 12066  1C03  2C0A               	goto	u4295
 12067  1C04  0871               	movf	___llmod@divisor+1,w
 12068  1C05  0275               	subwf	___llmod@dividend+1,w
 12069  1C06  1D03               	skipz
 12070  1C07  2C0A               	goto	u4295
 12071  1C08  0870               	movf	___llmod@divisor,w
 12072  1C09  0274               	subwf	___llmod@dividend,w
 12073  1C0A                     u4295:	
 12074  1C0A  1C03               	skipc
 12075  1C0B  2C14               	goto	l4496
 12076  1C0C  0870               	movf	___llmod@divisor,w
 12077  1C0D  02F4               	subwf	___llmod@dividend,f
 12078  1C0E  0871               	movf	___llmod@divisor+1,w
 12079  1C0F  3BF5               	subwfb	___llmod@dividend+1,f
 12080  1C10  0872               	movf	___llmod@divisor+2,w
 12081  1C11  3BF6               	subwfb	___llmod@dividend+2,f
 12082  1C12  0873               	movf	___llmod@divisor+3,w
 12083  1C13  3BF7               	subwfb	___llmod@dividend+3,f
 12084  1C14                     l4496:	
 12085  1C14  3001               	movlw	1
 12086  1C15                     u4305:	
 12087  1C15  36F3               	lsrf	___llmod@divisor+3,f
 12088  1C16  0CF2               	rrf	___llmod@divisor+2,f
 12089  1C17  0CF1               	rrf	___llmod@divisor+1,f
 12090  1C18  0CF0               	rrf	___llmod@divisor,f
 12091  1C19  0B89               	decfsz	9,f
 12092  1C1A  2C15               	goto	u4305
 12093  1C1B  3001               	movlw	1
 12094  1C1C  02F9               	subwf	___llmod@counter,f
 12095  1C1D  1D03               	btfss	3,2
 12096  1C1E  2BFC               	goto	l4492
 12097  1C1F                     l4500:	
 12098  1C1F  0877               	movf	___llmod@dividend+3,w
 12099  1C20  00F3               	movwf	?___llmod+3
 12100  1C21  0876               	movf	___llmod@dividend+2,w
 12101  1C22  00F2               	movwf	?___llmod+2
 12102  1C23  0875               	movf	___llmod@dividend+1,w
 12103  1C24  00F1               	movwf	?___llmod+1
 12104  1C25  0874               	movf	___llmod@dividend,w
 12105  1C26  00F0               	movwf	?___llmod
 12106  1C27  0008               	return
 12107  1C28                     __end_of___llmod:	
 12108                           
 12109                           	psect	text13
 12110  1FAE                     __ptext13:	
 12111 ;; *************** function ___lldiv *****************
 12112 ;; Defined at:
 12113 ;;		line 5 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\__lldiv.c"
 12114 ;; Parameters:    Size  Location     Type
 12115 ;;  divisor         4    0[COMMON] unsigned long 
 12116 ;;  dividend        4    4[COMMON] unsigned long 
 12117 ;; Auto vars:     Size  Location     Type
 12118 ;;  quotient        4    9[COMMON] unsigned long 
 12119 ;;  counter         1   13[COMMON] unsigned char 
 12120 ;; Return value:  Size  Location     Type
 12121 ;;                  4    0[COMMON] unsigned long 
 12122 ;; Registers used:
 12123 ;;		wreg, status,2, status,0
 12124 ;; Tracked objects:
 12125 ;;		On entry : 0/0
 12126 ;;		On exit  : 0/0
 12127 ;;		Unchanged: 0/0
 12128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12129 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12130 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12131 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12132 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12133 ;;Total ram usage:       14 bytes
 12134 ;; Hardware stack levels used:    1
 12135 ;; Hardware stack levels required when called:    3
 12136 ;; This function calls:
 12137 ;;		Nothing
 12138 ;; This function is called by:
 12139 ;;		_compensate_pressure
 12140 ;;		_UIntToString
 12141 ;; This function uses a non-reentrant model
 12142 ;;
 12143                           
 12144                           
 12145                           ;psect for function ___lldiv
 12146  1FAE                     ___lldiv:	
 12147                           
 12148                           ;incstack = 0
 12149                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
 12150  1FAE  3000               	movlw	0
 12151  1FAF  00FC               	movwf	___lldiv@quotient+3
 12152  1FB0  3000               	movlw	0
 12153  1FB1  00FB               	movwf	___lldiv@quotient+2
 12154  1FB2  3000               	movlw	0
 12155  1FB3  00FA               	movwf	___lldiv@quotient+1
 12156  1FB4  3000               	movlw	0
 12157  1FB5  00F9               	movwf	___lldiv@quotient
 12158  1FB6  0873               	movf	___lldiv@divisor+3,w
 12159  1FB7  0472               	iorwf	___lldiv@divisor+2,w
 12160  1FB8  0471               	iorwf	___lldiv@divisor+1,w
 12161  1FB9  0470               	iorwf	___lldiv@divisor,w
 12162  1FBA  1903               	skipnz
 12163  1FBB  2FF7               	goto	l3706
 12164  1FBC  01FD               	clrf	___lldiv@counter
 12165  1FBD  0AFD               	incf	___lldiv@counter,f
 12166  1FBE                     l3692:	
 12167  1FBE  1BF3               	btfsc	___lldiv@divisor+3,7
 12168  1FBF  2FCC               	goto	l3694
 12169  1FC0  3001               	movlw	1
 12170  1FC1                     u3035:	
 12171  1FC1  35F0               	lslf	___lldiv@divisor,f
 12172  1FC2  0DF1               	rlf	___lldiv@divisor+1,f
 12173  1FC3  0DF2               	rlf	___lldiv@divisor+2,f
 12174  1FC4  0DF3               	rlf	___lldiv@divisor+3,f
 12175  1FC5  0B89               	decfsz	9,f
 12176  1FC6  2FC1               	goto	u3035
 12177  1FC7  3001               	movlw	1
 12178  1FC8  00F8               	movwf	??___lldiv
 12179  1FC9  0878               	movf	??___lldiv,w
 12180  1FCA  07FD               	addwf	___lldiv@counter,f
 12181  1FCB  2FBE               	goto	l3692
 12182  1FCC                     l3694:	
 12183  1FCC  3001               	movlw	1
 12184  1FCD                     u3055:	
 12185  1FCD  35F9               	lslf	___lldiv@quotient,f
 12186  1FCE  0DFA               	rlf	___lldiv@quotient+1,f
 12187  1FCF  0DFB               	rlf	___lldiv@quotient+2,f
 12188  1FD0  0DFC               	rlf	___lldiv@quotient+3,f
 12189  1FD1  0B89               	decfsz	9,f
 12190  1FD2  2FCD               	goto	u3055
 12191  1FD3  0873               	movf	___lldiv@divisor+3,w
 12192  1FD4  0277               	subwf	___lldiv@dividend+3,w
 12193  1FD5  1D03               	skipz
 12194  1FD6  2FE1               	goto	u3065
 12195  1FD7  0872               	movf	___lldiv@divisor+2,w
 12196  1FD8  0276               	subwf	___lldiv@dividend+2,w
 12197  1FD9  1D03               	skipz
 12198  1FDA  2FE1               	goto	u3065
 12199  1FDB  0871               	movf	___lldiv@divisor+1,w
 12200  1FDC  0275               	subwf	___lldiv@dividend+1,w
 12201  1FDD  1D03               	skipz
 12202  1FDE  2FE1               	goto	u3065
 12203  1FDF  0870               	movf	___lldiv@divisor,w
 12204  1FE0  0274               	subwf	___lldiv@dividend,w
 12205  1FE1                     u3065:	
 12206  1FE1  1C03               	skipc
 12207  1FE2  2FEC               	goto	l3702
 12208  1FE3  0870               	movf	___lldiv@divisor,w
 12209  1FE4  02F4               	subwf	___lldiv@dividend,f
 12210  1FE5  0871               	movf	___lldiv@divisor+1,w
 12211  1FE6  3BF5               	subwfb	___lldiv@dividend+1,f
 12212  1FE7  0872               	movf	___lldiv@divisor+2,w
 12213  1FE8  3BF6               	subwfb	___lldiv@dividend+2,f
 12214  1FE9  0873               	movf	___lldiv@divisor+3,w
 12215  1FEA  3BF7               	subwfb	___lldiv@dividend+3,f
 12216  1FEB  1479               	bsf	___lldiv@quotient,0
 12217  1FEC                     l3702:	
 12218  1FEC  3001               	movlw	1
 12219  1FED                     u3075:	
 12220  1FED  36F3               	lsrf	___lldiv@divisor+3,f
 12221  1FEE  0CF2               	rrf	___lldiv@divisor+2,f
 12222  1FEF  0CF1               	rrf	___lldiv@divisor+1,f
 12223  1FF0  0CF0               	rrf	___lldiv@divisor,f
 12224  1FF1  0B89               	decfsz	9,f
 12225  1FF2  2FED               	goto	u3075
 12226  1FF3  3001               	movlw	1
 12227  1FF4  02FD               	subwf	___lldiv@counter,f
 12228  1FF5  1D03               	btfss	3,2
 12229  1FF6  2FCC               	goto	l3694
 12230  1FF7                     l3706:	
 12231  1FF7  087C               	movf	___lldiv@quotient+3,w
 12232  1FF8  00F3               	movwf	?___lldiv+3
 12233  1FF9  087B               	movf	___lldiv@quotient+2,w
 12234  1FFA  00F2               	movwf	?___lldiv+2
 12235  1FFB  087A               	movf	___lldiv@quotient+1,w
 12236  1FFC  00F1               	movwf	?___lldiv+1
 12237  1FFD  0879               	movf	___lldiv@quotient,w
 12238  1FFE  00F0               	movwf	?___lldiv
 12239  1FFF  0008               	return
 12240  2000                     __end_of___lldiv:	
 12241                           
 12242                           	psect	text14
 12243  13A2                     __ptext14:	
 12244 ;; *************** function _UIntToHexString *****************
 12245 ;; Defined at:
 12246 ;;		line 116 in file "main.c"
 12247 ;; Parameters:    Size  Location     Type
 12248 ;;  n               4   10[BANK0 ] unsigned long 
 12249 ;;  dest            1   14[BANK0 ] PTR unsigned char 
 12250 ;;		 -> checksum(6), 
 12251 ;; Auto vars:     Size  Location     Type
 12252 ;;  remainder       4   21[BANK0 ] unsigned long 
 12253 ;;  i               4   25[BANK0 ] unsigned long 
 12254 ;; Return value:  Size  Location     Type
 12255 ;;                  1    wreg      void 
 12256 ;; Registers used:
 12257 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12258 ;; Tracked objects:
 12259 ;;		On entry : 0/0
 12260 ;;		On exit  : 0/0
 12261 ;;		Unchanged: 0/0
 12262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12263 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12264 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12265 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12266 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12267 ;;Total ram usage:       19 bytes
 12268 ;; Hardware stack levels used:    1
 12269 ;; Hardware stack levels required when called:    5
 12270 ;; This function calls:
 12271 ;;		_ReverseString
 12272 ;; This function is called by:
 12273 ;;		_main
 12274 ;; This function uses a non-reentrant model
 12275 ;;
 12276                           
 12277                           
 12278                           ;psect for function _UIntToHexString
 12279  13A2                     _UIntToHexString:	
 12280                           
 12281                           ;main.c: 116: void UIntToHexString(uint32_t n, char* dest);main.c: 117: {;main.c: 118:  
      +                             uint32_t i = 0;
 12282                           
 12283                           ;incstack = 0
 12284                           ; Regs used in _UIntToHexString: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12285  13A2  3000               	movlw	0
 12286  13A3  0140               	movlb	0	; select bank0
 12287  13A4  00BC               	movwf	UIntToHexString@i+3
 12288  13A5  3000               	movlw	0
 12289  13A6  00BB               	movwf	UIntToHexString@i+2
 12290  13A7  3000               	movlw	0
 12291  13A8  00BA               	movwf	UIntToHexString@i+1
 12292  13A9  3000               	movlw	0
 12293  13AA  00B9               	movwf	UIntToHexString@i
 12294  13AB                     l665:	
 12295                           ;main.c: 119:     do {
 12296                           
 12297                           
 12298                           ;main.c: 122:         uint32_t remainder = n % 16;
 12299  13AB  300F               	movlw	15
 12300  13AC  052A               	andwf	UIntToHexString@n,w
 12301  13AD  00B5               	movwf	UIntToHexString@remainder
 12302  13AE  3000               	movlw	0
 12303  13AF  052B               	andwf	UIntToHexString@n+1,w
 12304  13B0  00B6               	movwf	UIntToHexString@remainder+1
 12305  13B1  3000               	movlw	0
 12306  13B2  052C               	andwf	UIntToHexString@n+2,w
 12307  13B3  00B7               	movwf	UIntToHexString@remainder+2
 12308  13B4  3000               	movlw	0
 12309  13B5  052D               	andwf	UIntToHexString@n+3,w
 12310  13B6  00B8               	movwf	UIntToHexString@remainder+3
 12311                           
 12312                           ;main.c: 124:         dest[i++] = remainder + (remainder >= 10 ? 55 : '0');
 12313  13B7  0838               	movf	UIntToHexString@remainder+3,w
 12314  13B8  1D03               	btfss	3,2
 12315  13B9  2BCC               	goto	l4586
 12316  13BA  0837               	movf	UIntToHexString@remainder+2,w
 12317  13BB  1D03               	btfss	3,2
 12318  13BC  2BCC               	goto	l4586
 12319  13BD  0836               	movf	UIntToHexString@remainder+1,w
 12320  13BE  1D03               	btfss	3,2
 12321  13BF  2BCC               	goto	l4586
 12322  13C0  300A               	movlw	10
 12323  13C1  0235               	subwf	UIntToHexString@remainder,w
 12324  13C2  1803               	btfsc	3,0
 12325  13C3  2BCC               	goto	l4586
 12326  13C4  3000               	movlw	0
 12327  13C5  00B4               	movwf	_UIntToHexString$1795+3
 12328  13C6  3000               	movlw	0
 12329  13C7  00B3               	movwf	_UIntToHexString$1795+2
 12330  13C8  3000               	movlw	0
 12331  13C9  00B2               	movwf	_UIntToHexString$1795+1
 12332  13CA  3030               	movlw	48
 12333  13CB  2BD3               	goto	L4
 12334  13CC                     l4586:	
 12335  13CC  3000               	movlw	0
 12336  13CD  00B4               	movwf	_UIntToHexString$1795+3
 12337  13CE  3000               	movlw	0
 12338  13CF  00B3               	movwf	_UIntToHexString$1795+2
 12339  13D0  3000               	movlw	0
 12340  13D1  00B2               	movwf	_UIntToHexString$1795+1
 12341  13D2  3037               	movlw	55
 12342  13D3                     L4:	
 12343  13D3  00B1               	movwf	_UIntToHexString$1795
 12344  13D4  0831               	movf	_UIntToHexString$1795,w
 12345  13D5  0735               	addwf	UIntToHexString@remainder,w
 12346  13D6  00AF               	movwf	??_UIntToHexString
 12347  13D7  0839               	movf	UIntToHexString@i,w
 12348  13D8  072E               	addwf	UIntToHexString@dest,w
 12349  13D9  00B0               	movwf	??_UIntToHexString+1
 12350  13DA  0830               	movf	??_UIntToHexString+1,w
 12351  13DB  0086               	movwf	6
 12352  13DC  3001               	movlw	1	; select bank2/3
 12353  13DD  0087               	movwf	7
 12354  13DE  082F               	movf	??_UIntToHexString,w
 12355  13DF  0081               	movwf	1
 12356  13E0  3001               	movlw	1
 12357  13E1  07B9               	addwf	UIntToHexString@i,f
 12358  13E2  3000               	movlw	0
 12359  13E3  3DBA               	addwfc	UIntToHexString@i+1,f
 12360  13E4  3000               	movlw	0
 12361  13E5  3DBB               	addwfc	UIntToHexString@i+2,f
 12362  13E6  3000               	movlw	0
 12363  13E7  3DBC               	addwfc	UIntToHexString@i+3,f
 12364                           
 12365                           ;main.c: 126:     } while ((n /= 16) > 0);
 12366  13E8  3004               	movlw	4
 12367  13E9                     u4415:	
 12368  13E9  36AD               	lsrf	UIntToHexString@n+3,f
 12369  13EA  0CAC               	rrf	UIntToHexString@n+2,f
 12370  13EB  0CAB               	rrf	UIntToHexString@n+1,f
 12371  13EC  0CAA               	rrf	UIntToHexString@n,f
 12372  13ED  0B89               	decfsz	9,f
 12373  13EE  2BE9               	goto	u4415
 12374  13EF  082D               	movf	UIntToHexString@n+3,w
 12375  13F0  042C               	iorwf	UIntToHexString@n+2,w
 12376  13F1  042B               	iorwf	UIntToHexString@n+1,w
 12377  13F2  042A               	iorwf	UIntToHexString@n,w
 12378  13F3  1903               	btfsc	3,2
 12379  13F4  2C09               	goto	l4598
 12380  13F5  2BAB               	goto	l665
 12381  13F6                     l4594:	
 12382                           
 12383                           ;main.c: 128:     {;main.c: 129:         dest[i] = '0';
 12384  13F6  3030               	movlw	48
 12385  13F7  00AF               	movwf	??_UIntToHexString
 12386  13F8  0839               	movf	UIntToHexString@i,w
 12387  13F9  072E               	addwf	UIntToHexString@dest,w
 12388  13FA  00B0               	movwf	??_UIntToHexString+1
 12389  13FB  0830               	movf	??_UIntToHexString+1,w
 12390  13FC  0086               	movwf	6
 12391  13FD  3001               	movlw	1	; select bank2/3
 12392  13FE  0087               	movwf	7
 12393  13FF  082F               	movf	??_UIntToHexString,w
 12394  1400  0081               	movwf	1
 12395                           
 12396                           ;main.c: 130:         i++;
 12397  1401  3001               	movlw	1
 12398  1402  07B9               	addwf	UIntToHexString@i,f
 12399  1403  3000               	movlw	0
 12400  1404  3DBA               	addwfc	UIntToHexString@i+1,f
 12401  1405  3000               	movlw	0
 12402  1406  3DBB               	addwfc	UIntToHexString@i+2,f
 12403  1407  3000               	movlw	0
 12404  1408  3DBC               	addwfc	UIntToHexString@i+3,f
 12405  1409                     l4598:	
 12406                           
 12407                           ;main.c: 127:     while (i < 4)
 12408  1409  083C               	movf	UIntToHexString@i+3,w
 12409  140A  1D03               	btfss	3,2
 12410  140B  2C16               	goto	l4600
 12411  140C  083B               	movf	UIntToHexString@i+2,w
 12412  140D  1D03               	btfss	3,2
 12413  140E  2C16               	goto	l4600
 12414  140F  083A               	movf	UIntToHexString@i+1,w
 12415  1410  1D03               	btfss	3,2
 12416  1411  2C16               	goto	l4600
 12417  1412  3004               	movlw	4
 12418  1413  0239               	subwf	UIntToHexString@i,w
 12419  1414  1C03               	btfss	3,0
 12420  1415  2BF6               	goto	l4594
 12421  1416                     l4600:	
 12422                           
 12423                           ;main.c: 132:     ReverseString(dest);
 12424  1416  082E               	movf	UIntToHexString@dest,w
 12425  1417  3191  2110         	fcall	_ReverseString
 12426  1419  0008               	return
 12427  141A                     __end_of_UIntToHexString:	
 12428                           
 12429                           	psect	text15
 12430  199A                     __ptext15:	
 12431 ;; *************** function _TransmitString *****************
 12432 ;; Defined at:
 12433 ;;		line 74 in file "rtty.c"
 12434 ;; Parameters:    Size  Location     Type
 12435 ;;  message         2    3[BANK0 ] PTR unsigned char 
 12436 ;;		 -> message_end(70), message_start(70), 
 12437 ;; Auto vars:     Size  Location     Type
 12438 ;;  i               2    8[BANK0 ] int 
 12439 ;;  counti          2    6[BANK0 ] int 
 12440 ;; Return value:  Size  Location     Type
 12441 ;;                  1    wreg      void 
 12442 ;; Registers used:
 12443 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12444 ;; Tracked objects:
 12445 ;;		On entry : 0/0
 12446 ;;		On exit  : 0/0
 12447 ;;		Unchanged: 0/0
 12448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12449 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12450 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12451 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12452 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12453 ;;Total ram usage:        7 bytes
 12454 ;; Hardware stack levels used:    1
 12455 ;; Hardware stack levels required when called:    6
 12456 ;; This function calls:
 12457 ;;		_TransmitChar
 12458 ;;		_strlen
 12459 ;; This function is called by:
 12460 ;;		_main
 12461 ;; This function uses a non-reentrant model
 12462 ;;
 12463                           
 12464                           
 12465                           ;psect for function _TransmitString
 12466  199A                     _TransmitString:	
 12467                           
 12468                           ;rtty.c: 74: void TransmitString(char* message);rtty.c: 75: {;rtty.c: 79:  for (int i = 
      +                          0, counti = strlen(message); i < counti; i++)
 12469                           
 12470                           ;incstack = 0
 12471                           ; Regs used in _TransmitString: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12472  199A  0140               	movlb	0	; select bank0
 12473  199B  01A8               	clrf	TransmitString@i
 12474  199C  01A9               	clrf	TransmitString@i+1
 12475  199D  0824               	movf	TransmitString@message+1,w
 12476  199E  00F1               	movwf	strlen@s+1
 12477  199F  0823               	movf	TransmitString@message,w
 12478  19A0  00F0               	movwf	strlen@s
 12479  19A1  31A7  2722  3199   	fcall	_strlen
 12480  19A4  0871               	movf	?_strlen+1,w
 12481  19A5  0140               	movlb	0	; select bank0
 12482  19A6  00A7               	movwf	TransmitString@counti+1
 12483  19A7  0870               	movf	?_strlen,w
 12484  19A8  00A6               	movwf	TransmitString@counti
 12485  19A9                     l5926:	
 12486  19A9  0829               	movf	TransmitString@i+1,w
 12487  19AA  3A80               	xorlw	128
 12488  19AB  00A5               	movwf	??_TransmitString
 12489  19AC  0827               	movf	TransmitString@counti+1,w
 12490  19AD  3A80               	xorlw	128
 12491  19AE  0225               	subwf	??_TransmitString,w
 12492  19AF  1D03               	skipz
 12493  19B0  29B3               	goto	u6285
 12494  19B1  0826               	movf	TransmitString@counti,w
 12495  19B2  0228               	subwf	TransmitString@i,w
 12496  19B3                     u6285:	
 12497  19B3  1803               	btfsc	3,0
 12498  19B4  0008               	return
 12499                           
 12500                           ;rtty.c: 80:  {;rtty.c: 81:   TransmitChar(message[i]);
 12501  19B5  0140               	movlb	0	; select bank0
 12502  19B6  0828               	movf	TransmitString@i,w
 12503  19B7  0723               	addwf	TransmitString@message,w
 12504  19B8  0086               	movwf	6
 12505  19B9  0829               	movf	TransmitString@i+1,w
 12506  19BA  3D24               	addwfc	TransmitString@message+1,w
 12507  19BB  0087               	movwf	7
 12508  19BC  0801               	movf	1,w
 12509  19BD  319A  224E  3199   	fcall	_TransmitChar
 12510                           
 12511                           ;rtty.c: 82:  }
 12512  19C0  3001               	movlw	1
 12513  19C1  0140               	movlb	0	; select bank0
 12514  19C2  07A8               	addwf	TransmitString@i,f
 12515  19C3  3000               	movlw	0
 12516  19C4  3DA9               	addwfc	TransmitString@i+1,f
 12517  19C5  29A9               	goto	l5926
 12518  19C6                     __end_of_TransmitString:	
 12519                           
 12520                           	psect	text16
 12521  1A4E                     __ptext16:	
 12522 ;; *************** function _TransmitChar *****************
 12523 ;; Defined at:
 12524 ;;		line 52 in file "rtty.c"
 12525 ;; Parameters:    Size  Location     Type
 12526 ;;  byte            1    wreg     unsigned char 
 12527 ;; Auto vars:     Size  Location     Type
 12528 ;;  byte            1    0[BANK0 ] unsigned char 
 12529 ;;  i               2    1[BANK0 ] int 
 12530 ;; Return value:  Size  Location     Type
 12531 ;;                  1    wreg      void 
 12532 ;; Registers used:
 12533 ;;		wreg, status,2, status,0, pclath, cstack
 12534 ;; Tracked objects:
 12535 ;;		On entry : 0/0
 12536 ;;		On exit  : 0/0
 12537 ;;		Unchanged: 0/0
 12538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12540 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12541 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12542 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12543 ;;Total ram usage:        4 bytes
 12544 ;; Hardware stack levels used:    1
 12545 ;; Hardware stack levels required when called:    5
 12546 ;; This function calls:
 12547 ;;		_TransmitBit
 12548 ;; This function is called by:
 12549 ;;		_TransmitString
 12550 ;; This function uses a non-reentrant model
 12551 ;;
 12552                           
 12553                           
 12554                           ;psect for function _TransmitChar
 12555  1A4E                     _TransmitChar:	
 12556                           
 12557                           ;incstack = 0
 12558                           ; Regs used in _TransmitChar: [wreg+status,2+status,0+pclath+cstack]
 12559                           ;TransmitChar@byte stored from wreg
 12560  1A4E  0140               	movlb	0	; select bank0
 12561  1A4F  00A0               	movwf	TransmitChar@byte
 12562                           
 12563                           ;rtty.c: 52: void TransmitChar(char byte);rtty.c: 53: {;rtty.c: 63:     TransmitBit(0);
 12564  1A50  3000               	movlw	0
 12565  1A51  31A7  270E  319A   	fcall	_TransmitBit
 12566                           
 12567                           ;rtty.c: 65:  for (int i = 0; i < 7; i++)
 12568  1A54  0140               	movlb	0	; select bank0
 12569  1A55  01A1               	clrf	TransmitChar@i
 12570  1A56  01A2               	clrf	TransmitChar@i+1
 12571  1A57                     l5648:	
 12572                           
 12573                           ;rtty.c: 66:  {;rtty.c: 67:   TransmitBit((byte >> i) & 1);
 12574  1A57  0140               	movlb	0	; select bank0
 12575  1A58  0820               	movf	TransmitChar@byte,w
 12576  1A59  00FD               	movwf	??_TransmitChar
 12577  1A5A  0A21               	incf	TransmitChar@i,w
 12578  1A5B  2A5D               	goto	u5834
 12579  1A5C                     u5835:	
 12580  1A5C  36FD               	lsrf	??_TransmitChar,f
 12581  1A5D                     u5834:	
 12582  1A5D  0B89               	decfsz	9,f
 12583  1A5E  2A5C               	goto	u5835
 12584  1A5F  1C7D               	btfss	??_TransmitChar,0
 12585  1A60  2A63               	goto	u5840
 12586  1A61  3001               	movlw	1
 12587  1A62  2A64               	goto	u5850
 12588  1A63                     u5840:	
 12589  1A63  3000               	movlw	0
 12590  1A64                     u5850:	
 12591  1A64  31A7  270E  319A   	fcall	_TransmitBit
 12592                           
 12593                           ;rtty.c: 68:  }
 12594  1A67  3001               	movlw	1
 12595  1A68  0140               	movlb	0	; select bank0
 12596  1A69  07A1               	addwf	TransmitChar@i,f
 12597  1A6A  3000               	movlw	0
 12598  1A6B  3DA2               	addwfc	TransmitChar@i+1,f
 12599  1A6C  0822               	movf	TransmitChar@i+1,w
 12600  1A6D  3A80               	xorlw	128
 12601  1A6E  00FD               	movwf	??_TransmitChar
 12602  1A6F  3080               	movlw	128
 12603  1A70  027D               	subwf	??_TransmitChar,w
 12604  1A71  1D03               	skipz
 12605  1A72  2A75               	goto	u5865
 12606  1A73  3007               	movlw	7
 12607  1A74  0221               	subwf	TransmitChar@i,w
 12608  1A75                     u5865:	
 12609  1A75  1C03               	skipc
 12610  1A76  2A57               	goto	l5648
 12611                           
 12612                           ;rtty.c: 70:  TransmitBit(1);
 12613  1A77  3001               	movlw	1
 12614  1A78  31A7  270E  319A   	fcall	_TransmitBit
 12615                           
 12616                           ;rtty.c: 71:  TransmitBit(1);
 12617  1A7B  3001               	movlw	1
 12618  1A7C  31A7  270E         	fcall	_TransmitBit
 12619  1A7E  0008               	return
 12620  1A7F                     __end_of_TransmitChar:	
 12621                           
 12622                           	psect	text17
 12623  270E                     __ptext17:	
 12624 ;; *************** function _TransmitBit *****************
 12625 ;; Defined at:
 12626 ;;		line 32 in file "rtty.c"
 12627 ;; Parameters:    Size  Location     Type
 12628 ;;  b               1    wreg     _Bool 
 12629 ;; Auto vars:     Size  Location     Type
 12630 ;;  b               1   12[COMMON] _Bool 
 12631 ;; Return value:  Size  Location     Type
 12632 ;;                  1    wreg      void 
 12633 ;; Registers used:
 12634 ;;		wreg, status,2, status,0, pclath, cstack
 12635 ;; Tracked objects:
 12636 ;;		On entry : 0/0
 12637 ;;		On exit  : 0/0
 12638 ;;		Unchanged: 0/0
 12639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12641 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12643 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12644 ;;Total ram usage:        1 bytes
 12645 ;; Hardware stack levels used:    1
 12646 ;; Hardware stack levels required when called:    4
 12647 ;; This function calls:
 12648 ;;		_Sleep
 12649 ;; This function is called by:
 12650 ;;		_TransmitChar
 12651 ;; This function uses a non-reentrant model
 12652 ;;
 12653                           
 12654                           
 12655                           ;psect for function _TransmitBit
 12656  270E                     _TransmitBit:	
 12657                           
 12658                           ;incstack = 0
 12659                           ; Regs used in _TransmitBit: [wreg+status,2+status,0+pclath+cstack]
 12660                           ;TransmitBit@b stored from wreg
 12661  270E  00FC               	movwf	TransmitBit@b
 12662                           
 12663                           ;rtty.c: 32: void TransmitBit(_Bool b);rtty.c: 33: {;rtty.c: 34:  if (b)
 12664  270F  087C               	movf	TransmitBit@b,w
 12665  2710  1903               	btfsc	3,2
 12666  2711  2F15               	goto	l867
 12667                           
 12668                           ;rtty.c: 35:  {;rtty.c: 36:   do { LATAbits.LATA4 = 1; } while(0);
 12669  2712  0140               	movlb	0	; select bank0
 12670  2713  1618               	bsf	24,4	;volatile
 12671  2714  2F17               	goto	l5492
 12672  2715                     l867:	
 12673                           ;rtty.c: 39:  {;rtty.c: 40:   do { LATAbits.LATA4 = 0; } while(0);
 12674                           
 12675  2715  0140               	movlb	0	; select bank0
 12676  2716  1218               	bcf	24,4	;volatile
 12677  2717                     l5492:	
 12678  2717  3000               	movlw	0
 12679  2718  00F3               	movwf	Sleep@ms+3
 12680  2719  3000               	movlw	0
 12681  271A  00F2               	movwf	Sleep@ms+2
 12682  271B  3000               	movlw	0
 12683  271C  00F1               	movwf	Sleep@ms+1
 12684  271D  3014               	movlw	20
 12685  271E  00F0               	movwf	Sleep@ms
 12686  271F  3199  2144         	fcall	_Sleep
 12687  2721  0008               	return
 12688  2722                     __end_of_TransmitBit:	
 12689                           
 12690                           	psect	text18
 12691  1DCF                     __ptext18:	
 12692 ;; *************** function _SetupGPS *****************
 12693 ;; Defined at:
 12694 ;;		line 417 in file "main.c"
 12695 ;; Parameters:    Size  Location     Type
 12696 ;;		None
 12697 ;; Auto vars:     Size  Location     Type
 12698 ;;		None
 12699 ;; Return value:  Size  Location     Type
 12700 ;;                  1    wreg      void 
 12701 ;; Registers used:
 12702 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12703 ;; Tracked objects:
 12704 ;;		On entry : 0/0
 12705 ;;		On exit  : 0/0
 12706 ;;		Unchanged: 0/0
 12707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12710 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12711 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12712 ;;Total ram usage:        1 bytes
 12713 ;; Hardware stack levels used:    1
 12714 ;; Hardware stack levels required when called:    5
 12715 ;; This function calls:
 12716 ;;		_GPS_HasAcknowledged
 12717 ;;		_GPS_SendUBX
 12718 ;;		_Sleep
 12719 ;;		_WriteGPS
 12720 ;; This function is called by:
 12721 ;;		_main
 12722 ;; This function uses a non-reentrant model
 12723 ;;
 12724                           
 12725                           
 12726                           ;psect for function _SetupGPS
 12727  1DCF                     _SetupGPS:	
 12728                           
 12729                           ;incstack = 0
 12730                           ; Regs used in _SetupGPS: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12731                           ;main.c: 419:     do { LATAbits.LATA5 = 0; } while(0);
 12732  1DCF  0140               	movlb	0	; select bank0
 12733  1DD0  1298               	bcf	24,5	;volatile
 12734  1DD1                     l5732:	
 12735                           
 12736                           ;main.c: 420:     while (!gps_configured)
 12737  1DD1  0141               	movlb	1	; select bank1
 12738  1DD2  086C               	movf	_gps_configured^(0+128),w
 12739  1DD3  1D03               	btfss	3,2
 12740  1DD4  2DED               	goto	l769
 12741                           
 12742                           ;main.c: 421:     {;main.c: 422:         GPS_SendUBX(setNavFlightMode);
 12743  1DD5  3020               	movlw	(low (_setNavFlightMode| (0+512)))& (0+255)
 12744  1DD6  3198  2078  319D   	fcall	_GPS_SendUBX
 12745                           
 12746                           ;main.c: 423:         gps_configured = GPS_HasAcknowledged(setNavFlightMode);
 12747  1DD9  3020               	movlw	(low (_setNavFlightMode| (0+512)))& (0+255)
 12748  1DDA  3195  2515  319D   	fcall	_GPS_HasAcknowledged
 12749  1DDD  00FC               	movwf	??_SetupGPS
 12750  1DDE  087C               	movf	??_SetupGPS,w
 12751  1DDF  0141               	movlb	1	; select bank1
 12752  1DE0  00EC               	movwf	_gps_configured^(0+128)
 12753                           
 12754                           ;main.c: 424:         Sleep(500);
 12755  1DE1  3000               	movlw	0
 12756  1DE2  00F3               	movwf	Sleep@ms+3
 12757  1DE3  3000               	movlw	0
 12758  1DE4  00F2               	movwf	Sleep@ms+2
 12759  1DE5  3001               	movlw	1
 12760  1DE6  00F1               	movwf	Sleep@ms+1
 12761  1DE7  30F4               	movlw	244
 12762  1DE8  00F0               	movwf	Sleep@ms
 12763  1DE9  3199  2144  319D   	fcall	_Sleep
 12764  1DEC  2DD1               	goto	l5732
 12765  1DED                     l769:	
 12766                           ;main.c: 426:     do { LATAbits.LATA5 = 1; } while(0);
 12767                           
 12768  1DED  0140               	movlb	0	; select bank0
 12769  1DEE  1698               	bsf	24,5	;volatile
 12770                           
 12771                           ;main.c: 427:     gps_configured = 0;
 12772  1DEF  0141               	movlb	1	; select bank1
 12773  1DF0  01EC               	clrf	_gps_configured^(0+128)
 12774                           
 12775                           ;main.c: 429:     WriteGPS("$PUBX,40,GLL,0,0,0,0*5C\r\n");
 12776  1DF1  304E               	movlw	low (STR_1| (0+32768))
 12777  1DF2  00F5               	movwf	WriteGPS@message
 12778  1DF3  30A8               	movlw	high (STR_1| (0+32768))
 12779  1DF4  00F6               	movwf	WriteGPS@message+1
 12780  1DF5  3198  209F  319D   	fcall	_WriteGPS
 12781                           
 12782                           ;main.c: 430:     WriteGPS("$PUBX,40,GGA,0,0,0,0*5A\r\n");
 12783  1DF8  3034               	movlw	low (STR_2| (0+32768))
 12784  1DF9  00F5               	movwf	WriteGPS@message
 12785  1DFA  30A8               	movlw	high (STR_2| (0+32768))
 12786  1DFB  00F6               	movwf	WriteGPS@message+1
 12787  1DFC  3198  209F  319D   	fcall	_WriteGPS
 12788                           
 12789                           ;main.c: 431:     WriteGPS("$PUBX,40,VTG,0,0,0,0*5E\r\n");
 12790  1DFF  3082               	movlw	low (STR_3| (0+32768))
 12791  1E00  00F5               	movwf	WriteGPS@message
 12792  1E01  30A8               	movlw	high (STR_3| (0+32768))
 12793  1E02  00F6               	movwf	WriteGPS@message+1
 12794  1E03  3198  209F  319D   	fcall	_WriteGPS
 12795                           
 12796                           ;main.c: 432:     WriteGPS("$PUBX,40,GSV,0,0,0,0*59\r\n");
 12797  1E06  301A               	movlw	low (STR_4| (0+32768))
 12798  1E07  00F5               	movwf	WriteGPS@message
 12799  1E08  30A8               	movlw	high (STR_4| (0+32768))
 12800  1E09  00F6               	movwf	WriteGPS@message+1
 12801  1E0A  3198  209F  319D   	fcall	_WriteGPS
 12802                           
 12803                           ;main.c: 433:     WriteGPS("$PUBX,40,GSA,0,0,0,0*4E\r\n");
 12804  1E0D  3068               	movlw	low (STR_5| (0+32768))
 12805  1E0E  00F5               	movwf	WriteGPS@message
 12806  1E0F  30A8               	movlw	high (STR_5| (0+32768))
 12807  1E10  00F6               	movwf	WriteGPS@message+1
 12808  1E11  3198  209F  319D   	fcall	_WriteGPS
 12809                           
 12810                           ;main.c: 434:     WriteGPS("$PUBX,40,RMC,0,0,0,0*47\r\n");
 12811  1E14  3000               	movlw	low (STR_6| (0+32768))
 12812  1E15  00F5               	movwf	WriteGPS@message
 12813  1E16  30A8               	movlw	high (STR_6| (0+32768))
 12814  1E17  00F6               	movwf	WriteGPS@message+1
 12815  1E18  3198  209F         	fcall	_WriteGPS
 12816  1E1A  0008               	return
 12817  1E1B                     __end_of_SetupGPS:	
 12818                           
 12819                           	psect	text19
 12820  1878                     __ptext19:	
 12821 ;; *************** function _GPS_SendUBX *****************
 12822 ;; Defined at:
 12823 ;;		line 333 in file "main.c"
 12824 ;; Parameters:    Size  Location     Type
 12825 ;;  data            1    wreg     PTR unsigned char 
 12826 ;;		 -> setNavFlightMode(44), 
 12827 ;; Auto vars:     Size  Location     Type
 12828 ;;  data            1    9[COMMON] PTR unsigned char 
 12829 ;;		 -> setNavFlightMode(44), 
 12830 ;;  i               2    7[COMMON] int 
 12831 ;;  length          2    5[COMMON] int 
 12832 ;; Return value:  Size  Location     Type
 12833 ;;                  1    wreg      void 
 12834 ;; Registers used:
 12835 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12836 ;; Tracked objects:
 12837 ;;		On entry : 0/0
 12838 ;;		On exit  : 0/0
 12839 ;;		Unchanged: 0/0
 12840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12842 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12843 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12844 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12845 ;;Total ram usage:        6 bytes
 12846 ;; Hardware stack levels used:    1
 12847 ;; Hardware stack levels required when called:    4
 12848 ;; This function calls:
 12849 ;;		_EUSART1_Write
 12850 ;;		_GetLengthUBX
 12851 ;; This function is called by:
 12852 ;;		_SetupGPS
 12853 ;; This function uses a non-reentrant model
 12854 ;;
 12855                           
 12856                           
 12857                           ;psect for function _GPS_SendUBX
 12858  1878                     _GPS_SendUBX:	
 12859                           
 12860                           ;incstack = 0
 12861                           ; Regs used in _GPS_SendUBX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12862                           ;GPS_SendUBX@data stored from wreg
 12863  1878  00F9               	movwf	GPS_SendUBX@data
 12864                           
 12865                           ;main.c: 333: void GPS_SendUBX(uint8_t* data);main.c: 334: {;main.c: 335:     for (int i
      +                           = 0, length = GetLengthUBX(data); i < length; i++)
 12866  1879  01F7               	clrf	GPS_SendUBX@i
 12867  187A  01F8               	clrf	GPS_SendUBX@i+1
 12868  187B  0879               	movf	GPS_SendUBX@data,w
 12869  187C  31A6  26D5  3198   	fcall	_GetLengthUBX
 12870  187F  0871               	movf	?_GetLengthUBX+1,w
 12871  1880  00F6               	movwf	GPS_SendUBX@length+1
 12872  1881  0870               	movf	?_GetLengthUBX,w
 12873  1882  00F5               	movwf	GPS_SendUBX@length
 12874  1883                     l4334:	
 12875  1883  0878               	movf	GPS_SendUBX@i+1,w
 12876  1884  3A80               	xorlw	128
 12877  1885  00F4               	movwf	??_GPS_SendUBX
 12878  1886  0876               	movf	GPS_SendUBX@length+1,w
 12879  1887  3A80               	xorlw	128
 12880  1888  0274               	subwf	??_GPS_SendUBX,w
 12881  1889  1D03               	skipz
 12882  188A  288D               	goto	u4025
 12883  188B  0875               	movf	GPS_SendUBX@length,w
 12884  188C  0277               	subwf	GPS_SendUBX@i,w
 12885  188D                     u4025:	
 12886  188D  1803               	btfsc	3,0
 12887  188E  0008               	return
 12888                           
 12889                           ;main.c: 336:     {;main.c: 337:         EUSART1_Write(data[i]);
 12890  188F  0877               	movf	GPS_SendUBX@i,w
 12891  1890  0779               	addwf	GPS_SendUBX@data,w
 12892  1891  00F4               	movwf	??_GPS_SendUBX
 12893  1892  0874               	movf	??_GPS_SendUBX,w
 12894  1893  0086               	movwf	6
 12895  1894  3002               	movlw	2	; select bank4/5
 12896  1895  0087               	movwf	7
 12897  1896  0801               	movf	1,w
 12898  1897  3198  2000  3198   	fcall	_EUSART1_Write
 12899                           
 12900                           ;main.c: 338:     }
 12901  189A  3001               	movlw	1
 12902  189B  07F7               	addwf	GPS_SendUBX@i,f
 12903  189C  3000               	movlw	0
 12904  189D  3DF8               	addwfc	GPS_SendUBX@i+1,f
 12905  189E  2883               	goto	l4334
 12906  189F                     __end_of_GPS_SendUBX:	
 12907                           
 12908                           	psect	text20
 12909  26D5                     __ptext20:	
 12910 ;; *************** function _GetLengthUBX *****************
 12911 ;; Defined at:
 12912 ;;		line 327 in file "main.c"
 12913 ;; Parameters:    Size  Location     Type
 12914 ;;  data            1    wreg     PTR unsigned char 
 12915 ;;		 -> setNavFlightMode(44), 
 12916 ;; Auto vars:     Size  Location     Type
 12917 ;;  data            1    3[COMMON] PTR unsigned char 
 12918 ;;		 -> setNavFlightMode(44), 
 12919 ;; Return value:  Size  Location     Type
 12920 ;;                  2    0[COMMON] unsigned int 
 12921 ;; Registers used:
 12922 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 12923 ;; Tracked objects:
 12924 ;;		On entry : 0/0
 12925 ;;		On exit  : 0/0
 12926 ;;		Unchanged: 0/0
 12927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12928 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12929 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12931 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12932 ;;Total ram usage:        4 bytes
 12933 ;; Hardware stack levels used:    1
 12934 ;; Hardware stack levels required when called:    3
 12935 ;; This function calls:
 12936 ;;		Nothing
 12937 ;; This function is called by:
 12938 ;;		_GPS_SendUBX
 12939 ;; This function uses a non-reentrant model
 12940 ;;
 12941                           
 12942                           
 12943                           ;psect for function _GetLengthUBX
 12944  26D5                     _GetLengthUBX:	
 12945                           
 12946                           ;incstack = 0
 12947                           ; Regs used in _GetLengthUBX: [wreg-fsr1h+status,2+status,0]
 12948                           ;GetLengthUBX@data stored from wreg
 12949  26D5  00F3               	movwf	GetLengthUBX@data
 12950                           
 12951                           ;main.c: 327: size_t GetLengthUBX(uint8_t* data);main.c: 328: {;main.c: 329:     return 
      +                          (short)(8 + (short)((short)data[4] + (short)(data[5] << 8)));
 12952  26D6  0873               	movf	GetLengthUBX@data,w
 12953  26D7  3E05               	addlw	5
 12954  26D8  0086               	movwf	6
 12955  26D9  3002               	movlw	2	; select bank4/5
 12956  26DA  0087               	movwf	7
 12957  26DB  0873               	movf	GetLengthUBX@data,w
 12958  26DC  3E04               	addlw	4
 12959  26DD  0084               	movwf	4
 12960  26DE  3002               	movlw	2	; select bank4/5
 12961  26DF  0085               	movwf	5
 12962  26E0  0800               	movf	0,w
 12963  26E1  3E08               	addlw	8
 12964  26E2  00F0               	movwf	?_GetLengthUBX
 12965  26E3  3000               	movlw	0
 12966  26E4  3D01               	addwfc	1,w
 12967  26E5  00F1               	movwf	?_GetLengthUBX+1
 12968  26E6  0008               	return
 12969  26E7                     __end_of_GetLengthUBX:	
 12970                           
 12971                           	psect	text21
 12972  1515                     __ptext21:	
 12973 ;; *************** function _GPS_HasAcknowledged *****************
 12974 ;; Defined at:
 12975 ;;		line 345 in file "main.c"
 12976 ;; Parameters:    Size  Location     Type
 12977 ;;  data            1    wreg     PTR unsigned char 
 12978 ;;		 -> setNavFlightMode(44), 
 12979 ;; Auto vars:     Size  Location     Type
 12980 ;;  data            1   15[BANK0 ] PTR unsigned char 
 12981 ;;		 -> setNavFlightMode(44), 
 12982 ;;  i               1   17[BANK0 ] unsigned char 
 12983 ;;  ackPacket      10    5[BANK0 ] unsigned char [10]
 12984 ;;  startTime       4    0[BANK0 ] unsigned long 
 12985 ;;  ackByteID       1   16[BANK0 ] unsigned char 
 12986 ;;  ackByte         1    4[BANK0 ] unsigned char 
 12987 ;; Return value:  Size  Location     Type
 12988 ;;                  1    wreg      _Bool 
 12989 ;; Registers used:
 12990 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12991 ;; Tracked objects:
 12992 ;;		On entry : 0/0
 12993 ;;		On exit  : 0/0
 12994 ;;		Unchanged: 0/0
 12995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12996 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12997 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12998 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12999 ;;      Totals:         4      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13000 ;;Total ram usage:       22 bytes
 13001 ;; Hardware stack levels used:    1
 13002 ;; Hardware stack levels required when called:    4
 13003 ;; This function calls:
 13004 ;;		_EUSART1_Read
 13005 ;;		_EUSART1_is_rx_ready
 13006 ;; This function is called by:
 13007 ;;		_SetupGPS
 13008 ;; This function uses a non-reentrant model
 13009 ;;
 13010                           
 13011                           
 13012                           ;psect for function _GPS_HasAcknowledged
 13013  1515                     _GPS_HasAcknowledged:	
 13014                           
 13015                           ;incstack = 0
 13016                           ; Regs used in _GPS_HasAcknowledged: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13017                           ;GPS_HasAcknowledged@data stored from wreg
 13018  1515  0140               	movlb	0	; select bank0
 13019  1516  00AF               	movwf	GPS_HasAcknowledged@data
 13020                           
 13021                           ;main.c: 345: _Bool GPS_HasAcknowledged(uint8_t* data);main.c: 346: {;main.c: 347:     u
      +                          int8_t ackPacket[10];;main.c: 348:     uint32_t startTime = ticks;
 13022  1517  0141               	movlb	1	; select bank1
 13023  1518  086B               	movf	(_ticks+3)^(0+128),w
 13024  1519  0140               	movlb	0	; select bank0
 13025  151A  00A3               	movwf	GPS_HasAcknowledged@startTime+3
 13026  151B  0141               	movlb	1	; select bank1
 13027  151C  086A               	movf	(_ticks+2)^(0+128),w
 13028  151D  0140               	movlb	0	; select bank0
 13029  151E  00A2               	movwf	GPS_HasAcknowledged@startTime+2
 13030  151F  0141               	movlb	1	; select bank1
 13031  1520  0869               	movf	(_ticks+1)^(0+128),w
 13032  1521  0140               	movlb	0	; select bank0
 13033  1522  00A1               	movwf	GPS_HasAcknowledged@startTime+1
 13034  1523  0141               	movlb	1	; select bank1
 13035  1524  0868               	movf	_ticks^(0+128),w
 13036  1525  0140               	movlb	0	; select bank0
 13037  1526  00A0               	movwf	GPS_HasAcknowledged@startTime
 13038                           
 13039                           ;main.c: 351:     ackPacket[0] = 0xB5;
 13040  1527  30B5               	movlw	181
 13041  1528  00F0               	movwf	??_GPS_HasAcknowledged
 13042  1529  0870               	movf	??_GPS_HasAcknowledged,w
 13043  152A  00A5               	movwf	GPS_HasAcknowledged@ackPacket
 13044                           
 13045                           ;main.c: 352:     ackPacket[1] = 0x62;
 13046  152B  3062               	movlw	98
 13047  152C  00F0               	movwf	??_GPS_HasAcknowledged
 13048  152D  0870               	movf	??_GPS_HasAcknowledged,w
 13049  152E  00A6               	movwf	GPS_HasAcknowledged@ackPacket+1
 13050                           
 13051                           ;main.c: 353:     ackPacket[2] = 0x05;
 13052  152F  3005               	movlw	5
 13053  1530  00F0               	movwf	??_GPS_HasAcknowledged
 13054  1531  0870               	movf	??_GPS_HasAcknowledged,w
 13055  1532  00A7               	movwf	GPS_HasAcknowledged@ackPacket+2
 13056                           
 13057                           ;main.c: 354:     ackPacket[3] = 0x01;
 13058  1533  01A8               	clrf	GPS_HasAcknowledged@ackPacket+3
 13059  1534  0AA8               	incf	GPS_HasAcknowledged@ackPacket+3,f
 13060                           
 13061                           ;main.c: 355:     ackPacket[4] = 0x02;
 13062  1535  3002               	movlw	2
 13063  1536  00F0               	movwf	??_GPS_HasAcknowledged
 13064  1537  0870               	movf	??_GPS_HasAcknowledged,w
 13065  1538  00A9               	movwf	GPS_HasAcknowledged@ackPacket+4
 13066                           
 13067                           ;main.c: 356:     ackPacket[5] = 0x00;
 13068  1539  01AA               	clrf	GPS_HasAcknowledged@ackPacket+5
 13069                           
 13070                           ;main.c: 357:     ackPacket[6] = data[2];
 13071  153A  082F               	movf	GPS_HasAcknowledged@data,w
 13072  153B  0086               	movwf	6
 13073  153C  3002               	movlw	2	; select bank4/5
 13074  153D  0087               	movwf	7
 13075  153E  3002               	movlw	2	; select bank4/5
 13076  153F  3F42               	moviw [2]fsr1
 13077  1540  00AB               	movwf	GPS_HasAcknowledged@ackPacket+6
 13078                           
 13079                           ;main.c: 358:     ackPacket[7] = data[3];
 13080  1541  082F               	movf	GPS_HasAcknowledged@data,w
 13081  1542  0086               	movwf	6
 13082  1543  3002               	movlw	2	; select bank4/5
 13083  1544  0087               	movwf	7
 13084  1545  3002               	movlw	2	; select bank4/5
 13085  1546  3F43               	moviw [3]fsr1
 13086  1547  00AC               	movwf	GPS_HasAcknowledged@ackPacket+7
 13087                           
 13088                           ;main.c: 359:     ackPacket[8] = 0;
 13089  1548  01AD               	clrf	GPS_HasAcknowledged@ackPacket+8
 13090                           
 13091                           ;main.c: 360:     ackPacket[9] = 0;
 13092  1549  01AE               	clrf	GPS_HasAcknowledged@ackPacket+9
 13093                           
 13094                           ;main.c: 363:     for (uint8_t i = 2; i < 8; i++)
 13095  154A  3002               	movlw	2
 13096  154B  00F0               	movwf	??_GPS_HasAcknowledged
 13097  154C  0870               	movf	??_GPS_HasAcknowledged,w
 13098  154D  00B1               	movwf	GPS_HasAcknowledged@i
 13099  154E                     l4356:	
 13100                           
 13101                           ;main.c: 364:     {;main.c: 365:         ackPacket[8] = ackPacket[8] + ackPacket[i];
 13102  154E  0831               	movf	GPS_HasAcknowledged@i,w
 13103  154F  3E25               	addlw	(low (GPS_HasAcknowledged@ackPacket| 0))& (0+255)
 13104  1550  0086               	movwf	6
 13105  1551  0187               	clrf	7
 13106  1552  082D               	movf	GPS_HasAcknowledged@ackPacket+8,w
 13107  1553  0701               	addwf	1,w
 13108  1554  00F0               	movwf	??_GPS_HasAcknowledged
 13109  1555  0870               	movf	??_GPS_HasAcknowledged,w
 13110  1556  00AD               	movwf	GPS_HasAcknowledged@ackPacket+8
 13111                           
 13112                           ;main.c: 366:         ackPacket[9] = ackPacket[9] + ackPacket[8];
 13113  1557  082E               	movf	GPS_HasAcknowledged@ackPacket+9,w
 13114  1558  072D               	addwf	GPS_HasAcknowledged@ackPacket+8,w
 13115  1559  00F0               	movwf	??_GPS_HasAcknowledged
 13116  155A  0870               	movf	??_GPS_HasAcknowledged,w
 13117  155B  00AE               	movwf	GPS_HasAcknowledged@ackPacket+9
 13118                           
 13119                           ;main.c: 367:     }
 13120  155C  3001               	movlw	1
 13121  155D  00F0               	movwf	??_GPS_HasAcknowledged
 13122  155E  0870               	movf	??_GPS_HasAcknowledged,w
 13123  155F  07B1               	addwf	GPS_HasAcknowledged@i,f
 13124  1560  3008               	movlw	8
 13125  1561  0231               	subwf	GPS_HasAcknowledged@i,w
 13126  1562  1C03               	skipc
 13127  1563  2D4E               	goto	l4356
 13128  1564                     l4364:	
 13129                           
 13130                           ;main.c: 370:     uint8_t ackByte;;main.c: 373:     uint8_t ackByteID = 0;
 13131  1564  01B0               	clrf	GPS_HasAcknowledged@ackByteID
 13132  1565                     l4366:	
 13133                           
 13134                           ;main.c: 377:     {;main.c: 380:         if (ackByteID > 9)
 13135  1565  300A               	movlw	10
 13136  1566  0140               	movlb	0	; select bank0
 13137  1567  0230               	subwf	GPS_HasAcknowledged@ackByteID,w
 13138  1568  1C03               	skipc
 13139  1569  2D6C               	goto	l4372
 13140                           
 13141                           ;main.c: 381:         {;main.c: 384:             return 1;
 13142  156A  3001               	movlw	1
 13143  156B  0008               	return
 13144  156C                     l4372:	
 13145                           
 13146                           ;main.c: 388:         if (ticks - startTime > 3000)
 13147  156C  0820               	movf	GPS_HasAcknowledged@startTime,w
 13148  156D  0141               	movlb	1	; select bank1
 13149  156E  0268               	subwf	_ticks^(0+128),w
 13150  156F  00F0               	movwf	??_GPS_HasAcknowledged
 13151  1570  0140               	movlb	0	; select bank0
 13152  1571  0821               	movf	GPS_HasAcknowledged@startTime+1,w
 13153  1572  0141               	movlb	1	; select bank1
 13154  1573  3B69               	subwfb	(_ticks+1)^(0+128),w
 13155  1574  00F1               	movwf	??_GPS_HasAcknowledged+1
 13156  1575  0140               	movlb	0	; select bank0
 13157  1576  0822               	movf	GPS_HasAcknowledged@startTime+2,w
 13158  1577  0141               	movlb	1	; select bank1
 13159  1578  3B6A               	subwfb	(_ticks+2)^(0+128),w
 13160  1579  00F2               	movwf	??_GPS_HasAcknowledged+2
 13161  157A  0140               	movlb	0	; select bank0
 13162  157B  0823               	movf	GPS_HasAcknowledged@startTime+3,w
 13163  157C  0141               	movlb	1	; select bank1
 13164  157D  3B6B               	subwfb	(_ticks+3)^(0+128),w
 13165  157E  00F3               	movwf	??_GPS_HasAcknowledged+3
 13166  157F  0873               	movf	??_GPS_HasAcknowledged+3,w
 13167  1580  1D03               	btfss	3,2
 13168  1581  2D8B               	goto	l4374
 13169  1582  0872               	movf	??_GPS_HasAcknowledged+2,w
 13170  1583  1D03               	btfss	3,2
 13171  1584  2D8B               	goto	l4374
 13172  1585  30B9               	movlw	185
 13173  1586  0270               	subwf	??_GPS_HasAcknowledged,w
 13174  1587  300B               	movlw	11
 13175  1588  3B71               	subwfb	??_GPS_HasAcknowledged+1,w
 13176  1589  1C03               	btfss	3,0
 13177  158A  2D8D               	goto	l4378
 13178  158B                     l4374:	
 13179                           
 13180                           ;main.c: 389:         {;main.c: 390:             return 0;
 13181  158B  3000               	movlw	0
 13182  158C  0008               	return
 13183  158D                     l4378:	
 13184                           
 13185                           ;main.c: 394:         if (EUSART1_is_rx_ready())
 13186  158D  31A6  2646  3195   	fcall	_EUSART1_is_rx_ready
 13187  1590  3A00               	xorlw	0
 13188  1591  1903               	skipnz
 13189  1592  2D65               	goto	l4366
 13190                           
 13191                           ;main.c: 395:         {;main.c: 396:             ackByte = EUSART1_Read();
 13192  1593  31A6  269F  3195   	fcall	_EUSART1_Read
 13193  1596  00F0               	movwf	??_GPS_HasAcknowledged
 13194  1597  0870               	movf	??_GPS_HasAcknowledged,w
 13195  1598  0140               	movlb	0	; select bank0
 13196  1599  00A4               	movwf	GPS_HasAcknowledged@ackByte
 13197                           
 13198                           ;main.c: 399:             if (ackByte == ackPacket[ackByteID]) {
 13199  159A  0830               	movf	GPS_HasAcknowledged@ackByteID,w
 13200  159B  3E25               	addlw	(low (GPS_HasAcknowledged@ackPacket| 0))& (0+255)
 13201  159C  0086               	movwf	6
 13202  159D  0187               	clrf	7
 13203  159E  0801               	movf	1,w
 13204  159F  0624               	xorwf	GPS_HasAcknowledged@ackByte,w
 13205  15A0  1D03               	skipz
 13206  15A1  2D64               	goto	l4364
 13207                           
 13208                           ;main.c: 400:                 ackByteID++;
 13209  15A2  3001               	movlw	1
 13210  15A3  00F0               	movwf	??_GPS_HasAcknowledged
 13211  15A4  0870               	movf	??_GPS_HasAcknowledged,w
 13212  15A5  07B0               	addwf	GPS_HasAcknowledged@ackByteID,f
 13213                           
 13214                           ;main.c: 401:             }
 13215  15A6  2D65               	goto	l4366
 13216  15A7                     __end_of_GPS_HasAcknowledged:	
 13217                           
 13218                           	psect	text22
 13219  26C6                     __ptext22:	
 13220 ;; *************** function _SYSTEM_Initialize *****************
 13221 ;; Defined at:
 13222 ;;		line 50 in file "mcc_generated_files/mcc.c"
 13223 ;; Parameters:    Size  Location     Type
 13224 ;;		None
 13225 ;; Auto vars:     Size  Location     Type
 13226 ;;		None
 13227 ;; Return value:  Size  Location     Type
 13228 ;;                  1    wreg      void 
 13229 ;; Registers used:
 13230 ;;		wreg, status,2, status,0, pclath, cstack
 13231 ;; Tracked objects:
 13232 ;;		On entry : 0/0
 13233 ;;		On exit  : 0/0
 13234 ;;		Unchanged: 0/0
 13235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13239 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13240 ;;Total ram usage:        0 bytes
 13241 ;; Hardware stack levels used:    1
 13242 ;; Hardware stack levels required when called:    5
 13243 ;; This function calls:
 13244 ;;		_EUSART1_Initialize
 13245 ;;		_OSCILLATOR_Initialize
 13246 ;;		_PIN_MANAGER_Initialize
 13247 ;;		_PMD_Initialize
 13248 ;;		_TMR0_Initialize
 13249 ;; This function is called by:
 13250 ;;		_main
 13251 ;; This function uses a non-reentrant model
 13252 ;;
 13253                           
 13254                           
 13255                           ;psect for function _SYSTEM_Initialize
 13256  26C6                     _SYSTEM_Initialize:	
 13257                           
 13258                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
 13259                           
 13260                           ;incstack = 0
 13261                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 13262  26C6  31A6  268A  31A6   	fcall	_PMD_Initialize
 13263                           
 13264                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
 13265  26C9  3198  20C7  31A6   	fcall	_PIN_MANAGER_Initialize
 13266                           
 13267                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
 13268  26CC  31A6  2677  31A6   	fcall	_OSCILLATOR_Initialize
 13269                           
 13270                           ;mcc_generated_files/mcc.c: 55:     TMR0_Initialize();
 13271  26CF  31A6  26E7  31A6   	fcall	_TMR0_Initialize
 13272                           
 13273                           ;mcc_generated_files/mcc.c: 56:     EUSART1_Initialize();
 13274  26D2  31A7  27DF         	fcall	_EUSART1_Initialize
 13275  26D4  0008               	return
 13276  26D5                     __end_of_SYSTEM_Initialize:	
 13277                           
 13278                           	psect	text23
 13279  26E7                     __ptext23:	
 13280 ;; *************** function _TMR0_Initialize *****************
 13281 ;; Defined at:
 13282 ;;		line 61 in file "mcc_generated_files/tmr0.c"
 13283 ;; Parameters:    Size  Location     Type
 13284 ;;		None
 13285 ;; Auto vars:     Size  Location     Type
 13286 ;;		None
 13287 ;; Return value:  Size  Location     Type
 13288 ;;                  1    wreg      void 
 13289 ;; Registers used:
 13290 ;;		wreg, status,2, status,0, pclath, cstack
 13291 ;; Tracked objects:
 13292 ;;		On entry : 0/0
 13293 ;;		On exit  : 0/0
 13294 ;;		Unchanged: 0/0
 13295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13297 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13299 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13300 ;;Total ram usage:        0 bytes
 13301 ;; Hardware stack levels used:    1
 13302 ;; Hardware stack levels required when called:    4
 13303 ;; This function calls:
 13304 ;;		_TMR0_SetInterruptHandler
 13305 ;; This function is called by:
 13306 ;;		_SYSTEM_Initialize
 13307 ;; This function uses a non-reentrant model
 13308 ;;
 13309                           
 13310                           
 13311                           ;psect for function _TMR0_Initialize
 13312  26E7                     _TMR0_Initialize:	
 13313                           
 13314                           ;mcc_generated_files/tmr0.c: 66:     T0CON1 = 0x40;
 13315                           
 13316                           ;incstack = 0
 13317                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
 13318  26E7  3040               	movlw	64
 13319  26E8  014B               	movlb	11	; select bank11
 13320  26E9  009F               	movwf	31	;volatile
 13321                           
 13322                           ;mcc_generated_files/tmr0.c: 69:     TMR0H = 0xF9;
 13323  26EA  30F9               	movlw	249
 13324  26EB  009D               	movwf	29	;volatile
 13325                           
 13326                           ;mcc_generated_files/tmr0.c: 72:     TMR0L = 0x00;
 13327  26EC  019C               	clrf	28	;volatile
 13328                           
 13329                           ;mcc_generated_files/tmr0.c: 75:     PIR0bits.TMR0IF = 0;
 13330  26ED  014E               	movlb	14	; select bank14
 13331  26EE  128C               	bcf	12,5	;volatile
 13332                           
 13333                           ;mcc_generated_files/tmr0.c: 78:     PIE0bits.TMR0IE = 1;
 13334  26EF  1696               	bsf	22,5	;volatile
 13335                           
 13336                           ;mcc_generated_files/tmr0.c: 81:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
 13337  26F0  30FF               	movlw	low _TMR0_DefaultInterruptHandler
 13338  26F1  00F0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 13339  26F2  3007               	movlw	high _TMR0_DefaultInterruptHandler
 13340  26F3  00F1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 13341  26F4  31A6  264B         	fcall	_TMR0_SetInterruptHandler
 13342                           
 13343                           ;mcc_generated_files/tmr0.c: 84:     T0CON0 = 0x80;
 13344  26F6  3080               	movlw	128
 13345  26F7  014B               	movlb	11	; select bank11
 13346  26F8  009E               	movwf	30	;volatile
 13347  26F9  0008               	return
 13348  26FA                     __end_of_TMR0_Initialize:	
 13349                           
 13350                           	psect	text24
 13351  268A                     __ptext24:	
 13352 ;; *************** function _PMD_Initialize *****************
 13353 ;; Defined at:
 13354 ;;		line 73 in file "mcc_generated_files/mcc.c"
 13355 ;; Parameters:    Size  Location     Type
 13356 ;;		None
 13357 ;; Auto vars:     Size  Location     Type
 13358 ;;		None
 13359 ;; Return value:  Size  Location     Type
 13360 ;;                  1    wreg      void 
 13361 ;; Registers used:
 13362 ;;		status,2
 13363 ;; Tracked objects:
 13364 ;;		On entry : 0/0
 13365 ;;		On exit  : 0/0
 13366 ;;		Unchanged: 0/0
 13367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13368 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13369 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13371 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13372 ;;Total ram usage:        0 bytes
 13373 ;; Hardware stack levels used:    1
 13374 ;; Hardware stack levels required when called:    3
 13375 ;; This function calls:
 13376 ;;		Nothing
 13377 ;; This function is called by:
 13378 ;;		_SYSTEM_Initialize
 13379 ;; This function uses a non-reentrant model
 13380 ;;
 13381                           
 13382                           
 13383                           ;psect for function _PMD_Initialize
 13384  268A                     _PMD_Initialize:	
 13385                           
 13386                           ;mcc_generated_files/mcc.c: 76:     PMD0 = 0x00;
 13387                           
 13388                           ;incstack = 0
 13389                           ; Regs used in _PMD_Initialize: [status,2]
 13390  268A  014F               	movlb	15	; select bank15
 13391  268B  0196               	clrf	22	;volatile
 13392                           
 13393                           ;mcc_generated_files/mcc.c: 78:     PMD1 = 0x00;
 13394  268C  0197               	clrf	23	;volatile
 13395                           
 13396                           ;mcc_generated_files/mcc.c: 80:     PMD2 = 0x00;
 13397  268D  0198               	clrf	24	;volatile
 13398                           
 13399                           ;mcc_generated_files/mcc.c: 82:     PMD3 = 0x00;
 13400  268E  0199               	clrf	25	;volatile
 13401                           
 13402                           ;mcc_generated_files/mcc.c: 84:     PMD4 = 0x00;
 13403  268F  019A               	clrf	26	;volatile
 13404                           
 13405                           ;mcc_generated_files/mcc.c: 86:     PMD5 = 0x00;
 13406  2690  019B               	clrf	27	;volatile
 13407                           
 13408                           ;mcc_generated_files/mcc.c: 88:     PMD6 = 0x00;
 13409  2691  019C               	clrf	28	;volatile
 13410                           
 13411                           ;mcc_generated_files/mcc.c: 90:     PMD7 = 0x00;
 13412  2692  019D               	clrf	29	;volatile
 13413  2693  0008               	return
 13414  2694                     __end_of_PMD_Initialize:	
 13415                           
 13416                           	psect	text25
 13417  18C7                     __ptext25:	
 13418 ;; *************** function _PIN_MANAGER_Initialize *****************
 13419 ;; Defined at:
 13420 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 13421 ;; Parameters:    Size  Location     Type
 13422 ;;		None
 13423 ;; Auto vars:     Size  Location     Type
 13424 ;;		None
 13425 ;; Return value:  Size  Location     Type
 13426 ;;                  1    wreg      void 
 13427 ;; Registers used:
 13428 ;;		wreg, status,2
 13429 ;; Tracked objects:
 13430 ;;		On entry : 0/0
 13431 ;;		On exit  : 0/0
 13432 ;;		Unchanged: 0/0
 13433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13435 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13437 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13438 ;;Total ram usage:        0 bytes
 13439 ;; Hardware stack levels used:    1
 13440 ;; Hardware stack levels required when called:    3
 13441 ;; This function calls:
 13442 ;;		Nothing
 13443 ;; This function is called by:
 13444 ;;		_SYSTEM_Initialize
 13445 ;; This function uses a non-reentrant model
 13446 ;;
 13447                           
 13448                           
 13449                           ;psect for function _PIN_MANAGER_Initialize
 13450  18C7                     _PIN_MANAGER_Initialize:	
 13451                           
 13452                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
 13453                           
 13454                           ;incstack = 0
 13455                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 13456  18C7  0140               	movlb	0	; select bank0
 13457  18C8  0198               	clrf	24	;volatile
 13458                           
 13459                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
 13460  18C9  0199               	clrf	25	;volatile
 13461                           
 13462                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
 13463  18CA  019A               	clrf	26	;volatile
 13464                           
 13465                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x0B;
 13466  18CB  300B               	movlw	11
 13467  18CC  0092               	movwf	18	;volatile
 13468                           
 13469                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0x30;
 13470  18CD  3030               	movlw	48
 13471  18CE  0093               	movwf	19	;volatile
 13472                           
 13473                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xDF;
 13474  18CF  30DF               	movlw	223
 13475  18D0  0094               	movwf	20	;volatile
 13476                           
 13477                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0xFF;
 13478  18D1  30FF               	movlw	255
 13479  18D2  017E               	movlb	62	; select bank62
 13480  18D3  00CE               	movwf	78	;volatile
 13481                           
 13482                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x80;
 13483  18D4  3080               	movlw	128
 13484  18D5  00C3               	movwf	67	;volatile
 13485                           
 13486                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x37;
 13487  18D6  3037               	movlw	55
 13488  18D7  00B8               	movwf	56	;volatile
 13489                           
 13490                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
 13491  18D8  01C4               	clrf	68	;volatile
 13492                           
 13493                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x00;
 13494  18D9  01B9               	clrf	57	;volatile
 13495                           
 13496                           ;mcc_generated_files/pin_manager.c: 83:     WPUC = 0x00;
 13497  18DA  01CF               	clrf	79	;volatile
 13498                           
 13499                           ;mcc_generated_files/pin_manager.c: 88:     ODCONA = 0x00;
 13500  18DB  01BA               	clrf	58	;volatile
 13501                           
 13502                           ;mcc_generated_files/pin_manager.c: 89:     ODCONB = 0x00;
 13503  18DC  01C5               	clrf	69	;volatile
 13504                           
 13505                           ;mcc_generated_files/pin_manager.c: 90:     ODCONC = 0x00;
 13506  18DD  01D0               	clrf	80	;volatile
 13507                           
 13508                           ;mcc_generated_files/pin_manager.c: 95:     SLRCONA = 0x37;
 13509  18DE  3037               	movlw	55
 13510  18DF  00BB               	movwf	59	;volatile
 13511                           
 13512                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONB = 0xF0;
 13513  18E0  30F0               	movlw	240
 13514  18E1  00C6               	movwf	70	;volatile
 13515                           
 13516                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONC = 0xFF;
 13517  18E2  30FF               	movlw	255
 13518  18E3  00D1               	movwf	81	;volatile
 13519                           
 13520                           ;mcc_generated_files/pin_manager.c: 102:     INLVLA = 0x3F;
 13521  18E4  303F               	movlw	63
 13522  18E5  00BC               	movwf	60	;volatile
 13523                           
 13524                           ;mcc_generated_files/pin_manager.c: 103:     INLVLB = 0xF0;
 13525  18E6  30F0               	movlw	240
 13526  18E7  00C7               	movwf	71	;volatile
 13527                           
 13528                           ;mcc_generated_files/pin_manager.c: 104:     INLVLC = 0xFF;
 13529  18E8  30FF               	movlw	255
 13530  18E9  00D2               	movwf	82	;volatile
 13531                           
 13532                           ;mcc_generated_files/pin_manager.c: 113:     RB7PPS = 0x0F;
 13533  18EA  300F               	movlw	15
 13534  18EB  009F               	movwf	31	;volatile
 13535                           
 13536                           ;mcc_generated_files/pin_manager.c: 114:     RX1DTPPS = 0x0D;
 13537  18EC  300D               	movlw	13
 13538  18ED  017D               	movlb	61	; select bank61
 13539  18EE  00CB               	movwf	75	;volatile
 13540  18EF  0008               	return
 13541  18F0                     __end_of_PIN_MANAGER_Initialize:	
 13542                           
 13543                           	psect	text26
 13544  2677                     __ptext26:	
 13545 ;; *************** function _OSCILLATOR_Initialize *****************
 13546 ;; Defined at:
 13547 ;;		line 59 in file "mcc_generated_files/mcc.c"
 13548 ;; Parameters:    Size  Location     Type
 13549 ;;		None
 13550 ;; Auto vars:     Size  Location     Type
 13551 ;;		None
 13552 ;; Return value:  Size  Location     Type
 13553 ;;                  1    wreg      void 
 13554 ;; Registers used:
 13555 ;;		wreg, status,2
 13556 ;; Tracked objects:
 13557 ;;		On entry : 0/0
 13558 ;;		On exit  : 0/0
 13559 ;;		Unchanged: 0/0
 13560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13564 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13565 ;;Total ram usage:        0 bytes
 13566 ;; Hardware stack levels used:    1
 13567 ;; Hardware stack levels required when called:    3
 13568 ;; This function calls:
 13569 ;;		Nothing
 13570 ;; This function is called by:
 13571 ;;		_SYSTEM_Initialize
 13572 ;; This function uses a non-reentrant model
 13573 ;;
 13574                           
 13575                           
 13576                           ;psect for function _OSCILLATOR_Initialize
 13577  2677                     _OSCILLATOR_Initialize:	
 13578                           
 13579                           ;mcc_generated_files/mcc.c: 62:     OSCCON1 = 0x62;
 13580                           
 13581                           ;incstack = 0
 13582                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 13583  2677  3062               	movlw	98
 13584  2678  0151               	movlb	17	; select bank17
 13585  2679  008D               	movwf	13	;volatile
 13586                           
 13587                           ;mcc_generated_files/mcc.c: 64:     OSCCON3 = 0x00;
 13588  267A  018F               	clrf	15	;volatile
 13589                           
 13590                           ;mcc_generated_files/mcc.c: 66:     OSCEN = 0x00;
 13591  267B  0191               	clrf	17	;volatile
 13592                           
 13593                           ;mcc_generated_files/mcc.c: 68:     OSCFRQ = 0x02;
 13594  267C  3002               	movlw	2
 13595  267D  0093               	movwf	19	;volatile
 13596                           
 13597                           ;mcc_generated_files/mcc.c: 70:     OSCTUNE = 0x00;
 13598  267E  0192               	clrf	18	;volatile
 13599  267F  0008               	return
 13600  2680                     __end_of_OSCILLATOR_Initialize:	
 13601                           
 13602                           	psect	text27
 13603  27DF                     __ptext27:	
 13604 ;; *************** function _EUSART1_Initialize *****************
 13605 ;; Defined at:
 13606 ;;		line 66 in file "mcc_generated_files/eusart1.c"
 13607 ;; Parameters:    Size  Location     Type
 13608 ;;		None
 13609 ;; Auto vars:     Size  Location     Type
 13610 ;;		None
 13611 ;; Return value:  Size  Location     Type
 13612 ;;                  1    wreg      void 
 13613 ;; Registers used:
 13614 ;;		wreg, status,2, status,0, pclath, cstack
 13615 ;; Tracked objects:
 13616 ;;		On entry : 0/0
 13617 ;;		On exit  : 0/0
 13618 ;;		Unchanged: 0/0
 13619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13623 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13624 ;;Total ram usage:        0 bytes
 13625 ;; Hardware stack levels used:    1
 13626 ;; Hardware stack levels required when called:    4
 13627 ;; This function calls:
 13628 ;;		_EUSART1_SetErrorHandler
 13629 ;;		_EUSART1_SetFramingErrorHandler
 13630 ;;		_EUSART1_SetOverrunErrorHandler
 13631 ;; This function is called by:
 13632 ;;		_SYSTEM_Initialize
 13633 ;; This function uses a non-reentrant model
 13634 ;;
 13635                           
 13636                           
 13637                           ;psect for function _EUSART1_Initialize
 13638  27DF                     _EUSART1_Initialize:	
 13639                           
 13640                           ;mcc_generated_files/eusart1.c: 71:     BAUD1CON = 0x08;
 13641                           
 13642                           ;incstack = 0
 13643                           ; Regs used in _EUSART1_Initialize: [wreg+status,2+status,0+pclath+cstack]
 13644  27DF  3008               	movlw	8
 13645  27E0  0142               	movlb	2	; select bank2
 13646  27E1  009F               	movwf	31	;volatile
 13647                           
 13648                           ;mcc_generated_files/eusart1.c: 74:     RC1STA = 0x90;
 13649  27E2  3090               	movlw	144
 13650  27E3  009D               	movwf	29	;volatile
 13651                           
 13652                           ;mcc_generated_files/eusart1.c: 77:     TX1STA = 0x24;
 13653  27E4  3024               	movlw	36
 13654  27E5  009E               	movwf	30	;volatile
 13655                           
 13656                           ;mcc_generated_files/eusart1.c: 80:     SP1BRGL = 0x19;
 13657  27E6  3019               	movlw	25
 13658  27E7  009B               	movwf	27	;volatile
 13659                           
 13660                           ;mcc_generated_files/eusart1.c: 83:     SP1BRGH = 0x00;
 13661  27E8  019C               	clrf	28	;volatile
 13662                           
 13663                           ;mcc_generated_files/eusart1.c: 86:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultFr
      +                          amingErrorHandler);
 13664  27E9  3000               	movlw	0
 13665  27EA  00F0               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler
 13666  27EB  3000               	movlw	0
 13667  27EC  00F1               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler+1
 13668  27ED  31A6  2657  31A7   	fcall	_EUSART1_SetFramingErrorHandler
 13669                           
 13670                           ;mcc_generated_files/eusart1.c: 87:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOv
      +                          errunErrorHandler);
 13671  27F0  3000               	movlw	0
 13672  27F1  00F0               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler
 13673  27F2  3000               	movlw	0
 13674  27F3  00F1               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler+1
 13675  27F4  31A6  265D  31A7   	fcall	_EUSART1_SetOverrunErrorHandler
 13676                           
 13677                           ;mcc_generated_files/eusart1.c: 88:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHand
      +                          ler);
 13678  27F7  3000               	movlw	0
 13679  27F8  00F0               	movwf	EUSART1_SetErrorHandler@interruptHandler
 13680  27F9  3000               	movlw	0
 13681  27FA  00F1               	movwf	EUSART1_SetErrorHandler@interruptHandler+1
 13682  27FB  31A6  2651         	fcall	_EUSART1_SetErrorHandler
 13683                           
 13684                           ;mcc_generated_files/eusart1.c: 90:     eusart1RxLastError.status = 0;
 13685  27FD  0141               	movlb	1	; select bank1
 13686  27FE  01ED               	clrf	_eusart1RxLastError^(0+128)	;volatile
 13687  27FF  0008               	return
 13688  2800                     __end_of_EUSART1_Initialize:	
 13689                           
 13690                           	psect	text28
 13691  265D                     __ptext28:	
 13692 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
 13693 ;; Defined at:
 13694 ;;		line 161 in file "mcc_generated_files/eusart1.c"
 13695 ;; Parameters:    Size  Location     Type
 13696 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
 13697 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
 13698 ;; Auto vars:     Size  Location     Type
 13699 ;;		None
 13700 ;; Return value:  Size  Location     Type
 13701 ;;                  1    wreg      void 
 13702 ;; Registers used:
 13703 ;;		wreg
 13704 ;; Tracked objects:
 13705 ;;		On entry : 0/0
 13706 ;;		On exit  : 0/0
 13707 ;;		Unchanged: 0/0
 13708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13709 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13710 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13712 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13713 ;;Total ram usage:        2 bytes
 13714 ;; Hardware stack levels used:    1
 13715 ;; Hardware stack levels required when called:    3
 13716 ;; This function calls:
 13717 ;;		Nothing
 13718 ;; This function is called by:
 13719 ;;		_EUSART1_Initialize
 13720 ;; This function uses a non-reentrant model
 13721 ;;
 13722                           
 13723                           
 13724                           ;psect for function _EUSART1_SetOverrunErrorHandler
 13725  265D                     _EUSART1_SetOverrunErrorHandler:	
 13726                           
 13727                           ;mcc_generated_files/eusart1.c: 162:     EUSART1_OverrunErrorHandler = interruptHandler;
 13728                           
 13729                           ;incstack = 0
 13730                           ; Regs used in _EUSART1_SetOverrunErrorHandler: [wreg]
 13731  265D  0871               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler+1,w
 13732  265E  0142               	movlb	2	; select bank2
 13733  265F  00E8               	movwf	(_EUSART1_OverrunErrorHandler+1)^(0+256)
 13734  2660  0870               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler,w
 13735  2661  00E7               	movwf	_EUSART1_OverrunErrorHandler^(0+256)
 13736  2662  0008               	return
 13737  2663                     __end_of_EUSART1_SetOverrunErrorHandler:	
 13738                           
 13739                           	psect	text29
 13740  2657                     __ptext29:	
 13741 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
 13742 ;; Defined at:
 13743 ;;		line 157 in file "mcc_generated_files/eusart1.c"
 13744 ;; Parameters:    Size  Location     Type
 13745 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
 13746 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
 13747 ;; Auto vars:     Size  Location     Type
 13748 ;;		None
 13749 ;; Return value:  Size  Location     Type
 13750 ;;                  1    wreg      void 
 13751 ;; Registers used:
 13752 ;;		wreg
 13753 ;; Tracked objects:
 13754 ;;		On entry : 0/0
 13755 ;;		On exit  : 0/0
 13756 ;;		Unchanged: 0/0
 13757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13758 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13761 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13762 ;;Total ram usage:        2 bytes
 13763 ;; Hardware stack levels used:    1
 13764 ;; Hardware stack levels required when called:    3
 13765 ;; This function calls:
 13766 ;;		Nothing
 13767 ;; This function is called by:
 13768 ;;		_EUSART1_Initialize
 13769 ;; This function uses a non-reentrant model
 13770 ;;
 13771                           
 13772                           
 13773                           ;psect for function _EUSART1_SetFramingErrorHandler
 13774  2657                     _EUSART1_SetFramingErrorHandler:	
 13775                           
 13776                           ;mcc_generated_files/eusart1.c: 158:     EUSART1_FramingErrorHandler = interruptHandler;
 13777                           
 13778                           ;incstack = 0
 13779                           ; Regs used in _EUSART1_SetFramingErrorHandler: [wreg]
 13780  2657  0871               	movf	EUSART1_SetFramingErrorHandler@interruptHandler+1,w
 13781  2658  0142               	movlb	2	; select bank2
 13782  2659  00EA               	movwf	(_EUSART1_FramingErrorHandler+1)^(0+256)
 13783  265A  0870               	movf	EUSART1_SetFramingErrorHandler@interruptHandler,w
 13784  265B  00E9               	movwf	_EUSART1_FramingErrorHandler^(0+256)
 13785  265C  0008               	return
 13786  265D                     __end_of_EUSART1_SetFramingErrorHandler:	
 13787                           
 13788                           	psect	text30
 13789  2651                     __ptext30:	
 13790 ;; *************** function _EUSART1_SetErrorHandler *****************
 13791 ;; Defined at:
 13792 ;;		line 165 in file "mcc_generated_files/eusart1.c"
 13793 ;; Parameters:    Size  Location     Type
 13794 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
 13795 ;;		 -> EUSART1_DefaultErrorHandler(1), 
 13796 ;; Auto vars:     Size  Location     Type
 13797 ;;		None
 13798 ;; Return value:  Size  Location     Type
 13799 ;;                  1    wreg      void 
 13800 ;; Registers used:
 13801 ;;		wreg
 13802 ;; Tracked objects:
 13803 ;;		On entry : 0/0
 13804 ;;		On exit  : 0/0
 13805 ;;		Unchanged: 0/0
 13806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13807 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13810 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13811 ;;Total ram usage:        2 bytes
 13812 ;; Hardware stack levels used:    1
 13813 ;; Hardware stack levels required when called:    3
 13814 ;; This function calls:
 13815 ;;		Nothing
 13816 ;; This function is called by:
 13817 ;;		_EUSART1_Initialize
 13818 ;; This function uses a non-reentrant model
 13819 ;;
 13820                           
 13821                           
 13822                           ;psect for function _EUSART1_SetErrorHandler
 13823  2651                     _EUSART1_SetErrorHandler:	
 13824                           
 13825                           ;mcc_generated_files/eusart1.c: 166:     EUSART1_ErrorHandler = interruptHandler;
 13826                           
 13827                           ;incstack = 0
 13828                           ; Regs used in _EUSART1_SetErrorHandler: [wreg]
 13829  2651  0871               	movf	EUSART1_SetErrorHandler@interruptHandler+1,w
 13830  2652  0143               	movlb	3	; select bank3
 13831  2653  00EE               	movwf	(_EUSART1_ErrorHandler+1)^(0+384)
 13832  2654  0870               	movf	EUSART1_SetErrorHandler@interruptHandler,w
 13833  2655  00ED               	movwf	_EUSART1_ErrorHandler^(0+384)
 13834  2656  0008               	return
 13835  2657                     __end_of_EUSART1_SetErrorHandler:	
 13836                           
 13837                           	psect	text31
 13838  05AA                     __ptext31:	
 13839 ;; *************** function _PollGPS *****************
 13840 ;; Defined at:
 13841 ;;		line 475 in file "main.c"
 13842 ;; Parameters:    Size  Location     Type
 13843 ;;		None
 13844 ;; Auto vars:     Size  Location     Type
 13845 ;;  skip            1   27[BANK0 ] _Bool 
 13846 ;;  data_type       7   20[BANK0 ] unsigned char [7]
 13847 ;;  startTime       4   16[BANK0 ] unsigned long 
 13848 ;;  index           2   38[BANK0 ] int 
 13849 ;;  dataFieldTyp    2   36[BANK0 ] int 
 13850 ;;  dataIndex       2   33[BANK0 ] int 
 13851 ;;  signInsertIn    2   31[BANK0 ] int 
 13852 ;;  byte            1   35[BANK0 ] unsigned char 
 13853 ;;  doParse         1   30[BANK0 ] _Bool 
 13854 ;;  success         1   29[BANK0 ] _Bool 
 13855 ;; Return value:  Size  Location     Type
 13856 ;;                  1    wreg      _Bool 
 13857 ;; Registers used:
 13858 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13859 ;; Tracked objects:
 13860 ;;		On entry : 0/0
 13861 ;;		On exit  : 0/0
 13862 ;;		Unchanged: 0/0
 13863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13865 ;;      Locals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13866 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13867 ;;      Totals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13868 ;;Total ram usage:       28 bytes
 13869 ;; Hardware stack levels used:    1
 13870 ;; Hardware stack levels required when called:    5
 13871 ;; This function calls:
 13872 ;;		_ClearMessages
 13873 ;;		_ClearString
 13874 ;;		_EUSART1_Read
 13875 ;;		_EUSART1_is_rx_ready
 13876 ;;		_Insert
 13877 ;;		_InsertString
 13878 ;;		_WriteGPS
 13879 ;;		_strcmp
 13880 ;; This function is called by:
 13881 ;;		_main
 13882 ;; This function uses a non-reentrant model
 13883 ;;
 13884                           
 13885                           
 13886                           ;psect for function _PollGPS
 13887  05AA                     _PollGPS:	
 13888                           
 13889                           ;main.c: 477:     _Bool success = 0;
 13890                           
 13891                           ;incstack = 0
 13892                           ; Regs used in _PollGPS: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13893  05AA  0140               	movlb	0	; select bank0
 13894  05AB  01BD               	clrf	PollGPS@success
 13895                           
 13896                           ;main.c: 478:     uint32_t startTime = ticks;
 13897  05AC  0141               	movlb	1	; select bank1
 13898  05AD  086B               	movf	(_ticks+3)^(0+128),w
 13899  05AE  0140               	movlb	0	; select bank0
 13900  05AF  00B3               	movwf	PollGPS@startTime+3
 13901  05B0  0141               	movlb	1	; select bank1
 13902  05B1  086A               	movf	(_ticks+2)^(0+128),w
 13903  05B2  0140               	movlb	0	; select bank0
 13904  05B3  00B2               	movwf	PollGPS@startTime+2
 13905  05B4  0141               	movlb	1	; select bank1
 13906  05B5  0869               	movf	(_ticks+1)^(0+128),w
 13907  05B6  0140               	movlb	0	; select bank0
 13908  05B7  00B1               	movwf	PollGPS@startTime+1
 13909  05B8  0141               	movlb	1	; select bank1
 13910  05B9  0868               	movf	_ticks^(0+128),w
 13911  05BA  0140               	movlb	0	; select bank0
 13912  05BB  00B0               	movwf	PollGPS@startTime
 13913                           
 13914                           ;main.c: 481:     int dataIndex = 0;
 13915  05BC  01C1               	clrf	PollGPS@dataIndex
 13916  05BD  01C2               	clrf	PollGPS@dataIndex+1
 13917                           
 13918                           ;main.c: 483:     int dataFieldType = 0;
 13919  05BE  01C4               	clrf	PollGPS@dataFieldType
 13920  05BF  01C5               	clrf	PollGPS@dataFieldType+1
 13921                           
 13922                           ;main.c: 485:     char byte;;main.c: 487:     char data_type[7] = {'\0'};
 13923  05C0  3034               	movlw	low PollGPS@data_type
 13924  05C1  0086               	movwf	6
 13925  05C2  3000               	movlw	high PollGPS@data_type
 13926  05C3  0087               	movwf	7
 13927  05C4  3007               	movlw	7
 13928  05C5  00AC               	movwf	??_PollGPS
 13929  05C6  3000               	movlw	0
 13930  05C7                     u5950:	
 13931  05C7  001E               	movwi fsr1++
 13932  05C8  0BAC               	decfsz	??_PollGPS,f
 13933  05C9  2DC7               	goto	u5950
 13934                           
 13935                           ;main.c: 489:     _Bool doParse = 0;
 13936  05CA  01BE               	clrf	PollGPS@doParse
 13937                           
 13938                           ;main.c: 492:     ClearMessages();
 13939  05CB  31A7  27C1  3185   	fcall	_ClearMessages
 13940                           
 13941                           ;main.c: 495:     int index = 0;
 13942  05CE  0140               	movlb	0	; select bank0
 13943  05CF  01C6               	clrf	PollGPS@index
 13944  05D0  01C7               	clrf	PollGPS@index+1
 13945                           
 13946                           ;main.c: 498:     int signInsertIndex = -1;
 13947  05D1  30FF               	movlw	255
 13948  05D2  00BF               	movwf	PollGPS@signInsertIndex
 13949  05D3  30FF               	movlw	255
 13950  05D4  00C0               	movwf	PollGPS@signInsertIndex+1
 13951                           
 13952                           ;main.c: 501:     WriteGPS("$PUBX,00*33\r\n");
 13953  05D5  309C               	movlw	low (STR_7| (0+32768))
 13954  05D6  00F5               	movwf	WriteGPS@message
 13955  05D7  30A8               	movlw	high (STR_7| (0+32768))
 13956  05D8  00F6               	movwf	WriteGPS@message+1
 13957  05D9  3198  209F  3185   	fcall	_WriteGPS
 13958  05DC                     l5880:	
 13959                           ;main.c: 503:     while (!success)
 13960                           
 13961                           
 13962                           ;main.c: 503:     while (!success)
 13963  05DC  0140               	movlb	0	; select bank0
 13964  05DD  083D               	movf	PollGPS@success,w
 13965  05DE  1D03               	btfss	3,2
 13966  05DF  2F98               	goto	l5882
 13967                           
 13968                           ;main.c: 504:     {;main.c: 506:         if (ticks - startTime > 3000)
 13969  05E0  0830               	movf	PollGPS@startTime,w
 13970  05E1  0141               	movlb	1	; select bank1
 13971  05E2  0268               	subwf	_ticks^(0+128),w
 13972  05E3  0140               	movlb	0	; select bank0
 13973  05E4  00AC               	movwf	??_PollGPS
 13974  05E5  0831               	movf	PollGPS@startTime+1,w
 13975  05E6  0141               	movlb	1	; select bank1
 13976  05E7  3B69               	subwfb	(_ticks+1)^(0+128),w
 13977  05E8  0140               	movlb	0	; select bank0
 13978  05E9  00AD               	movwf	??_PollGPS+1
 13979  05EA  0832               	movf	PollGPS@startTime+2,w
 13980  05EB  0141               	movlb	1	; select bank1
 13981  05EC  3B6A               	subwfb	(_ticks+2)^(0+128),w
 13982  05ED  0140               	movlb	0	; select bank0
 13983  05EE  00AE               	movwf	??_PollGPS+2
 13984  05EF  0833               	movf	PollGPS@startTime+3,w
 13985  05F0  0141               	movlb	1	; select bank1
 13986  05F1  3B6B               	subwfb	(_ticks+3)^(0+128),w
 13987  05F2  0140               	movlb	0	; select bank0
 13988  05F3  00AF               	movwf	??_PollGPS+3
 13989  05F4  082F               	movf	??_PollGPS+3,w
 13990  05F5  1D03               	btfss	3,2
 13991  05F6  2F98               	goto	l5882
 13992  05F7  082E               	movf	??_PollGPS+2,w
 13993  05F8  1D03               	btfss	3,2
 13994  05F9  2F98               	goto	l5882
 13995  05FA  30B9               	movlw	185
 13996  05FB  022C               	subwf	??_PollGPS,w
 13997  05FC  300B               	movlw	11
 13998  05FD  3B2D               	subwfb	??_PollGPS+1,w
 13999  05FE  1803               	btfsc	3,0
 14000  05FF  2F98               	goto	l5882
 14001                           
 14002                           ;main.c: 511:         if (EUSART1_is_rx_ready())
 14003  0600  31A6  2646  3185   	fcall	_EUSART1_is_rx_ready
 14004  0603  3A00               	xorlw	0
 14005  0604  1903               	skipnz
 14006  0605  2DDC               	goto	l5880
 14007                           
 14008                           ;main.c: 512:         {;main.c: 513:             byte = EUSART1_Read();
 14009  0606  31A6  269F  3185   	fcall	_EUSART1_Read
 14010  0609  0140               	movlb	0	; select bank0
 14011  060A  00AC               	movwf	??_PollGPS
 14012  060B  082C               	movf	??_PollGPS,w
 14013  060C  00C3               	movwf	PollGPS@byte
 14014                           
 14015                           ;main.c: 541:             _Bool skip = 1;
 14016  060D  01BB               	clrf	PollGPS@skip
 14017  060E  0ABB               	incf	PollGPS@skip,f
 14018                           
 14019                           ;main.c: 542:             switch (byte)
 14020  060F  2EA6               	goto	l5820
 14021  0610                     l782:	
 14022                           ;main.c: 543:             {;main.c: 544:             case '$':
 14023                           
 14024                           
 14025                           ;main.c: 545:                 doParse = 1;
 14026  0610  01BE               	clrf	PollGPS@doParse
 14027  0611  0ABE               	incf	PollGPS@doParse,f
 14028  0612                     l5778:	
 14029                           
 14030                           ;main.c: 546:                 dataIndex = 0;
 14031  0612  0140               	movlb	0	; select bank0
 14032  0613  01C1               	clrf	PollGPS@dataIndex
 14033  0614  01C2               	clrf	PollGPS@dataIndex+1
 14034                           
 14035                           ;main.c: 547:                 break;
 14036  0615  2EB9               	goto	l5822
 14037  0616                     l5780:	
 14038                           
 14039                           ;main.c: 549:                 success = doParse && dataFieldType != PUBX_DATA_TYPE;
 14040  0616  01BC               	clrf	_PollGPS$1882
 14041  0617  083E               	movf	PollGPS@doParse,w
 14042  0618  1903               	btfsc	3,2
 14043  0619  2E20               	goto	l5788
 14044  061A  0844               	movf	PollGPS@dataFieldType,w
 14045  061B  0445               	iorwf	PollGPS@dataFieldType+1,w
 14046  061C  1903               	btfsc	3,2
 14047  061D  2E20               	goto	l5788
 14048  061E  01BC               	clrf	_PollGPS$1882
 14049  061F  0ABC               	incf	_PollGPS$1882,f
 14050  0620                     l5788:	
 14051  0620  083C               	movf	_PollGPS$1882,w
 14052  0621  1903               	btfsc	3,2
 14053  0622  2E25               	goto	u6000
 14054  0623  3001               	movlw	1
 14055  0624  2E26               	goto	u6010
 14056  0625                     u6000:	
 14057  0625  3000               	movlw	0
 14058  0626                     u6010:	
 14059  0626  00AC               	movwf	??_PollGPS
 14060  0627  082C               	movf	??_PollGPS,w
 14061  0628  00BD               	movwf	PollGPS@success
 14062                           
 14063                           ;main.c: 550:                 break;
 14064  0629  2EB9               	goto	l5822
 14065  062A                     l5790:	
 14066                           
 14067                           ;main.c: 552:                 if (dataFieldType == PUBX_DATA_TYPE && strcmp(data_type, "
      +                          PUBX") != 0)
 14068  062A  0844               	movf	PollGPS@dataFieldType,w
 14069  062B  0445               	iorwf	PollGPS@dataFieldType+1,w
 14070  062C  1D03               	btfss	3,2
 14071  062D  2E43               	goto	l5798
 14072  062E  30B1               	movlw	low (STR_8| (0+32768))
 14073  062F  00F0               	movwf	strcmp@r
 14074  0630  30A8               	movlw	high (STR_8| (0+32768))
 14075  0631  00F1               	movwf	strcmp@r+1
 14076  0632  3034               	movlw	(low (PollGPS@data_type| 0))& (0+255)
 14077  0633  3199  216F  3185   	fcall	_strcmp
 14078  0636  0870               	movf	?_strcmp,w
 14079  0637  0471               	iorwf	?_strcmp+1,w
 14080  0638  1903               	btfsc	3,2
 14081  0639  2E43               	goto	l5798
 14082                           
 14083                           ;main.c: 553:                 {;main.c: 554:                     doParse = 0;
 14084  063A  0140               	movlb	0	; select bank0
 14085  063B  01BE               	clrf	PollGPS@doParse
 14086                           
 14087                           ;main.c: 555:                     ClearString(data_type);
 14088  063C  3034               	movlw	low PollGPS@data_type
 14089  063D  00F5               	movwf	ClearString@str
 14090  063E  3000               	movlw	high PollGPS@data_type
 14091  063F  00F6               	movwf	ClearString@str+1
 14092  0640  3198  202D  3185   	fcall	_ClearString
 14093  0643                     l5798:	
 14094                           
 14095                           ;main.c: 557:                 if (doParse)
 14096  0643  0140               	movlb	0	; select bank0
 14097  0644  083E               	movf	PollGPS@doParse,w
 14098  0645  1903               	btfsc	3,2
 14099  0646  2EB9               	goto	l5822
 14100                           
 14101                           ;main.c: 558:                 {;main.c: 559:                     dataFieldType++;
 14102  0647  3001               	movlw	1
 14103  0648  07C4               	addwf	PollGPS@dataFieldType,f
 14104  0649  3000               	movlw	0
 14105  064A  3DC5               	addwfc	PollGPS@dataFieldType+1,f
 14106                           
 14107                           ;main.c: 560:                     if (dataFieldType > PUBX_TIME && dataFieldType != PUBX
      +                          _NS && dataFieldType != PUBX_EW && dataFieldType != PUBX_NAVSTAT && dataFieldType != PUB
      +                          X_COG && dataFieldType <= 13)
 14108  064B  0845               	movf	PollGPS@dataFieldType+1,w
 14109  064C  3A80               	xorlw	128
 14110  064D  00AC               	movwf	??_PollGPS
 14111  064E  3080               	movlw	128
 14112  064F  022C               	subwf	??_PollGPS,w
 14113  0650  1D03               	skipz
 14114  0651  2E54               	goto	u6055
 14115  0652  3003               	movlw	3
 14116  0653  0244               	subwf	PollGPS@dataFieldType,w
 14117  0654                     u6055:	
 14118  0654  1C03               	skipc
 14119  0655  2E12               	goto	l5778
 14120  0656  3004               	movlw	4
 14121  0657  0140               	movlb	0	; select bank0
 14122  0658  0644               	xorwf	PollGPS@dataFieldType,w
 14123  0659  0445               	iorwf	PollGPS@dataFieldType+1,w
 14124  065A  1903               	btfsc	3,2
 14125  065B  2E12               	goto	l5778
 14126  065C  3006               	movlw	6
 14127  065D  0644               	xorwf	PollGPS@dataFieldType,w
 14128  065E  0445               	iorwf	PollGPS@dataFieldType+1,w
 14129  065F  1903               	btfsc	3,2
 14130  0660  2E12               	goto	l5778
 14131  0661  3008               	movlw	8
 14132  0662  0644               	xorwf	PollGPS@dataFieldType,w
 14133  0663  0445               	iorwf	PollGPS@dataFieldType+1,w
 14134  0664  1903               	btfsc	3,2
 14135  0665  2E12               	goto	l5778
 14136  0666  300C               	movlw	12
 14137  0667  0644               	xorwf	PollGPS@dataFieldType,w
 14138  0668  0445               	iorwf	PollGPS@dataFieldType+1,w
 14139  0669  1903               	btfsc	3,2
 14140  066A  2E12               	goto	l5778
 14141  066B  0845               	movf	PollGPS@dataFieldType+1,w
 14142  066C  3A80               	xorlw	128
 14143  066D  00AC               	movwf	??_PollGPS
 14144  066E  3080               	movlw	128
 14145  066F  022C               	subwf	??_PollGPS,w
 14146  0670  1D03               	skipz
 14147  0671  2E74               	goto	u6105
 14148  0672  300E               	movlw	14
 14149  0673  0244               	subwf	PollGPS@dataFieldType,w
 14150  0674                     u6105:	
 14151  0674  1803               	skipnc
 14152  0675  2E12               	goto	l5778
 14153                           
 14154                           ;main.c: 561:                     {;main.c: 562:                         index = Insert(
      +                          messages[dataFieldType > PUBX_NAVSTAT ? 1 : 0], ',', index, 70);
 14155  0676  0140               	movlb	0	; select bank0
 14156  0677  0845               	movf	PollGPS@dataFieldType+1,w
 14157  0678  3A80               	xorlw	128
 14158  0679  00AC               	movwf	??_PollGPS
 14159  067A  3080               	movlw	128
 14160  067B  022C               	subwf	??_PollGPS,w
 14161  067C  1D03               	skipz
 14162  067D  2E80               	goto	u6115
 14163  067E  3009               	movlw	9
 14164  067F  0244               	subwf	PollGPS@dataFieldType,w
 14165  0680                     u6115:	
 14166  0680  1C03               	btfss	3,0
 14167  0681  2E84               	goto	u6110
 14168  0682  3001               	movlw	1
 14169  0683  2E85               	goto	u6120
 14170  0684                     u6110:	
 14171  0684  3000               	movlw	0
 14172  0685                     u6120:	
 14173  0685  0709               	addwf	9,w
 14174  0686  3E6B               	addlw	(low (_messages| (0+256)))& (0+255)
 14175  0687  0086               	movwf	6
 14176  0688  3001               	movlw	1	; select bank2/3
 14177  0689  0087               	movwf	7
 14178  068A  3F40               	moviw [0]fsr1
 14179  068B  00F0               	movwf	Insert@dest
 14180  068C  3F41               	moviw [1]fsr1
 14181  068D  00F1               	movwf	Insert@dest+1
 14182  068E  302C               	movlw	44
 14183  068F  0140               	movlb	0	; select bank0
 14184  0690  00AD               	movwf	??_PollGPS+1
 14185  0691  082D               	movf	??_PollGPS+1,w
 14186  0692  00F2               	movwf	Insert@src
 14187  0693  0847               	movf	PollGPS@index+1,w
 14188  0694  00F4               	movwf	Insert@index+1
 14189  0695  0846               	movf	PollGPS@index,w
 14190  0696  00F3               	movwf	Insert@index
 14191  0697  3046               	movlw	70
 14192  0698  00F5               	movwf	Insert@destLimit
 14193  0699  3000               	movlw	0
 14194  069A  00F6               	movwf	Insert@destLimit+1
 14195  069B  3193  232C  3185   	fcall	_Insert
 14196  069E  0871               	movf	?_Insert+1,w
 14197  069F  0140               	movlb	0	; select bank0
 14198  06A0  00C7               	movwf	PollGPS@index+1
 14199  06A1  0870               	movf	?_Insert,w
 14200  06A2  00C6               	movwf	PollGPS@index
 14201  06A3  2E12               	goto	l5778
 14202  06A4                     l5816:	
 14203                           
 14204                           ;main.c: 568:                 skip = 0;
 14205  06A4  01BB               	clrf	PollGPS@skip
 14206                           
 14207                           ;main.c: 569:                 break;
 14208  06A5  2EB9               	goto	l5822
 14209  06A6                     l5820:	
 14210  06A6  0843               	movf	PollGPS@byte,w
 14211  06A7  00AC               	movwf	??_PollGPS
 14212  06A8  01AD               	clrf	??_PollGPS+1
 14213                           
 14214                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14215                           ; Switch size 1, requested type "simple"
 14216                           ; Number of cases is 1, Range of values is 0 to 0
 14217                           ; switch strategies available:
 14218                           ; Name         Instructions Cycles
 14219                           ; simple_byte            4     3 (average)
 14220                           ; direct_byte            8     6 (fixed)
 14221                           ; jumptable            260     6 (fixed)
 14222                           ;	Chosen strategy is simple_byte
 14223  06A9  082D               	movf	??_PollGPS+1,w
 14224  06AA  3A00               	xorlw	0	; case 0
 14225  06AB  1903               	skipnz
 14226  06AC  2EAE               	goto	l6074
 14227  06AD  2EA4               	goto	l5816
 14228  06AE                     l6074:	
 14229                           
 14230                           ; Switch size 1, requested type "simple"
 14231                           ; Number of cases is 3, Range of values is 10 to 44
 14232                           ; switch strategies available:
 14233                           ; Name         Instructions Cycles
 14234                           ; simple_byte           10     6 (average)
 14235                           ; direct_byte           79     9 (fixed)
 14236                           ; jumptable            263     9 (fixed)
 14237                           ;	Chosen strategy is simple_byte
 14238  06AE  082C               	movf	??_PollGPS,w
 14239  06AF  3A0A               	xorlw	10	; case 10
 14240  06B0  1903               	skipnz
 14241  06B1  2E16               	goto	l5780
 14242  06B2  3A2E               	xorlw	46	; case 36
 14243  06B3  1903               	skipnz
 14244  06B4  2E10               	goto	l782
 14245  06B5  3A08               	xorlw	8	; case 44
 14246  06B6  1903               	skipnz
 14247  06B7  2E2A               	goto	l5790
 14248  06B8  2EA4               	goto	l5816
 14249  06B9                     l5822:	
 14250                           
 14251                           ;main.c: 572:             if (!skip && doParse)
 14252  06B9  083B               	movf	PollGPS@skip,w
 14253  06BA  1D03               	btfss	3,2
 14254  06BB  2DDC               	goto	l5880
 14255  06BC  083E               	movf	PollGPS@doParse,w
 14256  06BD  1D03               	btfss	3,2
 14257  06BE  2F64               	goto	l5876
 14258  06BF  2DDC               	goto	l5880
 14259  06C0                     l5828:	
 14260                           
 14261                           ;main.c: 577:                     Insert(data_type, byte, dataIndex, 7);
 14262  06C0  3034               	movlw	low PollGPS@data_type
 14263  06C1  00F0               	movwf	Insert@dest
 14264  06C2  3000               	movlw	high PollGPS@data_type
 14265  06C3  00F1               	movwf	Insert@dest+1
 14266  06C4  0843               	movf	PollGPS@byte,w
 14267  06C5  00AC               	movwf	??_PollGPS
 14268  06C6  082C               	movf	??_PollGPS,w
 14269  06C7  00F2               	movwf	Insert@src
 14270  06C8  0842               	movf	PollGPS@dataIndex+1,w
 14271  06C9  00F4               	movwf	Insert@index+1
 14272  06CA  0841               	movf	PollGPS@dataIndex,w
 14273  06CB  00F3               	movwf	Insert@index
 14274  06CC  3007               	movlw	7
 14275  06CD  00F5               	movwf	Insert@destLimit
 14276  06CE  3000               	movlw	0
 14277  06CF  00F6               	movwf	Insert@destLimit+1
 14278  06D0  3193  232C  3185   	fcall	_Insert
 14279                           
 14280                           ;main.c: 578:                     break;
 14281  06D3  2F92               	goto	l5878
 14282  06D4                     l5830:	
 14283                           
 14284                           ;main.c: 580:                     if (dataIndex < 6)
 14285  06D4  0842               	movf	PollGPS@dataIndex+1,w
 14286  06D5  3A80               	xorlw	128
 14287  06D6  00AC               	movwf	??_PollGPS
 14288  06D7  3080               	movlw	128
 14289  06D8  022C               	subwf	??_PollGPS,w
 14290  06D9  1D03               	skipz
 14291  06DA  2EDD               	goto	u6155
 14292  06DB  3006               	movlw	6
 14293  06DC  0241               	subwf	PollGPS@dataIndex,w
 14294  06DD                     u6155:	
 14295  06DD  1803               	skipnc
 14296  06DE  2F92               	goto	l5878
 14297                           
 14298                           ;main.c: 581:                     {;main.c: 582:                         if (dataIndex =
      +                          = 2 || dataIndex == 4)
 14299  06DF  3002               	movlw	2
 14300  06E0  0140               	movlb	0	; select bank0
 14301  06E1  0641               	xorwf	PollGPS@dataIndex,w
 14302  06E2  0442               	iorwf	PollGPS@dataIndex+1,w
 14303  06E3  1903               	btfsc	3,2
 14304  06E4  2EEA               	goto	l5836
 14305  06E5  3004               	movlw	4
 14306  06E6  0641               	xorwf	PollGPS@dataIndex,w
 14307  06E7  0442               	iorwf	PollGPS@dataIndex+1,w
 14308  06E8  1D03               	btfss	3,2
 14309  06E9  2F04               	goto	l798
 14310  06EA                     l5836:	
 14311                           
 14312                           ;main.c: 583:                         {;main.c: 584:                             index =
      +                           Insert(messages[0], ':', index, 70);
 14313  06EA  0142               	movlb	2	; select bank2
 14314  06EB  086C               	movf	(_messages+1)^(0+256),w
 14315  06EC  00F1               	movwf	Insert@dest+1
 14316  06ED  086B               	movf	_messages^(0+256),w
 14317  06EE  00F0               	movwf	Insert@dest
 14318  06EF  303A               	movlw	58
 14319  06F0  0140               	movlb	0	; select bank0
 14320  06F1  00AC               	movwf	??_PollGPS
 14321  06F2  082C               	movf	??_PollGPS,w
 14322  06F3  00F2               	movwf	Insert@src
 14323  06F4  0847               	movf	PollGPS@index+1,w
 14324  06F5  00F4               	movwf	Insert@index+1
 14325  06F6  0846               	movf	PollGPS@index,w
 14326  06F7  00F3               	movwf	Insert@index
 14327  06F8  3046               	movlw	70
 14328  06F9  00F5               	movwf	Insert@destLimit
 14329  06FA  3000               	movlw	0
 14330  06FB  00F6               	movwf	Insert@destLimit+1
 14331  06FC  3193  232C  3185   	fcall	_Insert
 14332  06FF  0871               	movf	?_Insert+1,w
 14333  0700  0140               	movlb	0	; select bank0
 14334  0701  00C7               	movwf	PollGPS@index+1
 14335  0702  0870               	movf	?_Insert,w
 14336  0703  00C6               	movwf	PollGPS@index
 14337  0704                     l798:	
 14338                           ;main.c: 585:                         }
 14339                           
 14340                           
 14341                           ;main.c: 586:                         index = Insert(messages[0], byte, index, 70);
 14342  0704  0142               	movlb	2	; select bank2
 14343  0705  086C               	movf	(_messages+1)^(0+256),w
 14344  0706  00F1               	movwf	Insert@dest+1
 14345  0707  086B               	movf	_messages^(0+256),w
 14346  0708  2F4D               	goto	L9
 14347  0709                     l5838:	
 14348                           
 14349                           ;main.c: 590:                     if (dataIndex == 0)
 14350  0709  0841               	movf	PollGPS@dataIndex,w
 14351  070A  0442               	iorwf	PollGPS@dataIndex+1,w
 14352  070B  1D03               	btfss	3,2
 14353  070C  2F04               	goto	l798
 14354                           
 14355                           ;main.c: 591:                     {;main.c: 592:                         signInsertIndex
      +                           = index;
 14356  070D  0847               	movf	PollGPS@index+1,w
 14357  070E  00C0               	movwf	PollGPS@signInsertIndex+1
 14358  070F  0846               	movf	PollGPS@index,w
 14359  0710  00BF               	movwf	PollGPS@signInsertIndex
 14360  0711  2F04               	goto	l798
 14361  0712                     l5844:	
 14362                           
 14363                           ;main.c: 597:                     if (byte != 'N' && signInsertIndex > 0)
 14364  0712  304E               	movlw	78
 14365  0713                     L8:	
 14366  0713  0643               	xorwf	PollGPS@byte,w
 14367  0714  1903               	btfsc	3,2
 14368  0715  2F92               	goto	l5878
 14369  0716  0840               	movf	PollGPS@signInsertIndex+1,w
 14370  0717  3A80               	xorlw	128
 14371  0718  00AC               	movwf	??_PollGPS
 14372  0719  3080               	movlw	128
 14373  071A  022C               	subwf	??_PollGPS,w
 14374  071B  1D03               	skipz
 14375  071C  2F1F               	goto	u6205
 14376  071D  3001               	movlw	1
 14377  071E  023F               	subwf	PollGPS@signInsertIndex,w
 14378  071F                     u6205:	
 14379  071F  1C03               	skipc
 14380  0720  2F92               	goto	l5878
 14381                           
 14382                           ;main.c: 598:                     {;main.c: 599:                         index = Insert(
      +                          messages[0], '-', signInsertIndex, 70);
 14383  0721  0142               	movlb	2	; select bank2
 14384  0722  086C               	movf	(_messages+1)^(0+256),w
 14385  0723  00F1               	movwf	Insert@dest+1
 14386  0724  086B               	movf	_messages^(0+256),w
 14387  0725  00F0               	movwf	Insert@dest
 14388  0726  302D               	movlw	45
 14389  0727  0140               	movlb	0	; select bank0
 14390  0728  00AC               	movwf	??_PollGPS
 14391  0729  082C               	movf	??_PollGPS,w
 14392  072A  00F2               	movwf	Insert@src
 14393  072B  0840               	movf	PollGPS@signInsertIndex+1,w
 14394  072C  00F4               	movwf	Insert@index+1
 14395  072D  083F               	movf	PollGPS@signInsertIndex,w
 14396  072E  2F56               	goto	L7
 14397  072F                     l5850:	
 14398  072F  2F09               	goto	l5838
 14399  0730                     l5856:	
 14400                           ;main.c: 603:                     if (dataIndex == 0)
 14401                           
 14402                           
 14403                           ;main.c: 610:                     if (byte != 'E' && signInsertIndex > 0)
 14404  0730  3045               	movlw	69
 14405  0731  2F13               	goto	L8
 14406  0732                     l5864:	
 14407                           
 14408                           ;main.c: 622:                     if (dataIndex == 0)
 14409  0732  0841               	movf	PollGPS@dataIndex,w
 14410  0733  0442               	iorwf	PollGPS@dataIndex+1,w
 14411  0734  1D03               	btfss	3,2
 14412  0735  2F40               	goto	l5870
 14413                           
 14414                           ;main.c: 623:                     {;main.c: 624:                         ClearString(dat
      +                          a_type);
 14415  0736  3034               	movlw	low PollGPS@data_type
 14416  0737  00F5               	movwf	ClearString@str
 14417  0738  3000               	movlw	high PollGPS@data_type
 14418  0739  00F6               	movwf	ClearString@str+1
 14419  073A  3198  202D  3185   	fcall	_ClearString
 14420                           
 14421                           ;main.c: 625:                         index = 0;
 14422  073D  0140               	movlb	0	; select bank0
 14423  073E  01C6               	clrf	PollGPS@index
 14424  073F  01C7               	clrf	PollGPS@index+1
 14425  0740                     l5870:	
 14426                           
 14427                           ;main.c: 627:                     data_type[dataIndex] = byte;
 14428  0740  0843               	movf	PollGPS@byte,w
 14429  0741  00AC               	movwf	??_PollGPS
 14430  0742  0841               	movf	PollGPS@dataIndex,w
 14431  0743  3E34               	addlw	(low (PollGPS@data_type| 0))& (0+255)
 14432  0744  0086               	movwf	6
 14433  0745  0187               	clrf	7
 14434  0746  082C               	movf	??_PollGPS,w
 14435  0747  0081               	movwf	1
 14436                           
 14437                           ;main.c: 628:                     break;
 14438  0748  2F92               	goto	l5878
 14439  0749                     l815:	
 14440                           ;main.c: 631:                 case PUBX_SOG:
 14441                           
 14442  0749                     l5872:	
 14443                           
 14444                           ;main.c: 633:                     index = Insert(messages[1], byte, index, 70);
 14445  0749  0142               	movlb	2	; select bank2
 14446  074A  086E               	movf	((low ((_messages| (0+256)+2))+1))^0,w
 14447  074B  00F1               	movwf	Insert@dest+1
 14448  074C  086D               	movf	(low ((_messages| (0+256)+2)))^0,w
 14449  074D                     L9:	
 14450  074D  00F0               	movwf	Insert@dest
 14451  074E  0140               	movlb	0	; select bank0
 14452  074F  0843               	movf	PollGPS@byte,w
 14453  0750  00AC               	movwf	??_PollGPS
 14454  0751  082C               	movf	??_PollGPS,w
 14455  0752  00F2               	movwf	Insert@src
 14456  0753  0847               	movf	PollGPS@index+1,w
 14457  0754  00F4               	movwf	Insert@index+1
 14458  0755  0846               	movf	PollGPS@index,w
 14459  0756                     L7:	
 14460  0756  00F3               	movwf	Insert@index
 14461  0757  3046               	movlw	70
 14462  0758  00F5               	movwf	Insert@destLimit
 14463  0759  3000               	movlw	0
 14464  075A  00F6               	movwf	Insert@destLimit+1
 14465  075B  3193  232C  3185   	fcall	_Insert
 14466  075E  0871               	movf	?_Insert+1,w
 14467  075F  0140               	movlb	0	; select bank0
 14468  0760  00C7               	movwf	PollGPS@index+1
 14469  0761  0870               	movf	?_Insert,w
 14470  0762  00C6               	movwf	PollGPS@index
 14471                           
 14472                           ;main.c: 634:                     break;
 14473  0763  2F92               	goto	l5878
 14474  0764                     l5876:	
 14475                           
 14476                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14477                           ; Switch size 1, requested type "simple"
 14478                           ; Number of cases is 1, Range of values is 0 to 0
 14479                           ; switch strategies available:
 14480                           ; Name         Instructions Cycles
 14481                           ; simple_byte            4     3 (average)
 14482                           ; direct_byte            8     6 (fixed)
 14483                           ; jumptable            260     6 (fixed)
 14484                           ;	Chosen strategy is simple_byte
 14485  0764  0845               	movf	PollGPS@dataFieldType+1,w
 14486  0765  3A00               	xorlw	0	; case 0
 14487  0766  1903               	skipnz
 14488  0767  2F69               	goto	l6076
 14489  0768  2F92               	goto	l5878
 14490  0769                     l6076:	
 14491                           
 14492                           ; Switch size 1, requested type "simple"
 14493                           ; Number of cases is 13, Range of values is 0 to 13
 14494                           ; switch strategies available:
 14495                           ; Name         Instructions Cycles
 14496                           ; direct_byte           34     6 (fixed)
 14497                           ; simple_byte           40    21 (average)
 14498                           ; jumptable            260     6 (fixed)
 14499                           ;	Chosen strategy is simple_byte
 14500  0769  0844               	movf	PollGPS@dataFieldType,w
 14501  076A  3A00               	xorlw	0	; case 0
 14502  076B  1903               	skipnz
 14503  076C  2EC0               	goto	l5828
 14504  076D  3A02               	xorlw	2	; case 2
 14505  076E  1903               	skipnz
 14506  076F  2ED4               	goto	l5830
 14507  0770  3A01               	xorlw	1	; case 3
 14508  0771  1903               	skipnz
 14509  0772  2F09               	goto	l5838
 14510  0773  3A07               	xorlw	7	; case 4
 14511  0774  1903               	skipnz
 14512  0775  2F12               	goto	l5844
 14513  0776  3A01               	xorlw	1	; case 5
 14514  0777  1903               	skipnz
 14515  0778  2F2F               	goto	l5850
 14516  0779  3A03               	xorlw	3	; case 6
 14517  077A  1903               	skipnz
 14518  077B  2F30               	goto	l5856
 14519  077C  3A01               	xorlw	1	; case 7
 14520  077D  1903               	skipnz
 14521  077E  2F04               	goto	l798
 14522  077F  3A0F               	xorlw	15	; case 8
 14523  0780  1903               	skipnz
 14524  0781  2F32               	goto	l5864
 14525  0782  3A01               	xorlw	1	; case 9
 14526  0783  1903               	skipnz
 14527  0784  2F49               	goto	l815
 14528  0785  3A03               	xorlw	3	; case 10
 14529  0786  1903               	skipnz
 14530  0787  2F49               	goto	l5872
 14531  0788  3A01               	xorlw	1	; case 11
 14532  0789  1903               	skipnz
 14533  078A  2F49               	goto	l5872
 14534  078B  3A07               	xorlw	7	; case 12
 14535  078C  1903               	skipnz
 14536  078D  2F92               	goto	l5878
 14537  078E  3A01               	xorlw	1	; case 13
 14538  078F  1903               	skipnz
 14539  0790  2F49               	goto	l5872
 14540  0791  2F92               	goto	l5878
 14541  0792                     l5878:	
 14542                           
 14543                           ;main.c: 636:                 dataIndex++;
 14544  0792  3001               	movlw	1
 14545  0793  0140               	movlb	0	; select bank0
 14546  0794  07C1               	addwf	PollGPS@dataIndex,f
 14547  0795  3000               	movlw	0
 14548  0796  3DC2               	addwfc	PollGPS@dataIndex+1,f
 14549  0797  2DDC               	goto	l5880
 14550  0798                     l5882:	
 14551                           
 14552                           ;main.c: 643:     if (success)
 14553  0798  083D               	movf	PollGPS@success,w
 14554  0799  1903               	btfsc	3,2
 14555  079A  2FD0               	goto	l5888
 14556                           
 14557                           ;main.c: 644:     {;main.c: 646:         index = Insert(messages[1], ',', index, 70);
 14558  079B  0142               	movlb	2	; select bank2
 14559  079C  086E               	movf	((low ((_messages| (0+256)+2))+1))^0,w
 14560  079D  00F1               	movwf	Insert@dest+1
 14561  079E  086D               	movf	(low ((_messages| (0+256)+2)))^0,w
 14562  079F  00F0               	movwf	Insert@dest
 14563  07A0  302C               	movlw	44
 14564  07A1  0140               	movlb	0	; select bank0
 14565  07A2  00AC               	movwf	??_PollGPS
 14566  07A3  082C               	movf	??_PollGPS,w
 14567  07A4  00F2               	movwf	Insert@src
 14568  07A5  0847               	movf	PollGPS@index+1,w
 14569  07A6  00F4               	movwf	Insert@index+1
 14570  07A7  0846               	movf	PollGPS@index,w
 14571  07A8  00F3               	movwf	Insert@index
 14572  07A9  3046               	movlw	70
 14573  07AA  00F5               	movwf	Insert@destLimit
 14574  07AB  3000               	movlw	0
 14575  07AC  00F6               	movwf	Insert@destLimit+1
 14576  07AD  3193  232C  3185   	fcall	_Insert
 14577  07B0  0871               	movf	?_Insert+1,w
 14578  07B1  0140               	movlb	0	; select bank0
 14579  07B2  00C7               	movwf	PollGPS@index+1
 14580  07B3  0870               	movf	?_Insert,w
 14581  07B4  00C6               	movwf	PollGPS@index
 14582                           
 14583                           ;main.c: 647:         index = InsertString(messages[1], data_type, index, 70);
 14584  07B5  0142               	movlb	2	; select bank2
 14585  07B6  086E               	movf	((low ((_messages| (0+256)+2))+1))^0,w
 14586  07B7  0140               	movlb	0	; select bank0
 14587  07B8  00A1               	movwf	InsertString@dest+1
 14588  07B9  0142               	movlb	2	; select bank2
 14589  07BA  086D               	movf	(low ((_messages| (0+256)+2)))^0,w
 14590  07BB  0140               	movlb	0	; select bank0
 14591  07BC  00A0               	movwf	InsertString@dest
 14592  07BD  3034               	movlw	low PollGPS@data_type
 14593  07BE  00A2               	movwf	InsertString@src
 14594  07BF  3000               	movlw	high PollGPS@data_type
 14595  07C0  00A3               	movwf	InsertString@src+1
 14596  07C1  0847               	movf	PollGPS@index+1,w
 14597  07C2  00A5               	movwf	InsertString@index+1
 14598  07C3  0846               	movf	PollGPS@index,w
 14599  07C4  00A4               	movwf	InsertString@index
 14600  07C5  3046               	movlw	70
 14601  07C6  00A6               	movwf	InsertString@destLimit
 14602  07C7  3000               	movlw	0
 14603  07C8  00A7               	movwf	InsertString@destLimit+1
 14604  07C9  319F  275C         	fcall	_InsertString
 14605  07CB  0140               	movlb	0	; select bank0
 14606  07CC  0821               	movf	?_InsertString+1,w
 14607  07CD  00C7               	movwf	PollGPS@index+1
 14608  07CE  0820               	movf	?_InsertString,w
 14609  07CF  00C6               	movwf	PollGPS@index
 14610  07D0                     l5888:	
 14611                           
 14612                           ;main.c: 650:     return success;
 14613  07D0  083D               	movf	PollGPS@success,w
 14614  07D1  0008               	return
 14615  07D2                     __end_of_PollGPS:	
 14616                           
 14617                           	psect	text32
 14618  196F                     __ptext32:	
 14619 ;; *************** function _strcmp *****************
 14620 ;; Defined at:
 14621 ;;		line 3 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\strcmp.c"
 14622 ;; Parameters:    Size  Location     Type
 14623 ;;  l               1    wreg     PTR const unsigned char 
 14624 ;;		 -> PollGPS@data_type(7), 
 14625 ;;  r               2    0[COMMON] PTR const unsigned char 
 14626 ;;		 -> STR_8(5), 
 14627 ;; Auto vars:     Size  Location     Type
 14628 ;;  l               1    3[COMMON] PTR const unsigned char 
 14629 ;;		 -> PollGPS@data_type(7), 
 14630 ;; Return value:  Size  Location     Type
 14631 ;;                  2    0[COMMON] int 
 14632 ;; Registers used:
 14633 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 14634 ;; Tracked objects:
 14635 ;;		On entry : 0/0
 14636 ;;		On exit  : 0/0
 14637 ;;		Unchanged: 0/0
 14638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14639 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14640 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14641 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14642 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14643 ;;Total ram usage:        4 bytes
 14644 ;; Hardware stack levels used:    1
 14645 ;; Hardware stack levels required when called:    3
 14646 ;; This function calls:
 14647 ;;		Nothing
 14648 ;; This function is called by:
 14649 ;;		_PollGPS
 14650 ;; This function uses a non-reentrant model
 14651 ;;
 14652                           
 14653                           
 14654                           ;psect for function _strcmp
 14655  196F                     _strcmp:	
 14656                           
 14657                           ;incstack = 0
 14658                           ; Regs used in _strcmp: [wreg-fsr1h+status,2+status,0+pclath]
 14659                           ;strcmp@l stored from wreg
 14660  196F  00F3               	movwf	strcmp@l
 14661  1970  297F               	goto	l4396
 14662  1971                     l4398:	
 14663  1971  0873               	movf	strcmp@l,w
 14664  1972  0086               	movwf	6
 14665  1973  0187               	clrf	7
 14666  1974  0801               	movf	1,w
 14667  1975  1903               	btfsc	3,2
 14668  1976  298C               	goto	l4400
 14669  1977  3001               	movlw	1
 14670  1978  00F2               	movwf	??_strcmp
 14671  1979  0872               	movf	??_strcmp,w
 14672  197A  07F3               	addwf	strcmp@l,f
 14673  197B  3001               	movlw	1
 14674  197C  07F0               	addwf	strcmp@r,f
 14675  197D  3000               	movlw	0
 14676  197E  3DF1               	addwfc	strcmp@r+1,f
 14677  197F                     l4396:	
 14678  197F  0870               	movf	strcmp@r,w
 14679  1980  0084               	movwf	4
 14680  1981  0871               	movf	strcmp@r+1,w
 14681  1982  0085               	movwf	5
 14682  1983  0800               	movf	0,w	;code access
 14683  1984  00F2               	movwf	??_strcmp
 14684  1985  0873               	movf	strcmp@l,w
 14685  1986  0086               	movwf	6
 14686  1987  0187               	clrf	7
 14687  1988  0801               	movf	1,w
 14688  1989  0672               	xorwf	??_strcmp,w
 14689  198A  1903               	btfsc	3,2
 14690  198B  2971               	goto	l4398
 14691  198C                     l4400:	
 14692  198C  0873               	movf	strcmp@l,w
 14693  198D  0086               	movwf	6
 14694  198E  0187               	clrf	7
 14695  198F  0870               	movf	strcmp@r,w
 14696  1990  0084               	movwf	4
 14697  1991  0871               	movf	strcmp@r+1,w
 14698  1992  0085               	movwf	5
 14699  1993  0800               	movf	0,w	;code access
 14700  1994  0201               	subwf	1,w
 14701  1995  00F0               	movwf	?_strcmp
 14702  1996  01F1               	clrf	?_strcmp+1
 14703  1997  1C03               	skipc
 14704  1998  03F1               	decf	?_strcmp+1,f
 14705  1999  0008               	return
 14706  199A                     __end_of_strcmp:	
 14707                           
 14708                           	psect	text33
 14709  189F                     __ptext33:	
 14710 ;; *************** function _WriteGPS *****************
 14711 ;; Defined at:
 14712 ;;		line 298 in file "main.c"
 14713 ;; Parameters:    Size  Location     Type
 14714 ;;  message         2    5[COMMON] PTR unsigned char 
 14715 ;;		 -> STR_7(14), STR_6(26), STR_5(26), STR_4(26), 
 14716 ;;		 -> STR_3(26), STR_2(26), STR_1(26), 
 14717 ;; Auto vars:     Size  Location     Type
 14718 ;;  i               2   10[COMMON] int 
 14719 ;;  counti          2    8[COMMON] int 
 14720 ;; Return value:  Size  Location     Type
 14721 ;;                  1    wreg      void 
 14722 ;; Registers used:
 14723 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 14724 ;; Tracked objects:
 14725 ;;		On entry : 0/0
 14726 ;;		On exit  : 0/0
 14727 ;;		Unchanged: 0/0
 14728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14729 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14730 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14731 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14732 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14733 ;;Total ram usage:        7 bytes
 14734 ;; Hardware stack levels used:    1
 14735 ;; Hardware stack levels required when called:    4
 14736 ;; This function calls:
 14737 ;;		_EUSART1_Write
 14738 ;;		_strlen
 14739 ;; This function is called by:
 14740 ;;		_SetupGPS
 14741 ;;		_PollGPS
 14742 ;; This function uses a non-reentrant model
 14743 ;;
 14744                           
 14745                           
 14746                           ;psect for function _WriteGPS
 14747  189F                     _WriteGPS:	
 14748                           
 14749                           ;main.c: 298: void WriteGPS(char* message);main.c: 299: {;main.c: 300:     for (int i = 
      +                          0, counti = strlen(message); i <= counti; i++)
 14750                           
 14751                           ;incstack = 0
 14752                           ; Regs used in _WriteGPS: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 14753  189F  01FA               	clrf	WriteGPS@i
 14754  18A0  01FB               	clrf	WriteGPS@i+1
 14755  18A1  0876               	movf	WriteGPS@message+1,w
 14756  18A2  00F1               	movwf	strlen@s+1
 14757  18A3  0875               	movf	WriteGPS@message,w
 14758  18A4  00F0               	movwf	strlen@s
 14759  18A5  31A7  2722  3198   	fcall	_strlen
 14760  18A8  0871               	movf	?_strlen+1,w
 14761  18A9  00F9               	movwf	WriteGPS@counti+1
 14762  18AA  0870               	movf	?_strlen,w
 14763  18AB  00F8               	movwf	WriteGPS@counti
 14764  18AC                     l4324:	
 14765  18AC  0879               	movf	WriteGPS@counti+1,w
 14766  18AD  3A80               	xorlw	128
 14767  18AE  00F7               	movwf	??_WriteGPS
 14768  18AF  087B               	movf	WriteGPS@i+1,w
 14769  18B0  3A80               	xorlw	128
 14770  18B1  0277               	subwf	??_WriteGPS,w
 14771  18B2  1D03               	skipz
 14772  18B3  28B6               	goto	u4015
 14773  18B4  087A               	movf	WriteGPS@i,w
 14774  18B5  0278               	subwf	WriteGPS@counti,w
 14775  18B6                     u4015:	
 14776  18B6  1C03               	btfss	3,0
 14777  18B7  0008               	return
 14778                           
 14779                           ;main.c: 301:     {;main.c: 302:         EUSART1_Write((uint8_t)message[i]);
 14780  18B8  0875               	movf	WriteGPS@message,w
 14781  18B9  077A               	addwf	WriteGPS@i,w
 14782  18BA  0084               	movwf	4
 14783  18BB  0876               	movf	WriteGPS@message+1,w
 14784  18BC  3D7B               	addwfc	WriteGPS@i+1,w
 14785  18BD  0085               	movwf	5
 14786  18BE  0800               	movf	0,w	;code access
 14787  18BF  3198  2000  3198   	fcall	_EUSART1_Write
 14788                           
 14789                           ;main.c: 303:     }
 14790  18C2  3001               	movlw	1
 14791  18C3  07FA               	addwf	WriteGPS@i,f
 14792  18C4  3000               	movlw	0
 14793  18C5  3DFB               	addwfc	WriteGPS@i+1,f
 14794  18C6  28AC               	goto	l4324
 14795  18C7                     __end_of_WriteGPS:	
 14796                           
 14797                           	psect	text34
 14798  1800                     __ptext34:	
 14799 ;; *************** function _EUSART1_Write *****************
 14800 ;; Defined at:
 14801 ;;		line 132 in file "mcc_generated_files/eusart1.c"
 14802 ;; Parameters:    Size  Location     Type
 14803 ;;  txData          1    wreg     unsigned char 
 14804 ;; Auto vars:     Size  Location     Type
 14805 ;;  txData          1    0[COMMON] unsigned char 
 14806 ;; Return value:  Size  Location     Type
 14807 ;;                  1    wreg      void 
 14808 ;; Registers used:
 14809 ;;		wreg
 14810 ;; Tracked objects:
 14811 ;;		On entry : 0/0
 14812 ;;		On exit  : 0/0
 14813 ;;		Unchanged: 0/0
 14814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14816 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14818 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14819 ;;Total ram usage:        1 bytes
 14820 ;; Hardware stack levels used:    1
 14821 ;; Hardware stack levels required when called:    3
 14822 ;; This function calls:
 14823 ;;		Nothing
 14824 ;; This function is called by:
 14825 ;;		_WriteGPS
 14826 ;;		_GPS_SendUBX
 14827 ;; This function uses a non-reentrant model
 14828 ;;
 14829                           
 14830                           
 14831                           ;psect for function _EUSART1_Write
 14832  1800                     _EUSART1_Write:	
 14833                           
 14834                           ;incstack = 0
 14835                           ; Regs used in _EUSART1_Write: [wreg]
 14836                           ;EUSART1_Write@txData stored from wreg
 14837  1800  00F0               	movwf	EUSART1_Write@txData
 14838  1801                     l355:	
 14839                           ;mcc_generated_files/eusart1.c: 135:     {;mcc_generated_files/eusart1.c: 136:     }
 14840                           
 14841                           
 14842                           ;mcc_generated_files/eusart1.c: 134:     while(0 == PIR3bits.TX1IF)
 14843  1801  014E               	movlb	14	; select bank14
 14844  1802  1E0F               	btfss	15,4	;volatile
 14845  1803  2801               	goto	l355
 14846                           
 14847                           ;mcc_generated_files/eusart1.c: 138:     TX1REG = txData;
 14848  1804  0870               	movf	EUSART1_Write@txData,w
 14849  1805  0142               	movlb	2	; select bank2
 14850  1806  009A               	movwf	26	;volatile
 14851  1807  0008               	return
 14852  1808                     __end_of_EUSART1_Write:	
 14853                           
 14854                           	psect	text35
 14855  1F5C                     __ptext35:	
 14856 ;; *************** function _InsertString *****************
 14857 ;; Defined at:
 14858 ;;		line 90 in file "main.c"
 14859 ;; Parameters:    Size  Location     Type
 14860 ;;  dest            2    0[BANK0 ] PTR unsigned char 
 14861 ;;		 -> message_end(70), message_start(70), 
 14862 ;;  src             2    2[BANK0 ] PTR unsigned char 
 14863 ;;		 -> STR_10(3), checksum(6), STR_9(7), main@convertedNumber(16), 
 14864 ;;		 -> PollGPS@data_type(7), 
 14865 ;;  index           2    4[BANK0 ] int 
 14866 ;;  destLimit       2    6[BANK0 ] int 
 14867 ;; Auto vars:     Size  Location     Type
 14868 ;;  i               2   10[BANK0 ] int 
 14869 ;;  counti          2    8[BANK0 ] int 
 14870 ;; Return value:  Size  Location     Type
 14871 ;;                  2    0[BANK0 ] int 
 14872 ;; Registers used:
 14873 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14874 ;; Tracked objects:
 14875 ;;		On entry : 0/0
 14876 ;;		On exit  : 0/0
 14877 ;;		Unchanged: 0/0
 14878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14879 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14880 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14881 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14882 ;;      Totals:         1      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14883 ;;Total ram usage:       13 bytes
 14884 ;; Hardware stack levels used:    1
 14885 ;; Hardware stack levels required when called:    4
 14886 ;; This function calls:
 14887 ;;		_Insert
 14888 ;;		_strlen
 14889 ;; This function is called by:
 14890 ;;		_PollGPS
 14891 ;;		_main
 14892 ;; This function uses a non-reentrant model
 14893 ;;
 14894                           
 14895                           
 14896                           ;psect for function _InsertString
 14897  1F5C                     _InsertString:	
 14898                           
 14899                           ;main.c: 90: int InsertString(char* dest, char* src, int index, int destLimit);main.c: 9
      +                          1: {;main.c: 92:     for (int i = 0, counti = strlen(src); i < counti && index < destLim
      +                          it; i++)
 14900                           
 14901                           ;incstack = 0
 14902                           ; Regs used in _InsertString: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14903  1F5C  0140               	movlb	0	; select bank0
 14904  1F5D  01AA               	clrf	InsertString@i
 14905  1F5E  01AB               	clrf	InsertString@i+1
 14906  1F5F  0823               	movf	InsertString@src+1,w
 14907  1F60  00F1               	movwf	strlen@s+1
 14908  1F61  0822               	movf	InsertString@src,w
 14909  1F62  00F0               	movwf	strlen@s
 14910  1F63  31A7  2722  319F   	fcall	_strlen
 14911  1F66  0871               	movf	?_strlen+1,w
 14912  1F67  0140               	movlb	0	; select bank0
 14913  1F68  00A9               	movwf	InsertString@counti+1
 14914  1F69  0870               	movf	?_strlen,w
 14915  1F6A  00A8               	movwf	InsertString@counti
 14916  1F6B  2F9C               	goto	l5608
 14917  1F6C                     l5610:	
 14918  1F6C  0140               	movlb	0	; select bank0
 14919  1F6D  0825               	movf	InsertString@index+1,w
 14920  1F6E  3A80               	xorlw	128
 14921  1F6F  00FD               	movwf	??_InsertString
 14922  1F70  0827               	movf	InsertString@destLimit+1,w
 14923  1F71  3A80               	xorlw	128
 14924  1F72  027D               	subwf	??_InsertString,w
 14925  1F73  1D03               	skipz
 14926  1F74  2F77               	goto	u5795
 14927  1F75  0826               	movf	InsertString@destLimit,w
 14928  1F76  0224               	subwf	InsertString@index,w
 14929  1F77                     u5795:	
 14930  1F77  1803               	btfsc	3,0
 14931  1F78  2FA8               	goto	l5612
 14932                           
 14933                           ;main.c: 93:     {;main.c: 95:         index = Insert(dest, src[i], index, destLimit);
 14934  1F79  0140               	movlb	0	; select bank0
 14935  1F7A  0821               	movf	InsertString@dest+1,w
 14936  1F7B  00F1               	movwf	Insert@dest+1
 14937  1F7C  0820               	movf	InsertString@dest,w
 14938  1F7D  00F0               	movwf	Insert@dest
 14939  1F7E  0822               	movf	InsertString@src,w
 14940  1F7F  072A               	addwf	InsertString@i,w
 14941  1F80  0084               	movwf	4
 14942  1F81  0823               	movf	InsertString@src+1,w
 14943  1F82  3D2B               	addwfc	InsertString@i+1,w
 14944  1F83  0085               	movwf	5
 14945  1F84  0800               	movf	0,w	;code access
 14946  1F85  00FD               	movwf	??_InsertString
 14947  1F86  087D               	movf	??_InsertString,w
 14948  1F87  00F2               	movwf	Insert@src
 14949  1F88  0825               	movf	InsertString@index+1,w
 14950  1F89  00F4               	movwf	Insert@index+1
 14951  1F8A  0824               	movf	InsertString@index,w
 14952  1F8B  00F3               	movwf	Insert@index
 14953  1F8C  0827               	movf	InsertString@destLimit+1,w
 14954  1F8D  00F6               	movwf	Insert@destLimit+1
 14955  1F8E  0826               	movf	InsertString@destLimit,w
 14956  1F8F  00F5               	movwf	Insert@destLimit
 14957  1F90  3193  232C  319F   	fcall	_Insert
 14958  1F93  0871               	movf	?_Insert+1,w
 14959  1F94  0140               	movlb	0	; select bank0
 14960  1F95  00A5               	movwf	InsertString@index+1
 14961  1F96  0870               	movf	?_Insert,w
 14962  1F97  00A4               	movwf	InsertString@index
 14963                           
 14964                           ;main.c: 96:     }
 14965  1F98  3001               	movlw	1
 14966  1F99  07AA               	addwf	InsertString@i,f
 14967  1F9A  3000               	movlw	0
 14968  1F9B  3DAB               	addwfc	InsertString@i+1,f
 14969  1F9C                     l5608:	
 14970  1F9C  082B               	movf	InsertString@i+1,w
 14971  1F9D  3A80               	xorlw	128
 14972  1F9E  00FD               	movwf	??_InsertString
 14973  1F9F  0829               	movf	InsertString@counti+1,w
 14974  1FA0  3A80               	xorlw	128
 14975  1FA1  027D               	subwf	??_InsertString,w
 14976  1FA2  1D03               	skipz
 14977  1FA3  2FA6               	goto	u5785
 14978  1FA4  0828               	movf	InsertString@counti,w
 14979  1FA5  022A               	subwf	InsertString@i,w
 14980  1FA6                     u5785:	
 14981  1FA6  1C03               	btfss	3,0
 14982  1FA7  2F6C               	goto	l5610
 14983  1FA8                     l5612:	
 14984                           
 14985                           ;main.c: 97:     return index;
 14986  1FA8  0140               	movlb	0	; select bank0
 14987  1FA9  0825               	movf	InsertString@index+1,w
 14988  1FAA  00A1               	movwf	?_InsertString+1
 14989  1FAB  0824               	movf	InsertString@index,w
 14990  1FAC  00A0               	movwf	?_InsertString
 14991  1FAD  0008               	return
 14992  1FAE                     __end_of_InsertString:	
 14993                           
 14994                           	psect	text36
 14995  132C                     __ptext36:	
 14996 ;; *************** function _Insert *****************
 14997 ;; Defined at:
 14998 ;;		line 58 in file "main.c"
 14999 ;; Parameters:    Size  Location     Type
 15000 ;;  dest            2    0[COMMON] PTR unsigned char 
 15001 ;;		 -> PollGPS@data_type(7), message_end(70), message_start(70), 
 15002 ;;  src             1    2[COMMON] unsigned char 
 15003 ;;  index           2    3[COMMON] int 
 15004 ;;  destLimit       2    5[COMMON] int 
 15005 ;; Auto vars:     Size  Location     Type
 15006 ;;  current         1    9[COMMON] unsigned char 
 15007 ;;  i               2   11[COMMON] int 
 15008 ;;  temp            1   10[COMMON] unsigned char 
 15009 ;; Return value:  Size  Location     Type
 15010 ;;                  2    0[COMMON] int 
 15011 ;; Registers used:
 15012 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 15013 ;; Tracked objects:
 15014 ;;		On entry : 0/0
 15015 ;;		On exit  : 0/0
 15016 ;;		Unchanged: 0/0
 15017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15018 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15019 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15020 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15021 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15022 ;;Total ram usage:       13 bytes
 15023 ;; Hardware stack levels used:    1
 15024 ;; Hardware stack levels required when called:    3
 15025 ;; This function calls:
 15026 ;;		Nothing
 15027 ;; This function is called by:
 15028 ;;		_InsertString
 15029 ;;		_PollGPS
 15030 ;;		_main
 15031 ;; This function uses a non-reentrant model
 15032 ;;
 15033                           
 15034                           
 15035                           ;psect for function _Insert
 15036  132C                     _Insert:	
 15037                           
 15038                           ;main.c: 58: int Insert(char* dest, char src, int index, int destLimit);main.c: 59: {;ma
      +                          in.c: 61:     char temp = dest[index];
 15039                           
 15040                           ;incstack = 0
 15041                           ; Regs used in _Insert: [wreg+fsr1l+fsr1h+status,2+status,0]
 15042  132C  0873               	movf	Insert@index,w
 15043  132D  0770               	addwf	Insert@dest,w
 15044  132E  0086               	movwf	6
 15045  132F  0874               	movf	Insert@index+1,w
 15046  1330  3D71               	addwfc	Insert@dest+1,w
 15047  1331  0087               	movwf	7
 15048  1332  0801               	movf	1,w
 15049  1333  00F7               	movwf	??_Insert
 15050  1334  0877               	movf	??_Insert,w
 15051  1335  00FA               	movwf	Insert@temp
 15052                           
 15053                           ;main.c: 63:     dest[index] = src;
 15054  1336  0873               	movf	Insert@index,w
 15055  1337  0770               	addwf	Insert@dest,w
 15056  1338  00F7               	movwf	??_Insert
 15057  1339  0874               	movf	Insert@index+1,w
 15058  133A  3D71               	addwfc	Insert@dest+1,w
 15059  133B  00F8               	movwf	??_Insert+1
 15060  133C  0877               	movf	??_Insert,w
 15061  133D  0086               	movwf	6
 15062  133E  0878               	movf	??_Insert+1,w
 15063  133F  0087               	movwf	7
 15064  1340  0872               	movf	Insert@src,w
 15065  1341  0081               	movwf	1
 15066                           
 15067                           ;main.c: 64:     index++;
 15068  1342  3001               	movlw	1
 15069  1343  07F3               	addwf	Insert@index,f
 15070  1344  3000               	movlw	0
 15071  1345  3DF4               	addwfc	Insert@index+1,f
 15072                           
 15073                           ;main.c: 65:     if (temp == '\0')
 15074  1346  087A               	movf	Insert@temp,w
 15075  1347  1D03               	btfss	3,2
 15076  1348  2B55               	goto	l642
 15077                           
 15078                           ;main.c: 66:     {;main.c: 67:         dest[index] = temp;
 15079  1349  0873               	movf	Insert@index,w
 15080  134A  0770               	addwf	Insert@dest,w
 15081  134B  00F7               	movwf	??_Insert
 15082  134C  0874               	movf	Insert@index+1,w
 15083  134D  3D71               	addwfc	Insert@dest+1,w
 15084  134E  00F8               	movwf	??_Insert+1
 15085  134F  0877               	movf	??_Insert,w
 15086  1350  0086               	movwf	6
 15087  1351  0878               	movf	??_Insert+1,w
 15088  1352  0087               	movwf	7
 15089  1353  087A               	movf	Insert@temp,w
 15090  1354  0081               	movwf	1
 15091  1355                     l642:	
 15092                           ;main.c: 68:     }
 15093                           
 15094                           
 15095                           ;main.c: 69:     if (dest[index] == '\0')
 15096  1355  0873               	movf	Insert@index,w
 15097  1356  0770               	addwf	Insert@dest,w
 15098  1357  0086               	movwf	6
 15099  1358  0874               	movf	Insert@index+1,w
 15100  1359  3D71               	addwfc	Insert@dest+1,w
 15101  135A  0087               	movwf	7
 15102  135B  0801               	movf	1,w
 15103  135C  1D03               	btfss	3,2
 15104  135D  2B63               	goto	l5474
 15105  135E                     l5470:	
 15106                           
 15107                           ;main.c: 70:     {;main.c: 71:         return index;
 15108  135E  0874               	movf	Insert@index+1,w
 15109  135F  00F1               	movwf	?_Insert+1
 15110  1360  0873               	movf	Insert@index,w
 15111  1361  00F0               	movwf	?_Insert
 15112  1362  0008               	return
 15113  1363                     l5474:	
 15114                           
 15115                           ;main.c: 73:     int i = index;
 15116  1363  0874               	movf	Insert@index+1,w
 15117  1364  00FC               	movwf	Insert@i+1
 15118  1365  0873               	movf	Insert@index,w
 15119  1366  00FB               	movwf	Insert@i
 15120  1367                     l645:	
 15121                           ;main.c: 86:     }
 15122                           
 15123                           ;main.c: 75:     while (i < destLimit)
 15124                           
 15125                           
 15126                           ;main.c: 75:     while (i < destLimit)
 15127  1367  087C               	movf	Insert@i+1,w
 15128  1368  3A80               	xorlw	128
 15129  1369  00F7               	movwf	??_Insert
 15130  136A  0876               	movf	Insert@destLimit+1,w
 15131  136B  3A80               	xorlw	128
 15132  136C  0277               	subwf	??_Insert,w
 15133  136D  1D03               	skipz
 15134  136E  2B71               	goto	u5585
 15135  136F  0875               	movf	Insert@destLimit,w
 15136  1370  027B               	subwf	Insert@i,w
 15137  1371                     u5585:	
 15138  1371  1803               	btfsc	3,0
 15139  1372  2B5E               	goto	l5470
 15140                           
 15141                           ;main.c: 76:     {;main.c: 77:         char current = dest[i];
 15142  1373  087B               	movf	Insert@i,w
 15143  1374  0770               	addwf	Insert@dest,w
 15144  1375  0086               	movwf	6
 15145  1376  087C               	movf	Insert@i+1,w
 15146  1377  3D71               	addwfc	Insert@dest+1,w
 15147  1378  0087               	movwf	7
 15148  1379  0801               	movf	1,w
 15149  137A  00F7               	movwf	??_Insert
 15150  137B  0877               	movf	??_Insert,w
 15151  137C  00F9               	movwf	Insert@current
 15152                           
 15153                           ;main.c: 78:         dest[i] = temp;
 15154  137D  087B               	movf	Insert@i,w
 15155  137E  0770               	addwf	Insert@dest,w
 15156  137F  00F7               	movwf	??_Insert
 15157  1380  087C               	movf	Insert@i+1,w
 15158  1381  3D71               	addwfc	Insert@dest+1,w
 15159  1382  00F8               	movwf	??_Insert+1
 15160  1383  0877               	movf	??_Insert,w
 15161  1384  0086               	movwf	6
 15162  1385  0878               	movf	??_Insert+1,w
 15163  1386  0087               	movwf	7
 15164  1387  087A               	movf	Insert@temp,w
 15165  1388  0081               	movwf	1
 15166                           
 15167                           ;main.c: 79:         i++;
 15168  1389  3001               	movlw	1
 15169  138A  07FB               	addwf	Insert@i,f
 15170  138B  3000               	movlw	0
 15171  138C  3DFC               	addwfc	Insert@i+1,f
 15172                           
 15173                           ;main.c: 80:         if (current == '\0')
 15174  138D  0879               	movf	Insert@current,w
 15175  138E  1D03               	btfss	3,2
 15176  138F  2B9D               	goto	l5484
 15177                           
 15178                           ;main.c: 81:         {;main.c: 82:             dest[i] = current;
 15179  1390  087B               	movf	Insert@i,w
 15180  1391  0770               	addwf	Insert@dest,w
 15181  1392  00F7               	movwf	??_Insert
 15182  1393  087C               	movf	Insert@i+1,w
 15183  1394  3D71               	addwfc	Insert@dest+1,w
 15184  1395  00F8               	movwf	??_Insert+1
 15185  1396  0877               	movf	??_Insert,w
 15186  1397  0086               	movwf	6
 15187  1398  0878               	movf	??_Insert+1,w
 15188  1399  0087               	movwf	7
 15189  139A  0879               	movf	Insert@current,w
 15190  139B  0081               	movwf	1
 15191                           
 15192                           ;main.c: 83:             break;
 15193  139C  2B5E               	goto	l5470
 15194  139D                     l5484:	
 15195                           
 15196                           ;main.c: 85:         temp = current;
 15197  139D  0879               	movf	Insert@current,w
 15198  139E  00F7               	movwf	??_Insert
 15199  139F  0877               	movf	??_Insert,w
 15200  13A0  00FA               	movwf	Insert@temp
 15201  13A1  2B67               	goto	l645
 15202  13A2                     __end_of_Insert:	
 15203                           
 15204                           	psect	text37
 15205  2646                     __ptext37:	
 15206 ;; *************** function _EUSART1_is_rx_ready *****************
 15207 ;; Defined at:
 15208 ;;		line 99 in file "mcc_generated_files/eusart1.c"
 15209 ;; Parameters:    Size  Location     Type
 15210 ;;		None
 15211 ;; Auto vars:     Size  Location     Type
 15212 ;;		None
 15213 ;; Return value:  Size  Location     Type
 15214 ;;                  1    wreg      _Bool 
 15215 ;; Registers used:
 15216 ;;		wreg, status,2, status,0
 15217 ;; Tracked objects:
 15218 ;;		On entry : 0/0
 15219 ;;		On exit  : 0/0
 15220 ;;		Unchanged: 0/0
 15221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15223 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15225 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15226 ;;Total ram usage:        0 bytes
 15227 ;; Hardware stack levels used:    1
 15228 ;; Hardware stack levels required when called:    3
 15229 ;; This function calls:
 15230 ;;		Nothing
 15231 ;; This function is called by:
 15232 ;;		_GPS_HasAcknowledged
 15233 ;;		_PollGPS
 15234 ;; This function uses a non-reentrant model
 15235 ;;
 15236                           
 15237                           
 15238                           ;psect for function _EUSART1_is_rx_ready
 15239  2646                     _EUSART1_is_rx_ready:	
 15240                           
 15241                           ;mcc_generated_files/eusart1.c: 101:     return (_Bool)(PIR3bits.RC1IF);
 15242                           
 15243                           ;incstack = 0
 15244                           ; Regs used in _EUSART1_is_rx_ready: [wreg+status,2+status,0]
 15245  2646  014E               	movlb	14	; select bank14
 15246  2647  0E0F               	swapf	15,w	;volatile
 15247  2648  0C89               	rrf	9,f
 15248  2649  3901               	andlw	1
 15249  264A  0008               	return
 15250  264B                     __end_of_EUSART1_is_rx_ready:	
 15251                           
 15252                           	psect	text38
 15253  269F                     __ptext38:	
 15254 ;; *************** function _EUSART1_Read *****************
 15255 ;; Defined at:
 15256 ;;		line 113 in file "mcc_generated_files/eusart1.c"
 15257 ;; Parameters:    Size  Location     Type
 15258 ;;		None
 15259 ;; Auto vars:     Size  Location     Type
 15260 ;;		None
 15261 ;; Return value:  Size  Location     Type
 15262 ;;                  1    wreg      unsigned char 
 15263 ;; Registers used:
 15264 ;;		wreg, status,2
 15265 ;; Tracked objects:
 15266 ;;		On entry : 0/0
 15267 ;;		On exit  : 0/0
 15268 ;;		Unchanged: 0/0
 15269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15273 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15274 ;;Total ram usage:        0 bytes
 15275 ;; Hardware stack levels used:    1
 15276 ;; Hardware stack levels required when called:    3
 15277 ;; This function calls:
 15278 ;;		Nothing
 15279 ;; This function is called by:
 15280 ;;		_GPS_HasAcknowledged
 15281 ;;		_PollGPS
 15282 ;; This function uses a non-reentrant model
 15283 ;;
 15284                           
 15285                           
 15286                           ;psect for function _EUSART1_Read
 15287  269F                     _EUSART1_Read:	
 15288  269F                     l348:	
 15289                           ;mcc_generated_files/eusart1.c: 116:     {;mcc_generated_files/eusart1.c: 117:     }
 15290                           
 15291                           ;incstack = 0
 15292                           ; Regs used in _EUSART1_Read: [wreg+status,2]
 15293                           
 15294                           
 15295                           ;mcc_generated_files/eusart1.c: 115:     while(!PIR3bits.RC1IF)
 15296  269F  014E               	movlb	14	; select bank14
 15297  26A0  1E8F               	btfss	15,5	;volatile
 15298  26A1  2E9F               	goto	l348
 15299                           
 15300                           ;mcc_generated_files/eusart1.c: 119:     eusart1RxLastError.status = 0;
 15301  26A2  0141               	movlb	1	; select bank1
 15302  26A3  01ED               	clrf	_eusart1RxLastError^(0+128)	;volatile
 15303                           
 15304                           ;mcc_generated_files/eusart1.c: 121:     if(1 == RC1STAbits.OERR)
 15305  26A4  0142               	movlb	2	; select bank2
 15306  26A5  1C9D               	btfss	29,1	;volatile
 15307  26A6  2EA9               	goto	l3972
 15308                           
 15309                           ;mcc_generated_files/eusart1.c: 122:     {;mcc_generated_files/eusart1.c: 125:         R
      +                          C1STAbits.CREN = 0;
 15310  26A7  121D               	bcf	29,4	;volatile
 15311                           
 15312                           ;mcc_generated_files/eusart1.c: 126:         RC1STAbits.CREN = 1;
 15313  26A8  161D               	bsf	29,4	;volatile
 15314  26A9                     l3972:	
 15315                           
 15316                           ;mcc_generated_files/eusart1.c: 129:     return RC1REG;
 15317  26A9  0819               	movf	25,w	;volatile
 15318  26AA  0008               	return
 15319  26AB                     __end_of_EUSART1_Read:	
 15320                           
 15321                           	psect	text39
 15322  182D                     __ptext39:	
 15323 ;; *************** function _ClearString *****************
 15324 ;; Defined at:
 15325 ;;		line 26 in file "main.c"
 15326 ;; Parameters:    Size  Location     Type
 15327 ;;  str             2    5[COMMON] PTR unsigned char 
 15328 ;;		 -> main@convertedNumber(16), PollGPS@data_type(7), 
 15329 ;; Auto vars:     Size  Location     Type
 15330 ;;  i               2   10[COMMON] int 
 15331 ;;  counti          2    8[COMMON] int 
 15332 ;; Return value:  Size  Location     Type
 15333 ;;                  1    wreg      void 
 15334 ;; Registers used:
 15335 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15336 ;; Tracked objects:
 15337 ;;		On entry : 0/0
 15338 ;;		On exit  : 0/0
 15339 ;;		Unchanged: 0/0
 15340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15341 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15342 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15343 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15344 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15345 ;;Total ram usage:        7 bytes
 15346 ;; Hardware stack levels used:    1
 15347 ;; Hardware stack levels required when called:    4
 15348 ;; This function calls:
 15349 ;;		_strlen
 15350 ;; This function is called by:
 15351 ;;		_PollGPS
 15352 ;;		_main
 15353 ;; This function uses a non-reentrant model
 15354 ;;
 15355                           
 15356                           
 15357                           ;psect for function _ClearString
 15358  182D                     _ClearString:	
 15359                           
 15360                           ;main.c: 26: void ClearString(char* str);main.c: 27: {;main.c: 28:     for (int i = 0, c
      +                          ounti = strlen(str); i < counti; i++)
 15361                           
 15362                           ;incstack = 0
 15363                           ; Regs used in _ClearString: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15364  182D  01FA               	clrf	ClearString@i
 15365  182E  01FB               	clrf	ClearString@i+1
 15366  182F  0876               	movf	ClearString@str+1,w
 15367  1830  00F1               	movwf	strlen@s+1
 15368  1831  0875               	movf	ClearString@str,w
 15369  1832  00F0               	movwf	strlen@s
 15370  1833  31A7  2722  3198   	fcall	_strlen
 15371  1836  0871               	movf	?_strlen+1,w
 15372  1837  00F9               	movwf	ClearString@counti+1
 15373  1838  0870               	movf	?_strlen,w
 15374  1839  00F8               	movwf	ClearString@counti
 15375  183A                     l5598:	
 15376  183A  087B               	movf	ClearString@i+1,w
 15377  183B  3A80               	xorlw	128
 15378  183C  00F7               	movwf	??_ClearString
 15379  183D  0879               	movf	ClearString@counti+1,w
 15380  183E  3A80               	xorlw	128
 15381  183F  0277               	subwf	??_ClearString,w
 15382  1840  1D03               	skipz
 15383  1841  2844               	goto	u5775
 15384  1842  0878               	movf	ClearString@counti,w
 15385  1843  027A               	subwf	ClearString@i,w
 15386  1844                     u5775:	
 15387  1844  1803               	btfsc	3,0
 15388  1845  0008               	return
 15389                           
 15390                           ;main.c: 29:     {;main.c: 30:         str[i] = '\0';
 15391  1846  087A               	movf	ClearString@i,w
 15392  1847  0775               	addwf	ClearString@str,w
 15393  1848  0086               	movwf	6
 15394  1849  087B               	movf	ClearString@i+1,w
 15395  184A  3D76               	addwfc	ClearString@str+1,w
 15396  184B  0087               	movwf	7
 15397  184C  0181               	clrf	1
 15398                           
 15399                           ;main.c: 31:     }
 15400  184D  3001               	movlw	1
 15401  184E  07FA               	addwf	ClearString@i,f
 15402  184F  3000               	movlw	0
 15403  1850  3DFB               	addwfc	ClearString@i+1,f
 15404  1851  283A               	goto	l5598
 15405  1852                     __end_of_ClearString:	
 15406                           
 15407                           	psect	text40
 15408  27C1                     __ptext40:	
 15409 ;; *************** function _ClearMessages *****************
 15410 ;; Defined at:
 15411 ;;		line 287 in file "main.c"
 15412 ;; Parameters:    Size  Location     Type
 15413 ;;		None
 15414 ;; Auto vars:     Size  Location     Type
 15415 ;;  i               2    1[COMMON] int 
 15416 ;; Return value:  Size  Location     Type
 15417 ;;                  1    wreg      void 
 15418 ;; Registers used:
 15419 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 15420 ;; Tracked objects:
 15421 ;;		On entry : 0/0
 15422 ;;		On exit  : 0/0
 15423 ;;		Unchanged: 0/0
 15424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15426 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15427 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15428 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15429 ;;Total ram usage:        3 bytes
 15430 ;; Hardware stack levels used:    1
 15431 ;; Hardware stack levels required when called:    3
 15432 ;; This function calls:
 15433 ;;		Nothing
 15434 ;; This function is called by:
 15435 ;;		_PollGPS
 15436 ;; This function uses a non-reentrant model
 15437 ;;
 15438                           
 15439                           
 15440                           ;psect for function _ClearMessages
 15441  27C1                     _ClearMessages:	
 15442                           
 15443                           ;main.c: 289:     for (int i = 0; i < 70; i++)
 15444                           
 15445                           ;incstack = 0
 15446                           ; Regs used in _ClearMessages: [wreg+fsr1l+fsr1h+status,2+status,0]
 15447  27C1  01F1               	clrf	ClearMessages@i
 15448  27C2  01F2               	clrf	ClearMessages@i+1
 15449  27C3                     l4310:	
 15450                           
 15451                           ;main.c: 290:     {;main.c: 291:         message_start[i] = '\0';
 15452  27C3  0871               	movf	ClearMessages@i,w
 15453  27C4  3EA0               	addlw	(low (_message_start| (0+512)))& (0+255)
 15454  27C5  0086               	movwf	6
 15455  27C6  3002               	movlw	2	; select bank5/6
 15456  27C7  0087               	movwf	7
 15457  27C8  0181               	clrf	1
 15458                           
 15459                           ;main.c: 292:         message_end[i] = '\0';
 15460  27C9  0871               	movf	ClearMessages@i,w
 15461  27CA  3E20               	addlw	(low (_message_end| (0+768)))& (0+255)
 15462  27CB  0086               	movwf	6
 15463  27CC  3003               	movlw	3	; select bank6/7
 15464  27CD  0087               	movwf	7
 15465  27CE  0181               	clrf	1
 15466                           
 15467                           ;main.c: 293:     }
 15468  27CF  3001               	movlw	1
 15469  27D0  07F1               	addwf	ClearMessages@i,f
 15470  27D1  3000               	movlw	0
 15471  27D2  3DF2               	addwfc	ClearMessages@i+1,f
 15472  27D3  0872               	movf	ClearMessages@i+1,w
 15473  27D4  3A80               	xorlw	128
 15474  27D5  00F0               	movwf	??_ClearMessages
 15475  27D6  3080               	movlw	128
 15476  27D7  0270               	subwf	??_ClearMessages,w
 15477  27D8  1D03               	skipz
 15478  27D9  2FDC               	goto	u4005
 15479  27DA  3046               	movlw	70
 15480  27DB  0271               	subwf	ClearMessages@i,w
 15481  27DC                     u4005:	
 15482  27DC  1803               	btfsc	3,0
 15483  27DD  0008               	return
 15484  27DE  2FC3               	goto	l4310
 15485  27DF                     __end_of_ClearMessages:	
 15486                           
 15487                           	psect	text41
 15488  1175                     __ptext41:	
 15489 ;; *************** function _IntToString *****************
 15490 ;; Defined at:
 15491 ;;		line 158 in file "main.c"
 15492 ;; Parameters:    Size  Location     Type
 15493 ;;  n               2   11[COMMON] int 
 15494 ;;  dest            1   13[COMMON] PTR unsigned char 
 15495 ;;		 -> main@convertedNumber(16), 
 15496 ;; Auto vars:     Size  Location     Type
 15497 ;;  i               2   12[BANK0 ] int 
 15498 ;;  sign            1   11[BANK0 ] _Bool 
 15499 ;; Return value:  Size  Location     Type
 15500 ;;                  1    wreg      void 
 15501 ;; Registers used:
 15502 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15503 ;; Tracked objects:
 15504 ;;		On entry : 0/0
 15505 ;;		On exit  : 0/0
 15506 ;;		Unchanged: 0/0
 15507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15508 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15509 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15510 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15511 ;;      Totals:         3       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15512 ;;Total ram usage:        8 bytes
 15513 ;; Hardware stack levels used:    1
 15514 ;; Hardware stack levels required when called:    5
 15515 ;; This function calls:
 15516 ;;		_ReverseString
 15517 ;;		___awdiv
 15518 ;;		___awmod
 15519 ;; This function is called by:
 15520 ;;		_main
 15521 ;;		_FloatToString
 15522 ;; This function uses a non-reentrant model
 15523 ;;
 15524                           
 15525                           
 15526                           ;psect for function _IntToString
 15527  1175                     _IntToString:	
 15528                           
 15529                           ;main.c: 158: void IntToString(int n, char* dest);main.c: 159: {;main.c: 160:     int i 
      +                          = 0;
 15530                           
 15531                           ;incstack = 0
 15532                           ; Regs used in _IntToString: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15533  1175  0140               	movlb	0	; select bank0
 15534  1176  01AC               	clrf	IntToString@i
 15535  1177  01AD               	clrf	IntToString@i+1
 15536                           
 15537                           ;main.c: 161:     _Bool sign = n < 0;
 15538  1178  1FFC               	btfss	IntToString@n+1,7
 15539  1179  297C               	goto	u4440
 15540  117A  3001               	movlw	1
 15541  117B  297D               	goto	u4450
 15542  117C                     u4440:	
 15543  117C  3000               	movlw	0
 15544  117D                     u4450:	
 15545  117D  00A9               	movwf	??_IntToString
 15546  117E  0829               	movf	??_IntToString,w
 15547  117F  00AB               	movwf	IntToString@sign
 15548                           
 15549                           ;main.c: 162:     if (sign)
 15550  1180  082B               	movf	IntToString@sign,w
 15551  1181  1903               	btfsc	3,2
 15552  1182  2988               	goto	l4610
 15553                           
 15554                           ;main.c: 163:     {;main.c: 165:         n = -n;
 15555  1183  09FB               	comf	IntToString@n,f
 15556  1184  09FC               	comf	IntToString@n+1,f
 15557  1185  0AFB               	incf	IntToString@n,f
 15558  1186  1903               	skipnz
 15559  1187  0AFC               	incf	IntToString@n+1,f
 15560  1188                     l4610:	
 15561                           
 15562                           ;main.c: 171:         dest[i++] = n % 10 + '0';
 15563  1188  300A               	movlw	10
 15564  1189  00F0               	movwf	___awmod@divisor
 15565  118A  3000               	movlw	0
 15566  118B  00F1               	movwf	___awmod@divisor+1
 15567  118C  087C               	movf	IntToString@n+1,w
 15568  118D  00F3               	movwf	___awmod@dividend+1
 15569  118E  087B               	movf	IntToString@n,w
 15570  118F  00F2               	movwf	___awmod@dividend
 15571  1190  319C  246C  3191   	fcall	___awmod
 15572  1193  0870               	movf	?___awmod,w
 15573  1194  3E30               	addlw	48
 15574  1195  0140               	movlb	0	; select bank0
 15575  1196  00A9               	movwf	??_IntToString
 15576  1197  082C               	movf	IntToString@i,w
 15577  1198  077D               	addwf	IntToString@dest,w
 15578  1199  00AA               	movwf	??_IntToString+1
 15579  119A  082A               	movf	??_IntToString+1,w
 15580  119B  0086               	movwf	6
 15581  119C  3001               	movlw	1	; select bank2/3
 15582  119D  0087               	movwf	7
 15583  119E  0829               	movf	??_IntToString,w
 15584  119F  0081               	movwf	1
 15585  11A0  3001               	movlw	1
 15586  11A1  07AC               	addwf	IntToString@i,f
 15587  11A2  3000               	movlw	0
 15588  11A3  3DAD               	addwfc	IntToString@i+1,f
 15589                           
 15590                           ;main.c: 173:     } while ((n /= 10) > 0);
 15591  11A4  300A               	movlw	10
 15592  11A5  00F0               	movwf	___awdiv@divisor
 15593  11A6  3000               	movlw	0
 15594  11A7  00F1               	movwf	___awdiv@divisor+1
 15595  11A8  087C               	movf	IntToString@n+1,w
 15596  11A9  00F3               	movwf	___awdiv@dividend+1
 15597  11AA  087B               	movf	IntToString@n,w
 15598  11AB  00F2               	movwf	___awdiv@dividend
 15599  11AC  319E  26B9  3191   	fcall	___awdiv
 15600  11AF  0871               	movf	?___awdiv+1,w
 15601  11B0  00FC               	movwf	IntToString@n+1
 15602  11B1  0870               	movf	?___awdiv,w
 15603  11B2  00FB               	movwf	IntToString@n
 15604  11B3  087C               	movf	IntToString@n+1,w
 15605  11B4  3A80               	xorlw	128
 15606  11B5  0140               	movlb	0	; select bank0
 15607  11B6  00A9               	movwf	??_IntToString
 15608  11B7  3080               	movlw	128
 15609  11B8  0229               	subwf	??_IntToString,w
 15610  11B9  1D03               	skipz
 15611  11BA  29BD               	goto	u4475
 15612  11BB  3001               	movlw	1
 15613  11BC  027B               	subwf	IntToString@n,w
 15614  11BD                     u4475:	
 15615  11BD  1803               	skipnc
 15616  11BE  2988               	goto	l4610
 15617                           
 15618                           ;main.c: 174:     if (sign)
 15619  11BF  0140               	movlb	0	; select bank0
 15620  11C0  082B               	movf	IntToString@sign,w
 15621  11C1  1903               	btfsc	3,2
 15622  11C2  29D2               	goto	l4622
 15623                           
 15624                           ;main.c: 175:     {;main.c: 176:         dest[i++] = '-';
 15625  11C3  302D               	movlw	45
 15626  11C4  00A9               	movwf	??_IntToString
 15627  11C5  082C               	movf	IntToString@i,w
 15628  11C6  077D               	addwf	IntToString@dest,w
 15629  11C7  00AA               	movwf	??_IntToString+1
 15630  11C8  082A               	movf	??_IntToString+1,w
 15631  11C9  0086               	movwf	6
 15632  11CA  3001               	movlw	1	; select bank2/3
 15633  11CB  0087               	movwf	7
 15634  11CC  0829               	movf	??_IntToString,w
 15635  11CD  0081               	movwf	1
 15636  11CE  3001               	movlw	1
 15637  11CF  07AC               	addwf	IntToString@i,f
 15638  11D0  3000               	movlw	0
 15639  11D1  3DAD               	addwfc	IntToString@i+1,f
 15640  11D2                     l4622:	
 15641                           
 15642                           ;main.c: 178:     dest[i] = '\0';
 15643  11D2  082C               	movf	IntToString@i,w
 15644  11D3  077D               	addwf	IntToString@dest,w
 15645  11D4  00A9               	movwf	??_IntToString
 15646  11D5  0829               	movf	??_IntToString,w
 15647  11D6  0086               	movwf	6
 15648  11D7  3001               	movlw	1	; select bank2/3
 15649  11D8  0087               	movwf	7
 15650  11D9  0181               	clrf	1
 15651                           
 15652                           ;main.c: 180:     ReverseString(dest);
 15653  11DA  087D               	movf	IntToString@dest,w
 15654  11DB  3191  2110         	fcall	_ReverseString
 15655  11DD  0008               	return
 15656  11DE                     __end_of_IntToString:	
 15657                           
 15658                           	psect	text42
 15659  1C6C                     __ptext42:	
 15660 ;; *************** function ___awmod *****************
 15661 ;; Defined at:
 15662 ;;		line 5 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\awmod.c"
 15663 ;; Parameters:    Size  Location     Type
 15664 ;;  divisor         2    0[COMMON] int 
 15665 ;;  dividend        2    2[COMMON] int 
 15666 ;; Auto vars:     Size  Location     Type
 15667 ;;  sign            1    6[COMMON] unsigned char 
 15668 ;;  counter         1    5[COMMON] unsigned char 
 15669 ;; Return value:  Size  Location     Type
 15670 ;;                  2    0[COMMON] int 
 15671 ;; Registers used:
 15672 ;;		wreg, status,2, status,0
 15673 ;; Tracked objects:
 15674 ;;		On entry : 0/0
 15675 ;;		On exit  : 0/0
 15676 ;;		Unchanged: 0/0
 15677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15678 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15679 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15680 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15681 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15682 ;;Total ram usage:        7 bytes
 15683 ;; Hardware stack levels used:    1
 15684 ;; Hardware stack levels required when called:    3
 15685 ;; This function calls:
 15686 ;;		Nothing
 15687 ;; This function is called by:
 15688 ;;		_IntToString
 15689 ;; This function uses a non-reentrant model
 15690 ;;
 15691                           
 15692                           
 15693                           ;psect for function ___awmod
 15694  1C6C                     ___awmod:	
 15695                           
 15696                           ;incstack = 0
 15697                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 15698  1C6C  01F6               	clrf	___awmod@sign
 15699  1C6D  1FF3               	btfss	___awmod@dividend+1,7
 15700  1C6E  2C76               	goto	l4454
 15701  1C6F  09F2               	comf	___awmod@dividend,f
 15702  1C70  09F3               	comf	___awmod@dividend+1,f
 15703  1C71  0AF2               	incf	___awmod@dividend,f
 15704  1C72  1903               	skipnz
 15705  1C73  0AF3               	incf	___awmod@dividend+1,f
 15706  1C74  01F6               	clrf	___awmod@sign
 15707  1C75  0AF6               	incf	___awmod@sign,f
 15708  1C76                     l4454:	
 15709  1C76  1FF1               	btfss	___awmod@divisor+1,7
 15710  1C77  2C7D               	goto	l4458
 15711  1C78  09F0               	comf	___awmod@divisor,f
 15712  1C79  09F1               	comf	___awmod@divisor+1,f
 15713  1C7A  0AF0               	incf	___awmod@divisor,f
 15714  1C7B  1903               	skipnz
 15715  1C7C  0AF1               	incf	___awmod@divisor+1,f
 15716  1C7D                     l4458:	
 15717  1C7D  0870               	movf	___awmod@divisor,w
 15718  1C7E  0471               	iorwf	___awmod@divisor+1,w
 15719  1C7F  1903               	btfsc	3,2
 15720  1C80  2CA4               	goto	l4476
 15721  1C81  01F5               	clrf	___awmod@counter
 15722  1C82  0AF5               	incf	___awmod@counter,f
 15723  1C83                     l4466:	
 15724  1C83  1BF1               	btfsc	___awmod@divisor+1,7
 15725  1C84  2C8F               	goto	l4468
 15726  1C85  3001               	movlw	1
 15727  1C86                     u4205:	
 15728  1C86  35F0               	lslf	___awmod@divisor,f
 15729  1C87  0DF1               	rlf	___awmod@divisor+1,f
 15730  1C88  0B89               	decfsz	9,f
 15731  1C89  2C86               	goto	u4205
 15732  1C8A  3001               	movlw	1
 15733  1C8B  00F4               	movwf	??___awmod
 15734  1C8C  0874               	movf	??___awmod,w
 15735  1C8D  07F5               	addwf	___awmod@counter,f
 15736  1C8E  2C83               	goto	l4466
 15737  1C8F                     l4468:	
 15738  1C8F  0871               	movf	___awmod@divisor+1,w
 15739  1C90  0273               	subwf	___awmod@dividend+1,w
 15740  1C91  1D03               	skipz
 15741  1C92  2C95               	goto	u4225
 15742  1C93  0870               	movf	___awmod@divisor,w
 15743  1C94  0272               	subwf	___awmod@dividend,w
 15744  1C95                     u4225:	
 15745  1C95  1C03               	skipc
 15746  1C96  2C9B               	goto	l4472
 15747  1C97  0870               	movf	___awmod@divisor,w
 15748  1C98  02F2               	subwf	___awmod@dividend,f
 15749  1C99  0871               	movf	___awmod@divisor+1,w
 15750  1C9A  3BF3               	subwfb	___awmod@dividend+1,f
 15751  1C9B                     l4472:	
 15752  1C9B  3001               	movlw	1
 15753  1C9C                     u4235:	
 15754  1C9C  36F1               	lsrf	___awmod@divisor+1,f
 15755  1C9D  0CF0               	rrf	___awmod@divisor,f
 15756  1C9E  0B89               	decfsz	9,f
 15757  1C9F  2C9C               	goto	u4235
 15758  1CA0  3001               	movlw	1
 15759  1CA1  02F5               	subwf	___awmod@counter,f
 15760  1CA2  1D03               	btfss	3,2
 15761  1CA3  2C8F               	goto	l4468
 15762  1CA4                     l4476:	
 15763  1CA4  0876               	movf	___awmod@sign,w
 15764  1CA5  1903               	btfsc	3,2
 15765  1CA6  2CAC               	goto	l4480
 15766  1CA7  09F2               	comf	___awmod@dividend,f
 15767  1CA8  09F3               	comf	___awmod@dividend+1,f
 15768  1CA9  0AF2               	incf	___awmod@dividend,f
 15769  1CAA  1903               	skipnz
 15770  1CAB  0AF3               	incf	___awmod@dividend+1,f
 15771  1CAC                     l4480:	
 15772  1CAC  0873               	movf	___awmod@dividend+1,w
 15773  1CAD  00F1               	movwf	?___awmod+1
 15774  1CAE  0872               	movf	___awmod@dividend,w
 15775  1CAF  00F0               	movwf	?___awmod
 15776  1CB0  0008               	return
 15777  1CB1                     __end_of___awmod:	
 15778                           
 15779                           	psect	text43
 15780  1110                     __ptext43:	
 15781 ;; *************** function _ReverseString *****************
 15782 ;; Defined at:
 15783 ;;		line 103 in file "main.c"
 15784 ;; Parameters:    Size  Location     Type
 15785 ;;  str             1    wreg     PTR unsigned char 
 15786 ;;		 -> checksum(6), main@convertedNumber(16), 
 15787 ;; Auto vars:     Size  Location     Type
 15788 ;;  str             1    8[BANK0 ] PTR unsigned char 
 15789 ;;		 -> checksum(6), main@convertedNumber(16), 
 15790 ;;  opposite        1    3[BANK0 ] PTR unsigned char 
 15791 ;;		 -> checksum(6), main@convertedNumber(16), 
 15792 ;;  temp            1    2[BANK0 ] unsigned char 
 15793 ;;  i               2    6[BANK0 ] int 
 15794 ;;  halfway         2    0[BANK0 ] int 
 15795 ;;  counti          2    4[BANK0 ] int 
 15796 ;; Return value:  Size  Location     Type
 15797 ;;                  1    wreg      void 
 15798 ;; Registers used:
 15799 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15800 ;; Tracked objects:
 15801 ;;		On entry : 0/0
 15802 ;;		On exit  : 0/0
 15803 ;;		Unchanged: 0/0
 15804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15806 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15807 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15808 ;;      Totals:         2       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15809 ;;Total ram usage:       11 bytes
 15810 ;; Hardware stack levels used:    1
 15811 ;; Hardware stack levels required when called:    4
 15812 ;; This function calls:
 15813 ;;		___awdiv
 15814 ;;		_strlen
 15815 ;; This function is called by:
 15816 ;;		_UIntToHexString
 15817 ;;		_IntToString
 15818 ;;		_UIntToString
 15819 ;;		_IntToHexString
 15820 ;; This function uses a non-reentrant model
 15821 ;;
 15822                           
 15823                           
 15824                           ;psect for function _ReverseString
 15825  1110                     _ReverseString:	
 15826                           
 15827                           ;incstack = 0
 15828                           ; Regs used in _ReverseString: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15829                           ;ReverseString@str stored from wreg
 15830  1110  0140               	movlb	0	; select bank0
 15831  1111  00A8               	movwf	ReverseString@str
 15832                           
 15833                           ;main.c: 103: void ReverseString(char* str);main.c: 104: {;main.c: 105:     int counti =
      +                           strlen(str);
 15834  1112  0828               	movf	ReverseString@str,w
 15835  1113  00F0               	movwf	strlen@s
 15836  1114  3001               	movlw	1
 15837  1115  00F1               	movwf	strlen@s+1
 15838  1116  31A7  2722  3191   	fcall	_strlen
 15839  1119  0871               	movf	?_strlen+1,w
 15840  111A  0140               	movlb	0	; select bank0
 15841  111B  00A5               	movwf	ReverseString@counti+1
 15842  111C  0870               	movf	?_strlen,w
 15843  111D  00A4               	movwf	ReverseString@counti
 15844                           
 15845                           ;main.c: 106:     for (int i = 0, halfway = counti / 2; i < halfway; i++)
 15846  111E  01A6               	clrf	ReverseString@i
 15847  111F  01A7               	clrf	ReverseString@i+1
 15848  1120  3002               	movlw	2
 15849  1121  00F0               	movwf	___awdiv@divisor
 15850  1122  3000               	movlw	0
 15851  1123  00F1               	movwf	___awdiv@divisor+1
 15852  1124  0825               	movf	ReverseString@counti+1,w
 15853  1125  00F3               	movwf	___awdiv@dividend+1
 15854  1126  0824               	movf	ReverseString@counti,w
 15855  1127  00F2               	movwf	___awdiv@dividend
 15856  1128  319E  26B9  3191   	fcall	___awdiv
 15857  112B  0871               	movf	?___awdiv+1,w
 15858  112C  0140               	movlb	0	; select bank0
 15859  112D  00A1               	movwf	ReverseString@halfway+1
 15860  112E  0870               	movf	?___awdiv,w
 15861  112F  00A0               	movwf	ReverseString@halfway
 15862  1130                     l4300:	
 15863  1130  0827               	movf	ReverseString@i+1,w
 15864  1131  3A80               	xorlw	128
 15865  1132  00F9               	movwf	??_ReverseString
 15866  1133  0821               	movf	ReverseString@halfway+1,w
 15867  1134  3A80               	xorlw	128
 15868  1135  0279               	subwf	??_ReverseString,w
 15869  1136  1D03               	skipz
 15870  1137  293A               	goto	u3995
 15871  1138  0820               	movf	ReverseString@halfway,w
 15872  1139  0226               	subwf	ReverseString@i,w
 15873  113A                     u3995:	
 15874  113A  1803               	btfsc	3,0
 15875  113B  296B               	goto	l4302
 15876                           
 15877                           ;main.c: 107:     {;main.c: 108:         char temp = str[i];
 15878  113C  0140               	movlb	0	; select bank0
 15879  113D  0826               	movf	ReverseString@i,w
 15880  113E  0728               	addwf	ReverseString@str,w
 15881  113F  00F9               	movwf	??_ReverseString
 15882  1140  0879               	movf	??_ReverseString,w
 15883  1141  0086               	movwf	6
 15884  1142  3001               	movlw	1	; select bank2/3
 15885  1143  0087               	movwf	7
 15886  1144  0801               	movf	1,w
 15887  1145  00FA               	movwf	??_ReverseString+1
 15888  1146  087A               	movf	??_ReverseString+1,w
 15889  1147  00A2               	movwf	ReverseString@temp
 15890                           
 15891                           ;main.c: 109:         char* opposite = str + (counti - 1 - i);
 15892  1148  0826               	movf	ReverseString@i,w
 15893  1149  0228               	subwf	ReverseString@str,w
 15894  114A  0724               	addwf	ReverseString@counti,w
 15895  114B  3EFF               	addlw	-1
 15896  114C  00F9               	movwf	??_ReverseString
 15897  114D  0879               	movf	??_ReverseString,w
 15898  114E  00A3               	movwf	ReverseString@opposite
 15899                           
 15900                           ;main.c: 110:         str[i] = *opposite;
 15901  114F  0823               	movf	ReverseString@opposite,w
 15902  1150  0086               	movwf	6
 15903  1151  3001               	movlw	1	; select bank2/3
 15904  1152  0087               	movwf	7
 15905  1153  0801               	movf	1,w
 15906  1154  00F9               	movwf	??_ReverseString
 15907  1155  0826               	movf	ReverseString@i,w
 15908  1156  0728               	addwf	ReverseString@str,w
 15909  1157  00FA               	movwf	??_ReverseString+1
 15910  1158  087A               	movf	??_ReverseString+1,w
 15911  1159  0086               	movwf	6
 15912  115A  3001               	movlw	1	; select bank2/3
 15913  115B  0087               	movwf	7
 15914  115C  0879               	movf	??_ReverseString,w
 15915  115D  0081               	movwf	1
 15916                           
 15917                           ;main.c: 111:         *opposite = temp;
 15918  115E  0822               	movf	ReverseString@temp,w
 15919  115F  00F9               	movwf	??_ReverseString
 15920  1160  0823               	movf	ReverseString@opposite,w
 15921  1161  0086               	movwf	6
 15922  1162  3001               	movlw	1	; select bank2/3
 15923  1163  0087               	movwf	7
 15924  1164  0879               	movf	??_ReverseString,w
 15925  1165  0081               	movwf	1
 15926                           
 15927                           ;main.c: 112:     }
 15928  1166  3001               	movlw	1
 15929  1167  07A6               	addwf	ReverseString@i,f
 15930  1168  3000               	movlw	0
 15931  1169  3DA7               	addwfc	ReverseString@i+1,f
 15932  116A  2930               	goto	l4300
 15933  116B                     l4302:	
 15934                           
 15935                           ;main.c: 113:     str[counti] = '\0';
 15936  116B  0140               	movlb	0	; select bank0
 15937  116C  0824               	movf	ReverseString@counti,w
 15938  116D  0728               	addwf	ReverseString@str,w
 15939  116E  00F9               	movwf	??_ReverseString
 15940  116F  0879               	movf	??_ReverseString,w
 15941  1170  0086               	movwf	6
 15942  1171  3001               	movlw	1	; select bank2/3
 15943  1172  0087               	movwf	7
 15944  1173  0181               	clrf	1
 15945  1174  0008               	return
 15946  1175                     __end_of_ReverseString:	
 15947                           
 15948                           	psect	text44
 15949  2722                     __ptext44:	
 15950 ;; *************** function _strlen *****************
 15951 ;; Defined at:
 15952 ;;		line 12 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\strlen.c"
 15953 ;; Parameters:    Size  Location     Type
 15954 ;;  s               2    0[COMMON] PTR const unsigned char 
 15955 ;;		 -> STR_10(3), checksum(6), STR_9(7), main@convertedNumber(16), 
 15956 ;;		 -> STR_7(14), PollGPS@data_type(7), STR_6(26), STR_5(26), 
 15957 ;;		 -> STR_4(26), STR_3(26), STR_2(26), STR_1(26), 
 15958 ;;		 -> message_end(70), message_start(70), 
 15959 ;; Auto vars:     Size  Location     Type
 15960 ;;  a               2    3[COMMON] PTR const unsigned char 
 15961 ;;		 -> STR_10(3), checksum(6), STR_9(7), main@convertedNumber(16), 
 15962 ;;		 -> STR_7(14), PollGPS@data_type(7), STR_6(26), STR_5(26), 
 15963 ;;		 -> STR_4(26), STR_3(26), STR_2(26), STR_1(26), 
 15964 ;;		 -> message_end(70), message_start(70), 
 15965 ;; Return value:  Size  Location     Type
 15966 ;;                  2    0[COMMON] unsigned int 
 15967 ;; Registers used:
 15968 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 15969 ;; Tracked objects:
 15970 ;;		On entry : 0/0
 15971 ;;		On exit  : 0/0
 15972 ;;		Unchanged: 0/0
 15973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15974 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15975 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15976 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15977 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15978 ;;Total ram usage:        5 bytes
 15979 ;; Hardware stack levels used:    1
 15980 ;; Hardware stack levels required when called:    3
 15981 ;; This function calls:
 15982 ;;		Nothing
 15983 ;; This function is called by:
 15984 ;;		_ClearString
 15985 ;;		_InsertString
 15986 ;;		_ReverseString
 15987 ;;		_WriteGPS
 15988 ;;		_main
 15989 ;;		_crc16
 15990 ;;		_TransmitString
 15991 ;; This function uses a non-reentrant model
 15992 ;;
 15993                           
 15994                           
 15995                           ;psect for function _strlen
 15996  2722                     _strlen:	
 15997                           
 15998                           ;incstack = 0
 15999                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
 16000  2722  0871               	movf	strlen@s+1,w
 16001  2723  00F4               	movwf	strlen@a+1
 16002  2724  0870               	movf	strlen@s,w
 16003  2725  00F3               	movwf	strlen@a
 16004  2726                     l3984:	
 16005  2726  0870               	movf	strlen@s,w
 16006  2727  0084               	movwf	4
 16007  2728  0871               	movf	strlen@s+1,w
 16008  2729  0085               	movwf	5
 16009  272A  0012               	moviw fsr0++
 16010  272B  1903               	btfsc	3,2
 16011  272C  2F32               	goto	l3986
 16012  272D  3001               	movlw	1
 16013  272E  07F0               	addwf	strlen@s,f
 16014  272F  3000               	movlw	0
 16015  2730  3DF1               	addwfc	strlen@s+1,f
 16016  2731  2F26               	goto	l3984
 16017  2732                     l3986:	
 16018  2732  0873               	movf	strlen@a,w
 16019  2733  0270               	subwf	strlen@s,w
 16020  2734  00F0               	movwf	?_strlen
 16021  2735  0874               	movf	strlen@a+1,w
 16022  2736  3B71               	subwfb	strlen@s+1,w
 16023  2737  00F1               	movwf	?_strlen+1
 16024  2738  0008               	return
 16025  2739                     __end_of_strlen:	
 16026                           
 16027                           	psect	text45
 16028  1EB9                     __ptext45:	
 16029 ;; *************** function ___awdiv *****************
 16030 ;; Defined at:
 16031 ;;		line 5 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\awdiv.c"
 16032 ;; Parameters:    Size  Location     Type
 16033 ;;  divisor         2    0[COMMON] int 
 16034 ;;  dividend        2    2[COMMON] int 
 16035 ;; Auto vars:     Size  Location     Type
 16036 ;;  quotient        2    7[COMMON] int 
 16037 ;;  sign            1    6[COMMON] unsigned char 
 16038 ;;  counter         1    5[COMMON] unsigned char 
 16039 ;; Return value:  Size  Location     Type
 16040 ;;                  2    0[COMMON] int 
 16041 ;; Registers used:
 16042 ;;		wreg, status,2, status,0
 16043 ;; Tracked objects:
 16044 ;;		On entry : 0/0
 16045 ;;		On exit  : 0/0
 16046 ;;		Unchanged: 0/0
 16047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16048 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16049 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16050 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16051 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16052 ;;Total ram usage:        9 bytes
 16053 ;; Hardware stack levels used:    1
 16054 ;; Hardware stack levels required when called:    3
 16055 ;; This function calls:
 16056 ;;		Nothing
 16057 ;; This function is called by:
 16058 ;;		_ReverseString
 16059 ;;		_IntToString
 16060 ;;		_IntToHexString
 16061 ;; This function uses a non-reentrant model
 16062 ;;
 16063                           
 16064                           
 16065                           ;psect for function ___awdiv
 16066  1EB9                     ___awdiv:	
 16067                           
 16068                           ;incstack = 0
 16069                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 16070  1EB9  01F6               	clrf	___awdiv@sign
 16071  1EBA  1FF1               	btfss	___awdiv@divisor+1,7
 16072  1EBB  2EC3               	goto	l4034
 16073  1EBC  09F0               	comf	___awdiv@divisor,f
 16074  1EBD  09F1               	comf	___awdiv@divisor+1,f
 16075  1EBE  0AF0               	incf	___awdiv@divisor,f
 16076  1EBF  1903               	skipnz
 16077  1EC0  0AF1               	incf	___awdiv@divisor+1,f
 16078  1EC1  01F6               	clrf	___awdiv@sign
 16079  1EC2  0AF6               	incf	___awdiv@sign,f
 16080  1EC3                     l4034:	
 16081  1EC3  1FF3               	btfss	___awdiv@dividend+1,7
 16082  1EC4  2ECE               	goto	l4040
 16083  1EC5  09F2               	comf	___awdiv@dividend,f
 16084  1EC6  09F3               	comf	___awdiv@dividend+1,f
 16085  1EC7  0AF2               	incf	___awdiv@dividend,f
 16086  1EC8  1903               	skipnz
 16087  1EC9  0AF3               	incf	___awdiv@dividend+1,f
 16088  1ECA  3001               	movlw	1
 16089  1ECB  00F4               	movwf	??___awdiv
 16090  1ECC  0874               	movf	??___awdiv,w
 16091  1ECD  06F6               	xorwf	___awdiv@sign,f
 16092  1ECE                     l4040:	
 16093  1ECE  01F7               	clrf	___awdiv@quotient
 16094  1ECF  01F8               	clrf	___awdiv@quotient+1
 16095  1ED0  0870               	movf	___awdiv@divisor,w
 16096  1ED1  0471               	iorwf	___awdiv@divisor+1,w
 16097  1ED2  1903               	btfsc	3,2
 16098  1ED3  2EFD               	goto	l4062
 16099  1ED4  01F5               	clrf	___awdiv@counter
 16100  1ED5  0AF5               	incf	___awdiv@counter,f
 16101  1ED6                     l4050:	
 16102  1ED6  1BF1               	btfsc	___awdiv@divisor+1,7
 16103  1ED7  2EE2               	goto	l4052
 16104  1ED8  3001               	movlw	1
 16105  1ED9                     u3595:	
 16106  1ED9  35F0               	lslf	___awdiv@divisor,f
 16107  1EDA  0DF1               	rlf	___awdiv@divisor+1,f
 16108  1EDB  0B89               	decfsz	9,f
 16109  1EDC  2ED9               	goto	u3595
 16110  1EDD  3001               	movlw	1
 16111  1EDE  00F4               	movwf	??___awdiv
 16112  1EDF  0874               	movf	??___awdiv,w
 16113  1EE0  07F5               	addwf	___awdiv@counter,f
 16114  1EE1  2ED6               	goto	l4050
 16115  1EE2                     l4052:	
 16116  1EE2  3001               	movlw	1
 16117  1EE3                     u3615:	
 16118  1EE3  35F7               	lslf	___awdiv@quotient,f
 16119  1EE4  0DF8               	rlf	___awdiv@quotient+1,f
 16120  1EE5  0B89               	decfsz	9,f
 16121  1EE6  2EE3               	goto	u3615
 16122  1EE7  0871               	movf	___awdiv@divisor+1,w
 16123  1EE8  0273               	subwf	___awdiv@dividend+1,w
 16124  1EE9  1D03               	skipz
 16125  1EEA  2EED               	goto	u3625
 16126  1EEB  0870               	movf	___awdiv@divisor,w
 16127  1EEC  0272               	subwf	___awdiv@dividend,w
 16128  1EED                     u3625:	
 16129  1EED  1C03               	skipc
 16130  1EEE  2EF4               	goto	l4058
 16131  1EEF  0870               	movf	___awdiv@divisor,w
 16132  1EF0  02F2               	subwf	___awdiv@dividend,f
 16133  1EF1  0871               	movf	___awdiv@divisor+1,w
 16134  1EF2  3BF3               	subwfb	___awdiv@dividend+1,f
 16135  1EF3  1477               	bsf	___awdiv@quotient,0
 16136  1EF4                     l4058:	
 16137  1EF4  3001               	movlw	1
 16138  1EF5                     u3635:	
 16139  1EF5  36F1               	lsrf	___awdiv@divisor+1,f
 16140  1EF6  0CF0               	rrf	___awdiv@divisor,f
 16141  1EF7  0B89               	decfsz	9,f
 16142  1EF8  2EF5               	goto	u3635
 16143  1EF9  3001               	movlw	1
 16144  1EFA  02F5               	subwf	___awdiv@counter,f
 16145  1EFB  1D03               	btfss	3,2
 16146  1EFC  2EE2               	goto	l4052
 16147  1EFD                     l4062:	
 16148  1EFD  0876               	movf	___awdiv@sign,w
 16149  1EFE  1903               	btfsc	3,2
 16150  1EFF  2F05               	goto	l4066
 16151  1F00  09F7               	comf	___awdiv@quotient,f
 16152  1F01  09F8               	comf	___awdiv@quotient+1,f
 16153  1F02  0AF7               	incf	___awdiv@quotient,f
 16154  1F03  1903               	skipnz
 16155  1F04  0AF8               	incf	___awdiv@quotient+1,f
 16156  1F05                     l4066:	
 16157  1F05  0878               	movf	___awdiv@quotient+1,w
 16158  1F06  00F1               	movwf	?___awdiv+1
 16159  1F07  0877               	movf	___awdiv@quotient,w
 16160  1F08  00F0               	movwf	?___awdiv
 16161  1F09  0008               	return
 16162  1F0A                     __end_of___awdiv:	
 16163                           
 16164                           	psect	text46
 16165  266F                     __ptext46:	
 16166 ;; *************** function _InitTiming *****************
 16167 ;; Defined at:
 16168 ;;		line 11 in file "timing.c"
 16169 ;; Parameters:    Size  Location     Type
 16170 ;;		None
 16171 ;; Auto vars:     Size  Location     Type
 16172 ;;		None
 16173 ;; Return value:  Size  Location     Type
 16174 ;;                  1    wreg      void 
 16175 ;; Registers used:
 16176 ;;		wreg, status,2, status,0, pclath, cstack
 16177 ;; Tracked objects:
 16178 ;;		On entry : 0/0
 16179 ;;		On exit  : 0/0
 16180 ;;		Unchanged: 0/0
 16181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16185 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16186 ;;Total ram usage:        0 bytes
 16187 ;; Hardware stack levels used:    1
 16188 ;; Hardware stack levels required when called:    4
 16189 ;; This function calls:
 16190 ;;		_TMR0_SetInterruptHandler
 16191 ;; This function is called by:
 16192 ;;		_main
 16193 ;; This function uses a non-reentrant model
 16194 ;;
 16195                           
 16196                           
 16197                           ;psect for function _InitTiming
 16198  266F                     _InitTiming:	
 16199                           
 16200                           ;timing.c: 13:     (INTCONbits.GIE = 1);
 16201                           
 16202                           ;incstack = 0
 16203                           ; Regs used in _InitTiming: [wreg+status,2+status,0+pclath+cstack]
 16204  266F  178B               	bsf	11,7	;volatile
 16205                           
 16206                           ;timing.c: 14:     TMR0_SetInterruptHandler(TimerISR);
 16207  2670  3080               	movlw	low _TimerISR
 16208  2671  00F0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 16209  2672  3026               	movlw	high _TimerISR
 16210  2673  00F1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 16211  2674  31A6  264B         	fcall	_TMR0_SetInterruptHandler
 16212  2676  0008               	return
 16213  2677                     __end_of_InitTiming:	
 16214                           
 16215                           	psect	text47
 16216  264B                     __ptext47:	
 16217 ;; *************** function _TMR0_SetInterruptHandler *****************
 16218 ;; Defined at:
 16219 ;;		line 134 in file "mcc_generated_files/tmr0.c"
 16220 ;; Parameters:    Size  Location     Type
 16221 ;;  InterruptHan    2    0[COMMON] PTR FTN()void 
 16222 ;;		 -> TimerISR(1), TMR0_DefaultInterruptHandler(1), 
 16223 ;; Auto vars:     Size  Location     Type
 16224 ;;		None
 16225 ;; Return value:  Size  Location     Type
 16226 ;;                  1    wreg      void 
 16227 ;; Registers used:
 16228 ;;		wreg
 16229 ;; Tracked objects:
 16230 ;;		On entry : 0/0
 16231 ;;		On exit  : 0/0
 16232 ;;		Unchanged: 0/0
 16233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16234 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16237 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16238 ;;Total ram usage:        2 bytes
 16239 ;; Hardware stack levels used:    1
 16240 ;; Hardware stack levels required when called:    3
 16241 ;; This function calls:
 16242 ;;		Nothing
 16243 ;; This function is called by:
 16244 ;;		_TMR0_Initialize
 16245 ;;		_InitTiming
 16246 ;; This function uses a non-reentrant model
 16247 ;;
 16248                           
 16249                           
 16250                           ;psect for function _TMR0_SetInterruptHandler
 16251  264B                     _TMR0_SetInterruptHandler:	
 16252                           
 16253                           ;mcc_generated_files/tmr0.c: 135:     TMR0_InterruptHandler = InterruptHandler;
 16254                           
 16255                           ;incstack = 0
 16256                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
 16257  264B  0871               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
 16258  264C  0141               	movlb	1	; select bank1
 16259  264D  00EF               	movwf	(_TMR0_InterruptHandler+1)^(0+128)
 16260  264E  0870               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
 16261  264F  00EE               	movwf	_TMR0_InterruptHandler^(0+128)
 16262  2650  0008               	return
 16263  2651                     __end_of_TMR0_SetInterruptHandler:	
 16264                           
 16265                           	psect	text48
 16266  1249                     __ptext48:	
 16267 ;; *************** function _BME280_Init *****************
 16268 ;; Defined at:
 16269 ;;		line 84 in file "bme280_i2c.c"
 16270 ;; Parameters:    Size  Location     Type
 16271 ;;		None
 16272 ;; Auto vars:     Size  Location     Type
 16273 ;;  settings_sel    1   16[BANK1 ] unsigned char 
 16274 ;;  rslt            1   17[BANK1 ] char 
 16275 ;; Return value:  Size  Location     Type
 16276 ;;                  1    wreg      void 
 16277 ;; Registers used:
 16278 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16279 ;; Tracked objects:
 16280 ;;		On entry : 0/0
 16281 ;;		On exit  : 0/0
 16282 ;;		Unchanged: 0/0
 16283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16285 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16286 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16287 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16288 ;;Total ram usage:        4 bytes
 16289 ;; Hardware stack levels used:    1
 16290 ;; Hardware stack levels required when called:   16
 16291 ;; This function calls:
 16292 ;;		_DebugAlert
 16293 ;;		_I2C_Init
 16294 ;;		_bme280_init
 16295 ;;		_bme280_set_sensor_mode
 16296 ;;		_bme280_set_sensor_settings
 16297 ;; This function is called by:
 16298 ;;		_main
 16299 ;; This function uses a non-reentrant model
 16300 ;;
 16301                           
 16302                           
 16303                           ;psect for function _BME280_Init
 16304  1249                     _BME280_Init:	
 16305                           
 16306                           ;bme280_i2c.c: 86:     I2C_Init();
 16307                           
 16308                           ;incstack = 0
 16309 ;; hardware stack exceeded
 16310                           ; Regs used in _BME280_Init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16311  1249  31A6  26FA  3192   	fcall	_I2C_Init
 16312                           
 16313                           ;bme280_i2c.c: 90:     EnvSensor.dev_id = 0x76;
 16314  124C  3076               	movlw	118
 16315  124D  0141               	movlb	1	; select bank1
 16316  124E  00AE               	movwf	??_BME280_Init^(0+128)
 16317  124F  082E               	movf	??_BME280_Init^(0+128),w
 16318  1250  0143               	movlb	3	; select bank3
 16319  1251  00BB               	movwf	(_EnvSensor^(0+384)+1)
 16320                           
 16321                           ;bme280_i2c.c: 91:     EnvSensor.intf = BME280_I2C_INTF;
 16322  1252  01BC               	clrf	(_EnvSensor^(0+384)+2)
 16323  1253  0ABC               	incf	(_EnvSensor^(0+384)+2),f
 16324                           
 16325                           ;bme280_i2c.c: 92:     EnvSensor.read = ReadEnvSensor;
 16326  1254  3068               	movlw	low _ReadEnvSensor
 16327  1255  00BD               	movwf	(low ((_EnvSensor| (0+256)+3)))^(0+128)
 16328  1256  301E               	movlw	high _ReadEnvSensor
 16329  1257  00BE               	movwf	((low ((_EnvSensor| (0+256)+3)))^(0+128)+1)
 16330                           
 16331                           ;bme280_i2c.c: 93:     EnvSensor.write = WriteEnvSensor;
 16332  1258  307F               	movlw	low _WriteEnvSensor
 16333  1259  00BF               	movwf	(low ((_EnvSensor| (0+256)+5)))^(0+128)
 16334  125A  301A               	movlw	high _WriteEnvSensor
 16335  125B  00C0               	movwf	((low ((_EnvSensor| (0+256)+5)))^(0+128)+1)
 16336                           
 16337                           ;bme280_i2c.c: 94:     EnvSensor.delay_ms = Sleep;
 16338  125C  3044               	movlw	low _Sleep
 16339  125D  00C1               	movwf	(low ((_EnvSensor| (0+256)+7)))^(0+128)
 16340  125E  3019               	movlw	high _Sleep
 16341  125F  00C2               	movwf	((low ((_EnvSensor| (0+256)+7)))^(0+128)+1)
 16342                           
 16343                           ;bme280_i2c.c: 96:     rslt = bme280_init(&EnvSensor);
 16344  1260  30BA               	movlw	(low (_EnvSensor| (0+256)))& (0+255)
 16345  1261  3191  21DE  3192   	fcall	_bme280_init
 16346  1264  0141               	movlb	1	; select bank1
 16347  1265  00AE               	movwf	??_BME280_Init^(0+128)
 16348  1266  082E               	movf	??_BME280_Init^(0+128),w
 16349  1267  00B1               	movwf	BME280_Init@rslt^(0+128)
 16350                           
 16351                           ;bme280_i2c.c: 98:     if (rslt == 0)
 16352  1268  0831               	movf	BME280_Init@rslt^(0+128),w
 16353  1269  1D03               	btfss	3,2
 16354  126A  2AA4               	goto	l5724
 16355                           
 16356                           ;bme280_i2c.c: 99:     {;bme280_i2c.c: 100:         uint8_t settings_sel;;bme280_i2c.c: 
      +                          103:         EnvSensor.settings.osr_h = 0x01;
 16357  126B  0143               	movlb	3	; select bank3
 16358  126C  01EA               	clrf	(_EnvSensor^(0+384)+48)
 16359  126D  0AEA               	incf	(_EnvSensor^(0+384)+48),f
 16360                           
 16361                           ;bme280_i2c.c: 104:         EnvSensor.settings.osr_p = 0x05;
 16362  126E  3005               	movlw	5
 16363  126F  0141               	movlb	1	; select bank1
 16364  1270  00AE               	movwf	??_BME280_Init^(0+128)
 16365  1271  082E               	movf	??_BME280_Init^(0+128),w
 16366  1272  0143               	movlb	3	; select bank3
 16367  1273  00E8               	movwf	(_EnvSensor^(0+384)+46)
 16368                           
 16369                           ;bme280_i2c.c: 105:         EnvSensor.settings.osr_t = 0x02;
 16370  1274  3002               	movlw	2
 16371  1275  0141               	movlb	1	; select bank1
 16372  1276  00AE               	movwf	??_BME280_Init^(0+128)
 16373  1277  082E               	movf	??_BME280_Init^(0+128),w
 16374  1278  0143               	movlb	3	; select bank3
 16375  1279  00E9               	movwf	(_EnvSensor^(0+384)+47)
 16376                           
 16377                           ;bme280_i2c.c: 106:         EnvSensor.settings.filter = (0x04);
 16378  127A  3004               	movlw	4
 16379  127B  0141               	movlb	1	; select bank1
 16380  127C  00AE               	movwf	??_BME280_Init^(0+128)
 16381  127D  082E               	movf	??_BME280_Init^(0+128),w
 16382  127E  0143               	movlb	3	; select bank3
 16383  127F  00EB               	movwf	(_EnvSensor^(0+384)+49)
 16384                           
 16385                           ;bme280_i2c.c: 107:         EnvSensor.settings.standby_time = (0x01);
 16386  1280  01EC               	clrf	(_EnvSensor^(0+384)+50)
 16387  1281  0AEC               	incf	(_EnvSensor^(0+384)+50),f
 16388                           
 16389                           ;bme280_i2c.c: 109:         settings_sel = 1;
 16390  1282  0141               	movlb	1	; select bank1
 16391  1283  01B0               	clrf	BME280_Init@settings_sel^(0+128)
 16392  1284  0AB0               	incf	BME280_Init@settings_sel^(0+128),f
 16393                           
 16394                           ;bme280_i2c.c: 110:         settings_sel |= 1 << 1;
 16395  1285  14B0               	bsf	BME280_Init@settings_sel^(0+128),1
 16396                           
 16397                           ;bme280_i2c.c: 111:         settings_sel |= 1 << 2;
 16398  1286  1530               	bsf	BME280_Init@settings_sel^(0+128),2
 16399                           
 16400                           ;bme280_i2c.c: 112:         settings_sel |= 1 << 4;
 16401  1287  1630               	bsf	BME280_Init@settings_sel^(0+128),4
 16402                           
 16403                           ;bme280_i2c.c: 113:         settings_sel |= 1 << 3;
 16404  1288  15B0               	bsf	BME280_Init@settings_sel^(0+128),3
 16405  1289  30BA               	movlw	(low (_EnvSensor| (0+256)))& (0+255)
 16406  128A  00AE               	movwf	??_BME280_Init^(0+128)
 16407  128B  082E               	movf	??_BME280_Init^(0+128),w
 16408  128C  0140               	movlb	0	; select bank0
 16409  128D  00EC               	movwf	bme280_set_sensor_settings@dev
 16410  128E  0141               	movlb	1	; select bank1
 16411  128F  0830               	movf	BME280_Init@settings_sel^(0+128),w
 16412  1290  3192  22B6  3192   	fcall	_bme280_set_sensor_settings
 16413                           
 16414                           ;bme280_i2c.c: 115:         rslt = bme280_set_sensor_mode(0x03, &EnvSensor);
 16415  1293  30BA               	movlw	(low (_EnvSensor| (0+256)))& (0+255)
 16416  1294  0141               	movlb	1	; select bank1
 16417  1295  00AE               	movwf	??_BME280_Init^(0+128)
 16418  1296  082E               	movf	??_BME280_Init^(0+128),w
 16419  1297  0140               	movlb	0	; select bank0
 16420  1298  00EC               	movwf	bme280_set_sensor_mode@dev
 16421  1299  3003               	movlw	3
 16422  129A  319B  2364  3192   	fcall	_bme280_set_sensor_mode
 16423  129D  0141               	movlb	1	; select bank1
 16424  129E  00AF               	movwf	(??_BME280_Init+1)^(0+128)
 16425  129F  082F               	movf	(??_BME280_Init+1)^(0+128),w
 16426  12A0  00B1               	movwf	BME280_Init@rslt^(0+128)
 16427                           
 16428                           ;bme280_i2c.c: 117:         if (rslt == 0)
 16429  12A1  0831               	movf	BME280_Init@rslt^(0+128),w
 16430  12A2  1903               	btfsc	3,2
 16431  12A3  0008               	return
 16432  12A4                     l5724:	
 16433                           
 16434                           ;bme280_i2c.c: 123:     DebugAlert(200, 200, 3);;
 16435  12A4  30C8               	movlw	200
 16436  12A5  0140               	movlb	0	; select bank0
 16437  12A6  00A0               	movwf	DebugAlert@delay_high
 16438  12A7  3000               	movlw	0
 16439  12A8  00A1               	movwf	DebugAlert@delay_high+1
 16440  12A9  30C8               	movlw	200
 16441  12AA  00A2               	movwf	DebugAlert@delay_low
 16442  12AB  3000               	movlw	0
 16443  12AC  00A3               	movwf	DebugAlert@delay_low+1
 16444  12AD  3003               	movlw	3
 16445  12AE  0141               	movlb	1	; select bank1
 16446  12AF  00AE               	movwf	??_BME280_Init^(0+128)
 16447  12B0  082E               	movf	??_BME280_Init^(0+128),w
 16448  12B1  0140               	movlb	0	; select bank0
 16449  12B2  00A4               	movwf	DebugAlert@num_flashes
 16450  12B3  3198  20F0         	fcall	_DebugAlert
 16451  12B5  0008               	return
 16452  12B6                     __end_of_BME280_Init:	
 16453                           
 16454                           	psect	text49
 16455  12B6                     __ptext49:	
 16456 ;; *************** function _bme280_set_sensor_settings *****************
 16457 ;; Defined at:
 16458 ;;		line 511 in file "BME280_driver/bme280.c"
 16459 ;; Parameters:    Size  Location     Type
 16460 ;;  desired_sett    1    wreg     unsigned char 
 16461 ;;  dev             1   76[BANK0 ] PTR const struct bme280_
 16462 ;;		 -> EnvSensor(51), 
 16463 ;; Auto vars:     Size  Location     Type
 16464 ;;  desired_sett    1   11[BANK1 ] unsigned char 
 16465 ;;  rslt            1   13[BANK1 ] char 
 16466 ;;  sensor_mode     1   12[BANK1 ] unsigned char 
 16467 ;; Return value:  Size  Location     Type
 16468 ;;                  1    wreg      char 
 16469 ;; Registers used:
 16470 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16471 ;; Tracked objects:
 16472 ;;		On entry : 0/0
 16473 ;;		On exit  : 0/0
 16474 ;;		Unchanged: 0/0
 16475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16476 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16477 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16478 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16479 ;;      Totals:         0       3       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16480 ;;Total ram usage:        6 bytes
 16481 ;; Hardware stack levels used:    1
 16482 ;; Hardware stack levels required when called:   15
 16483 ;; This function calls:
 16484 ;;		_are_settings_changed
 16485 ;;		_bme280_get_sensor_mode
 16486 ;;		_null_ptr_check
 16487 ;;		_put_device_to_sleep
 16488 ;;		_set_filter_standby_settings
 16489 ;;		_set_osr_settings
 16490 ;; This function is called by:
 16491 ;;		_BME280_Init
 16492 ;; This function uses a non-reentrant model
 16493 ;;
 16494                           
 16495                           
 16496                           ;psect for function _bme280_set_sensor_settings
 16497  12B6                     _bme280_set_sensor_settings:	
 16498                           
 16499                           ;incstack = 0
 16500 ;; hardware stack exceeded
 16501                           ; Regs used in _bme280_set_sensor_settings: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 16502                           ;bme280_set_sensor_settings@desired_settings stored from wreg
 16503  12B6  0141               	movlb	1	; select bank1
 16504  12B7  00AB               	movwf	bme280_set_sensor_settings@desired_settings^(0+128)
 16505                           
 16506                           ;BME280_driver/bme280.c: 511: int8_t bme280_set_sensor_settings(uint8_t desired_settings
      +                          , const struct bme280_dev *dev);BME280_driver/bme280.c: 512: {;BME280_driver/bme280.c: 5
      +                          13:     int8_t rslt;;BME280_driver/bme280.c: 514:     uint8_t sensor_mode;;BME280_driver
      +                          /bme280.c: 517:     rslt = null_ptr_check(dev);
 16507  12B8  0140               	movlb	0	; select bank0
 16508  12B9  086C               	movf	bme280_set_sensor_settings@dev,w
 16509  12BA  3198  2008  3192   	fcall	_null_ptr_check
 16510  12BD  0140               	movlb	0	; select bank0
 16511  12BE  00ED               	movwf	??_bme280_set_sensor_settings
 16512  12BF  086D               	movf	??_bme280_set_sensor_settings,w
 16513  12C0  0141               	movlb	1	; select bank1
 16514  12C1  00AD               	movwf	bme280_set_sensor_settings@rslt^(0+128)
 16515                           
 16516                           ;BME280_driver/bme280.c: 520:     if (rslt == 0)
 16517  12C2  082D               	movf	bme280_set_sensor_settings@rslt^(0+128),w
 16518  12C3  1D03               	btfss	3,2
 16519  12C4  2B29               	goto	l5554
 16520                           
 16521                           ;BME280_driver/bme280.c: 521:     {;BME280_driver/bme280.c: 522:         rslt = bme280_g
      +                          et_sensor_mode(&sensor_mode, dev);
 16522  12C5  0140               	movlb	0	; select bank0
 16523  12C6  086C               	movf	bme280_set_sensor_settings@dev,w
 16524  12C7  00ED               	movwf	??_bme280_set_sensor_settings
 16525  12C8  086D               	movf	??_bme280_set_sensor_settings,w
 16526  12C9  00C0               	movwf	bme280_get_sensor_mode@dev
 16527  12CA  30AC               	movlw	(low (bme280_set_sensor_settings@sensor_mode| 0))& (0+255)
 16528  12CB  3187  27D2  3192   	fcall	_bme280_get_sensor_mode
 16529  12CE  0140               	movlb	0	; select bank0
 16530  12CF  00EE               	movwf	??_bme280_set_sensor_settings+1
 16531  12D0  086E               	movf	??_bme280_set_sensor_settings+1,w
 16532  12D1  0141               	movlb	1	; select bank1
 16533  12D2  00AD               	movwf	bme280_set_sensor_settings@rslt^(0+128)
 16534                           
 16535                           ;BME280_driver/bme280.c: 523:         if ((rslt == 0) && (sensor_mode != 0x00))
 16536  12D3  082D               	movf	bme280_set_sensor_settings@rslt^(0+128),w
 16537  12D4  1D03               	btfss	3,2
 16538  12D5  2AE3               	goto	l5542
 16539  12D6  082C               	movf	bme280_set_sensor_settings@sensor_mode^(0+128),w
 16540  12D7  1903               	btfsc	3,2
 16541  12D8  2AE3               	goto	l5542
 16542                           
 16543                           ;BME280_driver/bme280.c: 524:         {;BME280_driver/bme280.c: 525:             rslt = 
      +                          put_device_to_sleep(dev);
 16544  12D9  0140               	movlb	0	; select bank0
 16545  12DA  086C               	movf	bme280_set_sensor_settings@dev,w
 16546  12DB  319B  23A4  3192   	fcall	_put_device_to_sleep
 16547  12DE  0140               	movlb	0	; select bank0
 16548  12DF  00ED               	movwf	??_bme280_set_sensor_settings
 16549  12E0  086D               	movf	??_bme280_set_sensor_settings,w
 16550  12E1  0141               	movlb	1	; select bank1
 16551  12E2  00AD               	movwf	bme280_set_sensor_settings@rslt^(0+128)
 16552  12E3                     l5542:	
 16553                           
 16554                           ;BME280_driver/bme280.c: 527:         if (rslt == 0)
 16555  12E3  082D               	movf	bme280_set_sensor_settings@rslt^(0+128),w
 16556  12E4  1D03               	btfss	3,2
 16557  12E5  2B29               	goto	l5554
 16558                           
 16559                           ;BME280_driver/bme280.c: 528:         {;BME280_driver/bme280.c: 532:             if (are
      +                          _settings_changed(0x07, desired_settings))
 16560  12E6  082B               	movf	bme280_set_sensor_settings@desired_settings^(0+128),w
 16561  12E7  0140               	movlb	0	; select bank0
 16562  12E8  00ED               	movwf	??_bme280_set_sensor_settings
 16563  12E9  086D               	movf	??_bme280_set_sensor_settings,w
 16564  12EA  00F0               	movwf	are_settings_changed@desired_settings
 16565  12EB  3007               	movlw	7
 16566  12EC  31A6  2694  3192   	fcall	_are_settings_changed
 16567  12EF  3A00               	xorlw	0
 16568  12F0  1903               	skipnz
 16569  12F1  2B06               	goto	l5548
 16570                           
 16571                           ;BME280_driver/bme280.c: 533:             {;BME280_driver/bme280.c: 534:                
      +                           rslt = set_osr_settings(desired_settings, &dev->settings, dev);
 16572  12F2  0140               	movlb	0	; select bank0
 16573  12F3  086C               	movf	bme280_set_sensor_settings@dev,w
 16574  12F4  3E2E               	addlw	46
 16575  12F5  00DD               	movwf	set_osr_settings@settings
 16576  12F6  3001               	movlw	1
 16577  12F7  00DE               	movwf	set_osr_settings@settings+1
 16578  12F8  086C               	movf	bme280_set_sensor_settings@dev,w
 16579  12F9  00ED               	movwf	??_bme280_set_sensor_settings
 16580  12FA  086D               	movf	??_bme280_set_sensor_settings,w
 16581  12FB  00DF               	movwf	set_osr_settings@dev
 16582  12FC  0141               	movlb	1	; select bank1
 16583  12FD  082B               	movf	bme280_set_sensor_settings@desired_settings^(0+128),w
 16584  12FE  3199  211A  3192   	fcall	_set_osr_settings
 16585  1301  0140               	movlb	0	; select bank0
 16586  1302  00EE               	movwf	??_bme280_set_sensor_settings+1
 16587  1303  086E               	movf	??_bme280_set_sensor_settings+1,w
 16588  1304  0141               	movlb	1	; select bank1
 16589  1305  00AD               	movwf	bme280_set_sensor_settings@rslt^(0+128)
 16590  1306                     l5548:	
 16591                           
 16592                           ;BME280_driver/bme280.c: 540:             if ((rslt == 0) && are_settings_changed(0x18, 
      +                          desired_settings))
 16593  1306  0141               	movlb	1	; select bank1
 16594  1307  082D               	movf	bme280_set_sensor_settings@rslt^(0+128),w
 16595  1308  1D03               	btfss	3,2
 16596  1309  2B29               	goto	l5554
 16597  130A  082B               	movf	bme280_set_sensor_settings@desired_settings^(0+128),w
 16598  130B  0140               	movlb	0	; select bank0
 16599  130C  00ED               	movwf	??_bme280_set_sensor_settings
 16600  130D  086D               	movf	??_bme280_set_sensor_settings,w
 16601  130E  00F0               	movwf	are_settings_changed@desired_settings
 16602  130F  3018               	movlw	24
 16603  1310  31A6  2694  3192   	fcall	_are_settings_changed
 16604  1313  3A00               	xorlw	0
 16605  1314  1903               	skipnz
 16606  1315  2B29               	goto	l5554
 16607                           
 16608                           ;BME280_driver/bme280.c: 541:             {;BME280_driver/bme280.c: 542:                
      +                           rslt = set_filter_standby_settings(desired_settings, &dev->settings, dev);
 16609  1316  0140               	movlb	0	; select bank0
 16610  1317  086C               	movf	bme280_set_sensor_settings@dev,w
 16611  1318  3E2E               	addlw	46
 16612  1319  00D3               	movwf	set_filter_standby_settings@settings
 16613  131A  3001               	movlw	1
 16614  131B  00D4               	movwf	set_filter_standby_settings@settings+1
 16615  131C  086C               	movf	bme280_set_sensor_settings@dev,w
 16616  131D  00ED               	movwf	??_bme280_set_sensor_settings
 16617  131E  086D               	movf	??_bme280_set_sensor_settings,w
 16618  131F  00D5               	movwf	set_filter_standby_settings@dev
 16619  1320  0141               	movlb	1	; select bank1
 16620  1321  082B               	movf	bme280_set_sensor_settings@desired_settings^(0+128),w
 16621  1322  319C  24B1         	fcall	_set_filter_standby_settings
 16622  1324  0140               	movlb	0	; select bank0
 16623  1325  00EE               	movwf	??_bme280_set_sensor_settings+1
 16624  1326  086E               	movf	??_bme280_set_sensor_settings+1,w
 16625  1327  0141               	movlb	1	; select bank1
 16626  1328  00AD               	movwf	bme280_set_sensor_settings@rslt^(0+128)
 16627  1329                     l5554:	
 16628                           
 16629                           ;BME280_driver/bme280.c: 547:     return rslt;
 16630  1329  0141               	movlb	1	; select bank1
 16631  132A  082D               	movf	bme280_set_sensor_settings@rslt^(0+128),w
 16632  132B  0008               	return
 16633  132C                     __end_of_bme280_set_sensor_settings:	
 16634                           
 16635                           	psect	text50
 16636  2694                     __ptext50:	
 16637 ;; *************** function _are_settings_changed *****************
 16638 ;; Defined at:
 16639 ;;		line 1404 in file "BME280_driver/bme280.c"
 16640 ;; Parameters:    Size  Location     Type
 16641 ;;  sub_settings    1    wreg     unsigned char 
 16642 ;;  desired_sett    1    0[COMMON] unsigned char 
 16643 ;; Auto vars:     Size  Location     Type
 16644 ;;  sub_settings    1    1[COMMON] unsigned char 
 16645 ;;  settings_cha    1    2[COMMON] unsigned char 
 16646 ;; Return value:  Size  Location     Type
 16647 ;;                  1    wreg      unsigned char 
 16648 ;; Registers used:
 16649 ;;		wreg, status,2, status,0
 16650 ;; Tracked objects:
 16651 ;;		On entry : 0/0
 16652 ;;		On exit  : 0/0
 16653 ;;		Unchanged: 0/0
 16654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16655 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16656 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16658 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16659 ;;Total ram usage:        3 bytes
 16660 ;; Hardware stack levels used:    1
 16661 ;; Hardware stack levels required when called:    3
 16662 ;; This function calls:
 16663 ;;		Nothing
 16664 ;; This function is called by:
 16665 ;;		_bme280_set_sensor_settings
 16666 ;; This function uses a non-reentrant model
 16667 ;;
 16668                           
 16669                           
 16670                           ;psect for function _are_settings_changed
 16671  2694                     _are_settings_changed:	
 16672                           
 16673                           ;incstack = 0
 16674                           ; Regs used in _are_settings_changed: [wreg+status,2+status,0]
 16675                           ;are_settings_changed@sub_settings stored from wreg
 16676  2694  00F1               	movwf	are_settings_changed@sub_settings
 16677                           
 16678                           ;BME280_driver/bme280.c: 1408:     if (sub_settings & desired_settings)
 16679  2695  0871               	movf	are_settings_changed@sub_settings,w
 16680  2696  0570               	andwf	are_settings_changed@desired_settings,w
 16681  2697  1903               	btfsc	3,2
 16682  2698  2E9C               	goto	l5440
 16683                           
 16684                           ;BME280_driver/bme280.c: 1409:     {;BME280_driver/bme280.c: 1411:         settings_chan
      +                          ged = 1;
 16685  2699  01F2               	clrf	are_settings_changed@settings_changed
 16686  269A  0AF2               	incf	are_settings_changed@settings_changed,f
 16687                           
 16688                           ;BME280_driver/bme280.c: 1412:     }
 16689  269B  2E9D               	goto	l5442
 16690  269C                     l5440:	
 16691                           
 16692                           ;BME280_driver/bme280.c: 1414:     {;BME280_driver/bme280.c: 1416:         settings_chan
      +                          ged = 0;
 16693  269C  01F2               	clrf	are_settings_changed@settings_changed
 16694  269D                     l5442:	
 16695                           
 16696                           ;BME280_driver/bme280.c: 1419:     return settings_changed;
 16697  269D  0872               	movf	are_settings_changed@settings_changed,w
 16698  269E  0008               	return
 16699  269F                     __end_of_are_settings_changed:	
 16700                           
 16701                           	psect	text51
 16702  1B64                     __ptext51:	
 16703 ;; *************** function _bme280_set_sensor_mode *****************
 16704 ;; Defined at:
 16705 ;;		line 578 in file "BME280_driver/bme280.c"
 16706 ;; Parameters:    Size  Location     Type
 16707 ;;  sensor_mode     1    wreg     unsigned char 
 16708 ;;  dev             1   76[BANK0 ] PTR const struct bme280_
 16709 ;;		 -> EnvSensor(51), 
 16710 ;; Auto vars:     Size  Location     Type
 16711 ;;  sensor_mode     1   11[BANK1 ] unsigned char 
 16712 ;;  rslt            1   13[BANK1 ] char 
 16713 ;;  last_set_mod    1   12[BANK1 ] unsigned char 
 16714 ;; Return value:  Size  Location     Type
 16715 ;;                  1    wreg      char 
 16716 ;; Registers used:
 16717 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16718 ;; Tracked objects:
 16719 ;;		On entry : 0/0
 16720 ;;		On exit  : 0/0
 16721 ;;		Unchanged: 0/0
 16722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16723 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16724 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16725 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16726 ;;      Totals:         0       3       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16727 ;;Total ram usage:        6 bytes
 16728 ;; Hardware stack levels used:    1
 16729 ;; Hardware stack levels required when called:   15
 16730 ;; This function calls:
 16731 ;;		_bme280_get_sensor_mode
 16732 ;;		_null_ptr_check
 16733 ;;		_put_device_to_sleep
 16734 ;;		_write_power_mode
 16735 ;; This function is called by:
 16736 ;;		_BME280_Init
 16737 ;; This function uses a non-reentrant model
 16738 ;;
 16739                           
 16740                           
 16741                           ;psect for function _bme280_set_sensor_mode
 16742  1B64                     _bme280_set_sensor_mode:	
 16743                           
 16744                           ;incstack = 0
 16745 ;; hardware stack exceeded
 16746                           ; Regs used in _bme280_set_sensor_mode: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
 16747                           ;bme280_set_sensor_mode@sensor_mode stored from wreg
 16748  1B64  0141               	movlb	1	; select bank1
 16749  1B65  00AB               	movwf	bme280_set_sensor_mode@sensor_mode^(0+128)
 16750                           
 16751                           ;BME280_driver/bme280.c: 578: int8_t bme280_set_sensor_mode(uint8_t sensor_mode, const s
      +                          truct bme280_dev *dev);BME280_driver/bme280.c: 579: {;BME280_driver/bme280.c: 580:     i
      +                          nt8_t rslt;;BME280_driver/bme280.c: 581:     uint8_t last_set_mode;;BME280_driver/bme280
      +                          .c: 584:     rslt = null_ptr_check(dev);
 16752  1B66  0140               	movlb	0	; select bank0
 16753  1B67  086C               	movf	bme280_set_sensor_mode@dev,w
 16754  1B68  3198  2008  319B   	fcall	_null_ptr_check
 16755  1B6B  0140               	movlb	0	; select bank0
 16756  1B6C  00ED               	movwf	??_bme280_set_sensor_mode
 16757  1B6D  086D               	movf	??_bme280_set_sensor_mode,w
 16758  1B6E  0141               	movlb	1	; select bank1
 16759  1B6F  00AD               	movwf	bme280_set_sensor_mode@rslt^(0+128)
 16760                           
 16761                           ;BME280_driver/bme280.c: 585:     if (rslt == 0)
 16762  1B70  082D               	movf	bme280_set_sensor_mode@rslt^(0+128),w
 16763  1B71  1D03               	btfss	3,2
 16764  1B72  2BA2               	goto	l5574
 16765                           
 16766                           ;BME280_driver/bme280.c: 586:     {;BME280_driver/bme280.c: 587:         rslt = bme280_g
      +                          et_sensor_mode(&last_set_mode, dev);
 16767  1B73  0140               	movlb	0	; select bank0
 16768  1B74  086C               	movf	bme280_set_sensor_mode@dev,w
 16769  1B75  00ED               	movwf	??_bme280_set_sensor_mode
 16770  1B76  086D               	movf	??_bme280_set_sensor_mode,w
 16771  1B77  00C0               	movwf	bme280_get_sensor_mode@dev
 16772  1B78  30AC               	movlw	(low (bme280_set_sensor_mode@last_set_mode| 0))& (0+255)
 16773  1B79  3187  27D2  319B   	fcall	_bme280_get_sensor_mode
 16774  1B7C  0140               	movlb	0	; select bank0
 16775  1B7D  00EE               	movwf	??_bme280_set_sensor_mode+1
 16776  1B7E  086E               	movf	??_bme280_set_sensor_mode+1,w
 16777  1B7F  0141               	movlb	1	; select bank1
 16778  1B80  00AD               	movwf	bme280_set_sensor_mode@rslt^(0+128)
 16779                           
 16780                           ;BME280_driver/bme280.c: 592:         if ((rslt == 0) && (last_set_mode != 0x00))
 16781  1B81  082D               	movf	bme280_set_sensor_mode@rslt^(0+128),w
 16782  1B82  1D03               	btfss	3,2
 16783  1B83  2B91               	goto	l5570
 16784  1B84  082C               	movf	bme280_set_sensor_mode@last_set_mode^(0+128),w
 16785  1B85  1903               	btfsc	3,2
 16786  1B86  2B91               	goto	l5570
 16787                           
 16788                           ;BME280_driver/bme280.c: 593:         {;BME280_driver/bme280.c: 594:             rslt = 
      +                          put_device_to_sleep(dev);
 16789  1B87  0140               	movlb	0	; select bank0
 16790  1B88  086C               	movf	bme280_set_sensor_mode@dev,w
 16791  1B89  319B  23A4  319B   	fcall	_put_device_to_sleep
 16792  1B8C  0140               	movlb	0	; select bank0
 16793  1B8D  00ED               	movwf	??_bme280_set_sensor_mode
 16794  1B8E  086D               	movf	??_bme280_set_sensor_mode,w
 16795  1B8F  0141               	movlb	1	; select bank1
 16796  1B90  00AD               	movwf	bme280_set_sensor_mode@rslt^(0+128)
 16797  1B91                     l5570:	
 16798                           
 16799                           ;BME280_driver/bme280.c: 598:         if (rslt == 0)
 16800  1B91  082D               	movf	bme280_set_sensor_mode@rslt^(0+128),w
 16801  1B92  1D03               	btfss	3,2
 16802  1B93  2BA2               	goto	l5574
 16803                           
 16804                           ;BME280_driver/bme280.c: 599:         {;BME280_driver/bme280.c: 600:             rslt = 
      +                          write_power_mode(sensor_mode, dev);
 16805  1B94  0140               	movlb	0	; select bank0
 16806  1B95  086C               	movf	bme280_set_sensor_mode@dev,w
 16807  1B96  00ED               	movwf	??_bme280_set_sensor_mode
 16808  1B97  086D               	movf	??_bme280_set_sensor_mode,w
 16809  1B98  00D3               	movwf	write_power_mode@dev
 16810  1B99  0141               	movlb	1	; select bank1
 16811  1B9A  082B               	movf	bme280_set_sensor_mode@sensor_mode^(0+128),w
 16812  1B9B  319A  22B2         	fcall	_write_power_mode
 16813  1B9D  0140               	movlb	0	; select bank0
 16814  1B9E  00EE               	movwf	??_bme280_set_sensor_mode+1
 16815  1B9F  086E               	movf	??_bme280_set_sensor_mode+1,w
 16816  1BA0  0141               	movlb	1	; select bank1
 16817  1BA1  00AD               	movwf	bme280_set_sensor_mode@rslt^(0+128)
 16818  1BA2                     l5574:	
 16819                           
 16820                           ;BME280_driver/bme280.c: 604:     return rslt;
 16821  1BA2  082D               	movf	bme280_set_sensor_mode@rslt^(0+128),w
 16822  1BA3  0008               	return
 16823  1BA4                     __end_of_bme280_set_sensor_mode:	
 16824                           
 16825                           	psect	text52
 16826  1AB2                     __ptext52:	
 16827 ;; *************** function _write_power_mode *****************
 16828 ;; Defined at:
 16829 ;;		line 941 in file "BME280_driver/bme280.c"
 16830 ;; Parameters:    Size  Location     Type
 16831 ;;  sensor_mode     1    wreg     unsigned char 
 16832 ;;  dev             1   51[BANK0 ] PTR const struct bme280_
 16833 ;;		 -> EnvSensor(51), 
 16834 ;; Auto vars:     Size  Location     Type
 16835 ;;  sensor_mode     1   55[BANK0 ] unsigned char 
 16836 ;;  sensor_mode_    1   58[BANK0 ] unsigned char 
 16837 ;;  reg_addr        1   57[BANK0 ] unsigned char 
 16838 ;;  rslt            1   56[BANK0 ] char 
 16839 ;; Return value:  Size  Location     Type
 16840 ;;                  1    wreg      char 
 16841 ;; Registers used:
 16842 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16843 ;; Tracked objects:
 16844 ;;		On entry : 0/0
 16845 ;;		On exit  : 0/0
 16846 ;;		Unchanged: 0/0
 16847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16848 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16849 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16850 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16851 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16852 ;;Total ram usage:        8 bytes
 16853 ;; Hardware stack levels used:    1
 16854 ;; Hardware stack levels required when called:   11
 16855 ;; This function calls:
 16856 ;;		_bme280_get_regs
 16857 ;;		_bme280_set_regs
 16858 ;; This function is called by:
 16859 ;;		_bme280_set_sensor_mode
 16860 ;; This function uses a non-reentrant model
 16861 ;;
 16862                           
 16863                           
 16864                           ;psect for function _write_power_mode
 16865  1AB2                     _write_power_mode:	
 16866                           
 16867                           ;incstack = 0
 16868                           ; Regs used in _write_power_mode: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 16869                           ;write_power_mode@sensor_mode stored from wreg
 16870  1AB2  0140               	movlb	0	; select bank0
 16871  1AB3  00D7               	movwf	write_power_mode@sensor_mode
 16872                           
 16873                           ;BME280_driver/bme280.c: 941: static int8_t write_power_mode(uint8_t sensor_mode, const 
      +                          struct bme280_dev *dev);BME280_driver/bme280.c: 942: {;BME280_driver/bme280.c: 943:     
      +                          int8_t rslt;;BME280_driver/bme280.c: 944:     uint8_t reg_addr = 0xF4;
 16874  1AB4  30F4               	movlw	244
 16875  1AB5  00D4               	movwf	??_write_power_mode
 16876  1AB6  0854               	movf	??_write_power_mode,w
 16877  1AB7  00D9               	movwf	write_power_mode@reg_addr
 16878                           
 16879                           ;BME280_driver/bme280.c: 947:     uint8_t sensor_mode_reg_val;;BME280_driver/bme280.c: 9
      +                          50:     rslt = bme280_get_regs(reg_addr, &sensor_mode_reg_val, 1, dev);
 16880  1AB8  305A               	movlw	(low (write_power_mode@sensor_mode_reg_val| 0))& (0+255)
 16881  1AB9  00D4               	movwf	??_write_power_mode
 16882  1ABA  0854               	movf	??_write_power_mode,w
 16883  1ABB  00B7               	movwf	bme280_get_regs@reg_data
 16884  1ABC  3001               	movlw	1
 16885  1ABD  00B8               	movwf	bme280_get_regs@len
 16886  1ABE  3000               	movlw	0
 16887  1ABF  00B9               	movwf	bme280_get_regs@len+1
 16888  1AC0  0853               	movf	write_power_mode@dev,w
 16889  1AC1  00D5               	movwf	??_write_power_mode+1
 16890  1AC2  0855               	movf	??_write_power_mode+1,w
 16891  1AC3  00BA               	movwf	bme280_get_regs@dev
 16892  1AC4  0859               	movf	write_power_mode@reg_addr,w
 16893  1AC5  319C  2428  319A   	fcall	_bme280_get_regs
 16894  1AC8  0140               	movlb	0	; select bank0
 16895  1AC9  00D6               	movwf	??_write_power_mode+2
 16896  1ACA  0856               	movf	??_write_power_mode+2,w
 16897  1ACB  00D8               	movwf	write_power_mode@rslt
 16898                           
 16899                           ;BME280_driver/bme280.c: 953:     if (rslt == 0)
 16900  1ACC  0858               	movf	write_power_mode@rslt,w
 16901  1ACD  1D03               	btfss	3,2
 16902  1ACE  2AE9               	goto	l5456
 16903                           
 16904                           ;BME280_driver/bme280.c: 954:     {;BME280_driver/bme280.c: 955:         sensor_mode_reg
      +                          _val = ((sensor_mode_reg_val & ~( 0x03)) | (sensor_mode & 0x03));
 16905  1ACF  3003               	movlw	3
 16906  1AD0  0557               	andwf	write_power_mode@sensor_mode,w
 16907  1AD1  00D4               	movwf	??_write_power_mode
 16908  1AD2  085A               	movf	write_power_mode@sensor_mode_reg_val,w
 16909  1AD3  39FC               	andlw	252
 16910  1AD4  0454               	iorwf	??_write_power_mode,w
 16911  1AD5  00D5               	movwf	??_write_power_mode+1
 16912  1AD6  0855               	movf	??_write_power_mode+1,w
 16913  1AD7  00DA               	movwf	write_power_mode@sensor_mode_reg_val
 16914                           
 16915                           ;BME280_driver/bme280.c: 958:         rslt = bme280_set_regs(&reg_addr, &sensor_mode_reg
      +                          _val, 1, dev);
 16916  1AD8  305A               	movlw	(low (write_power_mode@sensor_mode_reg_val| 0))& (0+255)
 16917  1AD9  00D4               	movwf	??_write_power_mode
 16918  1ADA  0854               	movf	??_write_power_mode,w
 16919  1ADB  00B4               	movwf	bme280_set_regs@reg_data
 16920  1ADC  01B5               	clrf	bme280_set_regs@len
 16921  1ADD  0AB5               	incf	bme280_set_regs@len,f
 16922  1ADE  0853               	movf	write_power_mode@dev,w
 16923  1ADF  00D5               	movwf	??_write_power_mode+1
 16924  1AE0  0855               	movf	??_write_power_mode+1,w
 16925  1AE1  00B6               	movwf	bme280_set_regs@dev
 16926  1AE2  3059               	movlw	(low (write_power_mode@reg_addr| 0))& (0+255)
 16927  1AE3  3196  2640         	fcall	_bme280_set_regs
 16928  1AE5  0140               	movlb	0	; select bank0
 16929  1AE6  00D6               	movwf	??_write_power_mode+2
 16930  1AE7  0856               	movf	??_write_power_mode+2,w
 16931  1AE8  00D8               	movwf	write_power_mode@rslt
 16932  1AE9                     l5456:	
 16933                           
 16934                           ;BME280_driver/bme280.c: 961:     return rslt;
 16935  1AE9  0858               	movf	write_power_mode@rslt,w
 16936  1AEA  0008               	return
 16937  1AEB                     __end_of_write_power_mode:	
 16938                           
 16939                           	psect	text53
 16940  1BA4                     __ptext53:	
 16941 ;; *************** function _put_device_to_sleep *****************
 16942 ;; Defined at:
 16943 ;;		line 967 in file "BME280_driver/bme280.c"
 16944 ;; Parameters:    Size  Location     Type
 16945 ;;  dev             1    wreg     PTR const struct bme280_
 16946 ;;		 -> EnvSensor(51), 
 16947 ;; Auto vars:     Size  Location     Type
 16948 ;;  dev             1    4[BANK1 ] PTR const struct bme280_
 16949 ;;		 -> EnvSensor(51), 
 16950 ;;  settings        5    6[BANK1 ] struct bme280_settings
 16951 ;;  reg_data        4    0[BANK1 ] unsigned char [4]
 16952 ;;  rslt            1    5[BANK1 ] char 
 16953 ;; Return value:  Size  Location     Type
 16954 ;;                  1    wreg      char 
 16955 ;; Registers used:
 16956 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16957 ;; Tracked objects:
 16958 ;;		On entry : 0/0
 16959 ;;		On exit  : 0/0
 16960 ;;		Unchanged: 0/0
 16961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16963 ;;      Locals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16964 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16965 ;;      Totals:         0       3      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16966 ;;Total ram usage:       14 bytes
 16967 ;; Hardware stack levels used:    1
 16968 ;; Hardware stack levels required when called:   14
 16969 ;; This function calls:
 16970 ;;		_bme280_get_regs
 16971 ;;		_bme280_soft_reset
 16972 ;;		_parse_device_settings
 16973 ;;		_reload_device_settings
 16974 ;; This function is called by:
 16975 ;;		_bme280_set_sensor_settings
 16976 ;;		_bme280_set_sensor_mode
 16977 ;; This function uses a non-reentrant model
 16978 ;;
 16979                           
 16980                           
 16981                           ;psect for function _put_device_to_sleep
 16982  1BA4                     _put_device_to_sleep:	
 16983                           
 16984                           ;incstack = 0
 16985 ;; hardware stack exceeded
 16986                           ; Regs used in _put_device_to_sleep: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 16987                           ;put_device_to_sleep@dev stored from wreg
 16988  1BA4  0141               	movlb	1	; select bank1
 16989  1BA5  00A4               	movwf	put_device_to_sleep@dev^(0+128)
 16990                           
 16991                           ;BME280_driver/bme280.c: 967: static int8_t put_device_to_sleep(const struct bme280_dev 
      +                          *dev);BME280_driver/bme280.c: 968: {;BME280_driver/bme280.c: 969:     int8_t rslt;;BME28
      +                          0_driver/bme280.c: 970:     uint8_t reg_data[4];;BME280_driver/bme280.c: 971:     struct
      +                           bme280_settings settings;;BME280_driver/bme280.c: 973:     rslt = bme280_get_regs(0xF2,
      +                           reg_data, 4, dev);
 16992  1BA6  30A0               	movlw	(low (put_device_to_sleep@reg_data| 0))& (0+255)
 16993  1BA7  0140               	movlb	0	; select bank0
 16994  1BA8  00E9               	movwf	??_put_device_to_sleep
 16995  1BA9  0869               	movf	??_put_device_to_sleep,w
 16996  1BAA  00B7               	movwf	bme280_get_regs@reg_data
 16997  1BAB  3004               	movlw	4
 16998  1BAC  00B8               	movwf	bme280_get_regs@len
 16999  1BAD  3000               	movlw	0
 17000  1BAE  00B9               	movwf	bme280_get_regs@len+1
 17001  1BAF  0141               	movlb	1	; select bank1
 17002  1BB0  0824               	movf	put_device_to_sleep@dev^(0+128),w
 17003  1BB1  0140               	movlb	0	; select bank0
 17004  1BB2  00EA               	movwf	??_put_device_to_sleep+1
 17005  1BB3  086A               	movf	??_put_device_to_sleep+1,w
 17006  1BB4  00BA               	movwf	bme280_get_regs@dev
 17007  1BB5  30F2               	movlw	242
 17008  1BB6  319C  2428  319B   	fcall	_bme280_get_regs
 17009  1BB9  0140               	movlb	0	; select bank0
 17010  1BBA  00EB               	movwf	??_put_device_to_sleep+2
 17011  1BBB  086B               	movf	??_put_device_to_sleep+2,w
 17012  1BBC  0141               	movlb	1	; select bank1
 17013  1BBD  00A5               	movwf	put_device_to_sleep@rslt^(0+128)
 17014                           
 17015                           ;BME280_driver/bme280.c: 974:     if (rslt == 0)
 17016  1BBE  0825               	movf	put_device_to_sleep@rslt^(0+128),w
 17017  1BBF  1D03               	btfss	3,2
 17018  1BC0  2BE4               	goto	l5430
 17019                           
 17020                           ;BME280_driver/bme280.c: 975:     {;BME280_driver/bme280.c: 976:         parse_device_se
      +                          ttings(reg_data, &settings);
 17021  1BC1  30A6               	movlw	(low (put_device_to_sleep@settings| 0))& (0+255)
 17022  1BC2  0140               	movlb	0	; select bank0
 17023  1BC3  00E9               	movwf	??_put_device_to_sleep
 17024  1BC4  0869               	movf	??_put_device_to_sleep,w
 17025  1BC5  00F0               	movwf	parse_device_settings@settings
 17026  1BC6  30A0               	movlw	(low (put_device_to_sleep@reg_data| 0))& (0+255)
 17027  1BC7  3190  2059  319B   	fcall	_parse_device_settings
 17028                           
 17029                           ;BME280_driver/bme280.c: 977:         rslt = bme280_soft_reset(dev);
 17030  1BCA  0141               	movlb	1	; select bank1
 17031  1BCB  0824               	movf	put_device_to_sleep@dev^(0+128),w
 17032  1BCC  319A  22EB  319B   	fcall	_bme280_soft_reset
 17033  1BCF  0140               	movlb	0	; select bank0
 17034  1BD0  00E9               	movwf	??_put_device_to_sleep
 17035  1BD1  0869               	movf	??_put_device_to_sleep,w
 17036  1BD2  0141               	movlb	1	; select bank1
 17037  1BD3  00A5               	movwf	put_device_to_sleep@rslt^(0+128)
 17038                           
 17039                           ;BME280_driver/bme280.c: 978:         if (rslt == 0)
 17040  1BD4  0825               	movf	put_device_to_sleep@rslt^(0+128),w
 17041  1BD5  1D03               	btfss	3,2
 17042  1BD6  2BE4               	goto	l5430
 17043                           
 17044                           ;BME280_driver/bme280.c: 979:         {;BME280_driver/bme280.c: 980:             rslt = 
      +                          reload_device_settings(&settings, dev);
 17045  1BD7  0824               	movf	put_device_to_sleep@dev^(0+128),w
 17046  1BD8  0140               	movlb	0	; select bank0
 17047  1BD9  00E9               	movwf	??_put_device_to_sleep
 17048  1BDA  0869               	movf	??_put_device_to_sleep,w
 17049  1BDB  00E4               	movwf	reload_device_settings@dev
 17050  1BDC  30A6               	movlw	(low (put_device_to_sleep@settings| 0))& (0+255)
 17051  1BDD  3198  2052         	fcall	_reload_device_settings
 17052  1BDF  0140               	movlb	0	; select bank0
 17053  1BE0  00EA               	movwf	??_put_device_to_sleep+1
 17054  1BE1  086A               	movf	??_put_device_to_sleep+1,w
 17055  1BE2  0141               	movlb	1	; select bank1
 17056  1BE3  00A5               	movwf	put_device_to_sleep@rslt^(0+128)
 17057  1BE4                     l5430:	
 17058                           
 17059                           ;BME280_driver/bme280.c: 984:     return rslt;
 17060  1BE4  0825               	movf	put_device_to_sleep@rslt^(0+128),w
 17061  1BE5  0008               	return
 17062  1BE6                     __end_of_put_device_to_sleep:	
 17063                           
 17064                           	psect	text54
 17065  1852                     __ptext54:	
 17066 ;; *************** function _reload_device_settings *****************
 17067 ;; Defined at:
 17068 ;;		line 991 in file "BME280_driver/bme280.c"
 17069 ;; Parameters:    Size  Location     Type
 17070 ;;  settings        1    wreg     PTR const struct bme280_
 17071 ;;		 -> put_device_to_sleep@settings(5), 
 17072 ;;  dev             1   68[BANK0 ] PTR const struct bme280_
 17073 ;;		 -> EnvSensor(51), 
 17074 ;; Auto vars:     Size  Location     Type
 17075 ;;  settings        1   71[BANK0 ] PTR const struct bme280_
 17076 ;;		 -> put_device_to_sleep@settings(5), 
 17077 ;;  rslt            1   72[BANK0 ] char 
 17078 ;; Return value:  Size  Location     Type
 17079 ;;                  1    wreg      char 
 17080 ;; Registers used:
 17081 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17082 ;; Tracked objects:
 17083 ;;		On entry : 0/0
 17084 ;;		On exit  : 0/0
 17085 ;;		Unchanged: 0/0
 17086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17087 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17088 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17089 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17090 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17091 ;;Total ram usage:        5 bytes
 17092 ;; Hardware stack levels used:    1
 17093 ;; Hardware stack levels required when called:   13
 17094 ;; This function calls:
 17095 ;;		_set_filter_standby_settings
 17096 ;;		_set_osr_settings
 17097 ;; This function is called by:
 17098 ;;		_put_device_to_sleep
 17099 ;; This function uses a non-reentrant model
 17100 ;;
 17101                           
 17102                           
 17103                           ;psect for function _reload_device_settings
 17104  1852                     _reload_device_settings:	
 17105                           
 17106                           ;incstack = 0
 17107 ;; hardware stack exceeded
 17108                           ; Regs used in _reload_device_settings: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
 17109                           ;reload_device_settings@settings stored from wreg
 17110  1852  0140               	movlb	0	; select bank0
 17111  1853  00E7               	movwf	reload_device_settings@settings
 17112                           
 17113                           ;BME280_driver/bme280.c: 991: static int8_t reload_device_settings(const struct bme280_s
      +                          ettings *settings, const struct bme280_dev *dev);BME280_driver/bme280.c: 992: {;BME280_d
      +                          river/bme280.c: 993:     int8_t rslt;;BME280_driver/bme280.c: 995:     rslt = set_osr_se
      +                          ttings(0x1F, settings, dev);
 17114  1854  0867               	movf	reload_device_settings@settings,w
 17115  1855  00DD               	movwf	set_osr_settings@settings
 17116  1856  3000               	movlw	0
 17117  1857  00DE               	movwf	set_osr_settings@settings+1
 17118  1858  0864               	movf	reload_device_settings@dev,w
 17119  1859  00E5               	movwf	??_reload_device_settings
 17120  185A  0865               	movf	??_reload_device_settings,w
 17121  185B  00DF               	movwf	set_osr_settings@dev
 17122  185C  301F               	movlw	31
 17123  185D  3199  211A  3198   	fcall	_set_osr_settings
 17124  1860  0140               	movlb	0	; select bank0
 17125  1861  00E6               	movwf	??_reload_device_settings+1
 17126  1862  0866               	movf	??_reload_device_settings+1,w
 17127  1863  00E8               	movwf	reload_device_settings@rslt
 17128                           
 17129                           ;BME280_driver/bme280.c: 996:     if (rslt == 0)
 17130  1864  0868               	movf	reload_device_settings@rslt,w
 17131  1865  1D03               	btfss	3,2
 17132  1866  2876               	goto	l5382
 17133                           
 17134                           ;BME280_driver/bme280.c: 997:     {;BME280_driver/bme280.c: 998:         rslt = set_filt
      +                          er_standby_settings(0x1F, settings, dev);
 17135  1867  0867               	movf	reload_device_settings@settings,w
 17136  1868  00D3               	movwf	set_filter_standby_settings@settings
 17137  1869  3000               	movlw	0
 17138  186A  00D4               	movwf	set_filter_standby_settings@settings+1
 17139  186B  0864               	movf	reload_device_settings@dev,w
 17140  186C  00E5               	movwf	??_reload_device_settings
 17141  186D  0865               	movf	??_reload_device_settings,w
 17142  186E  00D5               	movwf	set_filter_standby_settings@dev
 17143  186F  301F               	movlw	31
 17144  1870  319C  24B1         	fcall	_set_filter_standby_settings
 17145  1872  0140               	movlb	0	; select bank0
 17146  1873  00E6               	movwf	??_reload_device_settings+1
 17147  1874  0866               	movf	??_reload_device_settings+1,w
 17148  1875  00E8               	movwf	reload_device_settings@rslt
 17149  1876                     l5382:	
 17150                           
 17151                           ;BME280_driver/bme280.c: 1001:     return rslt;
 17152  1876  0868               	movf	reload_device_settings@rslt,w
 17153  1877  0008               	return
 17154  1878                     __end_of_reload_device_settings:	
 17155                           
 17156                           	psect	text55
 17157  191A                     __ptext55:	
 17158 ;; *************** function _set_osr_settings *****************
 17159 ;; Defined at:
 17160 ;;		line 777 in file "BME280_driver/bme280.c"
 17161 ;; Parameters:    Size  Location     Type
 17162 ;;  desired_sett    1    wreg     unsigned char 
 17163 ;;  settings        2   61[BANK0 ] PTR const struct bme280_
 17164 ;;		 -> EnvSensor(51), put_device_to_sleep@settings(5), 
 17165 ;;  dev             1   63[BANK0 ] PTR const struct bme280_
 17166 ;;		 -> EnvSensor(51), 
 17167 ;; Auto vars:     Size  Location     Type
 17168 ;;  desired_sett    1   67[BANK0 ] unsigned char 
 17169 ;;  rslt            1   66[BANK0 ] char 
 17170 ;; Return value:  Size  Location     Type
 17171 ;;                  1    wreg      char 
 17172 ;; Registers used:
 17173 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17174 ;; Tracked objects:
 17175 ;;		On entry : 0/0
 17176 ;;		On exit  : 0/0
 17177 ;;		Unchanged: 0/0
 17178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17179 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17180 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17181 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17182 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17183 ;;Total ram usage:        7 bytes
 17184 ;; Hardware stack levels used:    1
 17185 ;; Hardware stack levels required when called:   12
 17186 ;; This function calls:
 17187 ;;		_set_osr_humidity_settings
 17188 ;;		_set_osr_press_temp_settings
 17189 ;; This function is called by:
 17190 ;;		_bme280_set_sensor_settings
 17191 ;;		_reload_device_settings
 17192 ;; This function uses a non-reentrant model
 17193 ;;
 17194                           
 17195                           
 17196                           ;psect for function _set_osr_settings
 17197  191A                     _set_osr_settings:	
 17198                           
 17199                           ;incstack = 0
 17200                           ; Regs used in _set_osr_settings: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 17201                           ;set_osr_settings@desired_settings stored from wreg
 17202  191A  0140               	movlb	0	; select bank0
 17203  191B  00E3               	movwf	set_osr_settings@desired_settings
 17204                           
 17205                           ;BME280_driver/bme280.c: 777: static int8_t set_osr_settings(uint8_t desired_settings,;B
      +                          ME280_driver/bme280.c: 778:                                const struct bme280_settings 
      +                          *settings,;BME280_driver/bme280.c: 779:                                const struct bme2
      +                          80_dev *dev);BME280_driver/bme280.c: 780: {;BME280_driver/bme280.c: 781:     int8_t rslt
      +                           = 1;
 17206  191C  01E2               	clrf	set_osr_settings@rslt
 17207  191D  0AE2               	incf	set_osr_settings@rslt,f
 17208                           
 17209                           ;BME280_driver/bme280.c: 783:     if (desired_settings & 1 << 2)
 17210  191E  1D63               	btfss	set_osr_settings@desired_settings,2
 17211  191F  292F               	goto	l5336
 17212                           
 17213                           ;BME280_driver/bme280.c: 784:     {;BME280_driver/bme280.c: 785:         rslt = set_osr_
      +                          humidity_settings(settings, dev);
 17214  1920  085E               	movf	set_osr_settings@settings+1,w
 17215  1921  00D4               	movwf	set_osr_humidity_settings@settings+1
 17216  1922  085D               	movf	set_osr_settings@settings,w
 17217  1923  00D3               	movwf	set_osr_humidity_settings@settings
 17218  1924  085F               	movf	set_osr_settings@dev,w
 17219  1925  00E0               	movwf	??_set_osr_settings
 17220  1926  0860               	movf	??_set_osr_settings,w
 17221  1927  00D5               	movwf	set_osr_humidity_settings@dev
 17222  1928  319F  270A  3199   	fcall	_set_osr_humidity_settings
 17223  192B  0140               	movlb	0	; select bank0
 17224  192C  00E1               	movwf	??_set_osr_settings+1
 17225  192D  0861               	movf	??_set_osr_settings+1,w
 17226  192E  00E2               	movwf	set_osr_settings@rslt
 17227  192F                     l5336:	
 17228                           
 17229                           ;BME280_driver/bme280.c: 787:     if (desired_settings & (1 | 1 << 1))
 17230  192F  0863               	movf	set_osr_settings@desired_settings,w
 17231  1930  3903               	andlw	3
 17232  1931  1903               	btfsc	3,2
 17233  1932  2942               	goto	l5340
 17234                           
 17235                           ;BME280_driver/bme280.c: 788:     {;BME280_driver/bme280.c: 789:         rslt = set_osr_
      +                          press_temp_settings(desired_settings, settings, dev);
 17236  1933  085E               	movf	set_osr_settings@settings+1,w
 17237  1934  00D4               	movwf	set_osr_press_temp_settings@settings+1
 17238  1935  085D               	movf	set_osr_settings@settings,w
 17239  1936  00D3               	movwf	set_osr_press_temp_settings@settings
 17240  1937  085F               	movf	set_osr_settings@dev,w
 17241  1938  00E0               	movwf	??_set_osr_settings
 17242  1939  0860               	movf	??_set_osr_settings,w
 17243  193A  00D5               	movwf	set_osr_press_temp_settings@dev
 17244  193B  0863               	movf	set_osr_settings@desired_settings,w
 17245  193C  319C  24F7         	fcall	_set_osr_press_temp_settings
 17246  193E  0140               	movlb	0	; select bank0
 17247  193F  00E1               	movwf	??_set_osr_settings+1
 17248  1940  0861               	movf	??_set_osr_settings+1,w
 17249  1941  00E2               	movwf	set_osr_settings@rslt
 17250  1942                     l5340:	
 17251                           
 17252                           ;BME280_driver/bme280.c: 792:     return rslt;
 17253  1942  0862               	movf	set_osr_settings@rslt,w
 17254  1943  0008               	return
 17255  1944                     __end_of_set_osr_settings:	
 17256                           
 17257                           	psect	text56
 17258  1CF7                     __ptext56:	
 17259 ;; *************** function _set_osr_press_temp_settings *****************
 17260 ;; Defined at:
 17261 ;;		line 830 in file "BME280_driver/bme280.c"
 17262 ;; Parameters:    Size  Location     Type
 17263 ;;  desired_sett    1    wreg     unsigned char 
 17264 ;;  settings        2   51[BANK0 ] PTR const struct bme280_
 17265 ;;		 -> EnvSensor(51), put_device_to_sleep@settings(5), 
 17266 ;;  dev             1   53[BANK0 ] PTR const struct bme280_
 17267 ;;		 -> EnvSensor(51), 
 17268 ;; Auto vars:     Size  Location     Type
 17269 ;;  desired_sett    1   57[BANK0 ] unsigned char 
 17270 ;;  reg_data        1   60[BANK0 ] unsigned char 
 17271 ;;  reg_addr        1   59[BANK0 ] unsigned char 
 17272 ;;  rslt            1   58[BANK0 ] char 
 17273 ;; Return value:  Size  Location     Type
 17274 ;;                  1    wreg      char 
 17275 ;; Registers used:
 17276 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17277 ;; Tracked objects:
 17278 ;;		On entry : 0/0
 17279 ;;		On exit  : 0/0
 17280 ;;		Unchanged: 0/0
 17281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17282 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17283 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17284 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17285 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17286 ;;Total ram usage:       10 bytes
 17287 ;; Hardware stack levels used:    1
 17288 ;; Hardware stack levels required when called:   11
 17289 ;; This function calls:
 17290 ;;		_bme280_get_regs
 17291 ;;		_bme280_set_regs
 17292 ;;		_fill_osr_press_settings
 17293 ;;		_fill_osr_temp_settings
 17294 ;; This function is called by:
 17295 ;;		_set_osr_settings
 17296 ;; This function uses a non-reentrant model
 17297 ;;
 17298                           
 17299                           
 17300                           ;psect for function _set_osr_press_temp_settings
 17301  1CF7                     _set_osr_press_temp_settings:	
 17302                           
 17303                           ;incstack = 0
 17304                           ; Regs used in _set_osr_press_temp_settings: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 17305                           ;set_osr_press_temp_settings@desired_settings stored from wreg
 17306  1CF7  0140               	movlb	0	; select bank0
 17307  1CF8  00D9               	movwf	set_osr_press_temp_settings@desired_settings
 17308                           
 17309                           ;BME280_driver/bme280.c: 830: static int8_t set_osr_press_temp_settings(uint8_t desired_
      +                          settings,;BME280_driver/bme280.c: 831:                                           const s
      +                          truct bme280_settings *settings,;BME280_driver/bme280.c: 832:                           
      +                                          const struct bme280_dev *dev);BME280_driver/bme280.c: 833: {;BME280_driv
      +                          er/bme280.c: 834:     int8_t rslt;;BME280_driver/bme280.c: 835:     uint8_t reg_addr = 0
      +                          xF4;
 17310  1CF9  30F4               	movlw	244
 17311  1CFA  00D6               	movwf	??_set_osr_press_temp_settings
 17312  1CFB  0856               	movf	??_set_osr_press_temp_settings,w
 17313  1CFC  00DB               	movwf	set_osr_press_temp_settings@reg_addr
 17314                           
 17315                           ;BME280_driver/bme280.c: 836:     uint8_t reg_data;;BME280_driver/bme280.c: 838:     rsl
      +                          t = bme280_get_regs(reg_addr, &reg_data, 1, dev);
 17316  1CFD  305C               	movlw	(low (set_osr_press_temp_settings@reg_data| 0))& (0+255)
 17317  1CFE  00D6               	movwf	??_set_osr_press_temp_settings
 17318  1CFF  0856               	movf	??_set_osr_press_temp_settings,w
 17319  1D00  00B7               	movwf	bme280_get_regs@reg_data
 17320  1D01  3001               	movlw	1
 17321  1D02  00B8               	movwf	bme280_get_regs@len
 17322  1D03  3000               	movlw	0
 17323  1D04  00B9               	movwf	bme280_get_regs@len+1
 17324  1D05  0855               	movf	set_osr_press_temp_settings@dev,w
 17325  1D06  00D7               	movwf	??_set_osr_press_temp_settings+1
 17326  1D07  0857               	movf	??_set_osr_press_temp_settings+1,w
 17327  1D08  00BA               	movwf	bme280_get_regs@dev
 17328  1D09  085B               	movf	set_osr_press_temp_settings@reg_addr,w
 17329  1D0A  319C  2428  319C   	fcall	_bme280_get_regs
 17330  1D0D  0140               	movlb	0	; select bank0
 17331  1D0E  00D8               	movwf	??_set_osr_press_temp_settings+2
 17332  1D0F  0858               	movf	??_set_osr_press_temp_settings+2,w
 17333  1D10  00DA               	movwf	set_osr_press_temp_settings@rslt
 17334                           
 17335                           ;BME280_driver/bme280.c: 839:     if (rslt == 0)
 17336  1D11  085A               	movf	set_osr_press_temp_settings@rslt,w
 17337  1D12  1D03               	btfss	3,2
 17338  1D13  2D3B               	goto	l5322
 17339                           
 17340                           ;BME280_driver/bme280.c: 840:     {;BME280_driver/bme280.c: 841:         if (desired_set
      +                          tings & 1)
 17341  1D14  1C59               	btfss	set_osr_press_temp_settings@desired_settings,0
 17342  1D15  2D1E               	goto	l5318
 17343                           
 17344                           ;BME280_driver/bme280.c: 842:         {;BME280_driver/bme280.c: 843:             fill_os
      +                          r_press_settings(&reg_data, settings);
 17345  1D16  0854               	movf	set_osr_press_temp_settings@settings+1,w
 17346  1D17  00F1               	movwf	fill_osr_press_settings@settings+1
 17347  1D18  0853               	movf	set_osr_press_temp_settings@settings,w
 17348  1D19  00F0               	movwf	fill_osr_press_settings@settings
 17349  1D1A  305C               	movlw	(low (set_osr_press_temp_settings@reg_data| 0))& (0+255)
 17350  1D1B  31A7  2752  319C   	fcall	_fill_osr_press_settings
 17351  1D1E                     l5318:	
 17352                           
 17353                           ;BME280_driver/bme280.c: 845:         if (desired_settings & 1 << 1)
 17354  1D1E  0140               	movlb	0	; select bank0
 17355  1D1F  1CD9               	btfss	set_osr_press_temp_settings@desired_settings,1
 17356  1D20  2D29               	goto	l146
 17357                           
 17358                           ;BME280_driver/bme280.c: 846:         {;BME280_driver/bme280.c: 847:             fill_os
      +                          r_temp_settings(&reg_data, settings);
 17359  1D21  0854               	movf	set_osr_press_temp_settings@settings+1,w
 17360  1D22  00F1               	movwf	fill_osr_temp_settings@settings+1
 17361  1D23  0853               	movf	set_osr_press_temp_settings@settings,w
 17362  1D24  00F0               	movwf	fill_osr_temp_settings@settings
 17363  1D25  305C               	movlw	(low (set_osr_press_temp_settings@reg_data| 0))& (0+255)
 17364  1D26  31A7  27A5  319C   	fcall	_fill_osr_temp_settings
 17365  1D29                     l146:	
 17366                           ;BME280_driver/bme280.c: 848:         }
 17367                           
 17368                           
 17369                           ;BME280_driver/bme280.c: 851:         rslt = bme280_set_regs(&reg_addr, &reg_data, 1, de
      +                          v);
 17370  1D29  305C               	movlw	(low (set_osr_press_temp_settings@reg_data| 0))& (0+255)
 17371  1D2A  0140               	movlb	0	; select bank0
 17372  1D2B  00D6               	movwf	??_set_osr_press_temp_settings
 17373  1D2C  0856               	movf	??_set_osr_press_temp_settings,w
 17374  1D2D  00B4               	movwf	bme280_set_regs@reg_data
 17375  1D2E  01B5               	clrf	bme280_set_regs@len
 17376  1D2F  0AB5               	incf	bme280_set_regs@len,f
 17377  1D30  0855               	movf	set_osr_press_temp_settings@dev,w
 17378  1D31  00D7               	movwf	??_set_osr_press_temp_settings+1
 17379  1D32  0857               	movf	??_set_osr_press_temp_settings+1,w
 17380  1D33  00B6               	movwf	bme280_set_regs@dev
 17381  1D34  305B               	movlw	(low (set_osr_press_temp_settings@reg_addr| 0))& (0+255)
 17382  1D35  3196  2640         	fcall	_bme280_set_regs
 17383  1D37  0140               	movlb	0	; select bank0
 17384  1D38  00D8               	movwf	??_set_osr_press_temp_settings+2
 17385  1D39  0858               	movf	??_set_osr_press_temp_settings+2,w
 17386  1D3A  00DA               	movwf	set_osr_press_temp_settings@rslt
 17387  1D3B                     l5322:	
 17388                           
 17389                           ;BME280_driver/bme280.c: 854:     return rslt;
 17390  1D3B  085A               	movf	set_osr_press_temp_settings@rslt,w
 17391  1D3C  0008               	return
 17392  1D3D                     __end_of_set_osr_press_temp_settings:	
 17393                           
 17394                           	psect	text57
 17395  27A5                     __ptext57:	
 17396 ;; *************** function _fill_osr_temp_settings *****************
 17397 ;; Defined at:
 17398 ;;		line 919 in file "BME280_driver/bme280.c"
 17399 ;; Parameters:    Size  Location     Type
 17400 ;;  reg_data        1    wreg     PTR unsigned char 
 17401 ;;		 -> set_osr_press_temp_settings@reg_data(1), 
 17402 ;;  settings        2    0[COMMON] PTR const struct bme280_
 17403 ;;		 -> EnvSensor(51), put_device_to_sleep@settings(5), 
 17404 ;; Auto vars:     Size  Location     Type
 17405 ;;  reg_data        1    5[COMMON] PTR unsigned char 
 17406 ;;		 -> set_osr_press_temp_settings@reg_data(1), 
 17407 ;; Return value:  Size  Location     Type
 17408 ;;                  1    wreg      void 
 17409 ;; Registers used:
 17410 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 17411 ;; Tracked objects:
 17412 ;;		On entry : 0/0
 17413 ;;		On exit  : 0/0
 17414 ;;		Unchanged: 0/0
 17415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17416 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17417 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17418 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17419 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17420 ;;Total ram usage:        6 bytes
 17421 ;; Hardware stack levels used:    1
 17422 ;; Hardware stack levels required when called:    3
 17423 ;; This function calls:
 17424 ;;		Nothing
 17425 ;; This function is called by:
 17426 ;;		_set_osr_press_temp_settings
 17427 ;; This function uses a non-reentrant model
 17428 ;;
 17429                           
 17430                           
 17431                           ;psect for function _fill_osr_temp_settings
 17432  27A5                     _fill_osr_temp_settings:	
 17433                           
 17434                           ;incstack = 0
 17435                           ; Regs used in _fill_osr_temp_settings: [wreg+fsr1l+fsr1h+status,2+status,0]
 17436                           ;fill_osr_temp_settings@reg_data stored from wreg
 17437  27A5  00F5               	movwf	fill_osr_temp_settings@reg_data
 17438                           
 17439                           ;BME280_driver/bme280.c: 919: static void fill_osr_temp_settings(uint8_t *reg_data, cons
      +                          t struct bme280_settings *settings);BME280_driver/bme280.c: 920: {;BME280_driver/bme280.
      +                          c: 921:     *reg_data = ((*reg_data & ~( 0xE0)) | ((settings->osr_t << 0x05) & 0xE0));
 17440  27A6  0870               	movf	fill_osr_temp_settings@settings,w
 17441  27A7  0086               	movwf	6
 17442  27A8  0871               	movf	fill_osr_temp_settings@settings+1,w
 17443  27A9  0087               	movwf	7
 17444  27AA  3141               	addfsr 1,1
 17445  27AB  0801               	movf	1,w
 17446  27AC  00F2               	movwf	??_fill_osr_temp_settings
 17447  27AD  3005               	movlw	5
 17448  27AE                     u5285:	
 17449  27AE  35F2               	lslf	??_fill_osr_temp_settings,f
 17450  27AF  0B89               	decfsz	9,f
 17451  27B0  2FAE               	goto	u5285
 17452  27B1  30E0               	movlw	224
 17453  27B2  0572               	andwf	??_fill_osr_temp_settings,w
 17454  27B3  00F3               	movwf	??_fill_osr_temp_settings+1
 17455  27B4  0875               	movf	fill_osr_temp_settings@reg_data,w
 17456  27B5  0086               	movwf	6
 17457  27B6  0187               	clrf	7
 17458  27B7  0801               	movf	1,w
 17459  27B8  391F               	andlw	31
 17460  27B9  0473               	iorwf	??_fill_osr_temp_settings+1,w
 17461  27BA  00F4               	movwf	??_fill_osr_temp_settings+2
 17462  27BB  0875               	movf	fill_osr_temp_settings@reg_data,w
 17463  27BC  0086               	movwf	6
 17464  27BD  0187               	clrf	7
 17465  27BE  0874               	movf	??_fill_osr_temp_settings+2,w
 17466  27BF  0081               	movwf	1
 17467  27C0  0008               	return
 17468  27C1                     __end_of_fill_osr_temp_settings:	
 17469                           
 17470                           	psect	text58
 17471  2752                     __ptext58:	
 17472 ;; *************** function _fill_osr_press_settings *****************
 17473 ;; Defined at:
 17474 ;;		line 910 in file "BME280_driver/bme280.c"
 17475 ;; Parameters:    Size  Location     Type
 17476 ;;  reg_data        1    wreg     PTR unsigned char 
 17477 ;;		 -> set_osr_press_temp_settings@reg_data(1), 
 17478 ;;  settings        2    0[COMMON] PTR const struct bme280_
 17479 ;;		 -> EnvSensor(51), put_device_to_sleep@settings(5), 
 17480 ;; Auto vars:     Size  Location     Type
 17481 ;;  reg_data        1    5[COMMON] PTR unsigned char 
 17482 ;;		 -> set_osr_press_temp_settings@reg_data(1), 
 17483 ;; Return value:  Size  Location     Type
 17484 ;;                  1    wreg      void 
 17485 ;; Registers used:
 17486 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 17487 ;; Tracked objects:
 17488 ;;		On entry : 0/0
 17489 ;;		On exit  : 0/0
 17490 ;;		Unchanged: 0/0
 17491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17492 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17493 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17494 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17495 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17496 ;;Total ram usage:        6 bytes
 17497 ;; Hardware stack levels used:    1
 17498 ;; Hardware stack levels required when called:    3
 17499 ;; This function calls:
 17500 ;;		Nothing
 17501 ;; This function is called by:
 17502 ;;		_set_osr_press_temp_settings
 17503 ;; This function uses a non-reentrant model
 17504 ;;
 17505                           
 17506                           
 17507                           ;psect for function _fill_osr_press_settings
 17508  2752                     _fill_osr_press_settings:	
 17509                           
 17510                           ;incstack = 0
 17511                           ; Regs used in _fill_osr_press_settings: [wreg+fsr1l+fsr1h+status,2+status,0]
 17512                           ;fill_osr_press_settings@reg_data stored from wreg
 17513  2752  00F5               	movwf	fill_osr_press_settings@reg_data
 17514                           
 17515                           ;BME280_driver/bme280.c: 910: static void fill_osr_press_settings(uint8_t *reg_data, con
      +                          st struct bme280_settings *settings);BME280_driver/bme280.c: 911: {;BME280_driver/bme280
      +                          .c: 912:     *reg_data = ((*reg_data & ~( 0x1C)) | ((settings->osr_p << 0x02) & 0x1C));
 17516  2753  0870               	movf	fill_osr_press_settings@settings,w
 17517  2754  0086               	movwf	6
 17518  2755  0871               	movf	fill_osr_press_settings@settings+1,w
 17519  2756  0087               	movwf	7
 17520  2757  0801               	movf	1,w
 17521  2758  00F2               	movwf	??_fill_osr_press_settings
 17522  2759  3002               	movlw	2
 17523  275A                     u5275:	
 17524  275A  35F2               	lslf	??_fill_osr_press_settings,f
 17525  275B  0B89               	decfsz	9,f
 17526  275C  2F5A               	goto	u5275
 17527  275D  301C               	movlw	28
 17528  275E  0572               	andwf	??_fill_osr_press_settings,w
 17529  275F  00F3               	movwf	??_fill_osr_press_settings+1
 17530  2760  0875               	movf	fill_osr_press_settings@reg_data,w
 17531  2761  0086               	movwf	6
 17532  2762  0187               	clrf	7
 17533  2763  0801               	movf	1,w
 17534  2764  39E3               	andlw	227
 17535  2765  0473               	iorwf	??_fill_osr_press_settings+1,w
 17536  2766  00F4               	movwf	??_fill_osr_press_settings+2
 17537  2767  0875               	movf	fill_osr_press_settings@reg_data,w
 17538  2768  0086               	movwf	6
 17539  2769  0187               	clrf	7
 17540  276A  0874               	movf	??_fill_osr_press_settings+2,w
 17541  276B  0081               	movwf	1
 17542  276C  0008               	return
 17543  276D                     __end_of_fill_osr_press_settings:	
 17544                           
 17545                           	psect	text59
 17546  1F0A                     __ptext59:	
 17547 ;; *************** function _set_osr_humidity_settings *****************
 17548 ;; Defined at:
 17549 ;;		line 798 in file "BME280_driver/bme280.c"
 17550 ;; Parameters:    Size  Location     Type
 17551 ;;  settings        2   51[BANK0 ] PTR const struct bme280_
 17552 ;;		 -> EnvSensor(51), put_device_to_sleep@settings(5), 
 17553 ;;  dev             1   53[BANK0 ] PTR const struct bme280_
 17554 ;;		 -> EnvSensor(51), 
 17555 ;; Auto vars:     Size  Location     Type
 17556 ;;  reg_addr        1   60[BANK0 ] unsigned char 
 17557 ;;  rslt            1   59[BANK0 ] char 
 17558 ;;  ctrl_meas       1   58[BANK0 ] unsigned char 
 17559 ;;  ctrl_hum        1   57[BANK0 ] unsigned char 
 17560 ;; Return value:  Size  Location     Type
 17561 ;;                  1    wreg      char 
 17562 ;; Registers used:
 17563 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17564 ;; Tracked objects:
 17565 ;;		On entry : 0/0
 17566 ;;		On exit  : 0/0
 17567 ;;		Unchanged: 0/0
 17568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17569 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17570 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17571 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17572 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17573 ;;Total ram usage:       10 bytes
 17574 ;; Hardware stack levels used:    1
 17575 ;; Hardware stack levels required when called:   11
 17576 ;; This function calls:
 17577 ;;		_bme280_get_regs
 17578 ;;		_bme280_set_regs
 17579 ;; This function is called by:
 17580 ;;		_set_osr_settings
 17581 ;; This function uses a non-reentrant model
 17582 ;;
 17583                           
 17584                           
 17585                           ;psect for function _set_osr_humidity_settings
 17586  1F0A                     _set_osr_humidity_settings:	
 17587                           
 17588                           ;BME280_driver/bme280.c: 798: static int8_t set_osr_humidity_settings(const struct bme28
      +                          0_settings *settings, const struct bme280_dev *dev);BME280_driver/bme280.c: 799: {;BME28
      +                          0_driver/bme280.c: 800:     int8_t rslt;;BME280_driver/bme280.c: 801:     uint8_t ctrl_h
      +                          um;;BME280_driver/bme280.c: 802:     uint8_t ctrl_meas;;BME280_driver/bme280.c: 803:    
      +                           uint8_t reg_addr = 0xF2;
 17589                           
 17590                           ;incstack = 0
 17591                           ; Regs used in _set_osr_humidity_settings: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cs
      +                          tack]
 17592  1F0A  30F2               	movlw	242
 17593  1F0B  0140               	movlb	0	; select bank0
 17594  1F0C  00D6               	movwf	??_set_osr_humidity_settings
 17595  1F0D  0856               	movf	??_set_osr_humidity_settings,w
 17596  1F0E  00DC               	movwf	set_osr_humidity_settings@reg_addr
 17597                           
 17598                           ;BME280_driver/bme280.c: 805:     ctrl_hum = settings->osr_h & 0x07;
 17599  1F0F  0853               	movf	set_osr_humidity_settings@settings,w
 17600  1F10  0086               	movwf	6
 17601  1F11  0854               	movf	set_osr_humidity_settings@settings+1,w
 17602  1F12  0087               	movwf	7
 17603  1F13  3142               	addfsr 1,2
 17604  1F14  0801               	movf	1,w
 17605  1F15  3907               	andlw	7
 17606  1F16  00D6               	movwf	??_set_osr_humidity_settings
 17607  1F17  0856               	movf	??_set_osr_humidity_settings,w
 17608  1F18  00D9               	movwf	set_osr_humidity_settings@ctrl_hum
 17609                           
 17610                           ;BME280_driver/bme280.c: 808:     rslt = bme280_set_regs(&reg_addr, &ctrl_hum, 1, dev);
 17611  1F19  3059               	movlw	(low (set_osr_humidity_settings@ctrl_hum| 0))& (0+255)
 17612  1F1A  00D6               	movwf	??_set_osr_humidity_settings
 17613  1F1B  0856               	movf	??_set_osr_humidity_settings,w
 17614  1F1C  00B4               	movwf	bme280_set_regs@reg_data
 17615  1F1D  01B5               	clrf	bme280_set_regs@len
 17616  1F1E  0AB5               	incf	bme280_set_regs@len,f
 17617  1F1F  0855               	movf	set_osr_humidity_settings@dev,w
 17618  1F20  00D7               	movwf	??_set_osr_humidity_settings+1
 17619  1F21  0857               	movf	??_set_osr_humidity_settings+1,w
 17620  1F22  00B6               	movwf	bme280_set_regs@dev
 17621  1F23  305C               	movlw	(low (set_osr_humidity_settings@reg_addr| 0))& (0+255)
 17622  1F24  3196  2640  319F   	fcall	_bme280_set_regs
 17623  1F27  0140               	movlb	0	; select bank0
 17624  1F28  00D8               	movwf	??_set_osr_humidity_settings+2
 17625  1F29  0858               	movf	??_set_osr_humidity_settings+2,w
 17626  1F2A  00DB               	movwf	set_osr_humidity_settings@rslt
 17627                           
 17628                           ;BME280_driver/bme280.c: 813:     if (rslt == 0)
 17629  1F2B  085B               	movf	set_osr_humidity_settings@rslt,w
 17630  1F2C  1D03               	btfss	3,2
 17631  1F2D  2F5A               	goto	l5304
 17632                           
 17633                           ;BME280_driver/bme280.c: 814:     {;BME280_driver/bme280.c: 815:         reg_addr = 0xF4
      +                          ;
 17634  1F2E  30F4               	movlw	244
 17635  1F2F  00D6               	movwf	??_set_osr_humidity_settings
 17636  1F30  0856               	movf	??_set_osr_humidity_settings,w
 17637  1F31  00DC               	movwf	set_osr_humidity_settings@reg_addr
 17638                           
 17639                           ;BME280_driver/bme280.c: 816:         rslt = bme280_get_regs(reg_addr, &ctrl_meas, 1, de
      +                          v);
 17640  1F32  305A               	movlw	(low (set_osr_humidity_settings@ctrl_meas| 0))& (0+255)
 17641  1F33  00D6               	movwf	??_set_osr_humidity_settings
 17642  1F34  0856               	movf	??_set_osr_humidity_settings,w
 17643  1F35  00B7               	movwf	bme280_get_regs@reg_data
 17644  1F36  3001               	movlw	1
 17645  1F37  00B8               	movwf	bme280_get_regs@len
 17646  1F38  3000               	movlw	0
 17647  1F39  00B9               	movwf	bme280_get_regs@len+1
 17648  1F3A  0855               	movf	set_osr_humidity_settings@dev,w
 17649  1F3B  00D7               	movwf	??_set_osr_humidity_settings+1
 17650  1F3C  0857               	movf	??_set_osr_humidity_settings+1,w
 17651  1F3D  00BA               	movwf	bme280_get_regs@dev
 17652  1F3E  085C               	movf	set_osr_humidity_settings@reg_addr,w
 17653  1F3F  319C  2428  319F   	fcall	_bme280_get_regs
 17654  1F42  0140               	movlb	0	; select bank0
 17655  1F43  00D8               	movwf	??_set_osr_humidity_settings+2
 17656  1F44  0858               	movf	??_set_osr_humidity_settings+2,w
 17657  1F45  00DB               	movwf	set_osr_humidity_settings@rslt
 17658                           
 17659                           ;BME280_driver/bme280.c: 817:         if (rslt == 0)
 17660  1F46  085B               	movf	set_osr_humidity_settings@rslt,w
 17661  1F47  1D03               	btfss	3,2
 17662  1F48  2F5A               	goto	l5304
 17663                           
 17664                           ;BME280_driver/bme280.c: 818:         {;BME280_driver/bme280.c: 819:             rslt = 
      +                          bme280_set_regs(&reg_addr, &ctrl_meas, 1, dev);
 17665  1F49  305A               	movlw	(low (set_osr_humidity_settings@ctrl_meas| 0))& (0+255)
 17666  1F4A  00D6               	movwf	??_set_osr_humidity_settings
 17667  1F4B  0856               	movf	??_set_osr_humidity_settings,w
 17668  1F4C  00B4               	movwf	bme280_set_regs@reg_data
 17669  1F4D  01B5               	clrf	bme280_set_regs@len
 17670  1F4E  0AB5               	incf	bme280_set_regs@len,f
 17671  1F4F  0855               	movf	set_osr_humidity_settings@dev,w
 17672  1F50  00D7               	movwf	??_set_osr_humidity_settings+1
 17673  1F51  0857               	movf	??_set_osr_humidity_settings+1,w
 17674  1F52  00B6               	movwf	bme280_set_regs@dev
 17675  1F53  305C               	movlw	(low (set_osr_humidity_settings@reg_addr| 0))& (0+255)
 17676  1F54  3196  2640         	fcall	_bme280_set_regs
 17677  1F56  0140               	movlb	0	; select bank0
 17678  1F57  00D8               	movwf	??_set_osr_humidity_settings+2
 17679  1F58  0858               	movf	??_set_osr_humidity_settings+2,w
 17680  1F59  00DB               	movwf	set_osr_humidity_settings@rslt
 17681  1F5A                     l5304:	
 17682                           
 17683                           ;BME280_driver/bme280.c: 823:     return rslt;
 17684  1F5A  085B               	movf	set_osr_humidity_settings@rslt,w
 17685  1F5B  0008               	return
 17686  1F5C                     __end_of_set_osr_humidity_settings:	
 17687                           
 17688                           	psect	text60
 17689  1CB1                     __ptext60:	
 17690 ;; *************** function _set_filter_standby_settings *****************
 17691 ;; Defined at:
 17692 ;;		line 861 in file "BME280_driver/bme280.c"
 17693 ;; Parameters:    Size  Location     Type
 17694 ;;  desired_sett    1    wreg     unsigned char 
 17695 ;;  settings        2   51[BANK0 ] PTR const struct bme280_
 17696 ;;		 -> EnvSensor(51), put_device_to_sleep@settings(5), 
 17697 ;;  dev             1   53[BANK0 ] PTR const struct bme280_
 17698 ;;		 -> EnvSensor(51), 
 17699 ;; Auto vars:     Size  Location     Type
 17700 ;;  desired_sett    1   57[BANK0 ] unsigned char 
 17701 ;;  reg_data        1   60[BANK0 ] unsigned char 
 17702 ;;  reg_addr        1   59[BANK0 ] unsigned char 
 17703 ;;  rslt            1   58[BANK0 ] char 
 17704 ;; Return value:  Size  Location     Type
 17705 ;;                  1    wreg      char 
 17706 ;; Registers used:
 17707 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17708 ;; Tracked objects:
 17709 ;;		On entry : 0/0
 17710 ;;		On exit  : 0/0
 17711 ;;		Unchanged: 0/0
 17712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17713 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17714 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17715 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17716 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17717 ;;Total ram usage:       10 bytes
 17718 ;; Hardware stack levels used:    1
 17719 ;; Hardware stack levels required when called:   11
 17720 ;; This function calls:
 17721 ;;		_bme280_get_regs
 17722 ;;		_bme280_set_regs
 17723 ;;		_fill_filter_settings
 17724 ;;		_fill_standby_settings
 17725 ;; This function is called by:
 17726 ;;		_bme280_set_sensor_settings
 17727 ;;		_reload_device_settings
 17728 ;; This function uses a non-reentrant model
 17729 ;;
 17730                           
 17731                           
 17732                           ;psect for function _set_filter_standby_settings
 17733  1CB1                     _set_filter_standby_settings:	
 17734                           
 17735                           ;incstack = 0
 17736                           ; Regs used in _set_filter_standby_settings: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 17737                           ;set_filter_standby_settings@desired_settings stored from wreg
 17738  1CB1  0140               	movlb	0	; select bank0
 17739  1CB2  00D9               	movwf	set_filter_standby_settings@desired_settings
 17740                           
 17741                           ;BME280_driver/bme280.c: 861: static int8_t set_filter_standby_settings(uint8_t desired_
      +                          settings,;BME280_driver/bme280.c: 862:                                           const s
      +                          truct bme280_settings *settings,;BME280_driver/bme280.c: 863:                           
      +                                          const struct bme280_dev *dev);BME280_driver/bme280.c: 864: {;BME280_driv
      +                          er/bme280.c: 865:     int8_t rslt;;BME280_driver/bme280.c: 866:     uint8_t reg_addr = 0
      +                          xF5;
 17742  1CB3  30F5               	movlw	245
 17743  1CB4  00D6               	movwf	??_set_filter_standby_settings
 17744  1CB5  0856               	movf	??_set_filter_standby_settings,w
 17745  1CB6  00DB               	movwf	set_filter_standby_settings@reg_addr
 17746                           
 17747                           ;BME280_driver/bme280.c: 867:     uint8_t reg_data;;BME280_driver/bme280.c: 869:     rsl
      +                          t = bme280_get_regs(reg_addr, &reg_data, 1, dev);
 17748  1CB7  305C               	movlw	(low (set_filter_standby_settings@reg_data| 0))& (0+255)
 17749  1CB8  00D6               	movwf	??_set_filter_standby_settings
 17750  1CB9  0856               	movf	??_set_filter_standby_settings,w
 17751  1CBA  00B7               	movwf	bme280_get_regs@reg_data
 17752  1CBB  3001               	movlw	1
 17753  1CBC  00B8               	movwf	bme280_get_regs@len
 17754  1CBD  3000               	movlw	0
 17755  1CBE  00B9               	movwf	bme280_get_regs@len+1
 17756  1CBF  0855               	movf	set_filter_standby_settings@dev,w
 17757  1CC0  00D7               	movwf	??_set_filter_standby_settings+1
 17758  1CC1  0857               	movf	??_set_filter_standby_settings+1,w
 17759  1CC2  00BA               	movwf	bme280_get_regs@dev
 17760  1CC3  085B               	movf	set_filter_standby_settings@reg_addr,w
 17761  1CC4  319C  2428  319C   	fcall	_bme280_get_regs
 17762  1CC7  0140               	movlb	0	; select bank0
 17763  1CC8  00D8               	movwf	??_set_filter_standby_settings+2
 17764  1CC9  0858               	movf	??_set_filter_standby_settings+2,w
 17765  1CCA  00DA               	movwf	set_filter_standby_settings@rslt
 17766                           
 17767                           ;BME280_driver/bme280.c: 870:     if (rslt == 0)
 17768  1CCB  085A               	movf	set_filter_standby_settings@rslt,w
 17769  1CCC  1D03               	btfss	3,2
 17770  1CCD  2CF5               	goto	l5358
 17771                           
 17772                           ;BME280_driver/bme280.c: 871:     {;BME280_driver/bme280.c: 872:         if (desired_set
      +                          tings & 1 << 3)
 17773  1CCE  1DD9               	btfss	set_filter_standby_settings@desired_settings,3
 17774  1CCF  2CD8               	goto	l5354
 17775                           
 17776                           ;BME280_driver/bme280.c: 873:         {;BME280_driver/bme280.c: 874:             fill_fi
      +                          lter_settings(&reg_data, settings);
 17777  1CD0  0854               	movf	set_filter_standby_settings@settings+1,w
 17778  1CD1  00F1               	movwf	fill_filter_settings@settings+1
 17779  1CD2  0853               	movf	set_filter_standby_settings@settings,w
 17780  1CD3  00F0               	movwf	fill_filter_settings@settings
 17781  1CD4  305C               	movlw	(low (set_filter_standby_settings@reg_data| 0))& (0+255)
 17782  1CD5  31A7  276D  319C   	fcall	_fill_filter_settings
 17783  1CD8                     l5354:	
 17784                           
 17785                           ;BME280_driver/bme280.c: 876:         if (desired_settings & 1 << 4)
 17786  1CD8  0140               	movlb	0	; select bank0
 17787  1CD9  1E59               	btfss	set_filter_standby_settings@desired_settings,4
 17788  1CDA  2CE3               	goto	l152
 17789                           
 17790                           ;BME280_driver/bme280.c: 877:         {;BME280_driver/bme280.c: 878:             fill_st
      +                          andby_settings(&reg_data, settings);
 17791  1CDB  0854               	movf	set_filter_standby_settings@settings+1,w
 17792  1CDC  00F1               	movwf	fill_standby_settings@settings+1
 17793  1CDD  0853               	movf	set_filter_standby_settings@settings,w
 17794  1CDE  00F0               	movwf	fill_standby_settings@settings
 17795  1CDF  305C               	movlw	(low (set_filter_standby_settings@reg_data| 0))& (0+255)
 17796  1CE0  31A7  2789  319C   	fcall	_fill_standby_settings
 17797  1CE3                     l152:	
 17798                           ;BME280_driver/bme280.c: 879:         }
 17799                           
 17800                           
 17801                           ;BME280_driver/bme280.c: 882:         rslt = bme280_set_regs(&reg_addr, &reg_data, 1, de
      +                          v);
 17802  1CE3  305C               	movlw	(low (set_filter_standby_settings@reg_data| 0))& (0+255)
 17803  1CE4  0140               	movlb	0	; select bank0
 17804  1CE5  00D6               	movwf	??_set_filter_standby_settings
 17805  1CE6  0856               	movf	??_set_filter_standby_settings,w
 17806  1CE7  00B4               	movwf	bme280_set_regs@reg_data
 17807  1CE8  01B5               	clrf	bme280_set_regs@len
 17808  1CE9  0AB5               	incf	bme280_set_regs@len,f
 17809  1CEA  0855               	movf	set_filter_standby_settings@dev,w
 17810  1CEB  00D7               	movwf	??_set_filter_standby_settings+1
 17811  1CEC  0857               	movf	??_set_filter_standby_settings+1,w
 17812  1CED  00B6               	movwf	bme280_set_regs@dev
 17813  1CEE  305B               	movlw	(low (set_filter_standby_settings@reg_addr| 0))& (0+255)
 17814  1CEF  3196  2640         	fcall	_bme280_set_regs
 17815  1CF1  0140               	movlb	0	; select bank0
 17816  1CF2  00D8               	movwf	??_set_filter_standby_settings+2
 17817  1CF3  0858               	movf	??_set_filter_standby_settings+2,w
 17818  1CF4  00DA               	movwf	set_filter_standby_settings@rslt
 17819  1CF5                     l5358:	
 17820                           
 17821                           ;BME280_driver/bme280.c: 885:     return rslt;
 17822  1CF5  085A               	movf	set_filter_standby_settings@rslt,w
 17823  1CF6  0008               	return
 17824  1CF7                     __end_of_set_filter_standby_settings:	
 17825                           
 17826                           	psect	text61
 17827  2789                     __ptext61:	
 17828 ;; *************** function _fill_standby_settings *****************
 17829 ;; Defined at:
 17830 ;;		line 901 in file "BME280_driver/bme280.c"
 17831 ;; Parameters:    Size  Location     Type
 17832 ;;  reg_data        1    wreg     PTR unsigned char 
 17833 ;;		 -> set_filter_standby_settings@reg_data(1), 
 17834 ;;  settings        2    0[COMMON] PTR const struct bme280_
 17835 ;;		 -> EnvSensor(51), put_device_to_sleep@settings(5), 
 17836 ;; Auto vars:     Size  Location     Type
 17837 ;;  reg_data        1    5[COMMON] PTR unsigned char 
 17838 ;;		 -> set_filter_standby_settings@reg_data(1), 
 17839 ;; Return value:  Size  Location     Type
 17840 ;;                  1    wreg      void 
 17841 ;; Registers used:
 17842 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 17843 ;; Tracked objects:
 17844 ;;		On entry : 0/0
 17845 ;;		On exit  : 0/0
 17846 ;;		Unchanged: 0/0
 17847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17848 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17849 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17850 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17851 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17852 ;;Total ram usage:        6 bytes
 17853 ;; Hardware stack levels used:    1
 17854 ;; Hardware stack levels required when called:    3
 17855 ;; This function calls:
 17856 ;;		Nothing
 17857 ;; This function is called by:
 17858 ;;		_set_filter_standby_settings
 17859 ;; This function uses a non-reentrant model
 17860 ;;
 17861                           
 17862                           
 17863                           ;psect for function _fill_standby_settings
 17864  2789                     _fill_standby_settings:	
 17865                           
 17866                           ;incstack = 0
 17867                           ; Regs used in _fill_standby_settings: [wreg+fsr1l+fsr1h+status,2+status,0]
 17868                           ;fill_standby_settings@reg_data stored from wreg
 17869  2789  00F5               	movwf	fill_standby_settings@reg_data
 17870                           
 17871                           ;BME280_driver/bme280.c: 901: static void fill_standby_settings(uint8_t *reg_data, const
      +                           struct bme280_settings *settings);BME280_driver/bme280.c: 902: {;BME280_driver/bme280.c
      +                          : 903:     *reg_data = ((*reg_data & ~( 0xE0)) | ((settings->standby_time << 0x05) & 0xE
      +                          0));
 17872  278A  0870               	movf	fill_standby_settings@settings,w
 17873  278B  0086               	movwf	6
 17874  278C  0871               	movf	fill_standby_settings@settings+1,w
 17875  278D  0087               	movwf	7
 17876  278E  3144               	addfsr 1,4
 17877  278F  0801               	movf	1,w
 17878  2790  00F2               	movwf	??_fill_standby_settings
 17879  2791  3005               	movlw	5
 17880  2792                     u5355:	
 17881  2792  35F2               	lslf	??_fill_standby_settings,f
 17882  2793  0B89               	decfsz	9,f
 17883  2794  2F92               	goto	u5355
 17884  2795  30E0               	movlw	224
 17885  2796  0572               	andwf	??_fill_standby_settings,w
 17886  2797  00F3               	movwf	??_fill_standby_settings+1
 17887  2798  0875               	movf	fill_standby_settings@reg_data,w
 17888  2799  0086               	movwf	6
 17889  279A  0187               	clrf	7
 17890  279B  0801               	movf	1,w
 17891  279C  391F               	andlw	31
 17892  279D  0473               	iorwf	??_fill_standby_settings+1,w
 17893  279E  00F4               	movwf	??_fill_standby_settings+2
 17894  279F  0875               	movf	fill_standby_settings@reg_data,w
 17895  27A0  0086               	movwf	6
 17896  27A1  0187               	clrf	7
 17897  27A2  0874               	movf	??_fill_standby_settings+2,w
 17898  27A3  0081               	movwf	1
 17899  27A4  0008               	return
 17900  27A5                     __end_of_fill_standby_settings:	
 17901                           
 17902                           	psect	text62
 17903  276D                     __ptext62:	
 17904 ;; *************** function _fill_filter_settings *****************
 17905 ;; Defined at:
 17906 ;;		line 892 in file "BME280_driver/bme280.c"
 17907 ;; Parameters:    Size  Location     Type
 17908 ;;  reg_data        1    wreg     PTR unsigned char 
 17909 ;;		 -> set_filter_standby_settings@reg_data(1), 
 17910 ;;  settings        2    0[COMMON] PTR const struct bme280_
 17911 ;;		 -> EnvSensor(51), put_device_to_sleep@settings(5), 
 17912 ;; Auto vars:     Size  Location     Type
 17913 ;;  reg_data        1    5[COMMON] PTR unsigned char 
 17914 ;;		 -> set_filter_standby_settings@reg_data(1), 
 17915 ;; Return value:  Size  Location     Type
 17916 ;;                  1    wreg      void 
 17917 ;; Registers used:
 17918 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 17919 ;; Tracked objects:
 17920 ;;		On entry : 0/0
 17921 ;;		On exit  : 0/0
 17922 ;;		Unchanged: 0/0
 17923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17924 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17925 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17926 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17927 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17928 ;;Total ram usage:        6 bytes
 17929 ;; Hardware stack levels used:    1
 17930 ;; Hardware stack levels required when called:    3
 17931 ;; This function calls:
 17932 ;;		Nothing
 17933 ;; This function is called by:
 17934 ;;		_set_filter_standby_settings
 17935 ;; This function uses a non-reentrant model
 17936 ;;
 17937                           
 17938                           
 17939                           ;psect for function _fill_filter_settings
 17940  276D                     _fill_filter_settings:	
 17941                           
 17942                           ;incstack = 0
 17943                           ; Regs used in _fill_filter_settings: [wreg+fsr1l+fsr1h+status,2+status,0]
 17944                           ;fill_filter_settings@reg_data stored from wreg
 17945  276D  00F5               	movwf	fill_filter_settings@reg_data
 17946                           
 17947                           ;BME280_driver/bme280.c: 892: static void fill_filter_settings(uint8_t *reg_data, const 
      +                          struct bme280_settings *settings);BME280_driver/bme280.c: 893: {;BME280_driver/bme280.c:
      +                           894:     *reg_data = ((*reg_data & ~( 0x1C)) | ((settings->filter << 0x02) & 0x1C));
 17948  276E  0870               	movf	fill_filter_settings@settings,w
 17949  276F  0086               	movwf	6
 17950  2770  0871               	movf	fill_filter_settings@settings+1,w
 17951  2771  0087               	movwf	7
 17952  2772  3143               	addfsr 1,3
 17953  2773  0801               	movf	1,w
 17954  2774  00F2               	movwf	??_fill_filter_settings
 17955  2775  3002               	movlw	2
 17956  2776                     u5345:	
 17957  2776  35F2               	lslf	??_fill_filter_settings,f
 17958  2777  0B89               	decfsz	9,f
 17959  2778  2F76               	goto	u5345
 17960  2779  301C               	movlw	28
 17961  277A  0572               	andwf	??_fill_filter_settings,w
 17962  277B  00F3               	movwf	??_fill_filter_settings+1
 17963  277C  0875               	movf	fill_filter_settings@reg_data,w
 17964  277D  0086               	movwf	6
 17965  277E  0187               	clrf	7
 17966  277F  0801               	movf	1,w
 17967  2780  39E3               	andlw	227
 17968  2781  0473               	iorwf	??_fill_filter_settings+1,w
 17969  2782  00F4               	movwf	??_fill_filter_settings+2
 17970  2783  0875               	movf	fill_filter_settings@reg_data,w
 17971  2784  0086               	movwf	6
 17972  2785  0187               	clrf	7
 17973  2786  0874               	movf	??_fill_filter_settings+2,w
 17974  2787  0081               	movwf	1
 17975  2788  0008               	return
 17976  2789                     __end_of_fill_filter_settings:	
 17977                           
 17978                           	psect	text63
 17979  1059                     __ptext63:	
 17980 ;; *************** function _parse_device_settings *****************
 17981 ;; Defined at:
 17982 ;;		line 929 in file "BME280_driver/bme280.c"
 17983 ;; Parameters:    Size  Location     Type
 17984 ;;  reg_data        1    wreg     PTR const unsigned char 
 17985 ;;		 -> put_device_to_sleep@reg_data(4), bme280_get_sensor_settings@reg_data(4), 
 17986 ;;  settings        1    0[COMMON] PTR struct bme280_settin
 17987 ;;		 -> put_device_to_sleep@settings(5), 
 17988 ;; Auto vars:     Size  Location     Type
 17989 ;;  reg_data        1    3[COMMON] PTR const unsigned char 
 17990 ;;		 -> put_device_to_sleep@reg_data(4), bme280_get_sensor_settings@reg_data(4), 
 17991 ;; Return value:  Size  Location     Type
 17992 ;;                  1    wreg      void 
 17993 ;; Registers used:
 17994 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 17995 ;; Tracked objects:
 17996 ;;		On entry : 0/0
 17997 ;;		On exit  : 0/0
 17998 ;;		Unchanged: 0/0
 17999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18000 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18001 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18002 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18003 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18004 ;;Total ram usage:        4 bytes
 18005 ;; Hardware stack levels used:    1
 18006 ;; Hardware stack levels required when called:    3
 18007 ;; This function calls:
 18008 ;;		Nothing
 18009 ;; This function is called by:
 18010 ;;		_put_device_to_sleep
 18011 ;;		_bme280_get_sensor_settings
 18012 ;; This function uses a non-reentrant model
 18013 ;;
 18014                           
 18015                           
 18016                           ;psect for function _parse_device_settings
 18017  1059                     _parse_device_settings:	
 18018                           
 18019                           ;incstack = 0
 18020                           ; Regs used in _parse_device_settings: [wreg+fsr1l+fsr1h+status,2+status,0]
 18021                           ;parse_device_settings@reg_data stored from wreg
 18022  1059  00F3               	movwf	parse_device_settings@reg_data
 18023                           
 18024                           ;BME280_driver/bme280.c: 929: static void parse_device_settings(const uint8_t *reg_data,
      +                           struct bme280_settings *settings);BME280_driver/bme280.c: 930: {;BME280_driver/bme280.c
      +                          : 931:     settings->osr_h = (reg_data[0] & ( 0x07));
 18025  105A  0873               	movf	parse_device_settings@reg_data,w
 18026  105B  0086               	movwf	6
 18027  105C  0187               	clrf	7
 18028  105D  0801               	movf	1,w
 18029  105E  3907               	andlw	7
 18030  105F  00F1               	movwf	??_parse_device_settings
 18031  1060  0870               	movf	parse_device_settings@settings,w
 18032  1061  3E02               	addlw	2
 18033  1062  0086               	movwf	6
 18034  1063  0187               	clrf	7
 18035  1064  0871               	movf	??_parse_device_settings,w
 18036  1065  0081               	movwf	1
 18037                           
 18038                           ;BME280_driver/bme280.c: 932:     settings->osr_p = ((reg_data[2] & ( 0x1C)) >> ( 0x02))
      +                          ;
 18039  1066  0873               	movf	parse_device_settings@reg_data,w
 18040  1067  3E02               	addlw	2
 18041  1068  0086               	movwf	6
 18042  1069  0187               	clrf	7
 18043  106A  0801               	movf	1,w
 18044  106B  00F1               	movwf	??_parse_device_settings
 18045  106C  3002               	movlw	2
 18046  106D                     u5425:	
 18047  106D  36F1               	lsrf	??_parse_device_settings,f
 18048  106E  0B89               	decfsz	9,f
 18049  106F  286D               	goto	u5425
 18050  1070  0871               	movf	??_parse_device_settings,w
 18051  1071  3907               	andlw	7
 18052  1072  00F2               	movwf	??_parse_device_settings+1
 18053  1073  0870               	movf	parse_device_settings@settings,w
 18054  1074  0086               	movwf	6
 18055  1075  0187               	clrf	7
 18056  1076  0872               	movf	??_parse_device_settings+1,w
 18057  1077  0081               	movwf	1
 18058                           
 18059                           ;BME280_driver/bme280.c: 933:     settings->osr_t = ((reg_data[2] & ( 0xE0)) >> ( 0x05))
      +                          ;
 18060  1078  0873               	movf	parse_device_settings@reg_data,w
 18061  1079  3E02               	addlw	2
 18062  107A  0086               	movwf	6
 18063  107B  0187               	clrf	7
 18064  107C  0801               	movf	1,w
 18065  107D  00F1               	movwf	??_parse_device_settings
 18066  107E  3005               	movlw	5
 18067  107F                     u5435:	
 18068  107F  36F1               	lsrf	??_parse_device_settings,f
 18069  1080  0B89               	decfsz	9,f
 18070  1081  287F               	goto	u5435
 18071  1082  0871               	movf	??_parse_device_settings,w
 18072  1083  3907               	andlw	7
 18073  1084  00F2               	movwf	??_parse_device_settings+1
 18074  1085  0A70               	incf	parse_device_settings@settings,w
 18075  1086  0086               	movwf	6
 18076  1087  0187               	clrf	7
 18077  1088  0872               	movf	??_parse_device_settings+1,w
 18078  1089  0081               	movwf	1
 18079                           
 18080                           ;BME280_driver/bme280.c: 934:     settings->filter = ((reg_data[3] & ( 0x1C)) >> ( 0x02)
      +                          );
 18081  108A  0873               	movf	parse_device_settings@reg_data,w
 18082  108B  3E03               	addlw	3
 18083  108C  0086               	movwf	6
 18084  108D  0187               	clrf	7
 18085  108E  0801               	movf	1,w
 18086  108F  00F1               	movwf	??_parse_device_settings
 18087  1090  3002               	movlw	2
 18088  1091                     u5445:	
 18089  1091  36F1               	lsrf	??_parse_device_settings,f
 18090  1092  0B89               	decfsz	9,f
 18091  1093  2891               	goto	u5445
 18092  1094  0871               	movf	??_parse_device_settings,w
 18093  1095  3907               	andlw	7
 18094  1096  00F2               	movwf	??_parse_device_settings+1
 18095  1097  0870               	movf	parse_device_settings@settings,w
 18096  1098  3E03               	addlw	3
 18097  1099  0086               	movwf	6
 18098  109A  0187               	clrf	7
 18099  109B  0872               	movf	??_parse_device_settings+1,w
 18100  109C  0081               	movwf	1
 18101                           
 18102                           ;BME280_driver/bme280.c: 935:     settings->standby_time = ((reg_data[3] & ( 0xE0)) >> (
      +                           0x05));
 18103  109D  0873               	movf	parse_device_settings@reg_data,w
 18104  109E  3E03               	addlw	3
 18105  109F  0086               	movwf	6
 18106  10A0  0187               	clrf	7
 18107  10A1  0801               	movf	1,w
 18108  10A2  00F1               	movwf	??_parse_device_settings
 18109  10A3  3005               	movlw	5
 18110  10A4                     u5455:	
 18111  10A4  36F1               	lsrf	??_parse_device_settings,f
 18112  10A5  0B89               	decfsz	9,f
 18113  10A6  28A4               	goto	u5455
 18114  10A7  0871               	movf	??_parse_device_settings,w
 18115  10A8  3907               	andlw	7
 18116  10A9  00F2               	movwf	??_parse_device_settings+1
 18117  10AA  0870               	movf	parse_device_settings@settings,w
 18118  10AB  3E04               	addlw	4
 18119  10AC  0086               	movwf	6
 18120  10AD  0187               	clrf	7
 18121  10AE  0872               	movf	??_parse_device_settings+1,w
 18122  10AF  0081               	movwf	1
 18123  10B0  0008               	return
 18124  10B1                     __end_of_parse_device_settings:	
 18125                           
 18126                           	psect	text64
 18127  07D2                     __ptext64:	
 18128 ;; *************** function _bme280_get_sensor_mode *****************
 18129 ;; Defined at:
 18130 ;;		line 610 in file "BME280_driver/bme280.c"
 18131 ;; Parameters:    Size  Location     Type
 18132 ;;  sensor_mode     1    wreg     PTR unsigned char 
 18133 ;;		 -> bme280_set_sensor_mode@last_set_mode(1), bme280_set_sensor_settings@sensor_mode(1), 
 18134 ;;  dev             1   32[BANK0 ] PTR const struct bme280_
 18135 ;;		 -> EnvSensor(51), 
 18136 ;; Auto vars:     Size  Location     Type
 18137 ;;  sensor_mode     1   37[BANK0 ] PTR unsigned char 
 18138 ;;		 -> bme280_set_sensor_mode@last_set_mode(1), bme280_set_sensor_settings@sensor_mode(1), 
 18139 ;;  rslt            1   36[BANK0 ] char 
 18140 ;; Return value:  Size  Location     Type
 18141 ;;                  1    wreg      char 
 18142 ;; Registers used:
 18143 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18144 ;; Tracked objects:
 18145 ;;		On entry : 0/0
 18146 ;;		On exit  : 0/0
 18147 ;;		Unchanged: 0/0
 18148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18149 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18150 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18151 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18152 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18153 ;;Total ram usage:        6 bytes
 18154 ;; Hardware stack levels used:    1
 18155 ;; Hardware stack levels required when called:   11
 18156 ;; This function calls:
 18157 ;;		_bme280_get_regs
 18158 ;;		_null_ptr_check
 18159 ;; This function is called by:
 18160 ;;		_bme280_set_sensor_settings
 18161 ;;		_bme280_set_sensor_mode
 18162 ;; This function uses a non-reentrant model
 18163 ;;
 18164                           
 18165                           
 18166                           ;psect for function _bme280_get_sensor_mode
 18167  07D2                     _bme280_get_sensor_mode:	
 18168                           
 18169                           ;incstack = 0
 18170                           ; Regs used in _bme280_get_sensor_mode: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
 18171                           ;bme280_get_sensor_mode@sensor_mode stored from wreg
 18172  07D2  0140               	movlb	0	; select bank0
 18173  07D3  00C5               	movwf	bme280_get_sensor_mode@sensor_mode
 18174                           
 18175                           ;BME280_driver/bme280.c: 610: int8_t bme280_get_sensor_mode(uint8_t *sensor_mode, const 
      +                          struct bme280_dev *dev);BME280_driver/bme280.c: 611: {;BME280_driver/bme280.c: 612:     
      +                          int8_t rslt;;BME280_driver/bme280.c: 615:     rslt = null_ptr_check(dev);
 18176  07D4  0840               	movf	bme280_get_sensor_mode@dev,w
 18177  07D5  3198  2008  3187   	fcall	_null_ptr_check
 18178  07D8  0140               	movlb	0	; select bank0
 18179  07D9  00C1               	movwf	??_bme280_get_sensor_mode
 18180  07DA  0841               	movf	??_bme280_get_sensor_mode,w
 18181  07DB  00C4               	movwf	bme280_get_sensor_mode@rslt
 18182                           
 18183                           ;BME280_driver/bme280.c: 616:     if (rslt == 0)
 18184  07DC  0844               	movf	bme280_get_sensor_mode@rslt,w
 18185  07DD  1D03               	btfss	3,2
 18186  07DE  2FFD               	goto	l5416
 18187                           
 18188                           ;BME280_driver/bme280.c: 617:     {;BME280_driver/bme280.c: 619:         rslt = bme280_g
      +                          et_regs(0xF4, sensor_mode, 1, dev);
 18189  07DF  0845               	movf	bme280_get_sensor_mode@sensor_mode,w
 18190  07E0  00C1               	movwf	??_bme280_get_sensor_mode
 18191  07E1  0841               	movf	??_bme280_get_sensor_mode,w
 18192  07E2  00B7               	movwf	bme280_get_regs@reg_data
 18193  07E3  3001               	movlw	1
 18194  07E4  00B8               	movwf	bme280_get_regs@len
 18195  07E5  3000               	movlw	0
 18196  07E6  00B9               	movwf	bme280_get_regs@len+1
 18197  07E7  0840               	movf	bme280_get_sensor_mode@dev,w
 18198  07E8  00C2               	movwf	??_bme280_get_sensor_mode+1
 18199  07E9  0842               	movf	??_bme280_get_sensor_mode+1,w
 18200  07EA  00BA               	movwf	bme280_get_regs@dev
 18201  07EB  30F4               	movlw	244
 18202  07EC  319C  2428         	fcall	_bme280_get_regs
 18203  07EE  0140               	movlb	0	; select bank0
 18204  07EF  00C3               	movwf	??_bme280_get_sensor_mode+2
 18205  07F0  0843               	movf	??_bme280_get_sensor_mode+2,w
 18206  07F1  00C4               	movwf	bme280_get_sensor_mode@rslt
 18207                           
 18208                           ;BME280_driver/bme280.c: 622:         *sensor_mode = (*sensor_mode & ( 0x03));
 18209  07F2  0845               	movf	bme280_get_sensor_mode@sensor_mode,w
 18210  07F3  0086               	movwf	6
 18211  07F4  0187               	clrf	7
 18212  07F5  0801               	movf	1,w
 18213  07F6  3903               	andlw	3
 18214  07F7  00C1               	movwf	??_bme280_get_sensor_mode
 18215  07F8  0845               	movf	bme280_get_sensor_mode@sensor_mode,w
 18216  07F9  0086               	movwf	6
 18217  07FA  0187               	clrf	7
 18218  07FB  0841               	movf	??_bme280_get_sensor_mode,w
 18219  07FC  0081               	movwf	1
 18220  07FD                     l5416:	
 18221                           
 18222                           ;BME280_driver/bme280.c: 625:     return rslt;
 18223  07FD  0844               	movf	bme280_get_sensor_mode@rslt,w
 18224  07FE  0008               	return
 18225  07FF                     __end_of_bme280_get_sensor_mode:	
 18226                           
 18227                           	psect	text65
 18228  11DE                     __ptext65:	
 18229 ;; *************** function _bme280_init *****************
 18230 ;; Defined at:
 18231 ;;		line 357 in file "BME280_driver/bme280.c"
 18232 ;; Parameters:    Size  Location     Type
 18233 ;;  dev             1    wreg     PTR struct bme280_dev
 18234 ;;		 -> EnvSensor(51), 
 18235 ;; Auto vars:     Size  Location     Type
 18236 ;;  dev             1   70[BANK0 ] PTR struct bme280_dev
 18237 ;;		 -> EnvSensor(51), 
 18238 ;;  rslt            1   69[BANK0 ] char 
 18239 ;;  chip_id         1   68[BANK0 ] unsigned char 
 18240 ;;  try_count       1   67[BANK0 ] unsigned char 
 18241 ;; Return value:  Size  Location     Type
 18242 ;;                  1    wreg      char 
 18243 ;; Registers used:
 18244 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18245 ;; Tracked objects:
 18246 ;;		On entry : 0/0
 18247 ;;		On exit  : 0/0
 18248 ;;		Unchanged: 0/0
 18249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18251 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18252 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18253 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18254 ;;Total ram usage:        7 bytes
 18255 ;; Hardware stack levels used:    1
 18256 ;; Hardware stack levels required when called:   12
 18257 ;; This function calls:
 18258 ;;		_Sleep
 18259 ;;		_bme280_get_regs
 18260 ;;		_bme280_soft_reset
 18261 ;;		_get_calib_data
 18262 ;;		_null_ptr_check
 18263 ;; This function is called by:
 18264 ;;		_BME280_Init
 18265 ;; This function uses a non-reentrant model
 18266 ;;
 18267                           
 18268                           
 18269                           ;psect for function _bme280_init
 18270  11DE                     _bme280_init:	
 18271                           
 18272                           ;incstack = 0
 18273                           ; Regs used in _bme280_init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18274                           ;bme280_init@dev stored from wreg
 18275  11DE  0140               	movlb	0	; select bank0
 18276  11DF  00E6               	movwf	bme280_init@dev
 18277                           
 18278                           ;BME280_driver/bme280.c: 357: int8_t bme280_init(struct bme280_dev *dev);BME280_driver/b
      +                          me280.c: 358: {;BME280_driver/bme280.c: 359:     int8_t rslt;;BME280_driver/bme280.c: 36
      +                          2:     uint8_t try_count = 5;
 18279  11E0  3005               	movlw	5
 18280  11E1  00E0               	movwf	??_bme280_init
 18281  11E2  0860               	movf	??_bme280_init,w
 18282  11E3  00E3               	movwf	bme280_init@try_count
 18283                           
 18284                           ;BME280_driver/bme280.c: 363:     uint8_t chip_id = 0;
 18285  11E4  01E4               	clrf	bme280_init@chip_id
 18286                           
 18287                           ;BME280_driver/bme280.c: 366:     rslt = null_ptr_check(dev);
 18288  11E5  0866               	movf	bme280_init@dev,w
 18289  11E6  3198  2008  3191   	fcall	_null_ptr_check
 18290  11E9  0140               	movlb	0	; select bank0
 18291  11EA  00E0               	movwf	??_bme280_init
 18292  11EB  0860               	movf	??_bme280_init,w
 18293  11EC  00E5               	movwf	bme280_init@rslt
 18294                           
 18295                           ;BME280_driver/bme280.c: 369:     if (rslt == 0)
 18296  11ED  0865               	movf	bme280_init@rslt,w
 18297  11EE  1903               	btfsc	3,2
 18298  11EF  2A3D               	goto	l5522
 18299  11F0  2A47               	goto	l55
 18300  11F1                     l5504:	
 18301                           
 18302                           ;BME280_driver/bme280.c: 372:         {;BME280_driver/bme280.c: 374:             rslt = 
      +                          bme280_get_regs(0xD0, &chip_id, 1, dev);
 18303  11F1  3064               	movlw	(low (bme280_init@chip_id| 0))& (0+255)
 18304  11F2  00E0               	movwf	??_bme280_init
 18305  11F3  0860               	movf	??_bme280_init,w
 18306  11F4  00B7               	movwf	bme280_get_regs@reg_data
 18307  11F5  3001               	movlw	1
 18308  11F6  00B8               	movwf	bme280_get_regs@len
 18309  11F7  3000               	movlw	0
 18310  11F8  00B9               	movwf	bme280_get_regs@len+1
 18311  11F9  0866               	movf	bme280_init@dev,w
 18312  11FA  00E1               	movwf	??_bme280_init+1
 18313  11FB  0861               	movf	??_bme280_init+1,w
 18314  11FC  00BA               	movwf	bme280_get_regs@dev
 18315  11FD  30D0               	movlw	208
 18316  11FE  319C  2428  3191   	fcall	_bme280_get_regs
 18317  1201  0140               	movlb	0	; select bank0
 18318  1202  00E2               	movwf	??_bme280_init+2
 18319  1203  0862               	movf	??_bme280_init+2,w
 18320  1204  00E5               	movwf	bme280_init@rslt
 18321                           
 18322                           ;BME280_driver/bme280.c: 377:             if ((rslt == 0) && (chip_id == 0x60))
 18323  1205  0865               	movf	bme280_init@rslt,w
 18324  1206  1D03               	btfss	3,2
 18325  1207  2A28               	goto	l5518
 18326  1208  3060               	movlw	96
 18327  1209  0664               	xorwf	bme280_init@chip_id,w
 18328  120A  1D03               	btfss	3,2
 18329  120B  2A28               	goto	l5518
 18330                           
 18331                           ;BME280_driver/bme280.c: 378:             {;BME280_driver/bme280.c: 379:                
      +                           dev->chip_id = chip_id;
 18332  120C  0864               	movf	bme280_init@chip_id,w
 18333  120D  00E0               	movwf	??_bme280_init
 18334  120E  0866               	movf	bme280_init@dev,w
 18335  120F  0086               	movwf	6
 18336  1210  3001               	movlw	1	; select bank2/3
 18337  1211  0087               	movwf	7
 18338  1212  0860               	movf	??_bme280_init,w
 18339  1213  0081               	movwf	1
 18340                           
 18341                           ;BME280_driver/bme280.c: 382:                 rslt = bme280_soft_reset(dev);
 18342  1214  0866               	movf	bme280_init@dev,w
 18343  1215  319A  22EB  3191   	fcall	_bme280_soft_reset
 18344  1218  0140               	movlb	0	; select bank0
 18345  1219  00E0               	movwf	??_bme280_init
 18346  121A  0860               	movf	??_bme280_init,w
 18347  121B  00E5               	movwf	bme280_init@rslt
 18348                           
 18349                           ;BME280_driver/bme280.c: 383:                 if (rslt == 0)
 18350  121C  0865               	movf	bme280_init@rslt,w
 18351  121D  1D03               	btfss	3,2
 18352  121E  2A40               	goto	l5524
 18353                           
 18354                           ;BME280_driver/bme280.c: 384:                 {;BME280_driver/bme280.c: 386:            
      +                                   rslt = get_calib_data(dev);
 18355  121F  0866               	movf	bme280_init@dev,w
 18356  1220  319E  261B  3191   	fcall	_get_calib_data
 18357  1223  0140               	movlb	0	; select bank0
 18358  1224  00E0               	movwf	??_bme280_init
 18359  1225  0860               	movf	??_bme280_init,w
 18360  1226  00E5               	movwf	bme280_init@rslt
 18361  1227  2A40               	goto	l5524
 18362  1228                     l5518:	
 18363                           
 18364                           ;BME280_driver/bme280.c: 392:             dev->delay_ms(1);
 18365  1228  3000               	movlw	0
 18366  1229  00F3               	movwf	Sleep@ms+3
 18367  122A  3000               	movlw	0
 18368  122B  00F2               	movwf	Sleep@ms+2
 18369  122C  3000               	movlw	0
 18370  122D  00F1               	movwf	Sleep@ms+1
 18371  122E  3001               	movlw	1
 18372  122F  00F0               	movwf	Sleep@ms
 18373  1230  0866               	movf	bme280_init@dev,w
 18374  1231  3E07               	addlw	7
 18375  1232  0086               	movwf	6
 18376  1233  3001               	movlw	1	; select bank2/3
 18377  1234  0087               	movwf	7
 18378  1235  3F41               	moviw [1]fsr1
 18379  1236  008A               	movwf	10
 18380  1237  3F40               	moviw [0]fsr1
 18381  1238  000A               	callw
 18382  1239  3191               	pagesel	$
 18383                           
 18384                           ;BME280_driver/bme280.c: 393:             --try_count;
 18385  123A  3001               	movlw	1
 18386  123B  0140               	movlb	0	; select bank0
 18387  123C  02E3               	subwf	bme280_init@try_count,f
 18388  123D                     l5522:	
 18389                           
 18390                           ;BME280_driver/bme280.c: 371:         while (try_count)
 18391  123D  0863               	movf	bme280_init@try_count,w
 18392  123E  1D03               	btfss	3,2
 18393  123F  29F1               	goto	l5504
 18394  1240                     l5524:	
 18395                           
 18396                           ;BME280_driver/bme280.c: 397:         if (!try_count)
 18397  1240  0863               	movf	bme280_init@try_count,w
 18398  1241  1D03               	btfss	3,2
 18399  1242  2A47               	goto	l55
 18400                           
 18401                           ;BME280_driver/bme280.c: 398:         {;BME280_driver/bme280.c: 399:             rslt = 
      +                          -2;
 18402  1243  30FE               	movlw	254
 18403  1244  00E0               	movwf	??_bme280_init
 18404  1245  0860               	movf	??_bme280_init,w
 18405  1246  00E5               	movwf	bme280_init@rslt
 18406  1247                     l55:	
 18407                           ;BME280_driver/bme280.c: 401:     }
 18408                           
 18409                           
 18410                           ;BME280_driver/bme280.c: 403:     return rslt;
 18411  1247  0865               	movf	bme280_init@rslt,w
 18412  1248  0008               	return
 18413  1249                     __end_of_bme280_init:	
 18414                           
 18415                           	psect	text66
 18416  1E1B                     __ptext66:	
 18417 ;; *************** function _get_calib_data *****************
 18418 ;; Defined at:
 18419 ;;		line 1307 in file "BME280_driver/bme280.c"
 18420 ;; Parameters:    Size  Location     Type
 18421 ;;  dev             1    wreg     PTR struct bme280_dev
 18422 ;;		 -> EnvSensor(51), 
 18423 ;; Auto vars:     Size  Location     Type
 18424 ;;  dev             1   63[BANK0 ] PTR struct bme280_dev
 18425 ;;		 -> EnvSensor(51), 
 18426 ;;  calib_data     26   35[BANK0 ] unsigned char [26]
 18427 ;;  rslt            1   62[BANK0 ] char 
 18428 ;;  reg_addr        1    0        unsigned char 
 18429 ;; Return value:  Size  Location     Type
 18430 ;;                  1    wreg      char 
 18431 ;; Registers used:
 18432 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18433 ;; Tracked objects:
 18434 ;;		On entry : 0/0
 18435 ;;		On exit  : 0/0
 18436 ;;		Unchanged: 0/0
 18437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18439 ;;      Locals:         0      29       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18440 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18441 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18442 ;;Total ram usage:       32 bytes
 18443 ;; Hardware stack levels used:    1
 18444 ;; Hardware stack levels required when called:   11
 18445 ;; This function calls:
 18446 ;;		_bme280_get_regs
 18447 ;;		_parse_humidity_calib_data
 18448 ;;		_parse_temp_press_calib_data
 18449 ;; This function is called by:
 18450 ;;		_bme280_init
 18451 ;; This function uses a non-reentrant model
 18452 ;;
 18453                           
 18454                           
 18455                           ;psect for function _get_calib_data
 18456  1E1B                     _get_calib_data:	
 18457                           
 18458                           ;incstack = 0
 18459                           ; Regs used in _get_calib_data: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18460                           ;get_calib_data@dev stored from wreg
 18461  1E1B  0140               	movlb	0	; select bank0
 18462  1E1C  00DF               	movwf	get_calib_data@dev
 18463                           
 18464                           ;BME280_driver/bme280.c: 1313:     uint8_t calib_data[26] = { 0 };
 18465  1E1D  3043               	movlw	low get_calib_data@calib_data
 18466  1E1E  0086               	movwf	6
 18467  1E1F  3000               	movlw	high get_calib_data@calib_data
 18468  1E20  0087               	movwf	7
 18469  1E21  301A               	movlw	26
 18470  1E22  00C0               	movwf	??_get_calib_data
 18471  1E23  3000               	movlw	0
 18472  1E24                     u5470:	
 18473  1E24  001E               	movwi fsr1++
 18474  1E25  0BC0               	decfsz	??_get_calib_data,f
 18475  1E26  2E24               	goto	u5470
 18476                           
 18477                           ;BME280_driver/bme280.c: 1316:     rslt = bme280_get_regs(reg_addr, calib_data, 26, dev)
      +                          ;
 18478  1E27  3043               	movlw	(low (get_calib_data@calib_data| 0))& (0+255)
 18479  1E28  00C0               	movwf	??_get_calib_data
 18480  1E29  0840               	movf	??_get_calib_data,w
 18481  1E2A  00B7               	movwf	bme280_get_regs@reg_data
 18482  1E2B  301A               	movlw	26
 18483  1E2C  00B8               	movwf	bme280_get_regs@len
 18484  1E2D  3000               	movlw	0
 18485  1E2E  00B9               	movwf	bme280_get_regs@len+1
 18486  1E2F  085F               	movf	get_calib_data@dev,w
 18487  1E30  00C1               	movwf	??_get_calib_data+1
 18488  1E31  0841               	movf	??_get_calib_data+1,w
 18489  1E32  00BA               	movwf	bme280_get_regs@dev
 18490  1E33  3088               	movlw	136
 18491  1E34  319C  2428  319E   	fcall	_bme280_get_regs
 18492  1E37  0140               	movlb	0	; select bank0
 18493  1E38  00C2               	movwf	??_get_calib_data+2
 18494  1E39  0842               	movf	??_get_calib_data+2,w
 18495  1E3A  00DE               	movwf	get_calib_data@rslt
 18496                           
 18497                           ;BME280_driver/bme280.c: 1317:     if (rslt == 0)
 18498  1E3B  085E               	movf	get_calib_data@rslt,w
 18499  1E3C  1D03               	btfss	3,2
 18500  1E3D  2E65               	goto	l5404
 18501                           
 18502                           ;BME280_driver/bme280.c: 1318:     {;BME280_driver/bme280.c: 1322:         parse_temp_pr
      +                          ess_calib_data(calib_data, dev);
 18503  1E3E  085F               	movf	get_calib_data@dev,w
 18504  1E3F  00C0               	movwf	??_get_calib_data
 18505  1E40  0840               	movf	??_get_calib_data,w
 18506  1E41  00F0               	movwf	parse_temp_press_calib_data@dev
 18507  1E42  3043               	movlw	(low (get_calib_data@calib_data| 0))& (0+255)
 18508  1E43  3188  2004  319E   	fcall	_parse_temp_press_calib_data
 18509                           
 18510                           ;BME280_driver/bme280.c: 1326:         rslt = bme280_get_regs(reg_addr, calib_data, 7, d
      +                          ev);
 18511  1E46  3043               	movlw	(low (get_calib_data@calib_data| 0))& (0+255)
 18512  1E47  0140               	movlb	0	; select bank0
 18513  1E48  00C0               	movwf	??_get_calib_data
 18514  1E49  0840               	movf	??_get_calib_data,w
 18515  1E4A  00B7               	movwf	bme280_get_regs@reg_data
 18516  1E4B  3007               	movlw	7
 18517  1E4C  00B8               	movwf	bme280_get_regs@len
 18518  1E4D  3000               	movlw	0
 18519  1E4E  00B9               	movwf	bme280_get_regs@len+1
 18520  1E4F  085F               	movf	get_calib_data@dev,w
 18521  1E50  00C1               	movwf	??_get_calib_data+1
 18522  1E51  0841               	movf	??_get_calib_data+1,w
 18523  1E52  00BA               	movwf	bme280_get_regs@dev
 18524  1E53  30E1               	movlw	225
 18525  1E54  319C  2428  319E   	fcall	_bme280_get_regs
 18526  1E57  0140               	movlb	0	; select bank0
 18527  1E58  00C2               	movwf	??_get_calib_data+2
 18528  1E59  0842               	movf	??_get_calib_data+2,w
 18529  1E5A  00DE               	movwf	get_calib_data@rslt
 18530                           
 18531                           ;BME280_driver/bme280.c: 1327:         if (rslt == 0)
 18532  1E5B  085E               	movf	get_calib_data@rslt,w
 18533  1E5C  1D03               	btfss	3,2
 18534  1E5D  2E65               	goto	l5404
 18535                           
 18536                           ;BME280_driver/bme280.c: 1328:         {;BME280_driver/bme280.c: 1332:             parse
      +                          _humidity_calib_data(calib_data, dev);
 18537  1E5E  085F               	movf	get_calib_data@dev,w
 18538  1E5F  00C0               	movwf	??_get_calib_data
 18539  1E60  0840               	movf	??_get_calib_data,w
 18540  1E61  00F0               	movwf	parse_humidity_calib_data@dev
 18541  1E62  3043               	movlw	(low (get_calib_data@calib_data| 0))& (0+255)
 18542  1E63  3195  25A7         	fcall	_parse_humidity_calib_data
 18543  1E65                     l5404:	
 18544                           
 18545                           ;BME280_driver/bme280.c: 1336:     return rslt;
 18546  1E65  0140               	movlb	0	; select bank0
 18547  1E66  085E               	movf	get_calib_data@rslt,w
 18548  1E67  0008               	return
 18549  1E68                     __end_of_get_calib_data:	
 18550                           
 18551                           	psect	text67
 18552  0804                     __ptext67:	
 18553 ;; *************** function _parse_temp_press_calib_data *****************
 18554 ;; Defined at:
 18555 ;;		line 1358 in file "BME280_driver/bme280.c"
 18556 ;; Parameters:    Size  Location     Type
 18557 ;;  reg_data        1    wreg     PTR const unsigned char 
 18558 ;;		 -> get_calib_data@calib_data(26), 
 18559 ;;  dev             1    0[COMMON] PTR struct bme280_dev
 18560 ;;		 -> EnvSensor(51), 
 18561 ;; Auto vars:     Size  Location     Type
 18562 ;;  reg_data        1    3[COMMON] PTR const unsigned char 
 18563 ;;		 -> get_calib_data@calib_data(26), 
 18564 ;;  calib_data      1    2[COMMON] PTR struct bme280_calib_
 18565 ;;		 -> EnvSensor.calib_data(37), EnvSensor(51), 
 18566 ;; Return value:  Size  Location     Type
 18567 ;;                  1    wreg      void 
 18568 ;; Registers used:
 18569 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 18570 ;; Tracked objects:
 18571 ;;		On entry : 0/0
 18572 ;;		On exit  : 0/0
 18573 ;;		Unchanged: 0/0
 18574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18575 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18576 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18577 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18578 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18579 ;;Total ram usage:        4 bytes
 18580 ;; Hardware stack levels used:    1
 18581 ;; Hardware stack levels required when called:    3
 18582 ;; This function calls:
 18583 ;;		Nothing
 18584 ;; This function is called by:
 18585 ;;		_get_calib_data
 18586 ;; This function uses a non-reentrant model
 18587 ;;
 18588                           
 18589                           
 18590                           ;psect for function _parse_temp_press_calib_data
 18591  0804                     _parse_temp_press_calib_data:	
 18592                           
 18593                           ;incstack = 0
 18594                           ; Regs used in _parse_temp_press_calib_data: [wreg-fsr1h+status,2+status,0]
 18595                           ;parse_temp_press_calib_data@reg_data stored from wreg
 18596  0804  00F3               	movwf	parse_temp_press_calib_data@reg_data
 18597                           
 18598                           ;BME280_driver/bme280.c: 1358: static void parse_temp_press_calib_data(const uint8_t *re
      +                          g_data, struct bme280_dev *dev);BME280_driver/bme280.c: 1359: {;BME280_driver/bme280.c: 
      +                          1360:     struct bme280_calib_data *calib_data = &dev->calib_data;
 18599  0805  0870               	movf	parse_temp_press_calib_data@dev,w
 18600  0806  3E09               	addlw	9
 18601  0807  00F1               	movwf	??_parse_temp_press_calib_data
 18602  0808  0871               	movf	??_parse_temp_press_calib_data,w
 18603  0809  00F2               	movwf	parse_temp_press_calib_data@calib_data
 18604                           
 18605                           ;BME280_driver/bme280.c: 1362:     calib_data->dig_T1 = (((uint16_t)reg_data[1] << 8) | 
      +                          (uint16_t)reg_data[0]);
 18606  080A  0A73               	incf	parse_temp_press_calib_data@reg_data,w
 18607  080B  0084               	movwf	4
 18608  080C  0185               	clrf	5
 18609  080D  0800               	movf	0,w
 18610  080E  00F1               	movwf	??_parse_temp_press_calib_data
 18611  080F  0873               	movf	parse_temp_press_calib_data@reg_data,w
 18612  0810  0084               	movwf	4
 18613  0811  0185               	clrf	5
 18614  0812  0872               	movf	parse_temp_press_calib_data@calib_data,w
 18615  0813  0086               	movwf	6
 18616  0814  3001               	movlw	1	; select bank2/3
 18617  0815  0087               	movwf	7
 18618  0816  0800               	movf	0,w
 18619  0817  3FC0               	movwi [0]fsr1
 18620  0818  0871               	movf	??_parse_temp_press_calib_data,w
 18621  0819  3FC1               	movwi [1]fsr1
 18622                           
 18623                           ;BME280_driver/bme280.c: 1363:     calib_data->dig_T2 = (int16_t)(((uint16_t)reg_data[3]
      +                           << 8) | (uint16_t)reg_data[2]);
 18624  081A  0873               	movf	parse_temp_press_calib_data@reg_data,w
 18625  081B  3E03               	addlw	3
 18626  081C  0084               	movwf	4
 18627  081D  0185               	clrf	5
 18628  081E  0800               	movf	0,w
 18629  081F  00F1               	movwf	??_parse_temp_press_calib_data
 18630  0820  0873               	movf	parse_temp_press_calib_data@reg_data,w
 18631  0821  3E02               	addlw	2
 18632  0822  0084               	movwf	4
 18633  0823  0185               	clrf	5
 18634  0824  0872               	movf	parse_temp_press_calib_data@calib_data,w
 18635  0825  3E02               	addlw	2
 18636  0826  0086               	movwf	6
 18637  0827  3001               	movlw	1	; select bank2/3
 18638  0828  0087               	movwf	7
 18639  0829  0800               	movf	0,w
 18640  082A  3FC0               	movwi [0]fsr1
 18641  082B  0871               	movf	??_parse_temp_press_calib_data,w
 18642  082C  3FC1               	movwi [1]fsr1
 18643                           
 18644                           ;BME280_driver/bme280.c: 1364:     calib_data->dig_T3 = (int16_t)(((uint16_t)reg_data[5]
      +                           << 8) | (uint16_t)reg_data[4]);
 18645  082D  0873               	movf	parse_temp_press_calib_data@reg_data,w
 18646  082E  3E05               	addlw	5
 18647  082F  0084               	movwf	4
 18648  0830  0185               	clrf	5
 18649  0831  0800               	movf	0,w
 18650  0832  00F1               	movwf	??_parse_temp_press_calib_data
 18651  0833  0873               	movf	parse_temp_press_calib_data@reg_data,w
 18652  0834  3E04               	addlw	4
 18653  0835  0084               	movwf	4
 18654  0836  0185               	clrf	5
 18655  0837  0872               	movf	parse_temp_press_calib_data@calib_data,w
 18656  0838  3E04               	addlw	4
 18657  0839  0086               	movwf	6
 18658  083A  3001               	movlw	1	; select bank2/3
 18659  083B  0087               	movwf	7
 18660  083C  0800               	movf	0,w
 18661  083D  3FC0               	movwi [0]fsr1
 18662  083E  0871               	movf	??_parse_temp_press_calib_data,w
 18663  083F  3FC1               	movwi [1]fsr1
 18664                           
 18665                           ;BME280_driver/bme280.c: 1365:     calib_data->dig_P1 = (((uint16_t)reg_data[7] << 8) | 
      +                          (uint16_t)reg_data[6]);
 18666  0840  0873               	movf	parse_temp_press_calib_data@reg_data,w
 18667  0841  3E07               	addlw	7
 18668  0842  0084               	movwf	4
 18669  0843  0185               	clrf	5
 18670  0844  0800               	movf	0,w
 18671  0845  00F1               	movwf	??_parse_temp_press_calib_data
 18672  0846  0873               	movf	parse_temp_press_calib_data@reg_data,w
 18673  0847  3E06               	addlw	6
 18674  0848  0084               	movwf	4
 18675  0849  0185               	clrf	5
 18676  084A  0872               	movf	parse_temp_press_calib_data@calib_data,w
 18677  084B  3E06               	addlw	6
 18678  084C  0086               	movwf	6
 18679  084D  3001               	movlw	1	; select bank2/3
 18680  084E  0087               	movwf	7
 18681  084F  0800               	movf	0,w
 18682  0850  3FC0               	movwi [0]fsr1
 18683  0851  0871               	movf	??_parse_temp_press_calib_data,w
 18684  0852  3FC1               	movwi [1]fsr1
 18685                           
 18686                           ;BME280_driver/bme280.c: 1366:     calib_data->dig_P2 = (int16_t)(((uint16_t)reg_data[9]
      +                           << 8) | (uint16_t)reg_data[8]);
 18687  0853  0873               	movf	parse_temp_press_calib_data@reg_data,w
 18688  0854  3E09               	addlw	9
 18689  0855  0084               	movwf	4
 18690  0856  0185               	clrf	5
 18691  0857  0800               	movf	0,w
 18692  0858  00F1               	movwf	??_parse_temp_press_calib_data
 18693  0859  0873               	movf	parse_temp_press_calib_data@reg_data,w
 18694  085A  3E08               	addlw	8
 18695  085B  0084               	movwf	4
 18696  085C  0185               	clrf	5
 18697  085D  0872               	movf	parse_temp_press_calib_data@calib_data,w
 18698  085E  3E08               	addlw	8
 18699  085F  0086               	movwf	6
 18700  0860  3001               	movlw	1	; select bank2/3
 18701  0861  0087               	movwf	7
 18702  0862  0800               	movf	0,w
 18703  0863  3FC0               	movwi [0]fsr1
 18704  0864  0871               	movf	??_parse_temp_press_calib_data,w
 18705  0865  3FC1               	movwi [1]fsr1
 18706                           
 18707                           ;BME280_driver/bme280.c: 1367:     calib_data->dig_P3 = (int16_t)(((uint16_t)reg_data[11
      +                          ] << 8) | (uint16_t)reg_data[10]);
 18708  0866  0873               	movf	parse_temp_press_calib_data@reg_data,w
 18709  0867  3E0B               	addlw	11
 18710  0868  0084               	movwf	4
 18711  0869  0185               	clrf	5
 18712  086A  0800               	movf	0,w
 18713  086B  00F1               	movwf	??_parse_temp_press_calib_data
 18714  086C  0873               	movf	parse_temp_press_calib_data@reg_data,w
 18715  086D  3E0A               	addlw	10
 18716  086E  0084               	movwf	4
 18717  086F  0185               	clrf	5
 18718  0870  0872               	movf	parse_temp_press_calib_data@calib_data,w
 18719  0871  3E0A               	addlw	10
 18720  0872  0086               	movwf	6
 18721  0873  3001               	movlw	1	; select bank2/3
 18722  0874  0087               	movwf	7
 18723  0875  0800               	movf	0,w
 18724  0876  3FC0               	movwi [0]fsr1
 18725  0877  0871               	movf	??_parse_temp_press_calib_data,w
 18726  0878  3FC1               	movwi [1]fsr1
 18727                           
 18728                           ;BME280_driver/bme280.c: 1368:     calib_data->dig_P4 = (int16_t)(((uint16_t)reg_data[13
      +                          ] << 8) | (uint16_t)reg_data[12]);
 18729  0879  0873               	movf	parse_temp_press_calib_data@reg_data,w
 18730  087A  3E0D               	addlw	13
 18731  087B  0084               	movwf	4
 18732  087C  0185               	clrf	5
 18733  087D  0800               	movf	0,w
 18734  087E  00F1               	movwf	??_parse_temp_press_calib_data
 18735  087F  0873               	movf	parse_temp_press_calib_data@reg_data,w
 18736  0880  3E0C               	addlw	12
 18737  0881  0084               	movwf	4
 18738  0882  0185               	clrf	5
 18739  0883  0872               	movf	parse_temp_press_calib_data@calib_data,w
 18740  0884  3E0C               	addlw	12
 18741  0885  0086               	movwf	6
 18742  0886  3001               	movlw	1	; select bank2/3
 18743  0887  0087               	movwf	7
 18744  0888  0800               	movf	0,w
 18745  0889  3FC0               	movwi [0]fsr1
 18746  088A  0871               	movf	??_parse_temp_press_calib_data,w
 18747  088B  3FC1               	movwi [1]fsr1
 18748                           
 18749                           ;BME280_driver/bme280.c: 1369:     calib_data->dig_P5 = (int16_t)(((uint16_t)reg_data[15
      +                          ] << 8) | (uint16_t)reg_data[14]);
 18750  088C  0873               	movf	parse_temp_press_calib_data@reg_data,w
 18751  088D  3E0F               	addlw	15
 18752  088E  0084               	movwf	4
 18753  088F  0185               	clrf	5
 18754  0890  0800               	movf	0,w
 18755  0891  00F1               	movwf	??_parse_temp_press_calib_data
 18756  0892  0873               	movf	parse_temp_press_calib_data@reg_data,w
 18757  0893  3E0E               	addlw	14
 18758  0894  0084               	movwf	4
 18759  0895  0185               	clrf	5
 18760  0896  0872               	movf	parse_temp_press_calib_data@calib_data,w
 18761  0897  3E0E               	addlw	14
 18762  0898  0086               	movwf	6
 18763  0899  3001               	movlw	1	; select bank2/3
 18764  089A  0087               	movwf	7
 18765  089B  0800               	movf	0,w
 18766  089C  3FC0               	movwi [0]fsr1
 18767  089D  0871               	movf	??_parse_temp_press_calib_data,w
 18768  089E  3FC1               	movwi [1]fsr1
 18769                           
 18770                           ;BME280_driver/bme280.c: 1370:     calib_data->dig_P6 = (int16_t)(((uint16_t)reg_data[17
      +                          ] << 8) | (uint16_t)reg_data[16]);
 18771  089F  0873               	movf	parse_temp_press_calib_data@reg_data,w
 18772  08A0  3E11               	addlw	17
 18773  08A1  0084               	movwf	4
 18774  08A2  0185               	clrf	5
 18775  08A3  0800               	movf	0,w
 18776  08A4  00F1               	movwf	??_parse_temp_press_calib_data
 18777  08A5  0873               	movf	parse_temp_press_calib_data@reg_data,w
 18778  08A6  3E10               	addlw	16
 18779  08A7  0084               	movwf	4
 18780  08A8  0185               	clrf	5
 18781  08A9  0872               	movf	parse_temp_press_calib_data@calib_data,w
 18782  08AA  3E10               	addlw	16
 18783  08AB  0086               	movwf	6
 18784  08AC  3001               	movlw	1	; select bank2/3
 18785  08AD  0087               	movwf	7
 18786  08AE  0800               	movf	0,w
 18787  08AF  3FC0               	movwi [0]fsr1
 18788  08B0  0871               	movf	??_parse_temp_press_calib_data,w
 18789  08B1  3FC1               	movwi [1]fsr1
 18790                           
 18791                           ;BME280_driver/bme280.c: 1371:     calib_data->dig_P7 = (int16_t)(((uint16_t)reg_data[19
      +                          ] << 8) | (uint16_t)reg_data[18]);
 18792  08B2  0873               	movf	parse_temp_press_calib_data@reg_data,w
 18793  08B3  3E13               	addlw	19
 18794  08B4  0084               	movwf	4
 18795  08B5  0185               	clrf	5
 18796  08B6  0800               	movf	0,w
 18797  08B7  00F1               	movwf	??_parse_temp_press_calib_data
 18798  08B8  0873               	movf	parse_temp_press_calib_data@reg_data,w
 18799  08B9  3E12               	addlw	18
 18800  08BA  0084               	movwf	4
 18801  08BB  0185               	clrf	5
 18802  08BC  0872               	movf	parse_temp_press_calib_data@calib_data,w
 18803  08BD  3E12               	addlw	18
 18804  08BE  0086               	movwf	6
 18805  08BF  3001               	movlw	1	; select bank2/3
 18806  08C0  0087               	movwf	7
 18807  08C1  0800               	movf	0,w
 18808  08C2  3FC0               	movwi [0]fsr1
 18809  08C3  0871               	movf	??_parse_temp_press_calib_data,w
 18810  08C4  3FC1               	movwi [1]fsr1
 18811                           
 18812                           ;BME280_driver/bme280.c: 1372:     calib_data->dig_P8 = (int16_t)(((uint16_t)reg_data[21
      +                          ] << 8) | (uint16_t)reg_data[20]);
 18813  08C5  0873               	movf	parse_temp_press_calib_data@reg_data,w
 18814  08C6  3E15               	addlw	21
 18815  08C7  0084               	movwf	4
 18816  08C8  0185               	clrf	5
 18817  08C9  0800               	movf	0,w
 18818  08CA  00F1               	movwf	??_parse_temp_press_calib_data
 18819  08CB  0873               	movf	parse_temp_press_calib_data@reg_data,w
 18820  08CC  3E14               	addlw	20
 18821  08CD  0084               	movwf	4
 18822  08CE  0185               	clrf	5
 18823  08CF  0872               	movf	parse_temp_press_calib_data@calib_data,w
 18824  08D0  3E14               	addlw	20
 18825  08D1  0086               	movwf	6
 18826  08D2  3001               	movlw	1	; select bank2/3
 18827  08D3  0087               	movwf	7
 18828  08D4  0800               	movf	0,w
 18829  08D5  3FC0               	movwi [0]fsr1
 18830  08D6  0871               	movf	??_parse_temp_press_calib_data,w
 18831  08D7  3FC1               	movwi [1]fsr1
 18832                           
 18833                           ;BME280_driver/bme280.c: 1373:     calib_data->dig_P9 = (int16_t)(((uint16_t)reg_data[23
      +                          ] << 8) | (uint16_t)reg_data[22]);
 18834  08D8  0873               	movf	parse_temp_press_calib_data@reg_data,w
 18835  08D9  3E17               	addlw	23
 18836  08DA  0084               	movwf	4
 18837  08DB  0185               	clrf	5
 18838  08DC  0800               	movf	0,w
 18839  08DD  00F1               	movwf	??_parse_temp_press_calib_data
 18840  08DE  0873               	movf	parse_temp_press_calib_data@reg_data,w
 18841  08DF  3E16               	addlw	22
 18842  08E0  0084               	movwf	4
 18843  08E1  0185               	clrf	5
 18844  08E2  0872               	movf	parse_temp_press_calib_data@calib_data,w
 18845  08E3  3E16               	addlw	22
 18846  08E4  0086               	movwf	6
 18847  08E5  3001               	movlw	1	; select bank2/3
 18848  08E6  0087               	movwf	7
 18849  08E7  0800               	movf	0,w
 18850  08E8  3FC0               	movwi [0]fsr1
 18851  08E9  0871               	movf	??_parse_temp_press_calib_data,w
 18852  08EA  3FC1               	movwi [1]fsr1
 18853                           
 18854                           ;BME280_driver/bme280.c: 1374:     calib_data->dig_H1 = reg_data[25];
 18855  08EB  0873               	movf	parse_temp_press_calib_data@reg_data,w
 18856  08EC  3E19               	addlw	25
 18857  08ED  0086               	movwf	6
 18858  08EE  0187               	clrf	7
 18859  08EF  0801               	movf	1,w
 18860  08F0  00F1               	movwf	??_parse_temp_press_calib_data
 18861  08F1  0872               	movf	parse_temp_press_calib_data@calib_data,w
 18862  08F2  3E18               	addlw	24
 18863  08F3  0086               	movwf	6
 18864  08F4  3001               	movlw	1	; select bank2/3
 18865  08F5  0087               	movwf	7
 18866  08F6  0871               	movf	??_parse_temp_press_calib_data,w
 18867  08F7  0081               	movwf	1
 18868  08F8  0008               	return
 18869  08F9                     __end_of_parse_temp_press_calib_data:	
 18870                           
 18871                           	psect	text68
 18872  15A7                     __ptext68:	
 18873 ;; *************** function _parse_humidity_calib_data *****************
 18874 ;; Defined at:
 18875 ;;		line 1381 in file "BME280_driver/bme280.c"
 18876 ;; Parameters:    Size  Location     Type
 18877 ;;  reg_data        1    wreg     PTR const unsigned char 
 18878 ;;		 -> get_calib_data@calib_data(26), 
 18879 ;;  dev             1    0[COMMON] PTR struct bme280_dev
 18880 ;;		 -> EnvSensor(51), 
 18881 ;; Auto vars:     Size  Location     Type
 18882 ;;  reg_data        1   13[COMMON] PTR const unsigned char 
 18883 ;;		 -> get_calib_data@calib_data(26), 
 18884 ;;  dig_H5_msb      2   10[COMMON] short 
 18885 ;;  dig_H5_lsb      2    8[COMMON] short 
 18886 ;;  dig_H4_msb      2    6[COMMON] short 
 18887 ;;  dig_H4_lsb      2    4[COMMON] short 
 18888 ;;  calib_data      1   12[COMMON] PTR struct bme280_calib_
 18889 ;;		 -> EnvSensor.calib_data(37), EnvSensor(51), 
 18890 ;; Return value:  Size  Location     Type
 18891 ;;                  1    wreg      void 
 18892 ;; Registers used:
 18893 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 18894 ;; Tracked objects:
 18895 ;;		On entry : 0/0
 18896 ;;		On exit  : 0/0
 18897 ;;		Unchanged: 0/0
 18898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18899 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18900 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18901 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18902 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18903 ;;Total ram usage:       14 bytes
 18904 ;; Hardware stack levels used:    1
 18905 ;; Hardware stack levels required when called:    3
 18906 ;; This function calls:
 18907 ;;		Nothing
 18908 ;; This function is called by:
 18909 ;;		_get_calib_data
 18910 ;; This function uses a non-reentrant model
 18911 ;;
 18912                           
 18913                           
 18914                           ;psect for function _parse_humidity_calib_data
 18915  15A7                     _parse_humidity_calib_data:	
 18916                           
 18917                           ;incstack = 0
 18918                           ; Regs used in _parse_humidity_calib_data: [wreg-fsr1h+status,2+status,0]
 18919                           ;parse_humidity_calib_data@reg_data stored from wreg
 18920  15A7  00FD               	movwf	parse_humidity_calib_data@reg_data
 18921                           
 18922                           ;BME280_driver/bme280.c: 1381: static void parse_humidity_calib_data(const uint8_t *reg_
      +                          data, struct bme280_dev *dev);BME280_driver/bme280.c: 1382: {;BME280_driver/bme280.c: 13
      +                          83:     struct bme280_calib_data *calib_data = &dev->calib_data;
 18923  15A8  0870               	movf	parse_humidity_calib_data@dev,w
 18924  15A9  3E09               	addlw	9
 18925  15AA  00F1               	movwf	??_parse_humidity_calib_data
 18926  15AB  0871               	movf	??_parse_humidity_calib_data,w
 18927  15AC  00FC               	movwf	parse_humidity_calib_data@calib_data
 18928                           
 18929                           ;BME280_driver/bme280.c: 1384:     int16_t dig_H4_lsb;;BME280_driver/bme280.c: 1385:    
      +                           int16_t dig_H4_msb;;BME280_driver/bme280.c: 1386:     int16_t dig_H5_lsb;;BME280_driver
      +                          /bme280.c: 1387:     int16_t dig_H5_msb;;BME280_driver/bme280.c: 1389:     calib_data->d
      +                          ig_H2 = (int16_t)(((uint16_t)reg_data[1] << 8) | (uint16_t)reg_data[0]);
 18930  15AD  0A7D               	incf	parse_humidity_calib_data@reg_data,w
 18931  15AE  0084               	movwf	4
 18932  15AF  0185               	clrf	5
 18933  15B0  0800               	movf	0,w
 18934  15B1  00F1               	movwf	??_parse_humidity_calib_data
 18935  15B2  087D               	movf	parse_humidity_calib_data@reg_data,w
 18936  15B3  0084               	movwf	4
 18937  15B4  0185               	clrf	5
 18938  15B5  087C               	movf	parse_humidity_calib_data@calib_data,w
 18939  15B6  3E19               	addlw	25
 18940  15B7  0086               	movwf	6
 18941  15B8  3001               	movlw	1	; select bank2/3
 18942  15B9  0087               	movwf	7
 18943  15BA  0800               	movf	0,w
 18944  15BB  3FC0               	movwi [0]fsr1
 18945  15BC  0871               	movf	??_parse_humidity_calib_data,w
 18946  15BD  3FC1               	movwi [1]fsr1
 18947                           
 18948                           ;BME280_driver/bme280.c: 1390:     calib_data->dig_H3 = reg_data[2];
 18949  15BE  087D               	movf	parse_humidity_calib_data@reg_data,w
 18950  15BF  3E02               	addlw	2
 18951  15C0  0086               	movwf	6
 18952  15C1  0187               	clrf	7
 18953  15C2  0801               	movf	1,w
 18954  15C3  00F1               	movwf	??_parse_humidity_calib_data
 18955  15C4  087C               	movf	parse_humidity_calib_data@calib_data,w
 18956  15C5  3E1B               	addlw	27
 18957  15C6  0086               	movwf	6
 18958  15C7  3001               	movlw	1	; select bank2/3
 18959  15C8  0087               	movwf	7
 18960  15C9  0871               	movf	??_parse_humidity_calib_data,w
 18961  15CA  0081               	movwf	1
 18962                           
 18963                           ;BME280_driver/bme280.c: 1391:     dig_H4_msb = (int16_t)(int8_t)reg_data[3] * 16;
 18964  15CB  087D               	movf	parse_humidity_calib_data@reg_data,w
 18965  15CC  3E03               	addlw	3
 18966  15CD  0086               	movwf	6
 18967  15CE  0187               	clrf	7
 18968  15CF  0801               	movf	1,w
 18969  15D0  00F1               	movwf	??_parse_humidity_calib_data
 18970  15D1  01F2               	clrf	??_parse_humidity_calib_data+1
 18971  15D2  1BF1               	btfsc	??_parse_humidity_calib_data,7
 18972  15D3  03F2               	decf	??_parse_humidity_calib_data+1,f
 18973  15D4  0EF1               	swapf	??_parse_humidity_calib_data,f
 18974  15D5  0EF2               	swapf	??_parse_humidity_calib_data+1,f
 18975  15D6  30F0               	movlw	240
 18976  15D7  05F2               	andwf	??_parse_humidity_calib_data+1,f
 18977  15D8  0871               	movf	??_parse_humidity_calib_data,w
 18978  15D9  390F               	andlw	15
 18979  15DA  04F2               	iorwf	??_parse_humidity_calib_data+1,f
 18980  15DB  30F0               	movlw	240
 18981  15DC  05F1               	andwf	??_parse_humidity_calib_data,f
 18982  15DD  0871               	movf	??_parse_humidity_calib_data,w
 18983  15DE  00F6               	movwf	parse_humidity_calib_data@dig_H4_msb
 18984  15DF  0872               	movf	??_parse_humidity_calib_data+1,w
 18985  15E0  00F7               	movwf	parse_humidity_calib_data@dig_H4_msb+1
 18986                           
 18987                           ;BME280_driver/bme280.c: 1392:     dig_H4_lsb = (int16_t)(reg_data[4] & 0x0F);
 18988  15E1  087D               	movf	parse_humidity_calib_data@reg_data,w
 18989  15E2  3E04               	addlw	4
 18990  15E3  0086               	movwf	6
 18991  15E4  0187               	clrf	7
 18992  15E5  0801               	movf	1,w
 18993  15E6  390F               	andlw	15
 18994  15E7  00F1               	movwf	??_parse_humidity_calib_data
 18995  15E8  01F2               	clrf	??_parse_humidity_calib_data+1
 18996  15E9  0871               	movf	??_parse_humidity_calib_data,w
 18997  15EA  00F4               	movwf	parse_humidity_calib_data@dig_H4_lsb
 18998  15EB  0872               	movf	??_parse_humidity_calib_data+1,w
 18999  15EC  00F5               	movwf	parse_humidity_calib_data@dig_H4_lsb+1
 19000                           
 19001                           ;BME280_driver/bme280.c: 1393:     calib_data->dig_H4 = dig_H4_msb | dig_H4_lsb;
 19002  15ED  0874               	movf	parse_humidity_calib_data@dig_H4_lsb,w
 19003  15EE  0476               	iorwf	parse_humidity_calib_data@dig_H4_msb,w
 19004  15EF  00F1               	movwf	??_parse_humidity_calib_data
 19005  15F0  0875               	movf	parse_humidity_calib_data@dig_H4_lsb+1,w
 19006  15F1  0477               	iorwf	parse_humidity_calib_data@dig_H4_msb+1,w
 19007  15F2  00F2               	movwf	??_parse_humidity_calib_data+1
 19008  15F3  087C               	movf	parse_humidity_calib_data@calib_data,w
 19009  15F4  3E1C               	addlw	28
 19010  15F5  0086               	movwf	6
 19011  15F6  3001               	movlw	1	; select bank2/3
 19012  15F7  0087               	movwf	7
 19013  15F8  0871               	movf	??_parse_humidity_calib_data,w
 19014  15F9  3FC0               	movwi [0]fsr1
 19015  15FA  0872               	movf	??_parse_humidity_calib_data+1,w
 19016  15FB  3FC1               	movwi [1]fsr1
 19017                           
 19018                           ;BME280_driver/bme280.c: 1394:     dig_H5_msb = (int16_t)(int8_t)reg_data[5] * 16;
 19019  15FC  087D               	movf	parse_humidity_calib_data@reg_data,w
 19020  15FD  3E05               	addlw	5
 19021  15FE  0086               	movwf	6
 19022  15FF  0187               	clrf	7
 19023  1600  0801               	movf	1,w
 19024  1601  00F1               	movwf	??_parse_humidity_calib_data
 19025  1602  01F2               	clrf	??_parse_humidity_calib_data+1
 19026  1603  1BF1               	btfsc	??_parse_humidity_calib_data,7
 19027  1604  03F2               	decf	??_parse_humidity_calib_data+1,f
 19028  1605  0EF1               	swapf	??_parse_humidity_calib_data,f
 19029  1606  0EF2               	swapf	??_parse_humidity_calib_data+1,f
 19030  1607  30F0               	movlw	240
 19031  1608  05F2               	andwf	??_parse_humidity_calib_data+1,f
 19032  1609  0871               	movf	??_parse_humidity_calib_data,w
 19033  160A  390F               	andlw	15
 19034  160B  04F2               	iorwf	??_parse_humidity_calib_data+1,f
 19035  160C  30F0               	movlw	240
 19036  160D  05F1               	andwf	??_parse_humidity_calib_data,f
 19037  160E  0871               	movf	??_parse_humidity_calib_data,w
 19038  160F  00FA               	movwf	parse_humidity_calib_data@dig_H5_msb
 19039  1610  0872               	movf	??_parse_humidity_calib_data+1,w
 19040  1611  00FB               	movwf	parse_humidity_calib_data@dig_H5_msb+1
 19041                           
 19042                           ;BME280_driver/bme280.c: 1395:     dig_H5_lsb = (int16_t)(reg_data[4] >> 4);
 19043  1612  087D               	movf	parse_humidity_calib_data@reg_data,w
 19044  1613  3E04               	addlw	4
 19045  1614  0086               	movwf	6
 19046  1615  0187               	clrf	7
 19047  1616  0801               	movf	1,w
 19048  1617  00F1               	movwf	??_parse_humidity_calib_data
 19049  1618  3004               	movlw	4
 19050  1619                     u2975:	
 19051  1619  36F1               	lsrf	??_parse_humidity_calib_data,f
 19052  161A  0B89               	decfsz	9,f
 19053  161B  2E19               	goto	u2975
 19054  161C  0871               	movf	??_parse_humidity_calib_data,w
 19055  161D  00F2               	movwf	??_parse_humidity_calib_data+1
 19056  161E  01F3               	clrf	??_parse_humidity_calib_data+2
 19057  161F  0872               	movf	??_parse_humidity_calib_data+1,w
 19058  1620  00F8               	movwf	parse_humidity_calib_data@dig_H5_lsb
 19059  1621  0873               	movf	??_parse_humidity_calib_data+2,w
 19060  1622  00F9               	movwf	parse_humidity_calib_data@dig_H5_lsb+1
 19061                           
 19062                           ;BME280_driver/bme280.c: 1396:     calib_data->dig_H5 = dig_H5_msb | dig_H5_lsb;
 19063  1623  0878               	movf	parse_humidity_calib_data@dig_H5_lsb,w
 19064  1624  047A               	iorwf	parse_humidity_calib_data@dig_H5_msb,w
 19065  1625  00F1               	movwf	??_parse_humidity_calib_data
 19066  1626  0879               	movf	parse_humidity_calib_data@dig_H5_lsb+1,w
 19067  1627  047B               	iorwf	parse_humidity_calib_data@dig_H5_msb+1,w
 19068  1628  00F2               	movwf	??_parse_humidity_calib_data+1
 19069  1629  087C               	movf	parse_humidity_calib_data@calib_data,w
 19070  162A  3E1E               	addlw	30
 19071  162B  0086               	movwf	6
 19072  162C  3001               	movlw	1	; select bank2/3
 19073  162D  0087               	movwf	7
 19074  162E  0871               	movf	??_parse_humidity_calib_data,w
 19075  162F  3FC0               	movwi [0]fsr1
 19076  1630  0872               	movf	??_parse_humidity_calib_data+1,w
 19077  1631  3FC1               	movwi [1]fsr1
 19078                           
 19079                           ;BME280_driver/bme280.c: 1397:     calib_data->dig_H6 = (int8_t)reg_data[6];
 19080  1632  087D               	movf	parse_humidity_calib_data@reg_data,w
 19081  1633  3E06               	addlw	6
 19082  1634  0086               	movwf	6
 19083  1635  0187               	clrf	7
 19084  1636  0801               	movf	1,w
 19085  1637  00F1               	movwf	??_parse_humidity_calib_data
 19086  1638  087C               	movf	parse_humidity_calib_data@calib_data,w
 19087  1639  3E20               	addlw	32
 19088  163A  0086               	movwf	6
 19089  163B  3001               	movlw	1	; select bank2/3
 19090  163C  0087               	movwf	7
 19091  163D  0871               	movf	??_parse_humidity_calib_data,w
 19092  163E  0081               	movwf	1
 19093  163F  0008               	return
 19094  1640                     __end_of_parse_humidity_calib_data:	
 19095                           
 19096                           	psect	text69
 19097  1C28                     __ptext69:	
 19098 ;; *************** function _bme280_get_regs *****************
 19099 ;; Defined at:
 19100 ;;		line 409 in file "BME280_driver/bme280.c"
 19101 ;; Parameters:    Size  Location     Type
 19102 ;;  reg_addr        1    wreg     unsigned char 
 19103 ;;  reg_data        1   23[BANK0 ] PTR unsigned char 
 19104 ;;		 -> get_calib_data@calib_data(26), put_device_to_sleep@reg_data(4), write_power_mode@sensor_mode_reg_val(1), set_fil
      +ter_standby_settings@reg_data(1), 
 19105 ;;		 -> set_osr_press_temp_settings@reg_data(1), set_osr_humidity_settings@ctrl_meas(1), bme280_get_sensor_data@reg_data
      +(8), bme280_set_sensor_mode@last_set_mode(1), 
 19106 ;;		 -> bme280_get_sensor_settings@reg_data(4), bme280_set_sensor_settings@sensor_mode(1), bme280_init@chip_id(1), 
 19107 ;;  len             2   24[BANK0 ] unsigned short 
 19108 ;;  dev             1   26[BANK0 ] PTR const struct bme280_
 19109 ;;		 -> EnvSensor(51), 
 19110 ;; Auto vars:     Size  Location     Type
 19111 ;;  reg_addr        1   30[BANK0 ] unsigned char 
 19112 ;;  rslt            1   31[BANK0 ] char 
 19113 ;; Return value:  Size  Location     Type
 19114 ;;                  1    wreg      char 
 19115 ;; Registers used:
 19116 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19117 ;; Tracked objects:
 19118 ;;		On entry : 0/0
 19119 ;;		On exit  : 0/0
 19120 ;;		Unchanged: 0/0
 19121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19122 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19123 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19124 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19125 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19126 ;;Total ram usage:        9 bytes
 19127 ;; Hardware stack levels used:    1
 19128 ;; Hardware stack levels required when called:   10
 19129 ;; This function calls:
 19130 ;;		_ReadEnvSensor
 19131 ;;		_null_ptr_check
 19132 ;; This function is called by:
 19133 ;;		_bme280_init
 19134 ;;		_bme280_get_sensor_mode
 19135 ;;		_bme280_get_sensor_data
 19136 ;;		_set_osr_humidity_settings
 19137 ;;		_set_osr_press_temp_settings
 19138 ;;		_set_filter_standby_settings
 19139 ;;		_write_power_mode
 19140 ;;		_put_device_to_sleep
 19141 ;;		_get_calib_data
 19142 ;;		_bme280_get_sensor_settings
 19143 ;; This function uses a non-reentrant model
 19144 ;;
 19145                           
 19146                           
 19147                           ;psect for function _bme280_get_regs
 19148  1C28                     _bme280_get_regs:	
 19149                           
 19150                           ;incstack = 0
 19151                           ; Regs used in _bme280_get_regs: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 19152                           ;bme280_get_regs@reg_addr stored from wreg
 19153  1C28  0140               	movlb	0	; select bank0
 19154  1C29  00BE               	movwf	bme280_get_regs@reg_addr
 19155                           
 19156                           ;BME280_driver/bme280.c: 409: int8_t bme280_get_regs(uint8_t reg_addr, uint8_t *reg_data
      +                          , uint16_t len, const struct bme280_dev *dev);BME280_driver/bme280.c: 410: {;BME280_driv
      +                          er/bme280.c: 411:     int8_t rslt;;BME280_driver/bme280.c: 414:     rslt = null_ptr_chec
      +                          k(dev);
 19157  1C2A  083A               	movf	bme280_get_regs@dev,w
 19158  1C2B  3198  2008  319C   	fcall	_null_ptr_check
 19159  1C2E  0140               	movlb	0	; select bank0
 19160  1C2F  00BB               	movwf	??_bme280_get_regs
 19161  1C30  083B               	movf	??_bme280_get_regs,w
 19162  1C31  00BF               	movwf	bme280_get_regs@rslt
 19163                           
 19164                           ;BME280_driver/bme280.c: 417:     if (rslt == 0)
 19165  1C32  083F               	movf	bme280_get_regs@rslt,w
 19166  1C33  1D03               	btfss	3,2
 19167  1C34  2C6A               	goto	l65
 19168                           
 19169                           ;BME280_driver/bme280.c: 418:     {;BME280_driver/bme280.c: 420:         if (dev->intf !
      +                          = BME280_I2C_INTF)
 19170  1C35  083A               	movf	bme280_get_regs@dev,w
 19171  1C36  3E02               	addlw	2
 19172  1C37  0086               	movwf	6
 19173  1C38  3001               	movlw	1	; select bank2/3
 19174  1C39  0087               	movwf	7
 19175  1C3A  0301               	decf	1,w
 19176  1C3B  1903               	btfsc	3,2
 19177  1C3C  2C42               	goto	l5230
 19178                           
 19179                           ;BME280_driver/bme280.c: 421:         {;BME280_driver/bme280.c: 422:             reg_add
      +                          r = reg_addr | 0x80;
 19180  1C3D  083E               	movf	bme280_get_regs@reg_addr,w
 19181  1C3E  3880               	iorlw	128
 19182  1C3F  00BB               	movwf	??_bme280_get_regs
 19183  1C40  083B               	movf	??_bme280_get_regs,w
 19184  1C41  00BE               	movwf	bme280_get_regs@reg_addr
 19185  1C42                     l5230:	
 19186                           
 19187                           ;BME280_driver/bme280.c: 426:         rslt = dev->read(dev->dev_id, reg_addr, reg_data, 
      +                          len);
 19188  1C42  083A               	movf	bme280_get_regs@dev,w
 19189  1C43  0086               	movwf	6
 19190  1C44  3001               	movlw	1	; select bank2/3
 19191  1C45  0087               	movwf	7
 19192  1C46  3001               	movlw	1	; select bank2/3
 19193  1C47  3F41               	moviw [1]fsr1
 19194  1C48  00AD               	movwf	ReadEnvSensor@dev_id
 19195  1C49  083E               	movf	bme280_get_regs@reg_addr,w
 19196  1C4A  00BB               	movwf	??_bme280_get_regs
 19197  1C4B  083B               	movf	??_bme280_get_regs,w
 19198  1C4C  00AE               	movwf	ReadEnvSensor@reg_addr
 19199  1C4D  0837               	movf	bme280_get_regs@reg_data,w
 19200  1C4E  00BC               	movwf	??_bme280_get_regs+1
 19201  1C4F  083C               	movf	??_bme280_get_regs+1,w
 19202  1C50  00AF               	movwf	ReadEnvSensor@reg_data
 19203  1C51  0839               	movf	bme280_get_regs@len+1,w
 19204  1C52  00B1               	movwf	ReadEnvSensor@len+1
 19205  1C53  0838               	movf	bme280_get_regs@len,w
 19206  1C54  00B0               	movwf	ReadEnvSensor@len
 19207  1C55  083A               	movf	bme280_get_regs@dev,w
 19208  1C56  3E03               	addlw	3
 19209  1C57  0086               	movwf	6
 19210  1C58  3001               	movlw	1	; select bank2/3
 19211  1C59  0087               	movwf	7
 19212  1C5A  3F41               	moviw [1]fsr1
 19213  1C5B  008A               	movwf	10
 19214  1C5C  3F40               	moviw [0]fsr1
 19215  1C5D  000A               	callw
 19216  1C5E  319C               	pagesel	$
 19217  1C5F  0140               	movlb	0	; select bank0
 19218  1C60  00BD               	movwf	??_bme280_get_regs+2
 19219  1C61  083D               	movf	??_bme280_get_regs+2,w
 19220  1C62  00BF               	movwf	bme280_get_regs@rslt
 19221                           
 19222                           ;BME280_driver/bme280.c: 429:         if (rslt != 0)
 19223  1C63  083F               	movf	bme280_get_regs@rslt,w
 19224  1C64  1903               	btfsc	3,2
 19225  1C65  2C6A               	goto	l65
 19226                           
 19227                           ;BME280_driver/bme280.c: 430:         {;BME280_driver/bme280.c: 431:             rslt = 
      +                          -4;
 19228  1C66  30FC               	movlw	252
 19229  1C67  00BB               	movwf	??_bme280_get_regs
 19230  1C68  083B               	movf	??_bme280_get_regs,w
 19231  1C69  00BF               	movwf	bme280_get_regs@rslt
 19232  1C6A                     l65:	
 19233                           ;BME280_driver/bme280.c: 433:     }
 19234                           
 19235                           
 19236                           ;BME280_driver/bme280.c: 435:     return rslt;
 19237  1C6A  083F               	movf	bme280_get_regs@rslt,w
 19238  1C6B  0008               	return
 19239  1C6C                     __end_of_bme280_get_regs:	
 19240                           
 19241                           	psect	text70
 19242  1E68                     __ptext70:	
 19243 ;; *************** function _ReadEnvSensor *****************
 19244 ;; Defined at:
 19245 ;;		line 126 in file "bme280_i2c.c"
 19246 ;; Parameters:    Size  Location     Type
 19247 ;;  dev_id          1   13[BANK0 ] unsigned char 
 19248 ;;  reg_addr        1   14[BANK0 ] unsigned char 
 19249 ;;  reg_data        1   15[BANK0 ] PTR unsigned char 
 19250 ;;		 -> get_calib_data@calib_data(26), put_device_to_sleep@reg_data(4), write_power_mode@sensor_mode_reg_val(1), set_fil
      +ter_standby_settings@reg_data(1), 
 19251 ;;		 -> set_osr_press_temp_settings@reg_data(1), set_osr_humidity_settings@ctrl_meas(1), bme280_get_sensor_data@reg_data
      +(8), bme280_set_sensor_mode@last_set_mode(1), 
 19252 ;;		 -> bme280_get_sensor_settings@reg_data(4), bme280_set_sensor_settings@sensor_mode(1), bme280_init@chip_id(1), 
 19253 ;;  len             2   16[BANK0 ] unsigned short 
 19254 ;; Auto vars:     Size  Location     Type
 19255 ;;  i               2   21[BANK0 ] int 
 19256 ;;  rslt            1   20[BANK0 ] char 
 19257 ;; Return value:  Size  Location     Type
 19258 ;;                  1    wreg      char 
 19259 ;; Registers used:
 19260 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19261 ;; Tracked objects:
 19262 ;;		On entry : 0/0
 19263 ;;		On exit  : 0/0
 19264 ;;		Unchanged: 0/0
 19265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19266 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19267 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19268 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19269 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19270 ;;Total ram usage:       10 bytes
 19271 ;; Hardware stack levels used:    1
 19272 ;; Hardware stack levels required when called:    9
 19273 ;; This function calls:
 19274 ;;		_I2C_ReadByte
 19275 ;;		_I2C_Stop
 19276 ;;		_I2C_Wait_SSPIF
 19277 ;;		_I2C_WriteByte
 19278 ;; This function is called by:
 19279 ;;		_BME280_Init
 19280 ;;		_bme280_get_regs
 19281 ;; This function uses a non-reentrant model
 19282 ;;
 19283                           
 19284                           
 19285                           ;psect for function _ReadEnvSensor
 19286  1E68                     _ReadEnvSensor:	
 19287                           
 19288                           ;bme280_i2c.c: 126: int8_t ReadEnvSensor(uint8_t dev_id, uint8_t reg_addr, uint8_t *reg_
      +                          data, uint16_t len);bme280_i2c.c: 127: {;bme280_i2c.c: 128:     int8_t rslt = 0;
 19289                           
 19290                           ;incstack = 0
 19291                           ; Regs used in _ReadEnvSensor: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 19292  1E68  0140               	movlb	0	; select bank0
 19293  1E69  01B4               	clrf	ReadEnvSensor@rslt
 19294                           
 19295                           ;bme280_i2c.c: 130:     PIR3bits.SSP1IF = 0;
 19296  1E6A  014E               	movlb	14	; select bank14
 19297  1E6B  100F               	bcf	15,0	;volatile
 19298                           
 19299                           ;bme280_i2c.c: 133:     SSP1CON2bits.SEN = 1;
 19300  1E6C  0143               	movlb	3	; select bank3
 19301  1E6D  1411               	bsf	17,0	;volatile
 19302                           
 19303                           ;bme280_i2c.c: 134:     I2C_Wait_SSPIF();
 19304  1E6E  319D  253D  319E   	fcall	_I2C_Wait_SSPIF
 19305                           
 19306                           ;bme280_i2c.c: 137:     I2C_WriteByte(dev_id << 1);
 19307  1E71  0140               	movlb	0	; select bank0
 19308  1E72  352D               	lslf	ReadEnvSensor@dev_id,w
 19309  1E73  31A6  26B8  319E   	fcall	_I2C_WriteByte
 19310                           
 19311                           ;bme280_i2c.c: 140:     I2C_WriteByte(reg_addr);
 19312  1E76  0140               	movlb	0	; select bank0
 19313  1E77  082E               	movf	ReadEnvSensor@reg_addr,w
 19314  1E78  31A6  26B8  319E   	fcall	_I2C_WriteByte
 19315                           
 19316                           ;bme280_i2c.c: 143:     SSP1CON2bits.RSEN = 1;
 19317  1E7B  0143               	movlb	3	; select bank3
 19318  1E7C  1491               	bsf	17,1	;volatile
 19319                           
 19320                           ;bme280_i2c.c: 144:     I2C_Wait_SSPIF();
 19321  1E7D  319D  253D  319E   	fcall	_I2C_Wait_SSPIF
 19322                           
 19323                           ;bme280_i2c.c: 147:     I2C_WriteByte((dev_id << 1) | 0x01);
 19324  1E80  1403               	setc
 19325  1E81  0140               	movlb	0	; select bank0
 19326  1E82  0D2D               	rlf	ReadEnvSensor@dev_id,w
 19327  1E83  31A6  26B8  319E   	fcall	_I2C_WriteByte
 19328                           
 19329                           ;bme280_i2c.c: 150:     for (int i = 0; i < len; i++)
 19330  1E86  0140               	movlb	0	; select bank0
 19331  1E87  01B5               	clrf	ReadEnvSensor@i
 19332  1E88  01B6               	clrf	ReadEnvSensor@i+1
 19333  1E89                     l5188:	
 19334  1E89  0831               	movf	ReadEnvSensor@len+1,w
 19335  1E8A  0236               	subwf	ReadEnvSensor@i+1,w
 19336  1E8B  1D03               	skipz
 19337  1E8C  2E8F               	goto	u5135
 19338  1E8D  0830               	movf	ReadEnvSensor@len,w
 19339  1E8E  0235               	subwf	ReadEnvSensor@i,w
 19340  1E8F                     u5135:	
 19341  1E8F  1803               	btfsc	3,0
 19342  1E90  2EB4               	goto	l5190
 19343                           
 19344                           ;bme280_i2c.c: 151:     {;bme280_i2c.c: 152:         if (i == len - 1)
 19345  1E91  0830               	movf	ReadEnvSensor@len,w
 19346  1E92  3EFF               	addlw	255
 19347  1E93  00B2               	movwf	??_ReadEnvSensor
 19348  1E94  30FF               	movlw	255
 19349  1E95  3D31               	addwfc	ReadEnvSensor@len+1,w
 19350  1E96  00B3               	movwf	??_ReadEnvSensor+1
 19351  1E97  0836               	movf	ReadEnvSensor@i+1,w
 19352  1E98  0633               	xorwf	??_ReadEnvSensor+1,w
 19353  1E99  1D03               	skipz
 19354  1E9A  2E9D               	goto	u5125
 19355  1E9B  0835               	movf	ReadEnvSensor@i,w
 19356  1E9C  0632               	xorwf	??_ReadEnvSensor,w
 19357  1E9D                     u5125:	
 19358  1E9D  1D03               	skipz
 19359  1E9E  2EA1               	goto	l5184
 19360                           
 19361                           ;bme280_i2c.c: 153:         {;bme280_i2c.c: 154:             reg_data[i] = I2C_ReadByte(
      +                          1);
 19362  1E9F  3001               	movlw	1
 19363  1EA0  2EA2               	goto	L10
 19364  1EA1                     l5184:	
 19365                           ;bme280_i2c.c: 155:         }
 19366                           
 19367                           
 19368                           ;bme280_i2c.c: 157:         {;bme280_i2c.c: 158:             reg_data[i]=I2C_ReadByte(0)
      +                          ;
 19369  1EA1  3000               	movlw	0
 19370  1EA2                     L10:	
 19371  1EA2  31A7  2739  319E   	fcall	_I2C_ReadByte
 19372  1EA5  0140               	movlb	0	; select bank0
 19373  1EA6  00B2               	movwf	??_ReadEnvSensor
 19374  1EA7  0835               	movf	ReadEnvSensor@i,w
 19375  1EA8  072F               	addwf	ReadEnvSensor@reg_data,w
 19376  1EA9  00B3               	movwf	??_ReadEnvSensor+1
 19377  1EAA  0833               	movf	??_ReadEnvSensor+1,w
 19378  1EAB  0086               	movwf	6
 19379  1EAC  0187               	clrf	7
 19380  1EAD  0832               	movf	??_ReadEnvSensor,w
 19381  1EAE  0081               	movwf	1
 19382                           
 19383                           ;bme280_i2c.c: 160:     }
 19384  1EAF  3001               	movlw	1
 19385  1EB0  07B5               	addwf	ReadEnvSensor@i,f
 19386  1EB1  3000               	movlw	0
 19387  1EB2  3DB6               	addwfc	ReadEnvSensor@i+1,f
 19388  1EB3  2E89               	goto	l5188
 19389  1EB4                     l5190:	
 19390                           
 19391                           ;bme280_i2c.c: 163:     I2C_Stop();
 19392  1EB4  31A6  2641         	fcall	_I2C_Stop
 19393                           
 19394                           ;bme280_i2c.c: 165:     return rslt;
 19395  1EB6  0140               	movlb	0	; select bank0
 19396  1EB7  0834               	movf	ReadEnvSensor@rslt,w
 19397  1EB8  0008               	return
 19398  1EB9                     __end_of_ReadEnvSensor:	
 19399                           
 19400                           	psect	text71
 19401  2739                     __ptext71:	
 19402 ;; *************** function _I2C_ReadByte *****************
 19403 ;; Defined at:
 19404 ;;		line 52 in file "bme280_i2c.c"
 19405 ;; Parameters:    Size  Location     Type
 19406 ;;  ackbit          1    wreg     unsigned char 
 19407 ;; Auto vars:     Size  Location     Type
 19408 ;;  ackbit          1   11[BANK0 ] unsigned char 
 19409 ;;  rcvdata         1   12[BANK0 ] unsigned char 
 19410 ;; Return value:  Size  Location     Type
 19411 ;;                  1    wreg      unsigned char 
 19412 ;; Registers used:
 19413 ;;		wreg, status,2, status,0, pclath, cstack
 19414 ;; Tracked objects:
 19415 ;;		On entry : 0/0
 19416 ;;		On exit  : 0/0
 19417 ;;		Unchanged: 0/0
 19418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19420 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19421 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19422 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19423 ;;Total ram usage:        3 bytes
 19424 ;; Hardware stack levels used:    1
 19425 ;; Hardware stack levels required when called:    6
 19426 ;; This function calls:
 19427 ;;		_I2C_Wait_SSPIF
 19428 ;; This function is called by:
 19429 ;;		_ReadEnvSensor
 19430 ;; This function uses a non-reentrant model
 19431 ;;
 19432                           
 19433                           
 19434                           ;psect for function _I2C_ReadByte
 19435  2739                     _I2C_ReadByte:	
 19436                           
 19437                           ;incstack = 0
 19438                           ; Regs used in _I2C_ReadByte: [wreg+status,2+status,0+pclath+cstack]
 19439                           ;I2C_ReadByte@ackbit stored from wreg
 19440  2739  0140               	movlb	0	; select bank0
 19441  273A  00AB               	movwf	I2C_ReadByte@ackbit
 19442                           
 19443                           ;bme280_i2c.c: 52: uint8_t I2C_ReadByte(uint8_t ackbit);bme280_i2c.c: 53: {;bme280_i2c.c
      +                          : 54:     uint8_t rcvdata;;bme280_i2c.c: 56:     SSP1CON2bits.RCEN = 1;
 19444  273B  0143               	movlb	3	; select bank3
 19445  273C  1591               	bsf	17,3	;volatile
 19446                           
 19447                           ;bme280_i2c.c: 57:     I2C_Wait_SSPIF();
 19448  273D  319D  253D  31A7   	fcall	_I2C_Wait_SSPIF
 19449                           
 19450                           ;bme280_i2c.c: 59:     rcvdata = SSP1BUF;
 19451  2740  0143               	movlb	3	; select bank3
 19452  2741  080C               	movf	12,w	;volatile
 19453  2742  00FD               	movwf	??_I2C_ReadByte
 19454  2743  087D               	movf	??_I2C_ReadByte,w
 19455  2744  0140               	movlb	0	; select bank0
 19456  2745  00AC               	movwf	I2C_ReadByte@rcvdata
 19457                           
 19458                           ;bme280_i2c.c: 62:     SSP1CON2bits.ACKDT = ackbit;
 19459  2746  0C2B               	rrf	I2C_ReadByte@ackbit,w
 19460  2747  0143               	movlb	3	; select bank3
 19461  2748  1C03               	skipc
 19462  2749  1291               	bcf	17,5	;volatile
 19463  274A  1803               	skipnc
 19464  274B  1691               	bsf	17,5	;volatile
 19465                           
 19466                           ;bme280_i2c.c: 63:     SSP1CON2bits.ACKEN = 1;
 19467  274C  1611               	bsf	17,4	;volatile
 19468                           
 19469                           ;bme280_i2c.c: 64:     I2C_Wait_SSPIF();
 19470  274D  319D  253D         	fcall	_I2C_Wait_SSPIF
 19471                           
 19472                           ;bme280_i2c.c: 66:     return (rcvdata);
 19473  274F  0140               	movlb	0	; select bank0
 19474  2750  082C               	movf	I2C_ReadByte@rcvdata,w
 19475  2751  0008               	return
 19476  2752                     __end_of_I2C_ReadByte:	
 19477                           
 19478                           	psect	text72
 19479  1AEB                     __ptext72:	
 19480 ;; *************** function _bme280_soft_reset *****************
 19481 ;; Defined at:
 19482 ;;		line 631 in file "BME280_driver/bme280.c"
 19483 ;; Parameters:    Size  Location     Type
 19484 ;;  dev             1    wreg     PTR const struct bme280_
 19485 ;;		 -> EnvSensor(51), 
 19486 ;; Auto vars:     Size  Location     Type
 19487 ;;  dev             1   57[BANK0 ] PTR const struct bme280_
 19488 ;;		 -> EnvSensor(51), 
 19489 ;;  reg_addr        1   56[BANK0 ] unsigned char 
 19490 ;;  rslt            1   55[BANK0 ] char 
 19491 ;;  soft_rst_cmd    1   54[BANK0 ] unsigned char 
 19492 ;; Return value:  Size  Location     Type
 19493 ;;                  1    wreg      char 
 19494 ;; Registers used:
 19495 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19496 ;; Tracked objects:
 19497 ;;		On entry : 0/0
 19498 ;;		On exit  : 0/0
 19499 ;;		Unchanged: 0/0
 19500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19502 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19503 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19504 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19505 ;;Total ram usage:        7 bytes
 19506 ;; Hardware stack levels used:    1
 19507 ;; Hardware stack levels required when called:   11
 19508 ;; This function calls:
 19509 ;;		_Sleep
 19510 ;;		_bme280_set_regs
 19511 ;;		_null_ptr_check
 19512 ;; This function is called by:
 19513 ;;		_bme280_init
 19514 ;;		_put_device_to_sleep
 19515 ;; This function uses a non-reentrant model
 19516 ;;
 19517                           
 19518                           
 19519                           ;psect for function _bme280_soft_reset
 19520  1AEB                     _bme280_soft_reset:	
 19521                           
 19522                           ;incstack = 0
 19523                           ; Regs used in _bme280_soft_reset: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 19524                           ;bme280_soft_reset@dev stored from wreg
 19525  1AEB  0140               	movlb	0	; select bank0
 19526  1AEC  00D9               	movwf	bme280_soft_reset@dev
 19527                           
 19528                           ;BME280_driver/bme280.c: 631: int8_t bme280_soft_reset(const struct bme280_dev *dev);BME
      +                          280_driver/bme280.c: 632: {;BME280_driver/bme280.c: 633:     int8_t rslt;;BME280_driver/
      +                          bme280.c: 634:     uint8_t reg_addr = 0xE0;
 19529  1AED  30E0               	movlw	224
 19530  1AEE  00D3               	movwf	??_bme280_soft_reset
 19531  1AEF  0853               	movf	??_bme280_soft_reset,w
 19532  1AF0  00D8               	movwf	bme280_soft_reset@reg_addr
 19533                           
 19534                           ;BME280_driver/bme280.c: 637:     uint8_t soft_rst_cmd = 0xB6;
 19535  1AF1  30B6               	movlw	182
 19536  1AF2  00D3               	movwf	??_bme280_soft_reset
 19537  1AF3  0853               	movf	??_bme280_soft_reset,w
 19538  1AF4  00D6               	movwf	bme280_soft_reset@soft_rst_cmd
 19539                           
 19540                           ;BME280_driver/bme280.c: 640:     rslt = null_ptr_check(dev);
 19541  1AF5  0859               	movf	bme280_soft_reset@dev,w
 19542  1AF6  3198  2008  319A   	fcall	_null_ptr_check
 19543  1AF9  0140               	movlb	0	; select bank0
 19544  1AFA  00D3               	movwf	??_bme280_soft_reset
 19545  1AFB  0853               	movf	??_bme280_soft_reset,w
 19546  1AFC  00D7               	movwf	bme280_soft_reset@rslt
 19547                           
 19548                           ;BME280_driver/bme280.c: 643:     if (rslt == 0)
 19549  1AFD  0857               	movf	bme280_soft_reset@rslt,w
 19550  1AFE  1D03               	btfss	3,2
 19551  1AFF  2B24               	goto	l5370
 19552                           
 19553                           ;BME280_driver/bme280.c: 644:     {;BME280_driver/bme280.c: 646:         rslt = bme280_s
      +                          et_regs(&reg_addr, &soft_rst_cmd, 1, dev);
 19554  1B00  3056               	movlw	(low (bme280_soft_reset@soft_rst_cmd| 0))& (0+255)
 19555  1B01  00D3               	movwf	??_bme280_soft_reset
 19556  1B02  0853               	movf	??_bme280_soft_reset,w
 19557  1B03  00B4               	movwf	bme280_set_regs@reg_data
 19558  1B04  01B5               	clrf	bme280_set_regs@len
 19559  1B05  0AB5               	incf	bme280_set_regs@len,f
 19560  1B06  0859               	movf	bme280_soft_reset@dev,w
 19561  1B07  00D4               	movwf	??_bme280_soft_reset+1
 19562  1B08  0854               	movf	??_bme280_soft_reset+1,w
 19563  1B09  00B6               	movwf	bme280_set_regs@dev
 19564  1B0A  3058               	movlw	(low (bme280_soft_reset@reg_addr| 0))& (0+255)
 19565  1B0B  3196  2640  319A   	fcall	_bme280_set_regs
 19566  1B0E  0140               	movlb	0	; select bank0
 19567  1B0F  00D5               	movwf	??_bme280_soft_reset+2
 19568  1B10  0855               	movf	??_bme280_soft_reset+2,w
 19569  1B11  00D7               	movwf	bme280_soft_reset@rslt
 19570                           
 19571                           ;BME280_driver/bme280.c: 649:         dev->delay_ms(2);
 19572  1B12  3000               	movlw	0
 19573  1B13  00F3               	movwf	Sleep@ms+3
 19574  1B14  3000               	movlw	0
 19575  1B15  00F2               	movwf	Sleep@ms+2
 19576  1B16  3000               	movlw	0
 19577  1B17  00F1               	movwf	Sleep@ms+1
 19578  1B18  3002               	movlw	2
 19579  1B19  00F0               	movwf	Sleep@ms
 19580  1B1A  0859               	movf	bme280_soft_reset@dev,w
 19581  1B1B  3E07               	addlw	7
 19582  1B1C  0086               	movwf	6
 19583  1B1D  3001               	movlw	1	; select bank2/3
 19584  1B1E  0087               	movwf	7
 19585  1B1F  3F41               	moviw [1]fsr1
 19586  1B20  008A               	movwf	10
 19587  1B21  3F40               	moviw [0]fsr1
 19588  1B22  000A               	callw
 19589  1B23  319A               	pagesel	$
 19590  1B24                     l5370:	
 19591                           
 19592                           ;BME280_driver/bme280.c: 652:     return rslt;
 19593  1B24  0140               	movlb	0	; select bank0
 19594  1B25  0857               	movf	bme280_soft_reset@rslt,w
 19595  1B26  0008               	return
 19596  1B27                     __end_of_bme280_soft_reset:	
 19597                           
 19598                           	psect	text73
 19599  1640                     __ptext73:	
 19600 ;; *************** function _bme280_set_regs *****************
 19601 ;; Defined at:
 19602 ;;		line 442 in file "BME280_driver/bme280.c"
 19603 ;; Parameters:    Size  Location     Type
 19604 ;;  reg_addr        1    wreg     PTR unsigned char 
 19605 ;;		 -> write_power_mode@reg_addr(1), set_filter_standby_settings@reg_addr(1), set_osr_press_temp_settings@reg_addr(1), 
      +set_osr_humidity_settings@reg_addr(1), 
 19606 ;;		 -> bme280_soft_reset@reg_addr(1), 
 19607 ;;  reg_data        1   20[BANK0 ] PTR const unsigned char 
 19608 ;;		 -> write_power_mode@sensor_mode_reg_val(1), set_filter_standby_settings@reg_data(1), set_osr_press_temp_settings@re
      +g_data(1), set_osr_humidity_settings@ctrl_meas(1), 
 19609 ;;		 -> set_osr_humidity_settings@ctrl_hum(1), bme280_soft_reset@soft_rst_cmd(1), 
 19610 ;;  len             1   21[BANK0 ] unsigned char 
 19611 ;;  dev             1   22[BANK0 ] PTR const struct bme280_
 19612 ;;		 -> EnvSensor(51), 
 19613 ;; Auto vars:     Size  Location     Type
 19614 ;;  reg_addr        1   50[BANK0 ] PTR unsigned char 
 19615 ;;		 -> write_power_mode@reg_addr(1), set_filter_standby_settings@reg_addr(1), set_osr_press_temp_settings@reg_addr(1), 
      +set_osr_humidity_settings@reg_addr(1), 
 19616 ;;		 -> bme280_soft_reset@reg_addr(1), 
 19617 ;;  temp_buff      20   26[BANK0 ] unsigned char [20]
 19618 ;;  temp_len        2   46[BANK0 ] unsigned short 
 19619 ;;  rslt            1   49[BANK0 ] char 
 19620 ;;  reg_addr_cnt    1   48[BANK0 ] unsigned char 
 19621 ;; Return value:  Size  Location     Type
 19622 ;;                  1    wreg      char 
 19623 ;; Registers used:
 19624 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19625 ;; Tracked objects:
 19626 ;;		On entry : 0/0
 19627 ;;		On exit  : 0/0
 19628 ;;		Unchanged: 0/0
 19629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19630 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19631 ;;      Locals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19632 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19633 ;;      Totals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19634 ;;Total ram usage:       31 bytes
 19635 ;; Hardware stack levels used:    1
 19636 ;; Hardware stack levels required when called:   10
 19637 ;; This function calls:
 19638 ;;		_WriteEnvSensor
 19639 ;;		_interleave_reg_addr
 19640 ;;		_null_ptr_check
 19641 ;; This function is called by:
 19642 ;;		_bme280_soft_reset
 19643 ;;		_set_osr_humidity_settings
 19644 ;;		_set_osr_press_temp_settings
 19645 ;;		_set_filter_standby_settings
 19646 ;;		_write_power_mode
 19647 ;; This function uses a non-reentrant model
 19648 ;;
 19649                           
 19650                           
 19651                           ;psect for function _bme280_set_regs
 19652  1640                     _bme280_set_regs:	
 19653                           
 19654                           ;incstack = 0
 19655                           ; Regs used in _bme280_set_regs: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 19656                           ;bme280_set_regs@reg_addr stored from wreg
 19657  1640  0140               	movlb	0	; select bank0
 19658  1641  00D2               	movwf	bme280_set_regs@reg_addr
 19659                           
 19660                           ;BME280_driver/bme280.c: 442: int8_t bme280_set_regs(uint8_t *reg_addr, const uint8_t *r
      +                          eg_data, uint8_t len, const struct bme280_dev *dev);BME280_driver/bme280.c: 443: {;BME28
      +                          0_driver/bme280.c: 444:     int8_t rslt;;BME280_driver/bme280.c: 445:     uint8_t temp_b
      +                          uff[20];;BME280_driver/bme280.c: 447:     if (len > 10)
 19661  1642  300B               	movlw	11
 19662  1643  0235               	subwf	bme280_set_regs@len,w
 19663  1644  1C03               	skipc
 19664  1645  2E4A               	goto	l5242
 19665                           
 19666                           ;BME280_driver/bme280.c: 448:     {;BME280_driver/bme280.c: 449:         len = 10;
 19667  1646  300A               	movlw	10
 19668  1647  00B7               	movwf	??_bme280_set_regs
 19669  1648  0837               	movf	??_bme280_set_regs,w
 19670  1649  00B5               	movwf	bme280_set_regs@len
 19671  164A                     l5242:	
 19672                           
 19673                           ;BME280_driver/bme280.c: 451:     uint16_t temp_len;;BME280_driver/bme280.c: 452:     ui
      +                          nt8_t reg_addr_cnt;;BME280_driver/bme280.c: 455:     rslt = null_ptr_check(dev);
 19674  164A  0836               	movf	bme280_set_regs@dev,w
 19675  164B  3198  2008  3196   	fcall	_null_ptr_check
 19676  164E  0140               	movlb	0	; select bank0
 19677  164F  00B7               	movwf	??_bme280_set_regs
 19678  1650  0837               	movf	??_bme280_set_regs,w
 19679  1651  00D1               	movwf	bme280_set_regs@rslt
 19680                           
 19681                           ;BME280_driver/bme280.c: 458:     if ((rslt == 0) && (reg_addr != ((void*)0)) && (reg_da
      +                          ta != ((void*)0)))
 19682  1652  0851               	movf	bme280_set_regs@rslt,w
 19683  1653  1D03               	btfss	3,2
 19684  1654  2EDD               	goto	l72
 19685  1655  0852               	movf	bme280_set_regs@reg_addr,w
 19686  1656  1903               	btfsc	3,2
 19687  1657  2EDD               	goto	l72
 19688  1658  0834               	movf	bme280_set_regs@reg_data,w
 19689  1659  1903               	btfsc	3,2
 19690  165A  2EDD               	goto	l72
 19691                           
 19692                           ;BME280_driver/bme280.c: 459:     {;BME280_driver/bme280.c: 460:         if (len != 0)
 19693  165B  0835               	movf	bme280_set_regs@len,w
 19694  165C  1903               	btfsc	3,2
 19695  165D  2ED8               	goto	l5278
 19696                           
 19697                           ;BME280_driver/bme280.c: 461:         {;BME280_driver/bme280.c: 462:             temp_bu
      +                          ff[0] = reg_data[0];
 19698  165E  0834               	movf	bme280_set_regs@reg_data,w
 19699  165F  0086               	movwf	6
 19700  1660  0187               	clrf	7
 19701  1661  0801               	movf	1,w
 19702  1662  00B7               	movwf	??_bme280_set_regs
 19703  1663  0837               	movf	??_bme280_set_regs,w
 19704  1664  00BA               	movwf	bme280_set_regs@temp_buff
 19705                           
 19706                           ;BME280_driver/bme280.c: 465:             if (dev->intf != BME280_I2C_INTF)
 19707  1665  0836               	movf	bme280_set_regs@dev,w
 19708  1666  3E02               	addlw	2
 19709  1667  0086               	movwf	6
 19710  1668  3001               	movlw	1	; select bank2/3
 19711  1669  0087               	movwf	7
 19712  166A  0301               	decf	1,w
 19713  166B  1903               	btfsc	3,2
 19714  166C  2E88               	goto	l5264
 19715                           
 19716                           ;BME280_driver/bme280.c: 466:             {;BME280_driver/bme280.c: 467:                
      +                           for (reg_addr_cnt = 0; reg_addr_cnt < len; reg_addr_cnt++)
 19717  166D  01D0               	clrf	bme280_set_regs@reg_addr_cnt
 19718  166E                     l5262:	
 19719  166E  0835               	movf	bme280_set_regs@len,w
 19720  166F  0250               	subwf	bme280_set_regs@reg_addr_cnt,w
 19721  1670  1803               	btfsc	3,0
 19722  1671  2E88               	goto	l5264
 19723                           
 19724                           ;BME280_driver/bme280.c: 468:                 {;BME280_driver/bme280.c: 469:            
      +                                   reg_addr[reg_addr_cnt] = reg_addr[reg_addr_cnt] & 0x7F;
 19725  1672  0850               	movf	bme280_set_regs@reg_addr_cnt,w
 19726  1673  0752               	addwf	bme280_set_regs@reg_addr,w
 19727  1674  00B7               	movwf	??_bme280_set_regs
 19728  1675  0837               	movf	??_bme280_set_regs,w
 19729  1676  0086               	movwf	6
 19730  1677  0187               	clrf	7
 19731  1678  0801               	movf	1,w
 19732  1679  397F               	andlw	127
 19733  167A  00B8               	movwf	??_bme280_set_regs+1
 19734  167B  0850               	movf	bme280_set_regs@reg_addr_cnt,w
 19735  167C  0752               	addwf	bme280_set_regs@reg_addr,w
 19736  167D  00B9               	movwf	??_bme280_set_regs+2
 19737  167E  0839               	movf	??_bme280_set_regs+2,w
 19738  167F  0086               	movwf	6
 19739  1680  0187               	clrf	7
 19740  1681  0838               	movf	??_bme280_set_regs+1,w
 19741  1682  0081               	movwf	1
 19742                           
 19743                           ;BME280_driver/bme280.c: 470:                 }
 19744  1683  3001               	movlw	1
 19745  1684  00B7               	movwf	??_bme280_set_regs
 19746  1685  0837               	movf	??_bme280_set_regs,w
 19747  1686  07D0               	addwf	bme280_set_regs@reg_addr_cnt,f
 19748  1687  2E6E               	goto	l5262
 19749  1688                     l5264:	
 19750                           
 19751                           ;BME280_driver/bme280.c: 474:             if (len > 1)
 19752  1688  3002               	movlw	2
 19753  1689  0235               	subwf	bme280_set_regs@len,w
 19754  168A  1C03               	skipc
 19755  168B  2EA8               	goto	l5270
 19756                           
 19757                           ;BME280_driver/bme280.c: 475:             {;BME280_driver/bme280.c: 479:                
      +                           interleave_reg_addr(reg_addr, temp_buff, reg_data, len);
 19758  168C  303A               	movlw	(low (bme280_set_regs@temp_buff| 0))& (0+255)
 19759  168D  00B7               	movwf	??_bme280_set_regs
 19760  168E  0837               	movf	??_bme280_set_regs,w
 19761  168F  00F0               	movwf	interleave_reg_addr@temp_buff
 19762  1690  0834               	movf	bme280_set_regs@reg_data,w
 19763  1691  00B8               	movwf	??_bme280_set_regs+1
 19764  1692  0838               	movf	??_bme280_set_regs+1,w
 19765  1693  00F1               	movwf	interleave_reg_addr@reg_data
 19766  1694  0835               	movf	bme280_set_regs@len,w
 19767  1695  00B9               	movwf	??_bme280_set_regs+2
 19768  1696  0839               	movf	??_bme280_set_regs+2,w
 19769  1697  00F2               	movwf	interleave_reg_addr@len
 19770  1698  0852               	movf	bme280_set_regs@reg_addr,w
 19771  1699  3199  21F2  3196   	fcall	_interleave_reg_addr
 19772                           
 19773                           ;BME280_driver/bme280.c: 480:                 temp_len = ((len * 2) - 1);
 19774  169C  0140               	movlb	0	; select bank0
 19775  169D  0835               	movf	bme280_set_regs@len,w
 19776  169E  00B7               	movwf	??_bme280_set_regs
 19777  169F  01B8               	clrf	??_bme280_set_regs+1
 19778  16A0  35B7               	lslf	??_bme280_set_regs,f
 19779  16A1  0DB8               	rlf	??_bme280_set_regs+1,f
 19780  16A2  0837               	movf	??_bme280_set_regs,w
 19781  16A3  3EFF               	addlw	255
 19782  16A4  00CE               	movwf	bme280_set_regs@temp_len
 19783  16A5  30FF               	movlw	255
 19784  16A6  3D38               	addwfc	??_bme280_set_regs+1,w
 19785  16A7  2EAE               	goto	L11
 19786  16A8                     l5270:	
 19787                           ;BME280_driver/bme280.c: 481:             }
 19788                           
 19789                           
 19790                           ;BME280_driver/bme280.c: 483:             {;BME280_driver/bme280.c: 484:                
      +                           temp_len = len;
 19791  16A8  0835               	movf	bme280_set_regs@len,w
 19792  16A9  00B7               	movwf	??_bme280_set_regs
 19793  16AA  01B8               	clrf	??_bme280_set_regs+1
 19794  16AB  0837               	movf	??_bme280_set_regs,w
 19795  16AC  00CE               	movwf	bme280_set_regs@temp_len
 19796  16AD  0838               	movf	??_bme280_set_regs+1,w
 19797  16AE                     L11:	
 19798  16AE  00CF               	movwf	bme280_set_regs@temp_len+1
 19799                           
 19800                           ;BME280_driver/bme280.c: 486:             rslt = dev->write(dev->dev_id, reg_addr[0], te
      +                          mp_buff, temp_len);
 19801  16AF  0836               	movf	bme280_set_regs@dev,w
 19802  16B0  0086               	movwf	6
 19803  16B1  3001               	movlw	1	; select bank2/3
 19804  16B2  0087               	movwf	7
 19805  16B3  3001               	movlw	1	; select bank2/3
 19806  16B4  3F41               	moviw [1]fsr1
 19807  16B5  00AB               	movwf	WriteEnvSensor@dev_id
 19808  16B6  0852               	movf	bme280_set_regs@reg_addr,w
 19809  16B7  0086               	movwf	6
 19810  16B8  0187               	clrf	7
 19811  16B9  0801               	movf	1,w
 19812  16BA  00B7               	movwf	??_bme280_set_regs
 19813  16BB  0837               	movf	??_bme280_set_regs,w
 19814  16BC  00AC               	movwf	WriteEnvSensor@reg_addr
 19815  16BD  303A               	movlw	(low (bme280_set_regs@temp_buff| 0))& (0+255)
 19816  16BE  00B8               	movwf	??_bme280_set_regs+1
 19817  16BF  0838               	movf	??_bme280_set_regs+1,w
 19818  16C0  00AD               	movwf	WriteEnvSensor@reg_data
 19819  16C1  084F               	movf	bme280_set_regs@temp_len+1,w
 19820  16C2  00AF               	movwf	WriteEnvSensor@len+1
 19821  16C3  084E               	movf	bme280_set_regs@temp_len,w
 19822  16C4  00AE               	movwf	WriteEnvSensor@len
 19823  16C5  0836               	movf	bme280_set_regs@dev,w
 19824  16C6  3E05               	addlw	5
 19825  16C7  0086               	movwf	6
 19826  16C8  3001               	movlw	1	; select bank2/3
 19827  16C9  0087               	movwf	7
 19828  16CA  3F41               	moviw [1]fsr1
 19829  16CB  008A               	movwf	10
 19830  16CC  3F40               	moviw [0]fsr1
 19831  16CD  000A               	callw
 19832  16CE  3196               	pagesel	$
 19833  16CF  0140               	movlb	0	; select bank0
 19834  16D0  00B9               	movwf	??_bme280_set_regs+2
 19835  16D1  0839               	movf	??_bme280_set_regs+2,w
 19836  16D2  00D1               	movwf	bme280_set_regs@rslt
 19837                           
 19838                           ;BME280_driver/bme280.c: 489:             if (rslt != 0)
 19839  16D3  0851               	movf	bme280_set_regs@rslt,w
 19840  16D4  1903               	btfsc	3,2
 19841  16D5  2EDF               	goto	l5280
 19842                           
 19843                           ;BME280_driver/bme280.c: 490:             {;BME280_driver/bme280.c: 491:                
      +                           rslt = -4;
 19844  16D6  30FC               	movlw	252
 19845  16D7  2ED9               	goto	L12
 19846  16D8                     l5278:	
 19847                           
 19848                           ;BME280_driver/bme280.c: 495:         {;BME280_driver/bme280.c: 496:             rslt = 
      +                          -3;
 19849  16D8  30FD               	movlw	253
 19850  16D9                     L12:	
 19851  16D9  00B7               	movwf	??_bme280_set_regs
 19852  16DA  0837               	movf	??_bme280_set_regs,w
 19853  16DB  00D1               	movwf	bme280_set_regs@rslt
 19854  16DC  2EDF               	goto	l5280
 19855  16DD                     l72:	
 19856                           ;BME280_driver/bme280.c: 499:     else
 19857                           
 19858                           
 19859                           ;BME280_driver/bme280.c: 500:     {;BME280_driver/bme280.c: 501:         rslt = -1;
 19860  16DD  01D1               	clrf	bme280_set_regs@rslt
 19861  16DE  03D1               	decf	bme280_set_regs@rslt,f
 19862  16DF                     l5280:	
 19863                           
 19864                           ;BME280_driver/bme280.c: 504:     return rslt;
 19865  16DF  0851               	movf	bme280_set_regs@rslt,w
 19866  16E0  0008               	return
 19867  16E1                     __end_of_bme280_set_regs:	
 19868                           
 19869                           	psect	text74
 19870  1808                     __ptext74:	
 19871 ;; *************** function _null_ptr_check *****************
 19872 ;; Defined at:
 19873 ;;		line 1426 in file "BME280_driver/bme280.c"
 19874 ;; Parameters:    Size  Location     Type
 19875 ;;  dev             1    wreg     PTR const struct bme280_
 19876 ;;		 -> EnvSensor(51), 
 19877 ;; Auto vars:     Size  Location     Type
 19878 ;;  dev             1    3[COMMON] PTR const struct bme280_
 19879 ;;		 -> EnvSensor(51), 
 19880 ;;  rslt            1    2[COMMON] char 
 19881 ;; Return value:  Size  Location     Type
 19882 ;;                  1    wreg      char 
 19883 ;; Registers used:
 19884 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 19885 ;; Tracked objects:
 19886 ;;		On entry : 0/0
 19887 ;;		On exit  : 0/0
 19888 ;;		Unchanged: 0/0
 19889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19891 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19892 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19893 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19894 ;;Total ram usage:        4 bytes
 19895 ;; Hardware stack levels used:    1
 19896 ;; Hardware stack levels required when called:    3
 19897 ;; This function calls:
 19898 ;;		Nothing
 19899 ;; This function is called by:
 19900 ;;		_bme280_init
 19901 ;;		_bme280_get_regs
 19902 ;;		_bme280_set_regs
 19903 ;;		_bme280_set_sensor_settings
 19904 ;;		_bme280_set_sensor_mode
 19905 ;;		_bme280_get_sensor_mode
 19906 ;;		_bme280_soft_reset
 19907 ;;		_bme280_get_sensor_data
 19908 ;;		_bme280_get_sensor_settings
 19909 ;; This function uses a non-reentrant model
 19910 ;;
 19911                           
 19912                           
 19913                           ;psect for function _null_ptr_check
 19914  1808                     _null_ptr_check:	
 19915                           
 19916                           ;incstack = 0
 19917                           ; Regs used in _null_ptr_check: [wreg+fsr1l+fsr1h+status,2+status,0]
 19918                           ;null_ptr_check@dev stored from wreg
 19919  1808  00F3               	movwf	null_ptr_check@dev
 19920                           
 19921                           ;BME280_driver/bme280.c: 1426: static int8_t null_ptr_check(const struct bme280_dev *dev
      +                          );BME280_driver/bme280.c: 1427: {;BME280_driver/bme280.c: 1428:     int8_t rslt;;BME280_
      +                          driver/bme280.c: 1430:     if ((dev == ((void*)0)) || (dev->read == ((void*)0)) || (dev-
      +                          >write == ((void*)0)) || (dev->delay_ms == ((void*)0)))
 19922  1809  0873               	movf	null_ptr_check@dev,w
 19923  180A  1903               	btfsc	3,2
 19924  180B  2827               	goto	l238
 19925  180C  0873               	movf	null_ptr_check@dev,w
 19926  180D  3E03               	addlw	3
 19927  180E  0086               	movwf	6
 19928  180F  3001               	movlw	1	; select bank2/3
 19929  1810  0087               	movwf	7
 19930  1811  0016               	moviw fsr1++
 19931  1812  0401               	iorwf	1,w
 19932  1813  1903               	btfsc	3,2
 19933  1814  2827               	goto	l238
 19934  1815  0873               	movf	null_ptr_check@dev,w
 19935  1816  3E05               	addlw	5
 19936  1817  0086               	movwf	6
 19937  1818  3001               	movlw	1	; select bank2/3
 19938  1819  0087               	movwf	7
 19939  181A  0016               	moviw fsr1++
 19940  181B  0401               	iorwf	1,w
 19941  181C  1903               	btfsc	3,2
 19942  181D  2827               	goto	l238
 19943  181E  0873               	movf	null_ptr_check@dev,w
 19944  181F  3E07               	addlw	7
 19945  1820  0086               	movwf	6
 19946  1821  3001               	movlw	1	; select bank2/3
 19947  1822  0087               	movwf	7
 19948  1823  0016               	moviw fsr1++
 19949  1824  0401               	iorwf	1,w
 19950  1825  1D03               	btfss	3,2
 19951  1826  282A               	goto	l5146
 19952  1827                     l238:	
 19953                           
 19954                           ;BME280_driver/bme280.c: 1431:     {;BME280_driver/bme280.c: 1433:         rslt = -1;
 19955  1827  01F2               	clrf	null_ptr_check@rslt
 19956  1828  03F2               	decf	null_ptr_check@rslt,f
 19957                           
 19958                           ;BME280_driver/bme280.c: 1434:     }
 19959  1829  282B               	goto	l5148
 19960  182A                     l5146:	
 19961                           
 19962                           ;BME280_driver/bme280.c: 1436:     {;BME280_driver/bme280.c: 1438:         rslt = 0;
 19963  182A  01F2               	clrf	null_ptr_check@rslt
 19964  182B                     l5148:	
 19965                           
 19966                           ;BME280_driver/bme280.c: 1441:     return rslt;
 19967  182B  0872               	movf	null_ptr_check@rslt,w
 19968  182C  0008               	return
 19969  182D                     __end_of_null_ptr_check:	
 19970                           
 19971                           	psect	text75
 19972  19F2                     __ptext75:	
 19973 ;; *************** function _interleave_reg_addr *****************
 19974 ;; Defined at:
 19975 ;;		line 1343 in file "BME280_driver/bme280.c"
 19976 ;; Parameters:    Size  Location     Type
 19977 ;;  reg_addr        1    wreg     PTR const unsigned char 
 19978 ;;		 -> write_power_mode@reg_addr(1), set_filter_standby_settings@reg_addr(1), set_osr_press_temp_settings@reg_addr(1), 
      +set_osr_humidity_settings@reg_addr(1), 
 19979 ;;		 -> bme280_soft_reset@reg_addr(1), 
 19980 ;;  temp_buff       1    0[COMMON] PTR unsigned char 
 19981 ;;		 -> bme280_set_regs@temp_buff(20), 
 19982 ;;  reg_data        1    1[COMMON] PTR const unsigned char 
 19983 ;;		 -> write_power_mode@sensor_mode_reg_val(1), set_filter_standby_settings@reg_data(1), set_osr_press_temp_settings@re
      +g_data(1), set_osr_humidity_settings@ctrl_meas(1), 
 19984 ;;		 -> set_osr_humidity_settings@ctrl_hum(1), bme280_soft_reset@soft_rst_cmd(1), 
 19985 ;;  len             1    2[COMMON] unsigned char 
 19986 ;; Auto vars:     Size  Location     Type
 19987 ;;  reg_addr        1    6[COMMON] PTR const unsigned char 
 19988 ;;		 -> write_power_mode@reg_addr(1), set_filter_standby_settings@reg_addr(1), set_osr_press_temp_settings@reg_addr(1), 
      +set_osr_humidity_settings@reg_addr(1), 
 19989 ;;		 -> bme280_soft_reset@reg_addr(1), 
 19990 ;;  index           1    7[COMMON] unsigned char 
 19991 ;; Return value:  Size  Location     Type
 19992 ;;                  1    wreg      void 
 19993 ;; Registers used:
 19994 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 19995 ;; Tracked objects:
 19996 ;;		On entry : 0/0
 19997 ;;		On exit  : 0/0
 19998 ;;		Unchanged: 0/0
 19999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20000 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20001 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20002 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20003 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20004 ;;Total ram usage:        8 bytes
 20005 ;; Hardware stack levels used:    1
 20006 ;; Hardware stack levels required when called:    3
 20007 ;; This function calls:
 20008 ;;		Nothing
 20009 ;; This function is called by:
 20010 ;;		_bme280_set_regs
 20011 ;; This function uses a non-reentrant model
 20012 ;;
 20013                           
 20014                           
 20015                           ;psect for function _interleave_reg_addr
 20016  19F2                     _interleave_reg_addr:	
 20017                           
 20018                           ;incstack = 0
 20019                           ; Regs used in _interleave_reg_addr: [wreg+fsr1l+fsr1h+status,2+status,0]
 20020                           ;interleave_reg_addr@reg_addr stored from wreg
 20021  19F2  00F6               	movwf	interleave_reg_addr@reg_addr
 20022                           
 20023                           ;BME280_driver/bme280.c: 1343: static void interleave_reg_addr(const uint8_t *reg_addr, 
      +                          uint8_t *temp_buff, const uint8_t *reg_data, uint8_t len);BME280_driver/bme280.c: 1344: 
      +                          {;BME280_driver/bme280.c: 1345:     uint8_t index;;BME280_driver/bme280.c: 1347:     for
      +                           (index = 1; index < len; index++)
 20024  19F3  01F7               	clrf	interleave_reg_addr@index
 20025  19F4  0AF7               	incf	interleave_reg_addr@index,f
 20026  19F5                     l5158:	
 20027  19F5  0872               	movf	interleave_reg_addr@len,w
 20028  19F6  0277               	subwf	interleave_reg_addr@index,w
 20029  19F7  1803               	btfsc	3,0
 20030  19F8  0008               	return
 20031                           
 20032                           ;BME280_driver/bme280.c: 1348:     {;BME280_driver/bme280.c: 1349:         temp_buff[(in
      +                          dex * 2) - 1] = reg_addr[index];
 20033  19F9  0877               	movf	interleave_reg_addr@index,w
 20034  19FA  0776               	addwf	interleave_reg_addr@reg_addr,w
 20035  19FB  00F3               	movwf	??_interleave_reg_addr
 20036  19FC  0873               	movf	??_interleave_reg_addr,w
 20037  19FD  0086               	movwf	6
 20038  19FE  0187               	clrf	7
 20039  19FF  0801               	movf	1,w
 20040  1A00  00F4               	movwf	??_interleave_reg_addr+1
 20041  1A01  3577               	lslf	interleave_reg_addr@index,w
 20042  1A02  0770               	addwf	interleave_reg_addr@temp_buff,w
 20043  1A03  00F5               	movwf	??_interleave_reg_addr+2
 20044  1A04  0875               	movf	??_interleave_reg_addr+2,w
 20045  1A05  3EFF               	addlw	-1
 20046  1A06  0086               	movwf	6
 20047  1A07  0187               	clrf	7
 20048  1A08  0874               	movf	??_interleave_reg_addr+1,w
 20049  1A09  0081               	movwf	1
 20050                           
 20051                           ;BME280_driver/bme280.c: 1350:         temp_buff[index * 2] = reg_data[index];
 20052  1A0A  0877               	movf	interleave_reg_addr@index,w
 20053  1A0B  0771               	addwf	interleave_reg_addr@reg_data,w
 20054  1A0C  00F3               	movwf	??_interleave_reg_addr
 20055  1A0D  0873               	movf	??_interleave_reg_addr,w
 20056  1A0E  0086               	movwf	6
 20057  1A0F  0187               	clrf	7
 20058  1A10  0801               	movf	1,w
 20059  1A11  00F4               	movwf	??_interleave_reg_addr+1
 20060  1A12  3577               	lslf	interleave_reg_addr@index,w
 20061  1A13  0770               	addwf	interleave_reg_addr@temp_buff,w
 20062  1A14  00F5               	movwf	??_interleave_reg_addr+2
 20063  1A15  0875               	movf	??_interleave_reg_addr+2,w
 20064  1A16  0086               	movwf	6
 20065  1A17  0187               	clrf	7
 20066  1A18  0874               	movf	??_interleave_reg_addr+1,w
 20067  1A19  0081               	movwf	1
 20068                           
 20069                           ;BME280_driver/bme280.c: 1351:     }
 20070  1A1A  3001               	movlw	1
 20071  1A1B  00F3               	movwf	??_interleave_reg_addr
 20072  1A1C  0873               	movf	??_interleave_reg_addr,w
 20073  1A1D  07F7               	addwf	interleave_reg_addr@index,f
 20074  1A1E  29F5               	goto	l5158
 20075  1A1F                     __end_of_interleave_reg_addr:	
 20076                           
 20077                           	psect	text76
 20078  1A7F                     __ptext76:	
 20079 ;; *************** function _WriteEnvSensor *****************
 20080 ;; Defined at:
 20081 ;;		line 168 in file "bme280_i2c.c"
 20082 ;; Parameters:    Size  Location     Type
 20083 ;;  dev_id          1   11[BANK0 ] unsigned char 
 20084 ;;  reg_addr        1   12[BANK0 ] unsigned char 
 20085 ;;  reg_data        1   13[BANK0 ] PTR unsigned char 
 20086 ;;		 -> bme280_set_regs@temp_buff(20), 
 20087 ;;  len             2   14[BANK0 ] unsigned short 
 20088 ;; Auto vars:     Size  Location     Type
 20089 ;;  i               2   18[BANK0 ] int 
 20090 ;;  rslt            1   17[BANK0 ] char 
 20091 ;; Return value:  Size  Location     Type
 20092 ;;                  1    wreg      char 
 20093 ;; Registers used:
 20094 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20095 ;; Tracked objects:
 20096 ;;		On entry : 0/0
 20097 ;;		On exit  : 0/0
 20098 ;;		Unchanged: 0/0
 20099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20100 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20101 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20102 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20103 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20104 ;;Total ram usage:        9 bytes
 20105 ;; Hardware stack levels used:    1
 20106 ;; Hardware stack levels required when called:    9
 20107 ;; This function calls:
 20108 ;;		_I2C_Stop
 20109 ;;		_I2C_Wait_SSPIF
 20110 ;;		_I2C_WriteByte
 20111 ;; This function is called by:
 20112 ;;		_BME280_Init
 20113 ;;		_bme280_set_regs
 20114 ;; This function uses a non-reentrant model
 20115 ;;
 20116                           
 20117                           
 20118                           ;psect for function _WriteEnvSensor
 20119  1A7F                     _WriteEnvSensor:	
 20120                           
 20121                           ;bme280_i2c.c: 168: int8_t WriteEnvSensor(uint8_t dev_id, uint8_t reg_addr, uint8_t *reg
      +                          _data, uint16_t len);bme280_i2c.c: 169: {;bme280_i2c.c: 170:     int8_t rslt = 0;
 20122                           
 20123                           ;incstack = 0
 20124                           ; Regs used in _WriteEnvSensor: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 20125  1A7F  0140               	movlb	0	; select bank0
 20126  1A80  01B1               	clrf	WriteEnvSensor@rslt
 20127                           
 20128                           ;bme280_i2c.c: 172:     PIR3bits.SSP1IF = 0;
 20129  1A81  014E               	movlb	14	; select bank14
 20130  1A82  100F               	bcf	15,0	;volatile
 20131                           
 20132                           ;bme280_i2c.c: 175:     SSP1CON2bits.SEN = 1;
 20133  1A83  0143               	movlb	3	; select bank3
 20134  1A84  1411               	bsf	17,0	;volatile
 20135                           
 20136                           ;bme280_i2c.c: 176:     I2C_Wait_SSPIF();
 20137  1A85  319D  253D  319A   	fcall	_I2C_Wait_SSPIF
 20138                           
 20139                           ;bme280_i2c.c: 179:     I2C_WriteByte(dev_id << 1);
 20140  1A88  0140               	movlb	0	; select bank0
 20141  1A89  352B               	lslf	WriteEnvSensor@dev_id,w
 20142  1A8A  31A6  26B8  319A   	fcall	_I2C_WriteByte
 20143                           
 20144                           ;bme280_i2c.c: 182:     I2C_WriteByte(reg_addr);
 20145  1A8D  0140               	movlb	0	; select bank0
 20146  1A8E  082C               	movf	WriteEnvSensor@reg_addr,w
 20147  1A8F  31A6  26B8  319A   	fcall	_I2C_WriteByte
 20148                           
 20149                           ;bme280_i2c.c: 184:     for(int i = 0; i < len; i++)
 20150  1A92  0140               	movlb	0	; select bank0
 20151  1A93  01B2               	clrf	WriteEnvSensor@i
 20152  1A94  01B3               	clrf	WriteEnvSensor@i+1
 20153  1A95                     l5214:	
 20154  1A95  082F               	movf	WriteEnvSensor@len+1,w
 20155  1A96  0233               	subwf	WriteEnvSensor@i+1,w
 20156  1A97  1D03               	skipz
 20157  1A98  2A9B               	goto	u5145
 20158  1A99  082E               	movf	WriteEnvSensor@len,w
 20159  1A9A  0232               	subwf	WriteEnvSensor@i,w
 20160  1A9B                     u5145:	
 20161  1A9B  1803               	btfsc	3,0
 20162  1A9C  2AAD               	goto	l5216
 20163                           
 20164                           ;bme280_i2c.c: 185:     {;bme280_i2c.c: 186:         I2C_WriteByte(reg_data[i]);
 20165  1A9D  0832               	movf	WriteEnvSensor@i,w
 20166  1A9E  072D               	addwf	WriteEnvSensor@reg_data,w
 20167  1A9F  00B0               	movwf	??_WriteEnvSensor
 20168  1AA0  0830               	movf	??_WriteEnvSensor,w
 20169  1AA1  0086               	movwf	6
 20170  1AA2  0187               	clrf	7
 20171  1AA3  0801               	movf	1,w
 20172  1AA4  31A6  26B8  319A   	fcall	_I2C_WriteByte
 20173                           
 20174                           ;bme280_i2c.c: 187:     }
 20175  1AA7  3001               	movlw	1
 20176  1AA8  0140               	movlb	0	; select bank0
 20177  1AA9  07B2               	addwf	WriteEnvSensor@i,f
 20178  1AAA  3000               	movlw	0
 20179  1AAB  3DB3               	addwfc	WriteEnvSensor@i+1,f
 20180  1AAC  2A95               	goto	l5214
 20181  1AAD                     l5216:	
 20182                           
 20183                           ;bme280_i2c.c: 189:     I2C_Stop();
 20184  1AAD  31A6  2641         	fcall	_I2C_Stop
 20185                           
 20186                           ;bme280_i2c.c: 191:     return rslt;
 20187  1AAF  0140               	movlb	0	; select bank0
 20188  1AB0  0831               	movf	WriteEnvSensor@rslt,w
 20189  1AB1  0008               	return
 20190  1AB2                     __end_of_WriteEnvSensor:	
 20191                           
 20192                           	psect	text77
 20193  26B8                     __ptext77:	
 20194 ;; *************** function _I2C_WriteByte *****************
 20195 ;; Defined at:
 20196 ;;		line 39 in file "bme280_i2c.c"
 20197 ;; Parameters:    Size  Location     Type
 20198 ;;  data            1    wreg     unsigned char 
 20199 ;; Auto vars:     Size  Location     Type
 20200 ;;  data            1   13[COMMON] unsigned char 
 20201 ;; Return value:  Size  Location     Type
 20202 ;;                  1    wreg      void 
 20203 ;; Registers used:
 20204 ;;		wreg, status,2, status,0, pclath, cstack
 20205 ;; Tracked objects:
 20206 ;;		On entry : 0/0
 20207 ;;		On exit  : 0/0
 20208 ;;		Unchanged: 0/0
 20209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20211 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20213 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20214 ;;Total ram usage:        1 bytes
 20215 ;; Hardware stack levels used:    1
 20216 ;; Hardware stack levels required when called:    8
 20217 ;; This function calls:
 20218 ;;		_I2C_UserAlert
 20219 ;;		_I2C_Wait_SSPIF
 20220 ;; This function is called by:
 20221 ;;		_ReadEnvSensor
 20222 ;;		_WriteEnvSensor
 20223 ;; This function uses a non-reentrant model
 20224 ;;
 20225                           
 20226                           
 20227                           ;psect for function _I2C_WriteByte
 20228  26B8                     _I2C_WriteByte:	
 20229                           
 20230                           ;incstack = 0
 20231                           ; Regs used in _I2C_WriteByte: [wreg+status,2+status,0+pclath+cstack]
 20232                           ;I2C_WriteByte@data stored from wreg
 20233  26B8  00FD               	movwf	I2C_WriteByte@data
 20234                           
 20235                           ;bme280_i2c.c: 39: void I2C_WriteByte(uint8_t data);bme280_i2c.c: 40: {;bme280_i2c.c: 41
      +                          :     SSP1BUF = data;
 20236  26B9  087D               	movf	I2C_WriteByte@data,w
 20237  26BA  0143               	movlb	3	; select bank3
 20238  26BB  008C               	movwf	12	;volatile
 20239                           
 20240                           ;bme280_i2c.c: 42:     I2C_Wait_SSPIF();
 20241  26BC  319D  253D  31A6   	fcall	_I2C_Wait_SSPIF
 20242                           
 20243                           ;bme280_i2c.c: 45:     if (SSP1CON2bits.ACKSTAT != 0){
 20244  26BF  0143               	movlb	3	; select bank3
 20245  26C0  1F11               	btfss	17,6	;volatile
 20246  26C1  0008               	return
 20247                           
 20248                           ;bme280_i2c.c: 46:         I2C_UserAlert(I2C_ERROR_WRITE_NO_ACK);
 20249  26C2  3001               	movlw	1
 20250  26C3  3190  2001         	fcall	_I2C_UserAlert
 20251  26C5  0008               	return
 20252  26C6                     __end_of_I2C_WriteByte:	
 20253                           
 20254                           	psect	text78
 20255  1001                     __ptext78:	
 20256 ;; *************** function _I2C_UserAlert *****************
 20257 ;; Defined at:
 20258 ;;		line 75 in file "bme280_i2c.c"
 20259 ;; Parameters:    Size  Location     Type
 20260 ;;  status          1    wreg     enum E11288
 20261 ;; Auto vars:     Size  Location     Type
 20262 ;;  status          1    0[COMMON] enum E11288
 20263 ;; Return value:  Size  Location     Type
 20264 ;;                  1    wreg      void 
 20265 ;; Registers used:
 20266 ;;		wreg, status,2, status,0, pclath, cstack
 20267 ;; Tracked objects:
 20268 ;;		On entry : 0/0
 20269 ;;		On exit  : 0/0
 20270 ;;		Unchanged: 0/0
 20271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20275 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20276 ;;Total ram usage:        0 bytes
 20277 ;; Hardware stack levels used:    1
 20278 ;; Hardware stack levels required when called:    7
 20279 ;; This function calls:
 20280 ;;		_I2C_Stop
 20281 ;; This function is called by:
 20282 ;;		_I2C_WriteByte
 20283 ;; This function uses a non-reentrant model
 20284 ;;
 20285                           
 20286                           
 20287                           ;psect for function _I2C_UserAlert
 20288  1001                     _I2C_UserAlert:	
 20289                           
 20290                           ;bme280_i2c.c: 75: void I2C_UserAlert(I2C_ERROR status);bme280_i2c.c: 76: {;bme280_i2c.c
      +                          : 77:     I2C_Stop();
 20291                           
 20292                           ;incstack = 0
 20293                           ; Regs used in _I2C_UserAlert: [wreg+status,2+status,0+pclath+cstack]
 20294  1001  31A6  2641         	fcall	_I2C_Stop
 20295  1003  0008               	return
 20296  1004                     __end_of_I2C_UserAlert:	
 20297                           
 20298                           	psect	text79
 20299  2641                     __ptext79:	
 20300 ;; *************** function _I2C_Stop *****************
 20301 ;; Defined at:
 20302 ;;		line 69 in file "bme280_i2c.c"
 20303 ;; Parameters:    Size  Location     Type
 20304 ;;		None
 20305 ;; Auto vars:     Size  Location     Type
 20306 ;;		None
 20307 ;; Return value:  Size  Location     Type
 20308 ;;                  1    wreg      void 
 20309 ;; Registers used:
 20310 ;;		wreg, status,2, status,0, pclath, cstack
 20311 ;; Tracked objects:
 20312 ;;		On entry : 0/0
 20313 ;;		On exit  : 0/0
 20314 ;;		Unchanged: 0/0
 20315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20319 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20320 ;;Total ram usage:        0 bytes
 20321 ;; Hardware stack levels used:    1
 20322 ;; Hardware stack levels required when called:    6
 20323 ;; This function calls:
 20324 ;;		_I2C_Wait_SSPIF
 20325 ;; This function is called by:
 20326 ;;		_I2C_UserAlert
 20327 ;;		_ReadEnvSensor
 20328 ;;		_WriteEnvSensor
 20329 ;; This function uses a non-reentrant model
 20330 ;;
 20331                           
 20332                           
 20333                           ;psect for function _I2C_Stop
 20334  2641                     _I2C_Stop:	
 20335                           
 20336                           ;bme280_i2c.c: 71:     SSP1CON2bits.PEN = 1;
 20337                           
 20338                           ;incstack = 0
 20339                           ; Regs used in _I2C_Stop: [wreg+status,2+status,0+pclath+cstack]
 20340  2641  0143               	movlb	3	; select bank3
 20341  2642  1511               	bsf	17,2	;volatile
 20342                           
 20343                           ;bme280_i2c.c: 72:     I2C_Wait_SSPIF();
 20344  2643  319D  253D         	fcall	_I2C_Wait_SSPIF
 20345  2645  0008               	return
 20346  2646                     __end_of_I2C_Stop:	
 20347                           
 20348                           	psect	text80
 20349  1D3D                     __ptext80:	
 20350 ;; *************** function _I2C_Wait_SSPIF *****************
 20351 ;; Defined at:
 20352 ;;		line 16 in file "bme280_i2c.c"
 20353 ;; Parameters:    Size  Location     Type
 20354 ;;		None
 20355 ;; Auto vars:     Size  Location     Type
 20356 ;;		None
 20357 ;; Return value:  Size  Location     Type
 20358 ;;                  1    wreg      void 
 20359 ;; Registers used:
 20360 ;;		wreg, status,2, status,0, pclath, cstack
 20361 ;; Tracked objects:
 20362 ;;		On entry : 0/0
 20363 ;;		On exit  : 0/0
 20364 ;;		Unchanged: 0/0
 20365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20368 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20369 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20370 ;;Total ram usage:        4 bytes
 20371 ;; Hardware stack levels used:    1
 20372 ;; Hardware stack levels required when called:    5
 20373 ;; This function calls:
 20374 ;;		_DebugAlert
 20375 ;; This function is called by:
 20376 ;;		_I2C_WriteByte
 20377 ;;		_I2C_ReadByte
 20378 ;;		_I2C_Stop
 20379 ;;		_ReadEnvSensor
 20380 ;;		_WriteEnvSensor
 20381 ;; This function uses a non-reentrant model
 20382 ;;
 20383                           
 20384                           
 20385                           ;psect for function _I2C_Wait_SSPIF
 20386  1D3D                     _I2C_Wait_SSPIF:	
 20387                           
 20388                           ;bme280_i2c.c: 18:     __g_timeout_start = ticks; while (!(PIR3bits.SSP1IF != 0)) { if (
      +                          ticks - __g_timeout_start > 1000) { DebugAlert(200, 200, 3);; break; } };
 20389                           
 20390                           ;incstack = 0
 20391                           ; Regs used in _I2C_Wait_SSPIF: [wreg+status,2+status,0+pclath+cstack]
 20392  1D3D  0141               	movlb	1	; select bank1
 20393  1D3E  086B               	movf	(_ticks+3)^(0+128),w
 20394  1D3F  0142               	movlb	2	; select bank2
 20395  1D40  00BE               	movwf	(___g_timeout_start+3)^(0+256)
 20396  1D41  0141               	movlb	1	; select bank1
 20397  1D42  086A               	movf	(_ticks+2)^(0+128),w
 20398  1D43  0142               	movlb	2	; select bank2
 20399  1D44  00BD               	movwf	(___g_timeout_start+2)^(0+256)
 20400  1D45  0141               	movlb	1	; select bank1
 20401  1D46  0869               	movf	(_ticks+1)^(0+128),w
 20402  1D47  0142               	movlb	2	; select bank2
 20403  1D48  00BC               	movwf	(___g_timeout_start+1)^(0+256)
 20404  1D49  0141               	movlb	1	; select bank1
 20405  1D4A  0868               	movf	_ticks^(0+128),w
 20406  1D4B  0142               	movlb	2	; select bank2
 20407  1D4C  00BB               	movwf	___g_timeout_start^(0+256)
 20408  1D4D                     l533:	
 20409  1D4D  014E               	movlb	14	; select bank14
 20410  1D4E  180F               	btfsc	15,0	;volatile
 20411  1D4F  2D82               	goto	l536
 20412  1D50  0142               	movlb	2	; select bank2
 20413  1D51  083B               	movf	___g_timeout_start^(0+256),w
 20414  1D52  0141               	movlb	1	; select bank1
 20415  1D53  0268               	subwf	_ticks^(0+128),w
 20416  1D54  0140               	movlb	0	; select bank0
 20417  1D55  00A7               	movwf	??_I2C_Wait_SSPIF
 20418  1D56  0142               	movlb	2	; select bank2
 20419  1D57  083C               	movf	(___g_timeout_start+1)^(0+256),w
 20420  1D58  0141               	movlb	1	; select bank1
 20421  1D59  3B69               	subwfb	(_ticks+1)^(0+128),w
 20422  1D5A  0140               	movlb	0	; select bank0
 20423  1D5B  00A8               	movwf	??_I2C_Wait_SSPIF+1
 20424  1D5C  0142               	movlb	2	; select bank2
 20425  1D5D  083D               	movf	(___g_timeout_start+2)^(0+256),w
 20426  1D5E  0141               	movlb	1	; select bank1
 20427  1D5F  3B6A               	subwfb	(_ticks+2)^(0+128),w
 20428  1D60  0140               	movlb	0	; select bank0
 20429  1D61  00A9               	movwf	??_I2C_Wait_SSPIF+2
 20430  1D62  0142               	movlb	2	; select bank2
 20431  1D63  083E               	movf	(___g_timeout_start+3)^(0+256),w
 20432  1D64  0141               	movlb	1	; select bank1
 20433  1D65  3B6B               	subwfb	(_ticks+3)^(0+128),w
 20434  1D66  0140               	movlb	0	; select bank0
 20435  1D67  00AA               	movwf	??_I2C_Wait_SSPIF+3
 20436  1D68  082A               	movf	??_I2C_Wait_SSPIF+3,w
 20437  1D69  1D03               	btfss	3,2
 20438  1D6A  2D74               	goto	l5104
 20439  1D6B  0829               	movf	??_I2C_Wait_SSPIF+2,w
 20440  1D6C  1D03               	btfss	3,2
 20441  1D6D  2D74               	goto	l5104
 20442  1D6E  30E9               	movlw	233
 20443  1D6F  0227               	subwf	??_I2C_Wait_SSPIF,w
 20444  1D70  3003               	movlw	3
 20445  1D71  3B28               	subwfb	??_I2C_Wait_SSPIF+1,w
 20446  1D72  1C03               	btfss	3,0
 20447  1D73  2D4D               	goto	l533
 20448  1D74                     l5104:	
 20449  1D74  30C8               	movlw	200
 20450  1D75  00A0               	movwf	DebugAlert@delay_high
 20451  1D76  3000               	movlw	0
 20452  1D77  00A1               	movwf	DebugAlert@delay_high+1
 20453  1D78  30C8               	movlw	200
 20454  1D79  00A2               	movwf	DebugAlert@delay_low
 20455  1D7A  3000               	movlw	0
 20456  1D7B  00A3               	movwf	DebugAlert@delay_low+1
 20457  1D7C  3003               	movlw	3
 20458  1D7D  00A7               	movwf	??_I2C_Wait_SSPIF
 20459  1D7E  0827               	movf	??_I2C_Wait_SSPIF,w
 20460  1D7F  00A4               	movwf	DebugAlert@num_flashes
 20461  1D80  3198  20F0         	fcall	_DebugAlert
 20462  1D82                     l536:	
 20463                           
 20464                           ;bme280_i2c.c: 19:     PIR3bits.SSP1IF = 0;
 20465  1D82  014E               	movlb	14	; select bank14
 20466  1D83  100F               	bcf	15,0	;volatile
 20467  1D84  0008               	return
 20468  1D85                     __end_of_I2C_Wait_SSPIF:	
 20469                           
 20470                           	psect	text81
 20471  18F0                     __ptext81:	
 20472 ;; *************** function _DebugAlert *****************
 20473 ;; Defined at:
 20474 ;;		line 4 in file "debug.c"
 20475 ;; Parameters:    Size  Location     Type
 20476 ;;  delay_high      2    0[BANK0 ] unsigned int 
 20477 ;;  delay_low       2    2[BANK0 ] unsigned int 
 20478 ;;  num_flashes     1    4[BANK0 ] unsigned char 
 20479 ;; Auto vars:     Size  Location     Type
 20480 ;;  i               2    5[BANK0 ] int 
 20481 ;; Return value:  Size  Location     Type
 20482 ;;                  1    wreg      void 
 20483 ;; Registers used:
 20484 ;;		wreg, status,2, status,0, pclath, cstack
 20485 ;; Tracked objects:
 20486 ;;		On entry : 0/0
 20487 ;;		On exit  : 0/0
 20488 ;;		Unchanged: 0/0
 20489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20490 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20491 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20492 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20493 ;;      Totals:         1       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20494 ;;Total ram usage:        8 bytes
 20495 ;; Hardware stack levels used:    1
 20496 ;; Hardware stack levels required when called:    4
 20497 ;; This function calls:
 20498 ;;		_Sleep
 20499 ;; This function is called by:
 20500 ;;		_I2C_Wait_SSPIF
 20501 ;;		_BME280_Init
 20502 ;;		_main
 20503 ;; This function uses a non-reentrant model
 20504 ;;
 20505                           
 20506                           
 20507                           ;psect for function _DebugAlert
 20508  18F0                     _DebugAlert:	
 20509                           
 20510                           ;debug.c: 4: void DebugAlert(unsigned int delay_high, unsigned int delay_low, uint8_t nu
      +                          m_flashes);debug.c: 5: {;debug.c: 7:     for (int i = 0; i < num_flashes; i++)
 20511                           
 20512                           ;incstack = 0
 20513                           ; Regs used in _DebugAlert: [wreg+status,2+status,0+pclath+cstack]
 20514  18F0  0140               	movlb	0	; select bank0
 20515  18F1  01A5               	clrf	DebugAlert@i
 20516  18F2  01A6               	clrf	DebugAlert@i+1
 20517  18F3                     l5098:	
 20518  18F3  0826               	movf	DebugAlert@i+1,w
 20519  18F4  3A80               	xorlw	128
 20520  18F5  00FC               	movwf	??_DebugAlert
 20521  18F6  3080               	movlw	128
 20522  18F7  027C               	subwf	??_DebugAlert,w
 20523  18F8  1D03               	skipz
 20524  18F9  28FC               	goto	u5035
 20525  18FA  0824               	movf	DebugAlert@num_flashes,w
 20526  18FB  0225               	subwf	DebugAlert@i,w
 20527  18FC                     u5035:	
 20528  18FC  1803               	btfsc	3,0
 20529  18FD  0008               	return
 20530                           
 20531                           ;debug.c: 8:     {;debug.c: 9:         do { LATCbits.LATC5 = 1; } while(0);
 20532  18FE  0140               	movlb	0	; select bank0
 20533  18FF  169A               	bsf	26,5	;volatile
 20534                           
 20535                           ;debug.c: 10:         Sleep(delay_high);
 20536  1900  0820               	movf	DebugAlert@delay_high,w
 20537  1901  00F0               	movwf	Sleep@ms
 20538  1902  0821               	movf	DebugAlert@delay_high+1,w
 20539  1903  00F1               	movwf	Sleep@ms+1
 20540  1904  01F2               	clrf	Sleep@ms+2
 20541  1905  01F3               	clrf	Sleep@ms+3
 20542  1906  3199  2144  3198   	fcall	_Sleep
 20543  1909  0140               	movlb	0	; select bank0
 20544  190A  129A               	bcf	26,5	;volatile
 20545                           
 20546                           ;debug.c: 12:         Sleep(delay_low);
 20547  190B  0822               	movf	DebugAlert@delay_low,w
 20548  190C  00F0               	movwf	Sleep@ms
 20549  190D  0823               	movf	DebugAlert@delay_low+1,w
 20550  190E  00F1               	movwf	Sleep@ms+1
 20551  190F  01F2               	clrf	Sleep@ms+2
 20552  1910  01F3               	clrf	Sleep@ms+3
 20553  1911  3199  2144  3198   	fcall	_Sleep
 20554                           
 20555                           ;debug.c: 13:     }
 20556  1914  3001               	movlw	1
 20557  1915  0140               	movlb	0	; select bank0
 20558  1916  07A5               	addwf	DebugAlert@i,f
 20559  1917  3000               	movlw	0
 20560  1918  3DA6               	addwfc	DebugAlert@i+1,f
 20561  1919  28F3               	goto	l5098
 20562  191A                     __end_of_DebugAlert:	
 20563                           
 20564                           	psect	text82
 20565  1944                     __ptext82:	
 20566 ;; *************** function _Sleep *****************
 20567 ;; Defined at:
 20568 ;;		line 17 in file "timing.c"
 20569 ;; Parameters:    Size  Location     Type
 20570 ;;  ms              4    0[COMMON] unsigned long 
 20571 ;; Auto vars:     Size  Location     Type
 20572 ;;  start           4    8[COMMON] unsigned long 
 20573 ;; Return value:  Size  Location     Type
 20574 ;;                  1    wreg      void 
 20575 ;; Registers used:
 20576 ;;		wreg
 20577 ;; Tracked objects:
 20578 ;;		On entry : 0/0
 20579 ;;		On exit  : 0/0
 20580 ;;		Unchanged: 0/0
 20581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20582 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20583 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20584 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20585 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20586 ;;Total ram usage:       12 bytes
 20587 ;; Hardware stack levels used:    1
 20588 ;; Hardware stack levels required when called:    3
 20589 ;; This function calls:
 20590 ;;		Nothing
 20591 ;; This function is called by:
 20592 ;;		_BME280_Init
 20593 ;;		_DebugAlert
 20594 ;;		_SetupGPS
 20595 ;;		_main
 20596 ;;		_TransmitBit
 20597 ;;		_bme280_soft_reset
 20598 ;;		_bme280_init
 20599 ;; This function uses a non-reentrant model
 20600 ;;
 20601                           
 20602                           
 20603                           ;psect for function _Sleep
 20604  1944                     _Sleep:	
 20605                           
 20606                           ;timing.c: 17: void Sleep(uint32_t ms);timing.c: 18: {;timing.c: 19:     uint32_t start 
      +                          = ticks;
 20607                           
 20608                           ;incstack = 0
 20609                           ; Regs used in _Sleep: [wreg]
 20610  1944  0141               	movlb	1	; select bank1
 20611  1945  086B               	movf	(_ticks+3)^(0+128),w
 20612  1946  00FB               	movwf	Sleep@start+3
 20613  1947  086A               	movf	(_ticks+2)^(0+128),w
 20614  1948  00FA               	movwf	Sleep@start+2
 20615  1949  0869               	movf	(_ticks+1)^(0+128),w
 20616  194A  00F9               	movwf	Sleep@start+1
 20617  194B  0868               	movf	_ticks^(0+128),w
 20618  194C  00F8               	movwf	Sleep@start
 20619  194D                     l897:	
 20620                           ;timing.c: 23:     }
 20621                           
 20622                           ;timing.c: 20:     while (ticks - start < ms)
 20623                           
 20624                           
 20625                           ;timing.c: 20:     while (ticks - start < ms)
 20626  194D  0878               	movf	Sleep@start,w
 20627  194E  0141               	movlb	1	; select bank1
 20628  194F  0268               	subwf	_ticks^(0+128),w
 20629  1950  00F4               	movwf	??_Sleep
 20630  1951  0879               	movf	Sleep@start+1,w
 20631  1952  3B69               	subwfb	(_ticks+1)^(0+128),w
 20632  1953  00F5               	movwf	??_Sleep+1
 20633  1954  087A               	movf	Sleep@start+2,w
 20634  1955  3B6A               	subwfb	(_ticks+2)^(0+128),w
 20635  1956  00F6               	movwf	??_Sleep+2
 20636  1957  087B               	movf	Sleep@start+3,w
 20637  1958  3B6B               	subwfb	(_ticks+3)^(0+128),w
 20638  1959  00F7               	movwf	??_Sleep+3
 20639  195A  0873               	movf	Sleep@ms+3,w
 20640  195B  0277               	subwf	??_Sleep+3,w
 20641  195C  1D03               	skipz
 20642  195D  2968               	goto	u5025
 20643  195E  0872               	movf	Sleep@ms+2,w
 20644  195F  0276               	subwf	??_Sleep+2,w
 20645  1960  1D03               	skipz
 20646  1961  2968               	goto	u5025
 20647  1962  0871               	movf	Sleep@ms+1,w
 20648  1963  0275               	subwf	??_Sleep+1,w
 20649  1964  1D03               	skipz
 20650  1965  2968               	goto	u5025
 20651  1966  0870               	movf	Sleep@ms,w
 20652  1967  0274               	subwf	??_Sleep,w
 20653  1968                     u5025:	
 20654  1968  1803               	btfsc	3,0
 20655  1969  0008               	return
 20656                           
 20657                           ;timing.c: 21:     {;timing.c: 22:         _delay((unsigned long)((1)*(1000000/4000.0)))
      +                          ;
 20658  196A  3053               	movlw	83
 20659  196B                     u6327:	
 20660  196B  0B89               	decfsz	9,f
 20661  196C  296B               	goto	u6327
 20662  196D  0000               	nop
 20663  196E  294D               	goto	l897
 20664  196F                     __end_of_Sleep:	
 20665                           
 20666                           	psect	text83
 20667  26FA                     __ptext83:	
 20668 ;; *************** function _I2C_Init *****************
 20669 ;; Defined at:
 20670 ;;		line 22 in file "bme280_i2c.c"
 20671 ;; Parameters:    Size  Location     Type
 20672 ;;		None
 20673 ;; Auto vars:     Size  Location     Type
 20674 ;;		None
 20675 ;; Return value:  Size  Location     Type
 20676 ;;                  1    wreg      void 
 20677 ;; Registers used:
 20678 ;;		wreg, status,2
 20679 ;; Tracked objects:
 20680 ;;		On entry : 0/0
 20681 ;;		On exit  : 0/0
 20682 ;;		Unchanged: 0/0
 20683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20685 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20687 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20688 ;;Total ram usage:        0 bytes
 20689 ;; Hardware stack levels used:    1
 20690 ;; Hardware stack levels required when called:    3
 20691 ;; This function calls:
 20692 ;;		Nothing
 20693 ;; This function is called by:
 20694 ;;		_BME280_Init
 20695 ;; This function uses a non-reentrant model
 20696 ;;
 20697                           
 20698                           
 20699                           ;psect for function _I2C_Init
 20700  26FA                     _I2C_Init:	
 20701                           
 20702                           ;bme280_i2c.c: 25:     SSP1CLKPPS = 0x0E;
 20703                           
 20704                           ;incstack = 0
 20705                           ; Regs used in _I2C_Init: [wreg+status,2]
 20706  26FA  300E               	movlw	14
 20707  26FB  017D               	movlb	61	; select bank61
 20708  26FC  00C5               	movwf	69	;volatile
 20709                           
 20710                           ;bme280_i2c.c: 26:     SSP1DATPPS = 0x0C;
 20711  26FD  300C               	movlw	12
 20712  26FE  00C6               	movwf	70	;volatile
 20713                           
 20714                           ;bme280_i2c.c: 27:     RB6PPS = 0x14;
 20715  26FF  3014               	movlw	20
 20716  2700  017E               	movlb	62	; select bank62
 20717  2701  009E               	movwf	30	;volatile
 20718                           
 20719                           ;bme280_i2c.c: 28:     RB4PPS = 0x13;
 20720  2702  3013               	movlw	19
 20721  2703  009C               	movwf	28	;volatile
 20722                           
 20723                           ;bme280_i2c.c: 30:     SSP1STAT = 0x80;
 20724  2704  3080               	movlw	128
 20725  2705  0143               	movlb	3	; select bank3
 20726  2706  008F               	movwf	15	;volatile
 20727                           
 20728                           ;bme280_i2c.c: 31:     SSP1CON1 = 0x28;
 20729  2707  3028               	movlw	40
 20730  2708  0090               	movwf	16	;volatile
 20731                           
 20732                           ;bme280_i2c.c: 32:     SSP1CON3 = 0x00;
 20733  2709  0192               	clrf	18	;volatile
 20734                           
 20735                           ;bme280_i2c.c: 33:     SSP1ADD = 0x03;
 20736  270A  3003               	movlw	3
 20737  270B  008D               	movwf	13	;volatile
 20738                           
 20739                           ;bme280_i2c.c: 36:     SSP1CON1bits.SSPEN = 1;
 20740  270C  1690               	bsf	16,5	;volatile
 20741  270D  0008               	return
 20742  270E                     __end_of_I2C_Init:	
 20743                           
 20744                           	psect	intentry
 20745  0004                     __pintentry:	
 20746 ;; *************** function _INTERRUPT_InterruptManager *****************
 20747 ;; Defined at:
 20748 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 20749 ;; Parameters:    Size  Location     Type
 20750 ;;		None
 20751 ;; Auto vars:     Size  Location     Type
 20752 ;;		None
 20753 ;; Return value:  Size  Location     Type
 20754 ;;                  1    wreg      void 
 20755 ;; Registers used:
 20756 ;;		wreg, status,2, status,0, pclath, cstack
 20757 ;; Tracked objects:
 20758 ;;		On entry : 0/0
 20759 ;;		On exit  : 0/0
 20760 ;;		Unchanged: 0/0
 20761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20765 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20766 ;;Total ram usage:        0 bytes
 20767 ;; Hardware stack levels used:    1
 20768 ;; Hardware stack levels required when called:    2
 20769 ;; This function calls:
 20770 ;;		_TMR0_ISR
 20771 ;; This function is called by:
 20772 ;;		Interrupt level 1
 20773 ;; This function uses a non-reentrant model
 20774 ;;
 20775                           
 20776  0004                     _INTERRUPT_InterruptManager:	
 20777                           
 20778                           ;incstack = 0
 20779 ;; hardware stack exceeded
 20780  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 20781                           
 20782                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
 20783  0005  3180               	pagesel	$
 20784                           
 20785                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.TMR0IE == 1 && PIR0bits.TM
      +                          R0IF == 1)
 20786  0006  014E               	movlb	14	; select bank14
 20787  0007  1A96               	btfsc	22,5	;volatile
 20788  0008  1E8C               	btfss	12,5	;volatile
 20789  0009  280C               	goto	i1l389
 20790                           
 20791                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
 20792  000A  31A6  26AB         	fcall	_TMR0_ISR
 20793  000C                     i1l389:	
 20794                           ;mcc_generated_files/interrupt_manager.c: 58:     }
 20795                           
 20796  000C  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 20797  000D  0009               	retfie
 20798  000E                     __end_of_INTERRUPT_InterruptManager:	
 20799                           
 20800                           	psect	text85
 20801  26AB                     __ptext85:	
 20802 ;; *************** function _TMR0_ISR *****************
 20803 ;; Defined at:
 20804 ;;		line 121 in file "mcc_generated_files/tmr0.c"
 20805 ;; Parameters:    Size  Location     Type
 20806 ;;		None
 20807 ;; Auto vars:     Size  Location     Type
 20808 ;;		None
 20809 ;; Return value:  Size  Location     Type
 20810 ;;                  1    wreg      void 
 20811 ;; Registers used:
 20812 ;;		wreg, status,2, status,0, pclath, cstack
 20813 ;; Tracked objects:
 20814 ;;		On entry : 0/0
 20815 ;;		On exit  : 0/0
 20816 ;;		Unchanged: 0/0
 20817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20821 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20822 ;;Total ram usage:        0 bytes
 20823 ;; Hardware stack levels used:    1
 20824 ;; Hardware stack levels required when called:    1
 20825 ;; This function calls:
 20826 ;;		Absolute function
 20827 ;;		_TMR0_DefaultInterruptHandler
 20828 ;;		_TimerISR
 20829 ;; This function is called by:
 20830 ;;		_INTERRUPT_InterruptManager
 20831 ;; This function uses a non-reentrant model
 20832 ;;
 20833                           
 20834                           
 20835                           ;psect for function _TMR0_ISR
 20836  26AB                     _TMR0_ISR:	
 20837                           
 20838                           ;mcc_generated_files/tmr0.c: 124:     PIR0bits.TMR0IF = 0;
 20839                           
 20840                           ;incstack = 0
 20841 ;; hardware stack exceeded
 20842                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
 20843  26AB  014E               	movlb	14	; select bank14
 20844  26AC  128C               	bcf	12,5	;volatile
 20845                           
 20846                           ;mcc_generated_files/tmr0.c: 125:     if(TMR0_InterruptHandler)
 20847  26AD  0141               	movlb	1	; select bank1
 20848  26AE  086E               	movf	_TMR0_InterruptHandler^(0+128),w
 20849  26AF  046F               	iorwf	(_TMR0_InterruptHandler+1)^(0+128),w
 20850  26B0  1903               	btfsc	3,2
 20851  26B1  0008               	return
 20852                           
 20853                           ;mcc_generated_files/tmr0.c: 126:     {;mcc_generated_files/tmr0.c: 127:         TMR0_In
      +                          terruptHandler();
 20854  26B2  086F               	movf	(_TMR0_InterruptHandler+1)^(0+128),w
 20855  26B3  008A               	movwf	10
 20856  26B4  086E               	movf	_TMR0_InterruptHandler^(0+128),w
 20857  26B5  000A               	callw
 20858  26B6  31A6               	pagesel	$
 20859  26B7  0008               	return
 20860  26B8                     __end_of_TMR0_ISR:	
 20861                           
 20862                           	psect	text86
 20863  07FF                     __ptext86:	
 20864 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 20865 ;; Defined at:
 20866 ;;		line 138 in file "mcc_generated_files/tmr0.c"
 20867 ;; Parameters:    Size  Location     Type
 20868 ;;		None
 20869 ;; Auto vars:     Size  Location     Type
 20870 ;;		None
 20871 ;; Return value:  Size  Location     Type
 20872 ;;                  1    wreg      void 
 20873 ;; Registers used:
 20874 ;;		None
 20875 ;; Tracked objects:
 20876 ;;		On entry : 0/0
 20877 ;;		On exit  : 0/0
 20878 ;;		Unchanged: 0/0
 20879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20880 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20881 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20883 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20884 ;;Total ram usage:        0 bytes
 20885 ;; Hardware stack levels used:    1
 20886 ;; This function calls:
 20887 ;;		Nothing
 20888 ;; This function is called by:
 20889 ;;		_TMR0_Initialize
 20890 ;;		_TMR0_ISR
 20891 ;; This function uses a non-reentrant model
 20892 ;;
 20893                           
 20894                           
 20895                           ;psect for function _TMR0_DefaultInterruptHandler
 20896  07FF                     _TMR0_DefaultInterruptHandler:	
 20897                           
 20898                           ;incstack = 0
 20899 ;; hardware stack exceeded
 20900                           ; Regs used in _TMR0_DefaultInterruptHandler: []
 20901  07FF  0008               	return
 20902  0800                     __end_of_TMR0_DefaultInterruptHandler:	
 20903                           
 20904                           	psect	text87
 20905  2680                     __ptext87:	
 20906 ;; *************** function _TimerISR *****************
 20907 ;; Defined at:
 20908 ;;		line 6 in file "timing.c"
 20909 ;; Parameters:    Size  Location     Type
 20910 ;;		None
 20911 ;; Auto vars:     Size  Location     Type
 20912 ;;		None
 20913 ;; Return value:  Size  Location     Type
 20914 ;;                  1    wreg      void 
 20915 ;; Registers used:
 20916 ;;		wreg
 20917 ;; Tracked objects:
 20918 ;;		On entry : 0/0
 20919 ;;		On exit  : 0/0
 20920 ;;		Unchanged: 0/0
 20921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20925 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20926 ;;Total ram usage:        0 bytes
 20927 ;; Hardware stack levels used:    1
 20928 ;; This function calls:
 20929 ;;		Nothing
 20930 ;; This function is called by:
 20931 ;;		_InitTiming
 20932 ;;		_TMR0_ISR
 20933 ;; This function uses a non-reentrant model
 20934 ;;
 20935                           
 20936                           
 20937                           ;psect for function _TimerISR
 20938  2680                     _TimerISR:	
 20939                           
 20940                           ;timing.c: 8:     ticks++;
 20941                           
 20942                           ;incstack = 0
 20943 ;; hardware stack exceeded
 20944                           ; Regs used in _TimerISR: [wreg]
 20945  2680  3001               	movlw	1
 20946  2681  0141               	movlb	1	; select bank1
 20947  2682  07E8               	addwf	_ticks^(0+128),f
 20948  2683  3000               	movlw	0
 20949  2684  3DE9               	addwfc	(_ticks+1)^(0+128),f
 20950  2685  3000               	movlw	0
 20951  2686  3DEA               	addwfc	(_ticks+2)^(0+128),f
 20952  2687  3000               	movlw	0
 20953  2688  3DEB               	addwfc	(_ticks+3)^(0+128),f
 20954  2689  0008               	return
 20955  268A                     __end_of_TimerISR:	
 20956  007E                     btemp	set	126	;btemp
 20957  007E                     int$flags	set	126
 20958  007E                     wtemp0	set	126


Data Sizes:
    Strings     185
    Constant    2
    Data        48
    BSS         262
    Persistent  40
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     79      79
    BANK1            80     72      80
    BANK2            80     32      79
    BANK3            80      0      79
    BANK4            80      0      44
    BANK5            80      0      70
    BANK6            80      0      70
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           32      0       0

Pointer List with Targets:

    put_device_to_sleep@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 0
		 -> Sleep(), 

    put_device_to_sleep@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 0
		 -> WriteEnvSensor(), 

    put_device_to_sleep@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 0
		 -> ReadEnvSensor(), 

    get_calib_data@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 0
		 -> Sleep(), 

    get_calib_data@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 0
		 -> WriteEnvSensor(), 

    get_calib_data@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 0
		 -> ReadEnvSensor(), 

    S54$4$2	PTR unsigned char  size(1) Largest target is 20
		 -> bme280_set_regs@temp_buff(BANK0[20]), 

    S54$3$2	PTR unsigned char  size(1) Largest target is 26
		 -> get_calib_data@calib_data(BANK0[26]), put_device_to_sleep@reg_data(BANK1[4]), write_power_mode@sensor_mode_reg_val(BANK0[1]), set_filter_standby_settings@reg_data(BANK0[1]), 
		 -> set_osr_press_temp_settings@reg_data(BANK0[1]), set_osr_humidity_settings@ctrl_meas(BANK0[1]), bme280_get_sensor_data@reg_data(BANK1[8]), bme280_set_sensor_mode@last_set_mode(BANK1[1]), 
		 -> bme280_get_sensor_settings@reg_data(COMMON[4]), bme280_set_sensor_settings@sensor_mode(BANK1[1]), bme280_init@chip_id(BANK0[1]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 70
		 -> STR_10(CODE[3]), checksum(BANK2[6]), STR_9(CODE[7]), main@convertedNumber(BANK2[16]), 
		 -> STR_7(CODE[14]), PollGPS@data_type(BANK0[7]), STR_6(CODE[26]), STR_5(CODE[26]), 
		 -> STR_4(CODE[26]), STR_3(CODE[26]), STR_2(CODE[26]), STR_1(CODE[26]), 
		 -> message_end(BANK6[70]), message_start(BANK5[70]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 70
		 -> STR_10(CODE[3]), checksum(BANK2[6]), STR_9(CODE[7]), main@convertedNumber(BANK2[16]), 
		 -> STR_7(CODE[14]), PollGPS@data_type(BANK0[7]), STR_6(CODE[26]), STR_5(CODE[26]), 
		 -> STR_4(CODE[26]), STR_3(CODE[26]), STR_2(CODE[26]), STR_1(CODE[26]), 
		 -> message_end(BANK6[70]), message_start(BANK5[70]), 

    strcmp@r	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_8(CODE[5]), 

    strcmp@l	PTR const unsigned char  size(1) Largest target is 7
		 -> PollGPS@data_type(BANK0[7]), 

    TransmitString@message	PTR unsigned char  size(2) Largest target is 70
		 -> message_end(BANK6[70]), message_start(BANK5[70]), 

    crc16@data	PTR PTR unsigned char  size(1) Largest target is 4
		 -> messages(BANK2[4]), 

    crc16_update@pData	PTR unsigned char  size(2) Largest target is 70
		 -> message_end(BANK6[70]), message_start(BANK5[70]), 

    GPS_HasAcknowledged@data	PTR unsigned char  size(1) Largest target is 44
		 -> setNavFlightMode(BANK4[44]), 

    GPS_SendUBX@data	PTR unsigned char  size(1) Largest target is 44
		 -> setNavFlightMode(BANK4[44]), 

    GetLengthUBX@data	PTR unsigned char  size(1) Largest target is 44
		 -> setNavFlightMode(BANK4[44]), 

    WriteGPS@message	PTR unsigned char  size(2) Largest target is 26
		 -> STR_7(CODE[14]), STR_6(CODE[26]), STR_5(CODE[26]), STR_4(CODE[26]), 
		 -> STR_3(CODE[26]), STR_2(CODE[26]), STR_1(CODE[26]), 

    messages	PTR unsigned char [2] size(2) Largest target is 70
		 -> message_end(BANK6[70]), message_start(BANK5[70]), 

    UIntToString@dest	PTR unsigned char  size(1) Largest target is 16
		 -> main@convertedNumber(BANK2[16]), 

    IntToString@dest	PTR unsigned char  size(1) Largest target is 16
		 -> main@convertedNumber(BANK2[16]), 

    UIntToHexString@dest	PTR unsigned char  size(1) Largest target is 6
		 -> checksum(BANK2[6]), 

    ReverseString@opposite	PTR unsigned char  size(1) Largest target is 16
		 -> checksum(BANK2[6]), main@convertedNumber(BANK2[16]), 

    ReverseString@str	PTR unsigned char  size(1) Largest target is 16
		 -> checksum(BANK2[6]), main@convertedNumber(BANK2[16]), 

    InsertString@dest	PTR unsigned char  size(2) Largest target is 70
		 -> message_end(BANK6[70]), message_start(BANK5[70]), 

    InsertString@src	PTR unsigned char  size(2) Largest target is 16
		 -> STR_10(CODE[3]), checksum(BANK2[6]), STR_9(CODE[7]), main@convertedNumber(BANK2[16]), 
		 -> PollGPS@data_type(BANK0[7]), 

    Insert@dest	PTR unsigned char  size(2) Largest target is 70
		 -> PollGPS@data_type(BANK0[7]), message_end(BANK6[70]), message_start(BANK5[70]), 

    ClearString@str	PTR unsigned char  size(2) Largest target is 16
		 -> main@convertedNumber(BANK2[16]), PollGPS@data_type(BANK0[7]), 

    WriteEnvSensor@reg_data	PTR unsigned char  size(1) Largest target is 20
		 -> bme280_set_regs@temp_buff(BANK0[20]), 

    ReadEnvSensor@reg_data	PTR unsigned char  size(1) Largest target is 26
		 -> get_calib_data@calib_data(BANK0[26]), put_device_to_sleep@reg_data(BANK1[4]), write_power_mode@sensor_mode_reg_val(BANK0[1]), set_filter_standby_settings@reg_data(BANK0[1]), 
		 -> set_osr_press_temp_settings@reg_data(BANK0[1]), set_osr_humidity_settings@ctrl_meas(BANK0[1]), bme280_get_sensor_data@reg_data(BANK1[8]), bme280_set_sensor_mode@last_set_mode(BANK1[1]), 
		 -> bme280_get_sensor_settings@reg_data(COMMON[4]), bme280_set_sensor_settings@sensor_mode(BANK1[1]), bme280_init@chip_id(BANK0[1]), 

    EnvSensor.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> Sleep(), 

    EnvSensor.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> WriteEnvSensor(), 

    EnvSensor.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> ReadEnvSensor(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), Absolute function(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TimerISR(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TimerISR(), Absolute function(), TMR0_DefaultInterruptHandler(), 

    null_ptr_check@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> Sleep(), 

    null_ptr_check@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> WriteEnvSensor(), 

    null_ptr_check@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> ReadEnvSensor(), 

    null_ptr_check@dev	PTR const struct bme280_dev size(1) Largest target is 51
		 -> EnvSensor(BANK3[51]), 

    parse_humidity_calib_data@reg_data	PTR const unsigned char  size(1) Largest target is 26
		 -> get_calib_data@calib_data(BANK0[26]), 

    parse_humidity_calib_data@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> Sleep(), 

    parse_humidity_calib_data@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> WriteEnvSensor(), 

    parse_humidity_calib_data@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> ReadEnvSensor(), 

    parse_humidity_calib_data@dev	PTR struct bme280_dev size(1) Largest target is 51
		 -> EnvSensor(BANK3[51]), 

    parse_humidity_calib_data@calib_data	PTR struct bme280_calib_data size(1) Largest target is 51
		 -> EnvSensor.calib_data(BANK3[37]), EnvSensor(BANK3[51]), 

    parse_temp_press_calib_data@reg_data	PTR const unsigned char  size(1) Largest target is 26
		 -> get_calib_data@calib_data(BANK0[26]), 

    parse_temp_press_calib_data@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> Sleep(), 

    parse_temp_press_calib_data@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> WriteEnvSensor(), 

    parse_temp_press_calib_data@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> ReadEnvSensor(), 

    parse_temp_press_calib_data@dev	PTR struct bme280_dev size(1) Largest target is 51
		 -> EnvSensor(BANK3[51]), 

    parse_temp_press_calib_data@calib_data	PTR struct bme280_calib_data size(1) Largest target is 51
		 -> EnvSensor.calib_data(BANK3[37]), EnvSensor(BANK3[51]), 

    interleave_reg_addr@reg_data	PTR const unsigned char  size(1) Largest target is 1
		 -> write_power_mode@sensor_mode_reg_val(BANK0[1]), set_filter_standby_settings@reg_data(BANK0[1]), set_osr_press_temp_settings@reg_data(BANK0[1]), set_osr_humidity_settings@ctrl_meas(BANK0[1]), 
		 -> set_osr_humidity_settings@ctrl_hum(BANK0[1]), bme280_soft_reset@soft_rst_cmd(BANK0[1]), 

    interleave_reg_addr@reg_addr	PTR const unsigned char  size(1) Largest target is 1
		 -> write_power_mode@reg_addr(BANK0[1]), set_filter_standby_settings@reg_addr(BANK0[1]), set_osr_press_temp_settings@reg_addr(BANK0[1]), set_osr_humidity_settings@reg_addr(BANK0[1]), 
		 -> bme280_soft_reset@reg_addr(BANK0[1]), 

    interleave_reg_addr@temp_buff	PTR unsigned char  size(1) Largest target is 20
		 -> bme280_set_regs@temp_buff(BANK0[20]), 

    get_calib_data@dev	PTR struct bme280_dev size(1) Largest target is 51
		 -> EnvSensor(BANK3[51]), 

    compensate_humidity@uncomp_data	PTR const struct bme280_uncomp_data size(1) Largest target is 12
		 -> bme280_get_sensor_data@uncomp_data(BANK1[12]), 

    compensate_humidity@calib_data	PTR const struct bme280_calib_data size(1) Largest target is 51
		 -> EnvSensor(BANK3[51]), 

    compensate_pressure@uncomp_data	PTR const struct bme280_uncomp_data size(1) Largest target is 12
		 -> bme280_get_sensor_data@uncomp_data(BANK1[12]), 

    compensate_pressure@calib_data	PTR const struct bme280_calib_data size(1) Largest target is 51
		 -> EnvSensor(BANK3[51]), 

    compensate_temperature@calib_data	PTR struct bme280_calib_data size(1) Largest target is 51
		 -> EnvSensor(BANK3[51]), 

    compensate_temperature@uncomp_data	PTR const struct bme280_uncomp_data size(1) Largest target is 12
		 -> bme280_get_sensor_data@uncomp_data(BANK1[12]), 

    reload_device_settings@dev	PTR const struct bme280_dev size(1) Largest target is 51
		 -> EnvSensor(BANK3[51]), 

    reload_device_settings@settings	PTR const struct bme280_settings size(1) Largest target is 5
		 -> put_device_to_sleep@settings(BANK1[5]), 

    put_device_to_sleep@dev	PTR const struct bme280_dev size(1) Largest target is 51
		 -> EnvSensor(BANK3[51]), 

    write_power_mode@dev	PTR const struct bme280_dev size(1) Largest target is 51
		 -> EnvSensor(BANK3[51]), 

    parse_device_settings@reg_data	PTR const unsigned char  size(1) Largest target is 4
		 -> put_device_to_sleep@reg_data(BANK1[4]), bme280_get_sensor_settings@reg_data(COMMON[4]), 

    parse_device_settings@settings	PTR struct bme280_settings size(1) Largest target is 5
		 -> put_device_to_sleep@settings(BANK1[5]), 

    fill_osr_temp_settings@settings	PTR const struct bme280_settings size(2) Largest target is 51
		 -> EnvSensor(BANK3[51]), put_device_to_sleep@settings(BANK1[5]), 

    fill_osr_temp_settings@reg_data	PTR unsigned char  size(1) Largest target is 1
		 -> set_osr_press_temp_settings@reg_data(BANK0[1]), 

    fill_osr_press_settings@settings	PTR const struct bme280_settings size(2) Largest target is 51
		 -> EnvSensor(BANK3[51]), put_device_to_sleep@settings(BANK1[5]), 

    fill_osr_press_settings@reg_data	PTR unsigned char  size(1) Largest target is 1
		 -> set_osr_press_temp_settings@reg_data(BANK0[1]), 

    fill_standby_settings@settings	PTR const struct bme280_settings size(2) Largest target is 51
		 -> EnvSensor(BANK3[51]), put_device_to_sleep@settings(BANK1[5]), 

    fill_standby_settings@reg_data	PTR unsigned char  size(1) Largest target is 1
		 -> set_filter_standby_settings@reg_data(BANK0[1]), 

    fill_filter_settings@settings	PTR const struct bme280_settings size(2) Largest target is 51
		 -> EnvSensor(BANK3[51]), put_device_to_sleep@settings(BANK1[5]), 

    fill_filter_settings@reg_data	PTR unsigned char  size(1) Largest target is 1
		 -> set_filter_standby_settings@reg_data(BANK0[1]), 

    set_filter_standby_settings@settings	PTR const struct bme280_settings size(2) Largest target is 51
		 -> EnvSensor(BANK3[51]), put_device_to_sleep@settings(BANK1[5]), 

    set_filter_standby_settings@dev	PTR const struct bme280_dev size(1) Largest target is 51
		 -> EnvSensor(BANK3[51]), 

    set_osr_press_temp_settings@settings	PTR const struct bme280_settings size(2) Largest target is 51
		 -> EnvSensor(BANK3[51]), put_device_to_sleep@settings(BANK1[5]), 

    set_osr_press_temp_settings@dev	PTR const struct bme280_dev size(1) Largest target is 51
		 -> EnvSensor(BANK3[51]), 

    set_osr_humidity_settings@dev	PTR const struct bme280_dev size(1) Largest target is 51
		 -> EnvSensor(BANK3[51]), 

    set_osr_humidity_settings@settings	PTR const struct bme280_settings size(2) Largest target is 51
		 -> EnvSensor(BANK3[51]), put_device_to_sleep@settings(BANK1[5]), 

    set_osr_settings@dev	PTR const struct bme280_dev size(1) Largest target is 51
		 -> EnvSensor(BANK3[51]), 

    set_osr_settings@settings	PTR const struct bme280_settings size(2) Largest target is 51
		 -> EnvSensor(BANK3[51]), put_device_to_sleep@settings(BANK1[5]), 

    bme280_compensate_data@calib_data	PTR struct bme280_calib_data size(1) Largest target is 51
		 -> EnvSensor(BANK3[51]), 

    bme280_compensate_data@comp_data	PTR struct bme280_data size(1) Largest target is 12
		 -> main@sensor_data(BANK2[12]), 

    bme280_compensate_data@uncomp_data	PTR const struct bme280_uncomp_data size(1) Largest target is 12
		 -> bme280_get_sensor_data@uncomp_data(BANK1[12]), 

    bme280_parse_sensor_data@uncomp_data	PTR struct bme280_uncomp_data size(1) Largest target is 12
		 -> bme280_get_sensor_data@uncomp_data(BANK1[12]), 

    bme280_parse_sensor_data@reg_data	PTR const unsigned char  size(1) Largest target is 8
		 -> bme280_get_sensor_data@reg_data(BANK1[8]), 

    bme280_get_sensor_data@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> Sleep(), 

    bme280_get_sensor_data@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> WriteEnvSensor(), 

    bme280_get_sensor_data@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> ReadEnvSensor(), 

    bme280_get_sensor_data@comp_data	PTR struct bme280_data size(1) Largest target is 12
		 -> main@sensor_data(BANK2[12]), 

    bme280_get_sensor_data@dev	PTR struct bme280_dev size(1) Largest target is 51
		 -> EnvSensor(BANK3[51]), 

    bme280_soft_reset@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> Sleep(), 

    bme280_soft_reset@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> WriteEnvSensor(), 

    bme280_soft_reset@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> ReadEnvSensor(), 

    bme280_soft_reset@dev	PTR const struct bme280_dev size(1) Largest target is 51
		 -> EnvSensor(BANK3[51]), 

    bme280_get_sensor_mode@sensor_mode	PTR unsigned char  size(1) Largest target is 1
		 -> bme280_set_sensor_mode@last_set_mode(BANK1[1]), bme280_set_sensor_settings@sensor_mode(BANK1[1]), 

    bme280_get_sensor_mode@dev	PTR const struct bme280_dev size(1) Largest target is 51
		 -> EnvSensor(BANK3[51]), 

    bme280_set_sensor_mode@dev	PTR const struct bme280_dev size(1) Largest target is 51
		 -> EnvSensor(BANK3[51]), 

    bme280_get_sensor_settings@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> Sleep(), 

    bme280_get_sensor_settings@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> WriteEnvSensor(), 

    bme280_get_sensor_settings@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> ReadEnvSensor(), 

    bme280_set_sensor_settings@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> Sleep(), 

    bme280_set_sensor_settings@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> WriteEnvSensor(), 

    bme280_set_sensor_settings@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> ReadEnvSensor(), 

    bme280_set_sensor_settings@dev	PTR const struct bme280_dev size(1) Largest target is 51
		 -> EnvSensor(BANK3[51]), 

    bme280_set_regs@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> Sleep(), 

    bme280_set_regs@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> WriteEnvSensor(), 

    bme280_set_regs@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> ReadEnvSensor(), 

    bme280_set_regs@reg_data	PTR const unsigned char  size(1) Largest target is 1
		 -> write_power_mode@sensor_mode_reg_val(BANK0[1]), set_filter_standby_settings@reg_data(BANK0[1]), set_osr_press_temp_settings@reg_data(BANK0[1]), set_osr_humidity_settings@ctrl_meas(BANK0[1]), 
		 -> set_osr_humidity_settings@ctrl_hum(BANK0[1]), bme280_soft_reset@soft_rst_cmd(BANK0[1]), 

    bme280_set_regs@reg_addr	PTR unsigned char  size(1) Largest target is 1
		 -> write_power_mode@reg_addr(BANK0[1]), set_filter_standby_settings@reg_addr(BANK0[1]), set_osr_press_temp_settings@reg_addr(BANK0[1]), set_osr_humidity_settings@reg_addr(BANK0[1]), 
		 -> bme280_soft_reset@reg_addr(BANK0[1]), 

    bme280_set_regs@dev	PTR const struct bme280_dev size(1) Largest target is 51
		 -> EnvSensor(BANK3[51]), 

    bme280_get_regs@reg_data	PTR unsigned char  size(1) Largest target is 26
		 -> get_calib_data@calib_data(BANK0[26]), put_device_to_sleep@reg_data(BANK1[4]), write_power_mode@sensor_mode_reg_val(BANK0[1]), set_filter_standby_settings@reg_data(BANK0[1]), 
		 -> set_osr_press_temp_settings@reg_data(BANK0[1]), set_osr_humidity_settings@ctrl_meas(BANK0[1]), bme280_get_sensor_data@reg_data(BANK1[8]), bme280_set_sensor_mode@last_set_mode(BANK1[1]), 
		 -> bme280_get_sensor_settings@reg_data(COMMON[4]), bme280_set_sensor_settings@sensor_mode(BANK1[1]), bme280_init@chip_id(BANK0[1]), 

    bme280_get_regs@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> Sleep(), 

    bme280_get_regs@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> WriteEnvSensor(), 

    bme280_get_regs@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> ReadEnvSensor(), 

    bme280_get_regs@dev	PTR const struct bme280_dev size(1) Largest target is 51
		 -> EnvSensor(BANK3[51]), 

    S54bme280_dev$delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> Sleep(), 

    bme280_init@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> Sleep(), 

    S54bme280_dev$write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> WriteEnvSensor(), 

    bme280_init@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> WriteEnvSensor(), 

    S54bme280_dev$read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> ReadEnvSensor(), 

    bme280_init@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> ReadEnvSensor(), 

    bme280_init@dev	PTR struct bme280_dev size(1) Largest target is 51
		 -> EnvSensor(BANK3[51]), 


Critical Paths under _main in COMMON

    _main->_InsertString
    _main->_IntToString
    _crc16->_crc16_update
    _crc16_update->_strlen
    _compensate_temperature->___aldiv
    _compensate_pressure->___lldiv
    _compensate_humidity->___aldiv
    ___aldiv->___lmul
    _UIntToString->___lldiv
    _TransmitString->_TransmitChar
    _TransmitChar->_TransmitBit
    _TransmitBit->_Sleep
    _SetupGPS->_Sleep
    _SetupGPS->_WriteGPS
    _GPS_SendUBX->_GetLengthUBX
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _PollGPS->_InsertString
    _WriteGPS->_strlen
    _InsertString->_Insert
    _ClearString->_strlen
    _IntToString->_ReverseString
    _ReverseString->___awdiv
    _InitTiming->_TMR0_SetInterruptHandler
    _get_calib_data->_parse_humidity_calib_data
    _ReadEnvSensor->_I2C_ReadByte
    _ReadEnvSensor->_I2C_WriteByte
    _WriteEnvSensor->_I2C_WriteByte
    _I2C_Wait_SSPIF->_DebugAlert
    _DebugAlert->_Sleep

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    None.

Critical Paths under _main in BANK0

    _crc16->_crc16_update
    _bme280_get_sensor_data->_bme280_compensate_data
    _bme280_compensate_data->_compensate_humidity
    _compensate_temperature->___aldiv
    _compensate_pressure->___aldiv
    _compensate_humidity->___aldiv
    _UIntToString->_ReverseString
    _UIntToHexString->_crc16
    _TransmitString->_TransmitChar
    _SetupGPS->_GPS_HasAcknowledged
    _PollGPS->_InsertString
    _IntToString->_ReverseString
    _BME280_Init->_bme280_set_sensor_mode
    _BME280_Init->_bme280_set_sensor_settings
    _bme280_set_sensor_settings->_put_device_to_sleep
    _bme280_set_sensor_mode->_put_device_to_sleep
    _write_power_mode->_bme280_set_regs
    _put_device_to_sleep->_reload_device_settings
    _reload_device_settings->_set_osr_settings
    _set_osr_settings->_set_osr_humidity_settings
    _set_osr_settings->_set_osr_press_temp_settings
    _set_osr_press_temp_settings->_bme280_set_regs
    _set_osr_humidity_settings->_bme280_set_regs
    _set_filter_standby_settings->_bme280_set_regs
    _bme280_get_sensor_mode->_bme280_get_regs
    _bme280_init->_get_calib_data
    _get_calib_data->_bme280_get_regs
    _bme280_get_regs->_ReadEnvSensor
    _ReadEnvSensor->_I2C_ReadByte
    _I2C_ReadByte->_I2C_Wait_SSPIF
    _bme280_soft_reset->_bme280_set_regs
    _bme280_set_regs->_WriteEnvSensor
    _WriteEnvSensor->_I2C_Wait_SSPIF
    _I2C_WriteByte->_I2C_Wait_SSPIF
    _I2C_Stop->_I2C_Wait_SSPIF
    _I2C_Wait_SSPIF->_DebugAlert

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_bme280_get_sensor_data
    _bme280_compensate_data->_compensate_pressure
    _BME280_Init->_bme280_set_sensor_mode
    _BME280_Init->_bme280_set_sensor_settings
    _bme280_set_sensor_settings->_put_device_to_sleep
    _bme280_set_sensor_mode->_put_device_to_sleep

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                37    37      0  469647
                                             67 BANK1      5     5      0
                                              0 BANK2     32    32      0
                        _BME280_Init
                        _ClearString
                         _DebugAlert
                         _InitTiming
                             _Insert
                       _InsertString
                        _IntToString
                            _PollGPS
                  _SYSTEM_Initialize
                           _SetupGPS
                              _Sleep
                     _TransmitString
                    _UIntToHexString
                       _UIntToString
             _bme280_get_sensor_data
                              _crc16
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _crc16                                                9     7      2    1494
                                              1 BANK0      9     7      2
                       _crc16_update
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _crc16_update                                        10     4      6     486
                                              5 COMMON     9     3      6
                                              0 BANK0      1     1      0
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (1) _bme280_get_sensor_data                              27    25      2   43322
                                             65 BANK0      5     3      2
                                             45 BANK1     22    22      0
             _bme280_compensate_data
                    _bme280_get_regs
           _bme280_parse_sensor_data
                     _null_ptr_check
 ---------------------------------------------------------------------------------
 (2) _bme280_parse_sensor_data                            22    21      1     535
                                              0 COMMON     9     8      1
                                              0 BANK0     13    13      0
 ---------------------------------------------------------------------------------
 (2) _bme280_compensate_data                               6     3      3   29189
                                             59 BANK0      6     3      3
                _compensate_humidity
                _compensate_pressure
             _compensate_temperature
 ---------------------------------------------------------------------------------
 (3) _compensate_temperature                              39    35      4    9029
                                             14 BANK0     39    35      4
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) _compensate_pressure                                 67    63      4   10255
                                             14 BANK0     22    18      4
                                              0 BANK1     45    45      0
                            ___aldiv
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) _compensate_humidity                                 45    41      4    9257
                                             14 BANK0     45    41      4
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8    3588
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             15     7      8    4860
                                             12 COMMON     1     1      0
                                              0 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _UIntToString                                         9     4      5    3258
                                              9 BANK0      9     4      5
                      _ReverseString
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     311
                                              0 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             14     6      8     618
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _UIntToHexString                                     19    14      5    2268
                                             10 BANK0     19    14      5
                      _ReverseString
                              _crc16 (ARG)
 ---------------------------------------------------------------------------------
 (1) _TransmitString                                       7     5      2    1672
                                              3 BANK0      7     5      2
                       _TransmitChar
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _TransmitChar                                         4     4      0     806
                                             13 COMMON     1     1      0
                                              0 BANK0      3     3      0
                        _TransmitBit
 ---------------------------------------------------------------------------------
 (3) _TransmitBit                                          1     1      0     676
                                             12 COMMON     1     1      0
                              _Sleep
 ---------------------------------------------------------------------------------
 (1) _SetupGPS                                             1     1      0    2797
                                             12 COMMON     1     1      0
                _GPS_HasAcknowledged
                        _GPS_SendUBX
                              _Sleep
                           _WriteGPS
 ---------------------------------------------------------------------------------
 (2) _GPS_SendUBX                                          6     6      0     245
                                              4 COMMON     6     6      0
                      _EUSART1_Write
                       _GetLengthUBX
 ---------------------------------------------------------------------------------
 (3) _GetLengthUBX                                         4     1      3      77
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (2) _GPS_HasAcknowledged                                 22    22      0     618
                                              0 COMMON     4     4      0
                                              0 BANK0     18    18      0
                       _EUSART1_Read
                _EUSART1_is_rx_ready
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     491
                 _EUSART1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     174
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     317
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2     121
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _PollGPS                                             28    28      0   21469
                                             12 BANK0     28    28      0
                      _ClearMessages
                        _ClearString
                       _EUSART1_Read
                _EUSART1_is_rx_ready
                             _Insert
                       _InsertString
                           _WriteGPS
                             _strcmp
 ---------------------------------------------------------------------------------
 (2) _strcmp                                               4     2      2     221
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (2) _WriteGPS                                             7     5      2    1289
                                              5 COMMON     7     5      2
                      _EUSART1_Write
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _EUSART1_Write                                        1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _InsertString                                        13     5      8   10169
                                             13 COMMON     1     1      0
                                              0 BANK0     12     4      8
                             _Insert
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _Insert                                              13     6      7    6714
                                              0 COMMON    13     6      7
 ---------------------------------------------------------------------------------
 (3) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EUSART1_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ClearString                                          7     5      2    1026
                                              5 COMMON     7     5      2
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _ClearMessages                                        3     3      0      90
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _IntToString                                          8     5      3    3972
                                             11 COMMON     3     0      3
                                              9 BANK0      5     5      0
                      _ReverseString
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) _ReverseString                                       11    11      0    1868
                                              9 COMMON     2     2      0
                                              0 BANK0      9     9      0
                            ___awdiv
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _strlen                                               5     3      2     622
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     756
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _InitTiming                                           0     0      0     174
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2     174
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _BME280_Init                                          4     4      0  366883
                                             14 BANK1      4     4      0
                         _DebugAlert
                           _I2C_Init
                        _bme280_init
             _bme280_set_sensor_mode
         _bme280_set_sensor_settings
 ---------------------------------------------------------------------------------
 (2) _bme280_set_sensor_settings                           6     5      1  187200
                                             76 BANK0      3     2      1
                                             11 BANK1      3     3      0
               _are_settings_changed
             _bme280_get_sensor_mode
                     _null_ptr_check
                _put_device_to_sleep
        _set_filter_standby_settings
                   _set_osr_settings
 ---------------------------------------------------------------------------------
 (3) _are_settings_changed                                 3     2      1     282
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (2) _bme280_set_sensor_mode                               6     5      1  137160
                                             76 BANK0      3     2      1
                                             11 BANK1      3     3      0
             _bme280_get_sensor_mode
                     _null_ptr_check
                _put_device_to_sleep
                   _write_power_mode
 ---------------------------------------------------------------------------------
 (3) _write_power_mode                                     8     7      1   23631
                                             51 BANK0      8     7      1
                    _bme280_get_regs
                    _bme280_set_regs
 ---------------------------------------------------------------------------------
 (3) _put_device_to_sleep                                 14    14      0   99150
                                             73 BANK0      3     3      0
                                              0 BANK1     11    11      0
                    _bme280_get_regs
                  _bme280_soft_reset
              _parse_device_settings
             _reload_device_settings
 ---------------------------------------------------------------------------------
 (4) _reload_device_settings                               5     4      1   73487
                                             68 BANK0      5     4      1
        _set_filter_standby_settings
                   _set_osr_settings
 ---------------------------------------------------------------------------------
 (3) _set_osr_settings                                     7     4      3   48691
                                             61 BANK0      7     4      3
          _set_osr_humidity_settings
        _set_osr_press_temp_settings
 ---------------------------------------------------------------------------------
 (4) _set_osr_press_temp_settings                         10     7      3   24298
                                             51 BANK0     10     7      3
                    _bme280_get_regs
                    _bme280_set_regs
            _fill_osr_press_settings
             _fill_osr_temp_settings
 ---------------------------------------------------------------------------------
 (5) _fill_osr_temp_settings                               6     4      2     219
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (5) _fill_osr_press_settings                              6     4      2     219
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (4) _set_osr_humidity_settings                           10     7      3   23776
                                             51 BANK0     10     7      3
                    _bme280_get_regs
                    _bme280_set_regs
 ---------------------------------------------------------------------------------
 (3) _set_filter_standby_settings                         10     7      3   24478
                                             51 BANK0     10     7      3
                    _bme280_get_regs
                    _bme280_set_regs
               _fill_filter_settings
              _fill_standby_settings
 ---------------------------------------------------------------------------------
 (4) _fill_standby_settings                                6     4      2     219
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (4) _fill_filter_settings                                 6     4      2     219
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (4) _parse_device_settings                                4     3      1     562
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (3) _bme280_get_sensor_mode                               6     5      1   13430
                                             32 BANK0      6     5      1
                    _bme280_get_regs
                     _null_ptr_check
 ---------------------------------------------------------------------------------
 (2) _bme280_init                                          7     7      0   40818
                                             64 BANK0      7     7      0
                              _Sleep *
                    _bme280_get_regs
                  _bme280_soft_reset
                     _get_calib_data
                     _null_ptr_check
 ---------------------------------------------------------------------------------
 (3) _get_calib_data                                      32    32      0   14513
                                             32 BANK0     32    32      0
                    _bme280_get_regs
          _parse_humidity_calib_data
        _parse_temp_press_calib_data
 ---------------------------------------------------------------------------------
 (4) _parse_temp_press_calib_data                          4     3      1     968
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (4) _parse_humidity_calib_data                           14    13      1     510
                                              0 COMMON    14    13      1
 ---------------------------------------------------------------------------------
 (2) _bme280_get_regs                                      9     5      4   12470
                                             23 BANK0      9     5      4
                      _ReadEnvSensor *
                     _null_ptr_check
 ---------------------------------------------------------------------------------
 (3) _ReadEnvSensor                                       10     5      5    8662
                                             13 BANK0     10     5      5
                       _I2C_ReadByte
                           _I2C_Stop
                     _I2C_Wait_SSPIF
                      _I2C_WriteByte
 ---------------------------------------------------------------------------------
 (4) _I2C_ReadByte                                         3     3      0    1650
                                             13 COMMON     1     1      0
                                             11 BANK0      2     2      0
                     _I2C_Wait_SSPIF
 ---------------------------------------------------------------------------------
 (4) _bme280_soft_reset                                    7     7      0   12168
                                             51 BANK0      7     7      0
                              _Sleep *
                    _bme280_set_regs
                     _null_ptr_check
 ---------------------------------------------------------------------------------
 (5) _bme280_set_regs                                     31    28      3   10716
                                             20 BANK0     31    28      3
                     _WriteEnvSensor *
                _interleave_reg_addr
                     _null_ptr_check
 ---------------------------------------------------------------------------------
 (2) _null_ptr_check                                       4     4      0     485
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (6) _interleave_reg_addr                                  8     5      3     622
                                              0 COMMON     8     5      3
 ---------------------------------------------------------------------------------
 (6) _WriteEnvSensor                                       9     4      5    6857
                                             11 BANK0      9     4      5
                           _I2C_Stop
                     _I2C_Wait_SSPIF
                      _I2C_WriteByte
 ---------------------------------------------------------------------------------
 (4) _I2C_WriteByte                                        1     1      0    3201
                                             13 COMMON     1     1      0
                      _I2C_UserAlert
                     _I2C_Wait_SSPIF
 ---------------------------------------------------------------------------------
 (5) _I2C_UserAlert                                        1     1      0    1585
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (6) _I2C_Stop                                             0     0      0    1585
                     _I2C_Wait_SSPIF
 ---------------------------------------------------------------------------------
 (5) _I2C_Wait_SSPIF                                       4     4      0    1585
                                              7 BANK0      4     4      0
                         _DebugAlert
 ---------------------------------------------------------------------------------
 (6) _DebugAlert                                           8     3      5    1585
                                             12 COMMON     1     1      0
                                              0 BANK0      7     2      5
                              _Sleep
 ---------------------------------------------------------------------------------
 (7) _Sleep                                               12     8      4     645
                                              0 COMMON    12     8      4
 ---------------------------------------------------------------------------------
 (2) _I2C_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _INTERRUPT_InterruptManager                          0     0      0       0
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (16) _TMR0_ISR                                            0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                           _TimerISR *
 ---------------------------------------------------------------------------------
 (17) _TimerISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BME280_Init
     _DebugAlert
       _Sleep
     _I2C_Init
     _bme280_init
       _Sleep *
       _bme280_get_regs *
         _ReadEnvSensor *
           _I2C_ReadByte
             _I2C_Wait_SSPIF
               _DebugAlert
                 _Sleep
           _I2C_Stop
             _I2C_Wait_SSPIF
               _DebugAlert
                 _Sleep
           _I2C_Wait_SSPIF
             _DebugAlert
               _Sleep
           _I2C_WriteByte
             _I2C_UserAlert
               _I2C_Stop
                 _I2C_Wait_SSPIF
                   _DebugAlert
                     _Sleep
             _I2C_Wait_SSPIF
               _DebugAlert
                 _Sleep
         _null_ptr_check *
       _bme280_soft_reset *
         _Sleep *
         _bme280_set_regs *
           _WriteEnvSensor *
             _I2C_Stop
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
             _I2C_Wait_SSPIF
               _DebugAlert
                 _Sleep
             _I2C_WriteByte
               _I2C_UserAlert
                 _I2C_Stop
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
           _interleave_reg_addr *
           _null_ptr_check *
         _null_ptr_check *
       _get_calib_data *
         _bme280_get_regs
           _ReadEnvSensor *
             _I2C_ReadByte
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
             _I2C_Stop
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
             _I2C_Wait_SSPIF
               _DebugAlert
                 _Sleep
             _I2C_WriteByte
               _I2C_UserAlert
                 _I2C_Stop
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
           _null_ptr_check *
         _parse_humidity_calib_data
         _parse_temp_press_calib_data
       _null_ptr_check *
     _bme280_set_sensor_mode
       _bme280_get_sensor_mode
         _bme280_get_regs
           _ReadEnvSensor *
             _I2C_ReadByte
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
             _I2C_Stop
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
             _I2C_Wait_SSPIF
               _DebugAlert
                 _Sleep
             _I2C_WriteByte
               _I2C_UserAlert
                 _I2C_Stop
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
           _null_ptr_check *
         _null_ptr_check
       _null_ptr_check
       _put_device_to_sleep
         _bme280_get_regs
           _ReadEnvSensor *
             _I2C_ReadByte
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
             _I2C_Stop
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
             _I2C_Wait_SSPIF
               _DebugAlert
                 _Sleep
             _I2C_WriteByte
               _I2C_UserAlert
                 _I2C_Stop
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
           _null_ptr_check *
         _bme280_soft_reset
           _Sleep *
           _bme280_set_regs *
             _WriteEnvSensor *
               _I2C_Stop
                 _I2C_Wait_SSPIF
                   _DebugAlert
                     _Sleep
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
               _I2C_WriteByte
                 _I2C_UserAlert
                   _I2C_Stop
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                 _I2C_Wait_SSPIF
                   _DebugAlert
                     _Sleep
             _interleave_reg_addr *
             _null_ptr_check *
           _null_ptr_check *
         _parse_device_settings
         _reload_device_settings
           _set_filter_standby_settings
             _bme280_get_regs
               _ReadEnvSensor *
                 _I2C_ReadByte
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
                 _I2C_Stop
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
                 _I2C_Wait_SSPIF
                   _DebugAlert
                     _Sleep
                 _I2C_WriteByte
                   _I2C_UserAlert
                     _I2C_Stop
                       _I2C_Wait_SSPIF
                         _DebugAlert
                           _Sleep
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
               _null_ptr_check *
             _bme280_set_regs
               _WriteEnvSensor *
                 _I2C_Stop
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
                 _I2C_Wait_SSPIF
                   _DebugAlert
                     _Sleep
                 _I2C_WriteByte
                   _I2C_UserAlert
                     _I2C_Stop
                       _I2C_Wait_SSPIF
                         _DebugAlert
                           _Sleep
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
               _interleave_reg_addr *
               _null_ptr_check *
             _fill_filter_settings
             _fill_standby_settings
           _set_osr_settings
             _set_osr_humidity_settings
               _bme280_get_regs
                 _ReadEnvSensor *
                   _I2C_ReadByte
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                   _I2C_Stop
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
                   _I2C_WriteByte
                     _I2C_UserAlert
                       _I2C_Stop
                         _I2C_Wait_SSPIF
                           _DebugAlert
                             _Sleep
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                 _null_ptr_check *
               _bme280_set_regs
                 _WriteEnvSensor *
                   _I2C_Stop
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
                   _I2C_WriteByte
                     _I2C_UserAlert
                       _I2C_Stop
                         _I2C_Wait_SSPIF
                           _DebugAlert
                             _Sleep
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                 _interleave_reg_addr *
                 _null_ptr_check *
             _set_osr_press_temp_settings
               _bme280_get_regs
                 _ReadEnvSensor *
                   _I2C_ReadByte
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                   _I2C_Stop
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
                   _I2C_WriteByte
                     _I2C_UserAlert
                       _I2C_Stop
                         _I2C_Wait_SSPIF
                           _DebugAlert
                             _Sleep
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                 _null_ptr_check *
               _bme280_set_regs
                 _WriteEnvSensor *
                   _I2C_Stop
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
                   _I2C_WriteByte
                     _I2C_UserAlert
                       _I2C_Stop
                         _I2C_Wait_SSPIF
                           _DebugAlert
                             _Sleep
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                 _interleave_reg_addr *
                 _null_ptr_check *
               _fill_osr_press_settings
               _fill_osr_temp_settings
       _write_power_mode
         _bme280_get_regs
           _ReadEnvSensor *
             _I2C_ReadByte
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
             _I2C_Stop
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
             _I2C_Wait_SSPIF
               _DebugAlert
                 _Sleep
             _I2C_WriteByte
               _I2C_UserAlert
                 _I2C_Stop
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
           _null_ptr_check *
         _bme280_set_regs
           _WriteEnvSensor *
             _I2C_Stop
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
             _I2C_Wait_SSPIF
               _DebugAlert
                 _Sleep
             _I2C_WriteByte
               _I2C_UserAlert
                 _I2C_Stop
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
           _interleave_reg_addr *
           _null_ptr_check *
     _bme280_set_sensor_settings
       _are_settings_changed
       _bme280_get_sensor_mode
         _bme280_get_regs
           _ReadEnvSensor *
             _I2C_ReadByte
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
             _I2C_Stop
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
             _I2C_Wait_SSPIF
               _DebugAlert
                 _Sleep
             _I2C_WriteByte
               _I2C_UserAlert
                 _I2C_Stop
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
           _null_ptr_check *
         _null_ptr_check
       _null_ptr_check
       _put_device_to_sleep
         _bme280_get_regs
           _ReadEnvSensor *
             _I2C_ReadByte
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
             _I2C_Stop
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
             _I2C_Wait_SSPIF
               _DebugAlert
                 _Sleep
             _I2C_WriteByte
               _I2C_UserAlert
                 _I2C_Stop
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
           _null_ptr_check *
         _bme280_soft_reset
           _Sleep *
           _bme280_set_regs *
             _WriteEnvSensor *
               _I2C_Stop
                 _I2C_Wait_SSPIF
                   _DebugAlert
                     _Sleep
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
               _I2C_WriteByte
                 _I2C_UserAlert
                   _I2C_Stop
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                 _I2C_Wait_SSPIF
                   _DebugAlert
                     _Sleep
             _interleave_reg_addr *
             _null_ptr_check *
           _null_ptr_check *
         _parse_device_settings
         _reload_device_settings
           _set_filter_standby_settings
             _bme280_get_regs
               _ReadEnvSensor *
                 _I2C_ReadByte
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
                 _I2C_Stop
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
                 _I2C_Wait_SSPIF
                   _DebugAlert
                     _Sleep
                 _I2C_WriteByte
                   _I2C_UserAlert
                     _I2C_Stop
                       _I2C_Wait_SSPIF
                         _DebugAlert
                           _Sleep
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
               _null_ptr_check *
             _bme280_set_regs
               _WriteEnvSensor *
                 _I2C_Stop
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
                 _I2C_Wait_SSPIF
                   _DebugAlert
                     _Sleep
                 _I2C_WriteByte
                   _I2C_UserAlert
                     _I2C_Stop
                       _I2C_Wait_SSPIF
                         _DebugAlert
                           _Sleep
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
               _interleave_reg_addr *
               _null_ptr_check *
             _fill_filter_settings
             _fill_standby_settings
           _set_osr_settings
             _set_osr_humidity_settings
               _bme280_get_regs
                 _ReadEnvSensor *
                   _I2C_ReadByte
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                   _I2C_Stop
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
                   _I2C_WriteByte
                     _I2C_UserAlert
                       _I2C_Stop
                         _I2C_Wait_SSPIF
                           _DebugAlert
                             _Sleep
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                 _null_ptr_check *
               _bme280_set_regs
                 _WriteEnvSensor *
                   _I2C_Stop
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
                   _I2C_WriteByte
                     _I2C_UserAlert
                       _I2C_Stop
                         _I2C_Wait_SSPIF
                           _DebugAlert
                             _Sleep
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                 _interleave_reg_addr *
                 _null_ptr_check *
             _set_osr_press_temp_settings
               _bme280_get_regs
                 _ReadEnvSensor *
                   _I2C_ReadByte
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                   _I2C_Stop
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
                   _I2C_WriteByte
                     _I2C_UserAlert
                       _I2C_Stop
                         _I2C_Wait_SSPIF
                           _DebugAlert
                             _Sleep
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                 _null_ptr_check *
               _bme280_set_regs
                 _WriteEnvSensor *
                   _I2C_Stop
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
                   _I2C_WriteByte
                     _I2C_UserAlert
                       _I2C_Stop
                         _I2C_Wait_SSPIF
                           _DebugAlert
                             _Sleep
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                 _interleave_reg_addr *
                 _null_ptr_check *
               _fill_osr_press_settings
               _fill_osr_temp_settings
       _set_filter_standby_settings
         _bme280_get_regs
           _ReadEnvSensor *
             _I2C_ReadByte
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
             _I2C_Stop
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
             _I2C_Wait_SSPIF
               _DebugAlert
                 _Sleep
             _I2C_WriteByte
               _I2C_UserAlert
                 _I2C_Stop
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
           _null_ptr_check *
         _bme280_set_regs
           _WriteEnvSensor *
             _I2C_Stop
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
             _I2C_Wait_SSPIF
               _DebugAlert
                 _Sleep
             _I2C_WriteByte
               _I2C_UserAlert
                 _I2C_Stop
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
           _interleave_reg_addr *
           _null_ptr_check *
         _fill_filter_settings
         _fill_standby_settings
       _set_osr_settings
         _set_osr_humidity_settings
           _bme280_get_regs
             _ReadEnvSensor *
               _I2C_ReadByte
                 _I2C_Wait_SSPIF
                   _DebugAlert
                     _Sleep
               _I2C_Stop
                 _I2C_Wait_SSPIF
                   _DebugAlert
                     _Sleep
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
               _I2C_WriteByte
                 _I2C_UserAlert
                   _I2C_Stop
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                 _I2C_Wait_SSPIF
                   _DebugAlert
                     _Sleep
             _null_ptr_check *
           _bme280_set_regs
             _WriteEnvSensor *
               _I2C_Stop
                 _I2C_Wait_SSPIF
                   _DebugAlert
                     _Sleep
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
               _I2C_WriteByte
                 _I2C_UserAlert
                   _I2C_Stop
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                 _I2C_Wait_SSPIF
                   _DebugAlert
                     _Sleep
             _interleave_reg_addr *
             _null_ptr_check *
         _set_osr_press_temp_settings
           _bme280_get_regs
             _ReadEnvSensor *
               _I2C_ReadByte
                 _I2C_Wait_SSPIF
                   _DebugAlert
                     _Sleep
               _I2C_Stop
                 _I2C_Wait_SSPIF
                   _DebugAlert
                     _Sleep
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
               _I2C_WriteByte
                 _I2C_UserAlert
                   _I2C_Stop
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                 _I2C_Wait_SSPIF
                   _DebugAlert
                     _Sleep
             _null_ptr_check *
           _bme280_set_regs
             _WriteEnvSensor *
               _I2C_Stop
                 _I2C_Wait_SSPIF
                   _DebugAlert
                     _Sleep
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
               _I2C_WriteByte
                 _I2C_UserAlert
                   _I2C_Stop
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                 _I2C_Wait_SSPIF
                   _DebugAlert
                     _Sleep
             _interleave_reg_addr *
             _null_ptr_check *
           _fill_osr_press_settings
           _fill_osr_temp_settings
   _ClearString
     _strlen
   _DebugAlert
     _Sleep
   _InitTiming
     _TMR0_SetInterruptHandler
   _Insert
   _InsertString
     _Insert
     _strlen
   _IntToString
     _ReverseString
       ___awdiv
       _strlen
     ___awdiv
     ___awmod
   _PollGPS
     _ClearMessages
     _ClearString
       _strlen
     _EUSART1_Read
     _EUSART1_is_rx_ready
     _Insert
     _InsertString
       _Insert
       _strlen
     _WriteGPS
       _EUSART1_Write
       _strlen
     _strcmp
   _SYSTEM_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
   _SetupGPS
     _GPS_HasAcknowledged
       _EUSART1_Read
       _EUSART1_is_rx_ready
     _GPS_SendUBX
       _EUSART1_Write
       _GetLengthUBX
     _Sleep
     _WriteGPS
       _EUSART1_Write
       _strlen
   _Sleep
   _TransmitString
     _TransmitChar
       _TransmitBit
         _Sleep
     _strlen
   _UIntToHexString
     _ReverseString
       ___awdiv
       _strlen
     _crc16 (ARG)
       _crc16_update
         _strlen (ARG)
       _strlen
   _UIntToString
     _ReverseString
       ___awdiv
       _strlen
     ___lldiv
     ___llmod
   _bme280_get_sensor_data
     _bme280_compensate_data
       _compensate_humidity
         ___aldiv
           ___lmul (ARG)
         ___lmul
       _compensate_pressure
         ___aldiv
           ___lmul (ARG)
         ___lldiv
         ___lmul
       _compensate_temperature
         ___aldiv
           ___lmul (ARG)
         ___lmul
     _bme280_get_regs
       _ReadEnvSensor *
         _I2C_ReadByte
           _I2C_Wait_SSPIF
             _DebugAlert
               _Sleep
         _I2C_Stop
           _I2C_Wait_SSPIF
             _DebugAlert
               _Sleep
         _I2C_Wait_SSPIF
           _DebugAlert
             _Sleep
         _I2C_WriteByte
           _I2C_UserAlert
             _I2C_Stop
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
           _I2C_Wait_SSPIF
             _DebugAlert
               _Sleep
       _null_ptr_check *
     _bme280_parse_sensor_data
     _null_ptr_check
   _crc16
     _crc16_update
       _strlen (ARG)
     _strlen
   _strlen

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _TimerISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      4F       5       98.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
ABS                  0      0     203       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     48      50       8      100.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50     20      4F      10       98.8%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0      4F      12       98.8%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0      2C      14       55.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0      46      16       87.5%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0      46      18       87.5%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITBANK13           50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BANK13              50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITBANK14           50      0       0      33        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BANK14              50      0       0      34        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITBANK15           50      0       0      35        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BANK15              50      0       0      36        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITBANK16           50      0       0      37        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BANK16              50      0       0      38        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITBANK17           50      0       0      39        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BANK17              50      0       0      40        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITBANK18           50      0       0      41        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BANK18              50      0       0      42        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITBANK19           50      0       0      43        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BANK19              50      0       0      44        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITBANK20           50      0       0      45        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BANK20              50      0       0      46        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITBANK21           50      0       0      47        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BANK21              50      0       0      48        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITBANK22           50      0       0      49        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BANK22              50      0       0      50        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITBANK23           50      0       0      51        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BANK23              50      0       0      52        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITBANK24           50      0       0      53        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BANK24              50      0       0      54        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITBANK25           20      0       0      55        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BANK25              20      0       0      56        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
DATA                 0      0     203      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Tue Sep 10 13:03:56 2019

                           __end_of_ClearString 1852                                     __CFG_CP$OFF 0000  
              bme280_parse_sensor_data@data_lsb 0024                bme280_parse_sensor_data@data_msb 0028  
                                            l55 1247                                              l72 16DD  
                                            l65 1C6A                                    ___awdiv@sign 0076  
                               GPS_SendUBX@data 0079                                              _id 013F  
                    ?_set_osr_humidity_settings 0053                __end_of_bme280_parse_sensor_data 1800  
                                   __CFG_LVP$ON 0000                                             l126 148F  
                                           l152 1CE3                                             l208 0FF7  
                                           l146 1D29                                             l238 1827  
                                           l192 03FE                                             l185 0A98  
                                           l355 1801                                             l348 269F  
                                           l196 059A                                             l533 1D4D  
                                           l536 1D82                                             l642 1355  
                                           l645 1367                                             l815 0749  
                                           l831 0D2A                                             l665 13AB  
                                           l782 0610                                             l847 1B44  
                                           l769 1DED                                             l867 2715  
                                           l798 0704                                             l897 194D  
             bme280_parse_sensor_data@data_xlsb 0020                 __size_of_fill_osr_temp_settings 001C  
                       __size_of_PMD_Initialize 000A                                    ___awmod@sign 0076  
                                  __CFG_BORV$LO 0000                                             wreg 0009  
                                 __CFG_BBEN$OFF 0000                bme280_parse_sensor_data@reg_data 002C  
                                bme280_init@dev 0066                 __size_of_compensate_temperature 01A8  
                             ___g_timeout_start 013B                                  ReverseString@i 0026  
                                WriteGPS@counti 0078                                      _DebugAlert 18F0  
                                          l1119 14A4                                            l4040 1ECE  
                                          l4050 1ED6                                            l4034 1EC3  
                                          l4052 1EE2                                            l4300 1130  
                                          l4062 1EFD                                            l4302 116B  
                                          l4310 27C3                           __size_of_crc16_update 003D  
                                          l5104 1D74                                            l4400 198C  
                                          l4066 1F05                                            l4058 1EF4  
                                          l4324 18AC                                            l4500 1C1F  
                                          l6012 0D18                                            l5214 1A95  
                                          l5230 1C42                                            l4334 1883  
                                          l3702 1FEC                                            l4182 1491  
                                          l4174 145F                                            l5216 1AAD  
                                          l5304 1F5A                                            l4600 1416  
                                          l3720 14B5                                            l5146 182A  
                                          l5242 164A                                            l5322 1D3B  
                                          l4610 1188                                            l3706 1FF7  
                                          l3730 14D3                                            l4178 1476  
                                          l5148 182B                                            l5404 1E65  
                                          l5340 1942                                            l4372 156C  
                                          l4364 1564                                            l4356 154E  
                                          l5158 19F5                                            l5270 16A8  
                                          l5262 166E                                            l5190 1EB4  
                                          l5318 1D1E                                            l5430 1BE4  
                                          l4454 1C76                                            l4622 11D2  
                                          l4374 158B                                            l4366 1565  
                                          l3742 14FE                                            l5280 16DF  
                                          l5264 1688                                            l5184 1EA1  
                                          l5504 11F1                                            l5416 07FD  
                                          l5336 192F                                            l5440 269C  
                                          l4480 1CAC                                            l4472 1C9B  
                                          l3728 14C5                                            l5098 18F3  
                                          l5370 1B24                                            l5522 123D  
                                          l5354 1CD8                                            l5442 269D  
                                          l4466 1C83                                            l4458 1C7D  
                                          l5610 1F6C                                            l6074 06AE  
                                          l4378 158D                                            l4490 1BEE  
                                          l3746 150C                                            l3738 14F3  
                                          l3674 1A27                                            l5188 1E89  
                                          l5524 1240                                            l4468 1C8F  
                                          l4476 1CA4                                            l5612 1FA8  
                                          l4396 197F                                            l6076 0769  
                                          l3692 1FBE                                            l4492 1BFC  
                                          l4628 1007                                            l3844 0A82  
                                          l5278 16D8                                            l5518 1228  
                                          l5358 1CF5                                            l5382 1876  
                                          l5542 12E3                                            l5470 135E  
                                          l4398 1971                                            l3694 1FCC  
                                          l3678 1A31                                            l3846 0A90  
                                          l5630 1B4A                                            l5456 1AE9  
                                          l5608 1F9C                                            l4496 1C14  
                                          l3944 0FC8                                            l5570 1B91  
                                          l5554 1329                                            l5474 1363  
                                          l4594 13F6                                            l4586 13CC  
                                          l3938 0FB4                                            l5634 1B27  
                                          l5548 1306                                            l5724 12A4  
                                          l3972 26A9                                            l5484 139D  
                                          l5820 06A6                                            l5732 1DD1  
                                          l5492 2717                                            l3948 0FEF  
                                          l3884 03E2                                            l5636 1B5F  
                                          l5574 1BA2                                            l5830 06D4  
                                          l5822 06B9                                            l4598 1409  
                                          l3894 057F                                            l3984 2726  
                                          l5816 06A4                                            l5648 1A57  
                                          l3896 0587                                            l5912 1D8D  
                                          l3986 2732                                            l5850 072F  
                                          l3898 0592                                            l5914 1DC9  
                                          l5844 0712                                            l5836 06EA  
                                          l5828 06C0                                            l5780 0616  
                                          l5598 183A                                            l5870 0740  
                                          l5838 0709                                            l5790 062A  
                                          l5926 19A9                                            l5872 0749  
                                          l5864 0732                                            l5856 0730  
                                          l5880 05DC                                            l5778 0612  
                                          l5882 0798                                            l5946 0AAD  
                                          l5876 0764                                            l5788 0620  
                                          l5878 0792                                            l5798 0643  
                                          l5888 07D0                                            STR_1 284E  
                                          STR_2 2834                                            STR_3 2882  
                                          STR_4 281A                                            STR_5 2868  
                                          STR_6 2800                                            STR_7 289C  
                                          STR_8 28B1                                            STR_9 28AA  
                                          u3005 1A39                                            _LATA 0018  
                                          _LATB 0019                                            _LATC 001A  
                                          u3035 1FC1                                            u4005 27DC  
                                          u3125 14C8                                            u4015 18B6  
                                          u3055 1FCD                                            u4025 188D  
                                          u3065 1FE1                                            u3145 14D4  
                                          u3075 1FED                                            u3155 14E8  
                                          u4205 1C86                                            u3165 14F4  
                                          u3325 0158                                            u3335 0186  
                                          u6000 0625                                            u5025 1968  
                                          u4225 1C95                                            u4305 1C15  
                                          u3425 0D5E                                            u6010 0626  
                                          u5035 18FC                                            u4235 1C9C  
                                          u3435 0D7C                                            u3275 0912  
                                          u5125 1E9D                                            u3365 040E  
                                          u3285 0925                                            u6110 0684  
                                          u5135 1E8F                                            u3615 1EE3  
                                          u4415 13E9                                            u3375 042D  
                                          u3295 0990                                            u4440 117C  
                                          u6120 0685                                            u5145 1A9B  
                                          u3625 1EED                                            u6105 0674  
                                          u3385 0448                                            u4450 117D  
                                          u3635 1EF5                                            u6115 0680  
                                          u4275 1BF1                                            u3395 04BA  
                                          _PMD0 0796                                            u6205 071F  
                                          _PMD1 0797                                            _PMD2 0798  
                                          u6055 0654                                            u4295 1C0A  
                                          _PMD3 0799                                            _PMD4 079A  
                                          u5425 106D                                            u5345 2776  
                                          _PMD5 079B                                            _PMD6 079C  
                                          u5435 107F                                            u5355 2792  
                                          u5275 275A                                            u3595 1ED9  
                                          u4475 11BD                                            u6155 06DD  
                                          u3835 16EC                                            _PMD7 079D  
                                          u5445 1091                                            u5285 27AE  
                                          u3845 1703                                            u5470 1E24  
                                          u6327 196B                                            u2975 1619  
                                          u5455 10A4                                            u3855 1718  
                                          u3865 1759                                            u2995 1A32  
                                          u3875 1771                                            u6275 1D97  
                                          u6285 19B3                                            u3885 1786  
                                          u3895 17C8                                            u5840 1A63  
                                          u5585 1371                                            u5850 1A64  
                                          u5834 1A5D                                            u3995 113A  
                                          u5835 1A5C                                            u5950 05C7  
                                          u5870 10BB                                            u5775 1844  
                   __end_of_compensate_humidity 1000                                            u5880 10C8  
                                          u5785 1FA6                                            u5865 1A75  
                                          u5795 1F77                                            _WPUA 1F39  
                                          _WPUB 1F44                                            _WPUC 1F4F  
                        ??_fill_filter_settings 0072                       __size_of_write_power_mode 0039  
                        WriteEnvSensor@reg_addr 002C             bme280_parse_sensor_data@uncomp_data 0070  
                        WriteEnvSensor@reg_data 002D               bme280_get_sensor_data@uncomp_data 00D7  
                                 _EUSART1_Write 1800                                   __CFG_FCMEN$ON 0000  
               __size_of_bme280_set_sensor_mode 0040                       __size_of_set_osr_settings 002A  
                         __size_of_I2C_ReadByte 0019                             _put_device_to_sleep 1BA4  
                                          _main 0AA1                   compensate_humidity@calib_data 002E  
                          __end_of_GetLengthUBX 26E7                                   ?_EUSART1_Read 0070  
                              __end_of_I2C_Init 270E                                    TransmitBit@b 007C  
                                          fsr0h 0005                                            fsr1h 0007  
                                          indf0 0000                                            fsr0l 0004  
                                          indf1 0001                                            fsr1l 0006  
                                          btemp 007E                          interleave_reg_addr@len 0072  
                              __end_of_I2C_Stop 2646            are_settings_changed@desired_settings 0070  
                   put_device_to_sleep@reg_data 00A0                                   __CFG_BOREN$ON 0000  
                             GPS_SendUBX@length 0075                    GPS_HasAcknowledged@startTime 0020  
                                          start 000E                            bme280_soft_reset@dev 0059  
                               _HALF_BAUD_DELAY 28B9                     __end_of_compensate_pressure 05AA  
                                 __CFG_CSWEN$ON 0000                                   __CFG_MCLRE$ON 0000  
                reload_device_settings@settings 0067                         ??_fill_standby_settings 0072  
                                 ??_IntToString 0029                     put_device_to_sleep@settings 00A6  
                                 _ReadEnvSensor 1E68                                 __end_of_PollGPS 07D2  
                               bme280_init@rslt 0065                         __end_of_TMR0_Initialize 26FA  
                ??_TMR0_DefaultInterruptHandler 0070                                   PollGPS@F11346 0134  
                __size_of_OSCILLATOR_Initialize 0009                   __end_of_OSCILLATOR_Initialize 2680  
                          ?_put_device_to_sleep 0070                                PollGPS@startTime 0030  
                               __end_of___aldiv 1515                           ReverseString@opposite 0023  
                                         ?_main 0070                      GPS_HasAcknowledged@ackByte 0024  
                               __end_of___awdiv 1F0A                                           STR_10 28B6  
                                 __CFG_WDTE$OFF 0000                                 __end_of___awmod 1CB1  
                               WriteGPS@message 0075                                 __end_of___lldiv 2000  
                        _bme280_compensate_data 141A                                 ___awdiv@divisor 0070  
                               __end_of___llmod 1C28                                           i1l389 000C  
                               ___awdiv@counter 0075                                           _OSCEN 0891  
                                  _crc16_update 1B27                                           _TMR0H 059D  
                                         _TMR0L 059C                                      Insert@dest 0070  
                             _bme280_soft_reset 1AEB                                           _TRISA 0012  
                                         _TRISB 0013                                           _TRISC 0014  
                                    Insert@temp 007A               __size_of_TMR0_SetInterruptHandler 0006  
                      __size_of_bme280_get_regs 0044                             ___lmul@multiplicand 0074  
                     ?_TMR0_SetInterruptHandler 0070                                           _Sleep 1944  
                              __end_of_TMR0_ISR 26B8                  compensate_pressure@uncomp_data 00B4  
                    bme280_compensate_data@rslt 005F                              ?_bme280_soft_reset 0070  
                                  _I2C_ReadByte 2739                                   __CFG_WRTB$OFF 0000  
                                 __CFG_WRTC$OFF 0000                                   __CFG_WRTD$OFF 0000  
                      UIntToHexString@remainder 0035                                           _crc16 1D85  
                              crc16_update@wCrc 0079                                ?_UIntToHexString 002A  
                                  ?_GPS_SendUBX 0070                                           _ticks 00E8  
                                 TransmitChar@i 0021                                  ?_EUSART1_Write 0070  
                                         pclath 000A                         GPS_HasAcknowledged@data 002F  
                 __size_of_are_settings_changed 000B                                  ??_EUSART1_Read 0070  
                           ??_bme280_soft_reset 0053                                           status 0003  
                                         wtemp0 007E                                     _ClearString 182D  
                      __size_of_bme280_set_regs 00A1                                ??_get_calib_data 0040  
                        put_device_to_sleep@dev 00A4                           bme280_soft_reset@rslt 0057  
                        _fill_osr_temp_settings 27A5              _EUSART1_DefaultFramingErrorHandler 0000  
    bme280_set_sensor_settings@desired_settings 00AB                            __end_of_UIntToString 1059  
                 bme280_set_sensor_settings@dev 006C                                 __initialization 0010  
                         DebugAlert@num_flashes 0024                          _compensate_temperature 08F9  
                                    _InitTiming 266F               parse_humidity_calib_data@reg_data 007D  
                                ?_ReadEnvSensor 002D                      __end_of_EUSART1_Initialize 2800  
                                  __end_of_main 0D36                            GPS_HasAcknowledged@i 0031  
                                __CFG_SAFEN$OFF 0000                     ?_INTERRUPT_InterruptManager 0070  
                        _bme280_set_sensor_mode 1B64                           ??_put_device_to_sleep 0069  
                       ?_bme280_get_sensor_data 0061                       __end_of_bme280_soft_reset 1B27  
                       ?_bme280_get_sensor_mode 0040                                          ??_main 00E3  
                         __end_of_ReverseString 1175                             __end_of_IntToString 11DE  
                        __size_of_I2C_UserAlert 0003                         __size_of_WriteEnvSensor 0033  
                              ??_null_ptr_check 0070                 bme280_compensate_data@comp_data 005C  
             bme280_set_sensor_mode@sensor_mode 00AB                                ReverseString@str 0028  
                              __end_of_TimerISR 268A                 compensate_pressure@pressure_max 00B5  
                              __end_of_SetupGPS 1E1B                       bme280_get_sensor_data@dev 0062  
                         ReadEnvSensor@reg_addr 002E                                   ?_InsertString 0020  
                         ReadEnvSensor@reg_data 002F             write_power_mode@sensor_mode_reg_val 005A  
                                        ?_Sleep 0070                        _bme280_parse_sensor_data 16E1  
                                        ?_crc16 0021                                      Sleep@start 0078  
                        __size_of_I2C_WriteByte 000E                                ___llmod@dividend 0074  
                              ___awdiv@dividend 0072                                     ?_DebugAlert 0020  
                                        _ANSELA 1F38                                          _ANSELB 1F43  
                                        _ANSELC 1F4E                              __CFG_RSTOSC$HFINT1 0000  
                                        _T0CON0 059E                                          _T0CON1 059F  
                       __end_of_HALF_BAUD_DELAY 28BB                                __end_of_WriteGPS 18C7  
                                        _RC1REG 0119                        _compensate_humidity$2691 003A  
                                        _RC1STA 011D                        ??_reload_device_settings 0065  
                                        _RB4PPS 1F1C                                          _RB6PPS 1F1E  
                                        _RB7PPS 1F1F                                          _ODCONA 1F3A  
                                        _ODCONB 1F45                                          _ODCONC 1F50  
                  __size_of_EUSART1_is_rx_ready 0005                                  __CFG_WDTCCS$SC 0000  
                                        _INLVLA 1F3C                                          _INLVLB 1F47  
                                        _INLVLC 1F52                                          _OSCFRQ 0893  
                                        _TX1REG 011A                                          _TX1STA 011E  
                           I2C_ReadByte@rcvdata 002C                                     Insert@index 0073  
                  __size_of_interleave_reg_addr 002D                       bme280_get_sensor_mode@dev 0040  
                     bme280_set_sensor_mode@dev 006C                      ?_parse_humidity_calib_data 0070  
                                     ??_PollGPS 002C                                          _Insert 132C  
                                __CFG_PWRTS$OFF 0000                    fill_filter_settings@reg_data 0075  
                                        ___lmul 1A1F                               crc16_update@pData 0075  
                                     ??___aldiv 007C                                       ??___awdiv 0074  
                                        crc16@i 0028                                  __CFG_STVREN$ON 0000  
                                     ??___awmod 0074                                       ??___lldiv 0078  
                  parse_humidity_calib_data@dev 0070                                       ??___llmod 0078  
                __end_of_bme280_get_sensor_data 1110                             DebugAlert@delay_low 0022  
                      ?_EUSART1_SetErrorHandler 0070                  __end_of_bme280_get_sensor_mode 07FF  
                              ?_TMR0_Initialize 0070                  fill_osr_temp_settings@reg_data 0075  
                   compensate_pressure@pressure 00C5                                ___awdiv@quotient 0077  
                               ___awmod@divisor 0070                    fill_filter_settings@settings 0070  
                               ___awmod@counter 0075                ??_EUSART1_SetOverrunErrorHandler 0072  
               ?_EUSART1_SetOverrunErrorHandler 0070                                          _strcmp 196F  
                                        _strlen 2722                        interleave_reg_addr@index 0077  
                             get_calib_data@dev 005F                                    IntToString@i 002C  
                                  IntToString@n 007B                                 InsertString@src 0022  
                                _PMD_Initialize 268A                                       ?_I2C_Init 0070  
                       compensate_pressure@var1 00C9                         compensate_pressure@var2 00C1  
                       compensate_pressure@var3 00A0                         compensate_pressure@var4 00A4  
                       compensate_pressure@var5 00A8                                  ??_InsertString 007D  
                                     ?_I2C_Stop 0070                  fill_osr_temp_settings@settings 0070  
                              ??_TransmitString 0025                             write_power_mode@dev 0053  
                               ??_EUSART1_Write 0070        TMR0_SetInterruptHandler@InterruptHandler 0070  
                         __size_of_GetLengthUBX 0012                         put_device_to_sleep@rslt 00A5  
                                PollGPS@doParse 003E                               ??_bme280_get_regs 003B  
                              _write_power_mode 1AB2                bme280_compensate_data@calib_data 005D  
                  interleave_reg_addr@temp_buff 0070                               _SYSTEM_Initialize 26C6  
                       __end_of__initialization 004E                                _set_osr_settings 191A  
                                 _I2C_UserAlert 1001                              ?_SYSTEM_Initialize 0070  
                           main@convertedNumber 0147                            _UIntToHexString$1795 0031  
              compensate_temperature@calib_data 002E                 set_filter_standby_settings@rslt 005A  
                               ??_ReadEnvSensor 0032                             ReverseString@counti 0024  
                bme280_set_sensor_settings@rslt 00AD                         __size_of_I2C_Wait_SSPIF 0048  
                                 ??_bme280_init 0060                        get_calib_data@calib_data 0043  
                                __pcstackCOMMON 0070                                     ?_InitTiming 0070  
                                 __end_of_Sleep 196F                                  PollGPS@success 003D  
                                 _I2C_WriteByte 26B8                __size_of_fill_osr_press_settings 001B  
                                  __pidataBANK2 0800                                    __pidataBANK4 19C6  
                             ??_bme280_set_regs 0037                                   __end_of_crc16 1DCF  
                           ??_SYSTEM_Initialize 0072                                     _IntToString 1175  
                                     ?_TMR0_ISR 0070                set_osr_settings@desired_settings 0063  
                                 ??_TransmitBit 007C                             __size_of_DebugAlert 002A  
                                   PollGPS@byte 0043                                     PollGPS@skip 003B  
                        __end_of_PMD_Initialize 2694                      __size_of_bme280_soft_reset 003C  
                          __end_of_EUSART1_Read 26AB                     ??_set_osr_humidity_settings 0056  
                         _parse_device_settings 1059                                    _GetLengthUBX 26D5  
                                    ??_I2C_Init 0070                                      ??_I2C_Stop 007D  
              are_settings_changed@sub_settings 0071                                         ??_Sleep 0074  
                           set_osr_settings@dev 005F                                         ??_crc16 0023  
                   __end_of_GPS_HasAcknowledged 15A7                       __end_of_SYSTEM_Initialize 26D5  
                                    __pbssBANK1 00E8                                      __pbssBANK2 0120  
                                    __pbssBANK3 01A0                                      __pbssBANK5 02A0  
                                    __pbssBANK6 0320                                   ??_BME280_Init 00AE  
               __size_of_reload_device_settings 0026                     interleave_reg_addr@reg_addr 0076  
                         __size_of_UIntToString 0055                            __size_of_GPS_SendUBX 0027  
                                ?_I2C_UserAlert 0070                               ReverseString@temp 0022  
                   interleave_reg_addr@reg_data 0071                           InsertString@destLimit 0026  
                              _setNavFlightMode 0220                                         ?_Insert 0070  
               __end_of_EUSART1_SetErrorHandler 2657                                      __pmaintext 0AA1  
                                     ?_TimerISR 0070                                  ?_I2C_WriteByte 0070  
                                     ?_SetupGPS 0070                  set_osr_press_temp_settings@dev 0055  
              __end_of_TMR0_SetInterruptHandler 2651                                         ?___lmul 0070  
                                    ??_TMR0_ISR 0070                  __size_of_fill_standby_settings 001C  
                               __CFG_PPS1WAY$ON 0000                   __end_of_fill_standby_settings 27A5  
                                    __pintentry 0004                         ?_bme280_compensate_data 005B  
   set_filter_standby_settings@desired_settings 0059                                  ___lmul@product 0078  
                              ReadEnvSensor@len 0030                                       ?_WriteGPS 0075  
                           __end_of_bme280_init 1249                                 __CFG_ZCDDIS$OFF 0000  
                               ?_PMD_Initialize 0070                                  _WriteEnvSensor 1A7F  
                                       ?_strcmp 0070                                         ?_strlen 0070  
        __end_of_EUSART1_SetFramingErrorHandler 265D         __size_of_EUSART1_SetFramingErrorHandler 0006  
                _EUSART1_SetFramingErrorHandler 2657                    ??_bme280_set_sensor_settings 006D  
                        __size_of_ClearMessages 001E                             __end_of_TransmitBit 2722  
                                       _SP1BRGH 011C                                         _SP1BRGL 011B  
                                       _OSCCON1 088D                                         _OSCCON3 088F  
                                  _UIntToString 1004                                         _OSCTUNE 0892  
                  ?_parse_temp_press_calib_data 0070                                         _SSP1ADD 018D  
                                       _SLRCONA 1F3B                                         _SLRCONB 1F46  
                                       _SLRCONC 1F51                                         _SSP1BUF 018C  
                 set_osr_humidity_settings@rslt 005B                                  ClearMessages@i 0071  
                           __size_of_InitTiming 0008                         ?_fill_osr_temp_settings 0070  
                  ?_set_osr_press_temp_settings 0053                       _set_osr_humidity_settings 1F0A  
                                       Insert@i 007B                                    ?_ClearString 0075  
                 __size_of_fill_filter_settings 001C                    set_osr_humidity_settings@dev 0055  
                       ?_compensate_temperature 002E                   bme280_soft_reset@soft_rst_cmd 0056  
                                       Sleep@ms 0070                                         _PollGPS 05AA  
                  __size_of_compensate_humidity 02CA                            __end_of_InsertString 1FAE  
                           __end_of_BME280_Init 12B6                                 __size_of_Insert 0076  
                                    ??_TimerISR 0070                                      ??_SetupGPS 007C  
                       ?_bme280_set_sensor_mode 006C                  __end_of_bme280_compensate_data 1493  
                                       ___aldiv 1493                                GetLengthUBX@data 0073  
                                       ___awdiv 1EB9                                 __size_of___lmul 002F  
                                       ___awmod 1C6C                                         ___lldiv 1FAE  
                                       ___llmod 1BE6                    __end_of_are_settings_changed 269F  
                        __end_of_WriteEnvSensor 1AB2                    __size_of_compensate_pressure 0558  
                        _reload_device_settings 1852                             _EUSART1_is_rx_ready 2646  
                    ??_bme280_parse_sensor_data 0071                          ?_parse_device_settings 0070  
                                    ??_WriteGPS 0077                              crc16_update@length 0077  
                                       __ptext1 1D85                                         __ptext2 1B27  
                                       __ptext3 10B1                                         __ptext4 16E1  
                                       __ptext5 141A                                         __ptext6 08F9  
                                       __ptext7 0052                                         __ptext8 0D36  
                                       __ptext9 1A1F             parse_humidity_calib_data@dig_H4_lsb 0074  
           parse_humidity_calib_data@dig_H4_msb 0076             parse_humidity_calib_data@dig_H5_lsb 0078  
           parse_humidity_calib_data@dig_H5_msb 007A                            DebugAlert@delay_high 0020  
                               __CFG_WRTAPP$OFF 0000                                 __size_of_strcmp 002B  
           parse_humidity_calib_data@calib_data 007C                                 __size_of_strlen 0017  
                           _interleave_reg_addr 19F2                           _OSCILLATOR_Initialize 2677  
                              ___awmod@dividend 0072                                   _message_start 02A0  
                              ___aldiv@dividend 0024                              _EUSART1_Initialize 27DF  
                      ??_PIN_MANAGER_Initialize 0070                                 __CFG_WRTSAF$OFF 0000  
                            get_calib_data@F376 01A0                       reload_device_settings@dev 0064  
                __end_of_fill_osr_temp_settings 27C1                                         main@end 0157  
                    __size_of_SYSTEM_Initialize 000F                                         clrloop0 2664  
                                  ??_DebugAlert 007C                   ??_parse_temp_press_calib_data 0071  
                               ??_I2C_UserAlert 007D                            end_of_initialization 004E  
               bme280_get_sensor_data@comp_data 0061                              get_calib_data@rslt 005E  
                          ?_EUSART1_is_rx_ready 0070                             ?_EUSART1_Initialize 0070  
                              InsertString@dest 0020           bme280_set_sensor_settings@sensor_mode 00AC  
                                       init_ram 2669                  __end_of_compensate_temperature 0AA1  
                   _EUSART1_OverrunErrorHandler 0167                                         initloop 266A  
                 ??_set_osr_press_temp_settings 0056                            ?_interleave_reg_addr 0070  
                      __size_of_UIntToHexString 0078                                   _ClearMessages 27C1  
                               ??_I2C_WriteByte 007D                                 ___lldiv@divisor 0070  
                __end_of_bme280_set_sensor_mode 1BA4                                  _I2C_Wait_SSPIF 1D3D  
                               ___lldiv@counter 007D                     ??_parse_humidity_calib_data 0071  
                       _fill_osr_press_settings 2752                     __end_of_put_device_to_sleep 1BE6  
                          write_power_mode@rslt 0058                                     _bme280_init 11DE  
                      write_power_mode@reg_addr 0059                                ___aldiv@quotient 002A  
                    reload_device_settings@rslt 0068               compensate_temperature@temperature 0051  
                         __size_of_EUSART1_Read 000C                            ??_EUSART1_Initialize 0072  
                                ClearString@str 0075                                 ?_WriteEnvSensor 002B  
                                       strcmp@l 0073                                         strcmp@r 0070  
                                   _TransmitBit 270E                           __CFG_WDTCPS$WDTCPS_31 0000  
                                       strlen@a 0073                        __end_of_write_power_mode 1AEB  
                                       strlen@s 0070                              __end_of_DebugAlert 191A  
                      _TMR0_SetInterruptHandler 264B                        __end_of_set_osr_settings 1944  
                               _bme280_get_regs 1C28                                   ?_TransmitChar 0070  
                            bme280_get_regs@dev 003A                                 WriteEnvSensor@i 0032  
                            bme280_get_regs@len 0038                                 TransmitString@i 0028  
                                 crc16@segments 0021                 fill_osr_press_settings@reg_data 0075  
                                  GPS_SendUBX@i 0077                               __size_of_I2C_Init 0014  
                             __size_of_I2C_Stop 0005                __size_of_EUSART1_SetErrorHandler 0006  
                           EUSART1_Write@txData 0070                                __CFG_FEXTOSC$OFF 0000  
                         ??_EUSART1_is_rx_ready 0070                    ?_set_filter_standby_settings 0053  
               fill_osr_press_settings@settings 0070                  compensate_humidity@uncomp_data 003E  
                               _bme280_set_regs 1640                                     _BME280_Init 1249  
                          bme280_init@try_count 0063                           ??_interleave_reg_addr 0073  
                        __end_of_I2C_Wait_SSPIF 1D85                                  ?_ClearMessages 0070  
                                  _EUSART1_Read 269F                       bme280_soft_reset@reg_addr 0058  
             compensate_temperature@uncomp_data 004C                                  _gps_configured 00EC  
                          ReverseString@halfway 0020                          __size_of_ReverseString 0065  
                         TransmitString@message 0023                                    ??_InitTiming 0072  
          __size_of_parse_temp_press_calib_data 00F5                                  __end_of_Insert 13A2  
                                  ?_IntToString 007B                                  __end_of___lmul 1A4E  
                       __size_of_get_calib_data 004D                                       Insert@src 0072  
          __size_of_set_osr_press_temp_settings 0046                               __size_of_TMR0_ISR 000D  
            __end_of_bme280_set_sensor_settings 132C                      _bme280_set_sensor_settings 12B6  
                        ?_OSCILLATOR_Initialize 0070                  parse_temp_press_calib_data@dev 0070  
                                     _EnvSensor 01BA                                  ??_TransmitChar 007D  
                      bme280_set_regs@temp_buff 003A                                  __end_of_strcmp 199A  
                     _parse_humidity_calib_data 15A7                                  __end_of_strlen 2739  
                           start_initialization 0010                             UIntToHexString@dest 002E  
                                  PollGPS@index 0046                        __size_of_TMR0_Initialize 0013  
               __size_of_PIN_MANAGER_Initialize 0029           parse_temp_press_calib_data@calib_data 0072  
                              UIntToHexString@i 0039                                UIntToHexString@n 002A  
                            __end_of_InitTiming 2677                           __end_of_EUSART1_Write 1808  
                          _are_settings_changed 2694                              I2C_ReadByte@ackbit 002B  
                       __size_of_null_ptr_check 0025                           __size_of_InsertString 0052  
                 ??_set_filter_standby_settings 0056                                 ___llmod@divisor 0070  
                               ?_I2C_Wait_SSPIF 0070                       ??_fill_osr_press_settings 0072  
                               ___llmod@counter 0079                            __size_of_ClearString 0025  
                                      ??_Insert 0077                                __CFG_LPBOREN$OFF 0000  
                              ??_PMD_Initialize 0070                              bme280_init@chip_id 0064  
                         __end_of_ReadEnvSensor 1EB9                            set_osr_settings@rslt 0062  
                                      ??___lmul 0078              __size_of_set_osr_humidity_settings 0052  
                       __end_of_bme280_get_regs 1C6C                                 BME280_Init@rslt 00B1  
                             ??_UIntToHexString 002F                               __size_of_TimerISR 000A  
                                   __pdataBANK2 016B                                     __pdataBANK4 0220  
                             __size_of_SetupGPS 004C                              null_ptr_check@rslt 0072  
                                  ClearString@i 007A                                        ??_strcmp 0072  
                                      ??_strlen 0072                                   ?_crc16_update 0075  
                    compensate_temperature@var1 0048                      compensate_temperature@var2 004D  
         compensate_temperature@temperature_max 0044                                   _ReverseString 1110  
                             __size_of_WriteGPS 0028                                       ___latbits 0003  
                           _compensate_humidity 0D36                                   __pcstackBANK0 0020  
                                 __pcstackBANK1 00A0                                   __pcstackBANK2 0147  
                                 ?_I2C_ReadByte 0070                         __end_of_bme280_set_regs 16E1  
                                  _InsertString 1F5C                                   crc16_update@i 0020  
                                 ??_GPS_SendUBX 0074                        _compensate_pressure$2690 00B0  
                      _compensate_pressure$2688 00B9                        _compensate_pressure$2689 00AC  
                         ?_are_settings_changed 0070                             _compensate_pressure 0052  
                               ??_ClearMessages 0070                ??_EUSART1_SetFramingErrorHandler 0072  
               ?_EUSART1_SetFramingErrorHandler 0070             bme280_set_sensor_mode@last_set_mode 00AC  
             set_osr_humidity_settings@ctrl_hum 0059                                       crc16@data 0025  
                       __size_of_TransmitString 002C                           _TMR0_InterruptHandler 00EE  
                                     WriteGPS@i 007A                                       __pnvBANK1 00EE  
                                     __pnvBANK2 0167                                       __pnvBANK3 01ED  
                  __size_of_GPS_HasAcknowledged 0092               set_osr_humidity_settings@reg_addr 005C  
                      set_osr_settings@settings 005D                        ??_bme280_get_sensor_data 0063  
                          ?_compensate_humidity 002E                        ??_bme280_get_sensor_mode 0041  
                                      ?_PollGPS 0070                          _PIN_MANAGER_Initialize 18C7  
                       ?_reload_device_settings 0064                         ??_parse_device_settings 0071  
                                      ?___aldiv 0020                                        ?___awdiv 0070  
                                      ?___awmod 0070                                        ?___lldiv 0070  
           set_filter_standby_settings@reg_addr 005B                                        ?___llmod 0070  
           set_filter_standby_settings@reg_data 005C               set_osr_humidity_settings@settings 0053  
               set_osr_press_temp_settings@rslt 005A                            ?_compensate_pressure 002E  
          __size_of_set_filter_standby_settings 0046               __end_of_set_osr_humidity_settings 1F5C  
                  ??_INTERRUPT_InterruptManager 0070                           _fill_standby_settings 2789  
                  __end_of_fill_filter_settings 2789                                  ??_crc16_update 007B  
               __end_of_fill_osr_press_settings 276D                                  ?_ReverseString 0070  
                                      _BAUD1CON 011F             set_filter_standby_settings@settings 0053  
            _EUSART1_DefaultOverrunErrorHandler 0000                                    _PollGPS$1882 003C  
                                      _I2C_Init 26FA                                        _I2C_Stop 2641  
                          _EUSART1_ErrorHandler 01ED                                  ??_I2C_ReadByte 007D  
                             ReadEnvSensor@rslt 0034                         _EUSART1_SetErrorHandler 2651  
                                __size_of_Sleep 002B                                  __size_of_crc16 004A  
   set_osr_press_temp_settings@desired_settings 0059                                 ___aldiv@divisor 0020  
                             ??_TMR0_Initialize 0072                                 ___aldiv@counter 0028  
                                      _LATAbits 0018         EUSART1_SetErrorHandler@interruptHandler 0070  
                                      _LATCbits 001A                         BME280_Init@settings_sel 00B0  
                           __end_of_GPS_SendUBX 189F                                       clear_ram0 2663  
                          __end_of_TransmitChar 1A7F                                        _PIE0bits 0716  
                         ??_compensate_humidity 0032                  __end_of_reload_device_settings 1878  
                          PollGPS@dataFieldType 0044             __size_of_INTERRUPT_InterruptManager 000A  
           parse_temp_press_calib_data@reg_data 0073                                ??_WriteEnvSensor 0030  
                    ??_TMR0_SetInterruptHandler 0072                                        _PIR0bits 070C  
                                      _PIR3bits 070F                                        _RX1DTPPS 1ECB  
                                  ?_bme280_init 0070                                     DebugAlert@i 0025  
                                 UIntToString@i 0030                                   UIntToString@n 0029  
                bme280_get_sensor_data@reg_data 00CD                               __CFG_BBSIZE$BB512 0000  
                                      _SSP1CON1 0190                                        _SSP1CON3 0192  
                                      _TMR0_ISR 26AB                           ??_compensate_pressure 0032  
                                      _SSP1STAT 018F                                ?_bme280_get_regs 0037  
                                _get_calib_data 1E1B                                    ?_TransmitBit 0070  
                          __size_of_IntToString 0069                               ?_write_power_mode 0053  
                   compensate_humidity@humidity 0043                                   Insert@current 0079  
                             ?_set_osr_settings 005D                            WriteEnvSensor@dev_id 002B  
                            ??_write_power_mode 0054                                       main@index 0165  
                       compensate_humidity@var1 0047                         compensate_humidity@var2 004B  
                       compensate_humidity@var3 0057                         compensate_humidity@var4 004F  
                       compensate_humidity@var5 0053                              ??_set_osr_settings 0060  
                          TransmitString@counti 0026                         bme280_get_regs@reg_addr 003E  
                       bme280_set_regs@reg_addr 0052                         bme280_get_regs@reg_data 0037  
                       bme280_set_regs@reg_data 0034                                ?_bme280_set_regs 0034  
             bme280_get_sensor_mode@sensor_mode 0045                          ??_are_settings_changed 0071  
                             ___lmul@multiplier 0070                         bme280_set_regs@temp_len 004E  
             __size_of_bme280_parse_sensor_data 011F                       ?_bme280_parse_sensor_data 0070  
                                _null_ptr_check 1808              __size_of_parse_humidity_calib_data 0099  
                                  ?_BME280_Init 0070                           __end_of_I2C_UserAlert 1004  
                        PollGPS@signInsertIndex 003F                             ReadEnvSensor@dev_id 002D  
                   bme280_set_regs@reg_addr_cnt 0050                              InsertString@counti 0028  
                               IntToString@dest 007D                                 IntToString@sign 002B  
               __size_of_bme280_get_sensor_data 005F                             bme280_set_regs@rslt 0051  
               __size_of_bme280_get_sensor_mode 002D                           __end_of_I2C_WriteByte 26C6  
                                      _TimerISR 2680                                        _SetupGPS 1DCF  
                              __size_of_PollGPS 0228                          __end_of_get_calib_data 1E68  
                             null_ptr_check@dev 0073                                   InsertString@i 002A  
                       ??_OSCILLATOR_Initialize 0070                                __size_of___aldiv 0082  
                              __size_of___awdiv 0051                          ?_fill_standby_settings 0070  
                              __size_of___awmod 0045                                __size_of___lldiv 0052  
                              __size_of___llmod 0042                     __size_of_EUSART1_Initialize 0021  
                               ??_ReverseString 0079                                        _WriteGPS 189F  
                  __size_of_put_device_to_sleep 0042                                   ?_GetLengthUBX 0070  
                   ?_bme280_set_sensor_settings 006C                               ClearString@counti 0078  
                     ??_EUSART1_SetErrorHandler 0072                     _EUSART1_DefaultErrorHandler 0000  
                                      crc16@crc 0026                     __end_of_EUSART1_is_rx_ready 264B  
                                    _T0CON0bits 059E                                        _checksum 0141  
           __end_of_parse_temp_press_calib_data 08F9                     _parse_temp_press_calib_data 0804  
                           I2C_UserAlert@status 0070                  set_filter_standby_settings@dev 0055  
                                ReadEnvSensor@i 0035                                        __ptext10 1493  
                                      __ptext11 1004                                        __ptext20 26D5  
                                      __ptext12 1BE6                                        __ptext21 1515  
                                      __ptext13 1FAE                                        __ptext30 2651  
                                      __ptext22 26C6                                        __ptext14 13A2  
                                      __ptext31 05AA                                        __ptext23 26E7  
                                      __ptext15 199A                                        __ptext40 27C1  
                                      __ptext32 196F                                        __ptext24 268A  
                                      __ptext16 1A4E                                        __ptext41 1175  
                                      __ptext33 189F                                        __ptext25 18C7  
                                      __ptext17 270E                                        __ptext50 2694  
                                      __ptext42 1C6C                                        __ptext34 1800  
                                      __ptext26 2677                                        __ptext18 1DCF  
                                      __ptext51 1B64                                        __ptext43 1110  
                                      __ptext35 1F5C                                        __ptext27 27DF  
                                      __ptext19 1878                                        __ptext60 1CB1  
                                      __ptext52 1AB2                                        __ptext44 2722  
                                      __ptext36 132C                                        __ptext28 265D  
                                      __ptext61 2789                                        __ptext53 1BA4  
                                      __ptext45 1EB9                                        __ptext37 2646  
                                      __ptext29 2657                                        __ptext70 1E68  
                                      __ptext62 276D                                        __ptext54 1852  
                                      __ptext46 266F                                        __ptext38 269F  
                                      __ptext71 2739                                        __ptext63 1059  
                                      __ptext55 191A                                        __ptext47 264B  
                                      __ptext39 182D                                        __ptext80 1D3D  
                                      __ptext72 1AEB                                        __ptext64 07D2  
                                      __ptext56 1CF7                                        __ptext48 1249  
                                      __ptext81 18F0                                        __ptext73 1640  
                                      __ptext65 11DE                                        __ptext57 27A5  
                                      __ptext49 12B6                                        __ptext82 1944  
                                      __ptext74 1808                                        __ptext66 1E1B  
                                      __ptext58 2752                                        __ptext83 26FA  
                                      __ptext75 19F2                                        __ptext67 0804  
                                      __ptext59 1F0A                                        __ptext76 1A7F  
                                      __ptext68 15A7                                        __ptext85 26AB  
                                      __ptext77 26B8                                        __ptext69 1C28  
                                      __ptext86 07FF                                        __ptext78 1001  
                                      __ptext87 2680                                        __ptext79 2641  
                   __end_of_interleave_reg_addr 1A1F                                    _SSP1CON1bits 0190  
                        __end_of_null_ptr_check 182D                                    _SSP1CON2bits 0191  
                              ??_I2C_Wait_SSPIF 0027                                     _GPS_SendUBX 1878  
           __end_of_set_osr_press_temp_settings 1D3D                     _set_osr_press_temp_settings 1CF7  
                 compensate_pressure@calib_data 002E                                 _UIntToHexString 13A2  
                                _TransmitString 199A                                   __size_of_main 0295  
             bme280_compensate_data@sensor_comp 0060                        ??_bme280_compensate_data 005E  
                          _fill_filter_settings 276D               __end_of_parse_humidity_calib_data 1640  
                                   _message_end 0320                            __end_of_crc16_update 1B64  
                                      _messages 016B            __end_of_TMR0_DefaultInterruptHandler 0800  
         __size_of_TMR0_DefaultInterruptHandler 0001                    _TMR0_DefaultInterruptHandler 07FF  
                          __CFG_WDTCWS$WDTCWS_7 0000                            __end_of_I2C_ReadByte 2752  
                                    _RC1STAbits 011D  EUSART1_SetOverrunErrorHandler@interruptHandler 0070  
                              TransmitChar@byte 0020                                 ?_get_calib_data 0070  
                   _compensate_temperature$2687 003C                                        int$flags 007E  
            __end_of_INTERRUPT_InterruptManager 000E                      _INTERRUPT_InterruptManager 0004  
                              UIntToString@dest 002D                     _EUSART1_FramingErrorHandler 0169  
                                ??_GetLengthUBX 0073                                 main@sensor_data 0159  
                      ??_fill_osr_temp_settings 0072                             _GPS_HasAcknowledged 1515  
                                    _INTCONbits 000B                          _bme280_get_sensor_data 10B1  
                             InsertString@index 0024                          _bme280_get_sensor_mode 07D2  
            set_osr_humidity_settings@ctrl_meas 005A                                   ?_UIntToString 0029  
                            bme280_set_regs@dev 0036                              bme280_set_regs@len 0035  
                 parse_device_settings@reg_data 0073                                  __pstringtext10 28B1  
                                __pstringtext11 28B6                                  __pstringtext12 0000  
                      ??_compensate_temperature 0032               bme280_compensate_data@uncomp_data 005B  
                               ?_null_ptr_check 0070                      bme280_get_sensor_data@F271 012C  
                    bme280_get_sensor_data@F273 0120                           __size_of_TransmitChar 0031  
                        __end_of_TransmitString 19C6                                        intlevel1 0000  
                      ??_bme280_set_sensor_mode 006D                   parse_device_settings@settings 0070  
                 fill_standby_settings@reg_data 0075                                   ??_ClearString 0077  
                              ___lldiv@dividend 0074                           ?_fill_filter_settings 0070  
                       ?_PIN_MANAGER_Initialize 0070                      bme280_get_sensor_data@rslt 00D6  
                             __CFG_CLKOUTEN$OFF 0000          __end_of_EUSART1_SetOverrunErrorHandler 2663  
       __size_of_EUSART1_SetOverrunErrorHandler 0006                  _EUSART1_SetOverrunErrorHandler 265D  
                          ?_GPS_HasAcknowledged 0070                   ?_TMR0_DefaultInterruptHandler 0070  
                 fill_standby_settings@settings 0070                    GPS_HasAcknowledged@ackByteID 0030  
                  GPS_HasAcknowledged@ackPacket 0025                              WriteEnvSensor@rslt 0031  
EUSART1_SetFramingErrorHandler@interruptHandler 0070                            __size_of_bme280_init 006B  
                __size_of_parse_device_settings 0058                   __end_of_parse_device_settings 10B1  
                        __size_of_EUSART1_Write 0008                              _eusart1RxLastError 00ED  
                                 __pstringtext1 28B9                                   __pstringtext2 2800  
                                 __pstringtext3 281A                                   __pstringtext4 2834  
                                 __pstringtext5 284E                                   __pstringtext6 2868  
                                 __pstringtext7 2882                                   __pstringtext8 289C  
                                 __pstringtext9 28AA                            __size_of_TransmitBit 0014  
                                    _SSP1DATPPS 1EC6                                      _SSP1CLKPPS 1EC5  
                                  _TransmitChar 1A4E                                ___lldiv@quotient 0079  
                                ??_UIntToString 002E                                 _TMR0_Initialize 26E7  
          are_settings_changed@settings_changed 0072                                    ___aldiv@sign 0029  
                       __end_of_UIntToHexString 141A                               WriteEnvSensor@len 002E  
                                    _TX1STAbits 011E             __end_of_set_filter_standby_settings 1CF7  
                   _set_filter_standby_settings 1CB1                      bme280_get_sensor_mode@rslt 0044  
                        __size_of_ReadEnvSensor 0051                        ?_fill_osr_press_settings 0070  
                    bme280_set_sensor_mode@rslt 00AD                                 ?_TransmitString 0023  
                __end_of_PIN_MANAGER_Initialize 18F0                                 Insert@destLimit 0075  
                              PollGPS@dataIndex 0041             set_osr_press_temp_settings@reg_addr 005B  
           set_osr_press_temp_settings@reg_data 005C                             bme280_get_regs@rslt 003F  
                         __end_of_ClearMessages 27DF                           ??_GPS_HasAcknowledged 0070  
                             I2C_WriteByte@data 007D                 __size_of_bme280_compensate_data 0079  
                          __size_of_BME280_Init 006D                                PollGPS@data_type 0034  
           __size_of_bme280_set_sensor_settings 0076               bme280_get_sensor_data@sensor_comp 00D5  
                   write_power_mode@sensor_mode 0057             set_osr_press_temp_settings@settings 0053  
