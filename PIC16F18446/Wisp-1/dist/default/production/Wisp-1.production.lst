

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Tue Sep 17 12:51:19 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F18446
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK4,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     7                           	psect	nvBANK3,global,class=BANK3,space=1,delta=1
     8                           	psect	stringtext2,global,class=STRCODE,delta=2
     9                           	psect	stringtext3,global,class=STRCODE,delta=2
    10                           	psect	stringtext4,global,class=STRCODE,delta=2
    11                           	psect	stringtext5,global,class=STRCODE,delta=2
    12                           	psect	stringtext6,global,class=STRCODE,delta=2
    13                           	psect	stringtext7,global,class=STRCODE,delta=2
    14                           	psect	stringtext8,global,class=STRCODE,delta=2
    15                           	psect	stringtext9,global,class=STRCODE,delta=2
    16                           	psect	stringtext10,global,class=STRCODE,delta=2
    17                           	psect	stringtext11,global,class=STRCODE,delta=2
    18                           	psect	stringtext12,global,class=STRCODE,delta=2
    19                           	psect	stringtext13,global,class=STRCODE,delta=2
    20                           	psect	cinit,global,class=CODE,merge=1,delta=2
    21                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    22                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    23                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    24                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    25                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1
    26                           	psect	inittext,global,class=CODE,delta=2
    27                           	psect	clrtext,global,class=CODE,delta=2
    28                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    29                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    30                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    31                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    32                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    33                           	psect	text1,local,class=CODE,merge=1,delta=2
    34                           	psect	text2,local,class=CODE,merge=1,delta=2
    35                           	psect	text3,local,class=CODE,merge=1,delta=2
    36                           	psect	text4,local,class=CODE,merge=1,delta=2
    37                           	psect	text5,local,class=CODE,merge=1,delta=2
    38                           	psect	text6,local,class=CODE,merge=1,delta=2
    39                           	psect	text7,local,class=CODE,merge=1,delta=2
    40                           	psect	text8,local,class=CODE,merge=1,delta=2
    41                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    42                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    43                           	psect	text11,local,class=CODE,merge=1,delta=2
    44                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    45                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    46                           	psect	text14,local,class=CODE,merge=1,delta=2
    47                           	psect	text15,local,class=CODE,merge=1,delta=2
    48                           	psect	text16,local,class=CODE,merge=1,delta=2
    49                           	psect	text17,local,class=CODE,merge=1,delta=2
    50                           	psect	text18,local,class=CODE,merge=1,delta=2
    51                           	psect	text19,local,class=CODE,merge=1,delta=2
    52                           	psect	text20,local,class=CODE,merge=1,delta=2
    53                           	psect	text21,local,class=CODE,merge=1,delta=2
    54                           	psect	text22,local,class=CODE,merge=1,delta=2
    55                           	psect	text23,local,class=CODE,merge=1,delta=2
    56                           	psect	text24,local,class=CODE,merge=1,delta=2
    57                           	psect	text25,local,class=CODE,merge=1,delta=2
    58                           	psect	text26,local,class=CODE,merge=1,delta=2
    59                           	psect	text27,local,class=CODE,merge=1,delta=2
    60                           	psect	text28,local,class=CODE,merge=1,delta=2
    61                           	psect	text29,local,class=CODE,merge=1,delta=2
    62                           	psect	text30,local,class=CODE,merge=1,delta=2
    63                           	psect	text31,local,class=CODE,merge=1,delta=2
    64                           	psect	text32,local,class=CODE,merge=1,delta=2,group=2
    65                           	psect	text33,local,class=CODE,merge=1,delta=2
    66                           	psect	text34,local,class=CODE,merge=1,delta=2
    67                           	psect	text35,local,class=CODE,merge=1,delta=2
    68                           	psect	text36,local,class=CODE,merge=1,delta=2
    69                           	psect	text37,local,class=CODE,merge=1,delta=2
    70                           	psect	text38,local,class=CODE,merge=1,delta=2
    71                           	psect	text39,local,class=CODE,merge=1,delta=2
    72                           	psect	text40,local,class=CODE,merge=1,delta=2
    73                           	psect	text41,local,class=CODE,merge=1,delta=2
    74                           	psect	text42,local,class=CODE,merge=1,delta=2
    75                           	psect	text43,local,class=CODE,merge=1,delta=2
    76                           	psect	text44,local,class=CODE,merge=1,delta=2
    77                           	psect	text45,local,class=CODE,merge=1,delta=2,group=1
    78                           	psect	text46,local,class=CODE,merge=1,delta=2
    79                           	psect	text47,local,class=CODE,merge=1,delta=2,group=1
    80                           	psect	text48,local,class=CODE,merge=1,delta=2
    81                           	psect	text49,local,class=CODE,merge=1,delta=2
    82                           	psect	text50,local,class=CODE,merge=1,delta=2
    83                           	psect	text51,local,class=CODE,merge=1,delta=2
    84                           	psect	text52,local,class=CODE,merge=1,delta=2,group=2
    85                           	psect	text53,local,class=CODE,merge=1,delta=2
    86                           	psect	text54,local,class=CODE,merge=1,delta=2
    87                           	psect	text55,local,class=CODE,merge=1,delta=2
    88                           	psect	text56,local,class=CODE,merge=1,delta=2
    89                           	psect	text57,local,class=CODE,merge=1,delta=2
    90                           	psect	text58,local,class=CODE,merge=1,delta=2
    91                           	psect	text59,local,class=CODE,merge=1,delta=2
    92                           	psect	text60,local,class=CODE,merge=1,delta=2
    93                           	psect	text61,local,class=CODE,merge=1,delta=2
    94                           	psect	text62,local,class=CODE,merge=1,delta=2
    95                           	psect	text63,local,class=CODE,merge=1,delta=2
    96                           	psect	text64,local,class=CODE,merge=1,delta=2
    97                           	psect	text65,local,class=CODE,merge=1,delta=2
    98                           	psect	text66,local,class=CODE,merge=1,delta=2
    99                           	psect	text67,local,class=CODE,merge=1,delta=2
   100                           	psect	text68,local,class=CODE,merge=1,delta=2
   101                           	psect	text69,local,class=CODE,merge=1,delta=2
   102                           	psect	text70,local,class=CODE,merge=1,delta=2
   103                           	psect	text71,local,class=CODE,merge=1,delta=2
   104                           	psect	text72,local,class=CODE,merge=1,delta=2
   105                           	psect	text73,local,class=CODE,merge=1,delta=2
   106                           	psect	text74,local,class=CODE,merge=1,delta=2
   107                           	psect	text75,local,class=CODE,merge=1,delta=2
   108                           	psect	text76,local,class=CODE,merge=1,delta=2
   109                           	psect	text77,local,class=CODE,merge=1,delta=2
   110                           	psect	text78,local,class=CODE,merge=1,delta=2
   111                           	psect	text79,local,class=CODE,merge=1,delta=2
   112                           	psect	text80,local,class=CODE,merge=1,delta=2
   113                           	psect	text81,local,class=CODE,merge=1,delta=2
   114                           	psect	text82,local,class=CODE,merge=1,delta=2
   115                           	psect	text83,local,class=CODE,merge=1,delta=2
   116                           	psect	text84,local,class=CODE,merge=1,delta=2
   117                           	psect	text85,local,class=CODE,merge=1,delta=2
   118                           	psect	text86,local,class=CODE,merge=1,delta=2
   119                           	psect	text87,local,class=CODE,merge=1,delta=2
   120                           	psect	text88,local,class=CODE,merge=1,delta=2
   121                           	psect	intentry,global,class=CODE,delta=2
   122                           	psect	text90,local,class=CODE,merge=1,delta=2
   123                           	psect	text91,local,class=CODE,merge=1,delta=2
   124                           	psect	text92,local,class=CODE,merge=1,delta=2
   125                           	dabs	1,0xCA0,32
   126                           	dabs	1,0xC20,80
   127                           	dabs	1,0xBD4,28
   128                           	dabs	1,0xBA0,52
   129                           	dabs	1,0xB20,80
   130                           	dabs	1,0xAE8,8
   131                           	dabs	1,0x26D8,0,_nmea_data
   132                           	dabs	1,0x2764,0,_txdata
   133                           	dabs	1,0x7E,2
   134  0000                     
   135                           ; Version 2.05
   136                           ; Generated 20/12/2018 GMT
   137                           ; 
   138                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   139                           ; All rights reserved.
   140                           ; 
   141                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   142                           ; 
   143                           ; Redistribution and use in source and binary forms, with or without modification, are
   144                           ; permitted provided that the following conditions are met:
   145                           ; 
   146                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   147                           ;        conditions and the following disclaimer.
   148                           ; 
   149                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   150                           ;        of conditions and the following disclaimer in the documentation and/or other
   151                           ;        materials provided with the distribution.
   152                           ; 
   153                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   154                           ;        software without specific prior written permission.
   155                           ; 
   156                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   157                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   158                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   159                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   160                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   161                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   162                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   163                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   164                           ; 
   165                           ; 
   166                           ; Code-generator required, PIC16F18446 Definitions
   167                           ; 
   168                           ; SFR Addresses
   169  0000                     	;# 
   170  0001                     	;# 
   171  0002                     	;# 
   172  0003                     	;# 
   173  0004                     	;# 
   174  0005                     	;# 
   175  0006                     	;# 
   176  0007                     	;# 
   177  0008                     	;# 
   178  0009                     	;# 
   179  000A                     	;# 
   180  000B                     	;# 
   181  000C                     	;# 
   182  000D                     	;# 
   183  000E                     	;# 
   184  0012                     	;# 
   185  0013                     	;# 
   186  0014                     	;# 
   187  0018                     	;# 
   188  0019                     	;# 
   189  001A                     	;# 
   190  008C                     	;# 
   191  008C                     	;# 
   192  008D                     	;# 
   193  008E                     	;# 
   194  008E                     	;# 
   195  008F                     	;# 
   196  0090                     	;# 
   197  0090                     	;# 
   198  0091                     	;# 
   199  0092                     	;# 
   200  0092                     	;# 
   201  0093                     	;# 
   202  0094                     	;# 
   203  0094                     	;# 
   204  0095                     	;# 
   205  0096                     	;# 
   206  0096                     	;# 
   207  0097                     	;# 
   208  0098                     	;# 
   209  0099                     	;# 
   210  009A                     	;# 
   211  009B                     	;# 
   212  009B                     	;# 
   213  009C                     	;# 
   214  009D                     	;# 
   215  009D                     	;# 
   216  009E                     	;# 
   217  009F                     	;# 
   218  010C                     	;# 
   219  010C                     	;# 
   220  010D                     	;# 
   221  010E                     	;# 
   222  010F                     	;# 
   223  010F                     	;# 
   224  0110                     	;# 
   225  0111                     	;# 
   226  0112                     	;# 
   227  0113                     	;# 
   228  0114                     	;# 
   229  0115                     	;# 
   230  0116                     	;# 
   231  0117                     	;# 
   232  0118                     	;# 
   233  0119                     	;# 
   234  0119                     	;# 
   235  0119                     	;# 
   236  011A                     	;# 
   237  011A                     	;# 
   238  011A                     	;# 
   239  011B                     	;# 
   240  011B                     	;# 
   241  011B                     	;# 
   242  011B                     	;# 
   243  011B                     	;# 
   244  011C                     	;# 
   245  011C                     	;# 
   246  011C                     	;# 
   247  011D                     	;# 
   248  011D                     	;# 
   249  011D                     	;# 
   250  011E                     	;# 
   251  011E                     	;# 
   252  011E                     	;# 
   253  011F                     	;# 
   254  011F                     	;# 
   255  011F                     	;# 
   256  011F                     	;# 
   257  011F                     	;# 
   258  018C                     	;# 
   259  018D                     	;# 
   260  018E                     	;# 
   261  018F                     	;# 
   262  0190                     	;# 
   263  0191                     	;# 
   264  0192                     	;# 
   265  0196                     	;# 
   266  0197                     	;# 
   267  0198                     	;# 
   268  0199                     	;# 
   269  019A                     	;# 
   270  019B                     	;# 
   271  019C                     	;# 
   272  020C                     	;# 
   273  020D                     	;# 
   274  020E                     	;# 
   275  020E                     	;# 
   276  020F                     	;# 
   277  020F                     	;# 
   278  0210                     	;# 
   279  0210                     	;# 
   280  0211                     	;# 
   281  0211                     	;# 
   282  0212                     	;# 
   283  0213                     	;# 
   284  0214                     	;# 
   285  0214                     	;# 
   286  0215                     	;# 
   287  0215                     	;# 
   288  0216                     	;# 
   289  0216                     	;# 
   290  0217                     	;# 
   291  0217                     	;# 
   292  0218                     	;# 
   293  0219                     	;# 
   294  021A                     	;# 
   295  021A                     	;# 
   296  021B                     	;# 
   297  021B                     	;# 
   298  021C                     	;# 
   299  021C                     	;# 
   300  021D                     	;# 
   301  021D                     	;# 
   302  021E                     	;# 
   303  021F                     	;# 
   304  028C                     	;# 
   305  028C                     	;# 
   306  028D                     	;# 
   307  028D                     	;# 
   308  028E                     	;# 
   309  028F                     	;# 
   310  0290                     	;# 
   311  0291                     	;# 
   312  0292                     	;# 
   313  0292                     	;# 
   314  0293                     	;# 
   315  0293                     	;# 
   316  0294                     	;# 
   317  0295                     	;# 
   318  0296                     	;# 
   319  0297                     	;# 
   320  0298                     	;# 
   321  0298                     	;# 
   322  0299                     	;# 
   323  0299                     	;# 
   324  029A                     	;# 
   325  029B                     	;# 
   326  029C                     	;# 
   327  029D                     	;# 
   328  029F                     	;# 
   329  030C                     	;# 
   330  030C                     	;# 
   331  030D                     	;# 
   332  030E                     	;# 
   333  030F                     	;# 
   334  0310                     	;# 
   335  0310                     	;# 
   336  0311                     	;# 
   337  0312                     	;# 
   338  0313                     	;# 
   339  0314                     	;# 
   340  0314                     	;# 
   341  0315                     	;# 
   342  0316                     	;# 
   343  0317                     	;# 
   344  0318                     	;# 
   345  0318                     	;# 
   346  0319                     	;# 
   347  031A                     	;# 
   348  031B                     	;# 
   349  038C                     	;# 
   350  038C                     	;# 
   351  038D                     	;# 
   352  038E                     	;# 
   353  0390                     	;# 
   354  0390                     	;# 
   355  0391                     	;# 
   356  0392                     	;# 
   357  048C                     	;# 
   358  048C                     	;# 
   359  048D                     	;# 
   360  048E                     	;# 
   361  048F                     	;# 
   362  048F                     	;# 
   363  0490                     	;# 
   364  0491                     	;# 
   365  0492                     	;# 
   366  0492                     	;# 
   367  0493                     	;# 
   368  0494                     	;# 
   369  0495                     	;# 
   370  0495                     	;# 
   371  0496                     	;# 
   372  0497                     	;# 
   373  0498                     	;# 
   374  0499                     	;# 
   375  049A                     	;# 
   376  049B                     	;# 
   377  049C                     	;# 
   378  049D                     	;# 
   379  058C                     	;# 
   380  058C                     	;# 
   381  058D                     	;# 
   382  058E                     	;# 
   383  058F                     	;# 
   384  058F                     	;# 
   385  0590                     	;# 
   386  0591                     	;# 
   387  0592                     	;# 
   388  0593                     	;# 
   389  059C                     	;# 
   390  059C                     	;# 
   391  059D                     	;# 
   392  059D                     	;# 
   393  059E                     	;# 
   394  059F                     	;# 
   395  060C                     	;# 
   396  060C                     	;# 
   397  060D                     	;# 
   398  060D                     	;# 
   399  060E                     	;# 
   400  060F                     	;# 
   401  0610                     	;# 
   402  0611                     	;# 
   403  0612                     	;# 
   404  0613                     	;# 
   405  0614                     	;# 
   406  0616                     	;# 
   407  0616                     	;# 
   408  0617                     	;# 
   409  0617                     	;# 
   410  0618                     	;# 
   411  0619                     	;# 
   412  061A                     	;# 
   413  061B                     	;# 
   414  061C                     	;# 
   415  061D                     	;# 
   416  061E                     	;# 
   417  070C                     	;# 
   418  070D                     	;# 
   419  070E                     	;# 
   420  070F                     	;# 
   421  0710                     	;# 
   422  0711                     	;# 
   423  0712                     	;# 
   424  0713                     	;# 
   425  0714                     	;# 
   426  0716                     	;# 
   427  0717                     	;# 
   428  0718                     	;# 
   429  0719                     	;# 
   430  071A                     	;# 
   431  071B                     	;# 
   432  071C                     	;# 
   433  071D                     	;# 
   434  071E                     	;# 
   435  0796                     	;# 
   436  0797                     	;# 
   437  0798                     	;# 
   438  0799                     	;# 
   439  079A                     	;# 
   440  079B                     	;# 
   441  079C                     	;# 
   442  079D                     	;# 
   443  080C                     	;# 
   444  080D                     	;# 
   445  080E                     	;# 
   446  080F                     	;# 
   447  0810                     	;# 
   448  0811                     	;# 
   449  0812                     	;# 
   450  0813                     	;# 
   451  0814                     	;# 
   452  081A                     	;# 
   453  081A                     	;# 
   454  081B                     	;# 
   455  081C                     	;# 
   456  081C                     	;# 
   457  081D                     	;# 
   458  081E                     	;# 
   459  081F                     	;# 
   460  088C                     	;# 
   461  088D                     	;# 
   462  088E                     	;# 
   463  088F                     	;# 
   464  0890                     	;# 
   465  0891                     	;# 
   466  0892                     	;# 
   467  0893                     	;# 
   468  0895                     	;# 
   469  0896                     	;# 
   470  0897                     	;# 
   471  0898                     	;# 
   472  0899                     	;# 
   473  089A                     	;# 
   474  089B                     	;# 
   475  090C                     	;# 
   476  090E                     	;# 
   477  090F                     	;# 
   478  091F                     	;# 
   479  098F                     	;# 
   480  098F                     	;# 
   481  0990                     	;# 
   482  0991                     	;# 
   483  0992                     	;# 
   484  0993                     	;# 
   485  0994                     	;# 
   486  0995                     	;# 
   487  0996                     	;# 
   488  0997                     	;# 
   489  1E0F                     	;# 
   490  1E10                     	;# 
   491  1E11                     	;# 
   492  1E12                     	;# 
   493  1E13                     	;# 
   494  1E14                     	;# 
   495  1E15                     	;# 
   496  1E16                     	;# 
   497  1E17                     	;# 
   498  1E18                     	;# 
   499  1E19                     	;# 
   500  1E1A                     	;# 
   501  1E1B                     	;# 
   502  1E1C                     	;# 
   503  1E1D                     	;# 
   504  1E1E                     	;# 
   505  1E1F                     	;# 
   506  1E20                     	;# 
   507  1E21                     	;# 
   508  1E22                     	;# 
   509  1E23                     	;# 
   510  1E24                     	;# 
   511  1E25                     	;# 
   512  1E26                     	;# 
   513  1E27                     	;# 
   514  1E28                     	;# 
   515  1E29                     	;# 
   516  1E2A                     	;# 
   517  1E2B                     	;# 
   518  1E2C                     	;# 
   519  1E2D                     	;# 
   520  1E2E                     	;# 
   521  1E2F                     	;# 
   522  1E30                     	;# 
   523  1E31                     	;# 
   524  1E32                     	;# 
   525  1E33                     	;# 
   526  1E34                     	;# 
   527  1E35                     	;# 
   528  1E36                     	;# 
   529  1E37                     	;# 
   530  1E8F                     	;# 
   531  1E90                     	;# 
   532  1E91                     	;# 
   533  1E92                     	;# 
   534  1E93                     	;# 
   535  1E94                     	;# 
   536  1E95                     	;# 
   537  1E96                     	;# 
   538  1E97                     	;# 
   539  1E9C                     	;# 
   540  1E9D                     	;# 
   541  1E9E                     	;# 
   542  1EA1                     	;# 
   543  1EA2                     	;# 
   544  1EA3                     	;# 
   545  1EA4                     	;# 
   546  1EA9                     	;# 
   547  1EAA                     	;# 
   548  1EB1                     	;# 
   549  1EB2                     	;# 
   550  1EB8                     	;# 
   551  1EB9                     	;# 
   552  1EBA                     	;# 
   553  1EBB                     	;# 
   554  1EBC                     	;# 
   555  1EBD                     	;# 
   556  1EBE                     	;# 
   557  1EC3                     	;# 
   558  1EC5                     	;# 
   559  1EC6                     	;# 
   560  1EC7                     	;# 
   561  1EC8                     	;# 
   562  1EC9                     	;# 
   563  1ECA                     	;# 
   564  1ECB                     	;# 
   565  1ECB                     	;# 
   566  1ECB                     	;# 
   567  1ECC                     	;# 
   568  1ECC                     	;# 
   569  1ECC                     	;# 
   570  1F10                     	;# 
   571  1F11                     	;# 
   572  1F12                     	;# 
   573  1F14                     	;# 
   574  1F15                     	;# 
   575  1F1C                     	;# 
   576  1F1D                     	;# 
   577  1F1E                     	;# 
   578  1F1F                     	;# 
   579  1F20                     	;# 
   580  1F21                     	;# 
   581  1F22                     	;# 
   582  1F23                     	;# 
   583  1F24                     	;# 
   584  1F25                     	;# 
   585  1F26                     	;# 
   586  1F27                     	;# 
   587  1F38                     	;# 
   588  1F39                     	;# 
   589  1F3A                     	;# 
   590  1F3B                     	;# 
   591  1F3C                     	;# 
   592  1F3D                     	;# 
   593  1F3E                     	;# 
   594  1F3F                     	;# 
   595  1F43                     	;# 
   596  1F44                     	;# 
   597  1F45                     	;# 
   598  1F46                     	;# 
   599  1F47                     	;# 
   600  1F48                     	;# 
   601  1F49                     	;# 
   602  1F4A                     	;# 
   603  1F4E                     	;# 
   604  1F4F                     	;# 
   605  1F50                     	;# 
   606  1F51                     	;# 
   607  1F52                     	;# 
   608  1F53                     	;# 
   609  1F54                     	;# 
   610  1F55                     	;# 
   611  1FE4                     	;# 
   612  1FE5                     	;# 
   613  1FE6                     	;# 
   614  1FE7                     	;# 
   615  1FE8                     	;# 
   616  1FE8                     	;# 
   617  1FE9                     	;# 
   618  1FEA                     	;# 
   619  1FEB                     	;# 
   620  1FED                     	;# 
   621  1FEE                     	;# 
   622  1FEF                     	;# 
   623  0000                     	;# 
   624  0001                     	;# 
   625  0002                     	;# 
   626  0003                     	;# 
   627  0004                     	;# 
   628  0005                     	;# 
   629  0006                     	;# 
   630  0007                     	;# 
   631  0008                     	;# 
   632  0009                     	;# 
   633  000A                     	;# 
   634  000B                     	;# 
   635  000C                     	;# 
   636  000D                     	;# 
   637  000E                     	;# 
   638  0012                     	;# 
   639  0013                     	;# 
   640  0014                     	;# 
   641  0018                     	;# 
   642  0019                     	;# 
   643  001A                     	;# 
   644  008C                     	;# 
   645  008C                     	;# 
   646  008D                     	;# 
   647  008E                     	;# 
   648  008E                     	;# 
   649  008F                     	;# 
   650  0090                     	;# 
   651  0090                     	;# 
   652  0091                     	;# 
   653  0092                     	;# 
   654  0092                     	;# 
   655  0093                     	;# 
   656  0094                     	;# 
   657  0094                     	;# 
   658  0095                     	;# 
   659  0096                     	;# 
   660  0096                     	;# 
   661  0097                     	;# 
   662  0098                     	;# 
   663  0099                     	;# 
   664  009A                     	;# 
   665  009B                     	;# 
   666  009B                     	;# 
   667  009C                     	;# 
   668  009D                     	;# 
   669  009D                     	;# 
   670  009E                     	;# 
   671  009F                     	;# 
   672  010C                     	;# 
   673  010C                     	;# 
   674  010D                     	;# 
   675  010E                     	;# 
   676  010F                     	;# 
   677  010F                     	;# 
   678  0110                     	;# 
   679  0111                     	;# 
   680  0112                     	;# 
   681  0113                     	;# 
   682  0114                     	;# 
   683  0115                     	;# 
   684  0116                     	;# 
   685  0117                     	;# 
   686  0118                     	;# 
   687  0119                     	;# 
   688  0119                     	;# 
   689  0119                     	;# 
   690  011A                     	;# 
   691  011A                     	;# 
   692  011A                     	;# 
   693  011B                     	;# 
   694  011B                     	;# 
   695  011B                     	;# 
   696  011B                     	;# 
   697  011B                     	;# 
   698  011C                     	;# 
   699  011C                     	;# 
   700  011C                     	;# 
   701  011D                     	;# 
   702  011D                     	;# 
   703  011D                     	;# 
   704  011E                     	;# 
   705  011E                     	;# 
   706  011E                     	;# 
   707  011F                     	;# 
   708  011F                     	;# 
   709  011F                     	;# 
   710  011F                     	;# 
   711  011F                     	;# 
   712  018C                     	;# 
   713  018D                     	;# 
   714  018E                     	;# 
   715  018F                     	;# 
   716  0190                     	;# 
   717  0191                     	;# 
   718  0192                     	;# 
   719  0196                     	;# 
   720  0197                     	;# 
   721  0198                     	;# 
   722  0199                     	;# 
   723  019A                     	;# 
   724  019B                     	;# 
   725  019C                     	;# 
   726  020C                     	;# 
   727  020D                     	;# 
   728  020E                     	;# 
   729  020E                     	;# 
   730  020F                     	;# 
   731  020F                     	;# 
   732  0210                     	;# 
   733  0210                     	;# 
   734  0211                     	;# 
   735  0211                     	;# 
   736  0212                     	;# 
   737  0213                     	;# 
   738  0214                     	;# 
   739  0214                     	;# 
   740  0215                     	;# 
   741  0215                     	;# 
   742  0216                     	;# 
   743  0216                     	;# 
   744  0217                     	;# 
   745  0217                     	;# 
   746  0218                     	;# 
   747  0219                     	;# 
   748  021A                     	;# 
   749  021A                     	;# 
   750  021B                     	;# 
   751  021B                     	;# 
   752  021C                     	;# 
   753  021C                     	;# 
   754  021D                     	;# 
   755  021D                     	;# 
   756  021E                     	;# 
   757  021F                     	;# 
   758  028C                     	;# 
   759  028C                     	;# 
   760  028D                     	;# 
   761  028D                     	;# 
   762  028E                     	;# 
   763  028F                     	;# 
   764  0290                     	;# 
   765  0291                     	;# 
   766  0292                     	;# 
   767  0292                     	;# 
   768  0293                     	;# 
   769  0293                     	;# 
   770  0294                     	;# 
   771  0295                     	;# 
   772  0296                     	;# 
   773  0297                     	;# 
   774  0298                     	;# 
   775  0298                     	;# 
   776  0299                     	;# 
   777  0299                     	;# 
   778  029A                     	;# 
   779  029B                     	;# 
   780  029C                     	;# 
   781  029D                     	;# 
   782  029F                     	;# 
   783  030C                     	;# 
   784  030C                     	;# 
   785  030D                     	;# 
   786  030E                     	;# 
   787  030F                     	;# 
   788  0310                     	;# 
   789  0310                     	;# 
   790  0311                     	;# 
   791  0312                     	;# 
   792  0313                     	;# 
   793  0314                     	;# 
   794  0314                     	;# 
   795  0315                     	;# 
   796  0316                     	;# 
   797  0317                     	;# 
   798  0318                     	;# 
   799  0318                     	;# 
   800  0319                     	;# 
   801  031A                     	;# 
   802  031B                     	;# 
   803  038C                     	;# 
   804  038C                     	;# 
   805  038D                     	;# 
   806  038E                     	;# 
   807  0390                     	;# 
   808  0390                     	;# 
   809  0391                     	;# 
   810  0392                     	;# 
   811  048C                     	;# 
   812  048C                     	;# 
   813  048D                     	;# 
   814  048E                     	;# 
   815  048F                     	;# 
   816  048F                     	;# 
   817  0490                     	;# 
   818  0491                     	;# 
   819  0492                     	;# 
   820  0492                     	;# 
   821  0493                     	;# 
   822  0494                     	;# 
   823  0495                     	;# 
   824  0495                     	;# 
   825  0496                     	;# 
   826  0497                     	;# 
   827  0498                     	;# 
   828  0499                     	;# 
   829  049A                     	;# 
   830  049B                     	;# 
   831  049C                     	;# 
   832  049D                     	;# 
   833  058C                     	;# 
   834  058C                     	;# 
   835  058D                     	;# 
   836  058E                     	;# 
   837  058F                     	;# 
   838  058F                     	;# 
   839  0590                     	;# 
   840  0591                     	;# 
   841  0592                     	;# 
   842  0593                     	;# 
   843  059C                     	;# 
   844  059C                     	;# 
   845  059D                     	;# 
   846  059D                     	;# 
   847  059E                     	;# 
   848  059F                     	;# 
   849  060C                     	;# 
   850  060C                     	;# 
   851  060D                     	;# 
   852  060D                     	;# 
   853  060E                     	;# 
   854  060F                     	;# 
   855  0610                     	;# 
   856  0611                     	;# 
   857  0612                     	;# 
   858  0613                     	;# 
   859  0614                     	;# 
   860  0616                     	;# 
   861  0616                     	;# 
   862  0617                     	;# 
   863  0617                     	;# 
   864  0618                     	;# 
   865  0619                     	;# 
   866  061A                     	;# 
   867  061B                     	;# 
   868  061C                     	;# 
   869  061D                     	;# 
   870  061E                     	;# 
   871  070C                     	;# 
   872  070D                     	;# 
   873  070E                     	;# 
   874  070F                     	;# 
   875  0710                     	;# 
   876  0711                     	;# 
   877  0712                     	;# 
   878  0713                     	;# 
   879  0714                     	;# 
   880  0716                     	;# 
   881  0717                     	;# 
   882  0718                     	;# 
   883  0719                     	;# 
   884  071A                     	;# 
   885  071B                     	;# 
   886  071C                     	;# 
   887  071D                     	;# 
   888  071E                     	;# 
   889  0796                     	;# 
   890  0797                     	;# 
   891  0798                     	;# 
   892  0799                     	;# 
   893  079A                     	;# 
   894  079B                     	;# 
   895  079C                     	;# 
   896  079D                     	;# 
   897  080C                     	;# 
   898  080D                     	;# 
   899  080E                     	;# 
   900  080F                     	;# 
   901  0810                     	;# 
   902  0811                     	;# 
   903  0812                     	;# 
   904  0813                     	;# 
   905  0814                     	;# 
   906  081A                     	;# 
   907  081A                     	;# 
   908  081B                     	;# 
   909  081C                     	;# 
   910  081C                     	;# 
   911  081D                     	;# 
   912  081E                     	;# 
   913  081F                     	;# 
   914  088C                     	;# 
   915  088D                     	;# 
   916  088E                     	;# 
   917  088F                     	;# 
   918  0890                     	;# 
   919  0891                     	;# 
   920  0892                     	;# 
   921  0893                     	;# 
   922  0895                     	;# 
   923  0896                     	;# 
   924  0897                     	;# 
   925  0898                     	;# 
   926  0899                     	;# 
   927  089A                     	;# 
   928  089B                     	;# 
   929  090C                     	;# 
   930  090E                     	;# 
   931  090F                     	;# 
   932  091F                     	;# 
   933  098F                     	;# 
   934  098F                     	;# 
   935  0990                     	;# 
   936  0991                     	;# 
   937  0992                     	;# 
   938  0993                     	;# 
   939  0994                     	;# 
   940  0995                     	;# 
   941  0996                     	;# 
   942  0997                     	;# 
   943  1E0F                     	;# 
   944  1E10                     	;# 
   945  1E11                     	;# 
   946  1E12                     	;# 
   947  1E13                     	;# 
   948  1E14                     	;# 
   949  1E15                     	;# 
   950  1E16                     	;# 
   951  1E17                     	;# 
   952  1E18                     	;# 
   953  1E19                     	;# 
   954  1E1A                     	;# 
   955  1E1B                     	;# 
   956  1E1C                     	;# 
   957  1E1D                     	;# 
   958  1E1E                     	;# 
   959  1E1F                     	;# 
   960  1E20                     	;# 
   961  1E21                     	;# 
   962  1E22                     	;# 
   963  1E23                     	;# 
   964  1E24                     	;# 
   965  1E25                     	;# 
   966  1E26                     	;# 
   967  1E27                     	;# 
   968  1E28                     	;# 
   969  1E29                     	;# 
   970  1E2A                     	;# 
   971  1E2B                     	;# 
   972  1E2C                     	;# 
   973  1E2D                     	;# 
   974  1E2E                     	;# 
   975  1E2F                     	;# 
   976  1E30                     	;# 
   977  1E31                     	;# 
   978  1E32                     	;# 
   979  1E33                     	;# 
   980  1E34                     	;# 
   981  1E35                     	;# 
   982  1E36                     	;# 
   983  1E37                     	;# 
   984  1E8F                     	;# 
   985  1E90                     	;# 
   986  1E91                     	;# 
   987  1E92                     	;# 
   988  1E93                     	;# 
   989  1E94                     	;# 
   990  1E95                     	;# 
   991  1E96                     	;# 
   992  1E97                     	;# 
   993  1E9C                     	;# 
   994  1E9D                     	;# 
   995  1E9E                     	;# 
   996  1EA1                     	;# 
   997  1EA2                     	;# 
   998  1EA3                     	;# 
   999  1EA4                     	;# 
  1000  1EA9                     	;# 
  1001  1EAA                     	;# 
  1002  1EB1                     	;# 
  1003  1EB2                     	;# 
  1004  1EB8                     	;# 
  1005  1EB9                     	;# 
  1006  1EBA                     	;# 
  1007  1EBB                     	;# 
  1008  1EBC                     	;# 
  1009  1EBD                     	;# 
  1010  1EBE                     	;# 
  1011  1EC3                     	;# 
  1012  1EC5                     	;# 
  1013  1EC6                     	;# 
  1014  1EC7                     	;# 
  1015  1EC8                     	;# 
  1016  1EC9                     	;# 
  1017  1ECA                     	;# 
  1018  1ECB                     	;# 
  1019  1ECB                     	;# 
  1020  1ECB                     	;# 
  1021  1ECC                     	;# 
  1022  1ECC                     	;# 
  1023  1ECC                     	;# 
  1024  1F10                     	;# 
  1025  1F11                     	;# 
  1026  1F12                     	;# 
  1027  1F14                     	;# 
  1028  1F15                     	;# 
  1029  1F1C                     	;# 
  1030  1F1D                     	;# 
  1031  1F1E                     	;# 
  1032  1F1F                     	;# 
  1033  1F20                     	;# 
  1034  1F21                     	;# 
  1035  1F22                     	;# 
  1036  1F23                     	;# 
  1037  1F24                     	;# 
  1038  1F25                     	;# 
  1039  1F26                     	;# 
  1040  1F27                     	;# 
  1041  1F38                     	;# 
  1042  1F39                     	;# 
  1043  1F3A                     	;# 
  1044  1F3B                     	;# 
  1045  1F3C                     	;# 
  1046  1F3D                     	;# 
  1047  1F3E                     	;# 
  1048  1F3F                     	;# 
  1049  1F43                     	;# 
  1050  1F44                     	;# 
  1051  1F45                     	;# 
  1052  1F46                     	;# 
  1053  1F47                     	;# 
  1054  1F48                     	;# 
  1055  1F49                     	;# 
  1056  1F4A                     	;# 
  1057  1F4E                     	;# 
  1058  1F4F                     	;# 
  1059  1F50                     	;# 
  1060  1F51                     	;# 
  1061  1F52                     	;# 
  1062  1F53                     	;# 
  1063  1F54                     	;# 
  1064  1F55                     	;# 
  1065  1FE4                     	;# 
  1066  1FE5                     	;# 
  1067  1FE6                     	;# 
  1068  1FE7                     	;# 
  1069  1FE8                     	;# 
  1070  1FE8                     	;# 
  1071  1FE9                     	;# 
  1072  1FEA                     	;# 
  1073  1FEB                     	;# 
  1074  1FED                     	;# 
  1075  1FEE                     	;# 
  1076  1FEF                     	;# 
  1077  0000                     	;# 
  1078  0001                     	;# 
  1079  0002                     	;# 
  1080  0003                     	;# 
  1081  0004                     	;# 
  1082  0005                     	;# 
  1083  0006                     	;# 
  1084  0007                     	;# 
  1085  0008                     	;# 
  1086  0009                     	;# 
  1087  000A                     	;# 
  1088  000B                     	;# 
  1089  000C                     	;# 
  1090  000D                     	;# 
  1091  000E                     	;# 
  1092  0012                     	;# 
  1093  0013                     	;# 
  1094  0014                     	;# 
  1095  0018                     	;# 
  1096  0019                     	;# 
  1097  001A                     	;# 
  1098  008C                     	;# 
  1099  008C                     	;# 
  1100  008D                     	;# 
  1101  008E                     	;# 
  1102  008E                     	;# 
  1103  008F                     	;# 
  1104  0090                     	;# 
  1105  0090                     	;# 
  1106  0091                     	;# 
  1107  0092                     	;# 
  1108  0092                     	;# 
  1109  0093                     	;# 
  1110  0094                     	;# 
  1111  0094                     	;# 
  1112  0095                     	;# 
  1113  0096                     	;# 
  1114  0096                     	;# 
  1115  0097                     	;# 
  1116  0098                     	;# 
  1117  0099                     	;# 
  1118  009A                     	;# 
  1119  009B                     	;# 
  1120  009B                     	;# 
  1121  009C                     	;# 
  1122  009D                     	;# 
  1123  009D                     	;# 
  1124  009E                     	;# 
  1125  009F                     	;# 
  1126  010C                     	;# 
  1127  010C                     	;# 
  1128  010D                     	;# 
  1129  010E                     	;# 
  1130  010F                     	;# 
  1131  010F                     	;# 
  1132  0110                     	;# 
  1133  0111                     	;# 
  1134  0112                     	;# 
  1135  0113                     	;# 
  1136  0114                     	;# 
  1137  0115                     	;# 
  1138  0116                     	;# 
  1139  0117                     	;# 
  1140  0118                     	;# 
  1141  0119                     	;# 
  1142  0119                     	;# 
  1143  0119                     	;# 
  1144  011A                     	;# 
  1145  011A                     	;# 
  1146  011A                     	;# 
  1147  011B                     	;# 
  1148  011B                     	;# 
  1149  011B                     	;# 
  1150  011B                     	;# 
  1151  011B                     	;# 
  1152  011C                     	;# 
  1153  011C                     	;# 
  1154  011C                     	;# 
  1155  011D                     	;# 
  1156  011D                     	;# 
  1157  011D                     	;# 
  1158  011E                     	;# 
  1159  011E                     	;# 
  1160  011E                     	;# 
  1161  011F                     	;# 
  1162  011F                     	;# 
  1163  011F                     	;# 
  1164  011F                     	;# 
  1165  011F                     	;# 
  1166  018C                     	;# 
  1167  018D                     	;# 
  1168  018E                     	;# 
  1169  018F                     	;# 
  1170  0190                     	;# 
  1171  0191                     	;# 
  1172  0192                     	;# 
  1173  0196                     	;# 
  1174  0197                     	;# 
  1175  0198                     	;# 
  1176  0199                     	;# 
  1177  019A                     	;# 
  1178  019B                     	;# 
  1179  019C                     	;# 
  1180  020C                     	;# 
  1181  020D                     	;# 
  1182  020E                     	;# 
  1183  020E                     	;# 
  1184  020F                     	;# 
  1185  020F                     	;# 
  1186  0210                     	;# 
  1187  0210                     	;# 
  1188  0211                     	;# 
  1189  0211                     	;# 
  1190  0212                     	;# 
  1191  0213                     	;# 
  1192  0214                     	;# 
  1193  0214                     	;# 
  1194  0215                     	;# 
  1195  0215                     	;# 
  1196  0216                     	;# 
  1197  0216                     	;# 
  1198  0217                     	;# 
  1199  0217                     	;# 
  1200  0218                     	;# 
  1201  0219                     	;# 
  1202  021A                     	;# 
  1203  021A                     	;# 
  1204  021B                     	;# 
  1205  021B                     	;# 
  1206  021C                     	;# 
  1207  021C                     	;# 
  1208  021D                     	;# 
  1209  021D                     	;# 
  1210  021E                     	;# 
  1211  021F                     	;# 
  1212  028C                     	;# 
  1213  028C                     	;# 
  1214  028D                     	;# 
  1215  028D                     	;# 
  1216  028E                     	;# 
  1217  028F                     	;# 
  1218  0290                     	;# 
  1219  0291                     	;# 
  1220  0292                     	;# 
  1221  0292                     	;# 
  1222  0293                     	;# 
  1223  0293                     	;# 
  1224  0294                     	;# 
  1225  0295                     	;# 
  1226  0296                     	;# 
  1227  0297                     	;# 
  1228  0298                     	;# 
  1229  0298                     	;# 
  1230  0299                     	;# 
  1231  0299                     	;# 
  1232  029A                     	;# 
  1233  029B                     	;# 
  1234  029C                     	;# 
  1235  029D                     	;# 
  1236  029F                     	;# 
  1237  030C                     	;# 
  1238  030C                     	;# 
  1239  030D                     	;# 
  1240  030E                     	;# 
  1241  030F                     	;# 
  1242  0310                     	;# 
  1243  0310                     	;# 
  1244  0311                     	;# 
  1245  0312                     	;# 
  1246  0313                     	;# 
  1247  0314                     	;# 
  1248  0314                     	;# 
  1249  0315                     	;# 
  1250  0316                     	;# 
  1251  0317                     	;# 
  1252  0318                     	;# 
  1253  0318                     	;# 
  1254  0319                     	;# 
  1255  031A                     	;# 
  1256  031B                     	;# 
  1257  038C                     	;# 
  1258  038C                     	;# 
  1259  038D                     	;# 
  1260  038E                     	;# 
  1261  0390                     	;# 
  1262  0390                     	;# 
  1263  0391                     	;# 
  1264  0392                     	;# 
  1265  048C                     	;# 
  1266  048C                     	;# 
  1267  048D                     	;# 
  1268  048E                     	;# 
  1269  048F                     	;# 
  1270  048F                     	;# 
  1271  0490                     	;# 
  1272  0491                     	;# 
  1273  0492                     	;# 
  1274  0492                     	;# 
  1275  0493                     	;# 
  1276  0494                     	;# 
  1277  0495                     	;# 
  1278  0495                     	;# 
  1279  0496                     	;# 
  1280  0497                     	;# 
  1281  0498                     	;# 
  1282  0499                     	;# 
  1283  049A                     	;# 
  1284  049B                     	;# 
  1285  049C                     	;# 
  1286  049D                     	;# 
  1287  058C                     	;# 
  1288  058C                     	;# 
  1289  058D                     	;# 
  1290  058E                     	;# 
  1291  058F                     	;# 
  1292  058F                     	;# 
  1293  0590                     	;# 
  1294  0591                     	;# 
  1295  0592                     	;# 
  1296  0593                     	;# 
  1297  059C                     	;# 
  1298  059C                     	;# 
  1299  059D                     	;# 
  1300  059D                     	;# 
  1301  059E                     	;# 
  1302  059F                     	;# 
  1303  060C                     	;# 
  1304  060C                     	;# 
  1305  060D                     	;# 
  1306  060D                     	;# 
  1307  060E                     	;# 
  1308  060F                     	;# 
  1309  0610                     	;# 
  1310  0611                     	;# 
  1311  0612                     	;# 
  1312  0613                     	;# 
  1313  0614                     	;# 
  1314  0616                     	;# 
  1315  0616                     	;# 
  1316  0617                     	;# 
  1317  0617                     	;# 
  1318  0618                     	;# 
  1319  0619                     	;# 
  1320  061A                     	;# 
  1321  061B                     	;# 
  1322  061C                     	;# 
  1323  061D                     	;# 
  1324  061E                     	;# 
  1325  070C                     	;# 
  1326  070D                     	;# 
  1327  070E                     	;# 
  1328  070F                     	;# 
  1329  0710                     	;# 
  1330  0711                     	;# 
  1331  0712                     	;# 
  1332  0713                     	;# 
  1333  0714                     	;# 
  1334  0716                     	;# 
  1335  0717                     	;# 
  1336  0718                     	;# 
  1337  0719                     	;# 
  1338  071A                     	;# 
  1339  071B                     	;# 
  1340  071C                     	;# 
  1341  071D                     	;# 
  1342  071E                     	;# 
  1343  0796                     	;# 
  1344  0797                     	;# 
  1345  0798                     	;# 
  1346  0799                     	;# 
  1347  079A                     	;# 
  1348  079B                     	;# 
  1349  079C                     	;# 
  1350  079D                     	;# 
  1351  080C                     	;# 
  1352  080D                     	;# 
  1353  080E                     	;# 
  1354  080F                     	;# 
  1355  0810                     	;# 
  1356  0811                     	;# 
  1357  0812                     	;# 
  1358  0813                     	;# 
  1359  0814                     	;# 
  1360  081A                     	;# 
  1361  081A                     	;# 
  1362  081B                     	;# 
  1363  081C                     	;# 
  1364  081C                     	;# 
  1365  081D                     	;# 
  1366  081E                     	;# 
  1367  081F                     	;# 
  1368  088C                     	;# 
  1369  088D                     	;# 
  1370  088E                     	;# 
  1371  088F                     	;# 
  1372  0890                     	;# 
  1373  0891                     	;# 
  1374  0892                     	;# 
  1375  0893                     	;# 
  1376  0895                     	;# 
  1377  0896                     	;# 
  1378  0897                     	;# 
  1379  0898                     	;# 
  1380  0899                     	;# 
  1381  089A                     	;# 
  1382  089B                     	;# 
  1383  090C                     	;# 
  1384  090E                     	;# 
  1385  090F                     	;# 
  1386  091F                     	;# 
  1387  098F                     	;# 
  1388  098F                     	;# 
  1389  0990                     	;# 
  1390  0991                     	;# 
  1391  0992                     	;# 
  1392  0993                     	;# 
  1393  0994                     	;# 
  1394  0995                     	;# 
  1395  0996                     	;# 
  1396  0997                     	;# 
  1397  1E0F                     	;# 
  1398  1E10                     	;# 
  1399  1E11                     	;# 
  1400  1E12                     	;# 
  1401  1E13                     	;# 
  1402  1E14                     	;# 
  1403  1E15                     	;# 
  1404  1E16                     	;# 
  1405  1E17                     	;# 
  1406  1E18                     	;# 
  1407  1E19                     	;# 
  1408  1E1A                     	;# 
  1409  1E1B                     	;# 
  1410  1E1C                     	;# 
  1411  1E1D                     	;# 
  1412  1E1E                     	;# 
  1413  1E1F                     	;# 
  1414  1E20                     	;# 
  1415  1E21                     	;# 
  1416  1E22                     	;# 
  1417  1E23                     	;# 
  1418  1E24                     	;# 
  1419  1E25                     	;# 
  1420  1E26                     	;# 
  1421  1E27                     	;# 
  1422  1E28                     	;# 
  1423  1E29                     	;# 
  1424  1E2A                     	;# 
  1425  1E2B                     	;# 
  1426  1E2C                     	;# 
  1427  1E2D                     	;# 
  1428  1E2E                     	;# 
  1429  1E2F                     	;# 
  1430  1E30                     	;# 
  1431  1E31                     	;# 
  1432  1E32                     	;# 
  1433  1E33                     	;# 
  1434  1E34                     	;# 
  1435  1E35                     	;# 
  1436  1E36                     	;# 
  1437  1E37                     	;# 
  1438  1E8F                     	;# 
  1439  1E90                     	;# 
  1440  1E91                     	;# 
  1441  1E92                     	;# 
  1442  1E93                     	;# 
  1443  1E94                     	;# 
  1444  1E95                     	;# 
  1445  1E96                     	;# 
  1446  1E97                     	;# 
  1447  1E9C                     	;# 
  1448  1E9D                     	;# 
  1449  1E9E                     	;# 
  1450  1EA1                     	;# 
  1451  1EA2                     	;# 
  1452  1EA3                     	;# 
  1453  1EA4                     	;# 
  1454  1EA9                     	;# 
  1455  1EAA                     	;# 
  1456  1EB1                     	;# 
  1457  1EB2                     	;# 
  1458  1EB8                     	;# 
  1459  1EB9                     	;# 
  1460  1EBA                     	;# 
  1461  1EBB                     	;# 
  1462  1EBC                     	;# 
  1463  1EBD                     	;# 
  1464  1EBE                     	;# 
  1465  1EC3                     	;# 
  1466  1EC5                     	;# 
  1467  1EC6                     	;# 
  1468  1EC7                     	;# 
  1469  1EC8                     	;# 
  1470  1EC9                     	;# 
  1471  1ECA                     	;# 
  1472  1ECB                     	;# 
  1473  1ECB                     	;# 
  1474  1ECB                     	;# 
  1475  1ECC                     	;# 
  1476  1ECC                     	;# 
  1477  1ECC                     	;# 
  1478  1F10                     	;# 
  1479  1F11                     	;# 
  1480  1F12                     	;# 
  1481  1F14                     	;# 
  1482  1F15                     	;# 
  1483  1F1C                     	;# 
  1484  1F1D                     	;# 
  1485  1F1E                     	;# 
  1486  1F1F                     	;# 
  1487  1F20                     	;# 
  1488  1F21                     	;# 
  1489  1F22                     	;# 
  1490  1F23                     	;# 
  1491  1F24                     	;# 
  1492  1F25                     	;# 
  1493  1F26                     	;# 
  1494  1F27                     	;# 
  1495  1F38                     	;# 
  1496  1F39                     	;# 
  1497  1F3A                     	;# 
  1498  1F3B                     	;# 
  1499  1F3C                     	;# 
  1500  1F3D                     	;# 
  1501  1F3E                     	;# 
  1502  1F3F                     	;# 
  1503  1F43                     	;# 
  1504  1F44                     	;# 
  1505  1F45                     	;# 
  1506  1F46                     	;# 
  1507  1F47                     	;# 
  1508  1F48                     	;# 
  1509  1F49                     	;# 
  1510  1F4A                     	;# 
  1511  1F4E                     	;# 
  1512  1F4F                     	;# 
  1513  1F50                     	;# 
  1514  1F51                     	;# 
  1515  1F52                     	;# 
  1516  1F53                     	;# 
  1517  1F54                     	;# 
  1518  1F55                     	;# 
  1519  1FE4                     	;# 
  1520  1FE5                     	;# 
  1521  1FE6                     	;# 
  1522  1FE7                     	;# 
  1523  1FE8                     	;# 
  1524  1FE8                     	;# 
  1525  1FE9                     	;# 
  1526  1FEA                     	;# 
  1527  1FEB                     	;# 
  1528  1FED                     	;# 
  1529  1FEE                     	;# 
  1530  1FEF                     	;# 
  1531  0000                     	;# 
  1532  0001                     	;# 
  1533  0002                     	;# 
  1534  0003                     	;# 
  1535  0004                     	;# 
  1536  0005                     	;# 
  1537  0006                     	;# 
  1538  0007                     	;# 
  1539  0008                     	;# 
  1540  0009                     	;# 
  1541  000A                     	;# 
  1542  000B                     	;# 
  1543  000C                     	;# 
  1544  000D                     	;# 
  1545  000E                     	;# 
  1546  0012                     	;# 
  1547  0013                     	;# 
  1548  0014                     	;# 
  1549  0018                     	;# 
  1550  0019                     	;# 
  1551  001A                     	;# 
  1552  008C                     	;# 
  1553  008C                     	;# 
  1554  008D                     	;# 
  1555  008E                     	;# 
  1556  008E                     	;# 
  1557  008F                     	;# 
  1558  0090                     	;# 
  1559  0090                     	;# 
  1560  0091                     	;# 
  1561  0092                     	;# 
  1562  0092                     	;# 
  1563  0093                     	;# 
  1564  0094                     	;# 
  1565  0094                     	;# 
  1566  0095                     	;# 
  1567  0096                     	;# 
  1568  0096                     	;# 
  1569  0097                     	;# 
  1570  0098                     	;# 
  1571  0099                     	;# 
  1572  009A                     	;# 
  1573  009B                     	;# 
  1574  009B                     	;# 
  1575  009C                     	;# 
  1576  009D                     	;# 
  1577  009D                     	;# 
  1578  009E                     	;# 
  1579  009F                     	;# 
  1580  010C                     	;# 
  1581  010C                     	;# 
  1582  010D                     	;# 
  1583  010E                     	;# 
  1584  010F                     	;# 
  1585  010F                     	;# 
  1586  0110                     	;# 
  1587  0111                     	;# 
  1588  0112                     	;# 
  1589  0113                     	;# 
  1590  0114                     	;# 
  1591  0115                     	;# 
  1592  0116                     	;# 
  1593  0117                     	;# 
  1594  0118                     	;# 
  1595  0119                     	;# 
  1596  0119                     	;# 
  1597  0119                     	;# 
  1598  011A                     	;# 
  1599  011A                     	;# 
  1600  011A                     	;# 
  1601  011B                     	;# 
  1602  011B                     	;# 
  1603  011B                     	;# 
  1604  011B                     	;# 
  1605  011B                     	;# 
  1606  011C                     	;# 
  1607  011C                     	;# 
  1608  011C                     	;# 
  1609  011D                     	;# 
  1610  011D                     	;# 
  1611  011D                     	;# 
  1612  011E                     	;# 
  1613  011E                     	;# 
  1614  011E                     	;# 
  1615  011F                     	;# 
  1616  011F                     	;# 
  1617  011F                     	;# 
  1618  011F                     	;# 
  1619  011F                     	;# 
  1620  018C                     	;# 
  1621  018D                     	;# 
  1622  018E                     	;# 
  1623  018F                     	;# 
  1624  0190                     	;# 
  1625  0191                     	;# 
  1626  0192                     	;# 
  1627  0196                     	;# 
  1628  0197                     	;# 
  1629  0198                     	;# 
  1630  0199                     	;# 
  1631  019A                     	;# 
  1632  019B                     	;# 
  1633  019C                     	;# 
  1634  020C                     	;# 
  1635  020D                     	;# 
  1636  020E                     	;# 
  1637  020E                     	;# 
  1638  020F                     	;# 
  1639  020F                     	;# 
  1640  0210                     	;# 
  1641  0210                     	;# 
  1642  0211                     	;# 
  1643  0211                     	;# 
  1644  0212                     	;# 
  1645  0213                     	;# 
  1646  0214                     	;# 
  1647  0214                     	;# 
  1648  0215                     	;# 
  1649  0215                     	;# 
  1650  0216                     	;# 
  1651  0216                     	;# 
  1652  0217                     	;# 
  1653  0217                     	;# 
  1654  0218                     	;# 
  1655  0219                     	;# 
  1656  021A                     	;# 
  1657  021A                     	;# 
  1658  021B                     	;# 
  1659  021B                     	;# 
  1660  021C                     	;# 
  1661  021C                     	;# 
  1662  021D                     	;# 
  1663  021D                     	;# 
  1664  021E                     	;# 
  1665  021F                     	;# 
  1666  028C                     	;# 
  1667  028C                     	;# 
  1668  028D                     	;# 
  1669  028D                     	;# 
  1670  028E                     	;# 
  1671  028F                     	;# 
  1672  0290                     	;# 
  1673  0291                     	;# 
  1674  0292                     	;# 
  1675  0292                     	;# 
  1676  0293                     	;# 
  1677  0293                     	;# 
  1678  0294                     	;# 
  1679  0295                     	;# 
  1680  0296                     	;# 
  1681  0297                     	;# 
  1682  0298                     	;# 
  1683  0298                     	;# 
  1684  0299                     	;# 
  1685  0299                     	;# 
  1686  029A                     	;# 
  1687  029B                     	;# 
  1688  029C                     	;# 
  1689  029D                     	;# 
  1690  029F                     	;# 
  1691  030C                     	;# 
  1692  030C                     	;# 
  1693  030D                     	;# 
  1694  030E                     	;# 
  1695  030F                     	;# 
  1696  0310                     	;# 
  1697  0310                     	;# 
  1698  0311                     	;# 
  1699  0312                     	;# 
  1700  0313                     	;# 
  1701  0314                     	;# 
  1702  0314                     	;# 
  1703  0315                     	;# 
  1704  0316                     	;# 
  1705  0317                     	;# 
  1706  0318                     	;# 
  1707  0318                     	;# 
  1708  0319                     	;# 
  1709  031A                     	;# 
  1710  031B                     	;# 
  1711  038C                     	;# 
  1712  038C                     	;# 
  1713  038D                     	;# 
  1714  038E                     	;# 
  1715  0390                     	;# 
  1716  0390                     	;# 
  1717  0391                     	;# 
  1718  0392                     	;# 
  1719  048C                     	;# 
  1720  048C                     	;# 
  1721  048D                     	;# 
  1722  048E                     	;# 
  1723  048F                     	;# 
  1724  048F                     	;# 
  1725  0490                     	;# 
  1726  0491                     	;# 
  1727  0492                     	;# 
  1728  0492                     	;# 
  1729  0493                     	;# 
  1730  0494                     	;# 
  1731  0495                     	;# 
  1732  0495                     	;# 
  1733  0496                     	;# 
  1734  0497                     	;# 
  1735  0498                     	;# 
  1736  0499                     	;# 
  1737  049A                     	;# 
  1738  049B                     	;# 
  1739  049C                     	;# 
  1740  049D                     	;# 
  1741  058C                     	;# 
  1742  058C                     	;# 
  1743  058D                     	;# 
  1744  058E                     	;# 
  1745  058F                     	;# 
  1746  058F                     	;# 
  1747  0590                     	;# 
  1748  0591                     	;# 
  1749  0592                     	;# 
  1750  0593                     	;# 
  1751  059C                     	;# 
  1752  059C                     	;# 
  1753  059D                     	;# 
  1754  059D                     	;# 
  1755  059E                     	;# 
  1756  059F                     	;# 
  1757  060C                     	;# 
  1758  060C                     	;# 
  1759  060D                     	;# 
  1760  060D                     	;# 
  1761  060E                     	;# 
  1762  060F                     	;# 
  1763  0610                     	;# 
  1764  0611                     	;# 
  1765  0612                     	;# 
  1766  0613                     	;# 
  1767  0614                     	;# 
  1768  0616                     	;# 
  1769  0616                     	;# 
  1770  0617                     	;# 
  1771  0617                     	;# 
  1772  0618                     	;# 
  1773  0619                     	;# 
  1774  061A                     	;# 
  1775  061B                     	;# 
  1776  061C                     	;# 
  1777  061D                     	;# 
  1778  061E                     	;# 
  1779  070C                     	;# 
  1780  070D                     	;# 
  1781  070E                     	;# 
  1782  070F                     	;# 
  1783  0710                     	;# 
  1784  0711                     	;# 
  1785  0712                     	;# 
  1786  0713                     	;# 
  1787  0714                     	;# 
  1788  0716                     	;# 
  1789  0717                     	;# 
  1790  0718                     	;# 
  1791  0719                     	;# 
  1792  071A                     	;# 
  1793  071B                     	;# 
  1794  071C                     	;# 
  1795  071D                     	;# 
  1796  071E                     	;# 
  1797  0796                     	;# 
  1798  0797                     	;# 
  1799  0798                     	;# 
  1800  0799                     	;# 
  1801  079A                     	;# 
  1802  079B                     	;# 
  1803  079C                     	;# 
  1804  079D                     	;# 
  1805  080C                     	;# 
  1806  080D                     	;# 
  1807  080E                     	;# 
  1808  080F                     	;# 
  1809  0810                     	;# 
  1810  0811                     	;# 
  1811  0812                     	;# 
  1812  0813                     	;# 
  1813  0814                     	;# 
  1814  081A                     	;# 
  1815  081A                     	;# 
  1816  081B                     	;# 
  1817  081C                     	;# 
  1818  081C                     	;# 
  1819  081D                     	;# 
  1820  081E                     	;# 
  1821  081F                     	;# 
  1822  088C                     	;# 
  1823  088D                     	;# 
  1824  088E                     	;# 
  1825  088F                     	;# 
  1826  0890                     	;# 
  1827  0891                     	;# 
  1828  0892                     	;# 
  1829  0893                     	;# 
  1830  0895                     	;# 
  1831  0896                     	;# 
  1832  0897                     	;# 
  1833  0898                     	;# 
  1834  0899                     	;# 
  1835  089A                     	;# 
  1836  089B                     	;# 
  1837  090C                     	;# 
  1838  090E                     	;# 
  1839  090F                     	;# 
  1840  091F                     	;# 
  1841  098F                     	;# 
  1842  098F                     	;# 
  1843  0990                     	;# 
  1844  0991                     	;# 
  1845  0992                     	;# 
  1846  0993                     	;# 
  1847  0994                     	;# 
  1848  0995                     	;# 
  1849  0996                     	;# 
  1850  0997                     	;# 
  1851  1E0F                     	;# 
  1852  1E10                     	;# 
  1853  1E11                     	;# 
  1854  1E12                     	;# 
  1855  1E13                     	;# 
  1856  1E14                     	;# 
  1857  1E15                     	;# 
  1858  1E16                     	;# 
  1859  1E17                     	;# 
  1860  1E18                     	;# 
  1861  1E19                     	;# 
  1862  1E1A                     	;# 
  1863  1E1B                     	;# 
  1864  1E1C                     	;# 
  1865  1E1D                     	;# 
  1866  1E1E                     	;# 
  1867  1E1F                     	;# 
  1868  1E20                     	;# 
  1869  1E21                     	;# 
  1870  1E22                     	;# 
  1871  1E23                     	;# 
  1872  1E24                     	;# 
  1873  1E25                     	;# 
  1874  1E26                     	;# 
  1875  1E27                     	;# 
  1876  1E28                     	;# 
  1877  1E29                     	;# 
  1878  1E2A                     	;# 
  1879  1E2B                     	;# 
  1880  1E2C                     	;# 
  1881  1E2D                     	;# 
  1882  1E2E                     	;# 
  1883  1E2F                     	;# 
  1884  1E30                     	;# 
  1885  1E31                     	;# 
  1886  1E32                     	;# 
  1887  1E33                     	;# 
  1888  1E34                     	;# 
  1889  1E35                     	;# 
  1890  1E36                     	;# 
  1891  1E37                     	;# 
  1892  1E8F                     	;# 
  1893  1E90                     	;# 
  1894  1E91                     	;# 
  1895  1E92                     	;# 
  1896  1E93                     	;# 
  1897  1E94                     	;# 
  1898  1E95                     	;# 
  1899  1E96                     	;# 
  1900  1E97                     	;# 
  1901  1E9C                     	;# 
  1902  1E9D                     	;# 
  1903  1E9E                     	;# 
  1904  1EA1                     	;# 
  1905  1EA2                     	;# 
  1906  1EA3                     	;# 
  1907  1EA4                     	;# 
  1908  1EA9                     	;# 
  1909  1EAA                     	;# 
  1910  1EB1                     	;# 
  1911  1EB2                     	;# 
  1912  1EB8                     	;# 
  1913  1EB9                     	;# 
  1914  1EBA                     	;# 
  1915  1EBB                     	;# 
  1916  1EBC                     	;# 
  1917  1EBD                     	;# 
  1918  1EBE                     	;# 
  1919  1EC3                     	;# 
  1920  1EC5                     	;# 
  1921  1EC6                     	;# 
  1922  1EC7                     	;# 
  1923  1EC8                     	;# 
  1924  1EC9                     	;# 
  1925  1ECA                     	;# 
  1926  1ECB                     	;# 
  1927  1ECB                     	;# 
  1928  1ECB                     	;# 
  1929  1ECC                     	;# 
  1930  1ECC                     	;# 
  1931  1ECC                     	;# 
  1932  1F10                     	;# 
  1933  1F11                     	;# 
  1934  1F12                     	;# 
  1935  1F14                     	;# 
  1936  1F15                     	;# 
  1937  1F1C                     	;# 
  1938  1F1D                     	;# 
  1939  1F1E                     	;# 
  1940  1F1F                     	;# 
  1941  1F20                     	;# 
  1942  1F21                     	;# 
  1943  1F22                     	;# 
  1944  1F23                     	;# 
  1945  1F24                     	;# 
  1946  1F25                     	;# 
  1947  1F26                     	;# 
  1948  1F27                     	;# 
  1949  1F38                     	;# 
  1950  1F39                     	;# 
  1951  1F3A                     	;# 
  1952  1F3B                     	;# 
  1953  1F3C                     	;# 
  1954  1F3D                     	;# 
  1955  1F3E                     	;# 
  1956  1F3F                     	;# 
  1957  1F43                     	;# 
  1958  1F44                     	;# 
  1959  1F45                     	;# 
  1960  1F46                     	;# 
  1961  1F47                     	;# 
  1962  1F48                     	;# 
  1963  1F49                     	;# 
  1964  1F4A                     	;# 
  1965  1F4E                     	;# 
  1966  1F4F                     	;# 
  1967  1F50                     	;# 
  1968  1F51                     	;# 
  1969  1F52                     	;# 
  1970  1F53                     	;# 
  1971  1F54                     	;# 
  1972  1F55                     	;# 
  1973  1FE4                     	;# 
  1974  1FE5                     	;# 
  1975  1FE6                     	;# 
  1976  1FE7                     	;# 
  1977  1FE8                     	;# 
  1978  1FE8                     	;# 
  1979  1FE9                     	;# 
  1980  1FEA                     	;# 
  1981  1FEB                     	;# 
  1982  1FED                     	;# 
  1983  1FEE                     	;# 
  1984  1FEF                     	;# 
  1985  0000                     	;# 
  1986  0001                     	;# 
  1987  0002                     	;# 
  1988  0003                     	;# 
  1989  0004                     	;# 
  1990  0005                     	;# 
  1991  0006                     	;# 
  1992  0007                     	;# 
  1993  0008                     	;# 
  1994  0009                     	;# 
  1995  000A                     	;# 
  1996  000B                     	;# 
  1997  000C                     	;# 
  1998  000D                     	;# 
  1999  000E                     	;# 
  2000  0012                     	;# 
  2001  0013                     	;# 
  2002  0014                     	;# 
  2003  0018                     	;# 
  2004  0019                     	;# 
  2005  001A                     	;# 
  2006  008C                     	;# 
  2007  008C                     	;# 
  2008  008D                     	;# 
  2009  008E                     	;# 
  2010  008E                     	;# 
  2011  008F                     	;# 
  2012  0090                     	;# 
  2013  0090                     	;# 
  2014  0091                     	;# 
  2015  0092                     	;# 
  2016  0092                     	;# 
  2017  0093                     	;# 
  2018  0094                     	;# 
  2019  0094                     	;# 
  2020  0095                     	;# 
  2021  0096                     	;# 
  2022  0096                     	;# 
  2023  0097                     	;# 
  2024  0098                     	;# 
  2025  0099                     	;# 
  2026  009A                     	;# 
  2027  009B                     	;# 
  2028  009B                     	;# 
  2029  009C                     	;# 
  2030  009D                     	;# 
  2031  009D                     	;# 
  2032  009E                     	;# 
  2033  009F                     	;# 
  2034  010C                     	;# 
  2035  010C                     	;# 
  2036  010D                     	;# 
  2037  010E                     	;# 
  2038  010F                     	;# 
  2039  010F                     	;# 
  2040  0110                     	;# 
  2041  0111                     	;# 
  2042  0112                     	;# 
  2043  0113                     	;# 
  2044  0114                     	;# 
  2045  0115                     	;# 
  2046  0116                     	;# 
  2047  0117                     	;# 
  2048  0118                     	;# 
  2049  0119                     	;# 
  2050  0119                     	;# 
  2051  0119                     	;# 
  2052  011A                     	;# 
  2053  011A                     	;# 
  2054  011A                     	;# 
  2055  011B                     	;# 
  2056  011B                     	;# 
  2057  011B                     	;# 
  2058  011B                     	;# 
  2059  011B                     	;# 
  2060  011C                     	;# 
  2061  011C                     	;# 
  2062  011C                     	;# 
  2063  011D                     	;# 
  2064  011D                     	;# 
  2065  011D                     	;# 
  2066  011E                     	;# 
  2067  011E                     	;# 
  2068  011E                     	;# 
  2069  011F                     	;# 
  2070  011F                     	;# 
  2071  011F                     	;# 
  2072  011F                     	;# 
  2073  011F                     	;# 
  2074  018C                     	;# 
  2075  018D                     	;# 
  2076  018E                     	;# 
  2077  018F                     	;# 
  2078  0190                     	;# 
  2079  0191                     	;# 
  2080  0192                     	;# 
  2081  0196                     	;# 
  2082  0197                     	;# 
  2083  0198                     	;# 
  2084  0199                     	;# 
  2085  019A                     	;# 
  2086  019B                     	;# 
  2087  019C                     	;# 
  2088  020C                     	;# 
  2089  020D                     	;# 
  2090  020E                     	;# 
  2091  020E                     	;# 
  2092  020F                     	;# 
  2093  020F                     	;# 
  2094  0210                     	;# 
  2095  0210                     	;# 
  2096  0211                     	;# 
  2097  0211                     	;# 
  2098  0212                     	;# 
  2099  0213                     	;# 
  2100  0214                     	;# 
  2101  0214                     	;# 
  2102  0215                     	;# 
  2103  0215                     	;# 
  2104  0216                     	;# 
  2105  0216                     	;# 
  2106  0217                     	;# 
  2107  0217                     	;# 
  2108  0218                     	;# 
  2109  0219                     	;# 
  2110  021A                     	;# 
  2111  021A                     	;# 
  2112  021B                     	;# 
  2113  021B                     	;# 
  2114  021C                     	;# 
  2115  021C                     	;# 
  2116  021D                     	;# 
  2117  021D                     	;# 
  2118  021E                     	;# 
  2119  021F                     	;# 
  2120  028C                     	;# 
  2121  028C                     	;# 
  2122  028D                     	;# 
  2123  028D                     	;# 
  2124  028E                     	;# 
  2125  028F                     	;# 
  2126  0290                     	;# 
  2127  0291                     	;# 
  2128  0292                     	;# 
  2129  0292                     	;# 
  2130  0293                     	;# 
  2131  0293                     	;# 
  2132  0294                     	;# 
  2133  0295                     	;# 
  2134  0296                     	;# 
  2135  0297                     	;# 
  2136  0298                     	;# 
  2137  0298                     	;# 
  2138  0299                     	;# 
  2139  0299                     	;# 
  2140  029A                     	;# 
  2141  029B                     	;# 
  2142  029C                     	;# 
  2143  029D                     	;# 
  2144  029F                     	;# 
  2145  030C                     	;# 
  2146  030C                     	;# 
  2147  030D                     	;# 
  2148  030E                     	;# 
  2149  030F                     	;# 
  2150  0310                     	;# 
  2151  0310                     	;# 
  2152  0311                     	;# 
  2153  0312                     	;# 
  2154  0313                     	;# 
  2155  0314                     	;# 
  2156  0314                     	;# 
  2157  0315                     	;# 
  2158  0316                     	;# 
  2159  0317                     	;# 
  2160  0318                     	;# 
  2161  0318                     	;# 
  2162  0319                     	;# 
  2163  031A                     	;# 
  2164  031B                     	;# 
  2165  038C                     	;# 
  2166  038C                     	;# 
  2167  038D                     	;# 
  2168  038E                     	;# 
  2169  0390                     	;# 
  2170  0390                     	;# 
  2171  0391                     	;# 
  2172  0392                     	;# 
  2173  048C                     	;# 
  2174  048C                     	;# 
  2175  048D                     	;# 
  2176  048E                     	;# 
  2177  048F                     	;# 
  2178  048F                     	;# 
  2179  0490                     	;# 
  2180  0491                     	;# 
  2181  0492                     	;# 
  2182  0492                     	;# 
  2183  0493                     	;# 
  2184  0494                     	;# 
  2185  0495                     	;# 
  2186  0495                     	;# 
  2187  0496                     	;# 
  2188  0497                     	;# 
  2189  0498                     	;# 
  2190  0499                     	;# 
  2191  049A                     	;# 
  2192  049B                     	;# 
  2193  049C                     	;# 
  2194  049D                     	;# 
  2195  058C                     	;# 
  2196  058C                     	;# 
  2197  058D                     	;# 
  2198  058E                     	;# 
  2199  058F                     	;# 
  2200  058F                     	;# 
  2201  0590                     	;# 
  2202  0591                     	;# 
  2203  0592                     	;# 
  2204  0593                     	;# 
  2205  059C                     	;# 
  2206  059C                     	;# 
  2207  059D                     	;# 
  2208  059D                     	;# 
  2209  059E                     	;# 
  2210  059F                     	;# 
  2211  060C                     	;# 
  2212  060C                     	;# 
  2213  060D                     	;# 
  2214  060D                     	;# 
  2215  060E                     	;# 
  2216  060F                     	;# 
  2217  0610                     	;# 
  2218  0611                     	;# 
  2219  0612                     	;# 
  2220  0613                     	;# 
  2221  0614                     	;# 
  2222  0616                     	;# 
  2223  0616                     	;# 
  2224  0617                     	;# 
  2225  0617                     	;# 
  2226  0618                     	;# 
  2227  0619                     	;# 
  2228  061A                     	;# 
  2229  061B                     	;# 
  2230  061C                     	;# 
  2231  061D                     	;# 
  2232  061E                     	;# 
  2233  070C                     	;# 
  2234  070D                     	;# 
  2235  070E                     	;# 
  2236  070F                     	;# 
  2237  0710                     	;# 
  2238  0711                     	;# 
  2239  0712                     	;# 
  2240  0713                     	;# 
  2241  0714                     	;# 
  2242  0716                     	;# 
  2243  0717                     	;# 
  2244  0718                     	;# 
  2245  0719                     	;# 
  2246  071A                     	;# 
  2247  071B                     	;# 
  2248  071C                     	;# 
  2249  071D                     	;# 
  2250  071E                     	;# 
  2251  0796                     	;# 
  2252  0797                     	;# 
  2253  0798                     	;# 
  2254  0799                     	;# 
  2255  079A                     	;# 
  2256  079B                     	;# 
  2257  079C                     	;# 
  2258  079D                     	;# 
  2259  080C                     	;# 
  2260  080D                     	;# 
  2261  080E                     	;# 
  2262  080F                     	;# 
  2263  0810                     	;# 
  2264  0811                     	;# 
  2265  0812                     	;# 
  2266  0813                     	;# 
  2267  0814                     	;# 
  2268  081A                     	;# 
  2269  081A                     	;# 
  2270  081B                     	;# 
  2271  081C                     	;# 
  2272  081C                     	;# 
  2273  081D                     	;# 
  2274  081E                     	;# 
  2275  081F                     	;# 
  2276  088C                     	;# 
  2277  088D                     	;# 
  2278  088E                     	;# 
  2279  088F                     	;# 
  2280  0890                     	;# 
  2281  0891                     	;# 
  2282  0892                     	;# 
  2283  0893                     	;# 
  2284  0895                     	;# 
  2285  0896                     	;# 
  2286  0897                     	;# 
  2287  0898                     	;# 
  2288  0899                     	;# 
  2289  089A                     	;# 
  2290  089B                     	;# 
  2291  090C                     	;# 
  2292  090E                     	;# 
  2293  090F                     	;# 
  2294  091F                     	;# 
  2295  098F                     	;# 
  2296  098F                     	;# 
  2297  0990                     	;# 
  2298  0991                     	;# 
  2299  0992                     	;# 
  2300  0993                     	;# 
  2301  0994                     	;# 
  2302  0995                     	;# 
  2303  0996                     	;# 
  2304  0997                     	;# 
  2305  1E0F                     	;# 
  2306  1E10                     	;# 
  2307  1E11                     	;# 
  2308  1E12                     	;# 
  2309  1E13                     	;# 
  2310  1E14                     	;# 
  2311  1E15                     	;# 
  2312  1E16                     	;# 
  2313  1E17                     	;# 
  2314  1E18                     	;# 
  2315  1E19                     	;# 
  2316  1E1A                     	;# 
  2317  1E1B                     	;# 
  2318  1E1C                     	;# 
  2319  1E1D                     	;# 
  2320  1E1E                     	;# 
  2321  1E1F                     	;# 
  2322  1E20                     	;# 
  2323  1E21                     	;# 
  2324  1E22                     	;# 
  2325  1E23                     	;# 
  2326  1E24                     	;# 
  2327  1E25                     	;# 
  2328  1E26                     	;# 
  2329  1E27                     	;# 
  2330  1E28                     	;# 
  2331  1E29                     	;# 
  2332  1E2A                     	;# 
  2333  1E2B                     	;# 
  2334  1E2C                     	;# 
  2335  1E2D                     	;# 
  2336  1E2E                     	;# 
  2337  1E2F                     	;# 
  2338  1E30                     	;# 
  2339  1E31                     	;# 
  2340  1E32                     	;# 
  2341  1E33                     	;# 
  2342  1E34                     	;# 
  2343  1E35                     	;# 
  2344  1E36                     	;# 
  2345  1E37                     	;# 
  2346  1E8F                     	;# 
  2347  1E90                     	;# 
  2348  1E91                     	;# 
  2349  1E92                     	;# 
  2350  1E93                     	;# 
  2351  1E94                     	;# 
  2352  1E95                     	;# 
  2353  1E96                     	;# 
  2354  1E97                     	;# 
  2355  1E9C                     	;# 
  2356  1E9D                     	;# 
  2357  1E9E                     	;# 
  2358  1EA1                     	;# 
  2359  1EA2                     	;# 
  2360  1EA3                     	;# 
  2361  1EA4                     	;# 
  2362  1EA9                     	;# 
  2363  1EAA                     	;# 
  2364  1EB1                     	;# 
  2365  1EB2                     	;# 
  2366  1EB8                     	;# 
  2367  1EB9                     	;# 
  2368  1EBA                     	;# 
  2369  1EBB                     	;# 
  2370  1EBC                     	;# 
  2371  1EBD                     	;# 
  2372  1EBE                     	;# 
  2373  1EC3                     	;# 
  2374  1EC5                     	;# 
  2375  1EC6                     	;# 
  2376  1EC7                     	;# 
  2377  1EC8                     	;# 
  2378  1EC9                     	;# 
  2379  1ECA                     	;# 
  2380  1ECB                     	;# 
  2381  1ECB                     	;# 
  2382  1ECB                     	;# 
  2383  1ECC                     	;# 
  2384  1ECC                     	;# 
  2385  1ECC                     	;# 
  2386  1F10                     	;# 
  2387  1F11                     	;# 
  2388  1F12                     	;# 
  2389  1F14                     	;# 
  2390  1F15                     	;# 
  2391  1F1C                     	;# 
  2392  1F1D                     	;# 
  2393  1F1E                     	;# 
  2394  1F1F                     	;# 
  2395  1F20                     	;# 
  2396  1F21                     	;# 
  2397  1F22                     	;# 
  2398  1F23                     	;# 
  2399  1F24                     	;# 
  2400  1F25                     	;# 
  2401  1F26                     	;# 
  2402  1F27                     	;# 
  2403  1F38                     	;# 
  2404  1F39                     	;# 
  2405  1F3A                     	;# 
  2406  1F3B                     	;# 
  2407  1F3C                     	;# 
  2408  1F3D                     	;# 
  2409  1F3E                     	;# 
  2410  1F3F                     	;# 
  2411  1F43                     	;# 
  2412  1F44                     	;# 
  2413  1F45                     	;# 
  2414  1F46                     	;# 
  2415  1F47                     	;# 
  2416  1F48                     	;# 
  2417  1F49                     	;# 
  2418  1F4A                     	;# 
  2419  1F4E                     	;# 
  2420  1F4F                     	;# 
  2421  1F50                     	;# 
  2422  1F51                     	;# 
  2423  1F52                     	;# 
  2424  1F53                     	;# 
  2425  1F54                     	;# 
  2426  1F55                     	;# 
  2427  1FE4                     	;# 
  2428  1FE5                     	;# 
  2429  1FE6                     	;# 
  2430  1FE7                     	;# 
  2431  1FE8                     	;# 
  2432  1FE8                     	;# 
  2433  1FE9                     	;# 
  2434  1FEA                     	;# 
  2435  1FEB                     	;# 
  2436  1FED                     	;# 
  2437  1FEE                     	;# 
  2438  1FEF                     	;# 
  2439  0000                     	;# 
  2440  0001                     	;# 
  2441  0002                     	;# 
  2442  0003                     	;# 
  2443  0004                     	;# 
  2444  0005                     	;# 
  2445  0006                     	;# 
  2446  0007                     	;# 
  2447  0008                     	;# 
  2448  0009                     	;# 
  2449  000A                     	;# 
  2450  000B                     	;# 
  2451  000C                     	;# 
  2452  000D                     	;# 
  2453  000E                     	;# 
  2454  0012                     	;# 
  2455  0013                     	;# 
  2456  0014                     	;# 
  2457  0018                     	;# 
  2458  0019                     	;# 
  2459  001A                     	;# 
  2460  008C                     	;# 
  2461  008C                     	;# 
  2462  008D                     	;# 
  2463  008E                     	;# 
  2464  008E                     	;# 
  2465  008F                     	;# 
  2466  0090                     	;# 
  2467  0090                     	;# 
  2468  0091                     	;# 
  2469  0092                     	;# 
  2470  0092                     	;# 
  2471  0093                     	;# 
  2472  0094                     	;# 
  2473  0094                     	;# 
  2474  0095                     	;# 
  2475  0096                     	;# 
  2476  0096                     	;# 
  2477  0097                     	;# 
  2478  0098                     	;# 
  2479  0099                     	;# 
  2480  009A                     	;# 
  2481  009B                     	;# 
  2482  009B                     	;# 
  2483  009C                     	;# 
  2484  009D                     	;# 
  2485  009D                     	;# 
  2486  009E                     	;# 
  2487  009F                     	;# 
  2488  010C                     	;# 
  2489  010C                     	;# 
  2490  010D                     	;# 
  2491  010E                     	;# 
  2492  010F                     	;# 
  2493  010F                     	;# 
  2494  0110                     	;# 
  2495  0111                     	;# 
  2496  0112                     	;# 
  2497  0113                     	;# 
  2498  0114                     	;# 
  2499  0115                     	;# 
  2500  0116                     	;# 
  2501  0117                     	;# 
  2502  0118                     	;# 
  2503  0119                     	;# 
  2504  0119                     	;# 
  2505  0119                     	;# 
  2506  011A                     	;# 
  2507  011A                     	;# 
  2508  011A                     	;# 
  2509  011B                     	;# 
  2510  011B                     	;# 
  2511  011B                     	;# 
  2512  011B                     	;# 
  2513  011B                     	;# 
  2514  011C                     	;# 
  2515  011C                     	;# 
  2516  011C                     	;# 
  2517  011D                     	;# 
  2518  011D                     	;# 
  2519  011D                     	;# 
  2520  011E                     	;# 
  2521  011E                     	;# 
  2522  011E                     	;# 
  2523  011F                     	;# 
  2524  011F                     	;# 
  2525  011F                     	;# 
  2526  011F                     	;# 
  2527  011F                     	;# 
  2528  018C                     	;# 
  2529  018D                     	;# 
  2530  018E                     	;# 
  2531  018F                     	;# 
  2532  0190                     	;# 
  2533  0191                     	;# 
  2534  0192                     	;# 
  2535  0196                     	;# 
  2536  0197                     	;# 
  2537  0198                     	;# 
  2538  0199                     	;# 
  2539  019A                     	;# 
  2540  019B                     	;# 
  2541  019C                     	;# 
  2542  020C                     	;# 
  2543  020D                     	;# 
  2544  020E                     	;# 
  2545  020E                     	;# 
  2546  020F                     	;# 
  2547  020F                     	;# 
  2548  0210                     	;# 
  2549  0210                     	;# 
  2550  0211                     	;# 
  2551  0211                     	;# 
  2552  0212                     	;# 
  2553  0213                     	;# 
  2554  0214                     	;# 
  2555  0214                     	;# 
  2556  0215                     	;# 
  2557  0215                     	;# 
  2558  0216                     	;# 
  2559  0216                     	;# 
  2560  0217                     	;# 
  2561  0217                     	;# 
  2562  0218                     	;# 
  2563  0219                     	;# 
  2564  021A                     	;# 
  2565  021A                     	;# 
  2566  021B                     	;# 
  2567  021B                     	;# 
  2568  021C                     	;# 
  2569  021C                     	;# 
  2570  021D                     	;# 
  2571  021D                     	;# 
  2572  021E                     	;# 
  2573  021F                     	;# 
  2574  028C                     	;# 
  2575  028C                     	;# 
  2576  028D                     	;# 
  2577  028D                     	;# 
  2578  028E                     	;# 
  2579  028F                     	;# 
  2580  0290                     	;# 
  2581  0291                     	;# 
  2582  0292                     	;# 
  2583  0292                     	;# 
  2584  0293                     	;# 
  2585  0293                     	;# 
  2586  0294                     	;# 
  2587  0295                     	;# 
  2588  0296                     	;# 
  2589  0297                     	;# 
  2590  0298                     	;# 
  2591  0298                     	;# 
  2592  0299                     	;# 
  2593  0299                     	;# 
  2594  029A                     	;# 
  2595  029B                     	;# 
  2596  029C                     	;# 
  2597  029D                     	;# 
  2598  029F                     	;# 
  2599  030C                     	;# 
  2600  030C                     	;# 
  2601  030D                     	;# 
  2602  030E                     	;# 
  2603  030F                     	;# 
  2604  0310                     	;# 
  2605  0310                     	;# 
  2606  0311                     	;# 
  2607  0312                     	;# 
  2608  0313                     	;# 
  2609  0314                     	;# 
  2610  0314                     	;# 
  2611  0315                     	;# 
  2612  0316                     	;# 
  2613  0317                     	;# 
  2614  0318                     	;# 
  2615  0318                     	;# 
  2616  0319                     	;# 
  2617  031A                     	;# 
  2618  031B                     	;# 
  2619  038C                     	;# 
  2620  038C                     	;# 
  2621  038D                     	;# 
  2622  038E                     	;# 
  2623  0390                     	;# 
  2624  0390                     	;# 
  2625  0391                     	;# 
  2626  0392                     	;# 
  2627  048C                     	;# 
  2628  048C                     	;# 
  2629  048D                     	;# 
  2630  048E                     	;# 
  2631  048F                     	;# 
  2632  048F                     	;# 
  2633  0490                     	;# 
  2634  0491                     	;# 
  2635  0492                     	;# 
  2636  0492                     	;# 
  2637  0493                     	;# 
  2638  0494                     	;# 
  2639  0495                     	;# 
  2640  0495                     	;# 
  2641  0496                     	;# 
  2642  0497                     	;# 
  2643  0498                     	;# 
  2644  0499                     	;# 
  2645  049A                     	;# 
  2646  049B                     	;# 
  2647  049C                     	;# 
  2648  049D                     	;# 
  2649  058C                     	;# 
  2650  058C                     	;# 
  2651  058D                     	;# 
  2652  058E                     	;# 
  2653  058F                     	;# 
  2654  058F                     	;# 
  2655  0590                     	;# 
  2656  0591                     	;# 
  2657  0592                     	;# 
  2658  0593                     	;# 
  2659  059C                     	;# 
  2660  059C                     	;# 
  2661  059D                     	;# 
  2662  059D                     	;# 
  2663  059E                     	;# 
  2664  059F                     	;# 
  2665  060C                     	;# 
  2666  060C                     	;# 
  2667  060D                     	;# 
  2668  060D                     	;# 
  2669  060E                     	;# 
  2670  060F                     	;# 
  2671  0610                     	;# 
  2672  0611                     	;# 
  2673  0612                     	;# 
  2674  0613                     	;# 
  2675  0614                     	;# 
  2676  0616                     	;# 
  2677  0616                     	;# 
  2678  0617                     	;# 
  2679  0617                     	;# 
  2680  0618                     	;# 
  2681  0619                     	;# 
  2682  061A                     	;# 
  2683  061B                     	;# 
  2684  061C                     	;# 
  2685  061D                     	;# 
  2686  061E                     	;# 
  2687  070C                     	;# 
  2688  070D                     	;# 
  2689  070E                     	;# 
  2690  070F                     	;# 
  2691  0710                     	;# 
  2692  0711                     	;# 
  2693  0712                     	;# 
  2694  0713                     	;# 
  2695  0714                     	;# 
  2696  0716                     	;# 
  2697  0717                     	;# 
  2698  0718                     	;# 
  2699  0719                     	;# 
  2700  071A                     	;# 
  2701  071B                     	;# 
  2702  071C                     	;# 
  2703  071D                     	;# 
  2704  071E                     	;# 
  2705  0796                     	;# 
  2706  0797                     	;# 
  2707  0798                     	;# 
  2708  0799                     	;# 
  2709  079A                     	;# 
  2710  079B                     	;# 
  2711  079C                     	;# 
  2712  079D                     	;# 
  2713  080C                     	;# 
  2714  080D                     	;# 
  2715  080E                     	;# 
  2716  080F                     	;# 
  2717  0810                     	;# 
  2718  0811                     	;# 
  2719  0812                     	;# 
  2720  0813                     	;# 
  2721  0814                     	;# 
  2722  081A                     	;# 
  2723  081A                     	;# 
  2724  081B                     	;# 
  2725  081C                     	;# 
  2726  081C                     	;# 
  2727  081D                     	;# 
  2728  081E                     	;# 
  2729  081F                     	;# 
  2730  088C                     	;# 
  2731  088D                     	;# 
  2732  088E                     	;# 
  2733  088F                     	;# 
  2734  0890                     	;# 
  2735  0891                     	;# 
  2736  0892                     	;# 
  2737  0893                     	;# 
  2738  0895                     	;# 
  2739  0896                     	;# 
  2740  0897                     	;# 
  2741  0898                     	;# 
  2742  0899                     	;# 
  2743  089A                     	;# 
  2744  089B                     	;# 
  2745  090C                     	;# 
  2746  090E                     	;# 
  2747  090F                     	;# 
  2748  091F                     	;# 
  2749  098F                     	;# 
  2750  098F                     	;# 
  2751  0990                     	;# 
  2752  0991                     	;# 
  2753  0992                     	;# 
  2754  0993                     	;# 
  2755  0994                     	;# 
  2756  0995                     	;# 
  2757  0996                     	;# 
  2758  0997                     	;# 
  2759  1E0F                     	;# 
  2760  1E10                     	;# 
  2761  1E11                     	;# 
  2762  1E12                     	;# 
  2763  1E13                     	;# 
  2764  1E14                     	;# 
  2765  1E15                     	;# 
  2766  1E16                     	;# 
  2767  1E17                     	;# 
  2768  1E18                     	;# 
  2769  1E19                     	;# 
  2770  1E1A                     	;# 
  2771  1E1B                     	;# 
  2772  1E1C                     	;# 
  2773  1E1D                     	;# 
  2774  1E1E                     	;# 
  2775  1E1F                     	;# 
  2776  1E20                     	;# 
  2777  1E21                     	;# 
  2778  1E22                     	;# 
  2779  1E23                     	;# 
  2780  1E24                     	;# 
  2781  1E25                     	;# 
  2782  1E26                     	;# 
  2783  1E27                     	;# 
  2784  1E28                     	;# 
  2785  1E29                     	;# 
  2786  1E2A                     	;# 
  2787  1E2B                     	;# 
  2788  1E2C                     	;# 
  2789  1E2D                     	;# 
  2790  1E2E                     	;# 
  2791  1E2F                     	;# 
  2792  1E30                     	;# 
  2793  1E31                     	;# 
  2794  1E32                     	;# 
  2795  1E33                     	;# 
  2796  1E34                     	;# 
  2797  1E35                     	;# 
  2798  1E36                     	;# 
  2799  1E37                     	;# 
  2800  1E8F                     	;# 
  2801  1E90                     	;# 
  2802  1E91                     	;# 
  2803  1E92                     	;# 
  2804  1E93                     	;# 
  2805  1E94                     	;# 
  2806  1E95                     	;# 
  2807  1E96                     	;# 
  2808  1E97                     	;# 
  2809  1E9C                     	;# 
  2810  1E9D                     	;# 
  2811  1E9E                     	;# 
  2812  1EA1                     	;# 
  2813  1EA2                     	;# 
  2814  1EA3                     	;# 
  2815  1EA4                     	;# 
  2816  1EA9                     	;# 
  2817  1EAA                     	;# 
  2818  1EB1                     	;# 
  2819  1EB2                     	;# 
  2820  1EB8                     	;# 
  2821  1EB9                     	;# 
  2822  1EBA                     	;# 
  2823  1EBB                     	;# 
  2824  1EBC                     	;# 
  2825  1EBD                     	;# 
  2826  1EBE                     	;# 
  2827  1EC3                     	;# 
  2828  1EC5                     	;# 
  2829  1EC6                     	;# 
  2830  1EC7                     	;# 
  2831  1EC8                     	;# 
  2832  1EC9                     	;# 
  2833  1ECA                     	;# 
  2834  1ECB                     	;# 
  2835  1ECB                     	;# 
  2836  1ECB                     	;# 
  2837  1ECC                     	;# 
  2838  1ECC                     	;# 
  2839  1ECC                     	;# 
  2840  1F10                     	;# 
  2841  1F11                     	;# 
  2842  1F12                     	;# 
  2843  1F14                     	;# 
  2844  1F15                     	;# 
  2845  1F1C                     	;# 
  2846  1F1D                     	;# 
  2847  1F1E                     	;# 
  2848  1F1F                     	;# 
  2849  1F20                     	;# 
  2850  1F21                     	;# 
  2851  1F22                     	;# 
  2852  1F23                     	;# 
  2853  1F24                     	;# 
  2854  1F25                     	;# 
  2855  1F26                     	;# 
  2856  1F27                     	;# 
  2857  1F38                     	;# 
  2858  1F39                     	;# 
  2859  1F3A                     	;# 
  2860  1F3B                     	;# 
  2861  1F3C                     	;# 
  2862  1F3D                     	;# 
  2863  1F3E                     	;# 
  2864  1F3F                     	;# 
  2865  1F43                     	;# 
  2866  1F44                     	;# 
  2867  1F45                     	;# 
  2868  1F46                     	;# 
  2869  1F47                     	;# 
  2870  1F48                     	;# 
  2871  1F49                     	;# 
  2872  1F4A                     	;# 
  2873  1F4E                     	;# 
  2874  1F4F                     	;# 
  2875  1F50                     	;# 
  2876  1F51                     	;# 
  2877  1F52                     	;# 
  2878  1F53                     	;# 
  2879  1F54                     	;# 
  2880  1F55                     	;# 
  2881  1FE4                     	;# 
  2882  1FE5                     	;# 
  2883  1FE6                     	;# 
  2884  1FE7                     	;# 
  2885  1FE8                     	;# 
  2886  1FE8                     	;# 
  2887  1FE9                     	;# 
  2888  1FEA                     	;# 
  2889  1FEB                     	;# 
  2890  1FED                     	;# 
  2891  1FEE                     	;# 
  2892  1FEF                     	;# 
  2893  0000                     	;# 
  2894  0001                     	;# 
  2895  0002                     	;# 
  2896  0003                     	;# 
  2897  0004                     	;# 
  2898  0005                     	;# 
  2899  0006                     	;# 
  2900  0007                     	;# 
  2901  0008                     	;# 
  2902  0009                     	;# 
  2903  000A                     	;# 
  2904  000B                     	;# 
  2905  000C                     	;# 
  2906  000D                     	;# 
  2907  000E                     	;# 
  2908  0012                     	;# 
  2909  0013                     	;# 
  2910  0014                     	;# 
  2911  0018                     	;# 
  2912  0019                     	;# 
  2913  001A                     	;# 
  2914  008C                     	;# 
  2915  008C                     	;# 
  2916  008D                     	;# 
  2917  008E                     	;# 
  2918  008E                     	;# 
  2919  008F                     	;# 
  2920  0090                     	;# 
  2921  0090                     	;# 
  2922  0091                     	;# 
  2923  0092                     	;# 
  2924  0092                     	;# 
  2925  0093                     	;# 
  2926  0094                     	;# 
  2927  0094                     	;# 
  2928  0095                     	;# 
  2929  0096                     	;# 
  2930  0096                     	;# 
  2931  0097                     	;# 
  2932  0098                     	;# 
  2933  0099                     	;# 
  2934  009A                     	;# 
  2935  009B                     	;# 
  2936  009B                     	;# 
  2937  009C                     	;# 
  2938  009D                     	;# 
  2939  009D                     	;# 
  2940  009E                     	;# 
  2941  009F                     	;# 
  2942  010C                     	;# 
  2943  010C                     	;# 
  2944  010D                     	;# 
  2945  010E                     	;# 
  2946  010F                     	;# 
  2947  010F                     	;# 
  2948  0110                     	;# 
  2949  0111                     	;# 
  2950  0112                     	;# 
  2951  0113                     	;# 
  2952  0114                     	;# 
  2953  0115                     	;# 
  2954  0116                     	;# 
  2955  0117                     	;# 
  2956  0118                     	;# 
  2957  0119                     	;# 
  2958  0119                     	;# 
  2959  0119                     	;# 
  2960  011A                     	;# 
  2961  011A                     	;# 
  2962  011A                     	;# 
  2963  011B                     	;# 
  2964  011B                     	;# 
  2965  011B                     	;# 
  2966  011B                     	;# 
  2967  011B                     	;# 
  2968  011C                     	;# 
  2969  011C                     	;# 
  2970  011C                     	;# 
  2971  011D                     	;# 
  2972  011D                     	;# 
  2973  011D                     	;# 
  2974  011E                     	;# 
  2975  011E                     	;# 
  2976  011E                     	;# 
  2977  011F                     	;# 
  2978  011F                     	;# 
  2979  011F                     	;# 
  2980  011F                     	;# 
  2981  011F                     	;# 
  2982  018C                     	;# 
  2983  018D                     	;# 
  2984  018E                     	;# 
  2985  018F                     	;# 
  2986  0190                     	;# 
  2987  0191                     	;# 
  2988  0192                     	;# 
  2989  0196                     	;# 
  2990  0197                     	;# 
  2991  0198                     	;# 
  2992  0199                     	;# 
  2993  019A                     	;# 
  2994  019B                     	;# 
  2995  019C                     	;# 
  2996  020C                     	;# 
  2997  020D                     	;# 
  2998  020E                     	;# 
  2999  020E                     	;# 
  3000  020F                     	;# 
  3001  020F                     	;# 
  3002  0210                     	;# 
  3003  0210                     	;# 
  3004  0211                     	;# 
  3005  0211                     	;# 
  3006  0212                     	;# 
  3007  0213                     	;# 
  3008  0214                     	;# 
  3009  0214                     	;# 
  3010  0215                     	;# 
  3011  0215                     	;# 
  3012  0216                     	;# 
  3013  0216                     	;# 
  3014  0217                     	;# 
  3015  0217                     	;# 
  3016  0218                     	;# 
  3017  0219                     	;# 
  3018  021A                     	;# 
  3019  021A                     	;# 
  3020  021B                     	;# 
  3021  021B                     	;# 
  3022  021C                     	;# 
  3023  021C                     	;# 
  3024  021D                     	;# 
  3025  021D                     	;# 
  3026  021E                     	;# 
  3027  021F                     	;# 
  3028  028C                     	;# 
  3029  028C                     	;# 
  3030  028D                     	;# 
  3031  028D                     	;# 
  3032  028E                     	;# 
  3033  028F                     	;# 
  3034  0290                     	;# 
  3035  0291                     	;# 
  3036  0292                     	;# 
  3037  0292                     	;# 
  3038  0293                     	;# 
  3039  0293                     	;# 
  3040  0294                     	;# 
  3041  0295                     	;# 
  3042  0296                     	;# 
  3043  0297                     	;# 
  3044  0298                     	;# 
  3045  0298                     	;# 
  3046  0299                     	;# 
  3047  0299                     	;# 
  3048  029A                     	;# 
  3049  029B                     	;# 
  3050  029C                     	;# 
  3051  029D                     	;# 
  3052  029F                     	;# 
  3053  030C                     	;# 
  3054  030C                     	;# 
  3055  030D                     	;# 
  3056  030E                     	;# 
  3057  030F                     	;# 
  3058  0310                     	;# 
  3059  0310                     	;# 
  3060  0311                     	;# 
  3061  0312                     	;# 
  3062  0313                     	;# 
  3063  0314                     	;# 
  3064  0314                     	;# 
  3065  0315                     	;# 
  3066  0316                     	;# 
  3067  0317                     	;# 
  3068  0318                     	;# 
  3069  0318                     	;# 
  3070  0319                     	;# 
  3071  031A                     	;# 
  3072  031B                     	;# 
  3073  038C                     	;# 
  3074  038C                     	;# 
  3075  038D                     	;# 
  3076  038E                     	;# 
  3077  0390                     	;# 
  3078  0390                     	;# 
  3079  0391                     	;# 
  3080  0392                     	;# 
  3081  048C                     	;# 
  3082  048C                     	;# 
  3083  048D                     	;# 
  3084  048E                     	;# 
  3085  048F                     	;# 
  3086  048F                     	;# 
  3087  0490                     	;# 
  3088  0491                     	;# 
  3089  0492                     	;# 
  3090  0492                     	;# 
  3091  0493                     	;# 
  3092  0494                     	;# 
  3093  0495                     	;# 
  3094  0495                     	;# 
  3095  0496                     	;# 
  3096  0497                     	;# 
  3097  0498                     	;# 
  3098  0499                     	;# 
  3099  049A                     	;# 
  3100  049B                     	;# 
  3101  049C                     	;# 
  3102  049D                     	;# 
  3103  058C                     	;# 
  3104  058C                     	;# 
  3105  058D                     	;# 
  3106  058E                     	;# 
  3107  058F                     	;# 
  3108  058F                     	;# 
  3109  0590                     	;# 
  3110  0591                     	;# 
  3111  0592                     	;# 
  3112  0593                     	;# 
  3113  059C                     	;# 
  3114  059C                     	;# 
  3115  059D                     	;# 
  3116  059D                     	;# 
  3117  059E                     	;# 
  3118  059F                     	;# 
  3119  060C                     	;# 
  3120  060C                     	;# 
  3121  060D                     	;# 
  3122  060D                     	;# 
  3123  060E                     	;# 
  3124  060F                     	;# 
  3125  0610                     	;# 
  3126  0611                     	;# 
  3127  0612                     	;# 
  3128  0613                     	;# 
  3129  0614                     	;# 
  3130  0616                     	;# 
  3131  0616                     	;# 
  3132  0617                     	;# 
  3133  0617                     	;# 
  3134  0618                     	;# 
  3135  0619                     	;# 
  3136  061A                     	;# 
  3137  061B                     	;# 
  3138  061C                     	;# 
  3139  061D                     	;# 
  3140  061E                     	;# 
  3141  070C                     	;# 
  3142  070D                     	;# 
  3143  070E                     	;# 
  3144  070F                     	;# 
  3145  0710                     	;# 
  3146  0711                     	;# 
  3147  0712                     	;# 
  3148  0713                     	;# 
  3149  0714                     	;# 
  3150  0716                     	;# 
  3151  0717                     	;# 
  3152  0718                     	;# 
  3153  0719                     	;# 
  3154  071A                     	;# 
  3155  071B                     	;# 
  3156  071C                     	;# 
  3157  071D                     	;# 
  3158  071E                     	;# 
  3159  0796                     	;# 
  3160  0797                     	;# 
  3161  0798                     	;# 
  3162  0799                     	;# 
  3163  079A                     	;# 
  3164  079B                     	;# 
  3165  079C                     	;# 
  3166  079D                     	;# 
  3167  080C                     	;# 
  3168  080D                     	;# 
  3169  080E                     	;# 
  3170  080F                     	;# 
  3171  0810                     	;# 
  3172  0811                     	;# 
  3173  0812                     	;# 
  3174  0813                     	;# 
  3175  0814                     	;# 
  3176  081A                     	;# 
  3177  081A                     	;# 
  3178  081B                     	;# 
  3179  081C                     	;# 
  3180  081C                     	;# 
  3181  081D                     	;# 
  3182  081E                     	;# 
  3183  081F                     	;# 
  3184  088C                     	;# 
  3185  088D                     	;# 
  3186  088E                     	;# 
  3187  088F                     	;# 
  3188  0890                     	;# 
  3189  0891                     	;# 
  3190  0892                     	;# 
  3191  0893                     	;# 
  3192  0895                     	;# 
  3193  0896                     	;# 
  3194  0897                     	;# 
  3195  0898                     	;# 
  3196  0899                     	;# 
  3197  089A                     	;# 
  3198  089B                     	;# 
  3199  090C                     	;# 
  3200  090E                     	;# 
  3201  090F                     	;# 
  3202  091F                     	;# 
  3203  098F                     	;# 
  3204  098F                     	;# 
  3205  0990                     	;# 
  3206  0991                     	;# 
  3207  0992                     	;# 
  3208  0993                     	;# 
  3209  0994                     	;# 
  3210  0995                     	;# 
  3211  0996                     	;# 
  3212  0997                     	;# 
  3213  1E0F                     	;# 
  3214  1E10                     	;# 
  3215  1E11                     	;# 
  3216  1E12                     	;# 
  3217  1E13                     	;# 
  3218  1E14                     	;# 
  3219  1E15                     	;# 
  3220  1E16                     	;# 
  3221  1E17                     	;# 
  3222  1E18                     	;# 
  3223  1E19                     	;# 
  3224  1E1A                     	;# 
  3225  1E1B                     	;# 
  3226  1E1C                     	;# 
  3227  1E1D                     	;# 
  3228  1E1E                     	;# 
  3229  1E1F                     	;# 
  3230  1E20                     	;# 
  3231  1E21                     	;# 
  3232  1E22                     	;# 
  3233  1E23                     	;# 
  3234  1E24                     	;# 
  3235  1E25                     	;# 
  3236  1E26                     	;# 
  3237  1E27                     	;# 
  3238  1E28                     	;# 
  3239  1E29                     	;# 
  3240  1E2A                     	;# 
  3241  1E2B                     	;# 
  3242  1E2C                     	;# 
  3243  1E2D                     	;# 
  3244  1E2E                     	;# 
  3245  1E2F                     	;# 
  3246  1E30                     	;# 
  3247  1E31                     	;# 
  3248  1E32                     	;# 
  3249  1E33                     	;# 
  3250  1E34                     	;# 
  3251  1E35                     	;# 
  3252  1E36                     	;# 
  3253  1E37                     	;# 
  3254  1E8F                     	;# 
  3255  1E90                     	;# 
  3256  1E91                     	;# 
  3257  1E92                     	;# 
  3258  1E93                     	;# 
  3259  1E94                     	;# 
  3260  1E95                     	;# 
  3261  1E96                     	;# 
  3262  1E97                     	;# 
  3263  1E9C                     	;# 
  3264  1E9D                     	;# 
  3265  1E9E                     	;# 
  3266  1EA1                     	;# 
  3267  1EA2                     	;# 
  3268  1EA3                     	;# 
  3269  1EA4                     	;# 
  3270  1EA9                     	;# 
  3271  1EAA                     	;# 
  3272  1EB1                     	;# 
  3273  1EB2                     	;# 
  3274  1EB8                     	;# 
  3275  1EB9                     	;# 
  3276  1EBA                     	;# 
  3277  1EBB                     	;# 
  3278  1EBC                     	;# 
  3279  1EBD                     	;# 
  3280  1EBE                     	;# 
  3281  1EC3                     	;# 
  3282  1EC5                     	;# 
  3283  1EC6                     	;# 
  3284  1EC7                     	;# 
  3285  1EC8                     	;# 
  3286  1EC9                     	;# 
  3287  1ECA                     	;# 
  3288  1ECB                     	;# 
  3289  1ECB                     	;# 
  3290  1ECB                     	;# 
  3291  1ECC                     	;# 
  3292  1ECC                     	;# 
  3293  1ECC                     	;# 
  3294  1F10                     	;# 
  3295  1F11                     	;# 
  3296  1F12                     	;# 
  3297  1F14                     	;# 
  3298  1F15                     	;# 
  3299  1F1C                     	;# 
  3300  1F1D                     	;# 
  3301  1F1E                     	;# 
  3302  1F1F                     	;# 
  3303  1F20                     	;# 
  3304  1F21                     	;# 
  3305  1F22                     	;# 
  3306  1F23                     	;# 
  3307  1F24                     	;# 
  3308  1F25                     	;# 
  3309  1F26                     	;# 
  3310  1F27                     	;# 
  3311  1F38                     	;# 
  3312  1F39                     	;# 
  3313  1F3A                     	;# 
  3314  1F3B                     	;# 
  3315  1F3C                     	;# 
  3316  1F3D                     	;# 
  3317  1F3E                     	;# 
  3318  1F3F                     	;# 
  3319  1F43                     	;# 
  3320  1F44                     	;# 
  3321  1F45                     	;# 
  3322  1F46                     	;# 
  3323  1F47                     	;# 
  3324  1F48                     	;# 
  3325  1F49                     	;# 
  3326  1F4A                     	;# 
  3327  1F4E                     	;# 
  3328  1F4F                     	;# 
  3329  1F50                     	;# 
  3330  1F51                     	;# 
  3331  1F52                     	;# 
  3332  1F53                     	;# 
  3333  1F54                     	;# 
  3334  1F55                     	;# 
  3335  1FE4                     	;# 
  3336  1FE5                     	;# 
  3337  1FE6                     	;# 
  3338  1FE7                     	;# 
  3339  1FE8                     	;# 
  3340  1FE8                     	;# 
  3341  1FE9                     	;# 
  3342  1FEA                     	;# 
  3343  1FEB                     	;# 
  3344  1FED                     	;# 
  3345  1FEE                     	;# 
  3346  1FEF                     	;# 
  3347  0000                     	;# 
  3348  0001                     	;# 
  3349  0002                     	;# 
  3350  0003                     	;# 
  3351  0004                     	;# 
  3352  0005                     	;# 
  3353  0006                     	;# 
  3354  0007                     	;# 
  3355  0008                     	;# 
  3356  0009                     	;# 
  3357  000A                     	;# 
  3358  000B                     	;# 
  3359  000C                     	;# 
  3360  000D                     	;# 
  3361  000E                     	;# 
  3362  0012                     	;# 
  3363  0013                     	;# 
  3364  0014                     	;# 
  3365  0018                     	;# 
  3366  0019                     	;# 
  3367  001A                     	;# 
  3368  008C                     	;# 
  3369  008C                     	;# 
  3370  008D                     	;# 
  3371  008E                     	;# 
  3372  008E                     	;# 
  3373  008F                     	;# 
  3374  0090                     	;# 
  3375  0090                     	;# 
  3376  0091                     	;# 
  3377  0092                     	;# 
  3378  0092                     	;# 
  3379  0093                     	;# 
  3380  0094                     	;# 
  3381  0094                     	;# 
  3382  0095                     	;# 
  3383  0096                     	;# 
  3384  0096                     	;# 
  3385  0097                     	;# 
  3386  0098                     	;# 
  3387  0099                     	;# 
  3388  009A                     	;# 
  3389  009B                     	;# 
  3390  009B                     	;# 
  3391  009C                     	;# 
  3392  009D                     	;# 
  3393  009D                     	;# 
  3394  009E                     	;# 
  3395  009F                     	;# 
  3396  010C                     	;# 
  3397  010C                     	;# 
  3398  010D                     	;# 
  3399  010E                     	;# 
  3400  010F                     	;# 
  3401  010F                     	;# 
  3402  0110                     	;# 
  3403  0111                     	;# 
  3404  0112                     	;# 
  3405  0113                     	;# 
  3406  0114                     	;# 
  3407  0115                     	;# 
  3408  0116                     	;# 
  3409  0117                     	;# 
  3410  0118                     	;# 
  3411  0119                     	;# 
  3412  0119                     	;# 
  3413  0119                     	;# 
  3414  011A                     	;# 
  3415  011A                     	;# 
  3416  011A                     	;# 
  3417  011B                     	;# 
  3418  011B                     	;# 
  3419  011B                     	;# 
  3420  011B                     	;# 
  3421  011B                     	;# 
  3422  011C                     	;# 
  3423  011C                     	;# 
  3424  011C                     	;# 
  3425  011D                     	;# 
  3426  011D                     	;# 
  3427  011D                     	;# 
  3428  011E                     	;# 
  3429  011E                     	;# 
  3430  011E                     	;# 
  3431  011F                     	;# 
  3432  011F                     	;# 
  3433  011F                     	;# 
  3434  011F                     	;# 
  3435  011F                     	;# 
  3436  018C                     	;# 
  3437  018D                     	;# 
  3438  018E                     	;# 
  3439  018F                     	;# 
  3440  0190                     	;# 
  3441  0191                     	;# 
  3442  0192                     	;# 
  3443  0196                     	;# 
  3444  0197                     	;# 
  3445  0198                     	;# 
  3446  0199                     	;# 
  3447  019A                     	;# 
  3448  019B                     	;# 
  3449  019C                     	;# 
  3450  020C                     	;# 
  3451  020D                     	;# 
  3452  020E                     	;# 
  3453  020E                     	;# 
  3454  020F                     	;# 
  3455  020F                     	;# 
  3456  0210                     	;# 
  3457  0210                     	;# 
  3458  0211                     	;# 
  3459  0211                     	;# 
  3460  0212                     	;# 
  3461  0213                     	;# 
  3462  0214                     	;# 
  3463  0214                     	;# 
  3464  0215                     	;# 
  3465  0215                     	;# 
  3466  0216                     	;# 
  3467  0216                     	;# 
  3468  0217                     	;# 
  3469  0217                     	;# 
  3470  0218                     	;# 
  3471  0219                     	;# 
  3472  021A                     	;# 
  3473  021A                     	;# 
  3474  021B                     	;# 
  3475  021B                     	;# 
  3476  021C                     	;# 
  3477  021C                     	;# 
  3478  021D                     	;# 
  3479  021D                     	;# 
  3480  021E                     	;# 
  3481  021F                     	;# 
  3482  028C                     	;# 
  3483  028C                     	;# 
  3484  028D                     	;# 
  3485  028D                     	;# 
  3486  028E                     	;# 
  3487  028F                     	;# 
  3488  0290                     	;# 
  3489  0291                     	;# 
  3490  0292                     	;# 
  3491  0292                     	;# 
  3492  0293                     	;# 
  3493  0293                     	;# 
  3494  0294                     	;# 
  3495  0295                     	;# 
  3496  0296                     	;# 
  3497  0297                     	;# 
  3498  0298                     	;# 
  3499  0298                     	;# 
  3500  0299                     	;# 
  3501  0299                     	;# 
  3502  029A                     	;# 
  3503  029B                     	;# 
  3504  029C                     	;# 
  3505  029D                     	;# 
  3506  029F                     	;# 
  3507  030C                     	;# 
  3508  030C                     	;# 
  3509  030D                     	;# 
  3510  030E                     	;# 
  3511  030F                     	;# 
  3512  0310                     	;# 
  3513  0310                     	;# 
  3514  0311                     	;# 
  3515  0312                     	;# 
  3516  0313                     	;# 
  3517  0314                     	;# 
  3518  0314                     	;# 
  3519  0315                     	;# 
  3520  0316                     	;# 
  3521  0317                     	;# 
  3522  0318                     	;# 
  3523  0318                     	;# 
  3524  0319                     	;# 
  3525  031A                     	;# 
  3526  031B                     	;# 
  3527  038C                     	;# 
  3528  038C                     	;# 
  3529  038D                     	;# 
  3530  038E                     	;# 
  3531  0390                     	;# 
  3532  0390                     	;# 
  3533  0391                     	;# 
  3534  0392                     	;# 
  3535  048C                     	;# 
  3536  048C                     	;# 
  3537  048D                     	;# 
  3538  048E                     	;# 
  3539  048F                     	;# 
  3540  048F                     	;# 
  3541  0490                     	;# 
  3542  0491                     	;# 
  3543  0492                     	;# 
  3544  0492                     	;# 
  3545  0493                     	;# 
  3546  0494                     	;# 
  3547  0495                     	;# 
  3548  0495                     	;# 
  3549  0496                     	;# 
  3550  0497                     	;# 
  3551  0498                     	;# 
  3552  0499                     	;# 
  3553  049A                     	;# 
  3554  049B                     	;# 
  3555  049C                     	;# 
  3556  049D                     	;# 
  3557  058C                     	;# 
  3558  058C                     	;# 
  3559  058D                     	;# 
  3560  058E                     	;# 
  3561  058F                     	;# 
  3562  058F                     	;# 
  3563  0590                     	;# 
  3564  0591                     	;# 
  3565  0592                     	;# 
  3566  0593                     	;# 
  3567  059C                     	;# 
  3568  059C                     	;# 
  3569  059D                     	;# 
  3570  059D                     	;# 
  3571  059E                     	;# 
  3572  059F                     	;# 
  3573  060C                     	;# 
  3574  060C                     	;# 
  3575  060D                     	;# 
  3576  060D                     	;# 
  3577  060E                     	;# 
  3578  060F                     	;# 
  3579  0610                     	;# 
  3580  0611                     	;# 
  3581  0612                     	;# 
  3582  0613                     	;# 
  3583  0614                     	;# 
  3584  0616                     	;# 
  3585  0616                     	;# 
  3586  0617                     	;# 
  3587  0617                     	;# 
  3588  0618                     	;# 
  3589  0619                     	;# 
  3590  061A                     	;# 
  3591  061B                     	;# 
  3592  061C                     	;# 
  3593  061D                     	;# 
  3594  061E                     	;# 
  3595  070C                     	;# 
  3596  070D                     	;# 
  3597  070E                     	;# 
  3598  070F                     	;# 
  3599  0710                     	;# 
  3600  0711                     	;# 
  3601  0712                     	;# 
  3602  0713                     	;# 
  3603  0714                     	;# 
  3604  0716                     	;# 
  3605  0717                     	;# 
  3606  0718                     	;# 
  3607  0719                     	;# 
  3608  071A                     	;# 
  3609  071B                     	;# 
  3610  071C                     	;# 
  3611  071D                     	;# 
  3612  071E                     	;# 
  3613  0796                     	;# 
  3614  0797                     	;# 
  3615  0798                     	;# 
  3616  0799                     	;# 
  3617  079A                     	;# 
  3618  079B                     	;# 
  3619  079C                     	;# 
  3620  079D                     	;# 
  3621  080C                     	;# 
  3622  080D                     	;# 
  3623  080E                     	;# 
  3624  080F                     	;# 
  3625  0810                     	;# 
  3626  0811                     	;# 
  3627  0812                     	;# 
  3628  0813                     	;# 
  3629  0814                     	;# 
  3630  081A                     	;# 
  3631  081A                     	;# 
  3632  081B                     	;# 
  3633  081C                     	;# 
  3634  081C                     	;# 
  3635  081D                     	;# 
  3636  081E                     	;# 
  3637  081F                     	;# 
  3638  088C                     	;# 
  3639  088D                     	;# 
  3640  088E                     	;# 
  3641  088F                     	;# 
  3642  0890                     	;# 
  3643  0891                     	;# 
  3644  0892                     	;# 
  3645  0893                     	;# 
  3646  0895                     	;# 
  3647  0896                     	;# 
  3648  0897                     	;# 
  3649  0898                     	;# 
  3650  0899                     	;# 
  3651  089A                     	;# 
  3652  089B                     	;# 
  3653  090C                     	;# 
  3654  090E                     	;# 
  3655  090F                     	;# 
  3656  091F                     	;# 
  3657  098F                     	;# 
  3658  098F                     	;# 
  3659  0990                     	;# 
  3660  0991                     	;# 
  3661  0992                     	;# 
  3662  0993                     	;# 
  3663  0994                     	;# 
  3664  0995                     	;# 
  3665  0996                     	;# 
  3666  0997                     	;# 
  3667  1E0F                     	;# 
  3668  1E10                     	;# 
  3669  1E11                     	;# 
  3670  1E12                     	;# 
  3671  1E13                     	;# 
  3672  1E14                     	;# 
  3673  1E15                     	;# 
  3674  1E16                     	;# 
  3675  1E17                     	;# 
  3676  1E18                     	;# 
  3677  1E19                     	;# 
  3678  1E1A                     	;# 
  3679  1E1B                     	;# 
  3680  1E1C                     	;# 
  3681  1E1D                     	;# 
  3682  1E1E                     	;# 
  3683  1E1F                     	;# 
  3684  1E20                     	;# 
  3685  1E21                     	;# 
  3686  1E22                     	;# 
  3687  1E23                     	;# 
  3688  1E24                     	;# 
  3689  1E25                     	;# 
  3690  1E26                     	;# 
  3691  1E27                     	;# 
  3692  1E28                     	;# 
  3693  1E29                     	;# 
  3694  1E2A                     	;# 
  3695  1E2B                     	;# 
  3696  1E2C                     	;# 
  3697  1E2D                     	;# 
  3698  1E2E                     	;# 
  3699  1E2F                     	;# 
  3700  1E30                     	;# 
  3701  1E31                     	;# 
  3702  1E32                     	;# 
  3703  1E33                     	;# 
  3704  1E34                     	;# 
  3705  1E35                     	;# 
  3706  1E36                     	;# 
  3707  1E37                     	;# 
  3708  1E8F                     	;# 
  3709  1E90                     	;# 
  3710  1E91                     	;# 
  3711  1E92                     	;# 
  3712  1E93                     	;# 
  3713  1E94                     	;# 
  3714  1E95                     	;# 
  3715  1E96                     	;# 
  3716  1E97                     	;# 
  3717  1E9C                     	;# 
  3718  1E9D                     	;# 
  3719  1E9E                     	;# 
  3720  1EA1                     	;# 
  3721  1EA2                     	;# 
  3722  1EA3                     	;# 
  3723  1EA4                     	;# 
  3724  1EA9                     	;# 
  3725  1EAA                     	;# 
  3726  1EB1                     	;# 
  3727  1EB2                     	;# 
  3728  1EB8                     	;# 
  3729  1EB9                     	;# 
  3730  1EBA                     	;# 
  3731  1EBB                     	;# 
  3732  1EBC                     	;# 
  3733  1EBD                     	;# 
  3734  1EBE                     	;# 
  3735  1EC3                     	;# 
  3736  1EC5                     	;# 
  3737  1EC6                     	;# 
  3738  1EC7                     	;# 
  3739  1EC8                     	;# 
  3740  1EC9                     	;# 
  3741  1ECA                     	;# 
  3742  1ECB                     	;# 
  3743  1ECB                     	;# 
  3744  1ECB                     	;# 
  3745  1ECC                     	;# 
  3746  1ECC                     	;# 
  3747  1ECC                     	;# 
  3748  1F10                     	;# 
  3749  1F11                     	;# 
  3750  1F12                     	;# 
  3751  1F14                     	;# 
  3752  1F15                     	;# 
  3753  1F1C                     	;# 
  3754  1F1D                     	;# 
  3755  1F1E                     	;# 
  3756  1F1F                     	;# 
  3757  1F20                     	;# 
  3758  1F21                     	;# 
  3759  1F22                     	;# 
  3760  1F23                     	;# 
  3761  1F24                     	;# 
  3762  1F25                     	;# 
  3763  1F26                     	;# 
  3764  1F27                     	;# 
  3765  1F38                     	;# 
  3766  1F39                     	;# 
  3767  1F3A                     	;# 
  3768  1F3B                     	;# 
  3769  1F3C                     	;# 
  3770  1F3D                     	;# 
  3771  1F3E                     	;# 
  3772  1F3F                     	;# 
  3773  1F43                     	;# 
  3774  1F44                     	;# 
  3775  1F45                     	;# 
  3776  1F46                     	;# 
  3777  1F47                     	;# 
  3778  1F48                     	;# 
  3779  1F49                     	;# 
  3780  1F4A                     	;# 
  3781  1F4E                     	;# 
  3782  1F4F                     	;# 
  3783  1F50                     	;# 
  3784  1F51                     	;# 
  3785  1F52                     	;# 
  3786  1F53                     	;# 
  3787  1F54                     	;# 
  3788  1F55                     	;# 
  3789  1FE4                     	;# 
  3790  1FE5                     	;# 
  3791  1FE6                     	;# 
  3792  1FE7                     	;# 
  3793  1FE8                     	;# 
  3794  1FE8                     	;# 
  3795  1FE9                     	;# 
  3796  1FEA                     	;# 
  3797  1FEB                     	;# 
  3798  1FED                     	;# 
  3799  1FEE                     	;# 
  3800  1FEF                     	;# 
  3801  0000                     	;# 
  3802  0001                     	;# 
  3803  0002                     	;# 
  3804  0003                     	;# 
  3805  0004                     	;# 
  3806  0005                     	;# 
  3807  0006                     	;# 
  3808  0007                     	;# 
  3809  0008                     	;# 
  3810  0009                     	;# 
  3811  000A                     	;# 
  3812  000B                     	;# 
  3813  000C                     	;# 
  3814  000D                     	;# 
  3815  000E                     	;# 
  3816  0012                     	;# 
  3817  0013                     	;# 
  3818  0014                     	;# 
  3819  0018                     	;# 
  3820  0019                     	;# 
  3821  001A                     	;# 
  3822  008C                     	;# 
  3823  008C                     	;# 
  3824  008D                     	;# 
  3825  008E                     	;# 
  3826  008E                     	;# 
  3827  008F                     	;# 
  3828  0090                     	;# 
  3829  0090                     	;# 
  3830  0091                     	;# 
  3831  0092                     	;# 
  3832  0092                     	;# 
  3833  0093                     	;# 
  3834  0094                     	;# 
  3835  0094                     	;# 
  3836  0095                     	;# 
  3837  0096                     	;# 
  3838  0096                     	;# 
  3839  0097                     	;# 
  3840  0098                     	;# 
  3841  0099                     	;# 
  3842  009A                     	;# 
  3843  009B                     	;# 
  3844  009B                     	;# 
  3845  009C                     	;# 
  3846  009D                     	;# 
  3847  009D                     	;# 
  3848  009E                     	;# 
  3849  009F                     	;# 
  3850  010C                     	;# 
  3851  010C                     	;# 
  3852  010D                     	;# 
  3853  010E                     	;# 
  3854  010F                     	;# 
  3855  010F                     	;# 
  3856  0110                     	;# 
  3857  0111                     	;# 
  3858  0112                     	;# 
  3859  0113                     	;# 
  3860  0114                     	;# 
  3861  0115                     	;# 
  3862  0116                     	;# 
  3863  0117                     	;# 
  3864  0118                     	;# 
  3865  0119                     	;# 
  3866  0119                     	;# 
  3867  0119                     	;# 
  3868  011A                     	;# 
  3869  011A                     	;# 
  3870  011A                     	;# 
  3871  011B                     	;# 
  3872  011B                     	;# 
  3873  011B                     	;# 
  3874  011B                     	;# 
  3875  011B                     	;# 
  3876  011C                     	;# 
  3877  011C                     	;# 
  3878  011C                     	;# 
  3879  011D                     	;# 
  3880  011D                     	;# 
  3881  011D                     	;# 
  3882  011E                     	;# 
  3883  011E                     	;# 
  3884  011E                     	;# 
  3885  011F                     	;# 
  3886  011F                     	;# 
  3887  011F                     	;# 
  3888  011F                     	;# 
  3889  011F                     	;# 
  3890  018C                     	;# 
  3891  018D                     	;# 
  3892  018E                     	;# 
  3893  018F                     	;# 
  3894  0190                     	;# 
  3895  0191                     	;# 
  3896  0192                     	;# 
  3897  0196                     	;# 
  3898  0197                     	;# 
  3899  0198                     	;# 
  3900  0199                     	;# 
  3901  019A                     	;# 
  3902  019B                     	;# 
  3903  019C                     	;# 
  3904  020C                     	;# 
  3905  020D                     	;# 
  3906  020E                     	;# 
  3907  020E                     	;# 
  3908  020F                     	;# 
  3909  020F                     	;# 
  3910  0210                     	;# 
  3911  0210                     	;# 
  3912  0211                     	;# 
  3913  0211                     	;# 
  3914  0212                     	;# 
  3915  0213                     	;# 
  3916  0214                     	;# 
  3917  0214                     	;# 
  3918  0215                     	;# 
  3919  0215                     	;# 
  3920  0216                     	;# 
  3921  0216                     	;# 
  3922  0217                     	;# 
  3923  0217                     	;# 
  3924  0218                     	;# 
  3925  0219                     	;# 
  3926  021A                     	;# 
  3927  021A                     	;# 
  3928  021B                     	;# 
  3929  021B                     	;# 
  3930  021C                     	;# 
  3931  021C                     	;# 
  3932  021D                     	;# 
  3933  021D                     	;# 
  3934  021E                     	;# 
  3935  021F                     	;# 
  3936  028C                     	;# 
  3937  028C                     	;# 
  3938  028D                     	;# 
  3939  028D                     	;# 
  3940  028E                     	;# 
  3941  028F                     	;# 
  3942  0290                     	;# 
  3943  0291                     	;# 
  3944  0292                     	;# 
  3945  0292                     	;# 
  3946  0293                     	;# 
  3947  0293                     	;# 
  3948  0294                     	;# 
  3949  0295                     	;# 
  3950  0296                     	;# 
  3951  0297                     	;# 
  3952  0298                     	;# 
  3953  0298                     	;# 
  3954  0299                     	;# 
  3955  0299                     	;# 
  3956  029A                     	;# 
  3957  029B                     	;# 
  3958  029C                     	;# 
  3959  029D                     	;# 
  3960  029F                     	;# 
  3961  030C                     	;# 
  3962  030C                     	;# 
  3963  030D                     	;# 
  3964  030E                     	;# 
  3965  030F                     	;# 
  3966  0310                     	;# 
  3967  0310                     	;# 
  3968  0311                     	;# 
  3969  0312                     	;# 
  3970  0313                     	;# 
  3971  0314                     	;# 
  3972  0314                     	;# 
  3973  0315                     	;# 
  3974  0316                     	;# 
  3975  0317                     	;# 
  3976  0318                     	;# 
  3977  0318                     	;# 
  3978  0319                     	;# 
  3979  031A                     	;# 
  3980  031B                     	;# 
  3981  038C                     	;# 
  3982  038C                     	;# 
  3983  038D                     	;# 
  3984  038E                     	;# 
  3985  0390                     	;# 
  3986  0390                     	;# 
  3987  0391                     	;# 
  3988  0392                     	;# 
  3989  048C                     	;# 
  3990  048C                     	;# 
  3991  048D                     	;# 
  3992  048E                     	;# 
  3993  048F                     	;# 
  3994  048F                     	;# 
  3995  0490                     	;# 
  3996  0491                     	;# 
  3997  0492                     	;# 
  3998  0492                     	;# 
  3999  0493                     	;# 
  4000  0494                     	;# 
  4001  0495                     	;# 
  4002  0495                     	;# 
  4003  0496                     	;# 
  4004  0497                     	;# 
  4005  0498                     	;# 
  4006  0499                     	;# 
  4007  049A                     	;# 
  4008  049B                     	;# 
  4009  049C                     	;# 
  4010  049D                     	;# 
  4011  058C                     	;# 
  4012  058C                     	;# 
  4013  058D                     	;# 
  4014  058E                     	;# 
  4015  058F                     	;# 
  4016  058F                     	;# 
  4017  0590                     	;# 
  4018  0591                     	;# 
  4019  0592                     	;# 
  4020  0593                     	;# 
  4021  059C                     	;# 
  4022  059C                     	;# 
  4023  059D                     	;# 
  4024  059D                     	;# 
  4025  059E                     	;# 
  4026  059F                     	;# 
  4027  060C                     	;# 
  4028  060C                     	;# 
  4029  060D                     	;# 
  4030  060D                     	;# 
  4031  060E                     	;# 
  4032  060F                     	;# 
  4033  0610                     	;# 
  4034  0611                     	;# 
  4035  0612                     	;# 
  4036  0613                     	;# 
  4037  0614                     	;# 
  4038  0616                     	;# 
  4039  0616                     	;# 
  4040  0617                     	;# 
  4041  0617                     	;# 
  4042  0618                     	;# 
  4043  0619                     	;# 
  4044  061A                     	;# 
  4045  061B                     	;# 
  4046  061C                     	;# 
  4047  061D                     	;# 
  4048  061E                     	;# 
  4049  070C                     	;# 
  4050  070D                     	;# 
  4051  070E                     	;# 
  4052  070F                     	;# 
  4053  0710                     	;# 
  4054  0711                     	;# 
  4055  0712                     	;# 
  4056  0713                     	;# 
  4057  0714                     	;# 
  4058  0716                     	;# 
  4059  0717                     	;# 
  4060  0718                     	;# 
  4061  0719                     	;# 
  4062  071A                     	;# 
  4063  071B                     	;# 
  4064  071C                     	;# 
  4065  071D                     	;# 
  4066  071E                     	;# 
  4067  0796                     	;# 
  4068  0797                     	;# 
  4069  0798                     	;# 
  4070  0799                     	;# 
  4071  079A                     	;# 
  4072  079B                     	;# 
  4073  079C                     	;# 
  4074  079D                     	;# 
  4075  080C                     	;# 
  4076  080D                     	;# 
  4077  080E                     	;# 
  4078  080F                     	;# 
  4079  0810                     	;# 
  4080  0811                     	;# 
  4081  0812                     	;# 
  4082  0813                     	;# 
  4083  0814                     	;# 
  4084  081A                     	;# 
  4085  081A                     	;# 
  4086  081B                     	;# 
  4087  081C                     	;# 
  4088  081C                     	;# 
  4089  081D                     	;# 
  4090  081E                     	;# 
  4091  081F                     	;# 
  4092  088C                     	;# 
  4093  088D                     	;# 
  4094  088E                     	;# 
  4095  088F                     	;# 
  4096  0890                     	;# 
  4097  0891                     	;# 
  4098  0892                     	;# 
  4099  0893                     	;# 
  4100  0895                     	;# 
  4101  0896                     	;# 
  4102  0897                     	;# 
  4103  0898                     	;# 
  4104  0899                     	;# 
  4105  089A                     	;# 
  4106  089B                     	;# 
  4107  090C                     	;# 
  4108  090E                     	;# 
  4109  090F                     	;# 
  4110  091F                     	;# 
  4111  098F                     	;# 
  4112  098F                     	;# 
  4113  0990                     	;# 
  4114  0991                     	;# 
  4115  0992                     	;# 
  4116  0993                     	;# 
  4117  0994                     	;# 
  4118  0995                     	;# 
  4119  0996                     	;# 
  4120  0997                     	;# 
  4121  1E0F                     	;# 
  4122  1E10                     	;# 
  4123  1E11                     	;# 
  4124  1E12                     	;# 
  4125  1E13                     	;# 
  4126  1E14                     	;# 
  4127  1E15                     	;# 
  4128  1E16                     	;# 
  4129  1E17                     	;# 
  4130  1E18                     	;# 
  4131  1E19                     	;# 
  4132  1E1A                     	;# 
  4133  1E1B                     	;# 
  4134  1E1C                     	;# 
  4135  1E1D                     	;# 
  4136  1E1E                     	;# 
  4137  1E1F                     	;# 
  4138  1E20                     	;# 
  4139  1E21                     	;# 
  4140  1E22                     	;# 
  4141  1E23                     	;# 
  4142  1E24                     	;# 
  4143  1E25                     	;# 
  4144  1E26                     	;# 
  4145  1E27                     	;# 
  4146  1E28                     	;# 
  4147  1E29                     	;# 
  4148  1E2A                     	;# 
  4149  1E2B                     	;# 
  4150  1E2C                     	;# 
  4151  1E2D                     	;# 
  4152  1E2E                     	;# 
  4153  1E2F                     	;# 
  4154  1E30                     	;# 
  4155  1E31                     	;# 
  4156  1E32                     	;# 
  4157  1E33                     	;# 
  4158  1E34                     	;# 
  4159  1E35                     	;# 
  4160  1E36                     	;# 
  4161  1E37                     	;# 
  4162  1E8F                     	;# 
  4163  1E90                     	;# 
  4164  1E91                     	;# 
  4165  1E92                     	;# 
  4166  1E93                     	;# 
  4167  1E94                     	;# 
  4168  1E95                     	;# 
  4169  1E96                     	;# 
  4170  1E97                     	;# 
  4171  1E9C                     	;# 
  4172  1E9D                     	;# 
  4173  1E9E                     	;# 
  4174  1EA1                     	;# 
  4175  1EA2                     	;# 
  4176  1EA3                     	;# 
  4177  1EA4                     	;# 
  4178  1EA9                     	;# 
  4179  1EAA                     	;# 
  4180  1EB1                     	;# 
  4181  1EB2                     	;# 
  4182  1EB8                     	;# 
  4183  1EB9                     	;# 
  4184  1EBA                     	;# 
  4185  1EBB                     	;# 
  4186  1EBC                     	;# 
  4187  1EBD                     	;# 
  4188  1EBE                     	;# 
  4189  1EC3                     	;# 
  4190  1EC5                     	;# 
  4191  1EC6                     	;# 
  4192  1EC7                     	;# 
  4193  1EC8                     	;# 
  4194  1EC9                     	;# 
  4195  1ECA                     	;# 
  4196  1ECB                     	;# 
  4197  1ECB                     	;# 
  4198  1ECB                     	;# 
  4199  1ECC                     	;# 
  4200  1ECC                     	;# 
  4201  1ECC                     	;# 
  4202  1F10                     	;# 
  4203  1F11                     	;# 
  4204  1F12                     	;# 
  4205  1F14                     	;# 
  4206  1F15                     	;# 
  4207  1F1C                     	;# 
  4208  1F1D                     	;# 
  4209  1F1E                     	;# 
  4210  1F1F                     	;# 
  4211  1F20                     	;# 
  4212  1F21                     	;# 
  4213  1F22                     	;# 
  4214  1F23                     	;# 
  4215  1F24                     	;# 
  4216  1F25                     	;# 
  4217  1F26                     	;# 
  4218  1F27                     	;# 
  4219  1F38                     	;# 
  4220  1F39                     	;# 
  4221  1F3A                     	;# 
  4222  1F3B                     	;# 
  4223  1F3C                     	;# 
  4224  1F3D                     	;# 
  4225  1F3E                     	;# 
  4226  1F3F                     	;# 
  4227  1F43                     	;# 
  4228  1F44                     	;# 
  4229  1F45                     	;# 
  4230  1F46                     	;# 
  4231  1F47                     	;# 
  4232  1F48                     	;# 
  4233  1F49                     	;# 
  4234  1F4A                     	;# 
  4235  1F4E                     	;# 
  4236  1F4F                     	;# 
  4237  1F50                     	;# 
  4238  1F51                     	;# 
  4239  1F52                     	;# 
  4240  1F53                     	;# 
  4241  1F54                     	;# 
  4242  1F55                     	;# 
  4243  1FE4                     	;# 
  4244  1FE5                     	;# 
  4245  1FE6                     	;# 
  4246  1FE7                     	;# 
  4247  1FE8                     	;# 
  4248  1FE8                     	;# 
  4249  1FE9                     	;# 
  4250  1FEA                     	;# 
  4251  1FEB                     	;# 
  4252  1FED                     	;# 
  4253  1FEE                     	;# 
  4254  1FEF                     	;# 
  4255  0000                     	;# 
  4256  0001                     	;# 
  4257  0002                     	;# 
  4258  0003                     	;# 
  4259  0004                     	;# 
  4260  0005                     	;# 
  4261  0006                     	;# 
  4262  0007                     	;# 
  4263  0008                     	;# 
  4264  0009                     	;# 
  4265  000A                     	;# 
  4266  000B                     	;# 
  4267  000C                     	;# 
  4268  000D                     	;# 
  4269  000E                     	;# 
  4270  0012                     	;# 
  4271  0013                     	;# 
  4272  0014                     	;# 
  4273  0018                     	;# 
  4274  0019                     	;# 
  4275  001A                     	;# 
  4276  008C                     	;# 
  4277  008C                     	;# 
  4278  008D                     	;# 
  4279  008E                     	;# 
  4280  008E                     	;# 
  4281  008F                     	;# 
  4282  0090                     	;# 
  4283  0090                     	;# 
  4284  0091                     	;# 
  4285  0092                     	;# 
  4286  0092                     	;# 
  4287  0093                     	;# 
  4288  0094                     	;# 
  4289  0094                     	;# 
  4290  0095                     	;# 
  4291  0096                     	;# 
  4292  0096                     	;# 
  4293  0097                     	;# 
  4294  0098                     	;# 
  4295  0099                     	;# 
  4296  009A                     	;# 
  4297  009B                     	;# 
  4298  009B                     	;# 
  4299  009C                     	;# 
  4300  009D                     	;# 
  4301  009D                     	;# 
  4302  009E                     	;# 
  4303  009F                     	;# 
  4304  010C                     	;# 
  4305  010C                     	;# 
  4306  010D                     	;# 
  4307  010E                     	;# 
  4308  010F                     	;# 
  4309  010F                     	;# 
  4310  0110                     	;# 
  4311  0111                     	;# 
  4312  0112                     	;# 
  4313  0113                     	;# 
  4314  0114                     	;# 
  4315  0115                     	;# 
  4316  0116                     	;# 
  4317  0117                     	;# 
  4318  0118                     	;# 
  4319  0119                     	;# 
  4320  0119                     	;# 
  4321  0119                     	;# 
  4322  011A                     	;# 
  4323  011A                     	;# 
  4324  011A                     	;# 
  4325  011B                     	;# 
  4326  011B                     	;# 
  4327  011B                     	;# 
  4328  011B                     	;# 
  4329  011B                     	;# 
  4330  011C                     	;# 
  4331  011C                     	;# 
  4332  011C                     	;# 
  4333  011D                     	;# 
  4334  011D                     	;# 
  4335  011D                     	;# 
  4336  011E                     	;# 
  4337  011E                     	;# 
  4338  011E                     	;# 
  4339  011F                     	;# 
  4340  011F                     	;# 
  4341  011F                     	;# 
  4342  011F                     	;# 
  4343  011F                     	;# 
  4344  018C                     	;# 
  4345  018D                     	;# 
  4346  018E                     	;# 
  4347  018F                     	;# 
  4348  0190                     	;# 
  4349  0191                     	;# 
  4350  0192                     	;# 
  4351  0196                     	;# 
  4352  0197                     	;# 
  4353  0198                     	;# 
  4354  0199                     	;# 
  4355  019A                     	;# 
  4356  019B                     	;# 
  4357  019C                     	;# 
  4358  020C                     	;# 
  4359  020D                     	;# 
  4360  020E                     	;# 
  4361  020E                     	;# 
  4362  020F                     	;# 
  4363  020F                     	;# 
  4364  0210                     	;# 
  4365  0210                     	;# 
  4366  0211                     	;# 
  4367  0211                     	;# 
  4368  0212                     	;# 
  4369  0213                     	;# 
  4370  0214                     	;# 
  4371  0214                     	;# 
  4372  0215                     	;# 
  4373  0215                     	;# 
  4374  0216                     	;# 
  4375  0216                     	;# 
  4376  0217                     	;# 
  4377  0217                     	;# 
  4378  0218                     	;# 
  4379  0219                     	;# 
  4380  021A                     	;# 
  4381  021A                     	;# 
  4382  021B                     	;# 
  4383  021B                     	;# 
  4384  021C                     	;# 
  4385  021C                     	;# 
  4386  021D                     	;# 
  4387  021D                     	;# 
  4388  021E                     	;# 
  4389  021F                     	;# 
  4390  028C                     	;# 
  4391  028C                     	;# 
  4392  028D                     	;# 
  4393  028D                     	;# 
  4394  028E                     	;# 
  4395  028F                     	;# 
  4396  0290                     	;# 
  4397  0291                     	;# 
  4398  0292                     	;# 
  4399  0292                     	;# 
  4400  0293                     	;# 
  4401  0293                     	;# 
  4402  0294                     	;# 
  4403  0295                     	;# 
  4404  0296                     	;# 
  4405  0297                     	;# 
  4406  0298                     	;# 
  4407  0298                     	;# 
  4408  0299                     	;# 
  4409  0299                     	;# 
  4410  029A                     	;# 
  4411  029B                     	;# 
  4412  029C                     	;# 
  4413  029D                     	;# 
  4414  029F                     	;# 
  4415  030C                     	;# 
  4416  030C                     	;# 
  4417  030D                     	;# 
  4418  030E                     	;# 
  4419  030F                     	;# 
  4420  0310                     	;# 
  4421  0310                     	;# 
  4422  0311                     	;# 
  4423  0312                     	;# 
  4424  0313                     	;# 
  4425  0314                     	;# 
  4426  0314                     	;# 
  4427  0315                     	;# 
  4428  0316                     	;# 
  4429  0317                     	;# 
  4430  0318                     	;# 
  4431  0318                     	;# 
  4432  0319                     	;# 
  4433  031A                     	;# 
  4434  031B                     	;# 
  4435  038C                     	;# 
  4436  038C                     	;# 
  4437  038D                     	;# 
  4438  038E                     	;# 
  4439  0390                     	;# 
  4440  0390                     	;# 
  4441  0391                     	;# 
  4442  0392                     	;# 
  4443  048C                     	;# 
  4444  048C                     	;# 
  4445  048D                     	;# 
  4446  048E                     	;# 
  4447  048F                     	;# 
  4448  048F                     	;# 
  4449  0490                     	;# 
  4450  0491                     	;# 
  4451  0492                     	;# 
  4452  0492                     	;# 
  4453  0493                     	;# 
  4454  0494                     	;# 
  4455  0495                     	;# 
  4456  0495                     	;# 
  4457  0496                     	;# 
  4458  0497                     	;# 
  4459  0498                     	;# 
  4460  0499                     	;# 
  4461  049A                     	;# 
  4462  049B                     	;# 
  4463  049C                     	;# 
  4464  049D                     	;# 
  4465  058C                     	;# 
  4466  058C                     	;# 
  4467  058D                     	;# 
  4468  058E                     	;# 
  4469  058F                     	;# 
  4470  058F                     	;# 
  4471  0590                     	;# 
  4472  0591                     	;# 
  4473  0592                     	;# 
  4474  0593                     	;# 
  4475  059C                     	;# 
  4476  059C                     	;# 
  4477  059D                     	;# 
  4478  059D                     	;# 
  4479  059E                     	;# 
  4480  059F                     	;# 
  4481  060C                     	;# 
  4482  060C                     	;# 
  4483  060D                     	;# 
  4484  060D                     	;# 
  4485  060E                     	;# 
  4486  060F                     	;# 
  4487  0610                     	;# 
  4488  0611                     	;# 
  4489  0612                     	;# 
  4490  0613                     	;# 
  4491  0614                     	;# 
  4492  0616                     	;# 
  4493  0616                     	;# 
  4494  0617                     	;# 
  4495  0617                     	;# 
  4496  0618                     	;# 
  4497  0619                     	;# 
  4498  061A                     	;# 
  4499  061B                     	;# 
  4500  061C                     	;# 
  4501  061D                     	;# 
  4502  061E                     	;# 
  4503  070C                     	;# 
  4504  070D                     	;# 
  4505  070E                     	;# 
  4506  070F                     	;# 
  4507  0710                     	;# 
  4508  0711                     	;# 
  4509  0712                     	;# 
  4510  0713                     	;# 
  4511  0714                     	;# 
  4512  0716                     	;# 
  4513  0717                     	;# 
  4514  0718                     	;# 
  4515  0719                     	;# 
  4516  071A                     	;# 
  4517  071B                     	;# 
  4518  071C                     	;# 
  4519  071D                     	;# 
  4520  071E                     	;# 
  4521  0796                     	;# 
  4522  0797                     	;# 
  4523  0798                     	;# 
  4524  0799                     	;# 
  4525  079A                     	;# 
  4526  079B                     	;# 
  4527  079C                     	;# 
  4528  079D                     	;# 
  4529  080C                     	;# 
  4530  080D                     	;# 
  4531  080E                     	;# 
  4532  080F                     	;# 
  4533  0810                     	;# 
  4534  0811                     	;# 
  4535  0812                     	;# 
  4536  0813                     	;# 
  4537  0814                     	;# 
  4538  081A                     	;# 
  4539  081A                     	;# 
  4540  081B                     	;# 
  4541  081C                     	;# 
  4542  081C                     	;# 
  4543  081D                     	;# 
  4544  081E                     	;# 
  4545  081F                     	;# 
  4546  088C                     	;# 
  4547  088D                     	;# 
  4548  088E                     	;# 
  4549  088F                     	;# 
  4550  0890                     	;# 
  4551  0891                     	;# 
  4552  0892                     	;# 
  4553  0893                     	;# 
  4554  0895                     	;# 
  4555  0896                     	;# 
  4556  0897                     	;# 
  4557  0898                     	;# 
  4558  0899                     	;# 
  4559  089A                     	;# 
  4560  089B                     	;# 
  4561  090C                     	;# 
  4562  090E                     	;# 
  4563  090F                     	;# 
  4564  091F                     	;# 
  4565  098F                     	;# 
  4566  098F                     	;# 
  4567  0990                     	;# 
  4568  0991                     	;# 
  4569  0992                     	;# 
  4570  0993                     	;# 
  4571  0994                     	;# 
  4572  0995                     	;# 
  4573  0996                     	;# 
  4574  0997                     	;# 
  4575  1E0F                     	;# 
  4576  1E10                     	;# 
  4577  1E11                     	;# 
  4578  1E12                     	;# 
  4579  1E13                     	;# 
  4580  1E14                     	;# 
  4581  1E15                     	;# 
  4582  1E16                     	;# 
  4583  1E17                     	;# 
  4584  1E18                     	;# 
  4585  1E19                     	;# 
  4586  1E1A                     	;# 
  4587  1E1B                     	;# 
  4588  1E1C                     	;# 
  4589  1E1D                     	;# 
  4590  1E1E                     	;# 
  4591  1E1F                     	;# 
  4592  1E20                     	;# 
  4593  1E21                     	;# 
  4594  1E22                     	;# 
  4595  1E23                     	;# 
  4596  1E24                     	;# 
  4597  1E25                     	;# 
  4598  1E26                     	;# 
  4599  1E27                     	;# 
  4600  1E28                     	;# 
  4601  1E29                     	;# 
  4602  1E2A                     	;# 
  4603  1E2B                     	;# 
  4604  1E2C                     	;# 
  4605  1E2D                     	;# 
  4606  1E2E                     	;# 
  4607  1E2F                     	;# 
  4608  1E30                     	;# 
  4609  1E31                     	;# 
  4610  1E32                     	;# 
  4611  1E33                     	;# 
  4612  1E34                     	;# 
  4613  1E35                     	;# 
  4614  1E36                     	;# 
  4615  1E37                     	;# 
  4616  1E8F                     	;# 
  4617  1E90                     	;# 
  4618  1E91                     	;# 
  4619  1E92                     	;# 
  4620  1E93                     	;# 
  4621  1E94                     	;# 
  4622  1E95                     	;# 
  4623  1E96                     	;# 
  4624  1E97                     	;# 
  4625  1E9C                     	;# 
  4626  1E9D                     	;# 
  4627  1E9E                     	;# 
  4628  1EA1                     	;# 
  4629  1EA2                     	;# 
  4630  1EA3                     	;# 
  4631  1EA4                     	;# 
  4632  1EA9                     	;# 
  4633  1EAA                     	;# 
  4634  1EB1                     	;# 
  4635  1EB2                     	;# 
  4636  1EB8                     	;# 
  4637  1EB9                     	;# 
  4638  1EBA                     	;# 
  4639  1EBB                     	;# 
  4640  1EBC                     	;# 
  4641  1EBD                     	;# 
  4642  1EBE                     	;# 
  4643  1EC3                     	;# 
  4644  1EC5                     	;# 
  4645  1EC6                     	;# 
  4646  1EC7                     	;# 
  4647  1EC8                     	;# 
  4648  1EC9                     	;# 
  4649  1ECA                     	;# 
  4650  1ECB                     	;# 
  4651  1ECB                     	;# 
  4652  1ECB                     	;# 
  4653  1ECC                     	;# 
  4654  1ECC                     	;# 
  4655  1ECC                     	;# 
  4656  1F10                     	;# 
  4657  1F11                     	;# 
  4658  1F12                     	;# 
  4659  1F14                     	;# 
  4660  1F15                     	;# 
  4661  1F1C                     	;# 
  4662  1F1D                     	;# 
  4663  1F1E                     	;# 
  4664  1F1F                     	;# 
  4665  1F20                     	;# 
  4666  1F21                     	;# 
  4667  1F22                     	;# 
  4668  1F23                     	;# 
  4669  1F24                     	;# 
  4670  1F25                     	;# 
  4671  1F26                     	;# 
  4672  1F27                     	;# 
  4673  1F38                     	;# 
  4674  1F39                     	;# 
  4675  1F3A                     	;# 
  4676  1F3B                     	;# 
  4677  1F3C                     	;# 
  4678  1F3D                     	;# 
  4679  1F3E                     	;# 
  4680  1F3F                     	;# 
  4681  1F43                     	;# 
  4682  1F44                     	;# 
  4683  1F45                     	;# 
  4684  1F46                     	;# 
  4685  1F47                     	;# 
  4686  1F48                     	;# 
  4687  1F49                     	;# 
  4688  1F4A                     	;# 
  4689  1F4E                     	;# 
  4690  1F4F                     	;# 
  4691  1F50                     	;# 
  4692  1F51                     	;# 
  4693  1F52                     	;# 
  4694  1F53                     	;# 
  4695  1F54                     	;# 
  4696  1F55                     	;# 
  4697  1FE4                     	;# 
  4698  1FE5                     	;# 
  4699  1FE6                     	;# 
  4700  1FE7                     	;# 
  4701  1FE8                     	;# 
  4702  1FE8                     	;# 
  4703  1FE9                     	;# 
  4704  1FEA                     	;# 
  4705  1FEB                     	;# 
  4706  1FED                     	;# 
  4707  1FEE                     	;# 
  4708  1FEF                     	;# 
  4709  0000                     	;# 
  4710  0001                     	;# 
  4711  0002                     	;# 
  4712  0003                     	;# 
  4713  0004                     	;# 
  4714  0005                     	;# 
  4715  0006                     	;# 
  4716  0007                     	;# 
  4717  0008                     	;# 
  4718  0009                     	;# 
  4719  000A                     	;# 
  4720  000B                     	;# 
  4721  000C                     	;# 
  4722  000D                     	;# 
  4723  000E                     	;# 
  4724  0012                     	;# 
  4725  0013                     	;# 
  4726  0014                     	;# 
  4727  0018                     	;# 
  4728  0019                     	;# 
  4729  001A                     	;# 
  4730  008C                     	;# 
  4731  008C                     	;# 
  4732  008D                     	;# 
  4733  008E                     	;# 
  4734  008E                     	;# 
  4735  008F                     	;# 
  4736  0090                     	;# 
  4737  0090                     	;# 
  4738  0091                     	;# 
  4739  0092                     	;# 
  4740  0092                     	;# 
  4741  0093                     	;# 
  4742  0094                     	;# 
  4743  0094                     	;# 
  4744  0095                     	;# 
  4745  0096                     	;# 
  4746  0096                     	;# 
  4747  0097                     	;# 
  4748  0098                     	;# 
  4749  0099                     	;# 
  4750  009A                     	;# 
  4751  009B                     	;# 
  4752  009B                     	;# 
  4753  009C                     	;# 
  4754  009D                     	;# 
  4755  009D                     	;# 
  4756  009E                     	;# 
  4757  009F                     	;# 
  4758  010C                     	;# 
  4759  010C                     	;# 
  4760  010D                     	;# 
  4761  010E                     	;# 
  4762  010F                     	;# 
  4763  010F                     	;# 
  4764  0110                     	;# 
  4765  0111                     	;# 
  4766  0112                     	;# 
  4767  0113                     	;# 
  4768  0114                     	;# 
  4769  0115                     	;# 
  4770  0116                     	;# 
  4771  0117                     	;# 
  4772  0118                     	;# 
  4773  0119                     	;# 
  4774  0119                     	;# 
  4775  0119                     	;# 
  4776  011A                     	;# 
  4777  011A                     	;# 
  4778  011A                     	;# 
  4779  011B                     	;# 
  4780  011B                     	;# 
  4781  011B                     	;# 
  4782  011B                     	;# 
  4783  011B                     	;# 
  4784  011C                     	;# 
  4785  011C                     	;# 
  4786  011C                     	;# 
  4787  011D                     	;# 
  4788  011D                     	;# 
  4789  011D                     	;# 
  4790  011E                     	;# 
  4791  011E                     	;# 
  4792  011E                     	;# 
  4793  011F                     	;# 
  4794  011F                     	;# 
  4795  011F                     	;# 
  4796  011F                     	;# 
  4797  011F                     	;# 
  4798  018C                     	;# 
  4799  018D                     	;# 
  4800  018E                     	;# 
  4801  018F                     	;# 
  4802  0190                     	;# 
  4803  0191                     	;# 
  4804  0192                     	;# 
  4805  0196                     	;# 
  4806  0197                     	;# 
  4807  0198                     	;# 
  4808  0199                     	;# 
  4809  019A                     	;# 
  4810  019B                     	;# 
  4811  019C                     	;# 
  4812  020C                     	;# 
  4813  020D                     	;# 
  4814  020E                     	;# 
  4815  020E                     	;# 
  4816  020F                     	;# 
  4817  020F                     	;# 
  4818  0210                     	;# 
  4819  0210                     	;# 
  4820  0211                     	;# 
  4821  0211                     	;# 
  4822  0212                     	;# 
  4823  0213                     	;# 
  4824  0214                     	;# 
  4825  0214                     	;# 
  4826  0215                     	;# 
  4827  0215                     	;# 
  4828  0216                     	;# 
  4829  0216                     	;# 
  4830  0217                     	;# 
  4831  0217                     	;# 
  4832  0218                     	;# 
  4833  0219                     	;# 
  4834  021A                     	;# 
  4835  021A                     	;# 
  4836  021B                     	;# 
  4837  021B                     	;# 
  4838  021C                     	;# 
  4839  021C                     	;# 
  4840  021D                     	;# 
  4841  021D                     	;# 
  4842  021E                     	;# 
  4843  021F                     	;# 
  4844  028C                     	;# 
  4845  028C                     	;# 
  4846  028D                     	;# 
  4847  028D                     	;# 
  4848  028E                     	;# 
  4849  028F                     	;# 
  4850  0290                     	;# 
  4851  0291                     	;# 
  4852  0292                     	;# 
  4853  0292                     	;# 
  4854  0293                     	;# 
  4855  0293                     	;# 
  4856  0294                     	;# 
  4857  0295                     	;# 
  4858  0296                     	;# 
  4859  0297                     	;# 
  4860  0298                     	;# 
  4861  0298                     	;# 
  4862  0299                     	;# 
  4863  0299                     	;# 
  4864  029A                     	;# 
  4865  029B                     	;# 
  4866  029C                     	;# 
  4867  029D                     	;# 
  4868  029F                     	;# 
  4869  030C                     	;# 
  4870  030C                     	;# 
  4871  030D                     	;# 
  4872  030E                     	;# 
  4873  030F                     	;# 
  4874  0310                     	;# 
  4875  0310                     	;# 
  4876  0311                     	;# 
  4877  0312                     	;# 
  4878  0313                     	;# 
  4879  0314                     	;# 
  4880  0314                     	;# 
  4881  0315                     	;# 
  4882  0316                     	;# 
  4883  0317                     	;# 
  4884  0318                     	;# 
  4885  0318                     	;# 
  4886  0319                     	;# 
  4887  031A                     	;# 
  4888  031B                     	;# 
  4889  038C                     	;# 
  4890  038C                     	;# 
  4891  038D                     	;# 
  4892  038E                     	;# 
  4893  0390                     	;# 
  4894  0390                     	;# 
  4895  0391                     	;# 
  4896  0392                     	;# 
  4897  048C                     	;# 
  4898  048C                     	;# 
  4899  048D                     	;# 
  4900  048E                     	;# 
  4901  048F                     	;# 
  4902  048F                     	;# 
  4903  0490                     	;# 
  4904  0491                     	;# 
  4905  0492                     	;# 
  4906  0492                     	;# 
  4907  0493                     	;# 
  4908  0494                     	;# 
  4909  0495                     	;# 
  4910  0495                     	;# 
  4911  0496                     	;# 
  4912  0497                     	;# 
  4913  0498                     	;# 
  4914  0499                     	;# 
  4915  049A                     	;# 
  4916  049B                     	;# 
  4917  049C                     	;# 
  4918  049D                     	;# 
  4919  058C                     	;# 
  4920  058C                     	;# 
  4921  058D                     	;# 
  4922  058E                     	;# 
  4923  058F                     	;# 
  4924  058F                     	;# 
  4925  0590                     	;# 
  4926  0591                     	;# 
  4927  0592                     	;# 
  4928  0593                     	;# 
  4929  059C                     	;# 
  4930  059C                     	;# 
  4931  059D                     	;# 
  4932  059D                     	;# 
  4933  059E                     	;# 
  4934  059F                     	;# 
  4935  060C                     	;# 
  4936  060C                     	;# 
  4937  060D                     	;# 
  4938  060D                     	;# 
  4939  060E                     	;# 
  4940  060F                     	;# 
  4941  0610                     	;# 
  4942  0611                     	;# 
  4943  0612                     	;# 
  4944  0613                     	;# 
  4945  0614                     	;# 
  4946  0616                     	;# 
  4947  0616                     	;# 
  4948  0617                     	;# 
  4949  0617                     	;# 
  4950  0618                     	;# 
  4951  0619                     	;# 
  4952  061A                     	;# 
  4953  061B                     	;# 
  4954  061C                     	;# 
  4955  061D                     	;# 
  4956  061E                     	;# 
  4957  070C                     	;# 
  4958  070D                     	;# 
  4959  070E                     	;# 
  4960  070F                     	;# 
  4961  0710                     	;# 
  4962  0711                     	;# 
  4963  0712                     	;# 
  4964  0713                     	;# 
  4965  0714                     	;# 
  4966  0716                     	;# 
  4967  0717                     	;# 
  4968  0718                     	;# 
  4969  0719                     	;# 
  4970  071A                     	;# 
  4971  071B                     	;# 
  4972  071C                     	;# 
  4973  071D                     	;# 
  4974  071E                     	;# 
  4975  0796                     	;# 
  4976  0797                     	;# 
  4977  0798                     	;# 
  4978  0799                     	;# 
  4979  079A                     	;# 
  4980  079B                     	;# 
  4981  079C                     	;# 
  4982  079D                     	;# 
  4983  080C                     	;# 
  4984  080D                     	;# 
  4985  080E                     	;# 
  4986  080F                     	;# 
  4987  0810                     	;# 
  4988  0811                     	;# 
  4989  0812                     	;# 
  4990  0813                     	;# 
  4991  0814                     	;# 
  4992  081A                     	;# 
  4993  081A                     	;# 
  4994  081B                     	;# 
  4995  081C                     	;# 
  4996  081C                     	;# 
  4997  081D                     	;# 
  4998  081E                     	;# 
  4999  081F                     	;# 
  5000  088C                     	;# 
  5001  088D                     	;# 
  5002  088E                     	;# 
  5003  088F                     	;# 
  5004  0890                     	;# 
  5005  0891                     	;# 
  5006  0892                     	;# 
  5007  0893                     	;# 
  5008  0895                     	;# 
  5009  0896                     	;# 
  5010  0897                     	;# 
  5011  0898                     	;# 
  5012  0899                     	;# 
  5013  089A                     	;# 
  5014  089B                     	;# 
  5015  090C                     	;# 
  5016  090E                     	;# 
  5017  090F                     	;# 
  5018  091F                     	;# 
  5019  098F                     	;# 
  5020  098F                     	;# 
  5021  0990                     	;# 
  5022  0991                     	;# 
  5023  0992                     	;# 
  5024  0993                     	;# 
  5025  0994                     	;# 
  5026  0995                     	;# 
  5027  0996                     	;# 
  5028  0997                     	;# 
  5029  1E0F                     	;# 
  5030  1E10                     	;# 
  5031  1E11                     	;# 
  5032  1E12                     	;# 
  5033  1E13                     	;# 
  5034  1E14                     	;# 
  5035  1E15                     	;# 
  5036  1E16                     	;# 
  5037  1E17                     	;# 
  5038  1E18                     	;# 
  5039  1E19                     	;# 
  5040  1E1A                     	;# 
  5041  1E1B                     	;# 
  5042  1E1C                     	;# 
  5043  1E1D                     	;# 
  5044  1E1E                     	;# 
  5045  1E1F                     	;# 
  5046  1E20                     	;# 
  5047  1E21                     	;# 
  5048  1E22                     	;# 
  5049  1E23                     	;# 
  5050  1E24                     	;# 
  5051  1E25                     	;# 
  5052  1E26                     	;# 
  5053  1E27                     	;# 
  5054  1E28                     	;# 
  5055  1E29                     	;# 
  5056  1E2A                     	;# 
  5057  1E2B                     	;# 
  5058  1E2C                     	;# 
  5059  1E2D                     	;# 
  5060  1E2E                     	;# 
  5061  1E2F                     	;# 
  5062  1E30                     	;# 
  5063  1E31                     	;# 
  5064  1E32                     	;# 
  5065  1E33                     	;# 
  5066  1E34                     	;# 
  5067  1E35                     	;# 
  5068  1E36                     	;# 
  5069  1E37                     	;# 
  5070  1E8F                     	;# 
  5071  1E90                     	;# 
  5072  1E91                     	;# 
  5073  1E92                     	;# 
  5074  1E93                     	;# 
  5075  1E94                     	;# 
  5076  1E95                     	;# 
  5077  1E96                     	;# 
  5078  1E97                     	;# 
  5079  1E9C                     	;# 
  5080  1E9D                     	;# 
  5081  1E9E                     	;# 
  5082  1EA1                     	;# 
  5083  1EA2                     	;# 
  5084  1EA3                     	;# 
  5085  1EA4                     	;# 
  5086  1EA9                     	;# 
  5087  1EAA                     	;# 
  5088  1EB1                     	;# 
  5089  1EB2                     	;# 
  5090  1EB8                     	;# 
  5091  1EB9                     	;# 
  5092  1EBA                     	;# 
  5093  1EBB                     	;# 
  5094  1EBC                     	;# 
  5095  1EBD                     	;# 
  5096  1EBE                     	;# 
  5097  1EC3                     	;# 
  5098  1EC5                     	;# 
  5099  1EC6                     	;# 
  5100  1EC7                     	;# 
  5101  1EC8                     	;# 
  5102  1EC9                     	;# 
  5103  1ECA                     	;# 
  5104  1ECB                     	;# 
  5105  1ECB                     	;# 
  5106  1ECB                     	;# 
  5107  1ECC                     	;# 
  5108  1ECC                     	;# 
  5109  1ECC                     	;# 
  5110  1F10                     	;# 
  5111  1F11                     	;# 
  5112  1F12                     	;# 
  5113  1F14                     	;# 
  5114  1F15                     	;# 
  5115  1F1C                     	;# 
  5116  1F1D                     	;# 
  5117  1F1E                     	;# 
  5118  1F1F                     	;# 
  5119  1F20                     	;# 
  5120  1F21                     	;# 
  5121  1F22                     	;# 
  5122  1F23                     	;# 
  5123  1F24                     	;# 
  5124  1F25                     	;# 
  5125  1F26                     	;# 
  5126  1F27                     	;# 
  5127  1F38                     	;# 
  5128  1F39                     	;# 
  5129  1F3A                     	;# 
  5130  1F3B                     	;# 
  5131  1F3C                     	;# 
  5132  1F3D                     	;# 
  5133  1F3E                     	;# 
  5134  1F3F                     	;# 
  5135  1F43                     	;# 
  5136  1F44                     	;# 
  5137  1F45                     	;# 
  5138  1F46                     	;# 
  5139  1F47                     	;# 
  5140  1F48                     	;# 
  5141  1F49                     	;# 
  5142  1F4A                     	;# 
  5143  1F4E                     	;# 
  5144  1F4F                     	;# 
  5145  1F50                     	;# 
  5146  1F51                     	;# 
  5147  1F52                     	;# 
  5148  1F53                     	;# 
  5149  1F54                     	;# 
  5150  1F55                     	;# 
  5151  1FE4                     	;# 
  5152  1FE5                     	;# 
  5153  1FE6                     	;# 
  5154  1FE7                     	;# 
  5155  1FE8                     	;# 
  5156  1FE8                     	;# 
  5157  1FE9                     	;# 
  5158  1FEA                     	;# 
  5159  1FEB                     	;# 
  5160  1FED                     	;# 
  5161  1FEE                     	;# 
  5162  1FEF                     	;_nmea_data
  5163                           
  5164 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
  5165  0000                     
  5166 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
  5167  0000                     
  5168 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
  5169  0000                     
  5170                           	psect	idataBANK4
  5171  196C                     __pidataBANK4:	
  5172                           
  5173                           ;initializer for _setNavFlightMode
  5174  196C  34B5               	retlw	181
  5175  196D  3462               	retlw	98
  5176  196E  3406               	retlw	6
  5177  196F  3424               	retlw	36
  5178  1970  3424               	retlw	36
  5179  1971  3400               	retlw	0
  5180  1972  34FF               	retlw	255
  5181  1973  34FF               	retlw	255
  5182  1974  3406               	retlw	6
  5183  1975  3403               	retlw	3
  5184  1976  3400               	retlw	0
  5185  1977  3400               	retlw	0
  5186  1978  3400               	retlw	0
  5187  1979  3400               	retlw	0
  5188  197A  3410               	retlw	16
  5189  197B  3427               	retlw	39
  5190  197C  3400               	retlw	0
  5191  197D  3400               	retlw	0
  5192  197E  3405               	retlw	5
  5193  197F  3400               	retlw	0
  5194  1980  34FA               	retlw	250
  5195  1981  3400               	retlw	0
  5196  1982  34FA               	retlw	250
  5197  1983  3400               	retlw	0
  5198  1984  3464               	retlw	100
  5199  1985  3400               	retlw	0
  5200  1986  342C               	retlw	44
  5201  1987  3401               	retlw	1
  5202  1988  3400               	retlw	0
  5203  1989  3400               	retlw	0
  5204  198A  3400               	retlw	0
  5205  198B  3400               	retlw	0
  5206  198C  3400               	retlw	0
  5207  198D  3400               	retlw	0
  5208  198E  3400               	retlw	0
  5209  198F  3400               	retlw	0
  5210  1990  3400               	retlw	0
  5211  1991  3400               	retlw	0
  5212  1992  3400               	retlw	0
  5213  1993  3400               	retlw	0
  5214  1994  3400               	retlw	0
  5215  1995  3400               	retlw	0
  5216  1996  3416               	retlw	22
  5217  1997  34DC               	retlw	220
  5218                           
  5219                           	psect	stringtext1
  5220  28B6                     __pstringtext1:	
  5221  28B6                     _HALF_BAUD_DELAY:	
  5222  28B6  3405               	retlw	5
  5223  28B7  3400               	retlw	0
  5224  28B8                     __end_of_HALF_BAUD_DELAY:	
  5225                           
  5226                           	psect	nvBANK1
  5227  00EE                     __pnvBANK1:	
  5228  00EE                     _TMR0_InterruptHandler:	
  5229  00EE                     	ds	2
  5230                           
  5231                           	psect	nvBANK3
  5232  01E7                     __pnvBANK3:	
  5233  01E7                     _EUSART1_ErrorHandler:	
  5234  01E7                     	ds	2
  5235  01E9                     _EUSART1_OverrunErrorHandler:	
  5236  01E9                     	ds	2
  5237  01EB                     _EUSART1_FramingErrorHandler:	
  5238  01EB                     	ds	2
  5239  000B                     _INTCONbits	set	11
  5240  0018                     _LATAbits	set	24
  5241  001A                     _LATCbits	set	26
  5242  0014                     _TRISC	set	20
  5243  0013                     _TRISB	set	19
  5244  0012                     _TRISA	set	18
  5245  001A                     _LATC	set	26
  5246  0019                     _LATB	set	25
  5247  0018                     _LATA	set	24
  5248  011A                     _TX1REG	set	282
  5249  0119                     _RC1REG	set	281
  5250  011D                     _RC1STAbits	set	285
  5251  011E                     _TX1STAbits	set	286
  5252  011C                     _SP1BRGH	set	284
  5253  011B                     _SP1BRGL	set	283
  5254  011E                     _TX1STA	set	286
  5255  011D                     _RC1STA	set	285
  5256  011F                     _BAUD1CON	set	287
  5257  0191                     _SSP1CON2bits	set	401
  5258  018C                     _SSP1BUF	set	396
  5259  0190                     _SSP1CON1bits	set	400
  5260  018D                     _SSP1ADD	set	397
  5261  0192                     _SSP1CON3	set	402
  5262  0191                     _SSP1CON2	set	401
  5263  0190                     _SSP1CON1	set	400
  5264  018F                     _SSP1STAT	set	399
  5265  059E                     _T0CON0bits	set	1438
  5266  059E                     _T0CON0	set	1438
  5267  059C                     _TMR0L	set	1436
  5268  059D                     _TMR0H	set	1437
  5269  059F                     _T0CON1	set	1439
  5270  070F                     _PIR3bits	set	1807
  5271  0716                     _PIE0bits	set	1814
  5272  070C                     _PIR0bits	set	1804
  5273  079D                     _PMD7	set	1949
  5274  079C                     _PMD6	set	1948
  5275  079B                     _PMD5	set	1947
  5276  079A                     _PMD4	set	1946
  5277  0799                     _PMD3	set	1945
  5278  0798                     _PMD2	set	1944
  5279  0797                     _PMD1	set	1943
  5280  0796                     _PMD0	set	1942
  5281  0892                     _OSCTUNE	set	2194
  5282  0893                     _OSCFRQ	set	2195
  5283  0891                     _OSCEN	set	2193
  5284  088F                     _OSCCON3	set	2191
  5285  088D                     _OSCCON1	set	2189
  5286  1EC6                     _SSP1DATPPS	set	7878
  5287  1EC5                     _SSP1CLKPPS	set	7877
  5288  1ECB                     _RX1DTPPS	set	7883
  5289  1F1C                     _RB4PPS	set	7964
  5290  1F1E                     _RB6PPS	set	7966
  5291  1F1F                     _RB7PPS	set	7967
  5292  1F52                     _INLVLC	set	8018
  5293  1F47                     _INLVLB	set	8007
  5294  1F3C                     _INLVLA	set	7996
  5295  1F51                     _SLRCONC	set	8017
  5296  1F46                     _SLRCONB	set	8006
  5297  1F3B                     _SLRCONA	set	7995
  5298  1F50                     _ODCONC	set	8016
  5299  1F45                     _ODCONB	set	8005
  5300  1F3A                     _ODCONA	set	7994
  5301  1F4F                     _WPUC	set	8015
  5302  1F39                     _WPUA	set	7993
  5303  1F44                     _WPUB	set	8004
  5304  1F38                     _ANSELA	set	7992
  5305  1F43                     _ANSELB	set	8003
  5306  1F4E                     _ANSELC	set	8014
  5307                           
  5308                           	psect	stringtext2
  5309  2800                     __pstringtext2:	
  5310  2800                     STR_6:	
  5311  2800  3424               	retlw	36	;'$'
  5312  2801  3450               	retlw	80	;'P'
  5313  2802  3455               	retlw	85	;'U'
  5314  2803  3442               	retlw	66	;'B'
  5315  2804  3458               	retlw	88	;'X'
  5316  2805  342C               	retlw	44	;','
  5317  2806  3434               	retlw	52	;'4'
  5318  2807  3430               	retlw	48	;'0'
  5319  2808  342C               	retlw	44	;','
  5320  2809  3452               	retlw	82	;'R'
  5321  280A  344D               	retlw	77	;'M'
  5322  280B  3443               	retlw	67	;'C'
  5323  280C  342C               	retlw	44	;','
  5324  280D  3430               	retlw	48	;'0'
  5325  280E  342C               	retlw	44	;','
  5326  280F  3430               	retlw	48	;'0'
  5327  2810  342C               	retlw	44	;','
  5328  2811  3430               	retlw	48	;'0'
  5329  2812  342C               	retlw	44	;','
  5330  2813  3430               	retlw	48	;'0'
  5331  2814  342A               	retlw	42	;'*'
  5332  2815  3434               	retlw	52	;'4'
  5333  2816  3437               	retlw	55	;'7'
  5334  2817  340D               	retlw	13
  5335  2818  340A               	retlw	10
  5336  2819  3400               	retlw	0
  5337                           
  5338                           	psect	stringtext3
  5339  281A                     __pstringtext3:	
  5340  281A                     STR_4:	
  5341  281A  3424               	retlw	36	;'$'
  5342  281B  3450               	retlw	80	;'P'
  5343  281C  3455               	retlw	85	;'U'
  5344  281D  3442               	retlw	66	;'B'
  5345  281E  3458               	retlw	88	;'X'
  5346  281F  342C               	retlw	44	;','
  5347  2820  3434               	retlw	52	;'4'
  5348  2821  3430               	retlw	48	;'0'
  5349  2822  342C               	retlw	44	;','
  5350  2823  3447               	retlw	71	;'G'
  5351  2824  3453               	retlw	83	;'S'
  5352  2825  3456               	retlw	86	;'V'
  5353  2826  342C               	retlw	44	;','
  5354  2827  3430               	retlw	48	;'0'
  5355  2828  342C               	retlw	44	;','
  5356  2829  3430               	retlw	48	;'0'
  5357  282A  342C               	retlw	44	;','
  5358  282B  3430               	retlw	48	;'0'
  5359  282C  342C               	retlw	44	;','
  5360  282D  3430               	retlw	48	;'0'
  5361  282E  342A               	retlw	42	;'*'
  5362  282F  3435               	retlw	53	;'5'
  5363  2830  3439               	retlw	57	;'9'
  5364  2831  340D               	retlw	13
  5365  2832  340A               	retlw	10
  5366  2833  3400               	retlw	0
  5367                           
  5368                           	psect	stringtext4
  5369  2834                     __pstringtext4:	
  5370  2834                     STR_2:	
  5371  2834  3424               	retlw	36	;'$'
  5372  2835  3450               	retlw	80	;'P'
  5373  2836  3455               	retlw	85	;'U'
  5374  2837  3442               	retlw	66	;'B'
  5375  2838  3458               	retlw	88	;'X'
  5376  2839  342C               	retlw	44	;','
  5377  283A  3434               	retlw	52	;'4'
  5378  283B  3430               	retlw	48	;'0'
  5379  283C  342C               	retlw	44	;','
  5380  283D  3447               	retlw	71	;'G'
  5381  283E  3447               	retlw	71	;'G'
  5382  283F  3441               	retlw	65	;'A'
  5383  2840  342C               	retlw	44	;','
  5384  2841  3430               	retlw	48	;'0'
  5385  2842  342C               	retlw	44	;','
  5386  2843  3430               	retlw	48	;'0'
  5387  2844  342C               	retlw	44	;','
  5388  2845  3430               	retlw	48	;'0'
  5389  2846  342C               	retlw	44	;','
  5390  2847  3430               	retlw	48	;'0'
  5391  2848  342A               	retlw	42	;'*'
  5392  2849  3435               	retlw	53	;'5'
  5393  284A  3441               	retlw	65	;'A'
  5394  284B  340D               	retlw	13
  5395  284C  340A               	retlw	10
  5396  284D  3400               	retlw	0
  5397                           
  5398                           	psect	stringtext5
  5399  284E                     __pstringtext5:	
  5400  284E                     STR_1:	
  5401  284E  3424               	retlw	36	;'$'
  5402  284F  3450               	retlw	80	;'P'
  5403  2850  3455               	retlw	85	;'U'
  5404  2851  3442               	retlw	66	;'B'
  5405  2852  3458               	retlw	88	;'X'
  5406  2853  342C               	retlw	44	;','
  5407  2854  3434               	retlw	52	;'4'
  5408  2855  3430               	retlw	48	;'0'
  5409  2856  342C               	retlw	44	;','
  5410  2857  3447               	retlw	71	;'G'
  5411  2858  344C               	retlw	76	;'L'
  5412  2859  344C               	retlw	76	;'L'
  5413  285A  342C               	retlw	44	;','
  5414  285B  3430               	retlw	48	;'0'
  5415  285C  342C               	retlw	44	;','
  5416  285D  3430               	retlw	48	;'0'
  5417  285E  342C               	retlw	44	;','
  5418  285F  3430               	retlw	48	;'0'
  5419  2860  342C               	retlw	44	;','
  5420  2861  3430               	retlw	48	;'0'
  5421  2862  342A               	retlw	42	;'*'
  5422  2863  3435               	retlw	53	;'5'
  5423  2864  3443               	retlw	67	;'C'
  5424  2865  340D               	retlw	13
  5425  2866  340A               	retlw	10
  5426  2867  3400               	retlw	0
  5427                           
  5428                           	psect	stringtext6
  5429  2868                     __pstringtext6:	
  5430  2868                     STR_5:	
  5431  2868  3424               	retlw	36	;'$'
  5432  2869  3450               	retlw	80	;'P'
  5433  286A  3455               	retlw	85	;'U'
  5434  286B  3442               	retlw	66	;'B'
  5435  286C  3458               	retlw	88	;'X'
  5436  286D  342C               	retlw	44	;','
  5437  286E  3434               	retlw	52	;'4'
  5438  286F  3430               	retlw	48	;'0'
  5439  2870  342C               	retlw	44	;','
  5440  2871  3447               	retlw	71	;'G'
  5441  2872  3453               	retlw	83	;'S'
  5442  2873  3441               	retlw	65	;'A'
  5443  2874  342C               	retlw	44	;','
  5444  2875  3430               	retlw	48	;'0'
  5445  2876  342C               	retlw	44	;','
  5446  2877  3430               	retlw	48	;'0'
  5447  2878  342C               	retlw	44	;','
  5448  2879  3430               	retlw	48	;'0'
  5449  287A  342C               	retlw	44	;','
  5450  287B  3430               	retlw	48	;'0'
  5451  287C  342A               	retlw	42	;'*'
  5452  287D  3434               	retlw	52	;'4'
  5453  287E  3445               	retlw	69	;'E'
  5454  287F  340D               	retlw	13
  5455  2880  340A               	retlw	10
  5456  2881  3400               	retlw	0
  5457                           
  5458                           	psect	stringtext7
  5459  2882                     __pstringtext7:	
  5460  2882                     STR_3:	
  5461  2882  3424               	retlw	36	;'$'
  5462  2883  3450               	retlw	80	;'P'
  5463  2884  3455               	retlw	85	;'U'
  5464  2885  3442               	retlw	66	;'B'
  5465  2886  3458               	retlw	88	;'X'
  5466  2887  342C               	retlw	44	;','
  5467  2888  3434               	retlw	52	;'4'
  5468  2889  3430               	retlw	48	;'0'
  5469  288A  342C               	retlw	44	;','
  5470  288B  3456               	retlw	86	;'V'
  5471  288C  3454               	retlw	84	;'T'
  5472  288D  3447               	retlw	71	;'G'
  5473  288E  342C               	retlw	44	;','
  5474  288F  3430               	retlw	48	;'0'
  5475  2890  342C               	retlw	44	;','
  5476  2891  3430               	retlw	48	;'0'
  5477  2892  342C               	retlw	44	;','
  5478  2893  3430               	retlw	48	;'0'
  5479  2894  342C               	retlw	44	;','
  5480  2895  3430               	retlw	48	;'0'
  5481  2896  342A               	retlw	42	;'*'
  5482  2897  3435               	retlw	53	;'5'
  5483  2898  3445               	retlw	69	;'E'
  5484  2899  340D               	retlw	13
  5485  289A  340A               	retlw	10
  5486  289B  3400               	retlw	0
  5487                           
  5488                           	psect	stringtext8
  5489  289C                     __pstringtext8:	
  5490  289C                     STR_7:	
  5491  289C  3424               	retlw	36	;'$'
  5492  289D  3450               	retlw	80	;'P'
  5493  289E  3455               	retlw	85	;'U'
  5494  289F  3442               	retlw	66	;'B'
  5495  28A0  3458               	retlw	88	;'X'
  5496  28A1  342C               	retlw	44	;','
  5497  28A2  3430               	retlw	48	;'0'
  5498  28A3  3430               	retlw	48	;'0'
  5499  28A4  342A               	retlw	42	;'*'
  5500  28A5  3433               	retlw	51	;'3'
  5501  28A6  3433               	retlw	51	;'3'
  5502  28A7  340D               	retlw	13
  5503  28A8  340A               	retlw	10
  5504  28A9  3400               	retlw	0
  5505                           
  5506                           	psect	stringtext9
  5507  28AA                     __pstringtext9:	
  5508  28AA                     STR_10:	
  5509  28AA  3457               	retlw	87	;'W'
  5510  28AB  3469               	retlw	105	;'i'
  5511  28AC  3473               	retlw	115	;'s'
  5512  28AD  3470               	retlw	112	;'p'
  5513  28AE  342D               	retlw	45	;'-'
  5514  28AF  3431               	retlw	49	;'1'
  5515  28B0  3400               	retlw	0
  5516                           
  5517                           	psect	stringtext10
  5518  28B1                     __pstringtext10:	
  5519  28B1                     STR_11:	
  5520  28B1  3424               	retlw	36	;'$'
  5521  28B2  3424               	retlw	36	;'$'
  5522  28B3  3424               	retlw	36	;'$'
  5523  28B4  3424               	retlw	36	;'$'
  5524  28B5  3400               	retlw	0
  5525                           
  5526                           	psect	stringtext11
  5527  28B8                     __pstringtext11:	
  5528  28B8                     STR_8:	
  5529  28B8  3453               	retlw	83	;'S'
  5530  28B9  3400               	retlw	0
  5531                           
  5532                           	psect	stringtext12
  5533  28BA                     __pstringtext12:	
  5534  28BA                     STR_9:	
  5535  28BA  3457               	retlw	87	;'W'
  5536  28BB  3400               	retlw	0
  5537                           
  5538                           	psect	stringtext13
  5539  0000                     __pstringtext13:	
  5540                           
  5541                           ; #config settings
  5542  0000                     
  5543                           	psect	cinit
  5544  0010                     start_initialization:	
  5545  0010                     __initialization:		;BIGRAM
  5546                           
  5547                           ; Initialize objects allocated to BANK4
  5548  0010  306C               	movlw	low __pidataBANK4
  5549  0011  0084               	movwf	4
  5550  0012  3099               	movlw	(high __pidataBANK4)| (0+128)
  5551  0013  0085               	movwf	5
  5552  0014  3020               	movlw	low __pdataBANK4
  5553  0015  0086               	movwf	6
  5554  0016  3002               	movlw	high __pdataBANK4
  5555  0017  0087               	movwf	7
  5556  0018  3000               	movlw	0
  5557  0019  00FF               	movwf	btemp+1
  5558  001A  302C               	movlw	44
  5559  001B  31A6  261C  3180   	fcall	init_ram
  5560                           
  5561                           ; Clear objects allocated to BIGRAM
  5562  001E  30D8               	movlw	low (0+9944)
  5563  001F  0084               	movwf	4
  5564  0020  3026               	movlw	high (0+9944)
  5565  0021  0085               	movwf	5
  5566  0022  3018               	movlw	24
  5567  0023  00FE               	movwf	btemp
  5568  0024  3001               	movlw	1
  5569  0025  00FF               	movwf	btemp+1
  5570  0026  31A6  2610  3180   	fcall	clear_ram0
  5571                           
  5572                           ; Clear objects allocated to BANK1
  5573  0029  0141               	movlb	1	; select bank1
  5574  002A  01E8               	clrf	__pbssBANK1& (0+127)
  5575  002B  01E9               	clrf	(__pbssBANK1+1)& (0+127)
  5576  002C  01EA               	clrf	(__pbssBANK1+2)& (0+127)
  5577  002D  01EB               	clrf	(__pbssBANK1+3)& (0+127)
  5578  002E  01EC               	clrf	(__pbssBANK1+4)& (0+127)
  5579  002F  01ED               	clrf	(__pbssBANK1+5)& (0+127)
  5580                           
  5581                           ; Clear objects allocated to BANK2
  5582  0030  3020               	movlw	low __pbssBANK2
  5583  0031  0084               	movwf	4
  5584  0032  3001               	movlw	high __pbssBANK2
  5585  0033  0085               	movwf	5
  5586  0034  3030               	movlw	48
  5587  0035  00FE               	movwf	btemp
  5588  0036  3000               	movlw	0
  5589  0037  00FF               	movwf	btemp+1
  5590  0038  31A6  2610  3180   	fcall	clear_ram0
  5591                           
  5592                           ; Clear objects allocated to BANK3
  5593  003B  30A0               	movlw	low __pbssBANK3
  5594  003C  0084               	movwf	4
  5595  003D  3001               	movlw	high __pbssBANK3
  5596  003E  0085               	movwf	5
  5597  003F  3047               	movlw	71
  5598  0040  00FE               	movwf	btemp
  5599  0041  3000               	movlw	0
  5600  0042  00FF               	movwf	btemp+1
  5601  0043  31A6  2610  3180   	fcall	clear_ram0
  5602                           
  5603                           ; Clear objects allocated to BANK4
  5604  0046  304C               	movlw	low __pbssBANK4
  5605  0047  0084               	movwf	4
  5606  0048  3002               	movlw	high __pbssBANK4
  5607  0049  0085               	movwf	5
  5608  004A  301A               	movlw	26
  5609  004B  00FE               	movwf	btemp
  5610  004C  3000               	movlw	0
  5611  004D  00FF               	movwf	btemp+1
  5612  004E  31A6  2610         	fcall	clear_ram0
  5613  0050                     end_of_initialization:	
  5614                           ;End of C runtime variable initialization code
  5615                           
  5616  0050                     __end_of__initialization:	
  5617  0050  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  5618  0051  0140               	movlb	0
  5619  0052  3185  2DAC         	ljmp	_main	;jump to C main() function
  5620                           
  5621                           	psect	bssBANK1
  5622  00E8                     __pbssBANK1:	
  5623  00E8                     _ticks:	
  5624  00E8                     	ds	4
  5625  00EC                     _gps_configured:	
  5626  00EC                     	ds	1
  5627  00ED                     _eusart1RxLastError:	
  5628  00ED                     	ds	1
  5629                           
  5630                           	psect	bssBANK2
  5631  0120                     __pbssBANK2:	
  5632  0120                     main@F11368:	
  5633  0120                     	ds	16
  5634  0130                     bme280_get_sensor_data@F273:	
  5635  0130                     	ds	12
  5636  013C                     bme280_get_sensor_data@F271:	
  5637  013C                     	ds	8
  5638  0144                     ___g_timeout_start:	
  5639  0144                     	ds	4
  5640  0148                     _id:	
  5641  0148                     	ds	2
  5642  014A                     _checksum:	
  5643  014A                     	ds	6
  5644                           
  5645                           	psect	bssBANK3
  5646  01A0                     __pbssBANK3:	
  5647  01A0                     _EnvSensor:	
  5648  01A0                     	ds	51
  5649  01D3                     _csvField:	
  5650  01D3                     	ds	20
  5651                           
  5652                           	psect	bssBANK4
  5653  024C                     __pbssBANK4:	
  5654  024C                     get_calib_data@F376:	
  5655  024C                     	ds	26
  5656                           
  5657                           	psect	dataBANK4
  5658  0220                     __pdataBANK4:	
  5659  0220                     _setNavFlightMode:	
  5660  0220                     	ds	44
  5661                           
  5662                           	psect	inittext
  5663  261C                     init_ram:	
  5664  261C  00FE               	movwf	126
  5665  261D                     initloop:	
  5666  261D  0012               	moviw fsr0++
  5667  261E  001E               	movwi fsr1++
  5668  261F  3001               	movlw	1
  5669  2620  02FE               	subwf	126,f
  5670  2621  3000               	movlw	0
  5671  2622  3BFF               	subwfb	127,f
  5672  2623  087F               	movf	127,w
  5673  2624  047E               	iorwf	126,w
  5674  2625  1903               	btfsc	3,2
  5675  2626  3400               	retlw	0
  5676  2627  2E1D               	goto	initloop
  5677                           
  5678                           	psect	clrtext
  5679  2610                     clear_ram0:	
  5680                           ;	Called with FSR0 containing the base address, and
  5681                           ;	btemp/btemp+1 has the size to clear
  5682                           
  5683  2610  0064               	clrwdt	;clear the watchdog before getting into this loop
  5684  2611                     clrloop0:	
  5685  2611  0180               	clrf	0	;clear RAM location pointed to by FSR
  5686  2612  3101               	addfsr 0,1
  5687  2613  3001               	movlw	1
  5688  2614  02FE               	subwf	126,f
  5689  2615  3000               	movlw	0
  5690  2616  3BFF               	subwfb	127,f
  5691  2617  087F               	movf	127,w
  5692  2618  047E               	iorwf	126,w
  5693  2619  1903               	btfsc	3,2
  5694  261A  3400               	retlw	0	;all done for this memory range, return
  5695  261B  2E11               	goto	clrloop0	;have we reached the end yet?
  5696                           
  5697                           	psect	cstackBANK2
  5698  0150                     __pcstackBANK2:	
  5699  0150                     main@convertedNumber:	
  5700                           
  5701                           ; 16 bytes @ 0x0
  5702  0150                     	ds	16
  5703  0160                     main@end:	
  5704                           
  5705                           ; 2 bytes @ 0x10
  5706  0160                     	ds	2
  5707  0162                     main@sensor_data:	
  5708                           
  5709                           ; 12 bytes @ 0x12
  5710  0162                     	ds	12
  5711  016E                     main@index:	
  5712                           
  5713                           ; 2 bytes @ 0x1E
  5714  016E                     	ds	2
  5715                           
  5716                           	psect	cstackBANK1
  5717  00A0                     __pcstackBANK1:	
  5718  00A0                     put_device_to_sleep@reg_data:	
  5719  00A0                     compensate_pressure@var3:	
  5720                           ; 4 bytes @ 0x0
  5721                           
  5722                           
  5723                           ; 4 bytes @ 0x0
  5724  00A0                     	ds	4
  5725  00A4                     put_device_to_sleep@dev:	
  5726  00A4                     compensate_pressure@var4:	
  5727                           ; 1 bytes @ 0x4
  5728                           
  5729                           
  5730                           ; 4 bytes @ 0x4
  5731  00A4                     	ds	1
  5732  00A5                     put_device_to_sleep@rslt:	
  5733                           
  5734                           ; 1 bytes @ 0x5
  5735  00A5                     	ds	1
  5736  00A6                     put_device_to_sleep@settings:	
  5737                           
  5738                           ; 5 bytes @ 0x6
  5739  00A6                     	ds	2
  5740  00A8                     compensate_pressure@var5:	
  5741                           
  5742                           ; 4 bytes @ 0x8
  5743  00A8                     	ds	3
  5744  00AB                     bme280_set_sensor_settings@desired_settings:	
  5745  00AB                     bme280_set_sensor_mode@sensor_mode:	
  5746                           ; 1 bytes @ 0xB
  5747                           
  5748                           
  5749                           ; 1 bytes @ 0xB
  5750  00AB                     	ds	1
  5751  00AC                     bme280_set_sensor_settings@sensor_mode:	
  5752  00AC                     bme280_set_sensor_mode@last_set_mode:	
  5753                           ; 1 bytes @ 0xC
  5754                           
  5755  00AC                     _compensate_pressure$2717:	
  5756                           ; 1 bytes @ 0xC
  5757                           
  5758                           
  5759                           ; 4 bytes @ 0xC
  5760  00AC                     	ds	1
  5761  00AD                     bme280_set_sensor_settings@rslt:	
  5762  00AD                     bme280_set_sensor_mode@rslt:	
  5763                           ; 1 bytes @ 0xD
  5764                           
  5765                           
  5766                           ; 1 bytes @ 0xD
  5767  00AD                     	ds	1
  5768  00AE                     ??_BME280_Init:	
  5769                           
  5770                           ; 1 bytes @ 0xE
  5771  00AE                     	ds	2
  5772  00B0                     BME280_Init@settings_sel:	
  5773  00B0                     _compensate_pressure$2718:	
  5774                           ; 1 bytes @ 0x10
  5775                           
  5776                           
  5777                           ; 4 bytes @ 0x10
  5778  00B0                     	ds	1
  5779  00B1                     BME280_Init@rslt:	
  5780                           
  5781                           ; 1 bytes @ 0x11
  5782  00B1                     	ds	3
  5783  00B4                     compensate_pressure@uncomp_data:	
  5784                           
  5785                           ; 1 bytes @ 0x14
  5786  00B4                     	ds	1
  5787  00B5                     compensate_pressure@pressure_max:	
  5788                           
  5789                           ; 4 bytes @ 0x15
  5790  00B5                     	ds	4
  5791  00B9                     _compensate_pressure$2716:	
  5792                           
  5793                           ; 4 bytes @ 0x19
  5794  00B9                     	ds	8
  5795  00C1                     compensate_pressure@var2:	
  5796                           
  5797                           ; 4 bytes @ 0x21
  5798  00C1                     	ds	4
  5799  00C5                     compensate_pressure@pressure:	
  5800                           
  5801                           ; 4 bytes @ 0x25
  5802  00C5                     	ds	4
  5803  00C9                     compensate_pressure@var1:	
  5804                           
  5805                           ; 4 bytes @ 0x29
  5806  00C9                     	ds	4
  5807  00CD                     bme280_get_sensor_data@reg_data:	
  5808                           
  5809                           ; 8 bytes @ 0x2D
  5810  00CD                     	ds	8
  5811  00D5                     bme280_get_sensor_data@sensor_comp:	
  5812                           
  5813                           ; 1 bytes @ 0x35
  5814  00D5                     	ds	1
  5815  00D6                     bme280_get_sensor_data@rslt:	
  5816                           
  5817                           ; 1 bytes @ 0x36
  5818  00D6                     	ds	1
  5819  00D7                     bme280_get_sensor_data@uncomp_data:	
  5820                           
  5821                           ; 12 bytes @ 0x37
  5822  00D7                     	ds	12
  5823  00E3                     ??_main:	
  5824                           
  5825                           ; 1 bytes @ 0x43
  5826  00E3                     	ds	5
  5827                           
  5828                           	psect	cstackCOMMON
  5829  0070                     __pcstackCOMMON:	
  5830  0070                     ?_null_ptr_check:	
  5831  0070                     ??_null_ptr_check:	
  5832                           ; 1 bytes @ 0x0
  5833                           
  5834  0070                     ?_bme280_soft_reset:	
  5835                           ; 1 bytes @ 0x0
  5836                           
  5837  0070                     ?_get_calib_data:	
  5838                           ; 1 bytes @ 0x0
  5839                           
  5840  0070                     ?_interleave_reg_addr:	
  5841                           ; 1 bytes @ 0x0
  5842                           
  5843  0070                     ?_put_device_to_sleep:	
  5844                           ; 1 bytes @ 0x0
  5845                           
  5846  0070                     ?_are_settings_changed:	
  5847                           ; 1 bytes @ 0x0
  5848                           
  5849  0070                     ?_parse_device_settings:	
  5850                           ; 1 bytes @ 0x0
  5851                           
  5852  0070                     ?_bme280_parse_sensor_data:	
  5853                           ; 1 bytes @ 0x0
  5854                           
  5855  0070                     ?_fill_osr_press_settings:	
  5856                           ; 1 bytes @ 0x0
  5857                           
  5858  0070                     ?_fill_osr_temp_settings:	
  5859                           ; 1 bytes @ 0x0
  5860                           
  5861  0070                     ?_fill_filter_settings:	
  5862                           ; 1 bytes @ 0x0
  5863                           
  5864  0070                     ?_fill_standby_settings:	
  5865                           ; 1 bytes @ 0x0
  5866                           
  5867  0070                     ?_parse_temp_press_calib_data:	
  5868                           ; 1 bytes @ 0x0
  5869                           
  5870  0070                     ?_parse_humidity_calib_data:	
  5871                           ; 1 bytes @ 0x0
  5872                           
  5873  0070                     ?_TMR0_SetInterruptHandler:	
  5874                           ; 1 bytes @ 0x0
  5875                           
  5876  0070                     ?_TMR0_DefaultInterruptHandler:	
  5877                           ; 1 bytes @ 0x0
  5878                           
  5879  0070                     ??_TMR0_DefaultInterruptHandler:	
  5880                           ; 1 bytes @ 0x0
  5881                           
  5882  0070                     ?_EUSART1_SetFramingErrorHandler:	
  5883                           ; 1 bytes @ 0x0
  5884                           
  5885  0070                     ?_EUSART1_SetOverrunErrorHandler:	
  5886                           ; 1 bytes @ 0x0
  5887                           
  5888  0070                     ?_EUSART1_SetErrorHandler:	
  5889                           ; 1 bytes @ 0x0
  5890                           
  5891  0070                     ?_PMD_Initialize:	
  5892                           ; 1 bytes @ 0x0
  5893                           
  5894  0070                     ??_PMD_Initialize:	
  5895                           ; 1 bytes @ 0x0
  5896                           
  5897  0070                     ?_PIN_MANAGER_Initialize:	
  5898                           ; 1 bytes @ 0x0
  5899                           
  5900  0070                     ??_PIN_MANAGER_Initialize:	
  5901                           ; 1 bytes @ 0x0
  5902                           
  5903  0070                     ?_OSCILLATOR_Initialize:	
  5904                           ; 1 bytes @ 0x0
  5905                           
  5906  0070                     ??_OSCILLATOR_Initialize:	
  5907                           ; 1 bytes @ 0x0
  5908                           
  5909  0070                     ?_I2C_UserAlert:	
  5910                           ; 1 bytes @ 0x0
  5911                           
  5912  0070                     ?_Sleep:	
  5913                           ; 1 bytes @ 0x0
  5914                           
  5915  0070                     ?_InitTiming:	
  5916                           ; 1 bytes @ 0x0
  5917                           
  5918  0070                     ?_bme280_init:	
  5919                           ; 1 bytes @ 0x0
  5920                           
  5921  0070                     ?_TMR0_Initialize:	
  5922                           ; 1 bytes @ 0x0
  5923                           
  5924  0070                     ?_TMR0_ISR:	
  5925                           ; 1 bytes @ 0x0
  5926                           
  5927  0070                     ??_TMR0_ISR:	
  5928                           ; 1 bytes @ 0x0
  5929                           
  5930  0070                     ?_EUSART1_Initialize:	
  5931                           ; 1 bytes @ 0x0
  5932                           
  5933  0070                     ?_EUSART1_is_rx_ready:	
  5934                           ; 1 bytes @ 0x0
  5935                           
  5936  0070                     ??_EUSART1_is_rx_ready:	
  5937                           ; 1 bytes @ 0x0
  5938                           
  5939  0070                     ?_EUSART1_Read:	
  5940                           ; 1 bytes @ 0x0
  5941                           
  5942  0070                     ??_EUSART1_Read:	
  5943                           ; 1 bytes @ 0x0
  5944                           
  5945  0070                     ?_EUSART1_Write:	
  5946                           ; 1 bytes @ 0x0
  5947                           
  5948  0070                     ??_EUSART1_Write:	
  5949                           ; 1 bytes @ 0x0
  5950                           
  5951  0070                     ?_INTERRUPT_InterruptManager:	
  5952                           ; 1 bytes @ 0x0
  5953                           
  5954  0070                     ??_INTERRUPT_InterruptManager:	
  5955                           ; 1 bytes @ 0x0
  5956                           
  5957  0070                     ?_SYSTEM_Initialize:	
  5958                           ; 1 bytes @ 0x0
  5959                           
  5960  0070                     ?_I2C_Wait_SSPIF:	
  5961                           ; 1 bytes @ 0x0
  5962                           
  5963  0070                     ?_I2C_Init:	
  5964                           ; 1 bytes @ 0x0
  5965                           
  5966  0070                     ??_I2C_Init:	
  5967                           ; 1 bytes @ 0x0
  5968                           
  5969  0070                     ?_I2C_WriteByte:	
  5970                           ; 1 bytes @ 0x0
  5971                           
  5972  0070                     ?_I2C_ReadByte:	
  5973                           ; 1 bytes @ 0x0
  5974                           
  5975  0070                     ?_I2C_Stop:	
  5976                           ; 1 bytes @ 0x0
  5977                           
  5978  0070                     ?_BME280_Init:	
  5979                           ; 1 bytes @ 0x0
  5980                           
  5981  0070                     ?_ClearString:	
  5982                           ; 1 bytes @ 0x0
  5983                           
  5984  0070                     ?_ClearStringn:	
  5985                           ; 1 bytes @ 0x0
  5986                           
  5987  0070                     ?_ReverseString:	
  5988                           ; 1 bytes @ 0x0
  5989                           
  5990  0070                     ?_ClearTxData:	
  5991                           ; 1 bytes @ 0x0
  5992                           
  5993  0070                     ??_ClearTxData:	
  5994                           ; 1 bytes @ 0x0
  5995                           
  5996  0070                     ?_GPS_SendUBX:	
  5997                           ; 1 bytes @ 0x0
  5998                           
  5999  0070                     ?_GPS_HasAcknowledged:	
  6000                           ; 1 bytes @ 0x0
  6001                           
  6002  0070                     ??_GPS_HasAcknowledged:	
  6003                           ; 1 bytes @ 0x0
  6004                           
  6005  0070                     ?_SetupGPS:	
  6006                           ; 1 bytes @ 0x0
  6007                           
  6008  0070                     ?_ClearNMEA:	
  6009                           ; 1 bytes @ 0x0
  6010                           
  6011  0070                     ??_ClearNMEA:	
  6012                           ; 1 bytes @ 0x0
  6013                           
  6014  0070                     ?_PollGPS:	
  6015                           ; 1 bytes @ 0x0
  6016                           
  6017  0070                     ?_main:	
  6018                           ; 1 bytes @ 0x0
  6019                           
  6020  0070                     ?_TransmitBit:	
  6021                           ; 1 bytes @ 0x0
  6022                           
  6023  0070                     ?_TransmitChar:	
  6024                           ; 1 bytes @ 0x0
  6025                           
  6026  0070                     ?_TimerISR:	
  6027                           ; 1 bytes @ 0x0
  6028                           
  6029  0070                     ??_TimerISR:	
  6030                           ; 1 bytes @ 0x0
  6031                           
  6032  0070                     ?_strlen:	
  6033                           ; 1 bytes @ 0x0
  6034                           
  6035  0070                     ?_GetLengthUBX:	
  6036                           ; 2 bytes @ 0x0
  6037                           
  6038  0070                     ?___awdiv:	
  6039                           ; 2 bytes @ 0x0
  6040                           
  6041  0070                     ?___awmod:	
  6042                           ; 2 bytes @ 0x0
  6043                           
  6044  0070                     ?___lmul:	
  6045                           ; 2 bytes @ 0x0
  6046                           
  6047  0070                     ?___lldiv:	
  6048                           ; 4 bytes @ 0x0
  6049                           
  6050  0070                     ?___llmod:	
  6051                           ; 4 bytes @ 0x0
  6052                           
  6053  0070                     bme280_parse_sensor_data@uncomp_data:	
  6054                           ; 4 bytes @ 0x0
  6055                           
  6056  0070                     parse_device_settings@settings:	
  6057                           ; 1 bytes @ 0x0
  6058                           
  6059  0070                     interleave_reg_addr@temp_buff:	
  6060                           ; 1 bytes @ 0x0
  6061                           
  6062  0070                     parse_temp_press_calib_data@dev:	
  6063                           ; 1 bytes @ 0x0
  6064                           
  6065  0070                     parse_humidity_calib_data@dev:	
  6066                           ; 1 bytes @ 0x0
  6067                           
  6068  0070                     are_settings_changed@desired_settings:	
  6069                           ; 1 bytes @ 0x0
  6070                           
  6071  0070                     EUSART1_Write@txData:	
  6072                           ; 1 bytes @ 0x0
  6073                           
  6074  0070                     I2C_UserAlert@status:	
  6075                           ; 1 bytes @ 0x0
  6076                           
  6077  0070                     fill_filter_settings@settings:	
  6078                           ; 1 bytes @ 0x0
  6079                           
  6080  0070                     fill_standby_settings@settings:	
  6081                           ; 2 bytes @ 0x0
  6082                           
  6083  0070                     fill_osr_press_settings@settings:	
  6084                           ; 2 bytes @ 0x0
  6085                           
  6086  0070                     fill_osr_temp_settings@settings:	
  6087                           ; 2 bytes @ 0x0
  6088                           
  6089  0070                     TMR0_SetInterruptHandler@InterruptHandler:	
  6090                           ; 2 bytes @ 0x0
  6091                           
  6092  0070                     EUSART1_SetFramingErrorHandler@interruptHandler:	
  6093                           ; 2 bytes @ 0x0
  6094                           
  6095  0070                     EUSART1_SetOverrunErrorHandler@interruptHandler:	
  6096                           ; 2 bytes @ 0x0
  6097                           
  6098  0070                     EUSART1_SetErrorHandler@interruptHandler:	
  6099                           ; 2 bytes @ 0x0
  6100                           
  6101  0070                     ClearStringn@length:	
  6102                           ; 2 bytes @ 0x0
  6103                           
  6104  0070                     ___awdiv@divisor:	
  6105                           ; 2 bytes @ 0x0
  6106                           
  6107  0070                     ___awmod@divisor:	
  6108                           ; 2 bytes @ 0x0
  6109                           
  6110  0070                     strlen@s:	
  6111                           ; 2 bytes @ 0x0
  6112                           
  6113  0070                     Sleep@ms:	
  6114                           ; 2 bytes @ 0x0
  6115                           
  6116  0070                     ___lmul@multiplier:	
  6117                           ; 4 bytes @ 0x0
  6118                           
  6119  0070                     ___lldiv@divisor:	
  6120                           ; 4 bytes @ 0x0
  6121                           
  6122  0070                     ___llmod@divisor:	
  6123                           ; 4 bytes @ 0x0
  6124                           
  6125                           
  6126                           ; 4 bytes @ 0x0
  6127  0070                     	ds	1
  6128  0071                     ??_are_settings_changed:	
  6129  0071                     ??_parse_device_settings:	
  6130                           ; 1 bytes @ 0x1
  6131                           
  6132  0071                     ??_bme280_parse_sensor_data:	
  6133                           ; 1 bytes @ 0x1
  6134                           
  6135  0071                     ??_parse_temp_press_calib_data:	
  6136                           ; 1 bytes @ 0x1
  6137                           
  6138  0071                     ??_parse_humidity_calib_data:	
  6139                           ; 1 bytes @ 0x1
  6140                           
  6141  0071                     interleave_reg_addr@reg_data:	
  6142                           ; 1 bytes @ 0x1
  6143                           
  6144  0071                     are_settings_changed@sub_settings:	
  6145                           ; 1 bytes @ 0x1
  6146                           
  6147                           
  6148                           ; 1 bytes @ 0x1
  6149  0071                     	ds	1
  6150  0072                     ??_fill_osr_press_settings:	
  6151  0072                     ??_fill_osr_temp_settings:	
  6152                           ; 1 bytes @ 0x2
  6153                           
  6154  0072                     ??_fill_filter_settings:	
  6155                           ; 1 bytes @ 0x2
  6156                           
  6157  0072                     ??_fill_standby_settings:	
  6158                           ; 1 bytes @ 0x2
  6159                           
  6160  0072                     ??_TMR0_SetInterruptHandler:	
  6161                           ; 1 bytes @ 0x2
  6162                           
  6163  0072                     ??_EUSART1_SetFramingErrorHandler:	
  6164                           ; 1 bytes @ 0x2
  6165                           
  6166  0072                     ??_EUSART1_SetOverrunErrorHandler:	
  6167                           ; 1 bytes @ 0x2
  6168                           
  6169  0072                     ??_EUSART1_SetErrorHandler:	
  6170                           ; 1 bytes @ 0x2
  6171                           
  6172  0072                     ??_strlen:	
  6173                           ; 1 bytes @ 0x2
  6174                           
  6175  0072                     ??_InitTiming:	
  6176                           ; 1 bytes @ 0x2
  6177                           
  6178  0072                     ??_TMR0_Initialize:	
  6179                           ; 1 bytes @ 0x2
  6180                           
  6181  0072                     ??_EUSART1_Initialize:	
  6182                           ; 1 bytes @ 0x2
  6183                           
  6184  0072                     ??_SYSTEM_Initialize:	
  6185                           ; 1 bytes @ 0x2
  6186                           
  6187  0072                     ??_ClearStringn:	
  6188                           ; 1 bytes @ 0x2
  6189                           
  6190  0072                     interleave_reg_addr@len:	
  6191                           ; 1 bytes @ 0x2
  6192                           
  6193  0072                     parse_temp_press_calib_data@calib_data:	
  6194                           ; 1 bytes @ 0x2
  6195                           
  6196  0072                     are_settings_changed@settings_changed:	
  6197                           ; 1 bytes @ 0x2
  6198                           
  6199  0072                     null_ptr_check@rslt:	
  6200                           ; 1 bytes @ 0x2
  6201                           
  6202  0072                     ClearTxData@i:	
  6203                           ; 1 bytes @ 0x2
  6204                           
  6205  0072                     ClearNMEA@i:	
  6206                           ; 2 bytes @ 0x2
  6207                           
  6208  0072                     ___awdiv@dividend:	
  6209                           ; 2 bytes @ 0x2
  6210                           
  6211  0072                     ___awmod@dividend:	
  6212                           ; 2 bytes @ 0x2
  6213                           
  6214                           
  6215                           ; 2 bytes @ 0x2
  6216  0072                     	ds	1
  6217  0073                     ??_interleave_reg_addr:	
  6218  0073                     ??_GetLengthUBX:	
  6219                           ; 1 bytes @ 0x3
  6220                           
  6221  0073                     parse_device_settings@reg_data:	
  6222                           ; 1 bytes @ 0x3
  6223                           
  6224  0073                     parse_temp_press_calib_data@reg_data:	
  6225                           ; 1 bytes @ 0x3
  6226                           
  6227  0073                     null_ptr_check@dev:	
  6228                           ; 1 bytes @ 0x3
  6229                           
  6230  0073                     ClearStringn@str:	
  6231                           ; 1 bytes @ 0x3
  6232                           
  6233  0073                     GetLengthUBX@data:	
  6234                           ; 1 bytes @ 0x3
  6235                           
  6236  0073                     strlen@a:	
  6237                           ; 1 bytes @ 0x3
  6238                           
  6239                           
  6240                           ; 2 bytes @ 0x3
  6241  0073                     	ds	1
  6242  0074                     ??_Sleep:	
  6243  0074                     ??_GPS_SendUBX:	
  6244                           ; 1 bytes @ 0x4
  6245                           
  6246  0074                     ??___awdiv:	
  6247                           ; 1 bytes @ 0x4
  6248                           
  6249  0074                     ??___awmod:	
  6250                           ; 1 bytes @ 0x4
  6251                           
  6252  0074                     parse_humidity_calib_data@dig_H4_lsb:	
  6253                           ; 1 bytes @ 0x4
  6254                           
  6255  0074                     ClearStringn@i:	
  6256                           ; 2 bytes @ 0x4
  6257                           
  6258  0074                     ___lmul@multiplicand:	
  6259                           ; 2 bytes @ 0x4
  6260                           
  6261  0074                     ___lldiv@dividend:	
  6262                           ; 4 bytes @ 0x4
  6263                           
  6264  0074                     ___llmod@dividend:	
  6265                           ; 4 bytes @ 0x4
  6266                           
  6267                           
  6268                           ; 4 bytes @ 0x4
  6269  0074                     	ds	1
  6270  0075                     ??_ClearString:	
  6271  0075                     ?_WriteGPS:	
  6272                           ; 1 bytes @ 0x5
  6273                           
  6274  0075                     ?_Insert:	
  6275                           ; 1 bytes @ 0x5
  6276                           
  6277  0075                     ?_crc16_update:	
  6278                           ; 2 bytes @ 0x5
  6279                           
  6280  0075                     fill_filter_settings@reg_data:	
  6281                           ; 2 bytes @ 0x5
  6282                           
  6283  0075                     fill_standby_settings@reg_data:	
  6284                           ; 1 bytes @ 0x5
  6285                           
  6286  0075                     fill_osr_press_settings@reg_data:	
  6287                           ; 1 bytes @ 0x5
  6288                           
  6289  0075                     fill_osr_temp_settings@reg_data:	
  6290                           ; 1 bytes @ 0x5
  6291                           
  6292  0075                     ___awdiv@counter:	
  6293                           ; 1 bytes @ 0x5
  6294                           
  6295  0075                     ___awmod@counter:	
  6296                           ; 1 bytes @ 0x5
  6297                           
  6298  0075                     Insert@dest:	
  6299                           ; 1 bytes @ 0x5
  6300                           
  6301  0075                     WriteGPS@message:	
  6302                           ; 2 bytes @ 0x5
  6303                           
  6304  0075                     GPS_SendUBX@length:	
  6305                           ; 2 bytes @ 0x5
  6306                           
  6307  0075                     crc16_update@pData:	
  6308                           ; 2 bytes @ 0x5
  6309                           
  6310                           
  6311                           ; 2 bytes @ 0x5
  6312  0075                     	ds	1
  6313  0076                     ?_GetAtRowCSV:	
  6314  0076                     interleave_reg_addr@reg_addr:	
  6315                           ; 1 bytes @ 0x6
  6316                           
  6317  0076                     ___awdiv@sign:	
  6318                           ; 1 bytes @ 0x6
  6319                           
  6320  0076                     ___awmod@sign:	
  6321                           ; 1 bytes @ 0x6
  6322                           
  6323  0076                     parse_humidity_calib_data@dig_H4_msb:	
  6324                           ; 1 bytes @ 0x6
  6325                           
  6326  0076                     ClearString@counti:	
  6327                           ; 2 bytes @ 0x6
  6328                           
  6329  0076                     GetAtRowCSV@src:	
  6330                           ; 2 bytes @ 0x6
  6331                           
  6332                           
  6333                           ; 2 bytes @ 0x6
  6334  0076                     	ds	1
  6335  0077                     ??_WriteGPS:	
  6336  0077                     interleave_reg_addr@index:	
  6337                           ; 1 bytes @ 0x7
  6338                           
  6339  0077                     Insert@src:	
  6340                           ; 1 bytes @ 0x7
  6341                           
  6342  0077                     GPS_SendUBX@i:	
  6343                           ; 1 bytes @ 0x7
  6344                           
  6345  0077                     crc16_update@length:	
  6346                           ; 2 bytes @ 0x7
  6347                           
  6348  0077                     ___awdiv@quotient:	
  6349                           ; 2 bytes @ 0x7
  6350                           
  6351                           
  6352                           ; 2 bytes @ 0x7
  6353  0077                     	ds	1
  6354  0078                     ??___lmul:	
  6355  0078                     ??___lldiv:	
  6356                           ; 1 bytes @ 0x8
  6357                           
  6358  0078                     ??___llmod:	
  6359                           ; 1 bytes @ 0x8
  6360                           
  6361  0078                     parse_humidity_calib_data@dig_H5_lsb:	
  6362                           ; 1 bytes @ 0x8
  6363                           
  6364  0078                     ClearString@i:	
  6365                           ; 2 bytes @ 0x8
  6366                           
  6367  0078                     GetAtRowCSV@column:	
  6368                           ; 2 bytes @ 0x8
  6369                           
  6370  0078                     Insert@index:	
  6371                           ; 2 bytes @ 0x8
  6372                           
  6373  0078                     WriteGPS@counti:	
  6374                           ; 2 bytes @ 0x8
  6375                           
  6376  0078                     Sleep@start:	
  6377                           ; 2 bytes @ 0x8
  6378                           
  6379  0078                     ___lmul@product:	
  6380                           ; 4 bytes @ 0x8
  6381                           
  6382                           
  6383                           ; 4 bytes @ 0x8
  6384  0078                     	ds	1
  6385  0079                     ??_ReverseString:	
  6386  0079                     GPS_SendUBX@data:	
  6387                           ; 1 bytes @ 0x9
  6388                           
  6389  0079                     ___llmod@counter:	
  6390                           ; 1 bytes @ 0x9
  6391                           
  6392  0079                     crc16_update@wCrc:	
  6393                           ; 1 bytes @ 0x9
  6394                           
  6395  0079                     ___lldiv@quotient:	
  6396                           ; 2 bytes @ 0x9
  6397                           
  6398                           
  6399                           ; 4 bytes @ 0x9
  6400  0079                     	ds	1
  6401  007A                     ??_GetAtRowCSV:	
  6402  007A                     ClearString@str:	
  6403                           ; 1 bytes @ 0xA
  6404                           
  6405  007A                     parse_humidity_calib_data@dig_H5_msb:	
  6406                           ; 1 bytes @ 0xA
  6407                           
  6408  007A                     Insert@destLimit:	
  6409                           ; 2 bytes @ 0xA
  6410                           
  6411  007A                     WriteGPS@i:	
  6412                           ; 2 bytes @ 0xA
  6413                           
  6414                           
  6415                           ; 2 bytes @ 0xA
  6416  007A                     	ds	1
  6417  007B                     ?_IntToString:	
  6418  007B                     ??_crc16_update:	
  6419                           ; 1 bytes @ 0xB
  6420                           
  6421  007B                     ?_strcmp:	
  6422                           ; 1 bytes @ 0xB
  6423                           
  6424  007B                     IntToString@n:	
  6425                           ; 2 bytes @ 0xB
  6426                           
  6427  007B                     strcmp@r:	
  6428                           ; 2 bytes @ 0xB
  6429                           
  6430                           
  6431                           ; 2 bytes @ 0xB
  6432  007B                     	ds	1
  6433  007C                     ??_DebugAlert:	
  6434  007C                     ??_InsertString:	
  6435                           ; 1 bytes @ 0xC
  6436                           
  6437  007C                     ??_SetupGPS:	
  6438                           ; 1 bytes @ 0xC
  6439                           
  6440  007C                     ??_TransmitBit:	
  6441                           ; 1 bytes @ 0xC
  6442                           
  6443  007C                     ??___aldiv:	
  6444                           ; 1 bytes @ 0xC
  6445                           
  6446  007C                     ?_InsertTxDataSep:	
  6447                           ; 1 bytes @ 0xC
  6448                           
  6449  007C                     parse_humidity_calib_data@calib_data:	
  6450                           ; 2 bytes @ 0xC
  6451                           
  6452  007C                     TransmitBit@b:	
  6453                           ; 1 bytes @ 0xC
  6454                           
  6455  007C                     InsertTxDataSep@index:	
  6456                           ; 1 bytes @ 0xC
  6457                           
  6458                           
  6459                           ; 2 bytes @ 0xC
  6460  007C                     	ds	1
  6461  007D                     ??_I2C_UserAlert:	
  6462  007D                     ??_strcmp:	
  6463                           ; 1 bytes @ 0xD
  6464                           
  6465  007D                     ??_I2C_WriteByte:	
  6466                           ; 1 bytes @ 0xD
  6467                           
  6468  007D                     ??_I2C_ReadByte:	
  6469                           ; 1 bytes @ 0xD
  6470                           
  6471  007D                     ??_I2C_Stop:	
  6472                           ; 1 bytes @ 0xD
  6473                           
  6474  007D                     ??_TransmitChar:	
  6475                           ; 1 bytes @ 0xD
  6476                           
  6477  007D                     parse_humidity_calib_data@reg_data:	
  6478                           ; 1 bytes @ 0xD
  6479                           
  6480  007D                     I2C_WriteByte@data:	
  6481                           ; 1 bytes @ 0xD
  6482                           
  6483  007D                     IntToString@dest:	
  6484                           ; 1 bytes @ 0xD
  6485                           
  6486  007D                     ___lldiv@counter:	
  6487                           ; 1 bytes @ 0xD
  6488                           
  6489                           
  6490                           ; 1 bytes @ 0xD
  6491  007D                     	ds	1
  6492  007E                     ??_crc16:	
  6493  007E                     ??_InsertTxData:	
  6494                           ; 1 bytes @ 0xE
  6495                           
  6496                           
  6497                           	psect	cstackBANK0
  6498  0020                     __pcstackBANK0:	
  6499                           ; 1 bytes @ 0xE
  6500                           
  6501  0020                     ?_DebugAlert:	
  6502  0020                     ??_Insert:	
  6503                           ; 1 bytes @ 0x0
  6504                           
  6505  0020                     ?___aldiv:	
  6506                           ; 1 bytes @ 0x0
  6507                           
  6508  0020                     crc16_update@i:	
  6509                           ; 4 bytes @ 0x0
  6510                           
  6511  0020                     TransmitChar@byte:	
  6512                           ; 1 bytes @ 0x0
  6513                           
  6514  0020                     DebugAlert@delay_high:	
  6515                           ; 1 bytes @ 0x0
  6516                           
  6517  0020                     GetAtRowCSV@counti:	
  6518                           ; 2 bytes @ 0x0
  6519                           
  6520  0020                     ReverseString@halfway:	
  6521                           ; 2 bytes @ 0x0
  6522                           
  6523  0020                     bme280_parse_sensor_data@data_xlsb:	
  6524                           ; 2 bytes @ 0x0
  6525                           
  6526  0020                     GPS_HasAcknowledged@startTime:	
  6527                           ; 4 bytes @ 0x0
  6528                           
  6529  0020                     ___aldiv@divisor:	
  6530                           ; 4 bytes @ 0x0
  6531                           
  6532                           
  6533                           ; 4 bytes @ 0x0
  6534  0020                     	ds	1
  6535  0021                     ?_crc16:	
  6536  0021                     crc16@data:	
  6537                           ; 2 bytes @ 0x1
  6538                           
  6539  0021                     TransmitChar@i:	
  6540                           ; 2 bytes @ 0x1
  6541                           
  6542                           
  6543                           ; 2 bytes @ 0x1
  6544  0021                     	ds	1
  6545  0022                     ReverseString@temp:	
  6546  0022                     DebugAlert@delay_low:	
  6547                           ; 1 bytes @ 0x2
  6548                           
  6549  0022                     GetAtRowCSV@col:	
  6550                           ; 2 bytes @ 0x2
  6551                           
  6552                           
  6553                           ; 2 bytes @ 0x2
  6554  0022                     	ds	1
  6555  0023                     ?_TransmitString:	
  6556  0023                     ReverseString@opposite:	
  6557                           ; 1 bytes @ 0x3
  6558                           
  6559  0023                     crc16@crc:	
  6560                           ; 1 bytes @ 0x3
  6561                           
  6562  0023                     TransmitString@message:	
  6563                           ; 2 bytes @ 0x3
  6564                           
  6565                           
  6566                           ; 2 bytes @ 0x3
  6567  0023                     	ds	1
  6568  0024                     DebugAlert@num_flashes:	
  6569  0024                     GPS_HasAcknowledged@ackByte:	
  6570                           ; 1 bytes @ 0x4
  6571                           
  6572  0024                     GetAtRowCSV@index:	
  6573                           ; 1 bytes @ 0x4
  6574                           
  6575  0024                     ReverseString@counti:	
  6576                           ; 2 bytes @ 0x4
  6577                           
  6578  0024                     bme280_parse_sensor_data@data_lsb:	
  6579                           ; 2 bytes @ 0x4
  6580                           
  6581  0024                     ___aldiv@dividend:	
  6582                           ; 4 bytes @ 0x4
  6583                           
  6584                           
  6585                           ; 4 bytes @ 0x4
  6586  0024                     	ds	1
  6587  0025                     ??_TransmitString:	
  6588  0025                     DebugAlert@i:	
  6589                           ; 1 bytes @ 0x5
  6590                           
  6591  0025                     Insert@length:	
  6592                           ; 2 bytes @ 0x5
  6593                           
  6594  0025                     GPS_HasAcknowledged@ackPacket:	
  6595                           ; 2 bytes @ 0x5
  6596                           
  6597                           
  6598                           ; 10 bytes @ 0x5
  6599  0025                     	ds	1
  6600  0026                     GetAtRowCSV@i:	
  6601  0026                     ReverseString@i:	
  6602                           ; 2 bytes @ 0x6
  6603                           
  6604  0026                     TransmitString@counti:	
  6605                           ; 2 bytes @ 0x6
  6606                           
  6607                           
  6608                           ; 2 bytes @ 0x6
  6609  0026                     	ds	1
  6610  0027                     ??_I2C_Wait_SSPIF:	
  6611  0027                     Insert@i:	
  6612                           ; 1 bytes @ 0x7
  6613                           
  6614                           
  6615                           ; 2 bytes @ 0x7
  6616  0027                     	ds	1
  6617  0028                     ReverseString@str:	
  6618  0028                     ___aldiv@counter:	
  6619                           ; 1 bytes @ 0x8
  6620                           
  6621  0028                     strcmp@l:	
  6622                           ; 1 bytes @ 0x8
  6623                           
  6624  0028                     TransmitString@i:	
  6625                           ; 1 bytes @ 0x8
  6626                           
  6627  0028                     bme280_parse_sensor_data@data_msb:	
  6628                           ; 2 bytes @ 0x8
  6629                           
  6630                           
  6631                           ; 4 bytes @ 0x8
  6632  0028                     	ds	1
  6633  0029                     ?_UIntToHexString:	
  6634  0029                     ??_IntToString:	
  6635                           ; 1 bytes @ 0x9
  6636                           
  6637  0029                     ?_UIntToString:	
  6638                           ; 1 bytes @ 0x9
  6639                           
  6640  0029                     ??_InsertTxDataSep:	
  6641                           ; 1 bytes @ 0x9
  6642                           
  6643  0029                     ?_InsertString:	
  6644                           ; 1 bytes @ 0x9
  6645                           
  6646  0029                     ___aldiv@sign:	
  6647                           ; 2 bytes @ 0x9
  6648                           
  6649  0029                     InsertString@dest:	
  6650                           ; 1 bytes @ 0x9
  6651                           
  6652  0029                     UIntToHexString@n:	
  6653                           ; 2 bytes @ 0x9
  6654                           
  6655  0029                     UIntToString@n:	
  6656                           ; 4 bytes @ 0x9
  6657                           
  6658                           
  6659                           ; 4 bytes @ 0x9
  6660  0029                     	ds	1
  6661  002A                     ___aldiv@quotient:	
  6662                           
  6663                           ; 4 bytes @ 0xA
  6664  002A                     	ds	1
  6665  002B                     ?_WriteEnvSensor:	
  6666  002B                     I2C_ReadByte@ackbit:	
  6667                           ; 1 bytes @ 0xB
  6668                           
  6669  002B                     WriteEnvSensor@dev_id:	
  6670                           ; 1 bytes @ 0xB
  6671                           
  6672  002B                     IntToString@sign:	
  6673                           ; 1 bytes @ 0xB
  6674                           
  6675  002B                     InsertString@src:	
  6676                           ; 1 bytes @ 0xB
  6677                           
  6678                           
  6679                           ; 2 bytes @ 0xB
  6680  002B                     	ds	1
  6681  002C                     bme280_parse_sensor_data@reg_data:	
  6682  002C                     I2C_ReadByte@rcvdata:	
  6683                           ; 1 bytes @ 0xC
  6684                           
  6685  002C                     WriteEnvSensor@reg_addr:	
  6686                           ; 1 bytes @ 0xC
  6687                           
  6688  002C                     IntToString@i:	
  6689                           ; 1 bytes @ 0xC
  6690                           
  6691                           
  6692                           ; 2 bytes @ 0xC
  6693  002C                     	ds	1
  6694  002D                     ?_ReadEnvSensor:	
  6695  002D                     ReadEnvSensor@dev_id:	
  6696                           ; 1 bytes @ 0xD
  6697                           
  6698  002D                     WriteEnvSensor@reg_data:	
  6699                           ; 1 bytes @ 0xD
  6700                           
  6701  002D                     UIntToHexString@dest:	
  6702                           ; 1 bytes @ 0xD
  6703                           
  6704  002D                     UIntToString@dest:	
  6705                           ; 1 bytes @ 0xD
  6706                           
  6707  002D                     InsertString@index:	
  6708                           ; 1 bytes @ 0xD
  6709                           
  6710                           
  6711                           ; 2 bytes @ 0xD
  6712  002D                     	ds	1
  6713  002E                     ??_UIntToHexString:	
  6714  002E                     ??_UIntToString:	
  6715                           ; 1 bytes @ 0xE
  6716                           
  6717  002E                     ?_compensate_temperature:	
  6718                           ; 1 bytes @ 0xE
  6719                           
  6720  002E                     ?_compensate_pressure:	
  6721                           ; 4 bytes @ 0xE
  6722                           
  6723  002E                     ?_compensate_humidity:	
  6724                           ; 4 bytes @ 0xE
  6725                           
  6726  002E                     compensate_temperature@calib_data:	
  6727                           ; 4 bytes @ 0xE
  6728                           
  6729  002E                     compensate_pressure@calib_data:	
  6730                           ; 1 bytes @ 0xE
  6731                           
  6732  002E                     compensate_humidity@calib_data:	
  6733                           ; 1 bytes @ 0xE
  6734                           
  6735  002E                     ReadEnvSensor@reg_addr:	
  6736                           ; 1 bytes @ 0xE
  6737                           
  6738  002E                     WriteEnvSensor@len:	
  6739                           ; 1 bytes @ 0xE
  6740                           
  6741                           
  6742                           ; 2 bytes @ 0xE
  6743  002E                     	ds	1
  6744  002F                     ReadEnvSensor@reg_data:	
  6745  002F                     GPS_HasAcknowledged@data:	
  6746                           ; 1 bytes @ 0xF
  6747                           
  6748  002F                     InsertString@destLimit:	
  6749                           ; 1 bytes @ 0xF
  6750                           
  6751                           
  6752                           ; 2 bytes @ 0xF
  6753  002F                     	ds	1
  6754  0030                     ??_WriteEnvSensor:	
  6755  0030                     GPS_HasAcknowledged@ackByteID:	
  6756                           ; 1 bytes @ 0x10
  6757                           
  6758  0030                     ReadEnvSensor@len:	
  6759                           ; 1 bytes @ 0x10
  6760                           
  6761  0030                     UIntToString@i:	
  6762                           ; 2 bytes @ 0x10
  6763                           
  6764  0030                     _UIntToHexString$1811:	
  6765                           ; 2 bytes @ 0x10
  6766                           
  6767                           
  6768                           ; 4 bytes @ 0x10
  6769  0030                     	ds	1
  6770  0031                     WriteEnvSensor@rslt:	
  6771  0031                     GPS_HasAcknowledged@i:	
  6772                           ; 1 bytes @ 0x11
  6773                           
  6774  0031                     InsertString@counti:	
  6775                           ; 1 bytes @ 0x11
  6776                           
  6777                           
  6778                           ; 2 bytes @ 0x11
  6779  0031                     	ds	1
  6780  0032                     ??_compensate_temperature:	
  6781  0032                     ??_compensate_pressure:	
  6782                           ; 1 bytes @ 0x12
  6783                           
  6784  0032                     ??_compensate_humidity:	
  6785                           ; 1 bytes @ 0x12
  6786                           
  6787  0032                     ??_ReadEnvSensor:	
  6788                           ; 1 bytes @ 0x12
  6789                           
  6790  0032                     WriteEnvSensor@i:	
  6791                           ; 1 bytes @ 0x12
  6792                           
  6793                           
  6794                           ; 2 bytes @ 0x12
  6795  0032                     	ds	1
  6796  0033                     InsertString@i:	
  6797                           
  6798                           ; 2 bytes @ 0x13
  6799  0033                     	ds	1
  6800  0034                     ?_bme280_set_regs:	
  6801  0034                     bme280_set_regs@reg_data:	
  6802                           ; 1 bytes @ 0x14
  6803                           
  6804  0034                     ReadEnvSensor@rslt:	
  6805                           ; 1 bytes @ 0x14
  6806                           
  6807  0034                     UIntToHexString@remainder:	
  6808                           ; 1 bytes @ 0x14
  6809                           
  6810                           
  6811                           ; 4 bytes @ 0x14
  6812  0034                     	ds	1
  6813  0035                     ?_InsertTxData:	
  6814  0035                     bme280_set_regs@len:	
  6815                           ; 2 bytes @ 0x15
  6816                           
  6817  0035                     ReadEnvSensor@i:	
  6818                           ; 1 bytes @ 0x15
  6819                           
  6820  0035                     InsertTxData@index:	
  6821                           ; 2 bytes @ 0x15
  6822                           
  6823                           
  6824                           ; 2 bytes @ 0x15
  6825  0035                     	ds	1
  6826  0036                     bme280_set_regs@dev:	
  6827                           
  6828                           ; 1 bytes @ 0x16
  6829  0036                     	ds	1
  6830  0037                     ?_bme280_get_regs:	
  6831  0037                     ??_bme280_set_regs:	
  6832                           ; 1 bytes @ 0x17
  6833                           
  6834  0037                     bme280_get_regs@reg_data:	
  6835                           ; 1 bytes @ 0x17
  6836                           
  6837  0037                     InsertTxData@field:	
  6838                           ; 1 bytes @ 0x17
  6839                           
  6840                           
  6841                           ; 2 bytes @ 0x17
  6842  0037                     	ds	1
  6843  0038                     bme280_get_regs@len:	
  6844  0038                     UIntToHexString@i:	
  6845                           ; 2 bytes @ 0x18
  6846                           
  6847                           
  6848                           ; 4 bytes @ 0x18
  6849  0038                     	ds	1
  6850  0039                     ??_PollGPS:	
  6851                           
  6852                           ; 1 bytes @ 0x19
  6853  0039                     	ds	1
  6854  003A                     bme280_get_regs@dev:	
  6855  003A                     _compensate_humidity$2719:	
  6856                           ; 1 bytes @ 0x1A
  6857                           
  6858  003A                     bme280_set_regs@temp_buff:	
  6859                           ; 4 bytes @ 0x1A
  6860                           
  6861                           
  6862                           ; 20 bytes @ 0x1A
  6863  003A                     	ds	1
  6864  003B                     ??_bme280_get_regs:	
  6865                           
  6866                           ; 1 bytes @ 0x1B
  6867  003B                     	ds	1
  6868  003C                     _compensate_temperature$2715:	
  6869                           
  6870                           ; 4 bytes @ 0x1C
  6871  003C                     	ds	1
  6872  003D                     PollGPS@startTime:	
  6873                           
  6874                           ; 4 bytes @ 0x1D
  6875  003D                     	ds	1
  6876  003E                     bme280_get_regs@reg_addr:	
  6877  003E                     compensate_humidity@uncomp_data:	
  6878                           ; 1 bytes @ 0x1E
  6879                           
  6880                           
  6881                           ; 1 bytes @ 0x1E
  6882  003E                     	ds	1
  6883  003F                     bme280_get_regs@rslt:	
  6884                           
  6885                           ; 1 bytes @ 0x1F
  6886  003F                     	ds	1
  6887  0040                     ??_get_calib_data:	
  6888  0040                     ?_bme280_get_sensor_mode:	
  6889                           ; 1 bytes @ 0x20
  6890                           
  6891  0040                     bme280_get_sensor_mode@dev:	
  6892                           ; 1 bytes @ 0x20
  6893                           
  6894                           
  6895                           ; 1 bytes @ 0x20
  6896  0040                     	ds	1
  6897  0041                     ??_bme280_get_sensor_mode:	
  6898  0041                     PollGPS@counti:	
  6899                           ; 1 bytes @ 0x21
  6900                           
  6901                           
  6902                           ; 2 bytes @ 0x21
  6903  0041                     	ds	2
  6904  0043                     PollGPS@success:	
  6905  0043                     compensate_humidity@humidity:	
  6906                           ; 1 bytes @ 0x23
  6907                           
  6908  0043                     get_calib_data@calib_data:	
  6909                           ; 4 bytes @ 0x23
  6910                           
  6911                           
  6912                           ; 26 bytes @ 0x23
  6913  0043                     	ds	1
  6914  0044                     bme280_get_sensor_mode@rslt:	
  6915  0044                     _PollGPS$2720:	
  6916                           ; 1 bytes @ 0x24
  6917                           
  6918  0044                     compensate_temperature@temperature_max:	
  6919                           ; 1 bytes @ 0x24
  6920                           
  6921                           
  6922                           ; 4 bytes @ 0x24
  6923  0044                     	ds	1
  6924  0045                     bme280_get_sensor_mode@sensor_mode:	
  6925  0045                     PollGPS@eusart_complete:	
  6926                           ; 1 bytes @ 0x25
  6927                           
  6928                           
  6929                           ; 1 bytes @ 0x25
  6930  0045                     	ds	1
  6931  0046                     PollGPS@byte:	
  6932                           
  6933                           ; 1 bytes @ 0x26
  6934  0046                     	ds	1
  6935  0047                     PollGPS@i:	
  6936  0047                     compensate_humidity@var1:	
  6937                           ; 2 bytes @ 0x27
  6938                           
  6939                           
  6940                           ; 4 bytes @ 0x27
  6941  0047                     	ds	1
  6942  0048                     compensate_temperature@var1:	
  6943                           
  6944                           ; 4 bytes @ 0x28
  6945  0048                     	ds	1
  6946  0049                     PollGPS@index:	
  6947                           
  6948                           ; 2 bytes @ 0x29
  6949  0049                     	ds	2
  6950  004B                     compensate_humidity@var2:	
  6951                           
  6952                           ; 4 bytes @ 0x2B
  6953  004B                     	ds	1
  6954  004C                     compensate_temperature@uncomp_data:	
  6955                           
  6956                           ; 1 bytes @ 0x2C
  6957  004C                     	ds	1
  6958  004D                     compensate_temperature@var2:	
  6959                           
  6960                           ; 4 bytes @ 0x2D
  6961  004D                     	ds	1
  6962  004E                     bme280_set_regs@temp_len:	
  6963                           
  6964                           ; 2 bytes @ 0x2E
  6965  004E                     	ds	1
  6966  004F                     compensate_humidity@var4:	
  6967                           
  6968                           ; 4 bytes @ 0x2F
  6969  004F                     	ds	1
  6970  0050                     bme280_set_regs@reg_addr_cnt:	
  6971                           
  6972                           ; 1 bytes @ 0x30
  6973  0050                     	ds	1
  6974  0051                     bme280_set_regs@rslt:	
  6975  0051                     compensate_temperature@temperature:	
  6976                           ; 1 bytes @ 0x31
  6977                           
  6978                           
  6979                           ; 4 bytes @ 0x31
  6980  0051                     	ds	1
  6981  0052                     bme280_set_regs@reg_addr:	
  6982                           
  6983                           ; 1 bytes @ 0x32
  6984  0052                     	ds	1
  6985  0053                     ??_bme280_soft_reset:	
  6986  0053                     ?_set_filter_standby_settings:	
  6987                           ; 1 bytes @ 0x33
  6988                           
  6989  0053                     ?_write_power_mode:	
  6990                           ; 1 bytes @ 0x33
  6991                           
  6992  0053                     ?_set_osr_humidity_settings:	
  6993                           ; 1 bytes @ 0x33
  6994                           
  6995  0053                     ?_set_osr_press_temp_settings:	
  6996                           ; 1 bytes @ 0x33
  6997                           
  6998  0053                     write_power_mode@dev:	
  6999                           ; 1 bytes @ 0x33
  7000                           
  7001  0053                     set_osr_humidity_settings@settings:	
  7002                           ; 1 bytes @ 0x33
  7003                           
  7004  0053                     set_osr_press_temp_settings@settings:	
  7005                           ; 2 bytes @ 0x33
  7006                           
  7007  0053                     set_filter_standby_settings@settings:	
  7008                           ; 2 bytes @ 0x33
  7009                           
  7010  0053                     compensate_humidity@var5:	
  7011                           ; 2 bytes @ 0x33
  7012                           
  7013                           
  7014                           ; 4 bytes @ 0x33
  7015  0053                     	ds	1
  7016  0054                     ??_write_power_mode:	
  7017                           
  7018                           ; 1 bytes @ 0x34
  7019  0054                     	ds	1
  7020  0055                     set_osr_humidity_settings@dev:	
  7021  0055                     set_osr_press_temp_settings@dev:	
  7022                           ; 1 bytes @ 0x35
  7023                           
  7024  0055                     set_filter_standby_settings@dev:	
  7025                           ; 1 bytes @ 0x35
  7026                           
  7027                           
  7028                           ; 1 bytes @ 0x35
  7029  0055                     	ds	1
  7030  0056                     ??_set_filter_standby_settings:	
  7031  0056                     ??_set_osr_humidity_settings:	
  7032                           ; 1 bytes @ 0x36
  7033                           
  7034  0056                     ??_set_osr_press_temp_settings:	
  7035                           ; 1 bytes @ 0x36
  7036                           
  7037  0056                     bme280_soft_reset@soft_rst_cmd:	
  7038                           ; 1 bytes @ 0x36
  7039                           
  7040                           
  7041                           ; 1 bytes @ 0x36
  7042  0056                     	ds	1
  7043  0057                     bme280_soft_reset@rslt:	
  7044  0057                     write_power_mode@sensor_mode:	
  7045                           ; 1 bytes @ 0x37
  7046                           
  7047  0057                     compensate_humidity@var3:	
  7048                           ; 1 bytes @ 0x37
  7049                           
  7050                           
  7051                           ; 4 bytes @ 0x37
  7052  0057                     	ds	1
  7053  0058                     bme280_soft_reset@reg_addr:	
  7054  0058                     write_power_mode@rslt:	
  7055                           ; 1 bytes @ 0x38
  7056                           
  7057                           
  7058                           ; 1 bytes @ 0x38
  7059  0058                     	ds	1
  7060  0059                     bme280_soft_reset@dev:	
  7061  0059                     set_osr_humidity_settings@ctrl_hum:	
  7062                           ; 1 bytes @ 0x39
  7063                           
  7064  0059                     set_osr_press_temp_settings@desired_settings:	
  7065                           ; 1 bytes @ 0x39
  7066                           
  7067  0059                     set_filter_standby_settings@desired_settings:	
  7068                           ; 1 bytes @ 0x39
  7069                           
  7070  0059                     write_power_mode@reg_addr:	
  7071                           ; 1 bytes @ 0x39
  7072                           
  7073                           
  7074                           ; 1 bytes @ 0x39
  7075  0059                     	ds	1
  7076  005A                     set_osr_humidity_settings@ctrl_meas:	
  7077  005A                     set_osr_press_temp_settings@rslt:	
  7078                           ; 1 bytes @ 0x3A
  7079                           
  7080  005A                     set_filter_standby_settings@rslt:	
  7081                           ; 1 bytes @ 0x3A
  7082                           
  7083  005A                     write_power_mode@sensor_mode_reg_val:	
  7084                           ; 1 bytes @ 0x3A
  7085                           
  7086                           
  7087                           ; 1 bytes @ 0x3A
  7088  005A                     	ds	1
  7089  005B                     ?_bme280_compensate_data:	
  7090  005B                     bme280_compensate_data@uncomp_data:	
  7091                           ; 1 bytes @ 0x3B
  7092                           
  7093  005B                     set_osr_humidity_settings@rslt:	
  7094                           ; 1 bytes @ 0x3B
  7095                           
  7096  005B                     set_osr_press_temp_settings@reg_addr:	
  7097                           ; 1 bytes @ 0x3B
  7098                           
  7099  005B                     set_filter_standby_settings@reg_addr:	
  7100                           ; 1 bytes @ 0x3B
  7101                           
  7102                           
  7103                           ; 1 bytes @ 0x3B
  7104  005B                     	ds	1
  7105  005C                     bme280_compensate_data@comp_data:	
  7106  005C                     set_osr_humidity_settings@reg_addr:	
  7107                           ; 1 bytes @ 0x3C
  7108                           
  7109  005C                     set_osr_press_temp_settings@reg_data:	
  7110                           ; 1 bytes @ 0x3C
  7111                           
  7112  005C                     set_filter_standby_settings@reg_data:	
  7113                           ; 1 bytes @ 0x3C
  7114                           
  7115                           
  7116                           ; 1 bytes @ 0x3C
  7117  005C                     	ds	1
  7118  005D                     ?_set_osr_settings:	
  7119  005D                     bme280_compensate_data@calib_data:	
  7120                           ; 1 bytes @ 0x3D
  7121                           
  7122  005D                     set_osr_settings@settings:	
  7123                           ; 1 bytes @ 0x3D
  7124                           
  7125                           
  7126                           ; 2 bytes @ 0x3D
  7127  005D                     	ds	1
  7128  005E                     ??_bme280_compensate_data:	
  7129  005E                     get_calib_data@rslt:	
  7130                           ; 1 bytes @ 0x3E
  7131                           
  7132                           
  7133                           ; 1 bytes @ 0x3E
  7134  005E                     	ds	1
  7135  005F                     bme280_compensate_data@rslt:	
  7136  005F                     set_osr_settings@dev:	
  7137                           ; 1 bytes @ 0x3F
  7138                           
  7139  005F                     get_calib_data@dev:	
  7140                           ; 1 bytes @ 0x3F
  7141                           
  7142                           
  7143                           ; 1 bytes @ 0x3F
  7144  005F                     	ds	1
  7145  0060                     ??_set_osr_settings:	
  7146  0060                     ??_bme280_init:	
  7147                           ; 1 bytes @ 0x40
  7148                           
  7149  0060                     bme280_compensate_data@sensor_comp:	
  7150                           ; 1 bytes @ 0x40
  7151                           
  7152                           
  7153                           ; 1 bytes @ 0x40
  7154  0060                     	ds	1
  7155  0061                     ?_bme280_get_sensor_data:	
  7156  0061                     bme280_get_sensor_data@comp_data:	
  7157                           ; 1 bytes @ 0x41
  7158                           
  7159                           
  7160                           ; 1 bytes @ 0x41
  7161  0061                     	ds	1
  7162  0062                     bme280_get_sensor_data@dev:	
  7163  0062                     set_osr_settings@rslt:	
  7164                           ; 1 bytes @ 0x42
  7165                           
  7166                           
  7167                           ; 1 bytes @ 0x42
  7168  0062                     	ds	1
  7169  0063                     ??_bme280_get_sensor_data:	
  7170  0063                     bme280_init@try_count:	
  7171                           ; 1 bytes @ 0x43
  7172                           
  7173  0063                     set_osr_settings@desired_settings:	
  7174                           ; 1 bytes @ 0x43
  7175                           
  7176                           
  7177                           ; 1 bytes @ 0x43
  7178  0063                     	ds	1
  7179  0064                     ?_reload_device_settings:	
  7180  0064                     bme280_init@chip_id:	
  7181                           ; 1 bytes @ 0x44
  7182                           
  7183  0064                     reload_device_settings@dev:	
  7184                           ; 1 bytes @ 0x44
  7185                           
  7186                           
  7187                           ; 1 bytes @ 0x44
  7188  0064                     	ds	1
  7189  0065                     ??_reload_device_settings:	
  7190  0065                     bme280_init@rslt:	
  7191                           ; 1 bytes @ 0x45
  7192                           
  7193                           
  7194                           ; 1 bytes @ 0x45
  7195  0065                     	ds	1
  7196  0066                     bme280_init@dev:	
  7197                           
  7198                           ; 1 bytes @ 0x46
  7199  0066                     	ds	1
  7200  0067                     reload_device_settings@settings:	
  7201                           
  7202                           ; 1 bytes @ 0x47
  7203  0067                     	ds	1
  7204  0068                     reload_device_settings@rslt:	
  7205                           
  7206                           ; 1 bytes @ 0x48
  7207  0068                     	ds	1
  7208  0069                     ??_put_device_to_sleep:	
  7209                           
  7210                           ; 1 bytes @ 0x49
  7211  0069                     	ds	3
  7212  006C                     ?_bme280_set_sensor_settings:	
  7213  006C                     ?_bme280_set_sensor_mode:	
  7214                           ; 1 bytes @ 0x4C
  7215                           
  7216  006C                     bme280_set_sensor_settings@dev:	
  7217                           ; 1 bytes @ 0x4C
  7218                           
  7219  006C                     bme280_set_sensor_mode@dev:	
  7220                           ; 1 bytes @ 0x4C
  7221                           
  7222                           
  7223                           ; 1 bytes @ 0x4C
  7224  006C                     	ds	1
  7225  006D                     ??_bme280_set_sensor_settings:	
  7226  006D                     ??_bme280_set_sensor_mode:	
  7227                           ; 1 bytes @ 0x4D
  7228                           
  7229                           
  7230                           ; 1 bytes @ 0x4D
  7231  006D                     	ds	2
  7232                           
  7233                           	psect	maintext
  7234  05AC                     __pmaintext:	
  7235 ;;
  7236 ;;Main: autosize = 0, tempsize = 5, incstack = 0, save=0
  7237 ;;
  7238 ;; *************** function _main *****************
  7239 ;; Defined at:
  7240 ;;		line 602 in file "main.c"
  7241 ;; Parameters:    Size  Location     Type
  7242 ;;		None
  7243 ;; Auto vars:     Size  Location     Type
  7244 ;;  sensor_data    12   18[BANK2 ] struct bme280_data
  7245 ;;  end             2   16[BANK2 ] int 
  7246 ;;  convertedNum   16    0[BANK2 ] unsigned char [16]
  7247 ;;  index           2   30[BANK2 ] int 
  7248 ;; Return value:  Size  Location     Type
  7249 ;;                  1    wreg      void 
  7250 ;; Registers used:
  7251 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7252 ;; Tracked objects:
  7253 ;;		On entry : B3F/0
  7254 ;;		On exit  : 0/0
  7255 ;;		Unchanged: 0/0
  7256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7258 ;;      Locals:         0       0       0      32       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7259 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7260 ;;      Totals:         0       0       5      32       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7261 ;;Total ram usage:       37 bytes
  7262 ;; Hardware stack levels required when called:   17
  7263 ;; This function calls:
  7264 ;;		_BME280_Init
  7265 ;;		_ClearString
  7266 ;;		_ClearTxData
  7267 ;;		_DebugAlert
  7268 ;;		_InitTiming
  7269 ;;		_Insert
  7270 ;;		_InsertString
  7271 ;;		_IntToString
  7272 ;;		_PollGPS
  7273 ;;		_SYSTEM_Initialize
  7274 ;;		_SetupGPS
  7275 ;;		_Sleep
  7276 ;;		_TransmitString
  7277 ;;		_UIntToHexString
  7278 ;;		_UIntToString
  7279 ;;		_bme280_get_sensor_data
  7280 ;;		_crc16
  7281 ;;		_strlen
  7282 ;; This function is called by:
  7283 ;;		Startup code after reset
  7284 ;; This function uses a non-reentrant model
  7285 ;;
  7286                           
  7287                           
  7288                           ;psect for function _main
  7289  05AC                     _main:	
  7290                           
  7291                           ;main.c: 605:     SYSTEM_Initialize();
  7292                           
  7293                           ;incstack = 0
  7294 ;; hardware stack exceeded
  7295                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7296  05AC  31A6  2643  3185   	fcall	_SYSTEM_Initialize
  7297                           
  7298                           ;main.c: 606:     InitTiming();
  7299  05AF  31A5  25CC  3185   	fcall	_InitTiming
  7300                           
  7301                           ;main.c: 609:     BME280_Init();
  7302  05B2  3192  2274  3185   	fcall	_BME280_Init
  7303                           
  7304                           ;main.c: 612:     SetupGPS();
  7305  05B5  319D  257A  3185   	fcall	_SetupGPS
  7306  05B8                     l5462:	
  7307                           
  7308                           ;main.c: 616:     {;main.c: 617:         int index = 0;
  7309  05B8  0142               	movlb	2	; select bank2
  7310  05B9  01EE               	clrf	main@index^(0+256)
  7311  05BA  01EF               	clrf	(main@index+1)^(0+256)
  7312                           
  7313                           ;main.c: 618:         char convertedNumber[16] = {'\0'};
  7314  05BB  3050               	movlw	low main@convertedNumber
  7315  05BC  0086               	movwf	6
  7316  05BD  3001               	movlw	high main@convertedNumber
  7317  05BE  0087               	movwf	7
  7318  05BF  3010               	movlw	16
  7319  05C0  0141               	movlb	1	; select bank1
  7320  05C1  00E3               	movwf	??_main^(0+128)
  7321  05C2  3000               	movlw	0
  7322  05C3                     u5520:	
  7323  05C3  001E               	movwi fsr1++
  7324  05C4  0BE3               	decfsz	??_main^(0+128),f
  7325  05C5  2DC3               	goto	u5520
  7326                           
  7327                           ;main.c: 621:         ClearTxData();
  7328  05C6  31A7  2773  3185   	fcall	_ClearTxData
  7329                           
  7330                           ;main.c: 624:         index = InsertString(txdata, "Wisp-1", index, 140);
  7331  05C9  3064               	movlw	100
  7332  05CA  0140               	movlb	0	; select bank0
  7333  05CB  00A9               	movwf	InsertString@dest
  7334  05CC  3027               	movlw	39
  7335  05CD  00AA               	movwf	InsertString@dest+1
  7336  05CE  30AA               	movlw	low (STR_10| (0+32768))
  7337  05CF  00AB               	movwf	InsertString@src
  7338  05D0  30A8               	movlw	high (STR_10| (0+32768))
  7339  05D1  00AC               	movwf	InsertString@src+1
  7340  05D2  0142               	movlb	2	; select bank2
  7341  05D3  086F               	movf	(main@index+1)^(0+256),w
  7342  05D4  0140               	movlb	0	; select bank0
  7343  05D5  00AE               	movwf	InsertString@index+1
  7344  05D6  0142               	movlb	2	; select bank2
  7345  05D7  086E               	movf	main@index^(0+256),w
  7346  05D8  0140               	movlb	0	; select bank0
  7347  05D9  00AD               	movwf	InsertString@index
  7348  05DA  308C               	movlw	140
  7349  05DB  00AF               	movwf	InsertString@destLimit
  7350  05DC  3000               	movlw	0
  7351  05DD  00B0               	movwf	InsertString@destLimit+1
  7352  05DE  319F  2707  3185   	fcall	_InsertString
  7353  05E1  0140               	movlb	0	; select bank0
  7354  05E2  082A               	movf	?_InsertString+1,w
  7355  05E3  0142               	movlb	2	; select bank2
  7356  05E4  00EF               	movwf	(main@index+1)^(0+256)
  7357  05E5  0140               	movlb	0	; select bank0
  7358  05E6  0829               	movf	?_InsertString,w
  7359  05E7  0142               	movlb	2	; select bank2
  7360  05E8  00EE               	movwf	main@index^(0+256)
  7361                           
  7362                           ;main.c: 625:         index = Insert(txdata, ',', index, 140);
  7363  05E9  3064               	movlw	100
  7364  05EA  00F5               	movwf	Insert@dest
  7365  05EB  3027               	movlw	39
  7366  05EC  00F6               	movwf	Insert@dest+1
  7367  05ED  302C               	movlw	44
  7368  05EE  0141               	movlb	1	; select bank1
  7369  05EF  00E3               	movwf	??_main^(0+128)
  7370  05F0  0863               	movf	??_main^(0+128),w
  7371  05F1  00F7               	movwf	Insert@src
  7372  05F2  0142               	movlb	2	; select bank2
  7373  05F3  086F               	movf	(main@index+1)^(0+256),w
  7374  05F4  00F9               	movwf	Insert@index+1
  7375  05F5  086E               	movf	main@index^(0+256),w
  7376  05F6  00F8               	movwf	Insert@index
  7377  05F7  308C               	movlw	140
  7378  05F8  00FA               	movwf	Insert@destLimit
  7379  05F9  3000               	movlw	0
  7380  05FA  00FB               	movwf	Insert@destLimit+1
  7381  05FB  3192  22E1  3185   	fcall	_Insert
  7382  05FE  0876               	movf	?_Insert+1,w
  7383  05FF  0142               	movlb	2	; select bank2
  7384  0600  00EF               	movwf	(main@index+1)^(0+256)
  7385  0601  0875               	movf	?_Insert,w
  7386  0602  00EE               	movwf	main@index^(0+256)
  7387                           
  7388                           ;main.c: 626:         ClearString(convertedNumber);
  7389  0603  3050               	movlw	(low (main@convertedNumber| (0+256)))& (0+255)
  7390  0604  3198  2022  3185   	fcall	_ClearString
  7391                           
  7392                           ;main.c: 627:         IntToString(id, convertedNumber);
  7393  0607  0142               	movlb	2	; select bank2
  7394  0608  0849               	movf	(_id+1)^(0+256),w
  7395  0609  00FC               	movwf	IntToString@n+1
  7396  060A  0848               	movf	_id^(0+256),w
  7397  060B  00FB               	movwf	IntToString@n
  7398  060C  3050               	movlw	(low (main@convertedNumber| (0+256)))& (0+255)
  7399  060D  0141               	movlb	1	; select bank1
  7400  060E  00E3               	movwf	??_main^(0+128)
  7401  060F  0863               	movf	??_main^(0+128),w
  7402  0610  00FD               	movwf	IntToString@dest
  7403  0611  3191  21A0  3185   	fcall	_IntToString
  7404                           
  7405                           ;main.c: 628:         index = InsertString(txdata, convertedNumber, index, 140);
  7406  0614  3064               	movlw	100
  7407  0615  0140               	movlb	0	; select bank0
  7408  0616  00A9               	movwf	InsertString@dest
  7409  0617  3027               	movlw	39
  7410  0618  00AA               	movwf	InsertString@dest+1
  7411  0619  3050               	movlw	low main@convertedNumber
  7412  061A  00AB               	movwf	InsertString@src
  7413  061B  3001               	movlw	high main@convertedNumber
  7414  061C  00AC               	movwf	InsertString@src+1
  7415  061D  0142               	movlb	2	; select bank2
  7416  061E  086F               	movf	(main@index+1)^(0+256),w
  7417  061F  0140               	movlb	0	; select bank0
  7418  0620  00AE               	movwf	InsertString@index+1
  7419  0621  0142               	movlb	2	; select bank2
  7420  0622  086E               	movf	main@index^(0+256),w
  7421  0623  0140               	movlb	0	; select bank0
  7422  0624  00AD               	movwf	InsertString@index
  7423  0625  308C               	movlw	140
  7424  0626  00AF               	movwf	InsertString@destLimit
  7425  0627  3000               	movlw	0
  7426  0628  00B0               	movwf	InsertString@destLimit+1
  7427  0629  319F  2707  3185   	fcall	_InsertString
  7428  062C  0140               	movlb	0	; select bank0
  7429  062D  082A               	movf	?_InsertString+1,w
  7430  062E  0142               	movlb	2	; select bank2
  7431  062F  00EF               	movwf	(main@index+1)^(0+256)
  7432  0630  0140               	movlb	0	; select bank0
  7433  0631  0829               	movf	?_InsertString,w
  7434  0632  0142               	movlb	2	; select bank2
  7435  0633  00EE               	movwf	main@index^(0+256)
  7436                           
  7437                           ;main.c: 629:         index = Insert(txdata, ',', index, 140);
  7438  0634  3064               	movlw	100
  7439  0635  00F5               	movwf	Insert@dest
  7440  0636  3027               	movlw	39
  7441  0637  00F6               	movwf	Insert@dest+1
  7442  0638  302C               	movlw	44
  7443  0639  0141               	movlb	1	; select bank1
  7444  063A  00E3               	movwf	??_main^(0+128)
  7445  063B  0863               	movf	??_main^(0+128),w
  7446  063C  00F7               	movwf	Insert@src
  7447  063D  0142               	movlb	2	; select bank2
  7448  063E  086F               	movf	(main@index+1)^(0+256),w
  7449  063F  00F9               	movwf	Insert@index+1
  7450  0640  086E               	movf	main@index^(0+256),w
  7451  0641  00F8               	movwf	Insert@index
  7452  0642  308C               	movlw	140
  7453  0643  00FA               	movwf	Insert@destLimit
  7454  0644  3000               	movlw	0
  7455  0645  00FB               	movwf	Insert@destLimit+1
  7456  0646  3192  22E1  3185   	fcall	_Insert
  7457  0649  0876               	movf	?_Insert+1,w
  7458  064A  0142               	movlb	2	; select bank2
  7459  064B  00EF               	movwf	(main@index+1)^(0+256)
  7460  064C  0875               	movf	?_Insert,w
  7461  064D  00EE               	movwf	main@index^(0+256)
  7462                           
  7463                           ;main.c: 633:         if (PollGPS())
  7464  064E  318B  2305  3185   	fcall	_PollGPS
  7465  0651  3A00               	xorlw	0
  7466  0652  1903               	skipnz
  7467  0653  2FE2               	goto	l5526
  7468                           
  7469                           ;main.c: 637:         {;main.c: 638:             struct bme280_data sensor_data;;main.c:
      +                           639:             bme280_get_sensor_data(0x07, &sensor_data, &EnvSensor);
  7470  0654  3062               	movlw	(low (main@sensor_data| (0+256)))& (0+255)
  7471  0655  0141               	movlb	1	; select bank1
  7472  0656  00E3               	movwf	??_main^(0+128)
  7473  0657  0863               	movf	??_main^(0+128),w
  7474  0658  0140               	movlb	0	; select bank0
  7475  0659  00E1               	movwf	bme280_get_sensor_data@comp_data
  7476  065A  30A0               	movlw	(low (_EnvSensor| (0+256)))& (0+255)
  7477  065B  0141               	movlb	1	; select bank1
  7478  065C  00E4               	movwf	(??_main+1)^(0+128)
  7479  065D  0864               	movf	(??_main+1)^(0+128),w
  7480  065E  0140               	movlb	0	; select bank0
  7481  065F  00E2               	movwf	bme280_get_sensor_data@dev
  7482  0660  3007               	movlw	7
  7483  0661  3190  207A  3185   	fcall	_bme280_get_sensor_data
  7484                           
  7485                           ;main.c: 642:             index = strlen(txdata);
  7486  0664  3064               	movlw	100
  7487  0665  00F0               	movwf	strlen@s
  7488  0666  3027               	movlw	39
  7489  0667  00F1               	movwf	strlen@s+1
  7490  0668  31A6  26A0  3185   	fcall	_strlen
  7491  066B  0871               	movf	?_strlen+1,w
  7492  066C  0142               	movlb	2	; select bank2
  7493  066D  00EF               	movwf	(main@index+1)^(0+256)
  7494  066E  0870               	movf	?_strlen,w
  7495  066F  00EE               	movwf	main@index^(0+256)
  7496                           
  7497                           ;main.c: 645:             IntToString(sensor_data.temperature, convertedNumber);
  7498  0670  0867               	movf	((main@sensor_data+1)^(0+256)+4),w
  7499  0671  00FC               	movwf	IntToString@n+1
  7500  0672  0866               	movf	(main@sensor_data^(0+256)+4),w
  7501  0673  00FB               	movwf	IntToString@n
  7502  0674  3050               	movlw	(low (main@convertedNumber| (0+256)))& (0+255)
  7503  0675  0141               	movlb	1	; select bank1
  7504  0676  00E3               	movwf	??_main^(0+128)
  7505  0677  0863               	movf	??_main^(0+128),w
  7506  0678  00FD               	movwf	IntToString@dest
  7507  0679  3191  21A0  3185   	fcall	_IntToString
  7508                           
  7509                           ;main.c: 646:             index = InsertString(txdata, convertedNumber, index, 140);
  7510  067C  3064               	movlw	100
  7511  067D  0140               	movlb	0	; select bank0
  7512  067E  00A9               	movwf	InsertString@dest
  7513  067F  3027               	movlw	39
  7514  0680  00AA               	movwf	InsertString@dest+1
  7515  0681  3050               	movlw	low main@convertedNumber
  7516  0682  00AB               	movwf	InsertString@src
  7517  0683  3001               	movlw	high main@convertedNumber
  7518  0684  00AC               	movwf	InsertString@src+1
  7519  0685  0142               	movlb	2	; select bank2
  7520  0686  086F               	movf	(main@index+1)^(0+256),w
  7521  0687  0140               	movlb	0	; select bank0
  7522  0688  00AE               	movwf	InsertString@index+1
  7523  0689  0142               	movlb	2	; select bank2
  7524  068A  086E               	movf	main@index^(0+256),w
  7525  068B  0140               	movlb	0	; select bank0
  7526  068C  00AD               	movwf	InsertString@index
  7527  068D  308C               	movlw	140
  7528  068E  00AF               	movwf	InsertString@destLimit
  7529  068F  3000               	movlw	0
  7530  0690  00B0               	movwf	InsertString@destLimit+1
  7531  0691  319F  2707  3185   	fcall	_InsertString
  7532  0694  0140               	movlb	0	; select bank0
  7533  0695  082A               	movf	?_InsertString+1,w
  7534  0696  0142               	movlb	2	; select bank2
  7535  0697  00EF               	movwf	(main@index+1)^(0+256)
  7536  0698  0140               	movlb	0	; select bank0
  7537  0699  0829               	movf	?_InsertString,w
  7538  069A  0142               	movlb	2	; select bank2
  7539  069B  00EE               	movwf	main@index^(0+256)
  7540                           
  7541                           ;main.c: 647:             index = Insert(txdata, ',', index, 140);
  7542  069C  3064               	movlw	100
  7543  069D  00F5               	movwf	Insert@dest
  7544  069E  3027               	movlw	39
  7545  069F  00F6               	movwf	Insert@dest+1
  7546  06A0  302C               	movlw	44
  7547  06A1  0141               	movlb	1	; select bank1
  7548  06A2  00E3               	movwf	??_main^(0+128)
  7549  06A3  0863               	movf	??_main^(0+128),w
  7550  06A4  00F7               	movwf	Insert@src
  7551  06A5  0142               	movlb	2	; select bank2
  7552  06A6  086F               	movf	(main@index+1)^(0+256),w
  7553  06A7  00F9               	movwf	Insert@index+1
  7554  06A8  086E               	movf	main@index^(0+256),w
  7555  06A9  00F8               	movwf	Insert@index
  7556  06AA  308C               	movlw	140
  7557  06AB  00FA               	movwf	Insert@destLimit
  7558  06AC  3000               	movlw	0
  7559  06AD  00FB               	movwf	Insert@destLimit+1
  7560  06AE  3192  22E1  3185   	fcall	_Insert
  7561  06B1  0876               	movf	?_Insert+1,w
  7562  06B2  0142               	movlb	2	; select bank2
  7563  06B3  00EF               	movwf	(main@index+1)^(0+256)
  7564  06B4  0875               	movf	?_Insert,w
  7565  06B5  00EE               	movwf	main@index^(0+256)
  7566                           
  7567                           ;main.c: 648:             ClearString(convertedNumber);
  7568  06B6  3050               	movlw	(low (main@convertedNumber| (0+256)))& (0+255)
  7569  06B7  3198  2022  3185   	fcall	_ClearString
  7570                           
  7571                           ;main.c: 650:             UIntToString(sensor_data.pressure, convertedNumber);
  7572  06BA  0142               	movlb	2	; select bank2
  7573  06BB  0865               	movf	(main@sensor_data+3)^(0+256),w
  7574  06BC  0140               	movlb	0	; select bank0
  7575  06BD  00AC               	movwf	UIntToString@n+3
  7576  06BE  0142               	movlb	2	; select bank2
  7577  06BF  0864               	movf	(main@sensor_data+2)^(0+256),w
  7578  06C0  0140               	movlb	0	; select bank0
  7579  06C1  00AB               	movwf	UIntToString@n+2
  7580  06C2  0142               	movlb	2	; select bank2
  7581  06C3  0863               	movf	(main@sensor_data+1)^(0+256),w
  7582  06C4  0140               	movlb	0	; select bank0
  7583  06C5  00AA               	movwf	UIntToString@n+1
  7584  06C6  0142               	movlb	2	; select bank2
  7585  06C7  0862               	movf	main@sensor_data^(0+256),w
  7586  06C8  0140               	movlb	0	; select bank0
  7587  06C9  00A9               	movwf	UIntToString@n
  7588  06CA  3050               	movlw	(low (main@convertedNumber| (0+256)))& (0+255)
  7589  06CB  0141               	movlb	1	; select bank1
  7590  06CC  00E3               	movwf	??_main^(0+128)
  7591  06CD  0863               	movf	??_main^(0+128),w
  7592  06CE  0140               	movlb	0	; select bank0
  7593  06CF  00AD               	movwf	UIntToString@dest
  7594  06D0  319F  27AB  3185   	fcall	_UIntToString
  7595                           
  7596                           ;main.c: 651:             index = InsertString(txdata, convertedNumber, index, 140);
  7597  06D3  3064               	movlw	100
  7598  06D4  0140               	movlb	0	; select bank0
  7599  06D5  00A9               	movwf	InsertString@dest
  7600  06D6  3027               	movlw	39
  7601  06D7  00AA               	movwf	InsertString@dest+1
  7602  06D8  3050               	movlw	low main@convertedNumber
  7603  06D9  00AB               	movwf	InsertString@src
  7604  06DA  3001               	movlw	high main@convertedNumber
  7605  06DB  00AC               	movwf	InsertString@src+1
  7606  06DC  0142               	movlb	2	; select bank2
  7607  06DD  086F               	movf	(main@index+1)^(0+256),w
  7608  06DE  0140               	movlb	0	; select bank0
  7609  06DF  00AE               	movwf	InsertString@index+1
  7610  06E0  0142               	movlb	2	; select bank2
  7611  06E1  086E               	movf	main@index^(0+256),w
  7612  06E2  0140               	movlb	0	; select bank0
  7613  06E3  00AD               	movwf	InsertString@index
  7614  06E4  308C               	movlw	140
  7615  06E5  00AF               	movwf	InsertString@destLimit
  7616  06E6  3000               	movlw	0
  7617  06E7  00B0               	movwf	InsertString@destLimit+1
  7618  06E8  319F  2707  3185   	fcall	_InsertString
  7619  06EB  0140               	movlb	0	; select bank0
  7620  06EC  082A               	movf	?_InsertString+1,w
  7621  06ED  0142               	movlb	2	; select bank2
  7622  06EE  00EF               	movwf	(main@index+1)^(0+256)
  7623  06EF  0140               	movlb	0	; select bank0
  7624  06F0  0829               	movf	?_InsertString,w
  7625  06F1  0142               	movlb	2	; select bank2
  7626  06F2  00EE               	movwf	main@index^(0+256)
  7627                           
  7628                           ;main.c: 652:             index = Insert(txdata, ',', index, 140);
  7629  06F3  3064               	movlw	100
  7630  06F4  00F5               	movwf	Insert@dest
  7631  06F5  3027               	movlw	39
  7632  06F6  00F6               	movwf	Insert@dest+1
  7633  06F7  302C               	movlw	44
  7634  06F8  0141               	movlb	1	; select bank1
  7635  06F9  00E3               	movwf	??_main^(0+128)
  7636  06FA  0863               	movf	??_main^(0+128),w
  7637  06FB  00F7               	movwf	Insert@src
  7638  06FC  0142               	movlb	2	; select bank2
  7639  06FD  086F               	movf	(main@index+1)^(0+256),w
  7640  06FE  00F9               	movwf	Insert@index+1
  7641  06FF  086E               	movf	main@index^(0+256),w
  7642  0700  00F8               	movwf	Insert@index
  7643  0701  308C               	movlw	140
  7644  0702  00FA               	movwf	Insert@destLimit
  7645  0703  3000               	movlw	0
  7646  0704  00FB               	movwf	Insert@destLimit+1
  7647  0705  3192  22E1  3185   	fcall	_Insert
  7648  0708  0876               	movf	?_Insert+1,w
  7649  0709  0142               	movlb	2	; select bank2
  7650  070A  00EF               	movwf	(main@index+1)^(0+256)
  7651  070B  0875               	movf	?_Insert,w
  7652  070C  00EE               	movwf	main@index^(0+256)
  7653                           
  7654                           ;main.c: 653:             ClearString(convertedNumber);
  7655  070D  3050               	movlw	(low (main@convertedNumber| (0+256)))& (0+255)
  7656  070E  3198  2022  3185   	fcall	_ClearString
  7657                           
  7658                           ;main.c: 655:             UIntToString(sensor_data.humidity, convertedNumber);
  7659  0711  3008               	movlw	8
  7660  0712  3E62               	addlw	(low (main@sensor_data| (0+256)))& (0+255)
  7661  0713  0086               	movwf	6
  7662  0714  3001               	movlw	1	; select bank2/3
  7663  0715  0087               	movwf	7
  7664  0716  3F40               	moviw [0]fsr1
  7665  0717  0140               	movlb	0	; select bank0
  7666  0718  00A9               	movwf	UIntToString@n
  7667  0719  3F41               	moviw [1]fsr1
  7668  071A  00AA               	movwf	UIntToString@n+1
  7669  071B  3F42               	moviw [2]fsr1
  7670  071C  00AB               	movwf	UIntToString@n+2
  7671  071D  3F43               	moviw [3]fsr1
  7672  071E  00AC               	movwf	UIntToString@n+3
  7673  071F  3050               	movlw	(low (main@convertedNumber| (0+256)))& (0+255)
  7674  0720  0141               	movlb	1	; select bank1
  7675  0721  00E3               	movwf	??_main^(0+128)
  7676  0722  0863               	movf	??_main^(0+128),w
  7677  0723  0140               	movlb	0	; select bank0
  7678  0724  00AD               	movwf	UIntToString@dest
  7679  0725  319F  27AB  3185   	fcall	_UIntToString
  7680                           
  7681                           ;main.c: 656:             index = InsertString(txdata, convertedNumber, index, 140);
  7682  0728  3064               	movlw	100
  7683  0729  0140               	movlb	0	; select bank0
  7684  072A  00A9               	movwf	InsertString@dest
  7685  072B  3027               	movlw	39
  7686  072C  00AA               	movwf	InsertString@dest+1
  7687  072D  3050               	movlw	low main@convertedNumber
  7688  072E  00AB               	movwf	InsertString@src
  7689  072F  3001               	movlw	high main@convertedNumber
  7690  0730  00AC               	movwf	InsertString@src+1
  7691  0731  0142               	movlb	2	; select bank2
  7692  0732  086F               	movf	(main@index+1)^(0+256),w
  7693  0733  0140               	movlb	0	; select bank0
  7694  0734  00AE               	movwf	InsertString@index+1
  7695  0735  0142               	movlb	2	; select bank2
  7696  0736  086E               	movf	main@index^(0+256),w
  7697  0737  0140               	movlb	0	; select bank0
  7698  0738  00AD               	movwf	InsertString@index
  7699  0739  308C               	movlw	140
  7700  073A  00AF               	movwf	InsertString@destLimit
  7701  073B  3000               	movlw	0
  7702  073C  00B0               	movwf	InsertString@destLimit+1
  7703  073D  319F  2707  3185   	fcall	_InsertString
  7704  0740  0140               	movlb	0	; select bank0
  7705  0741  082A               	movf	?_InsertString+1,w
  7706  0742  0142               	movlb	2	; select bank2
  7707  0743  00EF               	movwf	(main@index+1)^(0+256)
  7708  0744  0140               	movlb	0	; select bank0
  7709  0745  0829               	movf	?_InsertString,w
  7710  0746  0142               	movlb	2	; select bank2
  7711  0747  00EE               	movwf	main@index^(0+256)
  7712                           
  7713                           ;main.c: 658:             int end = index;
  7714  0748  086F               	movf	(main@index+1)^(0+256),w
  7715  0749  00E1               	movwf	(main@end+1)^(0+256)
  7716  074A  086E               	movf	main@index^(0+256),w
  7717  074B  00E0               	movwf	main@end^(0+256)
  7718                           
  7719                           ;main.c: 661:             UIntToHexString(crc16(txdata), checksum);
  7720  074C  3064               	movlw	100
  7721  074D  0140               	movlb	0	; select bank0
  7722  074E  00A1               	movwf	crc16@data
  7723  074F  3027               	movlw	39
  7724  0750  00A2               	movwf	crc16@data+1
  7725  0751  31A7  27B5  3185   	fcall	_crc16
  7726  0754  0140               	movlb	0	; select bank0
  7727  0755  0821               	movf	?_crc16,w
  7728  0756  0141               	movlb	1	; select bank1
  7729  0757  00E3               	movwf	??_main^(0+128)
  7730  0758  0140               	movlb	0	; select bank0
  7731  0759  0822               	movf	?_crc16+1,w
  7732  075A  0141               	movlb	1	; select bank1
  7733  075B  00E4               	movwf	(??_main^(0+128)+1)
  7734  075C  01E5               	clrf	(??_main^(0+128)+2)
  7735  075D  01E6               	clrf	(??_main^(0+128)+3)
  7736  075E  0866               	movf	(??_main+3)^(0+128),w
  7737  075F  0140               	movlb	0	; select bank0
  7738  0760  00AC               	movwf	UIntToHexString@n+3
  7739  0761  0141               	movlb	1	; select bank1
  7740  0762  0865               	movf	(??_main+2)^(0+128),w
  7741  0763  0140               	movlb	0	; select bank0
  7742  0764  00AB               	movwf	UIntToHexString@n+2
  7743  0765  0141               	movlb	1	; select bank1
  7744  0766  0864               	movf	(??_main+1)^(0+128),w
  7745  0767  0140               	movlb	0	; select bank0
  7746  0768  00AA               	movwf	UIntToHexString@n+1
  7747  0769  0141               	movlb	1	; select bank1
  7748  076A  0863               	movf	??_main^(0+128),w
  7749  076B  0140               	movlb	0	; select bank0
  7750  076C  00A9               	movwf	UIntToHexString@n
  7751  076D  304A               	movlw	(low (_checksum| (0+256)))& (0+255)
  7752  076E  0141               	movlb	1	; select bank1
  7753  076F  00E7               	movwf	(??_main+4)^(0+128)
  7754  0770  0867               	movf	(??_main+4)^(0+128),w
  7755  0771  0140               	movlb	0	; select bank0
  7756  0772  00AD               	movwf	UIntToHexString@dest
  7757  0773  3193  23CC  3185   	fcall	_UIntToHexString
  7758                           
  7759                           ;main.c: 663:             index = Insert(txdata, '*', end, 140);
  7760  0776  3064               	movlw	100
  7761  0777  00F5               	movwf	Insert@dest
  7762  0778  3027               	movlw	39
  7763  0779  00F6               	movwf	Insert@dest+1
  7764  077A  302A               	movlw	42
  7765  077B  0141               	movlb	1	; select bank1
  7766  077C  00E3               	movwf	??_main^(0+128)
  7767  077D  0863               	movf	??_main^(0+128),w
  7768  077E  00F7               	movwf	Insert@src
  7769  077F  0142               	movlb	2	; select bank2
  7770  0780  0861               	movf	(main@end+1)^(0+256),w
  7771  0781  00F9               	movwf	Insert@index+1
  7772  0782  0860               	movf	main@end^(0+256),w
  7773  0783  00F8               	movwf	Insert@index
  7774  0784  308C               	movlw	140
  7775  0785  00FA               	movwf	Insert@destLimit
  7776  0786  3000               	movlw	0
  7777  0787  00FB               	movwf	Insert@destLimit+1
  7778  0788  3192  22E1  3185   	fcall	_Insert
  7779  078B  0876               	movf	?_Insert+1,w
  7780  078C  0142               	movlb	2	; select bank2
  7781  078D  00EF               	movwf	(main@index+1)^(0+256)
  7782  078E  0875               	movf	?_Insert,w
  7783  078F  00EE               	movwf	main@index^(0+256)
  7784                           
  7785                           ;main.c: 664:             index = InsertString(txdata, checksum, index, 140);
  7786  0790  3064               	movlw	100
  7787  0791  0140               	movlb	0	; select bank0
  7788  0792  00A9               	movwf	InsertString@dest
  7789  0793  3027               	movlw	39
  7790  0794  00AA               	movwf	InsertString@dest+1
  7791  0795  304A               	movlw	low _checksum
  7792  0796  00AB               	movwf	InsertString@src
  7793  0797  3001               	movlw	high _checksum
  7794  0798  00AC               	movwf	InsertString@src+1
  7795  0799  0142               	movlb	2	; select bank2
  7796  079A  086F               	movf	(main@index+1)^(0+256),w
  7797  079B  0140               	movlb	0	; select bank0
  7798  079C  00AE               	movwf	InsertString@index+1
  7799  079D  0142               	movlb	2	; select bank2
  7800  079E  086E               	movf	main@index^(0+256),w
  7801  079F  0140               	movlb	0	; select bank0
  7802  07A0  00AD               	movwf	InsertString@index
  7803  07A1  308C               	movlw	140
  7804  07A2  00AF               	movwf	InsertString@destLimit
  7805  07A3  3000               	movlw	0
  7806  07A4  00B0               	movwf	InsertString@destLimit+1
  7807  07A5  319F  2707  3185   	fcall	_InsertString
  7808  07A8  0140               	movlb	0	; select bank0
  7809  07A9  082A               	movf	?_InsertString+1,w
  7810  07AA  0142               	movlb	2	; select bank2
  7811  07AB  00EF               	movwf	(main@index+1)^(0+256)
  7812  07AC  0140               	movlb	0	; select bank0
  7813  07AD  0829               	movf	?_InsertString,w
  7814  07AE  0142               	movlb	2	; select bank2
  7815  07AF  00EE               	movwf	main@index^(0+256)
  7816                           
  7817                           ;main.c: 665:             index = Insert(txdata, '\n', index, 140);
  7818  07B0  3064               	movlw	100
  7819  07B1  00F5               	movwf	Insert@dest
  7820  07B2  3027               	movlw	39
  7821  07B3  00F6               	movwf	Insert@dest+1
  7822  07B4  300A               	movlw	10
  7823  07B5  0141               	movlb	1	; select bank1
  7824  07B6  00E3               	movwf	??_main^(0+128)
  7825  07B7  0863               	movf	??_main^(0+128),w
  7826  07B8  00F7               	movwf	Insert@src
  7827  07B9  0142               	movlb	2	; select bank2
  7828  07BA  086F               	movf	(main@index+1)^(0+256),w
  7829  07BB  00F9               	movwf	Insert@index+1
  7830  07BC  086E               	movf	main@index^(0+256),w
  7831  07BD  00F8               	movwf	Insert@index
  7832  07BE  308C               	movlw	140
  7833  07BF  00FA               	movwf	Insert@destLimit
  7834  07C0  3000               	movlw	0
  7835  07C1  00FB               	movwf	Insert@destLimit+1
  7836  07C2  3192  22E1  3185   	fcall	_Insert
  7837  07C5  0876               	movf	?_Insert+1,w
  7838  07C6  0142               	movlb	2	; select bank2
  7839  07C7  00EF               	movwf	(main@index+1)^(0+256)
  7840  07C8  0875               	movf	?_Insert,w
  7841  07C9  00EE               	movwf	main@index^(0+256)
  7842                           
  7843                           ;main.c: 668:             id++;
  7844  07CA  3001               	movlw	1
  7845  07CB  07C8               	addwf	_id^(0+256),f
  7846  07CC  3000               	movlw	0
  7847  07CD  3DC9               	addwfc	(_id+1)^(0+256),f
  7848  07CE  0140               	movlb	0	; select bank0
  7849  07CF  1518               	bsf	24,2	;volatile
  7850                           
  7851                           ;main.c: 670:             TransmitString("$$$$");
  7852  07D0  30B1               	movlw	low (STR_11| (0+32768))
  7853  07D1  00A3               	movwf	TransmitString@message
  7854  07D2  30A8               	movlw	high (STR_11| (0+32768))
  7855  07D3  00A4               	movwf	TransmitString@message+1
  7856  07D4  3199  2140  3185   	fcall	_TransmitString
  7857                           
  7858                           ;main.c: 671:             TransmitString(txdata);
  7859  07D7  3064               	movlw	100
  7860  07D8  0140               	movlb	0	; select bank0
  7861  07D9  00A3               	movwf	TransmitString@message
  7862  07DA  3027               	movlw	39
  7863  07DB  00A4               	movwf	TransmitString@message+1
  7864  07DC  3199  2140  3185   	fcall	_TransmitString
  7865  07DF  0140               	movlb	0	; select bank0
  7866  07E0  1118               	bcf	24,2	;volatile
  7867  07E1  2FF4               	goto	l832
  7868  07E2                     l5526:	
  7869                           
  7870                           ;main.c: 676:         {;main.c: 678:             DebugAlert(400, 200, 3);
  7871  07E2  3090               	movlw	144
  7872  07E3  0140               	movlb	0	; select bank0
  7873  07E4  00A0               	movwf	DebugAlert@delay_high
  7874  07E5  3001               	movlw	1
  7875  07E6  00A1               	movwf	DebugAlert@delay_high+1
  7876  07E7  30C8               	movlw	200
  7877  07E8  00A2               	movwf	DebugAlert@delay_low
  7878  07E9  3000               	movlw	0
  7879  07EA  00A3               	movwf	DebugAlert@delay_low+1
  7880  07EB  3003               	movlw	3
  7881  07EC  0141               	movlb	1	; select bank1
  7882  07ED  00E3               	movwf	??_main^(0+128)
  7883  07EE  0863               	movf	??_main^(0+128),w
  7884  07EF  0140               	movlb	0	; select bank0
  7885  07F0  00A4               	movwf	DebugAlert@num_flashes
  7886  07F1  3198  20C1  3185   	fcall	_DebugAlert
  7887  07F4                     l832:	
  7888                           ;main.c: 679:         }
  7889                           
  7890                           
  7891                           ;main.c: 681:         Sleep(5000);
  7892  07F4  3000               	movlw	0
  7893  07F5  00F3               	movwf	Sleep@ms+3
  7894  07F6  3000               	movlw	0
  7895  07F7  00F2               	movwf	Sleep@ms+2
  7896  07F8  3013               	movlw	19
  7897  07F9  00F1               	movwf	Sleep@ms+1
  7898  07FA  3088               	movlw	136
  7899  07FB  00F0               	movwf	Sleep@ms
  7900  07FC  3199  2115  3185   	fcall	_Sleep
  7901  07FF  2DB8               	goto	l5462
  7902  0800                     __end_of_main:	
  7903                           
  7904                           	psect	text1
  7905  27B5                     __ptext1:	
  7906 ;; *************** function _crc16 *****************
  7907 ;; Defined at:
  7908 ;;		line 22 in file "rtty.c"
  7909 ;; Parameters:    Size  Location     Type
  7910 ;;  data            2    1[BANK0 ] PTR unsigned char 
  7911 ;;		 -> txdata(140), 
  7912 ;; Auto vars:     Size  Location     Type
  7913 ;;  crc             2    3[BANK0 ] unsigned short 
  7914 ;; Return value:  Size  Location     Type
  7915 ;;                  2    1[BANK0 ] unsigned short 
  7916 ;; Registers used:
  7917 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7918 ;; Tracked objects:
  7919 ;;		On entry : 0/0
  7920 ;;		On exit  : 0/0
  7921 ;;		Unchanged: 0/0
  7922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7923 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7924 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7926 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7927 ;;Total ram usage:        4 bytes
  7928 ;; Hardware stack levels used:    1
  7929 ;; Hardware stack levels required when called:    4
  7930 ;; This function calls:
  7931 ;;		_crc16_update
  7932 ;;		_strlen
  7933 ;; This function is called by:
  7934 ;;		_main
  7935 ;; This function uses a non-reentrant model
  7936 ;;
  7937                           
  7938                           
  7939                           ;psect for function _crc16
  7940  27B5                     _crc16:	
  7941                           
  7942                           ;rtty.c: 22: uint16_t crc16(char* data);rtty.c: 23: {;rtty.c: 24:     uint16_t crc = 0xF
      +                          FFF;
  7943                           
  7944                           ;incstack = 0
  7945                           ; Regs used in _crc16: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7946  27B5  30FF               	movlw	255
  7947  27B6  0140               	movlb	0	; select bank0
  7948  27B7  00A3               	movwf	crc16@crc
  7949  27B8  30FF               	movlw	255
  7950  27B9  00A4               	movwf	crc16@crc+1
  7951                           
  7952                           ;rtty.c: 25:     crc = crc16_update(data, strlen(data), crc);
  7953  27BA  0822               	movf	crc16@data+1,w
  7954  27BB  00F6               	movwf	crc16_update@pData+1
  7955  27BC  0821               	movf	crc16@data,w
  7956  27BD  00F5               	movwf	crc16_update@pData
  7957  27BE  0822               	movf	crc16@data+1,w
  7958  27BF  00F1               	movwf	strlen@s+1
  7959  27C0  0821               	movf	crc16@data,w
  7960  27C1  00F0               	movwf	strlen@s
  7961  27C2  31A6  26A0  31A7   	fcall	_strlen
  7962  27C5  0871               	movf	?_strlen+1,w
  7963  27C6  00F8               	movwf	crc16_update@length+1
  7964  27C7  0870               	movf	?_strlen,w
  7965  27C8  00F7               	movwf	crc16_update@length
  7966  27C9  0140               	movlb	0	; select bank0
  7967  27CA  0824               	movf	crc16@crc+1,w
  7968  27CB  00FA               	movwf	crc16_update@wCrc+1
  7969  27CC  0823               	movf	crc16@crc,w
  7970  27CD  00F9               	movwf	crc16_update@wCrc
  7971  27CE  3188  2001         	fcall	_crc16_update
  7972  27D0  0876               	movf	?_crc16_update+1,w
  7973  27D1  0140               	movlb	0	; select bank0
  7974  27D2  00A4               	movwf	crc16@crc+1
  7975  27D3  0875               	movf	?_crc16_update,w
  7976  27D4  00A3               	movwf	crc16@crc
  7977                           
  7978                           ;rtty.c: 26:     return crc & 0xFFFF;
  7979  27D5  0824               	movf	crc16@crc+1,w
  7980  27D6  00A2               	movwf	?_crc16+1
  7981  27D7  0823               	movf	crc16@crc,w
  7982  27D8  00A1               	movwf	?_crc16
  7983  27D9  0008               	return
  7984  27DA                     __end_of_crc16:	
  7985                           
  7986                           	psect	text2
  7987  0801                     __ptext2:	
  7988 ;; *************** function _crc16_update *****************
  7989 ;; Defined at:
  7990 ;;		line 11 in file "rtty.c"
  7991 ;; Parameters:    Size  Location     Type
  7992 ;;  pData           2    5[COMMON] PTR unsigned char 
  7993 ;;		 -> txdata(140), 
  7994 ;;  length          2    7[COMMON] int 
  7995 ;;  wCrc            2    9[COMMON] unsigned short 
  7996 ;; Auto vars:     Size  Location     Type
  7997 ;;  i               1    0[BANK0 ] unsigned char 
  7998 ;; Return value:  Size  Location     Type
  7999 ;;                  2    5[COMMON] unsigned short 
  8000 ;; Registers used:
  8001 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8002 ;; Tracked objects:
  8003 ;;		On entry : 0/0
  8004 ;;		On exit  : 0/0
  8005 ;;		Unchanged: 0/0
  8006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8007 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8008 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8009 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8010 ;;      Totals:         9       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8011 ;;Total ram usage:       10 bytes
  8012 ;; Hardware stack levels used:    1
  8013 ;; Hardware stack levels required when called:    3
  8014 ;; This function calls:
  8015 ;;		Nothing
  8016 ;; This function is called by:
  8017 ;;		_crc16
  8018 ;; This function uses a non-reentrant model
  8019 ;;
  8020                           
  8021                           
  8022                           ;psect for function _crc16_update
  8023  0801                     _crc16_update:	
  8024  0801                     l4348:	
  8025                           ;rtty.c: 11: uint16_t crc16_update(char* pData, int length, uint16_t wCrc);rtty.c: 12: {
      +                          ;rtty.c: 13:     uint8_t i;;rtty.c: 14:     while (length--) {
  8026                           
  8027                           ;incstack = 0
  8028                           ; Regs used in _crc16_update: [wreg+fsr1l+fsr1h+status,2+status,0]
  8029                           
  8030                           
  8031                           ;rtty.c: 14:     while (length--) {
  8032  0801  30FF               	movlw	255
  8033  0802  07F7               	addwf	crc16_update@length,f
  8034  0803  30FF               	movlw	255
  8035  0804  3DF8               	addwfc	crc16_update@length+1,f
  8036  0805  0A77               	incf	crc16_update@length,w
  8037  0806  1903               	btfsc	3,2
  8038  0807  0A78               	incf	crc16_update@length+1,w
  8039  0808  1903               	btfsc	3,2
  8040  0809  2839               	goto	l4350
  8041                           
  8042                           ;rtty.c: 15:         wCrc ^= *(unsigned char *)pData++ << 8;
  8043  080A  0875               	movf	crc16_update@pData,w
  8044  080B  0086               	movwf	6
  8045  080C  0876               	movf	crc16_update@pData+1,w
  8046  080D  0087               	movwf	7
  8047  080E  0801               	movf	1,w
  8048  080F  00FB               	movwf	??_crc16_update
  8049  0810  01FC               	clrf	??_crc16_update+1
  8050  0811  087B               	movf	??_crc16_update,w
  8051  0812  00FC               	movwf	??_crc16_update+1
  8052  0813  01FB               	clrf	??_crc16_update
  8053  0814  087B               	movf	??_crc16_update,w
  8054  0815  06F9               	xorwf	crc16_update@wCrc,f
  8055  0816  087C               	movf	??_crc16_update+1,w
  8056  0817  06FA               	xorwf	crc16_update@wCrc+1,f
  8057  0818  3001               	movlw	1
  8058  0819  07F5               	addwf	crc16_update@pData,f
  8059  081A  3000               	movlw	0
  8060  081B  3DF6               	addwfc	crc16_update@pData+1,f
  8061                           
  8062                           ;rtty.c: 16:         for (i=0; i < 8; i++)
  8063  081C  0140               	movlb	0	; select bank0
  8064  081D  01A0               	clrf	crc16_update@i
  8065  081E                     l848:	
  8066                           
  8067                           ;rtty.c: 17:             wCrc = wCrc & 0x8000 ? (wCrc << 1) ^ 0x1021 : wCrc << 1;
  8068  081E  1BFA               	btfsc	crc16_update@wCrc+1,7
  8069  081F  2824               	goto	l4344
  8070  0820  3579               	lslf	crc16_update@wCrc,w
  8071  0821  00F9               	movwf	crc16_update@wCrc
  8072  0822  0D7A               	rlf	crc16_update@wCrc+1,w
  8073  0823  282F               	goto	L1
  8074  0824                     l4344:	
  8075  0824  087A               	movf	crc16_update@wCrc+1,w
  8076  0825  00FC               	movwf	??_crc16_update+1
  8077  0826  0879               	movf	crc16_update@wCrc,w
  8078  0827  00FB               	movwf	??_crc16_update
  8079  0828  35FB               	lslf	??_crc16_update,f
  8080  0829  0DFC               	rlf	??_crc16_update+1,f
  8081  082A  3021               	movlw	33
  8082  082B  067B               	xorwf	??_crc16_update,w
  8083  082C  00F9               	movwf	crc16_update@wCrc
  8084  082D  3010               	movlw	16
  8085  082E  067C               	xorwf	??_crc16_update+1,w
  8086  082F                     L1:	
  8087  082F  00FA               	movwf	crc16_update@wCrc+1
  8088  0830  3001               	movlw	1
  8089  0831  00FB               	movwf	??_crc16_update
  8090  0832  087B               	movf	??_crc16_update,w
  8091  0833  07A0               	addwf	crc16_update@i,f
  8092  0834  3008               	movlw	8
  8093  0835  0220               	subwf	crc16_update@i,w
  8094  0836  1803               	btfsc	3,0
  8095  0837  2801               	goto	l4348
  8096  0838  281E               	goto	l848
  8097  0839                     l4350:	
  8098                           
  8099                           ;rtty.c: 19:     return wCrc;
  8100  0839  087A               	movf	crc16_update@wCrc+1,w
  8101  083A  00F6               	movwf	?_crc16_update+1
  8102  083B  0879               	movf	crc16_update@wCrc,w
  8103  083C  00F5               	movwf	?_crc16_update
  8104  083D  0008               	return
  8105  083E                     __end_of_crc16_update:	
  8106                           
  8107                           	psect	text3
  8108  107A                     __ptext3:	
  8109 ;; *************** function _bme280_get_sensor_data *****************
  8110 ;; Defined at:
  8111 ;;		line 659 in file "BME280_driver/bme280.c"
  8112 ;; Parameters:    Size  Location     Type
  8113 ;;  sensor_comp     1    wreg     unsigned char 
  8114 ;;  comp_data       1   65[BANK0 ] PTR struct bme280_data
  8115 ;;		 -> main@sensor_data(12), 
  8116 ;;  dev             1   66[BANK0 ] PTR struct bme280_dev
  8117 ;;		 -> EnvSensor(51), 
  8118 ;; Auto vars:     Size  Location     Type
  8119 ;;  sensor_comp     1   53[BANK1 ] unsigned char 
  8120 ;;  uncomp_data    12   55[BANK1 ] struct bme280_uncomp_dat
  8121 ;;  reg_data        8   45[BANK1 ] unsigned char [8]
  8122 ;;  rslt            1   54[BANK1 ] char 
  8123 ;; Return value:  Size  Location     Type
  8124 ;;                  1    wreg      char 
  8125 ;; Registers used:
  8126 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8127 ;; Tracked objects:
  8128 ;;		On entry : 0/0
  8129 ;;		On exit  : 0/0
  8130 ;;		Unchanged: 0/0
  8131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8132 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8133 ;;      Locals:         0       0      22       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8134 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8135 ;;      Totals:         0       5      22       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8136 ;;Total ram usage:       27 bytes
  8137 ;; Hardware stack levels used:    1
  8138 ;; Hardware stack levels required when called:   11
  8139 ;; This function calls:
  8140 ;;		_bme280_compensate_data
  8141 ;;		_bme280_get_regs
  8142 ;;		_bme280_parse_sensor_data
  8143 ;;		_null_ptr_check
  8144 ;; This function is called by:
  8145 ;;		_main
  8146 ;; This function uses a non-reentrant model
  8147 ;;
  8148                           
  8149                           
  8150                           ;psect for function _bme280_get_sensor_data
  8151  107A                     _bme280_get_sensor_data:	
  8152                           
  8153                           ;incstack = 0
  8154                           ; Regs used in _bme280_get_sensor_data: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8155                           ;bme280_get_sensor_data@sensor_comp stored from wreg
  8156  107A  0141               	movlb	1	; select bank1
  8157  107B  00D5               	movwf	bme280_get_sensor_data@sensor_comp^(0+128)
  8158                           
  8159                           ;BME280_driver/bme280.c: 659: int8_t bme280_get_sensor_data(uint8_t sensor_comp, struct 
      +                          bme280_data *comp_data, struct bme280_dev *dev);BME280_driver/bme280.c: 660: {;BME280_dr
      +                          iver/bme280.c: 661:     int8_t rslt;;BME280_driver/bme280.c: 666:     uint8_t reg_data[8
      +                          ] = { 0 };
  8160  107C  30CD               	movlw	low bme280_get_sensor_data@reg_data
  8161  107D  0086               	movwf	6
  8162  107E  3000               	movlw	high bme280_get_sensor_data@reg_data
  8163  107F  0087               	movwf	7
  8164  1080  3008               	movlw	8
  8165  1081  0140               	movlb	0	; select bank0
  8166  1082  00E3               	movwf	??_bme280_get_sensor_data
  8167  1083  3000               	movlw	0
  8168  1084                     u5410:	
  8169  1084  001E               	movwi fsr1++
  8170  1085  0BE3               	decfsz	??_bme280_get_sensor_data,f
  8171  1086  2884               	goto	u5410
  8172                           
  8173                           ;BME280_driver/bme280.c: 667:     struct bme280_uncomp_data uncomp_data = { 0 };
  8174  1087  3030               	movlw	low bme280_get_sensor_data@F273
  8175  1088  0086               	movwf	6
  8176  1089  3001               	movlw	high bme280_get_sensor_data@F273
  8177  108A  0087               	movwf	7
  8178  108B  30D7               	movlw	low bme280_get_sensor_data@uncomp_data
  8179  108C  0084               	movwf	4
  8180  108D  3000               	movlw	high bme280_get_sensor_data@uncomp_data
  8181  108E  0085               	movwf	5
  8182  108F  300C               	movlw	12
  8183  1090  00E3               	movwf	??_bme280_get_sensor_data
  8184  1091                     u5420:	
  8185  1091  0016               	moviw fsr1++
  8186  1092  001A               	movwi fsr0++
  8187  1093  0BE3               	decfsz	??_bme280_get_sensor_data,f
  8188  1094  2891               	goto	u5420
  8189                           
  8190                           ;BME280_driver/bme280.c: 670:     rslt = null_ptr_check(dev);
  8191  1095  0862               	movf	bme280_get_sensor_data@dev,w
  8192  1096  31A7  2790  3190   	fcall	_null_ptr_check
  8193  1099  0140               	movlb	0	; select bank0
  8194  109A  00E3               	movwf	??_bme280_get_sensor_data
  8195  109B  0863               	movf	??_bme280_get_sensor_data,w
  8196  109C  0141               	movlb	1	; select bank1
  8197  109D  00D6               	movwf	bme280_get_sensor_data@rslt^(0+128)
  8198                           
  8199                           ;BME280_driver/bme280.c: 671:     if ((rslt == 0) && (comp_data != ((void*)0)))
  8200  109E  0856               	movf	bme280_get_sensor_data@rslt^(0+128),w
  8201  109F  1D03               	btfss	3,2
  8202  10A0  0008               	return
  8203  10A1  0140               	movlb	0	; select bank0
  8204  10A2  0861               	movf	bme280_get_sensor_data@comp_data,w
  8205  10A3  1903               	btfsc	3,2
  8206  10A4  0008               	return
  8207                           
  8208                           ;BME280_driver/bme280.c: 672:     {;BME280_driver/bme280.c: 674:         rslt = bme280_g
      +                          et_regs(0xF7, reg_data, 8, dev);
  8209  10A5  30CD               	movlw	(low (bme280_get_sensor_data@reg_data| 0))& (0+255)
  8210  10A6  00E3               	movwf	??_bme280_get_sensor_data
  8211  10A7  0863               	movf	??_bme280_get_sensor_data,w
  8212  10A8  00B7               	movwf	bme280_get_regs@reg_data
  8213  10A9  3008               	movlw	8
  8214  10AA  00B8               	movwf	bme280_get_regs@len
  8215  10AB  3000               	movlw	0
  8216  10AC  00B9               	movwf	bme280_get_regs@len+1
  8217  10AD  0862               	movf	bme280_get_sensor_data@dev,w
  8218  10AE  00E4               	movwf	??_bme280_get_sensor_data+1
  8219  10AF  0864               	movf	??_bme280_get_sensor_data+1,w
  8220  10B0  00BA               	movwf	bme280_get_regs@dev
  8221  10B1  30F7               	movlw	247
  8222  10B2  319C  241D  3190   	fcall	_bme280_get_regs
  8223  10B5  0140               	movlb	0	; select bank0
  8224  10B6  00E5               	movwf	??_bme280_get_sensor_data+2
  8225  10B7  0865               	movf	??_bme280_get_sensor_data+2,w
  8226  10B8  0141               	movlb	1	; select bank1
  8227  10B9  00D6               	movwf	bme280_get_sensor_data@rslt^(0+128)
  8228                           
  8229                           ;BME280_driver/bme280.c: 675:         if (rslt == 0)
  8230  10BA  0856               	movf	bme280_get_sensor_data@rslt^(0+128),w
  8231  10BB  1D03               	btfss	3,2
  8232  10BC  0008               	return
  8233                           
  8234                           ;BME280_driver/bme280.c: 676:         {;BME280_driver/bme280.c: 678:             bme280_
      +                          parse_sensor_data(reg_data, &uncomp_data);
  8235  10BD  30D7               	movlw	(low (bme280_get_sensor_data@uncomp_data| 0))& (0+255)
  8236  10BE  0140               	movlb	0	; select bank0
  8237  10BF  00E3               	movwf	??_bme280_get_sensor_data
  8238  10C0  0863               	movf	??_bme280_get_sensor_data,w
  8239  10C1  00F0               	movwf	bme280_parse_sensor_data@uncomp_data
  8240  10C2  30CD               	movlw	(low (bme280_get_sensor_data@reg_data| 0))& (0+255)
  8241  10C3  3188  203E  3190   	fcall	_bme280_parse_sensor_data
  8242  10C6  30D7               	movlw	(low (bme280_get_sensor_data@uncomp_data| 0))& (0+255)
  8243  10C7  0140               	movlb	0	; select bank0
  8244  10C8  00E3               	movwf	??_bme280_get_sensor_data
  8245  10C9  0863               	movf	??_bme280_get_sensor_data,w
  8246  10CA  00DB               	movwf	bme280_compensate_data@uncomp_data
  8247  10CB  0861               	movf	bme280_get_sensor_data@comp_data,w
  8248  10CC  00E4               	movwf	??_bme280_get_sensor_data+1
  8249  10CD  0864               	movf	??_bme280_get_sensor_data+1,w
  8250  10CE  00DC               	movwf	bme280_compensate_data@comp_data
  8251  10CF  0862               	movf	bme280_get_sensor_data@dev,w
  8252  10D0  3E09               	addlw	9
  8253  10D1  00E5               	movwf	??_bme280_get_sensor_data+2
  8254  10D2  0865               	movf	??_bme280_get_sensor_data+2,w
  8255  10D3  00DD               	movwf	bme280_compensate_data@calib_data
  8256  10D4  0141               	movlb	1	; select bank1
  8257  10D5  0855               	movf	bme280_get_sensor_data@sensor_comp^(0+128),w
  8258  10D6  3194  2444         	fcall	_bme280_compensate_data
  8259  10D8  0008               	return
  8260  10D9                     __end_of_bme280_get_sensor_data:	
  8261                           ;BME280_driver/bme280.c: 686:     else
  8262                           
  8263                           
  8264                           	psect	text4
  8265  083E                     __ptext4:	
  8266 ;; *************** function _bme280_parse_sensor_data *****************
  8267 ;; Defined at:
  8268 ;;		line 698 in file "BME280_driver/bme280.c"
  8269 ;; Parameters:    Size  Location     Type
  8270 ;;  reg_data        1    wreg     PTR const unsigned char 
  8271 ;;		 -> bme280_get_sensor_data@reg_data(8), 
  8272 ;;  uncomp_data     1    0[COMMON] PTR struct bme280_uncomp
  8273 ;;		 -> bme280_get_sensor_data@uncomp_data(12), 
  8274 ;; Auto vars:     Size  Location     Type
  8275 ;;  reg_data        1   12[BANK0 ] PTR const unsigned char 
  8276 ;;		 -> bme280_get_sensor_data@reg_data(8), 
  8277 ;;  data_msb        4    8[BANK0 ] unsigned long 
  8278 ;;  data_lsb        4    4[BANK0 ] unsigned long 
  8279 ;;  data_xlsb       4    0[BANK0 ] unsigned long 
  8280 ;; Return value:  Size  Location     Type
  8281 ;;                  1    wreg      void 
  8282 ;; Registers used:
  8283 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8284 ;; Tracked objects:
  8285 ;;		On entry : 0/0
  8286 ;;		On exit  : 0/0
  8287 ;;		Unchanged: 0/0
  8288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8289 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8290 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8291 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8292 ;;      Totals:         9      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8293 ;;Total ram usage:       22 bytes
  8294 ;; Hardware stack levels used:    1
  8295 ;; Hardware stack levels required when called:    3
  8296 ;; This function calls:
  8297 ;;		Nothing
  8298 ;; This function is called by:
  8299 ;;		_bme280_get_sensor_data
  8300 ;; This function uses a non-reentrant model
  8301 ;;
  8302                           
  8303                           
  8304                           ;psect for function _bme280_parse_sensor_data
  8305  083E                     _bme280_parse_sensor_data:	
  8306                           
  8307                           ;incstack = 0
  8308                           ; Regs used in _bme280_parse_sensor_data: [wreg+fsr1l+fsr1h+status,2+status,0]
  8309                           ;bme280_parse_sensor_data@reg_data stored from wreg
  8310  083E  0140               	movlb	0	; select bank0
  8311  083F  00AC               	movwf	bme280_parse_sensor_data@reg_data
  8312                           
  8313                           ;BME280_driver/bme280.c: 698: void bme280_parse_sensor_data(const uint8_t *reg_data, str
      +                          uct bme280_uncomp_data *uncomp_data);BME280_driver/bme280.c: 699: {;BME280_driver/bme280
      +                          .c: 701:     uint32_t data_xlsb;;BME280_driver/bme280.c: 702:     uint32_t data_lsb;;BME
      +                          280_driver/bme280.c: 703:     uint32_t data_msb;;BME280_driver/bme280.c: 706:     data_m
      +                          sb = (uint32_t)reg_data[0] << 12;
  8314  0840  082C               	movf	bme280_parse_sensor_data@reg_data,w
  8315  0841  0086               	movwf	6
  8316  0842  0187               	clrf	7
  8317  0843  0801               	movf	1,w
  8318  0844  00F1               	movwf	??_bme280_parse_sensor_data
  8319  0845  01F2               	clrf	??_bme280_parse_sensor_data+1
  8320  0846  01F3               	clrf	??_bme280_parse_sensor_data+2
  8321  0847  01F4               	clrf	??_bme280_parse_sensor_data+3
  8322  0848  300C               	movlw	12
  8323  0849                     u3705:	
  8324  0849  35F1               	lslf	??_bme280_parse_sensor_data,f
  8325  084A  0DF2               	rlf	??_bme280_parse_sensor_data+1,f
  8326  084B  0DF3               	rlf	??_bme280_parse_sensor_data+2,f
  8327  084C  0DF4               	rlf	??_bme280_parse_sensor_data+3,f
  8328  084D  0B89               	decfsz	9,f
  8329  084E  2849               	goto	u3705
  8330  084F  0874               	movf	??_bme280_parse_sensor_data+3,w
  8331  0850  00AB               	movwf	bme280_parse_sensor_data@data_msb+3
  8332  0851  0873               	movf	??_bme280_parse_sensor_data+2,w
  8333  0852  00AA               	movwf	bme280_parse_sensor_data@data_msb+2
  8334  0853  0872               	movf	??_bme280_parse_sensor_data+1,w
  8335  0854  00A9               	movwf	bme280_parse_sensor_data@data_msb+1
  8336  0855  0871               	movf	??_bme280_parse_sensor_data,w
  8337  0856  00A8               	movwf	bme280_parse_sensor_data@data_msb
  8338                           
  8339                           ;BME280_driver/bme280.c: 707:     data_lsb = (uint32_t)reg_data[1] << 4;
  8340  0857  0A2C               	incf	bme280_parse_sensor_data@reg_data,w
  8341  0858  0086               	movwf	6
  8342  0859  0187               	clrf	7
  8343  085A  0801               	movf	1,w
  8344  085B  00F1               	movwf	??_bme280_parse_sensor_data
  8345  085C  01F2               	clrf	??_bme280_parse_sensor_data+1
  8346  085D  01F3               	clrf	??_bme280_parse_sensor_data+2
  8347  085E  01F4               	clrf	??_bme280_parse_sensor_data+3
  8348  085F  3004               	movlw	4
  8349  0860                     u3715:	
  8350  0860  35F1               	lslf	??_bme280_parse_sensor_data,f
  8351  0861  0DF2               	rlf	??_bme280_parse_sensor_data+1,f
  8352  0862  0DF3               	rlf	??_bme280_parse_sensor_data+2,f
  8353  0863  0DF4               	rlf	??_bme280_parse_sensor_data+3,f
  8354  0864  0B89               	decfsz	9,f
  8355  0865  2860               	goto	u3715
  8356  0866  0874               	movf	??_bme280_parse_sensor_data+3,w
  8357  0867  00A7               	movwf	bme280_parse_sensor_data@data_lsb+3
  8358  0868  0873               	movf	??_bme280_parse_sensor_data+2,w
  8359  0869  00A6               	movwf	bme280_parse_sensor_data@data_lsb+2
  8360  086A  0872               	movf	??_bme280_parse_sensor_data+1,w
  8361  086B  00A5               	movwf	bme280_parse_sensor_data@data_lsb+1
  8362  086C  0871               	movf	??_bme280_parse_sensor_data,w
  8363  086D  00A4               	movwf	bme280_parse_sensor_data@data_lsb
  8364                           
  8365                           ;BME280_driver/bme280.c: 708:     data_xlsb = (uint32_t)reg_data[2] >> 4;
  8366  086E  082C               	movf	bme280_parse_sensor_data@reg_data,w
  8367  086F  3E02               	addlw	2
  8368  0870  0086               	movwf	6
  8369  0871  0187               	clrf	7
  8370  0872  0801               	movf	1,w
  8371  0873  00F1               	movwf	??_bme280_parse_sensor_data
  8372  0874  3004               	movlw	4
  8373  0875                     u3725:	
  8374  0875  36F1               	lsrf	??_bme280_parse_sensor_data,f
  8375  0876  0B89               	decfsz	9,f
  8376  0877  2875               	goto	u3725
  8377  0878  0871               	movf	??_bme280_parse_sensor_data,w
  8378  0879  00F2               	movwf	??_bme280_parse_sensor_data+1
  8379  087A  01F3               	clrf	??_bme280_parse_sensor_data+2
  8380  087B  01F4               	clrf	??_bme280_parse_sensor_data+3
  8381  087C  01F5               	clrf	??_bme280_parse_sensor_data+4
  8382  087D  0875               	movf	??_bme280_parse_sensor_data+4,w
  8383  087E  00A3               	movwf	bme280_parse_sensor_data@data_xlsb+3
  8384  087F  0874               	movf	??_bme280_parse_sensor_data+3,w
  8385  0880  00A2               	movwf	bme280_parse_sensor_data@data_xlsb+2
  8386  0881  0873               	movf	??_bme280_parse_sensor_data+2,w
  8387  0882  00A1               	movwf	bme280_parse_sensor_data@data_xlsb+1
  8388  0883  0872               	movf	??_bme280_parse_sensor_data+1,w
  8389  0884  00A0               	movwf	bme280_parse_sensor_data@data_xlsb
  8390                           
  8391                           ;BME280_driver/bme280.c: 709:     uncomp_data->pressure = data_msb | data_lsb | data_xls
      +                          b;
  8392  0885  0820               	movf	bme280_parse_sensor_data@data_xlsb,w
  8393  0886  00F1               	movwf	??_bme280_parse_sensor_data
  8394  0887  0821               	movf	bme280_parse_sensor_data@data_xlsb+1,w
  8395  0888  00F2               	movwf	??_bme280_parse_sensor_data+1
  8396  0889  0822               	movf	bme280_parse_sensor_data@data_xlsb+2,w
  8397  088A  00F3               	movwf	??_bme280_parse_sensor_data+2
  8398  088B  0823               	movf	bme280_parse_sensor_data@data_xlsb+3,w
  8399  088C  00F4               	movwf	??_bme280_parse_sensor_data+3
  8400  088D  0828               	movf	bme280_parse_sensor_data@data_msb,w
  8401  088E  0424               	iorwf	bme280_parse_sensor_data@data_lsb,w
  8402  088F  00F5               	movwf	??_bme280_parse_sensor_data+4
  8403  0890  0829               	movf	bme280_parse_sensor_data@data_msb+1,w
  8404  0891  0425               	iorwf	bme280_parse_sensor_data@data_lsb+1,w
  8405  0892  00F6               	movwf	??_bme280_parse_sensor_data+5
  8406  0893  082A               	movf	bme280_parse_sensor_data@data_msb+2,w
  8407  0894  0426               	iorwf	bme280_parse_sensor_data@data_lsb+2,w
  8408  0895  00F7               	movwf	??_bme280_parse_sensor_data+6
  8409  0896  082B               	movf	bme280_parse_sensor_data@data_msb+3,w
  8410  0897  0427               	iorwf	bme280_parse_sensor_data@data_lsb+3,w
  8411  0898  00F8               	movwf	??_bme280_parse_sensor_data+7
  8412  0899  0875               	movf	??_bme280_parse_sensor_data+4,w
  8413  089A  04F1               	iorwf	??_bme280_parse_sensor_data,f
  8414  089B  0876               	movf	??_bme280_parse_sensor_data+5,w
  8415  089C  04F2               	iorwf	??_bme280_parse_sensor_data+1,f
  8416  089D  0877               	movf	??_bme280_parse_sensor_data+6,w
  8417  089E  04F3               	iorwf	??_bme280_parse_sensor_data+2,f
  8418  089F  0878               	movf	??_bme280_parse_sensor_data+7,w
  8419  08A0  04F4               	iorwf	??_bme280_parse_sensor_data+3,f
  8420  08A1  0870               	movf	bme280_parse_sensor_data@uncomp_data,w
  8421  08A2  0086               	movwf	6
  8422  08A3  0187               	clrf	7
  8423  08A4  0871               	movf	??_bme280_parse_sensor_data,w
  8424  08A5  3FC0               	movwi [0]fsr1
  8425  08A6  0872               	movf	??_bme280_parse_sensor_data+1,w
  8426  08A7  3FC1               	movwi [1]fsr1
  8427  08A8  0873               	movf	??_bme280_parse_sensor_data+2,w
  8428  08A9  3FC2               	movwi [2]fsr1
  8429  08AA  0874               	movf	??_bme280_parse_sensor_data+3,w
  8430  08AB  3FC3               	movwi [3]fsr1
  8431                           
  8432                           ;BME280_driver/bme280.c: 712:     data_msb = (uint32_t)reg_data[3] << 12;
  8433  08AC  082C               	movf	bme280_parse_sensor_data@reg_data,w
  8434  08AD  3E03               	addlw	3
  8435  08AE  0086               	movwf	6
  8436  08AF  0187               	clrf	7
  8437  08B0  0801               	movf	1,w
  8438  08B1  00F1               	movwf	??_bme280_parse_sensor_data
  8439  08B2  01F2               	clrf	??_bme280_parse_sensor_data+1
  8440  08B3  01F3               	clrf	??_bme280_parse_sensor_data+2
  8441  08B4  01F4               	clrf	??_bme280_parse_sensor_data+3
  8442  08B5  300C               	movlw	12
  8443  08B6                     u3735:	
  8444  08B6  35F1               	lslf	??_bme280_parse_sensor_data,f
  8445  08B7  0DF2               	rlf	??_bme280_parse_sensor_data+1,f
  8446  08B8  0DF3               	rlf	??_bme280_parse_sensor_data+2,f
  8447  08B9  0DF4               	rlf	??_bme280_parse_sensor_data+3,f
  8448  08BA  0B89               	decfsz	9,f
  8449  08BB  28B6               	goto	u3735
  8450  08BC  0874               	movf	??_bme280_parse_sensor_data+3,w
  8451  08BD  00AB               	movwf	bme280_parse_sensor_data@data_msb+3
  8452  08BE  0873               	movf	??_bme280_parse_sensor_data+2,w
  8453  08BF  00AA               	movwf	bme280_parse_sensor_data@data_msb+2
  8454  08C0  0872               	movf	??_bme280_parse_sensor_data+1,w
  8455  08C1  00A9               	movwf	bme280_parse_sensor_data@data_msb+1
  8456  08C2  0871               	movf	??_bme280_parse_sensor_data,w
  8457  08C3  00A8               	movwf	bme280_parse_sensor_data@data_msb
  8458                           
  8459                           ;BME280_driver/bme280.c: 713:     data_lsb = (uint32_t)reg_data[4] << 4;
  8460  08C4  082C               	movf	bme280_parse_sensor_data@reg_data,w
  8461  08C5  3E04               	addlw	4
  8462  08C6  0086               	movwf	6
  8463  08C7  0187               	clrf	7
  8464  08C8  0801               	movf	1,w
  8465  08C9  00F1               	movwf	??_bme280_parse_sensor_data
  8466  08CA  01F2               	clrf	??_bme280_parse_sensor_data+1
  8467  08CB  01F3               	clrf	??_bme280_parse_sensor_data+2
  8468  08CC  01F4               	clrf	??_bme280_parse_sensor_data+3
  8469  08CD  3004               	movlw	4
  8470  08CE                     u3745:	
  8471  08CE  35F1               	lslf	??_bme280_parse_sensor_data,f
  8472  08CF  0DF2               	rlf	??_bme280_parse_sensor_data+1,f
  8473  08D0  0DF3               	rlf	??_bme280_parse_sensor_data+2,f
  8474  08D1  0DF4               	rlf	??_bme280_parse_sensor_data+3,f
  8475  08D2  0B89               	decfsz	9,f
  8476  08D3  28CE               	goto	u3745
  8477  08D4  0874               	movf	??_bme280_parse_sensor_data+3,w
  8478  08D5  00A7               	movwf	bme280_parse_sensor_data@data_lsb+3
  8479  08D6  0873               	movf	??_bme280_parse_sensor_data+2,w
  8480  08D7  00A6               	movwf	bme280_parse_sensor_data@data_lsb+2
  8481  08D8  0872               	movf	??_bme280_parse_sensor_data+1,w
  8482  08D9  00A5               	movwf	bme280_parse_sensor_data@data_lsb+1
  8483  08DA  0871               	movf	??_bme280_parse_sensor_data,w
  8484  08DB  00A4               	movwf	bme280_parse_sensor_data@data_lsb
  8485                           
  8486                           ;BME280_driver/bme280.c: 714:     data_xlsb = (uint32_t)reg_data[5] >> 4;
  8487  08DC  082C               	movf	bme280_parse_sensor_data@reg_data,w
  8488  08DD  3E05               	addlw	5
  8489  08DE  0086               	movwf	6
  8490  08DF  0187               	clrf	7
  8491  08E0  0801               	movf	1,w
  8492  08E1  00F1               	movwf	??_bme280_parse_sensor_data
  8493  08E2  3004               	movlw	4
  8494  08E3                     u3755:	
  8495  08E3  36F1               	lsrf	??_bme280_parse_sensor_data,f
  8496  08E4  0B89               	decfsz	9,f
  8497  08E5  28E3               	goto	u3755
  8498  08E6  0871               	movf	??_bme280_parse_sensor_data,w
  8499  08E7  00F2               	movwf	??_bme280_parse_sensor_data+1
  8500  08E8  01F3               	clrf	??_bme280_parse_sensor_data+2
  8501  08E9  01F4               	clrf	??_bme280_parse_sensor_data+3
  8502  08EA  01F5               	clrf	??_bme280_parse_sensor_data+4
  8503  08EB  0875               	movf	??_bme280_parse_sensor_data+4,w
  8504  08EC  00A3               	movwf	bme280_parse_sensor_data@data_xlsb+3
  8505  08ED  0874               	movf	??_bme280_parse_sensor_data+3,w
  8506  08EE  00A2               	movwf	bme280_parse_sensor_data@data_xlsb+2
  8507  08EF  0873               	movf	??_bme280_parse_sensor_data+2,w
  8508  08F0  00A1               	movwf	bme280_parse_sensor_data@data_xlsb+1
  8509  08F1  0872               	movf	??_bme280_parse_sensor_data+1,w
  8510  08F2  00A0               	movwf	bme280_parse_sensor_data@data_xlsb
  8511                           
  8512                           ;BME280_driver/bme280.c: 715:     uncomp_data->temperature = data_msb | data_lsb | data_
      +                          xlsb;
  8513  08F3  0820               	movf	bme280_parse_sensor_data@data_xlsb,w
  8514  08F4  00F1               	movwf	??_bme280_parse_sensor_data
  8515  08F5  0821               	movf	bme280_parse_sensor_data@data_xlsb+1,w
  8516  08F6  00F2               	movwf	??_bme280_parse_sensor_data+1
  8517  08F7  0822               	movf	bme280_parse_sensor_data@data_xlsb+2,w
  8518  08F8  00F3               	movwf	??_bme280_parse_sensor_data+2
  8519  08F9  0823               	movf	bme280_parse_sensor_data@data_xlsb+3,w
  8520  08FA  00F4               	movwf	??_bme280_parse_sensor_data+3
  8521  08FB  0828               	movf	bme280_parse_sensor_data@data_msb,w
  8522  08FC  0424               	iorwf	bme280_parse_sensor_data@data_lsb,w
  8523  08FD  00F5               	movwf	??_bme280_parse_sensor_data+4
  8524  08FE  0829               	movf	bme280_parse_sensor_data@data_msb+1,w
  8525  08FF  0425               	iorwf	bme280_parse_sensor_data@data_lsb+1,w
  8526  0900  00F6               	movwf	??_bme280_parse_sensor_data+5
  8527  0901  082A               	movf	bme280_parse_sensor_data@data_msb+2,w
  8528  0902  0426               	iorwf	bme280_parse_sensor_data@data_lsb+2,w
  8529  0903  00F7               	movwf	??_bme280_parse_sensor_data+6
  8530  0904  082B               	movf	bme280_parse_sensor_data@data_msb+3,w
  8531  0905  0427               	iorwf	bme280_parse_sensor_data@data_lsb+3,w
  8532  0906  00F8               	movwf	??_bme280_parse_sensor_data+7
  8533  0907  0875               	movf	??_bme280_parse_sensor_data+4,w
  8534  0908  04F1               	iorwf	??_bme280_parse_sensor_data,f
  8535  0909  0876               	movf	??_bme280_parse_sensor_data+5,w
  8536  090A  04F2               	iorwf	??_bme280_parse_sensor_data+1,f
  8537  090B  0877               	movf	??_bme280_parse_sensor_data+6,w
  8538  090C  04F3               	iorwf	??_bme280_parse_sensor_data+2,f
  8539  090D  0878               	movf	??_bme280_parse_sensor_data+7,w
  8540  090E  04F4               	iorwf	??_bme280_parse_sensor_data+3,f
  8541  090F  0870               	movf	bme280_parse_sensor_data@uncomp_data,w
  8542  0910  3E04               	addlw	4
  8543  0911  0086               	movwf	6
  8544  0912  0187               	clrf	7
  8545  0913  0871               	movf	??_bme280_parse_sensor_data,w
  8546  0914  3FC0               	movwi [0]fsr1
  8547  0915  0872               	movf	??_bme280_parse_sensor_data+1,w
  8548  0916  3FC1               	movwi [1]fsr1
  8549  0917  0873               	movf	??_bme280_parse_sensor_data+2,w
  8550  0918  3FC2               	movwi [2]fsr1
  8551  0919  0874               	movf	??_bme280_parse_sensor_data+3,w
  8552  091A  3FC3               	movwi [3]fsr1
  8553                           
  8554                           ;BME280_driver/bme280.c: 718:     data_lsb = (uint32_t)reg_data[6] << 8;
  8555  091B  082C               	movf	bme280_parse_sensor_data@reg_data,w
  8556  091C  3E06               	addlw	6
  8557  091D  0086               	movwf	6
  8558  091E  0187               	clrf	7
  8559  091F  0801               	movf	1,w
  8560  0920  00F1               	movwf	??_bme280_parse_sensor_data
  8561  0921  01F2               	clrf	??_bme280_parse_sensor_data+1
  8562  0922  01F3               	clrf	??_bme280_parse_sensor_data+2
  8563  0923  01F4               	clrf	??_bme280_parse_sensor_data+3
  8564  0924  3008               	movlw	8
  8565  0925                     u3765:	
  8566  0925  35F1               	lslf	??_bme280_parse_sensor_data,f
  8567  0926  0DF2               	rlf	??_bme280_parse_sensor_data+1,f
  8568  0927  0DF3               	rlf	??_bme280_parse_sensor_data+2,f
  8569  0928  0DF4               	rlf	??_bme280_parse_sensor_data+3,f
  8570  0929  0B89               	decfsz	9,f
  8571  092A  2925               	goto	u3765
  8572  092B  0874               	movf	??_bme280_parse_sensor_data+3,w
  8573  092C  00A7               	movwf	bme280_parse_sensor_data@data_lsb+3
  8574  092D  0873               	movf	??_bme280_parse_sensor_data+2,w
  8575  092E  00A6               	movwf	bme280_parse_sensor_data@data_lsb+2
  8576  092F  0872               	movf	??_bme280_parse_sensor_data+1,w
  8577  0930  00A5               	movwf	bme280_parse_sensor_data@data_lsb+1
  8578  0931  0871               	movf	??_bme280_parse_sensor_data,w
  8579  0932  00A4               	movwf	bme280_parse_sensor_data@data_lsb
  8580                           
  8581                           ;BME280_driver/bme280.c: 719:     data_msb = (uint32_t)reg_data[7];
  8582  0933  082C               	movf	bme280_parse_sensor_data@reg_data,w
  8583  0934  3E07               	addlw	7
  8584  0935  0086               	movwf	6
  8585  0936  0187               	clrf	7
  8586  0937  0801               	movf	1,w
  8587  0938  00F1               	movwf	??_bme280_parse_sensor_data
  8588  0939  01F2               	clrf	??_bme280_parse_sensor_data+1
  8589  093A  01F3               	clrf	??_bme280_parse_sensor_data+2
  8590  093B  01F4               	clrf	??_bme280_parse_sensor_data+3
  8591  093C  0874               	movf	??_bme280_parse_sensor_data+3,w
  8592  093D  00AB               	movwf	bme280_parse_sensor_data@data_msb+3
  8593  093E  0873               	movf	??_bme280_parse_sensor_data+2,w
  8594  093F  00AA               	movwf	bme280_parse_sensor_data@data_msb+2
  8595  0940  0872               	movf	??_bme280_parse_sensor_data+1,w
  8596  0941  00A9               	movwf	bme280_parse_sensor_data@data_msb+1
  8597  0942  0871               	movf	??_bme280_parse_sensor_data,w
  8598  0943  00A8               	movwf	bme280_parse_sensor_data@data_msb
  8599                           
  8600                           ;BME280_driver/bme280.c: 720:     uncomp_data->humidity = data_msb | data_lsb;
  8601  0944  0828               	movf	bme280_parse_sensor_data@data_msb,w
  8602  0945  0424               	iorwf	bme280_parse_sensor_data@data_lsb,w
  8603  0946  00F1               	movwf	??_bme280_parse_sensor_data
  8604  0947  0829               	movf	bme280_parse_sensor_data@data_msb+1,w
  8605  0948  0425               	iorwf	bme280_parse_sensor_data@data_lsb+1,w
  8606  0949  00F2               	movwf	??_bme280_parse_sensor_data+1
  8607  094A  082A               	movf	bme280_parse_sensor_data@data_msb+2,w
  8608  094B  0426               	iorwf	bme280_parse_sensor_data@data_lsb+2,w
  8609  094C  00F3               	movwf	??_bme280_parse_sensor_data+2
  8610  094D  082B               	movf	bme280_parse_sensor_data@data_msb+3,w
  8611  094E  0427               	iorwf	bme280_parse_sensor_data@data_lsb+3,w
  8612  094F  00F4               	movwf	??_bme280_parse_sensor_data+3
  8613  0950  0870               	movf	bme280_parse_sensor_data@uncomp_data,w
  8614  0951  3E08               	addlw	8
  8615  0952  0086               	movwf	6
  8616  0953  0187               	clrf	7
  8617  0954  0871               	movf	??_bme280_parse_sensor_data,w
  8618  0955  3FC0               	movwi [0]fsr1
  8619  0956  0872               	movf	??_bme280_parse_sensor_data+1,w
  8620  0957  3FC1               	movwi [1]fsr1
  8621  0958  0873               	movf	??_bme280_parse_sensor_data+2,w
  8622  0959  3FC2               	movwi [2]fsr1
  8623  095A  0874               	movf	??_bme280_parse_sensor_data+3,w
  8624  095B  3FC3               	movwi [3]fsr1
  8625  095C  0008               	return
  8626  095D                     __end_of_bme280_parse_sensor_data:	
  8627                           
  8628                           	psect	text5
  8629  1444                     __ptext5:	
  8630 ;; *************** function _bme280_compensate_data *****************
  8631 ;; Defined at:
  8632 ;;		line 728 in file "BME280_driver/bme280.c"
  8633 ;; Parameters:    Size  Location     Type
  8634 ;;  sensor_comp     1    wreg     unsigned char 
  8635 ;;  uncomp_data     1   59[BANK0 ] PTR const struct bme280_
  8636 ;;		 -> bme280_get_sensor_data@uncomp_data(12), 
  8637 ;;  comp_data       1   60[BANK0 ] PTR struct bme280_data
  8638 ;;		 -> main@sensor_data(12), 
  8639 ;;  calib_data      1   61[BANK0 ] PTR struct bme280_calib_
  8640 ;;		 -> EnvSensor(51), 
  8641 ;; Auto vars:     Size  Location     Type
  8642 ;;  sensor_comp     1   64[BANK0 ] unsigned char 
  8643 ;;  rslt            1   63[BANK0 ] char 
  8644 ;; Return value:  Size  Location     Type
  8645 ;;                  1    wreg      char 
  8646 ;; Registers used:
  8647 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8648 ;; Tracked objects:
  8649 ;;		On entry : 0/0
  8650 ;;		On exit  : 0/0
  8651 ;;		Unchanged: 0/0
  8652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8653 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8654 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8655 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8656 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8657 ;;Total ram usage:        6 bytes
  8658 ;; Hardware stack levels used:    1
  8659 ;; Hardware stack levels required when called:    5
  8660 ;; This function calls:
  8661 ;;		_compensate_humidity
  8662 ;;		_compensate_pressure
  8663 ;;		_compensate_temperature
  8664 ;; This function is called by:
  8665 ;;		_bme280_get_sensor_data
  8666 ;; This function uses a non-reentrant model
  8667 ;;
  8668                           
  8669                           
  8670                           ;psect for function _bme280_compensate_data
  8671  1444                     _bme280_compensate_data:	
  8672                           
  8673                           ;incstack = 0
  8674                           ; Regs used in _bme280_compensate_data: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
  8675                           ;bme280_compensate_data@sensor_comp stored from wreg
  8676  1444  0140               	movlb	0	; select bank0
  8677  1445  00E0               	movwf	bme280_compensate_data@sensor_comp
  8678                           
  8679                           ;BME280_driver/bme280.c: 728: int8_t bme280_compensate_data(uint8_t sensor_comp,;BME280_
      +                          driver/bme280.c: 729:                               const struct bme280_uncomp_data *unc
      +                          omp_data,;BME280_driver/bme280.c: 730:                               struct bme280_data 
      +                          *comp_data,;BME280_driver/bme280.c: 731:                               struct bme280_cal
      +                          ib_data *calib_data);BME280_driver/bme280.c: 732: {;BME280_driver/bme280.c: 733:     int
      +                          8_t rslt = 0;
  8680  1446  01DF               	clrf	bme280_compensate_data@rslt
  8681                           
  8682                           ;BME280_driver/bme280.c: 735:     if ((uncomp_data != ((void*)0)) && (comp_data != ((voi
      +                          d*)0)) && (calib_data != ((void*)0)))
  8683  1447  085B               	movf	bme280_compensate_data@uncomp_data,w
  8684  1448  1903               	btfsc	3,2
  8685  1449  2CB9               	goto	l126
  8686  144A  085C               	movf	bme280_compensate_data@comp_data,w
  8687  144B  1903               	btfsc	3,2
  8688  144C  2CB9               	goto	l126
  8689  144D  085D               	movf	bme280_compensate_data@calib_data,w
  8690  144E  1903               	btfsc	3,2
  8691  144F  2CB9               	goto	l126
  8692                           
  8693                           ;BME280_driver/bme280.c: 736:     {;BME280_driver/bme280.c: 738:         comp_data->temp
      +                          erature = 0;
  8694  1450  085C               	movf	bme280_compensate_data@comp_data,w
  8695  1451  3E04               	addlw	4
  8696  1452  0086               	movwf	6
  8697  1453  3001               	movlw	1	; select bank2/3
  8698  1454  0087               	movwf	7
  8699  1455  3000               	movlw	0
  8700  1456  3FC0               	movwi [0]fsr1
  8701  1457  3000               	movlw	0
  8702  1458  3FC1               	movwi [1]fsr1
  8703  1459  3FC2               	movwi [2]fsr1
  8704  145A  3FC3               	movwi [3]fsr1
  8705                           
  8706                           ;BME280_driver/bme280.c: 739:         comp_data->pressure = 0;
  8707  145B  085C               	movf	bme280_compensate_data@comp_data,w
  8708  145C  0086               	movwf	6
  8709  145D  3001               	movlw	1	; select bank2/3
  8710  145E  0087               	movwf	7
  8711  145F  3000               	movlw	0
  8712  1460  3FC0               	movwi [0]fsr1
  8713  1461  3FC1               	movwi [1]fsr1
  8714  1462  3FC2               	movwi [2]fsr1
  8715  1463  3FC3               	movwi [3]fsr1
  8716                           
  8717                           ;BME280_driver/bme280.c: 740:         comp_data->humidity = 0;
  8718  1464  085C               	movf	bme280_compensate_data@comp_data,w
  8719  1465  3E08               	addlw	8
  8720  1466  0086               	movwf	6
  8721  1467  3001               	movlw	1	; select bank2/3
  8722  1468  0087               	movwf	7
  8723  1469  3000               	movlw	0
  8724  146A  3FC0               	movwi [0]fsr1
  8725  146B  3000               	movlw	0
  8726  146C  3FC1               	movwi [1]fsr1
  8727  146D  3FC2               	movwi [2]fsr1
  8728  146E  3FC3               	movwi [3]fsr1
  8729                           
  8730                           ;BME280_driver/bme280.c: 743:         if (sensor_comp & (1 | 1 << 1 | 1 << 2))
  8731  146F  0860               	movf	bme280_compensate_data@sensor_comp,w
  8732  1470  3907               	andlw	7
  8733  1471  1903               	btfsc	3,2
  8734  1472  2C89               	goto	l4122
  8735                           
  8736                           ;BME280_driver/bme280.c: 744:         {;BME280_driver/bme280.c: 746:             comp_da
      +                          ta->temperature = compensate_temperature(uncomp_data, calib_data);
  8737  1473  085D               	movf	bme280_compensate_data@calib_data,w
  8738  1474  00DE               	movwf	??_bme280_compensate_data
  8739  1475  085E               	movf	??_bme280_compensate_data,w
  8740  1476  00AE               	movwf	compensate_temperature@calib_data
  8741  1477  085B               	movf	bme280_compensate_data@uncomp_data,w
  8742  1478  3189  215D  3194   	fcall	_compensate_temperature
  8743  147B  0140               	movlb	0	; select bank0
  8744  147C  085C               	movf	bme280_compensate_data@comp_data,w
  8745  147D  3E04               	addlw	4
  8746  147E  0086               	movwf	6
  8747  147F  3001               	movlw	1	; select bank2/3
  8748  1480  0087               	movwf	7
  8749  1481  082E               	movf	?_compensate_temperature,w
  8750  1482  3FC0               	movwi [0]fsr1
  8751  1483  082F               	movf	?_compensate_temperature+1,w
  8752  1484  3FC1               	movwi [1]fsr1
  8753  1485  0830               	movf	?_compensate_temperature+2,w
  8754  1486  3FC2               	movwi [2]fsr1
  8755  1487  0831               	movf	?_compensate_temperature+3,w
  8756  1488  3FC3               	movwi [3]fsr1
  8757  1489                     l4122:	
  8758                           
  8759                           ;BME280_driver/bme280.c: 748:         if (sensor_comp & 1)
  8760  1489  1C60               	btfss	bme280_compensate_data@sensor_comp,0
  8761  148A  2CA0               	goto	l4126
  8762                           
  8763                           ;BME280_driver/bme280.c: 749:         {;BME280_driver/bme280.c: 751:             comp_da
      +                          ta->pressure = compensate_pressure(uncomp_data, calib_data);
  8764  148B  085D               	movf	bme280_compensate_data@calib_data,w
  8765  148C  00DE               	movwf	??_bme280_compensate_data
  8766  148D  085E               	movf	??_bme280_compensate_data,w
  8767  148E  00AE               	movwf	compensate_pressure@calib_data
  8768  148F  085B               	movf	bme280_compensate_data@uncomp_data,w
  8769  1490  3180  2054  3194   	fcall	_compensate_pressure
  8770  1493  0140               	movlb	0	; select bank0
  8771  1494  085C               	movf	bme280_compensate_data@comp_data,w
  8772  1495  0086               	movwf	6
  8773  1496  3001               	movlw	1	; select bank2/3
  8774  1497  0087               	movwf	7
  8775  1498  082E               	movf	?_compensate_pressure,w
  8776  1499  3FC0               	movwi [0]fsr1
  8777  149A  082F               	movf	?_compensate_pressure+1,w
  8778  149B  3FC1               	movwi [1]fsr1
  8779  149C  0830               	movf	?_compensate_pressure+2,w
  8780  149D  3FC2               	movwi [2]fsr1
  8781  149E  0831               	movf	?_compensate_pressure+3,w
  8782  149F  3FC3               	movwi [3]fsr1
  8783  14A0                     l4126:	
  8784                           
  8785                           ;BME280_driver/bme280.c: 753:         if (sensor_comp & 1 << 2)
  8786  14A0  1D60               	btfss	bme280_compensate_data@sensor_comp,2
  8787  14A1  2CBB               	goto	l4130
  8788                           
  8789                           ;BME280_driver/bme280.c: 754:         {;BME280_driver/bme280.c: 757:             comp_da
      +                          ta->humidity = compensate_humidity(uncomp_data, calib_data);
  8790  14A2  085D               	movf	bme280_compensate_data@calib_data,w
  8791  14A3  00DE               	movwf	??_bme280_compensate_data
  8792  14A4  085E               	movf	??_bme280_compensate_data,w
  8793  14A5  00AE               	movwf	compensate_humidity@calib_data
  8794  14A6  085B               	movf	bme280_compensate_data@uncomp_data,w
  8795  14A7  318D  2536  3194   	fcall	_compensate_humidity
  8796  14AA  0140               	movlb	0	; select bank0
  8797  14AB  085C               	movf	bme280_compensate_data@comp_data,w
  8798  14AC  3E08               	addlw	8
  8799  14AD  0086               	movwf	6
  8800  14AE  3001               	movlw	1	; select bank2/3
  8801  14AF  0087               	movwf	7
  8802  14B0  082E               	movf	?_compensate_humidity,w
  8803  14B1  3FC0               	movwi [0]fsr1
  8804  14B2  082F               	movf	?_compensate_humidity+1,w
  8805  14B3  3FC1               	movwi [1]fsr1
  8806  14B4  0830               	movf	?_compensate_humidity+2,w
  8807  14B5  3FC2               	movwi [2]fsr1
  8808  14B6  0831               	movf	?_compensate_humidity+3,w
  8809  14B7  3FC3               	movwi [3]fsr1
  8810  14B8  2CBB               	goto	l4130
  8811  14B9                     l126:	
  8812                           ;BME280_driver/bme280.c: 764:     else
  8813                           
  8814                           
  8815                           ;BME280_driver/bme280.c: 765:     {;BME280_driver/bme280.c: 766:         rslt = -1;
  8816  14B9  01DF               	clrf	bme280_compensate_data@rslt
  8817  14BA  03DF               	decf	bme280_compensate_data@rslt,f
  8818  14BB                     l4130:	
  8819                           
  8820                           ;BME280_driver/bme280.c: 769:     return rslt;
  8821  14BB  085F               	movf	bme280_compensate_data@rslt,w
  8822  14BC  0008               	return
  8823  14BD                     __end_of_bme280_compensate_data:	
  8824                           
  8825                           	psect	text6
  8826  095D                     __ptext6:	
  8827 ;; *************** function _compensate_temperature *****************
  8828 ;; Defined at:
  8829 ;;		line 1125 in file "BME280_driver/bme280.c"
  8830 ;; Parameters:    Size  Location     Type
  8831 ;;  uncomp_data     1    wreg     PTR const struct bme280_
  8832 ;;		 -> bme280_get_sensor_data@uncomp_data(12), 
  8833 ;;  calib_data      1   14[BANK0 ] PTR struct bme280_calib_
  8834 ;;		 -> EnvSensor(51), 
  8835 ;; Auto vars:     Size  Location     Type
  8836 ;;  uncomp_data     1   44[BANK0 ] PTR const struct bme280_
  8837 ;;		 -> bme280_get_sensor_data@uncomp_data(12), 
  8838 ;;  temperature     4   49[BANK0 ] long 
  8839 ;;  var2            4   45[BANK0 ] long 
  8840 ;;  var1            4   40[BANK0 ] long 
  8841 ;;  temperature_    4   36[BANK0 ] long 
  8842 ;;  temperature_    4    0        long 
  8843 ;; Return value:  Size  Location     Type
  8844 ;;                  4   14[BANK0 ] long 
  8845 ;; Registers used:
  8846 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8847 ;; Tracked objects:
  8848 ;;		On entry : 0/0
  8849 ;;		On exit  : 0/0
  8850 ;;		Unchanged: 0/0
  8851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8852 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8853 ;;      Locals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8854 ;;      Temps:          0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8855 ;;      Totals:         0      39       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8856 ;;Total ram usage:       39 bytes
  8857 ;; Hardware stack levels used:    1
  8858 ;; Hardware stack levels required when called:    4
  8859 ;; This function calls:
  8860 ;;		___aldiv
  8861 ;;		___lmul
  8862 ;; This function is called by:
  8863 ;;		_bme280_compensate_data
  8864 ;; This function uses a non-reentrant model
  8865 ;;
  8866                           
  8867                           
  8868                           ;psect for function _compensate_temperature
  8869  095D                     _compensate_temperature:	
  8870                           
  8871                           ;incstack = 0
  8872                           ; Regs used in _compensate_temperature: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
  8873                           ;compensate_temperature@uncomp_data stored from wreg
  8874  095D  0140               	movlb	0	; select bank0
  8875  095E  00CC               	movwf	compensate_temperature@uncomp_data
  8876                           
  8877                           ;BME280_driver/bme280.c: 1132:     int32_t temperature_max = 8500;
  8878  095F  3000               	movlw	0
  8879  0960  00C7               	movwf	compensate_temperature@temperature_max+3
  8880  0961  3000               	movlw	0
  8881  0962  00C6               	movwf	compensate_temperature@temperature_max+2
  8882  0963  3021               	movlw	33
  8883  0964  00C5               	movwf	compensate_temperature@temperature_max+1
  8884  0965  3034               	movlw	52
  8885  0966  00C4               	movwf	compensate_temperature@temperature_max
  8886                           
  8887                           ;BME280_driver/bme280.c: 1134:     var1 = (int32_t)((uncomp_data->temperature / 8) - ((i
      +                          nt32_t)calib_data->dig_T1 * 2));
  8888  0967  082E               	movf	compensate_temperature@calib_data,w
  8889  0968  0086               	movwf	6
  8890  0969  3001               	movlw	1	; select bank2/3
  8891  096A  0087               	movwf	7
  8892  096B  3F40               	moviw [0]fsr1
  8893  096C  00B2               	movwf	??_compensate_temperature
  8894  096D  3F41               	moviw [1]fsr1
  8895  096E  00B3               	movwf	??_compensate_temperature+1
  8896  096F  0832               	movf	??_compensate_temperature,w
  8897  0970  00B4               	movwf	??_compensate_temperature+2
  8898  0971  0833               	movf	??_compensate_temperature+1,w
  8899  0972  00B5               	movwf	??_compensate_temperature+3
  8900  0973  01B6               	clrf	??_compensate_temperature+4
  8901  0974  01B7               	clrf	??_compensate_temperature+5
  8902  0975  3001               	movlw	1
  8903  0976                     u3135:	
  8904  0976  35B4               	lslf	??_compensate_temperature+2,f
  8905  0977  0DB5               	rlf	??_compensate_temperature+3,f
  8906  0978  0DB6               	rlf	??_compensate_temperature+4,f
  8907  0979  0DB7               	rlf	??_compensate_temperature+5,f
  8908  097A  0B89               	decfsz	9,f
  8909  097B  2976               	goto	u3135
  8910  097C  084C               	movf	compensate_temperature@uncomp_data,w
  8911  097D  3E04               	addlw	4
  8912  097E  0086               	movwf	6
  8913  097F  0187               	clrf	7
  8914  0980  3F40               	moviw [0]fsr1
  8915  0981  00B8               	movwf	??_compensate_temperature+6
  8916  0982  3F41               	moviw [1]fsr1
  8917  0983  00B9               	movwf	??_compensate_temperature+7
  8918  0984  3F42               	moviw [2]fsr1
  8919  0985  00BA               	movwf	??_compensate_temperature+8
  8920  0986  3F43               	moviw [3]fsr1
  8921  0987  00BB               	movwf	??_compensate_temperature+9
  8922  0988  3003               	movlw	3
  8923  0989                     u3145:	
  8924  0989  36BB               	lsrf	??_compensate_temperature+9,f
  8925  098A  0CBA               	rrf	??_compensate_temperature+8,f
  8926  098B  0CB9               	rrf	??_compensate_temperature+7,f
  8927  098C  0CB8               	rrf	??_compensate_temperature+6,f
  8928  098D  0B89               	decfsz	9,f
  8929  098E  2989               	goto	u3145
  8930  098F  0834               	movf	??_compensate_temperature+2,w
  8931  0990  02B8               	subwf	??_compensate_temperature+6,f
  8932  0991  0835               	movf	??_compensate_temperature+3,w
  8933  0992  3BB9               	subwfb	??_compensate_temperature+7,f
  8934  0993  0836               	movf	??_compensate_temperature+4,w
  8935  0994  3BBA               	subwfb	??_compensate_temperature+8,f
  8936  0995  0837               	movf	??_compensate_temperature+5,w
  8937  0996  3BBB               	subwfb	??_compensate_temperature+9,f
  8938  0997  083B               	movf	??_compensate_temperature+9,w
  8939  0998  00CB               	movwf	compensate_temperature@var1+3
  8940  0999  083A               	movf	??_compensate_temperature+8,w
  8941  099A  00CA               	movwf	compensate_temperature@var1+2
  8942  099B  0839               	movf	??_compensate_temperature+7,w
  8943  099C  00C9               	movwf	compensate_temperature@var1+1
  8944  099D  0838               	movf	??_compensate_temperature+6,w
  8945  099E  00C8               	movwf	compensate_temperature@var1
  8946                           
  8947                           ;BME280_driver/bme280.c: 1135:     var1 = (var1 * ((int32_t)calib_data->dig_T2)) / 2048;
  8948  099F  3000               	movlw	0
  8949  09A0  00A3               	movwf	___aldiv@divisor+3
  8950  09A1  3000               	movlw	0
  8951  09A2  00A2               	movwf	___aldiv@divisor+2
  8952  09A3  3008               	movlw	8
  8953  09A4  00A1               	movwf	___aldiv@divisor+1
  8954  09A5  3000               	movlw	0
  8955  09A6  00A0               	movwf	___aldiv@divisor
  8956  09A7  082E               	movf	compensate_temperature@calib_data,w
  8957  09A8  3E02               	addlw	2
  8958  09A9  0086               	movwf	6
  8959  09AA  3001               	movlw	1	; select bank2/3
  8960  09AB  0087               	movwf	7
  8961  09AC  3F40               	moviw [0]fsr1
  8962  09AD  00B2               	movwf	??_compensate_temperature
  8963  09AE  3F41               	moviw [1]fsr1
  8964  09AF  00B3               	movwf	??_compensate_temperature+1
  8965  09B0  0832               	movf	??_compensate_temperature,w
  8966  09B1  00F0               	movwf	___lmul@multiplier
  8967  09B2  0833               	movf	??_compensate_temperature+1,w
  8968  09B3  00F1               	movwf	___lmul@multiplier+1
  8969  09B4  0D89               	rlf	9,f
  8970  09B5  3B89               	subwfb	9,f
  8971  09B6  0989               	comf	9,f
  8972  09B7  00F2               	movwf	___lmul@multiplier+2
  8973  09B8  00F3               	movwf	___lmul@multiplier+3
  8974  09B9  084B               	movf	compensate_temperature@var1+3,w
  8975  09BA  00F7               	movwf	___lmul@multiplicand+3
  8976  09BB  084A               	movf	compensate_temperature@var1+2,w
  8977  09BC  00F6               	movwf	___lmul@multiplicand+2
  8978  09BD  0849               	movf	compensate_temperature@var1+1,w
  8979  09BE  00F5               	movwf	___lmul@multiplicand+1
  8980  09BF  0848               	movf	compensate_temperature@var1,w
  8981  09C0  00F4               	movwf	___lmul@multiplicand
  8982  09C1  319A  2221  3189   	fcall	___lmul
  8983  09C4  0873               	movf	?___lmul+3,w
  8984  09C5  0140               	movlb	0	; select bank0
  8985  09C6  00A7               	movwf	___aldiv@dividend+3
  8986  09C7  0872               	movf	?___lmul+2,w
  8987  09C8  00A6               	movwf	___aldiv@dividend+2
  8988  09C9  0871               	movf	?___lmul+1,w
  8989  09CA  00A5               	movwf	___aldiv@dividend+1
  8990  09CB  0870               	movf	?___lmul,w
  8991  09CC  00A4               	movwf	___aldiv@dividend
  8992  09CD  3194  24BD  3189   	fcall	___aldiv
  8993  09D0  0140               	movlb	0	; select bank0
  8994  09D1  0823               	movf	?___aldiv+3,w
  8995  09D2  00CB               	movwf	compensate_temperature@var1+3
  8996  09D3  0822               	movf	?___aldiv+2,w
  8997  09D4  00CA               	movwf	compensate_temperature@var1+2
  8998  09D5  0821               	movf	?___aldiv+1,w
  8999  09D6  00C9               	movwf	compensate_temperature@var1+1
  9000  09D7  0820               	movf	?___aldiv,w
  9001  09D8  00C8               	movwf	compensate_temperature@var1
  9002                           
  9003                           ;BME280_driver/bme280.c: 1136:     var2 = (int32_t)((uncomp_data->temperature / 16) - ((
      +                          int32_t)calib_data->dig_T1));
  9004  09D9  082E               	movf	compensate_temperature@calib_data,w
  9005  09DA  0086               	movwf	6
  9006  09DB  3001               	movlw	1	; select bank2/3
  9007  09DC  0087               	movwf	7
  9008  09DD  3F40               	moviw [0]fsr1
  9009  09DE  00B2               	movwf	??_compensate_temperature
  9010  09DF  3F41               	moviw [1]fsr1
  9011  09E0  00B3               	movwf	??_compensate_temperature+1
  9012  09E1  0832               	movf	??_compensate_temperature,w
  9013  09E2  00B4               	movwf	??_compensate_temperature+2
  9014  09E3  0833               	movf	??_compensate_temperature+1,w
  9015  09E4  00B5               	movwf	??_compensate_temperature+3
  9016  09E5  01B6               	clrf	??_compensate_temperature+4
  9017  09E6  01B7               	clrf	??_compensate_temperature+5
  9018  09E7  084C               	movf	compensate_temperature@uncomp_data,w
  9019  09E8  3E04               	addlw	4
  9020  09E9  0086               	movwf	6
  9021  09EA  0187               	clrf	7
  9022  09EB  3F40               	moviw [0]fsr1
  9023  09EC  00B8               	movwf	??_compensate_temperature+6
  9024  09ED  3F41               	moviw [1]fsr1
  9025  09EE  00B9               	movwf	??_compensate_temperature+7
  9026  09EF  3F42               	moviw [2]fsr1
  9027  09F0  00BA               	movwf	??_compensate_temperature+8
  9028  09F1  3F43               	moviw [3]fsr1
  9029  09F2  00BB               	movwf	??_compensate_temperature+9
  9030  09F3  3004               	movlw	4
  9031  09F4                     u3155:	
  9032  09F4  36BB               	lsrf	??_compensate_temperature+9,f
  9033  09F5  0CBA               	rrf	??_compensate_temperature+8,f
  9034  09F6  0CB9               	rrf	??_compensate_temperature+7,f
  9035  09F7  0CB8               	rrf	??_compensate_temperature+6,f
  9036  09F8  0B89               	decfsz	9,f
  9037  09F9  29F4               	goto	u3155
  9038  09FA  0834               	movf	??_compensate_temperature+2,w
  9039  09FB  02B8               	subwf	??_compensate_temperature+6,f
  9040  09FC  0835               	movf	??_compensate_temperature+3,w
  9041  09FD  3BB9               	subwfb	??_compensate_temperature+7,f
  9042  09FE  0836               	movf	??_compensate_temperature+4,w
  9043  09FF  3BBA               	subwfb	??_compensate_temperature+8,f
  9044  0A00  0837               	movf	??_compensate_temperature+5,w
  9045  0A01  3BBB               	subwfb	??_compensate_temperature+9,f
  9046  0A02  083B               	movf	??_compensate_temperature+9,w
  9047  0A03  00D0               	movwf	compensate_temperature@var2+3
  9048  0A04  083A               	movf	??_compensate_temperature+8,w
  9049  0A05  00CF               	movwf	compensate_temperature@var2+2
  9050  0A06  0839               	movf	??_compensate_temperature+7,w
  9051  0A07  00CE               	movwf	compensate_temperature@var2+1
  9052  0A08  0838               	movf	??_compensate_temperature+6,w
  9053  0A09  00CD               	movwf	compensate_temperature@var2
  9054                           
  9055                           ;BME280_driver/bme280.c: 1137:     var2 = (((var2 * var2) / 4096) * ((int32_t)calib_data
      +                          ->dig_T3)) / 16384;
  9056  0A0A  3000               	movlw	0
  9057  0A0B  00A3               	movwf	___aldiv@divisor+3
  9058  0A0C  3000               	movlw	0
  9059  0A0D  00A2               	movwf	___aldiv@divisor+2
  9060  0A0E  3010               	movlw	16
  9061  0A0F  00A1               	movwf	___aldiv@divisor+1
  9062  0A10  3000               	movlw	0
  9063  0A11  00A0               	movwf	___aldiv@divisor
  9064  0A12  0850               	movf	compensate_temperature@var2+3,w
  9065  0A13  00F3               	movwf	___lmul@multiplier+3
  9066  0A14  084F               	movf	compensate_temperature@var2+2,w
  9067  0A15  00F2               	movwf	___lmul@multiplier+2
  9068  0A16  084E               	movf	compensate_temperature@var2+1,w
  9069  0A17  00F1               	movwf	___lmul@multiplier+1
  9070  0A18  084D               	movf	compensate_temperature@var2,w
  9071  0A19  00F0               	movwf	___lmul@multiplier
  9072  0A1A  0850               	movf	compensate_temperature@var2+3,w
  9073  0A1B  00F7               	movwf	___lmul@multiplicand+3
  9074  0A1C  084F               	movf	compensate_temperature@var2+2,w
  9075  0A1D  00F6               	movwf	___lmul@multiplicand+2
  9076  0A1E  084E               	movf	compensate_temperature@var2+1,w
  9077  0A1F  00F5               	movwf	___lmul@multiplicand+1
  9078  0A20  084D               	movf	compensate_temperature@var2,w
  9079  0A21  00F4               	movwf	___lmul@multiplicand
  9080  0A22  319A  2221  3189   	fcall	___lmul
  9081  0A25  0873               	movf	?___lmul+3,w
  9082  0A26  0140               	movlb	0	; select bank0
  9083  0A27  00A7               	movwf	___aldiv@dividend+3
  9084  0A28  0872               	movf	?___lmul+2,w
  9085  0A29  00A6               	movwf	___aldiv@dividend+2
  9086  0A2A  0871               	movf	?___lmul+1,w
  9087  0A2B  00A5               	movwf	___aldiv@dividend+1
  9088  0A2C  0870               	movf	?___lmul,w
  9089  0A2D  00A4               	movwf	___aldiv@dividend
  9090  0A2E  3194  24BD  3189   	fcall	___aldiv
  9091  0A31  0140               	movlb	0	; select bank0
  9092  0A32  0823               	movf	?___aldiv+3,w
  9093  0A33  00BF               	movwf	_compensate_temperature$2715+3
  9094  0A34  0822               	movf	?___aldiv+2,w
  9095  0A35  00BE               	movwf	_compensate_temperature$2715+2
  9096  0A36  0821               	movf	?___aldiv+1,w
  9097  0A37  00BD               	movwf	_compensate_temperature$2715+1
  9098  0A38  0820               	movf	?___aldiv,w
  9099  0A39  00BC               	movwf	_compensate_temperature$2715
  9100                           
  9101                           ;BME280_driver/bme280.c: 1137:     var2 = (((var2 * var2) / 4096) * ((int32_t)calib_data
      +                          ->dig_T3)) / 16384;
  9102  0A3A  3000               	movlw	0
  9103  0A3B  00A3               	movwf	___aldiv@divisor+3
  9104  0A3C  3000               	movlw	0
  9105  0A3D  00A2               	movwf	___aldiv@divisor+2
  9106  0A3E  3040               	movlw	64
  9107  0A3F  00A1               	movwf	___aldiv@divisor+1
  9108  0A40  3000               	movlw	0
  9109  0A41  00A0               	movwf	___aldiv@divisor
  9110  0A42  083F               	movf	_compensate_temperature$2715+3,w
  9111  0A43  00F3               	movwf	___lmul@multiplier+3
  9112  0A44  083E               	movf	_compensate_temperature$2715+2,w
  9113  0A45  00F2               	movwf	___lmul@multiplier+2
  9114  0A46  083D               	movf	_compensate_temperature$2715+1,w
  9115  0A47  00F1               	movwf	___lmul@multiplier+1
  9116  0A48  083C               	movf	_compensate_temperature$2715,w
  9117  0A49  00F0               	movwf	___lmul@multiplier
  9118  0A4A  082E               	movf	compensate_temperature@calib_data,w
  9119  0A4B  3E04               	addlw	4
  9120  0A4C  0086               	movwf	6
  9121  0A4D  3001               	movlw	1	; select bank2/3
  9122  0A4E  0087               	movwf	7
  9123  0A4F  3F40               	moviw [0]fsr1
  9124  0A50  00B2               	movwf	??_compensate_temperature
  9125  0A51  3F41               	moviw [1]fsr1
  9126  0A52  00B3               	movwf	??_compensate_temperature+1
  9127  0A53  0832               	movf	??_compensate_temperature,w
  9128  0A54  00F4               	movwf	___lmul@multiplicand
  9129  0A55  0833               	movf	??_compensate_temperature+1,w
  9130  0A56  00F5               	movwf	___lmul@multiplicand+1
  9131  0A57  0D89               	rlf	9,f
  9132  0A58  3B89               	subwfb	9,f
  9133  0A59  0989               	comf	9,f
  9134  0A5A  00F6               	movwf	___lmul@multiplicand+2
  9135  0A5B  00F7               	movwf	___lmul@multiplicand+3
  9136  0A5C  319A  2221  3189   	fcall	___lmul
  9137  0A5F  0873               	movf	?___lmul+3,w
  9138  0A60  0140               	movlb	0	; select bank0
  9139  0A61  00A7               	movwf	___aldiv@dividend+3
  9140  0A62  0872               	movf	?___lmul+2,w
  9141  0A63  00A6               	movwf	___aldiv@dividend+2
  9142  0A64  0871               	movf	?___lmul+1,w
  9143  0A65  00A5               	movwf	___aldiv@dividend+1
  9144  0A66  0870               	movf	?___lmul,w
  9145  0A67  00A4               	movwf	___aldiv@dividend
  9146  0A68  3194  24BD  3189   	fcall	___aldiv
  9147  0A6B  0140               	movlb	0	; select bank0
  9148  0A6C  0823               	movf	?___aldiv+3,w
  9149  0A6D  00D0               	movwf	compensate_temperature@var2+3
  9150  0A6E  0822               	movf	?___aldiv+2,w
  9151  0A6F  00CF               	movwf	compensate_temperature@var2+2
  9152  0A70  0821               	movf	?___aldiv+1,w
  9153  0A71  00CE               	movwf	compensate_temperature@var2+1
  9154  0A72  0820               	movf	?___aldiv,w
  9155  0A73  00CD               	movwf	compensate_temperature@var2
  9156                           
  9157                           ;BME280_driver/bme280.c: 1138:     calib_data->t_fine = var1 + var2;
  9158  0A74  0848               	movf	compensate_temperature@var1,w
  9159  0A75  074D               	addwf	compensate_temperature@var2,w
  9160  0A76  00B2               	movwf	??_compensate_temperature
  9161  0A77  0849               	movf	compensate_temperature@var1+1,w
  9162  0A78  3D4E               	addwfc	compensate_temperature@var2+1,w
  9163  0A79  00B3               	movwf	??_compensate_temperature+1
  9164  0A7A  084A               	movf	compensate_temperature@var1+2,w
  9165  0A7B  3D4F               	addwfc	compensate_temperature@var2+2,w
  9166  0A7C  00B4               	movwf	??_compensate_temperature+2
  9167  0A7D  084B               	movf	compensate_temperature@var1+3,w
  9168  0A7E  3D50               	addwfc	compensate_temperature@var2+3,w
  9169  0A7F  00B5               	movwf	??_compensate_temperature+3
  9170  0A80  082E               	movf	compensate_temperature@calib_data,w
  9171  0A81  3E21               	addlw	33
  9172  0A82  0086               	movwf	6
  9173  0A83  3001               	movlw	1	; select bank2/3
  9174  0A84  0087               	movwf	7
  9175  0A85  0832               	movf	??_compensate_temperature,w
  9176  0A86  3FC0               	movwi [0]fsr1
  9177  0A87  0833               	movf	??_compensate_temperature+1,w
  9178  0A88  3FC1               	movwi [1]fsr1
  9179  0A89  0834               	movf	??_compensate_temperature+2,w
  9180  0A8A  3FC2               	movwi [2]fsr1
  9181  0A8B  0835               	movf	??_compensate_temperature+3,w
  9182  0A8C  3FC3               	movwi [3]fsr1
  9183                           
  9184                           ;BME280_driver/bme280.c: 1139:     temperature = (calib_data->t_fine * 5 + 128) / 256;
  9185  0A8D  3000               	movlw	0
  9186  0A8E  00A3               	movwf	___aldiv@divisor+3
  9187  0A8F  3000               	movlw	0
  9188  0A90  00A2               	movwf	___aldiv@divisor+2
  9189  0A91  3001               	movlw	1
  9190  0A92  00A1               	movwf	___aldiv@divisor+1
  9191  0A93  3000               	movlw	0
  9192  0A94  00A0               	movwf	___aldiv@divisor
  9193  0A95  3080               	movlw	128
  9194  0A96  00B2               	movwf	??_compensate_temperature
  9195  0A97  3000               	movlw	0
  9196  0A98  00B3               	movwf	??_compensate_temperature+1
  9197  0A99  3000               	movlw	0
  9198  0A9A  00B4               	movwf	??_compensate_temperature+2
  9199  0A9B  3000               	movlw	0
  9200  0A9C  00B5               	movwf	??_compensate_temperature+3
  9201  0A9D  082E               	movf	compensate_temperature@calib_data,w
  9202  0A9E  3E21               	addlw	33
  9203  0A9F  0086               	movwf	6
  9204  0AA0  3001               	movlw	1	; select bank2/3
  9205  0AA1  0087               	movwf	7
  9206  0AA2  3F40               	moviw [0]fsr1
  9207  0AA3  00F0               	movwf	___lmul@multiplier
  9208  0AA4  3F41               	moviw [1]fsr1
  9209  0AA5  00F1               	movwf	___lmul@multiplier+1
  9210  0AA6  3F42               	moviw [2]fsr1
  9211  0AA7  00F2               	movwf	___lmul@multiplier+2
  9212  0AA8  3F43               	moviw [3]fsr1
  9213  0AA9  00F3               	movwf	___lmul@multiplier+3
  9214  0AAA  3000               	movlw	0
  9215  0AAB  00F7               	movwf	___lmul@multiplicand+3
  9216  0AAC  3000               	movlw	0
  9217  0AAD  00F6               	movwf	___lmul@multiplicand+2
  9218  0AAE  3000               	movlw	0
  9219  0AAF  00F5               	movwf	___lmul@multiplicand+1
  9220  0AB0  3005               	movlw	5
  9221  0AB1  00F4               	movwf	___lmul@multiplicand
  9222  0AB2  319A  2221  3189   	fcall	___lmul
  9223  0AB5  0870               	movf	?___lmul,w
  9224  0AB6  0140               	movlb	0	; select bank0
  9225  0AB7  07B2               	addwf	??_compensate_temperature,f
  9226  0AB8  0871               	movf	?___lmul+1,w
  9227  0AB9  3DB3               	addwfc	??_compensate_temperature+1,f
  9228  0ABA  0872               	movf	?___lmul+2,w
  9229  0ABB  3DB4               	addwfc	??_compensate_temperature+2,f
  9230  0ABC  0873               	movf	?___lmul+3,w
  9231  0ABD  3DB5               	addwfc	??_compensate_temperature+3,f
  9232  0ABE  0835               	movf	??_compensate_temperature+3,w
  9233  0ABF  00A7               	movwf	___aldiv@dividend+3
  9234  0AC0  0834               	movf	??_compensate_temperature+2,w
  9235  0AC1  00A6               	movwf	___aldiv@dividend+2
  9236  0AC2  0833               	movf	??_compensate_temperature+1,w
  9237  0AC3  00A5               	movwf	___aldiv@dividend+1
  9238  0AC4  0832               	movf	??_compensate_temperature,w
  9239  0AC5  00A4               	movwf	___aldiv@dividend
  9240  0AC6  3194  24BD  3189   	fcall	___aldiv
  9241  0AC9  0140               	movlb	0	; select bank0
  9242  0ACA  0823               	movf	?___aldiv+3,w
  9243  0ACB  00D4               	movwf	compensate_temperature@temperature+3
  9244  0ACC  0822               	movf	?___aldiv+2,w
  9245  0ACD  00D3               	movwf	compensate_temperature@temperature+2
  9246  0ACE  0821               	movf	?___aldiv+1,w
  9247  0ACF  00D2               	movwf	compensate_temperature@temperature+1
  9248  0AD0  0820               	movf	?___aldiv,w
  9249  0AD1  00D1               	movwf	compensate_temperature@temperature
  9250                           
  9251                           ;BME280_driver/bme280.c: 1140:     if (temperature < temperature_min)
  9252  0AD2  1FD4               	btfss	compensate_temperature@temperature+3,7
  9253  0AD3  2AE6               	goto	l3782
  9254  0AD4  3060               	movlw	96
  9255  0AD5  0251               	subwf	compensate_temperature@temperature,w
  9256  0AD6  30F0               	movlw	240
  9257  0AD7  3B52               	subwfb	compensate_temperature@temperature+1,w
  9258  0AD8  30FF               	movlw	255
  9259  0AD9  3B53               	subwfb	compensate_temperature@temperature+2,w
  9260  0ADA  30FF               	movlw	255
  9261  0ADB  3B54               	subwfb	compensate_temperature@temperature+3,w
  9262  0ADC  1803               	btfsc	3,0
  9263  0ADD  2AE6               	goto	l3782
  9264                           
  9265                           ;BME280_driver/bme280.c: 1141:     {;BME280_driver/bme280.c: 1142:         temperature =
      +                           temperature_min;
  9266  0ADE  30FF               	movlw	255
  9267  0ADF  00D4               	movwf	compensate_temperature@temperature+3
  9268  0AE0  30FF               	movlw	255
  9269  0AE1  00D3               	movwf	compensate_temperature@temperature+2
  9270  0AE2  30F0               	movlw	240
  9271  0AE3  00D2               	movwf	compensate_temperature@temperature+1
  9272  0AE4  3060               	movlw	96
  9273  0AE5  2AFB               	goto	L2
  9274  0AE6                     l3782:	
  9275                           ;BME280_driver/bme280.c: 1143:     }
  9276                           
  9277  0AE6  1BD4               	btfsc	compensate_temperature@temperature+3,7
  9278  0AE7  2AFC               	goto	l185
  9279  0AE8  0854               	movf	compensate_temperature@temperature+3,w
  9280  0AE9  1D03               	btfss	3,2
  9281  0AEA  2AF4               	goto	l3784
  9282  0AEB  0853               	movf	compensate_temperature@temperature+2,w
  9283  0AEC  1D03               	btfss	3,2
  9284  0AED  2AF4               	goto	l3784
  9285  0AEE  3035               	movlw	53
  9286  0AEF  0251               	subwf	compensate_temperature@temperature,w
  9287  0AF0  3021               	movlw	33
  9288  0AF1  3B52               	subwfb	compensate_temperature@temperature+1,w
  9289  0AF2  1C03               	btfss	3,0
  9290  0AF3  2AFC               	goto	l185
  9291  0AF4                     l3784:	
  9292                           
  9293                           ;BME280_driver/bme280.c: 1145:     {;BME280_driver/bme280.c: 1146:         temperature =
      +                           temperature_max;
  9294  0AF4  3000               	movlw	0
  9295  0AF5  00D4               	movwf	compensate_temperature@temperature+3
  9296  0AF6  3000               	movlw	0
  9297  0AF7  00D3               	movwf	compensate_temperature@temperature+2
  9298  0AF8  3021               	movlw	33
  9299  0AF9  00D2               	movwf	compensate_temperature@temperature+1
  9300  0AFA  3034               	movlw	52
  9301  0AFB                     L2:	
  9302  0AFB  00D1               	movwf	compensate_temperature@temperature
  9303  0AFC                     l185:	
  9304                           
  9305                           ;BME280_driver/bme280.c: 1149:     return temperature;
  9306  0AFC  0854               	movf	compensate_temperature@temperature+3,w
  9307  0AFD  00B1               	movwf	?_compensate_temperature+3
  9308  0AFE  0853               	movf	compensate_temperature@temperature+2,w
  9309  0AFF  00B0               	movwf	?_compensate_temperature+2
  9310  0B00  0852               	movf	compensate_temperature@temperature+1,w
  9311  0B01  00AF               	movwf	?_compensate_temperature+1
  9312  0B02  0851               	movf	compensate_temperature@temperature,w
  9313  0B03  00AE               	movwf	?_compensate_temperature
  9314  0B04  0008               	return
  9315  0B05                     __end_of_compensate_temperature:	
  9316                           
  9317                           	psect	text7
  9318  0054                     __ptext7:	
  9319 ;; *************** function _compensate_pressure *****************
  9320 ;; Defined at:
  9321 ;;		line 1208 in file "BME280_driver/bme280.c"
  9322 ;; Parameters:    Size  Location     Type
  9323 ;;  uncomp_data     1    wreg     PTR const struct bme280_
  9324 ;;		 -> bme280_get_sensor_data@uncomp_data(12), 
  9325 ;;  calib_data      1   14[BANK0 ] PTR const struct bme280_
  9326 ;;		 -> EnvSensor(51), 
  9327 ;; Auto vars:     Size  Location     Type
  9328 ;;  uncomp_data     1   20[BANK1 ] PTR const struct bme280_
  9329 ;;		 -> bme280_get_sensor_data@uncomp_data(12), 
  9330 ;;  var1            4   41[BANK1 ] long 
  9331 ;;  pressure        4   37[BANK1 ] unsigned long 
  9332 ;;  var2            4   33[BANK1 ] long 
  9333 ;;  pressure_min    4    0        unsigned long 
  9334 ;;  pressure_max    4   21[BANK1 ] unsigned long 
  9335 ;;  var5            4    8[BANK1 ] unsigned long 
  9336 ;;  var4            4    4[BANK1 ] long 
  9337 ;;  var3            4    0[BANK1 ] long 
  9338 ;; Return value:  Size  Location     Type
  9339 ;;                  4   14[BANK0 ] unsigned long 
  9340 ;; Registers used:
  9341 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9342 ;; Tracked objects:
  9343 ;;		On entry : 0/0
  9344 ;;		On exit  : 0/0
  9345 ;;		Unchanged: 0/0
  9346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9347 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9348 ;;      Locals:         0       0      45       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9349 ;;      Temps:          0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9350 ;;      Totals:         0      22      45       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9351 ;;Total ram usage:       67 bytes
  9352 ;; Hardware stack levels used:    1
  9353 ;; Hardware stack levels required when called:    4
  9354 ;; This function calls:
  9355 ;;		___aldiv
  9356 ;;		___lldiv
  9357 ;;		___lmul
  9358 ;; This function is called by:
  9359 ;;		_bme280_compensate_data
  9360 ;; This function uses a non-reentrant model
  9361 ;;
  9362                           
  9363                           
  9364                           ;psect for function _compensate_pressure
  9365  0054                     _compensate_pressure:	
  9366                           
  9367                           ;incstack = 0
  9368                           ; Regs used in _compensate_pressure: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9369                           ;compensate_pressure@uncomp_data stored from wreg
  9370  0054  0141               	movlb	1	; select bank1
  9371  0055  00B4               	movwf	compensate_pressure@uncomp_data^(0+128)
  9372                           
  9373                           ;BME280_driver/bme280.c: 1218:     uint32_t pressure_max = 110000;
  9374  0056  3000               	movlw	0
  9375  0057  00B8               	movwf	(compensate_pressure@pressure_max+3)^(0+128)
  9376  0058  3001               	movlw	1
  9377  0059  00B7               	movwf	(compensate_pressure@pressure_max+2)^(0+128)
  9378  005A  30AD               	movlw	173
  9379  005B  00B6               	movwf	(compensate_pressure@pressure_max+1)^(0+128)
  9380  005C  30B0               	movlw	176
  9381  005D  00B5               	movwf	compensate_pressure@pressure_max^(0+128)
  9382                           
  9383                           ;BME280_driver/bme280.c: 1220:     var1 = (((int32_t)calib_data->t_fine) / 2) - (int32_t
      +                          )64000;
  9384  005E  3000               	movlw	0
  9385  005F  0140               	movlb	0	; select bank0
  9386  0060  00A3               	movwf	___aldiv@divisor+3
  9387  0061  3000               	movlw	0
  9388  0062  00A2               	movwf	___aldiv@divisor+2
  9389  0063  3000               	movlw	0
  9390  0064  00A1               	movwf	___aldiv@divisor+1
  9391  0065  3002               	movlw	2
  9392  0066  00A0               	movwf	___aldiv@divisor
  9393  0067  082E               	movf	compensate_pressure@calib_data,w
  9394  0068  3E21               	addlw	33
  9395  0069  0086               	movwf	6
  9396  006A  3001               	movlw	1	; select bank2/3
  9397  006B  0087               	movwf	7
  9398  006C  3F40               	moviw [0]fsr1
  9399  006D  00A4               	movwf	___aldiv@dividend
  9400  006E  3F41               	moviw [1]fsr1
  9401  006F  00A5               	movwf	___aldiv@dividend+1
  9402  0070  3F42               	moviw [2]fsr1
  9403  0071  00A6               	movwf	___aldiv@dividend+2
  9404  0072  3F43               	moviw [3]fsr1
  9405  0073  00A7               	movwf	___aldiv@dividend+3
  9406  0074  3194  24BD  3180   	fcall	___aldiv
  9407  0077  3000               	movlw	0
  9408  0078  0140               	movlb	0	; select bank0
  9409  0079  0720               	addwf	?___aldiv,w
  9410  007A  0141               	movlb	1	; select bank1
  9411  007B  00C9               	movwf	compensate_pressure@var1^(0+128)
  9412  007C  3006               	movlw	6
  9413  007D  0140               	movlb	0	; select bank0
  9414  007E  3D21               	addwfc	?___aldiv+1,w
  9415  007F  0141               	movlb	1	; select bank1
  9416  0080  00CA               	movwf	(compensate_pressure@var1+1)^(0+128)
  9417  0081  30FF               	movlw	255
  9418  0082  0140               	movlb	0	; select bank0
  9419  0083  3D22               	addwfc	?___aldiv+2,w
  9420  0084  0141               	movlb	1	; select bank1
  9421  0085  00CB               	movwf	(compensate_pressure@var1+2)^(0+128)
  9422  0086  30FF               	movlw	255
  9423  0087  0140               	movlb	0	; select bank0
  9424  0088  3D23               	addwfc	?___aldiv+3,w
  9425  0089  0141               	movlb	1	; select bank1
  9426  008A  00CC               	movwf	(compensate_pressure@var1+3)^(0+128)
  9427                           
  9428                           ;BME280_driver/bme280.c: 1221:     var2 = (((var1 / 4) * (var1 / 4)) / 2048) * ((int32_t
      +                          )calib_data->dig_P6);
  9429  008B  3000               	movlw	0
  9430  008C  0140               	movlb	0	; select bank0
  9431  008D  00A3               	movwf	___aldiv@divisor+3
  9432  008E  3000               	movlw	0
  9433  008F  00A2               	movwf	___aldiv@divisor+2
  9434  0090  3000               	movlw	0
  9435  0091  00A1               	movwf	___aldiv@divisor+1
  9436  0092  3004               	movlw	4
  9437  0093  00A0               	movwf	___aldiv@divisor
  9438  0094  0141               	movlb	1	; select bank1
  9439  0095  084C               	movf	(compensate_pressure@var1+3)^(0+128),w
  9440  0096  0140               	movlb	0	; select bank0
  9441  0097  00A7               	movwf	___aldiv@dividend+3
  9442  0098  0141               	movlb	1	; select bank1
  9443  0099  084B               	movf	(compensate_pressure@var1+2)^(0+128),w
  9444  009A  0140               	movlb	0	; select bank0
  9445  009B  00A6               	movwf	___aldiv@dividend+2
  9446  009C  0141               	movlb	1	; select bank1
  9447  009D  084A               	movf	(compensate_pressure@var1+1)^(0+128),w
  9448  009E  0140               	movlb	0	; select bank0
  9449  009F  00A5               	movwf	___aldiv@dividend+1
  9450  00A0  0141               	movlb	1	; select bank1
  9451  00A1  0849               	movf	compensate_pressure@var1^(0+128),w
  9452  00A2  0140               	movlb	0	; select bank0
  9453  00A3  00A4               	movwf	___aldiv@dividend
  9454  00A4  3194  24BD  3180   	fcall	___aldiv
  9455  00A7  0140               	movlb	0	; select bank0
  9456  00A8  0823               	movf	?___aldiv+3,w
  9457  00A9  00F3               	movwf	___lmul@multiplier+3
  9458  00AA  0822               	movf	?___aldiv+2,w
  9459  00AB  00F2               	movwf	___lmul@multiplier+2
  9460  00AC  0821               	movf	?___aldiv+1,w
  9461  00AD  00F1               	movwf	___lmul@multiplier+1
  9462  00AE  0820               	movf	?___aldiv,w
  9463  00AF  00F0               	movwf	___lmul@multiplier
  9464  00B0  3000               	movlw	0
  9465  00B1  00A3               	movwf	___aldiv@divisor+3
  9466  00B2  3000               	movlw	0
  9467  00B3  00A2               	movwf	___aldiv@divisor+2
  9468  00B4  3000               	movlw	0
  9469  00B5  00A1               	movwf	___aldiv@divisor+1
  9470  00B6  3004               	movlw	4
  9471  00B7  00A0               	movwf	___aldiv@divisor
  9472  00B8  0141               	movlb	1	; select bank1
  9473  00B9  084C               	movf	(compensate_pressure@var1+3)^(0+128),w
  9474  00BA  0140               	movlb	0	; select bank0
  9475  00BB  00A7               	movwf	___aldiv@dividend+3
  9476  00BC  0141               	movlb	1	; select bank1
  9477  00BD  084B               	movf	(compensate_pressure@var1+2)^(0+128),w
  9478  00BE  0140               	movlb	0	; select bank0
  9479  00BF  00A6               	movwf	___aldiv@dividend+2
  9480  00C0  0141               	movlb	1	; select bank1
  9481  00C1  084A               	movf	(compensate_pressure@var1+1)^(0+128),w
  9482  00C2  0140               	movlb	0	; select bank0
  9483  00C3  00A5               	movwf	___aldiv@dividend+1
  9484  00C4  0141               	movlb	1	; select bank1
  9485  00C5  0849               	movf	compensate_pressure@var1^(0+128),w
  9486  00C6  0140               	movlb	0	; select bank0
  9487  00C7  00A4               	movwf	___aldiv@dividend
  9488  00C8  3194  24BD  3180   	fcall	___aldiv
  9489  00CB  0140               	movlb	0	; select bank0
  9490  00CC  0823               	movf	?___aldiv+3,w
  9491  00CD  00F7               	movwf	___lmul@multiplicand+3
  9492  00CE  0822               	movf	?___aldiv+2,w
  9493  00CF  00F6               	movwf	___lmul@multiplicand+2
  9494  00D0  0821               	movf	?___aldiv+1,w
  9495  00D1  00F5               	movwf	___lmul@multiplicand+1
  9496  00D2  0820               	movf	?___aldiv,w
  9497  00D3  00F4               	movwf	___lmul@multiplicand
  9498  00D4  319A  2221  3180   	fcall	___lmul
  9499  00D7  0873               	movf	?___lmul+3,w
  9500  00D8  0141               	movlb	1	; select bank1
  9501  00D9  00BC               	movwf	(_compensate_pressure$2716+3)^(0+128)
  9502  00DA  0872               	movf	?___lmul+2,w
  9503  00DB  00BB               	movwf	(_compensate_pressure$2716+2)^(0+128)
  9504  00DC  0871               	movf	?___lmul+1,w
  9505  00DD  00BA               	movwf	(_compensate_pressure$2716+1)^(0+128)
  9506  00DE  0870               	movf	?___lmul,w
  9507  00DF  00B9               	movwf	_compensate_pressure$2716^(0+128)
  9508                           
  9509                           ;BME280_driver/bme280.c: 1221:     var2 = (((var1 / 4) * (var1 / 4)) / 2048) * ((int32_t
      +                          )calib_data->dig_P6);
  9510  00E0  3000               	movlw	0
  9511  00E1  0140               	movlb	0	; select bank0
  9512  00E2  00A3               	movwf	___aldiv@divisor+3
  9513  00E3  3000               	movlw	0
  9514  00E4  00A2               	movwf	___aldiv@divisor+2
  9515  00E5  3008               	movlw	8
  9516  00E6  00A1               	movwf	___aldiv@divisor+1
  9517  00E7  3000               	movlw	0
  9518  00E8  00A0               	movwf	___aldiv@divisor
  9519  00E9  0141               	movlb	1	; select bank1
  9520  00EA  083C               	movf	(_compensate_pressure$2716+3)^(0+128),w
  9521  00EB  0140               	movlb	0	; select bank0
  9522  00EC  00A7               	movwf	___aldiv@dividend+3
  9523  00ED  0141               	movlb	1	; select bank1
  9524  00EE  083B               	movf	(_compensate_pressure$2716+2)^(0+128),w
  9525  00EF  0140               	movlb	0	; select bank0
  9526  00F0  00A6               	movwf	___aldiv@dividend+2
  9527  00F1  0141               	movlb	1	; select bank1
  9528  00F2  083A               	movf	(_compensate_pressure$2716+1)^(0+128),w
  9529  00F3  0140               	movlb	0	; select bank0
  9530  00F4  00A5               	movwf	___aldiv@dividend+1
  9531  00F5  0141               	movlb	1	; select bank1
  9532  00F6  0839               	movf	_compensate_pressure$2716^(0+128),w
  9533  00F7  0140               	movlb	0	; select bank0
  9534  00F8  00A4               	movwf	___aldiv@dividend
  9535  00F9  3194  24BD  3180   	fcall	___aldiv
  9536  00FC  0140               	movlb	0	; select bank0
  9537  00FD  0823               	movf	?___aldiv+3,w
  9538  00FE  00F3               	movwf	___lmul@multiplier+3
  9539  00FF  0822               	movf	?___aldiv+2,w
  9540  0100  00F2               	movwf	___lmul@multiplier+2
  9541  0101  0821               	movf	?___aldiv+1,w
  9542  0102  00F1               	movwf	___lmul@multiplier+1
  9543  0103  0820               	movf	?___aldiv,w
  9544  0104  00F0               	movwf	___lmul@multiplier
  9545  0105  082E               	movf	compensate_pressure@calib_data,w
  9546  0106  3E10               	addlw	16
  9547  0107  0086               	movwf	6
  9548  0108  3001               	movlw	1	; select bank2/3
  9549  0109  0087               	movwf	7
  9550  010A  3F40               	moviw [0]fsr1
  9551  010B  00B2               	movwf	??_compensate_pressure
  9552  010C  3F41               	moviw [1]fsr1
  9553  010D  00B3               	movwf	??_compensate_pressure+1
  9554  010E  0832               	movf	??_compensate_pressure,w
  9555  010F  00F4               	movwf	___lmul@multiplicand
  9556  0110  0833               	movf	??_compensate_pressure+1,w
  9557  0111  00F5               	movwf	___lmul@multiplicand+1
  9558  0112  0D89               	rlf	9,f
  9559  0113  3B89               	subwfb	9,f
  9560  0114  0989               	comf	9,f
  9561  0115  00F6               	movwf	___lmul@multiplicand+2
  9562  0116  00F7               	movwf	___lmul@multiplicand+3
  9563  0117  319A  2221  3180   	fcall	___lmul
  9564  011A  0873               	movf	?___lmul+3,w
  9565  011B  0141               	movlb	1	; select bank1
  9566  011C  00C4               	movwf	(compensate_pressure@var2+3)^(0+128)
  9567  011D  0872               	movf	?___lmul+2,w
  9568  011E  00C3               	movwf	(compensate_pressure@var2+2)^(0+128)
  9569  011F  0871               	movf	?___lmul+1,w
  9570  0120  00C2               	movwf	(compensate_pressure@var2+1)^(0+128)
  9571  0121  0870               	movf	?___lmul,w
  9572  0122  00C1               	movwf	compensate_pressure@var2^(0+128)
  9573                           
  9574                           ;BME280_driver/bme280.c: 1222:     var2 = var2 + ((var1 * ((int32_t)calib_data->dig_P5))
      +                           * 2);
  9575  0123  0841               	movf	compensate_pressure@var2^(0+128),w
  9576  0124  0140               	movlb	0	; select bank0
  9577  0125  00B2               	movwf	??_compensate_pressure
  9578  0126  0141               	movlb	1	; select bank1
  9579  0127  0842               	movf	(compensate_pressure@var2+1)^(0+128),w
  9580  0128  0140               	movlb	0	; select bank0
  9581  0129  00B3               	movwf	??_compensate_pressure+1
  9582  012A  0141               	movlb	1	; select bank1
  9583  012B  0843               	movf	(compensate_pressure@var2+2)^(0+128),w
  9584  012C  0140               	movlb	0	; select bank0
  9585  012D  00B4               	movwf	??_compensate_pressure+2
  9586  012E  0141               	movlb	1	; select bank1
  9587  012F  0844               	movf	(compensate_pressure@var2+3)^(0+128),w
  9588  0130  0140               	movlb	0	; select bank0
  9589  0131  00B5               	movwf	??_compensate_pressure+3
  9590  0132  082E               	movf	compensate_pressure@calib_data,w
  9591  0133  3E0E               	addlw	14
  9592  0134  0086               	movwf	6
  9593  0135  3001               	movlw	1	; select bank2/3
  9594  0136  0087               	movwf	7
  9595  0137  3F40               	moviw [0]fsr1
  9596  0138  00B6               	movwf	??_compensate_pressure+4
  9597  0139  3F41               	moviw [1]fsr1
  9598  013A  00B7               	movwf	??_compensate_pressure+5
  9599  013B  0836               	movf	??_compensate_pressure+4,w
  9600  013C  00F0               	movwf	___lmul@multiplier
  9601  013D  0837               	movf	??_compensate_pressure+5,w
  9602  013E  00F1               	movwf	___lmul@multiplier+1
  9603  013F  0D89               	rlf	9,f
  9604  0140  3B89               	subwfb	9,f
  9605  0141  0989               	comf	9,f
  9606  0142  00F2               	movwf	___lmul@multiplier+2
  9607  0143  00F3               	movwf	___lmul@multiplier+3
  9608  0144  0141               	movlb	1	; select bank1
  9609  0145  084C               	movf	(compensate_pressure@var1+3)^(0+128),w
  9610  0146  00F7               	movwf	___lmul@multiplicand+3
  9611  0147  084B               	movf	(compensate_pressure@var1+2)^(0+128),w
  9612  0148  00F6               	movwf	___lmul@multiplicand+2
  9613  0149  084A               	movf	(compensate_pressure@var1+1)^(0+128),w
  9614  014A  00F5               	movwf	___lmul@multiplicand+1
  9615  014B  0849               	movf	compensate_pressure@var1^(0+128),w
  9616  014C  00F4               	movwf	___lmul@multiplicand
  9617  014D  319A  2221  3180   	fcall	___lmul
  9618  0150  0870               	movf	?___lmul,w
  9619  0151  0140               	movlb	0	; select bank0
  9620  0152  00B8               	movwf	??_compensate_pressure+6
  9621  0153  0871               	movf	?___lmul+1,w
  9622  0154  00B9               	movwf	??_compensate_pressure+7
  9623  0155  0872               	movf	?___lmul+2,w
  9624  0156  00BA               	movwf	??_compensate_pressure+8
  9625  0157  0873               	movf	?___lmul+3,w
  9626  0158  00BB               	movwf	??_compensate_pressure+9
  9627  0159  3001               	movlw	1
  9628  015A                     u3185:	
  9629  015A  35B8               	lslf	??_compensate_pressure+6,f
  9630  015B  0DB9               	rlf	??_compensate_pressure+7,f
  9631  015C  0DBA               	rlf	??_compensate_pressure+8,f
  9632  015D  0DBB               	rlf	??_compensate_pressure+9,f
  9633  015E  0B89               	decfsz	9,f
  9634  015F  295A               	goto	u3185
  9635  0160  0838               	movf	??_compensate_pressure+6,w
  9636  0161  07B2               	addwf	??_compensate_pressure,f
  9637  0162  0839               	movf	??_compensate_pressure+7,w
  9638  0163  3DB3               	addwfc	??_compensate_pressure+1,f
  9639  0164  083A               	movf	??_compensate_pressure+8,w
  9640  0165  3DB4               	addwfc	??_compensate_pressure+2,f
  9641  0166  083B               	movf	??_compensate_pressure+9,w
  9642  0167  3DB5               	addwfc	??_compensate_pressure+3,f
  9643  0168  0835               	movf	??_compensate_pressure+3,w
  9644  0169  0141               	movlb	1	; select bank1
  9645  016A  00C4               	movwf	(compensate_pressure@var2+3)^(0+128)
  9646  016B  0140               	movlb	0	; select bank0
  9647  016C  0834               	movf	??_compensate_pressure+2,w
  9648  016D  0141               	movlb	1	; select bank1
  9649  016E  00C3               	movwf	(compensate_pressure@var2+2)^(0+128)
  9650  016F  0140               	movlb	0	; select bank0
  9651  0170  0833               	movf	??_compensate_pressure+1,w
  9652  0171  0141               	movlb	1	; select bank1
  9653  0172  00C2               	movwf	(compensate_pressure@var2+1)^(0+128)
  9654  0173  0140               	movlb	0	; select bank0
  9655  0174  0832               	movf	??_compensate_pressure,w
  9656  0175  0141               	movlb	1	; select bank1
  9657  0176  00C1               	movwf	compensate_pressure@var2^(0+128)
  9658                           
  9659                           ;BME280_driver/bme280.c: 1223:     var2 = (var2 / 4) + (((int32_t)calib_data->dig_P4) * 
      +                          65536);
  9660  0177  0140               	movlb	0	; select bank0
  9661  0178  082E               	movf	compensate_pressure@calib_data,w
  9662  0179  3E0C               	addlw	12
  9663  017A  0086               	movwf	6
  9664  017B  3001               	movlw	1	; select bank2/3
  9665  017C  0087               	movwf	7
  9666  017D  3F40               	moviw [0]fsr1
  9667  017E  00B2               	movwf	??_compensate_pressure
  9668  017F  3F41               	moviw [1]fsr1
  9669  0180  00B3               	movwf	??_compensate_pressure+1
  9670  0181  0832               	movf	??_compensate_pressure,w
  9671  0182  00B4               	movwf	??_compensate_pressure+2
  9672  0183  0833               	movf	??_compensate_pressure+1,w
  9673  0184  00B5               	movwf	??_compensate_pressure+3
  9674  0185  01B6               	clrf	??_compensate_pressure+4
  9675  0186  01B7               	clrf	??_compensate_pressure+5
  9676  0187  3010               	movlw	16
  9677  0188                     u3195:	
  9678  0188  35B4               	lslf	??_compensate_pressure+2,f
  9679  0189  0DB5               	rlf	??_compensate_pressure+3,f
  9680  018A  0DB6               	rlf	??_compensate_pressure+4,f
  9681  018B  0DB7               	rlf	??_compensate_pressure+5,f
  9682  018C  0B89               	decfsz	9,f
  9683  018D  2988               	goto	u3195
  9684  018E  3000               	movlw	0
  9685  018F  00A3               	movwf	___aldiv@divisor+3
  9686  0190  3000               	movlw	0
  9687  0191  00A2               	movwf	___aldiv@divisor+2
  9688  0192  3000               	movlw	0
  9689  0193  00A1               	movwf	___aldiv@divisor+1
  9690  0194  3004               	movlw	4
  9691  0195  00A0               	movwf	___aldiv@divisor
  9692  0196  0141               	movlb	1	; select bank1
  9693  0197  0844               	movf	(compensate_pressure@var2+3)^(0+128),w
  9694  0198  0140               	movlb	0	; select bank0
  9695  0199  00A7               	movwf	___aldiv@dividend+3
  9696  019A  0141               	movlb	1	; select bank1
  9697  019B  0843               	movf	(compensate_pressure@var2+2)^(0+128),w
  9698  019C  0140               	movlb	0	; select bank0
  9699  019D  00A6               	movwf	___aldiv@dividend+2
  9700  019E  0141               	movlb	1	; select bank1
  9701  019F  0842               	movf	(compensate_pressure@var2+1)^(0+128),w
  9702  01A0  0140               	movlb	0	; select bank0
  9703  01A1  00A5               	movwf	___aldiv@dividend+1
  9704  01A2  0141               	movlb	1	; select bank1
  9705  01A3  0841               	movf	compensate_pressure@var2^(0+128),w
  9706  01A4  0140               	movlb	0	; select bank0
  9707  01A5  00A4               	movwf	___aldiv@dividend
  9708  01A6  3194  24BD  3180   	fcall	___aldiv
  9709  01A9  0140               	movlb	0	; select bank0
  9710  01AA  0820               	movf	?___aldiv,w
  9711  01AB  07B4               	addwf	??_compensate_pressure+2,f
  9712  01AC  0821               	movf	?___aldiv+1,w
  9713  01AD  3DB5               	addwfc	??_compensate_pressure+3,f
  9714  01AE  0822               	movf	?___aldiv+2,w
  9715  01AF  3DB6               	addwfc	??_compensate_pressure+4,f
  9716  01B0  0823               	movf	?___aldiv+3,w
  9717  01B1  3DB7               	addwfc	??_compensate_pressure+5,f
  9718  01B2  0837               	movf	??_compensate_pressure+5,w
  9719  01B3  0141               	movlb	1	; select bank1
  9720  01B4  00C4               	movwf	(compensate_pressure@var2+3)^(0+128)
  9721  01B5  0140               	movlb	0	; select bank0
  9722  01B6  0836               	movf	??_compensate_pressure+4,w
  9723  01B7  0141               	movlb	1	; select bank1
  9724  01B8  00C3               	movwf	(compensate_pressure@var2+2)^(0+128)
  9725  01B9  0140               	movlb	0	; select bank0
  9726  01BA  0835               	movf	??_compensate_pressure+3,w
  9727  01BB  0141               	movlb	1	; select bank1
  9728  01BC  00C2               	movwf	(compensate_pressure@var2+1)^(0+128)
  9729  01BD  0140               	movlb	0	; select bank0
  9730  01BE  0834               	movf	??_compensate_pressure+2,w
  9731  01BF  0141               	movlb	1	; select bank1
  9732  01C0  00C1               	movwf	compensate_pressure@var2^(0+128)
  9733                           
  9734                           ;BME280_driver/bme280.c: 1224:     var3 = (calib_data->dig_P3 * (((var1 / 4) * (var1 / 4
      +                          )) / 8192)) / 8;
  9735  01C1  3000               	movlw	0
  9736  01C2  0140               	movlb	0	; select bank0
  9737  01C3  00A3               	movwf	___aldiv@divisor+3
  9738  01C4  3000               	movlw	0
  9739  01C5  00A2               	movwf	___aldiv@divisor+2
  9740  01C6  3000               	movlw	0
  9741  01C7  00A1               	movwf	___aldiv@divisor+1
  9742  01C8  3004               	movlw	4
  9743  01C9  00A0               	movwf	___aldiv@divisor
  9744  01CA  0141               	movlb	1	; select bank1
  9745  01CB  084C               	movf	(compensate_pressure@var1+3)^(0+128),w
  9746  01CC  0140               	movlb	0	; select bank0
  9747  01CD  00A7               	movwf	___aldiv@dividend+3
  9748  01CE  0141               	movlb	1	; select bank1
  9749  01CF  084B               	movf	(compensate_pressure@var1+2)^(0+128),w
  9750  01D0  0140               	movlb	0	; select bank0
  9751  01D1  00A6               	movwf	___aldiv@dividend+2
  9752  01D2  0141               	movlb	1	; select bank1
  9753  01D3  084A               	movf	(compensate_pressure@var1+1)^(0+128),w
  9754  01D4  0140               	movlb	0	; select bank0
  9755  01D5  00A5               	movwf	___aldiv@dividend+1
  9756  01D6  0141               	movlb	1	; select bank1
  9757  01D7  0849               	movf	compensate_pressure@var1^(0+128),w
  9758  01D8  0140               	movlb	0	; select bank0
  9759  01D9  00A4               	movwf	___aldiv@dividend
  9760  01DA  3194  24BD  3180   	fcall	___aldiv
  9761  01DD  0140               	movlb	0	; select bank0
  9762  01DE  0823               	movf	?___aldiv+3,w
  9763  01DF  00F3               	movwf	___lmul@multiplier+3
  9764  01E0  0822               	movf	?___aldiv+2,w
  9765  01E1  00F2               	movwf	___lmul@multiplier+2
  9766  01E2  0821               	movf	?___aldiv+1,w
  9767  01E3  00F1               	movwf	___lmul@multiplier+1
  9768  01E4  0820               	movf	?___aldiv,w
  9769  01E5  00F0               	movwf	___lmul@multiplier
  9770  01E6  3000               	movlw	0
  9771  01E7  00A3               	movwf	___aldiv@divisor+3
  9772  01E8  3000               	movlw	0
  9773  01E9  00A2               	movwf	___aldiv@divisor+2
  9774  01EA  3000               	movlw	0
  9775  01EB  00A1               	movwf	___aldiv@divisor+1
  9776  01EC  3004               	movlw	4
  9777  01ED  00A0               	movwf	___aldiv@divisor
  9778  01EE  0141               	movlb	1	; select bank1
  9779  01EF  084C               	movf	(compensate_pressure@var1+3)^(0+128),w
  9780  01F0  0140               	movlb	0	; select bank0
  9781  01F1  00A7               	movwf	___aldiv@dividend+3
  9782  01F2  0141               	movlb	1	; select bank1
  9783  01F3  084B               	movf	(compensate_pressure@var1+2)^(0+128),w
  9784  01F4  0140               	movlb	0	; select bank0
  9785  01F5  00A6               	movwf	___aldiv@dividend+2
  9786  01F6  0141               	movlb	1	; select bank1
  9787  01F7  084A               	movf	(compensate_pressure@var1+1)^(0+128),w
  9788  01F8  0140               	movlb	0	; select bank0
  9789  01F9  00A5               	movwf	___aldiv@dividend+1
  9790  01FA  0141               	movlb	1	; select bank1
  9791  01FB  0849               	movf	compensate_pressure@var1^(0+128),w
  9792  01FC  0140               	movlb	0	; select bank0
  9793  01FD  00A4               	movwf	___aldiv@dividend
  9794  01FE  3194  24BD  3180   	fcall	___aldiv
  9795  0201  0140               	movlb	0	; select bank0
  9796  0202  0823               	movf	?___aldiv+3,w
  9797  0203  00F7               	movwf	___lmul@multiplicand+3
  9798  0204  0822               	movf	?___aldiv+2,w
  9799  0205  00F6               	movwf	___lmul@multiplicand+2
  9800  0206  0821               	movf	?___aldiv+1,w
  9801  0207  00F5               	movwf	___lmul@multiplicand+1
  9802  0208  0820               	movf	?___aldiv,w
  9803  0209  00F4               	movwf	___lmul@multiplicand
  9804  020A  319A  2221  3180   	fcall	___lmul
  9805  020D  0873               	movf	?___lmul+3,w
  9806  020E  0141               	movlb	1	; select bank1
  9807  020F  00BC               	movwf	(_compensate_pressure$2716+3)^(0+128)
  9808  0210  0872               	movf	?___lmul+2,w
  9809  0211  00BB               	movwf	(_compensate_pressure$2716+2)^(0+128)
  9810  0212  0871               	movf	?___lmul+1,w
  9811  0213  00BA               	movwf	(_compensate_pressure$2716+1)^(0+128)
  9812  0214  0870               	movf	?___lmul,w
  9813  0215  00B9               	movwf	_compensate_pressure$2716^(0+128)
  9814                           
  9815                           ;BME280_driver/bme280.c: 1224:     var3 = (calib_data->dig_P3 * (((var1 / 4) * (var1 / 4
      +                          )) / 8192)) / 8;
  9816  0216  0140               	movlb	0	; select bank0
  9817  0217  082E               	movf	compensate_pressure@calib_data,w
  9818  0218  3E0A               	addlw	10
  9819  0219  0086               	movwf	6
  9820  021A  3001               	movlw	1	; select bank2/3
  9821  021B  0087               	movwf	7
  9822  021C  3F40               	moviw [0]fsr1
  9823  021D  00B2               	movwf	??_compensate_pressure
  9824  021E  3F41               	moviw [1]fsr1
  9825  021F  00B3               	movwf	??_compensate_pressure+1
  9826  0220  0832               	movf	??_compensate_pressure,w
  9827  0221  00F0               	movwf	___lmul@multiplier
  9828  0222  0833               	movf	??_compensate_pressure+1,w
  9829  0223  00F1               	movwf	___lmul@multiplier+1
  9830  0224  0D89               	rlf	9,f
  9831  0225  3B89               	subwfb	9,f
  9832  0226  0989               	comf	9,f
  9833  0227  00F2               	movwf	___lmul@multiplier+2
  9834  0228  00F3               	movwf	___lmul@multiplier+3
  9835  0229  3000               	movlw	0
  9836  022A  00A3               	movwf	___aldiv@divisor+3
  9837  022B  3000               	movlw	0
  9838  022C  00A2               	movwf	___aldiv@divisor+2
  9839  022D  3020               	movlw	32
  9840  022E  00A1               	movwf	___aldiv@divisor+1
  9841  022F  3000               	movlw	0
  9842  0230  00A0               	movwf	___aldiv@divisor
  9843  0231  0141               	movlb	1	; select bank1
  9844  0232  083C               	movf	(_compensate_pressure$2716+3)^(0+128),w
  9845  0233  0140               	movlb	0	; select bank0
  9846  0234  00A7               	movwf	___aldiv@dividend+3
  9847  0235  0141               	movlb	1	; select bank1
  9848  0236  083B               	movf	(_compensate_pressure$2716+2)^(0+128),w
  9849  0237  0140               	movlb	0	; select bank0
  9850  0238  00A6               	movwf	___aldiv@dividend+2
  9851  0239  0141               	movlb	1	; select bank1
  9852  023A  083A               	movf	(_compensate_pressure$2716+1)^(0+128),w
  9853  023B  0140               	movlb	0	; select bank0
  9854  023C  00A5               	movwf	___aldiv@dividend+1
  9855  023D  0141               	movlb	1	; select bank1
  9856  023E  0839               	movf	_compensate_pressure$2716^(0+128),w
  9857  023F  0140               	movlb	0	; select bank0
  9858  0240  00A4               	movwf	___aldiv@dividend
  9859  0241  3194  24BD  3180   	fcall	___aldiv
  9860  0244  0140               	movlb	0	; select bank0
  9861  0245  0823               	movf	?___aldiv+3,w
  9862  0246  00F7               	movwf	___lmul@multiplicand+3
  9863  0247  0822               	movf	?___aldiv+2,w
  9864  0248  00F6               	movwf	___lmul@multiplicand+2
  9865  0249  0821               	movf	?___aldiv+1,w
  9866  024A  00F5               	movwf	___lmul@multiplicand+1
  9867  024B  0820               	movf	?___aldiv,w
  9868  024C  00F4               	movwf	___lmul@multiplicand
  9869  024D  319A  2221  3180   	fcall	___lmul
  9870  0250  0873               	movf	?___lmul+3,w
  9871  0251  0141               	movlb	1	; select bank1
  9872  0252  00AF               	movwf	(_compensate_pressure$2717+3)^(0+128)
  9873  0253  0872               	movf	?___lmul+2,w
  9874  0254  00AE               	movwf	(_compensate_pressure$2717+2)^(0+128)
  9875  0255  0871               	movf	?___lmul+1,w
  9876  0256  00AD               	movwf	(_compensate_pressure$2717+1)^(0+128)
  9877  0257  0870               	movf	?___lmul,w
  9878  0258  00AC               	movwf	_compensate_pressure$2717^(0+128)
  9879                           
  9880                           ;BME280_driver/bme280.c: 1224:     var3 = (calib_data->dig_P3 * (((var1 / 4) * (var1 / 4
      +                          )) / 8192)) / 8;
  9881  0259  3000               	movlw	0
  9882  025A  0140               	movlb	0	; select bank0
  9883  025B  00A3               	movwf	___aldiv@divisor+3
  9884  025C  3000               	movlw	0
  9885  025D  00A2               	movwf	___aldiv@divisor+2
  9886  025E  3000               	movlw	0
  9887  025F  00A1               	movwf	___aldiv@divisor+1
  9888  0260  3008               	movlw	8
  9889  0261  00A0               	movwf	___aldiv@divisor
  9890  0262  0141               	movlb	1	; select bank1
  9891  0263  082F               	movf	(_compensate_pressure$2717+3)^(0+128),w
  9892  0264  0140               	movlb	0	; select bank0
  9893  0265  00A7               	movwf	___aldiv@dividend+3
  9894  0266  0141               	movlb	1	; select bank1
  9895  0267  082E               	movf	(_compensate_pressure$2717+2)^(0+128),w
  9896  0268  0140               	movlb	0	; select bank0
  9897  0269  00A6               	movwf	___aldiv@dividend+2
  9898  026A  0141               	movlb	1	; select bank1
  9899  026B  082D               	movf	(_compensate_pressure$2717+1)^(0+128),w
  9900  026C  0140               	movlb	0	; select bank0
  9901  026D  00A5               	movwf	___aldiv@dividend+1
  9902  026E  0141               	movlb	1	; select bank1
  9903  026F  082C               	movf	_compensate_pressure$2717^(0+128),w
  9904  0270  0140               	movlb	0	; select bank0
  9905  0271  00A4               	movwf	___aldiv@dividend
  9906  0272  3194  24BD  3180   	fcall	___aldiv
  9907  0275  0140               	movlb	0	; select bank0
  9908  0276  0823               	movf	?___aldiv+3,w
  9909  0277  0141               	movlb	1	; select bank1
  9910  0278  00A3               	movwf	(compensate_pressure@var3+3)^(0+128)
  9911  0279  0140               	movlb	0	; select bank0
  9912  027A  0822               	movf	?___aldiv+2,w
  9913  027B  0141               	movlb	1	; select bank1
  9914  027C  00A2               	movwf	(compensate_pressure@var3+2)^(0+128)
  9915  027D  0140               	movlb	0	; select bank0
  9916  027E  0821               	movf	?___aldiv+1,w
  9917  027F  0141               	movlb	1	; select bank1
  9918  0280  00A1               	movwf	(compensate_pressure@var3+1)^(0+128)
  9919  0281  0140               	movlb	0	; select bank0
  9920  0282  0820               	movf	?___aldiv,w
  9921  0283  0141               	movlb	1	; select bank1
  9922  0284  00A0               	movwf	compensate_pressure@var3^(0+128)
  9923                           
  9924                           ;BME280_driver/bme280.c: 1225:     var4 = (((int32_t)calib_data->dig_P2) * var1) / 2;
  9925  0285  3000               	movlw	0
  9926  0286  0140               	movlb	0	; select bank0
  9927  0287  00A3               	movwf	___aldiv@divisor+3
  9928  0288  3000               	movlw	0
  9929  0289  00A2               	movwf	___aldiv@divisor+2
  9930  028A  3000               	movlw	0
  9931  028B  00A1               	movwf	___aldiv@divisor+1
  9932  028C  3002               	movlw	2
  9933  028D  00A0               	movwf	___aldiv@divisor
  9934  028E  082E               	movf	compensate_pressure@calib_data,w
  9935  028F  3E08               	addlw	8
  9936  0290  0086               	movwf	6
  9937  0291  3001               	movlw	1	; select bank2/3
  9938  0292  0087               	movwf	7
  9939  0293  3F40               	moviw [0]fsr1
  9940  0294  00B2               	movwf	??_compensate_pressure
  9941  0295  3F41               	moviw [1]fsr1
  9942  0296  00B3               	movwf	??_compensate_pressure+1
  9943  0297  0832               	movf	??_compensate_pressure,w
  9944  0298  00F0               	movwf	___lmul@multiplier
  9945  0299  0833               	movf	??_compensate_pressure+1,w
  9946  029A  00F1               	movwf	___lmul@multiplier+1
  9947  029B  0D89               	rlf	9,f
  9948  029C  3B89               	subwfb	9,f
  9949  029D  0989               	comf	9,f
  9950  029E  00F2               	movwf	___lmul@multiplier+2
  9951  029F  00F3               	movwf	___lmul@multiplier+3
  9952  02A0  0141               	movlb	1	; select bank1
  9953  02A1  084C               	movf	(compensate_pressure@var1+3)^(0+128),w
  9954  02A2  00F7               	movwf	___lmul@multiplicand+3
  9955  02A3  084B               	movf	(compensate_pressure@var1+2)^(0+128),w
  9956  02A4  00F6               	movwf	___lmul@multiplicand+2
  9957  02A5  084A               	movf	(compensate_pressure@var1+1)^(0+128),w
  9958  02A6  00F5               	movwf	___lmul@multiplicand+1
  9959  02A7  0849               	movf	compensate_pressure@var1^(0+128),w
  9960  02A8  00F4               	movwf	___lmul@multiplicand
  9961  02A9  319A  2221  3180   	fcall	___lmul
  9962  02AC  0873               	movf	?___lmul+3,w
  9963  02AD  0140               	movlb	0	; select bank0
  9964  02AE  00A7               	movwf	___aldiv@dividend+3
  9965  02AF  0872               	movf	?___lmul+2,w
  9966  02B0  00A6               	movwf	___aldiv@dividend+2
  9967  02B1  0871               	movf	?___lmul+1,w
  9968  02B2  00A5               	movwf	___aldiv@dividend+1
  9969  02B3  0870               	movf	?___lmul,w
  9970  02B4  00A4               	movwf	___aldiv@dividend
  9971  02B5  3194  24BD  3180   	fcall	___aldiv
  9972  02B8  0140               	movlb	0	; select bank0
  9973  02B9  0823               	movf	?___aldiv+3,w
  9974  02BA  0141               	movlb	1	; select bank1
  9975  02BB  00A7               	movwf	(compensate_pressure@var4+3)^(0+128)
  9976  02BC  0140               	movlb	0	; select bank0
  9977  02BD  0822               	movf	?___aldiv+2,w
  9978  02BE  0141               	movlb	1	; select bank1
  9979  02BF  00A6               	movwf	(compensate_pressure@var4+2)^(0+128)
  9980  02C0  0140               	movlb	0	; select bank0
  9981  02C1  0821               	movf	?___aldiv+1,w
  9982  02C2  0141               	movlb	1	; select bank1
  9983  02C3  00A5               	movwf	(compensate_pressure@var4+1)^(0+128)
  9984  02C4  0140               	movlb	0	; select bank0
  9985  02C5  0820               	movf	?___aldiv,w
  9986  02C6  0141               	movlb	1	; select bank1
  9987  02C7  00A4               	movwf	compensate_pressure@var4^(0+128)
  9988                           
  9989                           ;BME280_driver/bme280.c: 1226:     var1 = (var3 + var4) / 262144;
  9990  02C8  3000               	movlw	0
  9991  02C9  0140               	movlb	0	; select bank0
  9992  02CA  00A3               	movwf	___aldiv@divisor+3
  9993  02CB  3004               	movlw	4
  9994  02CC  00A2               	movwf	___aldiv@divisor+2
  9995  02CD  3000               	movlw	0
  9996  02CE  00A1               	movwf	___aldiv@divisor+1
  9997  02CF  3000               	movlw	0
  9998  02D0  00A0               	movwf	___aldiv@divisor
  9999  02D1  0141               	movlb	1	; select bank1
 10000  02D2  0820               	movf	compensate_pressure@var3^(0+128),w
 10001  02D3  0724               	addwf	compensate_pressure@var4^(0+128),w
 10002  02D4  0140               	movlb	0	; select bank0
 10003  02D5  00B2               	movwf	??_compensate_pressure
 10004  02D6  0141               	movlb	1	; select bank1
 10005  02D7  0821               	movf	(compensate_pressure@var3+1)^(0+128),w
 10006  02D8  3D25               	addwfc	(compensate_pressure@var4+1)^(0+128),w
 10007  02D9  0140               	movlb	0	; select bank0
 10008  02DA  00B3               	movwf	??_compensate_pressure+1
 10009  02DB  0141               	movlb	1	; select bank1
 10010  02DC  0822               	movf	(compensate_pressure@var3+2)^(0+128),w
 10011  02DD  3D26               	addwfc	(compensate_pressure@var4+2)^(0+128),w
 10012  02DE  0140               	movlb	0	; select bank0
 10013  02DF  00B4               	movwf	??_compensate_pressure+2
 10014  02E0  0141               	movlb	1	; select bank1
 10015  02E1  0823               	movf	(compensate_pressure@var3+3)^(0+128),w
 10016  02E2  3D27               	addwfc	(compensate_pressure@var4+3)^(0+128),w
 10017  02E3  0140               	movlb	0	; select bank0
 10018  02E4  00B5               	movwf	??_compensate_pressure+3
 10019  02E5  0835               	movf	??_compensate_pressure+3,w
 10020  02E6  00A7               	movwf	___aldiv@dividend+3
 10021  02E7  0834               	movf	??_compensate_pressure+2,w
 10022  02E8  00A6               	movwf	___aldiv@dividend+2
 10023  02E9  0833               	movf	??_compensate_pressure+1,w
 10024  02EA  00A5               	movwf	___aldiv@dividend+1
 10025  02EB  0832               	movf	??_compensate_pressure,w
 10026  02EC  00A4               	movwf	___aldiv@dividend
 10027  02ED  3194  24BD  3180   	fcall	___aldiv
 10028  02F0  0140               	movlb	0	; select bank0
 10029  02F1  0823               	movf	?___aldiv+3,w
 10030  02F2  0141               	movlb	1	; select bank1
 10031  02F3  00CC               	movwf	(compensate_pressure@var1+3)^(0+128)
 10032  02F4  0140               	movlb	0	; select bank0
 10033  02F5  0822               	movf	?___aldiv+2,w
 10034  02F6  0141               	movlb	1	; select bank1
 10035  02F7  00CB               	movwf	(compensate_pressure@var1+2)^(0+128)
 10036  02F8  0140               	movlb	0	; select bank0
 10037  02F9  0821               	movf	?___aldiv+1,w
 10038  02FA  0141               	movlb	1	; select bank1
 10039  02FB  00CA               	movwf	(compensate_pressure@var1+1)^(0+128)
 10040  02FC  0140               	movlb	0	; select bank0
 10041  02FD  0820               	movf	?___aldiv,w
 10042  02FE  0141               	movlb	1	; select bank1
 10043  02FF  00C9               	movwf	compensate_pressure@var1^(0+128)
 10044                           
 10045                           ;BME280_driver/bme280.c: 1227:     var1 = (((32768 + var1)) * ((int32_t)calib_data->dig_
      +                          P1)) / 32768;
 10046  0300  3000               	movlw	0
 10047  0301  0140               	movlb	0	; select bank0
 10048  0302  00A3               	movwf	___aldiv@divisor+3
 10049  0303  3000               	movlw	0
 10050  0304  00A2               	movwf	___aldiv@divisor+2
 10051  0305  3080               	movlw	128
 10052  0306  00A1               	movwf	___aldiv@divisor+1
 10053  0307  3000               	movlw	0
 10054  0308  00A0               	movwf	___aldiv@divisor
 10055  0309  3000               	movlw	0
 10056  030A  0141               	movlb	1	; select bank1
 10057  030B  0749               	addwf	compensate_pressure@var1^(0+128),w
 10058  030C  00F0               	movwf	___lmul@multiplier
 10059  030D  3080               	movlw	128
 10060  030E  3D4A               	addwfc	(compensate_pressure@var1+1)^(0+128),w
 10061  030F  00F1               	movwf	___lmul@multiplier+1
 10062  0310  3000               	movlw	0
 10063  0311  3D4B               	addwfc	(compensate_pressure@var1+2)^(0+128),w
 10064  0312  00F2               	movwf	___lmul@multiplier+2
 10065  0313  3000               	movlw	0
 10066  0314  3D4C               	addwfc	(compensate_pressure@var1+3)^(0+128),w
 10067  0315  00F3               	movwf	___lmul@multiplier+3
 10068  0316  0140               	movlb	0	; select bank0
 10069  0317  082E               	movf	compensate_pressure@calib_data,w
 10070  0318  3E06               	addlw	6
 10071  0319  0086               	movwf	6
 10072  031A  3001               	movlw	1	; select bank2/3
 10073  031B  0087               	movwf	7
 10074  031C  3F40               	moviw [0]fsr1
 10075  031D  00B2               	movwf	??_compensate_pressure
 10076  031E  3F41               	moviw [1]fsr1
 10077  031F  00B3               	movwf	??_compensate_pressure+1
 10078  0320  0832               	movf	??_compensate_pressure,w
 10079  0321  00F4               	movwf	___lmul@multiplicand
 10080  0322  0833               	movf	??_compensate_pressure+1,w
 10081  0323  00F5               	movwf	___lmul@multiplicand+1
 10082  0324  01F6               	clrf	___lmul@multiplicand+2
 10083  0325  01F7               	clrf	___lmul@multiplicand+3
 10084  0326  319A  2221  3180   	fcall	___lmul
 10085  0329  0873               	movf	?___lmul+3,w
 10086  032A  0140               	movlb	0	; select bank0
 10087  032B  00A7               	movwf	___aldiv@dividend+3
 10088  032C  0872               	movf	?___lmul+2,w
 10089  032D  00A6               	movwf	___aldiv@dividend+2
 10090  032E  0871               	movf	?___lmul+1,w
 10091  032F  00A5               	movwf	___aldiv@dividend+1
 10092  0330  0870               	movf	?___lmul,w
 10093  0331  00A4               	movwf	___aldiv@dividend
 10094  0332  3194  24BD  3180   	fcall	___aldiv
 10095  0335  0140               	movlb	0	; select bank0
 10096  0336  0823               	movf	?___aldiv+3,w
 10097  0337  0141               	movlb	1	; select bank1
 10098  0338  00CC               	movwf	(compensate_pressure@var1+3)^(0+128)
 10099  0339  0140               	movlb	0	; select bank0
 10100  033A  0822               	movf	?___aldiv+2,w
 10101  033B  0141               	movlb	1	; select bank1
 10102  033C  00CB               	movwf	(compensate_pressure@var1+2)^(0+128)
 10103  033D  0140               	movlb	0	; select bank0
 10104  033E  0821               	movf	?___aldiv+1,w
 10105  033F  0141               	movlb	1	; select bank1
 10106  0340  00CA               	movwf	(compensate_pressure@var1+1)^(0+128)
 10107  0341  0140               	movlb	0	; select bank0
 10108  0342  0820               	movf	?___aldiv,w
 10109  0343  0141               	movlb	1	; select bank1
 10110  0344  00C9               	movwf	compensate_pressure@var1^(0+128)
 10111                           
 10112                           ;BME280_driver/bme280.c: 1230:     if (var1)
 10113  0345  084C               	movf	(compensate_pressure@var1+3)^(0+128),w
 10114  0346  044B               	iorwf	(compensate_pressure@var1+2)^(0+128),w
 10115  0347  044A               	iorwf	(compensate_pressure@var1+1)^(0+128),w
 10116  0348  0449               	iorwf	compensate_pressure@var1^(0+128),w
 10117  0349  1903               	skipnz
 10118  034A  2D81               	goto	l3832
 10119                           
 10120                           ;BME280_driver/bme280.c: 1231:     {;BME280_driver/bme280.c: 1232:         var5 = (uint3
      +                          2_t)((uint32_t)1048576) - uncomp_data->pressure;
 10121  034B  0834               	movf	compensate_pressure@uncomp_data^(0+128),w
 10122  034C  0086               	movwf	6
 10123  034D  0187               	clrf	7
 10124  034E  3F40               	moviw [0]fsr1
 10125  034F  0140               	movlb	0	; select bank0
 10126  0350  00B2               	movwf	??_compensate_pressure
 10127  0351  3F41               	moviw [1]fsr1
 10128  0352  00B3               	movwf	??_compensate_pressure+1
 10129  0353  3F42               	moviw [2]fsr1
 10130  0354  00B4               	movwf	??_compensate_pressure+2
 10131  0355  3F43               	moviw [3]fsr1
 10132  0356  00B5               	movwf	??_compensate_pressure+3
 10133  0357  3000               	movlw	0
 10134  0358  00B6               	movwf	??_compensate_pressure+4
 10135  0359  3000               	movlw	0
 10136  035A  00B7               	movwf	??_compensate_pressure+5
 10137  035B  3010               	movlw	16
 10138  035C  00B8               	movwf	??_compensate_pressure+6
 10139  035D  3000               	movlw	0
 10140  035E  00B9               	movwf	??_compensate_pressure+7
 10141  035F  0832               	movf	??_compensate_pressure,w
 10142  0360  02B6               	subwf	??_compensate_pressure+4,f
 10143  0361  0833               	movf	??_compensate_pressure+1,w
 10144  0362  3BB7               	subwfb	??_compensate_pressure+5,f
 10145  0363  0834               	movf	??_compensate_pressure+2,w
 10146  0364  3BB8               	subwfb	??_compensate_pressure+6,f
 10147  0365  0835               	movf	??_compensate_pressure+3,w
 10148  0366  3BB9               	subwfb	??_compensate_pressure+7,f
 10149  0367  0839               	movf	??_compensate_pressure+7,w
 10150  0368  0141               	movlb	1	; select bank1
 10151  0369  00AB               	movwf	(compensate_pressure@var5+3)^(0+128)
 10152  036A  0140               	movlb	0	; select bank0
 10153  036B  0838               	movf	??_compensate_pressure+6,w
 10154  036C  0141               	movlb	1	; select bank1
 10155  036D  00AA               	movwf	(compensate_pressure@var5+2)^(0+128)
 10156  036E  0140               	movlb	0	; select bank0
 10157  036F  0837               	movf	??_compensate_pressure+5,w
 10158  0370  0141               	movlb	1	; select bank1
 10159  0371  00A9               	movwf	(compensate_pressure@var5+1)^(0+128)
 10160  0372  0140               	movlb	0	; select bank0
 10161  0373  0836               	movf	??_compensate_pressure+4,w
 10162  0374  0141               	movlb	1	; select bank1
 10163  0375  00A8               	movwf	compensate_pressure@var5^(0+128)
 10164                           
 10165                           ;BME280_driver/bme280.c: 1233:         pressure = ((uint32_t)(var5 - (uint32_t)(var2 / 4
      +                          096))) * 3125;
 10166  0376  3000               	movlw	0
 10167  0377  0140               	movlb	0	; select bank0
 10168  0378  00A3               	movwf	___aldiv@divisor+3
 10169  0379  3000               	movlw	0
 10170  037A  00A2               	movwf	___aldiv@divisor+2
 10171  037B  3010               	movlw	16
 10172  037C  00A1               	movwf	___aldiv@divisor+1
 10173  037D  3000               	movlw	0
 10174  037E  00A0               	movwf	___aldiv@divisor
 10175  037F  0141               	movlb	1	; select bank1
 10176  0380  0844               	movf	(compensate_pressure@var2+3)^(0+128),w
 10177  0381  0140               	movlb	0	; select bank0
 10178  0382  00A7               	movwf	___aldiv@dividend+3
 10179  0383  0141               	movlb	1	; select bank1
 10180  0384  0843               	movf	(compensate_pressure@var2+2)^(0+128),w
 10181  0385  0140               	movlb	0	; select bank0
 10182  0386  00A6               	movwf	___aldiv@dividend+2
 10183  0387  0141               	movlb	1	; select bank1
 10184  0388  0842               	movf	(compensate_pressure@var2+1)^(0+128),w
 10185  0389  0140               	movlb	0	; select bank0
 10186  038A  00A5               	movwf	___aldiv@dividend+1
 10187  038B  0141               	movlb	1	; select bank1
 10188  038C  0841               	movf	compensate_pressure@var2^(0+128),w
 10189  038D  0140               	movlb	0	; select bank0
 10190  038E  00A4               	movwf	___aldiv@dividend
 10191  038F  3194  24BD  3180   	fcall	___aldiv
 10192  0392  0140               	movlb	0	; select bank0
 10193  0393  0820               	movf	?___aldiv,w
 10194  0394  0141               	movlb	1	; select bank1
 10195  0395  0228               	subwf	compensate_pressure@var5^(0+128),w
 10196  0396  0140               	movlb	0	; select bank0
 10197  0397  00B2               	movwf	??_compensate_pressure
 10198  0398  0821               	movf	?___aldiv+1,w
 10199  0399  0141               	movlb	1	; select bank1
 10200  039A  3B29               	subwfb	(compensate_pressure@var5+1)^(0+128),w
 10201  039B  0140               	movlb	0	; select bank0
 10202  039C  00B3               	movwf	??_compensate_pressure+1
 10203  039D  0822               	movf	?___aldiv+2,w
 10204  039E  0141               	movlb	1	; select bank1
 10205  039F  3B2A               	subwfb	(compensate_pressure@var5+2)^(0+128),w
 10206  03A0  0140               	movlb	0	; select bank0
 10207  03A1  00B4               	movwf	??_compensate_pressure+2
 10208  03A2  0823               	movf	?___aldiv+3,w
 10209  03A3  0141               	movlb	1	; select bank1
 10210  03A4  3B2B               	subwfb	(compensate_pressure@var5+3)^(0+128),w
 10211  03A5  0140               	movlb	0	; select bank0
 10212  03A6  00B5               	movwf	??_compensate_pressure+3
 10213  03A7  0835               	movf	??_compensate_pressure+3,w
 10214  03A8  00F3               	movwf	___lmul@multiplier+3
 10215  03A9  0834               	movf	??_compensate_pressure+2,w
 10216  03AA  00F2               	movwf	___lmul@multiplier+2
 10217  03AB  0833               	movf	??_compensate_pressure+1,w
 10218  03AC  00F1               	movwf	___lmul@multiplier+1
 10219  03AD  0832               	movf	??_compensate_pressure,w
 10220  03AE  00F0               	movwf	___lmul@multiplier
 10221  03AF  3000               	movlw	0
 10222  03B0  00F7               	movwf	___lmul@multiplicand+3
 10223  03B1  3000               	movlw	0
 10224  03B2  00F6               	movwf	___lmul@multiplicand+2
 10225  03B3  300C               	movlw	12
 10226  03B4  00F5               	movwf	___lmul@multiplicand+1
 10227  03B5  3035               	movlw	53
 10228  03B6  00F4               	movwf	___lmul@multiplicand
 10229  03B7  319A  2221  3180   	fcall	___lmul
 10230  03BA  0873               	movf	?___lmul+3,w
 10231  03BB  0141               	movlb	1	; select bank1
 10232  03BC  00C8               	movwf	(compensate_pressure@pressure+3)^(0+128)
 10233  03BD  0872               	movf	?___lmul+2,w
 10234  03BE  00C7               	movwf	(compensate_pressure@pressure+2)^(0+128)
 10235  03BF  0871               	movf	?___lmul+1,w
 10236  03C0  00C6               	movwf	(compensate_pressure@pressure+1)^(0+128)
 10237  03C1  0870               	movf	?___lmul,w
 10238  03C2  00C5               	movwf	compensate_pressure@pressure^(0+128)
 10239                           
 10240                           ;BME280_driver/bme280.c: 1234:         if (pressure < 0x80000000)
 10241  03C3  3080               	movlw	128
 10242  03C4  0248               	subwf	(compensate_pressure@pressure+3)^(0+128),w
 10243  03C5  1803               	btfsc	3,0
 10244  03C6  2BE4               	goto	l3822
 10245                           
 10246                           ;BME280_driver/bme280.c: 1235:         {;BME280_driver/bme280.c: 1236:             press
      +                          ure = (pressure << 1) / ((uint32_t)var1);
 10247  03C7  084C               	movf	(compensate_pressure@var1+3)^(0+128),w
 10248  03C8  00F3               	movwf	___lldiv@divisor+3
 10249  03C9  084B               	movf	(compensate_pressure@var1+2)^(0+128),w
 10250  03CA  00F2               	movwf	___lldiv@divisor+2
 10251  03CB  084A               	movf	(compensate_pressure@var1+1)^(0+128),w
 10252  03CC  00F1               	movwf	___lldiv@divisor+1
 10253  03CD  0849               	movf	compensate_pressure@var1^(0+128),w
 10254  03CE  00F0               	movwf	___lldiv@divisor
 10255  03CF  3545               	lslf	compensate_pressure@pressure^(0+128),w
 10256  03D0  00F4               	movwf	___lldiv@dividend
 10257  03D1  0D46               	rlf	(compensate_pressure@pressure+1)^(0+128),w
 10258  03D2  00F5               	movwf	___lldiv@dividend+1
 10259  03D3  0D47               	rlf	(compensate_pressure@pressure+2)^(0+128),w
 10260  03D4  00F6               	movwf	___lldiv@dividend+2
 10261  03D5  0D48               	rlf	(compensate_pressure@pressure+3)^(0+128),w
 10262  03D6  00F7               	movwf	___lldiv@dividend+3
 10263  03D7  319F  2759  3180   	fcall	___lldiv
 10264  03DA  0873               	movf	?___lldiv+3,w
 10265  03DB  0141               	movlb	1	; select bank1
 10266  03DC  00C8               	movwf	(compensate_pressure@pressure+3)^(0+128)
 10267  03DD  0872               	movf	?___lldiv+2,w
 10268  03DE  00C7               	movwf	(compensate_pressure@pressure+2)^(0+128)
 10269  03DF  0871               	movf	?___lldiv+1,w
 10270  03E0  00C6               	movwf	(compensate_pressure@pressure+1)^(0+128)
 10271  03E1  0870               	movf	?___lldiv,w
 10272  03E2  00C5               	movwf	compensate_pressure@pressure^(0+128)
 10273                           
 10274                           ;BME280_driver/bme280.c: 1237:         }
 10275  03E3  2C00               	goto	l192
 10276  03E4                     l3822:	
 10277                           
 10278                           ;BME280_driver/bme280.c: 1239:         {;BME280_driver/bme280.c: 1240:             press
      +                          ure = (pressure / (uint32_t)var1) * 2;
 10279  03E4  084C               	movf	(compensate_pressure@var1+3)^(0+128),w
 10280  03E5  00F3               	movwf	___lldiv@divisor+3
 10281  03E6  084B               	movf	(compensate_pressure@var1+2)^(0+128),w
 10282  03E7  00F2               	movwf	___lldiv@divisor+2
 10283  03E8  084A               	movf	(compensate_pressure@var1+1)^(0+128),w
 10284  03E9  00F1               	movwf	___lldiv@divisor+1
 10285  03EA  0849               	movf	compensate_pressure@var1^(0+128),w
 10286  03EB  00F0               	movwf	___lldiv@divisor
 10287  03EC  0848               	movf	(compensate_pressure@pressure+3)^(0+128),w
 10288  03ED  00F7               	movwf	___lldiv@dividend+3
 10289  03EE  0847               	movf	(compensate_pressure@pressure+2)^(0+128),w
 10290  03EF  00F6               	movwf	___lldiv@dividend+2
 10291  03F0  0846               	movf	(compensate_pressure@pressure+1)^(0+128),w
 10292  03F1  00F5               	movwf	___lldiv@dividend+1
 10293  03F2  0845               	movf	compensate_pressure@pressure^(0+128),w
 10294  03F3  00F4               	movwf	___lldiv@dividend
 10295  03F4  319F  2759  3180   	fcall	___lldiv
 10296  03F7  3570               	lslf	?___lldiv,w
 10297  03F8  0141               	movlb	1	; select bank1
 10298  03F9  00C5               	movwf	compensate_pressure@pressure^(0+128)
 10299  03FA  0D71               	rlf	?___lldiv+1,w
 10300  03FB  00C6               	movwf	(compensate_pressure@pressure+1)^(0+128)
 10301  03FC  0D72               	rlf	?___lldiv+2,w
 10302  03FD  00C7               	movwf	(compensate_pressure@pressure+2)^(0+128)
 10303  03FE  0D73               	rlf	?___lldiv+3,w
 10304  03FF  00C8               	movwf	(compensate_pressure@pressure+3)^(0+128)
 10305  0400                     l192:	
 10306                           ;BME280_driver/bme280.c: 1241:         }
 10307                           
 10308                           
 10309                           ;BME280_driver/bme280.c: 1242:         var1 = (((int32_t)calib_data->dig_P9) * ((int32_t
      +                          )(((pressure / 8) * (pressure / 8)) / 8192))) / 4096;
 10310  0400  0845               	movf	compensate_pressure@pressure^(0+128),w
 10311  0401  0140               	movlb	0	; select bank0
 10312  0402  00B2               	movwf	??_compensate_pressure
 10313  0403  0141               	movlb	1	; select bank1
 10314  0404  0846               	movf	(compensate_pressure@pressure+1)^(0+128),w
 10315  0405  0140               	movlb	0	; select bank0
 10316  0406  00B3               	movwf	??_compensate_pressure+1
 10317  0407  0141               	movlb	1	; select bank1
 10318  0408  0847               	movf	(compensate_pressure@pressure+2)^(0+128),w
 10319  0409  0140               	movlb	0	; select bank0
 10320  040A  00B4               	movwf	??_compensate_pressure+2
 10321  040B  0141               	movlb	1	; select bank1
 10322  040C  0848               	movf	(compensate_pressure@pressure+3)^(0+128),w
 10323  040D  0140               	movlb	0	; select bank0
 10324  040E  00B5               	movwf	??_compensate_pressure+3
 10325  040F  3003               	movlw	3
 10326  0410                     u3225:	
 10327  0410  36B5               	lsrf	??_compensate_pressure+3,f
 10328  0411  0CB4               	rrf	??_compensate_pressure+2,f
 10329  0412  0CB3               	rrf	??_compensate_pressure+1,f
 10330  0413  0CB2               	rrf	??_compensate_pressure,f
 10331  0414  0B89               	decfsz	9,f
 10332  0415  2C10               	goto	u3225
 10333  0416  0835               	movf	??_compensate_pressure+3,w
 10334  0417  00F7               	movwf	___lmul@multiplicand+3
 10335  0418  0834               	movf	??_compensate_pressure+2,w
 10336  0419  00F6               	movwf	___lmul@multiplicand+2
 10337  041A  0833               	movf	??_compensate_pressure+1,w
 10338  041B  00F5               	movwf	___lmul@multiplicand+1
 10339  041C  0832               	movf	??_compensate_pressure,w
 10340  041D  00F4               	movwf	___lmul@multiplicand
 10341  041E  0141               	movlb	1	; select bank1
 10342  041F  0845               	movf	compensate_pressure@pressure^(0+128),w
 10343  0420  0140               	movlb	0	; select bank0
 10344  0421  00B6               	movwf	??_compensate_pressure+4
 10345  0422  0141               	movlb	1	; select bank1
 10346  0423  0846               	movf	(compensate_pressure@pressure+1)^(0+128),w
 10347  0424  0140               	movlb	0	; select bank0
 10348  0425  00B7               	movwf	??_compensate_pressure+5
 10349  0426  0141               	movlb	1	; select bank1
 10350  0427  0847               	movf	(compensate_pressure@pressure+2)^(0+128),w
 10351  0428  0140               	movlb	0	; select bank0
 10352  0429  00B8               	movwf	??_compensate_pressure+6
 10353  042A  0141               	movlb	1	; select bank1
 10354  042B  0848               	movf	(compensate_pressure@pressure+3)^(0+128),w
 10355  042C  0140               	movlb	0	; select bank0
 10356  042D  00B9               	movwf	??_compensate_pressure+7
 10357  042E  3003               	movlw	3
 10358  042F                     u3235:	
 10359  042F  36B9               	lsrf	??_compensate_pressure+7,f
 10360  0430  0CB8               	rrf	??_compensate_pressure+6,f
 10361  0431  0CB7               	rrf	??_compensate_pressure+5,f
 10362  0432  0CB6               	rrf	??_compensate_pressure+4,f
 10363  0433  0B89               	decfsz	9,f
 10364  0434  2C2F               	goto	u3235
 10365  0435  0839               	movf	??_compensate_pressure+7,w
 10366  0436  00F3               	movwf	___lmul@multiplier+3
 10367  0437  0838               	movf	??_compensate_pressure+6,w
 10368  0438  00F2               	movwf	___lmul@multiplier+2
 10369  0439  0837               	movf	??_compensate_pressure+5,w
 10370  043A  00F1               	movwf	___lmul@multiplier+1
 10371  043B  0836               	movf	??_compensate_pressure+4,w
 10372  043C  00F0               	movwf	___lmul@multiplier
 10373  043D  319A  2221  3180   	fcall	___lmul
 10374  0440  0870               	movf	?___lmul,w
 10375  0441  0140               	movlb	0	; select bank0
 10376  0442  00BA               	movwf	??_compensate_pressure+8
 10377  0443  0871               	movf	?___lmul+1,w
 10378  0444  00BB               	movwf	??_compensate_pressure+9
 10379  0445  0872               	movf	?___lmul+2,w
 10380  0446  00BC               	movwf	??_compensate_pressure+10
 10381  0447  0873               	movf	?___lmul+3,w
 10382  0448  00BD               	movwf	??_compensate_pressure+11
 10383  0449  300D               	movlw	13
 10384  044A                     u3245:	
 10385  044A  36BD               	lsrf	??_compensate_pressure+11,f
 10386  044B  0CBC               	rrf	??_compensate_pressure+10,f
 10387  044C  0CBB               	rrf	??_compensate_pressure+9,f
 10388  044D  0CBA               	rrf	??_compensate_pressure+8,f
 10389  044E  0B89               	decfsz	9,f
 10390  044F  2C4A               	goto	u3245
 10391  0450  083D               	movf	??_compensate_pressure+11,w
 10392  0451  0141               	movlb	1	; select bank1
 10393  0452  00B3               	movwf	(_compensate_pressure$2718+3)^(0+128)
 10394  0453  0140               	movlb	0	; select bank0
 10395  0454  083C               	movf	??_compensate_pressure+10,w
 10396  0455  0141               	movlb	1	; select bank1
 10397  0456  00B2               	movwf	(_compensate_pressure$2718+2)^(0+128)
 10398  0457  0140               	movlb	0	; select bank0
 10399  0458  083B               	movf	??_compensate_pressure+9,w
 10400  0459  0141               	movlb	1	; select bank1
 10401  045A  00B1               	movwf	(_compensate_pressure$2718+1)^(0+128)
 10402  045B  0140               	movlb	0	; select bank0
 10403  045C  083A               	movf	??_compensate_pressure+8,w
 10404  045D  0141               	movlb	1	; select bank1
 10405  045E  00B0               	movwf	_compensate_pressure$2718^(0+128)
 10406                           
 10407                           ;BME280_driver/bme280.c: 1242:         var1 = (((int32_t)calib_data->dig_P9) * ((int32_t
      +                          )(((pressure / 8) * (pressure / 8)) / 8192))) / 4096;
 10408  045F  3000               	movlw	0
 10409  0460  0140               	movlb	0	; select bank0
 10410  0461  00A3               	movwf	___aldiv@divisor+3
 10411  0462  3000               	movlw	0
 10412  0463  00A2               	movwf	___aldiv@divisor+2
 10413  0464  3010               	movlw	16
 10414  0465  00A1               	movwf	___aldiv@divisor+1
 10415  0466  3000               	movlw	0
 10416  0467  00A0               	movwf	___aldiv@divisor
 10417  0468  082E               	movf	compensate_pressure@calib_data,w
 10418  0469  3E16               	addlw	22
 10419  046A  0086               	movwf	6
 10420  046B  3001               	movlw	1	; select bank2/3
 10421  046C  0087               	movwf	7
 10422  046D  3F40               	moviw [0]fsr1
 10423  046E  00B2               	movwf	??_compensate_pressure
 10424  046F  3F41               	moviw [1]fsr1
 10425  0470  00B3               	movwf	??_compensate_pressure+1
 10426  0471  0832               	movf	??_compensate_pressure,w
 10427  0472  00F0               	movwf	___lmul@multiplier
 10428  0473  0833               	movf	??_compensate_pressure+1,w
 10429  0474  00F1               	movwf	___lmul@multiplier+1
 10430  0475  0D89               	rlf	9,f
 10431  0476  3B89               	subwfb	9,f
 10432  0477  0989               	comf	9,f
 10433  0478  00F2               	movwf	___lmul@multiplier+2
 10434  0479  00F3               	movwf	___lmul@multiplier+3
 10435  047A  0141               	movlb	1	; select bank1
 10436  047B  0833               	movf	(_compensate_pressure$2718+3)^(0+128),w
 10437  047C  00F7               	movwf	___lmul@multiplicand+3
 10438  047D  0832               	movf	(_compensate_pressure$2718+2)^(0+128),w
 10439  047E  00F6               	movwf	___lmul@multiplicand+2
 10440  047F  0831               	movf	(_compensate_pressure$2718+1)^(0+128),w
 10441  0480  00F5               	movwf	___lmul@multiplicand+1
 10442  0481  0830               	movf	_compensate_pressure$2718^(0+128),w
 10443  0482  00F4               	movwf	___lmul@multiplicand
 10444  0483  319A  2221  3180   	fcall	___lmul
 10445  0486  0873               	movf	?___lmul+3,w
 10446  0487  0140               	movlb	0	; select bank0
 10447  0488  00A7               	movwf	___aldiv@dividend+3
 10448  0489  0872               	movf	?___lmul+2,w
 10449  048A  00A6               	movwf	___aldiv@dividend+2
 10450  048B  0871               	movf	?___lmul+1,w
 10451  048C  00A5               	movwf	___aldiv@dividend+1
 10452  048D  0870               	movf	?___lmul,w
 10453  048E  00A4               	movwf	___aldiv@dividend
 10454  048F  3194  24BD  3180   	fcall	___aldiv
 10455  0492  0140               	movlb	0	; select bank0
 10456  0493  0823               	movf	?___aldiv+3,w
 10457  0494  0141               	movlb	1	; select bank1
 10458  0495  00CC               	movwf	(compensate_pressure@var1+3)^(0+128)
 10459  0496  0140               	movlb	0	; select bank0
 10460  0497  0822               	movf	?___aldiv+2,w
 10461  0498  0141               	movlb	1	; select bank1
 10462  0499  00CB               	movwf	(compensate_pressure@var1+2)^(0+128)
 10463  049A  0140               	movlb	0	; select bank0
 10464  049B  0821               	movf	?___aldiv+1,w
 10465  049C  0141               	movlb	1	; select bank1
 10466  049D  00CA               	movwf	(compensate_pressure@var1+1)^(0+128)
 10467  049E  0140               	movlb	0	; select bank0
 10468  049F  0820               	movf	?___aldiv,w
 10469  04A0  0141               	movlb	1	; select bank1
 10470  04A1  00C9               	movwf	compensate_pressure@var1^(0+128)
 10471                           
 10472                           ;BME280_driver/bme280.c: 1243:         var2 = (((int32_t)(pressure / 4)) * ((int32_t)cal
      +                          ib_data->dig_P8)) / 8192;
 10473  04A2  3000               	movlw	0
 10474  04A3  0140               	movlb	0	; select bank0
 10475  04A4  00A3               	movwf	___aldiv@divisor+3
 10476  04A5  3000               	movlw	0
 10477  04A6  00A2               	movwf	___aldiv@divisor+2
 10478  04A7  3020               	movlw	32
 10479  04A8  00A1               	movwf	___aldiv@divisor+1
 10480  04A9  3000               	movlw	0
 10481  04AA  00A0               	movwf	___aldiv@divisor
 10482  04AB  0141               	movlb	1	; select bank1
 10483  04AC  0845               	movf	compensate_pressure@pressure^(0+128),w
 10484  04AD  0140               	movlb	0	; select bank0
 10485  04AE  00B2               	movwf	??_compensate_pressure
 10486  04AF  0141               	movlb	1	; select bank1
 10487  04B0  0846               	movf	(compensate_pressure@pressure+1)^(0+128),w
 10488  04B1  0140               	movlb	0	; select bank0
 10489  04B2  00B3               	movwf	??_compensate_pressure+1
 10490  04B3  0141               	movlb	1	; select bank1
 10491  04B4  0847               	movf	(compensate_pressure@pressure+2)^(0+128),w
 10492  04B5  0140               	movlb	0	; select bank0
 10493  04B6  00B4               	movwf	??_compensate_pressure+2
 10494  04B7  0141               	movlb	1	; select bank1
 10495  04B8  0848               	movf	(compensate_pressure@pressure+3)^(0+128),w
 10496  04B9  0140               	movlb	0	; select bank0
 10497  04BA  00B5               	movwf	??_compensate_pressure+3
 10498  04BB  3002               	movlw	2
 10499  04BC                     u3255:	
 10500  04BC  36B5               	lsrf	??_compensate_pressure+3,f
 10501  04BD  0CB4               	rrf	??_compensate_pressure+2,f
 10502  04BE  0CB3               	rrf	??_compensate_pressure+1,f
 10503  04BF  0CB2               	rrf	??_compensate_pressure,f
 10504  04C0  0B89               	decfsz	9,f
 10505  04C1  2CBC               	goto	u3255
 10506  04C2  0835               	movf	??_compensate_pressure+3,w
 10507  04C3  00F3               	movwf	___lmul@multiplier+3
 10508  04C4  0834               	movf	??_compensate_pressure+2,w
 10509  04C5  00F2               	movwf	___lmul@multiplier+2
 10510  04C6  0833               	movf	??_compensate_pressure+1,w
 10511  04C7  00F1               	movwf	___lmul@multiplier+1
 10512  04C8  0832               	movf	??_compensate_pressure,w
 10513  04C9  00F0               	movwf	___lmul@multiplier
 10514  04CA  082E               	movf	compensate_pressure@calib_data,w
 10515  04CB  3E14               	addlw	20
 10516  04CC  0086               	movwf	6
 10517  04CD  3001               	movlw	1	; select bank2/3
 10518  04CE  0087               	movwf	7
 10519  04CF  3F40               	moviw [0]fsr1
 10520  04D0  00B6               	movwf	??_compensate_pressure+4
 10521  04D1  3F41               	moviw [1]fsr1
 10522  04D2  00B7               	movwf	??_compensate_pressure+5
 10523  04D3  0836               	movf	??_compensate_pressure+4,w
 10524  04D4  00F4               	movwf	___lmul@multiplicand
 10525  04D5  0837               	movf	??_compensate_pressure+5,w
 10526  04D6  00F5               	movwf	___lmul@multiplicand+1
 10527  04D7  0D89               	rlf	9,f
 10528  04D8  3B89               	subwfb	9,f
 10529  04D9  0989               	comf	9,f
 10530  04DA  00F6               	movwf	___lmul@multiplicand+2
 10531  04DB  00F7               	movwf	___lmul@multiplicand+3
 10532  04DC  319A  2221  3180   	fcall	___lmul
 10533  04DF  0873               	movf	?___lmul+3,w
 10534  04E0  0140               	movlb	0	; select bank0
 10535  04E1  00A7               	movwf	___aldiv@dividend+3
 10536  04E2  0872               	movf	?___lmul+2,w
 10537  04E3  00A6               	movwf	___aldiv@dividend+2
 10538  04E4  0871               	movf	?___lmul+1,w
 10539  04E5  00A5               	movwf	___aldiv@dividend+1
 10540  04E6  0870               	movf	?___lmul,w
 10541  04E7  00A4               	movwf	___aldiv@dividend
 10542  04E8  3194  24BD  3180   	fcall	___aldiv
 10543  04EB  0140               	movlb	0	; select bank0
 10544  04EC  0823               	movf	?___aldiv+3,w
 10545  04ED  0141               	movlb	1	; select bank1
 10546  04EE  00C4               	movwf	(compensate_pressure@var2+3)^(0+128)
 10547  04EF  0140               	movlb	0	; select bank0
 10548  04F0  0822               	movf	?___aldiv+2,w
 10549  04F1  0141               	movlb	1	; select bank1
 10550  04F2  00C3               	movwf	(compensate_pressure@var2+2)^(0+128)
 10551  04F3  0140               	movlb	0	; select bank0
 10552  04F4  0821               	movf	?___aldiv+1,w
 10553  04F5  0141               	movlb	1	; select bank1
 10554  04F6  00C2               	movwf	(compensate_pressure@var2+1)^(0+128)
 10555  04F7  0140               	movlb	0	; select bank0
 10556  04F8  0820               	movf	?___aldiv,w
 10557  04F9  0141               	movlb	1	; select bank1
 10558  04FA  00C1               	movwf	compensate_pressure@var2^(0+128)
 10559                           
 10560                           ;BME280_driver/bme280.c: 1244:         pressure = (uint32_t)((int32_t)pressure + ((var1 
      +                          + var2 + calib_data->dig_P7) / 16));
 10561  04FB  3000               	movlw	0
 10562  04FC  0140               	movlb	0	; select bank0
 10563  04FD  00A3               	movwf	___aldiv@divisor+3
 10564  04FE  3000               	movlw	0
 10565  04FF  00A2               	movwf	___aldiv@divisor+2
 10566  0500  3000               	movlw	0
 10567  0501  00A1               	movwf	___aldiv@divisor+1
 10568  0502  3010               	movlw	16
 10569  0503  00A0               	movwf	___aldiv@divisor
 10570  0504  0141               	movlb	1	; select bank1
 10571  0505  0841               	movf	compensate_pressure@var2^(0+128),w
 10572  0506  0140               	movlb	0	; select bank0
 10573  0507  00B2               	movwf	??_compensate_pressure
 10574  0508  0141               	movlb	1	; select bank1
 10575  0509  0842               	movf	(compensate_pressure@var2+1)^(0+128),w
 10576  050A  0140               	movlb	0	; select bank0
 10577  050B  00B3               	movwf	??_compensate_pressure+1
 10578  050C  0141               	movlb	1	; select bank1
 10579  050D  0843               	movf	(compensate_pressure@var2+2)^(0+128),w
 10580  050E  0140               	movlb	0	; select bank0
 10581  050F  00B4               	movwf	??_compensate_pressure+2
 10582  0510  0141               	movlb	1	; select bank1
 10583  0511  0844               	movf	(compensate_pressure@var2+3)^(0+128),w
 10584  0512  0140               	movlb	0	; select bank0
 10585  0513  00B5               	movwf	??_compensate_pressure+3
 10586  0514  0141               	movlb	1	; select bank1
 10587  0515  0849               	movf	compensate_pressure@var1^(0+128),w
 10588  0516  0140               	movlb	0	; select bank0
 10589  0517  00B6               	movwf	??_compensate_pressure+4
 10590  0518  0141               	movlb	1	; select bank1
 10591  0519  084A               	movf	(compensate_pressure@var1+1)^(0+128),w
 10592  051A  0140               	movlb	0	; select bank0
 10593  051B  00B7               	movwf	??_compensate_pressure+5
 10594  051C  0141               	movlb	1	; select bank1
 10595  051D  084B               	movf	(compensate_pressure@var1+2)^(0+128),w
 10596  051E  0140               	movlb	0	; select bank0
 10597  051F  00B8               	movwf	??_compensate_pressure+6
 10598  0520  0141               	movlb	1	; select bank1
 10599  0521  084C               	movf	(compensate_pressure@var1+3)^(0+128),w
 10600  0522  0140               	movlb	0	; select bank0
 10601  0523  00B9               	movwf	??_compensate_pressure+7
 10602  0524  082E               	movf	compensate_pressure@calib_data,w
 10603  0525  3E12               	addlw	18
 10604  0526  0086               	movwf	6
 10605  0527  3001               	movlw	1	; select bank2/3
 10606  0528  0087               	movwf	7
 10607  0529  3F40               	moviw [0]fsr1
 10608  052A  00BA               	movwf	??_compensate_pressure+8
 10609  052B  3F41               	moviw [1]fsr1
 10610  052C  00BB               	movwf	??_compensate_pressure+9
 10611  052D  083A               	movf	??_compensate_pressure+8,w
 10612  052E  00BC               	movwf	??_compensate_pressure+10
 10613  052F  083B               	movf	??_compensate_pressure+9,w
 10614  0530  00BD               	movwf	??_compensate_pressure+11
 10615  0531  3000               	movlw	0
 10616  0532  1BBD               	btfsc	??_compensate_pressure+11,7
 10617  0533  30FF               	movlw	255
 10618  0534  00BE               	movwf	??_compensate_pressure+12
 10619  0535  00BF               	movwf	??_compensate_pressure+13
 10620  0536  083C               	movf	??_compensate_pressure+10,w
 10621  0537  07B6               	addwf	??_compensate_pressure+4,f
 10622  0538  083D               	movf	??_compensate_pressure+11,w
 10623  0539  3DB7               	addwfc	??_compensate_pressure+5,f
 10624  053A  083E               	movf	??_compensate_pressure+12,w
 10625  053B  3DB8               	addwfc	??_compensate_pressure+6,f
 10626  053C  083F               	movf	??_compensate_pressure+13,w
 10627  053D  3DB9               	addwfc	??_compensate_pressure+7,f
 10628  053E  0836               	movf	??_compensate_pressure+4,w
 10629  053F  07B2               	addwf	??_compensate_pressure,f
 10630  0540  0837               	movf	??_compensate_pressure+5,w
 10631  0541  3DB3               	addwfc	??_compensate_pressure+1,f
 10632  0542  0838               	movf	??_compensate_pressure+6,w
 10633  0543  3DB4               	addwfc	??_compensate_pressure+2,f
 10634  0544  0839               	movf	??_compensate_pressure+7,w
 10635  0545  3DB5               	addwfc	??_compensate_pressure+3,f
 10636  0546  0835               	movf	??_compensate_pressure+3,w
 10637  0547  00A7               	movwf	___aldiv@dividend+3
 10638  0548  0834               	movf	??_compensate_pressure+2,w
 10639  0549  00A6               	movwf	___aldiv@dividend+2
 10640  054A  0833               	movf	??_compensate_pressure+1,w
 10641  054B  00A5               	movwf	___aldiv@dividend+1
 10642  054C  0832               	movf	??_compensate_pressure,w
 10643  054D  00A4               	movwf	___aldiv@dividend
 10644  054E  3194  24BD  3180   	fcall	___aldiv
 10645  0551  0140               	movlb	0	; select bank0
 10646  0552  0820               	movf	?___aldiv,w
 10647  0553  0141               	movlb	1	; select bank1
 10648  0554  0745               	addwf	compensate_pressure@pressure^(0+128),w
 10649  0555  0140               	movlb	0	; select bank0
 10650  0556  00C0               	movwf	??_compensate_pressure+14
 10651  0557  0821               	movf	?___aldiv+1,w
 10652  0558  0141               	movlb	1	; select bank1
 10653  0559  3D46               	addwfc	(compensate_pressure@pressure+1)^(0+128),w
 10654  055A  0140               	movlb	0	; select bank0
 10655  055B  00C1               	movwf	??_compensate_pressure+15
 10656  055C  0822               	movf	?___aldiv+2,w
 10657  055D  0141               	movlb	1	; select bank1
 10658  055E  3D47               	addwfc	(compensate_pressure@pressure+2)^(0+128),w
 10659  055F  0140               	movlb	0	; select bank0
 10660  0560  00C2               	movwf	??_compensate_pressure+16
 10661  0561  0823               	movf	?___aldiv+3,w
 10662  0562  0141               	movlb	1	; select bank1
 10663  0563  3D48               	addwfc	(compensate_pressure@pressure+3)^(0+128),w
 10664  0564  0140               	movlb	0	; select bank0
 10665  0565  00C3               	movwf	??_compensate_pressure+17
 10666  0566  0843               	movf	??_compensate_pressure+17,w
 10667  0567  0141               	movlb	1	; select bank1
 10668  0568  00C8               	movwf	(compensate_pressure@pressure+3)^(0+128)
 10669  0569  0140               	movlb	0	; select bank0
 10670  056A  0842               	movf	??_compensate_pressure+16,w
 10671  056B  0141               	movlb	1	; select bank1
 10672  056C  00C7               	movwf	(compensate_pressure@pressure+2)^(0+128)
 10673  056D  0140               	movlb	0	; select bank0
 10674  056E  0841               	movf	??_compensate_pressure+15,w
 10675  056F  0141               	movlb	1	; select bank1
 10676  0570  00C6               	movwf	(compensate_pressure@pressure+1)^(0+128)
 10677  0571  0140               	movlb	0	; select bank0
 10678  0572  0840               	movf	??_compensate_pressure+14,w
 10679  0573  0141               	movlb	1	; select bank1
 10680  0574  00C5               	movwf	compensate_pressure@pressure^(0+128)
 10681                           
 10682                           ;BME280_driver/bme280.c: 1245:         if (pressure < pressure_min)
 10683  0575  0848               	movf	(compensate_pressure@pressure+3)^(0+128),w
 10684  0576  1D03               	btfss	3,2
 10685  0577  2D89               	goto	l3834
 10686  0578  0847               	movf	(compensate_pressure@pressure+2)^(0+128),w
 10687  0579  1D03               	btfss	3,2
 10688  057A  2D89               	goto	l3834
 10689  057B  3030               	movlw	48
 10690  057C  0245               	subwf	compensate_pressure@pressure^(0+128),w
 10691  057D  3075               	movlw	117
 10692  057E  3B46               	subwfb	(compensate_pressure@pressure+1)^(0+128),w
 10693  057F  1803               	btfsc	3,0
 10694  0580  2D89               	goto	l3834
 10695  0581                     l3832:	
 10696                           
 10697                           ;BME280_driver/bme280.c: 1246:         {;BME280_driver/bme280.c: 1247:             press
      +                          ure = pressure_min;
 10698  0581  3000               	movlw	0
 10699  0582  00C8               	movwf	(compensate_pressure@pressure+3)^(0+128)
 10700  0583  3000               	movlw	0
 10701  0584  00C7               	movwf	(compensate_pressure@pressure+2)^(0+128)
 10702  0585  3075               	movlw	117
 10703  0586  00C6               	movwf	(compensate_pressure@pressure+1)^(0+128)
 10704  0587  3030               	movlw	48
 10705  0588  2D9B               	goto	L3
 10706  0589                     l3834:	
 10707                           ;BME280_driver/bme280.c: 1248:         }
 10708                           
 10709  0589  0848               	movf	(compensate_pressure@pressure+3)^(0+128),w
 10710  058A  1D03               	btfss	3,2
 10711  058B  2D94               	goto	l3836
 10712  058C  30B1               	movlw	177
 10713  058D  0245               	subwf	compensate_pressure@pressure^(0+128),w
 10714  058E  30AD               	movlw	173
 10715  058F  3B46               	subwfb	(compensate_pressure@pressure+1)^(0+128),w
 10716  0590  3001               	movlw	1
 10717  0591  3B47               	subwfb	(compensate_pressure@pressure+2)^(0+128),w
 10718  0592  1C03               	btfss	3,0
 10719  0593  2D9C               	goto	l196
 10720  0594                     l3836:	
 10721                           
 10722                           ;BME280_driver/bme280.c: 1250:         {;BME280_driver/bme280.c: 1251:             press
      +                          ure = pressure_max;
 10723  0594  3000               	movlw	0
 10724  0595  00C8               	movwf	(compensate_pressure@pressure+3)^(0+128)
 10725  0596  3001               	movlw	1
 10726  0597  00C7               	movwf	(compensate_pressure@pressure+2)^(0+128)
 10727  0598  30AD               	movlw	173
 10728  0599  00C6               	movwf	(compensate_pressure@pressure+1)^(0+128)
 10729  059A  30B0               	movlw	176
 10730  059B                     L3:	
 10731  059B  00C5               	movwf	compensate_pressure@pressure^(0+128)
 10732  059C                     l196:	
 10733                           ;BME280_driver/bme280.c: 1257:     }
 10734                           
 10735                           
 10736                           ;BME280_driver/bme280.c: 1259:     return pressure;
 10737  059C  0848               	movf	(compensate_pressure@pressure+3)^(0+128),w
 10738  059D  0140               	movlb	0	; select bank0
 10739  059E  00B1               	movwf	?_compensate_pressure+3
 10740  059F  0141               	movlb	1	; select bank1
 10741  05A0  0847               	movf	(compensate_pressure@pressure+2)^(0+128),w
 10742  05A1  0140               	movlb	0	; select bank0
 10743  05A2  00B0               	movwf	?_compensate_pressure+2
 10744  05A3  0141               	movlb	1	; select bank1
 10745  05A4  0846               	movf	(compensate_pressure@pressure+1)^(0+128),w
 10746  05A5  0140               	movlb	0	; select bank0
 10747  05A6  00AF               	movwf	?_compensate_pressure+1
 10748  05A7  0141               	movlb	1	; select bank1
 10749  05A8  0845               	movf	compensate_pressure@pressure^(0+128),w
 10750  05A9  0140               	movlb	0	; select bank0
 10751  05AA  00AE               	movwf	?_compensate_pressure
 10752  05AB  0008               	return
 10753  05AC                     __end_of_compensate_pressure:	
 10754                           
 10755                           	psect	text8
 10756  0D36                     __ptext8:	
 10757 ;; *************** function _compensate_humidity *****************
 10758 ;; Defined at:
 10759 ;;		line 1267 in file "BME280_driver/bme280.c"
 10760 ;; Parameters:    Size  Location     Type
 10761 ;;  uncomp_data     1    wreg     PTR const struct bme280_
 10762 ;;		 -> bme280_get_sensor_data@uncomp_data(12), 
 10763 ;;  calib_data      1   14[BANK0 ] PTR const struct bme280_
 10764 ;;		 -> EnvSensor(51), 
 10765 ;; Auto vars:     Size  Location     Type
 10766 ;;  uncomp_data     1   30[BANK0 ] PTR const struct bme280_
 10767 ;;		 -> bme280_get_sensor_data@uncomp_data(12), 
 10768 ;;  var3            4   55[BANK0 ] long 
 10769 ;;  var5            4   51[BANK0 ] long 
 10770 ;;  var4            4   47[BANK0 ] long 
 10771 ;;  var2            4   43[BANK0 ] long 
 10772 ;;  var1            4   39[BANK0 ] long 
 10773 ;;  humidity        4   35[BANK0 ] unsigned long 
 10774 ;;  humidity_max    4    0        unsigned long 
 10775 ;; Return value:  Size  Location     Type
 10776 ;;                  4   14[BANK0 ] unsigned long 
 10777 ;; Registers used:
 10778 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10779 ;; Tracked objects:
 10780 ;;		On entry : 0/0
 10781 ;;		On exit  : 0/0
 10782 ;;		Unchanged: 0/0
 10783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10784 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10785 ;;      Locals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10786 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10787 ;;      Totals:         0      45       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10788 ;;Total ram usage:       45 bytes
 10789 ;; Hardware stack levels used:    1
 10790 ;; Hardware stack levels required when called:    4
 10791 ;; This function calls:
 10792 ;;		___aldiv
 10793 ;;		___lmul
 10794 ;; This function is called by:
 10795 ;;		_bme280_compensate_data
 10796 ;; This function uses a non-reentrant model
 10797 ;;
 10798                           
 10799                           
 10800                           ;psect for function _compensate_humidity
 10801  0D36                     _compensate_humidity:	
 10802                           
 10803                           ;incstack = 0
 10804                           ; Regs used in _compensate_humidity: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10805                           ;compensate_humidity@uncomp_data stored from wreg
 10806  0D36  0140               	movlb	0	; select bank0
 10807  0D37  00BE               	movwf	compensate_humidity@uncomp_data
 10808                           
 10809                           ;BME280_driver/bme280.c: 1278:     var1 = calib_data->t_fine - ((int32_t)76800);
 10810  0D38  082E               	movf	compensate_humidity@calib_data,w
 10811  0D39  3E21               	addlw	33
 10812  0D3A  0086               	movwf	6
 10813  0D3B  3001               	movlw	1	; select bank2/3
 10814  0D3C  0087               	movwf	7
 10815  0D3D  3F40               	moviw [0]fsr1
 10816  0D3E  00B2               	movwf	??_compensate_humidity
 10817  0D3F  3F41               	moviw [1]fsr1
 10818  0D40  00B3               	movwf	??_compensate_humidity+1
 10819  0D41  3F42               	moviw [2]fsr1
 10820  0D42  00B4               	movwf	??_compensate_humidity+2
 10821  0D43  3F43               	moviw [3]fsr1
 10822  0D44  00B5               	movwf	??_compensate_humidity+3
 10823  0D45  3000               	movlw	0
 10824  0D46  0732               	addwf	??_compensate_humidity,w
 10825  0D47  00C7               	movwf	compensate_humidity@var1
 10826  0D48  30D4               	movlw	212
 10827  0D49  3D33               	addwfc	??_compensate_humidity+1,w
 10828  0D4A  00C8               	movwf	compensate_humidity@var1+1
 10829  0D4B  30FE               	movlw	254
 10830  0D4C  3D34               	addwfc	??_compensate_humidity+2,w
 10831  0D4D  00C9               	movwf	compensate_humidity@var1+2
 10832  0D4E  30FF               	movlw	255
 10833  0D4F  3D35               	addwfc	??_compensate_humidity+3,w
 10834  0D50  00CA               	movwf	compensate_humidity@var1+3
 10835                           
 10836                           ;BME280_driver/bme280.c: 1279:     var2 = (int32_t)(uncomp_data->humidity * 16384);
 10837  0D51  083E               	movf	compensate_humidity@uncomp_data,w
 10838  0D52  3E08               	addlw	8
 10839  0D53  0086               	movwf	6
 10840  0D54  0187               	clrf	7
 10841  0D55  3F40               	moviw [0]fsr1
 10842  0D56  00B2               	movwf	??_compensate_humidity
 10843  0D57  3F41               	moviw [1]fsr1
 10844  0D58  00B3               	movwf	??_compensate_humidity+1
 10845  0D59  3F42               	moviw [2]fsr1
 10846  0D5A  00B4               	movwf	??_compensate_humidity+2
 10847  0D5B  3F43               	moviw [3]fsr1
 10848  0D5C  00B5               	movwf	??_compensate_humidity+3
 10849  0D5D  300E               	movlw	14
 10850  0D5E                     u3285:	
 10851  0D5E  35B2               	lslf	??_compensate_humidity,f
 10852  0D5F  0DB3               	rlf	??_compensate_humidity+1,f
 10853  0D60  0DB4               	rlf	??_compensate_humidity+2,f
 10854  0D61  0DB5               	rlf	??_compensate_humidity+3,f
 10855  0D62  0B89               	decfsz	9,f
 10856  0D63  2D5E               	goto	u3285
 10857  0D64  0835               	movf	??_compensate_humidity+3,w
 10858  0D65  00CE               	movwf	compensate_humidity@var2+3
 10859  0D66  0834               	movf	??_compensate_humidity+2,w
 10860  0D67  00CD               	movwf	compensate_humidity@var2+2
 10861  0D68  0833               	movf	??_compensate_humidity+1,w
 10862  0D69  00CC               	movwf	compensate_humidity@var2+1
 10863  0D6A  0832               	movf	??_compensate_humidity,w
 10864  0D6B  00CB               	movwf	compensate_humidity@var2
 10865                           
 10866                           ;BME280_driver/bme280.c: 1280:     var3 = (int32_t)(((int32_t)calib_data->dig_H4) * 1048
      +                          576);
 10867  0D6C  082E               	movf	compensate_humidity@calib_data,w
 10868  0D6D  3E1C               	addlw	28
 10869  0D6E  0086               	movwf	6
 10870  0D6F  3001               	movlw	1	; select bank2/3
 10871  0D70  0087               	movwf	7
 10872  0D71  3F40               	moviw [0]fsr1
 10873  0D72  00B2               	movwf	??_compensate_humidity
 10874  0D73  3F41               	moviw [1]fsr1
 10875  0D74  00B3               	movwf	??_compensate_humidity+1
 10876  0D75  0832               	movf	??_compensate_humidity,w
 10877  0D76  00B4               	movwf	??_compensate_humidity+2
 10878  0D77  0833               	movf	??_compensate_humidity+1,w
 10879  0D78  00B5               	movwf	??_compensate_humidity+3
 10880  0D79  01B6               	clrf	??_compensate_humidity+4
 10881  0D7A  01B7               	clrf	??_compensate_humidity+5
 10882  0D7B  3014               	movlw	20
 10883  0D7C                     u3295:	
 10884  0D7C  35B4               	lslf	??_compensate_humidity+2,f
 10885  0D7D  0DB5               	rlf	??_compensate_humidity+3,f
 10886  0D7E  0DB6               	rlf	??_compensate_humidity+4,f
 10887  0D7F  0DB7               	rlf	??_compensate_humidity+5,f
 10888  0D80  0B89               	decfsz	9,f
 10889  0D81  2D7C               	goto	u3295
 10890  0D82  0837               	movf	??_compensate_humidity+5,w
 10891  0D83  00DA               	movwf	compensate_humidity@var3+3
 10892  0D84  0836               	movf	??_compensate_humidity+4,w
 10893  0D85  00D9               	movwf	compensate_humidity@var3+2
 10894  0D86  0835               	movf	??_compensate_humidity+3,w
 10895  0D87  00D8               	movwf	compensate_humidity@var3+1
 10896  0D88  0834               	movf	??_compensate_humidity+2,w
 10897  0D89  00D7               	movwf	compensate_humidity@var3
 10898                           
 10899                           ;BME280_driver/bme280.c: 1281:     var4 = ((int32_t)calib_data->dig_H5) * var1;
 10900  0D8A  082E               	movf	compensate_humidity@calib_data,w
 10901  0D8B  3E1E               	addlw	30
 10902  0D8C  0086               	movwf	6
 10903  0D8D  3001               	movlw	1	; select bank2/3
 10904  0D8E  0087               	movwf	7
 10905  0D8F  3F40               	moviw [0]fsr1
 10906  0D90  00B2               	movwf	??_compensate_humidity
 10907  0D91  3F41               	moviw [1]fsr1
 10908  0D92  00B3               	movwf	??_compensate_humidity+1
 10909  0D93  0832               	movf	??_compensate_humidity,w
 10910  0D94  00F0               	movwf	___lmul@multiplier
 10911  0D95  0833               	movf	??_compensate_humidity+1,w
 10912  0D96  00F1               	movwf	___lmul@multiplier+1
 10913  0D97  0D89               	rlf	9,f
 10914  0D98  3B89               	subwfb	9,f
 10915  0D99  0989               	comf	9,f
 10916  0D9A  00F2               	movwf	___lmul@multiplier+2
 10917  0D9B  00F3               	movwf	___lmul@multiplier+3
 10918  0D9C  084A               	movf	compensate_humidity@var1+3,w
 10919  0D9D  00F7               	movwf	___lmul@multiplicand+3
 10920  0D9E  0849               	movf	compensate_humidity@var1+2,w
 10921  0D9F  00F6               	movwf	___lmul@multiplicand+2
 10922  0DA0  0848               	movf	compensate_humidity@var1+1,w
 10923  0DA1  00F5               	movwf	___lmul@multiplicand+1
 10924  0DA2  0847               	movf	compensate_humidity@var1,w
 10925  0DA3  00F4               	movwf	___lmul@multiplicand
 10926  0DA4  319A  2221  318D   	fcall	___lmul
 10927  0DA7  0873               	movf	?___lmul+3,w
 10928  0DA8  0140               	movlb	0	; select bank0
 10929  0DA9  00D2               	movwf	compensate_humidity@var4+3
 10930  0DAA  0872               	movf	?___lmul+2,w
 10931  0DAB  00D1               	movwf	compensate_humidity@var4+2
 10932  0DAC  0871               	movf	?___lmul+1,w
 10933  0DAD  00D0               	movwf	compensate_humidity@var4+1
 10934  0DAE  0870               	movf	?___lmul,w
 10935  0DAF  00CF               	movwf	compensate_humidity@var4
 10936                           
 10937                           ;BME280_driver/bme280.c: 1282:     var5 = (((var2 - var3) - var4) + (int32_t)16384) / 32
      +                          768;
 10938  0DB0  3000               	movlw	0
 10939  0DB1  00A3               	movwf	___aldiv@divisor+3
 10940  0DB2  3000               	movlw	0
 10941  0DB3  00A2               	movwf	___aldiv@divisor+2
 10942  0DB4  3080               	movlw	128
 10943  0DB5  00A1               	movwf	___aldiv@divisor+1
 10944  0DB6  3000               	movlw	0
 10945  0DB7  00A0               	movwf	___aldiv@divisor
 10946  0DB8  084B               	movf	compensate_humidity@var2,w
 10947  0DB9  00B2               	movwf	??_compensate_humidity
 10948  0DBA  084C               	movf	compensate_humidity@var2+1,w
 10949  0DBB  00B3               	movwf	??_compensate_humidity+1
 10950  0DBC  084D               	movf	compensate_humidity@var2+2,w
 10951  0DBD  00B4               	movwf	??_compensate_humidity+2
 10952  0DBE  084E               	movf	compensate_humidity@var2+3,w
 10953  0DBF  00B5               	movwf	??_compensate_humidity+3
 10954  0DC0  0957               	comf	compensate_humidity@var3,w
 10955  0DC1  00B6               	movwf	??_compensate_humidity+4
 10956  0DC2  0958               	comf	compensate_humidity@var3+1,w
 10957  0DC3  00B7               	movwf	??_compensate_humidity+5
 10958  0DC4  0959               	comf	compensate_humidity@var3+2,w
 10959  0DC5  00B8               	movwf	??_compensate_humidity+6
 10960  0DC6  095A               	comf	compensate_humidity@var3+3,w
 10961  0DC7  00B9               	movwf	??_compensate_humidity+7
 10962  0DC8  0AB6               	incf	??_compensate_humidity+4,f
 10963  0DC9  1903               	skipnz
 10964  0DCA  0AB7               	incf	??_compensate_humidity+5,f
 10965  0DCB  1903               	skipnz
 10966  0DCC  0AB8               	incf	??_compensate_humidity+6,f
 10967  0DCD  1903               	skipnz
 10968  0DCE  0AB9               	incf	??_compensate_humidity+7,f
 10969  0DCF  084F               	movf	compensate_humidity@var4,w
 10970  0DD0  02B6               	subwf	??_compensate_humidity+4,f
 10971  0DD1  0850               	movf	compensate_humidity@var4+1,w
 10972  0DD2  3BB7               	subwfb	??_compensate_humidity+5,f
 10973  0DD3  0851               	movf	compensate_humidity@var4+2,w
 10974  0DD4  3BB8               	subwfb	??_compensate_humidity+6,f
 10975  0DD5  0852               	movf	compensate_humidity@var4+3,w
 10976  0DD6  3BB9               	subwfb	??_compensate_humidity+7,f
 10977  0DD7  0836               	movf	??_compensate_humidity+4,w
 10978  0DD8  07B2               	addwf	??_compensate_humidity,f
 10979  0DD9  0837               	movf	??_compensate_humidity+5,w
 10980  0DDA  3DB3               	addwfc	??_compensate_humidity+1,f
 10981  0DDB  0838               	movf	??_compensate_humidity+6,w
 10982  0DDC  3DB4               	addwfc	??_compensate_humidity+2,f
 10983  0DDD  0839               	movf	??_compensate_humidity+7,w
 10984  0DDE  3DB5               	addwfc	??_compensate_humidity+3,f
 10985  0DDF  3000               	movlw	0
 10986  0DE0  0732               	addwf	??_compensate_humidity,w
 10987  0DE1  00A4               	movwf	___aldiv@dividend
 10988  0DE2  3040               	movlw	64
 10989  0DE3  3D33               	addwfc	??_compensate_humidity+1,w
 10990  0DE4  00A5               	movwf	___aldiv@dividend+1
 10991  0DE5  3000               	movlw	0
 10992  0DE6  3D34               	addwfc	??_compensate_humidity+2,w
 10993  0DE7  00A6               	movwf	___aldiv@dividend+2
 10994  0DE8  3000               	movlw	0
 10995  0DE9  3D35               	addwfc	??_compensate_humidity+3,w
 10996  0DEA  00A7               	movwf	___aldiv@dividend+3
 10997  0DEB  3194  24BD  318D   	fcall	___aldiv
 10998  0DEE  0140               	movlb	0	; select bank0
 10999  0DEF  0823               	movf	?___aldiv+3,w
 11000  0DF0  00D6               	movwf	compensate_humidity@var5+3
 11001  0DF1  0822               	movf	?___aldiv+2,w
 11002  0DF2  00D5               	movwf	compensate_humidity@var5+2
 11003  0DF3  0821               	movf	?___aldiv+1,w
 11004  0DF4  00D4               	movwf	compensate_humidity@var5+1
 11005  0DF5  0820               	movf	?___aldiv,w
 11006  0DF6  00D3               	movwf	compensate_humidity@var5
 11007                           
 11008                           ;BME280_driver/bme280.c: 1283:     var2 = (var1 * ((int32_t)calib_data->dig_H6)) / 1024;
 11009  0DF7  3000               	movlw	0
 11010  0DF8  00A3               	movwf	___aldiv@divisor+3
 11011  0DF9  3000               	movlw	0
 11012  0DFA  00A2               	movwf	___aldiv@divisor+2
 11013  0DFB  3004               	movlw	4
 11014  0DFC  00A1               	movwf	___aldiv@divisor+1
 11015  0DFD  3000               	movlw	0
 11016  0DFE  00A0               	movwf	___aldiv@divisor
 11017  0DFF  082E               	movf	compensate_humidity@calib_data,w
 11018  0E00  3E20               	addlw	32
 11019  0E01  0086               	movwf	6
 11020  0E02  3001               	movlw	1	; select bank2/3
 11021  0E03  0087               	movwf	7
 11022  0E04  0801               	movf	1,w
 11023  0E05  00F0               	movwf	___lmul@multiplier
 11024  0E06  3980               	andlw	128
 11025  0E07  1D03               	skipz
 11026  0E08  30FF               	movlw	255
 11027  0E09  00F1               	movwf	___lmul@multiplier+1
 11028  0E0A  00F2               	movwf	___lmul@multiplier+2
 11029  0E0B  00F3               	movwf	___lmul@multiplier+3
 11030  0E0C  084A               	movf	compensate_humidity@var1+3,w
 11031  0E0D  00F7               	movwf	___lmul@multiplicand+3
 11032  0E0E  0849               	movf	compensate_humidity@var1+2,w
 11033  0E0F  00F6               	movwf	___lmul@multiplicand+2
 11034  0E10  0848               	movf	compensate_humidity@var1+1,w
 11035  0E11  00F5               	movwf	___lmul@multiplicand+1
 11036  0E12  0847               	movf	compensate_humidity@var1,w
 11037  0E13  00F4               	movwf	___lmul@multiplicand
 11038  0E14  319A  2221  318D   	fcall	___lmul
 11039  0E17  0873               	movf	?___lmul+3,w
 11040  0E18  0140               	movlb	0	; select bank0
 11041  0E19  00A7               	movwf	___aldiv@dividend+3
 11042  0E1A  0872               	movf	?___lmul+2,w
 11043  0E1B  00A6               	movwf	___aldiv@dividend+2
 11044  0E1C  0871               	movf	?___lmul+1,w
 11045  0E1D  00A5               	movwf	___aldiv@dividend+1
 11046  0E1E  0870               	movf	?___lmul,w
 11047  0E1F  00A4               	movwf	___aldiv@dividend
 11048  0E20  3194  24BD  318D   	fcall	___aldiv
 11049  0E23  0140               	movlb	0	; select bank0
 11050  0E24  0823               	movf	?___aldiv+3,w
 11051  0E25  00CE               	movwf	compensate_humidity@var2+3
 11052  0E26  0822               	movf	?___aldiv+2,w
 11053  0E27  00CD               	movwf	compensate_humidity@var2+2
 11054  0E28  0821               	movf	?___aldiv+1,w
 11055  0E29  00CC               	movwf	compensate_humidity@var2+1
 11056  0E2A  0820               	movf	?___aldiv,w
 11057  0E2B  00CB               	movwf	compensate_humidity@var2
 11058                           
 11059                           ;BME280_driver/bme280.c: 1284:     var3 = (var1 * ((int32_t)calib_data->dig_H3)) / 2048;
 11060  0E2C  3000               	movlw	0
 11061  0E2D  00A3               	movwf	___aldiv@divisor+3
 11062  0E2E  3000               	movlw	0
 11063  0E2F  00A2               	movwf	___aldiv@divisor+2
 11064  0E30  3008               	movlw	8
 11065  0E31  00A1               	movwf	___aldiv@divisor+1
 11066  0E32  3000               	movlw	0
 11067  0E33  00A0               	movwf	___aldiv@divisor
 11068  0E34  082E               	movf	compensate_humidity@calib_data,w
 11069  0E35  3E1B               	addlw	27
 11070  0E36  0086               	movwf	6
 11071  0E37  3001               	movlw	1	; select bank2/3
 11072  0E38  0087               	movwf	7
 11073  0E39  0801               	movf	1,w
 11074  0E3A  00B2               	movwf	??_compensate_humidity
 11075  0E3B  01B3               	clrf	??_compensate_humidity+1
 11076  0E3C  01B4               	clrf	??_compensate_humidity+2
 11077  0E3D  01B5               	clrf	??_compensate_humidity+3
 11078  0E3E  0835               	movf	??_compensate_humidity+3,w
 11079  0E3F  00F3               	movwf	___lmul@multiplier+3
 11080  0E40  0834               	movf	??_compensate_humidity+2,w
 11081  0E41  00F2               	movwf	___lmul@multiplier+2
 11082  0E42  0833               	movf	??_compensate_humidity+1,w
 11083  0E43  00F1               	movwf	___lmul@multiplier+1
 11084  0E44  0832               	movf	??_compensate_humidity,w
 11085  0E45  00F0               	movwf	___lmul@multiplier
 11086  0E46  084A               	movf	compensate_humidity@var1+3,w
 11087  0E47  00F7               	movwf	___lmul@multiplicand+3
 11088  0E48  0849               	movf	compensate_humidity@var1+2,w
 11089  0E49  00F6               	movwf	___lmul@multiplicand+2
 11090  0E4A  0848               	movf	compensate_humidity@var1+1,w
 11091  0E4B  00F5               	movwf	___lmul@multiplicand+1
 11092  0E4C  0847               	movf	compensate_humidity@var1,w
 11093  0E4D  00F4               	movwf	___lmul@multiplicand
 11094  0E4E  319A  2221  318D   	fcall	___lmul
 11095  0E51  0873               	movf	?___lmul+3,w
 11096  0E52  0140               	movlb	0	; select bank0
 11097  0E53  00A7               	movwf	___aldiv@dividend+3
 11098  0E54  0872               	movf	?___lmul+2,w
 11099  0E55  00A6               	movwf	___aldiv@dividend+2
 11100  0E56  0871               	movf	?___lmul+1,w
 11101  0E57  00A5               	movwf	___aldiv@dividend+1
 11102  0E58  0870               	movf	?___lmul,w
 11103  0E59  00A4               	movwf	___aldiv@dividend
 11104  0E5A  3194  24BD  318D   	fcall	___aldiv
 11105  0E5D  0140               	movlb	0	; select bank0
 11106  0E5E  0823               	movf	?___aldiv+3,w
 11107  0E5F  00DA               	movwf	compensate_humidity@var3+3
 11108  0E60  0822               	movf	?___aldiv+2,w
 11109  0E61  00D9               	movwf	compensate_humidity@var3+2
 11110  0E62  0821               	movf	?___aldiv+1,w
 11111  0E63  00D8               	movwf	compensate_humidity@var3+1
 11112  0E64  0820               	movf	?___aldiv,w
 11113  0E65  00D7               	movwf	compensate_humidity@var3
 11114                           
 11115                           ;BME280_driver/bme280.c: 1285:     var4 = ((var2 * (var3 + (int32_t)32768)) / 1024) + (i
      +                          nt32_t)2097152;
 11116  0E66  3000               	movlw	0
 11117  0E67  00A3               	movwf	___aldiv@divisor+3
 11118  0E68  3000               	movlw	0
 11119  0E69  00A2               	movwf	___aldiv@divisor+2
 11120  0E6A  3004               	movlw	4
 11121  0E6B  00A1               	movwf	___aldiv@divisor+1
 11122  0E6C  3000               	movlw	0
 11123  0E6D  00A0               	movwf	___aldiv@divisor
 11124  0E6E  3000               	movlw	0
 11125  0E6F  0757               	addwf	compensate_humidity@var3,w
 11126  0E70  00F0               	movwf	___lmul@multiplier
 11127  0E71  3080               	movlw	128
 11128  0E72  3D58               	addwfc	compensate_humidity@var3+1,w
 11129  0E73  00F1               	movwf	___lmul@multiplier+1
 11130  0E74  3000               	movlw	0
 11131  0E75  3D59               	addwfc	compensate_humidity@var3+2,w
 11132  0E76  00F2               	movwf	___lmul@multiplier+2
 11133  0E77  3000               	movlw	0
 11134  0E78  3D5A               	addwfc	compensate_humidity@var3+3,w
 11135  0E79  00F3               	movwf	___lmul@multiplier+3
 11136  0E7A  084E               	movf	compensate_humidity@var2+3,w
 11137  0E7B  00F7               	movwf	___lmul@multiplicand+3
 11138  0E7C  084D               	movf	compensate_humidity@var2+2,w
 11139  0E7D  00F6               	movwf	___lmul@multiplicand+2
 11140  0E7E  084C               	movf	compensate_humidity@var2+1,w
 11141  0E7F  00F5               	movwf	___lmul@multiplicand+1
 11142  0E80  084B               	movf	compensate_humidity@var2,w
 11143  0E81  00F4               	movwf	___lmul@multiplicand
 11144  0E82  319A  2221  318D   	fcall	___lmul
 11145  0E85  0873               	movf	?___lmul+3,w
 11146  0E86  0140               	movlb	0	; select bank0
 11147  0E87  00A7               	movwf	___aldiv@dividend+3
 11148  0E88  0872               	movf	?___lmul+2,w
 11149  0E89  00A6               	movwf	___aldiv@dividend+2
 11150  0E8A  0871               	movf	?___lmul+1,w
 11151  0E8B  00A5               	movwf	___aldiv@dividend+1
 11152  0E8C  0870               	movf	?___lmul,w
 11153  0E8D  00A4               	movwf	___aldiv@dividend
 11154  0E8E  3194  24BD  318D   	fcall	___aldiv
 11155  0E91  3000               	movlw	0
 11156  0E92  0140               	movlb	0	; select bank0
 11157  0E93  0720               	addwf	?___aldiv,w
 11158  0E94  00CF               	movwf	compensate_humidity@var4
 11159  0E95  3000               	movlw	0
 11160  0E96  3D21               	addwfc	?___aldiv+1,w
 11161  0E97  00D0               	movwf	compensate_humidity@var4+1
 11162  0E98  3020               	movlw	32
 11163  0E99  3D22               	addwfc	?___aldiv+2,w
 11164  0E9A  00D1               	movwf	compensate_humidity@var4+2
 11165  0E9B  3000               	movlw	0
 11166  0E9C  3D23               	addwfc	?___aldiv+3,w
 11167  0E9D  00D2               	movwf	compensate_humidity@var4+3
 11168                           
 11169                           ;BME280_driver/bme280.c: 1286:     var2 = ((var4 * ((int32_t)calib_data->dig_H2)) + 8192
      +                          ) / 16384;
 11170  0E9E  3000               	movlw	0
 11171  0E9F  00A3               	movwf	___aldiv@divisor+3
 11172  0EA0  3000               	movlw	0
 11173  0EA1  00A2               	movwf	___aldiv@divisor+2
 11174  0EA2  3040               	movlw	64
 11175  0EA3  00A1               	movwf	___aldiv@divisor+1
 11176  0EA4  3000               	movlw	0
 11177  0EA5  00A0               	movwf	___aldiv@divisor
 11178  0EA6  3000               	movlw	0
 11179  0EA7  00B2               	movwf	??_compensate_humidity
 11180  0EA8  3020               	movlw	32
 11181  0EA9  00B3               	movwf	??_compensate_humidity+1
 11182  0EAA  3000               	movlw	0
 11183  0EAB  00B4               	movwf	??_compensate_humidity+2
 11184  0EAC  3000               	movlw	0
 11185  0EAD  00B5               	movwf	??_compensate_humidity+3
 11186  0EAE  082E               	movf	compensate_humidity@calib_data,w
 11187  0EAF  3E19               	addlw	25
 11188  0EB0  0086               	movwf	6
 11189  0EB1  3001               	movlw	1	; select bank2/3
 11190  0EB2  0087               	movwf	7
 11191  0EB3  3F40               	moviw [0]fsr1
 11192  0EB4  00B6               	movwf	??_compensate_humidity+4
 11193  0EB5  3F41               	moviw [1]fsr1
 11194  0EB6  00B7               	movwf	??_compensate_humidity+5
 11195  0EB7  0836               	movf	??_compensate_humidity+4,w
 11196  0EB8  00F0               	movwf	___lmul@multiplier
 11197  0EB9  0837               	movf	??_compensate_humidity+5,w
 11198  0EBA  00F1               	movwf	___lmul@multiplier+1
 11199  0EBB  0D89               	rlf	9,f
 11200  0EBC  3B89               	subwfb	9,f
 11201  0EBD  0989               	comf	9,f
 11202  0EBE  00F2               	movwf	___lmul@multiplier+2
 11203  0EBF  00F3               	movwf	___lmul@multiplier+3
 11204  0EC0  0852               	movf	compensate_humidity@var4+3,w
 11205  0EC1  00F7               	movwf	___lmul@multiplicand+3
 11206  0EC2  0851               	movf	compensate_humidity@var4+2,w
 11207  0EC3  00F6               	movwf	___lmul@multiplicand+2
 11208  0EC4  0850               	movf	compensate_humidity@var4+1,w
 11209  0EC5  00F5               	movwf	___lmul@multiplicand+1
 11210  0EC6  084F               	movf	compensate_humidity@var4,w
 11211  0EC7  00F4               	movwf	___lmul@multiplicand
 11212  0EC8  319A  2221  318D   	fcall	___lmul
 11213  0ECB  0870               	movf	?___lmul,w
 11214  0ECC  0140               	movlb	0	; select bank0
 11215  0ECD  07B2               	addwf	??_compensate_humidity,f
 11216  0ECE  0871               	movf	?___lmul+1,w
 11217  0ECF  3DB3               	addwfc	??_compensate_humidity+1,f
 11218  0ED0  0872               	movf	?___lmul+2,w
 11219  0ED1  3DB4               	addwfc	??_compensate_humidity+2,f
 11220  0ED2  0873               	movf	?___lmul+3,w
 11221  0ED3  3DB5               	addwfc	??_compensate_humidity+3,f
 11222  0ED4  0835               	movf	??_compensate_humidity+3,w
 11223  0ED5  00A7               	movwf	___aldiv@dividend+3
 11224  0ED6  0834               	movf	??_compensate_humidity+2,w
 11225  0ED7  00A6               	movwf	___aldiv@dividend+2
 11226  0ED8  0833               	movf	??_compensate_humidity+1,w
 11227  0ED9  00A5               	movwf	___aldiv@dividend+1
 11228  0EDA  0832               	movf	??_compensate_humidity,w
 11229  0EDB  00A4               	movwf	___aldiv@dividend
 11230  0EDC  3194  24BD  318D   	fcall	___aldiv
 11231  0EDF  0140               	movlb	0	; select bank0
 11232  0EE0  0823               	movf	?___aldiv+3,w
 11233  0EE1  00CE               	movwf	compensate_humidity@var2+3
 11234  0EE2  0822               	movf	?___aldiv+2,w
 11235  0EE3  00CD               	movwf	compensate_humidity@var2+2
 11236  0EE4  0821               	movf	?___aldiv+1,w
 11237  0EE5  00CC               	movwf	compensate_humidity@var2+1
 11238  0EE6  0820               	movf	?___aldiv,w
 11239  0EE7  00CB               	movwf	compensate_humidity@var2
 11240                           
 11241                           ;BME280_driver/bme280.c: 1287:     var3 = var5 * var2;
 11242  0EE8  0856               	movf	compensate_humidity@var5+3,w
 11243  0EE9  00F3               	movwf	___lmul@multiplier+3
 11244  0EEA  0855               	movf	compensate_humidity@var5+2,w
 11245  0EEB  00F2               	movwf	___lmul@multiplier+2
 11246  0EEC  0854               	movf	compensate_humidity@var5+1,w
 11247  0EED  00F1               	movwf	___lmul@multiplier+1
 11248  0EEE  0853               	movf	compensate_humidity@var5,w
 11249  0EEF  00F0               	movwf	___lmul@multiplier
 11250  0EF0  084E               	movf	compensate_humidity@var2+3,w
 11251  0EF1  00F7               	movwf	___lmul@multiplicand+3
 11252  0EF2  084D               	movf	compensate_humidity@var2+2,w
 11253  0EF3  00F6               	movwf	___lmul@multiplicand+2
 11254  0EF4  084C               	movf	compensate_humidity@var2+1,w
 11255  0EF5  00F5               	movwf	___lmul@multiplicand+1
 11256  0EF6  084B               	movf	compensate_humidity@var2,w
 11257  0EF7  00F4               	movwf	___lmul@multiplicand
 11258  0EF8  319A  2221  318D   	fcall	___lmul
 11259  0EFB  0873               	movf	?___lmul+3,w
 11260  0EFC  0140               	movlb	0	; select bank0
 11261  0EFD  00DA               	movwf	compensate_humidity@var3+3
 11262  0EFE  0872               	movf	?___lmul+2,w
 11263  0EFF  00D9               	movwf	compensate_humidity@var3+2
 11264  0F00  0871               	movf	?___lmul+1,w
 11265  0F01  00D8               	movwf	compensate_humidity@var3+1
 11266  0F02  0870               	movf	?___lmul,w
 11267  0F03  00D7               	movwf	compensate_humidity@var3
 11268                           
 11269                           ;BME280_driver/bme280.c: 1288:     var4 = ((var3 / 32768) * (var3 / 32768)) / 128;
 11270  0F04  3000               	movlw	0
 11271  0F05  00A3               	movwf	___aldiv@divisor+3
 11272  0F06  3000               	movlw	0
 11273  0F07  00A2               	movwf	___aldiv@divisor+2
 11274  0F08  3080               	movlw	128
 11275  0F09  00A1               	movwf	___aldiv@divisor+1
 11276  0F0A  3000               	movlw	0
 11277  0F0B  00A0               	movwf	___aldiv@divisor
 11278  0F0C  085A               	movf	compensate_humidity@var3+3,w
 11279  0F0D  00A7               	movwf	___aldiv@dividend+3
 11280  0F0E  0859               	movf	compensate_humidity@var3+2,w
 11281  0F0F  00A6               	movwf	___aldiv@dividend+2
 11282  0F10  0858               	movf	compensate_humidity@var3+1,w
 11283  0F11  00A5               	movwf	___aldiv@dividend+1
 11284  0F12  0857               	movf	compensate_humidity@var3,w
 11285  0F13  00A4               	movwf	___aldiv@dividend
 11286  0F14  3194  24BD  318D   	fcall	___aldiv
 11287  0F17  0140               	movlb	0	; select bank0
 11288  0F18  0823               	movf	?___aldiv+3,w
 11289  0F19  00F3               	movwf	___lmul@multiplier+3
 11290  0F1A  0822               	movf	?___aldiv+2,w
 11291  0F1B  00F2               	movwf	___lmul@multiplier+2
 11292  0F1C  0821               	movf	?___aldiv+1,w
 11293  0F1D  00F1               	movwf	___lmul@multiplier+1
 11294  0F1E  0820               	movf	?___aldiv,w
 11295  0F1F  00F0               	movwf	___lmul@multiplier
 11296  0F20  3000               	movlw	0
 11297  0F21  00A3               	movwf	___aldiv@divisor+3
 11298  0F22  3000               	movlw	0
 11299  0F23  00A2               	movwf	___aldiv@divisor+2
 11300  0F24  3080               	movlw	128
 11301  0F25  00A1               	movwf	___aldiv@divisor+1
 11302  0F26  3000               	movlw	0
 11303  0F27  00A0               	movwf	___aldiv@divisor
 11304  0F28  085A               	movf	compensate_humidity@var3+3,w
 11305  0F29  00A7               	movwf	___aldiv@dividend+3
 11306  0F2A  0859               	movf	compensate_humidity@var3+2,w
 11307  0F2B  00A6               	movwf	___aldiv@dividend+2
 11308  0F2C  0858               	movf	compensate_humidity@var3+1,w
 11309  0F2D  00A5               	movwf	___aldiv@dividend+1
 11310  0F2E  0857               	movf	compensate_humidity@var3,w
 11311  0F2F  00A4               	movwf	___aldiv@dividend
 11312  0F30  3194  24BD  318D   	fcall	___aldiv
 11313  0F33  0140               	movlb	0	; select bank0
 11314  0F34  0823               	movf	?___aldiv+3,w
 11315  0F35  00F7               	movwf	___lmul@multiplicand+3
 11316  0F36  0822               	movf	?___aldiv+2,w
 11317  0F37  00F6               	movwf	___lmul@multiplicand+2
 11318  0F38  0821               	movf	?___aldiv+1,w
 11319  0F39  00F5               	movwf	___lmul@multiplicand+1
 11320  0F3A  0820               	movf	?___aldiv,w
 11321  0F3B  00F4               	movwf	___lmul@multiplicand
 11322  0F3C  319A  2221  318D   	fcall	___lmul
 11323  0F3F  0873               	movf	?___lmul+3,w
 11324  0F40  0140               	movlb	0	; select bank0
 11325  0F41  00BD               	movwf	_compensate_humidity$2719+3
 11326  0F42  0872               	movf	?___lmul+2,w
 11327  0F43  00BC               	movwf	_compensate_humidity$2719+2
 11328  0F44  0871               	movf	?___lmul+1,w
 11329  0F45  00BB               	movwf	_compensate_humidity$2719+1
 11330  0F46  0870               	movf	?___lmul,w
 11331  0F47  00BA               	movwf	_compensate_humidity$2719
 11332                           
 11333                           ;BME280_driver/bme280.c: 1288:     var4 = ((var3 / 32768) * (var3 / 32768)) / 128;
 11334  0F48  3000               	movlw	0
 11335  0F49  00A3               	movwf	___aldiv@divisor+3
 11336  0F4A  3000               	movlw	0
 11337  0F4B  00A2               	movwf	___aldiv@divisor+2
 11338  0F4C  3000               	movlw	0
 11339  0F4D  00A1               	movwf	___aldiv@divisor+1
 11340  0F4E  3080               	movlw	128
 11341  0F4F  00A0               	movwf	___aldiv@divisor
 11342  0F50  083D               	movf	_compensate_humidity$2719+3,w
 11343  0F51  00A7               	movwf	___aldiv@dividend+3
 11344  0F52  083C               	movf	_compensate_humidity$2719+2,w
 11345  0F53  00A6               	movwf	___aldiv@dividend+2
 11346  0F54  083B               	movf	_compensate_humidity$2719+1,w
 11347  0F55  00A5               	movwf	___aldiv@dividend+1
 11348  0F56  083A               	movf	_compensate_humidity$2719,w
 11349  0F57  00A4               	movwf	___aldiv@dividend
 11350  0F58  3194  24BD  318D   	fcall	___aldiv
 11351  0F5B  0140               	movlb	0	; select bank0
 11352  0F5C  0823               	movf	?___aldiv+3,w
 11353  0F5D  00D2               	movwf	compensate_humidity@var4+3
 11354  0F5E  0822               	movf	?___aldiv+2,w
 11355  0F5F  00D1               	movwf	compensate_humidity@var4+2
 11356  0F60  0821               	movf	?___aldiv+1,w
 11357  0F61  00D0               	movwf	compensate_humidity@var4+1
 11358  0F62  0820               	movf	?___aldiv,w
 11359  0F63  00CF               	movwf	compensate_humidity@var4
 11360                           
 11361                           ;BME280_driver/bme280.c: 1289:     var5 = var3 - ((var4 * ((int32_t)calib_data->dig_H1))
      +                           / 16);
 11362  0F64  3000               	movlw	0
 11363  0F65  00A3               	movwf	___aldiv@divisor+3
 11364  0F66  3000               	movlw	0
 11365  0F67  00A2               	movwf	___aldiv@divisor+2
 11366  0F68  3000               	movlw	0
 11367  0F69  00A1               	movwf	___aldiv@divisor+1
 11368  0F6A  3010               	movlw	16
 11369  0F6B  00A0               	movwf	___aldiv@divisor
 11370  0F6C  082E               	movf	compensate_humidity@calib_data,w
 11371  0F6D  3E18               	addlw	24
 11372  0F6E  0086               	movwf	6
 11373  0F6F  3001               	movlw	1	; select bank2/3
 11374  0F70  0087               	movwf	7
 11375  0F71  0801               	movf	1,w
 11376  0F72  00B2               	movwf	??_compensate_humidity
 11377  0F73  01B3               	clrf	??_compensate_humidity+1
 11378  0F74  01B4               	clrf	??_compensate_humidity+2
 11379  0F75  01B5               	clrf	??_compensate_humidity+3
 11380  0F76  0835               	movf	??_compensate_humidity+3,w
 11381  0F77  00F3               	movwf	___lmul@multiplier+3
 11382  0F78  0834               	movf	??_compensate_humidity+2,w
 11383  0F79  00F2               	movwf	___lmul@multiplier+2
 11384  0F7A  0833               	movf	??_compensate_humidity+1,w
 11385  0F7B  00F1               	movwf	___lmul@multiplier+1
 11386  0F7C  0832               	movf	??_compensate_humidity,w
 11387  0F7D  00F0               	movwf	___lmul@multiplier
 11388  0F7E  0852               	movf	compensate_humidity@var4+3,w
 11389  0F7F  00F7               	movwf	___lmul@multiplicand+3
 11390  0F80  0851               	movf	compensate_humidity@var4+2,w
 11391  0F81  00F6               	movwf	___lmul@multiplicand+2
 11392  0F82  0850               	movf	compensate_humidity@var4+1,w
 11393  0F83  00F5               	movwf	___lmul@multiplicand+1
 11394  0F84  084F               	movf	compensate_humidity@var4,w
 11395  0F85  00F4               	movwf	___lmul@multiplicand
 11396  0F86  319A  2221  318D   	fcall	___lmul
 11397  0F89  0873               	movf	?___lmul+3,w
 11398  0F8A  0140               	movlb	0	; select bank0
 11399  0F8B  00A7               	movwf	___aldiv@dividend+3
 11400  0F8C  0872               	movf	?___lmul+2,w
 11401  0F8D  00A6               	movwf	___aldiv@dividend+2
 11402  0F8E  0871               	movf	?___lmul+1,w
 11403  0F8F  00A5               	movwf	___aldiv@dividend+1
 11404  0F90  0870               	movf	?___lmul,w
 11405  0F91  00A4               	movwf	___aldiv@dividend
 11406  0F92  3194  24BD  318D   	fcall	___aldiv
 11407  0F95  0140               	movlb	0	; select bank0
 11408  0F96  0820               	movf	?___aldiv,w
 11409  0F97  0257               	subwf	compensate_humidity@var3,w
 11410  0F98  00B6               	movwf	??_compensate_humidity+4
 11411  0F99  0821               	movf	?___aldiv+1,w
 11412  0F9A  3B58               	subwfb	compensate_humidity@var3+1,w
 11413  0F9B  00B7               	movwf	??_compensate_humidity+5
 11414  0F9C  0822               	movf	?___aldiv+2,w
 11415  0F9D  3B59               	subwfb	compensate_humidity@var3+2,w
 11416  0F9E  00B8               	movwf	??_compensate_humidity+6
 11417  0F9F  0823               	movf	?___aldiv+3,w
 11418  0FA0  3B5A               	subwfb	compensate_humidity@var3+3,w
 11419  0FA1  00B9               	movwf	??_compensate_humidity+7
 11420  0FA2  0839               	movf	??_compensate_humidity+7,w
 11421  0FA3  00D6               	movwf	compensate_humidity@var5+3
 11422  0FA4  0838               	movf	??_compensate_humidity+6,w
 11423  0FA5  00D5               	movwf	compensate_humidity@var5+2
 11424  0FA6  0837               	movf	??_compensate_humidity+5,w
 11425  0FA7  00D4               	movwf	compensate_humidity@var5+1
 11426  0FA8  0836               	movf	??_compensate_humidity+4,w
 11427  0FA9  00D3               	movwf	compensate_humidity@var5
 11428                           
 11429                           ;BME280_driver/bme280.c: 1290:     var5 = (var5 < 0 ? 0 : var5);
 11430  0FAA  1FD6               	btfss	compensate_humidity@var5+3,7
 11431  0FAB  2FB4               	goto	l3876
 11432  0FAC  3000               	movlw	0
 11433  0FAD  00D6               	movwf	compensate_humidity@var5+3
 11434  0FAE  3000               	movlw	0
 11435  0FAF  00D5               	movwf	compensate_humidity@var5+2
 11436  0FB0  3000               	movlw	0
 11437  0FB1  00D4               	movwf	compensate_humidity@var5+1
 11438  0FB2  3000               	movlw	0
 11439  0FB3  00D3               	movwf	compensate_humidity@var5
 11440  0FB4                     l3876:	
 11441                           
 11442                           ;BME280_driver/bme280.c: 1291:     var5 = (var5 > 419430400 ? 419430400 : var5);
 11443  0FB4  1BD6               	btfsc	compensate_humidity@var5+3,7
 11444  0FB5  2FC8               	goto	l3882
 11445  0FB6  3001               	movlw	1
 11446  0FB7  0253               	subwf	compensate_humidity@var5,w
 11447  0FB8  3000               	movlw	0
 11448  0FB9  3B54               	subwfb	compensate_humidity@var5+1,w
 11449  0FBA  3000               	movlw	0
 11450  0FBB  3B55               	subwfb	compensate_humidity@var5+2,w
 11451  0FBC  3019               	movlw	25
 11452  0FBD  3B56               	subwfb	compensate_humidity@var5+3,w
 11453  0FBE  1C03               	btfss	3,0
 11454  0FBF  2FC8               	goto	l3882
 11455  0FC0  3019               	movlw	25
 11456  0FC1  00D6               	movwf	compensate_humidity@var5+3
 11457  0FC2  3000               	movlw	0
 11458  0FC3  00D5               	movwf	compensate_humidity@var5+2
 11459  0FC4  3000               	movlw	0
 11460  0FC5  00D4               	movwf	compensate_humidity@var5+1
 11461  0FC6  3000               	movlw	0
 11462  0FC7  00D3               	movwf	compensate_humidity@var5
 11463  0FC8                     l3882:	
 11464                           
 11465                           ;BME280_driver/bme280.c: 1292:     humidity = (uint32_t)(var5 / 4096);
 11466  0FC8  3000               	movlw	0
 11467  0FC9  00A3               	movwf	___aldiv@divisor+3
 11468  0FCA  3000               	movlw	0
 11469  0FCB  00A2               	movwf	___aldiv@divisor+2
 11470  0FCC  3010               	movlw	16
 11471  0FCD  00A1               	movwf	___aldiv@divisor+1
 11472  0FCE  3000               	movlw	0
 11473  0FCF  00A0               	movwf	___aldiv@divisor
 11474  0FD0  0856               	movf	compensate_humidity@var5+3,w
 11475  0FD1  00A7               	movwf	___aldiv@dividend+3
 11476  0FD2  0855               	movf	compensate_humidity@var5+2,w
 11477  0FD3  00A6               	movwf	___aldiv@dividend+2
 11478  0FD4  0854               	movf	compensate_humidity@var5+1,w
 11479  0FD5  00A5               	movwf	___aldiv@dividend+1
 11480  0FD6  0853               	movf	compensate_humidity@var5,w
 11481  0FD7  00A4               	movwf	___aldiv@dividend
 11482  0FD8  3194  24BD  318D   	fcall	___aldiv
 11483  0FDB  0140               	movlb	0	; select bank0
 11484  0FDC  0823               	movf	?___aldiv+3,w
 11485  0FDD  00C6               	movwf	compensate_humidity@humidity+3
 11486  0FDE  0822               	movf	?___aldiv+2,w
 11487  0FDF  00C5               	movwf	compensate_humidity@humidity+2
 11488  0FE0  0821               	movf	?___aldiv+1,w
 11489  0FE1  00C4               	movwf	compensate_humidity@humidity+1
 11490  0FE2  0820               	movf	?___aldiv,w
 11491  0FE3  00C3               	movwf	compensate_humidity@humidity
 11492                           
 11493                           ;BME280_driver/bme280.c: 1293:     if (humidity > humidity_max)
 11494  0FE4  0846               	movf	compensate_humidity@humidity+3,w
 11495  0FE5  1D03               	btfss	3,2
 11496  0FE6  2FEF               	goto	l3886
 11497  0FE7  3001               	movlw	1
 11498  0FE8  0243               	subwf	compensate_humidity@humidity,w
 11499  0FE9  3090               	movlw	144
 11500  0FEA  3B44               	subwfb	compensate_humidity@humidity+1,w
 11501  0FEB  3001               	movlw	1
 11502  0FEC  3B45               	subwfb	compensate_humidity@humidity+2,w
 11503  0FED  1C03               	btfss	3,0
 11504  0FEE  2FF7               	goto	l208
 11505  0FEF                     l3886:	
 11506                           
 11507                           ;BME280_driver/bme280.c: 1294:     {;BME280_driver/bme280.c: 1295:         humidity = hu
      +                          midity_max;
 11508  0FEF  3000               	movlw	0
 11509  0FF0  00C6               	movwf	compensate_humidity@humidity+3
 11510  0FF1  3001               	movlw	1
 11511  0FF2  00C5               	movwf	compensate_humidity@humidity+2
 11512  0FF3  3090               	movlw	144
 11513  0FF4  00C4               	movwf	compensate_humidity@humidity+1
 11514  0FF5  3000               	movlw	0
 11515  0FF6  00C3               	movwf	compensate_humidity@humidity
 11516  0FF7                     l208:	
 11517                           ;BME280_driver/bme280.c: 1296:     }
 11518                           
 11519                           
 11520                           ;BME280_driver/bme280.c: 1298:     return humidity;
 11521  0FF7  0846               	movf	compensate_humidity@humidity+3,w
 11522  0FF8  00B1               	movwf	?_compensate_humidity+3
 11523  0FF9  0845               	movf	compensate_humidity@humidity+2,w
 11524  0FFA  00B0               	movwf	?_compensate_humidity+2
 11525  0FFB  0844               	movf	compensate_humidity@humidity+1,w
 11526  0FFC  00AF               	movwf	?_compensate_humidity+1
 11527  0FFD  0843               	movf	compensate_humidity@humidity,w
 11528  0FFE  00AE               	movwf	?_compensate_humidity
 11529  0FFF  0008               	return
 11530  1000                     __end_of_compensate_humidity:	
 11531                           
 11532                           	psect	text9
 11533  1A21                     __ptext9:	
 11534 ;; *************** function ___lmul *****************
 11535 ;; Defined at:
 11536 ;;		line 15 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\Umul32.c"
 11537 ;; Parameters:    Size  Location     Type
 11538 ;;  multiplier      4    0[COMMON] unsigned long 
 11539 ;;  multiplicand    4    4[COMMON] unsigned long 
 11540 ;; Auto vars:     Size  Location     Type
 11541 ;;  product         4    8[COMMON] unsigned long 
 11542 ;; Return value:  Size  Location     Type
 11543 ;;                  4    0[COMMON] unsigned long 
 11544 ;; Registers used:
 11545 ;;		wreg, status,2, status,0
 11546 ;; Tracked objects:
 11547 ;;		On entry : 0/0
 11548 ;;		On exit  : 0/0
 11549 ;;		Unchanged: 0/0
 11550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11551 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11552 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11554 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11555 ;;Total ram usage:       12 bytes
 11556 ;; Hardware stack levels used:    1
 11557 ;; Hardware stack levels required when called:    3
 11558 ;; This function calls:
 11559 ;;		Nothing
 11560 ;; This function is called by:
 11561 ;;		_compensate_temperature
 11562 ;;		_compensate_pressure
 11563 ;;		_compensate_humidity
 11564 ;; This function uses a non-reentrant model
 11565 ;;
 11566                           
 11567                           
 11568                           ;psect for function ___lmul
 11569  1A21                     ___lmul:	
 11570                           
 11571                           ;incstack = 0
 11572                           ; Regs used in ___lmul: [wreg+status,2+status,0]
 11573  1A21  3000               	movlw	0
 11574  1A22  00FB               	movwf	___lmul@product+3
 11575  1A23  3000               	movlw	0
 11576  1A24  00FA               	movwf	___lmul@product+2
 11577  1A25  3000               	movlw	0
 11578  1A26  00F9               	movwf	___lmul@product+1
 11579  1A27  3000               	movlw	0
 11580  1A28  00F8               	movwf	___lmul@product
 11581  1A29                     l3612:	
 11582  1A29  1C70               	btfss	___lmul@multiplier,0
 11583  1A2A  2A33               	goto	l3616
 11584  1A2B  0874               	movf	___lmul@multiplicand,w
 11585  1A2C  07F8               	addwf	___lmul@product,f
 11586  1A2D  0875               	movf	___lmul@multiplicand+1,w
 11587  1A2E  3DF9               	addwfc	___lmul@product+1,f
 11588  1A2F  0876               	movf	___lmul@multiplicand+2,w
 11589  1A30  3DFA               	addwfc	___lmul@product+2,f
 11590  1A31  0877               	movf	___lmul@multiplicand+3,w
 11591  1A32  3DFB               	addwfc	___lmul@product+3,f
 11592  1A33                     l3616:	
 11593  1A33  3001               	movlw	1
 11594  1A34                     u2855:	
 11595  1A34  35F4               	lslf	___lmul@multiplicand,f
 11596  1A35  0DF5               	rlf	___lmul@multiplicand+1,f
 11597  1A36  0DF6               	rlf	___lmul@multiplicand+2,f
 11598  1A37  0DF7               	rlf	___lmul@multiplicand+3,f
 11599  1A38  0B89               	decfsz	9,f
 11600  1A39  2A34               	goto	u2855
 11601  1A3A  3001               	movlw	1
 11602  1A3B                     u2865:	
 11603  1A3B  36F3               	lsrf	___lmul@multiplier+3,f
 11604  1A3C  0CF2               	rrf	___lmul@multiplier+2,f
 11605  1A3D  0CF1               	rrf	___lmul@multiplier+1,f
 11606  1A3E  0CF0               	rrf	___lmul@multiplier,f
 11607  1A3F  0B89               	decfsz	9,f
 11608  1A40  2A3B               	goto	u2865
 11609  1A41  0873               	movf	___lmul@multiplier+3,w
 11610  1A42  0472               	iorwf	___lmul@multiplier+2,w
 11611  1A43  0471               	iorwf	___lmul@multiplier+1,w
 11612  1A44  0470               	iorwf	___lmul@multiplier,w
 11613  1A45  1D03               	skipz
 11614  1A46  2A29               	goto	l3612
 11615  1A47  087B               	movf	___lmul@product+3,w
 11616  1A48  00F3               	movwf	?___lmul+3
 11617  1A49  087A               	movf	___lmul@product+2,w
 11618  1A4A  00F2               	movwf	?___lmul+2
 11619  1A4B  0879               	movf	___lmul@product+1,w
 11620  1A4C  00F1               	movwf	?___lmul+1
 11621  1A4D  0878               	movf	___lmul@product,w
 11622  1A4E  00F0               	movwf	?___lmul
 11623  1A4F  0008               	return
 11624  1A50                     __end_of___lmul:	
 11625                           
 11626                           	psect	text10
 11627  14BD                     __ptext10:	
 11628 ;; *************** function ___aldiv *****************
 11629 ;; Defined at:
 11630 ;;		line 5 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\aldiv.c"
 11631 ;; Parameters:    Size  Location     Type
 11632 ;;  divisor         4    0[BANK0 ] long 
 11633 ;;  dividend        4    4[BANK0 ] long 
 11634 ;; Auto vars:     Size  Location     Type
 11635 ;;  quotient        4   10[BANK0 ] long 
 11636 ;;  sign            1    9[BANK0 ] unsigned char 
 11637 ;;  counter         1    8[BANK0 ] unsigned char 
 11638 ;; Return value:  Size  Location     Type
 11639 ;;                  4    0[BANK0 ] long 
 11640 ;; Registers used:
 11641 ;;		wreg, status,2, status,0
 11642 ;; Tracked objects:
 11643 ;;		On entry : 0/0
 11644 ;;		On exit  : 0/0
 11645 ;;		Unchanged: 0/0
 11646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11647 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11648 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11649 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11650 ;;      Totals:         1      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11651 ;;Total ram usage:       15 bytes
 11652 ;; Hardware stack levels used:    1
 11653 ;; Hardware stack levels required when called:    3
 11654 ;; This function calls:
 11655 ;;		Nothing
 11656 ;; This function is called by:
 11657 ;;		_compensate_temperature
 11658 ;;		_compensate_pressure
 11659 ;;		_compensate_humidity
 11660 ;; This function uses a non-reentrant model
 11661 ;;
 11662                           
 11663                           
 11664                           ;psect for function ___aldiv
 11665  14BD                     ___aldiv:	
 11666                           
 11667                           ;incstack = 0
 11668                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
 11669  14BD  0140               	movlb	0	; select bank0
 11670  14BE  01A9               	clrf	___aldiv@sign
 11671  14BF  1FA3               	btfss	___aldiv@divisor+3,7
 11672  14C0  2CCE               	goto	l1117
 11673  14C1  09A0               	comf	___aldiv@divisor,f
 11674  14C2  09A1               	comf	___aldiv@divisor+1,f
 11675  14C3  09A2               	comf	___aldiv@divisor+2,f
 11676  14C4  09A3               	comf	___aldiv@divisor+3,f
 11677  14C5  0AA0               	incf	___aldiv@divisor,f
 11678  14C6  1903               	skipnz
 11679  14C7  0AA1               	incf	___aldiv@divisor+1,f
 11680  14C8  1903               	skipnz
 11681  14C9  0AA2               	incf	___aldiv@divisor+2,f
 11682  14CA  1903               	skipnz
 11683  14CB  0AA3               	incf	___aldiv@divisor+3,f
 11684  14CC  01A9               	clrf	___aldiv@sign
 11685  14CD  0AA9               	incf	___aldiv@sign,f
 11686  14CE                     l1117:	
 11687  14CE  1FA7               	btfss	___aldiv@dividend+3,7
 11688  14CF  2CDF               	goto	l3658
 11689  14D0  09A4               	comf	___aldiv@dividend,f
 11690  14D1  09A5               	comf	___aldiv@dividend+1,f
 11691  14D2  09A6               	comf	___aldiv@dividend+2,f
 11692  14D3  09A7               	comf	___aldiv@dividend+3,f
 11693  14D4  0AA4               	incf	___aldiv@dividend,f
 11694  14D5  1903               	skipnz
 11695  14D6  0AA5               	incf	___aldiv@dividend+1,f
 11696  14D7  1903               	skipnz
 11697  14D8  0AA6               	incf	___aldiv@dividend+2,f
 11698  14D9  1903               	skipnz
 11699  14DA  0AA7               	incf	___aldiv@dividend+3,f
 11700  14DB  3001               	movlw	1
 11701  14DC  00FC               	movwf	??___aldiv
 11702  14DD  087C               	movf	??___aldiv,w
 11703  14DE  06A9               	xorwf	___aldiv@sign,f
 11704  14DF                     l3658:	
 11705  14DF  3000               	movlw	0
 11706  14E0  00AD               	movwf	___aldiv@quotient+3
 11707  14E1  3000               	movlw	0
 11708  14E2  00AC               	movwf	___aldiv@quotient+2
 11709  14E3  3000               	movlw	0
 11710  14E4  00AB               	movwf	___aldiv@quotient+1
 11711  14E5  3000               	movlw	0
 11712  14E6  00AA               	movwf	___aldiv@quotient
 11713  14E7  0823               	movf	___aldiv@divisor+3,w
 11714  14E8  0422               	iorwf	___aldiv@divisor+2,w
 11715  14E9  0421               	iorwf	___aldiv@divisor+1,w
 11716  14EA  0420               	iorwf	___aldiv@divisor,w
 11717  14EB  1903               	skipnz
 11718  14EC  2D28               	goto	l3680
 11719  14ED  01A8               	clrf	___aldiv@counter
 11720  14EE  0AA8               	incf	___aldiv@counter,f
 11721  14EF                     l3666:	
 11722  14EF  1BA3               	btfsc	___aldiv@divisor+3,7
 11723  14F0  2CFD               	goto	l3668
 11724  14F1  3001               	movlw	1
 11725  14F2                     u2985:	
 11726  14F2  35A0               	lslf	___aldiv@divisor,f
 11727  14F3  0DA1               	rlf	___aldiv@divisor+1,f
 11728  14F4  0DA2               	rlf	___aldiv@divisor+2,f
 11729  14F5  0DA3               	rlf	___aldiv@divisor+3,f
 11730  14F6  0B89               	decfsz	9,f
 11731  14F7  2CF2               	goto	u2985
 11732  14F8  3001               	movlw	1
 11733  14F9  00FC               	movwf	??___aldiv
 11734  14FA  087C               	movf	??___aldiv,w
 11735  14FB  07A8               	addwf	___aldiv@counter,f
 11736  14FC  2CEF               	goto	l3666
 11737  14FD                     l3668:	
 11738  14FD  3001               	movlw	1
 11739  14FE                     u3005:	
 11740  14FE  35AA               	lslf	___aldiv@quotient,f
 11741  14FF  0DAB               	rlf	___aldiv@quotient+1,f
 11742  1500  0DAC               	rlf	___aldiv@quotient+2,f
 11743  1501  0DAD               	rlf	___aldiv@quotient+3,f
 11744  1502  0B89               	decfsz	9,f
 11745  1503  2CFE               	goto	u3005
 11746  1504  0823               	movf	___aldiv@divisor+3,w
 11747  1505  0227               	subwf	___aldiv@dividend+3,w
 11748  1506  1D03               	skipz
 11749  1507  2D12               	goto	u3015
 11750  1508  0822               	movf	___aldiv@divisor+2,w
 11751  1509  0226               	subwf	___aldiv@dividend+2,w
 11752  150A  1D03               	skipz
 11753  150B  2D12               	goto	u3015
 11754  150C  0821               	movf	___aldiv@divisor+1,w
 11755  150D  0225               	subwf	___aldiv@dividend+1,w
 11756  150E  1D03               	skipz
 11757  150F  2D12               	goto	u3015
 11758  1510  0820               	movf	___aldiv@divisor,w
 11759  1511  0224               	subwf	___aldiv@dividend,w
 11760  1512                     u3015:	
 11761  1512  1C03               	skipc
 11762  1513  2D1D               	goto	l3676
 11763  1514  0820               	movf	___aldiv@divisor,w
 11764  1515  02A4               	subwf	___aldiv@dividend,f
 11765  1516  0821               	movf	___aldiv@divisor+1,w
 11766  1517  3BA5               	subwfb	___aldiv@dividend+1,f
 11767  1518  0822               	movf	___aldiv@divisor+2,w
 11768  1519  3BA6               	subwfb	___aldiv@dividend+2,f
 11769  151A  0823               	movf	___aldiv@divisor+3,w
 11770  151B  3BA7               	subwfb	___aldiv@dividend+3,f
 11771  151C  142A               	bsf	___aldiv@quotient,0
 11772  151D                     l3676:	
 11773  151D  3001               	movlw	1
 11774  151E                     u3025:	
 11775  151E  36A3               	lsrf	___aldiv@divisor+3,f
 11776  151F  0CA2               	rrf	___aldiv@divisor+2,f
 11777  1520  0CA1               	rrf	___aldiv@divisor+1,f
 11778  1521  0CA0               	rrf	___aldiv@divisor,f
 11779  1522  0B89               	decfsz	9,f
 11780  1523  2D1E               	goto	u3025
 11781  1524  3001               	movlw	1
 11782  1525  02A8               	subwf	___aldiv@counter,f
 11783  1526  1D03               	btfss	3,2
 11784  1527  2CFD               	goto	l3668
 11785  1528                     l3680:	
 11786  1528  0829               	movf	___aldiv@sign,w
 11787  1529  1903               	btfsc	3,2
 11788  152A  2D36               	goto	l3684
 11789  152B  09AA               	comf	___aldiv@quotient,f
 11790  152C  09AB               	comf	___aldiv@quotient+1,f
 11791  152D  09AC               	comf	___aldiv@quotient+2,f
 11792  152E  09AD               	comf	___aldiv@quotient+3,f
 11793  152F  0AAA               	incf	___aldiv@quotient,f
 11794  1530  1903               	skipnz
 11795  1531  0AAB               	incf	___aldiv@quotient+1,f
 11796  1532  1903               	skipnz
 11797  1533  0AAC               	incf	___aldiv@quotient+2,f
 11798  1534  1903               	skipnz
 11799  1535  0AAD               	incf	___aldiv@quotient+3,f
 11800  1536                     l3684:	
 11801  1536  082D               	movf	___aldiv@quotient+3,w
 11802  1537  00A3               	movwf	?___aldiv+3
 11803  1538  082C               	movf	___aldiv@quotient+2,w
 11804  1539  00A2               	movwf	?___aldiv+2
 11805  153A  082B               	movf	___aldiv@quotient+1,w
 11806  153B  00A1               	movwf	?___aldiv+1
 11807  153C  082A               	movf	___aldiv@quotient,w
 11808  153D  00A0               	movwf	?___aldiv
 11809  153E  0008               	return
 11810  153F                     __end_of___aldiv:	
 11811                           
 11812                           	psect	text11
 11813  1FAB                     __ptext11:	
 11814 ;; *************** function _UIntToString *****************
 11815 ;; Defined at:
 11816 ;;		line 207 in file "main.c"
 11817 ;; Parameters:    Size  Location     Type
 11818 ;;  n               4    9[BANK0 ] unsigned long 
 11819 ;;  dest            1   13[BANK0 ] PTR unsigned char 
 11820 ;;		 -> main@convertedNumber(16), 
 11821 ;; Auto vars:     Size  Location     Type
 11822 ;;  i               2   16[BANK0 ] int 
 11823 ;; Return value:  Size  Location     Type
 11824 ;;                  1    wreg      void 
 11825 ;; Registers used:
 11826 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11827 ;; Tracked objects:
 11828 ;;		On entry : 0/0
 11829 ;;		On exit  : 0/0
 11830 ;;		Unchanged: 0/0
 11831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11832 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11833 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11834 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11835 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11836 ;;Total ram usage:        9 bytes
 11837 ;; Hardware stack levels used:    1
 11838 ;; Hardware stack levels required when called:    5
 11839 ;; This function calls:
 11840 ;;		_ReverseString
 11841 ;;		___lldiv
 11842 ;;		___llmod
 11843 ;; This function is called by:
 11844 ;;		_main
 11845 ;; This function uses a non-reentrant model
 11846 ;;
 11847                           
 11848                           
 11849                           ;psect for function _UIntToString
 11850  1FAB                     _UIntToString:	
 11851                           
 11852                           ;main.c: 207: void UIntToString(uint32_t n, char* dest);main.c: 208: {;main.c: 209:     
      +                          int i = 0;
 11853                           
 11854                           ;incstack = 0
 11855                           ; Regs used in _UIntToString: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11856  1FAB  0140               	movlb	0	; select bank0
 11857  1FAC  01B0               	clrf	UIntToString@i
 11858  1FAD  01B1               	clrf	UIntToString@i+1
 11859  1FAE                     l4564:	
 11860                           
 11861                           ;main.c: 214:         dest[i++] = n % 10 + '0';
 11862  1FAE  3000               	movlw	0
 11863  1FAF  00F3               	movwf	___llmod@divisor+3
 11864  1FB0  3000               	movlw	0
 11865  1FB1  00F2               	movwf	___llmod@divisor+2
 11866  1FB2  3000               	movlw	0
 11867  1FB3  00F1               	movwf	___llmod@divisor+1
 11868  1FB4  300A               	movlw	10
 11869  1FB5  00F0               	movwf	___llmod@divisor
 11870  1FB6  082C               	movf	UIntToString@n+3,w
 11871  1FB7  00F7               	movwf	___llmod@dividend+3
 11872  1FB8  082B               	movf	UIntToString@n+2,w
 11873  1FB9  00F6               	movwf	___llmod@dividend+2
 11874  1FBA  082A               	movf	UIntToString@n+1,w
 11875  1FBB  00F5               	movwf	___llmod@dividend+1
 11876  1FBC  0829               	movf	UIntToString@n,w
 11877  1FBD  00F4               	movwf	___llmod@dividend
 11878  1FBE  319B  23DB  319F   	fcall	___llmod
 11879  1FC1  0870               	movf	?___llmod,w
 11880  1FC2  3E30               	addlw	48
 11881  1FC3  0140               	movlb	0	; select bank0
 11882  1FC4  00AE               	movwf	??_UIntToString
 11883  1FC5  0830               	movf	UIntToString@i,w
 11884  1FC6  072D               	addwf	UIntToString@dest,w
 11885  1FC7  00AF               	movwf	??_UIntToString+1
 11886  1FC8  082F               	movf	??_UIntToString+1,w
 11887  1FC9  0086               	movwf	6
 11888  1FCA  3001               	movlw	1	; select bank2/3
 11889  1FCB  0087               	movwf	7
 11890  1FCC  082E               	movf	??_UIntToString,w
 11891  1FCD  0081               	movwf	1
 11892  1FCE  3001               	movlw	1
 11893  1FCF  07B0               	addwf	UIntToString@i,f
 11894  1FD0  3000               	movlw	0
 11895  1FD1  3DB1               	addwfc	UIntToString@i+1,f
 11896                           
 11897                           ;main.c: 216:     } while ((n /= 10) > 0);
 11898  1FD2  3000               	movlw	0
 11899  1FD3  00F3               	movwf	___lldiv@divisor+3
 11900  1FD4  3000               	movlw	0
 11901  1FD5  00F2               	movwf	___lldiv@divisor+2
 11902  1FD6  3000               	movlw	0
 11903  1FD7  00F1               	movwf	___lldiv@divisor+1
 11904  1FD8  300A               	movlw	10
 11905  1FD9  00F0               	movwf	___lldiv@divisor
 11906  1FDA  082C               	movf	UIntToString@n+3,w
 11907  1FDB  00F7               	movwf	___lldiv@dividend+3
 11908  1FDC  082B               	movf	UIntToString@n+2,w
 11909  1FDD  00F6               	movwf	___lldiv@dividend+2
 11910  1FDE  082A               	movf	UIntToString@n+1,w
 11911  1FDF  00F5               	movwf	___lldiv@dividend+1
 11912  1FE0  0829               	movf	UIntToString@n,w
 11913  1FE1  00F4               	movwf	___lldiv@dividend
 11914  1FE2  319F  2759  319F   	fcall	___lldiv
 11915  1FE5  0873               	movf	?___lldiv+3,w
 11916  1FE6  0140               	movlb	0	; select bank0
 11917  1FE7  00AC               	movwf	UIntToString@n+3
 11918  1FE8  0872               	movf	?___lldiv+2,w
 11919  1FE9  00AB               	movwf	UIntToString@n+2
 11920  1FEA  0871               	movf	?___lldiv+1,w
 11921  1FEB  00AA               	movwf	UIntToString@n+1
 11922  1FEC  0870               	movf	?___lldiv,w
 11923  1FED  00A9               	movwf	UIntToString@n
 11924  1FEE  082C               	movf	UIntToString@n+3,w
 11925  1FEF  042B               	iorwf	UIntToString@n+2,w
 11926  1FF0  042A               	iorwf	UIntToString@n+1,w
 11927  1FF1  0429               	iorwf	UIntToString@n,w
 11928  1FF2  1D03               	skipz
 11929  1FF3  2FAE               	goto	l4564
 11930                           
 11931                           ;main.c: 217:     dest[i] = '\0';
 11932  1FF4  0830               	movf	UIntToString@i,w
 11933  1FF5  072D               	addwf	UIntToString@dest,w
 11934  1FF6  00AE               	movwf	??_UIntToString
 11935  1FF7  082E               	movf	??_UIntToString,w
 11936  1FF8  0086               	movwf	6
 11937  1FF9  3001               	movlw	1	; select bank2/3
 11938  1FFA  0087               	movwf	7
 11939  1FFB  0181               	clrf	1
 11940                           
 11941                           ;main.c: 219:     ReverseString(dest);
 11942  1FFC  082D               	movf	UIntToString@dest,w
 11943  1FFD  3191  213B         	fcall	_ReverseString
 11944  1FFF  0008               	return
 11945  2000                     __end_of_UIntToString:	
 11946                           
 11947                           	psect	text12
 11948  1BDB                     __ptext12:	
 11949 ;; *************** function ___llmod *****************
 11950 ;; Defined at:
 11951 ;;		line 5 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\llmod.c"
 11952 ;; Parameters:    Size  Location     Type
 11953 ;;  divisor         4    0[COMMON] unsigned long 
 11954 ;;  dividend        4    4[COMMON] unsigned long 
 11955 ;; Auto vars:     Size  Location     Type
 11956 ;;  counter         1    9[COMMON] unsigned char 
 11957 ;; Return value:  Size  Location     Type
 11958 ;;                  4    0[COMMON] unsigned long 
 11959 ;; Registers used:
 11960 ;;		wreg, status,2, status,0
 11961 ;; Tracked objects:
 11962 ;;		On entry : 0/0
 11963 ;;		On exit  : 0/0
 11964 ;;		Unchanged: 0/0
 11965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11966 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11967 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11968 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11969 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11970 ;;Total ram usage:       10 bytes
 11971 ;; Hardware stack levels used:    1
 11972 ;; Hardware stack levels required when called:    3
 11973 ;; This function calls:
 11974 ;;		Nothing
 11975 ;; This function is called by:
 11976 ;;		_UIntToString
 11977 ;; This function uses a non-reentrant model
 11978 ;;
 11979                           
 11980                           
 11981                           ;psect for function ___llmod
 11982  1BDB                     ___llmod:	
 11983                           
 11984                           ;incstack = 0
 11985                           ; Regs used in ___llmod: [wreg+status,2+status,0]
 11986  1BDB  0873               	movf	___llmod@divisor+3,w
 11987  1BDC  0472               	iorwf	___llmod@divisor+2,w
 11988  1BDD  0471               	iorwf	___llmod@divisor+1,w
 11989  1BDE  0470               	iorwf	___llmod@divisor,w
 11990  1BDF  1903               	skipnz
 11991  1BE0  2C14               	goto	l4426
 11992  1BE1  01F9               	clrf	___llmod@counter
 11993  1BE2  0AF9               	incf	___llmod@counter,f
 11994  1BE3                     l4416:	
 11995  1BE3  1BF3               	btfsc	___llmod@divisor+3,7
 11996  1BE4  2BF1               	goto	l4418
 11997  1BE5  3001               	movlw	1
 11998  1BE6                     u4115:	
 11999  1BE6  35F0               	lslf	___llmod@divisor,f
 12000  1BE7  0DF1               	rlf	___llmod@divisor+1,f
 12001  1BE8  0DF2               	rlf	___llmod@divisor+2,f
 12002  1BE9  0DF3               	rlf	___llmod@divisor+3,f
 12003  1BEA  0B89               	decfsz	9,f
 12004  1BEB  2BE6               	goto	u4115
 12005  1BEC  3001               	movlw	1
 12006  1BED  00F8               	movwf	??___llmod
 12007  1BEE  0878               	movf	??___llmod,w
 12008  1BEF  07F9               	addwf	___llmod@counter,f
 12009  1BF0  2BE3               	goto	l4416
 12010  1BF1                     l4418:	
 12011  1BF1  0873               	movf	___llmod@divisor+3,w
 12012  1BF2  0277               	subwf	___llmod@dividend+3,w
 12013  1BF3  1D03               	skipz
 12014  1BF4  2BFF               	goto	u4135
 12015  1BF5  0872               	movf	___llmod@divisor+2,w
 12016  1BF6  0276               	subwf	___llmod@dividend+2,w
 12017  1BF7  1D03               	skipz
 12018  1BF8  2BFF               	goto	u4135
 12019  1BF9  0871               	movf	___llmod@divisor+1,w
 12020  1BFA  0275               	subwf	___llmod@dividend+1,w
 12021  1BFB  1D03               	skipz
 12022  1BFC  2BFF               	goto	u4135
 12023  1BFD  0870               	movf	___llmod@divisor,w
 12024  1BFE  0274               	subwf	___llmod@dividend,w
 12025  1BFF                     u4135:	
 12026  1BFF  1C03               	skipc
 12027  1C00  2C09               	goto	l4422
 12028  1C01  0870               	movf	___llmod@divisor,w
 12029  1C02  02F4               	subwf	___llmod@dividend,f
 12030  1C03  0871               	movf	___llmod@divisor+1,w
 12031  1C04  3BF5               	subwfb	___llmod@dividend+1,f
 12032  1C05  0872               	movf	___llmod@divisor+2,w
 12033  1C06  3BF6               	subwfb	___llmod@dividend+2,f
 12034  1C07  0873               	movf	___llmod@divisor+3,w
 12035  1C08  3BF7               	subwfb	___llmod@dividend+3,f
 12036  1C09                     l4422:	
 12037  1C09  3001               	movlw	1
 12038  1C0A                     u4145:	
 12039  1C0A  36F3               	lsrf	___llmod@divisor+3,f
 12040  1C0B  0CF2               	rrf	___llmod@divisor+2,f
 12041  1C0C  0CF1               	rrf	___llmod@divisor+1,f
 12042  1C0D  0CF0               	rrf	___llmod@divisor,f
 12043  1C0E  0B89               	decfsz	9,f
 12044  1C0F  2C0A               	goto	u4145
 12045  1C10  3001               	movlw	1
 12046  1C11  02F9               	subwf	___llmod@counter,f
 12047  1C12  1D03               	btfss	3,2
 12048  1C13  2BF1               	goto	l4418
 12049  1C14                     l4426:	
 12050  1C14  0877               	movf	___llmod@dividend+3,w
 12051  1C15  00F3               	movwf	?___llmod+3
 12052  1C16  0876               	movf	___llmod@dividend+2,w
 12053  1C17  00F2               	movwf	?___llmod+2
 12054  1C18  0875               	movf	___llmod@dividend+1,w
 12055  1C19  00F1               	movwf	?___llmod+1
 12056  1C1A  0874               	movf	___llmod@dividend,w
 12057  1C1B  00F0               	movwf	?___llmod
 12058  1C1C  0008               	return
 12059  1C1D                     __end_of___llmod:	
 12060                           
 12061                           	psect	text13
 12062  1F59                     __ptext13:	
 12063 ;; *************** function ___lldiv *****************
 12064 ;; Defined at:
 12065 ;;		line 5 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\__lldiv.c"
 12066 ;; Parameters:    Size  Location     Type
 12067 ;;  divisor         4    0[COMMON] unsigned long 
 12068 ;;  dividend        4    4[COMMON] unsigned long 
 12069 ;; Auto vars:     Size  Location     Type
 12070 ;;  quotient        4    9[COMMON] unsigned long 
 12071 ;;  counter         1   13[COMMON] unsigned char 
 12072 ;; Return value:  Size  Location     Type
 12073 ;;                  4    0[COMMON] unsigned long 
 12074 ;; Registers used:
 12075 ;;		wreg, status,2, status,0
 12076 ;; Tracked objects:
 12077 ;;		On entry : 0/0
 12078 ;;		On exit  : 0/0
 12079 ;;		Unchanged: 0/0
 12080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12081 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12082 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12083 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12084 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12085 ;;Total ram usage:       14 bytes
 12086 ;; Hardware stack levels used:    1
 12087 ;; Hardware stack levels required when called:    3
 12088 ;; This function calls:
 12089 ;;		Nothing
 12090 ;; This function is called by:
 12091 ;;		_compensate_pressure
 12092 ;;		_UIntToString
 12093 ;; This function uses a non-reentrant model
 12094 ;;
 12095                           
 12096                           
 12097                           ;psect for function ___lldiv
 12098  1F59                     ___lldiv:	
 12099                           
 12100                           ;incstack = 0
 12101                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
 12102  1F59  3000               	movlw	0
 12103  1F5A  00FC               	movwf	___lldiv@quotient+3
 12104  1F5B  3000               	movlw	0
 12105  1F5C  00FB               	movwf	___lldiv@quotient+2
 12106  1F5D  3000               	movlw	0
 12107  1F5E  00FA               	movwf	___lldiv@quotient+1
 12108  1F5F  3000               	movlw	0
 12109  1F60  00F9               	movwf	___lldiv@quotient
 12110  1F61  0873               	movf	___lldiv@divisor+3,w
 12111  1F62  0472               	iorwf	___lldiv@divisor+2,w
 12112  1F63  0471               	iorwf	___lldiv@divisor+1,w
 12113  1F64  0470               	iorwf	___lldiv@divisor,w
 12114  1F65  1903               	skipnz
 12115  1F66  2FA2               	goto	l3644
 12116  1F67  01FD               	clrf	___lldiv@counter
 12117  1F68  0AFD               	incf	___lldiv@counter,f
 12118  1F69                     l3630:	
 12119  1F69  1BF3               	btfsc	___lldiv@divisor+3,7
 12120  1F6A  2F77               	goto	l3632
 12121  1F6B  3001               	movlw	1
 12122  1F6C                     u2895:	
 12123  1F6C  35F0               	lslf	___lldiv@divisor,f
 12124  1F6D  0DF1               	rlf	___lldiv@divisor+1,f
 12125  1F6E  0DF2               	rlf	___lldiv@divisor+2,f
 12126  1F6F  0DF3               	rlf	___lldiv@divisor+3,f
 12127  1F70  0B89               	decfsz	9,f
 12128  1F71  2F6C               	goto	u2895
 12129  1F72  3001               	movlw	1
 12130  1F73  00F8               	movwf	??___lldiv
 12131  1F74  0878               	movf	??___lldiv,w
 12132  1F75  07FD               	addwf	___lldiv@counter,f
 12133  1F76  2F69               	goto	l3630
 12134  1F77                     l3632:	
 12135  1F77  3001               	movlw	1
 12136  1F78                     u2915:	
 12137  1F78  35F9               	lslf	___lldiv@quotient,f
 12138  1F79  0DFA               	rlf	___lldiv@quotient+1,f
 12139  1F7A  0DFB               	rlf	___lldiv@quotient+2,f
 12140  1F7B  0DFC               	rlf	___lldiv@quotient+3,f
 12141  1F7C  0B89               	decfsz	9,f
 12142  1F7D  2F78               	goto	u2915
 12143  1F7E  0873               	movf	___lldiv@divisor+3,w
 12144  1F7F  0277               	subwf	___lldiv@dividend+3,w
 12145  1F80  1D03               	skipz
 12146  1F81  2F8C               	goto	u2925
 12147  1F82  0872               	movf	___lldiv@divisor+2,w
 12148  1F83  0276               	subwf	___lldiv@dividend+2,w
 12149  1F84  1D03               	skipz
 12150  1F85  2F8C               	goto	u2925
 12151  1F86  0871               	movf	___lldiv@divisor+1,w
 12152  1F87  0275               	subwf	___lldiv@dividend+1,w
 12153  1F88  1D03               	skipz
 12154  1F89  2F8C               	goto	u2925
 12155  1F8A  0870               	movf	___lldiv@divisor,w
 12156  1F8B  0274               	subwf	___lldiv@dividend,w
 12157  1F8C                     u2925:	
 12158  1F8C  1C03               	skipc
 12159  1F8D  2F97               	goto	l3640
 12160  1F8E  0870               	movf	___lldiv@divisor,w
 12161  1F8F  02F4               	subwf	___lldiv@dividend,f
 12162  1F90  0871               	movf	___lldiv@divisor+1,w
 12163  1F91  3BF5               	subwfb	___lldiv@dividend+1,f
 12164  1F92  0872               	movf	___lldiv@divisor+2,w
 12165  1F93  3BF6               	subwfb	___lldiv@dividend+2,f
 12166  1F94  0873               	movf	___lldiv@divisor+3,w
 12167  1F95  3BF7               	subwfb	___lldiv@dividend+3,f
 12168  1F96  1479               	bsf	___lldiv@quotient,0
 12169  1F97                     l3640:	
 12170  1F97  3001               	movlw	1
 12171  1F98                     u2935:	
 12172  1F98  36F3               	lsrf	___lldiv@divisor+3,f
 12173  1F99  0CF2               	rrf	___lldiv@divisor+2,f
 12174  1F9A  0CF1               	rrf	___lldiv@divisor+1,f
 12175  1F9B  0CF0               	rrf	___lldiv@divisor,f
 12176  1F9C  0B89               	decfsz	9,f
 12177  1F9D  2F98               	goto	u2935
 12178  1F9E  3001               	movlw	1
 12179  1F9F  02FD               	subwf	___lldiv@counter,f
 12180  1FA0  1D03               	btfss	3,2
 12181  1FA1  2F77               	goto	l3632
 12182  1FA2                     l3644:	
 12183  1FA2  087C               	movf	___lldiv@quotient+3,w
 12184  1FA3  00F3               	movwf	?___lldiv+3
 12185  1FA4  087B               	movf	___lldiv@quotient+2,w
 12186  1FA5  00F2               	movwf	?___lldiv+2
 12187  1FA6  087A               	movf	___lldiv@quotient+1,w
 12188  1FA7  00F1               	movwf	?___lldiv+1
 12189  1FA8  0879               	movf	___lldiv@quotient,w
 12190  1FA9  00F0               	movwf	?___lldiv
 12191  1FAA  0008               	return
 12192  1FAB                     __end_of___lldiv:	
 12193                           
 12194                           	psect	text14
 12195  13CC                     __ptext14:	
 12196 ;; *************** function _UIntToHexString *****************
 12197 ;; Defined at:
 12198 ;;		line 138 in file "main.c"
 12199 ;; Parameters:    Size  Location     Type
 12200 ;;  n               4    9[BANK0 ] unsigned long 
 12201 ;;  dest            1   13[BANK0 ] PTR unsigned char 
 12202 ;;		 -> checksum(6), 
 12203 ;; Auto vars:     Size  Location     Type
 12204 ;;  remainder       4   20[BANK0 ] unsigned long 
 12205 ;;  i               4   24[BANK0 ] unsigned long 
 12206 ;; Return value:  Size  Location     Type
 12207 ;;                  1    wreg      void 
 12208 ;; Registers used:
 12209 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12210 ;; Tracked objects:
 12211 ;;		On entry : 0/0
 12212 ;;		On exit  : 0/0
 12213 ;;		Unchanged: 0/0
 12214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12215 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12216 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12217 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12218 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12219 ;;Total ram usage:       19 bytes
 12220 ;; Hardware stack levels used:    1
 12221 ;; Hardware stack levels required when called:    5
 12222 ;; This function calls:
 12223 ;;		_ReverseString
 12224 ;; This function is called by:
 12225 ;;		_main
 12226 ;; This function uses a non-reentrant model
 12227 ;;
 12228                           
 12229                           
 12230                           ;psect for function _UIntToHexString
 12231  13CC                     _UIntToHexString:	
 12232                           
 12233                           ;main.c: 138: void UIntToHexString(uint32_t n, char* dest);main.c: 139: {;main.c: 140:  
      +                             uint32_t i = 0;
 12234                           
 12235                           ;incstack = 0
 12236                           ; Regs used in _UIntToHexString: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12237  13CC  3000               	movlw	0
 12238  13CD  0140               	movlb	0	; select bank0
 12239  13CE  00BB               	movwf	UIntToHexString@i+3
 12240  13CF  3000               	movlw	0
 12241  13D0  00BA               	movwf	UIntToHexString@i+2
 12242  13D1  3000               	movlw	0
 12243  13D2  00B9               	movwf	UIntToHexString@i+1
 12244  13D3  3000               	movlw	0
 12245  13D4  00B8               	movwf	UIntToHexString@i
 12246  13D5                     l683:	
 12247                           ;main.c: 141:     do {
 12248                           
 12249                           
 12250                           ;main.c: 144:         uint32_t remainder = n % 16;
 12251  13D5  300F               	movlw	15
 12252  13D6  0529               	andwf	UIntToHexString@n,w
 12253  13D7  00B4               	movwf	UIntToHexString@remainder
 12254  13D8  3000               	movlw	0
 12255  13D9  052A               	andwf	UIntToHexString@n+1,w
 12256  13DA  00B5               	movwf	UIntToHexString@remainder+1
 12257  13DB  3000               	movlw	0
 12258  13DC  052B               	andwf	UIntToHexString@n+2,w
 12259  13DD  00B6               	movwf	UIntToHexString@remainder+2
 12260  13DE  3000               	movlw	0
 12261  13DF  052C               	andwf	UIntToHexString@n+3,w
 12262  13E0  00B7               	movwf	UIntToHexString@remainder+3
 12263                           
 12264                           ;main.c: 146:         dest[i++] = remainder + (remainder >= 10 ? 55 : '0');
 12265  13E1  0837               	movf	UIntToHexString@remainder+3,w
 12266  13E2  1D03               	btfss	3,2
 12267  13E3  2BF6               	goto	l4522
 12268  13E4  0836               	movf	UIntToHexString@remainder+2,w
 12269  13E5  1D03               	btfss	3,2
 12270  13E6  2BF6               	goto	l4522
 12271  13E7  0835               	movf	UIntToHexString@remainder+1,w
 12272  13E8  1D03               	btfss	3,2
 12273  13E9  2BF6               	goto	l4522
 12274  13EA  300A               	movlw	10
 12275  13EB  0234               	subwf	UIntToHexString@remainder,w
 12276  13EC  1803               	btfsc	3,0
 12277  13ED  2BF6               	goto	l4522
 12278  13EE  3000               	movlw	0
 12279  13EF  00B3               	movwf	_UIntToHexString$1811+3
 12280  13F0  3000               	movlw	0
 12281  13F1  00B2               	movwf	_UIntToHexString$1811+2
 12282  13F2  3000               	movlw	0
 12283  13F3  00B1               	movwf	_UIntToHexString$1811+1
 12284  13F4  3030               	movlw	48
 12285  13F5  2BFD               	goto	L4
 12286  13F6                     l4522:	
 12287  13F6  3000               	movlw	0
 12288  13F7  00B3               	movwf	_UIntToHexString$1811+3
 12289  13F8  3000               	movlw	0
 12290  13F9  00B2               	movwf	_UIntToHexString$1811+2
 12291  13FA  3000               	movlw	0
 12292  13FB  00B1               	movwf	_UIntToHexString$1811+1
 12293  13FC  3037               	movlw	55
 12294  13FD                     L4:	
 12295  13FD  00B0               	movwf	_UIntToHexString$1811
 12296  13FE  0830               	movf	_UIntToHexString$1811,w
 12297  13FF  0734               	addwf	UIntToHexString@remainder,w
 12298  1400  00AE               	movwf	??_UIntToHexString
 12299  1401  0838               	movf	UIntToHexString@i,w
 12300  1402  072D               	addwf	UIntToHexString@dest,w
 12301  1403  00AF               	movwf	??_UIntToHexString+1
 12302  1404  082F               	movf	??_UIntToHexString+1,w
 12303  1405  0086               	movwf	6
 12304  1406  3001               	movlw	1	; select bank2/3
 12305  1407  0087               	movwf	7
 12306  1408  082E               	movf	??_UIntToHexString,w
 12307  1409  0081               	movwf	1
 12308  140A  3001               	movlw	1
 12309  140B  07B8               	addwf	UIntToHexString@i,f
 12310  140C  3000               	movlw	0
 12311  140D  3DB9               	addwfc	UIntToHexString@i+1,f
 12312  140E  3000               	movlw	0
 12313  140F  3DBA               	addwfc	UIntToHexString@i+2,f
 12314  1410  3000               	movlw	0
 12315  1411  3DBB               	addwfc	UIntToHexString@i+3,f
 12316                           
 12317                           ;main.c: 148:     } while ((n /= 16) > 0);
 12318  1412  3004               	movlw	4
 12319  1413                     u4265:	
 12320  1413  36AC               	lsrf	UIntToHexString@n+3,f
 12321  1414  0CAB               	rrf	UIntToHexString@n+2,f
 12322  1415  0CAA               	rrf	UIntToHexString@n+1,f
 12323  1416  0CA9               	rrf	UIntToHexString@n,f
 12324  1417  0B89               	decfsz	9,f
 12325  1418  2C13               	goto	u4265
 12326  1419  082C               	movf	UIntToHexString@n+3,w
 12327  141A  042B               	iorwf	UIntToHexString@n+2,w
 12328  141B  042A               	iorwf	UIntToHexString@n+1,w
 12329  141C  0429               	iorwf	UIntToHexString@n,w
 12330  141D  1903               	btfsc	3,2
 12331  141E  2C33               	goto	l4534
 12332  141F  2BD5               	goto	l683
 12333  1420                     l4530:	
 12334                           
 12335                           ;main.c: 150:     {;main.c: 151:         dest[i] = '0';
 12336  1420  3030               	movlw	48
 12337  1421  00AE               	movwf	??_UIntToHexString
 12338  1422  0838               	movf	UIntToHexString@i,w
 12339  1423  072D               	addwf	UIntToHexString@dest,w
 12340  1424  00AF               	movwf	??_UIntToHexString+1
 12341  1425  082F               	movf	??_UIntToHexString+1,w
 12342  1426  0086               	movwf	6
 12343  1427  3001               	movlw	1	; select bank2/3
 12344  1428  0087               	movwf	7
 12345  1429  082E               	movf	??_UIntToHexString,w
 12346  142A  0081               	movwf	1
 12347                           
 12348                           ;main.c: 152:         i++;
 12349  142B  3001               	movlw	1
 12350  142C  07B8               	addwf	UIntToHexString@i,f
 12351  142D  3000               	movlw	0
 12352  142E  3DB9               	addwfc	UIntToHexString@i+1,f
 12353  142F  3000               	movlw	0
 12354  1430  3DBA               	addwfc	UIntToHexString@i+2,f
 12355  1431  3000               	movlw	0
 12356  1432  3DBB               	addwfc	UIntToHexString@i+3,f
 12357  1433                     l4534:	
 12358                           
 12359                           ;main.c: 149:     while (i < 4)
 12360  1433  083B               	movf	UIntToHexString@i+3,w
 12361  1434  1D03               	btfss	3,2
 12362  1435  2C40               	goto	l4536
 12363  1436  083A               	movf	UIntToHexString@i+2,w
 12364  1437  1D03               	btfss	3,2
 12365  1438  2C40               	goto	l4536
 12366  1439  0839               	movf	UIntToHexString@i+1,w
 12367  143A  1D03               	btfss	3,2
 12368  143B  2C40               	goto	l4536
 12369  143C  3004               	movlw	4
 12370  143D  0238               	subwf	UIntToHexString@i,w
 12371  143E  1C03               	btfss	3,0
 12372  143F  2C20               	goto	l4530
 12373  1440                     l4536:	
 12374                           
 12375                           ;main.c: 154:     ReverseString(dest);
 12376  1440  082D               	movf	UIntToHexString@dest,w
 12377  1441  3191  213B         	fcall	_ReverseString
 12378  1443  0008               	return
 12379  1444                     __end_of_UIntToHexString:	
 12380                           
 12381                           	psect	text15
 12382  1940                     __ptext15:	
 12383 ;; *************** function _TransmitString *****************
 12384 ;; Defined at:
 12385 ;;		line 71 in file "rtty.c"
 12386 ;; Parameters:    Size  Location     Type
 12387 ;;  message         2    3[BANK0 ] PTR unsigned char 
 12388 ;;		 -> STR_11(5), txdata(140), 
 12389 ;; Auto vars:     Size  Location     Type
 12390 ;;  i               2    8[BANK0 ] int 
 12391 ;;  counti          2    6[BANK0 ] int 
 12392 ;; Return value:  Size  Location     Type
 12393 ;;                  1    wreg      void 
 12394 ;; Registers used:
 12395 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12396 ;; Tracked objects:
 12397 ;;		On entry : 0/0
 12398 ;;		On exit  : 0/0
 12399 ;;		Unchanged: 0/0
 12400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12401 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12402 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12403 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12404 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12405 ;;Total ram usage:        7 bytes
 12406 ;; Hardware stack levels used:    1
 12407 ;; Hardware stack levels required when called:    6
 12408 ;; This function calls:
 12409 ;;		_TransmitChar
 12410 ;;		_strlen
 12411 ;; This function is called by:
 12412 ;;		_main
 12413 ;; This function uses a non-reentrant model
 12414 ;;
 12415                           
 12416                           
 12417                           ;psect for function _TransmitString
 12418  1940                     _TransmitString:	
 12419                           
 12420                           ;rtty.c: 71: void TransmitString(char* message);rtty.c: 72: {;rtty.c: 76:  for (int i = 
      +                          0, counti = strlen(message); i < counti; i++)
 12421                           
 12422                           ;incstack = 0
 12423                           ; Regs used in _TransmitString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 12424  1940  0140               	movlb	0	; select bank0
 12425  1941  01A8               	clrf	TransmitString@i
 12426  1942  01A9               	clrf	TransmitString@i+1
 12427  1943  0824               	movf	TransmitString@message+1,w
 12428  1944  00F1               	movwf	strlen@s+1
 12429  1945  0823               	movf	TransmitString@message,w
 12430  1946  00F0               	movwf	strlen@s
 12431  1947  31A6  26A0  3199   	fcall	_strlen
 12432  194A  0871               	movf	?_strlen+1,w
 12433  194B  0140               	movlb	0	; select bank0
 12434  194C  00A7               	movwf	TransmitString@counti+1
 12435  194D  0870               	movf	?_strlen,w
 12436  194E  00A6               	movwf	TransmitString@counti
 12437  194F                     l5442:	
 12438  194F  0829               	movf	TransmitString@i+1,w
 12439  1950  3A80               	xorlw	128
 12440  1951  00A5               	movwf	??_TransmitString
 12441  1952  0827               	movf	TransmitString@counti+1,w
 12442  1953  3A80               	xorlw	128
 12443  1954  0225               	subwf	??_TransmitString,w
 12444  1955  1D03               	skipz
 12445  1956  2959               	goto	u5495
 12446  1957  0826               	movf	TransmitString@counti,w
 12447  1958  0228               	subwf	TransmitString@i,w
 12448  1959                     u5495:	
 12449  1959  1803               	btfsc	3,0
 12450  195A  0008               	return
 12451                           
 12452                           ;rtty.c: 77:  {;rtty.c: 78:   TransmitChar(message[i]);
 12453  195B  0140               	movlb	0	; select bank0
 12454  195C  0823               	movf	TransmitString@message,w
 12455  195D  0728               	addwf	TransmitString@i,w
 12456  195E  0084               	movwf	4
 12457  195F  0824               	movf	TransmitString@message+1,w
 12458  1960  3D29               	addwfc	TransmitString@i+1,w
 12459  1961  0085               	movwf	5
 12460  1962  0800               	movf	0,w	;code access
 12461  1963  319A  2280  3199   	fcall	_TransmitChar
 12462                           
 12463                           ;rtty.c: 79:  }
 12464  1966  3001               	movlw	1
 12465  1967  0140               	movlb	0	; select bank0
 12466  1968  07A8               	addwf	TransmitString@i,f
 12467  1969  3000               	movlw	0
 12468  196A  3DA9               	addwfc	TransmitString@i+1,f
 12469  196B  294F               	goto	l5442
 12470  196C                     __end_of_TransmitString:	
 12471                           
 12472                           	psect	text16
 12473  1A80                     __ptext16:	
 12474 ;; *************** function _TransmitChar *****************
 12475 ;; Defined at:
 12476 ;;		line 49 in file "rtty.c"
 12477 ;; Parameters:    Size  Location     Type
 12478 ;;  byte            1    wreg     unsigned char 
 12479 ;; Auto vars:     Size  Location     Type
 12480 ;;  byte            1    0[BANK0 ] unsigned char 
 12481 ;;  i               2    1[BANK0 ] int 
 12482 ;; Return value:  Size  Location     Type
 12483 ;;                  1    wreg      void 
 12484 ;; Registers used:
 12485 ;;		wreg, status,2, status,0, pclath, cstack
 12486 ;; Tracked objects:
 12487 ;;		On entry : 0/0
 12488 ;;		On exit  : 0/0
 12489 ;;		Unchanged: 0/0
 12490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12492 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12493 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12494 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12495 ;;Total ram usage:        4 bytes
 12496 ;; Hardware stack levels used:    1
 12497 ;; Hardware stack levels required when called:    5
 12498 ;; This function calls:
 12499 ;;		_TransmitBit
 12500 ;; This function is called by:
 12501 ;;		_TransmitString
 12502 ;; This function uses a non-reentrant model
 12503 ;;
 12504                           
 12505                           
 12506                           ;psect for function _TransmitChar
 12507  1A80                     _TransmitChar:	
 12508                           
 12509                           ;incstack = 0
 12510                           ; Regs used in _TransmitChar: [wreg+status,2+status,0+pclath+cstack]
 12511                           ;TransmitChar@byte stored from wreg
 12512  1A80  0140               	movlb	0	; select bank0
 12513  1A81  00A0               	movwf	TransmitChar@byte
 12514                           
 12515                           ;rtty.c: 49: void TransmitChar(char byte);rtty.c: 50: {;rtty.c: 60:     TransmitBit(0);
 12516  1A82  3000               	movlw	0
 12517  1A83  31A6  2677  319A   	fcall	_TransmitBit
 12518                           
 12519                           ;rtty.c: 62:  for (int i = 0; i < 7; i++)
 12520  1A86  0140               	movlb	0	; select bank0
 12521  1A87  01A1               	clrf	TransmitChar@i
 12522  1A88  01A2               	clrf	TransmitChar@i+1
 12523  1A89                     l5344:	
 12524                           
 12525                           ;rtty.c: 63:  {;rtty.c: 64:   TransmitBit((byte >> i) & 1);
 12526  1A89  0140               	movlb	0	; select bank0
 12527  1A8A  0820               	movf	TransmitChar@byte,w
 12528  1A8B  00FD               	movwf	??_TransmitChar
 12529  1A8C  0A21               	incf	TransmitChar@i,w
 12530  1A8D  2A8F               	goto	u5374
 12531  1A8E                     u5375:	
 12532  1A8E  36FD               	lsrf	??_TransmitChar,f
 12533  1A8F                     u5374:	
 12534  1A8F  0B89               	decfsz	9,f
 12535  1A90  2A8E               	goto	u5375
 12536  1A91  1C7D               	btfss	??_TransmitChar,0
 12537  1A92  2A95               	goto	u5380
 12538  1A93  3001               	movlw	1
 12539  1A94  2A96               	goto	u5390
 12540  1A95                     u5380:	
 12541  1A95  3000               	movlw	0
 12542  1A96                     u5390:	
 12543  1A96  31A6  2677  319A   	fcall	_TransmitBit
 12544                           
 12545                           ;rtty.c: 65:  }
 12546  1A99  3001               	movlw	1
 12547  1A9A  0140               	movlb	0	; select bank0
 12548  1A9B  07A1               	addwf	TransmitChar@i,f
 12549  1A9C  3000               	movlw	0
 12550  1A9D  3DA2               	addwfc	TransmitChar@i+1,f
 12551  1A9E  0822               	movf	TransmitChar@i+1,w
 12552  1A9F  3A80               	xorlw	128
 12553  1AA0  00FD               	movwf	??_TransmitChar
 12554  1AA1  3080               	movlw	128
 12555  1AA2  027D               	subwf	??_TransmitChar,w
 12556  1AA3  1D03               	skipz
 12557  1AA4  2AA7               	goto	u5405
 12558  1AA5  3007               	movlw	7
 12559  1AA6  0221               	subwf	TransmitChar@i,w
 12560  1AA7                     u5405:	
 12561  1AA7  1C03               	skipc
 12562  1AA8  2A89               	goto	l5344
 12563                           
 12564                           ;rtty.c: 67:  TransmitBit(1);
 12565  1AA9  3001               	movlw	1
 12566  1AAA  31A6  2677  319A   	fcall	_TransmitBit
 12567                           
 12568                           ;rtty.c: 68:  TransmitBit(1);
 12569  1AAD  3001               	movlw	1
 12570  1AAE  31A6  2677         	fcall	_TransmitBit
 12571  1AB0  0008               	return
 12572  1AB1                     __end_of_TransmitChar:	
 12573                           
 12574                           	psect	text17
 12575  2677                     __ptext17:	
 12576 ;; *************** function _TransmitBit *****************
 12577 ;; Defined at:
 12578 ;;		line 29 in file "rtty.c"
 12579 ;; Parameters:    Size  Location     Type
 12580 ;;  b               1    wreg     _Bool 
 12581 ;; Auto vars:     Size  Location     Type
 12582 ;;  b               1   12[COMMON] _Bool 
 12583 ;; Return value:  Size  Location     Type
 12584 ;;                  1    wreg      void 
 12585 ;; Registers used:
 12586 ;;		wreg, status,2, status,0, pclath, cstack
 12587 ;; Tracked objects:
 12588 ;;		On entry : 0/0
 12589 ;;		On exit  : 0/0
 12590 ;;		Unchanged: 0/0
 12591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12593 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12595 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12596 ;;Total ram usage:        1 bytes
 12597 ;; Hardware stack levels used:    1
 12598 ;; Hardware stack levels required when called:    4
 12599 ;; This function calls:
 12600 ;;		_Sleep
 12601 ;; This function is called by:
 12602 ;;		_TransmitChar
 12603 ;; This function uses a non-reentrant model
 12604 ;;
 12605                           
 12606                           
 12607                           ;psect for function _TransmitBit
 12608  2677                     _TransmitBit:	
 12609                           
 12610                           ;incstack = 0
 12611                           ; Regs used in _TransmitBit: [wreg+status,2+status,0+pclath+cstack]
 12612                           ;TransmitBit@b stored from wreg
 12613  2677  00FC               	movwf	TransmitBit@b
 12614                           
 12615                           ;rtty.c: 29: void TransmitBit(_Bool b);rtty.c: 30: {;rtty.c: 31:  if (b)
 12616  2678  087C               	movf	TransmitBit@b,w
 12617  2679  1903               	btfsc	3,2
 12618  267A  2E7E               	goto	l865
 12619                           
 12620                           ;rtty.c: 32:  {;rtty.c: 33:   do { LATAbits.LATA4 = 1; } while(0);
 12621  267B  0140               	movlb	0	; select bank0
 12622  267C  1618               	bsf	24,4	;volatile
 12623  267D  2E80               	goto	l5250
 12624  267E                     l865:	
 12625                           ;rtty.c: 36:  {;rtty.c: 37:   do { LATAbits.LATA4 = 0; } while(0);
 12626                           
 12627  267E  0140               	movlb	0	; select bank0
 12628  267F  1218               	bcf	24,4	;volatile
 12629  2680                     l5250:	
 12630  2680  3000               	movlw	0
 12631  2681  00F3               	movwf	Sleep@ms+3
 12632  2682  3000               	movlw	0
 12633  2683  00F2               	movwf	Sleep@ms+2
 12634  2684  3000               	movlw	0
 12635  2685  00F1               	movwf	Sleep@ms+1
 12636  2686  300A               	movlw	10
 12637  2687  00F0               	movwf	Sleep@ms
 12638  2688  3199  2115         	fcall	_Sleep
 12639  268A  0008               	return
 12640  268B                     __end_of_TransmitBit:	
 12641                           
 12642                           	psect	text18
 12643  1D7A                     __ptext18:	
 12644 ;; *************** function _SetupGPS *****************
 12645 ;; Defined at:
 12646 ;;		line 429 in file "main.c"
 12647 ;; Parameters:    Size  Location     Type
 12648 ;;		None
 12649 ;; Auto vars:     Size  Location     Type
 12650 ;;		None
 12651 ;; Return value:  Size  Location     Type
 12652 ;;                  1    wreg      void 
 12653 ;; Registers used:
 12654 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12655 ;; Tracked objects:
 12656 ;;		On entry : 0/0
 12657 ;;		On exit  : 0/0
 12658 ;;		Unchanged: 0/0
 12659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12662 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12663 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12664 ;;Total ram usage:        1 bytes
 12665 ;; Hardware stack levels used:    1
 12666 ;; Hardware stack levels required when called:    5
 12667 ;; This function calls:
 12668 ;;		_GPS_HasAcknowledged
 12669 ;;		_GPS_SendUBX
 12670 ;;		_Sleep
 12671 ;;		_WriteGPS
 12672 ;; This function is called by:
 12673 ;;		_main
 12674 ;; This function uses a non-reentrant model
 12675 ;;
 12676                           
 12677                           
 12678                           ;psect for function _SetupGPS
 12679  1D7A                     _SetupGPS:	
 12680                           
 12681                           ;incstack = 0
 12682                           ; Regs used in _SetupGPS: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12683                           ;main.c: 431:     do { LATAbits.LATA5 = 0; } while(0);
 12684  1D7A  0140               	movlb	0	; select bank0
 12685  1D7B  1298               	bcf	24,5	;volatile
 12686  1D7C                     l5418:	
 12687                           
 12688                           ;main.c: 432:     while (!gps_configured)
 12689  1D7C  0141               	movlb	1	; select bank1
 12690  1D7D  086C               	movf	_gps_configured^(0+128),w
 12691  1D7E  1D03               	btfss	3,2
 12692  1D7F  2D98               	goto	l783
 12693                           
 12694                           ;main.c: 433:     {;main.c: 434:         GPS_SendUBX(setNavFlightMode);
 12695  1D80  3020               	movlw	(low (_setNavFlightMode| (0+512)))& (0+255)
 12696  1D81  3198  2049  319D   	fcall	_GPS_SendUBX
 12697                           
 12698                           ;main.c: 435:         gps_configured = GPS_HasAcknowledged(setNavFlightMode);
 12699  1D84  3020               	movlw	(low (_setNavFlightMode| (0+512)))& (0+255)
 12700  1D85  3195  253F  319D   	fcall	_GPS_HasAcknowledged
 12701  1D88  00FC               	movwf	??_SetupGPS
 12702  1D89  087C               	movf	??_SetupGPS,w
 12703  1D8A  0141               	movlb	1	; select bank1
 12704  1D8B  00EC               	movwf	_gps_configured^(0+128)
 12705                           
 12706                           ;main.c: 436:         Sleep(500);
 12707  1D8C  3000               	movlw	0
 12708  1D8D  00F3               	movwf	Sleep@ms+3
 12709  1D8E  3000               	movlw	0
 12710  1D8F  00F2               	movwf	Sleep@ms+2
 12711  1D90  3001               	movlw	1
 12712  1D91  00F1               	movwf	Sleep@ms+1
 12713  1D92  30F4               	movlw	244
 12714  1D93  00F0               	movwf	Sleep@ms
 12715  1D94  3199  2115  319D   	fcall	_Sleep
 12716  1D97  2D7C               	goto	l5418
 12717  1D98                     l783:	
 12718                           ;main.c: 438:     do { LATAbits.LATA5 = 1; } while(0);
 12719                           
 12720  1D98  0140               	movlb	0	; select bank0
 12721  1D99  1698               	bsf	24,5	;volatile
 12722                           
 12723                           ;main.c: 439:     gps_configured = 0;
 12724  1D9A  0141               	movlb	1	; select bank1
 12725  1D9B  01EC               	clrf	_gps_configured^(0+128)
 12726                           
 12727                           ;main.c: 441:     WriteGPS("$PUBX,40,GLL,0,0,0,0*5C\r\n");
 12728  1D9C  304E               	movlw	low (STR_1| (0+32768))
 12729  1D9D  00F5               	movwf	WriteGPS@message
 12730  1D9E  30A8               	movlw	high (STR_1| (0+32768))
 12731  1D9F  00F6               	movwf	WriteGPS@message+1
 12732  1DA0  3198  2070  319D   	fcall	_WriteGPS
 12733                           
 12734                           ;main.c: 442:     WriteGPS("$PUBX,40,GGA,0,0,0,0*5A\r\n");
 12735  1DA3  3034               	movlw	low (STR_2| (0+32768))
 12736  1DA4  00F5               	movwf	WriteGPS@message
 12737  1DA5  30A8               	movlw	high (STR_2| (0+32768))
 12738  1DA6  00F6               	movwf	WriteGPS@message+1
 12739  1DA7  3198  2070  319D   	fcall	_WriteGPS
 12740                           
 12741                           ;main.c: 443:     WriteGPS("$PUBX,40,VTG,0,0,0,0*5E\r\n");
 12742  1DAA  3082               	movlw	low (STR_3| (0+32768))
 12743  1DAB  00F5               	movwf	WriteGPS@message
 12744  1DAC  30A8               	movlw	high (STR_3| (0+32768))
 12745  1DAD  00F6               	movwf	WriteGPS@message+1
 12746  1DAE  3198  2070  319D   	fcall	_WriteGPS
 12747                           
 12748                           ;main.c: 444:     WriteGPS("$PUBX,40,GSV,0,0,0,0*59\r\n");
 12749  1DB1  301A               	movlw	low (STR_4| (0+32768))
 12750  1DB2  00F5               	movwf	WriteGPS@message
 12751  1DB3  30A8               	movlw	high (STR_4| (0+32768))
 12752  1DB4  00F6               	movwf	WriteGPS@message+1
 12753  1DB5  3198  2070  319D   	fcall	_WriteGPS
 12754                           
 12755                           ;main.c: 445:     WriteGPS("$PUBX,40,GSA,0,0,0,0*4E\r\n");
 12756  1DB8  3068               	movlw	low (STR_5| (0+32768))
 12757  1DB9  00F5               	movwf	WriteGPS@message
 12758  1DBA  30A8               	movlw	high (STR_5| (0+32768))
 12759  1DBB  00F6               	movwf	WriteGPS@message+1
 12760  1DBC  3198  2070  319D   	fcall	_WriteGPS
 12761                           
 12762                           ;main.c: 446:     WriteGPS("$PUBX,40,RMC,0,0,0,0*47\r\n");
 12763  1DBF  3000               	movlw	low (STR_6| (0+32768))
 12764  1DC0  00F5               	movwf	WriteGPS@message
 12765  1DC1  30A8               	movlw	high (STR_6| (0+32768))
 12766  1DC2  00F6               	movwf	WriteGPS@message+1
 12767  1DC3  3198  2070         	fcall	_WriteGPS
 12768  1DC5  0008               	return
 12769  1DC6                     __end_of_SetupGPS:	
 12770                           
 12771                           	psect	text19
 12772  1849                     __ptext19:	
 12773 ;; *************** function _GPS_SendUBX *****************
 12774 ;; Defined at:
 12775 ;;		line 345 in file "main.c"
 12776 ;; Parameters:    Size  Location     Type
 12777 ;;  data            1    wreg     PTR unsigned char 
 12778 ;;		 -> setNavFlightMode(44), 
 12779 ;; Auto vars:     Size  Location     Type
 12780 ;;  data            1    9[COMMON] PTR unsigned char 
 12781 ;;		 -> setNavFlightMode(44), 
 12782 ;;  i               2    7[COMMON] int 
 12783 ;;  length          2    5[COMMON] int 
 12784 ;; Return value:  Size  Location     Type
 12785 ;;                  1    wreg      void 
 12786 ;; Registers used:
 12787 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12788 ;; Tracked objects:
 12789 ;;		On entry : 0/0
 12790 ;;		On exit  : 0/0
 12791 ;;		Unchanged: 0/0
 12792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12794 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12795 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12796 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12797 ;;Total ram usage:        6 bytes
 12798 ;; Hardware stack levels used:    1
 12799 ;; Hardware stack levels required when called:    4
 12800 ;; This function calls:
 12801 ;;		_EUSART1_Write
 12802 ;;		_GetLengthUBX
 12803 ;; This function is called by:
 12804 ;;		_SetupGPS
 12805 ;; This function uses a non-reentrant model
 12806 ;;
 12807                           
 12808                           
 12809                           ;psect for function _GPS_SendUBX
 12810  1849                     _GPS_SendUBX:	
 12811                           
 12812                           ;incstack = 0
 12813                           ; Regs used in _GPS_SendUBX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12814                           ;GPS_SendUBX@data stored from wreg
 12815  1849  00F9               	movwf	GPS_SendUBX@data
 12816                           
 12817                           ;main.c: 345: void GPS_SendUBX(uint8_t* data);main.c: 346: {;main.c: 347:     for (int i
      +                           = 0, length = GetLengthUBX(data); i < length; i++)
 12818  184A  01F7               	clrf	GPS_SendUBX@i
 12819  184B  01F8               	clrf	GPS_SendUBX@i+1
 12820  184C  0879               	movf	GPS_SendUBX@data,w
 12821  184D  31A6  2652  3198   	fcall	_GetLengthUBX
 12822  1850  0871               	movf	?_GetLengthUBX+1,w
 12823  1851  00F6               	movwf	GPS_SendUBX@length+1
 12824  1852  0870               	movf	?_GetLengthUBX,w
 12825  1853  00F5               	movwf	GPS_SendUBX@length
 12826  1854                     l4244:	
 12827  1854  0878               	movf	GPS_SendUBX@i+1,w
 12828  1855  3A80               	xorlw	128
 12829  1856  00F4               	movwf	??_GPS_SendUBX
 12830  1857  0876               	movf	GPS_SendUBX@length+1,w
 12831  1858  3A80               	xorlw	128
 12832  1859  0274               	subwf	??_GPS_SendUBX,w
 12833  185A  1D03               	skipz
 12834  185B  285E               	goto	u3855
 12835  185C  0875               	movf	GPS_SendUBX@length,w
 12836  185D  0277               	subwf	GPS_SendUBX@i,w
 12837  185E                     u3855:	
 12838  185E  1803               	btfsc	3,0
 12839  185F  0008               	return
 12840                           
 12841                           ;main.c: 348:     {;main.c: 349:         EUSART1_Write(data[i]);
 12842  1860  0877               	movf	GPS_SendUBX@i,w
 12843  1861  0779               	addwf	GPS_SendUBX@data,w
 12844  1862  00F4               	movwf	??_GPS_SendUBX
 12845  1863  0874               	movf	??_GPS_SendUBX,w
 12846  1864  0086               	movwf	6
 12847  1865  3002               	movlw	2	; select bank4/5
 12848  1866  0087               	movwf	7
 12849  1867  0801               	movf	1,w
 12850  1868  31A5  25D4  3198   	fcall	_EUSART1_Write
 12851                           
 12852                           ;main.c: 350:     }
 12853  186B  3001               	movlw	1
 12854  186C  07F7               	addwf	GPS_SendUBX@i,f
 12855  186D  3000               	movlw	0
 12856  186E  3DF8               	addwfc	GPS_SendUBX@i+1,f
 12857  186F  2854               	goto	l4244
 12858  1870                     __end_of_GPS_SendUBX:	
 12859                           
 12860                           	psect	text20
 12861  2652                     __ptext20:	
 12862 ;; *************** function _GetLengthUBX *****************
 12863 ;; Defined at:
 12864 ;;		line 339 in file "main.c"
 12865 ;; Parameters:    Size  Location     Type
 12866 ;;  data            1    wreg     PTR unsigned char 
 12867 ;;		 -> setNavFlightMode(44), 
 12868 ;; Auto vars:     Size  Location     Type
 12869 ;;  data            1    3[COMMON] PTR unsigned char 
 12870 ;;		 -> setNavFlightMode(44), 
 12871 ;; Return value:  Size  Location     Type
 12872 ;;                  2    0[COMMON] unsigned int 
 12873 ;; Registers used:
 12874 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 12875 ;; Tracked objects:
 12876 ;;		On entry : 0/0
 12877 ;;		On exit  : 0/0
 12878 ;;		Unchanged: 0/0
 12879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12880 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12881 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12883 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12884 ;;Total ram usage:        4 bytes
 12885 ;; Hardware stack levels used:    1
 12886 ;; Hardware stack levels required when called:    3
 12887 ;; This function calls:
 12888 ;;		Nothing
 12889 ;; This function is called by:
 12890 ;;		_GPS_SendUBX
 12891 ;; This function uses a non-reentrant model
 12892 ;;
 12893                           
 12894                           
 12895                           ;psect for function _GetLengthUBX
 12896  2652                     _GetLengthUBX:	
 12897                           
 12898                           ;incstack = 0
 12899                           ; Regs used in _GetLengthUBX: [wreg-fsr1h+status,2+status,0]
 12900                           ;GetLengthUBX@data stored from wreg
 12901  2652  00F3               	movwf	GetLengthUBX@data
 12902                           
 12903                           ;main.c: 339: size_t GetLengthUBX(uint8_t* data);main.c: 340: {;main.c: 341:     return 
      +                          (short)(8 + (short)((short)data[4] + (short)(data[5] << 8)));
 12904  2653  0873               	movf	GetLengthUBX@data,w
 12905  2654  3E05               	addlw	5
 12906  2655  0086               	movwf	6
 12907  2656  3002               	movlw	2	; select bank4/5
 12908  2657  0087               	movwf	7
 12909  2658  0873               	movf	GetLengthUBX@data,w
 12910  2659  3E04               	addlw	4
 12911  265A  0084               	movwf	4
 12912  265B  3002               	movlw	2	; select bank4/5
 12913  265C  0085               	movwf	5
 12914  265D  0800               	movf	0,w
 12915  265E  3E08               	addlw	8
 12916  265F  00F0               	movwf	?_GetLengthUBX
 12917  2660  3000               	movlw	0
 12918  2661  3D01               	addwfc	1,w
 12919  2662  00F1               	movwf	?_GetLengthUBX+1
 12920  2663  0008               	return
 12921  2664                     __end_of_GetLengthUBX:	
 12922                           
 12923                           	psect	text21
 12924  153F                     __ptext21:	
 12925 ;; *************** function _GPS_HasAcknowledged *****************
 12926 ;; Defined at:
 12927 ;;		line 357 in file "main.c"
 12928 ;; Parameters:    Size  Location     Type
 12929 ;;  data            1    wreg     PTR unsigned char 
 12930 ;;		 -> setNavFlightMode(44), 
 12931 ;; Auto vars:     Size  Location     Type
 12932 ;;  data            1   15[BANK0 ] PTR unsigned char 
 12933 ;;		 -> setNavFlightMode(44), 
 12934 ;;  i               1   17[BANK0 ] unsigned char 
 12935 ;;  ackPacket      10    5[BANK0 ] unsigned char [10]
 12936 ;;  startTime       4    0[BANK0 ] unsigned long 
 12937 ;;  ackByteID       1   16[BANK0 ] unsigned char 
 12938 ;;  ackByte         1    4[BANK0 ] unsigned char 
 12939 ;; Return value:  Size  Location     Type
 12940 ;;                  1    wreg      _Bool 
 12941 ;; Registers used:
 12942 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12943 ;; Tracked objects:
 12944 ;;		On entry : 0/0
 12945 ;;		On exit  : 0/0
 12946 ;;		Unchanged: 0/0
 12947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12949 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12950 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12951 ;;      Totals:         4      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12952 ;;Total ram usage:       22 bytes
 12953 ;; Hardware stack levels used:    1
 12954 ;; Hardware stack levels required when called:    4
 12955 ;; This function calls:
 12956 ;;		_EUSART1_Read
 12957 ;;		_EUSART1_is_rx_ready
 12958 ;; This function is called by:
 12959 ;;		_SetupGPS
 12960 ;; This function uses a non-reentrant model
 12961 ;;
 12962                           
 12963                           
 12964                           ;psect for function _GPS_HasAcknowledged
 12965  153F                     _GPS_HasAcknowledged:	
 12966                           
 12967                           ;incstack = 0
 12968                           ; Regs used in _GPS_HasAcknowledged: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12969                           ;GPS_HasAcknowledged@data stored from wreg
 12970  153F  0140               	movlb	0	; select bank0
 12971  1540  00AF               	movwf	GPS_HasAcknowledged@data
 12972                           
 12973                           ;main.c: 357: _Bool GPS_HasAcknowledged(uint8_t* data);main.c: 358: {;main.c: 359:     u
      +                          int8_t ackPacket[10];;main.c: 360:     uint32_t startTime = ticks;
 12974  1541  0141               	movlb	1	; select bank1
 12975  1542  086B               	movf	(_ticks+3)^(0+128),w
 12976  1543  0140               	movlb	0	; select bank0
 12977  1544  00A3               	movwf	GPS_HasAcknowledged@startTime+3
 12978  1545  0141               	movlb	1	; select bank1
 12979  1546  086A               	movf	(_ticks+2)^(0+128),w
 12980  1547  0140               	movlb	0	; select bank0
 12981  1548  00A2               	movwf	GPS_HasAcknowledged@startTime+2
 12982  1549  0141               	movlb	1	; select bank1
 12983  154A  0869               	movf	(_ticks+1)^(0+128),w
 12984  154B  0140               	movlb	0	; select bank0
 12985  154C  00A1               	movwf	GPS_HasAcknowledged@startTime+1
 12986  154D  0141               	movlb	1	; select bank1
 12987  154E  0868               	movf	_ticks^(0+128),w
 12988  154F  0140               	movlb	0	; select bank0
 12989  1550  00A0               	movwf	GPS_HasAcknowledged@startTime
 12990                           
 12991                           ;main.c: 363:     ackPacket[0] = 0xB5;
 12992  1551  30B5               	movlw	181
 12993  1552  00F0               	movwf	??_GPS_HasAcknowledged
 12994  1553  0870               	movf	??_GPS_HasAcknowledged,w
 12995  1554  00A5               	movwf	GPS_HasAcknowledged@ackPacket
 12996                           
 12997                           ;main.c: 364:     ackPacket[1] = 0x62;
 12998  1555  3062               	movlw	98
 12999  1556  00F0               	movwf	??_GPS_HasAcknowledged
 13000  1557  0870               	movf	??_GPS_HasAcknowledged,w
 13001  1558  00A6               	movwf	GPS_HasAcknowledged@ackPacket+1
 13002                           
 13003                           ;main.c: 365:     ackPacket[2] = 0x05;
 13004  1559  3005               	movlw	5
 13005  155A  00F0               	movwf	??_GPS_HasAcknowledged
 13006  155B  0870               	movf	??_GPS_HasAcknowledged,w
 13007  155C  00A7               	movwf	GPS_HasAcknowledged@ackPacket+2
 13008                           
 13009                           ;main.c: 366:     ackPacket[3] = 0x01;
 13010  155D  01A8               	clrf	GPS_HasAcknowledged@ackPacket+3
 13011  155E  0AA8               	incf	GPS_HasAcknowledged@ackPacket+3,f
 13012                           
 13013                           ;main.c: 367:     ackPacket[4] = 0x02;
 13014  155F  3002               	movlw	2
 13015  1560  00F0               	movwf	??_GPS_HasAcknowledged
 13016  1561  0870               	movf	??_GPS_HasAcknowledged,w
 13017  1562  00A9               	movwf	GPS_HasAcknowledged@ackPacket+4
 13018                           
 13019                           ;main.c: 368:     ackPacket[5] = 0x00;
 13020  1563  01AA               	clrf	GPS_HasAcknowledged@ackPacket+5
 13021                           
 13022                           ;main.c: 369:     ackPacket[6] = data[2];
 13023  1564  082F               	movf	GPS_HasAcknowledged@data,w
 13024  1565  0086               	movwf	6
 13025  1566  3002               	movlw	2	; select bank4/5
 13026  1567  0087               	movwf	7
 13027  1568  3002               	movlw	2	; select bank4/5
 13028  1569  3F42               	moviw [2]fsr1
 13029  156A  00AB               	movwf	GPS_HasAcknowledged@ackPacket+6
 13030                           
 13031                           ;main.c: 370:     ackPacket[7] = data[3];
 13032  156B  082F               	movf	GPS_HasAcknowledged@data,w
 13033  156C  0086               	movwf	6
 13034  156D  3002               	movlw	2	; select bank4/5
 13035  156E  0087               	movwf	7
 13036  156F  3002               	movlw	2	; select bank4/5
 13037  1570  3F43               	moviw [3]fsr1
 13038  1571  00AC               	movwf	GPS_HasAcknowledged@ackPacket+7
 13039                           
 13040                           ;main.c: 371:     ackPacket[8] = 0;
 13041  1572  01AD               	clrf	GPS_HasAcknowledged@ackPacket+8
 13042                           
 13043                           ;main.c: 372:     ackPacket[9] = 0;
 13044  1573  01AE               	clrf	GPS_HasAcknowledged@ackPacket+9
 13045                           
 13046                           ;main.c: 375:     for (uint8_t i = 2; i < 8; i++)
 13047  1574  3002               	movlw	2
 13048  1575  00F0               	movwf	??_GPS_HasAcknowledged
 13049  1576  0870               	movf	??_GPS_HasAcknowledged,w
 13050  1577  00B1               	movwf	GPS_HasAcknowledged@i
 13051  1578                     l4266:	
 13052                           
 13053                           ;main.c: 376:     {;main.c: 377:         ackPacket[8] = ackPacket[8] + ackPacket[i];
 13054  1578  0831               	movf	GPS_HasAcknowledged@i,w
 13055  1579  3E25               	addlw	(low (GPS_HasAcknowledged@ackPacket| 0))& (0+255)
 13056  157A  0086               	movwf	6
 13057  157B  0187               	clrf	7
 13058  157C  082D               	movf	GPS_HasAcknowledged@ackPacket+8,w
 13059  157D  0701               	addwf	1,w
 13060  157E  00F0               	movwf	??_GPS_HasAcknowledged
 13061  157F  0870               	movf	??_GPS_HasAcknowledged,w
 13062  1580  00AD               	movwf	GPS_HasAcknowledged@ackPacket+8
 13063                           
 13064                           ;main.c: 378:         ackPacket[9] = ackPacket[9] + ackPacket[8];
 13065  1581  082E               	movf	GPS_HasAcknowledged@ackPacket+9,w
 13066  1582  072D               	addwf	GPS_HasAcknowledged@ackPacket+8,w
 13067  1583  00F0               	movwf	??_GPS_HasAcknowledged
 13068  1584  0870               	movf	??_GPS_HasAcknowledged,w
 13069  1585  00AE               	movwf	GPS_HasAcknowledged@ackPacket+9
 13070                           
 13071                           ;main.c: 379:     }
 13072  1586  3001               	movlw	1
 13073  1587  00F0               	movwf	??_GPS_HasAcknowledged
 13074  1588  0870               	movf	??_GPS_HasAcknowledged,w
 13075  1589  07B1               	addwf	GPS_HasAcknowledged@i,f
 13076  158A  3008               	movlw	8
 13077  158B  0231               	subwf	GPS_HasAcknowledged@i,w
 13078  158C  1C03               	skipc
 13079  158D  2D78               	goto	l4266
 13080  158E                     l4274:	
 13081                           
 13082                           ;main.c: 382:     uint8_t ackByte;;main.c: 385:     uint8_t ackByteID = 0;
 13083  158E  01B0               	clrf	GPS_HasAcknowledged@ackByteID
 13084  158F                     l4276:	
 13085                           
 13086                           ;main.c: 389:     {;main.c: 392:         if (ackByteID > 9)
 13087  158F  300A               	movlw	10
 13088  1590  0140               	movlb	0	; select bank0
 13089  1591  0230               	subwf	GPS_HasAcknowledged@ackByteID,w
 13090  1592  1C03               	skipc
 13091  1593  2D96               	goto	l4282
 13092                           
 13093                           ;main.c: 393:         {;main.c: 396:             return 1;
 13094  1594  3001               	movlw	1
 13095  1595  0008               	return
 13096  1596                     l4282:	
 13097                           
 13098                           ;main.c: 400:         if (ticks - startTime > 3000)
 13099  1596  0820               	movf	GPS_HasAcknowledged@startTime,w
 13100  1597  0141               	movlb	1	; select bank1
 13101  1598  0268               	subwf	_ticks^(0+128),w
 13102  1599  00F0               	movwf	??_GPS_HasAcknowledged
 13103  159A  0140               	movlb	0	; select bank0
 13104  159B  0821               	movf	GPS_HasAcknowledged@startTime+1,w
 13105  159C  0141               	movlb	1	; select bank1
 13106  159D  3B69               	subwfb	(_ticks+1)^(0+128),w
 13107  159E  00F1               	movwf	??_GPS_HasAcknowledged+1
 13108  159F  0140               	movlb	0	; select bank0
 13109  15A0  0822               	movf	GPS_HasAcknowledged@startTime+2,w
 13110  15A1  0141               	movlb	1	; select bank1
 13111  15A2  3B6A               	subwfb	(_ticks+2)^(0+128),w
 13112  15A3  00F2               	movwf	??_GPS_HasAcknowledged+2
 13113  15A4  0140               	movlb	0	; select bank0
 13114  15A5  0823               	movf	GPS_HasAcknowledged@startTime+3,w
 13115  15A6  0141               	movlb	1	; select bank1
 13116  15A7  3B6B               	subwfb	(_ticks+3)^(0+128),w
 13117  15A8  00F3               	movwf	??_GPS_HasAcknowledged+3
 13118  15A9  0873               	movf	??_GPS_HasAcknowledged+3,w
 13119  15AA  1D03               	btfss	3,2
 13120  15AB  2DB5               	goto	l4284
 13121  15AC  0872               	movf	??_GPS_HasAcknowledged+2,w
 13122  15AD  1D03               	btfss	3,2
 13123  15AE  2DB5               	goto	l4284
 13124  15AF  30B9               	movlw	185
 13125  15B0  0270               	subwf	??_GPS_HasAcknowledged,w
 13126  15B1  300B               	movlw	11
 13127  15B2  3B71               	subwfb	??_GPS_HasAcknowledged+1,w
 13128  15B3  1C03               	btfss	3,0
 13129  15B4  2DB7               	goto	l4288
 13130  15B5                     l4284:	
 13131                           
 13132                           ;main.c: 401:         {;main.c: 402:             return 0;
 13133  15B5  3000               	movlw	0
 13134  15B6  0008               	return
 13135  15B7                     l4288:	
 13136                           
 13137                           ;main.c: 406:         if (EUSART1_is_rx_ready())
 13138  15B7  3198  2000  3195   	fcall	_EUSART1_is_rx_ready
 13139  15BA  3A00               	xorlw	0
 13140  15BB  1903               	skipnz
 13141  15BC  2D8F               	goto	l4276
 13142                           
 13143                           ;main.c: 407:         {;main.c: 408:             ackByte = EUSART1_Read();
 13144  15BD  31A6  2604  3195   	fcall	_EUSART1_Read
 13145  15C0  00F0               	movwf	??_GPS_HasAcknowledged
 13146  15C1  0870               	movf	??_GPS_HasAcknowledged,w
 13147  15C2  0140               	movlb	0	; select bank0
 13148  15C3  00A4               	movwf	GPS_HasAcknowledged@ackByte
 13149                           
 13150                           ;main.c: 411:             if (ackByte == ackPacket[ackByteID]) {
 13151  15C4  0830               	movf	GPS_HasAcknowledged@ackByteID,w
 13152  15C5  3E25               	addlw	(low (GPS_HasAcknowledged@ackPacket| 0))& (0+255)
 13153  15C6  0086               	movwf	6
 13154  15C7  0187               	clrf	7
 13155  15C8  0801               	movf	1,w
 13156  15C9  0624               	xorwf	GPS_HasAcknowledged@ackByte,w
 13157  15CA  1D03               	skipz
 13158  15CB  2D8E               	goto	l4274
 13159                           
 13160                           ;main.c: 412:                 ackByteID++;
 13161  15CC  3001               	movlw	1
 13162  15CD  00F0               	movwf	??_GPS_HasAcknowledged
 13163  15CE  0870               	movf	??_GPS_HasAcknowledged,w
 13164  15CF  07B0               	addwf	GPS_HasAcknowledged@ackByteID,f
 13165                           
 13166                           ;main.c: 413:             }
 13167  15D0  2D8F               	goto	l4276
 13168  15D1                     __end_of_GPS_HasAcknowledged:	
 13169                           
 13170                           	psect	text22
 13171  2643                     __ptext22:	
 13172 ;; *************** function _SYSTEM_Initialize *****************
 13173 ;; Defined at:
 13174 ;;		line 50 in file "mcc_generated_files/mcc.c"
 13175 ;; Parameters:    Size  Location     Type
 13176 ;;		None
 13177 ;; Auto vars:     Size  Location     Type
 13178 ;;		None
 13179 ;; Return value:  Size  Location     Type
 13180 ;;                  1    wreg      void 
 13181 ;; Registers used:
 13182 ;;		wreg, status,2, status,0, pclath, cstack
 13183 ;; Tracked objects:
 13184 ;;		On entry : 0/0
 13185 ;;		On exit  : 0/0
 13186 ;;		Unchanged: 0/0
 13187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13191 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13192 ;;Total ram usage:        0 bytes
 13193 ;; Hardware stack levels used:    1
 13194 ;; Hardware stack levels required when called:    5
 13195 ;; This function calls:
 13196 ;;		_EUSART1_Initialize
 13197 ;;		_OSCILLATOR_Initialize
 13198 ;;		_PIN_MANAGER_Initialize
 13199 ;;		_PMD_Initialize
 13200 ;;		_TMR0_Initialize
 13201 ;; This function is called by:
 13202 ;;		_main
 13203 ;; This function uses a non-reentrant model
 13204 ;;
 13205                           
 13206                           
 13207                           ;psect for function _SYSTEM_Initialize
 13208  2643                     _SYSTEM_Initialize:	
 13209                           
 13210                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
 13211                           
 13212                           ;incstack = 0
 13213                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 13214  2643  31A5  25EF  31A6   	fcall	_PMD_Initialize
 13215                           
 13216                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
 13217  2646  3198  2098  31A6   	fcall	_PIN_MANAGER_Initialize
 13218                           
 13219                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
 13220  2649  31A5  25DC  31A6   	fcall	_OSCILLATOR_Initialize
 13221                           
 13222                           ;mcc_generated_files/mcc.c: 55:     TMR0_Initialize();
 13223  264C  31A6  2664  31A6   	fcall	_TMR0_Initialize
 13224                           
 13225                           ;mcc_generated_files/mcc.c: 56:     EUSART1_Initialize();
 13226  264F  3190  2001         	fcall	_EUSART1_Initialize
 13227  2651  0008               	return
 13228  2652                     __end_of_SYSTEM_Initialize:	
 13229                           
 13230                           	psect	text23
 13231  2664                     __ptext23:	
 13232 ;; *************** function _TMR0_Initialize *****************
 13233 ;; Defined at:
 13234 ;;		line 61 in file "mcc_generated_files/tmr0.c"
 13235 ;; Parameters:    Size  Location     Type
 13236 ;;		None
 13237 ;; Auto vars:     Size  Location     Type
 13238 ;;		None
 13239 ;; Return value:  Size  Location     Type
 13240 ;;                  1    wreg      void 
 13241 ;; Registers used:
 13242 ;;		wreg, status,2, status,0, pclath, cstack
 13243 ;; Tracked objects:
 13244 ;;		On entry : 0/0
 13245 ;;		On exit  : 0/0
 13246 ;;		Unchanged: 0/0
 13247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13251 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13252 ;;Total ram usage:        0 bytes
 13253 ;; Hardware stack levels used:    1
 13254 ;; Hardware stack levels required when called:    4
 13255 ;; This function calls:
 13256 ;;		_TMR0_SetInterruptHandler
 13257 ;; This function is called by:
 13258 ;;		_SYSTEM_Initialize
 13259 ;; This function uses a non-reentrant model
 13260 ;;
 13261                           
 13262                           
 13263                           ;psect for function _TMR0_Initialize
 13264  2664                     _TMR0_Initialize:	
 13265                           
 13266                           ;mcc_generated_files/tmr0.c: 66:     T0CON1 = 0x40;
 13267                           
 13268                           ;incstack = 0
 13269                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
 13270  2664  3040               	movlw	64
 13271  2665  014B               	movlb	11	; select bank11
 13272  2666  009F               	movwf	31	;volatile
 13273                           
 13274                           ;mcc_generated_files/tmr0.c: 69:     TMR0H = 0xF9;
 13275  2667  30F9               	movlw	249
 13276  2668  009D               	movwf	29	;volatile
 13277                           
 13278                           ;mcc_generated_files/tmr0.c: 72:     TMR0L = 0x00;
 13279  2669  019C               	clrf	28	;volatile
 13280                           
 13281                           ;mcc_generated_files/tmr0.c: 75:     PIR0bits.TMR0IF = 0;
 13282  266A  014E               	movlb	14	; select bank14
 13283  266B  128C               	bcf	12,5	;volatile
 13284                           
 13285                           ;mcc_generated_files/tmr0.c: 78:     PIE0bits.TMR0IE = 1;
 13286  266C  1696               	bsf	22,5	;volatile
 13287                           
 13288                           ;mcc_generated_files/tmr0.c: 81:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
 13289  266D  3003               	movlw	low _TMR0_DefaultInterruptHandler
 13290  266E  00F0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 13291  266F  3000               	movlw	high _TMR0_DefaultInterruptHandler
 13292  2670  00F1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 13293  2671  31A5  25B4         	fcall	_TMR0_SetInterruptHandler
 13294                           
 13295                           ;mcc_generated_files/tmr0.c: 84:     T0CON0 = 0x80;
 13296  2673  3080               	movlw	128
 13297  2674  014B               	movlb	11	; select bank11
 13298  2675  009E               	movwf	30	;volatile
 13299  2676  0008               	return
 13300  2677                     __end_of_TMR0_Initialize:	
 13301                           
 13302                           	psect	text24
 13303  25EF                     __ptext24:	
 13304 ;; *************** function _PMD_Initialize *****************
 13305 ;; Defined at:
 13306 ;;		line 73 in file "mcc_generated_files/mcc.c"
 13307 ;; Parameters:    Size  Location     Type
 13308 ;;		None
 13309 ;; Auto vars:     Size  Location     Type
 13310 ;;		None
 13311 ;; Return value:  Size  Location     Type
 13312 ;;                  1    wreg      void 
 13313 ;; Registers used:
 13314 ;;		status,2
 13315 ;; Tracked objects:
 13316 ;;		On entry : 0/0
 13317 ;;		On exit  : 0/0
 13318 ;;		Unchanged: 0/0
 13319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13323 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13324 ;;Total ram usage:        0 bytes
 13325 ;; Hardware stack levels used:    1
 13326 ;; Hardware stack levels required when called:    3
 13327 ;; This function calls:
 13328 ;;		Nothing
 13329 ;; This function is called by:
 13330 ;;		_SYSTEM_Initialize
 13331 ;; This function uses a non-reentrant model
 13332 ;;
 13333                           
 13334                           
 13335                           ;psect for function _PMD_Initialize
 13336  25EF                     _PMD_Initialize:	
 13337                           
 13338                           ;mcc_generated_files/mcc.c: 76:     PMD0 = 0x00;
 13339                           
 13340                           ;incstack = 0
 13341                           ; Regs used in _PMD_Initialize: [status,2]
 13342  25EF  014F               	movlb	15	; select bank15
 13343  25F0  0196               	clrf	22	;volatile
 13344                           
 13345                           ;mcc_generated_files/mcc.c: 78:     PMD1 = 0x00;
 13346  25F1  0197               	clrf	23	;volatile
 13347                           
 13348                           ;mcc_generated_files/mcc.c: 80:     PMD2 = 0x00;
 13349  25F2  0198               	clrf	24	;volatile
 13350                           
 13351                           ;mcc_generated_files/mcc.c: 82:     PMD3 = 0x00;
 13352  25F3  0199               	clrf	25	;volatile
 13353                           
 13354                           ;mcc_generated_files/mcc.c: 84:     PMD4 = 0x00;
 13355  25F4  019A               	clrf	26	;volatile
 13356                           
 13357                           ;mcc_generated_files/mcc.c: 86:     PMD5 = 0x00;
 13358  25F5  019B               	clrf	27	;volatile
 13359                           
 13360                           ;mcc_generated_files/mcc.c: 88:     PMD6 = 0x00;
 13361  25F6  019C               	clrf	28	;volatile
 13362                           
 13363                           ;mcc_generated_files/mcc.c: 90:     PMD7 = 0x00;
 13364  25F7  019D               	clrf	29	;volatile
 13365  25F8  0008               	return
 13366  25F9                     __end_of_PMD_Initialize:	
 13367                           
 13368                           	psect	text25
 13369  1898                     __ptext25:	
 13370 ;; *************** function _PIN_MANAGER_Initialize *****************
 13371 ;; Defined at:
 13372 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 13373 ;; Parameters:    Size  Location     Type
 13374 ;;		None
 13375 ;; Auto vars:     Size  Location     Type
 13376 ;;		None
 13377 ;; Return value:  Size  Location     Type
 13378 ;;                  1    wreg      void 
 13379 ;; Registers used:
 13380 ;;		wreg, status,2
 13381 ;; Tracked objects:
 13382 ;;		On entry : 0/0
 13383 ;;		On exit  : 0/0
 13384 ;;		Unchanged: 0/0
 13385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13389 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13390 ;;Total ram usage:        0 bytes
 13391 ;; Hardware stack levels used:    1
 13392 ;; Hardware stack levels required when called:    3
 13393 ;; This function calls:
 13394 ;;		Nothing
 13395 ;; This function is called by:
 13396 ;;		_SYSTEM_Initialize
 13397 ;; This function uses a non-reentrant model
 13398 ;;
 13399                           
 13400                           
 13401                           ;psect for function _PIN_MANAGER_Initialize
 13402  1898                     _PIN_MANAGER_Initialize:	
 13403                           
 13404                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
 13405                           
 13406                           ;incstack = 0
 13407                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 13408  1898  0140               	movlb	0	; select bank0
 13409  1899  0198               	clrf	24	;volatile
 13410                           
 13411                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
 13412  189A  0199               	clrf	25	;volatile
 13413                           
 13414                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
 13415  189B  019A               	clrf	26	;volatile
 13416                           
 13417                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x0B;
 13418  189C  300B               	movlw	11
 13419  189D  0092               	movwf	18	;volatile
 13420                           
 13421                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0x70;
 13422  189E  3070               	movlw	112
 13423  189F  0093               	movwf	19	;volatile
 13424                           
 13425                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xDF;
 13426  18A0  30DF               	movlw	223
 13427  18A1  0094               	movwf	20	;volatile
 13428                           
 13429                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0xFF;
 13430  18A2  30FF               	movlw	255
 13431  18A3  017E               	movlb	62	; select bank62
 13432  18A4  00CE               	movwf	78	;volatile
 13433                           
 13434                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x80;
 13435  18A5  3080               	movlw	128
 13436  18A6  00C3               	movwf	67	;volatile
 13437                           
 13438                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x37;
 13439  18A7  3037               	movlw	55
 13440  18A8  00B8               	movwf	56	;volatile
 13441                           
 13442                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
 13443  18A9  01C4               	clrf	68	;volatile
 13444                           
 13445                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x00;
 13446  18AA  01B9               	clrf	57	;volatile
 13447                           
 13448                           ;mcc_generated_files/pin_manager.c: 83:     WPUC = 0x00;
 13449  18AB  01CF               	clrf	79	;volatile
 13450                           
 13451                           ;mcc_generated_files/pin_manager.c: 88:     ODCONA = 0x00;
 13452  18AC  01BA               	clrf	58	;volatile
 13453                           
 13454                           ;mcc_generated_files/pin_manager.c: 89:     ODCONB = 0x00;
 13455  18AD  01C5               	clrf	69	;volatile
 13456                           
 13457                           ;mcc_generated_files/pin_manager.c: 90:     ODCONC = 0x00;
 13458  18AE  01D0               	clrf	80	;volatile
 13459                           
 13460                           ;mcc_generated_files/pin_manager.c: 95:     SLRCONA = 0x37;
 13461  18AF  3037               	movlw	55
 13462  18B0  00BB               	movwf	59	;volatile
 13463                           
 13464                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONB = 0xF0;
 13465  18B1  30F0               	movlw	240
 13466  18B2  00C6               	movwf	70	;volatile
 13467                           
 13468                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONC = 0xFF;
 13469  18B3  30FF               	movlw	255
 13470  18B4  00D1               	movwf	81	;volatile
 13471                           
 13472                           ;mcc_generated_files/pin_manager.c: 102:     INLVLA = 0x3F;
 13473  18B5  303F               	movlw	63
 13474  18B6  00BC               	movwf	60	;volatile
 13475                           
 13476                           ;mcc_generated_files/pin_manager.c: 103:     INLVLB = 0xF0;
 13477  18B7  30F0               	movlw	240
 13478  18B8  00C7               	movwf	71	;volatile
 13479                           
 13480                           ;mcc_generated_files/pin_manager.c: 104:     INLVLC = 0xFF;
 13481  18B9  30FF               	movlw	255
 13482  18BA  00D2               	movwf	82	;volatile
 13483                           
 13484                           ;mcc_generated_files/pin_manager.c: 113:     RB7PPS = 0x0F;
 13485  18BB  300F               	movlw	15
 13486  18BC  009F               	movwf	31	;volatile
 13487                           
 13488                           ;mcc_generated_files/pin_manager.c: 114:     RX1DTPPS = 0x0D;
 13489  18BD  300D               	movlw	13
 13490  18BE  017D               	movlb	61	; select bank61
 13491  18BF  00CB               	movwf	75	;volatile
 13492  18C0  0008               	return
 13493  18C1                     __end_of_PIN_MANAGER_Initialize:	
 13494                           
 13495                           	psect	text26
 13496  25DC                     __ptext26:	
 13497 ;; *************** function _OSCILLATOR_Initialize *****************
 13498 ;; Defined at:
 13499 ;;		line 59 in file "mcc_generated_files/mcc.c"
 13500 ;; Parameters:    Size  Location     Type
 13501 ;;		None
 13502 ;; Auto vars:     Size  Location     Type
 13503 ;;		None
 13504 ;; Return value:  Size  Location     Type
 13505 ;;                  1    wreg      void 
 13506 ;; Registers used:
 13507 ;;		wreg, status,2
 13508 ;; Tracked objects:
 13509 ;;		On entry : 0/0
 13510 ;;		On exit  : 0/0
 13511 ;;		Unchanged: 0/0
 13512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13516 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13517 ;;Total ram usage:        0 bytes
 13518 ;; Hardware stack levels used:    1
 13519 ;; Hardware stack levels required when called:    3
 13520 ;; This function calls:
 13521 ;;		Nothing
 13522 ;; This function is called by:
 13523 ;;		_SYSTEM_Initialize
 13524 ;; This function uses a non-reentrant model
 13525 ;;
 13526                           
 13527                           
 13528                           ;psect for function _OSCILLATOR_Initialize
 13529  25DC                     _OSCILLATOR_Initialize:	
 13530                           
 13531                           ;mcc_generated_files/mcc.c: 62:     OSCCON1 = 0x62;
 13532                           
 13533                           ;incstack = 0
 13534                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 13535  25DC  3062               	movlw	98
 13536  25DD  0151               	movlb	17	; select bank17
 13537  25DE  008D               	movwf	13	;volatile
 13538                           
 13539                           ;mcc_generated_files/mcc.c: 64:     OSCCON3 = 0x00;
 13540  25DF  018F               	clrf	15	;volatile
 13541                           
 13542                           ;mcc_generated_files/mcc.c: 66:     OSCEN = 0x00;
 13543  25E0  0191               	clrf	17	;volatile
 13544                           
 13545                           ;mcc_generated_files/mcc.c: 68:     OSCFRQ = 0x02;
 13546  25E1  3002               	movlw	2
 13547  25E2  0093               	movwf	19	;volatile
 13548                           
 13549                           ;mcc_generated_files/mcc.c: 70:     OSCTUNE = 0x00;
 13550  25E3  0192               	clrf	18	;volatile
 13551  25E4  0008               	return
 13552  25E5                     __end_of_OSCILLATOR_Initialize:	
 13553                           
 13554                           	psect	text27
 13555  1001                     __ptext27:	
 13556 ;; *************** function _EUSART1_Initialize *****************
 13557 ;; Defined at:
 13558 ;;		line 66 in file "mcc_generated_files/eusart1.c"
 13559 ;; Parameters:    Size  Location     Type
 13560 ;;		None
 13561 ;; Auto vars:     Size  Location     Type
 13562 ;;		None
 13563 ;; Return value:  Size  Location     Type
 13564 ;;                  1    wreg      void 
 13565 ;; Registers used:
 13566 ;;		wreg, status,2, status,0, pclath, cstack
 13567 ;; Tracked objects:
 13568 ;;		On entry : 0/0
 13569 ;;		On exit  : 0/0
 13570 ;;		Unchanged: 0/0
 13571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13573 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13575 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13576 ;;Total ram usage:        0 bytes
 13577 ;; Hardware stack levels used:    1
 13578 ;; Hardware stack levels required when called:    4
 13579 ;; This function calls:
 13580 ;;		_EUSART1_SetErrorHandler
 13581 ;;		_EUSART1_SetFramingErrorHandler
 13582 ;;		_EUSART1_SetOverrunErrorHandler
 13583 ;; This function is called by:
 13584 ;;		_SYSTEM_Initialize
 13585 ;; This function uses a non-reentrant model
 13586 ;;
 13587                           
 13588                           
 13589                           ;psect for function _EUSART1_Initialize
 13590  1001                     _EUSART1_Initialize:	
 13591                           
 13592                           ;mcc_generated_files/eusart1.c: 71:     BAUD1CON = 0x08;
 13593                           
 13594                           ;incstack = 0
 13595                           ; Regs used in _EUSART1_Initialize: [wreg+status,2+status,0+pclath+cstack]
 13596  1001  3008               	movlw	8
 13597  1002  0142               	movlb	2	; select bank2
 13598  1003  009F               	movwf	31	;volatile
 13599                           
 13600                           ;mcc_generated_files/eusart1.c: 74:     RC1STA = 0x90;
 13601  1004  3090               	movlw	144
 13602  1005  009D               	movwf	29	;volatile
 13603                           
 13604                           ;mcc_generated_files/eusart1.c: 77:     TX1STA = 0x24;
 13605  1006  3024               	movlw	36
 13606  1007  009E               	movwf	30	;volatile
 13607                           
 13608                           ;mcc_generated_files/eusart1.c: 80:     SP1BRGL = 0x19;
 13609  1008  3019               	movlw	25
 13610  1009  009B               	movwf	27	;volatile
 13611                           
 13612                           ;mcc_generated_files/eusart1.c: 83:     SP1BRGH = 0x00;
 13613  100A  019C               	clrf	28	;volatile
 13614                           
 13615                           ;mcc_generated_files/eusart1.c: 86:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultFr
      +                          amingErrorHandler);
 13616  100B  3000               	movlw	0
 13617  100C  00F0               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler
 13618  100D  3000               	movlw	0
 13619  100E  00F1               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler+1
 13620  100F  31A5  25C0  3190   	fcall	_EUSART1_SetFramingErrorHandler
 13621                           
 13622                           ;mcc_generated_files/eusart1.c: 87:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOv
      +                          errunErrorHandler);
 13623  1012  3000               	movlw	0
 13624  1013  00F0               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler
 13625  1014  3000               	movlw	0
 13626  1015  00F1               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler+1
 13627  1016  31A5  25C6  3190   	fcall	_EUSART1_SetOverrunErrorHandler
 13628                           
 13629                           ;mcc_generated_files/eusart1.c: 88:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHand
      +                          ler);
 13630  1019  3000               	movlw	0
 13631  101A  00F0               	movwf	EUSART1_SetErrorHandler@interruptHandler
 13632  101B  3000               	movlw	0
 13633  101C  00F1               	movwf	EUSART1_SetErrorHandler@interruptHandler+1
 13634  101D  31A5  25BA         	fcall	_EUSART1_SetErrorHandler
 13635                           
 13636                           ;mcc_generated_files/eusart1.c: 90:     eusart1RxLastError.status = 0;
 13637  101F  0141               	movlb	1	; select bank1
 13638  1020  01ED               	clrf	_eusart1RxLastError^(0+128)	;volatile
 13639  1021  0008               	return
 13640  1022                     __end_of_EUSART1_Initialize:	
 13641                           
 13642                           	psect	text28
 13643  25C6                     __ptext28:	
 13644 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
 13645 ;; Defined at:
 13646 ;;		line 161 in file "mcc_generated_files/eusart1.c"
 13647 ;; Parameters:    Size  Location     Type
 13648 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
 13649 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
 13650 ;; Auto vars:     Size  Location     Type
 13651 ;;		None
 13652 ;; Return value:  Size  Location     Type
 13653 ;;                  1    wreg      void 
 13654 ;; Registers used:
 13655 ;;		wreg
 13656 ;; Tracked objects:
 13657 ;;		On entry : 0/0
 13658 ;;		On exit  : 0/0
 13659 ;;		Unchanged: 0/0
 13660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13661 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13664 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13665 ;;Total ram usage:        2 bytes
 13666 ;; Hardware stack levels used:    1
 13667 ;; Hardware stack levels required when called:    3
 13668 ;; This function calls:
 13669 ;;		Nothing
 13670 ;; This function is called by:
 13671 ;;		_EUSART1_Initialize
 13672 ;; This function uses a non-reentrant model
 13673 ;;
 13674                           
 13675                           
 13676                           ;psect for function _EUSART1_SetOverrunErrorHandler
 13677  25C6                     _EUSART1_SetOverrunErrorHandler:	
 13678                           
 13679                           ;mcc_generated_files/eusart1.c: 162:     EUSART1_OverrunErrorHandler = interruptHandler;
 13680                           
 13681                           ;incstack = 0
 13682                           ; Regs used in _EUSART1_SetOverrunErrorHandler: [wreg]
 13683  25C6  0871               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler+1,w
 13684  25C7  0143               	movlb	3	; select bank3
 13685  25C8  00EA               	movwf	(_EUSART1_OverrunErrorHandler+1)^(0+384)
 13686  25C9  0870               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler,w
 13687  25CA  00E9               	movwf	_EUSART1_OverrunErrorHandler^(0+384)
 13688  25CB  0008               	return
 13689  25CC                     __end_of_EUSART1_SetOverrunErrorHandler:	
 13690                           
 13691                           	psect	text29
 13692  25C0                     __ptext29:	
 13693 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
 13694 ;; Defined at:
 13695 ;;		line 157 in file "mcc_generated_files/eusart1.c"
 13696 ;; Parameters:    Size  Location     Type
 13697 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
 13698 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
 13699 ;; Auto vars:     Size  Location     Type
 13700 ;;		None
 13701 ;; Return value:  Size  Location     Type
 13702 ;;                  1    wreg      void 
 13703 ;; Registers used:
 13704 ;;		wreg
 13705 ;; Tracked objects:
 13706 ;;		On entry : 0/0
 13707 ;;		On exit  : 0/0
 13708 ;;		Unchanged: 0/0
 13709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13710 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13713 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13714 ;;Total ram usage:        2 bytes
 13715 ;; Hardware stack levels used:    1
 13716 ;; Hardware stack levels required when called:    3
 13717 ;; This function calls:
 13718 ;;		Nothing
 13719 ;; This function is called by:
 13720 ;;		_EUSART1_Initialize
 13721 ;; This function uses a non-reentrant model
 13722 ;;
 13723                           
 13724                           
 13725                           ;psect for function _EUSART1_SetFramingErrorHandler
 13726  25C0                     _EUSART1_SetFramingErrorHandler:	
 13727                           
 13728                           ;mcc_generated_files/eusart1.c: 158:     EUSART1_FramingErrorHandler = interruptHandler;
 13729                           
 13730                           ;incstack = 0
 13731                           ; Regs used in _EUSART1_SetFramingErrorHandler: [wreg]
 13732  25C0  0871               	movf	EUSART1_SetFramingErrorHandler@interruptHandler+1,w
 13733  25C1  0143               	movlb	3	; select bank3
 13734  25C2  00EC               	movwf	(_EUSART1_FramingErrorHandler+1)^(0+384)
 13735  25C3  0870               	movf	EUSART1_SetFramingErrorHandler@interruptHandler,w
 13736  25C4  00EB               	movwf	_EUSART1_FramingErrorHandler^(0+384)
 13737  25C5  0008               	return
 13738  25C6                     __end_of_EUSART1_SetFramingErrorHandler:	
 13739                           
 13740                           	psect	text30
 13741  25BA                     __ptext30:	
 13742 ;; *************** function _EUSART1_SetErrorHandler *****************
 13743 ;; Defined at:
 13744 ;;		line 165 in file "mcc_generated_files/eusart1.c"
 13745 ;; Parameters:    Size  Location     Type
 13746 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
 13747 ;;		 -> EUSART1_DefaultErrorHandler(1), 
 13748 ;; Auto vars:     Size  Location     Type
 13749 ;;		None
 13750 ;; Return value:  Size  Location     Type
 13751 ;;                  1    wreg      void 
 13752 ;; Registers used:
 13753 ;;		wreg
 13754 ;; Tracked objects:
 13755 ;;		On entry : 0/0
 13756 ;;		On exit  : 0/0
 13757 ;;		Unchanged: 0/0
 13758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13759 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13762 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13763 ;;Total ram usage:        2 bytes
 13764 ;; Hardware stack levels used:    1
 13765 ;; Hardware stack levels required when called:    3
 13766 ;; This function calls:
 13767 ;;		Nothing
 13768 ;; This function is called by:
 13769 ;;		_EUSART1_Initialize
 13770 ;; This function uses a non-reentrant model
 13771 ;;
 13772                           
 13773                           
 13774                           ;psect for function _EUSART1_SetErrorHandler
 13775  25BA                     _EUSART1_SetErrorHandler:	
 13776                           
 13777                           ;mcc_generated_files/eusart1.c: 166:     EUSART1_ErrorHandler = interruptHandler;
 13778                           
 13779                           ;incstack = 0
 13780                           ; Regs used in _EUSART1_SetErrorHandler: [wreg]
 13781  25BA  0871               	movf	EUSART1_SetErrorHandler@interruptHandler+1,w
 13782  25BB  0143               	movlb	3	; select bank3
 13783  25BC  00E8               	movwf	(_EUSART1_ErrorHandler+1)^(0+384)
 13784  25BD  0870               	movf	EUSART1_SetErrorHandler@interruptHandler,w
 13785  25BE  00E7               	movwf	_EUSART1_ErrorHandler^(0+384)
 13786  25BF  0008               	return
 13787  25C0                     __end_of_EUSART1_SetErrorHandler:	
 13788                           
 13789                           	psect	text31
 13790  0B05                     __ptext31:	
 13791 ;; *************** function _PollGPS *****************
 13792 ;; Defined at:
 13793 ;;		line 509 in file "main.c"
 13794 ;; Parameters:    Size  Location     Type
 13795 ;;		None
 13796 ;; Auto vars:     Size  Location     Type
 13797 ;;  byte            1   38[BANK0 ] unsigned char 
 13798 ;;  i               2   39[BANK0 ] int 
 13799 ;;  counti          2   33[BANK0 ] int 
 13800 ;;  startTime       4   29[BANK0 ] unsigned long 
 13801 ;;  index           2   41[BANK0 ] int 
 13802 ;;  eusart_compl    1   37[BANK0 ] _Bool 
 13803 ;;  success         1   35[BANK0 ] _Bool 
 13804 ;; Return value:  Size  Location     Type
 13805 ;;                  1    wreg      _Bool 
 13806 ;; Registers used:
 13807 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13808 ;; Tracked objects:
 13809 ;;		On entry : 0/0
 13810 ;;		On exit  : 0/0
 13811 ;;		Unchanged: 0/0
 13812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13814 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13815 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13816 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13817 ;;Total ram usage:       18 bytes
 13818 ;; Hardware stack levels used:    1
 13819 ;; Hardware stack levels required when called:    7
 13820 ;; This function calls:
 13821 ;;		_ClearNMEA
 13822 ;;		_EUSART1_Read
 13823 ;;		_EUSART1_is_rx_ready
 13824 ;;		_GetAtRowCSV
 13825 ;;		_Insert
 13826 ;;		_InsertString
 13827 ;;		_InsertTxData
 13828 ;;		_InsertTxDataSep
 13829 ;;		_WriteGPS
 13830 ;;		_strcmp
 13831 ;;		_strlen
 13832 ;; This function is called by:
 13833 ;;		_main
 13834 ;; This function uses a non-reentrant model
 13835 ;;
 13836                           
 13837                           
 13838                           ;psect for function _PollGPS
 13839  0B05                     _PollGPS:	
 13840                           
 13841                           ;main.c: 511:     _Bool success = 0;
 13842                           
 13843                           ;incstack = 0
 13844                           ; Regs used in _PollGPS: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13845  0B05  0140               	movlb	0	; select bank0
 13846  0B06  01C3               	clrf	PollGPS@success
 13847                           
 13848                           ;main.c: 512:     uint32_t startTime = ticks;
 13849  0B07  0141               	movlb	1	; select bank1
 13850  0B08  086B               	movf	(_ticks+3)^(0+128),w
 13851  0B09  0140               	movlb	0	; select bank0
 13852  0B0A  00C0               	movwf	PollGPS@startTime+3
 13853  0B0B  0141               	movlb	1	; select bank1
 13854  0B0C  086A               	movf	(_ticks+2)^(0+128),w
 13855  0B0D  0140               	movlb	0	; select bank0
 13856  0B0E  00BF               	movwf	PollGPS@startTime+2
 13857  0B0F  0141               	movlb	1	; select bank1
 13858  0B10  0869               	movf	(_ticks+1)^(0+128),w
 13859  0B11  0140               	movlb	0	; select bank0
 13860  0B12  00BE               	movwf	PollGPS@startTime+1
 13861  0B13  0141               	movlb	1	; select bank1
 13862  0B14  0868               	movf	_ticks^(0+128),w
 13863  0B15  0140               	movlb	0	; select bank0
 13864  0B16  00BD               	movwf	PollGPS@startTime
 13865                           
 13866                           ;main.c: 515:     ClearNMEA();
 13867  0B17  3198  2005  318B   	fcall	_ClearNMEA
 13868                           
 13869                           ;main.c: 518:     int index = 0;
 13870  0B1A  0140               	movlb	0	; select bank0
 13871  0B1B  01C9               	clrf	PollGPS@index
 13872  0B1C  01CA               	clrf	PollGPS@index+1
 13873                           
 13874                           ;main.c: 521:     _Bool eusart_complete = 0;
 13875  0B1D  01C5               	clrf	PollGPS@eusart_complete
 13876                           
 13877                           ;main.c: 524:     WriteGPS("$PUBX,00*33\r\n");
 13878  0B1E  309C               	movlw	low (STR_7| (0+32768))
 13879  0B1F  00F5               	movwf	WriteGPS@message
 13880  0B20  30A8               	movlw	high (STR_7| (0+32768))
 13881  0B21  00F6               	movwf	WriteGPS@message+1
 13882  0B22  3198  2070  318B   	fcall	_WriteGPS
 13883  0B25                     l4666:	
 13884                           ;main.c: 527:     while (ticks - startTime < 3000)
 13885                           
 13886                           
 13887                           ;main.c: 527:     while (ticks - startTime < 3000)
 13888  0B25  0140               	movlb	0	; select bank0
 13889  0B26  083D               	movf	PollGPS@startTime,w
 13890  0B27  0141               	movlb	1	; select bank1
 13891  0B28  0268               	subwf	_ticks^(0+128),w
 13892  0B29  0140               	movlb	0	; select bank0
 13893  0B2A  00B9               	movwf	??_PollGPS
 13894  0B2B  083E               	movf	PollGPS@startTime+1,w
 13895  0B2C  0141               	movlb	1	; select bank1
 13896  0B2D  3B69               	subwfb	(_ticks+1)^(0+128),w
 13897  0B2E  0140               	movlb	0	; select bank0
 13898  0B2F  00BA               	movwf	??_PollGPS+1
 13899  0B30  083F               	movf	PollGPS@startTime+2,w
 13900  0B31  0141               	movlb	1	; select bank1
 13901  0B32  3B6A               	subwfb	(_ticks+2)^(0+128),w
 13902  0B33  0140               	movlb	0	; select bank0
 13903  0B34  00BB               	movwf	??_PollGPS+2
 13904  0B35  0840               	movf	PollGPS@startTime+3,w
 13905  0B36  0141               	movlb	1	; select bank1
 13906  0B37  3B6B               	subwfb	(_ticks+3)^(0+128),w
 13907  0B38  0140               	movlb	0	; select bank0
 13908  0B39  00BC               	movwf	??_PollGPS+3
 13909  0B3A  083C               	movf	??_PollGPS+3,w
 13910  0B3B  1D03               	btfss	3,2
 13911  0B3C  2D34               	goto	l4668
 13912  0B3D  083B               	movf	??_PollGPS+2,w
 13913  0B3E  1D03               	btfss	3,2
 13914  0B3F  2D34               	goto	l4668
 13915  0B40  30B8               	movlw	184
 13916  0B41  0239               	subwf	??_PollGPS,w
 13917  0B42  300B               	movlw	11
 13918  0B43  3B3A               	subwfb	??_PollGPS+1,w
 13919  0B44  1803               	btfsc	3,0
 13920  0B45  2D34               	goto	l4668
 13921                           
 13922                           ;main.c: 528:     {;main.c: 530:         if (eusart_complete)
 13923  0B46  0845               	movf	PollGPS@eusart_complete,w
 13924  0B47  1903               	btfsc	3,2
 13925  0B48  2D0C               	goto	l4654
 13926                           
 13927                           ;main.c: 531:         {;main.c: 532:             index = strlen(txdata);
 13928  0B49  3064               	movlw	100
 13929  0B4A  00F0               	movwf	strlen@s
 13930  0B4B  3027               	movlw	39
 13931  0B4C  00F1               	movwf	strlen@s+1
 13932  0B4D  31A6  26A0  318B   	fcall	_strlen
 13933  0B50  0871               	movf	?_strlen+1,w
 13934  0B51  0140               	movlb	0	; select bank0
 13935  0B52  00CA               	movwf	PollGPS@index+1
 13936  0B53  0870               	movf	?_strlen,w
 13937  0B54  00C9               	movwf	PollGPS@index
 13938                           
 13939                           ;main.c: 534:             for (int i = 0, counti = strlen(GetAtRowCSV(nmea_data, PUBX_TI
      +                          ME)); i < counti; i++)
 13940  0B55  01C7               	clrf	PollGPS@i
 13941  0B56  01C8               	clrf	PollGPS@i+1
 13942  0B57  30D8               	movlw	216
 13943  0B58  00F6               	movwf	GetAtRowCSV@src
 13944  0B59  3026               	movlw	38
 13945  0B5A  00F7               	movwf	GetAtRowCSV@src+1
 13946  0B5B  3000               	movlw	0
 13947  0B5C  00F9               	movwf	GetAtRowCSV@column+1
 13948  0B5D  3002               	movlw	2
 13949  0B5E  00F8               	movwf	GetAtRowCSV@column
 13950  0B5F  3190  20D9  318B   	fcall	_GetAtRowCSV
 13951  0B62  0140               	movlb	0	; select bank0
 13952  0B63  00B9               	movwf	??_PollGPS
 13953  0B64  0839               	movf	??_PollGPS,w
 13954  0B65  00C4               	movwf	_PollGPS$2720
 13955  0B66  0844               	movf	_PollGPS$2720,w
 13956  0B67  00F0               	movwf	strlen@s
 13957  0B68  3001               	movlw	1
 13958  0B69  00F1               	movwf	strlen@s+1
 13959  0B6A  31A6  26A0  318B   	fcall	_strlen
 13960  0B6D  0871               	movf	?_strlen+1,w
 13961  0B6E  0140               	movlb	0	; select bank0
 13962  0B6F  00C2               	movwf	PollGPS@counti+1
 13963  0B70  0870               	movf	?_strlen,w
 13964  0B71  00C1               	movwf	PollGPS@counti
 13965  0B72                     l4640:	
 13966  0B72  0848               	movf	PollGPS@i+1,w
 13967  0B73  3A80               	xorlw	128
 13968  0B74  00B9               	movwf	??_PollGPS
 13969  0B75  0842               	movf	PollGPS@counti+1,w
 13970  0B76  3A80               	xorlw	128
 13971  0B77  0239               	subwf	??_PollGPS,w
 13972  0B78  1D03               	skipz
 13973  0B79  2B7C               	goto	u4415
 13974  0B7A  0841               	movf	PollGPS@counti,w
 13975  0B7B  0247               	subwf	PollGPS@i,w
 13976  0B7C                     u4415:	
 13977  0B7C  1803               	btfsc	3,0
 13978  0B7D  2BD0               	goto	l4642
 13979                           
 13980                           ;main.c: 535:             {;main.c: 536:                 if (i < 6)
 13981  0B7E  0140               	movlb	0	; select bank0
 13982  0B7F  0848               	movf	PollGPS@i+1,w
 13983  0B80  3A80               	xorlw	128
 13984  0B81  00B9               	movwf	??_PollGPS
 13985  0B82  3080               	movlw	128
 13986  0B83  0239               	subwf	??_PollGPS,w
 13987  0B84  1D03               	skipz
 13988  0B85  2B88               	goto	u4385
 13989  0B86  3006               	movlw	6
 13990  0B87  0247               	subwf	PollGPS@i,w
 13991  0B88                     u4385:	
 13992  0B88  1803               	skipnc
 13993  0B89  2BCA               	goto	l4638
 13994                           
 13995                           ;main.c: 537:                 {;main.c: 538:                     if (i == 2 || i == 4)
 13996  0B8A  3002               	movlw	2
 13997  0B8B  0140               	movlb	0	; select bank0
 13998  0B8C  0647               	xorwf	PollGPS@i,w
 13999  0B8D  0448               	iorwf	PollGPS@i+1,w
 14000  0B8E  1903               	btfsc	3,2
 14001  0B8F  2B95               	goto	l4636
 14002  0B90  3004               	movlw	4
 14003  0B91  0647               	xorwf	PollGPS@i,w
 14004  0B92  0448               	iorwf	PollGPS@i+1,w
 14005  0B93  1D03               	btfss	3,2
 14006  0B94  2BAD               	goto	l807
 14007  0B95                     l4636:	
 14008                           
 14009                           ;main.c: 539:                     {;main.c: 540:                         index = Insert(
      +                          txdata, ':', index, 140);
 14010  0B95  3064               	movlw	100
 14011  0B96  00F5               	movwf	Insert@dest
 14012  0B97  3027               	movlw	39
 14013  0B98  00F6               	movwf	Insert@dest+1
 14014  0B99  303A               	movlw	58
 14015  0B9A  00B9               	movwf	??_PollGPS
 14016  0B9B  0839               	movf	??_PollGPS,w
 14017  0B9C  00F7               	movwf	Insert@src
 14018  0B9D  084A               	movf	PollGPS@index+1,w
 14019  0B9E  00F9               	movwf	Insert@index+1
 14020  0B9F  0849               	movf	PollGPS@index,w
 14021  0BA0  00F8               	movwf	Insert@index
 14022  0BA1  308C               	movlw	140
 14023  0BA2  00FA               	movwf	Insert@destLimit
 14024  0BA3  3000               	movlw	0
 14025  0BA4  00FB               	movwf	Insert@destLimit+1
 14026  0BA5  3192  22E1  318B   	fcall	_Insert
 14027  0BA8  0876               	movf	?_Insert+1,w
 14028  0BA9  0140               	movlb	0	; select bank0
 14029  0BAA  00CA               	movwf	PollGPS@index+1
 14030  0BAB  0875               	movf	?_Insert,w
 14031  0BAC  00C9               	movwf	PollGPS@index
 14032  0BAD                     l807:	
 14033                           ;main.c: 541:                     }
 14034                           
 14035                           
 14036                           ;main.c: 542:                     index = Insert(txdata, csvField[i], index, 140);
 14037  0BAD  3064               	movlw	100
 14038  0BAE  00F5               	movwf	Insert@dest
 14039  0BAF  3027               	movlw	39
 14040  0BB0  00F6               	movwf	Insert@dest+1
 14041  0BB1  0847               	movf	PollGPS@i,w
 14042  0BB2  3ED3               	addlw	(low (_csvField| (0+256)))& (0+255)
 14043  0BB3  0086               	movwf	6
 14044  0BB4  3001               	movlw	1	; select bank3/4
 14045  0BB5  0087               	movwf	7
 14046  0BB6  0801               	movf	1,w
 14047  0BB7  00B9               	movwf	??_PollGPS
 14048  0BB8  0839               	movf	??_PollGPS,w
 14049  0BB9  00F7               	movwf	Insert@src
 14050  0BBA  084A               	movf	PollGPS@index+1,w
 14051  0BBB  00F9               	movwf	Insert@index+1
 14052  0BBC  0849               	movf	PollGPS@index,w
 14053  0BBD  00F8               	movwf	Insert@index
 14054  0BBE  308C               	movlw	140
 14055  0BBF  00FA               	movwf	Insert@destLimit
 14056  0BC0  3000               	movlw	0
 14057  0BC1  00FB               	movwf	Insert@destLimit+1
 14058  0BC2  3192  22E1  318B   	fcall	_Insert
 14059  0BC5  0876               	movf	?_Insert+1,w
 14060  0BC6  0140               	movlb	0	; select bank0
 14061  0BC7  00CA               	movwf	PollGPS@index+1
 14062  0BC8  0875               	movf	?_Insert,w
 14063  0BC9  00C9               	movwf	PollGPS@index
 14064  0BCA                     l4638:	
 14065                           
 14066                           ;main.c: 544:             }
 14067  0BCA  3001               	movlw	1
 14068  0BCB  0140               	movlb	0	; select bank0
 14069  0BCC  07C7               	addwf	PollGPS@i,f
 14070  0BCD  3000               	movlw	0
 14071  0BCE  3DC8               	addwfc	PollGPS@i+1,f
 14072  0BCF  2B72               	goto	l4640
 14073  0BD0                     l4642:	
 14074                           
 14075                           ;main.c: 545:             index = InsertTxDataSep(index);
 14076  0BD0  0140               	movlb	0	; select bank0
 14077  0BD1  084A               	movf	PollGPS@index+1,w
 14078  0BD2  00FD               	movwf	InsertTxDataSep@index+1
 14079  0BD3  0849               	movf	PollGPS@index,w
 14080  0BD4  00FC               	movwf	InsertTxDataSep@index
 14081  0BD5  31A6  26B7  318B   	fcall	_InsertTxDataSep
 14082  0BD8  087D               	movf	?_InsertTxDataSep+1,w
 14083  0BD9  0140               	movlb	0	; select bank0
 14084  0BDA  00CA               	movwf	PollGPS@index+1
 14085  0BDB  087C               	movf	?_InsertTxDataSep,w
 14086  0BDC  00C9               	movwf	PollGPS@index
 14087                           
 14088                           ;main.c: 547:             if (strcmp(GetAtRowCSV(nmea_data, PUBX_NS), "S") == 0)
 14089  0BDD  30B8               	movlw	low (STR_8| (0+32768))
 14090  0BDE  00FB               	movwf	strcmp@r
 14091  0BDF  30A8               	movlw	high (STR_8| (0+32768))
 14092  0BE0  00FC               	movwf	strcmp@r+1
 14093  0BE1  30D8               	movlw	216
 14094  0BE2  00F6               	movwf	GetAtRowCSV@src
 14095  0BE3  3026               	movlw	38
 14096  0BE4  00F7               	movwf	GetAtRowCSV@src+1
 14097  0BE5  3000               	movlw	0
 14098  0BE6  00F9               	movwf	GetAtRowCSV@column+1
 14099  0BE7  3004               	movlw	4
 14100  0BE8  00F8               	movwf	GetAtRowCSV@column
 14101  0BE9  3190  20D9  318B   	fcall	_GetAtRowCSV
 14102  0BEC  3199  21F2  318B   	fcall	_strcmp
 14103  0BEF  087B               	movf	?_strcmp,w
 14104  0BF0  047C               	iorwf	?_strcmp+1,w
 14105  0BF1  1D03               	btfss	3,2
 14106  0BF2  2C0C               	goto	l811
 14107                           
 14108                           ;main.c: 548:             {;main.c: 549:                 index = Insert(txdata, '-', ind
      +                          ex, 140);
 14109  0BF3  3064               	movlw	100
 14110  0BF4  00F5               	movwf	Insert@dest
 14111  0BF5  3027               	movlw	39
 14112  0BF6  00F6               	movwf	Insert@dest+1
 14113  0BF7  302D               	movlw	45
 14114  0BF8  0140               	movlb	0	; select bank0
 14115  0BF9  00B9               	movwf	??_PollGPS
 14116  0BFA  0839               	movf	??_PollGPS,w
 14117  0BFB  00F7               	movwf	Insert@src
 14118  0BFC  084A               	movf	PollGPS@index+1,w
 14119  0BFD  00F9               	movwf	Insert@index+1
 14120  0BFE  0849               	movf	PollGPS@index,w
 14121  0BFF  00F8               	movwf	Insert@index
 14122  0C00  308C               	movlw	140
 14123  0C01  00FA               	movwf	Insert@destLimit
 14124  0C02  3000               	movlw	0
 14125  0C03  00FB               	movwf	Insert@destLimit+1
 14126  0C04  3192  22E1  318B   	fcall	_Insert
 14127  0C07  0876               	movf	?_Insert+1,w
 14128  0C08  0140               	movlb	0	; select bank0
 14129  0C09  00CA               	movwf	PollGPS@index+1
 14130  0C0A  0875               	movf	?_Insert,w
 14131  0C0B  00C9               	movwf	PollGPS@index
 14132  0C0C                     l811:	
 14133                           ;main.c: 550:             }
 14134                           
 14135                           
 14136                           ;main.c: 551:             index = InsertString(txdata, GetAtRowCSV(nmea_data, PUBX_LAT),
      +                           index, 140);
 14137  0C0C  3064               	movlw	100
 14138  0C0D  0140               	movlb	0	; select bank0
 14139  0C0E  00A9               	movwf	InsertString@dest
 14140  0C0F  3027               	movlw	39
 14141  0C10  00AA               	movwf	InsertString@dest+1
 14142  0C11  30D8               	movlw	216
 14143  0C12  00F6               	movwf	GetAtRowCSV@src
 14144  0C13  3026               	movlw	38
 14145  0C14  00F7               	movwf	GetAtRowCSV@src+1
 14146  0C15  3000               	movlw	0
 14147  0C16  00F9               	movwf	GetAtRowCSV@column+1
 14148  0C17  3003               	movlw	3
 14149  0C18  00F8               	movwf	GetAtRowCSV@column
 14150  0C19  3190  20D9  318B   	fcall	_GetAtRowCSV
 14151  0C1C  0140               	movlb	0	; select bank0
 14152  0C1D  00AB               	movwf	InsertString@src
 14153  0C1E  3001               	movlw	1
 14154  0C1F  00AC               	movwf	InsertString@src+1
 14155  0C20  084A               	movf	PollGPS@index+1,w
 14156  0C21  00AE               	movwf	InsertString@index+1
 14157  0C22  0849               	movf	PollGPS@index,w
 14158  0C23  00AD               	movwf	InsertString@index
 14159  0C24  308C               	movlw	140
 14160  0C25  00AF               	movwf	InsertString@destLimit
 14161  0C26  3000               	movlw	0
 14162  0C27  00B0               	movwf	InsertString@destLimit+1
 14163  0C28  319F  2707  318B   	fcall	_InsertString
 14164  0C2B  0140               	movlb	0	; select bank0
 14165  0C2C  082A               	movf	?_InsertString+1,w
 14166  0C2D  00CA               	movwf	PollGPS@index+1
 14167  0C2E  0829               	movf	?_InsertString,w
 14168  0C2F  00C9               	movwf	PollGPS@index
 14169                           
 14170                           ;main.c: 552:             index = InsertTxDataSep(index);
 14171  0C30  084A               	movf	PollGPS@index+1,w
 14172  0C31  00FD               	movwf	InsertTxDataSep@index+1
 14173  0C32  0849               	movf	PollGPS@index,w
 14174  0C33  00FC               	movwf	InsertTxDataSep@index
 14175  0C34  31A6  26B7  318B   	fcall	_InsertTxDataSep
 14176  0C37  087D               	movf	?_InsertTxDataSep+1,w
 14177  0C38  0140               	movlb	0	; select bank0
 14178  0C39  00CA               	movwf	PollGPS@index+1
 14179  0C3A  087C               	movf	?_InsertTxDataSep,w
 14180  0C3B  00C9               	movwf	PollGPS@index
 14181                           
 14182                           ;main.c: 554:             if (strcmp(GetAtRowCSV(nmea_data, PUBX_EW), "W") == 0)
 14183  0C3C  30BA               	movlw	low (STR_9| (0+32768))
 14184  0C3D  00FB               	movwf	strcmp@r
 14185  0C3E  30A8               	movlw	high (STR_9| (0+32768))
 14186  0C3F  00FC               	movwf	strcmp@r+1
 14187  0C40  30D8               	movlw	216
 14188  0C41  00F6               	movwf	GetAtRowCSV@src
 14189  0C42  3026               	movlw	38
 14190  0C43  00F7               	movwf	GetAtRowCSV@src+1
 14191  0C44  3000               	movlw	0
 14192  0C45  00F9               	movwf	GetAtRowCSV@column+1
 14193  0C46  3006               	movlw	6
 14194  0C47  00F8               	movwf	GetAtRowCSV@column
 14195  0C48  3190  20D9  318B   	fcall	_GetAtRowCSV
 14196  0C4B  3199  21F2  318B   	fcall	_strcmp
 14197  0C4E  087B               	movf	?_strcmp,w
 14198  0C4F  047C               	iorwf	?_strcmp+1,w
 14199  0C50  1D03               	btfss	3,2
 14200  0C51  2C6B               	goto	l812
 14201                           
 14202                           ;main.c: 555:             {;main.c: 556:                 index = Insert(txdata, '-', ind
      +                          ex, 140);
 14203  0C52  3064               	movlw	100
 14204  0C53  00F5               	movwf	Insert@dest
 14205  0C54  3027               	movlw	39
 14206  0C55  00F6               	movwf	Insert@dest+1
 14207  0C56  302D               	movlw	45
 14208  0C57  0140               	movlb	0	; select bank0
 14209  0C58  00B9               	movwf	??_PollGPS
 14210  0C59  0839               	movf	??_PollGPS,w
 14211  0C5A  00F7               	movwf	Insert@src
 14212  0C5B  084A               	movf	PollGPS@index+1,w
 14213  0C5C  00F9               	movwf	Insert@index+1
 14214  0C5D  0849               	movf	PollGPS@index,w
 14215  0C5E  00F8               	movwf	Insert@index
 14216  0C5F  308C               	movlw	140
 14217  0C60  00FA               	movwf	Insert@destLimit
 14218  0C61  3000               	movlw	0
 14219  0C62  00FB               	movwf	Insert@destLimit+1
 14220  0C63  3192  22E1  318B   	fcall	_Insert
 14221  0C66  0876               	movf	?_Insert+1,w
 14222  0C67  0140               	movlb	0	; select bank0
 14223  0C68  00CA               	movwf	PollGPS@index+1
 14224  0C69  0875               	movf	?_Insert,w
 14225  0C6A  00C9               	movwf	PollGPS@index
 14226  0C6B                     l812:	
 14227                           ;main.c: 557:             }
 14228                           
 14229                           
 14230                           ;main.c: 558:             index = InsertString(txdata, GetAtRowCSV(nmea_data, PUBX_LONG)
      +                          , index, 140);
 14231  0C6B  3064               	movlw	100
 14232  0C6C  0140               	movlb	0	; select bank0
 14233  0C6D  00A9               	movwf	InsertString@dest
 14234  0C6E  3027               	movlw	39
 14235  0C6F  00AA               	movwf	InsertString@dest+1
 14236  0C70  30D8               	movlw	216
 14237  0C71  00F6               	movwf	GetAtRowCSV@src
 14238  0C72  3026               	movlw	38
 14239  0C73  00F7               	movwf	GetAtRowCSV@src+1
 14240  0C74  3000               	movlw	0
 14241  0C75  00F9               	movwf	GetAtRowCSV@column+1
 14242  0C76  3005               	movlw	5
 14243  0C77  00F8               	movwf	GetAtRowCSV@column
 14244  0C78  3190  20D9  318B   	fcall	_GetAtRowCSV
 14245  0C7B  0140               	movlb	0	; select bank0
 14246  0C7C  00AB               	movwf	InsertString@src
 14247  0C7D  3001               	movlw	1
 14248  0C7E  00AC               	movwf	InsertString@src+1
 14249  0C7F  084A               	movf	PollGPS@index+1,w
 14250  0C80  00AE               	movwf	InsertString@index+1
 14251  0C81  0849               	movf	PollGPS@index,w
 14252  0C82  00AD               	movwf	InsertString@index
 14253  0C83  308C               	movlw	140
 14254  0C84  00AF               	movwf	InsertString@destLimit
 14255  0C85  3000               	movlw	0
 14256  0C86  00B0               	movwf	InsertString@destLimit+1
 14257  0C87  319F  2707  318B   	fcall	_InsertString
 14258  0C8A  0140               	movlb	0	; select bank0
 14259  0C8B  082A               	movf	?_InsertString+1,w
 14260  0C8C  00CA               	movwf	PollGPS@index+1
 14261  0C8D  0829               	movf	?_InsertString,w
 14262  0C8E  00C9               	movwf	PollGPS@index
 14263                           
 14264                           ;main.c: 559:             index = InsertTxDataSep(index);
 14265  0C8F  084A               	movf	PollGPS@index+1,w
 14266  0C90  00FD               	movwf	InsertTxDataSep@index+1
 14267  0C91  0849               	movf	PollGPS@index,w
 14268  0C92  00FC               	movwf	InsertTxDataSep@index
 14269  0C93  31A6  26B7  318B   	fcall	_InsertTxDataSep
 14270  0C96  087D               	movf	?_InsertTxDataSep+1,w
 14271  0C97  0140               	movlb	0	; select bank0
 14272  0C98  00CA               	movwf	PollGPS@index+1
 14273  0C99  087C               	movf	?_InsertTxDataSep,w
 14274  0C9A  00C9               	movwf	PollGPS@index
 14275                           
 14276                           ;main.c: 561:             index = InsertTxData(index, PUBX_ALT);
 14277  0C9B  084A               	movf	PollGPS@index+1,w
 14278  0C9C  00B6               	movwf	InsertTxData@index+1
 14279  0C9D  0849               	movf	PollGPS@index,w
 14280  0C9E  00B5               	movwf	InsertTxData@index
 14281  0C9F  3000               	movlw	0
 14282  0CA0  00B8               	movwf	InsertTxData@field+1
 14283  0CA1  3007               	movlw	7
 14284  0CA2  00B7               	movwf	InsertTxData@field
 14285  0CA3  319A  2250  318B   	fcall	_InsertTxData
 14286  0CA6  0140               	movlb	0	; select bank0
 14287  0CA7  0836               	movf	?_InsertTxData+1,w
 14288  0CA8  00CA               	movwf	PollGPS@index+1
 14289  0CA9  0835               	movf	?_InsertTxData,w
 14290  0CAA  00C9               	movwf	PollGPS@index
 14291                           
 14292                           ;main.c: 562:             index = InsertTxData(index, PUBX_HDOP);
 14293  0CAB  084A               	movf	PollGPS@index+1,w
 14294  0CAC  00B6               	movwf	InsertTxData@index+1
 14295  0CAD  0849               	movf	PollGPS@index,w
 14296  0CAE  00B5               	movwf	InsertTxData@index
 14297  0CAF  3000               	movlw	0
 14298  0CB0  00B8               	movwf	InsertTxData@field+1
 14299  0CB1  3009               	movlw	9
 14300  0CB2  00B7               	movwf	InsertTxData@field
 14301  0CB3  319A  2250  318B   	fcall	_InsertTxData
 14302  0CB6  0140               	movlb	0	; select bank0
 14303  0CB7  0836               	movf	?_InsertTxData+1,w
 14304  0CB8  00CA               	movwf	PollGPS@index+1
 14305  0CB9  0835               	movf	?_InsertTxData,w
 14306  0CBA  00C9               	movwf	PollGPS@index
 14307                           
 14308                           ;main.c: 563:             index = InsertTxData(index, PUBX_VDOP);
 14309  0CBB  084A               	movf	PollGPS@index+1,w
 14310  0CBC  00B6               	movwf	InsertTxData@index+1
 14311  0CBD  0849               	movf	PollGPS@index,w
 14312  0CBE  00B5               	movwf	InsertTxData@index
 14313  0CBF  3000               	movlw	0
 14314  0CC0  00B8               	movwf	InsertTxData@field+1
 14315  0CC1  300A               	movlw	10
 14316  0CC2  00B7               	movwf	InsertTxData@field
 14317  0CC3  319A  2250  318B   	fcall	_InsertTxData
 14318  0CC6  0140               	movlb	0	; select bank0
 14319  0CC7  0836               	movf	?_InsertTxData+1,w
 14320  0CC8  00CA               	movwf	PollGPS@index+1
 14321  0CC9  0835               	movf	?_InsertTxData,w
 14322  0CCA  00C9               	movwf	PollGPS@index
 14323                           
 14324                           ;main.c: 564:             index = InsertTxData(index, PUBX_SOG);
 14325  0CCB  084A               	movf	PollGPS@index+1,w
 14326  0CCC  00B6               	movwf	InsertTxData@index+1
 14327  0CCD  0849               	movf	PollGPS@index,w
 14328  0CCE  00B5               	movwf	InsertTxData@index
 14329  0CCF  3000               	movlw	0
 14330  0CD0  00B8               	movwf	InsertTxData@field+1
 14331  0CD1  300B               	movlw	11
 14332  0CD2  00B7               	movwf	InsertTxData@field
 14333  0CD3  319A  2250  318B   	fcall	_InsertTxData
 14334  0CD6  0140               	movlb	0	; select bank0
 14335  0CD7  0836               	movf	?_InsertTxData+1,w
 14336  0CD8  00CA               	movwf	PollGPS@index+1
 14337  0CD9  0835               	movf	?_InsertTxData,w
 14338  0CDA  00C9               	movwf	PollGPS@index
 14339                           
 14340                           ;main.c: 565:             index = InsertTxData(index, PUBX_COG);
 14341  0CDB  084A               	movf	PollGPS@index+1,w
 14342  0CDC  00B6               	movwf	InsertTxData@index+1
 14343  0CDD  0849               	movf	PollGPS@index,w
 14344  0CDE  00B5               	movwf	InsertTxData@index
 14345  0CDF  3000               	movlw	0
 14346  0CE0  00B8               	movwf	InsertTxData@field+1
 14347  0CE1  300C               	movlw	12
 14348  0CE2  00B7               	movwf	InsertTxData@field
 14349  0CE3  319A  2250  318B   	fcall	_InsertTxData
 14350  0CE6  0140               	movlb	0	; select bank0
 14351  0CE7  0836               	movf	?_InsertTxData+1,w
 14352  0CE8  00CA               	movwf	PollGPS@index+1
 14353  0CE9  0835               	movf	?_InsertTxData,w
 14354  0CEA  00C9               	movwf	PollGPS@index
 14355                           
 14356                           ;main.c: 566:             index = InsertTxData(index, PUBX_VVEL);
 14357  0CEB  084A               	movf	PollGPS@index+1,w
 14358  0CEC  00B6               	movwf	InsertTxData@index+1
 14359  0CED  0849               	movf	PollGPS@index,w
 14360  0CEE  00B5               	movwf	InsertTxData@index
 14361  0CEF  3000               	movlw	0
 14362  0CF0  00B8               	movwf	InsertTxData@field+1
 14363  0CF1  300D               	movlw	13
 14364  0CF2  00B7               	movwf	InsertTxData@field
 14365  0CF3  319A  2250  318B   	fcall	_InsertTxData
 14366  0CF6  0140               	movlb	0	; select bank0
 14367  0CF7  0836               	movf	?_InsertTxData+1,w
 14368  0CF8  00CA               	movwf	PollGPS@index+1
 14369  0CF9  0835               	movf	?_InsertTxData,w
 14370  0CFA  00C9               	movwf	PollGPS@index
 14371                           
 14372                           ;main.c: 567:             index = InsertTxData(index, PUBX_NAVSTAT);
 14373  0CFB  084A               	movf	PollGPS@index+1,w
 14374  0CFC  00B6               	movwf	InsertTxData@index+1
 14375  0CFD  0849               	movf	PollGPS@index,w
 14376  0CFE  00B5               	movwf	InsertTxData@index
 14377  0CFF  3000               	movlw	0
 14378  0D00  00B8               	movwf	InsertTxData@field+1
 14379  0D01  3008               	movlw	8
 14380  0D02  00B7               	movwf	InsertTxData@field
 14381  0D03  319A  2250         	fcall	_InsertTxData
 14382  0D05  0140               	movlb	0	; select bank0
 14383  0D06  0836               	movf	?_InsertTxData+1,w
 14384  0D07  00CA               	movwf	PollGPS@index+1
 14385  0D08  0835               	movf	?_InsertTxData,w
 14386  0D09  00C9               	movwf	PollGPS@index
 14387                           
 14388                           ;main.c: 568:             return 1;
 14389  0D0A  3001               	movlw	1
 14390  0D0B  0008               	return
 14391  0D0C                     l4654:	
 14392                           
 14393                           ;main.c: 571:         {;main.c: 573:             if (EUSART1_is_rx_ready())
 14394  0D0C  3198  2000  318B   	fcall	_EUSART1_is_rx_ready
 14395  0D0F  3A00               	xorlw	0
 14396  0D10  1903               	skipnz
 14397  0D11  2B25               	goto	l4666
 14398                           
 14399                           ;main.c: 574:             {;main.c: 575:                 char byte = EUSART1_Read();
 14400  0D12  31A6  2604  318B   	fcall	_EUSART1_Read
 14401  0D15  0140               	movlb	0	; select bank0
 14402  0D16  00B9               	movwf	??_PollGPS
 14403  0D17  0839               	movf	??_PollGPS,w
 14404  0D18  00C6               	movwf	PollGPS@byte
 14405                           
 14406                           ;main.c: 580:                 nmea_data[index] = byte;
 14407  0D19  30D8               	movlw	216
 14408  0D1A  00B9               	movwf	??_PollGPS
 14409  0D1B  3026               	movlw	38
 14410  0D1C  00BA               	movwf	??_PollGPS+1
 14411  0D1D  0849               	movf	PollGPS@index,w
 14412  0D1E  0739               	addwf	??_PollGPS,w
 14413  0D1F  00BB               	movwf	??_PollGPS+2
 14414  0D20  084A               	movf	PollGPS@index+1,w
 14415  0D21  3D3A               	addwfc	??_PollGPS+1,w
 14416  0D22  00BC               	movwf	??_PollGPS+3
 14417  0D23  083B               	movf	??_PollGPS+2,w
 14418  0D24  0086               	movwf	6
 14419  0D25  083C               	movf	??_PollGPS+3,w
 14420  0D26  0087               	movwf	7
 14421  0D27  0846               	movf	PollGPS@byte,w
 14422  0D28  0081               	movwf	1
 14423                           
 14424                           ;main.c: 582:                 if (byte == '\n')
 14425  0D29  300A               	movlw	10
 14426  0D2A  0646               	xorwf	PollGPS@byte,w
 14427  0D2B  1D03               	btfss	3,2
 14428  0D2C  2D2F               	goto	l4664
 14429                           
 14430                           ;main.c: 583:                 {;main.c: 584:                     eusart_complete = 1;
 14431  0D2D  01C5               	clrf	PollGPS@eusart_complete
 14432  0D2E  0AC5               	incf	PollGPS@eusart_complete,f
 14433  0D2F                     l4664:	
 14434                           
 14435                           ;main.c: 589:                 index++;
 14436  0D2F  3001               	movlw	1
 14437  0D30  07C9               	addwf	PollGPS@index,f
 14438  0D31  3000               	movlw	0
 14439  0D32  3DCA               	addwfc	PollGPS@index+1,f
 14440  0D33  2B25               	goto	l4666
 14441  0D34                     l4668:	
 14442                           
 14443                           ;main.c: 595:     return success;
 14444  0D34  0843               	movf	PollGPS@success,w
 14445  0D35  0008               	return
 14446  0D36                     __end_of_PollGPS:	
 14447                           
 14448                           	psect	text32
 14449  19F2                     __ptext32:	
 14450 ;; *************** function _strcmp *****************
 14451 ;; Defined at:
 14452 ;;		line 3 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\strcmp.c"
 14453 ;; Parameters:    Size  Location     Type
 14454 ;;  l               1    wreg     PTR const unsigned char 
 14455 ;;		 -> csvField(20), 
 14456 ;;  r               2   11[COMMON] PTR const unsigned char 
 14457 ;;		 -> STR_9(2), STR_8(2), 
 14458 ;; Auto vars:     Size  Location     Type
 14459 ;;  l               1    8[BANK0 ] PTR const unsigned char 
 14460 ;;		 -> csvField(20), 
 14461 ;; Return value:  Size  Location     Type
 14462 ;;                  2   11[COMMON] int 
 14463 ;; Registers used:
 14464 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 14465 ;; Tracked objects:
 14466 ;;		On entry : 0/0
 14467 ;;		On exit  : 0/0
 14468 ;;		Unchanged: 0/0
 14469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14470 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14471 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14472 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14473 ;;      Totals:         3       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14474 ;;Total ram usage:        4 bytes
 14475 ;; Hardware stack levels used:    1
 14476 ;; Hardware stack levels required when called:    3
 14477 ;; This function calls:
 14478 ;;		Nothing
 14479 ;; This function is called by:
 14480 ;;		_PollGPS
 14481 ;; This function uses a non-reentrant model
 14482 ;;
 14483                           
 14484                           
 14485                           ;psect for function _strcmp
 14486  19F2                     _strcmp:	
 14487                           
 14488                           ;incstack = 0
 14489                           ; Regs used in _strcmp: [wreg-fsr1h+status,2+status,0+pclath]
 14490                           ;strcmp@l stored from wreg
 14491  19F2  0140               	movlb	0	; select bank0
 14492  19F3  00A8               	movwf	strcmp@l
 14493  19F4  2A04               	goto	l4322
 14494  19F5                     l4324:	
 14495  19F5  0828               	movf	strcmp@l,w
 14496  19F6  0086               	movwf	6
 14497  19F7  3001               	movlw	1	; select bank2/3
 14498  19F8  0087               	movwf	7
 14499  19F9  0801               	movf	1,w
 14500  19FA  1903               	btfsc	3,2
 14501  19FB  2A12               	goto	l4326
 14502  19FC  3001               	movlw	1
 14503  19FD  00FD               	movwf	??_strcmp
 14504  19FE  087D               	movf	??_strcmp,w
 14505  19FF  07A8               	addwf	strcmp@l,f
 14506  1A00  3001               	movlw	1
 14507  1A01  07FB               	addwf	strcmp@r,f
 14508  1A02  3000               	movlw	0
 14509  1A03  3DFC               	addwfc	strcmp@r+1,f
 14510  1A04                     l4322:	
 14511  1A04  087B               	movf	strcmp@r,w
 14512  1A05  0084               	movwf	4
 14513  1A06  087C               	movf	strcmp@r+1,w
 14514  1A07  0085               	movwf	5
 14515  1A08  0800               	movf	0,w	;code access
 14516  1A09  00FD               	movwf	??_strcmp
 14517  1A0A  0828               	movf	strcmp@l,w
 14518  1A0B  0086               	movwf	6
 14519  1A0C  3001               	movlw	1	; select bank2/3
 14520  1A0D  0087               	movwf	7
 14521  1A0E  0801               	movf	1,w
 14522  1A0F  067D               	xorwf	??_strcmp,w
 14523  1A10  1903               	btfsc	3,2
 14524  1A11  29F5               	goto	l4324
 14525  1A12                     l4326:	
 14526  1A12  0828               	movf	strcmp@l,w
 14527  1A13  0086               	movwf	6
 14528  1A14  3001               	movlw	1	; select bank2/3
 14529  1A15  0087               	movwf	7
 14530  1A16  087B               	movf	strcmp@r,w
 14531  1A17  0084               	movwf	4
 14532  1A18  087C               	movf	strcmp@r+1,w
 14533  1A19  0085               	movwf	5
 14534  1A1A  0800               	movf	0,w	;code access
 14535  1A1B  0201               	subwf	1,w
 14536  1A1C  00FB               	movwf	?_strcmp
 14537  1A1D  01FC               	clrf	?_strcmp+1
 14538  1A1E  1C03               	skipc
 14539  1A1F  03FC               	decf	?_strcmp+1,f
 14540  1A20  0008               	return
 14541  1A21                     __end_of_strcmp:	
 14542                           
 14543                           	psect	text33
 14544  1870                     __ptext33:	
 14545 ;; *************** function _WriteGPS *****************
 14546 ;; Defined at:
 14547 ;;		line 310 in file "main.c"
 14548 ;; Parameters:    Size  Location     Type
 14549 ;;  message         2    5[COMMON] PTR unsigned char 
 14550 ;;		 -> STR_7(14), STR_6(26), STR_5(26), STR_4(26), 
 14551 ;;		 -> STR_3(26), STR_2(26), STR_1(26), 
 14552 ;; Auto vars:     Size  Location     Type
 14553 ;;  i               2   10[COMMON] int 
 14554 ;;  counti          2    8[COMMON] int 
 14555 ;; Return value:  Size  Location     Type
 14556 ;;                  1    wreg      void 
 14557 ;; Registers used:
 14558 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 14559 ;; Tracked objects:
 14560 ;;		On entry : 0/0
 14561 ;;		On exit  : 0/0
 14562 ;;		Unchanged: 0/0
 14563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14564 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14565 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14566 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14567 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14568 ;;Total ram usage:        7 bytes
 14569 ;; Hardware stack levels used:    1
 14570 ;; Hardware stack levels required when called:    4
 14571 ;; This function calls:
 14572 ;;		_EUSART1_Write
 14573 ;;		_strlen
 14574 ;; This function is called by:
 14575 ;;		_SetupGPS
 14576 ;;		_PollGPS
 14577 ;; This function uses a non-reentrant model
 14578 ;;
 14579                           
 14580                           
 14581                           ;psect for function _WriteGPS
 14582  1870                     _WriteGPS:	
 14583                           
 14584                           ;main.c: 310: void WriteGPS(char* message);main.c: 311: {;main.c: 312:     for (int i = 
      +                          0, counti = strlen(message); i <= counti; i++)
 14585                           
 14586                           ;incstack = 0
 14587                           ; Regs used in _WriteGPS: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 14588  1870  01FA               	clrf	WriteGPS@i
 14589  1871  01FB               	clrf	WriteGPS@i+1
 14590  1872  0876               	movf	WriteGPS@message+1,w
 14591  1873  00F1               	movwf	strlen@s+1
 14592  1874  0875               	movf	WriteGPS@message,w
 14593  1875  00F0               	movwf	strlen@s
 14594  1876  31A6  26A0  3198   	fcall	_strlen
 14595  1879  0871               	movf	?_strlen+1,w
 14596  187A  00F9               	movwf	WriteGPS@counti+1
 14597  187B  0870               	movf	?_strlen,w
 14598  187C  00F8               	movwf	WriteGPS@counti
 14599  187D                     l4234:	
 14600  187D  0879               	movf	WriteGPS@counti+1,w
 14601  187E  3A80               	xorlw	128
 14602  187F  00F7               	movwf	??_WriteGPS
 14603  1880  087B               	movf	WriteGPS@i+1,w
 14604  1881  3A80               	xorlw	128
 14605  1882  0277               	subwf	??_WriteGPS,w
 14606  1883  1D03               	skipz
 14607  1884  2887               	goto	u3845
 14608  1885  087A               	movf	WriteGPS@i,w
 14609  1886  0278               	subwf	WriteGPS@counti,w
 14610  1887                     u3845:	
 14611  1887  1C03               	btfss	3,0
 14612  1888  0008               	return
 14613                           
 14614                           ;main.c: 313:     {;main.c: 314:         EUSART1_Write((uint8_t)message[i]);
 14615  1889  0875               	movf	WriteGPS@message,w
 14616  188A  077A               	addwf	WriteGPS@i,w
 14617  188B  0084               	movwf	4
 14618  188C  0876               	movf	WriteGPS@message+1,w
 14619  188D  3D7B               	addwfc	WriteGPS@i+1,w
 14620  188E  0085               	movwf	5
 14621  188F  0800               	movf	0,w	;code access
 14622  1890  31A5  25D4  3198   	fcall	_EUSART1_Write
 14623                           
 14624                           ;main.c: 315:     }
 14625  1893  3001               	movlw	1
 14626  1894  07FA               	addwf	WriteGPS@i,f
 14627  1895  3000               	movlw	0
 14628  1896  3DFB               	addwfc	WriteGPS@i+1,f
 14629  1897  287D               	goto	l4234
 14630  1898                     __end_of_WriteGPS:	
 14631                           
 14632                           	psect	text34
 14633  25D4                     __ptext34:	
 14634 ;; *************** function _EUSART1_Write *****************
 14635 ;; Defined at:
 14636 ;;		line 132 in file "mcc_generated_files/eusart1.c"
 14637 ;; Parameters:    Size  Location     Type
 14638 ;;  txData          1    wreg     unsigned char 
 14639 ;; Auto vars:     Size  Location     Type
 14640 ;;  txData          1    0[COMMON] unsigned char 
 14641 ;; Return value:  Size  Location     Type
 14642 ;;                  1    wreg      void 
 14643 ;; Registers used:
 14644 ;;		wreg
 14645 ;; Tracked objects:
 14646 ;;		On entry : 0/0
 14647 ;;		On exit  : 0/0
 14648 ;;		Unchanged: 0/0
 14649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14651 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14653 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14654 ;;Total ram usage:        1 bytes
 14655 ;; Hardware stack levels used:    1
 14656 ;; Hardware stack levels required when called:    3
 14657 ;; This function calls:
 14658 ;;		Nothing
 14659 ;; This function is called by:
 14660 ;;		_WriteGPS
 14661 ;;		_GPS_SendUBX
 14662 ;; This function uses a non-reentrant model
 14663 ;;
 14664                           
 14665                           
 14666                           ;psect for function _EUSART1_Write
 14667  25D4                     _EUSART1_Write:	
 14668                           
 14669                           ;incstack = 0
 14670                           ; Regs used in _EUSART1_Write: [wreg]
 14671                           ;EUSART1_Write@txData stored from wreg
 14672  25D4  00F0               	movwf	EUSART1_Write@txData
 14673  25D5                     l355:	
 14674                           ;mcc_generated_files/eusart1.c: 135:     {;mcc_generated_files/eusart1.c: 136:     }
 14675                           
 14676                           
 14677                           ;mcc_generated_files/eusart1.c: 134:     while(0 == PIR3bits.TX1IF)
 14678  25D5  014E               	movlb	14	; select bank14
 14679  25D6  1E0F               	btfss	15,4	;volatile
 14680  25D7  2DD5               	goto	l355
 14681                           
 14682                           ;mcc_generated_files/eusart1.c: 138:     TX1REG = txData;
 14683  25D8  0870               	movf	EUSART1_Write@txData,w
 14684  25D9  0142               	movlb	2	; select bank2
 14685  25DA  009A               	movwf	26	;volatile
 14686  25DB  0008               	return
 14687  25DC                     __end_of_EUSART1_Write:	
 14688                           
 14689                           	psect	text35
 14690  1A50                     __ptext35:	
 14691 ;; *************** function _InsertTxData *****************
 14692 ;; Defined at:
 14693 ;;		line 503 in file "main.c"
 14694 ;; Parameters:    Size  Location     Type
 14695 ;;  index           2   21[BANK0 ] int 
 14696 ;;  field           2   23[BANK0 ] int 
 14697 ;; Auto vars:     Size  Location     Type
 14698 ;;		None
 14699 ;; Return value:  Size  Location     Type
 14700 ;;                  2   21[BANK0 ] int 
 14701 ;; Registers used:
 14702 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14703 ;; Tracked objects:
 14704 ;;		On entry : 0/0
 14705 ;;		On exit  : 0/0
 14706 ;;		Unchanged: 0/0
 14707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14708 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14711 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14712 ;;Total ram usage:        4 bytes
 14713 ;; Hardware stack levels used:    1
 14714 ;; Hardware stack levels required when called:    6
 14715 ;; This function calls:
 14716 ;;		_GetAtRowCSV
 14717 ;;		_InsertString
 14718 ;;		_InsertTxDataSep
 14719 ;; This function is called by:
 14720 ;;		_PollGPS
 14721 ;; This function uses a non-reentrant model
 14722 ;;
 14723                           
 14724                           
 14725                           ;psect for function _InsertTxData
 14726  1A50                     _InsertTxData:	
 14727                           
 14728                           ;main.c: 503: int InsertTxData(int index, int field);main.c: 504: {;main.c: 505:     ind
      +                          ex = InsertString(txdata, GetAtRowCSV(nmea_data, field), index, 140);
 14729                           
 14730                           ;incstack = 0
 14731                           ; Regs used in _InsertTxData: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14732  1A50  3064               	movlw	100
 14733  1A51  0140               	movlb	0	; select bank0
 14734  1A52  00A9               	movwf	InsertString@dest
 14735  1A53  3027               	movlw	39
 14736  1A54  00AA               	movwf	InsertString@dest+1
 14737  1A55  30D8               	movlw	216
 14738  1A56  00F6               	movwf	GetAtRowCSV@src
 14739  1A57  3026               	movlw	38
 14740  1A58  00F7               	movwf	GetAtRowCSV@src+1
 14741  1A59  0838               	movf	InsertTxData@field+1,w
 14742  1A5A  00F9               	movwf	GetAtRowCSV@column+1
 14743  1A5B  0837               	movf	InsertTxData@field,w
 14744  1A5C  00F8               	movwf	GetAtRowCSV@column
 14745  1A5D  3190  20D9  319A   	fcall	_GetAtRowCSV
 14746  1A60  0140               	movlb	0	; select bank0
 14747  1A61  00AB               	movwf	InsertString@src
 14748  1A62  3001               	movlw	1
 14749  1A63  00AC               	movwf	InsertString@src+1
 14750  1A64  0836               	movf	InsertTxData@index+1,w
 14751  1A65  00AE               	movwf	InsertString@index+1
 14752  1A66  0835               	movf	InsertTxData@index,w
 14753  1A67  00AD               	movwf	InsertString@index
 14754  1A68  308C               	movlw	140
 14755  1A69  00AF               	movwf	InsertString@destLimit
 14756  1A6A  3000               	movlw	0
 14757  1A6B  00B0               	movwf	InsertString@destLimit+1
 14758  1A6C  319F  2707  319A   	fcall	_InsertString
 14759  1A6F  0140               	movlb	0	; select bank0
 14760  1A70  082A               	movf	?_InsertString+1,w
 14761  1A71  00B6               	movwf	InsertTxData@index+1
 14762  1A72  0829               	movf	?_InsertString,w
 14763  1A73  00B5               	movwf	InsertTxData@index
 14764                           
 14765                           ;main.c: 506:     return InsertTxDataSep(index);
 14766  1A74  0836               	movf	InsertTxData@index+1,w
 14767  1A75  00FD               	movwf	InsertTxDataSep@index+1
 14768  1A76  0835               	movf	InsertTxData@index,w
 14769  1A77  00FC               	movwf	InsertTxDataSep@index
 14770  1A78  31A6  26B7         	fcall	_InsertTxDataSep
 14771  1A7A  087D               	movf	?_InsertTxDataSep+1,w
 14772  1A7B  0140               	movlb	0	; select bank0
 14773  1A7C  00B6               	movwf	?_InsertTxData+1
 14774  1A7D  087C               	movf	?_InsertTxDataSep,w
 14775  1A7E  00B5               	movwf	?_InsertTxData
 14776  1A7F  0008               	return
 14777  1A80                     __end_of_InsertTxData:	
 14778                           
 14779                           	psect	text36
 14780  26B7                     __ptext36:	
 14781 ;; *************** function _InsertTxDataSep *****************
 14782 ;; Defined at:
 14783 ;;		line 498 in file "main.c"
 14784 ;; Parameters:    Size  Location     Type
 14785 ;;  index           2   12[COMMON] int 
 14786 ;; Auto vars:     Size  Location     Type
 14787 ;;		None
 14788 ;; Return value:  Size  Location     Type
 14789 ;;                  2   12[COMMON] int 
 14790 ;; Registers used:
 14791 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14792 ;; Tracked objects:
 14793 ;;		On entry : 0/0
 14794 ;;		On exit  : 0/0
 14795 ;;		Unchanged: 0/0
 14796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14797 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14799 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14800 ;;      Totals:         2       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14801 ;;Total ram usage:        3 bytes
 14802 ;; Hardware stack levels used:    1
 14803 ;; Hardware stack levels required when called:    5
 14804 ;; This function calls:
 14805 ;;		_Insert
 14806 ;; This function is called by:
 14807 ;;		_InsertTxData
 14808 ;;		_PollGPS
 14809 ;; This function uses a non-reentrant model
 14810 ;;
 14811                           
 14812                           
 14813                           ;psect for function _InsertTxDataSep
 14814  26B7                     _InsertTxDataSep:	
 14815                           
 14816                           ;main.c: 498: int InsertTxDataSep(int index);main.c: 499: {;main.c: 500:     return Inse
      +                          rt(txdata, ',', index, 140);
 14817                           
 14818                           ;incstack = 0
 14819                           ; Regs used in _InsertTxDataSep: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14820  26B7  3064               	movlw	100
 14821  26B8  00F5               	movwf	Insert@dest
 14822  26B9  3027               	movlw	39
 14823  26BA  00F6               	movwf	Insert@dest+1
 14824  26BB  302C               	movlw	44
 14825  26BC  0140               	movlb	0	; select bank0
 14826  26BD  00A9               	movwf	??_InsertTxDataSep
 14827  26BE  0829               	movf	??_InsertTxDataSep,w
 14828  26BF  00F7               	movwf	Insert@src
 14829  26C0  087D               	movf	InsertTxDataSep@index+1,w
 14830  26C1  00F9               	movwf	Insert@index+1
 14831  26C2  087C               	movf	InsertTxDataSep@index,w
 14832  26C3  00F8               	movwf	Insert@index
 14833  26C4  308C               	movlw	140
 14834  26C5  00FA               	movwf	Insert@destLimit
 14835  26C6  3000               	movlw	0
 14836  26C7  00FB               	movwf	Insert@destLimit+1
 14837  26C8  3192  22E1         	fcall	_Insert
 14838  26CA  0876               	movf	?_Insert+1,w
 14839  26CB  00FD               	movwf	?_InsertTxDataSep+1
 14840  26CC  0875               	movf	?_Insert,w
 14841  26CD  00FC               	movwf	?_InsertTxDataSep
 14842  26CE  0008               	return
 14843  26CF                     __end_of_InsertTxDataSep:	
 14844                           
 14845                           	psect	text37
 14846  1F07                     __ptext37:	
 14847 ;; *************** function _InsertString *****************
 14848 ;; Defined at:
 14849 ;;		line 112 in file "main.c"
 14850 ;; Parameters:    Size  Location     Type
 14851 ;;  dest            2    9[BANK0 ] PTR unsigned char 
 14852 ;;		 -> txdata(140), 
 14853 ;;  src             2   11[BANK0 ] PTR unsigned char 
 14854 ;;		 -> checksum(6), STR_10(7), main@convertedNumber(16), csvField(20), 
 14855 ;;  index           2   13[BANK0 ] int 
 14856 ;;  destLimit       2   15[BANK0 ] int 
 14857 ;; Auto vars:     Size  Location     Type
 14858 ;;  i               2   19[BANK0 ] int 
 14859 ;;  counti          2   17[BANK0 ] int 
 14860 ;; Return value:  Size  Location     Type
 14861 ;;                  2    9[BANK0 ] int 
 14862 ;; Registers used:
 14863 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14864 ;; Tracked objects:
 14865 ;;		On entry : 0/0
 14866 ;;		On exit  : 0/0
 14867 ;;		Unchanged: 0/0
 14868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14869 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14870 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14871 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14872 ;;      Totals:         1      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14873 ;;Total ram usage:       13 bytes
 14874 ;; Hardware stack levels used:    1
 14875 ;; Hardware stack levels required when called:    5
 14876 ;; This function calls:
 14877 ;;		_Insert
 14878 ;;		_strlen
 14879 ;; This function is called by:
 14880 ;;		_InsertTxData
 14881 ;;		_PollGPS
 14882 ;;		_main
 14883 ;; This function uses a non-reentrant model
 14884 ;;
 14885                           
 14886                           
 14887                           ;psect for function _InsertString
 14888  1F07                     _InsertString:	
 14889                           
 14890                           ;main.c: 112: int InsertString(char* dest, char* src, int index, int destLimit);main.c: 
      +                          113: {;main.c: 114:     for (int i = 0, counti = strlen(src); i < counti && index < dest
      +                          Limit; i++)
 14891                           
 14892                           ;incstack = 0
 14893                           ; Regs used in _InsertString: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14894  1F07  0140               	movlb	0	; select bank0
 14895  1F08  01B3               	clrf	InsertString@i
 14896  1F09  01B4               	clrf	InsertString@i+1
 14897  1F0A  082C               	movf	InsertString@src+1,w
 14898  1F0B  00F1               	movwf	strlen@s+1
 14899  1F0C  082B               	movf	InsertString@src,w
 14900  1F0D  00F0               	movwf	strlen@s
 14901  1F0E  31A6  26A0  319F   	fcall	_strlen
 14902  1F11  0871               	movf	?_strlen+1,w
 14903  1F12  0140               	movlb	0	; select bank0
 14904  1F13  00B2               	movwf	InsertString@counti+1
 14905  1F14  0870               	movf	?_strlen,w
 14906  1F15  00B1               	movwf	InsertString@counti
 14907  1F16  2F47               	goto	l3954
 14908  1F17                     l3956:	
 14909  1F17  0140               	movlb	0	; select bank0
 14910  1F18  082E               	movf	InsertString@index+1,w
 14911  1F19  3A80               	xorlw	128
 14912  1F1A  00FC               	movwf	??_InsertString
 14913  1F1B  0830               	movf	InsertString@destLimit+1,w
 14914  1F1C  3A80               	xorlw	128
 14915  1F1D  027C               	subwf	??_InsertString,w
 14916  1F1E  1D03               	skipz
 14917  1F1F  2F22               	goto	u3415
 14918  1F20  082F               	movf	InsertString@destLimit,w
 14919  1F21  022D               	subwf	InsertString@index,w
 14920  1F22                     u3415:	
 14921  1F22  1803               	btfsc	3,0
 14922  1F23  2F53               	goto	l3958
 14923                           
 14924                           ;main.c: 115:     {;main.c: 117:         index = Insert(dest, src[i], index, destLimit);
 14925  1F24  0140               	movlb	0	; select bank0
 14926  1F25  082A               	movf	InsertString@dest+1,w
 14927  1F26  00F6               	movwf	Insert@dest+1
 14928  1F27  0829               	movf	InsertString@dest,w
 14929  1F28  00F5               	movwf	Insert@dest
 14930  1F29  082B               	movf	InsertString@src,w
 14931  1F2A  0733               	addwf	InsertString@i,w
 14932  1F2B  0084               	movwf	4
 14933  1F2C  082C               	movf	InsertString@src+1,w
 14934  1F2D  3D34               	addwfc	InsertString@i+1,w
 14935  1F2E  0085               	movwf	5
 14936  1F2F  0800               	movf	0,w	;code access
 14937  1F30  00FC               	movwf	??_InsertString
 14938  1F31  087C               	movf	??_InsertString,w
 14939  1F32  00F7               	movwf	Insert@src
 14940  1F33  082E               	movf	InsertString@index+1,w
 14941  1F34  00F9               	movwf	Insert@index+1
 14942  1F35  082D               	movf	InsertString@index,w
 14943  1F36  00F8               	movwf	Insert@index
 14944  1F37  0830               	movf	InsertString@destLimit+1,w
 14945  1F38  00FB               	movwf	Insert@destLimit+1
 14946  1F39  082F               	movf	InsertString@destLimit,w
 14947  1F3A  00FA               	movwf	Insert@destLimit
 14948  1F3B  3192  22E1  319F   	fcall	_Insert
 14949  1F3E  0876               	movf	?_Insert+1,w
 14950  1F3F  0140               	movlb	0	; select bank0
 14951  1F40  00AE               	movwf	InsertString@index+1
 14952  1F41  0875               	movf	?_Insert,w
 14953  1F42  00AD               	movwf	InsertString@index
 14954                           
 14955                           ;main.c: 118:     }
 14956  1F43  3001               	movlw	1
 14957  1F44  07B3               	addwf	InsertString@i,f
 14958  1F45  3000               	movlw	0
 14959  1F46  3DB4               	addwfc	InsertString@i+1,f
 14960  1F47                     l3954:	
 14961  1F47  0834               	movf	InsertString@i+1,w
 14962  1F48  3A80               	xorlw	128
 14963  1F49  00FC               	movwf	??_InsertString
 14964  1F4A  0832               	movf	InsertString@counti+1,w
 14965  1F4B  3A80               	xorlw	128
 14966  1F4C  027C               	subwf	??_InsertString,w
 14967  1F4D  1D03               	skipz
 14968  1F4E  2F51               	goto	u3405
 14969  1F4F  0831               	movf	InsertString@counti,w
 14970  1F50  0233               	subwf	InsertString@i,w
 14971  1F51                     u3405:	
 14972  1F51  1C03               	btfss	3,0
 14973  1F52  2F17               	goto	l3956
 14974  1F53                     l3958:	
 14975                           
 14976                           ;main.c: 119:     return index;
 14977  1F53  0140               	movlb	0	; select bank0
 14978  1F54  082E               	movf	InsertString@index+1,w
 14979  1F55  00AA               	movwf	?_InsertString+1
 14980  1F56  082D               	movf	InsertString@index,w
 14981  1F57  00A9               	movwf	?_InsertString
 14982  1F58  0008               	return
 14983  1F59                     __end_of_InsertString:	
 14984                           
 14985                           	psect	text38
 14986  12E1                     __ptext38:	
 14987 ;; *************** function _Insert *****************
 14988 ;; Defined at:
 14989 ;;		line 93 in file "main.c"
 14990 ;; Parameters:    Size  Location     Type
 14991 ;;  dest            2    5[COMMON] PTR unsigned char 
 14992 ;;		 -> txdata(140), 
 14993 ;;  src             1    7[COMMON] unsigned char 
 14994 ;;  index           2    8[COMMON] int 
 14995 ;;  destLimit       2   10[COMMON] int 
 14996 ;; Auto vars:     Size  Location     Type
 14997 ;;  i               2    7[BANK0 ] int 
 14998 ;;  length          2    5[BANK0 ] int 
 14999 ;; Return value:  Size  Location     Type
 15000 ;;                  2    5[COMMON] int 
 15001 ;; Registers used:
 15002 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15003 ;; Tracked objects:
 15004 ;;		On entry : 0/0
 15005 ;;		On exit  : 0/0
 15006 ;;		Unchanged: 0/0
 15007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15008 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15009 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15010 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15011 ;;      Totals:         7       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15012 ;;Total ram usage:       16 bytes
 15013 ;; Hardware stack levels used:    1
 15014 ;; Hardware stack levels required when called:    4
 15015 ;; This function calls:
 15016 ;;		_strlen
 15017 ;; This function is called by:
 15018 ;;		_InsertString
 15019 ;;		_InsertTxDataSep
 15020 ;;		_PollGPS
 15021 ;;		_main
 15022 ;; This function uses a non-reentrant model
 15023 ;;
 15024                           
 15025                           
 15026                           ;psect for function _Insert
 15027  12E1                     _Insert:	
 15028                           
 15029                           ;main.c: 93: int Insert(char* dest, char src, int index, int destLimit);main.c: 94: {;ma
      +                          in.c: 95:     int length = strlen(dest);
 15030                           
 15031                           ;incstack = 0
 15032                           ; Regs used in _Insert: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15033  12E1  0876               	movf	Insert@dest+1,w
 15034  12E2  00F1               	movwf	strlen@s+1
 15035  12E3  0875               	movf	Insert@dest,w
 15036  12E4  00F0               	movwf	strlen@s
 15037  12E5  31A6  26A0  3192   	fcall	_strlen
 15038  12E8  0871               	movf	?_strlen+1,w
 15039  12E9  0140               	movlb	0	; select bank0
 15040  12EA  00A6               	movwf	Insert@length+1
 15041  12EB  0870               	movf	?_strlen,w
 15042  12EC  00A5               	movwf	Insert@length
 15043                           
 15044                           ;main.c: 96:     if (length < destLimit - 1)
 15045  12ED  087A               	movf	Insert@destLimit,w
 15046  12EE  3EFF               	addlw	255
 15047  12EF  00A0               	movwf	??_Insert
 15048  12F0  30FF               	movlw	255
 15049  12F1  3D7B               	addwfc	Insert@destLimit+1,w
 15050  12F2  00A1               	movwf	??_Insert+1
 15051  12F3  0826               	movf	Insert@length+1,w
 15052  12F4  3A80               	xorlw	128
 15053  12F5  00A2               	movwf	??_Insert+2
 15054  12F6  0821               	movf	??_Insert+1,w
 15055  12F7  3A80               	xorlw	128
 15056  12F8  0222               	subwf	??_Insert+2,w
 15057  12F9  1D03               	skipz
 15058  12FA  2AFD               	goto	u2825
 15059  12FB  0820               	movf	??_Insert,w
 15060  12FC  0225               	subwf	Insert@length,w
 15061  12FD                     u2825:	
 15062  12FD  1803               	skipnc
 15063  12FE  2B4A               	goto	l3602
 15064                           
 15065                           ;main.c: 97:     {;main.c: 98:         dest[length + 1] = '\0';
 15066  12FF  0140               	movlb	0	; select bank0
 15067  1300  0825               	movf	Insert@length,w
 15068  1301  0775               	addwf	Insert@dest,w
 15069  1302  00A0               	movwf	??_Insert
 15070  1303  0826               	movf	Insert@length+1,w
 15071  1304  3D76               	addwfc	Insert@dest+1,w
 15072  1305  00A1               	movwf	??_Insert+1
 15073  1306  0820               	movf	??_Insert,w
 15074  1307  0086               	movwf	6
 15075  1308  0821               	movf	??_Insert+1,w
 15076  1309  0087               	movwf	7
 15077  130A  3141               	addfsr 1,1
 15078  130B  0181               	clrf	1
 15079                           
 15080                           ;main.c: 99:         for (int i = length; i > index; i--)
 15081  130C  0826               	movf	Insert@length+1,w
 15082  130D  00A8               	movwf	Insert@i+1
 15083  130E  0825               	movf	Insert@length,w
 15084  130F  00A7               	movwf	Insert@i
 15085  1310                     l3598:	
 15086  1310  0879               	movf	Insert@index+1,w
 15087  1311  3A80               	xorlw	128
 15088  1312  00A0               	movwf	??_Insert
 15089  1313  0828               	movf	Insert@i+1,w
 15090  1314  3A80               	xorlw	128
 15091  1315  0220               	subwf	??_Insert,w
 15092  1316  1D03               	skipz
 15093  1317  2B1A               	goto	u2835
 15094  1318  0827               	movf	Insert@i,w
 15095  1319  0278               	subwf	Insert@index,w
 15096  131A                     u2835:	
 15097  131A  1803               	btfsc	3,0
 15098  131B  2B3C               	goto	l3600
 15099                           
 15100                           ;main.c: 100:         {;main.c: 101:             dest[i] = dest[i - 1];
 15101  131C  0140               	movlb	0	; select bank0
 15102  131D  0827               	movf	Insert@i,w
 15103  131E  0775               	addwf	Insert@dest,w
 15104  131F  00A0               	movwf	??_Insert
 15105  1320  0828               	movf	Insert@i+1,w
 15106  1321  3D76               	addwfc	Insert@dest+1,w
 15107  1322  00A1               	movwf	??_Insert+1
 15108  1323  0820               	movf	??_Insert,w
 15109  1324  3EFF               	addlw	255
 15110  1325  0086               	movwf	6
 15111  1326  30FF               	movlw	255
 15112  1327  3D21               	addwfc	??_Insert+1,w
 15113  1328  0087               	movwf	7
 15114  1329  0801               	movf	1,w
 15115  132A  00A2               	movwf	??_Insert+2
 15116  132B  0827               	movf	Insert@i,w
 15117  132C  0775               	addwf	Insert@dest,w
 15118  132D  00A3               	movwf	??_Insert+3
 15119  132E  0828               	movf	Insert@i+1,w
 15120  132F  3D76               	addwfc	Insert@dest+1,w
 15121  1330  00A4               	movwf	??_Insert+4
 15122  1331  0823               	movf	??_Insert+3,w
 15123  1332  0086               	movwf	6
 15124  1333  0824               	movf	??_Insert+4,w
 15125  1334  0087               	movwf	7
 15126  1335  0822               	movf	??_Insert+2,w
 15127  1336  0081               	movwf	1
 15128                           
 15129                           ;main.c: 102:         }
 15130  1337  30FF               	movlw	255
 15131  1338  07A7               	addwf	Insert@i,f
 15132  1339  30FF               	movlw	255
 15133  133A  3DA8               	addwfc	Insert@i+1,f
 15134  133B  2B10               	goto	l3598
 15135  133C                     l3600:	
 15136                           
 15137                           ;main.c: 103:         dest[index] = src;
 15138  133C  0878               	movf	Insert@index,w
 15139  133D  0775               	addwf	Insert@dest,w
 15140  133E  0140               	movlb	0	; select bank0
 15141  133F  00A0               	movwf	??_Insert
 15142  1340  0879               	movf	Insert@index+1,w
 15143  1341  3D76               	addwfc	Insert@dest+1,w
 15144  1342  00A1               	movwf	??_Insert+1
 15145  1343  0820               	movf	??_Insert,w
 15146  1344  0086               	movwf	6
 15147  1345  0821               	movf	??_Insert+1,w
 15148  1346  0087               	movwf	7
 15149  1347  0877               	movf	Insert@src,w
 15150  1348  0081               	movwf	1
 15151                           
 15152                           ;main.c: 104:     }
 15153  1349  2B4F               	goto	l3606
 15154  134A                     l3602:	
 15155                           
 15156                           ;main.c: 106:     {;main.c: 107:         return index;
 15157  134A  0879               	movf	Insert@index+1,w
 15158  134B  00F6               	movwf	?_Insert+1
 15159  134C  0878               	movf	Insert@index,w
 15160  134D  00F5               	movwf	?_Insert
 15161  134E  0008               	return
 15162  134F                     l3606:	
 15163                           
 15164                           ;main.c: 109:     return index + 1;
 15165  134F  0878               	movf	Insert@index,w
 15166  1350  3E01               	addlw	1
 15167  1351  00F5               	movwf	?_Insert
 15168  1352  3000               	movlw	0
 15169  1353  3D79               	addwfc	Insert@index+1,w
 15170  1354  00F6               	movwf	?_Insert+1
 15171  1355  0008               	return
 15172  1356                     __end_of_Insert:	
 15173                           
 15174                           	psect	text39
 15175  10D9                     __ptext39:	
 15176 ;; *************** function _GetAtRowCSV *****************
 15177 ;; Defined at:
 15178 ;;		line 67 in file "main.c"
 15179 ;; Parameters:    Size  Location     Type
 15180 ;;  src             2    6[COMMON] PTR unsigned char 
 15181 ;;		 -> nmea_data(140), 
 15182 ;;  column          2    8[COMMON] int 
 15183 ;; Auto vars:     Size  Location     Type
 15184 ;;  i               2    6[BANK0 ] int 
 15185 ;;  counti          2    0[BANK0 ] int 
 15186 ;;  index           2    4[BANK0 ] int 
 15187 ;;  col             2    2[BANK0 ] int 
 15188 ;; Return value:  Size  Location     Type
 15189 ;;                  1    wreg      PTR unsigned char 
 15190 ;; Registers used:
 15191 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15192 ;; Tracked objects:
 15193 ;;		On entry : 0/0
 15194 ;;		On exit  : 0/0
 15195 ;;		Unchanged: 0/0
 15196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15197 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15198 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15199 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15200 ;;      Totals:         5       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15201 ;;Total ram usage:       13 bytes
 15202 ;; Hardware stack levels used:    1
 15203 ;; Hardware stack levels required when called:    4
 15204 ;; This function calls:
 15205 ;;		_ClearStringn
 15206 ;;		_strlen
 15207 ;; This function is called by:
 15208 ;;		_InsertTxData
 15209 ;;		_PollGPS
 15210 ;; This function uses a non-reentrant model
 15211 ;;
 15212                           
 15213                           
 15214                           ;psect for function _GetAtRowCSV
 15215  10D9                     _GetAtRowCSV:	
 15216                           
 15217                           ;main.c: 67: char* GetAtRowCSV(char* src, int column);main.c: 68: {;main.c: 69:     Clea
      +                          rStringn(csvField, 20);
 15218                           
 15219                           ;incstack = 0
 15220                           ; Regs used in _GetAtRowCSV: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15221  10D9  3014               	movlw	20
 15222  10DA  00F0               	movwf	ClearStringn@length
 15223  10DB  3000               	movlw	0
 15224  10DC  00F1               	movwf	ClearStringn@length+1
 15225  10DD  30D3               	movlw	(low (_csvField| (0+256)))& (0+255)
 15226  10DE  31A7  2757  3190   	fcall	_ClearStringn
 15227                           
 15228                           ;main.c: 70:     int col = 0;
 15229  10E1  0140               	movlb	0	; select bank0
 15230  10E2  01A2               	clrf	GetAtRowCSV@col
 15231  10E3  01A3               	clrf	GetAtRowCSV@col+1
 15232                           
 15233                           ;main.c: 71:     int index = 0;
 15234  10E4  01A4               	clrf	GetAtRowCSV@index
 15235  10E5  01A5               	clrf	GetAtRowCSV@index+1
 15236                           
 15237                           ;main.c: 72:     for (int i = 0, counti = strlen(src); i < counti; i++)
 15238  10E6  01A6               	clrf	GetAtRowCSV@i
 15239  10E7  01A7               	clrf	GetAtRowCSV@i+1
 15240  10E8  0877               	movf	GetAtRowCSV@src+1,w
 15241  10E9  00F1               	movwf	strlen@s+1
 15242  10EA  0876               	movf	GetAtRowCSV@src,w
 15243  10EB  00F0               	movwf	strlen@s
 15244  10EC  31A6  26A0  3190   	fcall	_strlen
 15245  10EF  0871               	movf	?_strlen+1,w
 15246  10F0  0140               	movlb	0	; select bank0
 15247  10F1  00A1               	movwf	GetAtRowCSV@counti+1
 15248  10F2  0870               	movf	?_strlen,w
 15249  10F3  00A0               	movwf	GetAtRowCSV@counti
 15250  10F4                     l652:	
 15251  10F4  0827               	movf	GetAtRowCSV@i+1,w
 15252  10F5  3A80               	xorlw	128
 15253  10F6  00FA               	movwf	??_GetAtRowCSV
 15254  10F7  0821               	movf	GetAtRowCSV@counti+1,w
 15255  10F8  3A80               	xorlw	128
 15256  10F9  027A               	subwf	??_GetAtRowCSV,w
 15257  10FA  1D03               	skipz
 15258  10FB  28FE               	goto	u3395
 15259  10FC  0820               	movf	GetAtRowCSV@counti,w
 15260  10FD  0226               	subwf	GetAtRowCSV@i,w
 15261  10FE                     u3395:	
 15262  10FE  1803               	btfsc	3,0
 15263  10FF  2939               	goto	l3942
 15264                           
 15265                           ;main.c: 73:     {;main.c: 74:         if (col == column)
 15266  1100  0879               	movf	GetAtRowCSV@column+1,w
 15267  1101  0140               	movlb	0	; select bank0
 15268  1102  0623               	xorwf	GetAtRowCSV@col+1,w
 15269  1103  1D03               	skipz
 15270  1104  2907               	goto	u3365
 15271  1105  0878               	movf	GetAtRowCSV@column,w
 15272  1106  0622               	xorwf	GetAtRowCSV@col,w
 15273  1107                     u3365:	
 15274  1107  1D03               	skipz
 15275  1108  2926               	goto	l3938
 15276                           
 15277                           ;main.c: 75:         {;main.c: 76:             if (src[i] == ',')
 15278  1109  0826               	movf	GetAtRowCSV@i,w
 15279  110A  0776               	addwf	GetAtRowCSV@src,w
 15280  110B  0086               	movwf	6
 15281  110C  0827               	movf	GetAtRowCSV@i+1,w
 15282  110D  3D77               	addwfc	GetAtRowCSV@src+1,w
 15283  110E  0087               	movwf	7
 15284  110F  302C               	movlw	44
 15285  1110  0601               	xorwf	1,w
 15286  1111  1903               	btfsc	3,2
 15287  1112  2939               	goto	l3942
 15288                           
 15289                           ;main.c: 80:             csvField[index] = src[i];
 15290  1113  0826               	movf	GetAtRowCSV@i,w
 15291  1114  0776               	addwf	GetAtRowCSV@src,w
 15292  1115  0086               	movwf	6
 15293  1116  0827               	movf	GetAtRowCSV@i+1,w
 15294  1117  3D77               	addwfc	GetAtRowCSV@src+1,w
 15295  1118  0087               	movwf	7
 15296  1119  0801               	movf	1,w
 15297  111A  00FA               	movwf	??_GetAtRowCSV
 15298  111B  0824               	movf	GetAtRowCSV@index,w
 15299  111C  3ED3               	addlw	(low (_csvField| (0+256)))& (0+255)
 15300  111D  0086               	movwf	6
 15301  111E  3001               	movlw	1	; select bank3/4
 15302  111F  0087               	movwf	7
 15303  1120  087A               	movf	??_GetAtRowCSV,w
 15304  1121  0081               	movwf	1
 15305                           
 15306                           ;main.c: 81:             index++;
 15307  1122  3001               	movlw	1
 15308  1123  07A4               	addwf	GetAtRowCSV@index,f
 15309  1124  3000               	movlw	0
 15310  1125  3DA5               	addwfc	GetAtRowCSV@index+1,f
 15311  1126                     l3938:	
 15312                           
 15313                           ;main.c: 83:         if (src[i] == ',')
 15314  1126  0826               	movf	GetAtRowCSV@i,w
 15315  1127  0776               	addwf	GetAtRowCSV@src,w
 15316  1128  0086               	movwf	6
 15317  1129  0827               	movf	GetAtRowCSV@i+1,w
 15318  112A  3D77               	addwfc	GetAtRowCSV@src+1,w
 15319  112B  0087               	movwf	7
 15320  112C  302C               	movlw	44
 15321  112D  0601               	xorwf	1,w
 15322  112E  1D03               	btfss	3,2
 15323  112F  2934               	goto	l657
 15324                           
 15325                           ;main.c: 84:         {;main.c: 85:             col++;
 15326  1130  3001               	movlw	1
 15327  1131  07A2               	addwf	GetAtRowCSV@col,f
 15328  1132  3000               	movlw	0
 15329  1133  3DA3               	addwfc	GetAtRowCSV@col+1,f
 15330  1134                     l657:	
 15331                           ;main.c: 86:         }
 15332                           
 15333                           
 15334                           ;main.c: 87:     }
 15335  1134  3001               	movlw	1
 15336  1135  07A6               	addwf	GetAtRowCSV@i,f
 15337  1136  3000               	movlw	0
 15338  1137  3DA7               	addwfc	GetAtRowCSV@i+1,f
 15339  1138  28F4               	goto	l652
 15340  1139                     l3942:	
 15341                           
 15342                           ;main.c: 88:     return csvField;
 15343  1139  30D3               	movlw	(low (_csvField| (0+256)))& (0+255)
 15344  113A  0008               	return
 15345  113B                     __end_of_GetAtRowCSV:	
 15346                           
 15347                           	psect	text40
 15348  2757                     __ptext40:	
 15349 ;; *************** function _ClearStringn *****************
 15350 ;; Defined at:
 15351 ;;		line 56 in file "main.c"
 15352 ;; Parameters:    Size  Location     Type
 15353 ;;  str             1    wreg     PTR unsigned char 
 15354 ;;		 -> csvField(20), 
 15355 ;;  length          2    0[COMMON] int 
 15356 ;; Auto vars:     Size  Location     Type
 15357 ;;  str             1    3[COMMON] PTR unsigned char 
 15358 ;;		 -> csvField(20), 
 15359 ;;  i               2    4[COMMON] int 
 15360 ;; Return value:  Size  Location     Type
 15361 ;;                  1    wreg      void 
 15362 ;; Registers used:
 15363 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 15364 ;; Tracked objects:
 15365 ;;		On entry : 0/0
 15366 ;;		On exit  : 0/0
 15367 ;;		Unchanged: 0/0
 15368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15369 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15370 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15371 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15372 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15373 ;;Total ram usage:        6 bytes
 15374 ;; Hardware stack levels used:    1
 15375 ;; Hardware stack levels required when called:    3
 15376 ;; This function calls:
 15377 ;;		Nothing
 15378 ;; This function is called by:
 15379 ;;		_GetAtRowCSV
 15380 ;; This function uses a non-reentrant model
 15381 ;;
 15382                           
 15383                           
 15384                           ;psect for function _ClearStringn
 15385  2757                     _ClearStringn:	
 15386                           
 15387                           ;incstack = 0
 15388                           ; Regs used in _ClearStringn: [wreg+fsr1l+fsr1h+status,2+status,0]
 15389                           ;ClearStringn@str stored from wreg
 15390  2757  00F3               	movwf	ClearStringn@str
 15391                           
 15392                           ;main.c: 56: void ClearStringn(char* str, int length);main.c: 57: {;main.c: 58:     for 
      +                          (int i = 0; i < length; i++)
 15393  2758  01F4               	clrf	ClearStringn@i
 15394  2759  01F5               	clrf	ClearStringn@i+1
 15395  275A                     l3584:	
 15396  275A  0875               	movf	ClearStringn@i+1,w
 15397  275B  3A80               	xorlw	128
 15398  275C  00F2               	movwf	??_ClearStringn
 15399  275D  0871               	movf	ClearStringn@length+1,w
 15400  275E  3A80               	xorlw	128
 15401  275F  0272               	subwf	??_ClearStringn,w
 15402  2760  1D03               	skipz
 15403  2761  2F64               	goto	u2815
 15404  2762  0870               	movf	ClearStringn@length,w
 15405  2763  0274               	subwf	ClearStringn@i,w
 15406  2764                     u2815:	
 15407  2764  1803               	btfsc	3,0
 15408  2765  0008               	return
 15409                           
 15410                           ;main.c: 59:     {;main.c: 60:         str[i] = '\0';
 15411  2766  0874               	movf	ClearStringn@i,w
 15412  2767  0773               	addwf	ClearStringn@str,w
 15413  2768  00F2               	movwf	??_ClearStringn
 15414  2769  0872               	movf	??_ClearStringn,w
 15415  276A  0086               	movwf	6
 15416  276B  3001               	movlw	1	; select bank2/3
 15417  276C  0087               	movwf	7
 15418  276D  0181               	clrf	1
 15419                           
 15420                           ;main.c: 61:     }
 15421  276E  3001               	movlw	1
 15422  276F  07F4               	addwf	ClearStringn@i,f
 15423  2770  3000               	movlw	0
 15424  2771  3DF5               	addwfc	ClearStringn@i+1,f
 15425  2772  2F5A               	goto	l3584
 15426  2773                     __end_of_ClearStringn:	
 15427                           
 15428                           	psect	text41
 15429  1800                     __ptext41:	
 15430 ;; *************** function _EUSART1_is_rx_ready *****************
 15431 ;; Defined at:
 15432 ;;		line 99 in file "mcc_generated_files/eusart1.c"
 15433 ;; Parameters:    Size  Location     Type
 15434 ;;		None
 15435 ;; Auto vars:     Size  Location     Type
 15436 ;;		None
 15437 ;; Return value:  Size  Location     Type
 15438 ;;                  1    wreg      _Bool 
 15439 ;; Registers used:
 15440 ;;		wreg, status,2, status,0
 15441 ;; Tracked objects:
 15442 ;;		On entry : 0/0
 15443 ;;		On exit  : 0/0
 15444 ;;		Unchanged: 0/0
 15445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15446 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15449 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15450 ;;Total ram usage:        0 bytes
 15451 ;; Hardware stack levels used:    1
 15452 ;; Hardware stack levels required when called:    3
 15453 ;; This function calls:
 15454 ;;		Nothing
 15455 ;; This function is called by:
 15456 ;;		_GPS_HasAcknowledged
 15457 ;;		_PollGPS
 15458 ;; This function uses a non-reentrant model
 15459 ;;
 15460                           
 15461                           
 15462                           ;psect for function _EUSART1_is_rx_ready
 15463  1800                     _EUSART1_is_rx_ready:	
 15464                           
 15465                           ;mcc_generated_files/eusart1.c: 101:     return (_Bool)(PIR3bits.RC1IF);
 15466                           
 15467                           ;incstack = 0
 15468                           ; Regs used in _EUSART1_is_rx_ready: [wreg+status,2+status,0]
 15469  1800  014E               	movlb	14	; select bank14
 15470  1801  0E0F               	swapf	15,w	;volatile
 15471  1802  0C89               	rrf	9,f
 15472  1803  3901               	andlw	1
 15473  1804  0008               	return
 15474  1805                     __end_of_EUSART1_is_rx_ready:	
 15475                           
 15476                           	psect	text42
 15477  2604                     __ptext42:	
 15478 ;; *************** function _EUSART1_Read *****************
 15479 ;; Defined at:
 15480 ;;		line 113 in file "mcc_generated_files/eusart1.c"
 15481 ;; Parameters:    Size  Location     Type
 15482 ;;		None
 15483 ;; Auto vars:     Size  Location     Type
 15484 ;;		None
 15485 ;; Return value:  Size  Location     Type
 15486 ;;                  1    wreg      unsigned char 
 15487 ;; Registers used:
 15488 ;;		wreg, status,2
 15489 ;; Tracked objects:
 15490 ;;		On entry : 0/0
 15491 ;;		On exit  : 0/0
 15492 ;;		Unchanged: 0/0
 15493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15497 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15498 ;;Total ram usage:        0 bytes
 15499 ;; Hardware stack levels used:    1
 15500 ;; Hardware stack levels required when called:    3
 15501 ;; This function calls:
 15502 ;;		Nothing
 15503 ;; This function is called by:
 15504 ;;		_GPS_HasAcknowledged
 15505 ;;		_PollGPS
 15506 ;; This function uses a non-reentrant model
 15507 ;;
 15508                           
 15509                           
 15510                           ;psect for function _EUSART1_Read
 15511  2604                     _EUSART1_Read:	
 15512  2604                     l348:	
 15513                           ;mcc_generated_files/eusart1.c: 116:     {;mcc_generated_files/eusart1.c: 117:     }
 15514                           
 15515                           ;incstack = 0
 15516                           ; Regs used in _EUSART1_Read: [wreg+status,2]
 15517                           
 15518                           
 15519                           ;mcc_generated_files/eusart1.c: 115:     while(!PIR3bits.RC1IF)
 15520  2604  014E               	movlb	14	; select bank14
 15521  2605  1E8F               	btfss	15,5	;volatile
 15522  2606  2E04               	goto	l348
 15523                           
 15524                           ;mcc_generated_files/eusart1.c: 119:     eusart1RxLastError.status = 0;
 15525  2607  0141               	movlb	1	; select bank1
 15526  2608  01ED               	clrf	_eusart1RxLastError^(0+128)	;volatile
 15527                           
 15528                           ;mcc_generated_files/eusart1.c: 121:     if(1 == RC1STAbits.OERR)
 15529  2609  0142               	movlb	2	; select bank2
 15530  260A  1C9D               	btfss	29,1	;volatile
 15531  260B  2E0E               	goto	l3910
 15532                           
 15533                           ;mcc_generated_files/eusart1.c: 122:     {;mcc_generated_files/eusart1.c: 125:         R
      +                          C1STAbits.CREN = 0;
 15534  260C  121D               	bcf	29,4	;volatile
 15535                           
 15536                           ;mcc_generated_files/eusart1.c: 126:         RC1STAbits.CREN = 1;
 15537  260D  161D               	bsf	29,4	;volatile
 15538  260E                     l3910:	
 15539                           
 15540                           ;mcc_generated_files/eusart1.c: 129:     return RC1REG;
 15541  260E  0819               	movf	25,w	;volatile
 15542  260F  0008               	return
 15543  2610                     __end_of_EUSART1_Read:	
 15544                           
 15545                           	psect	text43
 15546  1805                     __ptext43:	
 15547 ;; *************** function _ClearNMEA *****************
 15548 ;; Defined at:
 15549 ;;		line 490 in file "main.c"
 15550 ;; Parameters:    Size  Location     Type
 15551 ;;		None
 15552 ;; Auto vars:     Size  Location     Type
 15553 ;;  i               2    2[COMMON] int 
 15554 ;; Return value:  Size  Location     Type
 15555 ;;                  1    wreg      void 
 15556 ;; Registers used:
 15557 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 15558 ;; Tracked objects:
 15559 ;;		On entry : 0/0
 15560 ;;		On exit  : 0/0
 15561 ;;		Unchanged: 0/0
 15562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15564 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15565 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15566 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15567 ;;Total ram usage:        4 bytes
 15568 ;; Hardware stack levels used:    1
 15569 ;; Hardware stack levels required when called:    3
 15570 ;; This function calls:
 15571 ;;		Nothing
 15572 ;; This function is called by:
 15573 ;;		_PollGPS
 15574 ;; This function uses a non-reentrant model
 15575 ;;
 15576                           
 15577                           
 15578                           ;psect for function _ClearNMEA
 15579  1805                     _ClearNMEA:	
 15580                           
 15581                           ;main.c: 492:     for (int i = 0; i < 140; i++)
 15582                           
 15583                           ;incstack = 0
 15584                           ; Regs used in _ClearNMEA: [wreg+fsr1l+fsr1h+status,2+status,0]
 15585  1805  01F2               	clrf	ClearNMEA@i
 15586  1806  01F3               	clrf	ClearNMEA@i+1
 15587  1807                     l4308:	
 15588                           
 15589                           ;main.c: 493:     {;main.c: 494:         nmea_data[i] = '\0';
 15590  1807  30D8               	movlw	216
 15591  1808  00F0               	movwf	??_ClearNMEA
 15592  1809  3026               	movlw	38
 15593  180A  00F1               	movwf	??_ClearNMEA+1
 15594  180B  0872               	movf	ClearNMEA@i,w
 15595  180C  0770               	addwf	??_ClearNMEA,w
 15596  180D  0086               	movwf	6
 15597  180E  0873               	movf	ClearNMEA@i+1,w
 15598  180F  3D71               	addwfc	??_ClearNMEA+1,w
 15599  1810  0087               	movwf	7
 15600  1811  0181               	clrf	1
 15601                           
 15602                           ;main.c: 495:     }
 15603  1812  3001               	movlw	1
 15604  1813  07F2               	addwf	ClearNMEA@i,f
 15605  1814  3000               	movlw	0
 15606  1815  3DF3               	addwfc	ClearNMEA@i+1,f
 15607  1816  0873               	movf	ClearNMEA@i+1,w
 15608  1817  3A80               	xorlw	128
 15609  1818  00F0               	movwf	??_ClearNMEA
 15610  1819  3080               	movlw	128
 15611  181A  0270               	subwf	??_ClearNMEA,w
 15612  181B  1D03               	skipz
 15613  181C  281F               	goto	u3915
 15614  181D  308C               	movlw	140
 15615  181E  0272               	subwf	ClearNMEA@i,w
 15616  181F                     u3915:	
 15617  181F  1803               	btfsc	3,0
 15618  1820  0008               	return
 15619  1821  2807               	goto	l4308
 15620  1822                     __end_of_ClearNMEA:	
 15621                           
 15622                           	psect	text44
 15623  11A0                     __ptext44:	
 15624 ;; *************** function _IntToString *****************
 15625 ;; Defined at:
 15626 ;;		line 180 in file "main.c"
 15627 ;; Parameters:    Size  Location     Type
 15628 ;;  n               2   11[COMMON] int 
 15629 ;;  dest            1   13[COMMON] PTR unsigned char 
 15630 ;;		 -> main@convertedNumber(16), 
 15631 ;; Auto vars:     Size  Location     Type
 15632 ;;  i               2   12[BANK0 ] int 
 15633 ;;  sign            1   11[BANK0 ] _Bool 
 15634 ;; Return value:  Size  Location     Type
 15635 ;;                  1    wreg      void 
 15636 ;; Registers used:
 15637 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15638 ;; Tracked objects:
 15639 ;;		On entry : 0/0
 15640 ;;		On exit  : 0/0
 15641 ;;		Unchanged: 0/0
 15642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15643 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15644 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15645 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15646 ;;      Totals:         3       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15647 ;;Total ram usage:        8 bytes
 15648 ;; Hardware stack levels used:    1
 15649 ;; Hardware stack levels required when called:    5
 15650 ;; This function calls:
 15651 ;;		_ReverseString
 15652 ;;		___awdiv
 15653 ;;		___awmod
 15654 ;; This function is called by:
 15655 ;;		_main
 15656 ;;		_FloatToString
 15657 ;; This function uses a non-reentrant model
 15658 ;;
 15659                           
 15660                           
 15661                           ;psect for function _IntToString
 15662  11A0                     _IntToString:	
 15663                           
 15664                           ;main.c: 180: void IntToString(int n, char* dest);main.c: 181: {;main.c: 182:     int i 
      +                          = 0;
 15665                           
 15666                           ;incstack = 0
 15667                           ; Regs used in _IntToString: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15668  11A0  0140               	movlb	0	; select bank0
 15669  11A1  01AC               	clrf	IntToString@i
 15670  11A2  01AD               	clrf	IntToString@i+1
 15671                           
 15672                           ;main.c: 183:     _Bool sign = n < 0;
 15673  11A3  1FFC               	btfss	IntToString@n+1,7
 15674  11A4  29A7               	goto	u4290
 15675  11A5  3001               	movlw	1
 15676  11A6  29A8               	goto	u4300
 15677  11A7                     u4290:	
 15678  11A7  3000               	movlw	0
 15679  11A8                     u4300:	
 15680  11A8  00A9               	movwf	??_IntToString
 15681  11A9  0829               	movf	??_IntToString,w
 15682  11AA  00AB               	movwf	IntToString@sign
 15683                           
 15684                           ;main.c: 184:     if (sign)
 15685  11AB  082B               	movf	IntToString@sign,w
 15686  11AC  1903               	btfsc	3,2
 15687  11AD  29B3               	goto	l4546
 15688                           
 15689                           ;main.c: 185:     {;main.c: 187:         n = -n;
 15690  11AE  09FB               	comf	IntToString@n,f
 15691  11AF  09FC               	comf	IntToString@n+1,f
 15692  11B0  0AFB               	incf	IntToString@n,f
 15693  11B1  1903               	skipnz
 15694  11B2  0AFC               	incf	IntToString@n+1,f
 15695  11B3                     l4546:	
 15696                           
 15697                           ;main.c: 193:         dest[i++] = n % 10 + '0';
 15698  11B3  300A               	movlw	10
 15699  11B4  00F0               	movwf	___awmod@divisor
 15700  11B5  3000               	movlw	0
 15701  11B6  00F1               	movwf	___awmod@divisor+1
 15702  11B7  087C               	movf	IntToString@n+1,w
 15703  11B8  00F3               	movwf	___awmod@dividend+1
 15704  11B9  087B               	movf	IntToString@n,w
 15705  11BA  00F2               	movwf	___awmod@dividend
 15706  11BB  319C  2461  3191   	fcall	___awmod
 15707  11BE  0870               	movf	?___awmod,w
 15708  11BF  3E30               	addlw	48
 15709  11C0  0140               	movlb	0	; select bank0
 15710  11C1  00A9               	movwf	??_IntToString
 15711  11C2  082C               	movf	IntToString@i,w
 15712  11C3  077D               	addwf	IntToString@dest,w
 15713  11C4  00AA               	movwf	??_IntToString+1
 15714  11C5  082A               	movf	??_IntToString+1,w
 15715  11C6  0086               	movwf	6
 15716  11C7  3001               	movlw	1	; select bank2/3
 15717  11C8  0087               	movwf	7
 15718  11C9  0829               	movf	??_IntToString,w
 15719  11CA  0081               	movwf	1
 15720  11CB  3001               	movlw	1
 15721  11CC  07AC               	addwf	IntToString@i,f
 15722  11CD  3000               	movlw	0
 15723  11CE  3DAD               	addwfc	IntToString@i+1,f
 15724                           
 15725                           ;main.c: 195:     } while ((n /= 10) > 0);
 15726  11CF  300A               	movlw	10
 15727  11D0  00F0               	movwf	___awdiv@divisor
 15728  11D1  3000               	movlw	0
 15729  11D2  00F1               	movwf	___awdiv@divisor+1
 15730  11D3  087C               	movf	IntToString@n+1,w
 15731  11D4  00F3               	movwf	___awdiv@dividend+1
 15732  11D5  087B               	movf	IntToString@n,w
 15733  11D6  00F2               	movwf	___awdiv@dividend
 15734  11D7  319E  2664  3191   	fcall	___awdiv
 15735  11DA  0871               	movf	?___awdiv+1,w
 15736  11DB  00FC               	movwf	IntToString@n+1
 15737  11DC  0870               	movf	?___awdiv,w
 15738  11DD  00FB               	movwf	IntToString@n
 15739  11DE  087C               	movf	IntToString@n+1,w
 15740  11DF  3A80               	xorlw	128
 15741  11E0  0140               	movlb	0	; select bank0
 15742  11E1  00A9               	movwf	??_IntToString
 15743  11E2  3080               	movlw	128
 15744  11E3  0229               	subwf	??_IntToString,w
 15745  11E4  1D03               	skipz
 15746  11E5  29E8               	goto	u4325
 15747  11E6  3001               	movlw	1
 15748  11E7  027B               	subwf	IntToString@n,w
 15749  11E8                     u4325:	
 15750  11E8  1803               	skipnc
 15751  11E9  29B3               	goto	l4546
 15752                           
 15753                           ;main.c: 196:     if (sign)
 15754  11EA  0140               	movlb	0	; select bank0
 15755  11EB  082B               	movf	IntToString@sign,w
 15756  11EC  1903               	btfsc	3,2
 15757  11ED  29FD               	goto	l4558
 15758                           
 15759                           ;main.c: 197:     {;main.c: 198:         dest[i++] = '-';
 15760  11EE  302D               	movlw	45
 15761  11EF  00A9               	movwf	??_IntToString
 15762  11F0  082C               	movf	IntToString@i,w
 15763  11F1  077D               	addwf	IntToString@dest,w
 15764  11F2  00AA               	movwf	??_IntToString+1
 15765  11F3  082A               	movf	??_IntToString+1,w
 15766  11F4  0086               	movwf	6
 15767  11F5  3001               	movlw	1	; select bank2/3
 15768  11F6  0087               	movwf	7
 15769  11F7  0829               	movf	??_IntToString,w
 15770  11F8  0081               	movwf	1
 15771  11F9  3001               	movlw	1
 15772  11FA  07AC               	addwf	IntToString@i,f
 15773  11FB  3000               	movlw	0
 15774  11FC  3DAD               	addwfc	IntToString@i+1,f
 15775  11FD                     l4558:	
 15776                           
 15777                           ;main.c: 200:     dest[i] = '\0';
 15778  11FD  082C               	movf	IntToString@i,w
 15779  11FE  077D               	addwf	IntToString@dest,w
 15780  11FF  00A9               	movwf	??_IntToString
 15781  1200  0829               	movf	??_IntToString,w
 15782  1201  0086               	movwf	6
 15783  1202  3001               	movlw	1	; select bank2/3
 15784  1203  0087               	movwf	7
 15785  1204  0181               	clrf	1
 15786                           
 15787                           ;main.c: 202:     ReverseString(dest);
 15788  1205  087D               	movf	IntToString@dest,w
 15789  1206  3191  213B         	fcall	_ReverseString
 15790  1208  0008               	return
 15791  1209                     __end_of_IntToString:	
 15792                           
 15793                           	psect	text45
 15794  1C61                     __ptext45:	
 15795 ;; *************** function ___awmod *****************
 15796 ;; Defined at:
 15797 ;;		line 5 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\awmod.c"
 15798 ;; Parameters:    Size  Location     Type
 15799 ;;  divisor         2    0[COMMON] int 
 15800 ;;  dividend        2    2[COMMON] int 
 15801 ;; Auto vars:     Size  Location     Type
 15802 ;;  sign            1    6[COMMON] unsigned char 
 15803 ;;  counter         1    5[COMMON] unsigned char 
 15804 ;; Return value:  Size  Location     Type
 15805 ;;                  2    0[COMMON] int 
 15806 ;; Registers used:
 15807 ;;		wreg, status,2, status,0
 15808 ;; Tracked objects:
 15809 ;;		On entry : 0/0
 15810 ;;		On exit  : 0/0
 15811 ;;		Unchanged: 0/0
 15812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15813 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15814 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15815 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15816 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15817 ;;Total ram usage:        7 bytes
 15818 ;; Hardware stack levels used:    1
 15819 ;; Hardware stack levels required when called:    3
 15820 ;; This function calls:
 15821 ;;		Nothing
 15822 ;; This function is called by:
 15823 ;;		_IntToString
 15824 ;; This function uses a non-reentrant model
 15825 ;;
 15826                           
 15827                           
 15828                           ;psect for function ___awmod
 15829  1C61                     ___awmod:	
 15830                           
 15831                           ;incstack = 0
 15832                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 15833  1C61  01F6               	clrf	___awmod@sign
 15834  1C62  1FF3               	btfss	___awmod@dividend+1,7
 15835  1C63  2C6B               	goto	l4380
 15836  1C64  09F2               	comf	___awmod@dividend,f
 15837  1C65  09F3               	comf	___awmod@dividend+1,f
 15838  1C66  0AF2               	incf	___awmod@dividend,f
 15839  1C67  1903               	skipnz
 15840  1C68  0AF3               	incf	___awmod@dividend+1,f
 15841  1C69  01F6               	clrf	___awmod@sign
 15842  1C6A  0AF6               	incf	___awmod@sign,f
 15843  1C6B                     l4380:	
 15844  1C6B  1FF1               	btfss	___awmod@divisor+1,7
 15845  1C6C  2C72               	goto	l4384
 15846  1C6D  09F0               	comf	___awmod@divisor,f
 15847  1C6E  09F1               	comf	___awmod@divisor+1,f
 15848  1C6F  0AF0               	incf	___awmod@divisor,f
 15849  1C70  1903               	skipnz
 15850  1C71  0AF1               	incf	___awmod@divisor+1,f
 15851  1C72                     l4384:	
 15852  1C72  0870               	movf	___awmod@divisor,w
 15853  1C73  0471               	iorwf	___awmod@divisor+1,w
 15854  1C74  1903               	btfsc	3,2
 15855  1C75  2C99               	goto	l4402
 15856  1C76  01F5               	clrf	___awmod@counter
 15857  1C77  0AF5               	incf	___awmod@counter,f
 15858  1C78                     l4392:	
 15859  1C78  1BF1               	btfsc	___awmod@divisor+1,7
 15860  1C79  2C84               	goto	l4394
 15861  1C7A  3001               	movlw	1
 15862  1C7B                     u4045:	
 15863  1C7B  35F0               	lslf	___awmod@divisor,f
 15864  1C7C  0DF1               	rlf	___awmod@divisor+1,f
 15865  1C7D  0B89               	decfsz	9,f
 15866  1C7E  2C7B               	goto	u4045
 15867  1C7F  3001               	movlw	1
 15868  1C80  00F4               	movwf	??___awmod
 15869  1C81  0874               	movf	??___awmod,w
 15870  1C82  07F5               	addwf	___awmod@counter,f
 15871  1C83  2C78               	goto	l4392
 15872  1C84                     l4394:	
 15873  1C84  0871               	movf	___awmod@divisor+1,w
 15874  1C85  0273               	subwf	___awmod@dividend+1,w
 15875  1C86  1D03               	skipz
 15876  1C87  2C8A               	goto	u4065
 15877  1C88  0870               	movf	___awmod@divisor,w
 15878  1C89  0272               	subwf	___awmod@dividend,w
 15879  1C8A                     u4065:	
 15880  1C8A  1C03               	skipc
 15881  1C8B  2C90               	goto	l4398
 15882  1C8C  0870               	movf	___awmod@divisor,w
 15883  1C8D  02F2               	subwf	___awmod@dividend,f
 15884  1C8E  0871               	movf	___awmod@divisor+1,w
 15885  1C8F  3BF3               	subwfb	___awmod@dividend+1,f
 15886  1C90                     l4398:	
 15887  1C90  3001               	movlw	1
 15888  1C91                     u4075:	
 15889  1C91  36F1               	lsrf	___awmod@divisor+1,f
 15890  1C92  0CF0               	rrf	___awmod@divisor,f
 15891  1C93  0B89               	decfsz	9,f
 15892  1C94  2C91               	goto	u4075
 15893  1C95  3001               	movlw	1
 15894  1C96  02F5               	subwf	___awmod@counter,f
 15895  1C97  1D03               	btfss	3,2
 15896  1C98  2C84               	goto	l4394
 15897  1C99                     l4402:	
 15898  1C99  0876               	movf	___awmod@sign,w
 15899  1C9A  1903               	btfsc	3,2
 15900  1C9B  2CA1               	goto	l4406
 15901  1C9C  09F2               	comf	___awmod@dividend,f
 15902  1C9D  09F3               	comf	___awmod@dividend+1,f
 15903  1C9E  0AF2               	incf	___awmod@dividend,f
 15904  1C9F  1903               	skipnz
 15905  1CA0  0AF3               	incf	___awmod@dividend+1,f
 15906  1CA1                     l4406:	
 15907  1CA1  0873               	movf	___awmod@dividend+1,w
 15908  1CA2  00F1               	movwf	?___awmod+1
 15909  1CA3  0872               	movf	___awmod@dividend,w
 15910  1CA4  00F0               	movwf	?___awmod
 15911  1CA5  0008               	return
 15912  1CA6                     __end_of___awmod:	
 15913                           
 15914                           	psect	text46
 15915  113B                     __ptext46:	
 15916 ;; *************** function _ReverseString *****************
 15917 ;; Defined at:
 15918 ;;		line 125 in file "main.c"
 15919 ;; Parameters:    Size  Location     Type
 15920 ;;  str             1    wreg     PTR unsigned char 
 15921 ;;		 -> checksum(6), main@convertedNumber(16), 
 15922 ;; Auto vars:     Size  Location     Type
 15923 ;;  str             1    8[BANK0 ] PTR unsigned char 
 15924 ;;		 -> checksum(6), main@convertedNumber(16), 
 15925 ;;  opposite        1    3[BANK0 ] PTR unsigned char 
 15926 ;;		 -> checksum(6), main@convertedNumber(16), 
 15927 ;;  temp            1    2[BANK0 ] unsigned char 
 15928 ;;  i               2    6[BANK0 ] int 
 15929 ;;  halfway         2    0[BANK0 ] int 
 15930 ;;  counti          2    4[BANK0 ] int 
 15931 ;; Return value:  Size  Location     Type
 15932 ;;                  1    wreg      void 
 15933 ;; Registers used:
 15934 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15935 ;; Tracked objects:
 15936 ;;		On entry : 0/0
 15937 ;;		On exit  : 0/0
 15938 ;;		Unchanged: 0/0
 15939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15941 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15942 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15943 ;;      Totals:         2       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15944 ;;Total ram usage:       11 bytes
 15945 ;; Hardware stack levels used:    1
 15946 ;; Hardware stack levels required when called:    4
 15947 ;; This function calls:
 15948 ;;		___awdiv
 15949 ;;		_strlen
 15950 ;; This function is called by:
 15951 ;;		_UIntToHexString
 15952 ;;		_IntToString
 15953 ;;		_UIntToString
 15954 ;;		_IntToHexString
 15955 ;; This function uses a non-reentrant model
 15956 ;;
 15957                           
 15958                           
 15959                           ;psect for function _ReverseString
 15960  113B                     _ReverseString:	
 15961                           
 15962                           ;incstack = 0
 15963                           ; Regs used in _ReverseString: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15964                           ;ReverseString@str stored from wreg
 15965  113B  0140               	movlb	0	; select bank0
 15966  113C  00A8               	movwf	ReverseString@str
 15967                           
 15968                           ;main.c: 125: void ReverseString(char* str);main.c: 126: {;main.c: 127:     int counti =
      +                           strlen(str);
 15969  113D  0828               	movf	ReverseString@str,w
 15970  113E  00F0               	movwf	strlen@s
 15971  113F  3001               	movlw	1
 15972  1140  00F1               	movwf	strlen@s+1
 15973  1141  31A6  26A0  3191   	fcall	_strlen
 15974  1144  0871               	movf	?_strlen+1,w
 15975  1145  0140               	movlb	0	; select bank0
 15976  1146  00A5               	movwf	ReverseString@counti+1
 15977  1147  0870               	movf	?_strlen,w
 15978  1148  00A4               	movwf	ReverseString@counti
 15979                           
 15980                           ;main.c: 128:     for (int i = 0, halfway = counti / 2; i < halfway; i++)
 15981  1149  01A6               	clrf	ReverseString@i
 15982  114A  01A7               	clrf	ReverseString@i+1
 15983  114B  3002               	movlw	2
 15984  114C  00F0               	movwf	___awdiv@divisor
 15985  114D  3000               	movlw	0
 15986  114E  00F1               	movwf	___awdiv@divisor+1
 15987  114F  0825               	movf	ReverseString@counti+1,w
 15988  1150  00F3               	movwf	___awdiv@dividend+1
 15989  1151  0824               	movf	ReverseString@counti,w
 15990  1152  00F2               	movwf	___awdiv@dividend
 15991  1153  319E  2664  3191   	fcall	___awdiv
 15992  1156  0871               	movf	?___awdiv+1,w
 15993  1157  0140               	movlb	0	; select bank0
 15994  1158  00A1               	movwf	ReverseString@halfway+1
 15995  1159  0870               	movf	?___awdiv,w
 15996  115A  00A0               	movwf	ReverseString@halfway
 15997  115B                     l4222:	
 15998  115B  0827               	movf	ReverseString@i+1,w
 15999  115C  3A80               	xorlw	128
 16000  115D  00F9               	movwf	??_ReverseString
 16001  115E  0821               	movf	ReverseString@halfway+1,w
 16002  115F  3A80               	xorlw	128
 16003  1160  0279               	subwf	??_ReverseString,w
 16004  1161  1D03               	skipz
 16005  1162  2965               	goto	u3835
 16006  1163  0820               	movf	ReverseString@halfway,w
 16007  1164  0226               	subwf	ReverseString@i,w
 16008  1165                     u3835:	
 16009  1165  1803               	btfsc	3,0
 16010  1166  2996               	goto	l4224
 16011                           
 16012                           ;main.c: 129:     {;main.c: 130:         char temp = str[i];
 16013  1167  0140               	movlb	0	; select bank0
 16014  1168  0826               	movf	ReverseString@i,w
 16015  1169  0728               	addwf	ReverseString@str,w
 16016  116A  00F9               	movwf	??_ReverseString
 16017  116B  0879               	movf	??_ReverseString,w
 16018  116C  0086               	movwf	6
 16019  116D  3001               	movlw	1	; select bank2/3
 16020  116E  0087               	movwf	7
 16021  116F  0801               	movf	1,w
 16022  1170  00FA               	movwf	??_ReverseString+1
 16023  1171  087A               	movf	??_ReverseString+1,w
 16024  1172  00A2               	movwf	ReverseString@temp
 16025                           
 16026                           ;main.c: 131:         char* opposite = str + (counti - 1 - i);
 16027  1173  0826               	movf	ReverseString@i,w
 16028  1174  0228               	subwf	ReverseString@str,w
 16029  1175  0724               	addwf	ReverseString@counti,w
 16030  1176  3EFF               	addlw	-1
 16031  1177  00F9               	movwf	??_ReverseString
 16032  1178  0879               	movf	??_ReverseString,w
 16033  1179  00A3               	movwf	ReverseString@opposite
 16034                           
 16035                           ;main.c: 132:         str[i] = *opposite;
 16036  117A  0823               	movf	ReverseString@opposite,w
 16037  117B  0086               	movwf	6
 16038  117C  3001               	movlw	1	; select bank2/3
 16039  117D  0087               	movwf	7
 16040  117E  0801               	movf	1,w
 16041  117F  00F9               	movwf	??_ReverseString
 16042  1180  0826               	movf	ReverseString@i,w
 16043  1181  0728               	addwf	ReverseString@str,w
 16044  1182  00FA               	movwf	??_ReverseString+1
 16045  1183  087A               	movf	??_ReverseString+1,w
 16046  1184  0086               	movwf	6
 16047  1185  3001               	movlw	1	; select bank2/3
 16048  1186  0087               	movwf	7
 16049  1187  0879               	movf	??_ReverseString,w
 16050  1188  0081               	movwf	1
 16051                           
 16052                           ;main.c: 133:         *opposite = temp;
 16053  1189  0822               	movf	ReverseString@temp,w
 16054  118A  00F9               	movwf	??_ReverseString
 16055  118B  0823               	movf	ReverseString@opposite,w
 16056  118C  0086               	movwf	6
 16057  118D  3001               	movlw	1	; select bank2/3
 16058  118E  0087               	movwf	7
 16059  118F  0879               	movf	??_ReverseString,w
 16060  1190  0081               	movwf	1
 16061                           
 16062                           ;main.c: 134:     }
 16063  1191  3001               	movlw	1
 16064  1192  07A6               	addwf	ReverseString@i,f
 16065  1193  3000               	movlw	0
 16066  1194  3DA7               	addwfc	ReverseString@i+1,f
 16067  1195  295B               	goto	l4222
 16068  1196                     l4224:	
 16069                           
 16070                           ;main.c: 135:     str[counti] = '\0';
 16071  1196  0140               	movlb	0	; select bank0
 16072  1197  0824               	movf	ReverseString@counti,w
 16073  1198  0728               	addwf	ReverseString@str,w
 16074  1199  00F9               	movwf	??_ReverseString
 16075  119A  0879               	movf	??_ReverseString,w
 16076  119B  0086               	movwf	6
 16077  119C  3001               	movlw	1	; select bank2/3
 16078  119D  0087               	movwf	7
 16079  119E  0181               	clrf	1
 16080  119F  0008               	return
 16081  11A0                     __end_of_ReverseString:	
 16082                           
 16083                           	psect	text47
 16084  1E64                     __ptext47:	
 16085 ;; *************** function ___awdiv *****************
 16086 ;; Defined at:
 16087 ;;		line 5 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\awdiv.c"
 16088 ;; Parameters:    Size  Location     Type
 16089 ;;  divisor         2    0[COMMON] int 
 16090 ;;  dividend        2    2[COMMON] int 
 16091 ;; Auto vars:     Size  Location     Type
 16092 ;;  quotient        2    7[COMMON] int 
 16093 ;;  sign            1    6[COMMON] unsigned char 
 16094 ;;  counter         1    5[COMMON] unsigned char 
 16095 ;; Return value:  Size  Location     Type
 16096 ;;                  2    0[COMMON] int 
 16097 ;; Registers used:
 16098 ;;		wreg, status,2, status,0
 16099 ;; Tracked objects:
 16100 ;;		On entry : 0/0
 16101 ;;		On exit  : 0/0
 16102 ;;		Unchanged: 0/0
 16103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16104 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16105 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16106 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16107 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16108 ;;Total ram usage:        9 bytes
 16109 ;; Hardware stack levels used:    1
 16110 ;; Hardware stack levels required when called:    3
 16111 ;; This function calls:
 16112 ;;		Nothing
 16113 ;; This function is called by:
 16114 ;;		_ReverseString
 16115 ;;		_IntToString
 16116 ;;		_IntToHexString
 16117 ;; This function uses a non-reentrant model
 16118 ;;
 16119                           
 16120                           
 16121                           ;psect for function ___awdiv
 16122  1E64                     ___awdiv:	
 16123                           
 16124                           ;incstack = 0
 16125                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 16126  1E64  01F6               	clrf	___awdiv@sign
 16127  1E65  1FF1               	btfss	___awdiv@divisor+1,7
 16128  1E66  2E6E               	goto	l3982
 16129  1E67  09F0               	comf	___awdiv@divisor,f
 16130  1E68  09F1               	comf	___awdiv@divisor+1,f
 16131  1E69  0AF0               	incf	___awdiv@divisor,f
 16132  1E6A  1903               	skipnz
 16133  1E6B  0AF1               	incf	___awdiv@divisor+1,f
 16134  1E6C  01F6               	clrf	___awdiv@sign
 16135  1E6D  0AF6               	incf	___awdiv@sign,f
 16136  1E6E                     l3982:	
 16137  1E6E  1FF3               	btfss	___awdiv@dividend+1,7
 16138  1E6F  2E79               	goto	l3988
 16139  1E70  09F2               	comf	___awdiv@dividend,f
 16140  1E71  09F3               	comf	___awdiv@dividend+1,f
 16141  1E72  0AF2               	incf	___awdiv@dividend,f
 16142  1E73  1903               	skipnz
 16143  1E74  0AF3               	incf	___awdiv@dividend+1,f
 16144  1E75  3001               	movlw	1
 16145  1E76  00F4               	movwf	??___awdiv
 16146  1E77  0874               	movf	??___awdiv,w
 16147  1E78  06F6               	xorwf	___awdiv@sign,f
 16148  1E79                     l3988:	
 16149  1E79  01F7               	clrf	___awdiv@quotient
 16150  1E7A  01F8               	clrf	___awdiv@quotient+1
 16151  1E7B  0870               	movf	___awdiv@divisor,w
 16152  1E7C  0471               	iorwf	___awdiv@divisor+1,w
 16153  1E7D  1903               	btfsc	3,2
 16154  1E7E  2EA8               	goto	l4010
 16155  1E7F  01F5               	clrf	___awdiv@counter
 16156  1E80  0AF5               	incf	___awdiv@counter,f
 16157  1E81                     l3998:	
 16158  1E81  1BF1               	btfsc	___awdiv@divisor+1,7
 16159  1E82  2E8D               	goto	l4000
 16160  1E83  3001               	movlw	1
 16161  1E84                     u3465:	
 16162  1E84  35F0               	lslf	___awdiv@divisor,f
 16163  1E85  0DF1               	rlf	___awdiv@divisor+1,f
 16164  1E86  0B89               	decfsz	9,f
 16165  1E87  2E84               	goto	u3465
 16166  1E88  3001               	movlw	1
 16167  1E89  00F4               	movwf	??___awdiv
 16168  1E8A  0874               	movf	??___awdiv,w
 16169  1E8B  07F5               	addwf	___awdiv@counter,f
 16170  1E8C  2E81               	goto	l3998
 16171  1E8D                     l4000:	
 16172  1E8D  3001               	movlw	1
 16173  1E8E                     u3485:	
 16174  1E8E  35F7               	lslf	___awdiv@quotient,f
 16175  1E8F  0DF8               	rlf	___awdiv@quotient+1,f
 16176  1E90  0B89               	decfsz	9,f
 16177  1E91  2E8E               	goto	u3485
 16178  1E92  0871               	movf	___awdiv@divisor+1,w
 16179  1E93  0273               	subwf	___awdiv@dividend+1,w
 16180  1E94  1D03               	skipz
 16181  1E95  2E98               	goto	u3495
 16182  1E96  0870               	movf	___awdiv@divisor,w
 16183  1E97  0272               	subwf	___awdiv@dividend,w
 16184  1E98                     u3495:	
 16185  1E98  1C03               	skipc
 16186  1E99  2E9F               	goto	l4006
 16187  1E9A  0870               	movf	___awdiv@divisor,w
 16188  1E9B  02F2               	subwf	___awdiv@dividend,f
 16189  1E9C  0871               	movf	___awdiv@divisor+1,w
 16190  1E9D  3BF3               	subwfb	___awdiv@dividend+1,f
 16191  1E9E  1477               	bsf	___awdiv@quotient,0
 16192  1E9F                     l4006:	
 16193  1E9F  3001               	movlw	1
 16194  1EA0                     u3505:	
 16195  1EA0  36F1               	lsrf	___awdiv@divisor+1,f
 16196  1EA1  0CF0               	rrf	___awdiv@divisor,f
 16197  1EA2  0B89               	decfsz	9,f
 16198  1EA3  2EA0               	goto	u3505
 16199  1EA4  3001               	movlw	1
 16200  1EA5  02F5               	subwf	___awdiv@counter,f
 16201  1EA6  1D03               	btfss	3,2
 16202  1EA7  2E8D               	goto	l4000
 16203  1EA8                     l4010:	
 16204  1EA8  0876               	movf	___awdiv@sign,w
 16205  1EA9  1903               	btfsc	3,2
 16206  1EAA  2EB0               	goto	l4014
 16207  1EAB  09F7               	comf	___awdiv@quotient,f
 16208  1EAC  09F8               	comf	___awdiv@quotient+1,f
 16209  1EAD  0AF7               	incf	___awdiv@quotient,f
 16210  1EAE  1903               	skipnz
 16211  1EAF  0AF8               	incf	___awdiv@quotient+1,f
 16212  1EB0                     l4014:	
 16213  1EB0  0878               	movf	___awdiv@quotient+1,w
 16214  1EB1  00F1               	movwf	?___awdiv+1
 16215  1EB2  0877               	movf	___awdiv@quotient,w
 16216  1EB3  00F0               	movwf	?___awdiv
 16217  1EB4  0008               	return
 16218  1EB5                     __end_of___awdiv:	
 16219                           
 16220                           	psect	text48
 16221  25CC                     __ptext48:	
 16222 ;; *************** function _InitTiming *****************
 16223 ;; Defined at:
 16224 ;;		line 11 in file "timing.c"
 16225 ;; Parameters:    Size  Location     Type
 16226 ;;		None
 16227 ;; Auto vars:     Size  Location     Type
 16228 ;;		None
 16229 ;; Return value:  Size  Location     Type
 16230 ;;                  1    wreg      void 
 16231 ;; Registers used:
 16232 ;;		wreg, status,2, status,0, pclath, cstack
 16233 ;; Tracked objects:
 16234 ;;		On entry : 0/0
 16235 ;;		On exit  : 0/0
 16236 ;;		Unchanged: 0/0
 16237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16241 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16242 ;;Total ram usage:        0 bytes
 16243 ;; Hardware stack levels used:    1
 16244 ;; Hardware stack levels required when called:    4
 16245 ;; This function calls:
 16246 ;;		_TMR0_SetInterruptHandler
 16247 ;; This function is called by:
 16248 ;;		_main
 16249 ;; This function uses a non-reentrant model
 16250 ;;
 16251                           
 16252                           
 16253                           ;psect for function _InitTiming
 16254  25CC                     _InitTiming:	
 16255                           
 16256                           ;timing.c: 13:     (INTCONbits.GIE = 1);
 16257                           
 16258                           ;incstack = 0
 16259                           ; Regs used in _InitTiming: [wreg+status,2+status,0+pclath+cstack]
 16260  25CC  178B               	bsf	11,7	;volatile
 16261                           
 16262                           ;timing.c: 14:     TMR0_SetInterruptHandler(TimerISR);
 16263  25CD  30E5               	movlw	low _TimerISR
 16264  25CE  00F0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 16265  25CF  3025               	movlw	high _TimerISR
 16266  25D0  00F1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 16267  25D1  31A5  25B4         	fcall	_TMR0_SetInterruptHandler
 16268  25D3  0008               	return
 16269  25D4                     __end_of_InitTiming:	
 16270                           
 16271                           	psect	text49
 16272  25B4                     __ptext49:	
 16273 ;; *************** function _TMR0_SetInterruptHandler *****************
 16274 ;; Defined at:
 16275 ;;		line 134 in file "mcc_generated_files/tmr0.c"
 16276 ;; Parameters:    Size  Location     Type
 16277 ;;  InterruptHan    2    0[COMMON] PTR FTN()void 
 16278 ;;		 -> TimerISR(1), TMR0_DefaultInterruptHandler(1), 
 16279 ;; Auto vars:     Size  Location     Type
 16280 ;;		None
 16281 ;; Return value:  Size  Location     Type
 16282 ;;                  1    wreg      void 
 16283 ;; Registers used:
 16284 ;;		wreg
 16285 ;; Tracked objects:
 16286 ;;		On entry : 0/0
 16287 ;;		On exit  : 0/0
 16288 ;;		Unchanged: 0/0
 16289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16290 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16293 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16294 ;;Total ram usage:        2 bytes
 16295 ;; Hardware stack levels used:    1
 16296 ;; Hardware stack levels required when called:    3
 16297 ;; This function calls:
 16298 ;;		Nothing
 16299 ;; This function is called by:
 16300 ;;		_TMR0_Initialize
 16301 ;;		_InitTiming
 16302 ;; This function uses a non-reentrant model
 16303 ;;
 16304                           
 16305                           
 16306                           ;psect for function _TMR0_SetInterruptHandler
 16307  25B4                     _TMR0_SetInterruptHandler:	
 16308                           
 16309                           ;mcc_generated_files/tmr0.c: 135:     TMR0_InterruptHandler = InterruptHandler;
 16310                           
 16311                           ;incstack = 0
 16312                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
 16313  25B4  0871               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
 16314  25B5  0141               	movlb	1	; select bank1
 16315  25B6  00EF               	movwf	(_TMR0_InterruptHandler+1)^(0+128)
 16316  25B7  0870               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
 16317  25B8  00EE               	movwf	_TMR0_InterruptHandler^(0+128)
 16318  25B9  0008               	return
 16319  25BA                     __end_of_TMR0_SetInterruptHandler:	
 16320                           
 16321                           	psect	text50
 16322  2773                     __ptext50:	
 16323 ;; *************** function _ClearTxData *****************
 16324 ;; Defined at:
 16325 ;;		line 300 in file "main.c"
 16326 ;; Parameters:    Size  Location     Type
 16327 ;;		None
 16328 ;; Auto vars:     Size  Location     Type
 16329 ;;  i               2    2[COMMON] int 
 16330 ;; Return value:  Size  Location     Type
 16331 ;;                  1    wreg      void 
 16332 ;; Registers used:
 16333 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 16334 ;; Tracked objects:
 16335 ;;		On entry : 0/0
 16336 ;;		On exit  : 0/0
 16337 ;;		Unchanged: 0/0
 16338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16340 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16341 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16342 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16343 ;;Total ram usage:        4 bytes
 16344 ;; Hardware stack levels used:    1
 16345 ;; Hardware stack levels required when called:    3
 16346 ;; This function calls:
 16347 ;;		Nothing
 16348 ;; This function is called by:
 16349 ;;		_main
 16350 ;; This function uses a non-reentrant model
 16351 ;;
 16352                           
 16353                           
 16354                           ;psect for function _ClearTxData
 16355  2773                     _ClearTxData:	
 16356                           
 16357                           ;main.c: 302:     for (int i = 0; i < 140; i++)
 16358                           
 16359                           ;incstack = 0
 16360                           ; Regs used in _ClearTxData: [wreg+fsr1l+fsr1h+status,2+status,0]
 16361  2773  01F2               	clrf	ClearTxData@i
 16362  2774  01F3               	clrf	ClearTxData@i+1
 16363  2775                     l4580:	
 16364                           
 16365                           ;main.c: 303:     {;main.c: 304:         txdata[i] = '\0';
 16366  2775  3064               	movlw	100
 16367  2776  00F0               	movwf	??_ClearTxData
 16368  2777  3027               	movlw	39
 16369  2778  00F1               	movwf	??_ClearTxData+1
 16370  2779  0872               	movf	ClearTxData@i,w
 16371  277A  0770               	addwf	??_ClearTxData,w
 16372  277B  0086               	movwf	6
 16373  277C  0873               	movf	ClearTxData@i+1,w
 16374  277D  3D71               	addwfc	??_ClearTxData+1,w
 16375  277E  0087               	movwf	7
 16376  277F  0181               	clrf	1
 16377                           
 16378                           ;main.c: 305:     }
 16379  2780  3001               	movlw	1
 16380  2781  07F2               	addwf	ClearTxData@i,f
 16381  2782  3000               	movlw	0
 16382  2783  3DF3               	addwfc	ClearTxData@i+1,f
 16383  2784  0873               	movf	ClearTxData@i+1,w
 16384  2785  3A80               	xorlw	128
 16385  2786  00F0               	movwf	??_ClearTxData
 16386  2787  3080               	movlw	128
 16387  2788  0270               	subwf	??_ClearTxData,w
 16388  2789  1D03               	skipz
 16389  278A  2F8D               	goto	u4355
 16390  278B  308C               	movlw	140
 16391  278C  0272               	subwf	ClearTxData@i,w
 16392  278D                     u4355:	
 16393  278D  1803               	btfsc	3,0
 16394  278E  0008               	return
 16395  278F  2F75               	goto	l4580
 16396  2790                     __end_of_ClearTxData:	
 16397                           
 16398                           	psect	text51
 16399  1822                     __ptext51:	
 16400 ;; *************** function _ClearString *****************
 16401 ;; Defined at:
 16402 ;;		line 26 in file "main.c"
 16403 ;; Parameters:    Size  Location     Type
 16404 ;;  str             1    wreg     PTR unsigned char 
 16405 ;;		 -> main@convertedNumber(16), 
 16406 ;; Auto vars:     Size  Location     Type
 16407 ;;  str             1   10[COMMON] PTR unsigned char 
 16408 ;;		 -> main@convertedNumber(16), 
 16409 ;;  i               2    8[COMMON] int 
 16410 ;;  counti          2    6[COMMON] int 
 16411 ;; Return value:  Size  Location     Type
 16412 ;;                  1    wreg      void 
 16413 ;; Registers used:
 16414 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16415 ;; Tracked objects:
 16416 ;;		On entry : 0/0
 16417 ;;		On exit  : 0/0
 16418 ;;		Unchanged: 0/0
 16419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16421 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16422 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16423 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16424 ;;Total ram usage:        6 bytes
 16425 ;; Hardware stack levels used:    1
 16426 ;; Hardware stack levels required when called:    4
 16427 ;; This function calls:
 16428 ;;		_strlen
 16429 ;; This function is called by:
 16430 ;;		_main
 16431 ;; This function uses a non-reentrant model
 16432 ;;
 16433                           
 16434                           
 16435                           ;psect for function _ClearString
 16436  1822                     _ClearString:	
 16437                           
 16438                           ;incstack = 0
 16439                           ; Regs used in _ClearString: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16440                           ;ClearString@str stored from wreg
 16441  1822  00FA               	movwf	ClearString@str
 16442                           
 16443                           ;main.c: 26: void ClearString(char* str);main.c: 27: {;main.c: 28:     for (int i = 0, c
      +                          ounti = strlen(str); i < counti; i++)
 16444  1823  01F8               	clrf	ClearString@i
 16445  1824  01F9               	clrf	ClearString@i+1
 16446  1825  087A               	movf	ClearString@str,w
 16447  1826  00F0               	movwf	strlen@s
 16448  1827  3001               	movlw	1
 16449  1828  00F1               	movwf	strlen@s+1
 16450  1829  31A6  26A0  3198   	fcall	_strlen
 16451  182C  0871               	movf	?_strlen+1,w
 16452  182D  00F7               	movwf	ClearString@counti+1
 16453  182E  0870               	movf	?_strlen,w
 16454  182F  00F6               	movwf	ClearString@counti
 16455  1830                     l4514:	
 16456  1830  0879               	movf	ClearString@i+1,w
 16457  1831  3A80               	xorlw	128
 16458  1832  00F5               	movwf	??_ClearString
 16459  1833  0877               	movf	ClearString@counti+1,w
 16460  1834  3A80               	xorlw	128
 16461  1835  0275               	subwf	??_ClearString,w
 16462  1836  1D03               	skipz
 16463  1837  283A               	goto	u4245
 16464  1838  0876               	movf	ClearString@counti,w
 16465  1839  0278               	subwf	ClearString@i,w
 16466  183A                     u4245:	
 16467  183A  1803               	btfsc	3,0
 16468  183B  0008               	return
 16469                           
 16470                           ;main.c: 29:     {;main.c: 30:         str[i] = '\0';
 16471  183C  0878               	movf	ClearString@i,w
 16472  183D  077A               	addwf	ClearString@str,w
 16473  183E  00F5               	movwf	??_ClearString
 16474  183F  0875               	movf	??_ClearString,w
 16475  1840  0086               	movwf	6
 16476  1841  3001               	movlw	1	; select bank2/3
 16477  1842  0087               	movwf	7
 16478  1843  0181               	clrf	1
 16479                           
 16480                           ;main.c: 31:     }
 16481  1844  3001               	movlw	1
 16482  1845  07F8               	addwf	ClearString@i,f
 16483  1846  3000               	movlw	0
 16484  1847  3DF9               	addwfc	ClearString@i+1,f
 16485  1848  2830               	goto	l4514
 16486  1849                     __end_of_ClearString:	
 16487                           
 16488                           	psect	text52
 16489  26A0                     __ptext52:	
 16490 ;; *************** function _strlen *****************
 16491 ;; Defined at:
 16492 ;;		line 12 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\strlen.c"
 16493 ;; Parameters:    Size  Location     Type
 16494 ;;  s               2    0[COMMON] PTR const unsigned char 
 16495 ;;		 -> STR_11(5), checksum(6), STR_10(7), main@convertedNumber(16), 
 16496 ;;		 -> STR_7(14), nmea_data(140), STR_6(26), STR_5(26), 
 16497 ;;		 -> STR_4(26), STR_3(26), STR_2(26), STR_1(26), 
 16498 ;;		 -> txdata(140), csvField(20), 
 16499 ;; Auto vars:     Size  Location     Type
 16500 ;;  a               2    3[COMMON] PTR const unsigned char 
 16501 ;;		 -> STR_11(5), checksum(6), STR_10(7), main@convertedNumber(16), 
 16502 ;;		 -> STR_7(14), nmea_data(140), STR_6(26), STR_5(26), 
 16503 ;;		 -> STR_4(26), STR_3(26), STR_2(26), STR_1(26), 
 16504 ;;		 -> txdata(140), csvField(20), 
 16505 ;; Return value:  Size  Location     Type
 16506 ;;                  2    0[COMMON] unsigned int 
 16507 ;; Registers used:
 16508 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 16509 ;; Tracked objects:
 16510 ;;		On entry : 0/0
 16511 ;;		On exit  : 0/0
 16512 ;;		Unchanged: 0/0
 16513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16514 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16515 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16516 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16517 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16518 ;;Total ram usage:        5 bytes
 16519 ;; Hardware stack levels used:    1
 16520 ;; Hardware stack levels required when called:    3
 16521 ;; This function calls:
 16522 ;;		Nothing
 16523 ;; This function is called by:
 16524 ;;		_ClearString
 16525 ;;		_GetAtRowCSV
 16526 ;;		_Insert
 16527 ;;		_InsertString
 16528 ;;		_ReverseString
 16529 ;;		_WriteGPS
 16530 ;;		_PollGPS
 16531 ;;		_main
 16532 ;;		_crc16
 16533 ;;		_TransmitString
 16534 ;; This function uses a non-reentrant model
 16535 ;;
 16536                           
 16537                           
 16538                           ;psect for function _strlen
 16539  26A0                     _strlen:	
 16540                           
 16541                           ;incstack = 0
 16542                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
 16543  26A0  0871               	movf	strlen@s+1,w
 16544  26A1  00F4               	movwf	strlen@a+1
 16545  26A2  0870               	movf	strlen@s,w
 16546  26A3  00F3               	movwf	strlen@a
 16547  26A4                     l3500:	
 16548  26A4  0870               	movf	strlen@s,w
 16549  26A5  0084               	movwf	4
 16550  26A6  0871               	movf	strlen@s+1,w
 16551  26A7  0085               	movwf	5
 16552  26A8  0012               	moviw fsr0++
 16553  26A9  1903               	btfsc	3,2
 16554  26AA  2EB0               	goto	l3502
 16555  26AB  3001               	movlw	1
 16556  26AC  07F0               	addwf	strlen@s,f
 16557  26AD  3000               	movlw	0
 16558  26AE  3DF1               	addwfc	strlen@s+1,f
 16559  26AF  2EA4               	goto	l3500
 16560  26B0                     l3502:	
 16561  26B0  0873               	movf	strlen@a,w
 16562  26B1  0270               	subwf	strlen@s,w
 16563  26B2  00F0               	movwf	?_strlen
 16564  26B3  0874               	movf	strlen@a+1,w
 16565  26B4  3B71               	subwfb	strlen@s+1,w
 16566  26B5  00F1               	movwf	?_strlen+1
 16567  26B6  0008               	return
 16568  26B7                     __end_of_strlen:	
 16569                           
 16570                           	psect	text53
 16571  1274                     __ptext53:	
 16572 ;; *************** function _BME280_Init *****************
 16573 ;; Defined at:
 16574 ;;		line 86 in file "bme280_i2c.c"
 16575 ;; Parameters:    Size  Location     Type
 16576 ;;		None
 16577 ;; Auto vars:     Size  Location     Type
 16578 ;;  settings_sel    1   16[BANK1 ] unsigned char 
 16579 ;;  rslt            1   17[BANK1 ] char 
 16580 ;; Return value:  Size  Location     Type
 16581 ;;                  1    wreg      void 
 16582 ;; Registers used:
 16583 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16584 ;; Tracked objects:
 16585 ;;		On entry : 0/0
 16586 ;;		On exit  : 0/0
 16587 ;;		Unchanged: 0/0
 16588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16590 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16591 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16592 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16593 ;;Total ram usage:        4 bytes
 16594 ;; Hardware stack levels used:    1
 16595 ;; Hardware stack levels required when called:   16
 16596 ;; This function calls:
 16597 ;;		_DebugAlert
 16598 ;;		_I2C_Init
 16599 ;;		_bme280_init
 16600 ;;		_bme280_set_sensor_mode
 16601 ;;		_bme280_set_sensor_settings
 16602 ;; This function is called by:
 16603 ;;		_main
 16604 ;; This function uses a non-reentrant model
 16605 ;;
 16606                           
 16607                           
 16608                           ;psect for function _BME280_Init
 16609  1274                     _BME280_Init:	
 16610                           
 16611                           ;bme280_i2c.c: 88:     I2C_Init();
 16612                           
 16613                           ;incstack = 0
 16614 ;; hardware stack exceeded
 16615                           ; Regs used in _BME280_Init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16616  1274  31A6  268B  3192   	fcall	_I2C_Init
 16617                           
 16618                           ;bme280_i2c.c: 92:     EnvSensor.dev_id = 0x76;
 16619  1277  3076               	movlw	118
 16620  1278  0141               	movlb	1	; select bank1
 16621  1279  00AE               	movwf	??_BME280_Init^(0+128)
 16622  127A  082E               	movf	??_BME280_Init^(0+128),w
 16623  127B  0143               	movlb	3	; select bank3
 16624  127C  00A1               	movwf	(_EnvSensor^(0+384)+1)
 16625                           
 16626                           ;bme280_i2c.c: 93:     EnvSensor.intf = BME280_I2C_INTF;
 16627  127D  01A2               	clrf	(_EnvSensor^(0+384)+2)
 16628  127E  0AA2               	incf	(_EnvSensor^(0+384)+2),f
 16629                           
 16630                           ;bme280_i2c.c: 94:     EnvSensor.read = ReadEnvSensor;
 16631  127F  3013               	movlw	low _ReadEnvSensor
 16632  1280  00A3               	movwf	(low ((_EnvSensor| (0+256)+3)))^(0+128)
 16633  1281  301E               	movlw	high _ReadEnvSensor
 16634  1282  00A4               	movwf	((low ((_EnvSensor| (0+256)+3)))^(0+128)+1)
 16635                           
 16636                           ;bme280_i2c.c: 95:     EnvSensor.write = WriteEnvSensor;
 16637  1283  30B1               	movlw	low _WriteEnvSensor
 16638  1284  00A5               	movwf	(low ((_EnvSensor| (0+256)+5)))^(0+128)
 16639  1285  301A               	movlw	high _WriteEnvSensor
 16640  1286  00A6               	movwf	((low ((_EnvSensor| (0+256)+5)))^(0+128)+1)
 16641                           
 16642                           ;bme280_i2c.c: 96:     EnvSensor.delay_ms = Sleep;
 16643  1287  3015               	movlw	low _Sleep
 16644  1288  00A7               	movwf	(low ((_EnvSensor| (0+256)+7)))^(0+128)
 16645  1289  3019               	movlw	high _Sleep
 16646  128A  00A8               	movwf	((low ((_EnvSensor| (0+256)+7)))^(0+128)+1)
 16647                           
 16648                           ;bme280_i2c.c: 98:     rslt = bme280_init(&EnvSensor);
 16649  128B  30A0               	movlw	(low (_EnvSensor| (0+256)))& (0+255)
 16650  128C  3192  2209  3192   	fcall	_bme280_init
 16651  128F  0141               	movlb	1	; select bank1
 16652  1290  00AE               	movwf	??_BME280_Init^(0+128)
 16653  1291  082E               	movf	??_BME280_Init^(0+128),w
 16654  1292  00B1               	movwf	BME280_Init@rslt^(0+128)
 16655                           
 16656                           ;bme280_i2c.c: 100:     if (rslt == 0)
 16657  1293  0831               	movf	BME280_Init@rslt^(0+128),w
 16658  1294  1D03               	btfss	3,2
 16659  1295  2ACF               	goto	l5410
 16660                           
 16661                           ;bme280_i2c.c: 101:     {;bme280_i2c.c: 102:         uint8_t settings_sel;;bme280_i2c.c:
      +                           105:         EnvSensor.settings.osr_h = 0x01;
 16662  1296  0143               	movlb	3	; select bank3
 16663  1297  01D0               	clrf	(_EnvSensor^(0+384)+48)
 16664  1298  0AD0               	incf	(_EnvSensor^(0+384)+48),f
 16665                           
 16666                           ;bme280_i2c.c: 106:         EnvSensor.settings.osr_p = 0x05;
 16667  1299  3005               	movlw	5
 16668  129A  0141               	movlb	1	; select bank1
 16669  129B  00AE               	movwf	??_BME280_Init^(0+128)
 16670  129C  082E               	movf	??_BME280_Init^(0+128),w
 16671  129D  0143               	movlb	3	; select bank3
 16672  129E  00CE               	movwf	(_EnvSensor^(0+384)+46)
 16673                           
 16674                           ;bme280_i2c.c: 107:         EnvSensor.settings.osr_t = 0x02;
 16675  129F  3002               	movlw	2
 16676  12A0  0141               	movlb	1	; select bank1
 16677  12A1  00AE               	movwf	??_BME280_Init^(0+128)
 16678  12A2  082E               	movf	??_BME280_Init^(0+128),w
 16679  12A3  0143               	movlb	3	; select bank3
 16680  12A4  00CF               	movwf	(_EnvSensor^(0+384)+47)
 16681                           
 16682                           ;bme280_i2c.c: 108:         EnvSensor.settings.filter = (0x04);
 16683  12A5  3004               	movlw	4
 16684  12A6  0141               	movlb	1	; select bank1
 16685  12A7  00AE               	movwf	??_BME280_Init^(0+128)
 16686  12A8  082E               	movf	??_BME280_Init^(0+128),w
 16687  12A9  0143               	movlb	3	; select bank3
 16688  12AA  00D1               	movwf	(_EnvSensor^(0+384)+49)
 16689                           
 16690                           ;bme280_i2c.c: 109:         EnvSensor.settings.standby_time = (0x01);
 16691  12AB  01D2               	clrf	(_EnvSensor^(0+384)+50)
 16692  12AC  0AD2               	incf	(_EnvSensor^(0+384)+50),f
 16693                           
 16694                           ;bme280_i2c.c: 111:         settings_sel = 1;
 16695  12AD  0141               	movlb	1	; select bank1
 16696  12AE  01B0               	clrf	BME280_Init@settings_sel^(0+128)
 16697  12AF  0AB0               	incf	BME280_Init@settings_sel^(0+128),f
 16698                           
 16699                           ;bme280_i2c.c: 112:         settings_sel |= 1 << 1;
 16700  12B0  14B0               	bsf	BME280_Init@settings_sel^(0+128),1
 16701                           
 16702                           ;bme280_i2c.c: 113:         settings_sel |= 1 << 2;
 16703  12B1  1530               	bsf	BME280_Init@settings_sel^(0+128),2
 16704                           
 16705                           ;bme280_i2c.c: 114:         settings_sel |= 1 << 4;
 16706  12B2  1630               	bsf	BME280_Init@settings_sel^(0+128),4
 16707                           
 16708                           ;bme280_i2c.c: 115:         settings_sel |= 1 << 3;
 16709  12B3  15B0               	bsf	BME280_Init@settings_sel^(0+128),3
 16710  12B4  30A0               	movlw	(low (_EnvSensor| (0+256)))& (0+255)
 16711  12B5  00AE               	movwf	??_BME280_Init^(0+128)
 16712  12B6  082E               	movf	??_BME280_Init^(0+128),w
 16713  12B7  0140               	movlb	0	; select bank0
 16714  12B8  00EC               	movwf	bme280_set_sensor_settings@dev
 16715  12B9  0141               	movlb	1	; select bank1
 16716  12BA  0830               	movf	BME280_Init@settings_sel^(0+128),w
 16717  12BB  3193  2356  3192   	fcall	_bme280_set_sensor_settings
 16718                           
 16719                           ;bme280_i2c.c: 117:         rslt = bme280_set_sensor_mode(0x03, &EnvSensor);
 16720  12BE  30A0               	movlw	(low (_EnvSensor| (0+256)))& (0+255)
 16721  12BF  0141               	movlb	1	; select bank1
 16722  12C0  00AE               	movwf	??_BME280_Init^(0+128)
 16723  12C1  082E               	movf	??_BME280_Init^(0+128),w
 16724  12C2  0140               	movlb	0	; select bank0
 16725  12C3  00EC               	movwf	bme280_set_sensor_mode@dev
 16726  12C4  3003               	movlw	3
 16727  12C5  319B  2359  3192   	fcall	_bme280_set_sensor_mode
 16728  12C8  0141               	movlb	1	; select bank1
 16729  12C9  00AF               	movwf	(??_BME280_Init+1)^(0+128)
 16730  12CA  082F               	movf	(??_BME280_Init+1)^(0+128),w
 16731  12CB  00B1               	movwf	BME280_Init@rslt^(0+128)
 16732                           
 16733                           ;bme280_i2c.c: 119:         if (rslt == 0)
 16734  12CC  0831               	movf	BME280_Init@rslt^(0+128),w
 16735  12CD  1903               	btfsc	3,2
 16736  12CE  0008               	return
 16737  12CF                     l5410:	
 16738                           
 16739                           ;bme280_i2c.c: 125:     DebugAlert(200, 200, 3);;
 16740  12CF  30C8               	movlw	200
 16741  12D0  0140               	movlb	0	; select bank0
 16742  12D1  00A0               	movwf	DebugAlert@delay_high
 16743  12D2  3000               	movlw	0
 16744  12D3  00A1               	movwf	DebugAlert@delay_high+1
 16745  12D4  30C8               	movlw	200
 16746  12D5  00A2               	movwf	DebugAlert@delay_low
 16747  12D6  3000               	movlw	0
 16748  12D7  00A3               	movwf	DebugAlert@delay_low+1
 16749  12D8  3003               	movlw	3
 16750  12D9  0141               	movlb	1	; select bank1
 16751  12DA  00AE               	movwf	??_BME280_Init^(0+128)
 16752  12DB  082E               	movf	??_BME280_Init^(0+128),w
 16753  12DC  0140               	movlb	0	; select bank0
 16754  12DD  00A4               	movwf	DebugAlert@num_flashes
 16755  12DE  3198  20C1         	fcall	_DebugAlert
 16756  12E0  0008               	return
 16757  12E1                     __end_of_BME280_Init:	
 16758                           
 16759                           	psect	text54
 16760  1356                     __ptext54:	
 16761 ;; *************** function _bme280_set_sensor_settings *****************
 16762 ;; Defined at:
 16763 ;;		line 510 in file "BME280_driver/bme280.c"
 16764 ;; Parameters:    Size  Location     Type
 16765 ;;  desired_sett    1    wreg     unsigned char 
 16766 ;;  dev             1   76[BANK0 ] PTR const struct bme280_
 16767 ;;		 -> EnvSensor(51), 
 16768 ;; Auto vars:     Size  Location     Type
 16769 ;;  desired_sett    1   11[BANK1 ] unsigned char 
 16770 ;;  rslt            1   13[BANK1 ] char 
 16771 ;;  sensor_mode     1   12[BANK1 ] unsigned char 
 16772 ;; Return value:  Size  Location     Type
 16773 ;;                  1    wreg      char 
 16774 ;; Registers used:
 16775 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16776 ;; Tracked objects:
 16777 ;;		On entry : 0/0
 16778 ;;		On exit  : 0/0
 16779 ;;		Unchanged: 0/0
 16780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16781 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16782 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16783 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16784 ;;      Totals:         0       3       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16785 ;;Total ram usage:        6 bytes
 16786 ;; Hardware stack levels used:    1
 16787 ;; Hardware stack levels required when called:   15
 16788 ;; This function calls:
 16789 ;;		_are_settings_changed
 16790 ;;		_bme280_get_sensor_mode
 16791 ;;		_null_ptr_check
 16792 ;;		_put_device_to_sleep
 16793 ;;		_set_filter_standby_settings
 16794 ;;		_set_osr_settings
 16795 ;; This function is called by:
 16796 ;;		_BME280_Init
 16797 ;; This function uses a non-reentrant model
 16798 ;;
 16799                           
 16800                           
 16801                           ;psect for function _bme280_set_sensor_settings
 16802  1356                     _bme280_set_sensor_settings:	
 16803                           
 16804                           ;incstack = 0
 16805 ;; hardware stack exceeded
 16806                           ; Regs used in _bme280_set_sensor_settings: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 16807                           ;bme280_set_sensor_settings@desired_settings stored from wreg
 16808  1356  0141               	movlb	1	; select bank1
 16809  1357  00AB               	movwf	bme280_set_sensor_settings@desired_settings^(0+128)
 16810                           
 16811                           ;BME280_driver/bme280.c: 510: int8_t bme280_set_sensor_settings(uint8_t desired_settings
      +                          , const struct bme280_dev *dev);BME280_driver/bme280.c: 511: {;BME280_driver/bme280.c: 5
      +                          12:     int8_t rslt;;BME280_driver/bme280.c: 513:     uint8_t sensor_mode;;BME280_driver
      +                          /bme280.c: 516:     rslt = null_ptr_check(dev);
 16812  1358  0140               	movlb	0	; select bank0
 16813  1359  086C               	movf	bme280_set_sensor_settings@dev,w
 16814  135A  31A7  2790  3193   	fcall	_null_ptr_check
 16815  135D  0140               	movlb	0	; select bank0
 16816  135E  00ED               	movwf	??_bme280_set_sensor_settings
 16817  135F  086D               	movf	??_bme280_set_sensor_settings,w
 16818  1360  0141               	movlb	1	; select bank1
 16819  1361  00AD               	movwf	bme280_set_sensor_settings@rslt^(0+128)
 16820                           
 16821                           ;BME280_driver/bme280.c: 519:     if (rslt == 0)
 16822  1362  082D               	movf	bme280_set_sensor_settings@rslt^(0+128),w
 16823  1363  1D03               	btfss	3,2
 16824  1364  2BC9               	goto	l5312
 16825                           
 16826                           ;BME280_driver/bme280.c: 520:     {;BME280_driver/bme280.c: 521:         rslt = bme280_g
      +                          et_sensor_mode(&sensor_mode, dev);
 16827  1365  0140               	movlb	0	; select bank0
 16828  1366  086C               	movf	bme280_set_sensor_settings@dev,w
 16829  1367  00ED               	movwf	??_bme280_set_sensor_settings
 16830  1368  086D               	movf	??_bme280_set_sensor_settings,w
 16831  1369  00C0               	movwf	bme280_get_sensor_mode@dev
 16832  136A  30AC               	movlw	(low (bme280_set_sensor_settings@sensor_mode| 0))& (0+255)
 16833  136B  3199  21C5  3193   	fcall	_bme280_get_sensor_mode
 16834  136E  0140               	movlb	0	; select bank0
 16835  136F  00EE               	movwf	??_bme280_set_sensor_settings+1
 16836  1370  086E               	movf	??_bme280_set_sensor_settings+1,w
 16837  1371  0141               	movlb	1	; select bank1
 16838  1372  00AD               	movwf	bme280_set_sensor_settings@rslt^(0+128)
 16839                           
 16840                           ;BME280_driver/bme280.c: 522:         if ((rslt == 0) && (sensor_mode != 0x00))
 16841  1373  082D               	movf	bme280_set_sensor_settings@rslt^(0+128),w
 16842  1374  1D03               	btfss	3,2
 16843  1375  2B83               	goto	l5300
 16844  1376  082C               	movf	bme280_set_sensor_settings@sensor_mode^(0+128),w
 16845  1377  1903               	btfsc	3,2
 16846  1378  2B83               	goto	l5300
 16847                           
 16848                           ;BME280_driver/bme280.c: 523:         {;BME280_driver/bme280.c: 524:             rslt = 
      +                          put_device_to_sleep(dev);
 16849  1379  0140               	movlb	0	; select bank0
 16850  137A  086C               	movf	bme280_set_sensor_settings@dev,w
 16851  137B  319B  2399  3193   	fcall	_put_device_to_sleep
 16852  137E  0140               	movlb	0	; select bank0
 16853  137F  00ED               	movwf	??_bme280_set_sensor_settings
 16854  1380  086D               	movf	??_bme280_set_sensor_settings,w
 16855  1381  0141               	movlb	1	; select bank1
 16856  1382  00AD               	movwf	bme280_set_sensor_settings@rslt^(0+128)
 16857  1383                     l5300:	
 16858                           
 16859                           ;BME280_driver/bme280.c: 526:         if (rslt == 0)
 16860  1383  082D               	movf	bme280_set_sensor_settings@rslt^(0+128),w
 16861  1384  1D03               	btfss	3,2
 16862  1385  2BC9               	goto	l5312
 16863                           
 16864                           ;BME280_driver/bme280.c: 527:         {;BME280_driver/bme280.c: 531:             if (are
      +                          _settings_changed(0x07, desired_settings))
 16865  1386  082B               	movf	bme280_set_sensor_settings@desired_settings^(0+128),w
 16866  1387  0140               	movlb	0	; select bank0
 16867  1388  00ED               	movwf	??_bme280_set_sensor_settings
 16868  1389  086D               	movf	??_bme280_set_sensor_settings,w
 16869  138A  00F0               	movwf	are_settings_changed@desired_settings
 16870  138B  3007               	movlw	7
 16871  138C  31A5  25F9  3193   	fcall	_are_settings_changed
 16872  138F  3A00               	xorlw	0
 16873  1390  1903               	skipnz
 16874  1391  2BA6               	goto	l5306
 16875                           
 16876                           ;BME280_driver/bme280.c: 532:             {;BME280_driver/bme280.c: 533:                
      +                           rslt = set_osr_settings(desired_settings, &dev->settings, dev);
 16877  1392  0140               	movlb	0	; select bank0
 16878  1393  086C               	movf	bme280_set_sensor_settings@dev,w
 16879  1394  3E2E               	addlw	46
 16880  1395  00DD               	movwf	set_osr_settings@settings
 16881  1396  3001               	movlw	1
 16882  1397  00DE               	movwf	set_osr_settings@settings+1
 16883  1398  086C               	movf	bme280_set_sensor_settings@dev,w
 16884  1399  00ED               	movwf	??_bme280_set_sensor_settings
 16885  139A  086D               	movf	??_bme280_set_sensor_settings,w
 16886  139B  00DF               	movwf	set_osr_settings@dev
 16887  139C  0141               	movlb	1	; select bank1
 16888  139D  082B               	movf	bme280_set_sensor_settings@desired_settings^(0+128),w
 16889  139E  3198  20EB  3193   	fcall	_set_osr_settings
 16890  13A1  0140               	movlb	0	; select bank0
 16891  13A2  00EE               	movwf	??_bme280_set_sensor_settings+1
 16892  13A3  086E               	movf	??_bme280_set_sensor_settings+1,w
 16893  13A4  0141               	movlb	1	; select bank1
 16894  13A5  00AD               	movwf	bme280_set_sensor_settings@rslt^(0+128)
 16895  13A6                     l5306:	
 16896                           
 16897                           ;BME280_driver/bme280.c: 539:             if ((rslt == 0) && are_settings_changed(0x18, 
      +                          desired_settings))
 16898  13A6  0141               	movlb	1	; select bank1
 16899  13A7  082D               	movf	bme280_set_sensor_settings@rslt^(0+128),w
 16900  13A8  1D03               	btfss	3,2
 16901  13A9  2BC9               	goto	l5312
 16902  13AA  082B               	movf	bme280_set_sensor_settings@desired_settings^(0+128),w
 16903  13AB  0140               	movlb	0	; select bank0
 16904  13AC  00ED               	movwf	??_bme280_set_sensor_settings
 16905  13AD  086D               	movf	??_bme280_set_sensor_settings,w
 16906  13AE  00F0               	movwf	are_settings_changed@desired_settings
 16907  13AF  3018               	movlw	24
 16908  13B0  31A5  25F9  3193   	fcall	_are_settings_changed
 16909  13B3  3A00               	xorlw	0
 16910  13B4  1903               	skipnz
 16911  13B5  2BC9               	goto	l5312
 16912                           
 16913                           ;BME280_driver/bme280.c: 540:             {;BME280_driver/bme280.c: 541:                
      +                           rslt = set_filter_standby_settings(desired_settings, &dev->settings, dev);
 16914  13B6  0140               	movlb	0	; select bank0
 16915  13B7  086C               	movf	bme280_set_sensor_settings@dev,w
 16916  13B8  3E2E               	addlw	46
 16917  13B9  00D3               	movwf	set_filter_standby_settings@settings
 16918  13BA  3001               	movlw	1
 16919  13BB  00D4               	movwf	set_filter_standby_settings@settings+1
 16920  13BC  086C               	movf	bme280_set_sensor_settings@dev,w
 16921  13BD  00ED               	movwf	??_bme280_set_sensor_settings
 16922  13BE  086D               	movf	??_bme280_set_sensor_settings,w
 16923  13BF  00D5               	movwf	set_filter_standby_settings@dev
 16924  13C0  0141               	movlb	1	; select bank1
 16925  13C1  082B               	movf	bme280_set_sensor_settings@desired_settings^(0+128),w
 16926  13C2  319C  24A6         	fcall	_set_filter_standby_settings
 16927  13C4  0140               	movlb	0	; select bank0
 16928  13C5  00EE               	movwf	??_bme280_set_sensor_settings+1
 16929  13C6  086E               	movf	??_bme280_set_sensor_settings+1,w
 16930  13C7  0141               	movlb	1	; select bank1
 16931  13C8  00AD               	movwf	bme280_set_sensor_settings@rslt^(0+128)
 16932  13C9                     l5312:	
 16933                           
 16934                           ;BME280_driver/bme280.c: 546:     return rslt;
 16935  13C9  0141               	movlb	1	; select bank1
 16936  13CA  082D               	movf	bme280_set_sensor_settings@rslt^(0+128),w
 16937  13CB  0008               	return
 16938  13CC                     __end_of_bme280_set_sensor_settings:	
 16939                           
 16940                           	psect	text55
 16941  25F9                     __ptext55:	
 16942 ;; *************** function _are_settings_changed *****************
 16943 ;; Defined at:
 16944 ;;		line 1403 in file "BME280_driver/bme280.c"
 16945 ;; Parameters:    Size  Location     Type
 16946 ;;  sub_settings    1    wreg     unsigned char 
 16947 ;;  desired_sett    1    0[COMMON] unsigned char 
 16948 ;; Auto vars:     Size  Location     Type
 16949 ;;  sub_settings    1    1[COMMON] unsigned char 
 16950 ;;  settings_cha    1    2[COMMON] unsigned char 
 16951 ;; Return value:  Size  Location     Type
 16952 ;;                  1    wreg      unsigned char 
 16953 ;; Registers used:
 16954 ;;		wreg, status,2, status,0
 16955 ;; Tracked objects:
 16956 ;;		On entry : 0/0
 16957 ;;		On exit  : 0/0
 16958 ;;		Unchanged: 0/0
 16959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16960 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16961 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16963 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16964 ;;Total ram usage:        3 bytes
 16965 ;; Hardware stack levels used:    1
 16966 ;; Hardware stack levels required when called:    3
 16967 ;; This function calls:
 16968 ;;		Nothing
 16969 ;; This function is called by:
 16970 ;;		_bme280_set_sensor_settings
 16971 ;; This function uses a non-reentrant model
 16972 ;;
 16973                           
 16974                           
 16975                           ;psect for function _are_settings_changed
 16976  25F9                     _are_settings_changed:	
 16977                           
 16978                           ;incstack = 0
 16979                           ; Regs used in _are_settings_changed: [wreg+status,2+status,0]
 16980                           ;are_settings_changed@sub_settings stored from wreg
 16981  25F9  00F1               	movwf	are_settings_changed@sub_settings
 16982                           
 16983                           ;BME280_driver/bme280.c: 1407:     if (sub_settings & desired_settings)
 16984  25FA  0871               	movf	are_settings_changed@sub_settings,w
 16985  25FB  0570               	andwf	are_settings_changed@desired_settings,w
 16986  25FC  1903               	btfsc	3,2
 16987  25FD  2E01               	goto	l5228
 16988                           
 16989                           ;BME280_driver/bme280.c: 1408:     {;BME280_driver/bme280.c: 1410:         settings_chan
      +                          ged = 1;
 16990  25FE  01F2               	clrf	are_settings_changed@settings_changed
 16991  25FF  0AF2               	incf	are_settings_changed@settings_changed,f
 16992                           
 16993                           ;BME280_driver/bme280.c: 1411:     }
 16994  2600  2E02               	goto	l5230
 16995  2601                     l5228:	
 16996                           
 16997                           ;BME280_driver/bme280.c: 1413:     {;BME280_driver/bme280.c: 1415:         settings_chan
      +                          ged = 0;
 16998  2601  01F2               	clrf	are_settings_changed@settings_changed
 16999  2602                     l5230:	
 17000                           
 17001                           ;BME280_driver/bme280.c: 1418:     return settings_changed;
 17002  2602  0872               	movf	are_settings_changed@settings_changed,w
 17003  2603  0008               	return
 17004  2604                     __end_of_are_settings_changed:	
 17005                           
 17006                           	psect	text56
 17007  1B59                     __ptext56:	
 17008 ;; *************** function _bme280_set_sensor_mode *****************
 17009 ;; Defined at:
 17010 ;;		line 577 in file "BME280_driver/bme280.c"
 17011 ;; Parameters:    Size  Location     Type
 17012 ;;  sensor_mode     1    wreg     unsigned char 
 17013 ;;  dev             1   76[BANK0 ] PTR const struct bme280_
 17014 ;;		 -> EnvSensor(51), 
 17015 ;; Auto vars:     Size  Location     Type
 17016 ;;  sensor_mode     1   11[BANK1 ] unsigned char 
 17017 ;;  rslt            1   13[BANK1 ] char 
 17018 ;;  last_set_mod    1   12[BANK1 ] unsigned char 
 17019 ;; Return value:  Size  Location     Type
 17020 ;;                  1    wreg      char 
 17021 ;; Registers used:
 17022 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17023 ;; Tracked objects:
 17024 ;;		On entry : 0/0
 17025 ;;		On exit  : 0/0
 17026 ;;		Unchanged: 0/0
 17027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17028 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17029 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17030 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17031 ;;      Totals:         0       3       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17032 ;;Total ram usage:        6 bytes
 17033 ;; Hardware stack levels used:    1
 17034 ;; Hardware stack levels required when called:   15
 17035 ;; This function calls:
 17036 ;;		_bme280_get_sensor_mode
 17037 ;;		_null_ptr_check
 17038 ;;		_put_device_to_sleep
 17039 ;;		_write_power_mode
 17040 ;; This function is called by:
 17041 ;;		_BME280_Init
 17042 ;; This function uses a non-reentrant model
 17043 ;;
 17044                           
 17045                           
 17046                           ;psect for function _bme280_set_sensor_mode
 17047  1B59                     _bme280_set_sensor_mode:	
 17048                           
 17049                           ;incstack = 0
 17050 ;; hardware stack exceeded
 17051                           ; Regs used in _bme280_set_sensor_mode: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
 17052                           ;bme280_set_sensor_mode@sensor_mode stored from wreg
 17053  1B59  0141               	movlb	1	; select bank1
 17054  1B5A  00AB               	movwf	bme280_set_sensor_mode@sensor_mode^(0+128)
 17055                           
 17056                           ;BME280_driver/bme280.c: 577: int8_t bme280_set_sensor_mode(uint8_t sensor_mode, const s
      +                          truct bme280_dev *dev);BME280_driver/bme280.c: 578: {;BME280_driver/bme280.c: 579:     i
      +                          nt8_t rslt;;BME280_driver/bme280.c: 580:     uint8_t last_set_mode;;BME280_driver/bme280
      +                          .c: 583:     rslt = null_ptr_check(dev);
 17057  1B5B  0140               	movlb	0	; select bank0
 17058  1B5C  086C               	movf	bme280_set_sensor_mode@dev,w
 17059  1B5D  31A7  2790  319B   	fcall	_null_ptr_check
 17060  1B60  0140               	movlb	0	; select bank0
 17061  1B61  00ED               	movwf	??_bme280_set_sensor_mode
 17062  1B62  086D               	movf	??_bme280_set_sensor_mode,w
 17063  1B63  0141               	movlb	1	; select bank1
 17064  1B64  00AD               	movwf	bme280_set_sensor_mode@rslt^(0+128)
 17065                           
 17066                           ;BME280_driver/bme280.c: 584:     if (rslt == 0)
 17067  1B65  082D               	movf	bme280_set_sensor_mode@rslt^(0+128),w
 17068  1B66  1D03               	btfss	3,2
 17069  1B67  2B97               	goto	l5332
 17070                           
 17071                           ;BME280_driver/bme280.c: 585:     {;BME280_driver/bme280.c: 586:         rslt = bme280_g
      +                          et_sensor_mode(&last_set_mode, dev);
 17072  1B68  0140               	movlb	0	; select bank0
 17073  1B69  086C               	movf	bme280_set_sensor_mode@dev,w
 17074  1B6A  00ED               	movwf	??_bme280_set_sensor_mode
 17075  1B6B  086D               	movf	??_bme280_set_sensor_mode,w
 17076  1B6C  00C0               	movwf	bme280_get_sensor_mode@dev
 17077  1B6D  30AC               	movlw	(low (bme280_set_sensor_mode@last_set_mode| 0))& (0+255)
 17078  1B6E  3199  21C5  319B   	fcall	_bme280_get_sensor_mode
 17079  1B71  0140               	movlb	0	; select bank0
 17080  1B72  00EE               	movwf	??_bme280_set_sensor_mode+1
 17081  1B73  086E               	movf	??_bme280_set_sensor_mode+1,w
 17082  1B74  0141               	movlb	1	; select bank1
 17083  1B75  00AD               	movwf	bme280_set_sensor_mode@rslt^(0+128)
 17084                           
 17085                           ;BME280_driver/bme280.c: 591:         if ((rslt == 0) && (last_set_mode != 0x00))
 17086  1B76  082D               	movf	bme280_set_sensor_mode@rslt^(0+128),w
 17087  1B77  1D03               	btfss	3,2
 17088  1B78  2B86               	goto	l5328
 17089  1B79  082C               	movf	bme280_set_sensor_mode@last_set_mode^(0+128),w
 17090  1B7A  1903               	btfsc	3,2
 17091  1B7B  2B86               	goto	l5328
 17092                           
 17093                           ;BME280_driver/bme280.c: 592:         {;BME280_driver/bme280.c: 593:             rslt = 
      +                          put_device_to_sleep(dev);
 17094  1B7C  0140               	movlb	0	; select bank0
 17095  1B7D  086C               	movf	bme280_set_sensor_mode@dev,w
 17096  1B7E  319B  2399  319B   	fcall	_put_device_to_sleep
 17097  1B81  0140               	movlb	0	; select bank0
 17098  1B82  00ED               	movwf	??_bme280_set_sensor_mode
 17099  1B83  086D               	movf	??_bme280_set_sensor_mode,w
 17100  1B84  0141               	movlb	1	; select bank1
 17101  1B85  00AD               	movwf	bme280_set_sensor_mode@rslt^(0+128)
 17102  1B86                     l5328:	
 17103                           
 17104                           ;BME280_driver/bme280.c: 597:         if (rslt == 0)
 17105  1B86  082D               	movf	bme280_set_sensor_mode@rslt^(0+128),w
 17106  1B87  1D03               	btfss	3,2
 17107  1B88  2B97               	goto	l5332
 17108                           
 17109                           ;BME280_driver/bme280.c: 598:         {;BME280_driver/bme280.c: 599:             rslt = 
      +                          write_power_mode(sensor_mode, dev);
 17110  1B89  0140               	movlb	0	; select bank0
 17111  1B8A  086C               	movf	bme280_set_sensor_mode@dev,w
 17112  1B8B  00ED               	movwf	??_bme280_set_sensor_mode
 17113  1B8C  086D               	movf	??_bme280_set_sensor_mode,w
 17114  1B8D  00D3               	movwf	write_power_mode@dev
 17115  1B8E  0141               	movlb	1	; select bank1
 17116  1B8F  082B               	movf	bme280_set_sensor_mode@sensor_mode^(0+128),w
 17117  1B90  319A  22E4         	fcall	_write_power_mode
 17118  1B92  0140               	movlb	0	; select bank0
 17119  1B93  00EE               	movwf	??_bme280_set_sensor_mode+1
 17120  1B94  086E               	movf	??_bme280_set_sensor_mode+1,w
 17121  1B95  0141               	movlb	1	; select bank1
 17122  1B96  00AD               	movwf	bme280_set_sensor_mode@rslt^(0+128)
 17123  1B97                     l5332:	
 17124                           
 17125                           ;BME280_driver/bme280.c: 603:     return rslt;
 17126  1B97  082D               	movf	bme280_set_sensor_mode@rslt^(0+128),w
 17127  1B98  0008               	return
 17128  1B99                     __end_of_bme280_set_sensor_mode:	
 17129                           
 17130                           	psect	text57
 17131  1AE4                     __ptext57:	
 17132 ;; *************** function _write_power_mode *****************
 17133 ;; Defined at:
 17134 ;;		line 940 in file "BME280_driver/bme280.c"
 17135 ;; Parameters:    Size  Location     Type
 17136 ;;  sensor_mode     1    wreg     unsigned char 
 17137 ;;  dev             1   51[BANK0 ] PTR const struct bme280_
 17138 ;;		 -> EnvSensor(51), 
 17139 ;; Auto vars:     Size  Location     Type
 17140 ;;  sensor_mode     1   55[BANK0 ] unsigned char 
 17141 ;;  sensor_mode_    1   58[BANK0 ] unsigned char 
 17142 ;;  reg_addr        1   57[BANK0 ] unsigned char 
 17143 ;;  rslt            1   56[BANK0 ] char 
 17144 ;; Return value:  Size  Location     Type
 17145 ;;                  1    wreg      char 
 17146 ;; Registers used:
 17147 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17148 ;; Tracked objects:
 17149 ;;		On entry : 0/0
 17150 ;;		On exit  : 0/0
 17151 ;;		Unchanged: 0/0
 17152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17153 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17154 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17155 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17156 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17157 ;;Total ram usage:        8 bytes
 17158 ;; Hardware stack levels used:    1
 17159 ;; Hardware stack levels required when called:   11
 17160 ;; This function calls:
 17161 ;;		_bme280_get_regs
 17162 ;;		_bme280_set_regs
 17163 ;; This function is called by:
 17164 ;;		_bme280_set_sensor_mode
 17165 ;; This function uses a non-reentrant model
 17166 ;;
 17167                           
 17168                           
 17169                           ;psect for function _write_power_mode
 17170  1AE4                     _write_power_mode:	
 17171                           
 17172                           ;incstack = 0
 17173                           ; Regs used in _write_power_mode: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 17174                           ;write_power_mode@sensor_mode stored from wreg
 17175  1AE4  0140               	movlb	0	; select bank0
 17176  1AE5  00D7               	movwf	write_power_mode@sensor_mode
 17177                           
 17178                           ;BME280_driver/bme280.c: 940: static int8_t write_power_mode(uint8_t sensor_mode, const 
      +                          struct bme280_dev *dev);BME280_driver/bme280.c: 941: {;BME280_driver/bme280.c: 942:     
      +                          int8_t rslt;;BME280_driver/bme280.c: 943:     uint8_t reg_addr = 0xF4;
 17179  1AE6  30F4               	movlw	244
 17180  1AE7  00D4               	movwf	??_write_power_mode
 17181  1AE8  0854               	movf	??_write_power_mode,w
 17182  1AE9  00D9               	movwf	write_power_mode@reg_addr
 17183                           
 17184                           ;BME280_driver/bme280.c: 946:     uint8_t sensor_mode_reg_val;;BME280_driver/bme280.c: 9
      +                          49:     rslt = bme280_get_regs(reg_addr, &sensor_mode_reg_val, 1, dev);
 17185  1AEA  305A               	movlw	(low (write_power_mode@sensor_mode_reg_val| 0))& (0+255)
 17186  1AEB  00D4               	movwf	??_write_power_mode
 17187  1AEC  0854               	movf	??_write_power_mode,w
 17188  1AED  00B7               	movwf	bme280_get_regs@reg_data
 17189  1AEE  3001               	movlw	1
 17190  1AEF  00B8               	movwf	bme280_get_regs@len
 17191  1AF0  3000               	movlw	0
 17192  1AF1  00B9               	movwf	bme280_get_regs@len+1
 17193  1AF2  0853               	movf	write_power_mode@dev,w
 17194  1AF3  00D5               	movwf	??_write_power_mode+1
 17195  1AF4  0855               	movf	??_write_power_mode+1,w
 17196  1AF5  00BA               	movwf	bme280_get_regs@dev
 17197  1AF6  0859               	movf	write_power_mode@reg_addr,w
 17198  1AF7  319C  241D  319A   	fcall	_bme280_get_regs
 17199  1AFA  0140               	movlb	0	; select bank0
 17200  1AFB  00D6               	movwf	??_write_power_mode+2
 17201  1AFC  0856               	movf	??_write_power_mode+2,w
 17202  1AFD  00D8               	movwf	write_power_mode@rslt
 17203                           
 17204                           ;BME280_driver/bme280.c: 952:     if (rslt == 0)
 17205  1AFE  0858               	movf	write_power_mode@rslt,w
 17206  1AFF  1D03               	btfss	3,2
 17207  1B00  2B1B               	goto	l5244
 17208                           
 17209                           ;BME280_driver/bme280.c: 953:     {;BME280_driver/bme280.c: 954:         sensor_mode_reg
      +                          _val = ((sensor_mode_reg_val & ~( 0x03)) | (sensor_mode & 0x03));
 17210  1B01  3003               	movlw	3
 17211  1B02  0557               	andwf	write_power_mode@sensor_mode,w
 17212  1B03  00D4               	movwf	??_write_power_mode
 17213  1B04  085A               	movf	write_power_mode@sensor_mode_reg_val,w
 17214  1B05  39FC               	andlw	252
 17215  1B06  0454               	iorwf	??_write_power_mode,w
 17216  1B07  00D5               	movwf	??_write_power_mode+1
 17217  1B08  0855               	movf	??_write_power_mode+1,w
 17218  1B09  00DA               	movwf	write_power_mode@sensor_mode_reg_val
 17219                           
 17220                           ;BME280_driver/bme280.c: 957:         rslt = bme280_set_regs(&reg_addr, &sensor_mode_reg
      +                          _val, 1, dev);
 17221  1B0A  305A               	movlw	(low (write_power_mode@sensor_mode_reg_val| 0))& (0+255)
 17222  1B0B  00D4               	movwf	??_write_power_mode
 17223  1B0C  0854               	movf	??_write_power_mode,w
 17224  1B0D  00B4               	movwf	bme280_set_regs@reg_data
 17225  1B0E  01B5               	clrf	bme280_set_regs@len
 17226  1B0F  0AB5               	incf	bme280_set_regs@len,f
 17227  1B10  0853               	movf	write_power_mode@dev,w
 17228  1B11  00D5               	movwf	??_write_power_mode+1
 17229  1B12  0855               	movf	??_write_power_mode+1,w
 17230  1B13  00B6               	movwf	bme280_set_regs@dev
 17231  1B14  3059               	movlw	(low (write_power_mode@reg_addr| 0))& (0+255)
 17232  1B15  3196  266A         	fcall	_bme280_set_regs
 17233  1B17  0140               	movlb	0	; select bank0
 17234  1B18  00D6               	movwf	??_write_power_mode+2
 17235  1B19  0856               	movf	??_write_power_mode+2,w
 17236  1B1A  00D8               	movwf	write_power_mode@rslt
 17237  1B1B                     l5244:	
 17238                           
 17239                           ;BME280_driver/bme280.c: 960:     return rslt;
 17240  1B1B  0858               	movf	write_power_mode@rslt,w
 17241  1B1C  0008               	return
 17242  1B1D                     __end_of_write_power_mode:	
 17243                           
 17244                           	psect	text58
 17245  1B99                     __ptext58:	
 17246 ;; *************** function _put_device_to_sleep *****************
 17247 ;; Defined at:
 17248 ;;		line 966 in file "BME280_driver/bme280.c"
 17249 ;; Parameters:    Size  Location     Type
 17250 ;;  dev             1    wreg     PTR const struct bme280_
 17251 ;;		 -> EnvSensor(51), 
 17252 ;; Auto vars:     Size  Location     Type
 17253 ;;  dev             1    4[BANK1 ] PTR const struct bme280_
 17254 ;;		 -> EnvSensor(51), 
 17255 ;;  settings        5    6[BANK1 ] struct bme280_settings
 17256 ;;  reg_data        4    0[BANK1 ] unsigned char [4]
 17257 ;;  rslt            1    5[BANK1 ] char 
 17258 ;; Return value:  Size  Location     Type
 17259 ;;                  1    wreg      char 
 17260 ;; Registers used:
 17261 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17262 ;; Tracked objects:
 17263 ;;		On entry : 0/0
 17264 ;;		On exit  : 0/0
 17265 ;;		Unchanged: 0/0
 17266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17268 ;;      Locals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17269 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17270 ;;      Totals:         0       3      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17271 ;;Total ram usage:       14 bytes
 17272 ;; Hardware stack levels used:    1
 17273 ;; Hardware stack levels required when called:   14
 17274 ;; This function calls:
 17275 ;;		_bme280_get_regs
 17276 ;;		_bme280_soft_reset
 17277 ;;		_parse_device_settings
 17278 ;;		_reload_device_settings
 17279 ;; This function is called by:
 17280 ;;		_bme280_set_sensor_settings
 17281 ;;		_bme280_set_sensor_mode
 17282 ;; This function uses a non-reentrant model
 17283 ;;
 17284                           
 17285                           
 17286                           ;psect for function _put_device_to_sleep
 17287  1B99                     _put_device_to_sleep:	
 17288                           
 17289                           ;incstack = 0
 17290 ;; hardware stack exceeded
 17291                           ; Regs used in _put_device_to_sleep: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 17292                           ;put_device_to_sleep@dev stored from wreg
 17293  1B99  0141               	movlb	1	; select bank1
 17294  1B9A  00A4               	movwf	put_device_to_sleep@dev^(0+128)
 17295                           
 17296                           ;BME280_driver/bme280.c: 966: static int8_t put_device_to_sleep(const struct bme280_dev 
      +                          *dev);BME280_driver/bme280.c: 967: {;BME280_driver/bme280.c: 968:     int8_t rslt;;BME28
      +                          0_driver/bme280.c: 969:     uint8_t reg_data[4];;BME280_driver/bme280.c: 970:     struct
      +                           bme280_settings settings;;BME280_driver/bme280.c: 972:     rslt = bme280_get_regs(0xF2,
      +                           reg_data, 4, dev);
 17297  1B9B  30A0               	movlw	(low (put_device_to_sleep@reg_data| 0))& (0+255)
 17298  1B9C  0140               	movlb	0	; select bank0
 17299  1B9D  00E9               	movwf	??_put_device_to_sleep
 17300  1B9E  0869               	movf	??_put_device_to_sleep,w
 17301  1B9F  00B7               	movwf	bme280_get_regs@reg_data
 17302  1BA0  3004               	movlw	4
 17303  1BA1  00B8               	movwf	bme280_get_regs@len
 17304  1BA2  3000               	movlw	0
 17305  1BA3  00B9               	movwf	bme280_get_regs@len+1
 17306  1BA4  0141               	movlb	1	; select bank1
 17307  1BA5  0824               	movf	put_device_to_sleep@dev^(0+128),w
 17308  1BA6  0140               	movlb	0	; select bank0
 17309  1BA7  00EA               	movwf	??_put_device_to_sleep+1
 17310  1BA8  086A               	movf	??_put_device_to_sleep+1,w
 17311  1BA9  00BA               	movwf	bme280_get_regs@dev
 17312  1BAA  30F2               	movlw	242
 17313  1BAB  319C  241D  319B   	fcall	_bme280_get_regs
 17314  1BAE  0140               	movlb	0	; select bank0
 17315  1BAF  00EB               	movwf	??_put_device_to_sleep+2
 17316  1BB0  086B               	movf	??_put_device_to_sleep+2,w
 17317  1BB1  0141               	movlb	1	; select bank1
 17318  1BB2  00A5               	movwf	put_device_to_sleep@rslt^(0+128)
 17319                           
 17320                           ;BME280_driver/bme280.c: 973:     if (rslt == 0)
 17321  1BB3  0825               	movf	put_device_to_sleep@rslt^(0+128),w
 17322  1BB4  1D03               	btfss	3,2
 17323  1BB5  2BD9               	goto	l5218
 17324                           
 17325                           ;BME280_driver/bme280.c: 974:     {;BME280_driver/bme280.c: 975:         parse_device_se
      +                          ttings(reg_data, &settings);
 17326  1BB6  30A6               	movlw	(low (put_device_to_sleep@settings| 0))& (0+255)
 17327  1BB7  0140               	movlb	0	; select bank0
 17328  1BB8  00E9               	movwf	??_put_device_to_sleep
 17329  1BB9  0869               	movf	??_put_device_to_sleep,w
 17330  1BBA  00F0               	movwf	parse_device_settings@settings
 17331  1BBB  30A0               	movlw	(low (put_device_to_sleep@reg_data| 0))& (0+255)
 17332  1BBC  3190  2022  319B   	fcall	_parse_device_settings
 17333                           
 17334                           ;BME280_driver/bme280.c: 976:         rslt = bme280_soft_reset(dev);
 17335  1BBF  0141               	movlb	1	; select bank1
 17336  1BC0  0824               	movf	put_device_to_sleep@dev^(0+128),w
 17337  1BC1  319B  231D  319B   	fcall	_bme280_soft_reset
 17338  1BC4  0140               	movlb	0	; select bank0
 17339  1BC5  00E9               	movwf	??_put_device_to_sleep
 17340  1BC6  0869               	movf	??_put_device_to_sleep,w
 17341  1BC7  0141               	movlb	1	; select bank1
 17342  1BC8  00A5               	movwf	put_device_to_sleep@rslt^(0+128)
 17343                           
 17344                           ;BME280_driver/bme280.c: 977:         if (rslt == 0)
 17345  1BC9  0825               	movf	put_device_to_sleep@rslt^(0+128),w
 17346  1BCA  1D03               	btfss	3,2
 17347  1BCB  2BD9               	goto	l5218
 17348                           
 17349                           ;BME280_driver/bme280.c: 978:         {;BME280_driver/bme280.c: 979:             rslt = 
      +                          reload_device_settings(&settings, dev);
 17350  1BCC  0824               	movf	put_device_to_sleep@dev^(0+128),w
 17351  1BCD  0140               	movlb	0	; select bank0
 17352  1BCE  00E9               	movwf	??_put_device_to_sleep
 17353  1BCF  0869               	movf	??_put_device_to_sleep,w
 17354  1BD0  00E4               	movwf	reload_device_settings@dev
 17355  1BD1  30A6               	movlw	(low (put_device_to_sleep@settings| 0))& (0+255)
 17356  1BD2  31A7  27DA         	fcall	_reload_device_settings
 17357  1BD4  0140               	movlb	0	; select bank0
 17358  1BD5  00EA               	movwf	??_put_device_to_sleep+1
 17359  1BD6  086A               	movf	??_put_device_to_sleep+1,w
 17360  1BD7  0141               	movlb	1	; select bank1
 17361  1BD8  00A5               	movwf	put_device_to_sleep@rslt^(0+128)
 17362  1BD9                     l5218:	
 17363                           
 17364                           ;BME280_driver/bme280.c: 983:     return rslt;
 17365  1BD9  0825               	movf	put_device_to_sleep@rslt^(0+128),w
 17366  1BDA  0008               	return
 17367  1BDB                     __end_of_put_device_to_sleep:	
 17368                           
 17369                           	psect	text59
 17370  27DA                     __ptext59:	
 17371 ;; *************** function _reload_device_settings *****************
 17372 ;; Defined at:
 17373 ;;		line 990 in file "BME280_driver/bme280.c"
 17374 ;; Parameters:    Size  Location     Type
 17375 ;;  settings        1    wreg     PTR const struct bme280_
 17376 ;;		 -> put_device_to_sleep@settings(5), 
 17377 ;;  dev             1   68[BANK0 ] PTR const struct bme280_
 17378 ;;		 -> EnvSensor(51), 
 17379 ;; Auto vars:     Size  Location     Type
 17380 ;;  settings        1   71[BANK0 ] PTR const struct bme280_
 17381 ;;		 -> put_device_to_sleep@settings(5), 
 17382 ;;  rslt            1   72[BANK0 ] char 
 17383 ;; Return value:  Size  Location     Type
 17384 ;;                  1    wreg      char 
 17385 ;; Registers used:
 17386 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17387 ;; Tracked objects:
 17388 ;;		On entry : 0/0
 17389 ;;		On exit  : 0/0
 17390 ;;		Unchanged: 0/0
 17391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17392 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17393 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17394 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17395 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17396 ;;Total ram usage:        5 bytes
 17397 ;; Hardware stack levels used:    1
 17398 ;; Hardware stack levels required when called:   13
 17399 ;; This function calls:
 17400 ;;		_set_filter_standby_settings
 17401 ;;		_set_osr_settings
 17402 ;; This function is called by:
 17403 ;;		_put_device_to_sleep
 17404 ;; This function uses a non-reentrant model
 17405 ;;
 17406                           
 17407                           
 17408                           ;psect for function _reload_device_settings
 17409  27DA                     _reload_device_settings:	
 17410                           
 17411                           ;incstack = 0
 17412 ;; hardware stack exceeded
 17413                           ; Regs used in _reload_device_settings: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
 17414                           ;reload_device_settings@settings stored from wreg
 17415  27DA  0140               	movlb	0	; select bank0
 17416  27DB  00E7               	movwf	reload_device_settings@settings
 17417                           
 17418                           ;BME280_driver/bme280.c: 990: static int8_t reload_device_settings(const struct bme280_s
      +                          ettings *settings, const struct bme280_dev *dev);BME280_driver/bme280.c: 991: {;BME280_d
      +                          river/bme280.c: 992:     int8_t rslt;;BME280_driver/bme280.c: 994:     rslt = set_osr_se
      +                          ttings(0x1F, settings, dev);
 17419  27DC  0867               	movf	reload_device_settings@settings,w
 17420  27DD  00DD               	movwf	set_osr_settings@settings
 17421  27DE  3000               	movlw	0
 17422  27DF  00DE               	movwf	set_osr_settings@settings+1
 17423  27E0  0864               	movf	reload_device_settings@dev,w
 17424  27E1  00E5               	movwf	??_reload_device_settings
 17425  27E2  0865               	movf	??_reload_device_settings,w
 17426  27E3  00DF               	movwf	set_osr_settings@dev
 17427  27E4  301F               	movlw	31
 17428  27E5  3198  20EB  31A7   	fcall	_set_osr_settings
 17429  27E8  0140               	movlb	0	; select bank0
 17430  27E9  00E6               	movwf	??_reload_device_settings+1
 17431  27EA  0866               	movf	??_reload_device_settings+1,w
 17432  27EB  00E8               	movwf	reload_device_settings@rslt
 17433                           
 17434                           ;BME280_driver/bme280.c: 995:     if (rslt == 0)
 17435  27EC  0868               	movf	reload_device_settings@rslt,w
 17436  27ED  1D03               	btfss	3,2
 17437  27EE  2FFE               	goto	l5170
 17438                           
 17439                           ;BME280_driver/bme280.c: 996:     {;BME280_driver/bme280.c: 997:         rslt = set_filt
      +                          er_standby_settings(0x1F, settings, dev);
 17440  27EF  0867               	movf	reload_device_settings@settings,w
 17441  27F0  00D3               	movwf	set_filter_standby_settings@settings
 17442  27F1  3000               	movlw	0
 17443  27F2  00D4               	movwf	set_filter_standby_settings@settings+1
 17444  27F3  0864               	movf	reload_device_settings@dev,w
 17445  27F4  00E5               	movwf	??_reload_device_settings
 17446  27F5  0865               	movf	??_reload_device_settings,w
 17447  27F6  00D5               	movwf	set_filter_standby_settings@dev
 17448  27F7  301F               	movlw	31
 17449  27F8  319C  24A6         	fcall	_set_filter_standby_settings
 17450  27FA  0140               	movlb	0	; select bank0
 17451  27FB  00E6               	movwf	??_reload_device_settings+1
 17452  27FC  0866               	movf	??_reload_device_settings+1,w
 17453  27FD  00E8               	movwf	reload_device_settings@rslt
 17454  27FE                     l5170:	
 17455                           
 17456                           ;BME280_driver/bme280.c: 1000:     return rslt;
 17457  27FE  0868               	movf	reload_device_settings@rslt,w
 17458  27FF  0008               	return
 17459  2800                     __end_of_reload_device_settings:	
 17460                           
 17461                           	psect	text60
 17462  18EB                     __ptext60:	
 17463 ;; *************** function _set_osr_settings *****************
 17464 ;; Defined at:
 17465 ;;		line 776 in file "BME280_driver/bme280.c"
 17466 ;; Parameters:    Size  Location     Type
 17467 ;;  desired_sett    1    wreg     unsigned char 
 17468 ;;  settings        2   61[BANK0 ] PTR const struct bme280_
 17469 ;;		 -> EnvSensor(51), put_device_to_sleep@settings(5), 
 17470 ;;  dev             1   63[BANK0 ] PTR const struct bme280_
 17471 ;;		 -> EnvSensor(51), 
 17472 ;; Auto vars:     Size  Location     Type
 17473 ;;  desired_sett    1   67[BANK0 ] unsigned char 
 17474 ;;  rslt            1   66[BANK0 ] char 
 17475 ;; Return value:  Size  Location     Type
 17476 ;;                  1    wreg      char 
 17477 ;; Registers used:
 17478 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17479 ;; Tracked objects:
 17480 ;;		On entry : 0/0
 17481 ;;		On exit  : 0/0
 17482 ;;		Unchanged: 0/0
 17483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17484 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17485 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17486 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17487 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17488 ;;Total ram usage:        7 bytes
 17489 ;; Hardware stack levels used:    1
 17490 ;; Hardware stack levels required when called:   12
 17491 ;; This function calls:
 17492 ;;		_set_osr_humidity_settings
 17493 ;;		_set_osr_press_temp_settings
 17494 ;; This function is called by:
 17495 ;;		_bme280_set_sensor_settings
 17496 ;;		_reload_device_settings
 17497 ;; This function uses a non-reentrant model
 17498 ;;
 17499                           
 17500                           
 17501                           ;psect for function _set_osr_settings
 17502  18EB                     _set_osr_settings:	
 17503                           
 17504                           ;incstack = 0
 17505                           ; Regs used in _set_osr_settings: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 17506                           ;set_osr_settings@desired_settings stored from wreg
 17507  18EB  0140               	movlb	0	; select bank0
 17508  18EC  00E3               	movwf	set_osr_settings@desired_settings
 17509                           
 17510                           ;BME280_driver/bme280.c: 776: static int8_t set_osr_settings(uint8_t desired_settings,;B
      +                          ME280_driver/bme280.c: 777:                                const struct bme280_settings 
      +                          *settings,;BME280_driver/bme280.c: 778:                                const struct bme2
      +                          80_dev *dev);BME280_driver/bme280.c: 779: {;BME280_driver/bme280.c: 780:     int8_t rslt
      +                           = 1;
 17511  18ED  01E2               	clrf	set_osr_settings@rslt
 17512  18EE  0AE2               	incf	set_osr_settings@rslt,f
 17513                           
 17514                           ;BME280_driver/bme280.c: 782:     if (desired_settings & 1 << 2)
 17515  18EF  1D63               	btfss	set_osr_settings@desired_settings,2
 17516  18F0  2900               	goto	l5124
 17517                           
 17518                           ;BME280_driver/bme280.c: 783:     {;BME280_driver/bme280.c: 784:         rslt = set_osr_
      +                          humidity_settings(settings, dev);
 17519  18F1  085E               	movf	set_osr_settings@settings+1,w
 17520  18F2  00D4               	movwf	set_osr_humidity_settings@settings+1
 17521  18F3  085D               	movf	set_osr_settings@settings,w
 17522  18F4  00D3               	movwf	set_osr_humidity_settings@settings
 17523  18F5  085F               	movf	set_osr_settings@dev,w
 17524  18F6  00E0               	movwf	??_set_osr_settings
 17525  18F7  0860               	movf	??_set_osr_settings,w
 17526  18F8  00D5               	movwf	set_osr_humidity_settings@dev
 17527  18F9  319E  26B5  3198   	fcall	_set_osr_humidity_settings
 17528  18FC  0140               	movlb	0	; select bank0
 17529  18FD  00E1               	movwf	??_set_osr_settings+1
 17530  18FE  0861               	movf	??_set_osr_settings+1,w
 17531  18FF  00E2               	movwf	set_osr_settings@rslt
 17532  1900                     l5124:	
 17533                           
 17534                           ;BME280_driver/bme280.c: 786:     if (desired_settings & (1 | 1 << 1))
 17535  1900  0863               	movf	set_osr_settings@desired_settings,w
 17536  1901  3903               	andlw	3
 17537  1902  1903               	btfsc	3,2
 17538  1903  2913               	goto	l5128
 17539                           
 17540                           ;BME280_driver/bme280.c: 787:     {;BME280_driver/bme280.c: 788:         rslt = set_osr_
      +                          press_temp_settings(desired_settings, settings, dev);
 17541  1904  085E               	movf	set_osr_settings@settings+1,w
 17542  1905  00D4               	movwf	set_osr_press_temp_settings@settings+1
 17543  1906  085D               	movf	set_osr_settings@settings,w
 17544  1907  00D3               	movwf	set_osr_press_temp_settings@settings
 17545  1908  085F               	movf	set_osr_settings@dev,w
 17546  1909  00E0               	movwf	??_set_osr_settings
 17547  190A  0860               	movf	??_set_osr_settings,w
 17548  190B  00D5               	movwf	set_osr_press_temp_settings@dev
 17549  190C  0863               	movf	set_osr_settings@desired_settings,w
 17550  190D  319C  24EC         	fcall	_set_osr_press_temp_settings
 17551  190F  0140               	movlb	0	; select bank0
 17552  1910  00E1               	movwf	??_set_osr_settings+1
 17553  1911  0861               	movf	??_set_osr_settings+1,w
 17554  1912  00E2               	movwf	set_osr_settings@rslt
 17555  1913                     l5128:	
 17556                           
 17557                           ;BME280_driver/bme280.c: 791:     return rslt;
 17558  1913  0862               	movf	set_osr_settings@rslt,w
 17559  1914  0008               	return
 17560  1915                     __end_of_set_osr_settings:	
 17561                           
 17562                           	psect	text61
 17563  1CEC                     __ptext61:	
 17564 ;; *************** function _set_osr_press_temp_settings *****************
 17565 ;; Defined at:
 17566 ;;		line 829 in file "BME280_driver/bme280.c"
 17567 ;; Parameters:    Size  Location     Type
 17568 ;;  desired_sett    1    wreg     unsigned char 
 17569 ;;  settings        2   51[BANK0 ] PTR const struct bme280_
 17570 ;;		 -> EnvSensor(51), put_device_to_sleep@settings(5), 
 17571 ;;  dev             1   53[BANK0 ] PTR const struct bme280_
 17572 ;;		 -> EnvSensor(51), 
 17573 ;; Auto vars:     Size  Location     Type
 17574 ;;  desired_sett    1   57[BANK0 ] unsigned char 
 17575 ;;  reg_data        1   60[BANK0 ] unsigned char 
 17576 ;;  reg_addr        1   59[BANK0 ] unsigned char 
 17577 ;;  rslt            1   58[BANK0 ] char 
 17578 ;; Return value:  Size  Location     Type
 17579 ;;                  1    wreg      char 
 17580 ;; Registers used:
 17581 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17582 ;; Tracked objects:
 17583 ;;		On entry : 0/0
 17584 ;;		On exit  : 0/0
 17585 ;;		Unchanged: 0/0
 17586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17587 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17588 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17589 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17590 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17591 ;;Total ram usage:       10 bytes
 17592 ;; Hardware stack levels used:    1
 17593 ;; Hardware stack levels required when called:   11
 17594 ;; This function calls:
 17595 ;;		_bme280_get_regs
 17596 ;;		_bme280_set_regs
 17597 ;;		_fill_osr_press_settings
 17598 ;;		_fill_osr_temp_settings
 17599 ;; This function is called by:
 17600 ;;		_set_osr_settings
 17601 ;; This function uses a non-reentrant model
 17602 ;;
 17603                           
 17604                           
 17605                           ;psect for function _set_osr_press_temp_settings
 17606  1CEC                     _set_osr_press_temp_settings:	
 17607                           
 17608                           ;incstack = 0
 17609                           ; Regs used in _set_osr_press_temp_settings: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 17610                           ;set_osr_press_temp_settings@desired_settings stored from wreg
 17611  1CEC  0140               	movlb	0	; select bank0
 17612  1CED  00D9               	movwf	set_osr_press_temp_settings@desired_settings
 17613                           
 17614                           ;BME280_driver/bme280.c: 829: static int8_t set_osr_press_temp_settings(uint8_t desired_
      +                          settings,;BME280_driver/bme280.c: 830:                                           const s
      +                          truct bme280_settings *settings,;BME280_driver/bme280.c: 831:                           
      +                                          const struct bme280_dev *dev);BME280_driver/bme280.c: 832: {;BME280_driv
      +                          er/bme280.c: 833:     int8_t rslt;;BME280_driver/bme280.c: 834:     uint8_t reg_addr = 0
      +                          xF4;
 17615  1CEE  30F4               	movlw	244
 17616  1CEF  00D6               	movwf	??_set_osr_press_temp_settings
 17617  1CF0  0856               	movf	??_set_osr_press_temp_settings,w
 17618  1CF1  00DB               	movwf	set_osr_press_temp_settings@reg_addr
 17619                           
 17620                           ;BME280_driver/bme280.c: 835:     uint8_t reg_data;;BME280_driver/bme280.c: 837:     rsl
      +                          t = bme280_get_regs(reg_addr, &reg_data, 1, dev);
 17621  1CF2  305C               	movlw	(low (set_osr_press_temp_settings@reg_data| 0))& (0+255)
 17622  1CF3  00D6               	movwf	??_set_osr_press_temp_settings
 17623  1CF4  0856               	movf	??_set_osr_press_temp_settings,w
 17624  1CF5  00B7               	movwf	bme280_get_regs@reg_data
 17625  1CF6  3001               	movlw	1
 17626  1CF7  00B8               	movwf	bme280_get_regs@len
 17627  1CF8  3000               	movlw	0
 17628  1CF9  00B9               	movwf	bme280_get_regs@len+1
 17629  1CFA  0855               	movf	set_osr_press_temp_settings@dev,w
 17630  1CFB  00D7               	movwf	??_set_osr_press_temp_settings+1
 17631  1CFC  0857               	movf	??_set_osr_press_temp_settings+1,w
 17632  1CFD  00BA               	movwf	bme280_get_regs@dev
 17633  1CFE  085B               	movf	set_osr_press_temp_settings@reg_addr,w
 17634  1CFF  319C  241D  319C   	fcall	_bme280_get_regs
 17635  1D02  0140               	movlb	0	; select bank0
 17636  1D03  00D8               	movwf	??_set_osr_press_temp_settings+2
 17637  1D04  0858               	movf	??_set_osr_press_temp_settings+2,w
 17638  1D05  00DA               	movwf	set_osr_press_temp_settings@rslt
 17639                           
 17640                           ;BME280_driver/bme280.c: 838:     if (rslt == 0)
 17641  1D06  085A               	movf	set_osr_press_temp_settings@rslt,w
 17642  1D07  1D03               	btfss	3,2
 17643  1D08  2D30               	goto	l5110
 17644                           
 17645                           ;BME280_driver/bme280.c: 839:     {;BME280_driver/bme280.c: 840:         if (desired_set
      +                          tings & 1)
 17646  1D09  1C59               	btfss	set_osr_press_temp_settings@desired_settings,0
 17647  1D0A  2D13               	goto	l5106
 17648                           
 17649                           ;BME280_driver/bme280.c: 841:         {;BME280_driver/bme280.c: 842:             fill_os
      +                          r_press_settings(&reg_data, settings);
 17650  1D0B  0854               	movf	set_osr_press_temp_settings@settings+1,w
 17651  1D0C  00F1               	movwf	fill_osr_press_settings@settings+1
 17652  1D0D  0853               	movf	set_osr_press_temp_settings@settings,w
 17653  1D0E  00F0               	movwf	fill_osr_press_settings@settings
 17654  1D0F  305C               	movlw	(low (set_osr_press_temp_settings@reg_data| 0))& (0+255)
 17655  1D10  31A6  26E8  319C   	fcall	_fill_osr_press_settings
 17656  1D13                     l5106:	
 17657                           
 17658                           ;BME280_driver/bme280.c: 844:         if (desired_settings & 1 << 1)
 17659  1D13  0140               	movlb	0	; select bank0
 17660  1D14  1CD9               	btfss	set_osr_press_temp_settings@desired_settings,1
 17661  1D15  2D1E               	goto	l146
 17662                           
 17663                           ;BME280_driver/bme280.c: 845:         {;BME280_driver/bme280.c: 846:             fill_os
      +                          r_temp_settings(&reg_data, settings);
 17664  1D16  0854               	movf	set_osr_press_temp_settings@settings+1,w
 17665  1D17  00F1               	movwf	fill_osr_temp_settings@settings+1
 17666  1D18  0853               	movf	set_osr_press_temp_settings@settings,w
 17667  1D19  00F0               	movwf	fill_osr_temp_settings@settings
 17668  1D1A  305C               	movlw	(low (set_osr_press_temp_settings@reg_data| 0))& (0+255)
 17669  1D1B  31A7  273B  319C   	fcall	_fill_osr_temp_settings
 17670  1D1E                     l146:	
 17671                           ;BME280_driver/bme280.c: 847:         }
 17672                           
 17673                           
 17674                           ;BME280_driver/bme280.c: 850:         rslt = bme280_set_regs(&reg_addr, &reg_data, 1, de
      +                          v);
 17675  1D1E  305C               	movlw	(low (set_osr_press_temp_settings@reg_data| 0))& (0+255)
 17676  1D1F  0140               	movlb	0	; select bank0
 17677  1D20  00D6               	movwf	??_set_osr_press_temp_settings
 17678  1D21  0856               	movf	??_set_osr_press_temp_settings,w
 17679  1D22  00B4               	movwf	bme280_set_regs@reg_data
 17680  1D23  01B5               	clrf	bme280_set_regs@len
 17681  1D24  0AB5               	incf	bme280_set_regs@len,f
 17682  1D25  0855               	movf	set_osr_press_temp_settings@dev,w
 17683  1D26  00D7               	movwf	??_set_osr_press_temp_settings+1
 17684  1D27  0857               	movf	??_set_osr_press_temp_settings+1,w
 17685  1D28  00B6               	movwf	bme280_set_regs@dev
 17686  1D29  305B               	movlw	(low (set_osr_press_temp_settings@reg_addr| 0))& (0+255)
 17687  1D2A  3196  266A         	fcall	_bme280_set_regs
 17688  1D2C  0140               	movlb	0	; select bank0
 17689  1D2D  00D8               	movwf	??_set_osr_press_temp_settings+2
 17690  1D2E  0858               	movf	??_set_osr_press_temp_settings+2,w
 17691  1D2F  00DA               	movwf	set_osr_press_temp_settings@rslt
 17692  1D30                     l5110:	
 17693                           
 17694                           ;BME280_driver/bme280.c: 853:     return rslt;
 17695  1D30  085A               	movf	set_osr_press_temp_settings@rslt,w
 17696  1D31  0008               	return
 17697  1D32                     __end_of_set_osr_press_temp_settings:	
 17698                           
 17699                           	psect	text62
 17700  273B                     __ptext62:	
 17701 ;; *************** function _fill_osr_temp_settings *****************
 17702 ;; Defined at:
 17703 ;;		line 918 in file "BME280_driver/bme280.c"
 17704 ;; Parameters:    Size  Location     Type
 17705 ;;  reg_data        1    wreg     PTR unsigned char 
 17706 ;;		 -> set_osr_press_temp_settings@reg_data(1), 
 17707 ;;  settings        2    0[COMMON] PTR const struct bme280_
 17708 ;;		 -> EnvSensor(51), put_device_to_sleep@settings(5), 
 17709 ;; Auto vars:     Size  Location     Type
 17710 ;;  reg_data        1    5[COMMON] PTR unsigned char 
 17711 ;;		 -> set_osr_press_temp_settings@reg_data(1), 
 17712 ;; Return value:  Size  Location     Type
 17713 ;;                  1    wreg      void 
 17714 ;; Registers used:
 17715 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 17716 ;; Tracked objects:
 17717 ;;		On entry : 0/0
 17718 ;;		On exit  : 0/0
 17719 ;;		Unchanged: 0/0
 17720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17721 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17722 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17723 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17724 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17725 ;;Total ram usage:        6 bytes
 17726 ;; Hardware stack levels used:    1
 17727 ;; Hardware stack levels required when called:    3
 17728 ;; This function calls:
 17729 ;;		Nothing
 17730 ;; This function is called by:
 17731 ;;		_set_osr_press_temp_settings
 17732 ;; This function uses a non-reentrant model
 17733 ;;
 17734                           
 17735                           
 17736                           ;psect for function _fill_osr_temp_settings
 17737  273B                     _fill_osr_temp_settings:	
 17738                           
 17739                           ;incstack = 0
 17740                           ; Regs used in _fill_osr_temp_settings: [wreg+fsr1l+fsr1h+status,2+status,0]
 17741                           ;fill_osr_temp_settings@reg_data stored from wreg
 17742  273B  00F5               	movwf	fill_osr_temp_settings@reg_data
 17743                           
 17744                           ;BME280_driver/bme280.c: 918: static void fill_osr_temp_settings(uint8_t *reg_data, cons
      +                          t struct bme280_settings *settings);BME280_driver/bme280.c: 919: {;BME280_driver/bme280.
      +                          c: 920:     *reg_data = ((*reg_data & ~( 0xE0)) | ((settings->osr_t << 0x05) & 0xE0));
 17745  273C  0870               	movf	fill_osr_temp_settings@settings,w
 17746  273D  0086               	movwf	6
 17747  273E  0871               	movf	fill_osr_temp_settings@settings+1,w
 17748  273F  0087               	movwf	7
 17749  2740  3141               	addfsr 1,1
 17750  2741  0801               	movf	1,w
 17751  2742  00F2               	movwf	??_fill_osr_temp_settings
 17752  2743  3005               	movlw	5
 17753  2744                     u4925:	
 17754  2744  35F2               	lslf	??_fill_osr_temp_settings,f
 17755  2745  0B89               	decfsz	9,f
 17756  2746  2F44               	goto	u4925
 17757  2747  30E0               	movlw	224
 17758  2748  0572               	andwf	??_fill_osr_temp_settings,w
 17759  2749  00F3               	movwf	??_fill_osr_temp_settings+1
 17760  274A  0875               	movf	fill_osr_temp_settings@reg_data,w
 17761  274B  0086               	movwf	6
 17762  274C  0187               	clrf	7
 17763  274D  0801               	movf	1,w
 17764  274E  391F               	andlw	31
 17765  274F  0473               	iorwf	??_fill_osr_temp_settings+1,w
 17766  2750  00F4               	movwf	??_fill_osr_temp_settings+2
 17767  2751  0875               	movf	fill_osr_temp_settings@reg_data,w
 17768  2752  0086               	movwf	6
 17769  2753  0187               	clrf	7
 17770  2754  0874               	movf	??_fill_osr_temp_settings+2,w
 17771  2755  0081               	movwf	1
 17772  2756  0008               	return
 17773  2757                     __end_of_fill_osr_temp_settings:	
 17774                           
 17775                           	psect	text63
 17776  26E8                     __ptext63:	
 17777 ;; *************** function _fill_osr_press_settings *****************
 17778 ;; Defined at:
 17779 ;;		line 909 in file "BME280_driver/bme280.c"
 17780 ;; Parameters:    Size  Location     Type
 17781 ;;  reg_data        1    wreg     PTR unsigned char 
 17782 ;;		 -> set_osr_press_temp_settings@reg_data(1), 
 17783 ;;  settings        2    0[COMMON] PTR const struct bme280_
 17784 ;;		 -> EnvSensor(51), put_device_to_sleep@settings(5), 
 17785 ;; Auto vars:     Size  Location     Type
 17786 ;;  reg_data        1    5[COMMON] PTR unsigned char 
 17787 ;;		 -> set_osr_press_temp_settings@reg_data(1), 
 17788 ;; Return value:  Size  Location     Type
 17789 ;;                  1    wreg      void 
 17790 ;; Registers used:
 17791 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 17792 ;; Tracked objects:
 17793 ;;		On entry : 0/0
 17794 ;;		On exit  : 0/0
 17795 ;;		Unchanged: 0/0
 17796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17797 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17798 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17799 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17800 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17801 ;;Total ram usage:        6 bytes
 17802 ;; Hardware stack levels used:    1
 17803 ;; Hardware stack levels required when called:    3
 17804 ;; This function calls:
 17805 ;;		Nothing
 17806 ;; This function is called by:
 17807 ;;		_set_osr_press_temp_settings
 17808 ;; This function uses a non-reentrant model
 17809 ;;
 17810                           
 17811                           
 17812                           ;psect for function _fill_osr_press_settings
 17813  26E8                     _fill_osr_press_settings:	
 17814                           
 17815                           ;incstack = 0
 17816                           ; Regs used in _fill_osr_press_settings: [wreg+fsr1l+fsr1h+status,2+status,0]
 17817                           ;fill_osr_press_settings@reg_data stored from wreg
 17818  26E8  00F5               	movwf	fill_osr_press_settings@reg_data
 17819                           
 17820                           ;BME280_driver/bme280.c: 909: static void fill_osr_press_settings(uint8_t *reg_data, con
      +                          st struct bme280_settings *settings);BME280_driver/bme280.c: 910: {;BME280_driver/bme280
      +                          .c: 911:     *reg_data = ((*reg_data & ~( 0x1C)) | ((settings->osr_p << 0x02) & 0x1C));
 17821  26E9  0870               	movf	fill_osr_press_settings@settings,w
 17822  26EA  0086               	movwf	6
 17823  26EB  0871               	movf	fill_osr_press_settings@settings+1,w
 17824  26EC  0087               	movwf	7
 17825  26ED  0801               	movf	1,w
 17826  26EE  00F2               	movwf	??_fill_osr_press_settings
 17827  26EF  3002               	movlw	2
 17828  26F0                     u4915:	
 17829  26F0  35F2               	lslf	??_fill_osr_press_settings,f
 17830  26F1  0B89               	decfsz	9,f
 17831  26F2  2EF0               	goto	u4915
 17832  26F3  301C               	movlw	28
 17833  26F4  0572               	andwf	??_fill_osr_press_settings,w
 17834  26F5  00F3               	movwf	??_fill_osr_press_settings+1
 17835  26F6  0875               	movf	fill_osr_press_settings@reg_data,w
 17836  26F7  0086               	movwf	6
 17837  26F8  0187               	clrf	7
 17838  26F9  0801               	movf	1,w
 17839  26FA  39E3               	andlw	227
 17840  26FB  0473               	iorwf	??_fill_osr_press_settings+1,w
 17841  26FC  00F4               	movwf	??_fill_osr_press_settings+2
 17842  26FD  0875               	movf	fill_osr_press_settings@reg_data,w
 17843  26FE  0086               	movwf	6
 17844  26FF  0187               	clrf	7
 17845  2700  0874               	movf	??_fill_osr_press_settings+2,w
 17846  2701  0081               	movwf	1
 17847  2702  0008               	return
 17848  2703                     __end_of_fill_osr_press_settings:	
 17849                           
 17850                           	psect	text64
 17851  1EB5                     __ptext64:	
 17852 ;; *************** function _set_osr_humidity_settings *****************
 17853 ;; Defined at:
 17854 ;;		line 797 in file "BME280_driver/bme280.c"
 17855 ;; Parameters:    Size  Location     Type
 17856 ;;  settings        2   51[BANK0 ] PTR const struct bme280_
 17857 ;;		 -> EnvSensor(51), put_device_to_sleep@settings(5), 
 17858 ;;  dev             1   53[BANK0 ] PTR const struct bme280_
 17859 ;;		 -> EnvSensor(51), 
 17860 ;; Auto vars:     Size  Location     Type
 17861 ;;  reg_addr        1   60[BANK0 ] unsigned char 
 17862 ;;  rslt            1   59[BANK0 ] char 
 17863 ;;  ctrl_meas       1   58[BANK0 ] unsigned char 
 17864 ;;  ctrl_hum        1   57[BANK0 ] unsigned char 
 17865 ;; Return value:  Size  Location     Type
 17866 ;;                  1    wreg      char 
 17867 ;; Registers used:
 17868 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17869 ;; Tracked objects:
 17870 ;;		On entry : 0/0
 17871 ;;		On exit  : 0/0
 17872 ;;		Unchanged: 0/0
 17873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17874 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17875 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17876 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17877 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17878 ;;Total ram usage:       10 bytes
 17879 ;; Hardware stack levels used:    1
 17880 ;; Hardware stack levels required when called:   11
 17881 ;; This function calls:
 17882 ;;		_bme280_get_regs
 17883 ;;		_bme280_set_regs
 17884 ;; This function is called by:
 17885 ;;		_set_osr_settings
 17886 ;; This function uses a non-reentrant model
 17887 ;;
 17888                           
 17889                           
 17890                           ;psect for function _set_osr_humidity_settings
 17891  1EB5                     _set_osr_humidity_settings:	
 17892                           
 17893                           ;BME280_driver/bme280.c: 797: static int8_t set_osr_humidity_settings(const struct bme28
      +                          0_settings *settings, const struct bme280_dev *dev);BME280_driver/bme280.c: 798: {;BME28
      +                          0_driver/bme280.c: 799:     int8_t rslt;;BME280_driver/bme280.c: 800:     uint8_t ctrl_h
      +                          um;;BME280_driver/bme280.c: 801:     uint8_t ctrl_meas;;BME280_driver/bme280.c: 802:    
      +                           uint8_t reg_addr = 0xF2;
 17894                           
 17895                           ;incstack = 0
 17896                           ; Regs used in _set_osr_humidity_settings: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cs
      +                          tack]
 17897  1EB5  30F2               	movlw	242
 17898  1EB6  0140               	movlb	0	; select bank0
 17899  1EB7  00D6               	movwf	??_set_osr_humidity_settings
 17900  1EB8  0856               	movf	??_set_osr_humidity_settings,w
 17901  1EB9  00DC               	movwf	set_osr_humidity_settings@reg_addr
 17902                           
 17903                           ;BME280_driver/bme280.c: 804:     ctrl_hum = settings->osr_h & 0x07;
 17904  1EBA  0853               	movf	set_osr_humidity_settings@settings,w
 17905  1EBB  0086               	movwf	6
 17906  1EBC  0854               	movf	set_osr_humidity_settings@settings+1,w
 17907  1EBD  0087               	movwf	7
 17908  1EBE  3142               	addfsr 1,2
 17909  1EBF  0801               	movf	1,w
 17910  1EC0  3907               	andlw	7
 17911  1EC1  00D6               	movwf	??_set_osr_humidity_settings
 17912  1EC2  0856               	movf	??_set_osr_humidity_settings,w
 17913  1EC3  00D9               	movwf	set_osr_humidity_settings@ctrl_hum
 17914                           
 17915                           ;BME280_driver/bme280.c: 807:     rslt = bme280_set_regs(&reg_addr, &ctrl_hum, 1, dev);
 17916  1EC4  3059               	movlw	(low (set_osr_humidity_settings@ctrl_hum| 0))& (0+255)
 17917  1EC5  00D6               	movwf	??_set_osr_humidity_settings
 17918  1EC6  0856               	movf	??_set_osr_humidity_settings,w
 17919  1EC7  00B4               	movwf	bme280_set_regs@reg_data
 17920  1EC8  01B5               	clrf	bme280_set_regs@len
 17921  1EC9  0AB5               	incf	bme280_set_regs@len,f
 17922  1ECA  0855               	movf	set_osr_humidity_settings@dev,w
 17923  1ECB  00D7               	movwf	??_set_osr_humidity_settings+1
 17924  1ECC  0857               	movf	??_set_osr_humidity_settings+1,w
 17925  1ECD  00B6               	movwf	bme280_set_regs@dev
 17926  1ECE  305C               	movlw	(low (set_osr_humidity_settings@reg_addr| 0))& (0+255)
 17927  1ECF  3196  266A  319E   	fcall	_bme280_set_regs
 17928  1ED2  0140               	movlb	0	; select bank0
 17929  1ED3  00D8               	movwf	??_set_osr_humidity_settings+2
 17930  1ED4  0858               	movf	??_set_osr_humidity_settings+2,w
 17931  1ED5  00DB               	movwf	set_osr_humidity_settings@rslt
 17932                           
 17933                           ;BME280_driver/bme280.c: 812:     if (rslt == 0)
 17934  1ED6  085B               	movf	set_osr_humidity_settings@rslt,w
 17935  1ED7  1D03               	btfss	3,2
 17936  1ED8  2F05               	goto	l5092
 17937                           
 17938                           ;BME280_driver/bme280.c: 813:     {;BME280_driver/bme280.c: 814:         reg_addr = 0xF4
      +                          ;
 17939  1ED9  30F4               	movlw	244
 17940  1EDA  00D6               	movwf	??_set_osr_humidity_settings
 17941  1EDB  0856               	movf	??_set_osr_humidity_settings,w
 17942  1EDC  00DC               	movwf	set_osr_humidity_settings@reg_addr
 17943                           
 17944                           ;BME280_driver/bme280.c: 815:         rslt = bme280_get_regs(reg_addr, &ctrl_meas, 1, de
      +                          v);
 17945  1EDD  305A               	movlw	(low (set_osr_humidity_settings@ctrl_meas| 0))& (0+255)
 17946  1EDE  00D6               	movwf	??_set_osr_humidity_settings
 17947  1EDF  0856               	movf	??_set_osr_humidity_settings,w
 17948  1EE0  00B7               	movwf	bme280_get_regs@reg_data
 17949  1EE1  3001               	movlw	1
 17950  1EE2  00B8               	movwf	bme280_get_regs@len
 17951  1EE3  3000               	movlw	0
 17952  1EE4  00B9               	movwf	bme280_get_regs@len+1
 17953  1EE5  0855               	movf	set_osr_humidity_settings@dev,w
 17954  1EE6  00D7               	movwf	??_set_osr_humidity_settings+1
 17955  1EE7  0857               	movf	??_set_osr_humidity_settings+1,w
 17956  1EE8  00BA               	movwf	bme280_get_regs@dev
 17957  1EE9  085C               	movf	set_osr_humidity_settings@reg_addr,w
 17958  1EEA  319C  241D  319E   	fcall	_bme280_get_regs
 17959  1EED  0140               	movlb	0	; select bank0
 17960  1EEE  00D8               	movwf	??_set_osr_humidity_settings+2
 17961  1EEF  0858               	movf	??_set_osr_humidity_settings+2,w
 17962  1EF0  00DB               	movwf	set_osr_humidity_settings@rslt
 17963                           
 17964                           ;BME280_driver/bme280.c: 816:         if (rslt == 0)
 17965  1EF1  085B               	movf	set_osr_humidity_settings@rslt,w
 17966  1EF2  1D03               	btfss	3,2
 17967  1EF3  2F05               	goto	l5092
 17968                           
 17969                           ;BME280_driver/bme280.c: 817:         {;BME280_driver/bme280.c: 818:             rslt = 
      +                          bme280_set_regs(&reg_addr, &ctrl_meas, 1, dev);
 17970  1EF4  305A               	movlw	(low (set_osr_humidity_settings@ctrl_meas| 0))& (0+255)
 17971  1EF5  00D6               	movwf	??_set_osr_humidity_settings
 17972  1EF6  0856               	movf	??_set_osr_humidity_settings,w
 17973  1EF7  00B4               	movwf	bme280_set_regs@reg_data
 17974  1EF8  01B5               	clrf	bme280_set_regs@len
 17975  1EF9  0AB5               	incf	bme280_set_regs@len,f
 17976  1EFA  0855               	movf	set_osr_humidity_settings@dev,w
 17977  1EFB  00D7               	movwf	??_set_osr_humidity_settings+1
 17978  1EFC  0857               	movf	??_set_osr_humidity_settings+1,w
 17979  1EFD  00B6               	movwf	bme280_set_regs@dev
 17980  1EFE  305C               	movlw	(low (set_osr_humidity_settings@reg_addr| 0))& (0+255)
 17981  1EFF  3196  266A         	fcall	_bme280_set_regs
 17982  1F01  0140               	movlb	0	; select bank0
 17983  1F02  00D8               	movwf	??_set_osr_humidity_settings+2
 17984  1F03  0858               	movf	??_set_osr_humidity_settings+2,w
 17985  1F04  00DB               	movwf	set_osr_humidity_settings@rslt
 17986  1F05                     l5092:	
 17987                           
 17988                           ;BME280_driver/bme280.c: 822:     return rslt;
 17989  1F05  085B               	movf	set_osr_humidity_settings@rslt,w
 17990  1F06  0008               	return
 17991  1F07                     __end_of_set_osr_humidity_settings:	
 17992                           
 17993                           	psect	text65
 17994  1CA6                     __ptext65:	
 17995 ;; *************** function _set_filter_standby_settings *****************
 17996 ;; Defined at:
 17997 ;;		line 860 in file "BME280_driver/bme280.c"
 17998 ;; Parameters:    Size  Location     Type
 17999 ;;  desired_sett    1    wreg     unsigned char 
 18000 ;;  settings        2   51[BANK0 ] PTR const struct bme280_
 18001 ;;		 -> EnvSensor(51), put_device_to_sleep@settings(5), 
 18002 ;;  dev             1   53[BANK0 ] PTR const struct bme280_
 18003 ;;		 -> EnvSensor(51), 
 18004 ;; Auto vars:     Size  Location     Type
 18005 ;;  desired_sett    1   57[BANK0 ] unsigned char 
 18006 ;;  reg_data        1   60[BANK0 ] unsigned char 
 18007 ;;  reg_addr        1   59[BANK0 ] unsigned char 
 18008 ;;  rslt            1   58[BANK0 ] char 
 18009 ;; Return value:  Size  Location     Type
 18010 ;;                  1    wreg      char 
 18011 ;; Registers used:
 18012 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18013 ;; Tracked objects:
 18014 ;;		On entry : 0/0
 18015 ;;		On exit  : 0/0
 18016 ;;		Unchanged: 0/0
 18017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18018 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18019 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18020 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18021 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18022 ;;Total ram usage:       10 bytes
 18023 ;; Hardware stack levels used:    1
 18024 ;; Hardware stack levels required when called:   11
 18025 ;; This function calls:
 18026 ;;		_bme280_get_regs
 18027 ;;		_bme280_set_regs
 18028 ;;		_fill_filter_settings
 18029 ;;		_fill_standby_settings
 18030 ;; This function is called by:
 18031 ;;		_bme280_set_sensor_settings
 18032 ;;		_reload_device_settings
 18033 ;; This function uses a non-reentrant model
 18034 ;;
 18035                           
 18036                           
 18037                           ;psect for function _set_filter_standby_settings
 18038  1CA6                     _set_filter_standby_settings:	
 18039                           
 18040                           ;incstack = 0
 18041                           ; Regs used in _set_filter_standby_settings: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 18042                           ;set_filter_standby_settings@desired_settings stored from wreg
 18043  1CA6  0140               	movlb	0	; select bank0
 18044  1CA7  00D9               	movwf	set_filter_standby_settings@desired_settings
 18045                           
 18046                           ;BME280_driver/bme280.c: 860: static int8_t set_filter_standby_settings(uint8_t desired_
      +                          settings,;BME280_driver/bme280.c: 861:                                           const s
      +                          truct bme280_settings *settings,;BME280_driver/bme280.c: 862:                           
      +                                          const struct bme280_dev *dev);BME280_driver/bme280.c: 863: {;BME280_driv
      +                          er/bme280.c: 864:     int8_t rslt;;BME280_driver/bme280.c: 865:     uint8_t reg_addr = 0
      +                          xF5;
 18047  1CA8  30F5               	movlw	245
 18048  1CA9  00D6               	movwf	??_set_filter_standby_settings
 18049  1CAA  0856               	movf	??_set_filter_standby_settings,w
 18050  1CAB  00DB               	movwf	set_filter_standby_settings@reg_addr
 18051                           
 18052                           ;BME280_driver/bme280.c: 866:     uint8_t reg_data;;BME280_driver/bme280.c: 868:     rsl
      +                          t = bme280_get_regs(reg_addr, &reg_data, 1, dev);
 18053  1CAC  305C               	movlw	(low (set_filter_standby_settings@reg_data| 0))& (0+255)
 18054  1CAD  00D6               	movwf	??_set_filter_standby_settings
 18055  1CAE  0856               	movf	??_set_filter_standby_settings,w
 18056  1CAF  00B7               	movwf	bme280_get_regs@reg_data
 18057  1CB0  3001               	movlw	1
 18058  1CB1  00B8               	movwf	bme280_get_regs@len
 18059  1CB2  3000               	movlw	0
 18060  1CB3  00B9               	movwf	bme280_get_regs@len+1
 18061  1CB4  0855               	movf	set_filter_standby_settings@dev,w
 18062  1CB5  00D7               	movwf	??_set_filter_standby_settings+1
 18063  1CB6  0857               	movf	??_set_filter_standby_settings+1,w
 18064  1CB7  00BA               	movwf	bme280_get_regs@dev
 18065  1CB8  085B               	movf	set_filter_standby_settings@reg_addr,w
 18066  1CB9  319C  241D  319C   	fcall	_bme280_get_regs
 18067  1CBC  0140               	movlb	0	; select bank0
 18068  1CBD  00D8               	movwf	??_set_filter_standby_settings+2
 18069  1CBE  0858               	movf	??_set_filter_standby_settings+2,w
 18070  1CBF  00DA               	movwf	set_filter_standby_settings@rslt
 18071                           
 18072                           ;BME280_driver/bme280.c: 869:     if (rslt == 0)
 18073  1CC0  085A               	movf	set_filter_standby_settings@rslt,w
 18074  1CC1  1D03               	btfss	3,2
 18075  1CC2  2CEA               	goto	l5146
 18076                           
 18077                           ;BME280_driver/bme280.c: 870:     {;BME280_driver/bme280.c: 871:         if (desired_set
      +                          tings & 1 << 3)
 18078  1CC3  1DD9               	btfss	set_filter_standby_settings@desired_settings,3
 18079  1CC4  2CCD               	goto	l5142
 18080                           
 18081                           ;BME280_driver/bme280.c: 872:         {;BME280_driver/bme280.c: 873:             fill_fi
      +                          lter_settings(&reg_data, settings);
 18082  1CC5  0854               	movf	set_filter_standby_settings@settings+1,w
 18083  1CC6  00F1               	movwf	fill_filter_settings@settings+1
 18084  1CC7  0853               	movf	set_filter_standby_settings@settings,w
 18085  1CC8  00F0               	movwf	fill_filter_settings@settings
 18086  1CC9  305C               	movlw	(low (set_filter_standby_settings@reg_data| 0))& (0+255)
 18087  1CCA  31A7  2703  319C   	fcall	_fill_filter_settings
 18088  1CCD                     l5142:	
 18089                           
 18090                           ;BME280_driver/bme280.c: 875:         if (desired_settings & 1 << 4)
 18091  1CCD  0140               	movlb	0	; select bank0
 18092  1CCE  1E59               	btfss	set_filter_standby_settings@desired_settings,4
 18093  1CCF  2CD8               	goto	l152
 18094                           
 18095                           ;BME280_driver/bme280.c: 876:         {;BME280_driver/bme280.c: 877:             fill_st
      +                          andby_settings(&reg_data, settings);
 18096  1CD0  0854               	movf	set_filter_standby_settings@settings+1,w
 18097  1CD1  00F1               	movwf	fill_standby_settings@settings+1
 18098  1CD2  0853               	movf	set_filter_standby_settings@settings,w
 18099  1CD3  00F0               	movwf	fill_standby_settings@settings
 18100  1CD4  305C               	movlw	(low (set_filter_standby_settings@reg_data| 0))& (0+255)
 18101  1CD5  31A7  271F  319C   	fcall	_fill_standby_settings
 18102  1CD8                     l152:	
 18103                           ;BME280_driver/bme280.c: 878:         }
 18104                           
 18105                           
 18106                           ;BME280_driver/bme280.c: 881:         rslt = bme280_set_regs(&reg_addr, &reg_data, 1, de
      +                          v);
 18107  1CD8  305C               	movlw	(low (set_filter_standby_settings@reg_data| 0))& (0+255)
 18108  1CD9  0140               	movlb	0	; select bank0
 18109  1CDA  00D6               	movwf	??_set_filter_standby_settings
 18110  1CDB  0856               	movf	??_set_filter_standby_settings,w
 18111  1CDC  00B4               	movwf	bme280_set_regs@reg_data
 18112  1CDD  01B5               	clrf	bme280_set_regs@len
 18113  1CDE  0AB5               	incf	bme280_set_regs@len,f
 18114  1CDF  0855               	movf	set_filter_standby_settings@dev,w
 18115  1CE0  00D7               	movwf	??_set_filter_standby_settings+1
 18116  1CE1  0857               	movf	??_set_filter_standby_settings+1,w
 18117  1CE2  00B6               	movwf	bme280_set_regs@dev
 18118  1CE3  305B               	movlw	(low (set_filter_standby_settings@reg_addr| 0))& (0+255)
 18119  1CE4  3196  266A         	fcall	_bme280_set_regs
 18120  1CE6  0140               	movlb	0	; select bank0
 18121  1CE7  00D8               	movwf	??_set_filter_standby_settings+2
 18122  1CE8  0858               	movf	??_set_filter_standby_settings+2,w
 18123  1CE9  00DA               	movwf	set_filter_standby_settings@rslt
 18124  1CEA                     l5146:	
 18125                           
 18126                           ;BME280_driver/bme280.c: 884:     return rslt;
 18127  1CEA  085A               	movf	set_filter_standby_settings@rslt,w
 18128  1CEB  0008               	return
 18129  1CEC                     __end_of_set_filter_standby_settings:	
 18130                           
 18131                           	psect	text66
 18132  271F                     __ptext66:	
 18133 ;; *************** function _fill_standby_settings *****************
 18134 ;; Defined at:
 18135 ;;		line 900 in file "BME280_driver/bme280.c"
 18136 ;; Parameters:    Size  Location     Type
 18137 ;;  reg_data        1    wreg     PTR unsigned char 
 18138 ;;		 -> set_filter_standby_settings@reg_data(1), 
 18139 ;;  settings        2    0[COMMON] PTR const struct bme280_
 18140 ;;		 -> EnvSensor(51), put_device_to_sleep@settings(5), 
 18141 ;; Auto vars:     Size  Location     Type
 18142 ;;  reg_data        1    5[COMMON] PTR unsigned char 
 18143 ;;		 -> set_filter_standby_settings@reg_data(1), 
 18144 ;; Return value:  Size  Location     Type
 18145 ;;                  1    wreg      void 
 18146 ;; Registers used:
 18147 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 18148 ;; Tracked objects:
 18149 ;;		On entry : 0/0
 18150 ;;		On exit  : 0/0
 18151 ;;		Unchanged: 0/0
 18152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18153 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18154 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18155 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18156 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18157 ;;Total ram usage:        6 bytes
 18158 ;; Hardware stack levels used:    1
 18159 ;; Hardware stack levels required when called:    3
 18160 ;; This function calls:
 18161 ;;		Nothing
 18162 ;; This function is called by:
 18163 ;;		_set_filter_standby_settings
 18164 ;; This function uses a non-reentrant model
 18165 ;;
 18166                           
 18167                           
 18168                           ;psect for function _fill_standby_settings
 18169  271F                     _fill_standby_settings:	
 18170                           
 18171                           ;incstack = 0
 18172                           ; Regs used in _fill_standby_settings: [wreg+fsr1l+fsr1h+status,2+status,0]
 18173                           ;fill_standby_settings@reg_data stored from wreg
 18174  271F  00F5               	movwf	fill_standby_settings@reg_data
 18175                           
 18176                           ;BME280_driver/bme280.c: 900: static void fill_standby_settings(uint8_t *reg_data, const
      +                           struct bme280_settings *settings);BME280_driver/bme280.c: 901: {;BME280_driver/bme280.c
      +                          : 902:     *reg_data = ((*reg_data & ~( 0xE0)) | ((settings->standby_time << 0x05) & 0xE
      +                          0));
 18177  2720  0870               	movf	fill_standby_settings@settings,w
 18178  2721  0086               	movwf	6
 18179  2722  0871               	movf	fill_standby_settings@settings+1,w
 18180  2723  0087               	movwf	7
 18181  2724  3144               	addfsr 1,4
 18182  2725  0801               	movf	1,w
 18183  2726  00F2               	movwf	??_fill_standby_settings
 18184  2727  3005               	movlw	5
 18185  2728                     u4995:	
 18186  2728  35F2               	lslf	??_fill_standby_settings,f
 18187  2729  0B89               	decfsz	9,f
 18188  272A  2F28               	goto	u4995
 18189  272B  30E0               	movlw	224
 18190  272C  0572               	andwf	??_fill_standby_settings,w
 18191  272D  00F3               	movwf	??_fill_standby_settings+1
 18192  272E  0875               	movf	fill_standby_settings@reg_data,w
 18193  272F  0086               	movwf	6
 18194  2730  0187               	clrf	7
 18195  2731  0801               	movf	1,w
 18196  2732  391F               	andlw	31
 18197  2733  0473               	iorwf	??_fill_standby_settings+1,w
 18198  2734  00F4               	movwf	??_fill_standby_settings+2
 18199  2735  0875               	movf	fill_standby_settings@reg_data,w
 18200  2736  0086               	movwf	6
 18201  2737  0187               	clrf	7
 18202  2738  0874               	movf	??_fill_standby_settings+2,w
 18203  2739  0081               	movwf	1
 18204  273A  0008               	return
 18205  273B                     __end_of_fill_standby_settings:	
 18206                           
 18207                           	psect	text67
 18208  2703                     __ptext67:	
 18209 ;; *************** function _fill_filter_settings *****************
 18210 ;; Defined at:
 18211 ;;		line 891 in file "BME280_driver/bme280.c"
 18212 ;; Parameters:    Size  Location     Type
 18213 ;;  reg_data        1    wreg     PTR unsigned char 
 18214 ;;		 -> set_filter_standby_settings@reg_data(1), 
 18215 ;;  settings        2    0[COMMON] PTR const struct bme280_
 18216 ;;		 -> EnvSensor(51), put_device_to_sleep@settings(5), 
 18217 ;; Auto vars:     Size  Location     Type
 18218 ;;  reg_data        1    5[COMMON] PTR unsigned char 
 18219 ;;		 -> set_filter_standby_settings@reg_data(1), 
 18220 ;; Return value:  Size  Location     Type
 18221 ;;                  1    wreg      void 
 18222 ;; Registers used:
 18223 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 18224 ;; Tracked objects:
 18225 ;;		On entry : 0/0
 18226 ;;		On exit  : 0/0
 18227 ;;		Unchanged: 0/0
 18228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18229 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18230 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18231 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18232 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18233 ;;Total ram usage:        6 bytes
 18234 ;; Hardware stack levels used:    1
 18235 ;; Hardware stack levels required when called:    3
 18236 ;; This function calls:
 18237 ;;		Nothing
 18238 ;; This function is called by:
 18239 ;;		_set_filter_standby_settings
 18240 ;; This function uses a non-reentrant model
 18241 ;;
 18242                           
 18243                           
 18244                           ;psect for function _fill_filter_settings
 18245  2703                     _fill_filter_settings:	
 18246                           
 18247                           ;incstack = 0
 18248                           ; Regs used in _fill_filter_settings: [wreg+fsr1l+fsr1h+status,2+status,0]
 18249                           ;fill_filter_settings@reg_data stored from wreg
 18250  2703  00F5               	movwf	fill_filter_settings@reg_data
 18251                           
 18252                           ;BME280_driver/bme280.c: 891: static void fill_filter_settings(uint8_t *reg_data, const 
      +                          struct bme280_settings *settings);BME280_driver/bme280.c: 892: {;BME280_driver/bme280.c:
      +                           893:     *reg_data = ((*reg_data & ~( 0x1C)) | ((settings->filter << 0x02) & 0x1C));
 18253  2704  0870               	movf	fill_filter_settings@settings,w
 18254  2705  0086               	movwf	6
 18255  2706  0871               	movf	fill_filter_settings@settings+1,w
 18256  2707  0087               	movwf	7
 18257  2708  3143               	addfsr 1,3
 18258  2709  0801               	movf	1,w
 18259  270A  00F2               	movwf	??_fill_filter_settings
 18260  270B  3002               	movlw	2
 18261  270C                     u4985:	
 18262  270C  35F2               	lslf	??_fill_filter_settings,f
 18263  270D  0B89               	decfsz	9,f
 18264  270E  2F0C               	goto	u4985
 18265  270F  301C               	movlw	28
 18266  2710  0572               	andwf	??_fill_filter_settings,w
 18267  2711  00F3               	movwf	??_fill_filter_settings+1
 18268  2712  0875               	movf	fill_filter_settings@reg_data,w
 18269  2713  0086               	movwf	6
 18270  2714  0187               	clrf	7
 18271  2715  0801               	movf	1,w
 18272  2716  39E3               	andlw	227
 18273  2717  0473               	iorwf	??_fill_filter_settings+1,w
 18274  2718  00F4               	movwf	??_fill_filter_settings+2
 18275  2719  0875               	movf	fill_filter_settings@reg_data,w
 18276  271A  0086               	movwf	6
 18277  271B  0187               	clrf	7
 18278  271C  0874               	movf	??_fill_filter_settings+2,w
 18279  271D  0081               	movwf	1
 18280  271E  0008               	return
 18281  271F                     __end_of_fill_filter_settings:	
 18282                           
 18283                           	psect	text68
 18284  1022                     __ptext68:	
 18285 ;; *************** function _parse_device_settings *****************
 18286 ;; Defined at:
 18287 ;;		line 928 in file "BME280_driver/bme280.c"
 18288 ;; Parameters:    Size  Location     Type
 18289 ;;  reg_data        1    wreg     PTR const unsigned char 
 18290 ;;		 -> put_device_to_sleep@reg_data(4), bme280_get_sensor_settings@reg_data(4), 
 18291 ;;  settings        1    0[COMMON] PTR struct bme280_settin
 18292 ;;		 -> put_device_to_sleep@settings(5), 
 18293 ;; Auto vars:     Size  Location     Type
 18294 ;;  reg_data        1    3[COMMON] PTR const unsigned char 
 18295 ;;		 -> put_device_to_sleep@reg_data(4), bme280_get_sensor_settings@reg_data(4), 
 18296 ;; Return value:  Size  Location     Type
 18297 ;;                  1    wreg      void 
 18298 ;; Registers used:
 18299 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 18300 ;; Tracked objects:
 18301 ;;		On entry : 0/0
 18302 ;;		On exit  : 0/0
 18303 ;;		Unchanged: 0/0
 18304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18305 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18306 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18307 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18308 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18309 ;;Total ram usage:        4 bytes
 18310 ;; Hardware stack levels used:    1
 18311 ;; Hardware stack levels required when called:    3
 18312 ;; This function calls:
 18313 ;;		Nothing
 18314 ;; This function is called by:
 18315 ;;		_put_device_to_sleep
 18316 ;;		_bme280_get_sensor_settings
 18317 ;; This function uses a non-reentrant model
 18318 ;;
 18319                           
 18320                           
 18321                           ;psect for function _parse_device_settings
 18322  1022                     _parse_device_settings:	
 18323                           
 18324                           ;incstack = 0
 18325                           ; Regs used in _parse_device_settings: [wreg+fsr1l+fsr1h+status,2+status,0]
 18326                           ;parse_device_settings@reg_data stored from wreg
 18327  1022  00F3               	movwf	parse_device_settings@reg_data
 18328                           
 18329                           ;BME280_driver/bme280.c: 928: static void parse_device_settings(const uint8_t *reg_data,
      +                           struct bme280_settings *settings);BME280_driver/bme280.c: 929: {;BME280_driver/bme280.c
      +                          : 930:     settings->osr_h = (reg_data[0] & ( 0x07));
 18330  1023  0873               	movf	parse_device_settings@reg_data,w
 18331  1024  0086               	movwf	6
 18332  1025  0187               	clrf	7
 18333  1026  0801               	movf	1,w
 18334  1027  3907               	andlw	7
 18335  1028  00F1               	movwf	??_parse_device_settings
 18336  1029  0870               	movf	parse_device_settings@settings,w
 18337  102A  3E02               	addlw	2
 18338  102B  0086               	movwf	6
 18339  102C  0187               	clrf	7
 18340  102D  0871               	movf	??_parse_device_settings,w
 18341  102E  0081               	movwf	1
 18342                           
 18343                           ;BME280_driver/bme280.c: 931:     settings->osr_p = ((reg_data[2] & ( 0x1C)) >> ( 0x02))
      +                          ;
 18344  102F  0873               	movf	parse_device_settings@reg_data,w
 18345  1030  3E02               	addlw	2
 18346  1031  0086               	movwf	6
 18347  1032  0187               	clrf	7
 18348  1033  0801               	movf	1,w
 18349  1034  00F1               	movwf	??_parse_device_settings
 18350  1035  3002               	movlw	2
 18351  1036                     u5065:	
 18352  1036  36F1               	lsrf	??_parse_device_settings,f
 18353  1037  0B89               	decfsz	9,f
 18354  1038  2836               	goto	u5065
 18355  1039  0871               	movf	??_parse_device_settings,w
 18356  103A  3907               	andlw	7
 18357  103B  00F2               	movwf	??_parse_device_settings+1
 18358  103C  0870               	movf	parse_device_settings@settings,w
 18359  103D  0086               	movwf	6
 18360  103E  0187               	clrf	7
 18361  103F  0872               	movf	??_parse_device_settings+1,w
 18362  1040  0081               	movwf	1
 18363                           
 18364                           ;BME280_driver/bme280.c: 932:     settings->osr_t = ((reg_data[2] & ( 0xE0)) >> ( 0x05))
      +                          ;
 18365  1041  0873               	movf	parse_device_settings@reg_data,w
 18366  1042  3E02               	addlw	2
 18367  1043  0086               	movwf	6
 18368  1044  0187               	clrf	7
 18369  1045  0801               	movf	1,w
 18370  1046  00F1               	movwf	??_parse_device_settings
 18371  1047  3005               	movlw	5
 18372  1048                     u5075:	
 18373  1048  36F1               	lsrf	??_parse_device_settings,f
 18374  1049  0B89               	decfsz	9,f
 18375  104A  2848               	goto	u5075
 18376  104B  0871               	movf	??_parse_device_settings,w
 18377  104C  3907               	andlw	7
 18378  104D  00F2               	movwf	??_parse_device_settings+1
 18379  104E  0A70               	incf	parse_device_settings@settings,w
 18380  104F  0086               	movwf	6
 18381  1050  0187               	clrf	7
 18382  1051  0872               	movf	??_parse_device_settings+1,w
 18383  1052  0081               	movwf	1
 18384                           
 18385                           ;BME280_driver/bme280.c: 933:     settings->filter = ((reg_data[3] & ( 0x1C)) >> ( 0x02)
      +                          );
 18386  1053  0873               	movf	parse_device_settings@reg_data,w
 18387  1054  3E03               	addlw	3
 18388  1055  0086               	movwf	6
 18389  1056  0187               	clrf	7
 18390  1057  0801               	movf	1,w
 18391  1058  00F1               	movwf	??_parse_device_settings
 18392  1059  3002               	movlw	2
 18393  105A                     u5085:	
 18394  105A  36F1               	lsrf	??_parse_device_settings,f
 18395  105B  0B89               	decfsz	9,f
 18396  105C  285A               	goto	u5085
 18397  105D  0871               	movf	??_parse_device_settings,w
 18398  105E  3907               	andlw	7
 18399  105F  00F2               	movwf	??_parse_device_settings+1
 18400  1060  0870               	movf	parse_device_settings@settings,w
 18401  1061  3E03               	addlw	3
 18402  1062  0086               	movwf	6
 18403  1063  0187               	clrf	7
 18404  1064  0872               	movf	??_parse_device_settings+1,w
 18405  1065  0081               	movwf	1
 18406                           
 18407                           ;BME280_driver/bme280.c: 934:     settings->standby_time = ((reg_data[3] & ( 0xE0)) >> (
      +                           0x05));
 18408  1066  0873               	movf	parse_device_settings@reg_data,w
 18409  1067  3E03               	addlw	3
 18410  1068  0086               	movwf	6
 18411  1069  0187               	clrf	7
 18412  106A  0801               	movf	1,w
 18413  106B  00F1               	movwf	??_parse_device_settings
 18414  106C  3005               	movlw	5
 18415  106D                     u5095:	
 18416  106D  36F1               	lsrf	??_parse_device_settings,f
 18417  106E  0B89               	decfsz	9,f
 18418  106F  286D               	goto	u5095
 18419  1070  0871               	movf	??_parse_device_settings,w
 18420  1071  3907               	andlw	7
 18421  1072  00F2               	movwf	??_parse_device_settings+1
 18422  1073  0870               	movf	parse_device_settings@settings,w
 18423  1074  3E04               	addlw	4
 18424  1075  0086               	movwf	6
 18425  1076  0187               	clrf	7
 18426  1077  0872               	movf	??_parse_device_settings+1,w
 18427  1078  0081               	movwf	1
 18428  1079  0008               	return
 18429  107A                     __end_of_parse_device_settings:	
 18430                           
 18431                           	psect	text69
 18432  19C5                     __ptext69:	
 18433 ;; *************** function _bme280_get_sensor_mode *****************
 18434 ;; Defined at:
 18435 ;;		line 609 in file "BME280_driver/bme280.c"
 18436 ;; Parameters:    Size  Location     Type
 18437 ;;  sensor_mode     1    wreg     PTR unsigned char 
 18438 ;;		 -> bme280_set_sensor_mode@last_set_mode(1), bme280_set_sensor_settings@sensor_mode(1), 
 18439 ;;  dev             1   32[BANK0 ] PTR const struct bme280_
 18440 ;;		 -> EnvSensor(51), 
 18441 ;; Auto vars:     Size  Location     Type
 18442 ;;  sensor_mode     1   37[BANK0 ] PTR unsigned char 
 18443 ;;		 -> bme280_set_sensor_mode@last_set_mode(1), bme280_set_sensor_settings@sensor_mode(1), 
 18444 ;;  rslt            1   36[BANK0 ] char 
 18445 ;; Return value:  Size  Location     Type
 18446 ;;                  1    wreg      char 
 18447 ;; Registers used:
 18448 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18449 ;; Tracked objects:
 18450 ;;		On entry : 0/0
 18451 ;;		On exit  : 0/0
 18452 ;;		Unchanged: 0/0
 18453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18454 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18455 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18456 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18457 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18458 ;;Total ram usage:        6 bytes
 18459 ;; Hardware stack levels used:    1
 18460 ;; Hardware stack levels required when called:   11
 18461 ;; This function calls:
 18462 ;;		_bme280_get_regs
 18463 ;;		_null_ptr_check
 18464 ;; This function is called by:
 18465 ;;		_bme280_set_sensor_settings
 18466 ;;		_bme280_set_sensor_mode
 18467 ;; This function uses a non-reentrant model
 18468 ;;
 18469                           
 18470                           
 18471                           ;psect for function _bme280_get_sensor_mode
 18472  19C5                     _bme280_get_sensor_mode:	
 18473                           
 18474                           ;incstack = 0
 18475                           ; Regs used in _bme280_get_sensor_mode: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
 18476                           ;bme280_get_sensor_mode@sensor_mode stored from wreg
 18477  19C5  0140               	movlb	0	; select bank0
 18478  19C6  00C5               	movwf	bme280_get_sensor_mode@sensor_mode
 18479                           
 18480                           ;BME280_driver/bme280.c: 609: int8_t bme280_get_sensor_mode(uint8_t *sensor_mode, const 
      +                          struct bme280_dev *dev);BME280_driver/bme280.c: 610: {;BME280_driver/bme280.c: 611:     
      +                          int8_t rslt;;BME280_driver/bme280.c: 614:     rslt = null_ptr_check(dev);
 18481  19C7  0840               	movf	bme280_get_sensor_mode@dev,w
 18482  19C8  31A7  2790  3199   	fcall	_null_ptr_check
 18483  19CB  0140               	movlb	0	; select bank0
 18484  19CC  00C1               	movwf	??_bme280_get_sensor_mode
 18485  19CD  0841               	movf	??_bme280_get_sensor_mode,w
 18486  19CE  00C4               	movwf	bme280_get_sensor_mode@rslt
 18487                           
 18488                           ;BME280_driver/bme280.c: 615:     if (rslt == 0)
 18489  19CF  0844               	movf	bme280_get_sensor_mode@rslt,w
 18490  19D0  1D03               	btfss	3,2
 18491  19D1  29F0               	goto	l5204
 18492                           
 18493                           ;BME280_driver/bme280.c: 616:     {;BME280_driver/bme280.c: 618:         rslt = bme280_g
      +                          et_regs(0xF4, sensor_mode, 1, dev);
 18494  19D2  0845               	movf	bme280_get_sensor_mode@sensor_mode,w
 18495  19D3  00C1               	movwf	??_bme280_get_sensor_mode
 18496  19D4  0841               	movf	??_bme280_get_sensor_mode,w
 18497  19D5  00B7               	movwf	bme280_get_regs@reg_data
 18498  19D6  3001               	movlw	1
 18499  19D7  00B8               	movwf	bme280_get_regs@len
 18500  19D8  3000               	movlw	0
 18501  19D9  00B9               	movwf	bme280_get_regs@len+1
 18502  19DA  0840               	movf	bme280_get_sensor_mode@dev,w
 18503  19DB  00C2               	movwf	??_bme280_get_sensor_mode+1
 18504  19DC  0842               	movf	??_bme280_get_sensor_mode+1,w
 18505  19DD  00BA               	movwf	bme280_get_regs@dev
 18506  19DE  30F4               	movlw	244
 18507  19DF  319C  241D         	fcall	_bme280_get_regs
 18508  19E1  0140               	movlb	0	; select bank0
 18509  19E2  00C3               	movwf	??_bme280_get_sensor_mode+2
 18510  19E3  0843               	movf	??_bme280_get_sensor_mode+2,w
 18511  19E4  00C4               	movwf	bme280_get_sensor_mode@rslt
 18512                           
 18513                           ;BME280_driver/bme280.c: 621:         *sensor_mode = (*sensor_mode & ( 0x03));
 18514  19E5  0845               	movf	bme280_get_sensor_mode@sensor_mode,w
 18515  19E6  0086               	movwf	6
 18516  19E7  0187               	clrf	7
 18517  19E8  0801               	movf	1,w
 18518  19E9  3903               	andlw	3
 18519  19EA  00C1               	movwf	??_bme280_get_sensor_mode
 18520  19EB  0845               	movf	bme280_get_sensor_mode@sensor_mode,w
 18521  19EC  0086               	movwf	6
 18522  19ED  0187               	clrf	7
 18523  19EE  0841               	movf	??_bme280_get_sensor_mode,w
 18524  19EF  0081               	movwf	1
 18525  19F0                     l5204:	
 18526                           
 18527                           ;BME280_driver/bme280.c: 624:     return rslt;
 18528  19F0  0844               	movf	bme280_get_sensor_mode@rslt,w
 18529  19F1  0008               	return
 18530  19F2                     __end_of_bme280_get_sensor_mode:	
 18531                           
 18532                           	psect	text70
 18533  1209                     __ptext70:	
 18534 ;; *************** function _bme280_init *****************
 18535 ;; Defined at:
 18536 ;;		line 357 in file "BME280_driver/bme280.c"
 18537 ;; Parameters:    Size  Location     Type
 18538 ;;  dev             1    wreg     PTR struct bme280_dev
 18539 ;;		 -> EnvSensor(51), 
 18540 ;; Auto vars:     Size  Location     Type
 18541 ;;  dev             1   70[BANK0 ] PTR struct bme280_dev
 18542 ;;		 -> EnvSensor(51), 
 18543 ;;  rslt            1   69[BANK0 ] char 
 18544 ;;  chip_id         1   68[BANK0 ] unsigned char 
 18545 ;;  try_count       1   67[BANK0 ] unsigned char 
 18546 ;; Return value:  Size  Location     Type
 18547 ;;                  1    wreg      char 
 18548 ;; Registers used:
 18549 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18550 ;; Tracked objects:
 18551 ;;		On entry : 0/0
 18552 ;;		On exit  : 0/0
 18553 ;;		Unchanged: 0/0
 18554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18556 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18557 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18558 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18559 ;;Total ram usage:        7 bytes
 18560 ;; Hardware stack levels used:    1
 18561 ;; Hardware stack levels required when called:   12
 18562 ;; This function calls:
 18563 ;;		_Sleep
 18564 ;;		_bme280_get_regs
 18565 ;;		_bme280_soft_reset
 18566 ;;		_get_calib_data
 18567 ;;		_null_ptr_check
 18568 ;; This function is called by:
 18569 ;;		_BME280_Init
 18570 ;; This function uses a non-reentrant model
 18571 ;;
 18572                           
 18573                           
 18574                           ;psect for function _bme280_init
 18575  1209                     _bme280_init:	
 18576                           
 18577                           ;incstack = 0
 18578                           ; Regs used in _bme280_init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18579                           ;bme280_init@dev stored from wreg
 18580  1209  0140               	movlb	0	; select bank0
 18581  120A  00E6               	movwf	bme280_init@dev
 18582                           
 18583                           ;BME280_driver/bme280.c: 357: int8_t bme280_init(struct bme280_dev *dev);BME280_driver/b
      +                          me280.c: 358: {;BME280_driver/bme280.c: 359:     int8_t rslt;;BME280_driver/bme280.c: 36
      +                          2:     uint8_t try_count = 5;
 18584  120B  3005               	movlw	5
 18585  120C  00E0               	movwf	??_bme280_init
 18586  120D  0860               	movf	??_bme280_init,w
 18587  120E  00E3               	movwf	bme280_init@try_count
 18588                           
 18589                           ;BME280_driver/bme280.c: 363:     uint8_t chip_id = 0;
 18590  120F  01E4               	clrf	bme280_init@chip_id
 18591                           
 18592                           ;BME280_driver/bme280.c: 366:     rslt = null_ptr_check(dev);
 18593  1210  0866               	movf	bme280_init@dev,w
 18594  1211  31A7  2790  3192   	fcall	_null_ptr_check
 18595  1214  0140               	movlb	0	; select bank0
 18596  1215  00E0               	movwf	??_bme280_init
 18597  1216  0860               	movf	??_bme280_init,w
 18598  1217  00E5               	movwf	bme280_init@rslt
 18599                           
 18600                           ;BME280_driver/bme280.c: 369:     if (rslt == 0)
 18601  1218  0865               	movf	bme280_init@rslt,w
 18602  1219  1903               	btfsc	3,2
 18603  121A  2A68               	goto	l5280
 18604  121B  2A72               	goto	l55
 18605  121C                     l5262:	
 18606                           
 18607                           ;BME280_driver/bme280.c: 372:         {;BME280_driver/bme280.c: 374:             rslt = 
      +                          bme280_get_regs(0xD0, &chip_id, 1, dev);
 18608  121C  3064               	movlw	(low (bme280_init@chip_id| 0))& (0+255)
 18609  121D  00E0               	movwf	??_bme280_init
 18610  121E  0860               	movf	??_bme280_init,w
 18611  121F  00B7               	movwf	bme280_get_regs@reg_data
 18612  1220  3001               	movlw	1
 18613  1221  00B8               	movwf	bme280_get_regs@len
 18614  1222  3000               	movlw	0
 18615  1223  00B9               	movwf	bme280_get_regs@len+1
 18616  1224  0866               	movf	bme280_init@dev,w
 18617  1225  00E1               	movwf	??_bme280_init+1
 18618  1226  0861               	movf	??_bme280_init+1,w
 18619  1227  00BA               	movwf	bme280_get_regs@dev
 18620  1228  30D0               	movlw	208
 18621  1229  319C  241D  3192   	fcall	_bme280_get_regs
 18622  122C  0140               	movlb	0	; select bank0
 18623  122D  00E2               	movwf	??_bme280_init+2
 18624  122E  0862               	movf	??_bme280_init+2,w
 18625  122F  00E5               	movwf	bme280_init@rslt
 18626                           
 18627                           ;BME280_driver/bme280.c: 376:             if ((rslt == 0) && (chip_id == 0x60))
 18628  1230  0865               	movf	bme280_init@rslt,w
 18629  1231  1D03               	btfss	3,2
 18630  1232  2A53               	goto	l5276
 18631  1233  3060               	movlw	96
 18632  1234  0664               	xorwf	bme280_init@chip_id,w
 18633  1235  1D03               	btfss	3,2
 18634  1236  2A53               	goto	l5276
 18635                           
 18636                           ;BME280_driver/bme280.c: 377:             {;BME280_driver/bme280.c: 378:                
      +                           dev->chip_id = chip_id;
 18637  1237  0864               	movf	bme280_init@chip_id,w
 18638  1238  00E0               	movwf	??_bme280_init
 18639  1239  0866               	movf	bme280_init@dev,w
 18640  123A  0086               	movwf	6
 18641  123B  3001               	movlw	1	; select bank2/3
 18642  123C  0087               	movwf	7
 18643  123D  0860               	movf	??_bme280_init,w
 18644  123E  0081               	movwf	1
 18645                           
 18646                           ;BME280_driver/bme280.c: 381:                 rslt = bme280_soft_reset(dev);
 18647  123F  0866               	movf	bme280_init@dev,w
 18648  1240  319B  231D  3192   	fcall	_bme280_soft_reset
 18649  1243  0140               	movlb	0	; select bank0
 18650  1244  00E0               	movwf	??_bme280_init
 18651  1245  0860               	movf	??_bme280_init,w
 18652  1246  00E5               	movwf	bme280_init@rslt
 18653                           
 18654                           ;BME280_driver/bme280.c: 382:                 if (rslt == 0)
 18655  1247  0865               	movf	bme280_init@rslt,w
 18656  1248  1D03               	btfss	3,2
 18657  1249  2A6B               	goto	l5282
 18658                           
 18659                           ;BME280_driver/bme280.c: 383:                 {;BME280_driver/bme280.c: 385:            
      +                                   rslt = get_calib_data(dev);
 18660  124A  0866               	movf	bme280_init@dev,w
 18661  124B  319D  25C6  3192   	fcall	_get_calib_data
 18662  124E  0140               	movlb	0	; select bank0
 18663  124F  00E0               	movwf	??_bme280_init
 18664  1250  0860               	movf	??_bme280_init,w
 18665  1251  00E5               	movwf	bme280_init@rslt
 18666  1252  2A6B               	goto	l5282
 18667  1253                     l5276:	
 18668                           
 18669                           ;BME280_driver/bme280.c: 391:             dev->delay_ms(1);
 18670  1253  3000               	movlw	0
 18671  1254  00F3               	movwf	Sleep@ms+3
 18672  1255  3000               	movlw	0
 18673  1256  00F2               	movwf	Sleep@ms+2
 18674  1257  3000               	movlw	0
 18675  1258  00F1               	movwf	Sleep@ms+1
 18676  1259  3001               	movlw	1
 18677  125A  00F0               	movwf	Sleep@ms
 18678  125B  0866               	movf	bme280_init@dev,w
 18679  125C  3E07               	addlw	7
 18680  125D  0086               	movwf	6
 18681  125E  3001               	movlw	1	; select bank2/3
 18682  125F  0087               	movwf	7
 18683  1260  3F41               	moviw [1]fsr1
 18684  1261  008A               	movwf	10
 18685  1262  3F40               	moviw [0]fsr1
 18686  1263  000A               	callw
 18687  1264  3192               	pagesel	$
 18688                           
 18689                           ;BME280_driver/bme280.c: 392:             --try_count;
 18690  1265  3001               	movlw	1
 18691  1266  0140               	movlb	0	; select bank0
 18692  1267  02E3               	subwf	bme280_init@try_count,f
 18693  1268                     l5280:	
 18694                           
 18695                           ;BME280_driver/bme280.c: 371:         while (try_count)
 18696  1268  0863               	movf	bme280_init@try_count,w
 18697  1269  1D03               	btfss	3,2
 18698  126A  2A1C               	goto	l5262
 18699  126B                     l5282:	
 18700                           
 18701                           ;BME280_driver/bme280.c: 396:         if (!try_count)
 18702  126B  0863               	movf	bme280_init@try_count,w
 18703  126C  1D03               	btfss	3,2
 18704  126D  2A72               	goto	l55
 18705                           
 18706                           ;BME280_driver/bme280.c: 397:         {;BME280_driver/bme280.c: 398:             rslt = 
      +                          -2;
 18707  126E  30FE               	movlw	254
 18708  126F  00E0               	movwf	??_bme280_init
 18709  1270  0860               	movf	??_bme280_init,w
 18710  1271  00E5               	movwf	bme280_init@rslt
 18711  1272                     l55:	
 18712                           ;BME280_driver/bme280.c: 400:     }
 18713                           
 18714                           
 18715                           ;BME280_driver/bme280.c: 402:     return rslt;
 18716  1272  0865               	movf	bme280_init@rslt,w
 18717  1273  0008               	return
 18718  1274                     __end_of_bme280_init:	
 18719                           
 18720                           	psect	text71
 18721  1DC6                     __ptext71:	
 18722 ;; *************** function _get_calib_data *****************
 18723 ;; Defined at:
 18724 ;;		line 1306 in file "BME280_driver/bme280.c"
 18725 ;; Parameters:    Size  Location     Type
 18726 ;;  dev             1    wreg     PTR struct bme280_dev
 18727 ;;		 -> EnvSensor(51), 
 18728 ;; Auto vars:     Size  Location     Type
 18729 ;;  dev             1   63[BANK0 ] PTR struct bme280_dev
 18730 ;;		 -> EnvSensor(51), 
 18731 ;;  calib_data     26   35[BANK0 ] unsigned char [26]
 18732 ;;  rslt            1   62[BANK0 ] char 
 18733 ;;  reg_addr        1    0        unsigned char 
 18734 ;; Return value:  Size  Location     Type
 18735 ;;                  1    wreg      char 
 18736 ;; Registers used:
 18737 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18738 ;; Tracked objects:
 18739 ;;		On entry : 0/0
 18740 ;;		On exit  : 0/0
 18741 ;;		Unchanged: 0/0
 18742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18744 ;;      Locals:         0      29       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18745 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18746 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18747 ;;Total ram usage:       32 bytes
 18748 ;; Hardware stack levels used:    1
 18749 ;; Hardware stack levels required when called:   11
 18750 ;; This function calls:
 18751 ;;		_bme280_get_regs
 18752 ;;		_parse_humidity_calib_data
 18753 ;;		_parse_temp_press_calib_data
 18754 ;; This function is called by:
 18755 ;;		_bme280_init
 18756 ;; This function uses a non-reentrant model
 18757 ;;
 18758                           
 18759                           
 18760                           ;psect for function _get_calib_data
 18761  1DC6                     _get_calib_data:	
 18762                           
 18763                           ;incstack = 0
 18764                           ; Regs used in _get_calib_data: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18765                           ;get_calib_data@dev stored from wreg
 18766  1DC6  0140               	movlb	0	; select bank0
 18767  1DC7  00DF               	movwf	get_calib_data@dev
 18768                           
 18769                           ;BME280_driver/bme280.c: 1312:     uint8_t calib_data[26] = { 0 };
 18770  1DC8  3043               	movlw	low get_calib_data@calib_data
 18771  1DC9  0086               	movwf	6
 18772  1DCA  3000               	movlw	high get_calib_data@calib_data
 18773  1DCB  0087               	movwf	7
 18774  1DCC  301A               	movlw	26
 18775  1DCD  00C0               	movwf	??_get_calib_data
 18776  1DCE  3000               	movlw	0
 18777  1DCF                     u5110:	
 18778  1DCF  001E               	movwi fsr1++
 18779  1DD0  0BC0               	decfsz	??_get_calib_data,f
 18780  1DD1  2DCF               	goto	u5110
 18781                           
 18782                           ;BME280_driver/bme280.c: 1315:     rslt = bme280_get_regs(reg_addr, calib_data, 26, dev)
      +                          ;
 18783  1DD2  3043               	movlw	(low (get_calib_data@calib_data| 0))& (0+255)
 18784  1DD3  00C0               	movwf	??_get_calib_data
 18785  1DD4  0840               	movf	??_get_calib_data,w
 18786  1DD5  00B7               	movwf	bme280_get_regs@reg_data
 18787  1DD6  301A               	movlw	26
 18788  1DD7  00B8               	movwf	bme280_get_regs@len
 18789  1DD8  3000               	movlw	0
 18790  1DD9  00B9               	movwf	bme280_get_regs@len+1
 18791  1DDA  085F               	movf	get_calib_data@dev,w
 18792  1DDB  00C1               	movwf	??_get_calib_data+1
 18793  1DDC  0841               	movf	??_get_calib_data+1,w
 18794  1DDD  00BA               	movwf	bme280_get_regs@dev
 18795  1DDE  3088               	movlw	136
 18796  1DDF  319C  241D  319D   	fcall	_bme280_get_regs
 18797  1DE2  0140               	movlb	0	; select bank0
 18798  1DE3  00C2               	movwf	??_get_calib_data+2
 18799  1DE4  0842               	movf	??_get_calib_data+2,w
 18800  1DE5  00DE               	movwf	get_calib_data@rslt
 18801                           
 18802                           ;BME280_driver/bme280.c: 1316:     if (rslt == 0)
 18803  1DE6  085E               	movf	get_calib_data@rslt,w
 18804  1DE7  1D03               	btfss	3,2
 18805  1DE8  2E10               	goto	l5192
 18806                           
 18807                           ;BME280_driver/bme280.c: 1317:     {;BME280_driver/bme280.c: 1321:         parse_temp_pr
      +                          ess_calib_data(calib_data, dev);
 18808  1DE9  085F               	movf	get_calib_data@dev,w
 18809  1DEA  00C0               	movwf	??_get_calib_data
 18810  1DEB  0840               	movf	??_get_calib_data,w
 18811  1DEC  00F0               	movwf	parse_temp_press_calib_data@dev
 18812  1DED  3043               	movlw	(low (get_calib_data@calib_data| 0))& (0+255)
 18813  1DEE  3197  270B  319D   	fcall	_parse_temp_press_calib_data
 18814                           
 18815                           ;BME280_driver/bme280.c: 1325:         rslt = bme280_get_regs(reg_addr, calib_data, 7, d
      +                          ev);
 18816  1DF1  3043               	movlw	(low (get_calib_data@calib_data| 0))& (0+255)
 18817  1DF2  0140               	movlb	0	; select bank0
 18818  1DF3  00C0               	movwf	??_get_calib_data
 18819  1DF4  0840               	movf	??_get_calib_data,w
 18820  1DF5  00B7               	movwf	bme280_get_regs@reg_data
 18821  1DF6  3007               	movlw	7
 18822  1DF7  00B8               	movwf	bme280_get_regs@len
 18823  1DF8  3000               	movlw	0
 18824  1DF9  00B9               	movwf	bme280_get_regs@len+1
 18825  1DFA  085F               	movf	get_calib_data@dev,w
 18826  1DFB  00C1               	movwf	??_get_calib_data+1
 18827  1DFC  0841               	movf	??_get_calib_data+1,w
 18828  1DFD  00BA               	movwf	bme280_get_regs@dev
 18829  1DFE  30E1               	movlw	225
 18830  1DFF  319C  241D  319D   	fcall	_bme280_get_regs
 18831  1E02  0140               	movlb	0	; select bank0
 18832  1E03  00C2               	movwf	??_get_calib_data+2
 18833  1E04  0842               	movf	??_get_calib_data+2,w
 18834  1E05  00DE               	movwf	get_calib_data@rslt
 18835                           
 18836                           ;BME280_driver/bme280.c: 1326:         if (rslt == 0)
 18837  1E06  085E               	movf	get_calib_data@rslt,w
 18838  1E07  1D03               	btfss	3,2
 18839  1E08  2E10               	goto	l5192
 18840                           
 18841                           ;BME280_driver/bme280.c: 1327:         {;BME280_driver/bme280.c: 1331:             parse
      +                          _humidity_calib_data(calib_data, dev);
 18842  1E09  085F               	movf	get_calib_data@dev,w
 18843  1E0A  00C0               	movwf	??_get_calib_data
 18844  1E0B  0840               	movf	??_get_calib_data,w
 18845  1E0C  00F0               	movwf	parse_humidity_calib_data@dev
 18846  1E0D  3043               	movlw	(low (get_calib_data@calib_data| 0))& (0+255)
 18847  1E0E  3195  25D1         	fcall	_parse_humidity_calib_data
 18848  1E10                     l5192:	
 18849                           
 18850                           ;BME280_driver/bme280.c: 1335:     return rslt;
 18851  1E10  0140               	movlb	0	; select bank0
 18852  1E11  085E               	movf	get_calib_data@rslt,w
 18853  1E12  0008               	return
 18854  1E13                     __end_of_get_calib_data:	
 18855                           
 18856                           	psect	text72
 18857  170B                     __ptext72:	
 18858 ;; *************** function _parse_temp_press_calib_data *****************
 18859 ;; Defined at:
 18860 ;;		line 1357 in file "BME280_driver/bme280.c"
 18861 ;; Parameters:    Size  Location     Type
 18862 ;;  reg_data        1    wreg     PTR const unsigned char 
 18863 ;;		 -> get_calib_data@calib_data(26), 
 18864 ;;  dev             1    0[COMMON] PTR struct bme280_dev
 18865 ;;		 -> EnvSensor(51), 
 18866 ;; Auto vars:     Size  Location     Type
 18867 ;;  reg_data        1    3[COMMON] PTR const unsigned char 
 18868 ;;		 -> get_calib_data@calib_data(26), 
 18869 ;;  calib_data      1    2[COMMON] PTR struct bme280_calib_
 18870 ;;		 -> EnvSensor.calib_data(37), EnvSensor(51), 
 18871 ;; Return value:  Size  Location     Type
 18872 ;;                  1    wreg      void 
 18873 ;; Registers used:
 18874 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 18875 ;; Tracked objects:
 18876 ;;		On entry : 0/0
 18877 ;;		On exit  : 0/0
 18878 ;;		Unchanged: 0/0
 18879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18880 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18881 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18882 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18883 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18884 ;;Total ram usage:        4 bytes
 18885 ;; Hardware stack levels used:    1
 18886 ;; Hardware stack levels required when called:    3
 18887 ;; This function calls:
 18888 ;;		Nothing
 18889 ;; This function is called by:
 18890 ;;		_get_calib_data
 18891 ;; This function uses a non-reentrant model
 18892 ;;
 18893                           
 18894                           
 18895                           ;psect for function _parse_temp_press_calib_data
 18896  170B                     _parse_temp_press_calib_data:	
 18897                           
 18898                           ;incstack = 0
 18899                           ; Regs used in _parse_temp_press_calib_data: [wreg-fsr1h+status,2+status,0]
 18900                           ;parse_temp_press_calib_data@reg_data stored from wreg
 18901  170B  00F3               	movwf	parse_temp_press_calib_data@reg_data
 18902                           
 18903                           ;BME280_driver/bme280.c: 1357: static void parse_temp_press_calib_data(const uint8_t *re
      +                          g_data, struct bme280_dev *dev);BME280_driver/bme280.c: 1358: {;BME280_driver/bme280.c: 
      +                          1359:     struct bme280_calib_data *calib_data = &dev->calib_data;
 18904  170C  0870               	movf	parse_temp_press_calib_data@dev,w
 18905  170D  3E09               	addlw	9
 18906  170E  00F1               	movwf	??_parse_temp_press_calib_data
 18907  170F  0871               	movf	??_parse_temp_press_calib_data,w
 18908  1710  00F2               	movwf	parse_temp_press_calib_data@calib_data
 18909                           
 18910                           ;BME280_driver/bme280.c: 1361:     calib_data->dig_T1 = (((uint16_t)reg_data[1] << 8) | 
      +                          (uint16_t)reg_data[0]);
 18911  1711  0A73               	incf	parse_temp_press_calib_data@reg_data,w
 18912  1712  0084               	movwf	4
 18913  1713  0185               	clrf	5
 18914  1714  0800               	movf	0,w
 18915  1715  00F1               	movwf	??_parse_temp_press_calib_data
 18916  1716  0873               	movf	parse_temp_press_calib_data@reg_data,w
 18917  1717  0084               	movwf	4
 18918  1718  0185               	clrf	5
 18919  1719  0872               	movf	parse_temp_press_calib_data@calib_data,w
 18920  171A  0086               	movwf	6
 18921  171B  3001               	movlw	1	; select bank2/3
 18922  171C  0087               	movwf	7
 18923  171D  0800               	movf	0,w
 18924  171E  3FC0               	movwi [0]fsr1
 18925  171F  0871               	movf	??_parse_temp_press_calib_data,w
 18926  1720  3FC1               	movwi [1]fsr1
 18927                           
 18928                           ;BME280_driver/bme280.c: 1362:     calib_data->dig_T2 = (int16_t)(((uint16_t)reg_data[3]
      +                           << 8) | (uint16_t)reg_data[2]);
 18929  1721  0873               	movf	parse_temp_press_calib_data@reg_data,w
 18930  1722  3E03               	addlw	3
 18931  1723  0084               	movwf	4
 18932  1724  0185               	clrf	5
 18933  1725  0800               	movf	0,w
 18934  1726  00F1               	movwf	??_parse_temp_press_calib_data
 18935  1727  0873               	movf	parse_temp_press_calib_data@reg_data,w
 18936  1728  3E02               	addlw	2
 18937  1729  0084               	movwf	4
 18938  172A  0185               	clrf	5
 18939  172B  0872               	movf	parse_temp_press_calib_data@calib_data,w
 18940  172C  3E02               	addlw	2
 18941  172D  0086               	movwf	6
 18942  172E  3001               	movlw	1	; select bank2/3
 18943  172F  0087               	movwf	7
 18944  1730  0800               	movf	0,w
 18945  1731  3FC0               	movwi [0]fsr1
 18946  1732  0871               	movf	??_parse_temp_press_calib_data,w
 18947  1733  3FC1               	movwi [1]fsr1
 18948                           
 18949                           ;BME280_driver/bme280.c: 1363:     calib_data->dig_T3 = (int16_t)(((uint16_t)reg_data[5]
      +                           << 8) | (uint16_t)reg_data[4]);
 18950  1734  0873               	movf	parse_temp_press_calib_data@reg_data,w
 18951  1735  3E05               	addlw	5
 18952  1736  0084               	movwf	4
 18953  1737  0185               	clrf	5
 18954  1738  0800               	movf	0,w
 18955  1739  00F1               	movwf	??_parse_temp_press_calib_data
 18956  173A  0873               	movf	parse_temp_press_calib_data@reg_data,w
 18957  173B  3E04               	addlw	4
 18958  173C  0084               	movwf	4
 18959  173D  0185               	clrf	5
 18960  173E  0872               	movf	parse_temp_press_calib_data@calib_data,w
 18961  173F  3E04               	addlw	4
 18962  1740  0086               	movwf	6
 18963  1741  3001               	movlw	1	; select bank2/3
 18964  1742  0087               	movwf	7
 18965  1743  0800               	movf	0,w
 18966  1744  3FC0               	movwi [0]fsr1
 18967  1745  0871               	movf	??_parse_temp_press_calib_data,w
 18968  1746  3FC1               	movwi [1]fsr1
 18969                           
 18970                           ;BME280_driver/bme280.c: 1364:     calib_data->dig_P1 = (((uint16_t)reg_data[7] << 8) | 
      +                          (uint16_t)reg_data[6]);
 18971  1747  0873               	movf	parse_temp_press_calib_data@reg_data,w
 18972  1748  3E07               	addlw	7
 18973  1749  0084               	movwf	4
 18974  174A  0185               	clrf	5
 18975  174B  0800               	movf	0,w
 18976  174C  00F1               	movwf	??_parse_temp_press_calib_data
 18977  174D  0873               	movf	parse_temp_press_calib_data@reg_data,w
 18978  174E  3E06               	addlw	6
 18979  174F  0084               	movwf	4
 18980  1750  0185               	clrf	5
 18981  1751  0872               	movf	parse_temp_press_calib_data@calib_data,w
 18982  1752  3E06               	addlw	6
 18983  1753  0086               	movwf	6
 18984  1754  3001               	movlw	1	; select bank2/3
 18985  1755  0087               	movwf	7
 18986  1756  0800               	movf	0,w
 18987  1757  3FC0               	movwi [0]fsr1
 18988  1758  0871               	movf	??_parse_temp_press_calib_data,w
 18989  1759  3FC1               	movwi [1]fsr1
 18990                           
 18991                           ;BME280_driver/bme280.c: 1365:     calib_data->dig_P2 = (int16_t)(((uint16_t)reg_data[9]
      +                           << 8) | (uint16_t)reg_data[8]);
 18992  175A  0873               	movf	parse_temp_press_calib_data@reg_data,w
 18993  175B  3E09               	addlw	9
 18994  175C  0084               	movwf	4
 18995  175D  0185               	clrf	5
 18996  175E  0800               	movf	0,w
 18997  175F  00F1               	movwf	??_parse_temp_press_calib_data
 18998  1760  0873               	movf	parse_temp_press_calib_data@reg_data,w
 18999  1761  3E08               	addlw	8
 19000  1762  0084               	movwf	4
 19001  1763  0185               	clrf	5
 19002  1764  0872               	movf	parse_temp_press_calib_data@calib_data,w
 19003  1765  3E08               	addlw	8
 19004  1766  0086               	movwf	6
 19005  1767  3001               	movlw	1	; select bank2/3
 19006  1768  0087               	movwf	7
 19007  1769  0800               	movf	0,w
 19008  176A  3FC0               	movwi [0]fsr1
 19009  176B  0871               	movf	??_parse_temp_press_calib_data,w
 19010  176C  3FC1               	movwi [1]fsr1
 19011                           
 19012                           ;BME280_driver/bme280.c: 1366:     calib_data->dig_P3 = (int16_t)(((uint16_t)reg_data[11
      +                          ] << 8) | (uint16_t)reg_data[10]);
 19013  176D  0873               	movf	parse_temp_press_calib_data@reg_data,w
 19014  176E  3E0B               	addlw	11
 19015  176F  0084               	movwf	4
 19016  1770  0185               	clrf	5
 19017  1771  0800               	movf	0,w
 19018  1772  00F1               	movwf	??_parse_temp_press_calib_data
 19019  1773  0873               	movf	parse_temp_press_calib_data@reg_data,w
 19020  1774  3E0A               	addlw	10
 19021  1775  0084               	movwf	4
 19022  1776  0185               	clrf	5
 19023  1777  0872               	movf	parse_temp_press_calib_data@calib_data,w
 19024  1778  3E0A               	addlw	10
 19025  1779  0086               	movwf	6
 19026  177A  3001               	movlw	1	; select bank2/3
 19027  177B  0087               	movwf	7
 19028  177C  0800               	movf	0,w
 19029  177D  3FC0               	movwi [0]fsr1
 19030  177E  0871               	movf	??_parse_temp_press_calib_data,w
 19031  177F  3FC1               	movwi [1]fsr1
 19032                           
 19033                           ;BME280_driver/bme280.c: 1367:     calib_data->dig_P4 = (int16_t)(((uint16_t)reg_data[13
      +                          ] << 8) | (uint16_t)reg_data[12]);
 19034  1780  0873               	movf	parse_temp_press_calib_data@reg_data,w
 19035  1781  3E0D               	addlw	13
 19036  1782  0084               	movwf	4
 19037  1783  0185               	clrf	5
 19038  1784  0800               	movf	0,w
 19039  1785  00F1               	movwf	??_parse_temp_press_calib_data
 19040  1786  0873               	movf	parse_temp_press_calib_data@reg_data,w
 19041  1787  3E0C               	addlw	12
 19042  1788  0084               	movwf	4
 19043  1789  0185               	clrf	5
 19044  178A  0872               	movf	parse_temp_press_calib_data@calib_data,w
 19045  178B  3E0C               	addlw	12
 19046  178C  0086               	movwf	6
 19047  178D  3001               	movlw	1	; select bank2/3
 19048  178E  0087               	movwf	7
 19049  178F  0800               	movf	0,w
 19050  1790  3FC0               	movwi [0]fsr1
 19051  1791  0871               	movf	??_parse_temp_press_calib_data,w
 19052  1792  3FC1               	movwi [1]fsr1
 19053                           
 19054                           ;BME280_driver/bme280.c: 1368:     calib_data->dig_P5 = (int16_t)(((uint16_t)reg_data[15
      +                          ] << 8) | (uint16_t)reg_data[14]);
 19055  1793  0873               	movf	parse_temp_press_calib_data@reg_data,w
 19056  1794  3E0F               	addlw	15
 19057  1795  0084               	movwf	4
 19058  1796  0185               	clrf	5
 19059  1797  0800               	movf	0,w
 19060  1798  00F1               	movwf	??_parse_temp_press_calib_data
 19061  1799  0873               	movf	parse_temp_press_calib_data@reg_data,w
 19062  179A  3E0E               	addlw	14
 19063  179B  0084               	movwf	4
 19064  179C  0185               	clrf	5
 19065  179D  0872               	movf	parse_temp_press_calib_data@calib_data,w
 19066  179E  3E0E               	addlw	14
 19067  179F  0086               	movwf	6
 19068  17A0  3001               	movlw	1	; select bank2/3
 19069  17A1  0087               	movwf	7
 19070  17A2  0800               	movf	0,w
 19071  17A3  3FC0               	movwi [0]fsr1
 19072  17A4  0871               	movf	??_parse_temp_press_calib_data,w
 19073  17A5  3FC1               	movwi [1]fsr1
 19074                           
 19075                           ;BME280_driver/bme280.c: 1369:     calib_data->dig_P6 = (int16_t)(((uint16_t)reg_data[17
      +                          ] << 8) | (uint16_t)reg_data[16]);
 19076  17A6  0873               	movf	parse_temp_press_calib_data@reg_data,w
 19077  17A7  3E11               	addlw	17
 19078  17A8  0084               	movwf	4
 19079  17A9  0185               	clrf	5
 19080  17AA  0800               	movf	0,w
 19081  17AB  00F1               	movwf	??_parse_temp_press_calib_data
 19082  17AC  0873               	movf	parse_temp_press_calib_data@reg_data,w
 19083  17AD  3E10               	addlw	16
 19084  17AE  0084               	movwf	4
 19085  17AF  0185               	clrf	5
 19086  17B0  0872               	movf	parse_temp_press_calib_data@calib_data,w
 19087  17B1  3E10               	addlw	16
 19088  17B2  0086               	movwf	6
 19089  17B3  3001               	movlw	1	; select bank2/3
 19090  17B4  0087               	movwf	7
 19091  17B5  0800               	movf	0,w
 19092  17B6  3FC0               	movwi [0]fsr1
 19093  17B7  0871               	movf	??_parse_temp_press_calib_data,w
 19094  17B8  3FC1               	movwi [1]fsr1
 19095                           
 19096                           ;BME280_driver/bme280.c: 1370:     calib_data->dig_P7 = (int16_t)(((uint16_t)reg_data[19
      +                          ] << 8) | (uint16_t)reg_data[18]);
 19097  17B9  0873               	movf	parse_temp_press_calib_data@reg_data,w
 19098  17BA  3E13               	addlw	19
 19099  17BB  0084               	movwf	4
 19100  17BC  0185               	clrf	5
 19101  17BD  0800               	movf	0,w
 19102  17BE  00F1               	movwf	??_parse_temp_press_calib_data
 19103  17BF  0873               	movf	parse_temp_press_calib_data@reg_data,w
 19104  17C0  3E12               	addlw	18
 19105  17C1  0084               	movwf	4
 19106  17C2  0185               	clrf	5
 19107  17C3  0872               	movf	parse_temp_press_calib_data@calib_data,w
 19108  17C4  3E12               	addlw	18
 19109  17C5  0086               	movwf	6
 19110  17C6  3001               	movlw	1	; select bank2/3
 19111  17C7  0087               	movwf	7
 19112  17C8  0800               	movf	0,w
 19113  17C9  3FC0               	movwi [0]fsr1
 19114  17CA  0871               	movf	??_parse_temp_press_calib_data,w
 19115  17CB  3FC1               	movwi [1]fsr1
 19116                           
 19117                           ;BME280_driver/bme280.c: 1371:     calib_data->dig_P8 = (int16_t)(((uint16_t)reg_data[21
      +                          ] << 8) | (uint16_t)reg_data[20]);
 19118  17CC  0873               	movf	parse_temp_press_calib_data@reg_data,w
 19119  17CD  3E15               	addlw	21
 19120  17CE  0084               	movwf	4
 19121  17CF  0185               	clrf	5
 19122  17D0  0800               	movf	0,w
 19123  17D1  00F1               	movwf	??_parse_temp_press_calib_data
 19124  17D2  0873               	movf	parse_temp_press_calib_data@reg_data,w
 19125  17D3  3E14               	addlw	20
 19126  17D4  0084               	movwf	4
 19127  17D5  0185               	clrf	5
 19128  17D6  0872               	movf	parse_temp_press_calib_data@calib_data,w
 19129  17D7  3E14               	addlw	20
 19130  17D8  0086               	movwf	6
 19131  17D9  3001               	movlw	1	; select bank2/3
 19132  17DA  0087               	movwf	7
 19133  17DB  0800               	movf	0,w
 19134  17DC  3FC0               	movwi [0]fsr1
 19135  17DD  0871               	movf	??_parse_temp_press_calib_data,w
 19136  17DE  3FC1               	movwi [1]fsr1
 19137                           
 19138                           ;BME280_driver/bme280.c: 1372:     calib_data->dig_P9 = (int16_t)(((uint16_t)reg_data[23
      +                          ] << 8) | (uint16_t)reg_data[22]);
 19139  17DF  0873               	movf	parse_temp_press_calib_data@reg_data,w
 19140  17E0  3E17               	addlw	23
 19141  17E1  0084               	movwf	4
 19142  17E2  0185               	clrf	5
 19143  17E3  0800               	movf	0,w
 19144  17E4  00F1               	movwf	??_parse_temp_press_calib_data
 19145  17E5  0873               	movf	parse_temp_press_calib_data@reg_data,w
 19146  17E6  3E16               	addlw	22
 19147  17E7  0084               	movwf	4
 19148  17E8  0185               	clrf	5
 19149  17E9  0872               	movf	parse_temp_press_calib_data@calib_data,w
 19150  17EA  3E16               	addlw	22
 19151  17EB  0086               	movwf	6
 19152  17EC  3001               	movlw	1	; select bank2/3
 19153  17ED  0087               	movwf	7
 19154  17EE  0800               	movf	0,w
 19155  17EF  3FC0               	movwi [0]fsr1
 19156  17F0  0871               	movf	??_parse_temp_press_calib_data,w
 19157  17F1  3FC1               	movwi [1]fsr1
 19158                           
 19159                           ;BME280_driver/bme280.c: 1373:     calib_data->dig_H1 = reg_data[25];
 19160  17F2  0873               	movf	parse_temp_press_calib_data@reg_data,w
 19161  17F3  3E19               	addlw	25
 19162  17F4  0086               	movwf	6
 19163  17F5  0187               	clrf	7
 19164  17F6  0801               	movf	1,w
 19165  17F7  00F1               	movwf	??_parse_temp_press_calib_data
 19166  17F8  0872               	movf	parse_temp_press_calib_data@calib_data,w
 19167  17F9  3E18               	addlw	24
 19168  17FA  0086               	movwf	6
 19169  17FB  3001               	movlw	1	; select bank2/3
 19170  17FC  0087               	movwf	7
 19171  17FD  0871               	movf	??_parse_temp_press_calib_data,w
 19172  17FE  0081               	movwf	1
 19173  17FF  0008               	return
 19174  1800                     __end_of_parse_temp_press_calib_data:	
 19175                           
 19176                           	psect	text73
 19177  15D1                     __ptext73:	
 19178 ;; *************** function _parse_humidity_calib_data *****************
 19179 ;; Defined at:
 19180 ;;		line 1380 in file "BME280_driver/bme280.c"
 19181 ;; Parameters:    Size  Location     Type
 19182 ;;  reg_data        1    wreg     PTR const unsigned char 
 19183 ;;		 -> get_calib_data@calib_data(26), 
 19184 ;;  dev             1    0[COMMON] PTR struct bme280_dev
 19185 ;;		 -> EnvSensor(51), 
 19186 ;; Auto vars:     Size  Location     Type
 19187 ;;  reg_data        1   13[COMMON] PTR const unsigned char 
 19188 ;;		 -> get_calib_data@calib_data(26), 
 19189 ;;  dig_H5_msb      2   10[COMMON] short 
 19190 ;;  dig_H5_lsb      2    8[COMMON] short 
 19191 ;;  dig_H4_msb      2    6[COMMON] short 
 19192 ;;  dig_H4_lsb      2    4[COMMON] short 
 19193 ;;  calib_data      1   12[COMMON] PTR struct bme280_calib_
 19194 ;;		 -> EnvSensor.calib_data(37), EnvSensor(51), 
 19195 ;; Return value:  Size  Location     Type
 19196 ;;                  1    wreg      void 
 19197 ;; Registers used:
 19198 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 19199 ;; Tracked objects:
 19200 ;;		On entry : 0/0
 19201 ;;		On exit  : 0/0
 19202 ;;		Unchanged: 0/0
 19203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19204 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19205 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19206 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19207 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19208 ;;Total ram usage:       14 bytes
 19209 ;; Hardware stack levels used:    1
 19210 ;; Hardware stack levels required when called:    3
 19211 ;; This function calls:
 19212 ;;		Nothing
 19213 ;; This function is called by:
 19214 ;;		_get_calib_data
 19215 ;; This function uses a non-reentrant model
 19216 ;;
 19217                           
 19218                           
 19219                           ;psect for function _parse_humidity_calib_data
 19220  15D1                     _parse_humidity_calib_data:	
 19221                           
 19222                           ;incstack = 0
 19223                           ; Regs used in _parse_humidity_calib_data: [wreg-fsr1h+status,2+status,0]
 19224                           ;parse_humidity_calib_data@reg_data stored from wreg
 19225  15D1  00FD               	movwf	parse_humidity_calib_data@reg_data
 19226                           
 19227                           ;BME280_driver/bme280.c: 1380: static void parse_humidity_calib_data(const uint8_t *reg_
      +                          data, struct bme280_dev *dev);BME280_driver/bme280.c: 1381: {;BME280_driver/bme280.c: 13
      +                          82:     struct bme280_calib_data *calib_data = &dev->calib_data;
 19228  15D2  0870               	movf	parse_humidity_calib_data@dev,w
 19229  15D3  3E09               	addlw	9
 19230  15D4  00F1               	movwf	??_parse_humidity_calib_data
 19231  15D5  0871               	movf	??_parse_humidity_calib_data,w
 19232  15D6  00FC               	movwf	parse_humidity_calib_data@calib_data
 19233                           
 19234                           ;BME280_driver/bme280.c: 1383:     int16_t dig_H4_lsb;;BME280_driver/bme280.c: 1384:    
      +                           int16_t dig_H4_msb;;BME280_driver/bme280.c: 1385:     int16_t dig_H5_lsb;;BME280_driver
      +                          /bme280.c: 1386:     int16_t dig_H5_msb;;BME280_driver/bme280.c: 1388:     calib_data->d
      +                          ig_H2 = (int16_t)(((uint16_t)reg_data[1] << 8) | (uint16_t)reg_data[0]);
 19235  15D7  0A7D               	incf	parse_humidity_calib_data@reg_data,w
 19236  15D8  0084               	movwf	4
 19237  15D9  0185               	clrf	5
 19238  15DA  0800               	movf	0,w
 19239  15DB  00F1               	movwf	??_parse_humidity_calib_data
 19240  15DC  087D               	movf	parse_humidity_calib_data@reg_data,w
 19241  15DD  0084               	movwf	4
 19242  15DE  0185               	clrf	5
 19243  15DF  087C               	movf	parse_humidity_calib_data@calib_data,w
 19244  15E0  3E19               	addlw	25
 19245  15E1  0086               	movwf	6
 19246  15E2  3001               	movlw	1	; select bank2/3
 19247  15E3  0087               	movwf	7
 19248  15E4  0800               	movf	0,w
 19249  15E5  3FC0               	movwi [0]fsr1
 19250  15E6  0871               	movf	??_parse_humidity_calib_data,w
 19251  15E7  3FC1               	movwi [1]fsr1
 19252                           
 19253                           ;BME280_driver/bme280.c: 1389:     calib_data->dig_H3 = reg_data[2];
 19254  15E8  087D               	movf	parse_humidity_calib_data@reg_data,w
 19255  15E9  3E02               	addlw	2
 19256  15EA  0086               	movwf	6
 19257  15EB  0187               	clrf	7
 19258  15EC  0801               	movf	1,w
 19259  15ED  00F1               	movwf	??_parse_humidity_calib_data
 19260  15EE  087C               	movf	parse_humidity_calib_data@calib_data,w
 19261  15EF  3E1B               	addlw	27
 19262  15F0  0086               	movwf	6
 19263  15F1  3001               	movlw	1	; select bank2/3
 19264  15F2  0087               	movwf	7
 19265  15F3  0871               	movf	??_parse_humidity_calib_data,w
 19266  15F4  0081               	movwf	1
 19267                           
 19268                           ;BME280_driver/bme280.c: 1390:     dig_H4_msb = (int16_t)(int8_t)reg_data[3] * 16;
 19269  15F5  087D               	movf	parse_humidity_calib_data@reg_data,w
 19270  15F6  3E03               	addlw	3
 19271  15F7  0086               	movwf	6
 19272  15F8  0187               	clrf	7
 19273  15F9  0801               	movf	1,w
 19274  15FA  00F1               	movwf	??_parse_humidity_calib_data
 19275  15FB  01F2               	clrf	??_parse_humidity_calib_data+1
 19276  15FC  1BF1               	btfsc	??_parse_humidity_calib_data,7
 19277  15FD  03F2               	decf	??_parse_humidity_calib_data+1,f
 19278  15FE  0EF1               	swapf	??_parse_humidity_calib_data,f
 19279  15FF  0EF2               	swapf	??_parse_humidity_calib_data+1,f
 19280  1600  30F0               	movlw	240
 19281  1601  05F2               	andwf	??_parse_humidity_calib_data+1,f
 19282  1602  0871               	movf	??_parse_humidity_calib_data,w
 19283  1603  390F               	andlw	15
 19284  1604  04F2               	iorwf	??_parse_humidity_calib_data+1,f
 19285  1605  30F0               	movlw	240
 19286  1606  05F1               	andwf	??_parse_humidity_calib_data,f
 19287  1607  0871               	movf	??_parse_humidity_calib_data,w
 19288  1608  00F6               	movwf	parse_humidity_calib_data@dig_H4_msb
 19289  1609  0872               	movf	??_parse_humidity_calib_data+1,w
 19290  160A  00F7               	movwf	parse_humidity_calib_data@dig_H4_msb+1
 19291                           
 19292                           ;BME280_driver/bme280.c: 1391:     dig_H4_lsb = (int16_t)(reg_data[4] & 0x0F);
 19293  160B  087D               	movf	parse_humidity_calib_data@reg_data,w
 19294  160C  3E04               	addlw	4
 19295  160D  0086               	movwf	6
 19296  160E  0187               	clrf	7
 19297  160F  0801               	movf	1,w
 19298  1610  390F               	andlw	15
 19299  1611  00F1               	movwf	??_parse_humidity_calib_data
 19300  1612  01F2               	clrf	??_parse_humidity_calib_data+1
 19301  1613  0871               	movf	??_parse_humidity_calib_data,w
 19302  1614  00F4               	movwf	parse_humidity_calib_data@dig_H4_lsb
 19303  1615  0872               	movf	??_parse_humidity_calib_data+1,w
 19304  1616  00F5               	movwf	parse_humidity_calib_data@dig_H4_lsb+1
 19305                           
 19306                           ;BME280_driver/bme280.c: 1392:     calib_data->dig_H4 = dig_H4_msb | dig_H4_lsb;
 19307  1617  0874               	movf	parse_humidity_calib_data@dig_H4_lsb,w
 19308  1618  0476               	iorwf	parse_humidity_calib_data@dig_H4_msb,w
 19309  1619  00F1               	movwf	??_parse_humidity_calib_data
 19310  161A  0875               	movf	parse_humidity_calib_data@dig_H4_lsb+1,w
 19311  161B  0477               	iorwf	parse_humidity_calib_data@dig_H4_msb+1,w
 19312  161C  00F2               	movwf	??_parse_humidity_calib_data+1
 19313  161D  087C               	movf	parse_humidity_calib_data@calib_data,w
 19314  161E  3E1C               	addlw	28
 19315  161F  0086               	movwf	6
 19316  1620  3001               	movlw	1	; select bank2/3
 19317  1621  0087               	movwf	7
 19318  1622  0871               	movf	??_parse_humidity_calib_data,w
 19319  1623  3FC0               	movwi [0]fsr1
 19320  1624  0872               	movf	??_parse_humidity_calib_data+1,w
 19321  1625  3FC1               	movwi [1]fsr1
 19322                           
 19323                           ;BME280_driver/bme280.c: 1393:     dig_H5_msb = (int16_t)(int8_t)reg_data[5] * 16;
 19324  1626  087D               	movf	parse_humidity_calib_data@reg_data,w
 19325  1627  3E05               	addlw	5
 19326  1628  0086               	movwf	6
 19327  1629  0187               	clrf	7
 19328  162A  0801               	movf	1,w
 19329  162B  00F1               	movwf	??_parse_humidity_calib_data
 19330  162C  01F2               	clrf	??_parse_humidity_calib_data+1
 19331  162D  1BF1               	btfsc	??_parse_humidity_calib_data,7
 19332  162E  03F2               	decf	??_parse_humidity_calib_data+1,f
 19333  162F  0EF1               	swapf	??_parse_humidity_calib_data,f
 19334  1630  0EF2               	swapf	??_parse_humidity_calib_data+1,f
 19335  1631  30F0               	movlw	240
 19336  1632  05F2               	andwf	??_parse_humidity_calib_data+1,f
 19337  1633  0871               	movf	??_parse_humidity_calib_data,w
 19338  1634  390F               	andlw	15
 19339  1635  04F2               	iorwf	??_parse_humidity_calib_data+1,f
 19340  1636  30F0               	movlw	240
 19341  1637  05F1               	andwf	??_parse_humidity_calib_data,f
 19342  1638  0871               	movf	??_parse_humidity_calib_data,w
 19343  1639  00FA               	movwf	parse_humidity_calib_data@dig_H5_msb
 19344  163A  0872               	movf	??_parse_humidity_calib_data+1,w
 19345  163B  00FB               	movwf	parse_humidity_calib_data@dig_H5_msb+1
 19346                           
 19347                           ;BME280_driver/bme280.c: 1394:     dig_H5_lsb = (int16_t)(reg_data[4] >> 4);
 19348  163C  087D               	movf	parse_humidity_calib_data@reg_data,w
 19349  163D  3E04               	addlw	4
 19350  163E  0086               	movwf	6
 19351  163F  0187               	clrf	7
 19352  1640  0801               	movf	1,w
 19353  1641  00F1               	movwf	??_parse_humidity_calib_data
 19354  1642  3004               	movlw	4
 19355  1643                     u2805:	
 19356  1643  36F1               	lsrf	??_parse_humidity_calib_data,f
 19357  1644  0B89               	decfsz	9,f
 19358  1645  2E43               	goto	u2805
 19359  1646  0871               	movf	??_parse_humidity_calib_data,w
 19360  1647  00F2               	movwf	??_parse_humidity_calib_data+1
 19361  1648  01F3               	clrf	??_parse_humidity_calib_data+2
 19362  1649  0872               	movf	??_parse_humidity_calib_data+1,w
 19363  164A  00F8               	movwf	parse_humidity_calib_data@dig_H5_lsb
 19364  164B  0873               	movf	??_parse_humidity_calib_data+2,w
 19365  164C  00F9               	movwf	parse_humidity_calib_data@dig_H5_lsb+1
 19366                           
 19367                           ;BME280_driver/bme280.c: 1395:     calib_data->dig_H5 = dig_H5_msb | dig_H5_lsb;
 19368  164D  0878               	movf	parse_humidity_calib_data@dig_H5_lsb,w
 19369  164E  047A               	iorwf	parse_humidity_calib_data@dig_H5_msb,w
 19370  164F  00F1               	movwf	??_parse_humidity_calib_data
 19371  1650  0879               	movf	parse_humidity_calib_data@dig_H5_lsb+1,w
 19372  1651  047B               	iorwf	parse_humidity_calib_data@dig_H5_msb+1,w
 19373  1652  00F2               	movwf	??_parse_humidity_calib_data+1
 19374  1653  087C               	movf	parse_humidity_calib_data@calib_data,w
 19375  1654  3E1E               	addlw	30
 19376  1655  0086               	movwf	6
 19377  1656  3001               	movlw	1	; select bank2/3
 19378  1657  0087               	movwf	7
 19379  1658  0871               	movf	??_parse_humidity_calib_data,w
 19380  1659  3FC0               	movwi [0]fsr1
 19381  165A  0872               	movf	??_parse_humidity_calib_data+1,w
 19382  165B  3FC1               	movwi [1]fsr1
 19383                           
 19384                           ;BME280_driver/bme280.c: 1396:     calib_data->dig_H6 = (int8_t)reg_data[6];
 19385  165C  087D               	movf	parse_humidity_calib_data@reg_data,w
 19386  165D  3E06               	addlw	6
 19387  165E  0086               	movwf	6
 19388  165F  0187               	clrf	7
 19389  1660  0801               	movf	1,w
 19390  1661  00F1               	movwf	??_parse_humidity_calib_data
 19391  1662  087C               	movf	parse_humidity_calib_data@calib_data,w
 19392  1663  3E20               	addlw	32
 19393  1664  0086               	movwf	6
 19394  1665  3001               	movlw	1	; select bank2/3
 19395  1666  0087               	movwf	7
 19396  1667  0871               	movf	??_parse_humidity_calib_data,w
 19397  1668  0081               	movwf	1
 19398  1669  0008               	return
 19399  166A                     __end_of_parse_humidity_calib_data:	
 19400                           
 19401                           	psect	text74
 19402  1C1D                     __ptext74:	
 19403 ;; *************** function _bme280_get_regs *****************
 19404 ;; Defined at:
 19405 ;;		line 408 in file "BME280_driver/bme280.c"
 19406 ;; Parameters:    Size  Location     Type
 19407 ;;  reg_addr        1    wreg     unsigned char 
 19408 ;;  reg_data        1   23[BANK0 ] PTR unsigned char 
 19409 ;;		 -> get_calib_data@calib_data(26), put_device_to_sleep@reg_data(4), write_power_mode@sensor_mode_reg_val(1), set_fil
      +ter_standby_settings@reg_data(1), 
 19410 ;;		 -> set_osr_press_temp_settings@reg_data(1), set_osr_humidity_settings@ctrl_meas(1), bme280_get_sensor_data@reg_data
      +(8), bme280_set_sensor_mode@last_set_mode(1), 
 19411 ;;		 -> bme280_get_sensor_settings@reg_data(4), bme280_set_sensor_settings@sensor_mode(1), bme280_init@chip_id(1), 
 19412 ;;  len             2   24[BANK0 ] unsigned short 
 19413 ;;  dev             1   26[BANK0 ] PTR const struct bme280_
 19414 ;;		 -> EnvSensor(51), 
 19415 ;; Auto vars:     Size  Location     Type
 19416 ;;  reg_addr        1   30[BANK0 ] unsigned char 
 19417 ;;  rslt            1   31[BANK0 ] char 
 19418 ;; Return value:  Size  Location     Type
 19419 ;;                  1    wreg      char 
 19420 ;; Registers used:
 19421 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19422 ;; Tracked objects:
 19423 ;;		On entry : 0/0
 19424 ;;		On exit  : 0/0
 19425 ;;		Unchanged: 0/0
 19426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19427 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19428 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19429 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19430 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19431 ;;Total ram usage:        9 bytes
 19432 ;; Hardware stack levels used:    1
 19433 ;; Hardware stack levels required when called:   10
 19434 ;; This function calls:
 19435 ;;		_ReadEnvSensor
 19436 ;;		_null_ptr_check
 19437 ;; This function is called by:
 19438 ;;		_bme280_init
 19439 ;;		_bme280_get_sensor_mode
 19440 ;;		_bme280_get_sensor_data
 19441 ;;		_set_osr_humidity_settings
 19442 ;;		_set_osr_press_temp_settings
 19443 ;;		_set_filter_standby_settings
 19444 ;;		_write_power_mode
 19445 ;;		_put_device_to_sleep
 19446 ;;		_get_calib_data
 19447 ;;		_bme280_get_sensor_settings
 19448 ;; This function uses a non-reentrant model
 19449 ;;
 19450                           
 19451                           
 19452                           ;psect for function _bme280_get_regs
 19453  1C1D                     _bme280_get_regs:	
 19454                           
 19455                           ;incstack = 0
 19456                           ; Regs used in _bme280_get_regs: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 19457                           ;bme280_get_regs@reg_addr stored from wreg
 19458  1C1D  0140               	movlb	0	; select bank0
 19459  1C1E  00BE               	movwf	bme280_get_regs@reg_addr
 19460                           
 19461                           ;BME280_driver/bme280.c: 408: int8_t bme280_get_regs(uint8_t reg_addr, uint8_t *reg_data
      +                          , uint16_t len, const struct bme280_dev *dev);BME280_driver/bme280.c: 409: {;BME280_driv
      +                          er/bme280.c: 410:     int8_t rslt;;BME280_driver/bme280.c: 413:     rslt = null_ptr_chec
      +                          k(dev);
 19462  1C1F  083A               	movf	bme280_get_regs@dev,w
 19463  1C20  31A7  2790  319C   	fcall	_null_ptr_check
 19464  1C23  0140               	movlb	0	; select bank0
 19465  1C24  00BB               	movwf	??_bme280_get_regs
 19466  1C25  083B               	movf	??_bme280_get_regs,w
 19467  1C26  00BF               	movwf	bme280_get_regs@rslt
 19468                           
 19469                           ;BME280_driver/bme280.c: 416:     if (rslt == 0)
 19470  1C27  083F               	movf	bme280_get_regs@rslt,w
 19471  1C28  1D03               	btfss	3,2
 19472  1C29  2C5F               	goto	l65
 19473                           
 19474                           ;BME280_driver/bme280.c: 417:     {;BME280_driver/bme280.c: 419:         if (dev->intf !
      +                          = BME280_I2C_INTF)
 19475  1C2A  083A               	movf	bme280_get_regs@dev,w
 19476  1C2B  3E02               	addlw	2
 19477  1C2C  0086               	movwf	6
 19478  1C2D  3001               	movlw	1	; select bank2/3
 19479  1C2E  0087               	movwf	7
 19480  1C2F  0301               	decf	1,w
 19481  1C30  1903               	btfsc	3,2
 19482  1C31  2C37               	goto	l5018
 19483                           
 19484                           ;BME280_driver/bme280.c: 420:         {;BME280_driver/bme280.c: 421:             reg_add
      +                          r = reg_addr | 0x80;
 19485  1C32  083E               	movf	bme280_get_regs@reg_addr,w
 19486  1C33  3880               	iorlw	128
 19487  1C34  00BB               	movwf	??_bme280_get_regs
 19488  1C35  083B               	movf	??_bme280_get_regs,w
 19489  1C36  00BE               	movwf	bme280_get_regs@reg_addr
 19490  1C37                     l5018:	
 19491                           
 19492                           ;BME280_driver/bme280.c: 425:         rslt = dev->read(dev->dev_id, reg_addr, reg_data, 
      +                          len);
 19493  1C37  083A               	movf	bme280_get_regs@dev,w
 19494  1C38  0086               	movwf	6
 19495  1C39  3001               	movlw	1	; select bank2/3
 19496  1C3A  0087               	movwf	7
 19497  1C3B  3001               	movlw	1	; select bank2/3
 19498  1C3C  3F41               	moviw [1]fsr1
 19499  1C3D  00AD               	movwf	ReadEnvSensor@dev_id
 19500  1C3E  083E               	movf	bme280_get_regs@reg_addr,w
 19501  1C3F  00BB               	movwf	??_bme280_get_regs
 19502  1C40  083B               	movf	??_bme280_get_regs,w
 19503  1C41  00AE               	movwf	ReadEnvSensor@reg_addr
 19504  1C42  0837               	movf	bme280_get_regs@reg_data,w
 19505  1C43  00BC               	movwf	??_bme280_get_regs+1
 19506  1C44  083C               	movf	??_bme280_get_regs+1,w
 19507  1C45  00AF               	movwf	ReadEnvSensor@reg_data
 19508  1C46  0839               	movf	bme280_get_regs@len+1,w
 19509  1C47  00B1               	movwf	ReadEnvSensor@len+1
 19510  1C48  0838               	movf	bme280_get_regs@len,w
 19511  1C49  00B0               	movwf	ReadEnvSensor@len
 19512  1C4A  083A               	movf	bme280_get_regs@dev,w
 19513  1C4B  3E03               	addlw	3
 19514  1C4C  0086               	movwf	6
 19515  1C4D  3001               	movlw	1	; select bank2/3
 19516  1C4E  0087               	movwf	7
 19517  1C4F  3F41               	moviw [1]fsr1
 19518  1C50  008A               	movwf	10
 19519  1C51  3F40               	moviw [0]fsr1
 19520  1C52  000A               	callw
 19521  1C53  319C               	pagesel	$
 19522  1C54  0140               	movlb	0	; select bank0
 19523  1C55  00BD               	movwf	??_bme280_get_regs+2
 19524  1C56  083D               	movf	??_bme280_get_regs+2,w
 19525  1C57  00BF               	movwf	bme280_get_regs@rslt
 19526                           
 19527                           ;BME280_driver/bme280.c: 428:         if (rslt != 0)
 19528  1C58  083F               	movf	bme280_get_regs@rslt,w
 19529  1C59  1903               	btfsc	3,2
 19530  1C5A  2C5F               	goto	l65
 19531                           
 19532                           ;BME280_driver/bme280.c: 429:         {;BME280_driver/bme280.c: 430:             rslt = 
      +                          -4;
 19533  1C5B  30FC               	movlw	252
 19534  1C5C  00BB               	movwf	??_bme280_get_regs
 19535  1C5D  083B               	movf	??_bme280_get_regs,w
 19536  1C5E  00BF               	movwf	bme280_get_regs@rslt
 19537  1C5F                     l65:	
 19538                           ;BME280_driver/bme280.c: 432:     }
 19539                           
 19540                           
 19541                           ;BME280_driver/bme280.c: 434:     return rslt;
 19542  1C5F  083F               	movf	bme280_get_regs@rslt,w
 19543  1C60  0008               	return
 19544  1C61                     __end_of_bme280_get_regs:	
 19545                           
 19546                           	psect	text75
 19547  1E13                     __ptext75:	
 19548 ;; *************** function _ReadEnvSensor *****************
 19549 ;; Defined at:
 19550 ;;		line 128 in file "bme280_i2c.c"
 19551 ;; Parameters:    Size  Location     Type
 19552 ;;  dev_id          1   13[BANK0 ] unsigned char 
 19553 ;;  reg_addr        1   14[BANK0 ] unsigned char 
 19554 ;;  reg_data        1   15[BANK0 ] PTR unsigned char 
 19555 ;;		 -> get_calib_data@calib_data(26), put_device_to_sleep@reg_data(4), write_power_mode@sensor_mode_reg_val(1), set_fil
      +ter_standby_settings@reg_data(1), 
 19556 ;;		 -> set_osr_press_temp_settings@reg_data(1), set_osr_humidity_settings@ctrl_meas(1), bme280_get_sensor_data@reg_data
      +(8), bme280_set_sensor_mode@last_set_mode(1), 
 19557 ;;		 -> bme280_get_sensor_settings@reg_data(4), bme280_set_sensor_settings@sensor_mode(1), bme280_init@chip_id(1), 
 19558 ;;  len             2   16[BANK0 ] unsigned short 
 19559 ;; Auto vars:     Size  Location     Type
 19560 ;;  i               2   21[BANK0 ] int 
 19561 ;;  rslt            1   20[BANK0 ] char 
 19562 ;; Return value:  Size  Location     Type
 19563 ;;                  1    wreg      char 
 19564 ;; Registers used:
 19565 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19566 ;; Tracked objects:
 19567 ;;		On entry : 0/0
 19568 ;;		On exit  : 0/0
 19569 ;;		Unchanged: 0/0
 19570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19571 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19572 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19573 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19574 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19575 ;;Total ram usage:       10 bytes
 19576 ;; Hardware stack levels used:    1
 19577 ;; Hardware stack levels required when called:    9
 19578 ;; This function calls:
 19579 ;;		_I2C_ReadByte
 19580 ;;		_I2C_Stop
 19581 ;;		_I2C_Wait_SSPIF
 19582 ;;		_I2C_WriteByte
 19583 ;; This function is called by:
 19584 ;;		_BME280_Init
 19585 ;;		_bme280_get_regs
 19586 ;; This function uses a non-reentrant model
 19587 ;;
 19588                           
 19589                           
 19590                           ;psect for function _ReadEnvSensor
 19591  1E13                     _ReadEnvSensor:	
 19592                           
 19593                           ;bme280_i2c.c: 128: int8_t ReadEnvSensor(uint8_t dev_id, uint8_t reg_addr, uint8_t *reg_
      +                          data, uint16_t len);bme280_i2c.c: 129: {;bme280_i2c.c: 130:     int8_t rslt = 0;
 19594                           
 19595                           ;incstack = 0
 19596                           ; Regs used in _ReadEnvSensor: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 19597  1E13  0140               	movlb	0	; select bank0
 19598  1E14  01B4               	clrf	ReadEnvSensor@rslt
 19599                           
 19600                           ;bme280_i2c.c: 132:     PIR3bits.SSP1IF = 0;
 19601  1E15  014E               	movlb	14	; select bank14
 19602  1E16  100F               	bcf	15,0	;volatile
 19603                           
 19604                           ;bme280_i2c.c: 135:     SSP1CON2bits.SEN = 1;
 19605  1E17  0143               	movlb	3	; select bank3
 19606  1E18  1411               	bsf	17,0	;volatile
 19607                           
 19608                           ;bme280_i2c.c: 136:     I2C_Wait_SSPIF();
 19609  1E19  319D  2532  319E   	fcall	_I2C_Wait_SSPIF
 19610                           
 19611                           ;bme280_i2c.c: 139:     I2C_WriteByte(dev_id << 1);
 19612  1E1C  0140               	movlb	0	; select bank0
 19613  1E1D  352D               	lslf	ReadEnvSensor@dev_id,w
 19614  1E1E  31A6  2635  319E   	fcall	_I2C_WriteByte
 19615                           
 19616                           ;bme280_i2c.c: 142:     I2C_WriteByte(reg_addr);
 19617  1E21  0140               	movlb	0	; select bank0
 19618  1E22  082E               	movf	ReadEnvSensor@reg_addr,w
 19619  1E23  31A6  2635  319E   	fcall	_I2C_WriteByte
 19620                           
 19621                           ;bme280_i2c.c: 145:     SSP1CON2bits.RSEN = 1;
 19622  1E26  0143               	movlb	3	; select bank3
 19623  1E27  1491               	bsf	17,1	;volatile
 19624                           
 19625                           ;bme280_i2c.c: 146:     I2C_Wait_SSPIF();
 19626  1E28  319D  2532  319E   	fcall	_I2C_Wait_SSPIF
 19627                           
 19628                           ;bme280_i2c.c: 149:     I2C_WriteByte((dev_id << 1) | 0x01);
 19629  1E2B  1403               	setc
 19630  1E2C  0140               	movlb	0	; select bank0
 19631  1E2D  0D2D               	rlf	ReadEnvSensor@dev_id,w
 19632  1E2E  31A6  2635  319E   	fcall	_I2C_WriteByte
 19633                           
 19634                           ;bme280_i2c.c: 152:     for (int i = 0; i < len; i++)
 19635  1E31  0140               	movlb	0	; select bank0
 19636  1E32  01B5               	clrf	ReadEnvSensor@i
 19637  1E33  01B6               	clrf	ReadEnvSensor@i+1
 19638  1E34                     l4976:	
 19639  1E34  0831               	movf	ReadEnvSensor@len+1,w
 19640  1E35  0236               	subwf	ReadEnvSensor@i+1,w
 19641  1E36  1D03               	skipz
 19642  1E37  2E3A               	goto	u4775
 19643  1E38  0830               	movf	ReadEnvSensor@len,w
 19644  1E39  0235               	subwf	ReadEnvSensor@i,w
 19645  1E3A                     u4775:	
 19646  1E3A  1803               	btfsc	3,0
 19647  1E3B  2E5F               	goto	l4978
 19648                           
 19649                           ;bme280_i2c.c: 153:     {;bme280_i2c.c: 154:         if (i == len - 1)
 19650  1E3C  0830               	movf	ReadEnvSensor@len,w
 19651  1E3D  3EFF               	addlw	255
 19652  1E3E  00B2               	movwf	??_ReadEnvSensor
 19653  1E3F  30FF               	movlw	255
 19654  1E40  3D31               	addwfc	ReadEnvSensor@len+1,w
 19655  1E41  00B3               	movwf	??_ReadEnvSensor+1
 19656  1E42  0836               	movf	ReadEnvSensor@i+1,w
 19657  1E43  0633               	xorwf	??_ReadEnvSensor+1,w
 19658  1E44  1D03               	skipz
 19659  1E45  2E48               	goto	u4765
 19660  1E46  0835               	movf	ReadEnvSensor@i,w
 19661  1E47  0632               	xorwf	??_ReadEnvSensor,w
 19662  1E48                     u4765:	
 19663  1E48  1D03               	skipz
 19664  1E49  2E4C               	goto	l4972
 19665                           
 19666                           ;bme280_i2c.c: 155:         {;bme280_i2c.c: 156:             reg_data[i] = I2C_ReadByte(
      +                          1);
 19667  1E4A  3001               	movlw	1
 19668  1E4B  2E4D               	goto	L5
 19669  1E4C                     l4972:	
 19670                           ;bme280_i2c.c: 157:         }
 19671                           
 19672                           
 19673                           ;bme280_i2c.c: 159:         {;bme280_i2c.c: 160:             reg_data[i]=I2C_ReadByte(0)
      +                          ;
 19674  1E4C  3000               	movlw	0
 19675  1E4D                     L5:	
 19676  1E4D  31A6  26CF  319E   	fcall	_I2C_ReadByte
 19677  1E50  0140               	movlb	0	; select bank0
 19678  1E51  00B2               	movwf	??_ReadEnvSensor
 19679  1E52  0835               	movf	ReadEnvSensor@i,w
 19680  1E53  072F               	addwf	ReadEnvSensor@reg_data,w
 19681  1E54  00B3               	movwf	??_ReadEnvSensor+1
 19682  1E55  0833               	movf	??_ReadEnvSensor+1,w
 19683  1E56  0086               	movwf	6
 19684  1E57  0187               	clrf	7
 19685  1E58  0832               	movf	??_ReadEnvSensor,w
 19686  1E59  0081               	movwf	1
 19687                           
 19688                           ;bme280_i2c.c: 162:     }
 19689  1E5A  3001               	movlw	1
 19690  1E5B  07B5               	addwf	ReadEnvSensor@i,f
 19691  1E5C  3000               	movlw	0
 19692  1E5D  3DB6               	addwfc	ReadEnvSensor@i+1,f
 19693  1E5E  2E34               	goto	l4976
 19694  1E5F                     l4978:	
 19695                           
 19696                           ;bme280_i2c.c: 165:     I2C_Stop();
 19697  1E5F  31A5  25AF         	fcall	_I2C_Stop
 19698                           
 19699                           ;bme280_i2c.c: 167:     return rslt;
 19700  1E61  0140               	movlb	0	; select bank0
 19701  1E62  0834               	movf	ReadEnvSensor@rslt,w
 19702  1E63  0008               	return
 19703  1E64                     __end_of_ReadEnvSensor:	
 19704                           
 19705                           	psect	text76
 19706  26CF                     __ptext76:	
 19707 ;; *************** function _I2C_ReadByte *****************
 19708 ;; Defined at:
 19709 ;;		line 54 in file "bme280_i2c.c"
 19710 ;; Parameters:    Size  Location     Type
 19711 ;;  ackbit          1    wreg     unsigned char 
 19712 ;; Auto vars:     Size  Location     Type
 19713 ;;  ackbit          1   11[BANK0 ] unsigned char 
 19714 ;;  rcvdata         1   12[BANK0 ] unsigned char 
 19715 ;; Return value:  Size  Location     Type
 19716 ;;                  1    wreg      unsigned char 
 19717 ;; Registers used:
 19718 ;;		wreg, status,2, status,0, pclath, cstack
 19719 ;; Tracked objects:
 19720 ;;		On entry : 0/0
 19721 ;;		On exit  : 0/0
 19722 ;;		Unchanged: 0/0
 19723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19725 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19726 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19727 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19728 ;;Total ram usage:        3 bytes
 19729 ;; Hardware stack levels used:    1
 19730 ;; Hardware stack levels required when called:    6
 19731 ;; This function calls:
 19732 ;;		_I2C_Wait_SSPIF
 19733 ;; This function is called by:
 19734 ;;		_ReadEnvSensor
 19735 ;; This function uses a non-reentrant model
 19736 ;;
 19737                           
 19738                           
 19739                           ;psect for function _I2C_ReadByte
 19740  26CF                     _I2C_ReadByte:	
 19741                           
 19742                           ;incstack = 0
 19743                           ; Regs used in _I2C_ReadByte: [wreg+status,2+status,0+pclath+cstack]
 19744                           ;I2C_ReadByte@ackbit stored from wreg
 19745  26CF  0140               	movlb	0	; select bank0
 19746  26D0  00AB               	movwf	I2C_ReadByte@ackbit
 19747                           
 19748                           ;bme280_i2c.c: 54: uint8_t I2C_ReadByte(uint8_t ackbit);bme280_i2c.c: 55: {;bme280_i2c.c
      +                          : 56:     uint8_t rcvdata;;bme280_i2c.c: 58:     SSP1CON2bits.RCEN = 1;
 19749  26D1  0143               	movlb	3	; select bank3
 19750  26D2  1591               	bsf	17,3	;volatile
 19751                           
 19752                           ;bme280_i2c.c: 59:     I2C_Wait_SSPIF();
 19753  26D3  319D  2532  31A6   	fcall	_I2C_Wait_SSPIF
 19754                           
 19755                           ;bme280_i2c.c: 61:     rcvdata = SSP1BUF;
 19756  26D6  0143               	movlb	3	; select bank3
 19757  26D7  080C               	movf	12,w	;volatile
 19758  26D8  00FD               	movwf	??_I2C_ReadByte
 19759  26D9  087D               	movf	??_I2C_ReadByte,w
 19760  26DA  0140               	movlb	0	; select bank0
 19761  26DB  00AC               	movwf	I2C_ReadByte@rcvdata
 19762                           
 19763                           ;bme280_i2c.c: 64:     SSP1CON2bits.ACKDT = ackbit;
 19764  26DC  0C2B               	rrf	I2C_ReadByte@ackbit,w
 19765  26DD  0143               	movlb	3	; select bank3
 19766  26DE  1C03               	skipc
 19767  26DF  1291               	bcf	17,5	;volatile
 19768  26E0  1803               	skipnc
 19769  26E1  1691               	bsf	17,5	;volatile
 19770                           
 19771                           ;bme280_i2c.c: 65:     SSP1CON2bits.ACKEN = 1;
 19772  26E2  1611               	bsf	17,4	;volatile
 19773                           
 19774                           ;bme280_i2c.c: 66:     I2C_Wait_SSPIF();
 19775  26E3  319D  2532         	fcall	_I2C_Wait_SSPIF
 19776                           
 19777                           ;bme280_i2c.c: 68:     return (rcvdata);
 19778  26E5  0140               	movlb	0	; select bank0
 19779  26E6  082C               	movf	I2C_ReadByte@rcvdata,w
 19780  26E7  0008               	return
 19781  26E8                     __end_of_I2C_ReadByte:	
 19782                           
 19783                           	psect	text77
 19784  1B1D                     __ptext77:	
 19785 ;; *************** function _bme280_soft_reset *****************
 19786 ;; Defined at:
 19787 ;;		line 630 in file "BME280_driver/bme280.c"
 19788 ;; Parameters:    Size  Location     Type
 19789 ;;  dev             1    wreg     PTR const struct bme280_
 19790 ;;		 -> EnvSensor(51), 
 19791 ;; Auto vars:     Size  Location     Type
 19792 ;;  dev             1   57[BANK0 ] PTR const struct bme280_
 19793 ;;		 -> EnvSensor(51), 
 19794 ;;  reg_addr        1   56[BANK0 ] unsigned char 
 19795 ;;  rslt            1   55[BANK0 ] char 
 19796 ;;  soft_rst_cmd    1   54[BANK0 ] unsigned char 
 19797 ;; Return value:  Size  Location     Type
 19798 ;;                  1    wreg      char 
 19799 ;; Registers used:
 19800 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19801 ;; Tracked objects:
 19802 ;;		On entry : 0/0
 19803 ;;		On exit  : 0/0
 19804 ;;		Unchanged: 0/0
 19805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19807 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19808 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19809 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19810 ;;Total ram usage:        7 bytes
 19811 ;; Hardware stack levels used:    1
 19812 ;; Hardware stack levels required when called:   11
 19813 ;; This function calls:
 19814 ;;		_Sleep
 19815 ;;		_bme280_set_regs
 19816 ;;		_null_ptr_check
 19817 ;; This function is called by:
 19818 ;;		_bme280_init
 19819 ;;		_put_device_to_sleep
 19820 ;; This function uses a non-reentrant model
 19821 ;;
 19822                           
 19823                           
 19824                           ;psect for function _bme280_soft_reset
 19825  1B1D                     _bme280_soft_reset:	
 19826                           
 19827                           ;incstack = 0
 19828                           ; Regs used in _bme280_soft_reset: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 19829                           ;bme280_soft_reset@dev stored from wreg
 19830  1B1D  0140               	movlb	0	; select bank0
 19831  1B1E  00D9               	movwf	bme280_soft_reset@dev
 19832                           
 19833                           ;BME280_driver/bme280.c: 630: int8_t bme280_soft_reset(const struct bme280_dev *dev);BME
      +                          280_driver/bme280.c: 631: {;BME280_driver/bme280.c: 632:     int8_t rslt;;BME280_driver/
      +                          bme280.c: 633:     uint8_t reg_addr = 0xE0;
 19834  1B1F  30E0               	movlw	224
 19835  1B20  00D3               	movwf	??_bme280_soft_reset
 19836  1B21  0853               	movf	??_bme280_soft_reset,w
 19837  1B22  00D8               	movwf	bme280_soft_reset@reg_addr
 19838                           
 19839                           ;BME280_driver/bme280.c: 636:     uint8_t soft_rst_cmd = 0xB6;
 19840  1B23  30B6               	movlw	182
 19841  1B24  00D3               	movwf	??_bme280_soft_reset
 19842  1B25  0853               	movf	??_bme280_soft_reset,w
 19843  1B26  00D6               	movwf	bme280_soft_reset@soft_rst_cmd
 19844                           
 19845                           ;BME280_driver/bme280.c: 639:     rslt = null_ptr_check(dev);
 19846  1B27  0859               	movf	bme280_soft_reset@dev,w
 19847  1B28  31A7  2790  319B   	fcall	_null_ptr_check
 19848  1B2B  0140               	movlb	0	; select bank0
 19849  1B2C  00D3               	movwf	??_bme280_soft_reset
 19850  1B2D  0853               	movf	??_bme280_soft_reset,w
 19851  1B2E  00D7               	movwf	bme280_soft_reset@rslt
 19852                           
 19853                           ;BME280_driver/bme280.c: 642:     if (rslt == 0)
 19854  1B2F  0857               	movf	bme280_soft_reset@rslt,w
 19855  1B30  1D03               	btfss	3,2
 19856  1B31  2B56               	goto	l5158
 19857                           
 19858                           ;BME280_driver/bme280.c: 643:     {;BME280_driver/bme280.c: 645:         rslt = bme280_s
      +                          et_regs(&reg_addr, &soft_rst_cmd, 1, dev);
 19859  1B32  3056               	movlw	(low (bme280_soft_reset@soft_rst_cmd| 0))& (0+255)
 19860  1B33  00D3               	movwf	??_bme280_soft_reset
 19861  1B34  0853               	movf	??_bme280_soft_reset,w
 19862  1B35  00B4               	movwf	bme280_set_regs@reg_data
 19863  1B36  01B5               	clrf	bme280_set_regs@len
 19864  1B37  0AB5               	incf	bme280_set_regs@len,f
 19865  1B38  0859               	movf	bme280_soft_reset@dev,w
 19866  1B39  00D4               	movwf	??_bme280_soft_reset+1
 19867  1B3A  0854               	movf	??_bme280_soft_reset+1,w
 19868  1B3B  00B6               	movwf	bme280_set_regs@dev
 19869  1B3C  3058               	movlw	(low (bme280_soft_reset@reg_addr| 0))& (0+255)
 19870  1B3D  3196  266A  319B   	fcall	_bme280_set_regs
 19871  1B40  0140               	movlb	0	; select bank0
 19872  1B41  00D5               	movwf	??_bme280_soft_reset+2
 19873  1B42  0855               	movf	??_bme280_soft_reset+2,w
 19874  1B43  00D7               	movwf	bme280_soft_reset@rslt
 19875                           
 19876                           ;BME280_driver/bme280.c: 648:         dev->delay_ms(2);
 19877  1B44  3000               	movlw	0
 19878  1B45  00F3               	movwf	Sleep@ms+3
 19879  1B46  3000               	movlw	0
 19880  1B47  00F2               	movwf	Sleep@ms+2
 19881  1B48  3000               	movlw	0
 19882  1B49  00F1               	movwf	Sleep@ms+1
 19883  1B4A  3002               	movlw	2
 19884  1B4B  00F0               	movwf	Sleep@ms
 19885  1B4C  0859               	movf	bme280_soft_reset@dev,w
 19886  1B4D  3E07               	addlw	7
 19887  1B4E  0086               	movwf	6
 19888  1B4F  3001               	movlw	1	; select bank2/3
 19889  1B50  0087               	movwf	7
 19890  1B51  3F41               	moviw [1]fsr1
 19891  1B52  008A               	movwf	10
 19892  1B53  3F40               	moviw [0]fsr1
 19893  1B54  000A               	callw
 19894  1B55  319B               	pagesel	$
 19895  1B56                     l5158:	
 19896                           
 19897                           ;BME280_driver/bme280.c: 651:     return rslt;
 19898  1B56  0140               	movlb	0	; select bank0
 19899  1B57  0857               	movf	bme280_soft_reset@rslt,w
 19900  1B58  0008               	return
 19901  1B59                     __end_of_bme280_soft_reset:	
 19902                           
 19903                           	psect	text78
 19904  166A                     __ptext78:	
 19905 ;; *************** function _bme280_set_regs *****************
 19906 ;; Defined at:
 19907 ;;		line 441 in file "BME280_driver/bme280.c"
 19908 ;; Parameters:    Size  Location     Type
 19909 ;;  reg_addr        1    wreg     PTR unsigned char 
 19910 ;;		 -> write_power_mode@reg_addr(1), set_filter_standby_settings@reg_addr(1), set_osr_press_temp_settings@reg_addr(1), 
      +set_osr_humidity_settings@reg_addr(1), 
 19911 ;;		 -> bme280_soft_reset@reg_addr(1), 
 19912 ;;  reg_data        1   20[BANK0 ] PTR const unsigned char 
 19913 ;;		 -> write_power_mode@sensor_mode_reg_val(1), set_filter_standby_settings@reg_data(1), set_osr_press_temp_settings@re
      +g_data(1), set_osr_humidity_settings@ctrl_meas(1), 
 19914 ;;		 -> set_osr_humidity_settings@ctrl_hum(1), bme280_soft_reset@soft_rst_cmd(1), 
 19915 ;;  len             1   21[BANK0 ] unsigned char 
 19916 ;;  dev             1   22[BANK0 ] PTR const struct bme280_
 19917 ;;		 -> EnvSensor(51), 
 19918 ;; Auto vars:     Size  Location     Type
 19919 ;;  reg_addr        1   50[BANK0 ] PTR unsigned char 
 19920 ;;		 -> write_power_mode@reg_addr(1), set_filter_standby_settings@reg_addr(1), set_osr_press_temp_settings@reg_addr(1), 
      +set_osr_humidity_settings@reg_addr(1), 
 19921 ;;		 -> bme280_soft_reset@reg_addr(1), 
 19922 ;;  temp_buff      20   26[BANK0 ] unsigned char [20]
 19923 ;;  temp_len        2   46[BANK0 ] unsigned short 
 19924 ;;  rslt            1   49[BANK0 ] char 
 19925 ;;  reg_addr_cnt    1   48[BANK0 ] unsigned char 
 19926 ;; Return value:  Size  Location     Type
 19927 ;;                  1    wreg      char 
 19928 ;; Registers used:
 19929 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19930 ;; Tracked objects:
 19931 ;;		On entry : 0/0
 19932 ;;		On exit  : 0/0
 19933 ;;		Unchanged: 0/0
 19934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19935 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19936 ;;      Locals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19937 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19938 ;;      Totals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19939 ;;Total ram usage:       31 bytes
 19940 ;; Hardware stack levels used:    1
 19941 ;; Hardware stack levels required when called:   10
 19942 ;; This function calls:
 19943 ;;		_WriteEnvSensor
 19944 ;;		_interleave_reg_addr
 19945 ;;		_null_ptr_check
 19946 ;; This function is called by:
 19947 ;;		_bme280_soft_reset
 19948 ;;		_set_osr_humidity_settings
 19949 ;;		_set_osr_press_temp_settings
 19950 ;;		_set_filter_standby_settings
 19951 ;;		_write_power_mode
 19952 ;; This function uses a non-reentrant model
 19953 ;;
 19954                           
 19955                           
 19956                           ;psect for function _bme280_set_regs
 19957  166A                     _bme280_set_regs:	
 19958                           
 19959                           ;incstack = 0
 19960                           ; Regs used in _bme280_set_regs: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 19961                           ;bme280_set_regs@reg_addr stored from wreg
 19962  166A  0140               	movlb	0	; select bank0
 19963  166B  00D2               	movwf	bme280_set_regs@reg_addr
 19964                           
 19965                           ;BME280_driver/bme280.c: 441: int8_t bme280_set_regs(uint8_t *reg_addr, const uint8_t *r
      +                          eg_data, uint8_t len, const struct bme280_dev *dev);BME280_driver/bme280.c: 442: {;BME28
      +                          0_driver/bme280.c: 443:     int8_t rslt;;BME280_driver/bme280.c: 444:     uint8_t temp_b
      +                          uff[20];;BME280_driver/bme280.c: 446:     if (len > 10)
 19966  166C  300B               	movlw	11
 19967  166D  0235               	subwf	bme280_set_regs@len,w
 19968  166E  1C03               	skipc
 19969  166F  2E74               	goto	l5030
 19970                           
 19971                           ;BME280_driver/bme280.c: 447:     {;BME280_driver/bme280.c: 448:         len = 10;
 19972  1670  300A               	movlw	10
 19973  1671  00B7               	movwf	??_bme280_set_regs
 19974  1672  0837               	movf	??_bme280_set_regs,w
 19975  1673  00B5               	movwf	bme280_set_regs@len
 19976  1674                     l5030:	
 19977                           
 19978                           ;BME280_driver/bme280.c: 450:     uint16_t temp_len;;BME280_driver/bme280.c: 451:     ui
      +                          nt8_t reg_addr_cnt;;BME280_driver/bme280.c: 454:     rslt = null_ptr_check(dev);
 19979  1674  0836               	movf	bme280_set_regs@dev,w
 19980  1675  31A7  2790  3196   	fcall	_null_ptr_check
 19981  1678  0140               	movlb	0	; select bank0
 19982  1679  00B7               	movwf	??_bme280_set_regs
 19983  167A  0837               	movf	??_bme280_set_regs,w
 19984  167B  00D1               	movwf	bme280_set_regs@rslt
 19985                           
 19986                           ;BME280_driver/bme280.c: 457:     if ((rslt == 0) && (reg_addr != ((void*)0)) && (reg_da
      +                          ta != ((void*)0)))
 19987  167C  0851               	movf	bme280_set_regs@rslt,w
 19988  167D  1D03               	btfss	3,2
 19989  167E  2F07               	goto	l72
 19990  167F  0852               	movf	bme280_set_regs@reg_addr,w
 19991  1680  1903               	btfsc	3,2
 19992  1681  2F07               	goto	l72
 19993  1682  0834               	movf	bme280_set_regs@reg_data,w
 19994  1683  1903               	btfsc	3,2
 19995  1684  2F07               	goto	l72
 19996                           
 19997                           ;BME280_driver/bme280.c: 458:     {;BME280_driver/bme280.c: 459:         if (len != 0)
 19998  1685  0835               	movf	bme280_set_regs@len,w
 19999  1686  1903               	btfsc	3,2
 20000  1687  2F02               	goto	l5066
 20001                           
 20002                           ;BME280_driver/bme280.c: 460:         {;BME280_driver/bme280.c: 461:             temp_bu
      +                          ff[0] = reg_data[0];
 20003  1688  0834               	movf	bme280_set_regs@reg_data,w
 20004  1689  0086               	movwf	6
 20005  168A  0187               	clrf	7
 20006  168B  0801               	movf	1,w
 20007  168C  00B7               	movwf	??_bme280_set_regs
 20008  168D  0837               	movf	??_bme280_set_regs,w
 20009  168E  00BA               	movwf	bme280_set_regs@temp_buff
 20010                           
 20011                           ;BME280_driver/bme280.c: 464:             if (dev->intf != BME280_I2C_INTF)
 20012  168F  0836               	movf	bme280_set_regs@dev,w
 20013  1690  3E02               	addlw	2
 20014  1691  0086               	movwf	6
 20015  1692  3001               	movlw	1	; select bank2/3
 20016  1693  0087               	movwf	7
 20017  1694  0301               	decf	1,w
 20018  1695  1903               	btfsc	3,2
 20019  1696  2EB2               	goto	l5052
 20020                           
 20021                           ;BME280_driver/bme280.c: 465:             {;BME280_driver/bme280.c: 466:                
      +                           for (reg_addr_cnt = 0; reg_addr_cnt < len; reg_addr_cnt++)
 20022  1697  01D0               	clrf	bme280_set_regs@reg_addr_cnt
 20023  1698                     l5050:	
 20024  1698  0835               	movf	bme280_set_regs@len,w
 20025  1699  0250               	subwf	bme280_set_regs@reg_addr_cnt,w
 20026  169A  1803               	btfsc	3,0
 20027  169B  2EB2               	goto	l5052
 20028                           
 20029                           ;BME280_driver/bme280.c: 467:                 {;BME280_driver/bme280.c: 468:            
      +                                   reg_addr[reg_addr_cnt] = reg_addr[reg_addr_cnt] & 0x7F;
 20030  169C  0850               	movf	bme280_set_regs@reg_addr_cnt,w
 20031  169D  0752               	addwf	bme280_set_regs@reg_addr,w
 20032  169E  00B7               	movwf	??_bme280_set_regs
 20033  169F  0837               	movf	??_bme280_set_regs,w
 20034  16A0  0086               	movwf	6
 20035  16A1  0187               	clrf	7
 20036  16A2  0801               	movf	1,w
 20037  16A3  397F               	andlw	127
 20038  16A4  00B8               	movwf	??_bme280_set_regs+1
 20039  16A5  0850               	movf	bme280_set_regs@reg_addr_cnt,w
 20040  16A6  0752               	addwf	bme280_set_regs@reg_addr,w
 20041  16A7  00B9               	movwf	??_bme280_set_regs+2
 20042  16A8  0839               	movf	??_bme280_set_regs+2,w
 20043  16A9  0086               	movwf	6
 20044  16AA  0187               	clrf	7
 20045  16AB  0838               	movf	??_bme280_set_regs+1,w
 20046  16AC  0081               	movwf	1
 20047                           
 20048                           ;BME280_driver/bme280.c: 469:                 }
 20049  16AD  3001               	movlw	1
 20050  16AE  00B7               	movwf	??_bme280_set_regs
 20051  16AF  0837               	movf	??_bme280_set_regs,w
 20052  16B0  07D0               	addwf	bme280_set_regs@reg_addr_cnt,f
 20053  16B1  2E98               	goto	l5050
 20054  16B2                     l5052:	
 20055                           
 20056                           ;BME280_driver/bme280.c: 473:             if (len > 1)
 20057  16B2  3002               	movlw	2
 20058  16B3  0235               	subwf	bme280_set_regs@len,w
 20059  16B4  1C03               	skipc
 20060  16B5  2ED2               	goto	l5058
 20061                           
 20062                           ;BME280_driver/bme280.c: 474:             {;BME280_driver/bme280.c: 478:                
      +                           interleave_reg_addr(reg_addr, temp_buff, reg_data, len);
 20063  16B6  303A               	movlw	(low (bme280_set_regs@temp_buff| 0))& (0+255)
 20064  16B7  00B7               	movwf	??_bme280_set_regs
 20065  16B8  0837               	movf	??_bme280_set_regs,w
 20066  16B9  00F0               	movwf	interleave_reg_addr@temp_buff
 20067  16BA  0834               	movf	bme280_set_regs@reg_data,w
 20068  16BB  00B8               	movwf	??_bme280_set_regs+1
 20069  16BC  0838               	movf	??_bme280_set_regs+1,w
 20070  16BD  00F1               	movwf	interleave_reg_addr@reg_data
 20071  16BE  0835               	movf	bme280_set_regs@len,w
 20072  16BF  00B9               	movwf	??_bme280_set_regs+2
 20073  16C0  0839               	movf	??_bme280_set_regs+2,w
 20074  16C1  00F2               	movwf	interleave_reg_addr@len
 20075  16C2  0852               	movf	bme280_set_regs@reg_addr,w
 20076  16C3  3199  2198  3196   	fcall	_interleave_reg_addr
 20077                           
 20078                           ;BME280_driver/bme280.c: 479:                 temp_len = ((len * 2) - 1);
 20079  16C6  0140               	movlb	0	; select bank0
 20080  16C7  0835               	movf	bme280_set_regs@len,w
 20081  16C8  00B7               	movwf	??_bme280_set_regs
 20082  16C9  01B8               	clrf	??_bme280_set_regs+1
 20083  16CA  35B7               	lslf	??_bme280_set_regs,f
 20084  16CB  0DB8               	rlf	??_bme280_set_regs+1,f
 20085  16CC  0837               	movf	??_bme280_set_regs,w
 20086  16CD  3EFF               	addlw	255
 20087  16CE  00CE               	movwf	bme280_set_regs@temp_len
 20088  16CF  30FF               	movlw	255
 20089  16D0  3D38               	addwfc	??_bme280_set_regs+1,w
 20090  16D1  2ED8               	goto	L6
 20091  16D2                     l5058:	
 20092                           ;BME280_driver/bme280.c: 480:             }
 20093                           
 20094                           
 20095                           ;BME280_driver/bme280.c: 482:             {;BME280_driver/bme280.c: 483:                
      +                           temp_len = len;
 20096  16D2  0835               	movf	bme280_set_regs@len,w
 20097  16D3  00B7               	movwf	??_bme280_set_regs
 20098  16D4  01B8               	clrf	??_bme280_set_regs+1
 20099  16D5  0837               	movf	??_bme280_set_regs,w
 20100  16D6  00CE               	movwf	bme280_set_regs@temp_len
 20101  16D7  0838               	movf	??_bme280_set_regs+1,w
 20102  16D8                     L6:	
 20103  16D8  00CF               	movwf	bme280_set_regs@temp_len+1
 20104                           
 20105                           ;BME280_driver/bme280.c: 485:             rslt = dev->write(dev->dev_id, reg_addr[0], te
      +                          mp_buff, temp_len);
 20106  16D9  0836               	movf	bme280_set_regs@dev,w
 20107  16DA  0086               	movwf	6
 20108  16DB  3001               	movlw	1	; select bank2/3
 20109  16DC  0087               	movwf	7
 20110  16DD  3001               	movlw	1	; select bank2/3
 20111  16DE  3F41               	moviw [1]fsr1
 20112  16DF  00AB               	movwf	WriteEnvSensor@dev_id
 20113  16E0  0852               	movf	bme280_set_regs@reg_addr,w
 20114  16E1  0086               	movwf	6
 20115  16E2  0187               	clrf	7
 20116  16E3  0801               	movf	1,w
 20117  16E4  00B7               	movwf	??_bme280_set_regs
 20118  16E5  0837               	movf	??_bme280_set_regs,w
 20119  16E6  00AC               	movwf	WriteEnvSensor@reg_addr
 20120  16E7  303A               	movlw	(low (bme280_set_regs@temp_buff| 0))& (0+255)
 20121  16E8  00B8               	movwf	??_bme280_set_regs+1
 20122  16E9  0838               	movf	??_bme280_set_regs+1,w
 20123  16EA  00AD               	movwf	WriteEnvSensor@reg_data
 20124  16EB  084F               	movf	bme280_set_regs@temp_len+1,w
 20125  16EC  00AF               	movwf	WriteEnvSensor@len+1
 20126  16ED  084E               	movf	bme280_set_regs@temp_len,w
 20127  16EE  00AE               	movwf	WriteEnvSensor@len
 20128  16EF  0836               	movf	bme280_set_regs@dev,w
 20129  16F0  3E05               	addlw	5
 20130  16F1  0086               	movwf	6
 20131  16F2  3001               	movlw	1	; select bank2/3
 20132  16F3  0087               	movwf	7
 20133  16F4  3F41               	moviw [1]fsr1
 20134  16F5  008A               	movwf	10
 20135  16F6  3F40               	moviw [0]fsr1
 20136  16F7  000A               	callw
 20137  16F8  3196               	pagesel	$
 20138  16F9  0140               	movlb	0	; select bank0
 20139  16FA  00B9               	movwf	??_bme280_set_regs+2
 20140  16FB  0839               	movf	??_bme280_set_regs+2,w
 20141  16FC  00D1               	movwf	bme280_set_regs@rslt
 20142                           
 20143                           ;BME280_driver/bme280.c: 488:             if (rslt != 0)
 20144  16FD  0851               	movf	bme280_set_regs@rslt,w
 20145  16FE  1903               	btfsc	3,2
 20146  16FF  2F09               	goto	l5068
 20147                           
 20148                           ;BME280_driver/bme280.c: 489:             {;BME280_driver/bme280.c: 490:                
      +                           rslt = -4;
 20149  1700  30FC               	movlw	252
 20150  1701  2F03               	goto	L7
 20151  1702                     l5066:	
 20152                           
 20153                           ;BME280_driver/bme280.c: 494:         {;BME280_driver/bme280.c: 495:             rslt = 
      +                          -3;
 20154  1702  30FD               	movlw	253
 20155  1703                     L7:	
 20156  1703  00B7               	movwf	??_bme280_set_regs
 20157  1704  0837               	movf	??_bme280_set_regs,w
 20158  1705  00D1               	movwf	bme280_set_regs@rslt
 20159  1706  2F09               	goto	l5068
 20160  1707                     l72:	
 20161                           ;BME280_driver/bme280.c: 498:     else
 20162                           
 20163                           
 20164                           ;BME280_driver/bme280.c: 499:     {;BME280_driver/bme280.c: 500:         rslt = -1;
 20165  1707  01D1               	clrf	bme280_set_regs@rslt
 20166  1708  03D1               	decf	bme280_set_regs@rslt,f
 20167  1709                     l5068:	
 20168                           
 20169                           ;BME280_driver/bme280.c: 503:     return rslt;
 20170  1709  0851               	movf	bme280_set_regs@rslt,w
 20171  170A  0008               	return
 20172  170B                     __end_of_bme280_set_regs:	
 20173                           
 20174                           	psect	text79
 20175  2790                     __ptext79:	
 20176 ;; *************** function _null_ptr_check *****************
 20177 ;; Defined at:
 20178 ;;		line 1425 in file "BME280_driver/bme280.c"
 20179 ;; Parameters:    Size  Location     Type
 20180 ;;  dev             1    wreg     PTR const struct bme280_
 20181 ;;		 -> EnvSensor(51), 
 20182 ;; Auto vars:     Size  Location     Type
 20183 ;;  dev             1    3[COMMON] PTR const struct bme280_
 20184 ;;		 -> EnvSensor(51), 
 20185 ;;  rslt            1    2[COMMON] char 
 20186 ;; Return value:  Size  Location     Type
 20187 ;;                  1    wreg      char 
 20188 ;; Registers used:
 20189 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 20190 ;; Tracked objects:
 20191 ;;		On entry : 0/0
 20192 ;;		On exit  : 0/0
 20193 ;;		Unchanged: 0/0
 20194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20196 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20197 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20198 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20199 ;;Total ram usage:        4 bytes
 20200 ;; Hardware stack levels used:    1
 20201 ;; Hardware stack levels required when called:    3
 20202 ;; This function calls:
 20203 ;;		Nothing
 20204 ;; This function is called by:
 20205 ;;		_bme280_init
 20206 ;;		_bme280_get_regs
 20207 ;;		_bme280_set_regs
 20208 ;;		_bme280_set_sensor_settings
 20209 ;;		_bme280_set_sensor_mode
 20210 ;;		_bme280_get_sensor_mode
 20211 ;;		_bme280_soft_reset
 20212 ;;		_bme280_get_sensor_data
 20213 ;;		_bme280_get_sensor_settings
 20214 ;; This function uses a non-reentrant model
 20215 ;;
 20216                           
 20217                           
 20218                           ;psect for function _null_ptr_check
 20219  2790                     _null_ptr_check:	
 20220                           
 20221                           ;incstack = 0
 20222                           ; Regs used in _null_ptr_check: [wreg+fsr1l+fsr1h+status,2+status,0]
 20223                           ;null_ptr_check@dev stored from wreg
 20224  2790  00F3               	movwf	null_ptr_check@dev
 20225                           
 20226                           ;BME280_driver/bme280.c: 1425: static int8_t null_ptr_check(const struct bme280_dev *dev
      +                          );BME280_driver/bme280.c: 1426: {;BME280_driver/bme280.c: 1427:     int8_t rslt;;BME280_
      +                          driver/bme280.c: 1429:     if ((dev == ((void*)0)) || (dev->read == ((void*)0)) || (dev-
      +                          >write == ((void*)0)) || (dev->delay_ms == ((void*)0)))
 20227  2791  0873               	movf	null_ptr_check@dev,w
 20228  2792  1903               	btfsc	3,2
 20229  2793  2FAF               	goto	l238
 20230  2794  0873               	movf	null_ptr_check@dev,w
 20231  2795  3E03               	addlw	3
 20232  2796  0086               	movwf	6
 20233  2797  3001               	movlw	1	; select bank2/3
 20234  2798  0087               	movwf	7
 20235  2799  0016               	moviw fsr1++
 20236  279A  0401               	iorwf	1,w
 20237  279B  1903               	btfsc	3,2
 20238  279C  2FAF               	goto	l238
 20239  279D  0873               	movf	null_ptr_check@dev,w
 20240  279E  3E05               	addlw	5
 20241  279F  0086               	movwf	6
 20242  27A0  3001               	movlw	1	; select bank2/3
 20243  27A1  0087               	movwf	7
 20244  27A2  0016               	moviw fsr1++
 20245  27A3  0401               	iorwf	1,w
 20246  27A4  1903               	btfsc	3,2
 20247  27A5  2FAF               	goto	l238
 20248  27A6  0873               	movf	null_ptr_check@dev,w
 20249  27A7  3E07               	addlw	7
 20250  27A8  0086               	movwf	6
 20251  27A9  3001               	movlw	1	; select bank2/3
 20252  27AA  0087               	movwf	7
 20253  27AB  0016               	moviw fsr1++
 20254  27AC  0401               	iorwf	1,w
 20255  27AD  1D03               	btfss	3,2
 20256  27AE  2FB2               	goto	l4934
 20257  27AF                     l238:	
 20258                           
 20259                           ;BME280_driver/bme280.c: 1430:     {;BME280_driver/bme280.c: 1432:         rslt = -1;
 20260  27AF  01F2               	clrf	null_ptr_check@rslt
 20261  27B0  03F2               	decf	null_ptr_check@rslt,f
 20262                           
 20263                           ;BME280_driver/bme280.c: 1433:     }
 20264  27B1  2FB3               	goto	l4936
 20265  27B2                     l4934:	
 20266                           
 20267                           ;BME280_driver/bme280.c: 1435:     {;BME280_driver/bme280.c: 1437:         rslt = 0;
 20268  27B2  01F2               	clrf	null_ptr_check@rslt
 20269  27B3                     l4936:	
 20270                           
 20271                           ;BME280_driver/bme280.c: 1440:     return rslt;
 20272  27B3  0872               	movf	null_ptr_check@rslt,w
 20273  27B4  0008               	return
 20274  27B5                     __end_of_null_ptr_check:	
 20275                           
 20276                           	psect	text80
 20277  1998                     __ptext80:	
 20278 ;; *************** function _interleave_reg_addr *****************
 20279 ;; Defined at:
 20280 ;;		line 1342 in file "BME280_driver/bme280.c"
 20281 ;; Parameters:    Size  Location     Type
 20282 ;;  reg_addr        1    wreg     PTR const unsigned char 
 20283 ;;		 -> write_power_mode@reg_addr(1), set_filter_standby_settings@reg_addr(1), set_osr_press_temp_settings@reg_addr(1), 
      +set_osr_humidity_settings@reg_addr(1), 
 20284 ;;		 -> bme280_soft_reset@reg_addr(1), 
 20285 ;;  temp_buff       1    0[COMMON] PTR unsigned char 
 20286 ;;		 -> bme280_set_regs@temp_buff(20), 
 20287 ;;  reg_data        1    1[COMMON] PTR const unsigned char 
 20288 ;;		 -> write_power_mode@sensor_mode_reg_val(1), set_filter_standby_settings@reg_data(1), set_osr_press_temp_settings@re
      +g_data(1), set_osr_humidity_settings@ctrl_meas(1), 
 20289 ;;		 -> set_osr_humidity_settings@ctrl_hum(1), bme280_soft_reset@soft_rst_cmd(1), 
 20290 ;;  len             1    2[COMMON] unsigned char 
 20291 ;; Auto vars:     Size  Location     Type
 20292 ;;  reg_addr        1    6[COMMON] PTR const unsigned char 
 20293 ;;		 -> write_power_mode@reg_addr(1), set_filter_standby_settings@reg_addr(1), set_osr_press_temp_settings@reg_addr(1), 
      +set_osr_humidity_settings@reg_addr(1), 
 20294 ;;		 -> bme280_soft_reset@reg_addr(1), 
 20295 ;;  index           1    7[COMMON] unsigned char 
 20296 ;; Return value:  Size  Location     Type
 20297 ;;                  1    wreg      void 
 20298 ;; Registers used:
 20299 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 20300 ;; Tracked objects:
 20301 ;;		On entry : 0/0
 20302 ;;		On exit  : 0/0
 20303 ;;		Unchanged: 0/0
 20304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20305 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20306 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20307 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20308 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20309 ;;Total ram usage:        8 bytes
 20310 ;; Hardware stack levels used:    1
 20311 ;; Hardware stack levels required when called:    3
 20312 ;; This function calls:
 20313 ;;		Nothing
 20314 ;; This function is called by:
 20315 ;;		_bme280_set_regs
 20316 ;; This function uses a non-reentrant model
 20317 ;;
 20318                           
 20319                           
 20320                           ;psect for function _interleave_reg_addr
 20321  1998                     _interleave_reg_addr:	
 20322                           
 20323                           ;incstack = 0
 20324                           ; Regs used in _interleave_reg_addr: [wreg+fsr1l+fsr1h+status,2+status,0]
 20325                           ;interleave_reg_addr@reg_addr stored from wreg
 20326  1998  00F6               	movwf	interleave_reg_addr@reg_addr
 20327                           
 20328                           ;BME280_driver/bme280.c: 1342: static void interleave_reg_addr(const uint8_t *reg_addr, 
      +                          uint8_t *temp_buff, const uint8_t *reg_data, uint8_t len);BME280_driver/bme280.c: 1343: 
      +                          {;BME280_driver/bme280.c: 1344:     uint8_t index;;BME280_driver/bme280.c: 1346:     for
      +                           (index = 1; index < len; index++)
 20329  1999  01F7               	clrf	interleave_reg_addr@index
 20330  199A  0AF7               	incf	interleave_reg_addr@index,f
 20331  199B                     l4946:	
 20332  199B  0872               	movf	interleave_reg_addr@len,w
 20333  199C  0277               	subwf	interleave_reg_addr@index,w
 20334  199D  1803               	btfsc	3,0
 20335  199E  0008               	return
 20336                           
 20337                           ;BME280_driver/bme280.c: 1347:     {;BME280_driver/bme280.c: 1348:         temp_buff[(in
      +                          dex * 2) - 1] = reg_addr[index];
 20338  199F  0877               	movf	interleave_reg_addr@index,w
 20339  19A0  0776               	addwf	interleave_reg_addr@reg_addr,w
 20340  19A1  00F3               	movwf	??_interleave_reg_addr
 20341  19A2  0873               	movf	??_interleave_reg_addr,w
 20342  19A3  0086               	movwf	6
 20343  19A4  0187               	clrf	7
 20344  19A5  0801               	movf	1,w
 20345  19A6  00F4               	movwf	??_interleave_reg_addr+1
 20346  19A7  3577               	lslf	interleave_reg_addr@index,w
 20347  19A8  0770               	addwf	interleave_reg_addr@temp_buff,w
 20348  19A9  00F5               	movwf	??_interleave_reg_addr+2
 20349  19AA  0875               	movf	??_interleave_reg_addr+2,w
 20350  19AB  3EFF               	addlw	-1
 20351  19AC  0086               	movwf	6
 20352  19AD  0187               	clrf	7
 20353  19AE  0874               	movf	??_interleave_reg_addr+1,w
 20354  19AF  0081               	movwf	1
 20355                           
 20356                           ;BME280_driver/bme280.c: 1349:         temp_buff[index * 2] = reg_data[index];
 20357  19B0  0877               	movf	interleave_reg_addr@index,w
 20358  19B1  0771               	addwf	interleave_reg_addr@reg_data,w
 20359  19B2  00F3               	movwf	??_interleave_reg_addr
 20360  19B3  0873               	movf	??_interleave_reg_addr,w
 20361  19B4  0086               	movwf	6
 20362  19B5  0187               	clrf	7
 20363  19B6  0801               	movf	1,w
 20364  19B7  00F4               	movwf	??_interleave_reg_addr+1
 20365  19B8  3577               	lslf	interleave_reg_addr@index,w
 20366  19B9  0770               	addwf	interleave_reg_addr@temp_buff,w
 20367  19BA  00F5               	movwf	??_interleave_reg_addr+2
 20368  19BB  0875               	movf	??_interleave_reg_addr+2,w
 20369  19BC  0086               	movwf	6
 20370  19BD  0187               	clrf	7
 20371  19BE  0874               	movf	??_interleave_reg_addr+1,w
 20372  19BF  0081               	movwf	1
 20373                           
 20374                           ;BME280_driver/bme280.c: 1350:     }
 20375  19C0  3001               	movlw	1
 20376  19C1  00F3               	movwf	??_interleave_reg_addr
 20377  19C2  0873               	movf	??_interleave_reg_addr,w
 20378  19C3  07F7               	addwf	interleave_reg_addr@index,f
 20379  19C4  299B               	goto	l4946
 20380  19C5                     __end_of_interleave_reg_addr:	
 20381                           
 20382                           	psect	text81
 20383  1AB1                     __ptext81:	
 20384 ;; *************** function _WriteEnvSensor *****************
 20385 ;; Defined at:
 20386 ;;		line 170 in file "bme280_i2c.c"
 20387 ;; Parameters:    Size  Location     Type
 20388 ;;  dev_id          1   11[BANK0 ] unsigned char 
 20389 ;;  reg_addr        1   12[BANK0 ] unsigned char 
 20390 ;;  reg_data        1   13[BANK0 ] PTR unsigned char 
 20391 ;;		 -> bme280_set_regs@temp_buff(20), 
 20392 ;;  len             2   14[BANK0 ] unsigned short 
 20393 ;; Auto vars:     Size  Location     Type
 20394 ;;  i               2   18[BANK0 ] int 
 20395 ;;  rslt            1   17[BANK0 ] char 
 20396 ;; Return value:  Size  Location     Type
 20397 ;;                  1    wreg      char 
 20398 ;; Registers used:
 20399 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20400 ;; Tracked objects:
 20401 ;;		On entry : 0/0
 20402 ;;		On exit  : 0/0
 20403 ;;		Unchanged: 0/0
 20404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20405 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20406 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20407 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20408 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20409 ;;Total ram usage:        9 bytes
 20410 ;; Hardware stack levels used:    1
 20411 ;; Hardware stack levels required when called:    9
 20412 ;; This function calls:
 20413 ;;		_I2C_Stop
 20414 ;;		_I2C_Wait_SSPIF
 20415 ;;		_I2C_WriteByte
 20416 ;; This function is called by:
 20417 ;;		_BME280_Init
 20418 ;;		_bme280_set_regs
 20419 ;; This function uses a non-reentrant model
 20420 ;;
 20421                           
 20422                           
 20423                           ;psect for function _WriteEnvSensor
 20424  1AB1                     _WriteEnvSensor:	
 20425                           
 20426                           ;bme280_i2c.c: 170: int8_t WriteEnvSensor(uint8_t dev_id, uint8_t reg_addr, uint8_t *reg
      +                          _data, uint16_t len);bme280_i2c.c: 171: {;bme280_i2c.c: 172:     int8_t rslt = 0;
 20427                           
 20428                           ;incstack = 0
 20429                           ; Regs used in _WriteEnvSensor: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 20430  1AB1  0140               	movlb	0	; select bank0
 20431  1AB2  01B1               	clrf	WriteEnvSensor@rslt
 20432                           
 20433                           ;bme280_i2c.c: 174:     PIR3bits.SSP1IF = 0;
 20434  1AB3  014E               	movlb	14	; select bank14
 20435  1AB4  100F               	bcf	15,0	;volatile
 20436                           
 20437                           ;bme280_i2c.c: 177:     SSP1CON2bits.SEN = 1;
 20438  1AB5  0143               	movlb	3	; select bank3
 20439  1AB6  1411               	bsf	17,0	;volatile
 20440                           
 20441                           ;bme280_i2c.c: 178:     I2C_Wait_SSPIF();
 20442  1AB7  319D  2532  319A   	fcall	_I2C_Wait_SSPIF
 20443                           
 20444                           ;bme280_i2c.c: 181:     I2C_WriteByte(dev_id << 1);
 20445  1ABA  0140               	movlb	0	; select bank0
 20446  1ABB  352B               	lslf	WriteEnvSensor@dev_id,w
 20447  1ABC  31A6  2635  319A   	fcall	_I2C_WriteByte
 20448                           
 20449                           ;bme280_i2c.c: 184:     I2C_WriteByte(reg_addr);
 20450  1ABF  0140               	movlb	0	; select bank0
 20451  1AC0  082C               	movf	WriteEnvSensor@reg_addr,w
 20452  1AC1  31A6  2635  319A   	fcall	_I2C_WriteByte
 20453                           
 20454                           ;bme280_i2c.c: 186:     for(int i = 0; i < len; i++)
 20455  1AC4  0140               	movlb	0	; select bank0
 20456  1AC5  01B2               	clrf	WriteEnvSensor@i
 20457  1AC6  01B3               	clrf	WriteEnvSensor@i+1
 20458  1AC7                     l5002:	
 20459  1AC7  082F               	movf	WriteEnvSensor@len+1,w
 20460  1AC8  0233               	subwf	WriteEnvSensor@i+1,w
 20461  1AC9  1D03               	skipz
 20462  1ACA  2ACD               	goto	u4785
 20463  1ACB  082E               	movf	WriteEnvSensor@len,w
 20464  1ACC  0232               	subwf	WriteEnvSensor@i,w
 20465  1ACD                     u4785:	
 20466  1ACD  1803               	btfsc	3,0
 20467  1ACE  2ADF               	goto	l5004
 20468                           
 20469                           ;bme280_i2c.c: 187:     {;bme280_i2c.c: 188:         I2C_WriteByte(reg_data[i]);
 20470  1ACF  0832               	movf	WriteEnvSensor@i,w
 20471  1AD0  072D               	addwf	WriteEnvSensor@reg_data,w
 20472  1AD1  00B0               	movwf	??_WriteEnvSensor
 20473  1AD2  0830               	movf	??_WriteEnvSensor,w
 20474  1AD3  0086               	movwf	6
 20475  1AD4  0187               	clrf	7
 20476  1AD5  0801               	movf	1,w
 20477  1AD6  31A6  2635  319A   	fcall	_I2C_WriteByte
 20478                           
 20479                           ;bme280_i2c.c: 189:     }
 20480  1AD9  3001               	movlw	1
 20481  1ADA  0140               	movlb	0	; select bank0
 20482  1ADB  07B2               	addwf	WriteEnvSensor@i,f
 20483  1ADC  3000               	movlw	0
 20484  1ADD  3DB3               	addwfc	WriteEnvSensor@i+1,f
 20485  1ADE  2AC7               	goto	l5002
 20486  1ADF                     l5004:	
 20487                           
 20488                           ;bme280_i2c.c: 191:     I2C_Stop();
 20489  1ADF  31A5  25AF         	fcall	_I2C_Stop
 20490                           
 20491                           ;bme280_i2c.c: 193:     return rslt;
 20492  1AE1  0140               	movlb	0	; select bank0
 20493  1AE2  0831               	movf	WriteEnvSensor@rslt,w
 20494  1AE3  0008               	return
 20495  1AE4                     __end_of_WriteEnvSensor:	
 20496                           
 20497                           	psect	text82
 20498  2635                     __ptext82:	
 20499 ;; *************** function _I2C_WriteByte *****************
 20500 ;; Defined at:
 20501 ;;		line 40 in file "bme280_i2c.c"
 20502 ;; Parameters:    Size  Location     Type
 20503 ;;  data            1    wreg     unsigned char 
 20504 ;; Auto vars:     Size  Location     Type
 20505 ;;  data            1   13[COMMON] unsigned char 
 20506 ;; Return value:  Size  Location     Type
 20507 ;;                  1    wreg      void 
 20508 ;; Registers used:
 20509 ;;		wreg, status,2, status,0, pclath, cstack
 20510 ;; Tracked objects:
 20511 ;;		On entry : 0/0
 20512 ;;		On exit  : 0/0
 20513 ;;		Unchanged: 0/0
 20514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20516 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20518 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20519 ;;Total ram usage:        1 bytes
 20520 ;; Hardware stack levels used:    1
 20521 ;; Hardware stack levels required when called:    8
 20522 ;; This function calls:
 20523 ;;		_I2C_UserAlert
 20524 ;;		_I2C_Wait_SSPIF
 20525 ;; This function is called by:
 20526 ;;		_ReadEnvSensor
 20527 ;;		_WriteEnvSensor
 20528 ;; This function uses a non-reentrant model
 20529 ;;
 20530                           
 20531                           
 20532                           ;psect for function _I2C_WriteByte
 20533  2635                     _I2C_WriteByte:	
 20534                           
 20535                           ;incstack = 0
 20536                           ; Regs used in _I2C_WriteByte: [wreg+status,2+status,0+pclath+cstack]
 20537                           ;I2C_WriteByte@data stored from wreg
 20538  2635  00FD               	movwf	I2C_WriteByte@data
 20539                           
 20540                           ;bme280_i2c.c: 40: void I2C_WriteByte(uint8_t data);bme280_i2c.c: 41: {;bme280_i2c.c: 42
      +                          :     SSP1BUF = data;
 20541  2636  087D               	movf	I2C_WriteByte@data,w
 20542  2637  0143               	movlb	3	; select bank3
 20543  2638  008C               	movwf	12	;volatile
 20544                           
 20545                           ;bme280_i2c.c: 43:     I2C_Wait_SSPIF();
 20546  2639  319D  2532  31A6   	fcall	_I2C_Wait_SSPIF
 20547                           
 20548                           ;bme280_i2c.c: 46:     if (SSP1CON2bits.ACKSTAT != 0)
 20549  263C  0143               	movlb	3	; select bank3
 20550  263D  1F11               	btfss	17,6	;volatile
 20551  263E  0008               	return
 20552                           
 20553                           ;bme280_i2c.c: 47:     {;bme280_i2c.c: 48:         I2C_UserAlert(I2C_ERROR_WRITE_NO_ACK)
      +                          ;
 20554  263F  3001               	movlw	1
 20555  2640  31A5  25AC         	fcall	_I2C_UserAlert
 20556  2642  0008               	return
 20557  2643                     __end_of_I2C_WriteByte:	
 20558                           
 20559                           	psect	text83
 20560  25AC                     __ptext83:	
 20561 ;; *************** function _I2C_UserAlert *****************
 20562 ;; Defined at:
 20563 ;;		line 77 in file "bme280_i2c.c"
 20564 ;; Parameters:    Size  Location     Type
 20565 ;;  status          1    wreg     enum E11288
 20566 ;; Auto vars:     Size  Location     Type
 20567 ;;  status          1    0[COMMON] enum E11288
 20568 ;; Return value:  Size  Location     Type
 20569 ;;                  1    wreg      void 
 20570 ;; Registers used:
 20571 ;;		wreg, status,2, status,0, pclath, cstack
 20572 ;; Tracked objects:
 20573 ;;		On entry : 0/0
 20574 ;;		On exit  : 0/0
 20575 ;;		Unchanged: 0/0
 20576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20580 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20581 ;;Total ram usage:        0 bytes
 20582 ;; Hardware stack levels used:    1
 20583 ;; Hardware stack levels required when called:    7
 20584 ;; This function calls:
 20585 ;;		_I2C_Stop
 20586 ;; This function is called by:
 20587 ;;		_I2C_WriteByte
 20588 ;; This function uses a non-reentrant model
 20589 ;;
 20590                           
 20591                           
 20592                           ;psect for function _I2C_UserAlert
 20593  25AC                     _I2C_UserAlert:	
 20594                           
 20595                           ;bme280_i2c.c: 77: void I2C_UserAlert(I2C_ERROR status);bme280_i2c.c: 78: {;bme280_i2c.c
      +                          : 79:     I2C_Stop();
 20596                           
 20597                           ;incstack = 0
 20598                           ; Regs used in _I2C_UserAlert: [wreg+status,2+status,0+pclath+cstack]
 20599  25AC  31A5  25AF         	fcall	_I2C_Stop
 20600  25AE  0008               	return
 20601  25AF                     __end_of_I2C_UserAlert:	
 20602                           
 20603                           	psect	text84
 20604  25AF                     __ptext84:	
 20605 ;; *************** function _I2C_Stop *****************
 20606 ;; Defined at:
 20607 ;;		line 71 in file "bme280_i2c.c"
 20608 ;; Parameters:    Size  Location     Type
 20609 ;;		None
 20610 ;; Auto vars:     Size  Location     Type
 20611 ;;		None
 20612 ;; Return value:  Size  Location     Type
 20613 ;;                  1    wreg      void 
 20614 ;; Registers used:
 20615 ;;		wreg, status,2, status,0, pclath, cstack
 20616 ;; Tracked objects:
 20617 ;;		On entry : 0/0
 20618 ;;		On exit  : 0/0
 20619 ;;		Unchanged: 0/0
 20620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20624 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20625 ;;Total ram usage:        0 bytes
 20626 ;; Hardware stack levels used:    1
 20627 ;; Hardware stack levels required when called:    6
 20628 ;; This function calls:
 20629 ;;		_I2C_Wait_SSPIF
 20630 ;; This function is called by:
 20631 ;;		_I2C_UserAlert
 20632 ;;		_ReadEnvSensor
 20633 ;;		_WriteEnvSensor
 20634 ;; This function uses a non-reentrant model
 20635 ;;
 20636                           
 20637                           
 20638                           ;psect for function _I2C_Stop
 20639  25AF                     _I2C_Stop:	
 20640                           
 20641                           ;bme280_i2c.c: 73:     SSP1CON2bits.PEN = 1;
 20642                           
 20643                           ;incstack = 0
 20644                           ; Regs used in _I2C_Stop: [wreg+status,2+status,0+pclath+cstack]
 20645  25AF  0143               	movlb	3	; select bank3
 20646  25B0  1511               	bsf	17,2	;volatile
 20647                           
 20648                           ;bme280_i2c.c: 74:     I2C_Wait_SSPIF();
 20649  25B1  319D  2532         	fcall	_I2C_Wait_SSPIF
 20650  25B3  0008               	return
 20651  25B4                     __end_of_I2C_Stop:	
 20652                           
 20653                           	psect	text85
 20654  1D32                     __ptext85:	
 20655 ;; *************** function _I2C_Wait_SSPIF *****************
 20656 ;; Defined at:
 20657 ;;		line 16 in file "bme280_i2c.c"
 20658 ;; Parameters:    Size  Location     Type
 20659 ;;		None
 20660 ;; Auto vars:     Size  Location     Type
 20661 ;;		None
 20662 ;; Return value:  Size  Location     Type
 20663 ;;                  1    wreg      void 
 20664 ;; Registers used:
 20665 ;;		wreg, status,2, status,0, pclath, cstack
 20666 ;; Tracked objects:
 20667 ;;		On entry : 0/0
 20668 ;;		On exit  : 0/0
 20669 ;;		Unchanged: 0/0
 20670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20672 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20673 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20674 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20675 ;;Total ram usage:        4 bytes
 20676 ;; Hardware stack levels used:    1
 20677 ;; Hardware stack levels required when called:    5
 20678 ;; This function calls:
 20679 ;;		_DebugAlert
 20680 ;; This function is called by:
 20681 ;;		_I2C_WriteByte
 20682 ;;		_I2C_ReadByte
 20683 ;;		_I2C_Stop
 20684 ;;		_ReadEnvSensor
 20685 ;;		_WriteEnvSensor
 20686 ;; This function uses a non-reentrant model
 20687 ;;
 20688                           
 20689                           
 20690                           ;psect for function _I2C_Wait_SSPIF
 20691  1D32                     _I2C_Wait_SSPIF:	
 20692                           
 20693                           ;bme280_i2c.c: 18:     __g_timeout_start = ticks; while (!(PIR3bits.SSP1IF != 0)) { if (
      +                          ticks - __g_timeout_start > 1000) { DebugAlert(200, 200, 3);; break; } };
 20694                           
 20695                           ;incstack = 0
 20696                           ; Regs used in _I2C_Wait_SSPIF: [wreg+status,2+status,0+pclath+cstack]
 20697  1D32  0141               	movlb	1	; select bank1
 20698  1D33  086B               	movf	(_ticks+3)^(0+128),w
 20699  1D34  0142               	movlb	2	; select bank2
 20700  1D35  00C7               	movwf	(___g_timeout_start+3)^(0+256)
 20701  1D36  0141               	movlb	1	; select bank1
 20702  1D37  086A               	movf	(_ticks+2)^(0+128),w
 20703  1D38  0142               	movlb	2	; select bank2
 20704  1D39  00C6               	movwf	(___g_timeout_start+2)^(0+256)
 20705  1D3A  0141               	movlb	1	; select bank1
 20706  1D3B  0869               	movf	(_ticks+1)^(0+128),w
 20707  1D3C  0142               	movlb	2	; select bank2
 20708  1D3D  00C5               	movwf	(___g_timeout_start+1)^(0+256)
 20709  1D3E  0141               	movlb	1	; select bank1
 20710  1D3F  0868               	movf	_ticks^(0+128),w
 20711  1D40  0142               	movlb	2	; select bank2
 20712  1D41  00C4               	movwf	___g_timeout_start^(0+256)
 20713  1D42                     l535:	
 20714  1D42  014E               	movlb	14	; select bank14
 20715  1D43  180F               	btfsc	15,0	;volatile
 20716  1D44  2D77               	goto	l538
 20717  1D45  0142               	movlb	2	; select bank2
 20718  1D46  0844               	movf	___g_timeout_start^(0+256),w
 20719  1D47  0141               	movlb	1	; select bank1
 20720  1D48  0268               	subwf	_ticks^(0+128),w
 20721  1D49  0140               	movlb	0	; select bank0
 20722  1D4A  00A7               	movwf	??_I2C_Wait_SSPIF
 20723  1D4B  0142               	movlb	2	; select bank2
 20724  1D4C  0845               	movf	(___g_timeout_start+1)^(0+256),w
 20725  1D4D  0141               	movlb	1	; select bank1
 20726  1D4E  3B69               	subwfb	(_ticks+1)^(0+128),w
 20727  1D4F  0140               	movlb	0	; select bank0
 20728  1D50  00A8               	movwf	??_I2C_Wait_SSPIF+1
 20729  1D51  0142               	movlb	2	; select bank2
 20730  1D52  0846               	movf	(___g_timeout_start+2)^(0+256),w
 20731  1D53  0141               	movlb	1	; select bank1
 20732  1D54  3B6A               	subwfb	(_ticks+2)^(0+128),w
 20733  1D55  0140               	movlb	0	; select bank0
 20734  1D56  00A9               	movwf	??_I2C_Wait_SSPIF+2
 20735  1D57  0142               	movlb	2	; select bank2
 20736  1D58  0847               	movf	(___g_timeout_start+3)^(0+256),w
 20737  1D59  0141               	movlb	1	; select bank1
 20738  1D5A  3B6B               	subwfb	(_ticks+3)^(0+128),w
 20739  1D5B  0140               	movlb	0	; select bank0
 20740  1D5C  00AA               	movwf	??_I2C_Wait_SSPIF+3
 20741  1D5D  082A               	movf	??_I2C_Wait_SSPIF+3,w
 20742  1D5E  1D03               	btfss	3,2
 20743  1D5F  2D69               	goto	l4892
 20744  1D60  0829               	movf	??_I2C_Wait_SSPIF+2,w
 20745  1D61  1D03               	btfss	3,2
 20746  1D62  2D69               	goto	l4892
 20747  1D63  30E9               	movlw	233
 20748  1D64  0227               	subwf	??_I2C_Wait_SSPIF,w
 20749  1D65  3003               	movlw	3
 20750  1D66  3B28               	subwfb	??_I2C_Wait_SSPIF+1,w
 20751  1D67  1C03               	btfss	3,0
 20752  1D68  2D42               	goto	l535
 20753  1D69                     l4892:	
 20754  1D69  30C8               	movlw	200
 20755  1D6A  00A0               	movwf	DebugAlert@delay_high
 20756  1D6B  3000               	movlw	0
 20757  1D6C  00A1               	movwf	DebugAlert@delay_high+1
 20758  1D6D  30C8               	movlw	200
 20759  1D6E  00A2               	movwf	DebugAlert@delay_low
 20760  1D6F  3000               	movlw	0
 20761  1D70  00A3               	movwf	DebugAlert@delay_low+1
 20762  1D71  3003               	movlw	3
 20763  1D72  00A7               	movwf	??_I2C_Wait_SSPIF
 20764  1D73  0827               	movf	??_I2C_Wait_SSPIF,w
 20765  1D74  00A4               	movwf	DebugAlert@num_flashes
 20766  1D75  3198  20C1         	fcall	_DebugAlert
 20767  1D77                     l538:	
 20768                           
 20769                           ;bme280_i2c.c: 19:     PIR3bits.SSP1IF = 0;
 20770  1D77  014E               	movlb	14	; select bank14
 20771  1D78  100F               	bcf	15,0	;volatile
 20772  1D79  0008               	return
 20773  1D7A                     __end_of_I2C_Wait_SSPIF:	
 20774                           
 20775                           	psect	text86
 20776  18C1                     __ptext86:	
 20777 ;; *************** function _DebugAlert *****************
 20778 ;; Defined at:
 20779 ;;		line 4 in file "debug.c"
 20780 ;; Parameters:    Size  Location     Type
 20781 ;;  delay_high      2    0[BANK0 ] unsigned int 
 20782 ;;  delay_low       2    2[BANK0 ] unsigned int 
 20783 ;;  num_flashes     1    4[BANK0 ] unsigned char 
 20784 ;; Auto vars:     Size  Location     Type
 20785 ;;  i               2    5[BANK0 ] int 
 20786 ;; Return value:  Size  Location     Type
 20787 ;;                  1    wreg      void 
 20788 ;; Registers used:
 20789 ;;		wreg, status,2, status,0, pclath, cstack
 20790 ;; Tracked objects:
 20791 ;;		On entry : 0/0
 20792 ;;		On exit  : 0/0
 20793 ;;		Unchanged: 0/0
 20794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20795 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20796 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20797 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20798 ;;      Totals:         1       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20799 ;;Total ram usage:        8 bytes
 20800 ;; Hardware stack levels used:    1
 20801 ;; Hardware stack levels required when called:    4
 20802 ;; This function calls:
 20803 ;;		_Sleep
 20804 ;; This function is called by:
 20805 ;;		_I2C_Wait_SSPIF
 20806 ;;		_BME280_Init
 20807 ;;		_main
 20808 ;; This function uses a non-reentrant model
 20809 ;;
 20810                           
 20811                           
 20812                           ;psect for function _DebugAlert
 20813  18C1                     _DebugAlert:	
 20814                           
 20815                           ;debug.c: 4: void DebugAlert(unsigned int delay_high, unsigned int delay_low, uint8_t nu
      +                          m_flashes);debug.c: 5: {;debug.c: 7:     for (int i = 0; i < num_flashes; i++)
 20816                           
 20817                           ;incstack = 0
 20818                           ; Regs used in _DebugAlert: [wreg+status,2+status,0+pclath+cstack]
 20819  18C1  0140               	movlb	0	; select bank0
 20820  18C2  01A5               	clrf	DebugAlert@i
 20821  18C3  01A6               	clrf	DebugAlert@i+1
 20822  18C4                     l4886:	
 20823  18C4  0826               	movf	DebugAlert@i+1,w
 20824  18C5  3A80               	xorlw	128
 20825  18C6  00FC               	movwf	??_DebugAlert
 20826  18C7  3080               	movlw	128
 20827  18C8  027C               	subwf	??_DebugAlert,w
 20828  18C9  1D03               	skipz
 20829  18CA  28CD               	goto	u4675
 20830  18CB  0824               	movf	DebugAlert@num_flashes,w
 20831  18CC  0225               	subwf	DebugAlert@i,w
 20832  18CD                     u4675:	
 20833  18CD  1803               	btfsc	3,0
 20834  18CE  0008               	return
 20835                           
 20836                           ;debug.c: 8:     {;debug.c: 9:         do { LATCbits.LATC5 = 1; } while(0);
 20837  18CF  0140               	movlb	0	; select bank0
 20838  18D0  169A               	bsf	26,5	;volatile
 20839                           
 20840                           ;debug.c: 10:         Sleep(delay_high);
 20841  18D1  0820               	movf	DebugAlert@delay_high,w
 20842  18D2  00F0               	movwf	Sleep@ms
 20843  18D3  0821               	movf	DebugAlert@delay_high+1,w
 20844  18D4  00F1               	movwf	Sleep@ms+1
 20845  18D5  01F2               	clrf	Sleep@ms+2
 20846  18D6  01F3               	clrf	Sleep@ms+3
 20847  18D7  3199  2115  3198   	fcall	_Sleep
 20848  18DA  0140               	movlb	0	; select bank0
 20849  18DB  129A               	bcf	26,5	;volatile
 20850                           
 20851                           ;debug.c: 12:         Sleep(delay_low);
 20852  18DC  0822               	movf	DebugAlert@delay_low,w
 20853  18DD  00F0               	movwf	Sleep@ms
 20854  18DE  0823               	movf	DebugAlert@delay_low+1,w
 20855  18DF  00F1               	movwf	Sleep@ms+1
 20856  18E0  01F2               	clrf	Sleep@ms+2
 20857  18E1  01F3               	clrf	Sleep@ms+3
 20858  18E2  3199  2115  3198   	fcall	_Sleep
 20859                           
 20860                           ;debug.c: 13:     }
 20861  18E5  3001               	movlw	1
 20862  18E6  0140               	movlb	0	; select bank0
 20863  18E7  07A5               	addwf	DebugAlert@i,f
 20864  18E8  3000               	movlw	0
 20865  18E9  3DA6               	addwfc	DebugAlert@i+1,f
 20866  18EA  28C4               	goto	l4886
 20867  18EB                     __end_of_DebugAlert:	
 20868                           
 20869                           	psect	text87
 20870  1915                     __ptext87:	
 20871 ;; *************** function _Sleep *****************
 20872 ;; Defined at:
 20873 ;;		line 17 in file "timing.c"
 20874 ;; Parameters:    Size  Location     Type
 20875 ;;  ms              4    0[COMMON] unsigned long 
 20876 ;; Auto vars:     Size  Location     Type
 20877 ;;  start           4    8[COMMON] unsigned long 
 20878 ;; Return value:  Size  Location     Type
 20879 ;;                  1    wreg      void 
 20880 ;; Registers used:
 20881 ;;		wreg
 20882 ;; Tracked objects:
 20883 ;;		On entry : 0/0
 20884 ;;		On exit  : 0/0
 20885 ;;		Unchanged: 0/0
 20886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20887 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20888 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20889 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20890 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20891 ;;Total ram usage:       12 bytes
 20892 ;; Hardware stack levels used:    1
 20893 ;; Hardware stack levels required when called:    3
 20894 ;; This function calls:
 20895 ;;		Nothing
 20896 ;; This function is called by:
 20897 ;;		_BME280_Init
 20898 ;;		_DebugAlert
 20899 ;;		_SetupGPS
 20900 ;;		_main
 20901 ;;		_TransmitBit
 20902 ;;		_bme280_soft_reset
 20903 ;;		_bme280_init
 20904 ;; This function uses a non-reentrant model
 20905 ;;
 20906                           
 20907                           
 20908                           ;psect for function _Sleep
 20909  1915                     _Sleep:	
 20910                           
 20911                           ;timing.c: 17: void Sleep(uint32_t ms);timing.c: 18: {;timing.c: 19:     uint32_t start 
      +                          = ticks;
 20912                           
 20913                           ;incstack = 0
 20914                           ; Regs used in _Sleep: [wreg]
 20915  1915  0141               	movlb	1	; select bank1
 20916  1916  086B               	movf	(_ticks+3)^(0+128),w
 20917  1917  00FB               	movwf	Sleep@start+3
 20918  1918  086A               	movf	(_ticks+2)^(0+128),w
 20919  1919  00FA               	movwf	Sleep@start+2
 20920  191A  0869               	movf	(_ticks+1)^(0+128),w
 20921  191B  00F9               	movwf	Sleep@start+1
 20922  191C  0868               	movf	_ticks^(0+128),w
 20923  191D  00F8               	movwf	Sleep@start
 20924  191E                     l895:	
 20925                           ;timing.c: 23:     }
 20926                           
 20927                           ;timing.c: 20:     while (ticks - start < ms)
 20928                           
 20929                           
 20930                           ;timing.c: 20:     while (ticks - start < ms)
 20931  191E  0878               	movf	Sleep@start,w
 20932  191F  0141               	movlb	1	; select bank1
 20933  1920  0268               	subwf	_ticks^(0+128),w
 20934  1921  00F4               	movwf	??_Sleep
 20935  1922  0879               	movf	Sleep@start+1,w
 20936  1923  3B69               	subwfb	(_ticks+1)^(0+128),w
 20937  1924  00F5               	movwf	??_Sleep+1
 20938  1925  087A               	movf	Sleep@start+2,w
 20939  1926  3B6A               	subwfb	(_ticks+2)^(0+128),w
 20940  1927  00F6               	movwf	??_Sleep+2
 20941  1928  087B               	movf	Sleep@start+3,w
 20942  1929  3B6B               	subwfb	(_ticks+3)^(0+128),w
 20943  192A  00F7               	movwf	??_Sleep+3
 20944  192B  0873               	movf	Sleep@ms+3,w
 20945  192C  0277               	subwf	??_Sleep+3,w
 20946  192D  1D03               	skipz
 20947  192E  2939               	goto	u4665
 20948  192F  0872               	movf	Sleep@ms+2,w
 20949  1930  0276               	subwf	??_Sleep+2,w
 20950  1931  1D03               	skipz
 20951  1932  2939               	goto	u4665
 20952  1933  0871               	movf	Sleep@ms+1,w
 20953  1934  0275               	subwf	??_Sleep+1,w
 20954  1935  1D03               	skipz
 20955  1936  2939               	goto	u4665
 20956  1937  0870               	movf	Sleep@ms,w
 20957  1938  0274               	subwf	??_Sleep,w
 20958  1939                     u4665:	
 20959  1939  1803               	btfsc	3,0
 20960  193A  0008               	return
 20961                           
 20962                           ;timing.c: 21:     {;timing.c: 22:         _delay((unsigned long)((1)*(1000000/4000.0)))
      +                          ;
 20963  193B  3053               	movlw	83
 20964  193C                     u5547:	
 20965  193C  0B89               	decfsz	9,f
 20966  193D  293C               	goto	u5547
 20967  193E  0000               	nop
 20968  193F  291E               	goto	l895
 20969  1940                     __end_of_Sleep:	
 20970                           
 20971                           	psect	text88
 20972  268B                     __ptext88:	
 20973 ;; *************** function _I2C_Init *****************
 20974 ;; Defined at:
 20975 ;;		line 22 in file "bme280_i2c.c"
 20976 ;; Parameters:    Size  Location     Type
 20977 ;;		None
 20978 ;; Auto vars:     Size  Location     Type
 20979 ;;		None
 20980 ;; Return value:  Size  Location     Type
 20981 ;;                  1    wreg      void 
 20982 ;; Registers used:
 20983 ;;		wreg, status,2
 20984 ;; Tracked objects:
 20985 ;;		On entry : 0/0
 20986 ;;		On exit  : 0/0
 20987 ;;		Unchanged: 0/0
 20988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20992 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20993 ;;Total ram usage:        0 bytes
 20994 ;; Hardware stack levels used:    1
 20995 ;; Hardware stack levels required when called:    3
 20996 ;; This function calls:
 20997 ;;		Nothing
 20998 ;; This function is called by:
 20999 ;;		_BME280_Init
 21000 ;; This function uses a non-reentrant model
 21001 ;;
 21002                           
 21003                           
 21004                           ;psect for function _I2C_Init
 21005  268B                     _I2C_Init:	
 21006                           
 21007                           ;bme280_i2c.c: 25:     SSP1CLKPPS = 0x0E;
 21008                           
 21009                           ;incstack = 0
 21010                           ; Regs used in _I2C_Init: [wreg+status,2]
 21011  268B  300E               	movlw	14
 21012  268C  017D               	movlb	61	; select bank61
 21013  268D  00C5               	movwf	69	;volatile
 21014                           
 21015                           ;bme280_i2c.c: 26:     SSP1DATPPS = 0x0C;
 21016  268E  300C               	movlw	12
 21017  268F  00C6               	movwf	70	;volatile
 21018                           
 21019                           ;bme280_i2c.c: 27:     RB6PPS = 0x13;
 21020  2690  3013               	movlw	19
 21021  2691  017E               	movlb	62	; select bank62
 21022  2692  009E               	movwf	30	;volatile
 21023                           
 21024                           ;bme280_i2c.c: 28:     RB4PPS = 0x14;
 21025  2693  3014               	movlw	20
 21026  2694  009C               	movwf	28	;volatile
 21027                           
 21028                           ;bme280_i2c.c: 30:     SSP1STAT = 0x80;
 21029  2695  3080               	movlw	128
 21030  2696  0143               	movlb	3	; select bank3
 21031  2697  008F               	movwf	15	;volatile
 21032                           
 21033                           ;bme280_i2c.c: 31:     SSP1CON1 = 0x28;
 21034  2698  3028               	movlw	40
 21035  2699  0090               	movwf	16	;volatile
 21036                           
 21037                           ;bme280_i2c.c: 32:     SSP1CON2 = 0x00;
 21038  269A  0191               	clrf	17	;volatile
 21039                           
 21040                           ;bme280_i2c.c: 33:     SSP1CON3 = 0x00;
 21041  269B  0192               	clrf	18	;volatile
 21042                           
 21043                           ;bme280_i2c.c: 34:     SSP1ADD = 0x03;
 21044  269C  3003               	movlw	3
 21045  269D  008D               	movwf	13	;volatile
 21046                           
 21047                           ;bme280_i2c.c: 37:     SSP1CON1bits.SSPEN = 1;
 21048  269E  1690               	bsf	16,5	;volatile
 21049  269F  0008               	return
 21050  26A0                     __end_of_I2C_Init:	
 21051                           
 21052                           	psect	intentry
 21053  0004                     __pintentry:	
 21054 ;; *************** function _INTERRUPT_InterruptManager *****************
 21055 ;; Defined at:
 21056 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 21057 ;; Parameters:    Size  Location     Type
 21058 ;;		None
 21059 ;; Auto vars:     Size  Location     Type
 21060 ;;		None
 21061 ;; Return value:  Size  Location     Type
 21062 ;;                  1    wreg      void 
 21063 ;; Registers used:
 21064 ;;		wreg, status,2, status,0, pclath, cstack
 21065 ;; Tracked objects:
 21066 ;;		On entry : 0/0
 21067 ;;		On exit  : 0/0
 21068 ;;		Unchanged: 0/0
 21069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21073 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21074 ;;Total ram usage:        0 bytes
 21075 ;; Hardware stack levels used:    1
 21076 ;; Hardware stack levels required when called:    2
 21077 ;; This function calls:
 21078 ;;		_TMR0_ISR
 21079 ;; This function is called by:
 21080 ;;		Interrupt level 1
 21081 ;; This function uses a non-reentrant model
 21082 ;;
 21083                           
 21084  0004                     _INTERRUPT_InterruptManager:	
 21085                           
 21086                           ;incstack = 0
 21087 ;; hardware stack exceeded
 21088  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 21089                           
 21090                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
 21091  0005  3180               	pagesel	$
 21092                           
 21093                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.TMR0IE == 1 && PIR0bits.TM
      +                          R0IF == 1)
 21094  0006  014E               	movlb	14	; select bank14
 21095  0007  1A96               	btfsc	22,5	;volatile
 21096  0008  1E8C               	btfss	12,5	;volatile
 21097  0009  280C               	goto	i1l389
 21098                           
 21099                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
 21100  000A  31A6  2628         	fcall	_TMR0_ISR
 21101  000C                     i1l389:	
 21102                           ;mcc_generated_files/interrupt_manager.c: 58:     }
 21103                           
 21104  000C  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 21105  000D  0009               	retfie
 21106  000E                     __end_of_INTERRUPT_InterruptManager:	
 21107                           
 21108                           	psect	text90
 21109  2628                     __ptext90:	
 21110 ;; *************** function _TMR0_ISR *****************
 21111 ;; Defined at:
 21112 ;;		line 121 in file "mcc_generated_files/tmr0.c"
 21113 ;; Parameters:    Size  Location     Type
 21114 ;;		None
 21115 ;; Auto vars:     Size  Location     Type
 21116 ;;		None
 21117 ;; Return value:  Size  Location     Type
 21118 ;;                  1    wreg      void 
 21119 ;; Registers used:
 21120 ;;		wreg, status,2, status,0, pclath, cstack
 21121 ;; Tracked objects:
 21122 ;;		On entry : 0/0
 21123 ;;		On exit  : 0/0
 21124 ;;		Unchanged: 0/0
 21125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21129 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21130 ;;Total ram usage:        0 bytes
 21131 ;; Hardware stack levels used:    1
 21132 ;; Hardware stack levels required when called:    1
 21133 ;; This function calls:
 21134 ;;		Absolute function
 21135 ;;		_TMR0_DefaultInterruptHandler
 21136 ;;		_TimerISR
 21137 ;; This function is called by:
 21138 ;;		_INTERRUPT_InterruptManager
 21139 ;; This function uses a non-reentrant model
 21140 ;;
 21141                           
 21142                           
 21143                           ;psect for function _TMR0_ISR
 21144  2628                     _TMR0_ISR:	
 21145                           
 21146                           ;mcc_generated_files/tmr0.c: 124:     PIR0bits.TMR0IF = 0;
 21147                           
 21148                           ;incstack = 0
 21149 ;; hardware stack exceeded
 21150                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
 21151  2628  014E               	movlb	14	; select bank14
 21152  2629  128C               	bcf	12,5	;volatile
 21153                           
 21154                           ;mcc_generated_files/tmr0.c: 125:     if(TMR0_InterruptHandler)
 21155  262A  0141               	movlb	1	; select bank1
 21156  262B  086E               	movf	_TMR0_InterruptHandler^(0+128),w
 21157  262C  046F               	iorwf	(_TMR0_InterruptHandler+1)^(0+128),w
 21158  262D  1903               	btfsc	3,2
 21159  262E  0008               	return
 21160                           
 21161                           ;mcc_generated_files/tmr0.c: 126:     {;mcc_generated_files/tmr0.c: 127:         TMR0_In
      +                          terruptHandler();
 21162  262F  086F               	movf	(_TMR0_InterruptHandler+1)^(0+128),w
 21163  2630  008A               	movwf	10
 21164  2631  086E               	movf	_TMR0_InterruptHandler^(0+128),w
 21165  2632  000A               	callw
 21166  2633  31A6               	pagesel	$
 21167  2634  0008               	return
 21168  2635                     __end_of_TMR0_ISR:	
 21169                           
 21170                           	psect	text91
 21171  0003                     __ptext91:	
 21172 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 21173 ;; Defined at:
 21174 ;;		line 138 in file "mcc_generated_files/tmr0.c"
 21175 ;; Parameters:    Size  Location     Type
 21176 ;;		None
 21177 ;; Auto vars:     Size  Location     Type
 21178 ;;		None
 21179 ;; Return value:  Size  Location     Type
 21180 ;;                  1    wreg      void 
 21181 ;; Registers used:
 21182 ;;		None
 21183 ;; Tracked objects:
 21184 ;;		On entry : 0/0
 21185 ;;		On exit  : 0/0
 21186 ;;		Unchanged: 0/0
 21187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21191 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21192 ;;Total ram usage:        0 bytes
 21193 ;; Hardware stack levels used:    1
 21194 ;; This function calls:
 21195 ;;		Nothing
 21196 ;; This function is called by:
 21197 ;;		_TMR0_Initialize
 21198 ;;		_TMR0_ISR
 21199 ;; This function uses a non-reentrant model
 21200 ;;
 21201                           
 21202                           
 21203                           ;psect for function _TMR0_DefaultInterruptHandler
 21204  0003                     _TMR0_DefaultInterruptHandler:	
 21205                           
 21206                           ;incstack = 0
 21207 ;; hardware stack exceeded
 21208                           ; Regs used in _TMR0_DefaultInterruptHandler: []
 21209  0003  0008               	return
 21210  0004                     __end_of_TMR0_DefaultInterruptHandler:	
 21211                           
 21212                           	psect	text92
 21213  25E5                     __ptext92:	
 21214 ;; *************** function _TimerISR *****************
 21215 ;; Defined at:
 21216 ;;		line 6 in file "timing.c"
 21217 ;; Parameters:    Size  Location     Type
 21218 ;;		None
 21219 ;; Auto vars:     Size  Location     Type
 21220 ;;		None
 21221 ;; Return value:  Size  Location     Type
 21222 ;;                  1    wreg      void 
 21223 ;; Registers used:
 21224 ;;		wreg
 21225 ;; Tracked objects:
 21226 ;;		On entry : 0/0
 21227 ;;		On exit  : 0/0
 21228 ;;		Unchanged: 0/0
 21229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21233 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21234 ;;Total ram usage:        0 bytes
 21235 ;; Hardware stack levels used:    1
 21236 ;; This function calls:
 21237 ;;		Nothing
 21238 ;; This function is called by:
 21239 ;;		_InitTiming
 21240 ;;		_TMR0_ISR
 21241 ;; This function uses a non-reentrant model
 21242 ;;
 21243                           
 21244                           
 21245                           ;psect for function _TimerISR
 21246  25E5                     _TimerISR:	
 21247                           
 21248                           ;timing.c: 8:     ticks++;
 21249                           
 21250                           ;incstack = 0
 21251 ;; hardware stack exceeded
 21252                           ; Regs used in _TimerISR: [wreg]
 21253  25E5  3001               	movlw	1
 21254  25E6  0141               	movlb	1	; select bank1
 21255  25E7  07E8               	addwf	_ticks^(0+128),f
 21256  25E8  3000               	movlw	0
 21257  25E9  3DE9               	addwfc	(_ticks+1)^(0+128),f
 21258  25EA  3000               	movlw	0
 21259  25EB  3DEA               	addwfc	(_ticks+2)^(0+128),f
 21260  25EC  3000               	movlw	0
 21261  25ED  3DEB               	addwfc	(_ticks+3)^(0+128),f
 21262  25EE  0008               	return
 21263  25EF                     __end_of_TimerISR:	
 21264  007E                     btemp	set	126	;btemp
 21265  007E                     int$flags	set	126
 21266  007E                     wtemp0	set	126


Data Sizes:
    Strings     186
    Constant    2
    Data        44
    BSS         151
    Persistent  40
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     79      79
    BANK1            80     72      80
    BANK2            80     32      80
    BANK3            80      0      77
    BANK4            80      0      70
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           72      0       0
    BANK22            0      0       0
    BANK23            0      0       0
    BANK24            0      0       0
    BANK25            0      0       0

Pointer List with Targets:

    put_device_to_sleep@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 0
		 -> Sleep(), 

    put_device_to_sleep@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 0
		 -> WriteEnvSensor(), 

    put_device_to_sleep@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 0
		 -> ReadEnvSensor(), 

    get_calib_data@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 0
		 -> Sleep(), 

    get_calib_data@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 0
		 -> WriteEnvSensor(), 

    get_calib_data@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 0
		 -> ReadEnvSensor(), 

    PollGPS$2720	PTR const unsigned char  size(1) Largest target is 20
		 -> csvField(BANK3[20]), 

    S54$4$2	PTR unsigned char  size(1) Largest target is 20
		 -> bme280_set_regs@temp_buff(BANK0[20]), 

    S54$3$2	PTR unsigned char  size(1) Largest target is 26
		 -> get_calib_data@calib_data(BANK0[26]), put_device_to_sleep@reg_data(BANK1[4]), write_power_mode@sensor_mode_reg_val(BANK0[1]), set_filter_standby_settings@reg_data(BANK0[1]), 
		 -> set_osr_press_temp_settings@reg_data(BANK0[1]), set_osr_humidity_settings@ctrl_meas(BANK0[1]), bme280_get_sensor_data@reg_data(BANK1[8]), bme280_set_sensor_mode@last_set_mode(BANK1[1]), 
		 -> bme280_get_sensor_settings@reg_data(COMMON[4]), bme280_set_sensor_settings@sensor_mode(BANK1[1]), bme280_init@chip_id(BANK0[1]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 140
		 -> STR_11(CODE[5]), checksum(BANK2[6]), STR_10(CODE[7]), main@convertedNumber(BANK2[16]), 
		 -> STR_7(CODE[14]), nmea_data(BIGRAM[140]), STR_6(CODE[26]), STR_5(CODE[26]), 
		 -> STR_4(CODE[26]), STR_3(CODE[26]), STR_2(CODE[26]), STR_1(CODE[26]), 
		 -> txdata(BIGRAM[140]), csvField(BANK3[20]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 140
		 -> STR_11(CODE[5]), checksum(BANK2[6]), STR_10(CODE[7]), main@convertedNumber(BANK2[16]), 
		 -> STR_7(CODE[14]), nmea_data(BIGRAM[140]), STR_6(CODE[26]), STR_5(CODE[26]), 
		 -> STR_4(CODE[26]), STR_3(CODE[26]), STR_2(CODE[26]), STR_1(CODE[26]), 
		 -> txdata(BIGRAM[140]), csvField(BANK3[20]), 

    strcmp@r	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_9(CODE[2]), STR_8(CODE[2]), 

    strcmp@l	PTR const unsigned char  size(1) Largest target is 20
		 -> csvField(BANK3[20]), 

    TransmitString@message	PTR unsigned char  size(2) Largest target is 140
		 -> STR_11(CODE[5]), txdata(BIGRAM[140]), 

    crc16@data	PTR unsigned char  size(2) Largest target is 140
		 -> txdata(BIGRAM[140]), 

    crc16_update@pData	PTR unsigned char  size(2) Largest target is 140
		 -> txdata(BIGRAM[140]), 

    GPS_HasAcknowledged@data	PTR unsigned char  size(1) Largest target is 44
		 -> setNavFlightMode(BANK4[44]), 

    GPS_SendUBX@data	PTR unsigned char  size(1) Largest target is 44
		 -> setNavFlightMode(BANK4[44]), 

    GetLengthUBX@data	PTR unsigned char  size(1) Largest target is 44
		 -> setNavFlightMode(BANK4[44]), 

    WriteGPS@message	PTR unsigned char  size(2) Largest target is 26
		 -> STR_7(CODE[14]), STR_6(CODE[26]), STR_5(CODE[26]), STR_4(CODE[26]), 
		 -> STR_3(CODE[26]), STR_2(CODE[26]), STR_1(CODE[26]), 

    UIntToString@dest	PTR unsigned char  size(1) Largest target is 16
		 -> main@convertedNumber(BANK2[16]), 

    IntToString@dest	PTR unsigned char  size(1) Largest target is 16
		 -> main@convertedNumber(BANK2[16]), 

    UIntToHexString@dest	PTR unsigned char  size(1) Largest target is 6
		 -> checksum(BANK2[6]), 

    ReverseString@opposite	PTR unsigned char  size(1) Largest target is 16
		 -> checksum(BANK2[6]), main@convertedNumber(BANK2[16]), 

    ReverseString@str	PTR unsigned char  size(1) Largest target is 16
		 -> checksum(BANK2[6]), main@convertedNumber(BANK2[16]), 

    InsertString@dest	PTR unsigned char  size(2) Largest target is 140
		 -> txdata(BIGRAM[140]), 

    InsertString@src	PTR unsigned char  size(2) Largest target is 20
		 -> checksum(BANK2[6]), STR_10(CODE[7]), main@convertedNumber(BANK2[16]), csvField(BANK3[20]), 

    Insert@dest	PTR unsigned char  size(2) Largest target is 140
		 -> txdata(BIGRAM[140]), 

    sp__GetAtRowCSV	PTR unsigned char  size(1) Largest target is 20
		 -> csvField(BANK3[20]), 

    GetAtRowCSV@src	PTR unsigned char  size(2) Largest target is 140
		 -> nmea_data(BIGRAM[140]), 

    ClearStringn@str	PTR unsigned char  size(1) Largest target is 20
		 -> csvField(BANK3[20]), 

    ClearString@str	PTR unsigned char  size(1) Largest target is 16
		 -> main@convertedNumber(BANK2[16]), 

    WriteEnvSensor@reg_data	PTR unsigned char  size(1) Largest target is 20
		 -> bme280_set_regs@temp_buff(BANK0[20]), 

    ReadEnvSensor@reg_data	PTR unsigned char  size(1) Largest target is 26
		 -> get_calib_data@calib_data(BANK0[26]), put_device_to_sleep@reg_data(BANK1[4]), write_power_mode@sensor_mode_reg_val(BANK0[1]), set_filter_standby_settings@reg_data(BANK0[1]), 
		 -> set_osr_press_temp_settings@reg_data(BANK0[1]), set_osr_humidity_settings@ctrl_meas(BANK0[1]), bme280_get_sensor_data@reg_data(BANK1[8]), bme280_set_sensor_mode@last_set_mode(BANK1[1]), 
		 -> bme280_get_sensor_settings@reg_data(COMMON[4]), bme280_set_sensor_settings@sensor_mode(BANK1[1]), bme280_init@chip_id(BANK0[1]), 

    EnvSensor.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> Sleep(), 

    EnvSensor.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> WriteEnvSensor(), 

    EnvSensor.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> ReadEnvSensor(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), Absolute function(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TimerISR(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TimerISR(), Absolute function(), TMR0_DefaultInterruptHandler(), 

    null_ptr_check@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> Sleep(), 

    null_ptr_check@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> WriteEnvSensor(), 

    null_ptr_check@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> ReadEnvSensor(), 

    null_ptr_check@dev	PTR const struct bme280_dev size(1) Largest target is 51
		 -> EnvSensor(BANK3[51]), 

    parse_humidity_calib_data@reg_data	PTR const unsigned char  size(1) Largest target is 26
		 -> get_calib_data@calib_data(BANK0[26]), 

    parse_humidity_calib_data@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> Sleep(), 

    parse_humidity_calib_data@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> WriteEnvSensor(), 

    parse_humidity_calib_data@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> ReadEnvSensor(), 

    parse_humidity_calib_data@dev	PTR struct bme280_dev size(1) Largest target is 51
		 -> EnvSensor(BANK3[51]), 

    parse_humidity_calib_data@calib_data	PTR struct bme280_calib_data size(1) Largest target is 51
		 -> EnvSensor.calib_data(BANK3[37]), EnvSensor(BANK3[51]), 

    parse_temp_press_calib_data@reg_data	PTR const unsigned char  size(1) Largest target is 26
		 -> get_calib_data@calib_data(BANK0[26]), 

    parse_temp_press_calib_data@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> Sleep(), 

    parse_temp_press_calib_data@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> WriteEnvSensor(), 

    parse_temp_press_calib_data@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> ReadEnvSensor(), 

    parse_temp_press_calib_data@dev	PTR struct bme280_dev size(1) Largest target is 51
		 -> EnvSensor(BANK3[51]), 

    parse_temp_press_calib_data@calib_data	PTR struct bme280_calib_data size(1) Largest target is 51
		 -> EnvSensor.calib_data(BANK3[37]), EnvSensor(BANK3[51]), 

    interleave_reg_addr@reg_data	PTR const unsigned char  size(1) Largest target is 1
		 -> write_power_mode@sensor_mode_reg_val(BANK0[1]), set_filter_standby_settings@reg_data(BANK0[1]), set_osr_press_temp_settings@reg_data(BANK0[1]), set_osr_humidity_settings@ctrl_meas(BANK0[1]), 
		 -> set_osr_humidity_settings@ctrl_hum(BANK0[1]), bme280_soft_reset@soft_rst_cmd(BANK0[1]), 

    interleave_reg_addr@reg_addr	PTR const unsigned char  size(1) Largest target is 1
		 -> write_power_mode@reg_addr(BANK0[1]), set_filter_standby_settings@reg_addr(BANK0[1]), set_osr_press_temp_settings@reg_addr(BANK0[1]), set_osr_humidity_settings@reg_addr(BANK0[1]), 
		 -> bme280_soft_reset@reg_addr(BANK0[1]), 

    interleave_reg_addr@temp_buff	PTR unsigned char  size(1) Largest target is 20
		 -> bme280_set_regs@temp_buff(BANK0[20]), 

    get_calib_data@dev	PTR struct bme280_dev size(1) Largest target is 51
		 -> EnvSensor(BANK3[51]), 

    compensate_humidity@uncomp_data	PTR const struct bme280_uncomp_data size(1) Largest target is 12
		 -> bme280_get_sensor_data@uncomp_data(BANK1[12]), 

    compensate_humidity@calib_data	PTR const struct bme280_calib_data size(1) Largest target is 51
		 -> EnvSensor(BANK3[51]), 

    compensate_pressure@uncomp_data	PTR const struct bme280_uncomp_data size(1) Largest target is 12
		 -> bme280_get_sensor_data@uncomp_data(BANK1[12]), 

    compensate_pressure@calib_data	PTR const struct bme280_calib_data size(1) Largest target is 51
		 -> EnvSensor(BANK3[51]), 

    compensate_temperature@calib_data	PTR struct bme280_calib_data size(1) Largest target is 51
		 -> EnvSensor(BANK3[51]), 

    compensate_temperature@uncomp_data	PTR const struct bme280_uncomp_data size(1) Largest target is 12
		 -> bme280_get_sensor_data@uncomp_data(BANK1[12]), 

    reload_device_settings@dev	PTR const struct bme280_dev size(1) Largest target is 51
		 -> EnvSensor(BANK3[51]), 

    reload_device_settings@settings	PTR const struct bme280_settings size(1) Largest target is 5
		 -> put_device_to_sleep@settings(BANK1[5]), 

    put_device_to_sleep@dev	PTR const struct bme280_dev size(1) Largest target is 51
		 -> EnvSensor(BANK3[51]), 

    write_power_mode@dev	PTR const struct bme280_dev size(1) Largest target is 51
		 -> EnvSensor(BANK3[51]), 

    parse_device_settings@reg_data	PTR const unsigned char  size(1) Largest target is 4
		 -> put_device_to_sleep@reg_data(BANK1[4]), bme280_get_sensor_settings@reg_data(COMMON[4]), 

    parse_device_settings@settings	PTR struct bme280_settings size(1) Largest target is 5
		 -> put_device_to_sleep@settings(BANK1[5]), 

    fill_osr_temp_settings@settings	PTR const struct bme280_settings size(2) Largest target is 51
		 -> EnvSensor(BANK3[51]), put_device_to_sleep@settings(BANK1[5]), 

    fill_osr_temp_settings@reg_data	PTR unsigned char  size(1) Largest target is 1
		 -> set_osr_press_temp_settings@reg_data(BANK0[1]), 

    fill_osr_press_settings@settings	PTR const struct bme280_settings size(2) Largest target is 51
		 -> EnvSensor(BANK3[51]), put_device_to_sleep@settings(BANK1[5]), 

    fill_osr_press_settings@reg_data	PTR unsigned char  size(1) Largest target is 1
		 -> set_osr_press_temp_settings@reg_data(BANK0[1]), 

    fill_standby_settings@settings	PTR const struct bme280_settings size(2) Largest target is 51
		 -> EnvSensor(BANK3[51]), put_device_to_sleep@settings(BANK1[5]), 

    fill_standby_settings@reg_data	PTR unsigned char  size(1) Largest target is 1
		 -> set_filter_standby_settings@reg_data(BANK0[1]), 

    fill_filter_settings@settings	PTR const struct bme280_settings size(2) Largest target is 51
		 -> EnvSensor(BANK3[51]), put_device_to_sleep@settings(BANK1[5]), 

    fill_filter_settings@reg_data	PTR unsigned char  size(1) Largest target is 1
		 -> set_filter_standby_settings@reg_data(BANK0[1]), 

    set_filter_standby_settings@settings	PTR const struct bme280_settings size(2) Largest target is 51
		 -> EnvSensor(BANK3[51]), put_device_to_sleep@settings(BANK1[5]), 

    set_filter_standby_settings@dev	PTR const struct bme280_dev size(1) Largest target is 51
		 -> EnvSensor(BANK3[51]), 

    set_osr_press_temp_settings@settings	PTR const struct bme280_settings size(2) Largest target is 51
		 -> EnvSensor(BANK3[51]), put_device_to_sleep@settings(BANK1[5]), 

    set_osr_press_temp_settings@dev	PTR const struct bme280_dev size(1) Largest target is 51
		 -> EnvSensor(BANK3[51]), 

    set_osr_humidity_settings@dev	PTR const struct bme280_dev size(1) Largest target is 51
		 -> EnvSensor(BANK3[51]), 

    set_osr_humidity_settings@settings	PTR const struct bme280_settings size(2) Largest target is 51
		 -> EnvSensor(BANK3[51]), put_device_to_sleep@settings(BANK1[5]), 

    set_osr_settings@dev	PTR const struct bme280_dev size(1) Largest target is 51
		 -> EnvSensor(BANK3[51]), 

    set_osr_settings@settings	PTR const struct bme280_settings size(2) Largest target is 51
		 -> EnvSensor(BANK3[51]), put_device_to_sleep@settings(BANK1[5]), 

    bme280_compensate_data@calib_data	PTR struct bme280_calib_data size(1) Largest target is 51
		 -> EnvSensor(BANK3[51]), 

    bme280_compensate_data@comp_data	PTR struct bme280_data size(1) Largest target is 12
		 -> main@sensor_data(BANK2[12]), 

    bme280_compensate_data@uncomp_data	PTR const struct bme280_uncomp_data size(1) Largest target is 12
		 -> bme280_get_sensor_data@uncomp_data(BANK1[12]), 

    bme280_parse_sensor_data@uncomp_data	PTR struct bme280_uncomp_data size(1) Largest target is 12
		 -> bme280_get_sensor_data@uncomp_data(BANK1[12]), 

    bme280_parse_sensor_data@reg_data	PTR const unsigned char  size(1) Largest target is 8
		 -> bme280_get_sensor_data@reg_data(BANK1[8]), 

    bme280_get_sensor_data@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> Sleep(), 

    bme280_get_sensor_data@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> WriteEnvSensor(), 

    bme280_get_sensor_data@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> ReadEnvSensor(), 

    bme280_get_sensor_data@comp_data	PTR struct bme280_data size(1) Largest target is 12
		 -> main@sensor_data(BANK2[12]), 

    bme280_get_sensor_data@dev	PTR struct bme280_dev size(1) Largest target is 51
		 -> EnvSensor(BANK3[51]), 

    bme280_soft_reset@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> Sleep(), 

    bme280_soft_reset@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> WriteEnvSensor(), 

    bme280_soft_reset@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> ReadEnvSensor(), 

    bme280_soft_reset@dev	PTR const struct bme280_dev size(1) Largest target is 51
		 -> EnvSensor(BANK3[51]), 

    bme280_get_sensor_mode@sensor_mode	PTR unsigned char  size(1) Largest target is 1
		 -> bme280_set_sensor_mode@last_set_mode(BANK1[1]), bme280_set_sensor_settings@sensor_mode(BANK1[1]), 

    bme280_get_sensor_mode@dev	PTR const struct bme280_dev size(1) Largest target is 51
		 -> EnvSensor(BANK3[51]), 

    bme280_set_sensor_mode@dev	PTR const struct bme280_dev size(1) Largest target is 51
		 -> EnvSensor(BANK3[51]), 

    bme280_get_sensor_settings@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> Sleep(), 

    bme280_get_sensor_settings@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> WriteEnvSensor(), 

    bme280_get_sensor_settings@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> ReadEnvSensor(), 

    bme280_set_sensor_settings@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> Sleep(), 

    bme280_set_sensor_settings@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> WriteEnvSensor(), 

    bme280_set_sensor_settings@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> ReadEnvSensor(), 

    bme280_set_sensor_settings@dev	PTR const struct bme280_dev size(1) Largest target is 51
		 -> EnvSensor(BANK3[51]), 

    bme280_set_regs@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> Sleep(), 

    bme280_set_regs@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> WriteEnvSensor(), 

    bme280_set_regs@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> ReadEnvSensor(), 

    bme280_set_regs@reg_data	PTR const unsigned char  size(1) Largest target is 1
		 -> write_power_mode@sensor_mode_reg_val(BANK0[1]), set_filter_standby_settings@reg_data(BANK0[1]), set_osr_press_temp_settings@reg_data(BANK0[1]), set_osr_humidity_settings@ctrl_meas(BANK0[1]), 
		 -> set_osr_humidity_settings@ctrl_hum(BANK0[1]), bme280_soft_reset@soft_rst_cmd(BANK0[1]), 

    bme280_set_regs@reg_addr	PTR unsigned char  size(1) Largest target is 1
		 -> write_power_mode@reg_addr(BANK0[1]), set_filter_standby_settings@reg_addr(BANK0[1]), set_osr_press_temp_settings@reg_addr(BANK0[1]), set_osr_humidity_settings@reg_addr(BANK0[1]), 
		 -> bme280_soft_reset@reg_addr(BANK0[1]), 

    bme280_set_regs@dev	PTR const struct bme280_dev size(1) Largest target is 51
		 -> EnvSensor(BANK3[51]), 

    bme280_get_regs@reg_data	PTR unsigned char  size(1) Largest target is 26
		 -> get_calib_data@calib_data(BANK0[26]), put_device_to_sleep@reg_data(BANK1[4]), write_power_mode@sensor_mode_reg_val(BANK0[1]), set_filter_standby_settings@reg_data(BANK0[1]), 
		 -> set_osr_press_temp_settings@reg_data(BANK0[1]), set_osr_humidity_settings@ctrl_meas(BANK0[1]), bme280_get_sensor_data@reg_data(BANK1[8]), bme280_set_sensor_mode@last_set_mode(BANK1[1]), 
		 -> bme280_get_sensor_settings@reg_data(COMMON[4]), bme280_set_sensor_settings@sensor_mode(BANK1[1]), bme280_init@chip_id(BANK0[1]), 

    bme280_get_regs@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> Sleep(), 

    bme280_get_regs@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> WriteEnvSensor(), 

    bme280_get_regs@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> ReadEnvSensor(), 

    bme280_get_regs@dev	PTR const struct bme280_dev size(1) Largest target is 51
		 -> EnvSensor(BANK3[51]), 

    S54bme280_dev$delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> Sleep(), 

    bme280_init@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> Sleep(), 

    S54bme280_dev$write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> WriteEnvSensor(), 

    bme280_init@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> WriteEnvSensor(), 

    S54bme280_dev$read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> ReadEnvSensor(), 

    bme280_init@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> ReadEnvSensor(), 

    bme280_init@dev	PTR struct bme280_dev size(1) Largest target is 51
		 -> EnvSensor(BANK3[51]), 


Critical Paths under _main in COMMON

    _main->_IntToString
    _crc16->_crc16_update
    _crc16_update->_strlen
    _compensate_temperature->___aldiv
    _compensate_pressure->___lldiv
    _compensate_humidity->___aldiv
    ___aldiv->___lmul
    _UIntToString->___lldiv
    _TransmitString->_TransmitChar
    _TransmitChar->_TransmitBit
    _TransmitBit->_Sleep
    _SetupGPS->_Sleep
    _SetupGPS->_WriteGPS
    _GPS_SendUBX->_GetLengthUBX
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _PollGPS->_InsertTxDataSep
    _PollGPS->_strcmp
    _strcmp->_GetAtRowCSV
    _WriteGPS->_strlen
    _InsertTxData->_InsertTxDataSep
    _InsertTxDataSep->_Insert
    _InsertString->_Insert
    _Insert->_strlen
    _GetAtRowCSV->_ClearStringn
    _IntToString->_ReverseString
    _ReverseString->___awdiv
    _InitTiming->_TMR0_SetInterruptHandler
    _ClearString->_strlen
    _get_calib_data->_parse_humidity_calib_data
    _ReadEnvSensor->_I2C_ReadByte
    _ReadEnvSensor->_I2C_WriteByte
    _WriteEnvSensor->_I2C_WriteByte
    _I2C_Wait_SSPIF->_DebugAlert
    _DebugAlert->_Sleep

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    None.

Critical Paths under _main in BANK0

    _crc16->_crc16_update
    _bme280_get_sensor_data->_bme280_compensate_data
    _bme280_compensate_data->_compensate_humidity
    _compensate_temperature->___aldiv
    _compensate_pressure->___aldiv
    _compensate_humidity->___aldiv
    _UIntToString->_ReverseString
    _UIntToHexString->_ReverseString
    _TransmitString->_TransmitChar
    _SetupGPS->_GPS_HasAcknowledged
    _PollGPS->_InsertTxData
    _strcmp->_GetAtRowCSV
    _InsertTxData->_InsertString
    _InsertTxDataSep->_Insert
    _InsertString->_Insert
    _IntToString->_ReverseString
    _BME280_Init->_bme280_set_sensor_mode
    _BME280_Init->_bme280_set_sensor_settings
    _bme280_set_sensor_settings->_put_device_to_sleep
    _bme280_set_sensor_mode->_put_device_to_sleep
    _write_power_mode->_bme280_set_regs
    _put_device_to_sleep->_reload_device_settings
    _reload_device_settings->_set_osr_settings
    _set_osr_settings->_set_osr_humidity_settings
    _set_osr_settings->_set_osr_press_temp_settings
    _set_osr_press_temp_settings->_bme280_set_regs
    _set_osr_humidity_settings->_bme280_set_regs
    _set_filter_standby_settings->_bme280_set_regs
    _bme280_get_sensor_mode->_bme280_get_regs
    _bme280_init->_get_calib_data
    _get_calib_data->_bme280_get_regs
    _bme280_get_regs->_ReadEnvSensor
    _ReadEnvSensor->_I2C_ReadByte
    _I2C_ReadByte->_I2C_Wait_SSPIF
    _bme280_soft_reset->_bme280_set_regs
    _bme280_set_regs->_WriteEnvSensor
    _WriteEnvSensor->_I2C_Wait_SSPIF
    _I2C_WriteByte->_I2C_Wait_SSPIF
    _I2C_Stop->_I2C_Wait_SSPIF
    _I2C_Wait_SSPIF->_DebugAlert

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_bme280_get_sensor_data
    _bme280_compensate_data->_compensate_pressure
    _BME280_Init->_bme280_set_sensor_mode
    _BME280_Init->_bme280_set_sensor_settings
    _bme280_set_sensor_settings->_put_device_to_sleep
    _bme280_set_sensor_mode->_put_device_to_sleep

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                37    37      0  489685
                                             67 BANK1      5     5      0
                                              0 BANK2     32    32      0
                        _BME280_Init
                        _ClearString
                        _ClearTxData
                         _DebugAlert
                         _InitTiming
                             _Insert
                       _InsertString
                        _IntToString
                            _PollGPS
                  _SYSTEM_Initialize
                           _SetupGPS
                              _Sleep
                     _TransmitString
                    _UIntToHexString
                       _UIntToString
             _bme280_get_sensor_data
                              _crc16
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _crc16                                                4     2      2    1502
                                              1 BANK0      4     2      2
                       _crc16_update
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _crc16_update                                        10     4      6     410
                                              5 COMMON     9     3      6
                                              0 BANK0      1     1      0
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (1) _bme280_get_sensor_data                              27    25      2   43322
                                             65 BANK0      5     3      2
                                             45 BANK1     22    22      0
             _bme280_compensate_data
                    _bme280_get_regs
           _bme280_parse_sensor_data
                     _null_ptr_check
 ---------------------------------------------------------------------------------
 (2) _bme280_parse_sensor_data                            22    21      1     535
                                              0 COMMON     9     8      1
                                              0 BANK0     13    13      0
 ---------------------------------------------------------------------------------
 (2) _bme280_compensate_data                               6     3      3   29189
                                             59 BANK0      6     3      3
                _compensate_humidity
                _compensate_pressure
             _compensate_temperature
 ---------------------------------------------------------------------------------
 (3) _compensate_temperature                              39    35      4    9029
                                             14 BANK0     39    35      4
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) _compensate_pressure                                 67    63      4   10255
                                             14 BANK0     22    18      4
                                              0 BANK1     45    45      0
                            ___aldiv
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) _compensate_humidity                                 45    41      4    9257
                                             14 BANK0     45    41      4
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8    3588
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             15     7      8    4860
                                             12 COMMON     1     1      0
                                              0 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _UIntToString                                         9     4      5    3562
                                              9 BANK0      9     4      5
                      _ReverseString
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     311
                                              0 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             14     6      8     618
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _UIntToHexString                                     19    14      5    2572
                                              9 BANK0     19    14      5
                      _ReverseString
                              _crc16 (ARG)
 ---------------------------------------------------------------------------------
 (1) _TransmitString                                       7     5      2    2076
                                              3 BANK0      7     5      2
                       _TransmitChar
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _TransmitChar                                         4     4      0     806
                                             13 COMMON     1     1      0
                                              0 BANK0      3     3      0
                        _TransmitBit
 ---------------------------------------------------------------------------------
 (3) _TransmitBit                                          1     1      0     676
                                             12 COMMON     1     1      0
                              _Sleep
 ---------------------------------------------------------------------------------
 (1) _SetupGPS                                             1     1      0    3101
                                             12 COMMON     1     1      0
                _GPS_HasAcknowledged
                        _GPS_SendUBX
                              _Sleep
                           _WriteGPS
 ---------------------------------------------------------------------------------
 (2) _GPS_SendUBX                                          6     6      0     245
                                              4 COMMON     6     6      0
                      _EUSART1_Write
                       _GetLengthUBX
 ---------------------------------------------------------------------------------
 (3) _GetLengthUBX                                         4     1      3      77
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (2) _GPS_HasAcknowledged                                 22    22      0     618
                                              0 COMMON     4     4      0
                                              0 BANK0     18    18      0
                       _EUSART1_Read
                _EUSART1_is_rx_ready
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     468
                 _EUSART1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     174
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     294
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _PollGPS                                             18    18      0   42553
                                             25 BANK0     18    18      0
                          _ClearNMEA
                       _EUSART1_Read
                _EUSART1_is_rx_ready
                        _GetAtRowCSV
                             _Insert
                       _InsertString
                       _InsertTxData
                    _InsertTxDataSep
                           _WriteGPS
                             _strcmp
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strcmp                                               4     2      2     330
                                             11 COMMON     3     1      2
                                              8 BANK0      1     1      0
                        _GetAtRowCSV (ARG)
 ---------------------------------------------------------------------------------
 (2) _WriteGPS                                             7     5      2    1593
                                              5 COMMON     7     5      2
                      _EUSART1_Write
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _EUSART1_Write                                        1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _InsertTxData                                         4     0      4   17575
                                             21 BANK0      4     0      4
                        _GetAtRowCSV
                       _InsertString
                    _InsertTxDataSep
 ---------------------------------------------------------------------------------
 (2) _InsertTxDataSep                                      3     1      2    5277
                                             12 COMMON     2     0      2
                                              9 BANK0      1     1      0
                             _Insert
 ---------------------------------------------------------------------------------
 (3) _InsertString                                        13     5      8    8859
                                             12 COMMON     1     1      0
                                              9 BANK0     12     4      8
                        _GetAtRowCSV (ARG)
                             _Insert
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _Insert                                              16     9      7    4951
                                              5 COMMON     7     0      7
                                              0 BANK0      9     9      0
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _GetAtRowCSV                                         13     9      4    2308
                                              6 COMMON     5     1      4
                                              0 BANK0      8     8      0
                       _ClearStringn
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _ClearStringn                                         6     4      2     199
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EUSART1_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ClearNMEA                                            4     4      0      68
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _IntToString                                          8     5      3    4276
                                             11 COMMON     3     0      3
                                              9 BANK0      5     5      0
                      _ReverseString
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) _ReverseString                                       11    11      0    2172
                                              9 COMMON     2     2      0
                                              0 BANK0      9     9      0
                            ___awdiv
                             _strlen
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     756
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _InitTiming                                           0     0      0     174
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2     174
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _ClearTxData                                          4     4      0      68
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _ClearString                                          6     6      0    1138
                                              5 COMMON     6     6      0
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _strlen                                               5     3      2     926
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _BME280_Init                                          4     4      0  366883
                                             14 BANK1      4     4      0
                         _DebugAlert
                           _I2C_Init
                        _bme280_init
             _bme280_set_sensor_mode
         _bme280_set_sensor_settings
 ---------------------------------------------------------------------------------
 (2) _bme280_set_sensor_settings                           6     5      1  187200
                                             76 BANK0      3     2      1
                                             11 BANK1      3     3      0
               _are_settings_changed
             _bme280_get_sensor_mode
                     _null_ptr_check
                _put_device_to_sleep
        _set_filter_standby_settings
                   _set_osr_settings
 ---------------------------------------------------------------------------------
 (3) _are_settings_changed                                 3     2      1     282
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (2) _bme280_set_sensor_mode                               6     5      1  137160
                                             76 BANK0      3     2      1
                                             11 BANK1      3     3      0
             _bme280_get_sensor_mode
                     _null_ptr_check
                _put_device_to_sleep
                   _write_power_mode
 ---------------------------------------------------------------------------------
 (3) _write_power_mode                                     8     7      1   23631
                                             51 BANK0      8     7      1
                    _bme280_get_regs
                    _bme280_set_regs
 ---------------------------------------------------------------------------------
 (3) _put_device_to_sleep                                 14    14      0   99150
                                             73 BANK0      3     3      0
                                              0 BANK1     11    11      0
                    _bme280_get_regs
                  _bme280_soft_reset
              _parse_device_settings
             _reload_device_settings
 ---------------------------------------------------------------------------------
 (4) _reload_device_settings                               5     4      1   73487
                                             68 BANK0      5     4      1
        _set_filter_standby_settings
                   _set_osr_settings
 ---------------------------------------------------------------------------------
 (3) _set_osr_settings                                     7     4      3   48691
                                             61 BANK0      7     4      3
          _set_osr_humidity_settings
        _set_osr_press_temp_settings
 ---------------------------------------------------------------------------------
 (4) _set_osr_press_temp_settings                         10     7      3   24298
                                             51 BANK0     10     7      3
                    _bme280_get_regs
                    _bme280_set_regs
            _fill_osr_press_settings
             _fill_osr_temp_settings
 ---------------------------------------------------------------------------------
 (5) _fill_osr_temp_settings                               6     4      2     219
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (5) _fill_osr_press_settings                              6     4      2     219
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (4) _set_osr_humidity_settings                           10     7      3   23776
                                             51 BANK0     10     7      3
                    _bme280_get_regs
                    _bme280_set_regs
 ---------------------------------------------------------------------------------
 (3) _set_filter_standby_settings                         10     7      3   24478
                                             51 BANK0     10     7      3
                    _bme280_get_regs
                    _bme280_set_regs
               _fill_filter_settings
              _fill_standby_settings
 ---------------------------------------------------------------------------------
 (4) _fill_standby_settings                                6     4      2     219
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (4) _fill_filter_settings                                 6     4      2     219
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (4) _parse_device_settings                                4     3      1     562
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (3) _bme280_get_sensor_mode                               6     5      1   13430
                                             32 BANK0      6     5      1
                    _bme280_get_regs
                     _null_ptr_check
 ---------------------------------------------------------------------------------
 (2) _bme280_init                                          7     7      0   40818
                                             64 BANK0      7     7      0
                              _Sleep *
                    _bme280_get_regs
                  _bme280_soft_reset
                     _get_calib_data
                     _null_ptr_check
 ---------------------------------------------------------------------------------
 (3) _get_calib_data                                      32    32      0   14513
                                             32 BANK0     32    32      0
                    _bme280_get_regs
          _parse_humidity_calib_data
        _parse_temp_press_calib_data
 ---------------------------------------------------------------------------------
 (4) _parse_temp_press_calib_data                          4     3      1     968
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (4) _parse_humidity_calib_data                           14    13      1     510
                                              0 COMMON    14    13      1
 ---------------------------------------------------------------------------------
 (2) _bme280_get_regs                                      9     5      4   12470
                                             23 BANK0      9     5      4
                      _ReadEnvSensor *
                     _null_ptr_check
 ---------------------------------------------------------------------------------
 (3) _ReadEnvSensor                                       10     5      5    8662
                                             13 BANK0     10     5      5
                       _I2C_ReadByte
                           _I2C_Stop
                     _I2C_Wait_SSPIF
                      _I2C_WriteByte
 ---------------------------------------------------------------------------------
 (4) _I2C_ReadByte                                         3     3      0    1650
                                             13 COMMON     1     1      0
                                             11 BANK0      2     2      0
                     _I2C_Wait_SSPIF
 ---------------------------------------------------------------------------------
 (4) _bme280_soft_reset                                    7     7      0   12168
                                             51 BANK0      7     7      0
                              _Sleep *
                    _bme280_set_regs
                     _null_ptr_check
 ---------------------------------------------------------------------------------
 (5) _bme280_set_regs                                     31    28      3   10716
                                             20 BANK0     31    28      3
                     _WriteEnvSensor *
                _interleave_reg_addr
                     _null_ptr_check
 ---------------------------------------------------------------------------------
 (2) _null_ptr_check                                       4     4      0     485
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (6) _interleave_reg_addr                                  8     5      3     622
                                              0 COMMON     8     5      3
 ---------------------------------------------------------------------------------
 (6) _WriteEnvSensor                                       9     4      5    6857
                                             11 BANK0      9     4      5
                           _I2C_Stop
                     _I2C_Wait_SSPIF
                      _I2C_WriteByte
 ---------------------------------------------------------------------------------
 (4) _I2C_WriteByte                                        1     1      0    3201
                                             13 COMMON     1     1      0
                      _I2C_UserAlert
                     _I2C_Wait_SSPIF
 ---------------------------------------------------------------------------------
 (5) _I2C_UserAlert                                        1     1      0    1585
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (6) _I2C_Stop                                             0     0      0    1585
                     _I2C_Wait_SSPIF
 ---------------------------------------------------------------------------------
 (5) _I2C_Wait_SSPIF                                       4     4      0    1585
                                              7 BANK0      4     4      0
                         _DebugAlert
 ---------------------------------------------------------------------------------
 (6) _DebugAlert                                           8     3      5    1585
                                             12 COMMON     1     1      0
                                              0 BANK0      7     2      5
                              _Sleep
 ---------------------------------------------------------------------------------
 (7) _Sleep                                               12     8      4     645
                                              0 COMMON    12     8      4
 ---------------------------------------------------------------------------------
 (2) _I2C_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _INTERRUPT_InterruptManager                          0     0      0       0
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (16) _TMR0_ISR                                            0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                           _TimerISR *
 ---------------------------------------------------------------------------------
 (17) _TimerISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BME280_Init
     _DebugAlert
       _Sleep
     _I2C_Init
     _bme280_init
       _Sleep *
       _bme280_get_regs *
         _ReadEnvSensor *
           _I2C_ReadByte
             _I2C_Wait_SSPIF
               _DebugAlert
                 _Sleep
           _I2C_Stop
             _I2C_Wait_SSPIF
               _DebugAlert
                 _Sleep
           _I2C_Wait_SSPIF
             _DebugAlert
               _Sleep
           _I2C_WriteByte
             _I2C_UserAlert
               _I2C_Stop
                 _I2C_Wait_SSPIF
                   _DebugAlert
                     _Sleep
             _I2C_Wait_SSPIF
               _DebugAlert
                 _Sleep
         _null_ptr_check *
       _bme280_soft_reset *
         _Sleep *
         _bme280_set_regs *
           _WriteEnvSensor *
             _I2C_Stop
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
             _I2C_Wait_SSPIF
               _DebugAlert
                 _Sleep
             _I2C_WriteByte
               _I2C_UserAlert
                 _I2C_Stop
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
           _interleave_reg_addr *
           _null_ptr_check *
         _null_ptr_check *
       _get_calib_data *
         _bme280_get_regs
           _ReadEnvSensor *
             _I2C_ReadByte
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
             _I2C_Stop
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
             _I2C_Wait_SSPIF
               _DebugAlert
                 _Sleep
             _I2C_WriteByte
               _I2C_UserAlert
                 _I2C_Stop
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
           _null_ptr_check *
         _parse_humidity_calib_data
         _parse_temp_press_calib_data
       _null_ptr_check *
     _bme280_set_sensor_mode
       _bme280_get_sensor_mode
         _bme280_get_regs
           _ReadEnvSensor *
             _I2C_ReadByte
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
             _I2C_Stop
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
             _I2C_Wait_SSPIF
               _DebugAlert
                 _Sleep
             _I2C_WriteByte
               _I2C_UserAlert
                 _I2C_Stop
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
           _null_ptr_check *
         _null_ptr_check
       _null_ptr_check
       _put_device_to_sleep
         _bme280_get_regs
           _ReadEnvSensor *
             _I2C_ReadByte
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
             _I2C_Stop
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
             _I2C_Wait_SSPIF
               _DebugAlert
                 _Sleep
             _I2C_WriteByte
               _I2C_UserAlert
                 _I2C_Stop
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
           _null_ptr_check *
         _bme280_soft_reset
           _Sleep *
           _bme280_set_regs *
             _WriteEnvSensor *
               _I2C_Stop
                 _I2C_Wait_SSPIF
                   _DebugAlert
                     _Sleep
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
               _I2C_WriteByte
                 _I2C_UserAlert
                   _I2C_Stop
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                 _I2C_Wait_SSPIF
                   _DebugAlert
                     _Sleep
             _interleave_reg_addr *
             _null_ptr_check *
           _null_ptr_check *
         _parse_device_settings
         _reload_device_settings
           _set_filter_standby_settings
             _bme280_get_regs
               _ReadEnvSensor *
                 _I2C_ReadByte
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
                 _I2C_Stop
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
                 _I2C_Wait_SSPIF
                   _DebugAlert
                     _Sleep
                 _I2C_WriteByte
                   _I2C_UserAlert
                     _I2C_Stop
                       _I2C_Wait_SSPIF
                         _DebugAlert
                           _Sleep
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
               _null_ptr_check *
             _bme280_set_regs
               _WriteEnvSensor *
                 _I2C_Stop
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
                 _I2C_Wait_SSPIF
                   _DebugAlert
                     _Sleep
                 _I2C_WriteByte
                   _I2C_UserAlert
                     _I2C_Stop
                       _I2C_Wait_SSPIF
                         _DebugAlert
                           _Sleep
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
               _interleave_reg_addr *
               _null_ptr_check *
             _fill_filter_settings
             _fill_standby_settings
           _set_osr_settings
             _set_osr_humidity_settings
               _bme280_get_regs
                 _ReadEnvSensor *
                   _I2C_ReadByte
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                   _I2C_Stop
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
                   _I2C_WriteByte
                     _I2C_UserAlert
                       _I2C_Stop
                         _I2C_Wait_SSPIF
                           _DebugAlert
                             _Sleep
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                 _null_ptr_check *
               _bme280_set_regs
                 _WriteEnvSensor *
                   _I2C_Stop
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
                   _I2C_WriteByte
                     _I2C_UserAlert
                       _I2C_Stop
                         _I2C_Wait_SSPIF
                           _DebugAlert
                             _Sleep
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                 _interleave_reg_addr *
                 _null_ptr_check *
             _set_osr_press_temp_settings
               _bme280_get_regs
                 _ReadEnvSensor *
                   _I2C_ReadByte
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                   _I2C_Stop
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
                   _I2C_WriteByte
                     _I2C_UserAlert
                       _I2C_Stop
                         _I2C_Wait_SSPIF
                           _DebugAlert
                             _Sleep
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                 _null_ptr_check *
               _bme280_set_regs
                 _WriteEnvSensor *
                   _I2C_Stop
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
                   _I2C_WriteByte
                     _I2C_UserAlert
                       _I2C_Stop
                         _I2C_Wait_SSPIF
                           _DebugAlert
                             _Sleep
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                 _interleave_reg_addr *
                 _null_ptr_check *
               _fill_osr_press_settings
               _fill_osr_temp_settings
       _write_power_mode
         _bme280_get_regs
           _ReadEnvSensor *
             _I2C_ReadByte
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
             _I2C_Stop
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
             _I2C_Wait_SSPIF
               _DebugAlert
                 _Sleep
             _I2C_WriteByte
               _I2C_UserAlert
                 _I2C_Stop
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
           _null_ptr_check *
         _bme280_set_regs
           _WriteEnvSensor *
             _I2C_Stop
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
             _I2C_Wait_SSPIF
               _DebugAlert
                 _Sleep
             _I2C_WriteByte
               _I2C_UserAlert
                 _I2C_Stop
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
           _interleave_reg_addr *
           _null_ptr_check *
     _bme280_set_sensor_settings
       _are_settings_changed
       _bme280_get_sensor_mode
         _bme280_get_regs
           _ReadEnvSensor *
             _I2C_ReadByte
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
             _I2C_Stop
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
             _I2C_Wait_SSPIF
               _DebugAlert
                 _Sleep
             _I2C_WriteByte
               _I2C_UserAlert
                 _I2C_Stop
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
           _null_ptr_check *
         _null_ptr_check
       _null_ptr_check
       _put_device_to_sleep
         _bme280_get_regs
           _ReadEnvSensor *
             _I2C_ReadByte
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
             _I2C_Stop
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
             _I2C_Wait_SSPIF
               _DebugAlert
                 _Sleep
             _I2C_WriteByte
               _I2C_UserAlert
                 _I2C_Stop
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
           _null_ptr_check *
         _bme280_soft_reset
           _Sleep *
           _bme280_set_regs *
             _WriteEnvSensor *
               _I2C_Stop
                 _I2C_Wait_SSPIF
                   _DebugAlert
                     _Sleep
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
               _I2C_WriteByte
                 _I2C_UserAlert
                   _I2C_Stop
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                 _I2C_Wait_SSPIF
                   _DebugAlert
                     _Sleep
             _interleave_reg_addr *
             _null_ptr_check *
           _null_ptr_check *
         _parse_device_settings
         _reload_device_settings
           _set_filter_standby_settings
             _bme280_get_regs
               _ReadEnvSensor *
                 _I2C_ReadByte
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
                 _I2C_Stop
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
                 _I2C_Wait_SSPIF
                   _DebugAlert
                     _Sleep
                 _I2C_WriteByte
                   _I2C_UserAlert
                     _I2C_Stop
                       _I2C_Wait_SSPIF
                         _DebugAlert
                           _Sleep
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
               _null_ptr_check *
             _bme280_set_regs
               _WriteEnvSensor *
                 _I2C_Stop
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
                 _I2C_Wait_SSPIF
                   _DebugAlert
                     _Sleep
                 _I2C_WriteByte
                   _I2C_UserAlert
                     _I2C_Stop
                       _I2C_Wait_SSPIF
                         _DebugAlert
                           _Sleep
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
               _interleave_reg_addr *
               _null_ptr_check *
             _fill_filter_settings
             _fill_standby_settings
           _set_osr_settings
             _set_osr_humidity_settings
               _bme280_get_regs
                 _ReadEnvSensor *
                   _I2C_ReadByte
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                   _I2C_Stop
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
                   _I2C_WriteByte
                     _I2C_UserAlert
                       _I2C_Stop
                         _I2C_Wait_SSPIF
                           _DebugAlert
                             _Sleep
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                 _null_ptr_check *
               _bme280_set_regs
                 _WriteEnvSensor *
                   _I2C_Stop
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
                   _I2C_WriteByte
                     _I2C_UserAlert
                       _I2C_Stop
                         _I2C_Wait_SSPIF
                           _DebugAlert
                             _Sleep
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                 _interleave_reg_addr *
                 _null_ptr_check *
             _set_osr_press_temp_settings
               _bme280_get_regs
                 _ReadEnvSensor *
                   _I2C_ReadByte
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                   _I2C_Stop
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
                   _I2C_WriteByte
                     _I2C_UserAlert
                       _I2C_Stop
                         _I2C_Wait_SSPIF
                           _DebugAlert
                             _Sleep
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                 _null_ptr_check *
               _bme280_set_regs
                 _WriteEnvSensor *
                   _I2C_Stop
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
                   _I2C_WriteByte
                     _I2C_UserAlert
                       _I2C_Stop
                         _I2C_Wait_SSPIF
                           _DebugAlert
                             _Sleep
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                 _interleave_reg_addr *
                 _null_ptr_check *
               _fill_osr_press_settings
               _fill_osr_temp_settings
       _set_filter_standby_settings
         _bme280_get_regs
           _ReadEnvSensor *
             _I2C_ReadByte
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
             _I2C_Stop
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
             _I2C_Wait_SSPIF
               _DebugAlert
                 _Sleep
             _I2C_WriteByte
               _I2C_UserAlert
                 _I2C_Stop
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
           _null_ptr_check *
         _bme280_set_regs
           _WriteEnvSensor *
             _I2C_Stop
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
             _I2C_Wait_SSPIF
               _DebugAlert
                 _Sleep
             _I2C_WriteByte
               _I2C_UserAlert
                 _I2C_Stop
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
           _interleave_reg_addr *
           _null_ptr_check *
         _fill_filter_settings
         _fill_standby_settings
       _set_osr_settings
         _set_osr_humidity_settings
           _bme280_get_regs
             _ReadEnvSensor *
               _I2C_ReadByte
                 _I2C_Wait_SSPIF
                   _DebugAlert
                     _Sleep
               _I2C_Stop
                 _I2C_Wait_SSPIF
                   _DebugAlert
                     _Sleep
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
               _I2C_WriteByte
                 _I2C_UserAlert
                   _I2C_Stop
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                 _I2C_Wait_SSPIF
                   _DebugAlert
                     _Sleep
             _null_ptr_check *
           _bme280_set_regs
             _WriteEnvSensor *
               _I2C_Stop
                 _I2C_Wait_SSPIF
                   _DebugAlert
                     _Sleep
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
               _I2C_WriteByte
                 _I2C_UserAlert
                   _I2C_Stop
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                 _I2C_Wait_SSPIF
                   _DebugAlert
                     _Sleep
             _interleave_reg_addr *
             _null_ptr_check *
         _set_osr_press_temp_settings
           _bme280_get_regs
             _ReadEnvSensor *
               _I2C_ReadByte
                 _I2C_Wait_SSPIF
                   _DebugAlert
                     _Sleep
               _I2C_Stop
                 _I2C_Wait_SSPIF
                   _DebugAlert
                     _Sleep
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
               _I2C_WriteByte
                 _I2C_UserAlert
                   _I2C_Stop
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                 _I2C_Wait_SSPIF
                   _DebugAlert
                     _Sleep
             _null_ptr_check *
           _bme280_set_regs
             _WriteEnvSensor *
               _I2C_Stop
                 _I2C_Wait_SSPIF
                   _DebugAlert
                     _Sleep
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
               _I2C_WriteByte
                 _I2C_UserAlert
                   _I2C_Stop
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                 _I2C_Wait_SSPIF
                   _DebugAlert
                     _Sleep
             _interleave_reg_addr *
             _null_ptr_check *
           _fill_osr_press_settings
           _fill_osr_temp_settings
   _ClearString
     _strlen
   _ClearTxData
   _DebugAlert
     _Sleep
   _InitTiming
     _TMR0_SetInterruptHandler
   _Insert
     _strlen
   _InsertString
     _GetAtRowCSV (ARG)
       _ClearStringn
       _strlen
     _Insert (ARG)
       _strlen
     _strlen (ARG)
   _IntToString
     _ReverseString
       ___awdiv
       _strlen
     ___awdiv
     ___awmod
   _PollGPS
     _ClearNMEA
     _EUSART1_Read
     _EUSART1_is_rx_ready
     _GetAtRowCSV
       _ClearStringn
       _strlen
     _Insert
       _strlen
     _InsertString
       _GetAtRowCSV (ARG)
         _ClearStringn
         _strlen
       _Insert (ARG)
         _strlen
       _strlen (ARG)
     _InsertTxData
       _GetAtRowCSV
         _ClearStringn
         _strlen
       _InsertString
         _GetAtRowCSV (ARG)
           _ClearStringn
           _strlen
         _Insert (ARG)
           _strlen
         _strlen (ARG)
       _InsertTxDataSep
         _Insert
           _strlen
     _InsertTxDataSep
       _Insert
         _strlen
     _WriteGPS
       _EUSART1_Write
       _strlen
     _strcmp
       _GetAtRowCSV (ARG)
         _ClearStringn
         _strlen
     _strlen
   _SYSTEM_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
   _SetupGPS
     _GPS_HasAcknowledged
       _EUSART1_Read
       _EUSART1_is_rx_ready
     _GPS_SendUBX
       _EUSART1_Write
       _GetLengthUBX
     _Sleep
     _WriteGPS
       _EUSART1_Write
       _strlen
   _Sleep
   _TransmitString
     _TransmitChar
       _TransmitBit
         _Sleep
     _strlen
   _UIntToHexString
     _ReverseString
       ___awdiv
       _strlen
     _crc16 (ARG)
       _crc16_update
         _strlen (ARG)
       _strlen
   _UIntToString
     _ReverseString
       ___awdiv
       _strlen
     ___lldiv
     ___llmod
   _bme280_get_sensor_data
     _bme280_compensate_data
       _compensate_humidity
         ___aldiv
           ___lmul (ARG)
         ___lmul
       _compensate_pressure
         ___aldiv
           ___lmul (ARG)
         ___lldiv
         ___lmul
       _compensate_temperature
         ___aldiv
           ___lmul (ARG)
         ___lmul
     _bme280_get_regs
       _ReadEnvSensor *
         _I2C_ReadByte
           _I2C_Wait_SSPIF
             _DebugAlert
               _Sleep
         _I2C_Stop
           _I2C_Wait_SSPIF
             _DebugAlert
               _Sleep
         _I2C_Wait_SSPIF
           _DebugAlert
             _Sleep
         _I2C_WriteByte
           _I2C_UserAlert
             _I2C_Stop
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
           _I2C_Wait_SSPIF
             _DebugAlert
               _Sleep
       _null_ptr_check *
     _bme280_parse_sensor_data
     _null_ptr_check
   _crc16
     _crc16_update
       _strlen (ARG)
     _strlen
   _strlen

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _TimerISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      4F       5       98.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
ABS                  0      0     190       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     48      50       8      100.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50     20      50      10      100.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0      4D      12       96.3%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0      46      14       87.5%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITBANK13           50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BANK13              50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITBANK14           50      0       0      33        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BANK14              50      0       0      34        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITBANK15           50      0       0      35        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BANK15              50      0       0      36        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITBANK16           50      0       0      37        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BANK16              50      0       0      38        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITBANK17           50      0       0      39        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BANK17              50      0       0      40        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITBANK18           50      0       0      41        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BANK18              50      0       0      42        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITBANK19           50      0       0      43        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BANK19              50      0       0      44        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITBANK20           50      0       0      45        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BANK20              50      0       0      46        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITBANK21           50      0       0      47        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BANK21              48      0       0      48        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITBANK22           50      0       0      49        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BANK22               0      0       0      50        0.0%
BITBANK23           50      0       0      51        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BANK23               0      0       0      52        0.0%
BITBANK24           50      0       0      53        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BANK24               0      0       0      54        0.0%
BITBANK25           20      0       0      55        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BANK25               0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
DATA                 0      0     190      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Tue Sep 17 12:51:19 2019

                           __end_of_ClearString 1849                             __end_of_GetAtRowCSV 113B  
                              GetAtRowCSV@index 0024                            __end_of_ClearStringn 2773  
                             GetAtRowCSV@column 0078                                     __CFG_CP$OFF 0000  
                             GetAtRowCSV@counti 0020                bme280_parse_sensor_data@data_lsb 0024  
              bme280_parse_sensor_data@data_msb 0028                                              l55 1272  
                                            l72 1707                                              l65 1C5F  
                                  ___awdiv@sign 0076                                 GPS_SendUBX@data 0079  
                                            _id 0148                      ?_set_osr_humidity_settings 0053  
              __end_of_bme280_parse_sensor_data 095D                                     __CFG_LVP$ON 0000  
                                           l126 14B9                                             l152 1CD8  
                                           l208 0FF7                                             l146 1D1E  
                                           l238 27AF                                             l192 0400  
                                           l185 0AFC                                             l355 25D5  
                                           l348 2604                                             l196 059C  
                                           l535 1D42                                             l538 1D77  
                                           l811 0C0C                                             l652 10F4  
                                           l812 0C6B                                             l807 0BAD  
                                           l832 07F4                                             l657 1134  
                                           l683 13D5                                             l783 1D98  
                                           l848 081E                                             l865 267E  
                                           l895 191E               bme280_parse_sensor_data@data_xlsb 0020  
               __size_of_fill_osr_temp_settings 001C                         __size_of_PMD_Initialize 000A  
                                  ___awmod@sign 0076                                    __CFG_BORV$LO 0000  
                                           wreg 0009                                 _InsertTxDataSep 26B7  
                                 __CFG_BBEN$OFF 0000                bme280_parse_sensor_data@reg_data 002C  
                                bme280_init@dev 0066                 __size_of_compensate_temperature 01A8  
                             ___g_timeout_start 0144                                  ReverseString@i 0026  
                                WriteGPS@counti 0078                                      _DebugAlert 18C1  
                                          l1117 14CE                                            l4000 1E8D  
                                          l4010 1EA8                                            l4014 1EB0  
                                          l4006 1E9F                                            l5002 1AC7  
                                          l4130 14BB                                            l4122 1489  
                                          l5004 1ADF                                            l3500 26A4  
                                          l5030 1674                                            l5110 1D30  
                                          l3502 26B0                                            l4222 115B  
                                          l4126 14A0                           __size_of_crc16_update 003D  
                                          l4224 1196                                            l3600 133C  
                                          l5050 1698                                            l5018 1C37  
                                          l5106 1D13                                            l4402 1C99  
                                          l3602 134A                                            l4234 187D  
                                          l4322 1A04                                            l5052 16B2  
                                          l5204 19F0                                            l5124 1900  
                                          l5300 1383                                            l4308 1807  
                                          l4324 19F5                                            l4244 1854  
                                          l3612 1A29                                            l5142 1CCD  
                                          l5230 2602                                            l4406 1CA1  
                                          l3606 134F                                            l4326 1A12  
                                          l3630 1F69                                            l4422 1C09  
                                          l4350 0839                                            l5128 1913  
                                          l5312 13C9                                            l3640 1F97  
                                          l3632 1F77                                            l4416 1BE3  
                                          l3616 1A33                                            l4344 0824  
                                          l5058 16D2                                            l5066 1702  
                                          l5146 1CEA                                            l5170 27FE  
                                          l5218 1BD9                                            l5306 13A6  
                                          l5410 12CF                                            l4514 1830  
                                          l4282 1596                                            l4274 158E  
                                          l4266 1578                                            l5250 2680  
                                          l4530 1420                                            l4522 13F6  
                                          l4418 1BF1                                            l4426 1C14  
                                          l5068 1709                                            l5092 1F05  
                                          l5244 1B1B                                            l5332 1B97  
                                          l5228 2601                                            l4380 1C6B  
                                          l4284 15B5                                            l4276 158F  
                                          l3644 1FA2                                            l4348 0801  
                                          l5158 1B56                                            l5262 121C  
                                          l3910 260E                                            l4534 1433  
                                          l3822 03E4                                            l5192 1E10  
                                          l5280 1268                                            l5328 1B86  
                                          l4392 1C78                                            l4384 1C72  
                                          l3584 275A                                            l4640 0B72  
                                          l4288 15B7                                            l5344 1A89  
                                          l4536 1440                                            l3680 1528  
                                          l3832 0581                                            l5282 126B  
                                          l4394 1C84                                            l4546 11B3  
                                          l4642 0BD0                                            l5418 1D7C  
                                          l5442 194F                                            l3666 14EF  
                                          l3658 14DF                                            l3834 0589  
                                          l5276 1253                                            l4580 2775  
                                          l4636 0B95                                            l4564 1FAE  
                                          l3684 1536                                            l3676 151D  
                                          l3668 14FD                                            l3836 0594  
                                          l4398 1C90                                            l4558 11FD  
                                          l3942 1139                                            l3598 1310  
                                          l4638 0BCA                                            l4654 0D0C  
                                          l3782 0AE6                                            l5526 07E2  
                                          l5462 05B8                                            l4664 0D2F  
                                          l3784 0AF4                                            l3938 1126  
                                          l3954 1F47                                            l4666 0B25  
                                          l3882 0FC8                                            l3956 1F17  
                                          l4668 0D34                                            l3876 0FB4  
                                          l4934 27B2                                            l3982 1E6E  
                                          l3958 1F53                                            l3886 0FEF  
                                          l4936 27B3                                            l4946 199B  
                                          l4892 1D69                                            l4972 1E4C  
                                          l3988 1E79                                            l4886 18C4  
                                          l3998 1E81                                            l4976 1E34  
                                          l4978 1E5F                                            STR_1 284E  
                                          STR_2 2834                                            STR_3 2882  
                                          STR_4 281A                                            STR_5 2868  
                                          STR_6 2800                                            STR_7 289C  
                                          STR_8 28B8                                            STR_9 28BA  
                                          u3005 14FE                                            _LATA 0018  
                                          _LATB 0019                                            u3015 1512  
                                          _LATC 001A                                            u3025 151E  
                                          u3135 0976                                            u3225 0410  
                                          u3145 0989                                            u4115 1BE6  
                                          u3235 042F                                            u3155 09F4  
                                          u4300 11A8                                            u4045 1C7B  
                                          u3405 1F51                                            u3245 044A  
                                          u5110 1DCF                                            u3415 1F22  
                                          u4135 1BFF                                            u3255 04BC  
                                          u3505 1EA0                                            u4065 1C8A  
                                          u4145 1C0A                                            u3185 015A  
                                          u4075 1C91                                            u3195 0188  
                                          u2805 1643                                            u4245 183A  
                                          u4325 11E8                                            u3365 1107  
                                          u3285 0D5E                                            u2815 2764  
                                          u4415 0B7C                                            u3295 0D7C  
                                          u5065 1036                                            u3465 1E84  
                                          u2825 12FD                                            u4265 1413  
                                          u3705 0849                                            u4290 11A7  
                                          u5410 1084                                            u5075 1048  
                                          u4355 278D                                            u3395 10FE  
                                          u2835 131A                                            u2915 1F78  
                                          u3715 0860                                            u5420 1091  
                                          _PMD0 0796                                            u5085 105A  
                                          u3485 1E8E                                            u5405 1AA7  
                                          u2925 1F8C                                            u3725 0875  
                                          _PMD1 0797                                            _PMD2 0798  
                                          u5095 106D                                            u3495 1E98  
                                          u2935 1F98                                            u2855 1A34  
                                          u3735 08B6                                            _PMD3 0799  
                                          u5520 05C3                                            _PMD4 079A  
                                          u4385 0B88                                            u2865 1A3B  
                                          u3745 08CE                                            _PMD5 079B  
                                          _PMD6 079C                                            u3835 1165  
                                          u3915 181F                                            u3755 08E3  
                                          _PMD7 079D                                            u5380 1A95  
                                          u3845 1887                                            u3765 0925  
                                          u5390 1A96                                            u5374 1A8F  
                                          u3855 185E                                            u5375 1A8E  
                                          u2895 1F6C                                            u4665 1939  
                                          u2985 14F2                                            u5547 193C  
                                          u4675 18CD                                            u4915 26F0  
                                          u4765 1E48                                            u4925 2744  
                                          u4775 1E3A                                            u5495 1959  
                                          u4785 1ACD                     __end_of_compensate_humidity 1000  
                                          u4985 270C                                            u4995 2728  
                                          _WPUA 1F39                                            _WPUB 1F44  
                                          _WPUC 1F4F                          ??_fill_filter_settings 0072  
                     __size_of_write_power_mode 0039                          WriteEnvSensor@reg_addr 002C  
           bme280_parse_sensor_data@uncomp_data 0070                          WriteEnvSensor@reg_data 002D  
             bme280_get_sensor_data@uncomp_data 00D7                                   _EUSART1_Write 25D4  
                                 __CFG_FCMEN$ON 0000                 __size_of_bme280_set_sensor_mode 0040  
                     __size_of_set_osr_settings 002A                           __size_of_I2C_ReadByte 0019  
                           _put_device_to_sleep 1B99                                            _main 05AC  
                 compensate_humidity@calib_data 002E                            __end_of_GetLengthUBX 2664  
                                 ?_EUSART1_Read 0070                                __end_of_I2C_Init 26A0  
                                  TransmitBit@b 007C                                            fsr0h 0005  
                                          fsr1h 0007                                            indf0 0000  
                                          fsr0l 0004                                            indf1 0001  
                                          fsr1l 0006                                            btemp 007E  
                        interleave_reg_addr@len 0072                                __end_of_I2C_Stop 25B4  
          are_settings_changed@desired_settings 0070                     put_device_to_sleep@reg_data 00A0  
                                 __CFG_BOREN$ON 0000                               GPS_SendUBX@length 0075  
                  GPS_HasAcknowledged@startTime 0020                                            start 000E  
                          bme280_soft_reset@dev 0059                                 _HALF_BAUD_DELAY 28B6  
                   __end_of_compensate_pressure 05AC                                   __CFG_CSWEN$ON 0000  
                                 __CFG_MCLRE$ON 0000                  reload_device_settings@settings 0067  
                       ??_fill_standby_settings 0072                                   ??_IntToString 0029  
                   put_device_to_sleep@settings 00A6                                   _ReadEnvSensor 1E13  
                               __end_of_PollGPS 0D36                                 bme280_init@rslt 0065  
                       __end_of_TMR0_Initialize 2677                  ??_TMR0_DefaultInterruptHandler 0070  
                __size_of_OSCILLATOR_Initialize 0009                   __end_of_OSCILLATOR_Initialize 25E5  
                          ?_put_device_to_sleep 0070                                PollGPS@startTime 003D  
                               __end_of___aldiv 153F                           ReverseString@opposite 0023  
                                         ?_main 0070                      GPS_HasAcknowledged@ackByte 0024  
                               __end_of___awdiv 1EB5                                           STR_10 28AA  
                                         STR_11 28B1                                   __CFG_WDTE$OFF 0000  
                               __end_of___awmod 1CA6                                 WriteGPS@message 0075  
                               __end_of___lldiv 1FAB                          _bme280_compensate_data 1444  
                               ___awdiv@divisor 0070                                 __end_of___llmod 1C1D  
                                         i1l389 000C                                 ___awdiv@counter 0075  
                                         _OSCEN 0891                                    _crc16_update 0801  
                                         _TMR0H 059D                                           _TMR0L 059C  
                                    Insert@dest 0075                               _bme280_soft_reset 1B1D  
                                         _TRISA 0012                                           _TRISB 0013  
                                         _TRISC 0014               __size_of_TMR0_SetInterruptHandler 0006  
                      __size_of_bme280_get_regs 0044                             ___lmul@multiplicand 0074  
                     ?_TMR0_SetInterruptHandler 0070                                           _Sleep 1915  
                              __end_of_TMR0_ISR 2635                  compensate_pressure@uncomp_data 00B4  
                    bme280_compensate_data@rslt 005F                              ?_bme280_soft_reset 0070  
                                  _I2C_ReadByte 26CF                                   __CFG_WRTB$OFF 0000  
                                 __CFG_WRTC$OFF 0000                                   __CFG_WRTD$OFF 0000  
                      UIntToHexString@remainder 0034                                           _crc16 27B5  
                              crc16_update@wCrc 0079                                ?_UIntToHexString 0029  
                                  ?_GPS_SendUBX 0070                                           _ticks 00E8  
                                 TransmitChar@i 0021                                  ?_EUSART1_Write 0070  
                                         pclath 000A                         GPS_HasAcknowledged@data 002F  
                 __size_of_are_settings_changed 000B                                     _ClearTxData 2773  
                                ??_EUSART1_Read 0070                             ??_bme280_soft_reset 0053  
                                         status 0003                                           wtemp0 007E  
                                   _ClearString 1822                        __size_of_bme280_set_regs 00A1  
                              ??_get_calib_data 0040                          put_device_to_sleep@dev 00A4  
                         bme280_soft_reset@rslt 0057                                     _GetAtRowCSV 10D9  
                        _fill_osr_temp_settings 273B              _EUSART1_DefaultFramingErrorHandler 0000  
    bme280_set_sensor_settings@desired_settings 00AB                                   PollGPS@counti 0041  
                          __end_of_UIntToString 2000                   bme280_set_sensor_settings@dev 006C  
                               __initialization 0010                           DebugAlert@num_flashes 0024  
                        _compensate_temperature 095D                                      _InitTiming 25CC  
             parse_humidity_calib_data@reg_data 007D                                  ?_ReadEnvSensor 002D  
                    __end_of_EUSART1_Initialize 1022                                    __end_of_main 0800  
                          GPS_HasAcknowledged@i 0031                                  __CFG_SAFEN$OFF 0000  
                            __size_of_ClearNMEA 001D                     ?_INTERRUPT_InterruptManager 0070  
                        _bme280_set_sensor_mode 1B59                           ??_put_device_to_sleep 0069  
                       __end_of_InsertTxDataSep 26CF                         ?_bme280_get_sensor_data 0061  
                     __end_of_bme280_soft_reset 1B59                         ?_bme280_get_sensor_mode 0040  
                                        ??_main 00E3                           __end_of_ReverseString 11A0  
                           __end_of_IntToString 1209                          __size_of_I2C_UserAlert 0003  
                       __size_of_WriteEnvSensor 0033                                ??_null_ptr_check 0070  
               bme280_compensate_data@comp_data 005C               bme280_set_sensor_mode@sensor_mode 00AB  
                              ReverseString@str 0028                                   ?_InsertTxData 0035  
                              __end_of_TimerISR 25EF                 compensate_pressure@pressure_max 00B5  
                              __end_of_SetupGPS 1DC6                       bme280_get_sensor_data@dev 0062  
                         ReadEnvSensor@reg_addr 002E                                   ?_InsertString 0029  
                         ReadEnvSensor@reg_data 002F             write_power_mode@sensor_mode_reg_val 005A  
                                        ?_Sleep 0070                        _bme280_parse_sensor_data 083E  
                                        ?_crc16 0021                                      Sleep@start 0078  
                        __size_of_I2C_WriteByte 000E                                ___llmod@dividend 0074  
                              ___awdiv@dividend 0072                                     ?_DebugAlert 0020  
                                        _ANSELA 1F38                                          _ANSELB 1F43  
                                        _ANSELC 1F4E                              __CFG_RSTOSC$HFINT1 0000  
                                        _T0CON0 059E                                          _T0CON1 059F  
                       __end_of_HALF_BAUD_DELAY 28B8                                __end_of_WriteGPS 1898  
                                        _RC1REG 0119                        _compensate_humidity$2719 003A  
                                        _RC1STA 011D                        ??_reload_device_settings 0065  
                                        _RB4PPS 1F1C                                          _RB6PPS 1F1E  
                                        _RB7PPS 1F1F                                          _ODCONA 1F3A  
                                        _ODCONB 1F45                                          _ODCONC 1F50  
                  __size_of_EUSART1_is_rx_ready 0005                                  __CFG_WDTCCS$SC 0000  
                                        _INLVLA 1F3C                                          _INLVLB 1F47  
                                        _INLVLC 1F52                                          _OSCFRQ 0893  
                                        _TX1REG 011A                                          _TX1STA 011E  
                           I2C_ReadByte@rcvdata 002C                                     Insert@index 0078  
                  __size_of_interleave_reg_addr 002D                       bme280_get_sensor_mode@dev 0040  
                     bme280_set_sensor_mode@dev 006C                           __size_of_ClearStringn 001C  
                    ?_parse_humidity_calib_data 0070                                       ??_PollGPS 0039  
                                        _Insert 12E1                                  __CFG_PWRTS$OFF 0000  
                  fill_filter_settings@reg_data 0075                                          ___lmul 1A21  
                             crc16_update@pData 0075                                       ??___aldiv 007C  
                                     ??___awdiv 0074                                  __CFG_STVREN$ON 0000  
                                     ??___awmod 0074                                       ??___lldiv 0078  
                  parse_humidity_calib_data@dev 0070                                       ??___llmod 0078  
                __end_of_bme280_get_sensor_data 10D9                             DebugAlert@delay_low 0022  
                      ?_EUSART1_SetErrorHandler 0070                  __end_of_bme280_get_sensor_mode 19F2  
                              ?_TMR0_Initialize 0070                  fill_osr_temp_settings@reg_data 0075  
                   compensate_pressure@pressure 00C5                                ___awdiv@quotient 0077  
                               ___awmod@divisor 0070                    fill_filter_settings@settings 0070  
                               ___awmod@counter 0075                ??_EUSART1_SetOverrunErrorHandler 0072  
               ?_EUSART1_SetOverrunErrorHandler 0070                                          _txdata 2764  
                                        _strcmp 19F2                                          _strlen 26A0  
                      interleave_reg_addr@index 0077                               get_calib_data@dev 005F  
                                ??_InsertTxData 007E                                    IntToString@i 002C  
                                  IntToString@n 007B                                 InsertString@src 002B  
                                _PMD_Initialize 25EF                                       ?_I2C_Init 0070  
                       compensate_pressure@var1 00C9                         compensate_pressure@var2 00C1  
                       compensate_pressure@var3 00A0                         compensate_pressure@var4 00A4  
                       compensate_pressure@var5 00A8                                  ??_InsertString 007C  
                                     ?_I2C_Stop 0070                  fill_osr_temp_settings@settings 0070  
                              ??_TransmitString 0025                             write_power_mode@dev 0053  
                               ??_EUSART1_Write 0070        TMR0_SetInterruptHandler@InterruptHandler 0070  
                         __size_of_GetLengthUBX 0012                                   ClearStringn@i 0074  
                                  _ClearStringn 2757                               __end_of_ClearNMEA 1822  
                       put_device_to_sleep@rslt 00A5                               ??_bme280_get_regs 003B  
                              _write_power_mode 1AE4                bme280_compensate_data@calib_data 005D  
                  interleave_reg_addr@temp_buff 0070                               _SYSTEM_Initialize 2643  
                       __end_of__initialization 0050                                _set_osr_settings 18EB  
                                 _I2C_UserAlert 25AC                              ?_SYSTEM_Initialize 0070  
                           main@convertedNumber 0150                            _UIntToHexString$1811 0030  
              compensate_temperature@calib_data 002E                 set_filter_standby_settings@rslt 005A  
                               ??_ReadEnvSensor 0032                             ReverseString@counti 0024  
                bme280_set_sensor_settings@rslt 00AD                         __size_of_I2C_Wait_SSPIF 0048  
                                 ??_bme280_init 0060                        get_calib_data@calib_data 0043  
                                __pcstackCOMMON 0070                                     ?_InitTiming 0070  
                                 __end_of_Sleep 1940                                  PollGPS@success 0043  
                                 _I2C_WriteByte 2635                __size_of_fill_osr_press_settings 001B  
                                  __pidataBANK4 196C                               ??_bme280_set_regs 0037  
                                 __end_of_crc16 27DA                             ??_SYSTEM_Initialize 0072  
                                   _IntToString 11A0                                       ?_TMR0_ISR 0070  
              set_osr_settings@desired_settings 0063                                   ??_TransmitBit 007C  
                           __size_of_DebugAlert 002A                                     PollGPS@byte 0046  
                        __end_of_PMD_Initialize 25F9                      __size_of_bme280_soft_reset 003C  
                              ?_InsertTxDataSep 007C                            __end_of_EUSART1_Read 2610  
                   ??_set_osr_humidity_settings 0056                           _parse_device_settings 1022  
                                  _GetLengthUBX 2652                                      ??_I2C_Init 0070  
                                    ??_I2C_Stop 007D                are_settings_changed@sub_settings 0071  
                                       ??_Sleep 0074                             set_osr_settings@dev 005F  
                                       ??_crc16 007E                     __end_of_GPS_HasAcknowledged 15D1  
                     __end_of_SYSTEM_Initialize 2652                                      __pbssBANK1 00E8  
                                    __pbssBANK2 0120                                      __pbssBANK3 01A0  
                                    __pbssBANK4 024C                                   ??_BME280_Init 00AE  
               __size_of_reload_device_settings 0026                     interleave_reg_addr@reg_addr 0076  
                         __size_of_UIntToString 0055                            __size_of_GPS_SendUBX 0027  
                                ?_I2C_UserAlert 0070                               ReverseString@temp 0022  
                   interleave_reg_addr@reg_data 0071                           InsertString@destLimit 002F  
                              _setNavFlightMode 0220                                         ?_Insert 0075  
               __end_of_EUSART1_SetErrorHandler 25C0                                      __pmaintext 05AC  
                                     ?_TimerISR 0070                                  ?_I2C_WriteByte 0070  
                                     ?_SetupGPS 0070                  set_osr_press_temp_settings@dev 0055  
              __end_of_TMR0_SetInterruptHandler 25BA                                         ?___lmul 0070  
                                    ??_TMR0_ISR 0070                  __size_of_fill_standby_settings 001C  
                               __CFG_PPS1WAY$ON 0000                   __end_of_fill_standby_settings 273B  
                                    __pintentry 0004                         ?_bme280_compensate_data 005B  
   set_filter_standby_settings@desired_settings 0059                                  ___lmul@product 0078  
                              ReadEnvSensor@len 0030                                       ?_WriteGPS 0075  
                           __end_of_bme280_init 1274                                 __CFG_ZCDDIS$OFF 0000  
                               ?_PMD_Initialize 0070                                  _WriteEnvSensor 1AB1  
                                       ?_strcmp 007B                                         ?_strlen 0070  
        __end_of_EUSART1_SetFramingErrorHandler 25C6         __size_of_EUSART1_SetFramingErrorHandler 0006  
                _EUSART1_SetFramingErrorHandler 25C0                    ??_bme280_set_sensor_settings 006D  
                           __end_of_TransmitBit 268B                                         _SP1BRGH 011C  
                                       _SP1BRGL 011B                                         _OSCCON1 088D  
                                       _OSCCON3 088F                                    _UIntToString 1FAB  
                                       _OSCTUNE 0892                    ?_parse_temp_press_calib_data 0070  
                                       _SSP1ADD 018D                                         _SLRCONA 1F3B  
                                       _SLRCONB 1F46                                         _SLRCONC 1F51  
                                       _SSP1BUF 018C                   set_osr_humidity_settings@rslt 005B  
                           __size_of_InitTiming 0008                                    Insert@length 0025  
                       ?_fill_osr_temp_settings 0070                    ?_set_osr_press_temp_settings 0053  
                                  ?_ClearTxData 0070                       _set_osr_humidity_settings 1EB5  
                                       Insert@i 0027                                    ?_ClearString 0070  
                                  ?_GetAtRowCSV 0076                   __size_of_fill_filter_settings 001C  
                  set_osr_humidity_settings@dev 0055                         ?_compensate_temperature 002E  
                          __end_of_InsertTxData 1A80                   bme280_soft_reset@soft_rst_cmd 0056  
                                       Sleep@ms 0070                                         _PollGPS 0B05  
                  __size_of_compensate_humidity 02CA                            __end_of_InsertString 1F59  
                           __end_of_BME280_Init 12E1                                 __size_of_Insert 0075  
                                    ??_TimerISR 0070                                      ??_SetupGPS 007C  
                       ?_bme280_set_sensor_mode 006C                  __end_of_bme280_compensate_data 14BD  
                                       ___aldiv 14BD                                GetLengthUBX@data 0073  
                                       ___awdiv 1E64                                 __size_of___lmul 002F  
                                       ___awmod 1C61                                         ___lldiv 1F59  
                                       ___llmod 1BDB                    __end_of_are_settings_changed 2604  
                        __end_of_WriteEnvSensor 1AE4                    __size_of_compensate_pressure 0558  
                        _reload_device_settings 27DA                             _EUSART1_is_rx_ready 1800  
                    ??_bme280_parse_sensor_data 0071                          ?_parse_device_settings 0070  
                                    ??_WriteGPS 0077                              crc16_update@length 0077  
                                       __ptext1 27B5                                         __ptext2 0801  
                                       __ptext3 107A                                         __ptext4 083E  
                                       __ptext5 1444                                         __ptext6 095D  
                                       __ptext7 0054                                         __ptext8 0D36  
                                       __ptext9 1A21             parse_humidity_calib_data@dig_H4_lsb 0074  
           parse_humidity_calib_data@dig_H4_msb 0076             parse_humidity_calib_data@dig_H5_lsb 0078  
           parse_humidity_calib_data@dig_H5_msb 007A                            DebugAlert@delay_high 0020  
                               __CFG_WRTAPP$OFF 0000                                 __size_of_strcmp 002F  
           parse_humidity_calib_data@calib_data 007C                                 __size_of_strlen 0017  
                           _interleave_reg_addr 1998                           _OSCILLATOR_Initialize 25DC  
                              ___awmod@dividend 0072                                ___aldiv@dividend 0024  
                            _EUSART1_Initialize 1001                        ??_PIN_MANAGER_Initialize 0070  
                               __CFG_WRTSAF$OFF 0000                              get_calib_data@F376 024C  
                     reload_device_settings@dev 0064                  __end_of_fill_osr_temp_settings 2757  
                                       main@end 0160                      __size_of_SYSTEM_Initialize 000F  
                                       clrloop0 2611                                    ??_DebugAlert 007C  
                 ??_parse_temp_press_calib_data 0071                                 ??_I2C_UserAlert 007D  
                          end_of_initialization 0050                 bme280_get_sensor_data@comp_data 0061  
                            get_calib_data@rslt 005E                            ?_EUSART1_is_rx_ready 0070  
                           ?_EUSART1_Initialize 0070                                InsertString@dest 0029  
         bme280_set_sensor_settings@sensor_mode 00AC                                         init_ram 261C  
                __end_of_compensate_temperature 0B05                     _EUSART1_OverrunErrorHandler 01E9  
                                       initloop 261D                   ??_set_osr_press_temp_settings 0056  
                          ?_interleave_reg_addr 0070                        __size_of_UIntToHexString 0078  
                               ??_I2C_WriteByte 007D                                 ___lldiv@divisor 0070  
                __end_of_bme280_set_sensor_mode 1B99                                  _I2C_Wait_SSPIF 1D32  
                               ___lldiv@counter 007D                     ??_parse_humidity_calib_data 0071  
                       _fill_osr_press_settings 26E8                     __end_of_put_device_to_sleep 1BDB  
                          write_power_mode@rslt 0058                                     _bme280_init 1209  
                      write_power_mode@reg_addr 0059                                ___aldiv@quotient 002A  
                    reload_device_settings@rslt 0068               compensate_temperature@temperature 0051  
                         __size_of_EUSART1_Read 000C                                      main@F11368 0120  
                          ??_EUSART1_Initialize 0072                                  ClearString@str 007A  
                               ?_WriteEnvSensor 002B                                         strcmp@l 0028  
                                       strcmp@r 007B                                     _TransmitBit 2677  
                         __CFG_WDTCPS$WDTCPS_31 0000                                         strlen@a 0073  
                      __end_of_write_power_mode 1B1D                                         strlen@s 0070  
                            __end_of_DebugAlert 18EB                        _TMR0_SetInterruptHandler 25B4  
                      __end_of_set_osr_settings 1915                                 _bme280_get_regs 1C1D  
                                 ?_TransmitChar 0070                              bme280_get_regs@dev 003A  
                               WriteEnvSensor@i 0032                              bme280_get_regs@len 0038  
                               TransmitString@i 0028                 fill_osr_press_settings@reg_data 0075  
                                GetAtRowCSV@col 0022                                    GPS_SendUBX@i 0077  
                                GetAtRowCSV@src 0076                               __size_of_I2C_Init 0015  
                             __size_of_I2C_Stop 0005                __size_of_EUSART1_SetErrorHandler 0006  
                           EUSART1_Write@txData 0070                                __CFG_FEXTOSC$OFF 0000  
                         ??_EUSART1_is_rx_ready 0070                    ?_set_filter_standby_settings 0053  
               fill_osr_press_settings@settings 0070                  compensate_humidity@uncomp_data 003E  
                               _bme280_set_regs 166A                                     _BME280_Init 1274  
                          bme280_init@try_count 0063                           ??_interleave_reg_addr 0073  
                        __end_of_I2C_Wait_SSPIF 1D7A                                    _EUSART1_Read 2604  
                     bme280_soft_reset@reg_addr 0058               compensate_temperature@uncomp_data 004C  
                                _gps_configured 00EC                                       _ClearNMEA 1805  
                          ReverseString@halfway 0020                          __size_of_ReverseString 0065  
                         TransmitString@message 0023                                    ??_InitTiming 0072  
          __size_of_parse_temp_press_calib_data 00F5                                  __end_of_Insert 1356  
                                  ?_IntToString 007B                                  __end_of___lmul 1A50  
                       __size_of_get_calib_data 004D                                       Insert@src 0077  
          __size_of_set_osr_press_temp_settings 0046                               __size_of_TMR0_ISR 000D  
            __end_of_bme280_set_sensor_settings 13CC                      _bme280_set_sensor_settings 1356  
                        ?_OSCILLATOR_Initialize 0070                  parse_temp_press_calib_data@dev 0070  
                                     _EnvSensor 01A0                                  ??_TransmitChar 007D  
                      bme280_set_regs@temp_buff 003A                                  __end_of_strcmp 1A21  
                     _parse_humidity_calib_data 15D1                                  __end_of_strlen 26B7  
                           start_initialization 0010                             UIntToHexString@dest 002D  
                                  PollGPS@index 0049                        __size_of_TMR0_Initialize 0013  
               __size_of_PIN_MANAGER_Initialize 0029           parse_temp_press_calib_data@calib_data 0072  
                              UIntToHexString@i 0038                                UIntToHexString@n 0029  
                            __end_of_InitTiming 25D4                           __end_of_EUSART1_Write 25DC  
                             InsertTxData@field 0037                           __size_of_InsertTxData 0030  
                             InsertTxData@index 0035                            _are_settings_changed 25F9  
                            I2C_ReadByte@ackbit 002B                         __size_of_null_ptr_check 0025  
                         __size_of_InsertString 0052                   ??_set_filter_standby_settings 0056  
                               ___llmod@divisor 0070                                 ?_I2C_Wait_SSPIF 0070  
                     ??_fill_osr_press_settings 0072                                 ___llmod@counter 0079  
                                    ?_ClearNMEA 0070                            __size_of_ClearTxData 001D  
                          __size_of_ClearString 0027                                        ??_Insert 0020  
                              __CFG_LPBOREN$OFF 0000                            __size_of_GetAtRowCSV 0062  
                                  ClearTxData@i 0072                                ??_PMD_Initialize 0070  
                            bme280_init@chip_id 0064                           __end_of_ReadEnvSensor 1E64  
                          set_osr_settings@rslt 0062                                        ??___lmul 0078  
            __size_of_set_osr_humidity_settings 0052                         __end_of_bme280_get_regs 1C61  
                               BME280_Init@rslt 00B1                               ??_UIntToHexString 002E  
                             __size_of_TimerISR 000A                                     __pdataBANK4 0220  
                             __size_of_SetupGPS 004C                              null_ptr_check@rslt 0072  
                                  ClearString@i 0078                                        ??_strcmp 007D  
                                      ??_strlen 0072                                   ?_crc16_update 0075  
                    compensate_temperature@var1 0048                      compensate_temperature@var2 004D  
         compensate_temperature@temperature_max 0044                                   _ReverseString 113B  
                                  GetAtRowCSV@i 0026                               __size_of_WriteGPS 0028  
                                   __pbssBIGRAM 26D8                                    _InsertTxData 1A50  
                                     ___latbits 0003                             _compensate_humidity 0D36  
                                 __pcstackBANK0 0020                                   __pcstackBANK1 00A0  
                                 __pcstackBANK2 0150                                   ?_I2C_ReadByte 0070  
                       __end_of_bme280_set_regs 170B                                    _InsertString 1F07  
                                 crc16_update@i 0020                        __size_of_InsertTxDataSep 0018  
                                 ??_GPS_SendUBX 0074                        _compensate_pressure$2716 00B9  
                      _compensate_pressure$2717 00AC                        _compensate_pressure$2718 00B0  
                         ?_are_settings_changed 0070                             _compensate_pressure 0054  
              ??_EUSART1_SetFramingErrorHandler 0072                 ?_EUSART1_SetFramingErrorHandler 0070  
                        PollGPS@eusart_complete 0045             bme280_set_sensor_mode@last_set_mode 00AC  
             set_osr_humidity_settings@ctrl_hum 0059                                       crc16@data 0021  
                       __size_of_TransmitString 002C                           _TMR0_InterruptHandler 00EE  
                                     WriteGPS@i 007A                                       __pnvBANK1 00EE  
                                     __pnvBANK3 01E7                    __size_of_GPS_HasAcknowledged 0092  
             set_osr_humidity_settings@reg_addr 005C                        set_osr_settings@settings 005D  
                      ??_bme280_get_sensor_data 0063                            ?_compensate_humidity 002E  
                      ??_bme280_get_sensor_mode 0041                                        ?_PollGPS 0070  
                        _PIN_MANAGER_Initialize 1898                         ?_reload_device_settings 0064  
                       ??_parse_device_settings 0071                                        ?___aldiv 0020  
                                      ?___awdiv 0070                                        ?___awmod 0070  
                                      ?___lldiv 0070             set_filter_standby_settings@reg_addr 005B  
                                      ?___llmod 0070             set_filter_standby_settings@reg_data 005C  
             set_osr_humidity_settings@settings 0053                 set_osr_press_temp_settings@rslt 005A  
                          ?_compensate_pressure 002E            __size_of_set_filter_standby_settings 0046  
             __end_of_set_osr_humidity_settings 1F07                    ??_INTERRUPT_InterruptManager 0070  
                         _fill_standby_settings 271F                    __end_of_fill_filter_settings 271F  
                                ??_crc16_update 007B                 __end_of_fill_osr_press_settings 2703  
                                ?_ReverseString 0070                                        _BAUD1CON 011F  
           set_filter_standby_settings@settings 0053              _EUSART1_DefaultOverrunErrorHandler 0000  
                                  _PollGPS$2720 0044                                        _I2C_Init 268B  
                                      _I2C_Stop 25AF                            _EUSART1_ErrorHandler 01E7  
                                ??_I2C_ReadByte 007D                              ClearStringn@length 0070  
                             ReadEnvSensor@rslt 0034                         _EUSART1_SetErrorHandler 25BA  
                                __size_of_Sleep 002B                                  __size_of_crc16 0025  
                          InsertTxDataSep@index 007C                                       _nmea_data 26D8  
   set_osr_press_temp_settings@desired_settings 0059                                 ___aldiv@divisor 0020  
                             ??_TMR0_Initialize 0072                                 ___aldiv@counter 0028  
                                      _LATAbits 0018         EUSART1_SetErrorHandler@interruptHandler 0070  
                                      _LATCbits 001A                         BME280_Init@settings_sel 00B0  
                                   ??_ClearNMEA 0070                             __end_of_GPS_SendUBX 1870  
                                     clear_ram0 2610                            __end_of_TransmitChar 1AB1  
                                      _PIE0bits 0716                           ??_compensate_humidity 0032  
                __end_of_reload_device_settings 2800             __size_of_INTERRUPT_InterruptManager 000A  
           parse_temp_press_calib_data@reg_data 0073                                ??_WriteEnvSensor 0030  
                    ??_TMR0_SetInterruptHandler 0072                                        _PIR0bits 070C  
                                      _PIR3bits 070F                                        _RX1DTPPS 1ECB  
                                  ?_bme280_init 0070                                     DebugAlert@i 0025  
                                 UIntToString@i 0030                                   UIntToString@n 0029  
                bme280_get_sensor_data@reg_data 00CD                               __CFG_BBSIZE$BB512 0000  
                                      _SSP1CON1 0190                                        _SSP1CON2 0191  
                                      _SSP1CON3 0192                                        _TMR0_ISR 2628  
                         ??_compensate_pressure 0032                                        _SSP1STAT 018F  
                              ?_bme280_get_regs 0037                                  _get_calib_data 1DC6  
                                  ?_TransmitBit 0070                            __size_of_IntToString 0069  
                             ?_write_power_mode 0053                     compensate_humidity@humidity 0043  
                             ?_set_osr_settings 005D                            WriteEnvSensor@dev_id 002B  
                            ??_write_power_mode 0054                                       main@index 016E  
                       compensate_humidity@var1 0047                         compensate_humidity@var2 004B  
                       compensate_humidity@var3 0057                         compensate_humidity@var4 004F  
                       compensate_humidity@var5 0053                              ??_set_osr_settings 0060  
                          TransmitString@counti 0026                         bme280_get_regs@reg_addr 003E  
                       bme280_set_regs@reg_addr 0052                         bme280_get_regs@reg_data 0037  
                       bme280_set_regs@reg_data 0034                                ?_bme280_set_regs 0034  
             bme280_get_sensor_mode@sensor_mode 0045                          ??_are_settings_changed 0071  
                                 ?_ClearStringn 0070                               ___lmul@multiplier 0070  
                       bme280_set_regs@temp_len 004E               __size_of_bme280_parse_sensor_data 011F  
                     ?_bme280_parse_sensor_data 0070                                  _null_ptr_check 2790  
            __size_of_parse_humidity_calib_data 0099                                    ?_BME280_Init 0070  
                         __end_of_I2C_UserAlert 25AF                                        PollGPS@i 0047  
                           ReadEnvSensor@dev_id 002D                     bme280_set_regs@reg_addr_cnt 0050  
                             ??_InsertTxDataSep 0029                              InsertString@counti 0031  
                               IntToString@dest 007D                                 IntToString@sign 002B  
               __size_of_bme280_get_sensor_data 005F                             bme280_set_regs@rslt 0051  
               __size_of_bme280_get_sensor_mode 002D                           __end_of_I2C_WriteByte 2643  
                                      _TimerISR 25E5                                        _SetupGPS 1D7A  
                              __size_of_PollGPS 0231                          __end_of_get_calib_data 1E13  
                             null_ptr_check@dev 0073                                   InsertString@i 0033  
                       ??_OSCILLATOR_Initialize 0070                                __size_of___aldiv 0082  
                              __size_of___awdiv 0051                          ?_fill_standby_settings 0070  
                              __size_of___awmod 0045                                __size_of___lldiv 0052  
                              __size_of___llmod 0042                     __size_of_EUSART1_Initialize 0021  
                               ??_ReverseString 0079                                        _WriteGPS 1870  
                  __size_of_put_device_to_sleep 0042                                   ?_GetLengthUBX 0070  
                   ?_bme280_set_sensor_settings 006C                               ClearString@counti 0076  
                     ??_EUSART1_SetErrorHandler 0072                     _EUSART1_DefaultErrorHandler 0000  
                                      crc16@crc 0023                     __end_of_EUSART1_is_rx_ready 1805  
                                    _T0CON0bits 059E                                        _checksum 014A  
           __end_of_parse_temp_press_calib_data 1800                     _parse_temp_press_calib_data 170B  
                           I2C_UserAlert@status 0070                  set_filter_standby_settings@dev 0055  
                                ReadEnvSensor@i 0035                                        __ptext10 14BD  
                                      __ptext11 1FAB                                        __ptext20 2652  
                                      __ptext12 1BDB                                        __ptext21 153F  
                                      __ptext13 1F59                                        __ptext30 25BA  
                                      __ptext22 2643                                        __ptext14 13CC  
                                      __ptext31 0B05                                        __ptext23 2664  
                                      __ptext15 1940                                        __ptext40 2757  
                                      __ptext32 19F2                                        __ptext24 25EF  
                                      __ptext16 1A80                                        __ptext41 1800  
                                      __ptext33 1870                                        __ptext25 1898  
                                      __ptext17 2677                                        __ptext50 2773  
                                      __ptext42 2604                                        __ptext34 25D4  
                                      __ptext26 25DC                                        __ptext18 1D7A  
                                      __ptext51 1822                                        __ptext43 1805  
                                      __ptext35 1A50                                        __ptext27 1001  
                                      __ptext19 1849                                  ??_ClearStringn 0072  
                                      __ptext60 18EB                                        __ptext52 26A0  
                                      __ptext44 11A0                                        __ptext36 26B7  
                                      __ptext28 25C6                                        __ptext61 1CEC  
                                      __ptext53 1274                                        __ptext45 1C61  
                                      __ptext37 1F07                                        __ptext29 25C0  
                                      __ptext70 1209                                        __ptext62 273B  
                                      __ptext54 1356                                        __ptext46 113B  
                                      __ptext38 12E1                                        __ptext71 1DC6  
                                      __ptext63 26E8                                        __ptext55 25F9  
                                      __ptext47 1E64                                        __ptext39 10D9  
                                      __ptext80 1998                                        __ptext72 170B  
                                      __ptext64 1EB5                                        __ptext56 1B59  
                                      __ptext48 25CC                                        __ptext81 1AB1  
                                      __ptext73 15D1                                        __ptext65 1CA6  
                                      __ptext57 1AE4                                        __ptext49 25B4  
                                      __ptext90 2628                                        __ptext82 2635  
                                      __ptext74 1C1D                                        __ptext66 271F  
                                      __ptext58 1B99                                        __ptext91 0003  
                                      __ptext83 25AC                                        __ptext75 1E13  
                                      __ptext67 2703                                        __ptext59 27DA  
                                      __ptext92 25E5                                        __ptext84 25AF  
                                      __ptext76 26CF                                        __ptext68 1022  
                                      __ptext85 1D32                                        __ptext77 1B1D  
                                      __ptext69 19C5                                        __ptext86 18C1  
                                      __ptext78 166A                                        __ptext87 1915  
                                      __ptext79 2790                                        __ptext88 268B  
                   __end_of_interleave_reg_addr 19C5                                    _SSP1CON1bits 0190  
                        __end_of_null_ptr_check 27B5                                    _SSP1CON2bits 0191  
                              ??_I2C_Wait_SSPIF 0027                                        _csvField 01D3  
                                   _GPS_SendUBX 1849             __end_of_set_osr_press_temp_settings 1D32  
                   _set_osr_press_temp_settings 1CEC                   compensate_pressure@calib_data 002E  
                               _UIntToHexString 13CC                                  _TransmitString 1940  
                                 __size_of_main 0254               bme280_compensate_data@sensor_comp 0060  
                      ??_bme280_compensate_data 005E                            _fill_filter_settings 2703  
             __end_of_parse_humidity_calib_data 166A                            __end_of_crc16_update 083E  
          __end_of_TMR0_DefaultInterruptHandler 0004           __size_of_TMR0_DefaultInterruptHandler 0001  
                  _TMR0_DefaultInterruptHandler 0003                            __CFG_WDTCWS$WDTCWS_7 0000  
                          __end_of_I2C_ReadByte 26E8                                      _RC1STAbits 011D  
EUSART1_SetOverrunErrorHandler@interruptHandler 0070                                TransmitChar@byte 0020  
                               ?_get_calib_data 0070                     _compensate_temperature$2715 003C  
                                      int$flags 007E              __end_of_INTERRUPT_InterruptManager 000E  
                    _INTERRUPT_InterruptManager 0004                                      ClearNMEA@i 0072  
                              UIntToString@dest 002D                     _EUSART1_FramingErrorHandler 01EB  
                                ??_GetLengthUBX 0073                                 main@sensor_data 0162  
                      ??_fill_osr_temp_settings 0072                             _GPS_HasAcknowledged 153F  
                                    _INTCONbits 000B                          _bme280_get_sensor_data 107A  
                             InsertString@index 002D                          _bme280_get_sensor_mode 19C5  
            set_osr_humidity_settings@ctrl_meas 005A                                   ?_UIntToString 0029  
                            bme280_set_regs@dev 0036                              bme280_set_regs@len 0035  
                 parse_device_settings@reg_data 0073                                  __pstringtext10 28B1  
                                __pstringtext11 28B8                                  __pstringtext12 28BA  
                                __pstringtext13 0000                        ??_compensate_temperature 0032  
             bme280_compensate_data@uncomp_data 005B                                 ?_null_ptr_check 0070  
                    bme280_get_sensor_data@F271 013C                      bme280_get_sensor_data@F273 0130  
                         __size_of_TransmitChar 0031                          __end_of_TransmitString 196C  
                                      intlevel1 0000                                   ??_ClearTxData 0070  
                      ??_bme280_set_sensor_mode 006D                   parse_device_settings@settings 0070  
                 fill_standby_settings@reg_data 0075                                   ??_ClearString 0075  
                              ___lldiv@dividend 0074                           ?_fill_filter_settings 0070  
                                 ??_GetAtRowCSV 007A                         ?_PIN_MANAGER_Initialize 0070  
                    bme280_get_sensor_data@rslt 00D6                               __CFG_CLKOUTEN$OFF 0000  
        __end_of_EUSART1_SetOverrunErrorHandler 25CC         __size_of_EUSART1_SetOverrunErrorHandler 0006  
                _EUSART1_SetOverrunErrorHandler 25C6                            ?_GPS_HasAcknowledged 0070  
                 ?_TMR0_DefaultInterruptHandler 0070                   fill_standby_settings@settings 0070  
                  GPS_HasAcknowledged@ackByteID 0030                    GPS_HasAcknowledged@ackPacket 0025  
                            WriteEnvSensor@rslt 0031  EUSART1_SetFramingErrorHandler@interruptHandler 0070  
                          __size_of_bme280_init 006B                  __size_of_parse_device_settings 0058  
                 __end_of_parse_device_settings 107A                          __size_of_EUSART1_Write 0008  
                            _eusart1RxLastError 00ED                                   __pstringtext1 28B6  
                                 __pstringtext2 2800                                   __pstringtext3 281A  
                                 __pstringtext4 2834                                   __pstringtext5 284E  
                                 __pstringtext6 2868                                   __pstringtext7 2882  
                                 __pstringtext8 289C                                   __pstringtext9 28AA  
                          __size_of_TransmitBit 0014                                      _SSP1DATPPS 1EC6  
                                    _SSP1CLKPPS 1EC5                                    _TransmitChar 1A80  
                              ___lldiv@quotient 0079                                  ??_UIntToString 002E  
                               _TMR0_Initialize 2664                                 ClearStringn@str 0073  
          are_settings_changed@settings_changed 0072                                    ___aldiv@sign 0029  
                       __end_of_UIntToHexString 1444                               WriteEnvSensor@len 002E  
                                    _TX1STAbits 011E             __end_of_set_filter_standby_settings 1CEC  
                   _set_filter_standby_settings 1CA6                      bme280_get_sensor_mode@rslt 0044  
                        __size_of_ReadEnvSensor 0051                        ?_fill_osr_press_settings 0070  
                    bme280_set_sensor_mode@rslt 00AD                                 ?_TransmitString 0023  
                __end_of_PIN_MANAGER_Initialize 18C1                                 Insert@destLimit 007A  
           set_osr_press_temp_settings@reg_addr 005B             set_osr_press_temp_settings@reg_data 005C  
                           bme280_get_regs@rslt 003F                           ??_GPS_HasAcknowledged 0070  
                             I2C_WriteByte@data 007D                 __size_of_bme280_compensate_data 0079  
                          __size_of_BME280_Init 006D             __size_of_bme280_set_sensor_settings 0076  
             bme280_get_sensor_data@sensor_comp 00D5                             __end_of_ClearTxData 2790  
                   write_power_mode@sensor_mode 0057             set_osr_press_temp_settings@settings 0053  
