

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon Sep 16 11:38:06 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F18446
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK4,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     7                           	psect	nvBANK3,global,class=BANK3,space=1,delta=1
     8                           	psect	stringtext2,global,class=STRCODE,delta=2
     9                           	psect	stringtext3,global,class=STRCODE,delta=2
    10                           	psect	stringtext4,global,class=STRCODE,delta=2
    11                           	psect	stringtext5,global,class=STRCODE,delta=2
    12                           	psect	stringtext6,global,class=STRCODE,delta=2
    13                           	psect	stringtext7,global,class=STRCODE,delta=2
    14                           	psect	stringtext8,global,class=STRCODE,delta=2
    15                           	psect	stringtext9,global,class=STRCODE,delta=2
    16                           	psect	stringtext10,global,class=STRCODE,delta=2
    17                           	psect	stringtext11,global,class=STRCODE,delta=2
    18                           	psect	stringtext12,global,class=STRCODE,delta=2
    19                           	psect	stringtext13,global,class=STRCODE,delta=2
    20                           	psect	cinit,global,class=CODE,merge=1,delta=2
    21                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    22                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    23                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    24                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    25                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1
    26                           	psect	inittext,global,class=CODE,delta=2
    27                           	psect	clrtext,global,class=CODE,delta=2
    28                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    29                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    30                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    31                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    32                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    33                           	psect	text1,local,class=CODE,merge=1,delta=2
    34                           	psect	text2,local,class=CODE,merge=1,delta=2
    35                           	psect	text3,local,class=CODE,merge=1,delta=2
    36                           	psect	text4,local,class=CODE,merge=1,delta=2
    37                           	psect	text5,local,class=CODE,merge=1,delta=2
    38                           	psect	text6,local,class=CODE,merge=1,delta=2
    39                           	psect	text7,local,class=CODE,merge=1,delta=2
    40                           	psect	text8,local,class=CODE,merge=1,delta=2
    41                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    42                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    43                           	psect	text11,local,class=CODE,merge=1,delta=2
    44                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    45                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    46                           	psect	text14,local,class=CODE,merge=1,delta=2
    47                           	psect	text15,local,class=CODE,merge=1,delta=2
    48                           	psect	text16,local,class=CODE,merge=1,delta=2
    49                           	psect	text17,local,class=CODE,merge=1,delta=2
    50                           	psect	text18,local,class=CODE,merge=1,delta=2
    51                           	psect	text19,local,class=CODE,merge=1,delta=2
    52                           	psect	text20,local,class=CODE,merge=1,delta=2
    53                           	psect	text21,local,class=CODE,merge=1,delta=2
    54                           	psect	text22,local,class=CODE,merge=1,delta=2
    55                           	psect	text23,local,class=CODE,merge=1,delta=2
    56                           	psect	text24,local,class=CODE,merge=1,delta=2
    57                           	psect	text25,local,class=CODE,merge=1,delta=2
    58                           	psect	text26,local,class=CODE,merge=1,delta=2
    59                           	psect	text27,local,class=CODE,merge=1,delta=2
    60                           	psect	text28,local,class=CODE,merge=1,delta=2
    61                           	psect	text29,local,class=CODE,merge=1,delta=2
    62                           	psect	text30,local,class=CODE,merge=1,delta=2
    63                           	psect	text31,local,class=CODE,merge=1,delta=2
    64                           	psect	text32,local,class=CODE,merge=1,delta=2,group=2
    65                           	psect	text33,local,class=CODE,merge=1,delta=2
    66                           	psect	text34,local,class=CODE,merge=1,delta=2
    67                           	psect	text35,local,class=CODE,merge=1,delta=2
    68                           	psect	text36,local,class=CODE,merge=1,delta=2
    69                           	psect	text37,local,class=CODE,merge=1,delta=2
    70                           	psect	text38,local,class=CODE,merge=1,delta=2
    71                           	psect	text39,local,class=CODE,merge=1,delta=2
    72                           	psect	text40,local,class=CODE,merge=1,delta=2
    73                           	psect	text41,local,class=CODE,merge=1,delta=2
    74                           	psect	text42,local,class=CODE,merge=1,delta=2
    75                           	psect	text43,local,class=CODE,merge=1,delta=2
    76                           	psect	text44,local,class=CODE,merge=1,delta=2
    77                           	psect	text45,local,class=CODE,merge=1,delta=2,group=1
    78                           	psect	text46,local,class=CODE,merge=1,delta=2
    79                           	psect	text47,local,class=CODE,merge=1,delta=2,group=1
    80                           	psect	text48,local,class=CODE,merge=1,delta=2
    81                           	psect	text49,local,class=CODE,merge=1,delta=2
    82                           	psect	text50,local,class=CODE,merge=1,delta=2
    83                           	psect	text51,local,class=CODE,merge=1,delta=2
    84                           	psect	text52,local,class=CODE,merge=1,delta=2,group=2
    85                           	psect	text53,local,class=CODE,merge=1,delta=2
    86                           	psect	text54,local,class=CODE,merge=1,delta=2
    87                           	psect	text55,local,class=CODE,merge=1,delta=2
    88                           	psect	text56,local,class=CODE,merge=1,delta=2
    89                           	psect	text57,local,class=CODE,merge=1,delta=2
    90                           	psect	text58,local,class=CODE,merge=1,delta=2
    91                           	psect	text59,local,class=CODE,merge=1,delta=2
    92                           	psect	text60,local,class=CODE,merge=1,delta=2
    93                           	psect	text61,local,class=CODE,merge=1,delta=2
    94                           	psect	text62,local,class=CODE,merge=1,delta=2
    95                           	psect	text63,local,class=CODE,merge=1,delta=2
    96                           	psect	text64,local,class=CODE,merge=1,delta=2
    97                           	psect	text65,local,class=CODE,merge=1,delta=2
    98                           	psect	text66,local,class=CODE,merge=1,delta=2
    99                           	psect	text67,local,class=CODE,merge=1,delta=2
   100                           	psect	text68,local,class=CODE,merge=1,delta=2
   101                           	psect	text69,local,class=CODE,merge=1,delta=2
   102                           	psect	text70,local,class=CODE,merge=1,delta=2
   103                           	psect	text71,local,class=CODE,merge=1,delta=2
   104                           	psect	text72,local,class=CODE,merge=1,delta=2
   105                           	psect	text73,local,class=CODE,merge=1,delta=2
   106                           	psect	text74,local,class=CODE,merge=1,delta=2
   107                           	psect	text75,local,class=CODE,merge=1,delta=2
   108                           	psect	text76,local,class=CODE,merge=1,delta=2
   109                           	psect	text77,local,class=CODE,merge=1,delta=2
   110                           	psect	text78,local,class=CODE,merge=1,delta=2
   111                           	psect	text79,local,class=CODE,merge=1,delta=2
   112                           	psect	text80,local,class=CODE,merge=1,delta=2
   113                           	psect	text81,local,class=CODE,merge=1,delta=2
   114                           	psect	text82,local,class=CODE,merge=1,delta=2
   115                           	psect	text83,local,class=CODE,merge=1,delta=2
   116                           	psect	text84,local,class=CODE,merge=1,delta=2
   117                           	psect	text85,local,class=CODE,merge=1,delta=2
   118                           	psect	text86,local,class=CODE,merge=1,delta=2
   119                           	psect	text87,local,class=CODE,merge=1,delta=2
   120                           	psect	text88,local,class=CODE,merge=1,delta=2
   121                           	psect	intentry,global,class=CODE,delta=2
   122                           	psect	text90,local,class=CODE,merge=1,delta=2
   123                           	psect	text91,local,class=CODE,merge=1,delta=2
   124                           	psect	text92,local,class=CODE,merge=1,delta=2
   125                           	dabs	1,0xCA0,32
   126                           	dabs	1,0xC20,80
   127                           	dabs	1,0xBD4,28
   128                           	dabs	1,0xBA0,52
   129                           	dabs	1,0xB20,80
   130                           	dabs	1,0xAE8,8
   131                           	dabs	1,0x26D8,0,_nmea_data
   132                           	dabs	1,0x2764,0,_txdata
   133                           	dabs	1,0x7E,2
   134  0000                     
   135                           ; Version 2.05
   136                           ; Generated 20/12/2018 GMT
   137                           ; 
   138                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   139                           ; All rights reserved.
   140                           ; 
   141                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   142                           ; 
   143                           ; Redistribution and use in source and binary forms, with or without modification, are
   144                           ; permitted provided that the following conditions are met:
   145                           ; 
   146                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   147                           ;        conditions and the following disclaimer.
   148                           ; 
   149                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   150                           ;        of conditions and the following disclaimer in the documentation and/or other
   151                           ;        materials provided with the distribution.
   152                           ; 
   153                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   154                           ;        software without specific prior written permission.
   155                           ; 
   156                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   157                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   158                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   159                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   160                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   161                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   162                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   163                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   164                           ; 
   165                           ; 
   166                           ; Code-generator required, PIC16F18446 Definitions
   167                           ; 
   168                           ; SFR Addresses
   169  0000                     	;# 
   170  0001                     	;# 
   171  0002                     	;# 
   172  0003                     	;# 
   173  0004                     	;# 
   174  0005                     	;# 
   175  0006                     	;# 
   176  0007                     	;# 
   177  0008                     	;# 
   178  0009                     	;# 
   179  000A                     	;# 
   180  000B                     	;# 
   181  000C                     	;# 
   182  000D                     	;# 
   183  000E                     	;# 
   184  0012                     	;# 
   185  0013                     	;# 
   186  0014                     	;# 
   187  0018                     	;# 
   188  0019                     	;# 
   189  001A                     	;# 
   190  008C                     	;# 
   191  008C                     	;# 
   192  008D                     	;# 
   193  008E                     	;# 
   194  008E                     	;# 
   195  008F                     	;# 
   196  0090                     	;# 
   197  0090                     	;# 
   198  0091                     	;# 
   199  0092                     	;# 
   200  0092                     	;# 
   201  0093                     	;# 
   202  0094                     	;# 
   203  0094                     	;# 
   204  0095                     	;# 
   205  0096                     	;# 
   206  0096                     	;# 
   207  0097                     	;# 
   208  0098                     	;# 
   209  0099                     	;# 
   210  009A                     	;# 
   211  009B                     	;# 
   212  009B                     	;# 
   213  009C                     	;# 
   214  009D                     	;# 
   215  009D                     	;# 
   216  009E                     	;# 
   217  009F                     	;# 
   218  010C                     	;# 
   219  010C                     	;# 
   220  010D                     	;# 
   221  010E                     	;# 
   222  010F                     	;# 
   223  010F                     	;# 
   224  0110                     	;# 
   225  0111                     	;# 
   226  0112                     	;# 
   227  0113                     	;# 
   228  0114                     	;# 
   229  0115                     	;# 
   230  0116                     	;# 
   231  0117                     	;# 
   232  0118                     	;# 
   233  0119                     	;# 
   234  0119                     	;# 
   235  0119                     	;# 
   236  011A                     	;# 
   237  011A                     	;# 
   238  011A                     	;# 
   239  011B                     	;# 
   240  011B                     	;# 
   241  011B                     	;# 
   242  011B                     	;# 
   243  011B                     	;# 
   244  011C                     	;# 
   245  011C                     	;# 
   246  011C                     	;# 
   247  011D                     	;# 
   248  011D                     	;# 
   249  011D                     	;# 
   250  011E                     	;# 
   251  011E                     	;# 
   252  011E                     	;# 
   253  011F                     	;# 
   254  011F                     	;# 
   255  011F                     	;# 
   256  011F                     	;# 
   257  011F                     	;# 
   258  018C                     	;# 
   259  018D                     	;# 
   260  018E                     	;# 
   261  018F                     	;# 
   262  0190                     	;# 
   263  0191                     	;# 
   264  0192                     	;# 
   265  0196                     	;# 
   266  0197                     	;# 
   267  0198                     	;# 
   268  0199                     	;# 
   269  019A                     	;# 
   270  019B                     	;# 
   271  019C                     	;# 
   272  020C                     	;# 
   273  020D                     	;# 
   274  020E                     	;# 
   275  020E                     	;# 
   276  020F                     	;# 
   277  020F                     	;# 
   278  0210                     	;# 
   279  0210                     	;# 
   280  0211                     	;# 
   281  0211                     	;# 
   282  0212                     	;# 
   283  0213                     	;# 
   284  0214                     	;# 
   285  0214                     	;# 
   286  0215                     	;# 
   287  0215                     	;# 
   288  0216                     	;# 
   289  0216                     	;# 
   290  0217                     	;# 
   291  0217                     	;# 
   292  0218                     	;# 
   293  0219                     	;# 
   294  021A                     	;# 
   295  021A                     	;# 
   296  021B                     	;# 
   297  021B                     	;# 
   298  021C                     	;# 
   299  021C                     	;# 
   300  021D                     	;# 
   301  021D                     	;# 
   302  021E                     	;# 
   303  021F                     	;# 
   304  028C                     	;# 
   305  028C                     	;# 
   306  028D                     	;# 
   307  028D                     	;# 
   308  028E                     	;# 
   309  028F                     	;# 
   310  0290                     	;# 
   311  0291                     	;# 
   312  0292                     	;# 
   313  0292                     	;# 
   314  0293                     	;# 
   315  0293                     	;# 
   316  0294                     	;# 
   317  0295                     	;# 
   318  0296                     	;# 
   319  0297                     	;# 
   320  0298                     	;# 
   321  0298                     	;# 
   322  0299                     	;# 
   323  0299                     	;# 
   324  029A                     	;# 
   325  029B                     	;# 
   326  029C                     	;# 
   327  029D                     	;# 
   328  029F                     	;# 
   329  030C                     	;# 
   330  030C                     	;# 
   331  030D                     	;# 
   332  030E                     	;# 
   333  030F                     	;# 
   334  0310                     	;# 
   335  0310                     	;# 
   336  0311                     	;# 
   337  0312                     	;# 
   338  0313                     	;# 
   339  0314                     	;# 
   340  0314                     	;# 
   341  0315                     	;# 
   342  0316                     	;# 
   343  0317                     	;# 
   344  0318                     	;# 
   345  0318                     	;# 
   346  0319                     	;# 
   347  031A                     	;# 
   348  031B                     	;# 
   349  038C                     	;# 
   350  038C                     	;# 
   351  038D                     	;# 
   352  038E                     	;# 
   353  0390                     	;# 
   354  0390                     	;# 
   355  0391                     	;# 
   356  0392                     	;# 
   357  048C                     	;# 
   358  048C                     	;# 
   359  048D                     	;# 
   360  048E                     	;# 
   361  048F                     	;# 
   362  048F                     	;# 
   363  0490                     	;# 
   364  0491                     	;# 
   365  0492                     	;# 
   366  0492                     	;# 
   367  0493                     	;# 
   368  0494                     	;# 
   369  0495                     	;# 
   370  0495                     	;# 
   371  0496                     	;# 
   372  0497                     	;# 
   373  0498                     	;# 
   374  0499                     	;# 
   375  049A                     	;# 
   376  049B                     	;# 
   377  049C                     	;# 
   378  049D                     	;# 
   379  058C                     	;# 
   380  058C                     	;# 
   381  058D                     	;# 
   382  058E                     	;# 
   383  058F                     	;# 
   384  058F                     	;# 
   385  0590                     	;# 
   386  0591                     	;# 
   387  0592                     	;# 
   388  0593                     	;# 
   389  059C                     	;# 
   390  059C                     	;# 
   391  059D                     	;# 
   392  059D                     	;# 
   393  059E                     	;# 
   394  059F                     	;# 
   395  060C                     	;# 
   396  060C                     	;# 
   397  060D                     	;# 
   398  060D                     	;# 
   399  060E                     	;# 
   400  060F                     	;# 
   401  0610                     	;# 
   402  0611                     	;# 
   403  0612                     	;# 
   404  0613                     	;# 
   405  0614                     	;# 
   406  0616                     	;# 
   407  0616                     	;# 
   408  0617                     	;# 
   409  0617                     	;# 
   410  0618                     	;# 
   411  0619                     	;# 
   412  061A                     	;# 
   413  061B                     	;# 
   414  061C                     	;# 
   415  061D                     	;# 
   416  061E                     	;# 
   417  070C                     	;# 
   418  070D                     	;# 
   419  070E                     	;# 
   420  070F                     	;# 
   421  0710                     	;# 
   422  0711                     	;# 
   423  0712                     	;# 
   424  0713                     	;# 
   425  0714                     	;# 
   426  0716                     	;# 
   427  0717                     	;# 
   428  0718                     	;# 
   429  0719                     	;# 
   430  071A                     	;# 
   431  071B                     	;# 
   432  071C                     	;# 
   433  071D                     	;# 
   434  071E                     	;# 
   435  0796                     	;# 
   436  0797                     	;# 
   437  0798                     	;# 
   438  0799                     	;# 
   439  079A                     	;# 
   440  079B                     	;# 
   441  079C                     	;# 
   442  079D                     	;# 
   443  080C                     	;# 
   444  080D                     	;# 
   445  080E                     	;# 
   446  080F                     	;# 
   447  0810                     	;# 
   448  0811                     	;# 
   449  0812                     	;# 
   450  0813                     	;# 
   451  0814                     	;# 
   452  081A                     	;# 
   453  081A                     	;# 
   454  081B                     	;# 
   455  081C                     	;# 
   456  081C                     	;# 
   457  081D                     	;# 
   458  081E                     	;# 
   459  081F                     	;# 
   460  088C                     	;# 
   461  088D                     	;# 
   462  088E                     	;# 
   463  088F                     	;# 
   464  0890                     	;# 
   465  0891                     	;# 
   466  0892                     	;# 
   467  0893                     	;# 
   468  0895                     	;# 
   469  0896                     	;# 
   470  0897                     	;# 
   471  0898                     	;# 
   472  0899                     	;# 
   473  089A                     	;# 
   474  089B                     	;# 
   475  090C                     	;# 
   476  090E                     	;# 
   477  090F                     	;# 
   478  091F                     	;# 
   479  098F                     	;# 
   480  098F                     	;# 
   481  0990                     	;# 
   482  0991                     	;# 
   483  0992                     	;# 
   484  0993                     	;# 
   485  0994                     	;# 
   486  0995                     	;# 
   487  0996                     	;# 
   488  0997                     	;# 
   489  1E0F                     	;# 
   490  1E10                     	;# 
   491  1E11                     	;# 
   492  1E12                     	;# 
   493  1E13                     	;# 
   494  1E14                     	;# 
   495  1E15                     	;# 
   496  1E16                     	;# 
   497  1E17                     	;# 
   498  1E18                     	;# 
   499  1E19                     	;# 
   500  1E1A                     	;# 
   501  1E1B                     	;# 
   502  1E1C                     	;# 
   503  1E1D                     	;# 
   504  1E1E                     	;# 
   505  1E1F                     	;# 
   506  1E20                     	;# 
   507  1E21                     	;# 
   508  1E22                     	;# 
   509  1E23                     	;# 
   510  1E24                     	;# 
   511  1E25                     	;# 
   512  1E26                     	;# 
   513  1E27                     	;# 
   514  1E28                     	;# 
   515  1E29                     	;# 
   516  1E2A                     	;# 
   517  1E2B                     	;# 
   518  1E2C                     	;# 
   519  1E2D                     	;# 
   520  1E2E                     	;# 
   521  1E2F                     	;# 
   522  1E30                     	;# 
   523  1E31                     	;# 
   524  1E32                     	;# 
   525  1E33                     	;# 
   526  1E34                     	;# 
   527  1E35                     	;# 
   528  1E36                     	;# 
   529  1E37                     	;# 
   530  1E8F                     	;# 
   531  1E90                     	;# 
   532  1E91                     	;# 
   533  1E92                     	;# 
   534  1E93                     	;# 
   535  1E94                     	;# 
   536  1E95                     	;# 
   537  1E96                     	;# 
   538  1E97                     	;# 
   539  1E9C                     	;# 
   540  1E9D                     	;# 
   541  1E9E                     	;# 
   542  1EA1                     	;# 
   543  1EA2                     	;# 
   544  1EA3                     	;# 
   545  1EA4                     	;# 
   546  1EA9                     	;# 
   547  1EAA                     	;# 
   548  1EB1                     	;# 
   549  1EB2                     	;# 
   550  1EB8                     	;# 
   551  1EB9                     	;# 
   552  1EBA                     	;# 
   553  1EBB                     	;# 
   554  1EBC                     	;# 
   555  1EBD                     	;# 
   556  1EBE                     	;# 
   557  1EC3                     	;# 
   558  1EC5                     	;# 
   559  1EC6                     	;# 
   560  1EC7                     	;# 
   561  1EC8                     	;# 
   562  1EC9                     	;# 
   563  1ECA                     	;# 
   564  1ECB                     	;# 
   565  1ECB                     	;# 
   566  1ECB                     	;# 
   567  1ECC                     	;# 
   568  1ECC                     	;# 
   569  1ECC                     	;# 
   570  1F10                     	;# 
   571  1F11                     	;# 
   572  1F12                     	;# 
   573  1F14                     	;# 
   574  1F15                     	;# 
   575  1F1C                     	;# 
   576  1F1D                     	;# 
   577  1F1E                     	;# 
   578  1F1F                     	;# 
   579  1F20                     	;# 
   580  1F21                     	;# 
   581  1F22                     	;# 
   582  1F23                     	;# 
   583  1F24                     	;# 
   584  1F25                     	;# 
   585  1F26                     	;# 
   586  1F27                     	;# 
   587  1F38                     	;# 
   588  1F39                     	;# 
   589  1F3A                     	;# 
   590  1F3B                     	;# 
   591  1F3C                     	;# 
   592  1F3D                     	;# 
   593  1F3E                     	;# 
   594  1F3F                     	;# 
   595  1F43                     	;# 
   596  1F44                     	;# 
   597  1F45                     	;# 
   598  1F46                     	;# 
   599  1F47                     	;# 
   600  1F48                     	;# 
   601  1F49                     	;# 
   602  1F4A                     	;# 
   603  1F4E                     	;# 
   604  1F4F                     	;# 
   605  1F50                     	;# 
   606  1F51                     	;# 
   607  1F52                     	;# 
   608  1F53                     	;# 
   609  1F54                     	;# 
   610  1F55                     	;# 
   611  1FE4                     	;# 
   612  1FE5                     	;# 
   613  1FE6                     	;# 
   614  1FE7                     	;# 
   615  1FE8                     	;# 
   616  1FE8                     	;# 
   617  1FE9                     	;# 
   618  1FEA                     	;# 
   619  1FEB                     	;# 
   620  1FED                     	;# 
   621  1FEE                     	;# 
   622  1FEF                     	;# 
   623  0000                     	;# 
   624  0001                     	;# 
   625  0002                     	;# 
   626  0003                     	;# 
   627  0004                     	;# 
   628  0005                     	;# 
   629  0006                     	;# 
   630  0007                     	;# 
   631  0008                     	;# 
   632  0009                     	;# 
   633  000A                     	;# 
   634  000B                     	;# 
   635  000C                     	;# 
   636  000D                     	;# 
   637  000E                     	;# 
   638  0012                     	;# 
   639  0013                     	;# 
   640  0014                     	;# 
   641  0018                     	;# 
   642  0019                     	;# 
   643  001A                     	;# 
   644  008C                     	;# 
   645  008C                     	;# 
   646  008D                     	;# 
   647  008E                     	;# 
   648  008E                     	;# 
   649  008F                     	;# 
   650  0090                     	;# 
   651  0090                     	;# 
   652  0091                     	;# 
   653  0092                     	;# 
   654  0092                     	;# 
   655  0093                     	;# 
   656  0094                     	;# 
   657  0094                     	;# 
   658  0095                     	;# 
   659  0096                     	;# 
   660  0096                     	;# 
   661  0097                     	;# 
   662  0098                     	;# 
   663  0099                     	;# 
   664  009A                     	;# 
   665  009B                     	;# 
   666  009B                     	;# 
   667  009C                     	;# 
   668  009D                     	;# 
   669  009D                     	;# 
   670  009E                     	;# 
   671  009F                     	;# 
   672  010C                     	;# 
   673  010C                     	;# 
   674  010D                     	;# 
   675  010E                     	;# 
   676  010F                     	;# 
   677  010F                     	;# 
   678  0110                     	;# 
   679  0111                     	;# 
   680  0112                     	;# 
   681  0113                     	;# 
   682  0114                     	;# 
   683  0115                     	;# 
   684  0116                     	;# 
   685  0117                     	;# 
   686  0118                     	;# 
   687  0119                     	;# 
   688  0119                     	;# 
   689  0119                     	;# 
   690  011A                     	;# 
   691  011A                     	;# 
   692  011A                     	;# 
   693  011B                     	;# 
   694  011B                     	;# 
   695  011B                     	;# 
   696  011B                     	;# 
   697  011B                     	;# 
   698  011C                     	;# 
   699  011C                     	;# 
   700  011C                     	;# 
   701  011D                     	;# 
   702  011D                     	;# 
   703  011D                     	;# 
   704  011E                     	;# 
   705  011E                     	;# 
   706  011E                     	;# 
   707  011F                     	;# 
   708  011F                     	;# 
   709  011F                     	;# 
   710  011F                     	;# 
   711  011F                     	;# 
   712  018C                     	;# 
   713  018D                     	;# 
   714  018E                     	;# 
   715  018F                     	;# 
   716  0190                     	;# 
   717  0191                     	;# 
   718  0192                     	;# 
   719  0196                     	;# 
   720  0197                     	;# 
   721  0198                     	;# 
   722  0199                     	;# 
   723  019A                     	;# 
   724  019B                     	;# 
   725  019C                     	;# 
   726  020C                     	;# 
   727  020D                     	;# 
   728  020E                     	;# 
   729  020E                     	;# 
   730  020F                     	;# 
   731  020F                     	;# 
   732  0210                     	;# 
   733  0210                     	;# 
   734  0211                     	;# 
   735  0211                     	;# 
   736  0212                     	;# 
   737  0213                     	;# 
   738  0214                     	;# 
   739  0214                     	;# 
   740  0215                     	;# 
   741  0215                     	;# 
   742  0216                     	;# 
   743  0216                     	;# 
   744  0217                     	;# 
   745  0217                     	;# 
   746  0218                     	;# 
   747  0219                     	;# 
   748  021A                     	;# 
   749  021A                     	;# 
   750  021B                     	;# 
   751  021B                     	;# 
   752  021C                     	;# 
   753  021C                     	;# 
   754  021D                     	;# 
   755  021D                     	;# 
   756  021E                     	;# 
   757  021F                     	;# 
   758  028C                     	;# 
   759  028C                     	;# 
   760  028D                     	;# 
   761  028D                     	;# 
   762  028E                     	;# 
   763  028F                     	;# 
   764  0290                     	;# 
   765  0291                     	;# 
   766  0292                     	;# 
   767  0292                     	;# 
   768  0293                     	;# 
   769  0293                     	;# 
   770  0294                     	;# 
   771  0295                     	;# 
   772  0296                     	;# 
   773  0297                     	;# 
   774  0298                     	;# 
   775  0298                     	;# 
   776  0299                     	;# 
   777  0299                     	;# 
   778  029A                     	;# 
   779  029B                     	;# 
   780  029C                     	;# 
   781  029D                     	;# 
   782  029F                     	;# 
   783  030C                     	;# 
   784  030C                     	;# 
   785  030D                     	;# 
   786  030E                     	;# 
   787  030F                     	;# 
   788  0310                     	;# 
   789  0310                     	;# 
   790  0311                     	;# 
   791  0312                     	;# 
   792  0313                     	;# 
   793  0314                     	;# 
   794  0314                     	;# 
   795  0315                     	;# 
   796  0316                     	;# 
   797  0317                     	;# 
   798  0318                     	;# 
   799  0318                     	;# 
   800  0319                     	;# 
   801  031A                     	;# 
   802  031B                     	;# 
   803  038C                     	;# 
   804  038C                     	;# 
   805  038D                     	;# 
   806  038E                     	;# 
   807  0390                     	;# 
   808  0390                     	;# 
   809  0391                     	;# 
   810  0392                     	;# 
   811  048C                     	;# 
   812  048C                     	;# 
   813  048D                     	;# 
   814  048E                     	;# 
   815  048F                     	;# 
   816  048F                     	;# 
   817  0490                     	;# 
   818  0491                     	;# 
   819  0492                     	;# 
   820  0492                     	;# 
   821  0493                     	;# 
   822  0494                     	;# 
   823  0495                     	;# 
   824  0495                     	;# 
   825  0496                     	;# 
   826  0497                     	;# 
   827  0498                     	;# 
   828  0499                     	;# 
   829  049A                     	;# 
   830  049B                     	;# 
   831  049C                     	;# 
   832  049D                     	;# 
   833  058C                     	;# 
   834  058C                     	;# 
   835  058D                     	;# 
   836  058E                     	;# 
   837  058F                     	;# 
   838  058F                     	;# 
   839  0590                     	;# 
   840  0591                     	;# 
   841  0592                     	;# 
   842  0593                     	;# 
   843  059C                     	;# 
   844  059C                     	;# 
   845  059D                     	;# 
   846  059D                     	;# 
   847  059E                     	;# 
   848  059F                     	;# 
   849  060C                     	;# 
   850  060C                     	;# 
   851  060D                     	;# 
   852  060D                     	;# 
   853  060E                     	;# 
   854  060F                     	;# 
   855  0610                     	;# 
   856  0611                     	;# 
   857  0612                     	;# 
   858  0613                     	;# 
   859  0614                     	;# 
   860  0616                     	;# 
   861  0616                     	;# 
   862  0617                     	;# 
   863  0617                     	;# 
   864  0618                     	;# 
   865  0619                     	;# 
   866  061A                     	;# 
   867  061B                     	;# 
   868  061C                     	;# 
   869  061D                     	;# 
   870  061E                     	;# 
   871  070C                     	;# 
   872  070D                     	;# 
   873  070E                     	;# 
   874  070F                     	;# 
   875  0710                     	;# 
   876  0711                     	;# 
   877  0712                     	;# 
   878  0713                     	;# 
   879  0714                     	;# 
   880  0716                     	;# 
   881  0717                     	;# 
   882  0718                     	;# 
   883  0719                     	;# 
   884  071A                     	;# 
   885  071B                     	;# 
   886  071C                     	;# 
   887  071D                     	;# 
   888  071E                     	;# 
   889  0796                     	;# 
   890  0797                     	;# 
   891  0798                     	;# 
   892  0799                     	;# 
   893  079A                     	;# 
   894  079B                     	;# 
   895  079C                     	;# 
   896  079D                     	;# 
   897  080C                     	;# 
   898  080D                     	;# 
   899  080E                     	;# 
   900  080F                     	;# 
   901  0810                     	;# 
   902  0811                     	;# 
   903  0812                     	;# 
   904  0813                     	;# 
   905  0814                     	;# 
   906  081A                     	;# 
   907  081A                     	;# 
   908  081B                     	;# 
   909  081C                     	;# 
   910  081C                     	;# 
   911  081D                     	;# 
   912  081E                     	;# 
   913  081F                     	;# 
   914  088C                     	;# 
   915  088D                     	;# 
   916  088E                     	;# 
   917  088F                     	;# 
   918  0890                     	;# 
   919  0891                     	;# 
   920  0892                     	;# 
   921  0893                     	;# 
   922  0895                     	;# 
   923  0896                     	;# 
   924  0897                     	;# 
   925  0898                     	;# 
   926  0899                     	;# 
   927  089A                     	;# 
   928  089B                     	;# 
   929  090C                     	;# 
   930  090E                     	;# 
   931  090F                     	;# 
   932  091F                     	;# 
   933  098F                     	;# 
   934  098F                     	;# 
   935  0990                     	;# 
   936  0991                     	;# 
   937  0992                     	;# 
   938  0993                     	;# 
   939  0994                     	;# 
   940  0995                     	;# 
   941  0996                     	;# 
   942  0997                     	;# 
   943  1E0F                     	;# 
   944  1E10                     	;# 
   945  1E11                     	;# 
   946  1E12                     	;# 
   947  1E13                     	;# 
   948  1E14                     	;# 
   949  1E15                     	;# 
   950  1E16                     	;# 
   951  1E17                     	;# 
   952  1E18                     	;# 
   953  1E19                     	;# 
   954  1E1A                     	;# 
   955  1E1B                     	;# 
   956  1E1C                     	;# 
   957  1E1D                     	;# 
   958  1E1E                     	;# 
   959  1E1F                     	;# 
   960  1E20                     	;# 
   961  1E21                     	;# 
   962  1E22                     	;# 
   963  1E23                     	;# 
   964  1E24                     	;# 
   965  1E25                     	;# 
   966  1E26                     	;# 
   967  1E27                     	;# 
   968  1E28                     	;# 
   969  1E29                     	;# 
   970  1E2A                     	;# 
   971  1E2B                     	;# 
   972  1E2C                     	;# 
   973  1E2D                     	;# 
   974  1E2E                     	;# 
   975  1E2F                     	;# 
   976  1E30                     	;# 
   977  1E31                     	;# 
   978  1E32                     	;# 
   979  1E33                     	;# 
   980  1E34                     	;# 
   981  1E35                     	;# 
   982  1E36                     	;# 
   983  1E37                     	;# 
   984  1E8F                     	;# 
   985  1E90                     	;# 
   986  1E91                     	;# 
   987  1E92                     	;# 
   988  1E93                     	;# 
   989  1E94                     	;# 
   990  1E95                     	;# 
   991  1E96                     	;# 
   992  1E97                     	;# 
   993  1E9C                     	;# 
   994  1E9D                     	;# 
   995  1E9E                     	;# 
   996  1EA1                     	;# 
   997  1EA2                     	;# 
   998  1EA3                     	;# 
   999  1EA4                     	;# 
  1000  1EA9                     	;# 
  1001  1EAA                     	;# 
  1002  1EB1                     	;# 
  1003  1EB2                     	;# 
  1004  1EB8                     	;# 
  1005  1EB9                     	;# 
  1006  1EBA                     	;# 
  1007  1EBB                     	;# 
  1008  1EBC                     	;# 
  1009  1EBD                     	;# 
  1010  1EBE                     	;# 
  1011  1EC3                     	;# 
  1012  1EC5                     	;# 
  1013  1EC6                     	;# 
  1014  1EC7                     	;# 
  1015  1EC8                     	;# 
  1016  1EC9                     	;# 
  1017  1ECA                     	;# 
  1018  1ECB                     	;# 
  1019  1ECB                     	;# 
  1020  1ECB                     	;# 
  1021  1ECC                     	;# 
  1022  1ECC                     	;# 
  1023  1ECC                     	;# 
  1024  1F10                     	;# 
  1025  1F11                     	;# 
  1026  1F12                     	;# 
  1027  1F14                     	;# 
  1028  1F15                     	;# 
  1029  1F1C                     	;# 
  1030  1F1D                     	;# 
  1031  1F1E                     	;# 
  1032  1F1F                     	;# 
  1033  1F20                     	;# 
  1034  1F21                     	;# 
  1035  1F22                     	;# 
  1036  1F23                     	;# 
  1037  1F24                     	;# 
  1038  1F25                     	;# 
  1039  1F26                     	;# 
  1040  1F27                     	;# 
  1041  1F38                     	;# 
  1042  1F39                     	;# 
  1043  1F3A                     	;# 
  1044  1F3B                     	;# 
  1045  1F3C                     	;# 
  1046  1F3D                     	;# 
  1047  1F3E                     	;# 
  1048  1F3F                     	;# 
  1049  1F43                     	;# 
  1050  1F44                     	;# 
  1051  1F45                     	;# 
  1052  1F46                     	;# 
  1053  1F47                     	;# 
  1054  1F48                     	;# 
  1055  1F49                     	;# 
  1056  1F4A                     	;# 
  1057  1F4E                     	;# 
  1058  1F4F                     	;# 
  1059  1F50                     	;# 
  1060  1F51                     	;# 
  1061  1F52                     	;# 
  1062  1F53                     	;# 
  1063  1F54                     	;# 
  1064  1F55                     	;# 
  1065  1FE4                     	;# 
  1066  1FE5                     	;# 
  1067  1FE6                     	;# 
  1068  1FE7                     	;# 
  1069  1FE8                     	;# 
  1070  1FE8                     	;# 
  1071  1FE9                     	;# 
  1072  1FEA                     	;# 
  1073  1FEB                     	;# 
  1074  1FED                     	;# 
  1075  1FEE                     	;# 
  1076  1FEF                     	;# 
  1077  0000                     	;# 
  1078  0001                     	;# 
  1079  0002                     	;# 
  1080  0003                     	;# 
  1081  0004                     	;# 
  1082  0005                     	;# 
  1083  0006                     	;# 
  1084  0007                     	;# 
  1085  0008                     	;# 
  1086  0009                     	;# 
  1087  000A                     	;# 
  1088  000B                     	;# 
  1089  000C                     	;# 
  1090  000D                     	;# 
  1091  000E                     	;# 
  1092  0012                     	;# 
  1093  0013                     	;# 
  1094  0014                     	;# 
  1095  0018                     	;# 
  1096  0019                     	;# 
  1097  001A                     	;# 
  1098  008C                     	;# 
  1099  008C                     	;# 
  1100  008D                     	;# 
  1101  008E                     	;# 
  1102  008E                     	;# 
  1103  008F                     	;# 
  1104  0090                     	;# 
  1105  0090                     	;# 
  1106  0091                     	;# 
  1107  0092                     	;# 
  1108  0092                     	;# 
  1109  0093                     	;# 
  1110  0094                     	;# 
  1111  0094                     	;# 
  1112  0095                     	;# 
  1113  0096                     	;# 
  1114  0096                     	;# 
  1115  0097                     	;# 
  1116  0098                     	;# 
  1117  0099                     	;# 
  1118  009A                     	;# 
  1119  009B                     	;# 
  1120  009B                     	;# 
  1121  009C                     	;# 
  1122  009D                     	;# 
  1123  009D                     	;# 
  1124  009E                     	;# 
  1125  009F                     	;# 
  1126  010C                     	;# 
  1127  010C                     	;# 
  1128  010D                     	;# 
  1129  010E                     	;# 
  1130  010F                     	;# 
  1131  010F                     	;# 
  1132  0110                     	;# 
  1133  0111                     	;# 
  1134  0112                     	;# 
  1135  0113                     	;# 
  1136  0114                     	;# 
  1137  0115                     	;# 
  1138  0116                     	;# 
  1139  0117                     	;# 
  1140  0118                     	;# 
  1141  0119                     	;# 
  1142  0119                     	;# 
  1143  0119                     	;# 
  1144  011A                     	;# 
  1145  011A                     	;# 
  1146  011A                     	;# 
  1147  011B                     	;# 
  1148  011B                     	;# 
  1149  011B                     	;# 
  1150  011B                     	;# 
  1151  011B                     	;# 
  1152  011C                     	;# 
  1153  011C                     	;# 
  1154  011C                     	;# 
  1155  011D                     	;# 
  1156  011D                     	;# 
  1157  011D                     	;# 
  1158  011E                     	;# 
  1159  011E                     	;# 
  1160  011E                     	;# 
  1161  011F                     	;# 
  1162  011F                     	;# 
  1163  011F                     	;# 
  1164  011F                     	;# 
  1165  011F                     	;# 
  1166  018C                     	;# 
  1167  018D                     	;# 
  1168  018E                     	;# 
  1169  018F                     	;# 
  1170  0190                     	;# 
  1171  0191                     	;# 
  1172  0192                     	;# 
  1173  0196                     	;# 
  1174  0197                     	;# 
  1175  0198                     	;# 
  1176  0199                     	;# 
  1177  019A                     	;# 
  1178  019B                     	;# 
  1179  019C                     	;# 
  1180  020C                     	;# 
  1181  020D                     	;# 
  1182  020E                     	;# 
  1183  020E                     	;# 
  1184  020F                     	;# 
  1185  020F                     	;# 
  1186  0210                     	;# 
  1187  0210                     	;# 
  1188  0211                     	;# 
  1189  0211                     	;# 
  1190  0212                     	;# 
  1191  0213                     	;# 
  1192  0214                     	;# 
  1193  0214                     	;# 
  1194  0215                     	;# 
  1195  0215                     	;# 
  1196  0216                     	;# 
  1197  0216                     	;# 
  1198  0217                     	;# 
  1199  0217                     	;# 
  1200  0218                     	;# 
  1201  0219                     	;# 
  1202  021A                     	;# 
  1203  021A                     	;# 
  1204  021B                     	;# 
  1205  021B                     	;# 
  1206  021C                     	;# 
  1207  021C                     	;# 
  1208  021D                     	;# 
  1209  021D                     	;# 
  1210  021E                     	;# 
  1211  021F                     	;# 
  1212  028C                     	;# 
  1213  028C                     	;# 
  1214  028D                     	;# 
  1215  028D                     	;# 
  1216  028E                     	;# 
  1217  028F                     	;# 
  1218  0290                     	;# 
  1219  0291                     	;# 
  1220  0292                     	;# 
  1221  0292                     	;# 
  1222  0293                     	;# 
  1223  0293                     	;# 
  1224  0294                     	;# 
  1225  0295                     	;# 
  1226  0296                     	;# 
  1227  0297                     	;# 
  1228  0298                     	;# 
  1229  0298                     	;# 
  1230  0299                     	;# 
  1231  0299                     	;# 
  1232  029A                     	;# 
  1233  029B                     	;# 
  1234  029C                     	;# 
  1235  029D                     	;# 
  1236  029F                     	;# 
  1237  030C                     	;# 
  1238  030C                     	;# 
  1239  030D                     	;# 
  1240  030E                     	;# 
  1241  030F                     	;# 
  1242  0310                     	;# 
  1243  0310                     	;# 
  1244  0311                     	;# 
  1245  0312                     	;# 
  1246  0313                     	;# 
  1247  0314                     	;# 
  1248  0314                     	;# 
  1249  0315                     	;# 
  1250  0316                     	;# 
  1251  0317                     	;# 
  1252  0318                     	;# 
  1253  0318                     	;# 
  1254  0319                     	;# 
  1255  031A                     	;# 
  1256  031B                     	;# 
  1257  038C                     	;# 
  1258  038C                     	;# 
  1259  038D                     	;# 
  1260  038E                     	;# 
  1261  0390                     	;# 
  1262  0390                     	;# 
  1263  0391                     	;# 
  1264  0392                     	;# 
  1265  048C                     	;# 
  1266  048C                     	;# 
  1267  048D                     	;# 
  1268  048E                     	;# 
  1269  048F                     	;# 
  1270  048F                     	;# 
  1271  0490                     	;# 
  1272  0491                     	;# 
  1273  0492                     	;# 
  1274  0492                     	;# 
  1275  0493                     	;# 
  1276  0494                     	;# 
  1277  0495                     	;# 
  1278  0495                     	;# 
  1279  0496                     	;# 
  1280  0497                     	;# 
  1281  0498                     	;# 
  1282  0499                     	;# 
  1283  049A                     	;# 
  1284  049B                     	;# 
  1285  049C                     	;# 
  1286  049D                     	;# 
  1287  058C                     	;# 
  1288  058C                     	;# 
  1289  058D                     	;# 
  1290  058E                     	;# 
  1291  058F                     	;# 
  1292  058F                     	;# 
  1293  0590                     	;# 
  1294  0591                     	;# 
  1295  0592                     	;# 
  1296  0593                     	;# 
  1297  059C                     	;# 
  1298  059C                     	;# 
  1299  059D                     	;# 
  1300  059D                     	;# 
  1301  059E                     	;# 
  1302  059F                     	;# 
  1303  060C                     	;# 
  1304  060C                     	;# 
  1305  060D                     	;# 
  1306  060D                     	;# 
  1307  060E                     	;# 
  1308  060F                     	;# 
  1309  0610                     	;# 
  1310  0611                     	;# 
  1311  0612                     	;# 
  1312  0613                     	;# 
  1313  0614                     	;# 
  1314  0616                     	;# 
  1315  0616                     	;# 
  1316  0617                     	;# 
  1317  0617                     	;# 
  1318  0618                     	;# 
  1319  0619                     	;# 
  1320  061A                     	;# 
  1321  061B                     	;# 
  1322  061C                     	;# 
  1323  061D                     	;# 
  1324  061E                     	;# 
  1325  070C                     	;# 
  1326  070D                     	;# 
  1327  070E                     	;# 
  1328  070F                     	;# 
  1329  0710                     	;# 
  1330  0711                     	;# 
  1331  0712                     	;# 
  1332  0713                     	;# 
  1333  0714                     	;# 
  1334  0716                     	;# 
  1335  0717                     	;# 
  1336  0718                     	;# 
  1337  0719                     	;# 
  1338  071A                     	;# 
  1339  071B                     	;# 
  1340  071C                     	;# 
  1341  071D                     	;# 
  1342  071E                     	;# 
  1343  0796                     	;# 
  1344  0797                     	;# 
  1345  0798                     	;# 
  1346  0799                     	;# 
  1347  079A                     	;# 
  1348  079B                     	;# 
  1349  079C                     	;# 
  1350  079D                     	;# 
  1351  080C                     	;# 
  1352  080D                     	;# 
  1353  080E                     	;# 
  1354  080F                     	;# 
  1355  0810                     	;# 
  1356  0811                     	;# 
  1357  0812                     	;# 
  1358  0813                     	;# 
  1359  0814                     	;# 
  1360  081A                     	;# 
  1361  081A                     	;# 
  1362  081B                     	;# 
  1363  081C                     	;# 
  1364  081C                     	;# 
  1365  081D                     	;# 
  1366  081E                     	;# 
  1367  081F                     	;# 
  1368  088C                     	;# 
  1369  088D                     	;# 
  1370  088E                     	;# 
  1371  088F                     	;# 
  1372  0890                     	;# 
  1373  0891                     	;# 
  1374  0892                     	;# 
  1375  0893                     	;# 
  1376  0895                     	;# 
  1377  0896                     	;# 
  1378  0897                     	;# 
  1379  0898                     	;# 
  1380  0899                     	;# 
  1381  089A                     	;# 
  1382  089B                     	;# 
  1383  090C                     	;# 
  1384  090E                     	;# 
  1385  090F                     	;# 
  1386  091F                     	;# 
  1387  098F                     	;# 
  1388  098F                     	;# 
  1389  0990                     	;# 
  1390  0991                     	;# 
  1391  0992                     	;# 
  1392  0993                     	;# 
  1393  0994                     	;# 
  1394  0995                     	;# 
  1395  0996                     	;# 
  1396  0997                     	;# 
  1397  1E0F                     	;# 
  1398  1E10                     	;# 
  1399  1E11                     	;# 
  1400  1E12                     	;# 
  1401  1E13                     	;# 
  1402  1E14                     	;# 
  1403  1E15                     	;# 
  1404  1E16                     	;# 
  1405  1E17                     	;# 
  1406  1E18                     	;# 
  1407  1E19                     	;# 
  1408  1E1A                     	;# 
  1409  1E1B                     	;# 
  1410  1E1C                     	;# 
  1411  1E1D                     	;# 
  1412  1E1E                     	;# 
  1413  1E1F                     	;# 
  1414  1E20                     	;# 
  1415  1E21                     	;# 
  1416  1E22                     	;# 
  1417  1E23                     	;# 
  1418  1E24                     	;# 
  1419  1E25                     	;# 
  1420  1E26                     	;# 
  1421  1E27                     	;# 
  1422  1E28                     	;# 
  1423  1E29                     	;# 
  1424  1E2A                     	;# 
  1425  1E2B                     	;# 
  1426  1E2C                     	;# 
  1427  1E2D                     	;# 
  1428  1E2E                     	;# 
  1429  1E2F                     	;# 
  1430  1E30                     	;# 
  1431  1E31                     	;# 
  1432  1E32                     	;# 
  1433  1E33                     	;# 
  1434  1E34                     	;# 
  1435  1E35                     	;# 
  1436  1E36                     	;# 
  1437  1E37                     	;# 
  1438  1E8F                     	;# 
  1439  1E90                     	;# 
  1440  1E91                     	;# 
  1441  1E92                     	;# 
  1442  1E93                     	;# 
  1443  1E94                     	;# 
  1444  1E95                     	;# 
  1445  1E96                     	;# 
  1446  1E97                     	;# 
  1447  1E9C                     	;# 
  1448  1E9D                     	;# 
  1449  1E9E                     	;# 
  1450  1EA1                     	;# 
  1451  1EA2                     	;# 
  1452  1EA3                     	;# 
  1453  1EA4                     	;# 
  1454  1EA9                     	;# 
  1455  1EAA                     	;# 
  1456  1EB1                     	;# 
  1457  1EB2                     	;# 
  1458  1EB8                     	;# 
  1459  1EB9                     	;# 
  1460  1EBA                     	;# 
  1461  1EBB                     	;# 
  1462  1EBC                     	;# 
  1463  1EBD                     	;# 
  1464  1EBE                     	;# 
  1465  1EC3                     	;# 
  1466  1EC5                     	;# 
  1467  1EC6                     	;# 
  1468  1EC7                     	;# 
  1469  1EC8                     	;# 
  1470  1EC9                     	;# 
  1471  1ECA                     	;# 
  1472  1ECB                     	;# 
  1473  1ECB                     	;# 
  1474  1ECB                     	;# 
  1475  1ECC                     	;# 
  1476  1ECC                     	;# 
  1477  1ECC                     	;# 
  1478  1F10                     	;# 
  1479  1F11                     	;# 
  1480  1F12                     	;# 
  1481  1F14                     	;# 
  1482  1F15                     	;# 
  1483  1F1C                     	;# 
  1484  1F1D                     	;# 
  1485  1F1E                     	;# 
  1486  1F1F                     	;# 
  1487  1F20                     	;# 
  1488  1F21                     	;# 
  1489  1F22                     	;# 
  1490  1F23                     	;# 
  1491  1F24                     	;# 
  1492  1F25                     	;# 
  1493  1F26                     	;# 
  1494  1F27                     	;# 
  1495  1F38                     	;# 
  1496  1F39                     	;# 
  1497  1F3A                     	;# 
  1498  1F3B                     	;# 
  1499  1F3C                     	;# 
  1500  1F3D                     	;# 
  1501  1F3E                     	;# 
  1502  1F3F                     	;# 
  1503  1F43                     	;# 
  1504  1F44                     	;# 
  1505  1F45                     	;# 
  1506  1F46                     	;# 
  1507  1F47                     	;# 
  1508  1F48                     	;# 
  1509  1F49                     	;# 
  1510  1F4A                     	;# 
  1511  1F4E                     	;# 
  1512  1F4F                     	;# 
  1513  1F50                     	;# 
  1514  1F51                     	;# 
  1515  1F52                     	;# 
  1516  1F53                     	;# 
  1517  1F54                     	;# 
  1518  1F55                     	;# 
  1519  1FE4                     	;# 
  1520  1FE5                     	;# 
  1521  1FE6                     	;# 
  1522  1FE7                     	;# 
  1523  1FE8                     	;# 
  1524  1FE8                     	;# 
  1525  1FE9                     	;# 
  1526  1FEA                     	;# 
  1527  1FEB                     	;# 
  1528  1FED                     	;# 
  1529  1FEE                     	;# 
  1530  1FEF                     	;# 
  1531  0000                     	;# 
  1532  0001                     	;# 
  1533  0002                     	;# 
  1534  0003                     	;# 
  1535  0004                     	;# 
  1536  0005                     	;# 
  1537  0006                     	;# 
  1538  0007                     	;# 
  1539  0008                     	;# 
  1540  0009                     	;# 
  1541  000A                     	;# 
  1542  000B                     	;# 
  1543  000C                     	;# 
  1544  000D                     	;# 
  1545  000E                     	;# 
  1546  0012                     	;# 
  1547  0013                     	;# 
  1548  0014                     	;# 
  1549  0018                     	;# 
  1550  0019                     	;# 
  1551  001A                     	;# 
  1552  008C                     	;# 
  1553  008C                     	;# 
  1554  008D                     	;# 
  1555  008E                     	;# 
  1556  008E                     	;# 
  1557  008F                     	;# 
  1558  0090                     	;# 
  1559  0090                     	;# 
  1560  0091                     	;# 
  1561  0092                     	;# 
  1562  0092                     	;# 
  1563  0093                     	;# 
  1564  0094                     	;# 
  1565  0094                     	;# 
  1566  0095                     	;# 
  1567  0096                     	;# 
  1568  0096                     	;# 
  1569  0097                     	;# 
  1570  0098                     	;# 
  1571  0099                     	;# 
  1572  009A                     	;# 
  1573  009B                     	;# 
  1574  009B                     	;# 
  1575  009C                     	;# 
  1576  009D                     	;# 
  1577  009D                     	;# 
  1578  009E                     	;# 
  1579  009F                     	;# 
  1580  010C                     	;# 
  1581  010C                     	;# 
  1582  010D                     	;# 
  1583  010E                     	;# 
  1584  010F                     	;# 
  1585  010F                     	;# 
  1586  0110                     	;# 
  1587  0111                     	;# 
  1588  0112                     	;# 
  1589  0113                     	;# 
  1590  0114                     	;# 
  1591  0115                     	;# 
  1592  0116                     	;# 
  1593  0117                     	;# 
  1594  0118                     	;# 
  1595  0119                     	;# 
  1596  0119                     	;# 
  1597  0119                     	;# 
  1598  011A                     	;# 
  1599  011A                     	;# 
  1600  011A                     	;# 
  1601  011B                     	;# 
  1602  011B                     	;# 
  1603  011B                     	;# 
  1604  011B                     	;# 
  1605  011B                     	;# 
  1606  011C                     	;# 
  1607  011C                     	;# 
  1608  011C                     	;# 
  1609  011D                     	;# 
  1610  011D                     	;# 
  1611  011D                     	;# 
  1612  011E                     	;# 
  1613  011E                     	;# 
  1614  011E                     	;# 
  1615  011F                     	;# 
  1616  011F                     	;# 
  1617  011F                     	;# 
  1618  011F                     	;# 
  1619  011F                     	;# 
  1620  018C                     	;# 
  1621  018D                     	;# 
  1622  018E                     	;# 
  1623  018F                     	;# 
  1624  0190                     	;# 
  1625  0191                     	;# 
  1626  0192                     	;# 
  1627  0196                     	;# 
  1628  0197                     	;# 
  1629  0198                     	;# 
  1630  0199                     	;# 
  1631  019A                     	;# 
  1632  019B                     	;# 
  1633  019C                     	;# 
  1634  020C                     	;# 
  1635  020D                     	;# 
  1636  020E                     	;# 
  1637  020E                     	;# 
  1638  020F                     	;# 
  1639  020F                     	;# 
  1640  0210                     	;# 
  1641  0210                     	;# 
  1642  0211                     	;# 
  1643  0211                     	;# 
  1644  0212                     	;# 
  1645  0213                     	;# 
  1646  0214                     	;# 
  1647  0214                     	;# 
  1648  0215                     	;# 
  1649  0215                     	;# 
  1650  0216                     	;# 
  1651  0216                     	;# 
  1652  0217                     	;# 
  1653  0217                     	;# 
  1654  0218                     	;# 
  1655  0219                     	;# 
  1656  021A                     	;# 
  1657  021A                     	;# 
  1658  021B                     	;# 
  1659  021B                     	;# 
  1660  021C                     	;# 
  1661  021C                     	;# 
  1662  021D                     	;# 
  1663  021D                     	;# 
  1664  021E                     	;# 
  1665  021F                     	;# 
  1666  028C                     	;# 
  1667  028C                     	;# 
  1668  028D                     	;# 
  1669  028D                     	;# 
  1670  028E                     	;# 
  1671  028F                     	;# 
  1672  0290                     	;# 
  1673  0291                     	;# 
  1674  0292                     	;# 
  1675  0292                     	;# 
  1676  0293                     	;# 
  1677  0293                     	;# 
  1678  0294                     	;# 
  1679  0295                     	;# 
  1680  0296                     	;# 
  1681  0297                     	;# 
  1682  0298                     	;# 
  1683  0298                     	;# 
  1684  0299                     	;# 
  1685  0299                     	;# 
  1686  029A                     	;# 
  1687  029B                     	;# 
  1688  029C                     	;# 
  1689  029D                     	;# 
  1690  029F                     	;# 
  1691  030C                     	;# 
  1692  030C                     	;# 
  1693  030D                     	;# 
  1694  030E                     	;# 
  1695  030F                     	;# 
  1696  0310                     	;# 
  1697  0310                     	;# 
  1698  0311                     	;# 
  1699  0312                     	;# 
  1700  0313                     	;# 
  1701  0314                     	;# 
  1702  0314                     	;# 
  1703  0315                     	;# 
  1704  0316                     	;# 
  1705  0317                     	;# 
  1706  0318                     	;# 
  1707  0318                     	;# 
  1708  0319                     	;# 
  1709  031A                     	;# 
  1710  031B                     	;# 
  1711  038C                     	;# 
  1712  038C                     	;# 
  1713  038D                     	;# 
  1714  038E                     	;# 
  1715  0390                     	;# 
  1716  0390                     	;# 
  1717  0391                     	;# 
  1718  0392                     	;# 
  1719  048C                     	;# 
  1720  048C                     	;# 
  1721  048D                     	;# 
  1722  048E                     	;# 
  1723  048F                     	;# 
  1724  048F                     	;# 
  1725  0490                     	;# 
  1726  0491                     	;# 
  1727  0492                     	;# 
  1728  0492                     	;# 
  1729  0493                     	;# 
  1730  0494                     	;# 
  1731  0495                     	;# 
  1732  0495                     	;# 
  1733  0496                     	;# 
  1734  0497                     	;# 
  1735  0498                     	;# 
  1736  0499                     	;# 
  1737  049A                     	;# 
  1738  049B                     	;# 
  1739  049C                     	;# 
  1740  049D                     	;# 
  1741  058C                     	;# 
  1742  058C                     	;# 
  1743  058D                     	;# 
  1744  058E                     	;# 
  1745  058F                     	;# 
  1746  058F                     	;# 
  1747  0590                     	;# 
  1748  0591                     	;# 
  1749  0592                     	;# 
  1750  0593                     	;# 
  1751  059C                     	;# 
  1752  059C                     	;# 
  1753  059D                     	;# 
  1754  059D                     	;# 
  1755  059E                     	;# 
  1756  059F                     	;# 
  1757  060C                     	;# 
  1758  060C                     	;# 
  1759  060D                     	;# 
  1760  060D                     	;# 
  1761  060E                     	;# 
  1762  060F                     	;# 
  1763  0610                     	;# 
  1764  0611                     	;# 
  1765  0612                     	;# 
  1766  0613                     	;# 
  1767  0614                     	;# 
  1768  0616                     	;# 
  1769  0616                     	;# 
  1770  0617                     	;# 
  1771  0617                     	;# 
  1772  0618                     	;# 
  1773  0619                     	;# 
  1774  061A                     	;# 
  1775  061B                     	;# 
  1776  061C                     	;# 
  1777  061D                     	;# 
  1778  061E                     	;# 
  1779  070C                     	;# 
  1780  070D                     	;# 
  1781  070E                     	;# 
  1782  070F                     	;# 
  1783  0710                     	;# 
  1784  0711                     	;# 
  1785  0712                     	;# 
  1786  0713                     	;# 
  1787  0714                     	;# 
  1788  0716                     	;# 
  1789  0717                     	;# 
  1790  0718                     	;# 
  1791  0719                     	;# 
  1792  071A                     	;# 
  1793  071B                     	;# 
  1794  071C                     	;# 
  1795  071D                     	;# 
  1796  071E                     	;# 
  1797  0796                     	;# 
  1798  0797                     	;# 
  1799  0798                     	;# 
  1800  0799                     	;# 
  1801  079A                     	;# 
  1802  079B                     	;# 
  1803  079C                     	;# 
  1804  079D                     	;# 
  1805  080C                     	;# 
  1806  080D                     	;# 
  1807  080E                     	;# 
  1808  080F                     	;# 
  1809  0810                     	;# 
  1810  0811                     	;# 
  1811  0812                     	;# 
  1812  0813                     	;# 
  1813  0814                     	;# 
  1814  081A                     	;# 
  1815  081A                     	;# 
  1816  081B                     	;# 
  1817  081C                     	;# 
  1818  081C                     	;# 
  1819  081D                     	;# 
  1820  081E                     	;# 
  1821  081F                     	;# 
  1822  088C                     	;# 
  1823  088D                     	;# 
  1824  088E                     	;# 
  1825  088F                     	;# 
  1826  0890                     	;# 
  1827  0891                     	;# 
  1828  0892                     	;# 
  1829  0893                     	;# 
  1830  0895                     	;# 
  1831  0896                     	;# 
  1832  0897                     	;# 
  1833  0898                     	;# 
  1834  0899                     	;# 
  1835  089A                     	;# 
  1836  089B                     	;# 
  1837  090C                     	;# 
  1838  090E                     	;# 
  1839  090F                     	;# 
  1840  091F                     	;# 
  1841  098F                     	;# 
  1842  098F                     	;# 
  1843  0990                     	;# 
  1844  0991                     	;# 
  1845  0992                     	;# 
  1846  0993                     	;# 
  1847  0994                     	;# 
  1848  0995                     	;# 
  1849  0996                     	;# 
  1850  0997                     	;# 
  1851  1E0F                     	;# 
  1852  1E10                     	;# 
  1853  1E11                     	;# 
  1854  1E12                     	;# 
  1855  1E13                     	;# 
  1856  1E14                     	;# 
  1857  1E15                     	;# 
  1858  1E16                     	;# 
  1859  1E17                     	;# 
  1860  1E18                     	;# 
  1861  1E19                     	;# 
  1862  1E1A                     	;# 
  1863  1E1B                     	;# 
  1864  1E1C                     	;# 
  1865  1E1D                     	;# 
  1866  1E1E                     	;# 
  1867  1E1F                     	;# 
  1868  1E20                     	;# 
  1869  1E21                     	;# 
  1870  1E22                     	;# 
  1871  1E23                     	;# 
  1872  1E24                     	;# 
  1873  1E25                     	;# 
  1874  1E26                     	;# 
  1875  1E27                     	;# 
  1876  1E28                     	;# 
  1877  1E29                     	;# 
  1878  1E2A                     	;# 
  1879  1E2B                     	;# 
  1880  1E2C                     	;# 
  1881  1E2D                     	;# 
  1882  1E2E                     	;# 
  1883  1E2F                     	;# 
  1884  1E30                     	;# 
  1885  1E31                     	;# 
  1886  1E32                     	;# 
  1887  1E33                     	;# 
  1888  1E34                     	;# 
  1889  1E35                     	;# 
  1890  1E36                     	;# 
  1891  1E37                     	;# 
  1892  1E8F                     	;# 
  1893  1E90                     	;# 
  1894  1E91                     	;# 
  1895  1E92                     	;# 
  1896  1E93                     	;# 
  1897  1E94                     	;# 
  1898  1E95                     	;# 
  1899  1E96                     	;# 
  1900  1E97                     	;# 
  1901  1E9C                     	;# 
  1902  1E9D                     	;# 
  1903  1E9E                     	;# 
  1904  1EA1                     	;# 
  1905  1EA2                     	;# 
  1906  1EA3                     	;# 
  1907  1EA4                     	;# 
  1908  1EA9                     	;# 
  1909  1EAA                     	;# 
  1910  1EB1                     	;# 
  1911  1EB2                     	;# 
  1912  1EB8                     	;# 
  1913  1EB9                     	;# 
  1914  1EBA                     	;# 
  1915  1EBB                     	;# 
  1916  1EBC                     	;# 
  1917  1EBD                     	;# 
  1918  1EBE                     	;# 
  1919  1EC3                     	;# 
  1920  1EC5                     	;# 
  1921  1EC6                     	;# 
  1922  1EC7                     	;# 
  1923  1EC8                     	;# 
  1924  1EC9                     	;# 
  1925  1ECA                     	;# 
  1926  1ECB                     	;# 
  1927  1ECB                     	;# 
  1928  1ECB                     	;# 
  1929  1ECC                     	;# 
  1930  1ECC                     	;# 
  1931  1ECC                     	;# 
  1932  1F10                     	;# 
  1933  1F11                     	;# 
  1934  1F12                     	;# 
  1935  1F14                     	;# 
  1936  1F15                     	;# 
  1937  1F1C                     	;# 
  1938  1F1D                     	;# 
  1939  1F1E                     	;# 
  1940  1F1F                     	;# 
  1941  1F20                     	;# 
  1942  1F21                     	;# 
  1943  1F22                     	;# 
  1944  1F23                     	;# 
  1945  1F24                     	;# 
  1946  1F25                     	;# 
  1947  1F26                     	;# 
  1948  1F27                     	;# 
  1949  1F38                     	;# 
  1950  1F39                     	;# 
  1951  1F3A                     	;# 
  1952  1F3B                     	;# 
  1953  1F3C                     	;# 
  1954  1F3D                     	;# 
  1955  1F3E                     	;# 
  1956  1F3F                     	;# 
  1957  1F43                     	;# 
  1958  1F44                     	;# 
  1959  1F45                     	;# 
  1960  1F46                     	;# 
  1961  1F47                     	;# 
  1962  1F48                     	;# 
  1963  1F49                     	;# 
  1964  1F4A                     	;# 
  1965  1F4E                     	;# 
  1966  1F4F                     	;# 
  1967  1F50                     	;# 
  1968  1F51                     	;# 
  1969  1F52                     	;# 
  1970  1F53                     	;# 
  1971  1F54                     	;# 
  1972  1F55                     	;# 
  1973  1FE4                     	;# 
  1974  1FE5                     	;# 
  1975  1FE6                     	;# 
  1976  1FE7                     	;# 
  1977  1FE8                     	;# 
  1978  1FE8                     	;# 
  1979  1FE9                     	;# 
  1980  1FEA                     	;# 
  1981  1FEB                     	;# 
  1982  1FED                     	;# 
  1983  1FEE                     	;# 
  1984  1FEF                     	;# 
  1985  0000                     	;# 
  1986  0001                     	;# 
  1987  0002                     	;# 
  1988  0003                     	;# 
  1989  0004                     	;# 
  1990  0005                     	;# 
  1991  0006                     	;# 
  1992  0007                     	;# 
  1993  0008                     	;# 
  1994  0009                     	;# 
  1995  000A                     	;# 
  1996  000B                     	;# 
  1997  000C                     	;# 
  1998  000D                     	;# 
  1999  000E                     	;# 
  2000  0012                     	;# 
  2001  0013                     	;# 
  2002  0014                     	;# 
  2003  0018                     	;# 
  2004  0019                     	;# 
  2005  001A                     	;# 
  2006  008C                     	;# 
  2007  008C                     	;# 
  2008  008D                     	;# 
  2009  008E                     	;# 
  2010  008E                     	;# 
  2011  008F                     	;# 
  2012  0090                     	;# 
  2013  0090                     	;# 
  2014  0091                     	;# 
  2015  0092                     	;# 
  2016  0092                     	;# 
  2017  0093                     	;# 
  2018  0094                     	;# 
  2019  0094                     	;# 
  2020  0095                     	;# 
  2021  0096                     	;# 
  2022  0096                     	;# 
  2023  0097                     	;# 
  2024  0098                     	;# 
  2025  0099                     	;# 
  2026  009A                     	;# 
  2027  009B                     	;# 
  2028  009B                     	;# 
  2029  009C                     	;# 
  2030  009D                     	;# 
  2031  009D                     	;# 
  2032  009E                     	;# 
  2033  009F                     	;# 
  2034  010C                     	;# 
  2035  010C                     	;# 
  2036  010D                     	;# 
  2037  010E                     	;# 
  2038  010F                     	;# 
  2039  010F                     	;# 
  2040  0110                     	;# 
  2041  0111                     	;# 
  2042  0112                     	;# 
  2043  0113                     	;# 
  2044  0114                     	;# 
  2045  0115                     	;# 
  2046  0116                     	;# 
  2047  0117                     	;# 
  2048  0118                     	;# 
  2049  0119                     	;# 
  2050  0119                     	;# 
  2051  0119                     	;# 
  2052  011A                     	;# 
  2053  011A                     	;# 
  2054  011A                     	;# 
  2055  011B                     	;# 
  2056  011B                     	;# 
  2057  011B                     	;# 
  2058  011B                     	;# 
  2059  011B                     	;# 
  2060  011C                     	;# 
  2061  011C                     	;# 
  2062  011C                     	;# 
  2063  011D                     	;# 
  2064  011D                     	;# 
  2065  011D                     	;# 
  2066  011E                     	;# 
  2067  011E                     	;# 
  2068  011E                     	;# 
  2069  011F                     	;# 
  2070  011F                     	;# 
  2071  011F                     	;# 
  2072  011F                     	;# 
  2073  011F                     	;# 
  2074  018C                     	;# 
  2075  018D                     	;# 
  2076  018E                     	;# 
  2077  018F                     	;# 
  2078  0190                     	;# 
  2079  0191                     	;# 
  2080  0192                     	;# 
  2081  0196                     	;# 
  2082  0197                     	;# 
  2083  0198                     	;# 
  2084  0199                     	;# 
  2085  019A                     	;# 
  2086  019B                     	;# 
  2087  019C                     	;# 
  2088  020C                     	;# 
  2089  020D                     	;# 
  2090  020E                     	;# 
  2091  020E                     	;# 
  2092  020F                     	;# 
  2093  020F                     	;# 
  2094  0210                     	;# 
  2095  0210                     	;# 
  2096  0211                     	;# 
  2097  0211                     	;# 
  2098  0212                     	;# 
  2099  0213                     	;# 
  2100  0214                     	;# 
  2101  0214                     	;# 
  2102  0215                     	;# 
  2103  0215                     	;# 
  2104  0216                     	;# 
  2105  0216                     	;# 
  2106  0217                     	;# 
  2107  0217                     	;# 
  2108  0218                     	;# 
  2109  0219                     	;# 
  2110  021A                     	;# 
  2111  021A                     	;# 
  2112  021B                     	;# 
  2113  021B                     	;# 
  2114  021C                     	;# 
  2115  021C                     	;# 
  2116  021D                     	;# 
  2117  021D                     	;# 
  2118  021E                     	;# 
  2119  021F                     	;# 
  2120  028C                     	;# 
  2121  028C                     	;# 
  2122  028D                     	;# 
  2123  028D                     	;# 
  2124  028E                     	;# 
  2125  028F                     	;# 
  2126  0290                     	;# 
  2127  0291                     	;# 
  2128  0292                     	;# 
  2129  0292                     	;# 
  2130  0293                     	;# 
  2131  0293                     	;# 
  2132  0294                     	;# 
  2133  0295                     	;# 
  2134  0296                     	;# 
  2135  0297                     	;# 
  2136  0298                     	;# 
  2137  0298                     	;# 
  2138  0299                     	;# 
  2139  0299                     	;# 
  2140  029A                     	;# 
  2141  029B                     	;# 
  2142  029C                     	;# 
  2143  029D                     	;# 
  2144  029F                     	;# 
  2145  030C                     	;# 
  2146  030C                     	;# 
  2147  030D                     	;# 
  2148  030E                     	;# 
  2149  030F                     	;# 
  2150  0310                     	;# 
  2151  0310                     	;# 
  2152  0311                     	;# 
  2153  0312                     	;# 
  2154  0313                     	;# 
  2155  0314                     	;# 
  2156  0314                     	;# 
  2157  0315                     	;# 
  2158  0316                     	;# 
  2159  0317                     	;# 
  2160  0318                     	;# 
  2161  0318                     	;# 
  2162  0319                     	;# 
  2163  031A                     	;# 
  2164  031B                     	;# 
  2165  038C                     	;# 
  2166  038C                     	;# 
  2167  038D                     	;# 
  2168  038E                     	;# 
  2169  0390                     	;# 
  2170  0390                     	;# 
  2171  0391                     	;# 
  2172  0392                     	;# 
  2173  048C                     	;# 
  2174  048C                     	;# 
  2175  048D                     	;# 
  2176  048E                     	;# 
  2177  048F                     	;# 
  2178  048F                     	;# 
  2179  0490                     	;# 
  2180  0491                     	;# 
  2181  0492                     	;# 
  2182  0492                     	;# 
  2183  0493                     	;# 
  2184  0494                     	;# 
  2185  0495                     	;# 
  2186  0495                     	;# 
  2187  0496                     	;# 
  2188  0497                     	;# 
  2189  0498                     	;# 
  2190  0499                     	;# 
  2191  049A                     	;# 
  2192  049B                     	;# 
  2193  049C                     	;# 
  2194  049D                     	;# 
  2195  058C                     	;# 
  2196  058C                     	;# 
  2197  058D                     	;# 
  2198  058E                     	;# 
  2199  058F                     	;# 
  2200  058F                     	;# 
  2201  0590                     	;# 
  2202  0591                     	;# 
  2203  0592                     	;# 
  2204  0593                     	;# 
  2205  059C                     	;# 
  2206  059C                     	;# 
  2207  059D                     	;# 
  2208  059D                     	;# 
  2209  059E                     	;# 
  2210  059F                     	;# 
  2211  060C                     	;# 
  2212  060C                     	;# 
  2213  060D                     	;# 
  2214  060D                     	;# 
  2215  060E                     	;# 
  2216  060F                     	;# 
  2217  0610                     	;# 
  2218  0611                     	;# 
  2219  0612                     	;# 
  2220  0613                     	;# 
  2221  0614                     	;# 
  2222  0616                     	;# 
  2223  0616                     	;# 
  2224  0617                     	;# 
  2225  0617                     	;# 
  2226  0618                     	;# 
  2227  0619                     	;# 
  2228  061A                     	;# 
  2229  061B                     	;# 
  2230  061C                     	;# 
  2231  061D                     	;# 
  2232  061E                     	;# 
  2233  070C                     	;# 
  2234  070D                     	;# 
  2235  070E                     	;# 
  2236  070F                     	;# 
  2237  0710                     	;# 
  2238  0711                     	;# 
  2239  0712                     	;# 
  2240  0713                     	;# 
  2241  0714                     	;# 
  2242  0716                     	;# 
  2243  0717                     	;# 
  2244  0718                     	;# 
  2245  0719                     	;# 
  2246  071A                     	;# 
  2247  071B                     	;# 
  2248  071C                     	;# 
  2249  071D                     	;# 
  2250  071E                     	;# 
  2251  0796                     	;# 
  2252  0797                     	;# 
  2253  0798                     	;# 
  2254  0799                     	;# 
  2255  079A                     	;# 
  2256  079B                     	;# 
  2257  079C                     	;# 
  2258  079D                     	;# 
  2259  080C                     	;# 
  2260  080D                     	;# 
  2261  080E                     	;# 
  2262  080F                     	;# 
  2263  0810                     	;# 
  2264  0811                     	;# 
  2265  0812                     	;# 
  2266  0813                     	;# 
  2267  0814                     	;# 
  2268  081A                     	;# 
  2269  081A                     	;# 
  2270  081B                     	;# 
  2271  081C                     	;# 
  2272  081C                     	;# 
  2273  081D                     	;# 
  2274  081E                     	;# 
  2275  081F                     	;# 
  2276  088C                     	;# 
  2277  088D                     	;# 
  2278  088E                     	;# 
  2279  088F                     	;# 
  2280  0890                     	;# 
  2281  0891                     	;# 
  2282  0892                     	;# 
  2283  0893                     	;# 
  2284  0895                     	;# 
  2285  0896                     	;# 
  2286  0897                     	;# 
  2287  0898                     	;# 
  2288  0899                     	;# 
  2289  089A                     	;# 
  2290  089B                     	;# 
  2291  090C                     	;# 
  2292  090E                     	;# 
  2293  090F                     	;# 
  2294  091F                     	;# 
  2295  098F                     	;# 
  2296  098F                     	;# 
  2297  0990                     	;# 
  2298  0991                     	;# 
  2299  0992                     	;# 
  2300  0993                     	;# 
  2301  0994                     	;# 
  2302  0995                     	;# 
  2303  0996                     	;# 
  2304  0997                     	;# 
  2305  1E0F                     	;# 
  2306  1E10                     	;# 
  2307  1E11                     	;# 
  2308  1E12                     	;# 
  2309  1E13                     	;# 
  2310  1E14                     	;# 
  2311  1E15                     	;# 
  2312  1E16                     	;# 
  2313  1E17                     	;# 
  2314  1E18                     	;# 
  2315  1E19                     	;# 
  2316  1E1A                     	;# 
  2317  1E1B                     	;# 
  2318  1E1C                     	;# 
  2319  1E1D                     	;# 
  2320  1E1E                     	;# 
  2321  1E1F                     	;# 
  2322  1E20                     	;# 
  2323  1E21                     	;# 
  2324  1E22                     	;# 
  2325  1E23                     	;# 
  2326  1E24                     	;# 
  2327  1E25                     	;# 
  2328  1E26                     	;# 
  2329  1E27                     	;# 
  2330  1E28                     	;# 
  2331  1E29                     	;# 
  2332  1E2A                     	;# 
  2333  1E2B                     	;# 
  2334  1E2C                     	;# 
  2335  1E2D                     	;# 
  2336  1E2E                     	;# 
  2337  1E2F                     	;# 
  2338  1E30                     	;# 
  2339  1E31                     	;# 
  2340  1E32                     	;# 
  2341  1E33                     	;# 
  2342  1E34                     	;# 
  2343  1E35                     	;# 
  2344  1E36                     	;# 
  2345  1E37                     	;# 
  2346  1E8F                     	;# 
  2347  1E90                     	;# 
  2348  1E91                     	;# 
  2349  1E92                     	;# 
  2350  1E93                     	;# 
  2351  1E94                     	;# 
  2352  1E95                     	;# 
  2353  1E96                     	;# 
  2354  1E97                     	;# 
  2355  1E9C                     	;# 
  2356  1E9D                     	;# 
  2357  1E9E                     	;# 
  2358  1EA1                     	;# 
  2359  1EA2                     	;# 
  2360  1EA3                     	;# 
  2361  1EA4                     	;# 
  2362  1EA9                     	;# 
  2363  1EAA                     	;# 
  2364  1EB1                     	;# 
  2365  1EB2                     	;# 
  2366  1EB8                     	;# 
  2367  1EB9                     	;# 
  2368  1EBA                     	;# 
  2369  1EBB                     	;# 
  2370  1EBC                     	;# 
  2371  1EBD                     	;# 
  2372  1EBE                     	;# 
  2373  1EC3                     	;# 
  2374  1EC5                     	;# 
  2375  1EC6                     	;# 
  2376  1EC7                     	;# 
  2377  1EC8                     	;# 
  2378  1EC9                     	;# 
  2379  1ECA                     	;# 
  2380  1ECB                     	;# 
  2381  1ECB                     	;# 
  2382  1ECB                     	;# 
  2383  1ECC                     	;# 
  2384  1ECC                     	;# 
  2385  1ECC                     	;# 
  2386  1F10                     	;# 
  2387  1F11                     	;# 
  2388  1F12                     	;# 
  2389  1F14                     	;# 
  2390  1F15                     	;# 
  2391  1F1C                     	;# 
  2392  1F1D                     	;# 
  2393  1F1E                     	;# 
  2394  1F1F                     	;# 
  2395  1F20                     	;# 
  2396  1F21                     	;# 
  2397  1F22                     	;# 
  2398  1F23                     	;# 
  2399  1F24                     	;# 
  2400  1F25                     	;# 
  2401  1F26                     	;# 
  2402  1F27                     	;# 
  2403  1F38                     	;# 
  2404  1F39                     	;# 
  2405  1F3A                     	;# 
  2406  1F3B                     	;# 
  2407  1F3C                     	;# 
  2408  1F3D                     	;# 
  2409  1F3E                     	;# 
  2410  1F3F                     	;# 
  2411  1F43                     	;# 
  2412  1F44                     	;# 
  2413  1F45                     	;# 
  2414  1F46                     	;# 
  2415  1F47                     	;# 
  2416  1F48                     	;# 
  2417  1F49                     	;# 
  2418  1F4A                     	;# 
  2419  1F4E                     	;# 
  2420  1F4F                     	;# 
  2421  1F50                     	;# 
  2422  1F51                     	;# 
  2423  1F52                     	;# 
  2424  1F53                     	;# 
  2425  1F54                     	;# 
  2426  1F55                     	;# 
  2427  1FE4                     	;# 
  2428  1FE5                     	;# 
  2429  1FE6                     	;# 
  2430  1FE7                     	;# 
  2431  1FE8                     	;# 
  2432  1FE8                     	;# 
  2433  1FE9                     	;# 
  2434  1FEA                     	;# 
  2435  1FEB                     	;# 
  2436  1FED                     	;# 
  2437  1FEE                     	;# 
  2438  1FEF                     	;# 
  2439  0000                     	;# 
  2440  0001                     	;# 
  2441  0002                     	;# 
  2442  0003                     	;# 
  2443  0004                     	;# 
  2444  0005                     	;# 
  2445  0006                     	;# 
  2446  0007                     	;# 
  2447  0008                     	;# 
  2448  0009                     	;# 
  2449  000A                     	;# 
  2450  000B                     	;# 
  2451  000C                     	;# 
  2452  000D                     	;# 
  2453  000E                     	;# 
  2454  0012                     	;# 
  2455  0013                     	;# 
  2456  0014                     	;# 
  2457  0018                     	;# 
  2458  0019                     	;# 
  2459  001A                     	;# 
  2460  008C                     	;# 
  2461  008C                     	;# 
  2462  008D                     	;# 
  2463  008E                     	;# 
  2464  008E                     	;# 
  2465  008F                     	;# 
  2466  0090                     	;# 
  2467  0090                     	;# 
  2468  0091                     	;# 
  2469  0092                     	;# 
  2470  0092                     	;# 
  2471  0093                     	;# 
  2472  0094                     	;# 
  2473  0094                     	;# 
  2474  0095                     	;# 
  2475  0096                     	;# 
  2476  0096                     	;# 
  2477  0097                     	;# 
  2478  0098                     	;# 
  2479  0099                     	;# 
  2480  009A                     	;# 
  2481  009B                     	;# 
  2482  009B                     	;# 
  2483  009C                     	;# 
  2484  009D                     	;# 
  2485  009D                     	;# 
  2486  009E                     	;# 
  2487  009F                     	;# 
  2488  010C                     	;# 
  2489  010C                     	;# 
  2490  010D                     	;# 
  2491  010E                     	;# 
  2492  010F                     	;# 
  2493  010F                     	;# 
  2494  0110                     	;# 
  2495  0111                     	;# 
  2496  0112                     	;# 
  2497  0113                     	;# 
  2498  0114                     	;# 
  2499  0115                     	;# 
  2500  0116                     	;# 
  2501  0117                     	;# 
  2502  0118                     	;# 
  2503  0119                     	;# 
  2504  0119                     	;# 
  2505  0119                     	;# 
  2506  011A                     	;# 
  2507  011A                     	;# 
  2508  011A                     	;# 
  2509  011B                     	;# 
  2510  011B                     	;# 
  2511  011B                     	;# 
  2512  011B                     	;# 
  2513  011B                     	;# 
  2514  011C                     	;# 
  2515  011C                     	;# 
  2516  011C                     	;# 
  2517  011D                     	;# 
  2518  011D                     	;# 
  2519  011D                     	;# 
  2520  011E                     	;# 
  2521  011E                     	;# 
  2522  011E                     	;# 
  2523  011F                     	;# 
  2524  011F                     	;# 
  2525  011F                     	;# 
  2526  011F                     	;# 
  2527  011F                     	;# 
  2528  018C                     	;# 
  2529  018D                     	;# 
  2530  018E                     	;# 
  2531  018F                     	;# 
  2532  0190                     	;# 
  2533  0191                     	;# 
  2534  0192                     	;# 
  2535  0196                     	;# 
  2536  0197                     	;# 
  2537  0198                     	;# 
  2538  0199                     	;# 
  2539  019A                     	;# 
  2540  019B                     	;# 
  2541  019C                     	;# 
  2542  020C                     	;# 
  2543  020D                     	;# 
  2544  020E                     	;# 
  2545  020E                     	;# 
  2546  020F                     	;# 
  2547  020F                     	;# 
  2548  0210                     	;# 
  2549  0210                     	;# 
  2550  0211                     	;# 
  2551  0211                     	;# 
  2552  0212                     	;# 
  2553  0213                     	;# 
  2554  0214                     	;# 
  2555  0214                     	;# 
  2556  0215                     	;# 
  2557  0215                     	;# 
  2558  0216                     	;# 
  2559  0216                     	;# 
  2560  0217                     	;# 
  2561  0217                     	;# 
  2562  0218                     	;# 
  2563  0219                     	;# 
  2564  021A                     	;# 
  2565  021A                     	;# 
  2566  021B                     	;# 
  2567  021B                     	;# 
  2568  021C                     	;# 
  2569  021C                     	;# 
  2570  021D                     	;# 
  2571  021D                     	;# 
  2572  021E                     	;# 
  2573  021F                     	;# 
  2574  028C                     	;# 
  2575  028C                     	;# 
  2576  028D                     	;# 
  2577  028D                     	;# 
  2578  028E                     	;# 
  2579  028F                     	;# 
  2580  0290                     	;# 
  2581  0291                     	;# 
  2582  0292                     	;# 
  2583  0292                     	;# 
  2584  0293                     	;# 
  2585  0293                     	;# 
  2586  0294                     	;# 
  2587  0295                     	;# 
  2588  0296                     	;# 
  2589  0297                     	;# 
  2590  0298                     	;# 
  2591  0298                     	;# 
  2592  0299                     	;# 
  2593  0299                     	;# 
  2594  029A                     	;# 
  2595  029B                     	;# 
  2596  029C                     	;# 
  2597  029D                     	;# 
  2598  029F                     	;# 
  2599  030C                     	;# 
  2600  030C                     	;# 
  2601  030D                     	;# 
  2602  030E                     	;# 
  2603  030F                     	;# 
  2604  0310                     	;# 
  2605  0310                     	;# 
  2606  0311                     	;# 
  2607  0312                     	;# 
  2608  0313                     	;# 
  2609  0314                     	;# 
  2610  0314                     	;# 
  2611  0315                     	;# 
  2612  0316                     	;# 
  2613  0317                     	;# 
  2614  0318                     	;# 
  2615  0318                     	;# 
  2616  0319                     	;# 
  2617  031A                     	;# 
  2618  031B                     	;# 
  2619  038C                     	;# 
  2620  038C                     	;# 
  2621  038D                     	;# 
  2622  038E                     	;# 
  2623  0390                     	;# 
  2624  0390                     	;# 
  2625  0391                     	;# 
  2626  0392                     	;# 
  2627  048C                     	;# 
  2628  048C                     	;# 
  2629  048D                     	;# 
  2630  048E                     	;# 
  2631  048F                     	;# 
  2632  048F                     	;# 
  2633  0490                     	;# 
  2634  0491                     	;# 
  2635  0492                     	;# 
  2636  0492                     	;# 
  2637  0493                     	;# 
  2638  0494                     	;# 
  2639  0495                     	;# 
  2640  0495                     	;# 
  2641  0496                     	;# 
  2642  0497                     	;# 
  2643  0498                     	;# 
  2644  0499                     	;# 
  2645  049A                     	;# 
  2646  049B                     	;# 
  2647  049C                     	;# 
  2648  049D                     	;# 
  2649  058C                     	;# 
  2650  058C                     	;# 
  2651  058D                     	;# 
  2652  058E                     	;# 
  2653  058F                     	;# 
  2654  058F                     	;# 
  2655  0590                     	;# 
  2656  0591                     	;# 
  2657  0592                     	;# 
  2658  0593                     	;# 
  2659  059C                     	;# 
  2660  059C                     	;# 
  2661  059D                     	;# 
  2662  059D                     	;# 
  2663  059E                     	;# 
  2664  059F                     	;# 
  2665  060C                     	;# 
  2666  060C                     	;# 
  2667  060D                     	;# 
  2668  060D                     	;# 
  2669  060E                     	;# 
  2670  060F                     	;# 
  2671  0610                     	;# 
  2672  0611                     	;# 
  2673  0612                     	;# 
  2674  0613                     	;# 
  2675  0614                     	;# 
  2676  0616                     	;# 
  2677  0616                     	;# 
  2678  0617                     	;# 
  2679  0617                     	;# 
  2680  0618                     	;# 
  2681  0619                     	;# 
  2682  061A                     	;# 
  2683  061B                     	;# 
  2684  061C                     	;# 
  2685  061D                     	;# 
  2686  061E                     	;# 
  2687  070C                     	;# 
  2688  070D                     	;# 
  2689  070E                     	;# 
  2690  070F                     	;# 
  2691  0710                     	;# 
  2692  0711                     	;# 
  2693  0712                     	;# 
  2694  0713                     	;# 
  2695  0714                     	;# 
  2696  0716                     	;# 
  2697  0717                     	;# 
  2698  0718                     	;# 
  2699  0719                     	;# 
  2700  071A                     	;# 
  2701  071B                     	;# 
  2702  071C                     	;# 
  2703  071D                     	;# 
  2704  071E                     	;# 
  2705  0796                     	;# 
  2706  0797                     	;# 
  2707  0798                     	;# 
  2708  0799                     	;# 
  2709  079A                     	;# 
  2710  079B                     	;# 
  2711  079C                     	;# 
  2712  079D                     	;# 
  2713  080C                     	;# 
  2714  080D                     	;# 
  2715  080E                     	;# 
  2716  080F                     	;# 
  2717  0810                     	;# 
  2718  0811                     	;# 
  2719  0812                     	;# 
  2720  0813                     	;# 
  2721  0814                     	;# 
  2722  081A                     	;# 
  2723  081A                     	;# 
  2724  081B                     	;# 
  2725  081C                     	;# 
  2726  081C                     	;# 
  2727  081D                     	;# 
  2728  081E                     	;# 
  2729  081F                     	;# 
  2730  088C                     	;# 
  2731  088D                     	;# 
  2732  088E                     	;# 
  2733  088F                     	;# 
  2734  0890                     	;# 
  2735  0891                     	;# 
  2736  0892                     	;# 
  2737  0893                     	;# 
  2738  0895                     	;# 
  2739  0896                     	;# 
  2740  0897                     	;# 
  2741  0898                     	;# 
  2742  0899                     	;# 
  2743  089A                     	;# 
  2744  089B                     	;# 
  2745  090C                     	;# 
  2746  090E                     	;# 
  2747  090F                     	;# 
  2748  091F                     	;# 
  2749  098F                     	;# 
  2750  098F                     	;# 
  2751  0990                     	;# 
  2752  0991                     	;# 
  2753  0992                     	;# 
  2754  0993                     	;# 
  2755  0994                     	;# 
  2756  0995                     	;# 
  2757  0996                     	;# 
  2758  0997                     	;# 
  2759  1E0F                     	;# 
  2760  1E10                     	;# 
  2761  1E11                     	;# 
  2762  1E12                     	;# 
  2763  1E13                     	;# 
  2764  1E14                     	;# 
  2765  1E15                     	;# 
  2766  1E16                     	;# 
  2767  1E17                     	;# 
  2768  1E18                     	;# 
  2769  1E19                     	;# 
  2770  1E1A                     	;# 
  2771  1E1B                     	;# 
  2772  1E1C                     	;# 
  2773  1E1D                     	;# 
  2774  1E1E                     	;# 
  2775  1E1F                     	;# 
  2776  1E20                     	;# 
  2777  1E21                     	;# 
  2778  1E22                     	;# 
  2779  1E23                     	;# 
  2780  1E24                     	;# 
  2781  1E25                     	;# 
  2782  1E26                     	;# 
  2783  1E27                     	;# 
  2784  1E28                     	;# 
  2785  1E29                     	;# 
  2786  1E2A                     	;# 
  2787  1E2B                     	;# 
  2788  1E2C                     	;# 
  2789  1E2D                     	;# 
  2790  1E2E                     	;# 
  2791  1E2F                     	;# 
  2792  1E30                     	;# 
  2793  1E31                     	;# 
  2794  1E32                     	;# 
  2795  1E33                     	;# 
  2796  1E34                     	;# 
  2797  1E35                     	;# 
  2798  1E36                     	;# 
  2799  1E37                     	;# 
  2800  1E8F                     	;# 
  2801  1E90                     	;# 
  2802  1E91                     	;# 
  2803  1E92                     	;# 
  2804  1E93                     	;# 
  2805  1E94                     	;# 
  2806  1E95                     	;# 
  2807  1E96                     	;# 
  2808  1E97                     	;# 
  2809  1E9C                     	;# 
  2810  1E9D                     	;# 
  2811  1E9E                     	;# 
  2812  1EA1                     	;# 
  2813  1EA2                     	;# 
  2814  1EA3                     	;# 
  2815  1EA4                     	;# 
  2816  1EA9                     	;# 
  2817  1EAA                     	;# 
  2818  1EB1                     	;# 
  2819  1EB2                     	;# 
  2820  1EB8                     	;# 
  2821  1EB9                     	;# 
  2822  1EBA                     	;# 
  2823  1EBB                     	;# 
  2824  1EBC                     	;# 
  2825  1EBD                     	;# 
  2826  1EBE                     	;# 
  2827  1EC3                     	;# 
  2828  1EC5                     	;# 
  2829  1EC6                     	;# 
  2830  1EC7                     	;# 
  2831  1EC8                     	;# 
  2832  1EC9                     	;# 
  2833  1ECA                     	;# 
  2834  1ECB                     	;# 
  2835  1ECB                     	;# 
  2836  1ECB                     	;# 
  2837  1ECC                     	;# 
  2838  1ECC                     	;# 
  2839  1ECC                     	;# 
  2840  1F10                     	;# 
  2841  1F11                     	;# 
  2842  1F12                     	;# 
  2843  1F14                     	;# 
  2844  1F15                     	;# 
  2845  1F1C                     	;# 
  2846  1F1D                     	;# 
  2847  1F1E                     	;# 
  2848  1F1F                     	;# 
  2849  1F20                     	;# 
  2850  1F21                     	;# 
  2851  1F22                     	;# 
  2852  1F23                     	;# 
  2853  1F24                     	;# 
  2854  1F25                     	;# 
  2855  1F26                     	;# 
  2856  1F27                     	;# 
  2857  1F38                     	;# 
  2858  1F39                     	;# 
  2859  1F3A                     	;# 
  2860  1F3B                     	;# 
  2861  1F3C                     	;# 
  2862  1F3D                     	;# 
  2863  1F3E                     	;# 
  2864  1F3F                     	;# 
  2865  1F43                     	;# 
  2866  1F44                     	;# 
  2867  1F45                     	;# 
  2868  1F46                     	;# 
  2869  1F47                     	;# 
  2870  1F48                     	;# 
  2871  1F49                     	;# 
  2872  1F4A                     	;# 
  2873  1F4E                     	;# 
  2874  1F4F                     	;# 
  2875  1F50                     	;# 
  2876  1F51                     	;# 
  2877  1F52                     	;# 
  2878  1F53                     	;# 
  2879  1F54                     	;# 
  2880  1F55                     	;# 
  2881  1FE4                     	;# 
  2882  1FE5                     	;# 
  2883  1FE6                     	;# 
  2884  1FE7                     	;# 
  2885  1FE8                     	;# 
  2886  1FE8                     	;# 
  2887  1FE9                     	;# 
  2888  1FEA                     	;# 
  2889  1FEB                     	;# 
  2890  1FED                     	;# 
  2891  1FEE                     	;# 
  2892  1FEF                     	;# 
  2893  0000                     	;# 
  2894  0001                     	;# 
  2895  0002                     	;# 
  2896  0003                     	;# 
  2897  0004                     	;# 
  2898  0005                     	;# 
  2899  0006                     	;# 
  2900  0007                     	;# 
  2901  0008                     	;# 
  2902  0009                     	;# 
  2903  000A                     	;# 
  2904  000B                     	;# 
  2905  000C                     	;# 
  2906  000D                     	;# 
  2907  000E                     	;# 
  2908  0012                     	;# 
  2909  0013                     	;# 
  2910  0014                     	;# 
  2911  0018                     	;# 
  2912  0019                     	;# 
  2913  001A                     	;# 
  2914  008C                     	;# 
  2915  008C                     	;# 
  2916  008D                     	;# 
  2917  008E                     	;# 
  2918  008E                     	;# 
  2919  008F                     	;# 
  2920  0090                     	;# 
  2921  0090                     	;# 
  2922  0091                     	;# 
  2923  0092                     	;# 
  2924  0092                     	;# 
  2925  0093                     	;# 
  2926  0094                     	;# 
  2927  0094                     	;# 
  2928  0095                     	;# 
  2929  0096                     	;# 
  2930  0096                     	;# 
  2931  0097                     	;# 
  2932  0098                     	;# 
  2933  0099                     	;# 
  2934  009A                     	;# 
  2935  009B                     	;# 
  2936  009B                     	;# 
  2937  009C                     	;# 
  2938  009D                     	;# 
  2939  009D                     	;# 
  2940  009E                     	;# 
  2941  009F                     	;# 
  2942  010C                     	;# 
  2943  010C                     	;# 
  2944  010D                     	;# 
  2945  010E                     	;# 
  2946  010F                     	;# 
  2947  010F                     	;# 
  2948  0110                     	;# 
  2949  0111                     	;# 
  2950  0112                     	;# 
  2951  0113                     	;# 
  2952  0114                     	;# 
  2953  0115                     	;# 
  2954  0116                     	;# 
  2955  0117                     	;# 
  2956  0118                     	;# 
  2957  0119                     	;# 
  2958  0119                     	;# 
  2959  0119                     	;# 
  2960  011A                     	;# 
  2961  011A                     	;# 
  2962  011A                     	;# 
  2963  011B                     	;# 
  2964  011B                     	;# 
  2965  011B                     	;# 
  2966  011B                     	;# 
  2967  011B                     	;# 
  2968  011C                     	;# 
  2969  011C                     	;# 
  2970  011C                     	;# 
  2971  011D                     	;# 
  2972  011D                     	;# 
  2973  011D                     	;# 
  2974  011E                     	;# 
  2975  011E                     	;# 
  2976  011E                     	;# 
  2977  011F                     	;# 
  2978  011F                     	;# 
  2979  011F                     	;# 
  2980  011F                     	;# 
  2981  011F                     	;# 
  2982  018C                     	;# 
  2983  018D                     	;# 
  2984  018E                     	;# 
  2985  018F                     	;# 
  2986  0190                     	;# 
  2987  0191                     	;# 
  2988  0192                     	;# 
  2989  0196                     	;# 
  2990  0197                     	;# 
  2991  0198                     	;# 
  2992  0199                     	;# 
  2993  019A                     	;# 
  2994  019B                     	;# 
  2995  019C                     	;# 
  2996  020C                     	;# 
  2997  020D                     	;# 
  2998  020E                     	;# 
  2999  020E                     	;# 
  3000  020F                     	;# 
  3001  020F                     	;# 
  3002  0210                     	;# 
  3003  0210                     	;# 
  3004  0211                     	;# 
  3005  0211                     	;# 
  3006  0212                     	;# 
  3007  0213                     	;# 
  3008  0214                     	;# 
  3009  0214                     	;# 
  3010  0215                     	;# 
  3011  0215                     	;# 
  3012  0216                     	;# 
  3013  0216                     	;# 
  3014  0217                     	;# 
  3015  0217                     	;# 
  3016  0218                     	;# 
  3017  0219                     	;# 
  3018  021A                     	;# 
  3019  021A                     	;# 
  3020  021B                     	;# 
  3021  021B                     	;# 
  3022  021C                     	;# 
  3023  021C                     	;# 
  3024  021D                     	;# 
  3025  021D                     	;# 
  3026  021E                     	;# 
  3027  021F                     	;# 
  3028  028C                     	;# 
  3029  028C                     	;# 
  3030  028D                     	;# 
  3031  028D                     	;# 
  3032  028E                     	;# 
  3033  028F                     	;# 
  3034  0290                     	;# 
  3035  0291                     	;# 
  3036  0292                     	;# 
  3037  0292                     	;# 
  3038  0293                     	;# 
  3039  0293                     	;# 
  3040  0294                     	;# 
  3041  0295                     	;# 
  3042  0296                     	;# 
  3043  0297                     	;# 
  3044  0298                     	;# 
  3045  0298                     	;# 
  3046  0299                     	;# 
  3047  0299                     	;# 
  3048  029A                     	;# 
  3049  029B                     	;# 
  3050  029C                     	;# 
  3051  029D                     	;# 
  3052  029F                     	;# 
  3053  030C                     	;# 
  3054  030C                     	;# 
  3055  030D                     	;# 
  3056  030E                     	;# 
  3057  030F                     	;# 
  3058  0310                     	;# 
  3059  0310                     	;# 
  3060  0311                     	;# 
  3061  0312                     	;# 
  3062  0313                     	;# 
  3063  0314                     	;# 
  3064  0314                     	;# 
  3065  0315                     	;# 
  3066  0316                     	;# 
  3067  0317                     	;# 
  3068  0318                     	;# 
  3069  0318                     	;# 
  3070  0319                     	;# 
  3071  031A                     	;# 
  3072  031B                     	;# 
  3073  038C                     	;# 
  3074  038C                     	;# 
  3075  038D                     	;# 
  3076  038E                     	;# 
  3077  0390                     	;# 
  3078  0390                     	;# 
  3079  0391                     	;# 
  3080  0392                     	;# 
  3081  048C                     	;# 
  3082  048C                     	;# 
  3083  048D                     	;# 
  3084  048E                     	;# 
  3085  048F                     	;# 
  3086  048F                     	;# 
  3087  0490                     	;# 
  3088  0491                     	;# 
  3089  0492                     	;# 
  3090  0492                     	;# 
  3091  0493                     	;# 
  3092  0494                     	;# 
  3093  0495                     	;# 
  3094  0495                     	;# 
  3095  0496                     	;# 
  3096  0497                     	;# 
  3097  0498                     	;# 
  3098  0499                     	;# 
  3099  049A                     	;# 
  3100  049B                     	;# 
  3101  049C                     	;# 
  3102  049D                     	;# 
  3103  058C                     	;# 
  3104  058C                     	;# 
  3105  058D                     	;# 
  3106  058E                     	;# 
  3107  058F                     	;# 
  3108  058F                     	;# 
  3109  0590                     	;# 
  3110  0591                     	;# 
  3111  0592                     	;# 
  3112  0593                     	;# 
  3113  059C                     	;# 
  3114  059C                     	;# 
  3115  059D                     	;# 
  3116  059D                     	;# 
  3117  059E                     	;# 
  3118  059F                     	;# 
  3119  060C                     	;# 
  3120  060C                     	;# 
  3121  060D                     	;# 
  3122  060D                     	;# 
  3123  060E                     	;# 
  3124  060F                     	;# 
  3125  0610                     	;# 
  3126  0611                     	;# 
  3127  0612                     	;# 
  3128  0613                     	;# 
  3129  0614                     	;# 
  3130  0616                     	;# 
  3131  0616                     	;# 
  3132  0617                     	;# 
  3133  0617                     	;# 
  3134  0618                     	;# 
  3135  0619                     	;# 
  3136  061A                     	;# 
  3137  061B                     	;# 
  3138  061C                     	;# 
  3139  061D                     	;# 
  3140  061E                     	;# 
  3141  070C                     	;# 
  3142  070D                     	;# 
  3143  070E                     	;# 
  3144  070F                     	;# 
  3145  0710                     	;# 
  3146  0711                     	;# 
  3147  0712                     	;# 
  3148  0713                     	;# 
  3149  0714                     	;# 
  3150  0716                     	;# 
  3151  0717                     	;# 
  3152  0718                     	;# 
  3153  0719                     	;# 
  3154  071A                     	;# 
  3155  071B                     	;# 
  3156  071C                     	;# 
  3157  071D                     	;# 
  3158  071E                     	;# 
  3159  0796                     	;# 
  3160  0797                     	;# 
  3161  0798                     	;# 
  3162  0799                     	;# 
  3163  079A                     	;# 
  3164  079B                     	;# 
  3165  079C                     	;# 
  3166  079D                     	;# 
  3167  080C                     	;# 
  3168  080D                     	;# 
  3169  080E                     	;# 
  3170  080F                     	;# 
  3171  0810                     	;# 
  3172  0811                     	;# 
  3173  0812                     	;# 
  3174  0813                     	;# 
  3175  0814                     	;# 
  3176  081A                     	;# 
  3177  081A                     	;# 
  3178  081B                     	;# 
  3179  081C                     	;# 
  3180  081C                     	;# 
  3181  081D                     	;# 
  3182  081E                     	;# 
  3183  081F                     	;# 
  3184  088C                     	;# 
  3185  088D                     	;# 
  3186  088E                     	;# 
  3187  088F                     	;# 
  3188  0890                     	;# 
  3189  0891                     	;# 
  3190  0892                     	;# 
  3191  0893                     	;# 
  3192  0895                     	;# 
  3193  0896                     	;# 
  3194  0897                     	;# 
  3195  0898                     	;# 
  3196  0899                     	;# 
  3197  089A                     	;# 
  3198  089B                     	;# 
  3199  090C                     	;# 
  3200  090E                     	;# 
  3201  090F                     	;# 
  3202  091F                     	;# 
  3203  098F                     	;# 
  3204  098F                     	;# 
  3205  0990                     	;# 
  3206  0991                     	;# 
  3207  0992                     	;# 
  3208  0993                     	;# 
  3209  0994                     	;# 
  3210  0995                     	;# 
  3211  0996                     	;# 
  3212  0997                     	;# 
  3213  1E0F                     	;# 
  3214  1E10                     	;# 
  3215  1E11                     	;# 
  3216  1E12                     	;# 
  3217  1E13                     	;# 
  3218  1E14                     	;# 
  3219  1E15                     	;# 
  3220  1E16                     	;# 
  3221  1E17                     	;# 
  3222  1E18                     	;# 
  3223  1E19                     	;# 
  3224  1E1A                     	;# 
  3225  1E1B                     	;# 
  3226  1E1C                     	;# 
  3227  1E1D                     	;# 
  3228  1E1E                     	;# 
  3229  1E1F                     	;# 
  3230  1E20                     	;# 
  3231  1E21                     	;# 
  3232  1E22                     	;# 
  3233  1E23                     	;# 
  3234  1E24                     	;# 
  3235  1E25                     	;# 
  3236  1E26                     	;# 
  3237  1E27                     	;# 
  3238  1E28                     	;# 
  3239  1E29                     	;# 
  3240  1E2A                     	;# 
  3241  1E2B                     	;# 
  3242  1E2C                     	;# 
  3243  1E2D                     	;# 
  3244  1E2E                     	;# 
  3245  1E2F                     	;# 
  3246  1E30                     	;# 
  3247  1E31                     	;# 
  3248  1E32                     	;# 
  3249  1E33                     	;# 
  3250  1E34                     	;# 
  3251  1E35                     	;# 
  3252  1E36                     	;# 
  3253  1E37                     	;# 
  3254  1E8F                     	;# 
  3255  1E90                     	;# 
  3256  1E91                     	;# 
  3257  1E92                     	;# 
  3258  1E93                     	;# 
  3259  1E94                     	;# 
  3260  1E95                     	;# 
  3261  1E96                     	;# 
  3262  1E97                     	;# 
  3263  1E9C                     	;# 
  3264  1E9D                     	;# 
  3265  1E9E                     	;# 
  3266  1EA1                     	;# 
  3267  1EA2                     	;# 
  3268  1EA3                     	;# 
  3269  1EA4                     	;# 
  3270  1EA9                     	;# 
  3271  1EAA                     	;# 
  3272  1EB1                     	;# 
  3273  1EB2                     	;# 
  3274  1EB8                     	;# 
  3275  1EB9                     	;# 
  3276  1EBA                     	;# 
  3277  1EBB                     	;# 
  3278  1EBC                     	;# 
  3279  1EBD                     	;# 
  3280  1EBE                     	;# 
  3281  1EC3                     	;# 
  3282  1EC5                     	;# 
  3283  1EC6                     	;# 
  3284  1EC7                     	;# 
  3285  1EC8                     	;# 
  3286  1EC9                     	;# 
  3287  1ECA                     	;# 
  3288  1ECB                     	;# 
  3289  1ECB                     	;# 
  3290  1ECB                     	;# 
  3291  1ECC                     	;# 
  3292  1ECC                     	;# 
  3293  1ECC                     	;# 
  3294  1F10                     	;# 
  3295  1F11                     	;# 
  3296  1F12                     	;# 
  3297  1F14                     	;# 
  3298  1F15                     	;# 
  3299  1F1C                     	;# 
  3300  1F1D                     	;# 
  3301  1F1E                     	;# 
  3302  1F1F                     	;# 
  3303  1F20                     	;# 
  3304  1F21                     	;# 
  3305  1F22                     	;# 
  3306  1F23                     	;# 
  3307  1F24                     	;# 
  3308  1F25                     	;# 
  3309  1F26                     	;# 
  3310  1F27                     	;# 
  3311  1F38                     	;# 
  3312  1F39                     	;# 
  3313  1F3A                     	;# 
  3314  1F3B                     	;# 
  3315  1F3C                     	;# 
  3316  1F3D                     	;# 
  3317  1F3E                     	;# 
  3318  1F3F                     	;# 
  3319  1F43                     	;# 
  3320  1F44                     	;# 
  3321  1F45                     	;# 
  3322  1F46                     	;# 
  3323  1F47                     	;# 
  3324  1F48                     	;# 
  3325  1F49                     	;# 
  3326  1F4A                     	;# 
  3327  1F4E                     	;# 
  3328  1F4F                     	;# 
  3329  1F50                     	;# 
  3330  1F51                     	;# 
  3331  1F52                     	;# 
  3332  1F53                     	;# 
  3333  1F54                     	;# 
  3334  1F55                     	;# 
  3335  1FE4                     	;# 
  3336  1FE5                     	;# 
  3337  1FE6                     	;# 
  3338  1FE7                     	;# 
  3339  1FE8                     	;# 
  3340  1FE8                     	;# 
  3341  1FE9                     	;# 
  3342  1FEA                     	;# 
  3343  1FEB                     	;# 
  3344  1FED                     	;# 
  3345  1FEE                     	;# 
  3346  1FEF                     	;# 
  3347  0000                     	;# 
  3348  0001                     	;# 
  3349  0002                     	;# 
  3350  0003                     	;# 
  3351  0004                     	;# 
  3352  0005                     	;# 
  3353  0006                     	;# 
  3354  0007                     	;# 
  3355  0008                     	;# 
  3356  0009                     	;# 
  3357  000A                     	;# 
  3358  000B                     	;# 
  3359  000C                     	;# 
  3360  000D                     	;# 
  3361  000E                     	;# 
  3362  0012                     	;# 
  3363  0013                     	;# 
  3364  0014                     	;# 
  3365  0018                     	;# 
  3366  0019                     	;# 
  3367  001A                     	;# 
  3368  008C                     	;# 
  3369  008C                     	;# 
  3370  008D                     	;# 
  3371  008E                     	;# 
  3372  008E                     	;# 
  3373  008F                     	;# 
  3374  0090                     	;# 
  3375  0090                     	;# 
  3376  0091                     	;# 
  3377  0092                     	;# 
  3378  0092                     	;# 
  3379  0093                     	;# 
  3380  0094                     	;# 
  3381  0094                     	;# 
  3382  0095                     	;# 
  3383  0096                     	;# 
  3384  0096                     	;# 
  3385  0097                     	;# 
  3386  0098                     	;# 
  3387  0099                     	;# 
  3388  009A                     	;# 
  3389  009B                     	;# 
  3390  009B                     	;# 
  3391  009C                     	;# 
  3392  009D                     	;# 
  3393  009D                     	;# 
  3394  009E                     	;# 
  3395  009F                     	;# 
  3396  010C                     	;# 
  3397  010C                     	;# 
  3398  010D                     	;# 
  3399  010E                     	;# 
  3400  010F                     	;# 
  3401  010F                     	;# 
  3402  0110                     	;# 
  3403  0111                     	;# 
  3404  0112                     	;# 
  3405  0113                     	;# 
  3406  0114                     	;# 
  3407  0115                     	;# 
  3408  0116                     	;# 
  3409  0117                     	;# 
  3410  0118                     	;# 
  3411  0119                     	;# 
  3412  0119                     	;# 
  3413  0119                     	;# 
  3414  011A                     	;# 
  3415  011A                     	;# 
  3416  011A                     	;# 
  3417  011B                     	;# 
  3418  011B                     	;# 
  3419  011B                     	;# 
  3420  011B                     	;# 
  3421  011B                     	;# 
  3422  011C                     	;# 
  3423  011C                     	;# 
  3424  011C                     	;# 
  3425  011D                     	;# 
  3426  011D                     	;# 
  3427  011D                     	;# 
  3428  011E                     	;# 
  3429  011E                     	;# 
  3430  011E                     	;# 
  3431  011F                     	;# 
  3432  011F                     	;# 
  3433  011F                     	;# 
  3434  011F                     	;# 
  3435  011F                     	;# 
  3436  018C                     	;# 
  3437  018D                     	;# 
  3438  018E                     	;# 
  3439  018F                     	;# 
  3440  0190                     	;# 
  3441  0191                     	;# 
  3442  0192                     	;# 
  3443  0196                     	;# 
  3444  0197                     	;# 
  3445  0198                     	;# 
  3446  0199                     	;# 
  3447  019A                     	;# 
  3448  019B                     	;# 
  3449  019C                     	;# 
  3450  020C                     	;# 
  3451  020D                     	;# 
  3452  020E                     	;# 
  3453  020E                     	;# 
  3454  020F                     	;# 
  3455  020F                     	;# 
  3456  0210                     	;# 
  3457  0210                     	;# 
  3458  0211                     	;# 
  3459  0211                     	;# 
  3460  0212                     	;# 
  3461  0213                     	;# 
  3462  0214                     	;# 
  3463  0214                     	;# 
  3464  0215                     	;# 
  3465  0215                     	;# 
  3466  0216                     	;# 
  3467  0216                     	;# 
  3468  0217                     	;# 
  3469  0217                     	;# 
  3470  0218                     	;# 
  3471  0219                     	;# 
  3472  021A                     	;# 
  3473  021A                     	;# 
  3474  021B                     	;# 
  3475  021B                     	;# 
  3476  021C                     	;# 
  3477  021C                     	;# 
  3478  021D                     	;# 
  3479  021D                     	;# 
  3480  021E                     	;# 
  3481  021F                     	;# 
  3482  028C                     	;# 
  3483  028C                     	;# 
  3484  028D                     	;# 
  3485  028D                     	;# 
  3486  028E                     	;# 
  3487  028F                     	;# 
  3488  0290                     	;# 
  3489  0291                     	;# 
  3490  0292                     	;# 
  3491  0292                     	;# 
  3492  0293                     	;# 
  3493  0293                     	;# 
  3494  0294                     	;# 
  3495  0295                     	;# 
  3496  0296                     	;# 
  3497  0297                     	;# 
  3498  0298                     	;# 
  3499  0298                     	;# 
  3500  0299                     	;# 
  3501  0299                     	;# 
  3502  029A                     	;# 
  3503  029B                     	;# 
  3504  029C                     	;# 
  3505  029D                     	;# 
  3506  029F                     	;# 
  3507  030C                     	;# 
  3508  030C                     	;# 
  3509  030D                     	;# 
  3510  030E                     	;# 
  3511  030F                     	;# 
  3512  0310                     	;# 
  3513  0310                     	;# 
  3514  0311                     	;# 
  3515  0312                     	;# 
  3516  0313                     	;# 
  3517  0314                     	;# 
  3518  0314                     	;# 
  3519  0315                     	;# 
  3520  0316                     	;# 
  3521  0317                     	;# 
  3522  0318                     	;# 
  3523  0318                     	;# 
  3524  0319                     	;# 
  3525  031A                     	;# 
  3526  031B                     	;# 
  3527  038C                     	;# 
  3528  038C                     	;# 
  3529  038D                     	;# 
  3530  038E                     	;# 
  3531  0390                     	;# 
  3532  0390                     	;# 
  3533  0391                     	;# 
  3534  0392                     	;# 
  3535  048C                     	;# 
  3536  048C                     	;# 
  3537  048D                     	;# 
  3538  048E                     	;# 
  3539  048F                     	;# 
  3540  048F                     	;# 
  3541  0490                     	;# 
  3542  0491                     	;# 
  3543  0492                     	;# 
  3544  0492                     	;# 
  3545  0493                     	;# 
  3546  0494                     	;# 
  3547  0495                     	;# 
  3548  0495                     	;# 
  3549  0496                     	;# 
  3550  0497                     	;# 
  3551  0498                     	;# 
  3552  0499                     	;# 
  3553  049A                     	;# 
  3554  049B                     	;# 
  3555  049C                     	;# 
  3556  049D                     	;# 
  3557  058C                     	;# 
  3558  058C                     	;# 
  3559  058D                     	;# 
  3560  058E                     	;# 
  3561  058F                     	;# 
  3562  058F                     	;# 
  3563  0590                     	;# 
  3564  0591                     	;# 
  3565  0592                     	;# 
  3566  0593                     	;# 
  3567  059C                     	;# 
  3568  059C                     	;# 
  3569  059D                     	;# 
  3570  059D                     	;# 
  3571  059E                     	;# 
  3572  059F                     	;# 
  3573  060C                     	;# 
  3574  060C                     	;# 
  3575  060D                     	;# 
  3576  060D                     	;# 
  3577  060E                     	;# 
  3578  060F                     	;# 
  3579  0610                     	;# 
  3580  0611                     	;# 
  3581  0612                     	;# 
  3582  0613                     	;# 
  3583  0614                     	;# 
  3584  0616                     	;# 
  3585  0616                     	;# 
  3586  0617                     	;# 
  3587  0617                     	;# 
  3588  0618                     	;# 
  3589  0619                     	;# 
  3590  061A                     	;# 
  3591  061B                     	;# 
  3592  061C                     	;# 
  3593  061D                     	;# 
  3594  061E                     	;# 
  3595  070C                     	;# 
  3596  070D                     	;# 
  3597  070E                     	;# 
  3598  070F                     	;# 
  3599  0710                     	;# 
  3600  0711                     	;# 
  3601  0712                     	;# 
  3602  0713                     	;# 
  3603  0714                     	;# 
  3604  0716                     	;# 
  3605  0717                     	;# 
  3606  0718                     	;# 
  3607  0719                     	;# 
  3608  071A                     	;# 
  3609  071B                     	;# 
  3610  071C                     	;# 
  3611  071D                     	;# 
  3612  071E                     	;# 
  3613  0796                     	;# 
  3614  0797                     	;# 
  3615  0798                     	;# 
  3616  0799                     	;# 
  3617  079A                     	;# 
  3618  079B                     	;# 
  3619  079C                     	;# 
  3620  079D                     	;# 
  3621  080C                     	;# 
  3622  080D                     	;# 
  3623  080E                     	;# 
  3624  080F                     	;# 
  3625  0810                     	;# 
  3626  0811                     	;# 
  3627  0812                     	;# 
  3628  0813                     	;# 
  3629  0814                     	;# 
  3630  081A                     	;# 
  3631  081A                     	;# 
  3632  081B                     	;# 
  3633  081C                     	;# 
  3634  081C                     	;# 
  3635  081D                     	;# 
  3636  081E                     	;# 
  3637  081F                     	;# 
  3638  088C                     	;# 
  3639  088D                     	;# 
  3640  088E                     	;# 
  3641  088F                     	;# 
  3642  0890                     	;# 
  3643  0891                     	;# 
  3644  0892                     	;# 
  3645  0893                     	;# 
  3646  0895                     	;# 
  3647  0896                     	;# 
  3648  0897                     	;# 
  3649  0898                     	;# 
  3650  0899                     	;# 
  3651  089A                     	;# 
  3652  089B                     	;# 
  3653  090C                     	;# 
  3654  090E                     	;# 
  3655  090F                     	;# 
  3656  091F                     	;# 
  3657  098F                     	;# 
  3658  098F                     	;# 
  3659  0990                     	;# 
  3660  0991                     	;# 
  3661  0992                     	;# 
  3662  0993                     	;# 
  3663  0994                     	;# 
  3664  0995                     	;# 
  3665  0996                     	;# 
  3666  0997                     	;# 
  3667  1E0F                     	;# 
  3668  1E10                     	;# 
  3669  1E11                     	;# 
  3670  1E12                     	;# 
  3671  1E13                     	;# 
  3672  1E14                     	;# 
  3673  1E15                     	;# 
  3674  1E16                     	;# 
  3675  1E17                     	;# 
  3676  1E18                     	;# 
  3677  1E19                     	;# 
  3678  1E1A                     	;# 
  3679  1E1B                     	;# 
  3680  1E1C                     	;# 
  3681  1E1D                     	;# 
  3682  1E1E                     	;# 
  3683  1E1F                     	;# 
  3684  1E20                     	;# 
  3685  1E21                     	;# 
  3686  1E22                     	;# 
  3687  1E23                     	;# 
  3688  1E24                     	;# 
  3689  1E25                     	;# 
  3690  1E26                     	;# 
  3691  1E27                     	;# 
  3692  1E28                     	;# 
  3693  1E29                     	;# 
  3694  1E2A                     	;# 
  3695  1E2B                     	;# 
  3696  1E2C                     	;# 
  3697  1E2D                     	;# 
  3698  1E2E                     	;# 
  3699  1E2F                     	;# 
  3700  1E30                     	;# 
  3701  1E31                     	;# 
  3702  1E32                     	;# 
  3703  1E33                     	;# 
  3704  1E34                     	;# 
  3705  1E35                     	;# 
  3706  1E36                     	;# 
  3707  1E37                     	;# 
  3708  1E8F                     	;# 
  3709  1E90                     	;# 
  3710  1E91                     	;# 
  3711  1E92                     	;# 
  3712  1E93                     	;# 
  3713  1E94                     	;# 
  3714  1E95                     	;# 
  3715  1E96                     	;# 
  3716  1E97                     	;# 
  3717  1E9C                     	;# 
  3718  1E9D                     	;# 
  3719  1E9E                     	;# 
  3720  1EA1                     	;# 
  3721  1EA2                     	;# 
  3722  1EA3                     	;# 
  3723  1EA4                     	;# 
  3724  1EA9                     	;# 
  3725  1EAA                     	;# 
  3726  1EB1                     	;# 
  3727  1EB2                     	;# 
  3728  1EB8                     	;# 
  3729  1EB9                     	;# 
  3730  1EBA                     	;# 
  3731  1EBB                     	;# 
  3732  1EBC                     	;# 
  3733  1EBD                     	;# 
  3734  1EBE                     	;# 
  3735  1EC3                     	;# 
  3736  1EC5                     	;# 
  3737  1EC6                     	;# 
  3738  1EC7                     	;# 
  3739  1EC8                     	;# 
  3740  1EC9                     	;# 
  3741  1ECA                     	;# 
  3742  1ECB                     	;# 
  3743  1ECB                     	;# 
  3744  1ECB                     	;# 
  3745  1ECC                     	;# 
  3746  1ECC                     	;# 
  3747  1ECC                     	;# 
  3748  1F10                     	;# 
  3749  1F11                     	;# 
  3750  1F12                     	;# 
  3751  1F14                     	;# 
  3752  1F15                     	;# 
  3753  1F1C                     	;# 
  3754  1F1D                     	;# 
  3755  1F1E                     	;# 
  3756  1F1F                     	;# 
  3757  1F20                     	;# 
  3758  1F21                     	;# 
  3759  1F22                     	;# 
  3760  1F23                     	;# 
  3761  1F24                     	;# 
  3762  1F25                     	;# 
  3763  1F26                     	;# 
  3764  1F27                     	;# 
  3765  1F38                     	;# 
  3766  1F39                     	;# 
  3767  1F3A                     	;# 
  3768  1F3B                     	;# 
  3769  1F3C                     	;# 
  3770  1F3D                     	;# 
  3771  1F3E                     	;# 
  3772  1F3F                     	;# 
  3773  1F43                     	;# 
  3774  1F44                     	;# 
  3775  1F45                     	;# 
  3776  1F46                     	;# 
  3777  1F47                     	;# 
  3778  1F48                     	;# 
  3779  1F49                     	;# 
  3780  1F4A                     	;# 
  3781  1F4E                     	;# 
  3782  1F4F                     	;# 
  3783  1F50                     	;# 
  3784  1F51                     	;# 
  3785  1F52                     	;# 
  3786  1F53                     	;# 
  3787  1F54                     	;# 
  3788  1F55                     	;# 
  3789  1FE4                     	;# 
  3790  1FE5                     	;# 
  3791  1FE6                     	;# 
  3792  1FE7                     	;# 
  3793  1FE8                     	;# 
  3794  1FE8                     	;# 
  3795  1FE9                     	;# 
  3796  1FEA                     	;# 
  3797  1FEB                     	;# 
  3798  1FED                     	;# 
  3799  1FEE                     	;# 
  3800  1FEF                     	;# 
  3801  0000                     	;# 
  3802  0001                     	;# 
  3803  0002                     	;# 
  3804  0003                     	;# 
  3805  0004                     	;# 
  3806  0005                     	;# 
  3807  0006                     	;# 
  3808  0007                     	;# 
  3809  0008                     	;# 
  3810  0009                     	;# 
  3811  000A                     	;# 
  3812  000B                     	;# 
  3813  000C                     	;# 
  3814  000D                     	;# 
  3815  000E                     	;# 
  3816  0012                     	;# 
  3817  0013                     	;# 
  3818  0014                     	;# 
  3819  0018                     	;# 
  3820  0019                     	;# 
  3821  001A                     	;# 
  3822  008C                     	;# 
  3823  008C                     	;# 
  3824  008D                     	;# 
  3825  008E                     	;# 
  3826  008E                     	;# 
  3827  008F                     	;# 
  3828  0090                     	;# 
  3829  0090                     	;# 
  3830  0091                     	;# 
  3831  0092                     	;# 
  3832  0092                     	;# 
  3833  0093                     	;# 
  3834  0094                     	;# 
  3835  0094                     	;# 
  3836  0095                     	;# 
  3837  0096                     	;# 
  3838  0096                     	;# 
  3839  0097                     	;# 
  3840  0098                     	;# 
  3841  0099                     	;# 
  3842  009A                     	;# 
  3843  009B                     	;# 
  3844  009B                     	;# 
  3845  009C                     	;# 
  3846  009D                     	;# 
  3847  009D                     	;# 
  3848  009E                     	;# 
  3849  009F                     	;# 
  3850  010C                     	;# 
  3851  010C                     	;# 
  3852  010D                     	;# 
  3853  010E                     	;# 
  3854  010F                     	;# 
  3855  010F                     	;# 
  3856  0110                     	;# 
  3857  0111                     	;# 
  3858  0112                     	;# 
  3859  0113                     	;# 
  3860  0114                     	;# 
  3861  0115                     	;# 
  3862  0116                     	;# 
  3863  0117                     	;# 
  3864  0118                     	;# 
  3865  0119                     	;# 
  3866  0119                     	;# 
  3867  0119                     	;# 
  3868  011A                     	;# 
  3869  011A                     	;# 
  3870  011A                     	;# 
  3871  011B                     	;# 
  3872  011B                     	;# 
  3873  011B                     	;# 
  3874  011B                     	;# 
  3875  011B                     	;# 
  3876  011C                     	;# 
  3877  011C                     	;# 
  3878  011C                     	;# 
  3879  011D                     	;# 
  3880  011D                     	;# 
  3881  011D                     	;# 
  3882  011E                     	;# 
  3883  011E                     	;# 
  3884  011E                     	;# 
  3885  011F                     	;# 
  3886  011F                     	;# 
  3887  011F                     	;# 
  3888  011F                     	;# 
  3889  011F                     	;# 
  3890  018C                     	;# 
  3891  018D                     	;# 
  3892  018E                     	;# 
  3893  018F                     	;# 
  3894  0190                     	;# 
  3895  0191                     	;# 
  3896  0192                     	;# 
  3897  0196                     	;# 
  3898  0197                     	;# 
  3899  0198                     	;# 
  3900  0199                     	;# 
  3901  019A                     	;# 
  3902  019B                     	;# 
  3903  019C                     	;# 
  3904  020C                     	;# 
  3905  020D                     	;# 
  3906  020E                     	;# 
  3907  020E                     	;# 
  3908  020F                     	;# 
  3909  020F                     	;# 
  3910  0210                     	;# 
  3911  0210                     	;# 
  3912  0211                     	;# 
  3913  0211                     	;# 
  3914  0212                     	;# 
  3915  0213                     	;# 
  3916  0214                     	;# 
  3917  0214                     	;# 
  3918  0215                     	;# 
  3919  0215                     	;# 
  3920  0216                     	;# 
  3921  0216                     	;# 
  3922  0217                     	;# 
  3923  0217                     	;# 
  3924  0218                     	;# 
  3925  0219                     	;# 
  3926  021A                     	;# 
  3927  021A                     	;# 
  3928  021B                     	;# 
  3929  021B                     	;# 
  3930  021C                     	;# 
  3931  021C                     	;# 
  3932  021D                     	;# 
  3933  021D                     	;# 
  3934  021E                     	;# 
  3935  021F                     	;# 
  3936  028C                     	;# 
  3937  028C                     	;# 
  3938  028D                     	;# 
  3939  028D                     	;# 
  3940  028E                     	;# 
  3941  028F                     	;# 
  3942  0290                     	;# 
  3943  0291                     	;# 
  3944  0292                     	;# 
  3945  0292                     	;# 
  3946  0293                     	;# 
  3947  0293                     	;# 
  3948  0294                     	;# 
  3949  0295                     	;# 
  3950  0296                     	;# 
  3951  0297                     	;# 
  3952  0298                     	;# 
  3953  0298                     	;# 
  3954  0299                     	;# 
  3955  0299                     	;# 
  3956  029A                     	;# 
  3957  029B                     	;# 
  3958  029C                     	;# 
  3959  029D                     	;# 
  3960  029F                     	;# 
  3961  030C                     	;# 
  3962  030C                     	;# 
  3963  030D                     	;# 
  3964  030E                     	;# 
  3965  030F                     	;# 
  3966  0310                     	;# 
  3967  0310                     	;# 
  3968  0311                     	;# 
  3969  0312                     	;# 
  3970  0313                     	;# 
  3971  0314                     	;# 
  3972  0314                     	;# 
  3973  0315                     	;# 
  3974  0316                     	;# 
  3975  0317                     	;# 
  3976  0318                     	;# 
  3977  0318                     	;# 
  3978  0319                     	;# 
  3979  031A                     	;# 
  3980  031B                     	;# 
  3981  038C                     	;# 
  3982  038C                     	;# 
  3983  038D                     	;# 
  3984  038E                     	;# 
  3985  0390                     	;# 
  3986  0390                     	;# 
  3987  0391                     	;# 
  3988  0392                     	;# 
  3989  048C                     	;# 
  3990  048C                     	;# 
  3991  048D                     	;# 
  3992  048E                     	;# 
  3993  048F                     	;# 
  3994  048F                     	;# 
  3995  0490                     	;# 
  3996  0491                     	;# 
  3997  0492                     	;# 
  3998  0492                     	;# 
  3999  0493                     	;# 
  4000  0494                     	;# 
  4001  0495                     	;# 
  4002  0495                     	;# 
  4003  0496                     	;# 
  4004  0497                     	;# 
  4005  0498                     	;# 
  4006  0499                     	;# 
  4007  049A                     	;# 
  4008  049B                     	;# 
  4009  049C                     	;# 
  4010  049D                     	;# 
  4011  058C                     	;# 
  4012  058C                     	;# 
  4013  058D                     	;# 
  4014  058E                     	;# 
  4015  058F                     	;# 
  4016  058F                     	;# 
  4017  0590                     	;# 
  4018  0591                     	;# 
  4019  0592                     	;# 
  4020  0593                     	;# 
  4021  059C                     	;# 
  4022  059C                     	;# 
  4023  059D                     	;# 
  4024  059D                     	;# 
  4025  059E                     	;# 
  4026  059F                     	;# 
  4027  060C                     	;# 
  4028  060C                     	;# 
  4029  060D                     	;# 
  4030  060D                     	;# 
  4031  060E                     	;# 
  4032  060F                     	;# 
  4033  0610                     	;# 
  4034  0611                     	;# 
  4035  0612                     	;# 
  4036  0613                     	;# 
  4037  0614                     	;# 
  4038  0616                     	;# 
  4039  0616                     	;# 
  4040  0617                     	;# 
  4041  0617                     	;# 
  4042  0618                     	;# 
  4043  0619                     	;# 
  4044  061A                     	;# 
  4045  061B                     	;# 
  4046  061C                     	;# 
  4047  061D                     	;# 
  4048  061E                     	;# 
  4049  070C                     	;# 
  4050  070D                     	;# 
  4051  070E                     	;# 
  4052  070F                     	;# 
  4053  0710                     	;# 
  4054  0711                     	;# 
  4055  0712                     	;# 
  4056  0713                     	;# 
  4057  0714                     	;# 
  4058  0716                     	;# 
  4059  0717                     	;# 
  4060  0718                     	;# 
  4061  0719                     	;# 
  4062  071A                     	;# 
  4063  071B                     	;# 
  4064  071C                     	;# 
  4065  071D                     	;# 
  4066  071E                     	;# 
  4067  0796                     	;# 
  4068  0797                     	;# 
  4069  0798                     	;# 
  4070  0799                     	;# 
  4071  079A                     	;# 
  4072  079B                     	;# 
  4073  079C                     	;# 
  4074  079D                     	;# 
  4075  080C                     	;# 
  4076  080D                     	;# 
  4077  080E                     	;# 
  4078  080F                     	;# 
  4079  0810                     	;# 
  4080  0811                     	;# 
  4081  0812                     	;# 
  4082  0813                     	;# 
  4083  0814                     	;# 
  4084  081A                     	;# 
  4085  081A                     	;# 
  4086  081B                     	;# 
  4087  081C                     	;# 
  4088  081C                     	;# 
  4089  081D                     	;# 
  4090  081E                     	;# 
  4091  081F                     	;# 
  4092  088C                     	;# 
  4093  088D                     	;# 
  4094  088E                     	;# 
  4095  088F                     	;# 
  4096  0890                     	;# 
  4097  0891                     	;# 
  4098  0892                     	;# 
  4099  0893                     	;# 
  4100  0895                     	;# 
  4101  0896                     	;# 
  4102  0897                     	;# 
  4103  0898                     	;# 
  4104  0899                     	;# 
  4105  089A                     	;# 
  4106  089B                     	;# 
  4107  090C                     	;# 
  4108  090E                     	;# 
  4109  090F                     	;# 
  4110  091F                     	;# 
  4111  098F                     	;# 
  4112  098F                     	;# 
  4113  0990                     	;# 
  4114  0991                     	;# 
  4115  0992                     	;# 
  4116  0993                     	;# 
  4117  0994                     	;# 
  4118  0995                     	;# 
  4119  0996                     	;# 
  4120  0997                     	;# 
  4121  1E0F                     	;# 
  4122  1E10                     	;# 
  4123  1E11                     	;# 
  4124  1E12                     	;# 
  4125  1E13                     	;# 
  4126  1E14                     	;# 
  4127  1E15                     	;# 
  4128  1E16                     	;# 
  4129  1E17                     	;# 
  4130  1E18                     	;# 
  4131  1E19                     	;# 
  4132  1E1A                     	;# 
  4133  1E1B                     	;# 
  4134  1E1C                     	;# 
  4135  1E1D                     	;# 
  4136  1E1E                     	;# 
  4137  1E1F                     	;# 
  4138  1E20                     	;# 
  4139  1E21                     	;# 
  4140  1E22                     	;# 
  4141  1E23                     	;# 
  4142  1E24                     	;# 
  4143  1E25                     	;# 
  4144  1E26                     	;# 
  4145  1E27                     	;# 
  4146  1E28                     	;# 
  4147  1E29                     	;# 
  4148  1E2A                     	;# 
  4149  1E2B                     	;# 
  4150  1E2C                     	;# 
  4151  1E2D                     	;# 
  4152  1E2E                     	;# 
  4153  1E2F                     	;# 
  4154  1E30                     	;# 
  4155  1E31                     	;# 
  4156  1E32                     	;# 
  4157  1E33                     	;# 
  4158  1E34                     	;# 
  4159  1E35                     	;# 
  4160  1E36                     	;# 
  4161  1E37                     	;# 
  4162  1E8F                     	;# 
  4163  1E90                     	;# 
  4164  1E91                     	;# 
  4165  1E92                     	;# 
  4166  1E93                     	;# 
  4167  1E94                     	;# 
  4168  1E95                     	;# 
  4169  1E96                     	;# 
  4170  1E97                     	;# 
  4171  1E9C                     	;# 
  4172  1E9D                     	;# 
  4173  1E9E                     	;# 
  4174  1EA1                     	;# 
  4175  1EA2                     	;# 
  4176  1EA3                     	;# 
  4177  1EA4                     	;# 
  4178  1EA9                     	;# 
  4179  1EAA                     	;# 
  4180  1EB1                     	;# 
  4181  1EB2                     	;# 
  4182  1EB8                     	;# 
  4183  1EB9                     	;# 
  4184  1EBA                     	;# 
  4185  1EBB                     	;# 
  4186  1EBC                     	;# 
  4187  1EBD                     	;# 
  4188  1EBE                     	;# 
  4189  1EC3                     	;# 
  4190  1EC5                     	;# 
  4191  1EC6                     	;# 
  4192  1EC7                     	;# 
  4193  1EC8                     	;# 
  4194  1EC9                     	;# 
  4195  1ECA                     	;# 
  4196  1ECB                     	;# 
  4197  1ECB                     	;# 
  4198  1ECB                     	;# 
  4199  1ECC                     	;# 
  4200  1ECC                     	;# 
  4201  1ECC                     	;# 
  4202  1F10                     	;# 
  4203  1F11                     	;# 
  4204  1F12                     	;# 
  4205  1F14                     	;# 
  4206  1F15                     	;# 
  4207  1F1C                     	;# 
  4208  1F1D                     	;# 
  4209  1F1E                     	;# 
  4210  1F1F                     	;# 
  4211  1F20                     	;# 
  4212  1F21                     	;# 
  4213  1F22                     	;# 
  4214  1F23                     	;# 
  4215  1F24                     	;# 
  4216  1F25                     	;# 
  4217  1F26                     	;# 
  4218  1F27                     	;# 
  4219  1F38                     	;# 
  4220  1F39                     	;# 
  4221  1F3A                     	;# 
  4222  1F3B                     	;# 
  4223  1F3C                     	;# 
  4224  1F3D                     	;# 
  4225  1F3E                     	;# 
  4226  1F3F                     	;# 
  4227  1F43                     	;# 
  4228  1F44                     	;# 
  4229  1F45                     	;# 
  4230  1F46                     	;# 
  4231  1F47                     	;# 
  4232  1F48                     	;# 
  4233  1F49                     	;# 
  4234  1F4A                     	;# 
  4235  1F4E                     	;# 
  4236  1F4F                     	;# 
  4237  1F50                     	;# 
  4238  1F51                     	;# 
  4239  1F52                     	;# 
  4240  1F53                     	;# 
  4241  1F54                     	;# 
  4242  1F55                     	;# 
  4243  1FE4                     	;# 
  4244  1FE5                     	;# 
  4245  1FE6                     	;# 
  4246  1FE7                     	;# 
  4247  1FE8                     	;# 
  4248  1FE8                     	;# 
  4249  1FE9                     	;# 
  4250  1FEA                     	;# 
  4251  1FEB                     	;# 
  4252  1FED                     	;# 
  4253  1FEE                     	;# 
  4254  1FEF                     	;# 
  4255  0000                     	;# 
  4256  0001                     	;# 
  4257  0002                     	;# 
  4258  0003                     	;# 
  4259  0004                     	;# 
  4260  0005                     	;# 
  4261  0006                     	;# 
  4262  0007                     	;# 
  4263  0008                     	;# 
  4264  0009                     	;# 
  4265  000A                     	;# 
  4266  000B                     	;# 
  4267  000C                     	;# 
  4268  000D                     	;# 
  4269  000E                     	;# 
  4270  0012                     	;# 
  4271  0013                     	;# 
  4272  0014                     	;# 
  4273  0018                     	;# 
  4274  0019                     	;# 
  4275  001A                     	;# 
  4276  008C                     	;# 
  4277  008C                     	;# 
  4278  008D                     	;# 
  4279  008E                     	;# 
  4280  008E                     	;# 
  4281  008F                     	;# 
  4282  0090                     	;# 
  4283  0090                     	;# 
  4284  0091                     	;# 
  4285  0092                     	;# 
  4286  0092                     	;# 
  4287  0093                     	;# 
  4288  0094                     	;# 
  4289  0094                     	;# 
  4290  0095                     	;# 
  4291  0096                     	;# 
  4292  0096                     	;# 
  4293  0097                     	;# 
  4294  0098                     	;# 
  4295  0099                     	;# 
  4296  009A                     	;# 
  4297  009B                     	;# 
  4298  009B                     	;# 
  4299  009C                     	;# 
  4300  009D                     	;# 
  4301  009D                     	;# 
  4302  009E                     	;# 
  4303  009F                     	;# 
  4304  010C                     	;# 
  4305  010C                     	;# 
  4306  010D                     	;# 
  4307  010E                     	;# 
  4308  010F                     	;# 
  4309  010F                     	;# 
  4310  0110                     	;# 
  4311  0111                     	;# 
  4312  0112                     	;# 
  4313  0113                     	;# 
  4314  0114                     	;# 
  4315  0115                     	;# 
  4316  0116                     	;# 
  4317  0117                     	;# 
  4318  0118                     	;# 
  4319  0119                     	;# 
  4320  0119                     	;# 
  4321  0119                     	;# 
  4322  011A                     	;# 
  4323  011A                     	;# 
  4324  011A                     	;# 
  4325  011B                     	;# 
  4326  011B                     	;# 
  4327  011B                     	;# 
  4328  011B                     	;# 
  4329  011B                     	;# 
  4330  011C                     	;# 
  4331  011C                     	;# 
  4332  011C                     	;# 
  4333  011D                     	;# 
  4334  011D                     	;# 
  4335  011D                     	;# 
  4336  011E                     	;# 
  4337  011E                     	;# 
  4338  011E                     	;# 
  4339  011F                     	;# 
  4340  011F                     	;# 
  4341  011F                     	;# 
  4342  011F                     	;# 
  4343  011F                     	;# 
  4344  018C                     	;# 
  4345  018D                     	;# 
  4346  018E                     	;# 
  4347  018F                     	;# 
  4348  0190                     	;# 
  4349  0191                     	;# 
  4350  0192                     	;# 
  4351  0196                     	;# 
  4352  0197                     	;# 
  4353  0198                     	;# 
  4354  0199                     	;# 
  4355  019A                     	;# 
  4356  019B                     	;# 
  4357  019C                     	;# 
  4358  020C                     	;# 
  4359  020D                     	;# 
  4360  020E                     	;# 
  4361  020E                     	;# 
  4362  020F                     	;# 
  4363  020F                     	;# 
  4364  0210                     	;# 
  4365  0210                     	;# 
  4366  0211                     	;# 
  4367  0211                     	;# 
  4368  0212                     	;# 
  4369  0213                     	;# 
  4370  0214                     	;# 
  4371  0214                     	;# 
  4372  0215                     	;# 
  4373  0215                     	;# 
  4374  0216                     	;# 
  4375  0216                     	;# 
  4376  0217                     	;# 
  4377  0217                     	;# 
  4378  0218                     	;# 
  4379  0219                     	;# 
  4380  021A                     	;# 
  4381  021A                     	;# 
  4382  021B                     	;# 
  4383  021B                     	;# 
  4384  021C                     	;# 
  4385  021C                     	;# 
  4386  021D                     	;# 
  4387  021D                     	;# 
  4388  021E                     	;# 
  4389  021F                     	;# 
  4390  028C                     	;# 
  4391  028C                     	;# 
  4392  028D                     	;# 
  4393  028D                     	;# 
  4394  028E                     	;# 
  4395  028F                     	;# 
  4396  0290                     	;# 
  4397  0291                     	;# 
  4398  0292                     	;# 
  4399  0292                     	;# 
  4400  0293                     	;# 
  4401  0293                     	;# 
  4402  0294                     	;# 
  4403  0295                     	;# 
  4404  0296                     	;# 
  4405  0297                     	;# 
  4406  0298                     	;# 
  4407  0298                     	;# 
  4408  0299                     	;# 
  4409  0299                     	;# 
  4410  029A                     	;# 
  4411  029B                     	;# 
  4412  029C                     	;# 
  4413  029D                     	;# 
  4414  029F                     	;# 
  4415  030C                     	;# 
  4416  030C                     	;# 
  4417  030D                     	;# 
  4418  030E                     	;# 
  4419  030F                     	;# 
  4420  0310                     	;# 
  4421  0310                     	;# 
  4422  0311                     	;# 
  4423  0312                     	;# 
  4424  0313                     	;# 
  4425  0314                     	;# 
  4426  0314                     	;# 
  4427  0315                     	;# 
  4428  0316                     	;# 
  4429  0317                     	;# 
  4430  0318                     	;# 
  4431  0318                     	;# 
  4432  0319                     	;# 
  4433  031A                     	;# 
  4434  031B                     	;# 
  4435  038C                     	;# 
  4436  038C                     	;# 
  4437  038D                     	;# 
  4438  038E                     	;# 
  4439  0390                     	;# 
  4440  0390                     	;# 
  4441  0391                     	;# 
  4442  0392                     	;# 
  4443  048C                     	;# 
  4444  048C                     	;# 
  4445  048D                     	;# 
  4446  048E                     	;# 
  4447  048F                     	;# 
  4448  048F                     	;# 
  4449  0490                     	;# 
  4450  0491                     	;# 
  4451  0492                     	;# 
  4452  0492                     	;# 
  4453  0493                     	;# 
  4454  0494                     	;# 
  4455  0495                     	;# 
  4456  0495                     	;# 
  4457  0496                     	;# 
  4458  0497                     	;# 
  4459  0498                     	;# 
  4460  0499                     	;# 
  4461  049A                     	;# 
  4462  049B                     	;# 
  4463  049C                     	;# 
  4464  049D                     	;# 
  4465  058C                     	;# 
  4466  058C                     	;# 
  4467  058D                     	;# 
  4468  058E                     	;# 
  4469  058F                     	;# 
  4470  058F                     	;# 
  4471  0590                     	;# 
  4472  0591                     	;# 
  4473  0592                     	;# 
  4474  0593                     	;# 
  4475  059C                     	;# 
  4476  059C                     	;# 
  4477  059D                     	;# 
  4478  059D                     	;# 
  4479  059E                     	;# 
  4480  059F                     	;# 
  4481  060C                     	;# 
  4482  060C                     	;# 
  4483  060D                     	;# 
  4484  060D                     	;# 
  4485  060E                     	;# 
  4486  060F                     	;# 
  4487  0610                     	;# 
  4488  0611                     	;# 
  4489  0612                     	;# 
  4490  0613                     	;# 
  4491  0614                     	;# 
  4492  0616                     	;# 
  4493  0616                     	;# 
  4494  0617                     	;# 
  4495  0617                     	;# 
  4496  0618                     	;# 
  4497  0619                     	;# 
  4498  061A                     	;# 
  4499  061B                     	;# 
  4500  061C                     	;# 
  4501  061D                     	;# 
  4502  061E                     	;# 
  4503  070C                     	;# 
  4504  070D                     	;# 
  4505  070E                     	;# 
  4506  070F                     	;# 
  4507  0710                     	;# 
  4508  0711                     	;# 
  4509  0712                     	;# 
  4510  0713                     	;# 
  4511  0714                     	;# 
  4512  0716                     	;# 
  4513  0717                     	;# 
  4514  0718                     	;# 
  4515  0719                     	;# 
  4516  071A                     	;# 
  4517  071B                     	;# 
  4518  071C                     	;# 
  4519  071D                     	;# 
  4520  071E                     	;# 
  4521  0796                     	;# 
  4522  0797                     	;# 
  4523  0798                     	;# 
  4524  0799                     	;# 
  4525  079A                     	;# 
  4526  079B                     	;# 
  4527  079C                     	;# 
  4528  079D                     	;# 
  4529  080C                     	;# 
  4530  080D                     	;# 
  4531  080E                     	;# 
  4532  080F                     	;# 
  4533  0810                     	;# 
  4534  0811                     	;# 
  4535  0812                     	;# 
  4536  0813                     	;# 
  4537  0814                     	;# 
  4538  081A                     	;# 
  4539  081A                     	;# 
  4540  081B                     	;# 
  4541  081C                     	;# 
  4542  081C                     	;# 
  4543  081D                     	;# 
  4544  081E                     	;# 
  4545  081F                     	;# 
  4546  088C                     	;# 
  4547  088D                     	;# 
  4548  088E                     	;# 
  4549  088F                     	;# 
  4550  0890                     	;# 
  4551  0891                     	;# 
  4552  0892                     	;# 
  4553  0893                     	;# 
  4554  0895                     	;# 
  4555  0896                     	;# 
  4556  0897                     	;# 
  4557  0898                     	;# 
  4558  0899                     	;# 
  4559  089A                     	;# 
  4560  089B                     	;# 
  4561  090C                     	;# 
  4562  090E                     	;# 
  4563  090F                     	;# 
  4564  091F                     	;# 
  4565  098F                     	;# 
  4566  098F                     	;# 
  4567  0990                     	;# 
  4568  0991                     	;# 
  4569  0992                     	;# 
  4570  0993                     	;# 
  4571  0994                     	;# 
  4572  0995                     	;# 
  4573  0996                     	;# 
  4574  0997                     	;# 
  4575  1E0F                     	;# 
  4576  1E10                     	;# 
  4577  1E11                     	;# 
  4578  1E12                     	;# 
  4579  1E13                     	;# 
  4580  1E14                     	;# 
  4581  1E15                     	;# 
  4582  1E16                     	;# 
  4583  1E17                     	;# 
  4584  1E18                     	;# 
  4585  1E19                     	;# 
  4586  1E1A                     	;# 
  4587  1E1B                     	;# 
  4588  1E1C                     	;# 
  4589  1E1D                     	;# 
  4590  1E1E                     	;# 
  4591  1E1F                     	;# 
  4592  1E20                     	;# 
  4593  1E21                     	;# 
  4594  1E22                     	;# 
  4595  1E23                     	;# 
  4596  1E24                     	;# 
  4597  1E25                     	;# 
  4598  1E26                     	;# 
  4599  1E27                     	;# 
  4600  1E28                     	;# 
  4601  1E29                     	;# 
  4602  1E2A                     	;# 
  4603  1E2B                     	;# 
  4604  1E2C                     	;# 
  4605  1E2D                     	;# 
  4606  1E2E                     	;# 
  4607  1E2F                     	;# 
  4608  1E30                     	;# 
  4609  1E31                     	;# 
  4610  1E32                     	;# 
  4611  1E33                     	;# 
  4612  1E34                     	;# 
  4613  1E35                     	;# 
  4614  1E36                     	;# 
  4615  1E37                     	;# 
  4616  1E8F                     	;# 
  4617  1E90                     	;# 
  4618  1E91                     	;# 
  4619  1E92                     	;# 
  4620  1E93                     	;# 
  4621  1E94                     	;# 
  4622  1E95                     	;# 
  4623  1E96                     	;# 
  4624  1E97                     	;# 
  4625  1E9C                     	;# 
  4626  1E9D                     	;# 
  4627  1E9E                     	;# 
  4628  1EA1                     	;# 
  4629  1EA2                     	;# 
  4630  1EA3                     	;# 
  4631  1EA4                     	;# 
  4632  1EA9                     	;# 
  4633  1EAA                     	;# 
  4634  1EB1                     	;# 
  4635  1EB2                     	;# 
  4636  1EB8                     	;# 
  4637  1EB9                     	;# 
  4638  1EBA                     	;# 
  4639  1EBB                     	;# 
  4640  1EBC                     	;# 
  4641  1EBD                     	;# 
  4642  1EBE                     	;# 
  4643  1EC3                     	;# 
  4644  1EC5                     	;# 
  4645  1EC6                     	;# 
  4646  1EC7                     	;# 
  4647  1EC8                     	;# 
  4648  1EC9                     	;# 
  4649  1ECA                     	;# 
  4650  1ECB                     	;# 
  4651  1ECB                     	;# 
  4652  1ECB                     	;# 
  4653  1ECC                     	;# 
  4654  1ECC                     	;# 
  4655  1ECC                     	;# 
  4656  1F10                     	;# 
  4657  1F11                     	;# 
  4658  1F12                     	;# 
  4659  1F14                     	;# 
  4660  1F15                     	;# 
  4661  1F1C                     	;# 
  4662  1F1D                     	;# 
  4663  1F1E                     	;# 
  4664  1F1F                     	;# 
  4665  1F20                     	;# 
  4666  1F21                     	;# 
  4667  1F22                     	;# 
  4668  1F23                     	;# 
  4669  1F24                     	;# 
  4670  1F25                     	;# 
  4671  1F26                     	;# 
  4672  1F27                     	;# 
  4673  1F38                     	;# 
  4674  1F39                     	;# 
  4675  1F3A                     	;# 
  4676  1F3B                     	;# 
  4677  1F3C                     	;# 
  4678  1F3D                     	;# 
  4679  1F3E                     	;# 
  4680  1F3F                     	;# 
  4681  1F43                     	;# 
  4682  1F44                     	;# 
  4683  1F45                     	;# 
  4684  1F46                     	;# 
  4685  1F47                     	;# 
  4686  1F48                     	;# 
  4687  1F49                     	;# 
  4688  1F4A                     	;# 
  4689  1F4E                     	;# 
  4690  1F4F                     	;# 
  4691  1F50                     	;# 
  4692  1F51                     	;# 
  4693  1F52                     	;# 
  4694  1F53                     	;# 
  4695  1F54                     	;# 
  4696  1F55                     	;# 
  4697  1FE4                     	;# 
  4698  1FE5                     	;# 
  4699  1FE6                     	;# 
  4700  1FE7                     	;# 
  4701  1FE8                     	;# 
  4702  1FE8                     	;# 
  4703  1FE9                     	;# 
  4704  1FEA                     	;# 
  4705  1FEB                     	;# 
  4706  1FED                     	;# 
  4707  1FEE                     	;# 
  4708  1FEF                     	;# 
  4709  0000                     	;# 
  4710  0001                     	;# 
  4711  0002                     	;# 
  4712  0003                     	;# 
  4713  0004                     	;# 
  4714  0005                     	;# 
  4715  0006                     	;# 
  4716  0007                     	;# 
  4717  0008                     	;# 
  4718  0009                     	;# 
  4719  000A                     	;# 
  4720  000B                     	;# 
  4721  000C                     	;# 
  4722  000D                     	;# 
  4723  000E                     	;# 
  4724  0012                     	;# 
  4725  0013                     	;# 
  4726  0014                     	;# 
  4727  0018                     	;# 
  4728  0019                     	;# 
  4729  001A                     	;# 
  4730  008C                     	;# 
  4731  008C                     	;# 
  4732  008D                     	;# 
  4733  008E                     	;# 
  4734  008E                     	;# 
  4735  008F                     	;# 
  4736  0090                     	;# 
  4737  0090                     	;# 
  4738  0091                     	;# 
  4739  0092                     	;# 
  4740  0092                     	;# 
  4741  0093                     	;# 
  4742  0094                     	;# 
  4743  0094                     	;# 
  4744  0095                     	;# 
  4745  0096                     	;# 
  4746  0096                     	;# 
  4747  0097                     	;# 
  4748  0098                     	;# 
  4749  0099                     	;# 
  4750  009A                     	;# 
  4751  009B                     	;# 
  4752  009B                     	;# 
  4753  009C                     	;# 
  4754  009D                     	;# 
  4755  009D                     	;# 
  4756  009E                     	;# 
  4757  009F                     	;# 
  4758  010C                     	;# 
  4759  010C                     	;# 
  4760  010D                     	;# 
  4761  010E                     	;# 
  4762  010F                     	;# 
  4763  010F                     	;# 
  4764  0110                     	;# 
  4765  0111                     	;# 
  4766  0112                     	;# 
  4767  0113                     	;# 
  4768  0114                     	;# 
  4769  0115                     	;# 
  4770  0116                     	;# 
  4771  0117                     	;# 
  4772  0118                     	;# 
  4773  0119                     	;# 
  4774  0119                     	;# 
  4775  0119                     	;# 
  4776  011A                     	;# 
  4777  011A                     	;# 
  4778  011A                     	;# 
  4779  011B                     	;# 
  4780  011B                     	;# 
  4781  011B                     	;# 
  4782  011B                     	;# 
  4783  011B                     	;# 
  4784  011C                     	;# 
  4785  011C                     	;# 
  4786  011C                     	;# 
  4787  011D                     	;# 
  4788  011D                     	;# 
  4789  011D                     	;# 
  4790  011E                     	;# 
  4791  011E                     	;# 
  4792  011E                     	;# 
  4793  011F                     	;# 
  4794  011F                     	;# 
  4795  011F                     	;# 
  4796  011F                     	;# 
  4797  011F                     	;# 
  4798  018C                     	;# 
  4799  018D                     	;# 
  4800  018E                     	;# 
  4801  018F                     	;# 
  4802  0190                     	;# 
  4803  0191                     	;# 
  4804  0192                     	;# 
  4805  0196                     	;# 
  4806  0197                     	;# 
  4807  0198                     	;# 
  4808  0199                     	;# 
  4809  019A                     	;# 
  4810  019B                     	;# 
  4811  019C                     	;# 
  4812  020C                     	;# 
  4813  020D                     	;# 
  4814  020E                     	;# 
  4815  020E                     	;# 
  4816  020F                     	;# 
  4817  020F                     	;# 
  4818  0210                     	;# 
  4819  0210                     	;# 
  4820  0211                     	;# 
  4821  0211                     	;# 
  4822  0212                     	;# 
  4823  0213                     	;# 
  4824  0214                     	;# 
  4825  0214                     	;# 
  4826  0215                     	;# 
  4827  0215                     	;# 
  4828  0216                     	;# 
  4829  0216                     	;# 
  4830  0217                     	;# 
  4831  0217                     	;# 
  4832  0218                     	;# 
  4833  0219                     	;# 
  4834  021A                     	;# 
  4835  021A                     	;# 
  4836  021B                     	;# 
  4837  021B                     	;# 
  4838  021C                     	;# 
  4839  021C                     	;# 
  4840  021D                     	;# 
  4841  021D                     	;# 
  4842  021E                     	;# 
  4843  021F                     	;# 
  4844  028C                     	;# 
  4845  028C                     	;# 
  4846  028D                     	;# 
  4847  028D                     	;# 
  4848  028E                     	;# 
  4849  028F                     	;# 
  4850  0290                     	;# 
  4851  0291                     	;# 
  4852  0292                     	;# 
  4853  0292                     	;# 
  4854  0293                     	;# 
  4855  0293                     	;# 
  4856  0294                     	;# 
  4857  0295                     	;# 
  4858  0296                     	;# 
  4859  0297                     	;# 
  4860  0298                     	;# 
  4861  0298                     	;# 
  4862  0299                     	;# 
  4863  0299                     	;# 
  4864  029A                     	;# 
  4865  029B                     	;# 
  4866  029C                     	;# 
  4867  029D                     	;# 
  4868  029F                     	;# 
  4869  030C                     	;# 
  4870  030C                     	;# 
  4871  030D                     	;# 
  4872  030E                     	;# 
  4873  030F                     	;# 
  4874  0310                     	;# 
  4875  0310                     	;# 
  4876  0311                     	;# 
  4877  0312                     	;# 
  4878  0313                     	;# 
  4879  0314                     	;# 
  4880  0314                     	;# 
  4881  0315                     	;# 
  4882  0316                     	;# 
  4883  0317                     	;# 
  4884  0318                     	;# 
  4885  0318                     	;# 
  4886  0319                     	;# 
  4887  031A                     	;# 
  4888  031B                     	;# 
  4889  038C                     	;# 
  4890  038C                     	;# 
  4891  038D                     	;# 
  4892  038E                     	;# 
  4893  0390                     	;# 
  4894  0390                     	;# 
  4895  0391                     	;# 
  4896  0392                     	;# 
  4897  048C                     	;# 
  4898  048C                     	;# 
  4899  048D                     	;# 
  4900  048E                     	;# 
  4901  048F                     	;# 
  4902  048F                     	;# 
  4903  0490                     	;# 
  4904  0491                     	;# 
  4905  0492                     	;# 
  4906  0492                     	;# 
  4907  0493                     	;# 
  4908  0494                     	;# 
  4909  0495                     	;# 
  4910  0495                     	;# 
  4911  0496                     	;# 
  4912  0497                     	;# 
  4913  0498                     	;# 
  4914  0499                     	;# 
  4915  049A                     	;# 
  4916  049B                     	;# 
  4917  049C                     	;# 
  4918  049D                     	;# 
  4919  058C                     	;# 
  4920  058C                     	;# 
  4921  058D                     	;# 
  4922  058E                     	;# 
  4923  058F                     	;# 
  4924  058F                     	;# 
  4925  0590                     	;# 
  4926  0591                     	;# 
  4927  0592                     	;# 
  4928  0593                     	;# 
  4929  059C                     	;# 
  4930  059C                     	;# 
  4931  059D                     	;# 
  4932  059D                     	;# 
  4933  059E                     	;# 
  4934  059F                     	;# 
  4935  060C                     	;# 
  4936  060C                     	;# 
  4937  060D                     	;# 
  4938  060D                     	;# 
  4939  060E                     	;# 
  4940  060F                     	;# 
  4941  0610                     	;# 
  4942  0611                     	;# 
  4943  0612                     	;# 
  4944  0613                     	;# 
  4945  0614                     	;# 
  4946  0616                     	;# 
  4947  0616                     	;# 
  4948  0617                     	;# 
  4949  0617                     	;# 
  4950  0618                     	;# 
  4951  0619                     	;# 
  4952  061A                     	;# 
  4953  061B                     	;# 
  4954  061C                     	;# 
  4955  061D                     	;# 
  4956  061E                     	;# 
  4957  070C                     	;# 
  4958  070D                     	;# 
  4959  070E                     	;# 
  4960  070F                     	;# 
  4961  0710                     	;# 
  4962  0711                     	;# 
  4963  0712                     	;# 
  4964  0713                     	;# 
  4965  0714                     	;# 
  4966  0716                     	;# 
  4967  0717                     	;# 
  4968  0718                     	;# 
  4969  0719                     	;# 
  4970  071A                     	;# 
  4971  071B                     	;# 
  4972  071C                     	;# 
  4973  071D                     	;# 
  4974  071E                     	;# 
  4975  0796                     	;# 
  4976  0797                     	;# 
  4977  0798                     	;# 
  4978  0799                     	;# 
  4979  079A                     	;# 
  4980  079B                     	;# 
  4981  079C                     	;# 
  4982  079D                     	;# 
  4983  080C                     	;# 
  4984  080D                     	;# 
  4985  080E                     	;# 
  4986  080F                     	;# 
  4987  0810                     	;# 
  4988  0811                     	;# 
  4989  0812                     	;# 
  4990  0813                     	;# 
  4991  0814                     	;# 
  4992  081A                     	;# 
  4993  081A                     	;# 
  4994  081B                     	;# 
  4995  081C                     	;# 
  4996  081C                     	;# 
  4997  081D                     	;# 
  4998  081E                     	;# 
  4999  081F                     	;# 
  5000  088C                     	;# 
  5001  088D                     	;# 
  5002  088E                     	;# 
  5003  088F                     	;# 
  5004  0890                     	;# 
  5005  0891                     	;# 
  5006  0892                     	;# 
  5007  0893                     	;# 
  5008  0895                     	;# 
  5009  0896                     	;# 
  5010  0897                     	;# 
  5011  0898                     	;# 
  5012  0899                     	;# 
  5013  089A                     	;# 
  5014  089B                     	;# 
  5015  090C                     	;# 
  5016  090E                     	;# 
  5017  090F                     	;# 
  5018  091F                     	;# 
  5019  098F                     	;# 
  5020  098F                     	;# 
  5021  0990                     	;# 
  5022  0991                     	;# 
  5023  0992                     	;# 
  5024  0993                     	;# 
  5025  0994                     	;# 
  5026  0995                     	;# 
  5027  0996                     	;# 
  5028  0997                     	;# 
  5029  1E0F                     	;# 
  5030  1E10                     	;# 
  5031  1E11                     	;# 
  5032  1E12                     	;# 
  5033  1E13                     	;# 
  5034  1E14                     	;# 
  5035  1E15                     	;# 
  5036  1E16                     	;# 
  5037  1E17                     	;# 
  5038  1E18                     	;# 
  5039  1E19                     	;# 
  5040  1E1A                     	;# 
  5041  1E1B                     	;# 
  5042  1E1C                     	;# 
  5043  1E1D                     	;# 
  5044  1E1E                     	;# 
  5045  1E1F                     	;# 
  5046  1E20                     	;# 
  5047  1E21                     	;# 
  5048  1E22                     	;# 
  5049  1E23                     	;# 
  5050  1E24                     	;# 
  5051  1E25                     	;# 
  5052  1E26                     	;# 
  5053  1E27                     	;# 
  5054  1E28                     	;# 
  5055  1E29                     	;# 
  5056  1E2A                     	;# 
  5057  1E2B                     	;# 
  5058  1E2C                     	;# 
  5059  1E2D                     	;# 
  5060  1E2E                     	;# 
  5061  1E2F                     	;# 
  5062  1E30                     	;# 
  5063  1E31                     	;# 
  5064  1E32                     	;# 
  5065  1E33                     	;# 
  5066  1E34                     	;# 
  5067  1E35                     	;# 
  5068  1E36                     	;# 
  5069  1E37                     	;# 
  5070  1E8F                     	;# 
  5071  1E90                     	;# 
  5072  1E91                     	;# 
  5073  1E92                     	;# 
  5074  1E93                     	;# 
  5075  1E94                     	;# 
  5076  1E95                     	;# 
  5077  1E96                     	;# 
  5078  1E97                     	;# 
  5079  1E9C                     	;# 
  5080  1E9D                     	;# 
  5081  1E9E                     	;# 
  5082  1EA1                     	;# 
  5083  1EA2                     	;# 
  5084  1EA3                     	;# 
  5085  1EA4                     	;# 
  5086  1EA9                     	;# 
  5087  1EAA                     	;# 
  5088  1EB1                     	;# 
  5089  1EB2                     	;# 
  5090  1EB8                     	;# 
  5091  1EB9                     	;# 
  5092  1EBA                     	;# 
  5093  1EBB                     	;# 
  5094  1EBC                     	;# 
  5095  1EBD                     	;# 
  5096  1EBE                     	;# 
  5097  1EC3                     	;# 
  5098  1EC5                     	;# 
  5099  1EC6                     	;# 
  5100  1EC7                     	;# 
  5101  1EC8                     	;# 
  5102  1EC9                     	;# 
  5103  1ECA                     	;# 
  5104  1ECB                     	;# 
  5105  1ECB                     	;# 
  5106  1ECB                     	;# 
  5107  1ECC                     	;# 
  5108  1ECC                     	;# 
  5109  1ECC                     	;# 
  5110  1F10                     	;# 
  5111  1F11                     	;# 
  5112  1F12                     	;# 
  5113  1F14                     	;# 
  5114  1F15                     	;# 
  5115  1F1C                     	;# 
  5116  1F1D                     	;# 
  5117  1F1E                     	;# 
  5118  1F1F                     	;# 
  5119  1F20                     	;# 
  5120  1F21                     	;# 
  5121  1F22                     	;# 
  5122  1F23                     	;# 
  5123  1F24                     	;# 
  5124  1F25                     	;# 
  5125  1F26                     	;# 
  5126  1F27                     	;# 
  5127  1F38                     	;# 
  5128  1F39                     	;# 
  5129  1F3A                     	;# 
  5130  1F3B                     	;# 
  5131  1F3C                     	;# 
  5132  1F3D                     	;# 
  5133  1F3E                     	;# 
  5134  1F3F                     	;# 
  5135  1F43                     	;# 
  5136  1F44                     	;# 
  5137  1F45                     	;# 
  5138  1F46                     	;# 
  5139  1F47                     	;# 
  5140  1F48                     	;# 
  5141  1F49                     	;# 
  5142  1F4A                     	;# 
  5143  1F4E                     	;# 
  5144  1F4F                     	;# 
  5145  1F50                     	;# 
  5146  1F51                     	;# 
  5147  1F52                     	;# 
  5148  1F53                     	;# 
  5149  1F54                     	;# 
  5150  1F55                     	;# 
  5151  1FE4                     	;# 
  5152  1FE5                     	;# 
  5153  1FE6                     	;# 
  5154  1FE7                     	;# 
  5155  1FE8                     	;# 
  5156  1FE8                     	;# 
  5157  1FE9                     	;# 
  5158  1FEA                     	;# 
  5159  1FEB                     	;# 
  5160  1FED                     	;# 
  5161  1FEE                     	;# 
  5162  1FEF                     	;_nmea_data
  5163                           
  5164 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
  5165  0000                     
  5166 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
  5167  0000                     
  5168 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
  5169  0000                     
  5170                           	psect	idataBANK4
  5171  196C                     __pidataBANK4:	
  5172                           
  5173                           ;initializer for _setNavFlightMode
  5174  196C  34B5               	retlw	181
  5175  196D  3462               	retlw	98
  5176  196E  3406               	retlw	6
  5177  196F  3424               	retlw	36
  5178  1970  3424               	retlw	36
  5179  1971  3400               	retlw	0
  5180  1972  34FF               	retlw	255
  5181  1973  34FF               	retlw	255
  5182  1974  3406               	retlw	6
  5183  1975  3403               	retlw	3
  5184  1976  3400               	retlw	0
  5185  1977  3400               	retlw	0
  5186  1978  3400               	retlw	0
  5187  1979  3400               	retlw	0
  5188  197A  3410               	retlw	16
  5189  197B  3427               	retlw	39
  5190  197C  3400               	retlw	0
  5191  197D  3400               	retlw	0
  5192  197E  3405               	retlw	5
  5193  197F  3400               	retlw	0
  5194  1980  34FA               	retlw	250
  5195  1981  3400               	retlw	0
  5196  1982  34FA               	retlw	250
  5197  1983  3400               	retlw	0
  5198  1984  3464               	retlw	100
  5199  1985  3400               	retlw	0
  5200  1986  342C               	retlw	44
  5201  1987  3401               	retlw	1
  5202  1988  3400               	retlw	0
  5203  1989  3400               	retlw	0
  5204  198A  3400               	retlw	0
  5205  198B  3400               	retlw	0
  5206  198C  3400               	retlw	0
  5207  198D  3400               	retlw	0
  5208  198E  3400               	retlw	0
  5209  198F  3400               	retlw	0
  5210  1990  3400               	retlw	0
  5211  1991  3400               	retlw	0
  5212  1992  3400               	retlw	0
  5213  1993  3400               	retlw	0
  5214  1994  3400               	retlw	0
  5215  1995  3400               	retlw	0
  5216  1996  3416               	retlw	22
  5217  1997  34DC               	retlw	220
  5218                           
  5219                           	psect	stringtext1
  5220  28B4                     __pstringtext1:	
  5221  28B4                     _HALF_BAUD_DELAY:	
  5222  28B4  340A               	retlw	10
  5223  28B5  3400               	retlw	0
  5224  28B6                     __end_of_HALF_BAUD_DELAY:	
  5225                           
  5226                           	psect	nvBANK1
  5227  00EE                     __pnvBANK1:	
  5228  00EE                     _TMR0_InterruptHandler:	
  5229  00EE                     	ds	2
  5230                           
  5231                           	psect	nvBANK3
  5232  01E7                     __pnvBANK3:	
  5233  01E7                     _EUSART1_ErrorHandler:	
  5234  01E7                     	ds	2
  5235  01E9                     _EUSART1_OverrunErrorHandler:	
  5236  01E9                     	ds	2
  5237  01EB                     _EUSART1_FramingErrorHandler:	
  5238  01EB                     	ds	2
  5239  000B                     _INTCONbits	set	11
  5240  0018                     _LATAbits	set	24
  5241  001A                     _LATCbits	set	26
  5242  0014                     _TRISC	set	20
  5243  0013                     _TRISB	set	19
  5244  0012                     _TRISA	set	18
  5245  001A                     _LATC	set	26
  5246  0019                     _LATB	set	25
  5247  0018                     _LATA	set	24
  5248  011A                     _TX1REG	set	282
  5249  0119                     _RC1REG	set	281
  5250  011D                     _RC1STAbits	set	285
  5251  011E                     _TX1STAbits	set	286
  5252  011C                     _SP1BRGH	set	284
  5253  011B                     _SP1BRGL	set	283
  5254  011E                     _TX1STA	set	286
  5255  011D                     _RC1STA	set	285
  5256  011F                     _BAUD1CON	set	287
  5257  0191                     _SSP1CON2bits	set	401
  5258  018C                     _SSP1BUF	set	396
  5259  0190                     _SSP1CON1bits	set	400
  5260  018D                     _SSP1ADD	set	397
  5261  0192                     _SSP1CON3	set	402
  5262  0191                     _SSP1CON2	set	401
  5263  0190                     _SSP1CON1	set	400
  5264  018F                     _SSP1STAT	set	399
  5265  059E                     _T0CON0bits	set	1438
  5266  059E                     _T0CON0	set	1438
  5267  059C                     _TMR0L	set	1436
  5268  059D                     _TMR0H	set	1437
  5269  059F                     _T0CON1	set	1439
  5270  070F                     _PIR3bits	set	1807
  5271  0716                     _PIE0bits	set	1814
  5272  070C                     _PIR0bits	set	1804
  5273  079D                     _PMD7	set	1949
  5274  079C                     _PMD6	set	1948
  5275  079B                     _PMD5	set	1947
  5276  079A                     _PMD4	set	1946
  5277  0799                     _PMD3	set	1945
  5278  0798                     _PMD2	set	1944
  5279  0797                     _PMD1	set	1943
  5280  0796                     _PMD0	set	1942
  5281  0892                     _OSCTUNE	set	2194
  5282  0893                     _OSCFRQ	set	2195
  5283  0891                     _OSCEN	set	2193
  5284  088F                     _OSCCON3	set	2191
  5285  088D                     _OSCCON1	set	2189
  5286  1EC6                     _SSP1DATPPS	set	7878
  5287  1EC5                     _SSP1CLKPPS	set	7877
  5288  1ECB                     _RX1DTPPS	set	7883
  5289  1F1C                     _RB4PPS	set	7964
  5290  1F1E                     _RB6PPS	set	7966
  5291  1F1F                     _RB7PPS	set	7967
  5292  1F52                     _INLVLC	set	8018
  5293  1F47                     _INLVLB	set	8007
  5294  1F3C                     _INLVLA	set	7996
  5295  1F51                     _SLRCONC	set	8017
  5296  1F46                     _SLRCONB	set	8006
  5297  1F3B                     _SLRCONA	set	7995
  5298  1F50                     _ODCONC	set	8016
  5299  1F45                     _ODCONB	set	8005
  5300  1F3A                     _ODCONA	set	7994
  5301  1F4F                     _WPUC	set	8015
  5302  1F39                     _WPUA	set	7993
  5303  1F44                     _WPUB	set	8004
  5304  1F38                     _ANSELA	set	7992
  5305  1F43                     _ANSELB	set	8003
  5306  1F4E                     _ANSELC	set	8014
  5307                           
  5308                           	psect	stringtext2
  5309  2800                     __pstringtext2:	
  5310  2800                     STR_6:	
  5311  2800  3424               	retlw	36	;'$'
  5312  2801  3450               	retlw	80	;'P'
  5313  2802  3455               	retlw	85	;'U'
  5314  2803  3442               	retlw	66	;'B'
  5315  2804  3458               	retlw	88	;'X'
  5316  2805  342C               	retlw	44	;','
  5317  2806  3434               	retlw	52	;'4'
  5318  2807  3430               	retlw	48	;'0'
  5319  2808  342C               	retlw	44	;','
  5320  2809  3452               	retlw	82	;'R'
  5321  280A  344D               	retlw	77	;'M'
  5322  280B  3443               	retlw	67	;'C'
  5323  280C  342C               	retlw	44	;','
  5324  280D  3430               	retlw	48	;'0'
  5325  280E  342C               	retlw	44	;','
  5326  280F  3430               	retlw	48	;'0'
  5327  2810  342C               	retlw	44	;','
  5328  2811  3430               	retlw	48	;'0'
  5329  2812  342C               	retlw	44	;','
  5330  2813  3430               	retlw	48	;'0'
  5331  2814  342A               	retlw	42	;'*'
  5332  2815  3434               	retlw	52	;'4'
  5333  2816  3437               	retlw	55	;'7'
  5334  2817  340D               	retlw	13
  5335  2818  340A               	retlw	10
  5336  2819  3400               	retlw	0
  5337                           
  5338                           	psect	stringtext3
  5339  281A                     __pstringtext3:	
  5340  281A                     STR_4:	
  5341  281A  3424               	retlw	36	;'$'
  5342  281B  3450               	retlw	80	;'P'
  5343  281C  3455               	retlw	85	;'U'
  5344  281D  3442               	retlw	66	;'B'
  5345  281E  3458               	retlw	88	;'X'
  5346  281F  342C               	retlw	44	;','
  5347  2820  3434               	retlw	52	;'4'
  5348  2821  3430               	retlw	48	;'0'
  5349  2822  342C               	retlw	44	;','
  5350  2823  3447               	retlw	71	;'G'
  5351  2824  3453               	retlw	83	;'S'
  5352  2825  3456               	retlw	86	;'V'
  5353  2826  342C               	retlw	44	;','
  5354  2827  3430               	retlw	48	;'0'
  5355  2828  342C               	retlw	44	;','
  5356  2829  3430               	retlw	48	;'0'
  5357  282A  342C               	retlw	44	;','
  5358  282B  3430               	retlw	48	;'0'
  5359  282C  342C               	retlw	44	;','
  5360  282D  3430               	retlw	48	;'0'
  5361  282E  342A               	retlw	42	;'*'
  5362  282F  3435               	retlw	53	;'5'
  5363  2830  3439               	retlw	57	;'9'
  5364  2831  340D               	retlw	13
  5365  2832  340A               	retlw	10
  5366  2833  3400               	retlw	0
  5367                           
  5368                           	psect	stringtext4
  5369  2834                     __pstringtext4:	
  5370  2834                     STR_2:	
  5371  2834  3424               	retlw	36	;'$'
  5372  2835  3450               	retlw	80	;'P'
  5373  2836  3455               	retlw	85	;'U'
  5374  2837  3442               	retlw	66	;'B'
  5375  2838  3458               	retlw	88	;'X'
  5376  2839  342C               	retlw	44	;','
  5377  283A  3434               	retlw	52	;'4'
  5378  283B  3430               	retlw	48	;'0'
  5379  283C  342C               	retlw	44	;','
  5380  283D  3447               	retlw	71	;'G'
  5381  283E  3447               	retlw	71	;'G'
  5382  283F  3441               	retlw	65	;'A'
  5383  2840  342C               	retlw	44	;','
  5384  2841  3430               	retlw	48	;'0'
  5385  2842  342C               	retlw	44	;','
  5386  2843  3430               	retlw	48	;'0'
  5387  2844  342C               	retlw	44	;','
  5388  2845  3430               	retlw	48	;'0'
  5389  2846  342C               	retlw	44	;','
  5390  2847  3430               	retlw	48	;'0'
  5391  2848  342A               	retlw	42	;'*'
  5392  2849  3435               	retlw	53	;'5'
  5393  284A  3441               	retlw	65	;'A'
  5394  284B  340D               	retlw	13
  5395  284C  340A               	retlw	10
  5396  284D  3400               	retlw	0
  5397                           
  5398                           	psect	stringtext5
  5399  284E                     __pstringtext5:	
  5400  284E                     STR_1:	
  5401  284E  3424               	retlw	36	;'$'
  5402  284F  3450               	retlw	80	;'P'
  5403  2850  3455               	retlw	85	;'U'
  5404  2851  3442               	retlw	66	;'B'
  5405  2852  3458               	retlw	88	;'X'
  5406  2853  342C               	retlw	44	;','
  5407  2854  3434               	retlw	52	;'4'
  5408  2855  3430               	retlw	48	;'0'
  5409  2856  342C               	retlw	44	;','
  5410  2857  3447               	retlw	71	;'G'
  5411  2858  344C               	retlw	76	;'L'
  5412  2859  344C               	retlw	76	;'L'
  5413  285A  342C               	retlw	44	;','
  5414  285B  3430               	retlw	48	;'0'
  5415  285C  342C               	retlw	44	;','
  5416  285D  3430               	retlw	48	;'0'
  5417  285E  342C               	retlw	44	;','
  5418  285F  3430               	retlw	48	;'0'
  5419  2860  342C               	retlw	44	;','
  5420  2861  3430               	retlw	48	;'0'
  5421  2862  342A               	retlw	42	;'*'
  5422  2863  3435               	retlw	53	;'5'
  5423  2864  3443               	retlw	67	;'C'
  5424  2865  340D               	retlw	13
  5425  2866  340A               	retlw	10
  5426  2867  3400               	retlw	0
  5427                           
  5428                           	psect	stringtext6
  5429  2868                     __pstringtext6:	
  5430  2868                     STR_5:	
  5431  2868  3424               	retlw	36	;'$'
  5432  2869  3450               	retlw	80	;'P'
  5433  286A  3455               	retlw	85	;'U'
  5434  286B  3442               	retlw	66	;'B'
  5435  286C  3458               	retlw	88	;'X'
  5436  286D  342C               	retlw	44	;','
  5437  286E  3434               	retlw	52	;'4'
  5438  286F  3430               	retlw	48	;'0'
  5439  2870  342C               	retlw	44	;','
  5440  2871  3447               	retlw	71	;'G'
  5441  2872  3453               	retlw	83	;'S'
  5442  2873  3441               	retlw	65	;'A'
  5443  2874  342C               	retlw	44	;','
  5444  2875  3430               	retlw	48	;'0'
  5445  2876  342C               	retlw	44	;','
  5446  2877  3430               	retlw	48	;'0'
  5447  2878  342C               	retlw	44	;','
  5448  2879  3430               	retlw	48	;'0'
  5449  287A  342C               	retlw	44	;','
  5450  287B  3430               	retlw	48	;'0'
  5451  287C  342A               	retlw	42	;'*'
  5452  287D  3434               	retlw	52	;'4'
  5453  287E  3445               	retlw	69	;'E'
  5454  287F  340D               	retlw	13
  5455  2880  340A               	retlw	10
  5456  2881  3400               	retlw	0
  5457                           
  5458                           	psect	stringtext7
  5459  2882                     __pstringtext7:	
  5460  2882                     STR_3:	
  5461  2882  3424               	retlw	36	;'$'
  5462  2883  3450               	retlw	80	;'P'
  5463  2884  3455               	retlw	85	;'U'
  5464  2885  3442               	retlw	66	;'B'
  5465  2886  3458               	retlw	88	;'X'
  5466  2887  342C               	retlw	44	;','
  5467  2888  3434               	retlw	52	;'4'
  5468  2889  3430               	retlw	48	;'0'
  5469  288A  342C               	retlw	44	;','
  5470  288B  3456               	retlw	86	;'V'
  5471  288C  3454               	retlw	84	;'T'
  5472  288D  3447               	retlw	71	;'G'
  5473  288E  342C               	retlw	44	;','
  5474  288F  3430               	retlw	48	;'0'
  5475  2890  342C               	retlw	44	;','
  5476  2891  3430               	retlw	48	;'0'
  5477  2892  342C               	retlw	44	;','
  5478  2893  3430               	retlw	48	;'0'
  5479  2894  342C               	retlw	44	;','
  5480  2895  3430               	retlw	48	;'0'
  5481  2896  342A               	retlw	42	;'*'
  5482  2897  3435               	retlw	53	;'5'
  5483  2898  3445               	retlw	69	;'E'
  5484  2899  340D               	retlw	13
  5485  289A  340A               	retlw	10
  5486  289B  3400               	retlw	0
  5487                           
  5488                           	psect	stringtext8
  5489  289C                     __pstringtext8:	
  5490  289C                     STR_7:	
  5491  289C  3424               	retlw	36	;'$'
  5492  289D  3450               	retlw	80	;'P'
  5493  289E  3455               	retlw	85	;'U'
  5494  289F  3442               	retlw	66	;'B'
  5495  28A0  3458               	retlw	88	;'X'
  5496  28A1  342C               	retlw	44	;','
  5497  28A2  3430               	retlw	48	;'0'
  5498  28A3  3430               	retlw	48	;'0'
  5499  28A4  342A               	retlw	42	;'*'
  5500  28A5  3433               	retlw	51	;'3'
  5501  28A6  3433               	retlw	51	;'3'
  5502  28A7  340D               	retlw	13
  5503  28A8  340A               	retlw	10
  5504  28A9  3400               	retlw	0
  5505                           
  5506                           	psect	stringtext9
  5507  28AA                     __pstringtext9:	
  5508  28AA                     STR_10:	
  5509  28AA  3457               	retlw	87	;'W'
  5510  28AB  3469               	retlw	105	;'i'
  5511  28AC  3473               	retlw	115	;'s'
  5512  28AD  3470               	retlw	112	;'p'
  5513  28AE  342D               	retlw	45	;'-'
  5514  28AF  3431               	retlw	49	;'1'
  5515  28B0  3400               	retlw	0
  5516                           
  5517                           	psect	stringtext10
  5518  28B1                     __pstringtext10:	
  5519  28B1                     STR_11:	
  5520  28B1  3424               	retlw	36	;'$'
  5521  28B2  3424               	retlw	36	;'$'
  5522  28B3  3400               	retlw	0
  5523                           
  5524                           	psect	stringtext11
  5525  28B6                     __pstringtext11:	
  5526  28B6                     STR_8:	
  5527  28B6  3453               	retlw	83	;'S'
  5528  28B7  3400               	retlw	0
  5529                           
  5530                           	psect	stringtext12
  5531  28B8                     __pstringtext12:	
  5532  28B8                     STR_9:	
  5533  28B8  3457               	retlw	87	;'W'
  5534  28B9  3400               	retlw	0
  5535                           
  5536                           	psect	stringtext13
  5537  0000                     __pstringtext13:	
  5538                           
  5539                           ; #config settings
  5540  0000                     
  5541                           	psect	cinit
  5542  0010                     start_initialization:	
  5543  0010                     __initialization:		;BIGRAM
  5544                           
  5545                           ; Initialize objects allocated to BANK4
  5546  0010  306C               	movlw	low __pidataBANK4
  5547  0011  0084               	movwf	4
  5548  0012  3099               	movlw	(high __pidataBANK4)| (0+128)
  5549  0013  0085               	movwf	5
  5550  0014  3020               	movlw	low __pdataBANK4
  5551  0015  0086               	movwf	6
  5552  0016  3002               	movlw	high __pdataBANK4
  5553  0017  0087               	movwf	7
  5554  0018  3000               	movlw	0
  5555  0019  00FF               	movwf	btemp+1
  5556  001A  302C               	movlw	44
  5557  001B  31A6  261C  3180   	fcall	init_ram
  5558                           
  5559                           ; Clear objects allocated to BIGRAM
  5560  001E  30D8               	movlw	low (0+9944)
  5561  001F  0084               	movwf	4
  5562  0020  3026               	movlw	high (0+9944)
  5563  0021  0085               	movwf	5
  5564  0022  3018               	movlw	24
  5565  0023  00FE               	movwf	btemp
  5566  0024  3001               	movlw	1
  5567  0025  00FF               	movwf	btemp+1
  5568  0026  31A6  2610  3180   	fcall	clear_ram0
  5569                           
  5570                           ; Clear objects allocated to BANK1
  5571  0029  0141               	movlb	1	; select bank1
  5572  002A  01E8               	clrf	__pbssBANK1& (0+127)
  5573  002B  01E9               	clrf	(__pbssBANK1+1)& (0+127)
  5574  002C  01EA               	clrf	(__pbssBANK1+2)& (0+127)
  5575  002D  01EB               	clrf	(__pbssBANK1+3)& (0+127)
  5576  002E  01EC               	clrf	(__pbssBANK1+4)& (0+127)
  5577  002F  01ED               	clrf	(__pbssBANK1+5)& (0+127)
  5578                           
  5579                           ; Clear objects allocated to BANK2
  5580  0030  3020               	movlw	low __pbssBANK2
  5581  0031  0084               	movwf	4
  5582  0032  3001               	movlw	high __pbssBANK2
  5583  0033  0085               	movwf	5
  5584  0034  3030               	movlw	48
  5585  0035  00FE               	movwf	btemp
  5586  0036  3000               	movlw	0
  5587  0037  00FF               	movwf	btemp+1
  5588  0038  31A6  2610  3180   	fcall	clear_ram0
  5589                           
  5590                           ; Clear objects allocated to BANK3
  5591  003B  30A0               	movlw	low __pbssBANK3
  5592  003C  0084               	movwf	4
  5593  003D  3001               	movlw	high __pbssBANK3
  5594  003E  0085               	movwf	5
  5595  003F  3047               	movlw	71
  5596  0040  00FE               	movwf	btemp
  5597  0041  3000               	movlw	0
  5598  0042  00FF               	movwf	btemp+1
  5599  0043  31A6  2610  3180   	fcall	clear_ram0
  5600                           
  5601                           ; Clear objects allocated to BANK4
  5602  0046  304C               	movlw	low __pbssBANK4
  5603  0047  0084               	movwf	4
  5604  0048  3002               	movlw	high __pbssBANK4
  5605  0049  0085               	movwf	5
  5606  004A  301A               	movlw	26
  5607  004B  00FE               	movwf	btemp
  5608  004C  3000               	movlw	0
  5609  004D  00FF               	movwf	btemp+1
  5610  004E  31A6  2610         	fcall	clear_ram0
  5611  0050                     end_of_initialization:	
  5612                           ;End of C runtime variable initialization code
  5613                           
  5614  0050                     __end_of__initialization:	
  5615  0050  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  5616  0051  0140               	movlb	0
  5617  0052  3185  2DAC         	ljmp	_main	;jump to C main() function
  5618                           
  5619                           	psect	bssBANK1
  5620  00E8                     __pbssBANK1:	
  5621  00E8                     _ticks:	
  5622  00E8                     	ds	4
  5623  00EC                     _gps_configured:	
  5624  00EC                     	ds	1
  5625  00ED                     _eusart1RxLastError:	
  5626  00ED                     	ds	1
  5627                           
  5628                           	psect	bssBANK2
  5629  0120                     __pbssBANK2:	
  5630  0120                     main@F11368:	
  5631  0120                     	ds	16
  5632  0130                     bme280_get_sensor_data@F273:	
  5633  0130                     	ds	12
  5634  013C                     bme280_get_sensor_data@F271:	
  5635  013C                     	ds	8
  5636  0144                     ___g_timeout_start:	
  5637  0144                     	ds	4
  5638  0148                     _id:	
  5639  0148                     	ds	2
  5640  014A                     _checksum:	
  5641  014A                     	ds	6
  5642                           
  5643                           	psect	bssBANK3
  5644  01A0                     __pbssBANK3:	
  5645  01A0                     _EnvSensor:	
  5646  01A0                     	ds	51
  5647  01D3                     _csvField:	
  5648  01D3                     	ds	20
  5649                           
  5650                           	psect	bssBANK4
  5651  024C                     __pbssBANK4:	
  5652  024C                     get_calib_data@F376:	
  5653  024C                     	ds	26
  5654                           
  5655                           	psect	dataBANK4
  5656  0220                     __pdataBANK4:	
  5657  0220                     _setNavFlightMode:	
  5658  0220                     	ds	44
  5659                           
  5660                           	psect	inittext
  5661  261C                     init_ram:	
  5662  261C  00FE               	movwf	126
  5663  261D                     initloop:	
  5664  261D  0012               	moviw fsr0++
  5665  261E  001E               	movwi fsr1++
  5666  261F  3001               	movlw	1
  5667  2620  02FE               	subwf	126,f
  5668  2621  3000               	movlw	0
  5669  2622  3BFF               	subwfb	127,f
  5670  2623  087F               	movf	127,w
  5671  2624  047E               	iorwf	126,w
  5672  2625  1903               	btfsc	3,2
  5673  2626  3400               	retlw	0
  5674  2627  2E1D               	goto	initloop
  5675                           
  5676                           	psect	clrtext
  5677  2610                     clear_ram0:	
  5678                           ;	Called with FSR0 containing the base address, and
  5679                           ;	btemp/btemp+1 has the size to clear
  5680                           
  5681  2610  0064               	clrwdt	;clear the watchdog before getting into this loop
  5682  2611                     clrloop0:	
  5683  2611  0180               	clrf	0	;clear RAM location pointed to by FSR
  5684  2612  3101               	addfsr 0,1
  5685  2613  3001               	movlw	1
  5686  2614  02FE               	subwf	126,f
  5687  2615  3000               	movlw	0
  5688  2616  3BFF               	subwfb	127,f
  5689  2617  087F               	movf	127,w
  5690  2618  047E               	iorwf	126,w
  5691  2619  1903               	btfsc	3,2
  5692  261A  3400               	retlw	0	;all done for this memory range, return
  5693  261B  2E11               	goto	clrloop0	;have we reached the end yet?
  5694                           
  5695                           	psect	cstackBANK2
  5696  0150                     __pcstackBANK2:	
  5697  0150                     main@convertedNumber:	
  5698                           
  5699                           ; 16 bytes @ 0x0
  5700  0150                     	ds	16
  5701  0160                     main@end:	
  5702                           
  5703                           ; 2 bytes @ 0x10
  5704  0160                     	ds	2
  5705  0162                     main@sensor_data:	
  5706                           
  5707                           ; 12 bytes @ 0x12
  5708  0162                     	ds	12
  5709  016E                     main@index:	
  5710                           
  5711                           ; 2 bytes @ 0x1E
  5712  016E                     	ds	2
  5713                           
  5714                           	psect	cstackBANK1
  5715  00A0                     __pcstackBANK1:	
  5716  00A0                     put_device_to_sleep@reg_data:	
  5717  00A0                     compensate_pressure@var3:	
  5718                           ; 4 bytes @ 0x0
  5719                           
  5720                           
  5721                           ; 4 bytes @ 0x0
  5722  00A0                     	ds	4
  5723  00A4                     put_device_to_sleep@dev:	
  5724  00A4                     compensate_pressure@var4:	
  5725                           ; 1 bytes @ 0x4
  5726                           
  5727                           
  5728                           ; 4 bytes @ 0x4
  5729  00A4                     	ds	1
  5730  00A5                     put_device_to_sleep@rslt:	
  5731                           
  5732                           ; 1 bytes @ 0x5
  5733  00A5                     	ds	1
  5734  00A6                     put_device_to_sleep@settings:	
  5735                           
  5736                           ; 5 bytes @ 0x6
  5737  00A6                     	ds	2
  5738  00A8                     compensate_pressure@var5:	
  5739                           
  5740                           ; 4 bytes @ 0x8
  5741  00A8                     	ds	3
  5742  00AB                     bme280_set_sensor_settings@desired_settings:	
  5743  00AB                     bme280_set_sensor_mode@sensor_mode:	
  5744                           ; 1 bytes @ 0xB
  5745                           
  5746                           
  5747                           ; 1 bytes @ 0xB
  5748  00AB                     	ds	1
  5749  00AC                     bme280_set_sensor_settings@sensor_mode:	
  5750  00AC                     bme280_set_sensor_mode@last_set_mode:	
  5751                           ; 1 bytes @ 0xC
  5752                           
  5753  00AC                     _compensate_pressure$2717:	
  5754                           ; 1 bytes @ 0xC
  5755                           
  5756                           
  5757                           ; 4 bytes @ 0xC
  5758  00AC                     	ds	1
  5759  00AD                     bme280_set_sensor_settings@rslt:	
  5760  00AD                     bme280_set_sensor_mode@rslt:	
  5761                           ; 1 bytes @ 0xD
  5762                           
  5763                           
  5764                           ; 1 bytes @ 0xD
  5765  00AD                     	ds	1
  5766  00AE                     ??_BME280_Init:	
  5767                           
  5768                           ; 1 bytes @ 0xE
  5769  00AE                     	ds	2
  5770  00B0                     BME280_Init@settings_sel:	
  5771  00B0                     _compensate_pressure$2718:	
  5772                           ; 1 bytes @ 0x10
  5773                           
  5774                           
  5775                           ; 4 bytes @ 0x10
  5776  00B0                     	ds	1
  5777  00B1                     BME280_Init@rslt:	
  5778                           
  5779                           ; 1 bytes @ 0x11
  5780  00B1                     	ds	3
  5781  00B4                     compensate_pressure@uncomp_data:	
  5782                           
  5783                           ; 1 bytes @ 0x14
  5784  00B4                     	ds	1
  5785  00B5                     compensate_pressure@pressure_max:	
  5786                           
  5787                           ; 4 bytes @ 0x15
  5788  00B5                     	ds	4
  5789  00B9                     _compensate_pressure$2716:	
  5790                           
  5791                           ; 4 bytes @ 0x19
  5792  00B9                     	ds	8
  5793  00C1                     compensate_pressure@var2:	
  5794                           
  5795                           ; 4 bytes @ 0x21
  5796  00C1                     	ds	4
  5797  00C5                     compensate_pressure@pressure:	
  5798                           
  5799                           ; 4 bytes @ 0x25
  5800  00C5                     	ds	4
  5801  00C9                     compensate_pressure@var1:	
  5802                           
  5803                           ; 4 bytes @ 0x29
  5804  00C9                     	ds	4
  5805  00CD                     bme280_get_sensor_data@reg_data:	
  5806                           
  5807                           ; 8 bytes @ 0x2D
  5808  00CD                     	ds	8
  5809  00D5                     bme280_get_sensor_data@sensor_comp:	
  5810                           
  5811                           ; 1 bytes @ 0x35
  5812  00D5                     	ds	1
  5813  00D6                     bme280_get_sensor_data@rslt:	
  5814                           
  5815                           ; 1 bytes @ 0x36
  5816  00D6                     	ds	1
  5817  00D7                     bme280_get_sensor_data@uncomp_data:	
  5818                           
  5819                           ; 12 bytes @ 0x37
  5820  00D7                     	ds	12
  5821  00E3                     ??_main:	
  5822                           
  5823                           ; 1 bytes @ 0x43
  5824  00E3                     	ds	5
  5825                           
  5826                           	psect	cstackCOMMON
  5827  0070                     __pcstackCOMMON:	
  5828  0070                     ?_null_ptr_check:	
  5829  0070                     ??_null_ptr_check:	
  5830                           ; 1 bytes @ 0x0
  5831                           
  5832  0070                     ?_bme280_soft_reset:	
  5833                           ; 1 bytes @ 0x0
  5834                           
  5835  0070                     ?_get_calib_data:	
  5836                           ; 1 bytes @ 0x0
  5837                           
  5838  0070                     ?_interleave_reg_addr:	
  5839                           ; 1 bytes @ 0x0
  5840                           
  5841  0070                     ?_put_device_to_sleep:	
  5842                           ; 1 bytes @ 0x0
  5843                           
  5844  0070                     ?_are_settings_changed:	
  5845                           ; 1 bytes @ 0x0
  5846                           
  5847  0070                     ?_parse_device_settings:	
  5848                           ; 1 bytes @ 0x0
  5849                           
  5850  0070                     ?_bme280_parse_sensor_data:	
  5851                           ; 1 bytes @ 0x0
  5852                           
  5853  0070                     ?_fill_osr_press_settings:	
  5854                           ; 1 bytes @ 0x0
  5855                           
  5856  0070                     ?_fill_osr_temp_settings:	
  5857                           ; 1 bytes @ 0x0
  5858                           
  5859  0070                     ?_fill_filter_settings:	
  5860                           ; 1 bytes @ 0x0
  5861                           
  5862  0070                     ?_fill_standby_settings:	
  5863                           ; 1 bytes @ 0x0
  5864                           
  5865  0070                     ?_parse_temp_press_calib_data:	
  5866                           ; 1 bytes @ 0x0
  5867                           
  5868  0070                     ?_parse_humidity_calib_data:	
  5869                           ; 1 bytes @ 0x0
  5870                           
  5871  0070                     ?_TMR0_SetInterruptHandler:	
  5872                           ; 1 bytes @ 0x0
  5873                           
  5874  0070                     ?_TMR0_DefaultInterruptHandler:	
  5875                           ; 1 bytes @ 0x0
  5876                           
  5877  0070                     ??_TMR0_DefaultInterruptHandler:	
  5878                           ; 1 bytes @ 0x0
  5879                           
  5880  0070                     ?_EUSART1_SetFramingErrorHandler:	
  5881                           ; 1 bytes @ 0x0
  5882                           
  5883  0070                     ?_EUSART1_SetOverrunErrorHandler:	
  5884                           ; 1 bytes @ 0x0
  5885                           
  5886  0070                     ?_EUSART1_SetErrorHandler:	
  5887                           ; 1 bytes @ 0x0
  5888                           
  5889  0070                     ?_PMD_Initialize:	
  5890                           ; 1 bytes @ 0x0
  5891                           
  5892  0070                     ??_PMD_Initialize:	
  5893                           ; 1 bytes @ 0x0
  5894                           
  5895  0070                     ?_PIN_MANAGER_Initialize:	
  5896                           ; 1 bytes @ 0x0
  5897                           
  5898  0070                     ??_PIN_MANAGER_Initialize:	
  5899                           ; 1 bytes @ 0x0
  5900                           
  5901  0070                     ?_OSCILLATOR_Initialize:	
  5902                           ; 1 bytes @ 0x0
  5903                           
  5904  0070                     ??_OSCILLATOR_Initialize:	
  5905                           ; 1 bytes @ 0x0
  5906                           
  5907  0070                     ?_I2C_UserAlert:	
  5908                           ; 1 bytes @ 0x0
  5909                           
  5910  0070                     ?_Sleep:	
  5911                           ; 1 bytes @ 0x0
  5912                           
  5913  0070                     ?_InitTiming:	
  5914                           ; 1 bytes @ 0x0
  5915                           
  5916  0070                     ?_bme280_init:	
  5917                           ; 1 bytes @ 0x0
  5918                           
  5919  0070                     ?_TMR0_Initialize:	
  5920                           ; 1 bytes @ 0x0
  5921                           
  5922  0070                     ?_TMR0_ISR:	
  5923                           ; 1 bytes @ 0x0
  5924                           
  5925  0070                     ??_TMR0_ISR:	
  5926                           ; 1 bytes @ 0x0
  5927                           
  5928  0070                     ?_EUSART1_Initialize:	
  5929                           ; 1 bytes @ 0x0
  5930                           
  5931  0070                     ?_EUSART1_is_rx_ready:	
  5932                           ; 1 bytes @ 0x0
  5933                           
  5934  0070                     ??_EUSART1_is_rx_ready:	
  5935                           ; 1 bytes @ 0x0
  5936                           
  5937  0070                     ?_EUSART1_Read:	
  5938                           ; 1 bytes @ 0x0
  5939                           
  5940  0070                     ??_EUSART1_Read:	
  5941                           ; 1 bytes @ 0x0
  5942                           
  5943  0070                     ?_EUSART1_Write:	
  5944                           ; 1 bytes @ 0x0
  5945                           
  5946  0070                     ??_EUSART1_Write:	
  5947                           ; 1 bytes @ 0x0
  5948                           
  5949  0070                     ?_INTERRUPT_InterruptManager:	
  5950                           ; 1 bytes @ 0x0
  5951                           
  5952  0070                     ??_INTERRUPT_InterruptManager:	
  5953                           ; 1 bytes @ 0x0
  5954                           
  5955  0070                     ?_SYSTEM_Initialize:	
  5956                           ; 1 bytes @ 0x0
  5957                           
  5958  0070                     ?_I2C_Wait_SSPIF:	
  5959                           ; 1 bytes @ 0x0
  5960                           
  5961  0070                     ?_I2C_Init:	
  5962                           ; 1 bytes @ 0x0
  5963                           
  5964  0070                     ??_I2C_Init:	
  5965                           ; 1 bytes @ 0x0
  5966                           
  5967  0070                     ?_I2C_WriteByte:	
  5968                           ; 1 bytes @ 0x0
  5969                           
  5970  0070                     ?_I2C_ReadByte:	
  5971                           ; 1 bytes @ 0x0
  5972                           
  5973  0070                     ?_I2C_Stop:	
  5974                           ; 1 bytes @ 0x0
  5975                           
  5976  0070                     ?_BME280_Init:	
  5977                           ; 1 bytes @ 0x0
  5978                           
  5979  0070                     ?_ClearString:	
  5980                           ; 1 bytes @ 0x0
  5981                           
  5982  0070                     ?_ClearStringn:	
  5983                           ; 1 bytes @ 0x0
  5984                           
  5985  0070                     ?_ReverseString:	
  5986                           ; 1 bytes @ 0x0
  5987                           
  5988  0070                     ?_ClearTxData:	
  5989                           ; 1 bytes @ 0x0
  5990                           
  5991  0070                     ??_ClearTxData:	
  5992                           ; 1 bytes @ 0x0
  5993                           
  5994  0070                     ?_GPS_SendUBX:	
  5995                           ; 1 bytes @ 0x0
  5996                           
  5997  0070                     ?_GPS_HasAcknowledged:	
  5998                           ; 1 bytes @ 0x0
  5999                           
  6000  0070                     ??_GPS_HasAcknowledged:	
  6001                           ; 1 bytes @ 0x0
  6002                           
  6003  0070                     ?_SetupGPS:	
  6004                           ; 1 bytes @ 0x0
  6005                           
  6006  0070                     ?_ClearNMEA:	
  6007                           ; 1 bytes @ 0x0
  6008                           
  6009  0070                     ??_ClearNMEA:	
  6010                           ; 1 bytes @ 0x0
  6011                           
  6012  0070                     ?_PollGPS:	
  6013                           ; 1 bytes @ 0x0
  6014                           
  6015  0070                     ?_main:	
  6016                           ; 1 bytes @ 0x0
  6017                           
  6018  0070                     ?_TransmitBit:	
  6019                           ; 1 bytes @ 0x0
  6020                           
  6021  0070                     ?_TransmitChar:	
  6022                           ; 1 bytes @ 0x0
  6023                           
  6024  0070                     ?_TimerISR:	
  6025                           ; 1 bytes @ 0x0
  6026                           
  6027  0070                     ??_TimerISR:	
  6028                           ; 1 bytes @ 0x0
  6029                           
  6030  0070                     ?_strlen:	
  6031                           ; 1 bytes @ 0x0
  6032                           
  6033  0070                     ?_GetLengthUBX:	
  6034                           ; 2 bytes @ 0x0
  6035                           
  6036  0070                     ?___awdiv:	
  6037                           ; 2 bytes @ 0x0
  6038                           
  6039  0070                     ?___awmod:	
  6040                           ; 2 bytes @ 0x0
  6041                           
  6042  0070                     ?___lmul:	
  6043                           ; 2 bytes @ 0x0
  6044                           
  6045  0070                     ?___lldiv:	
  6046                           ; 4 bytes @ 0x0
  6047                           
  6048  0070                     ?___llmod:	
  6049                           ; 4 bytes @ 0x0
  6050                           
  6051  0070                     bme280_parse_sensor_data@uncomp_data:	
  6052                           ; 4 bytes @ 0x0
  6053                           
  6054  0070                     parse_device_settings@settings:	
  6055                           ; 1 bytes @ 0x0
  6056                           
  6057  0070                     interleave_reg_addr@temp_buff:	
  6058                           ; 1 bytes @ 0x0
  6059                           
  6060  0070                     parse_temp_press_calib_data@dev:	
  6061                           ; 1 bytes @ 0x0
  6062                           
  6063  0070                     parse_humidity_calib_data@dev:	
  6064                           ; 1 bytes @ 0x0
  6065                           
  6066  0070                     are_settings_changed@desired_settings:	
  6067                           ; 1 bytes @ 0x0
  6068                           
  6069  0070                     EUSART1_Write@txData:	
  6070                           ; 1 bytes @ 0x0
  6071                           
  6072  0070                     I2C_UserAlert@status:	
  6073                           ; 1 bytes @ 0x0
  6074                           
  6075  0070                     fill_filter_settings@settings:	
  6076                           ; 1 bytes @ 0x0
  6077                           
  6078  0070                     fill_standby_settings@settings:	
  6079                           ; 2 bytes @ 0x0
  6080                           
  6081  0070                     fill_osr_press_settings@settings:	
  6082                           ; 2 bytes @ 0x0
  6083                           
  6084  0070                     fill_osr_temp_settings@settings:	
  6085                           ; 2 bytes @ 0x0
  6086                           
  6087  0070                     TMR0_SetInterruptHandler@InterruptHandler:	
  6088                           ; 2 bytes @ 0x0
  6089                           
  6090  0070                     EUSART1_SetFramingErrorHandler@interruptHandler:	
  6091                           ; 2 bytes @ 0x0
  6092                           
  6093  0070                     EUSART1_SetOverrunErrorHandler@interruptHandler:	
  6094                           ; 2 bytes @ 0x0
  6095                           
  6096  0070                     EUSART1_SetErrorHandler@interruptHandler:	
  6097                           ; 2 bytes @ 0x0
  6098                           
  6099  0070                     ClearStringn@length:	
  6100                           ; 2 bytes @ 0x0
  6101                           
  6102  0070                     ___awdiv@divisor:	
  6103                           ; 2 bytes @ 0x0
  6104                           
  6105  0070                     ___awmod@divisor:	
  6106                           ; 2 bytes @ 0x0
  6107                           
  6108  0070                     strlen@s:	
  6109                           ; 2 bytes @ 0x0
  6110                           
  6111  0070                     Sleep@ms:	
  6112                           ; 2 bytes @ 0x0
  6113                           
  6114  0070                     ___lmul@multiplier:	
  6115                           ; 4 bytes @ 0x0
  6116                           
  6117  0070                     ___lldiv@divisor:	
  6118                           ; 4 bytes @ 0x0
  6119                           
  6120  0070                     ___llmod@divisor:	
  6121                           ; 4 bytes @ 0x0
  6122                           
  6123                           
  6124                           ; 4 bytes @ 0x0
  6125  0070                     	ds	1
  6126  0071                     ??_are_settings_changed:	
  6127  0071                     ??_parse_device_settings:	
  6128                           ; 1 bytes @ 0x1
  6129                           
  6130  0071                     ??_bme280_parse_sensor_data:	
  6131                           ; 1 bytes @ 0x1
  6132                           
  6133  0071                     ??_parse_temp_press_calib_data:	
  6134                           ; 1 bytes @ 0x1
  6135                           
  6136  0071                     ??_parse_humidity_calib_data:	
  6137                           ; 1 bytes @ 0x1
  6138                           
  6139  0071                     interleave_reg_addr@reg_data:	
  6140                           ; 1 bytes @ 0x1
  6141                           
  6142  0071                     are_settings_changed@sub_settings:	
  6143                           ; 1 bytes @ 0x1
  6144                           
  6145                           
  6146                           ; 1 bytes @ 0x1
  6147  0071                     	ds	1
  6148  0072                     ??_fill_osr_press_settings:	
  6149  0072                     ??_fill_osr_temp_settings:	
  6150                           ; 1 bytes @ 0x2
  6151                           
  6152  0072                     ??_fill_filter_settings:	
  6153                           ; 1 bytes @ 0x2
  6154                           
  6155  0072                     ??_fill_standby_settings:	
  6156                           ; 1 bytes @ 0x2
  6157                           
  6158  0072                     ??_TMR0_SetInterruptHandler:	
  6159                           ; 1 bytes @ 0x2
  6160                           
  6161  0072                     ??_EUSART1_SetFramingErrorHandler:	
  6162                           ; 1 bytes @ 0x2
  6163                           
  6164  0072                     ??_EUSART1_SetOverrunErrorHandler:	
  6165                           ; 1 bytes @ 0x2
  6166                           
  6167  0072                     ??_EUSART1_SetErrorHandler:	
  6168                           ; 1 bytes @ 0x2
  6169                           
  6170  0072                     ??_strlen:	
  6171                           ; 1 bytes @ 0x2
  6172                           
  6173  0072                     ??_InitTiming:	
  6174                           ; 1 bytes @ 0x2
  6175                           
  6176  0072                     ??_TMR0_Initialize:	
  6177                           ; 1 bytes @ 0x2
  6178                           
  6179  0072                     ??_EUSART1_Initialize:	
  6180                           ; 1 bytes @ 0x2
  6181                           
  6182  0072                     ??_SYSTEM_Initialize:	
  6183                           ; 1 bytes @ 0x2
  6184                           
  6185  0072                     ??_ClearStringn:	
  6186                           ; 1 bytes @ 0x2
  6187                           
  6188  0072                     interleave_reg_addr@len:	
  6189                           ; 1 bytes @ 0x2
  6190                           
  6191  0072                     parse_temp_press_calib_data@calib_data:	
  6192                           ; 1 bytes @ 0x2
  6193                           
  6194  0072                     are_settings_changed@settings_changed:	
  6195                           ; 1 bytes @ 0x2
  6196                           
  6197  0072                     null_ptr_check@rslt:	
  6198                           ; 1 bytes @ 0x2
  6199                           
  6200  0072                     ClearTxData@i:	
  6201                           ; 1 bytes @ 0x2
  6202                           
  6203  0072                     ClearNMEA@i:	
  6204                           ; 2 bytes @ 0x2
  6205                           
  6206  0072                     ___awdiv@dividend:	
  6207                           ; 2 bytes @ 0x2
  6208                           
  6209  0072                     ___awmod@dividend:	
  6210                           ; 2 bytes @ 0x2
  6211                           
  6212                           
  6213                           ; 2 bytes @ 0x2
  6214  0072                     	ds	1
  6215  0073                     ??_interleave_reg_addr:	
  6216  0073                     ??_GetLengthUBX:	
  6217                           ; 1 bytes @ 0x3
  6218                           
  6219  0073                     parse_device_settings@reg_data:	
  6220                           ; 1 bytes @ 0x3
  6221                           
  6222  0073                     parse_temp_press_calib_data@reg_data:	
  6223                           ; 1 bytes @ 0x3
  6224                           
  6225  0073                     null_ptr_check@dev:	
  6226                           ; 1 bytes @ 0x3
  6227                           
  6228  0073                     ClearStringn@str:	
  6229                           ; 1 bytes @ 0x3
  6230                           
  6231  0073                     GetLengthUBX@data:	
  6232                           ; 1 bytes @ 0x3
  6233                           
  6234  0073                     strlen@a:	
  6235                           ; 1 bytes @ 0x3
  6236                           
  6237                           
  6238                           ; 2 bytes @ 0x3
  6239  0073                     	ds	1
  6240  0074                     ??_Sleep:	
  6241  0074                     ??_GPS_SendUBX:	
  6242                           ; 1 bytes @ 0x4
  6243                           
  6244  0074                     ??___awdiv:	
  6245                           ; 1 bytes @ 0x4
  6246                           
  6247  0074                     ??___awmod:	
  6248                           ; 1 bytes @ 0x4
  6249                           
  6250  0074                     parse_humidity_calib_data@dig_H4_lsb:	
  6251                           ; 1 bytes @ 0x4
  6252                           
  6253  0074                     ClearStringn@i:	
  6254                           ; 2 bytes @ 0x4
  6255                           
  6256  0074                     ___lmul@multiplicand:	
  6257                           ; 2 bytes @ 0x4
  6258                           
  6259  0074                     ___lldiv@dividend:	
  6260                           ; 4 bytes @ 0x4
  6261                           
  6262  0074                     ___llmod@dividend:	
  6263                           ; 4 bytes @ 0x4
  6264                           
  6265                           
  6266                           ; 4 bytes @ 0x4
  6267  0074                     	ds	1
  6268  0075                     ??_ClearString:	
  6269  0075                     ?_WriteGPS:	
  6270                           ; 1 bytes @ 0x5
  6271                           
  6272  0075                     ?_Insert:	
  6273                           ; 1 bytes @ 0x5
  6274                           
  6275  0075                     ?_crc16_update:	
  6276                           ; 2 bytes @ 0x5
  6277                           
  6278  0075                     fill_filter_settings@reg_data:	
  6279                           ; 2 bytes @ 0x5
  6280                           
  6281  0075                     fill_standby_settings@reg_data:	
  6282                           ; 1 bytes @ 0x5
  6283                           
  6284  0075                     fill_osr_press_settings@reg_data:	
  6285                           ; 1 bytes @ 0x5
  6286                           
  6287  0075                     fill_osr_temp_settings@reg_data:	
  6288                           ; 1 bytes @ 0x5
  6289                           
  6290  0075                     ___awdiv@counter:	
  6291                           ; 1 bytes @ 0x5
  6292                           
  6293  0075                     ___awmod@counter:	
  6294                           ; 1 bytes @ 0x5
  6295                           
  6296  0075                     Insert@dest:	
  6297                           ; 1 bytes @ 0x5
  6298                           
  6299  0075                     WriteGPS@message:	
  6300                           ; 2 bytes @ 0x5
  6301                           
  6302  0075                     GPS_SendUBX@length:	
  6303                           ; 2 bytes @ 0x5
  6304                           
  6305  0075                     crc16_update@pData:	
  6306                           ; 2 bytes @ 0x5
  6307                           
  6308                           
  6309                           ; 2 bytes @ 0x5
  6310  0075                     	ds	1
  6311  0076                     ?_GetAtRowCSV:	
  6312  0076                     interleave_reg_addr@reg_addr:	
  6313                           ; 1 bytes @ 0x6
  6314                           
  6315  0076                     ___awdiv@sign:	
  6316                           ; 1 bytes @ 0x6
  6317                           
  6318  0076                     ___awmod@sign:	
  6319                           ; 1 bytes @ 0x6
  6320                           
  6321  0076                     parse_humidity_calib_data@dig_H4_msb:	
  6322                           ; 1 bytes @ 0x6
  6323                           
  6324  0076                     ClearString@counti:	
  6325                           ; 2 bytes @ 0x6
  6326                           
  6327  0076                     GetAtRowCSV@src:	
  6328                           ; 2 bytes @ 0x6
  6329                           
  6330                           
  6331                           ; 2 bytes @ 0x6
  6332  0076                     	ds	1
  6333  0077                     ??_WriteGPS:	
  6334  0077                     interleave_reg_addr@index:	
  6335                           ; 1 bytes @ 0x7
  6336                           
  6337  0077                     Insert@src:	
  6338                           ; 1 bytes @ 0x7
  6339                           
  6340  0077                     GPS_SendUBX@i:	
  6341                           ; 1 bytes @ 0x7
  6342                           
  6343  0077                     crc16_update@length:	
  6344                           ; 2 bytes @ 0x7
  6345                           
  6346  0077                     ___awdiv@quotient:	
  6347                           ; 2 bytes @ 0x7
  6348                           
  6349                           
  6350                           ; 2 bytes @ 0x7
  6351  0077                     	ds	1
  6352  0078                     ??___lmul:	
  6353  0078                     ??___lldiv:	
  6354                           ; 1 bytes @ 0x8
  6355                           
  6356  0078                     ??___llmod:	
  6357                           ; 1 bytes @ 0x8
  6358                           
  6359  0078                     parse_humidity_calib_data@dig_H5_lsb:	
  6360                           ; 1 bytes @ 0x8
  6361                           
  6362  0078                     ClearString@i:	
  6363                           ; 2 bytes @ 0x8
  6364                           
  6365  0078                     GetAtRowCSV@column:	
  6366                           ; 2 bytes @ 0x8
  6367                           
  6368  0078                     Insert@index:	
  6369                           ; 2 bytes @ 0x8
  6370                           
  6371  0078                     WriteGPS@counti:	
  6372                           ; 2 bytes @ 0x8
  6373                           
  6374  0078                     Sleep@start:	
  6375                           ; 2 bytes @ 0x8
  6376                           
  6377  0078                     ___lmul@product:	
  6378                           ; 4 bytes @ 0x8
  6379                           
  6380                           
  6381                           ; 4 bytes @ 0x8
  6382  0078                     	ds	1
  6383  0079                     ??_ReverseString:	
  6384  0079                     GPS_SendUBX@data:	
  6385                           ; 1 bytes @ 0x9
  6386                           
  6387  0079                     ___llmod@counter:	
  6388                           ; 1 bytes @ 0x9
  6389                           
  6390  0079                     crc16_update@wCrc:	
  6391                           ; 1 bytes @ 0x9
  6392                           
  6393  0079                     ___lldiv@quotient:	
  6394                           ; 2 bytes @ 0x9
  6395                           
  6396                           
  6397                           ; 4 bytes @ 0x9
  6398  0079                     	ds	1
  6399  007A                     ??_GetAtRowCSV:	
  6400  007A                     ClearString@str:	
  6401                           ; 1 bytes @ 0xA
  6402                           
  6403  007A                     parse_humidity_calib_data@dig_H5_msb:	
  6404                           ; 1 bytes @ 0xA
  6405                           
  6406  007A                     Insert@destLimit:	
  6407                           ; 2 bytes @ 0xA
  6408                           
  6409  007A                     WriteGPS@i:	
  6410                           ; 2 bytes @ 0xA
  6411                           
  6412                           
  6413                           ; 2 bytes @ 0xA
  6414  007A                     	ds	1
  6415  007B                     ?_IntToString:	
  6416  007B                     ??_crc16_update:	
  6417                           ; 1 bytes @ 0xB
  6418                           
  6419  007B                     ?_strcmp:	
  6420                           ; 1 bytes @ 0xB
  6421                           
  6422  007B                     IntToString@n:	
  6423                           ; 2 bytes @ 0xB
  6424                           
  6425  007B                     strcmp@r:	
  6426                           ; 2 bytes @ 0xB
  6427                           
  6428                           
  6429                           ; 2 bytes @ 0xB
  6430  007B                     	ds	1
  6431  007C                     ??_DebugAlert:	
  6432  007C                     ??_InsertString:	
  6433                           ; 1 bytes @ 0xC
  6434                           
  6435  007C                     ??_SetupGPS:	
  6436                           ; 1 bytes @ 0xC
  6437                           
  6438  007C                     ??_TransmitBit:	
  6439                           ; 1 bytes @ 0xC
  6440                           
  6441  007C                     ??___aldiv:	
  6442                           ; 1 bytes @ 0xC
  6443                           
  6444  007C                     ?_InsertTxDataSep:	
  6445                           ; 1 bytes @ 0xC
  6446                           
  6447  007C                     parse_humidity_calib_data@calib_data:	
  6448                           ; 2 bytes @ 0xC
  6449                           
  6450  007C                     TransmitBit@b:	
  6451                           ; 1 bytes @ 0xC
  6452                           
  6453  007C                     InsertTxDataSep@index:	
  6454                           ; 1 bytes @ 0xC
  6455                           
  6456                           
  6457                           ; 2 bytes @ 0xC
  6458  007C                     	ds	1
  6459  007D                     ??_I2C_UserAlert:	
  6460  007D                     ??_strcmp:	
  6461                           ; 1 bytes @ 0xD
  6462                           
  6463  007D                     ??_I2C_WriteByte:	
  6464                           ; 1 bytes @ 0xD
  6465                           
  6466  007D                     ??_I2C_ReadByte:	
  6467                           ; 1 bytes @ 0xD
  6468                           
  6469  007D                     ??_I2C_Stop:	
  6470                           ; 1 bytes @ 0xD
  6471                           
  6472  007D                     ??_TransmitChar:	
  6473                           ; 1 bytes @ 0xD
  6474                           
  6475  007D                     parse_humidity_calib_data@reg_data:	
  6476                           ; 1 bytes @ 0xD
  6477                           
  6478  007D                     I2C_WriteByte@data:	
  6479                           ; 1 bytes @ 0xD
  6480                           
  6481  007D                     IntToString@dest:	
  6482                           ; 1 bytes @ 0xD
  6483                           
  6484  007D                     ___lldiv@counter:	
  6485                           ; 1 bytes @ 0xD
  6486                           
  6487                           
  6488                           ; 1 bytes @ 0xD
  6489  007D                     	ds	1
  6490  007E                     ??_crc16:	
  6491  007E                     ??_InsertTxData:	
  6492                           ; 1 bytes @ 0xE
  6493                           
  6494                           
  6495                           	psect	cstackBANK0
  6496  0020                     __pcstackBANK0:	
  6497                           ; 1 bytes @ 0xE
  6498                           
  6499  0020                     ?_DebugAlert:	
  6500  0020                     ??_Insert:	
  6501                           ; 1 bytes @ 0x0
  6502                           
  6503  0020                     ?___aldiv:	
  6504                           ; 1 bytes @ 0x0
  6505                           
  6506  0020                     crc16_update@i:	
  6507                           ; 4 bytes @ 0x0
  6508                           
  6509  0020                     TransmitChar@byte:	
  6510                           ; 1 bytes @ 0x0
  6511                           
  6512  0020                     DebugAlert@delay_high:	
  6513                           ; 1 bytes @ 0x0
  6514                           
  6515  0020                     GetAtRowCSV@counti:	
  6516                           ; 2 bytes @ 0x0
  6517                           
  6518  0020                     ReverseString@halfway:	
  6519                           ; 2 bytes @ 0x0
  6520                           
  6521  0020                     bme280_parse_sensor_data@data_xlsb:	
  6522                           ; 2 bytes @ 0x0
  6523                           
  6524  0020                     GPS_HasAcknowledged@startTime:	
  6525                           ; 4 bytes @ 0x0
  6526                           
  6527  0020                     ___aldiv@divisor:	
  6528                           ; 4 bytes @ 0x0
  6529                           
  6530                           
  6531                           ; 4 bytes @ 0x0
  6532  0020                     	ds	1
  6533  0021                     ?_crc16:	
  6534  0021                     crc16@data:	
  6535                           ; 2 bytes @ 0x1
  6536                           
  6537  0021                     TransmitChar@i:	
  6538                           ; 2 bytes @ 0x1
  6539                           
  6540                           
  6541                           ; 2 bytes @ 0x1
  6542  0021                     	ds	1
  6543  0022                     ReverseString@temp:	
  6544  0022                     DebugAlert@delay_low:	
  6545                           ; 1 bytes @ 0x2
  6546                           
  6547  0022                     GetAtRowCSV@col:	
  6548                           ; 2 bytes @ 0x2
  6549                           
  6550                           
  6551                           ; 2 bytes @ 0x2
  6552  0022                     	ds	1
  6553  0023                     ?_TransmitString:	
  6554  0023                     ReverseString@opposite:	
  6555                           ; 1 bytes @ 0x3
  6556                           
  6557  0023                     crc16@crc:	
  6558                           ; 1 bytes @ 0x3
  6559                           
  6560  0023                     TransmitString@message:	
  6561                           ; 2 bytes @ 0x3
  6562                           
  6563                           
  6564                           ; 2 bytes @ 0x3
  6565  0023                     	ds	1
  6566  0024                     DebugAlert@num_flashes:	
  6567  0024                     GPS_HasAcknowledged@ackByte:	
  6568                           ; 1 bytes @ 0x4
  6569                           
  6570  0024                     GetAtRowCSV@index:	
  6571                           ; 1 bytes @ 0x4
  6572                           
  6573  0024                     ReverseString@counti:	
  6574                           ; 2 bytes @ 0x4
  6575                           
  6576  0024                     bme280_parse_sensor_data@data_lsb:	
  6577                           ; 2 bytes @ 0x4
  6578                           
  6579  0024                     ___aldiv@dividend:	
  6580                           ; 4 bytes @ 0x4
  6581                           
  6582                           
  6583                           ; 4 bytes @ 0x4
  6584  0024                     	ds	1
  6585  0025                     ??_TransmitString:	
  6586  0025                     DebugAlert@i:	
  6587                           ; 1 bytes @ 0x5
  6588                           
  6589  0025                     Insert@length:	
  6590                           ; 2 bytes @ 0x5
  6591                           
  6592  0025                     GPS_HasAcknowledged@ackPacket:	
  6593                           ; 2 bytes @ 0x5
  6594                           
  6595                           
  6596                           ; 10 bytes @ 0x5
  6597  0025                     	ds	1
  6598  0026                     GetAtRowCSV@i:	
  6599  0026                     ReverseString@i:	
  6600                           ; 2 bytes @ 0x6
  6601                           
  6602  0026                     TransmitString@counti:	
  6603                           ; 2 bytes @ 0x6
  6604                           
  6605                           
  6606                           ; 2 bytes @ 0x6
  6607  0026                     	ds	1
  6608  0027                     ??_I2C_Wait_SSPIF:	
  6609  0027                     Insert@i:	
  6610                           ; 1 bytes @ 0x7
  6611                           
  6612                           
  6613                           ; 2 bytes @ 0x7
  6614  0027                     	ds	1
  6615  0028                     ReverseString@str:	
  6616  0028                     ___aldiv@counter:	
  6617                           ; 1 bytes @ 0x8
  6618                           
  6619  0028                     strcmp@l:	
  6620                           ; 1 bytes @ 0x8
  6621                           
  6622  0028                     TransmitString@i:	
  6623                           ; 1 bytes @ 0x8
  6624                           
  6625  0028                     bme280_parse_sensor_data@data_msb:	
  6626                           ; 2 bytes @ 0x8
  6627                           
  6628                           
  6629                           ; 4 bytes @ 0x8
  6630  0028                     	ds	1
  6631  0029                     ?_UIntToHexString:	
  6632  0029                     ??_IntToString:	
  6633                           ; 1 bytes @ 0x9
  6634                           
  6635  0029                     ?_UIntToString:	
  6636                           ; 1 bytes @ 0x9
  6637                           
  6638  0029                     ??_InsertTxDataSep:	
  6639                           ; 1 bytes @ 0x9
  6640                           
  6641  0029                     ?_InsertString:	
  6642                           ; 1 bytes @ 0x9
  6643                           
  6644  0029                     ___aldiv@sign:	
  6645                           ; 2 bytes @ 0x9
  6646                           
  6647  0029                     InsertString@dest:	
  6648                           ; 1 bytes @ 0x9
  6649                           
  6650  0029                     UIntToHexString@n:	
  6651                           ; 2 bytes @ 0x9
  6652                           
  6653  0029                     UIntToString@n:	
  6654                           ; 4 bytes @ 0x9
  6655                           
  6656                           
  6657                           ; 4 bytes @ 0x9
  6658  0029                     	ds	1
  6659  002A                     ___aldiv@quotient:	
  6660                           
  6661                           ; 4 bytes @ 0xA
  6662  002A                     	ds	1
  6663  002B                     ?_WriteEnvSensor:	
  6664  002B                     I2C_ReadByte@ackbit:	
  6665                           ; 1 bytes @ 0xB
  6666                           
  6667  002B                     WriteEnvSensor@dev_id:	
  6668                           ; 1 bytes @ 0xB
  6669                           
  6670  002B                     IntToString@sign:	
  6671                           ; 1 bytes @ 0xB
  6672                           
  6673  002B                     InsertString@src:	
  6674                           ; 1 bytes @ 0xB
  6675                           
  6676                           
  6677                           ; 2 bytes @ 0xB
  6678  002B                     	ds	1
  6679  002C                     bme280_parse_sensor_data@reg_data:	
  6680  002C                     I2C_ReadByte@rcvdata:	
  6681                           ; 1 bytes @ 0xC
  6682                           
  6683  002C                     WriteEnvSensor@reg_addr:	
  6684                           ; 1 bytes @ 0xC
  6685                           
  6686  002C                     IntToString@i:	
  6687                           ; 1 bytes @ 0xC
  6688                           
  6689                           
  6690                           ; 2 bytes @ 0xC
  6691  002C                     	ds	1
  6692  002D                     ?_ReadEnvSensor:	
  6693  002D                     ReadEnvSensor@dev_id:	
  6694                           ; 1 bytes @ 0xD
  6695                           
  6696  002D                     WriteEnvSensor@reg_data:	
  6697                           ; 1 bytes @ 0xD
  6698                           
  6699  002D                     UIntToHexString@dest:	
  6700                           ; 1 bytes @ 0xD
  6701                           
  6702  002D                     UIntToString@dest:	
  6703                           ; 1 bytes @ 0xD
  6704                           
  6705  002D                     InsertString@index:	
  6706                           ; 1 bytes @ 0xD
  6707                           
  6708                           
  6709                           ; 2 bytes @ 0xD
  6710  002D                     	ds	1
  6711  002E                     ??_UIntToHexString:	
  6712  002E                     ??_UIntToString:	
  6713                           ; 1 bytes @ 0xE
  6714                           
  6715  002E                     ?_compensate_temperature:	
  6716                           ; 1 bytes @ 0xE
  6717                           
  6718  002E                     ?_compensate_pressure:	
  6719                           ; 4 bytes @ 0xE
  6720                           
  6721  002E                     ?_compensate_humidity:	
  6722                           ; 4 bytes @ 0xE
  6723                           
  6724  002E                     compensate_temperature@calib_data:	
  6725                           ; 4 bytes @ 0xE
  6726                           
  6727  002E                     compensate_pressure@calib_data:	
  6728                           ; 1 bytes @ 0xE
  6729                           
  6730  002E                     compensate_humidity@calib_data:	
  6731                           ; 1 bytes @ 0xE
  6732                           
  6733  002E                     ReadEnvSensor@reg_addr:	
  6734                           ; 1 bytes @ 0xE
  6735                           
  6736  002E                     WriteEnvSensor@len:	
  6737                           ; 1 bytes @ 0xE
  6738                           
  6739                           
  6740                           ; 2 bytes @ 0xE
  6741  002E                     	ds	1
  6742  002F                     ReadEnvSensor@reg_data:	
  6743  002F                     GPS_HasAcknowledged@data:	
  6744                           ; 1 bytes @ 0xF
  6745                           
  6746  002F                     InsertString@destLimit:	
  6747                           ; 1 bytes @ 0xF
  6748                           
  6749                           
  6750                           ; 2 bytes @ 0xF
  6751  002F                     	ds	1
  6752  0030                     ??_WriteEnvSensor:	
  6753  0030                     GPS_HasAcknowledged@ackByteID:	
  6754                           ; 1 bytes @ 0x10
  6755                           
  6756  0030                     ReadEnvSensor@len:	
  6757                           ; 1 bytes @ 0x10
  6758                           
  6759  0030                     UIntToString@i:	
  6760                           ; 2 bytes @ 0x10
  6761                           
  6762  0030                     _UIntToHexString$1811:	
  6763                           ; 2 bytes @ 0x10
  6764                           
  6765                           
  6766                           ; 4 bytes @ 0x10
  6767  0030                     	ds	1
  6768  0031                     WriteEnvSensor@rslt:	
  6769  0031                     GPS_HasAcknowledged@i:	
  6770                           ; 1 bytes @ 0x11
  6771                           
  6772  0031                     InsertString@counti:	
  6773                           ; 1 bytes @ 0x11
  6774                           
  6775                           
  6776                           ; 2 bytes @ 0x11
  6777  0031                     	ds	1
  6778  0032                     ??_compensate_temperature:	
  6779  0032                     ??_compensate_pressure:	
  6780                           ; 1 bytes @ 0x12
  6781                           
  6782  0032                     ??_compensate_humidity:	
  6783                           ; 1 bytes @ 0x12
  6784                           
  6785  0032                     ??_ReadEnvSensor:	
  6786                           ; 1 bytes @ 0x12
  6787                           
  6788  0032                     WriteEnvSensor@i:	
  6789                           ; 1 bytes @ 0x12
  6790                           
  6791                           
  6792                           ; 2 bytes @ 0x12
  6793  0032                     	ds	1
  6794  0033                     InsertString@i:	
  6795                           
  6796                           ; 2 bytes @ 0x13
  6797  0033                     	ds	1
  6798  0034                     ?_bme280_set_regs:	
  6799  0034                     bme280_set_regs@reg_data:	
  6800                           ; 1 bytes @ 0x14
  6801                           
  6802  0034                     ReadEnvSensor@rslt:	
  6803                           ; 1 bytes @ 0x14
  6804                           
  6805  0034                     UIntToHexString@remainder:	
  6806                           ; 1 bytes @ 0x14
  6807                           
  6808                           
  6809                           ; 4 bytes @ 0x14
  6810  0034                     	ds	1
  6811  0035                     ?_InsertTxData:	
  6812  0035                     bme280_set_regs@len:	
  6813                           ; 2 bytes @ 0x15
  6814                           
  6815  0035                     ReadEnvSensor@i:	
  6816                           ; 1 bytes @ 0x15
  6817                           
  6818  0035                     InsertTxData@index:	
  6819                           ; 2 bytes @ 0x15
  6820                           
  6821                           
  6822                           ; 2 bytes @ 0x15
  6823  0035                     	ds	1
  6824  0036                     bme280_set_regs@dev:	
  6825                           
  6826                           ; 1 bytes @ 0x16
  6827  0036                     	ds	1
  6828  0037                     ?_bme280_get_regs:	
  6829  0037                     ??_bme280_set_regs:	
  6830                           ; 1 bytes @ 0x17
  6831                           
  6832  0037                     bme280_get_regs@reg_data:	
  6833                           ; 1 bytes @ 0x17
  6834                           
  6835  0037                     InsertTxData@field:	
  6836                           ; 1 bytes @ 0x17
  6837                           
  6838                           
  6839                           ; 2 bytes @ 0x17
  6840  0037                     	ds	1
  6841  0038                     bme280_get_regs@len:	
  6842  0038                     UIntToHexString@i:	
  6843                           ; 2 bytes @ 0x18
  6844                           
  6845                           
  6846                           ; 4 bytes @ 0x18
  6847  0038                     	ds	1
  6848  0039                     ??_PollGPS:	
  6849                           
  6850                           ; 1 bytes @ 0x19
  6851  0039                     	ds	1
  6852  003A                     bme280_get_regs@dev:	
  6853  003A                     _compensate_humidity$2719:	
  6854                           ; 1 bytes @ 0x1A
  6855                           
  6856  003A                     bme280_set_regs@temp_buff:	
  6857                           ; 4 bytes @ 0x1A
  6858                           
  6859                           
  6860                           ; 20 bytes @ 0x1A
  6861  003A                     	ds	1
  6862  003B                     ??_bme280_get_regs:	
  6863                           
  6864                           ; 1 bytes @ 0x1B
  6865  003B                     	ds	1
  6866  003C                     _compensate_temperature$2715:	
  6867                           
  6868                           ; 4 bytes @ 0x1C
  6869  003C                     	ds	1
  6870  003D                     PollGPS@startTime:	
  6871                           
  6872                           ; 4 bytes @ 0x1D
  6873  003D                     	ds	1
  6874  003E                     bme280_get_regs@reg_addr:	
  6875  003E                     compensate_humidity@uncomp_data:	
  6876                           ; 1 bytes @ 0x1E
  6877                           
  6878                           
  6879                           ; 1 bytes @ 0x1E
  6880  003E                     	ds	1
  6881  003F                     bme280_get_regs@rslt:	
  6882                           
  6883                           ; 1 bytes @ 0x1F
  6884  003F                     	ds	1
  6885  0040                     ??_get_calib_data:	
  6886  0040                     ?_bme280_get_sensor_mode:	
  6887                           ; 1 bytes @ 0x20
  6888                           
  6889  0040                     bme280_get_sensor_mode@dev:	
  6890                           ; 1 bytes @ 0x20
  6891                           
  6892                           
  6893                           ; 1 bytes @ 0x20
  6894  0040                     	ds	1
  6895  0041                     ??_bme280_get_sensor_mode:	
  6896  0041                     PollGPS@counti:	
  6897                           ; 1 bytes @ 0x21
  6898                           
  6899                           
  6900                           ; 2 bytes @ 0x21
  6901  0041                     	ds	2
  6902  0043                     PollGPS@success:	
  6903  0043                     compensate_humidity@humidity:	
  6904                           ; 1 bytes @ 0x23
  6905                           
  6906  0043                     get_calib_data@calib_data:	
  6907                           ; 4 bytes @ 0x23
  6908                           
  6909                           
  6910                           ; 26 bytes @ 0x23
  6911  0043                     	ds	1
  6912  0044                     bme280_get_sensor_mode@rslt:	
  6913  0044                     _PollGPS$2720:	
  6914                           ; 1 bytes @ 0x24
  6915                           
  6916  0044                     compensate_temperature@temperature_max:	
  6917                           ; 1 bytes @ 0x24
  6918                           
  6919                           
  6920                           ; 4 bytes @ 0x24
  6921  0044                     	ds	1
  6922  0045                     bme280_get_sensor_mode@sensor_mode:	
  6923  0045                     PollGPS@eusart_complete:	
  6924                           ; 1 bytes @ 0x25
  6925                           
  6926                           
  6927                           ; 1 bytes @ 0x25
  6928  0045                     	ds	1
  6929  0046                     PollGPS@byte:	
  6930                           
  6931                           ; 1 bytes @ 0x26
  6932  0046                     	ds	1
  6933  0047                     PollGPS@i:	
  6934  0047                     compensate_humidity@var1:	
  6935                           ; 2 bytes @ 0x27
  6936                           
  6937                           
  6938                           ; 4 bytes @ 0x27
  6939  0047                     	ds	1
  6940  0048                     compensate_temperature@var1:	
  6941                           
  6942                           ; 4 bytes @ 0x28
  6943  0048                     	ds	1
  6944  0049                     PollGPS@index:	
  6945                           
  6946                           ; 2 bytes @ 0x29
  6947  0049                     	ds	2
  6948  004B                     compensate_humidity@var2:	
  6949                           
  6950                           ; 4 bytes @ 0x2B
  6951  004B                     	ds	1
  6952  004C                     compensate_temperature@uncomp_data:	
  6953                           
  6954                           ; 1 bytes @ 0x2C
  6955  004C                     	ds	1
  6956  004D                     compensate_temperature@var2:	
  6957                           
  6958                           ; 4 bytes @ 0x2D
  6959  004D                     	ds	1
  6960  004E                     bme280_set_regs@temp_len:	
  6961                           
  6962                           ; 2 bytes @ 0x2E
  6963  004E                     	ds	1
  6964  004F                     compensate_humidity@var4:	
  6965                           
  6966                           ; 4 bytes @ 0x2F
  6967  004F                     	ds	1
  6968  0050                     bme280_set_regs@reg_addr_cnt:	
  6969                           
  6970                           ; 1 bytes @ 0x30
  6971  0050                     	ds	1
  6972  0051                     bme280_set_regs@rslt:	
  6973  0051                     compensate_temperature@temperature:	
  6974                           ; 1 bytes @ 0x31
  6975                           
  6976                           
  6977                           ; 4 bytes @ 0x31
  6978  0051                     	ds	1
  6979  0052                     bme280_set_regs@reg_addr:	
  6980                           
  6981                           ; 1 bytes @ 0x32
  6982  0052                     	ds	1
  6983  0053                     ??_bme280_soft_reset:	
  6984  0053                     ?_set_filter_standby_settings:	
  6985                           ; 1 bytes @ 0x33
  6986                           
  6987  0053                     ?_write_power_mode:	
  6988                           ; 1 bytes @ 0x33
  6989                           
  6990  0053                     ?_set_osr_humidity_settings:	
  6991                           ; 1 bytes @ 0x33
  6992                           
  6993  0053                     ?_set_osr_press_temp_settings:	
  6994                           ; 1 bytes @ 0x33
  6995                           
  6996  0053                     write_power_mode@dev:	
  6997                           ; 1 bytes @ 0x33
  6998                           
  6999  0053                     set_osr_humidity_settings@settings:	
  7000                           ; 1 bytes @ 0x33
  7001                           
  7002  0053                     set_osr_press_temp_settings@settings:	
  7003                           ; 2 bytes @ 0x33
  7004                           
  7005  0053                     set_filter_standby_settings@settings:	
  7006                           ; 2 bytes @ 0x33
  7007                           
  7008  0053                     compensate_humidity@var5:	
  7009                           ; 2 bytes @ 0x33
  7010                           
  7011                           
  7012                           ; 4 bytes @ 0x33
  7013  0053                     	ds	1
  7014  0054                     ??_write_power_mode:	
  7015                           
  7016                           ; 1 bytes @ 0x34
  7017  0054                     	ds	1
  7018  0055                     set_osr_humidity_settings@dev:	
  7019  0055                     set_osr_press_temp_settings@dev:	
  7020                           ; 1 bytes @ 0x35
  7021                           
  7022  0055                     set_filter_standby_settings@dev:	
  7023                           ; 1 bytes @ 0x35
  7024                           
  7025                           
  7026                           ; 1 bytes @ 0x35
  7027  0055                     	ds	1
  7028  0056                     ??_set_filter_standby_settings:	
  7029  0056                     ??_set_osr_humidity_settings:	
  7030                           ; 1 bytes @ 0x36
  7031                           
  7032  0056                     ??_set_osr_press_temp_settings:	
  7033                           ; 1 bytes @ 0x36
  7034                           
  7035  0056                     bme280_soft_reset@soft_rst_cmd:	
  7036                           ; 1 bytes @ 0x36
  7037                           
  7038                           
  7039                           ; 1 bytes @ 0x36
  7040  0056                     	ds	1
  7041  0057                     bme280_soft_reset@rslt:	
  7042  0057                     write_power_mode@sensor_mode:	
  7043                           ; 1 bytes @ 0x37
  7044                           
  7045  0057                     compensate_humidity@var3:	
  7046                           ; 1 bytes @ 0x37
  7047                           
  7048                           
  7049                           ; 4 bytes @ 0x37
  7050  0057                     	ds	1
  7051  0058                     bme280_soft_reset@reg_addr:	
  7052  0058                     write_power_mode@rslt:	
  7053                           ; 1 bytes @ 0x38
  7054                           
  7055                           
  7056                           ; 1 bytes @ 0x38
  7057  0058                     	ds	1
  7058  0059                     bme280_soft_reset@dev:	
  7059  0059                     set_osr_humidity_settings@ctrl_hum:	
  7060                           ; 1 bytes @ 0x39
  7061                           
  7062  0059                     set_osr_press_temp_settings@desired_settings:	
  7063                           ; 1 bytes @ 0x39
  7064                           
  7065  0059                     set_filter_standby_settings@desired_settings:	
  7066                           ; 1 bytes @ 0x39
  7067                           
  7068  0059                     write_power_mode@reg_addr:	
  7069                           ; 1 bytes @ 0x39
  7070                           
  7071                           
  7072                           ; 1 bytes @ 0x39
  7073  0059                     	ds	1
  7074  005A                     set_osr_humidity_settings@ctrl_meas:	
  7075  005A                     set_osr_press_temp_settings@rslt:	
  7076                           ; 1 bytes @ 0x3A
  7077                           
  7078  005A                     set_filter_standby_settings@rslt:	
  7079                           ; 1 bytes @ 0x3A
  7080                           
  7081  005A                     write_power_mode@sensor_mode_reg_val:	
  7082                           ; 1 bytes @ 0x3A
  7083                           
  7084                           
  7085                           ; 1 bytes @ 0x3A
  7086  005A                     	ds	1
  7087  005B                     ?_bme280_compensate_data:	
  7088  005B                     bme280_compensate_data@uncomp_data:	
  7089                           ; 1 bytes @ 0x3B
  7090                           
  7091  005B                     set_osr_humidity_settings@rslt:	
  7092                           ; 1 bytes @ 0x3B
  7093                           
  7094  005B                     set_osr_press_temp_settings@reg_addr:	
  7095                           ; 1 bytes @ 0x3B
  7096                           
  7097  005B                     set_filter_standby_settings@reg_addr:	
  7098                           ; 1 bytes @ 0x3B
  7099                           
  7100                           
  7101                           ; 1 bytes @ 0x3B
  7102  005B                     	ds	1
  7103  005C                     bme280_compensate_data@comp_data:	
  7104  005C                     set_osr_humidity_settings@reg_addr:	
  7105                           ; 1 bytes @ 0x3C
  7106                           
  7107  005C                     set_osr_press_temp_settings@reg_data:	
  7108                           ; 1 bytes @ 0x3C
  7109                           
  7110  005C                     set_filter_standby_settings@reg_data:	
  7111                           ; 1 bytes @ 0x3C
  7112                           
  7113                           
  7114                           ; 1 bytes @ 0x3C
  7115  005C                     	ds	1
  7116  005D                     ?_set_osr_settings:	
  7117  005D                     bme280_compensate_data@calib_data:	
  7118                           ; 1 bytes @ 0x3D
  7119                           
  7120  005D                     set_osr_settings@settings:	
  7121                           ; 1 bytes @ 0x3D
  7122                           
  7123                           
  7124                           ; 2 bytes @ 0x3D
  7125  005D                     	ds	1
  7126  005E                     ??_bme280_compensate_data:	
  7127  005E                     get_calib_data@rslt:	
  7128                           ; 1 bytes @ 0x3E
  7129                           
  7130                           
  7131                           ; 1 bytes @ 0x3E
  7132  005E                     	ds	1
  7133  005F                     bme280_compensate_data@rslt:	
  7134  005F                     set_osr_settings@dev:	
  7135                           ; 1 bytes @ 0x3F
  7136                           
  7137  005F                     get_calib_data@dev:	
  7138                           ; 1 bytes @ 0x3F
  7139                           
  7140                           
  7141                           ; 1 bytes @ 0x3F
  7142  005F                     	ds	1
  7143  0060                     ??_set_osr_settings:	
  7144  0060                     ??_bme280_init:	
  7145                           ; 1 bytes @ 0x40
  7146                           
  7147  0060                     bme280_compensate_data@sensor_comp:	
  7148                           ; 1 bytes @ 0x40
  7149                           
  7150                           
  7151                           ; 1 bytes @ 0x40
  7152  0060                     	ds	1
  7153  0061                     ?_bme280_get_sensor_data:	
  7154  0061                     bme280_get_sensor_data@comp_data:	
  7155                           ; 1 bytes @ 0x41
  7156                           
  7157                           
  7158                           ; 1 bytes @ 0x41
  7159  0061                     	ds	1
  7160  0062                     bme280_get_sensor_data@dev:	
  7161  0062                     set_osr_settings@rslt:	
  7162                           ; 1 bytes @ 0x42
  7163                           
  7164                           
  7165                           ; 1 bytes @ 0x42
  7166  0062                     	ds	1
  7167  0063                     ??_bme280_get_sensor_data:	
  7168  0063                     bme280_init@try_count:	
  7169                           ; 1 bytes @ 0x43
  7170                           
  7171  0063                     set_osr_settings@desired_settings:	
  7172                           ; 1 bytes @ 0x43
  7173                           
  7174                           
  7175                           ; 1 bytes @ 0x43
  7176  0063                     	ds	1
  7177  0064                     ?_reload_device_settings:	
  7178  0064                     bme280_init@chip_id:	
  7179                           ; 1 bytes @ 0x44
  7180                           
  7181  0064                     reload_device_settings@dev:	
  7182                           ; 1 bytes @ 0x44
  7183                           
  7184                           
  7185                           ; 1 bytes @ 0x44
  7186  0064                     	ds	1
  7187  0065                     ??_reload_device_settings:	
  7188  0065                     bme280_init@rslt:	
  7189                           ; 1 bytes @ 0x45
  7190                           
  7191                           
  7192                           ; 1 bytes @ 0x45
  7193  0065                     	ds	1
  7194  0066                     bme280_init@dev:	
  7195                           
  7196                           ; 1 bytes @ 0x46
  7197  0066                     	ds	1
  7198  0067                     reload_device_settings@settings:	
  7199                           
  7200                           ; 1 bytes @ 0x47
  7201  0067                     	ds	1
  7202  0068                     reload_device_settings@rslt:	
  7203                           
  7204                           ; 1 bytes @ 0x48
  7205  0068                     	ds	1
  7206  0069                     ??_put_device_to_sleep:	
  7207                           
  7208                           ; 1 bytes @ 0x49
  7209  0069                     	ds	3
  7210  006C                     ?_bme280_set_sensor_settings:	
  7211  006C                     ?_bme280_set_sensor_mode:	
  7212                           ; 1 bytes @ 0x4C
  7213                           
  7214  006C                     bme280_set_sensor_settings@dev:	
  7215                           ; 1 bytes @ 0x4C
  7216                           
  7217  006C                     bme280_set_sensor_mode@dev:	
  7218                           ; 1 bytes @ 0x4C
  7219                           
  7220                           
  7221                           ; 1 bytes @ 0x4C
  7222  006C                     	ds	1
  7223  006D                     ??_bme280_set_sensor_settings:	
  7224  006D                     ??_bme280_set_sensor_mode:	
  7225                           ; 1 bytes @ 0x4D
  7226                           
  7227                           
  7228                           ; 1 bytes @ 0x4D
  7229  006D                     	ds	2
  7230                           
  7231                           	psect	maintext
  7232  05AC                     __pmaintext:	
  7233 ;;
  7234 ;;Main: autosize = 0, tempsize = 5, incstack = 0, save=0
  7235 ;;
  7236 ;; *************** function _main *****************
  7237 ;; Defined at:
  7238 ;;		line 602 in file "main.c"
  7239 ;; Parameters:    Size  Location     Type
  7240 ;;		None
  7241 ;; Auto vars:     Size  Location     Type
  7242 ;;  sensor_data    12   18[BANK2 ] struct bme280_data
  7243 ;;  end             2   16[BANK2 ] int 
  7244 ;;  convertedNum   16    0[BANK2 ] unsigned char [16]
  7245 ;;  index           2   30[BANK2 ] int 
  7246 ;; Return value:  Size  Location     Type
  7247 ;;                  1    wreg      void 
  7248 ;; Registers used:
  7249 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7250 ;; Tracked objects:
  7251 ;;		On entry : B3F/0
  7252 ;;		On exit  : 0/0
  7253 ;;		Unchanged: 0/0
  7254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7256 ;;      Locals:         0       0       0      32       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7257 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7258 ;;      Totals:         0       0       5      32       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7259 ;;Total ram usage:       37 bytes
  7260 ;; Hardware stack levels required when called:   17
  7261 ;; This function calls:
  7262 ;;		_BME280_Init
  7263 ;;		_ClearString
  7264 ;;		_ClearTxData
  7265 ;;		_DebugAlert
  7266 ;;		_InitTiming
  7267 ;;		_Insert
  7268 ;;		_InsertString
  7269 ;;		_IntToString
  7270 ;;		_PollGPS
  7271 ;;		_SYSTEM_Initialize
  7272 ;;		_SetupGPS
  7273 ;;		_Sleep
  7274 ;;		_TransmitString
  7275 ;;		_UIntToHexString
  7276 ;;		_UIntToString
  7277 ;;		_bme280_get_sensor_data
  7278 ;;		_crc16
  7279 ;;		_strlen
  7280 ;; This function is called by:
  7281 ;;		Startup code after reset
  7282 ;; This function uses a non-reentrant model
  7283 ;;
  7284                           
  7285                           
  7286                           ;psect for function _main
  7287  05AC                     _main:	
  7288                           
  7289                           ;main.c: 605:     SYSTEM_Initialize();
  7290                           
  7291                           ;incstack = 0
  7292 ;; hardware stack exceeded
  7293                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7294  05AC  31A6  2643  3185   	fcall	_SYSTEM_Initialize
  7295                           
  7296                           ;main.c: 606:     InitTiming();
  7297  05AF  31A5  25CC  3185   	fcall	_InitTiming
  7298                           
  7299                           ;main.c: 609:     BME280_Init();
  7300  05B2  3192  2274  3185   	fcall	_BME280_Init
  7301                           
  7302                           ;main.c: 612:     SetupGPS();
  7303  05B5  319D  257A  3185   	fcall	_SetupGPS
  7304  05B8                     l5462:	
  7305                           
  7306                           ;main.c: 616:     {;main.c: 617:         int index = 0;
  7307  05B8  0142               	movlb	2	; select bank2
  7308  05B9  01EE               	clrf	main@index^(0+256)
  7309  05BA  01EF               	clrf	(main@index+1)^(0+256)
  7310                           
  7311                           ;main.c: 618:         char convertedNumber[16] = {'\0'};
  7312  05BB  3050               	movlw	low main@convertedNumber
  7313  05BC  0086               	movwf	6
  7314  05BD  3001               	movlw	high main@convertedNumber
  7315  05BE  0087               	movwf	7
  7316  05BF  3010               	movlw	16
  7317  05C0  0141               	movlb	1	; select bank1
  7318  05C1  00E3               	movwf	??_main^(0+128)
  7319  05C2  3000               	movlw	0
  7320  05C3                     u5520:	
  7321  05C3  001E               	movwi fsr1++
  7322  05C4  0BE3               	decfsz	??_main^(0+128),f
  7323  05C5  2DC3               	goto	u5520
  7324                           
  7325                           ;main.c: 621:         ClearTxData();
  7326  05C6  31A7  2773  3185   	fcall	_ClearTxData
  7327                           
  7328                           ;main.c: 624:         index = InsertString(txdata, "Wisp-1", index, 140);
  7329  05C9  3064               	movlw	100
  7330  05CA  0140               	movlb	0	; select bank0
  7331  05CB  00A9               	movwf	InsertString@dest
  7332  05CC  3027               	movlw	39
  7333  05CD  00AA               	movwf	InsertString@dest+1
  7334  05CE  30AA               	movlw	low (STR_10| (0+32768))
  7335  05CF  00AB               	movwf	InsertString@src
  7336  05D0  30A8               	movlw	high (STR_10| (0+32768))
  7337  05D1  00AC               	movwf	InsertString@src+1
  7338  05D2  0142               	movlb	2	; select bank2
  7339  05D3  086F               	movf	(main@index+1)^(0+256),w
  7340  05D4  0140               	movlb	0	; select bank0
  7341  05D5  00AE               	movwf	InsertString@index+1
  7342  05D6  0142               	movlb	2	; select bank2
  7343  05D7  086E               	movf	main@index^(0+256),w
  7344  05D8  0140               	movlb	0	; select bank0
  7345  05D9  00AD               	movwf	InsertString@index
  7346  05DA  308C               	movlw	140
  7347  05DB  00AF               	movwf	InsertString@destLimit
  7348  05DC  3000               	movlw	0
  7349  05DD  00B0               	movwf	InsertString@destLimit+1
  7350  05DE  319F  2707  3185   	fcall	_InsertString
  7351  05E1  0140               	movlb	0	; select bank0
  7352  05E2  082A               	movf	?_InsertString+1,w
  7353  05E3  0142               	movlb	2	; select bank2
  7354  05E4  00EF               	movwf	(main@index+1)^(0+256)
  7355  05E5  0140               	movlb	0	; select bank0
  7356  05E6  0829               	movf	?_InsertString,w
  7357  05E7  0142               	movlb	2	; select bank2
  7358  05E8  00EE               	movwf	main@index^(0+256)
  7359                           
  7360                           ;main.c: 625:         index = Insert(txdata, ',', index, 140);
  7361  05E9  3064               	movlw	100
  7362  05EA  00F5               	movwf	Insert@dest
  7363  05EB  3027               	movlw	39
  7364  05EC  00F6               	movwf	Insert@dest+1
  7365  05ED  302C               	movlw	44
  7366  05EE  0141               	movlb	1	; select bank1
  7367  05EF  00E3               	movwf	??_main^(0+128)
  7368  05F0  0863               	movf	??_main^(0+128),w
  7369  05F1  00F7               	movwf	Insert@src
  7370  05F2  0142               	movlb	2	; select bank2
  7371  05F3  086F               	movf	(main@index+1)^(0+256),w
  7372  05F4  00F9               	movwf	Insert@index+1
  7373  05F5  086E               	movf	main@index^(0+256),w
  7374  05F6  00F8               	movwf	Insert@index
  7375  05F7  308C               	movlw	140
  7376  05F8  00FA               	movwf	Insert@destLimit
  7377  05F9  3000               	movlw	0
  7378  05FA  00FB               	movwf	Insert@destLimit+1
  7379  05FB  3192  22E1  3185   	fcall	_Insert
  7380  05FE  0876               	movf	?_Insert+1,w
  7381  05FF  0142               	movlb	2	; select bank2
  7382  0600  00EF               	movwf	(main@index+1)^(0+256)
  7383  0601  0875               	movf	?_Insert,w
  7384  0602  00EE               	movwf	main@index^(0+256)
  7385                           
  7386                           ;main.c: 626:         ClearString(convertedNumber);
  7387  0603  3050               	movlw	(low (main@convertedNumber| (0+256)))& (0+255)
  7388  0604  3198  2022  3185   	fcall	_ClearString
  7389                           
  7390                           ;main.c: 627:         IntToString(id, convertedNumber);
  7391  0607  0142               	movlb	2	; select bank2
  7392  0608  0849               	movf	(_id+1)^(0+256),w
  7393  0609  00FC               	movwf	IntToString@n+1
  7394  060A  0848               	movf	_id^(0+256),w
  7395  060B  00FB               	movwf	IntToString@n
  7396  060C  3050               	movlw	(low (main@convertedNumber| (0+256)))& (0+255)
  7397  060D  0141               	movlb	1	; select bank1
  7398  060E  00E3               	movwf	??_main^(0+128)
  7399  060F  0863               	movf	??_main^(0+128),w
  7400  0610  00FD               	movwf	IntToString@dest
  7401  0611  3191  21A0  3185   	fcall	_IntToString
  7402                           
  7403                           ;main.c: 628:         index = InsertString(txdata, convertedNumber, index, 140);
  7404  0614  3064               	movlw	100
  7405  0615  0140               	movlb	0	; select bank0
  7406  0616  00A9               	movwf	InsertString@dest
  7407  0617  3027               	movlw	39
  7408  0618  00AA               	movwf	InsertString@dest+1
  7409  0619  3050               	movlw	low main@convertedNumber
  7410  061A  00AB               	movwf	InsertString@src
  7411  061B  3001               	movlw	high main@convertedNumber
  7412  061C  00AC               	movwf	InsertString@src+1
  7413  061D  0142               	movlb	2	; select bank2
  7414  061E  086F               	movf	(main@index+1)^(0+256),w
  7415  061F  0140               	movlb	0	; select bank0
  7416  0620  00AE               	movwf	InsertString@index+1
  7417  0621  0142               	movlb	2	; select bank2
  7418  0622  086E               	movf	main@index^(0+256),w
  7419  0623  0140               	movlb	0	; select bank0
  7420  0624  00AD               	movwf	InsertString@index
  7421  0625  308C               	movlw	140
  7422  0626  00AF               	movwf	InsertString@destLimit
  7423  0627  3000               	movlw	0
  7424  0628  00B0               	movwf	InsertString@destLimit+1
  7425  0629  319F  2707  3185   	fcall	_InsertString
  7426  062C  0140               	movlb	0	; select bank0
  7427  062D  082A               	movf	?_InsertString+1,w
  7428  062E  0142               	movlb	2	; select bank2
  7429  062F  00EF               	movwf	(main@index+1)^(0+256)
  7430  0630  0140               	movlb	0	; select bank0
  7431  0631  0829               	movf	?_InsertString,w
  7432  0632  0142               	movlb	2	; select bank2
  7433  0633  00EE               	movwf	main@index^(0+256)
  7434                           
  7435                           ;main.c: 629:         index = Insert(txdata, ',', index, 140);
  7436  0634  3064               	movlw	100
  7437  0635  00F5               	movwf	Insert@dest
  7438  0636  3027               	movlw	39
  7439  0637  00F6               	movwf	Insert@dest+1
  7440  0638  302C               	movlw	44
  7441  0639  0141               	movlb	1	; select bank1
  7442  063A  00E3               	movwf	??_main^(0+128)
  7443  063B  0863               	movf	??_main^(0+128),w
  7444  063C  00F7               	movwf	Insert@src
  7445  063D  0142               	movlb	2	; select bank2
  7446  063E  086F               	movf	(main@index+1)^(0+256),w
  7447  063F  00F9               	movwf	Insert@index+1
  7448  0640  086E               	movf	main@index^(0+256),w
  7449  0641  00F8               	movwf	Insert@index
  7450  0642  308C               	movlw	140
  7451  0643  00FA               	movwf	Insert@destLimit
  7452  0644  3000               	movlw	0
  7453  0645  00FB               	movwf	Insert@destLimit+1
  7454  0646  3192  22E1  3185   	fcall	_Insert
  7455  0649  0876               	movf	?_Insert+1,w
  7456  064A  0142               	movlb	2	; select bank2
  7457  064B  00EF               	movwf	(main@index+1)^(0+256)
  7458  064C  0875               	movf	?_Insert,w
  7459  064D  00EE               	movwf	main@index^(0+256)
  7460                           
  7461                           ;main.c: 633:         if (PollGPS())
  7462  064E  318B  2305  3185   	fcall	_PollGPS
  7463  0651  3A00               	xorlw	0
  7464  0652  1903               	skipnz
  7465  0653  2FE2               	goto	l5526
  7466                           
  7467                           ;main.c: 637:         {;main.c: 638:             struct bme280_data sensor_data;;main.c:
      +                           639:             bme280_get_sensor_data(0x07, &sensor_data, &EnvSensor);
  7468  0654  3062               	movlw	(low (main@sensor_data| (0+256)))& (0+255)
  7469  0655  0141               	movlb	1	; select bank1
  7470  0656  00E3               	movwf	??_main^(0+128)
  7471  0657  0863               	movf	??_main^(0+128),w
  7472  0658  0140               	movlb	0	; select bank0
  7473  0659  00E1               	movwf	bme280_get_sensor_data@comp_data
  7474  065A  30A0               	movlw	(low (_EnvSensor| (0+256)))& (0+255)
  7475  065B  0141               	movlb	1	; select bank1
  7476  065C  00E4               	movwf	(??_main+1)^(0+128)
  7477  065D  0864               	movf	(??_main+1)^(0+128),w
  7478  065E  0140               	movlb	0	; select bank0
  7479  065F  00E2               	movwf	bme280_get_sensor_data@dev
  7480  0660  3007               	movlw	7
  7481  0661  3190  207A  3185   	fcall	_bme280_get_sensor_data
  7482                           
  7483                           ;main.c: 642:             index = strlen(txdata);
  7484  0664  3064               	movlw	100
  7485  0665  00F0               	movwf	strlen@s
  7486  0666  3027               	movlw	39
  7487  0667  00F1               	movwf	strlen@s+1
  7488  0668  31A6  26A0  3185   	fcall	_strlen
  7489  066B  0871               	movf	?_strlen+1,w
  7490  066C  0142               	movlb	2	; select bank2
  7491  066D  00EF               	movwf	(main@index+1)^(0+256)
  7492  066E  0870               	movf	?_strlen,w
  7493  066F  00EE               	movwf	main@index^(0+256)
  7494                           
  7495                           ;main.c: 645:             IntToString(sensor_data.temperature, convertedNumber);
  7496  0670  0867               	movf	((main@sensor_data+1)^(0+256)+4),w
  7497  0671  00FC               	movwf	IntToString@n+1
  7498  0672  0866               	movf	(main@sensor_data^(0+256)+4),w
  7499  0673  00FB               	movwf	IntToString@n
  7500  0674  3050               	movlw	(low (main@convertedNumber| (0+256)))& (0+255)
  7501  0675  0141               	movlb	1	; select bank1
  7502  0676  00E3               	movwf	??_main^(0+128)
  7503  0677  0863               	movf	??_main^(0+128),w
  7504  0678  00FD               	movwf	IntToString@dest
  7505  0679  3191  21A0  3185   	fcall	_IntToString
  7506                           
  7507                           ;main.c: 646:             index = InsertString(txdata, convertedNumber, index, 140);
  7508  067C  3064               	movlw	100
  7509  067D  0140               	movlb	0	; select bank0
  7510  067E  00A9               	movwf	InsertString@dest
  7511  067F  3027               	movlw	39
  7512  0680  00AA               	movwf	InsertString@dest+1
  7513  0681  3050               	movlw	low main@convertedNumber
  7514  0682  00AB               	movwf	InsertString@src
  7515  0683  3001               	movlw	high main@convertedNumber
  7516  0684  00AC               	movwf	InsertString@src+1
  7517  0685  0142               	movlb	2	; select bank2
  7518  0686  086F               	movf	(main@index+1)^(0+256),w
  7519  0687  0140               	movlb	0	; select bank0
  7520  0688  00AE               	movwf	InsertString@index+1
  7521  0689  0142               	movlb	2	; select bank2
  7522  068A  086E               	movf	main@index^(0+256),w
  7523  068B  0140               	movlb	0	; select bank0
  7524  068C  00AD               	movwf	InsertString@index
  7525  068D  308C               	movlw	140
  7526  068E  00AF               	movwf	InsertString@destLimit
  7527  068F  3000               	movlw	0
  7528  0690  00B0               	movwf	InsertString@destLimit+1
  7529  0691  319F  2707  3185   	fcall	_InsertString
  7530  0694  0140               	movlb	0	; select bank0
  7531  0695  082A               	movf	?_InsertString+1,w
  7532  0696  0142               	movlb	2	; select bank2
  7533  0697  00EF               	movwf	(main@index+1)^(0+256)
  7534  0698  0140               	movlb	0	; select bank0
  7535  0699  0829               	movf	?_InsertString,w
  7536  069A  0142               	movlb	2	; select bank2
  7537  069B  00EE               	movwf	main@index^(0+256)
  7538                           
  7539                           ;main.c: 647:             index = Insert(txdata, ',', index, 140);
  7540  069C  3064               	movlw	100
  7541  069D  00F5               	movwf	Insert@dest
  7542  069E  3027               	movlw	39
  7543  069F  00F6               	movwf	Insert@dest+1
  7544  06A0  302C               	movlw	44
  7545  06A1  0141               	movlb	1	; select bank1
  7546  06A2  00E3               	movwf	??_main^(0+128)
  7547  06A3  0863               	movf	??_main^(0+128),w
  7548  06A4  00F7               	movwf	Insert@src
  7549  06A5  0142               	movlb	2	; select bank2
  7550  06A6  086F               	movf	(main@index+1)^(0+256),w
  7551  06A7  00F9               	movwf	Insert@index+1
  7552  06A8  086E               	movf	main@index^(0+256),w
  7553  06A9  00F8               	movwf	Insert@index
  7554  06AA  308C               	movlw	140
  7555  06AB  00FA               	movwf	Insert@destLimit
  7556  06AC  3000               	movlw	0
  7557  06AD  00FB               	movwf	Insert@destLimit+1
  7558  06AE  3192  22E1  3185   	fcall	_Insert
  7559  06B1  0876               	movf	?_Insert+1,w
  7560  06B2  0142               	movlb	2	; select bank2
  7561  06B3  00EF               	movwf	(main@index+1)^(0+256)
  7562  06B4  0875               	movf	?_Insert,w
  7563  06B5  00EE               	movwf	main@index^(0+256)
  7564                           
  7565                           ;main.c: 648:             ClearString(convertedNumber);
  7566  06B6  3050               	movlw	(low (main@convertedNumber| (0+256)))& (0+255)
  7567  06B7  3198  2022  3185   	fcall	_ClearString
  7568                           
  7569                           ;main.c: 650:             UIntToString(sensor_data.pressure, convertedNumber);
  7570  06BA  0142               	movlb	2	; select bank2
  7571  06BB  0865               	movf	(main@sensor_data+3)^(0+256),w
  7572  06BC  0140               	movlb	0	; select bank0
  7573  06BD  00AC               	movwf	UIntToString@n+3
  7574  06BE  0142               	movlb	2	; select bank2
  7575  06BF  0864               	movf	(main@sensor_data+2)^(0+256),w
  7576  06C0  0140               	movlb	0	; select bank0
  7577  06C1  00AB               	movwf	UIntToString@n+2
  7578  06C2  0142               	movlb	2	; select bank2
  7579  06C3  0863               	movf	(main@sensor_data+1)^(0+256),w
  7580  06C4  0140               	movlb	0	; select bank0
  7581  06C5  00AA               	movwf	UIntToString@n+1
  7582  06C6  0142               	movlb	2	; select bank2
  7583  06C7  0862               	movf	main@sensor_data^(0+256),w
  7584  06C8  0140               	movlb	0	; select bank0
  7585  06C9  00A9               	movwf	UIntToString@n
  7586  06CA  3050               	movlw	(low (main@convertedNumber| (0+256)))& (0+255)
  7587  06CB  0141               	movlb	1	; select bank1
  7588  06CC  00E3               	movwf	??_main^(0+128)
  7589  06CD  0863               	movf	??_main^(0+128),w
  7590  06CE  0140               	movlb	0	; select bank0
  7591  06CF  00AD               	movwf	UIntToString@dest
  7592  06D0  319F  27AB  3185   	fcall	_UIntToString
  7593                           
  7594                           ;main.c: 651:             index = InsertString(txdata, convertedNumber, index, 140);
  7595  06D3  3064               	movlw	100
  7596  06D4  0140               	movlb	0	; select bank0
  7597  06D5  00A9               	movwf	InsertString@dest
  7598  06D6  3027               	movlw	39
  7599  06D7  00AA               	movwf	InsertString@dest+1
  7600  06D8  3050               	movlw	low main@convertedNumber
  7601  06D9  00AB               	movwf	InsertString@src
  7602  06DA  3001               	movlw	high main@convertedNumber
  7603  06DB  00AC               	movwf	InsertString@src+1
  7604  06DC  0142               	movlb	2	; select bank2
  7605  06DD  086F               	movf	(main@index+1)^(0+256),w
  7606  06DE  0140               	movlb	0	; select bank0
  7607  06DF  00AE               	movwf	InsertString@index+1
  7608  06E0  0142               	movlb	2	; select bank2
  7609  06E1  086E               	movf	main@index^(0+256),w
  7610  06E2  0140               	movlb	0	; select bank0
  7611  06E3  00AD               	movwf	InsertString@index
  7612  06E4  308C               	movlw	140
  7613  06E5  00AF               	movwf	InsertString@destLimit
  7614  06E6  3000               	movlw	0
  7615  06E7  00B0               	movwf	InsertString@destLimit+1
  7616  06E8  319F  2707  3185   	fcall	_InsertString
  7617  06EB  0140               	movlb	0	; select bank0
  7618  06EC  082A               	movf	?_InsertString+1,w
  7619  06ED  0142               	movlb	2	; select bank2
  7620  06EE  00EF               	movwf	(main@index+1)^(0+256)
  7621  06EF  0140               	movlb	0	; select bank0
  7622  06F0  0829               	movf	?_InsertString,w
  7623  06F1  0142               	movlb	2	; select bank2
  7624  06F2  00EE               	movwf	main@index^(0+256)
  7625                           
  7626                           ;main.c: 652:             index = Insert(txdata, ',', index, 140);
  7627  06F3  3064               	movlw	100
  7628  06F4  00F5               	movwf	Insert@dest
  7629  06F5  3027               	movlw	39
  7630  06F6  00F6               	movwf	Insert@dest+1
  7631  06F7  302C               	movlw	44
  7632  06F8  0141               	movlb	1	; select bank1
  7633  06F9  00E3               	movwf	??_main^(0+128)
  7634  06FA  0863               	movf	??_main^(0+128),w
  7635  06FB  00F7               	movwf	Insert@src
  7636  06FC  0142               	movlb	2	; select bank2
  7637  06FD  086F               	movf	(main@index+1)^(0+256),w
  7638  06FE  00F9               	movwf	Insert@index+1
  7639  06FF  086E               	movf	main@index^(0+256),w
  7640  0700  00F8               	movwf	Insert@index
  7641  0701  308C               	movlw	140
  7642  0702  00FA               	movwf	Insert@destLimit
  7643  0703  3000               	movlw	0
  7644  0704  00FB               	movwf	Insert@destLimit+1
  7645  0705  3192  22E1  3185   	fcall	_Insert
  7646  0708  0876               	movf	?_Insert+1,w
  7647  0709  0142               	movlb	2	; select bank2
  7648  070A  00EF               	movwf	(main@index+1)^(0+256)
  7649  070B  0875               	movf	?_Insert,w
  7650  070C  00EE               	movwf	main@index^(0+256)
  7651                           
  7652                           ;main.c: 653:             ClearString(convertedNumber);
  7653  070D  3050               	movlw	(low (main@convertedNumber| (0+256)))& (0+255)
  7654  070E  3198  2022  3185   	fcall	_ClearString
  7655                           
  7656                           ;main.c: 655:             UIntToString(sensor_data.humidity, convertedNumber);
  7657  0711  3008               	movlw	8
  7658  0712  3E62               	addlw	(low (main@sensor_data| (0+256)))& (0+255)
  7659  0713  0086               	movwf	6
  7660  0714  3001               	movlw	1	; select bank2/3
  7661  0715  0087               	movwf	7
  7662  0716  3F40               	moviw [0]fsr1
  7663  0717  0140               	movlb	0	; select bank0
  7664  0718  00A9               	movwf	UIntToString@n
  7665  0719  3F41               	moviw [1]fsr1
  7666  071A  00AA               	movwf	UIntToString@n+1
  7667  071B  3F42               	moviw [2]fsr1
  7668  071C  00AB               	movwf	UIntToString@n+2
  7669  071D  3F43               	moviw [3]fsr1
  7670  071E  00AC               	movwf	UIntToString@n+3
  7671  071F  3050               	movlw	(low (main@convertedNumber| (0+256)))& (0+255)
  7672  0720  0141               	movlb	1	; select bank1
  7673  0721  00E3               	movwf	??_main^(0+128)
  7674  0722  0863               	movf	??_main^(0+128),w
  7675  0723  0140               	movlb	0	; select bank0
  7676  0724  00AD               	movwf	UIntToString@dest
  7677  0725  319F  27AB  3185   	fcall	_UIntToString
  7678                           
  7679                           ;main.c: 656:             index = InsertString(txdata, convertedNumber, index, 140);
  7680  0728  3064               	movlw	100
  7681  0729  0140               	movlb	0	; select bank0
  7682  072A  00A9               	movwf	InsertString@dest
  7683  072B  3027               	movlw	39
  7684  072C  00AA               	movwf	InsertString@dest+1
  7685  072D  3050               	movlw	low main@convertedNumber
  7686  072E  00AB               	movwf	InsertString@src
  7687  072F  3001               	movlw	high main@convertedNumber
  7688  0730  00AC               	movwf	InsertString@src+1
  7689  0731  0142               	movlb	2	; select bank2
  7690  0732  086F               	movf	(main@index+1)^(0+256),w
  7691  0733  0140               	movlb	0	; select bank0
  7692  0734  00AE               	movwf	InsertString@index+1
  7693  0735  0142               	movlb	2	; select bank2
  7694  0736  086E               	movf	main@index^(0+256),w
  7695  0737  0140               	movlb	0	; select bank0
  7696  0738  00AD               	movwf	InsertString@index
  7697  0739  308C               	movlw	140
  7698  073A  00AF               	movwf	InsertString@destLimit
  7699  073B  3000               	movlw	0
  7700  073C  00B0               	movwf	InsertString@destLimit+1
  7701  073D  319F  2707  3185   	fcall	_InsertString
  7702  0740  0140               	movlb	0	; select bank0
  7703  0741  082A               	movf	?_InsertString+1,w
  7704  0742  0142               	movlb	2	; select bank2
  7705  0743  00EF               	movwf	(main@index+1)^(0+256)
  7706  0744  0140               	movlb	0	; select bank0
  7707  0745  0829               	movf	?_InsertString,w
  7708  0746  0142               	movlb	2	; select bank2
  7709  0747  00EE               	movwf	main@index^(0+256)
  7710                           
  7711                           ;main.c: 658:             int end = index;
  7712  0748  086F               	movf	(main@index+1)^(0+256),w
  7713  0749  00E1               	movwf	(main@end+1)^(0+256)
  7714  074A  086E               	movf	main@index^(0+256),w
  7715  074B  00E0               	movwf	main@end^(0+256)
  7716                           
  7717                           ;main.c: 661:             UIntToHexString(crc16(txdata), checksum);
  7718  074C  3064               	movlw	100
  7719  074D  0140               	movlb	0	; select bank0
  7720  074E  00A1               	movwf	crc16@data
  7721  074F  3027               	movlw	39
  7722  0750  00A2               	movwf	crc16@data+1
  7723  0751  31A7  27B5  3185   	fcall	_crc16
  7724  0754  0140               	movlb	0	; select bank0
  7725  0755  0821               	movf	?_crc16,w
  7726  0756  0141               	movlb	1	; select bank1
  7727  0757  00E3               	movwf	??_main^(0+128)
  7728  0758  0140               	movlb	0	; select bank0
  7729  0759  0822               	movf	?_crc16+1,w
  7730  075A  0141               	movlb	1	; select bank1
  7731  075B  00E4               	movwf	(??_main^(0+128)+1)
  7732  075C  01E5               	clrf	(??_main^(0+128)+2)
  7733  075D  01E6               	clrf	(??_main^(0+128)+3)
  7734  075E  0866               	movf	(??_main+3)^(0+128),w
  7735  075F  0140               	movlb	0	; select bank0
  7736  0760  00AC               	movwf	UIntToHexString@n+3
  7737  0761  0141               	movlb	1	; select bank1
  7738  0762  0865               	movf	(??_main+2)^(0+128),w
  7739  0763  0140               	movlb	0	; select bank0
  7740  0764  00AB               	movwf	UIntToHexString@n+2
  7741  0765  0141               	movlb	1	; select bank1
  7742  0766  0864               	movf	(??_main+1)^(0+128),w
  7743  0767  0140               	movlb	0	; select bank0
  7744  0768  00AA               	movwf	UIntToHexString@n+1
  7745  0769  0141               	movlb	1	; select bank1
  7746  076A  0863               	movf	??_main^(0+128),w
  7747  076B  0140               	movlb	0	; select bank0
  7748  076C  00A9               	movwf	UIntToHexString@n
  7749  076D  304A               	movlw	(low (_checksum| (0+256)))& (0+255)
  7750  076E  0141               	movlb	1	; select bank1
  7751  076F  00E7               	movwf	(??_main+4)^(0+128)
  7752  0770  0867               	movf	(??_main+4)^(0+128),w
  7753  0771  0140               	movlb	0	; select bank0
  7754  0772  00AD               	movwf	UIntToHexString@dest
  7755  0773  3193  23CC  3185   	fcall	_UIntToHexString
  7756                           
  7757                           ;main.c: 663:             index = Insert(txdata, '*', end, 140);
  7758  0776  3064               	movlw	100
  7759  0777  00F5               	movwf	Insert@dest
  7760  0778  3027               	movlw	39
  7761  0779  00F6               	movwf	Insert@dest+1
  7762  077A  302A               	movlw	42
  7763  077B  0141               	movlb	1	; select bank1
  7764  077C  00E3               	movwf	??_main^(0+128)
  7765  077D  0863               	movf	??_main^(0+128),w
  7766  077E  00F7               	movwf	Insert@src
  7767  077F  0142               	movlb	2	; select bank2
  7768  0780  0861               	movf	(main@end+1)^(0+256),w
  7769  0781  00F9               	movwf	Insert@index+1
  7770  0782  0860               	movf	main@end^(0+256),w
  7771  0783  00F8               	movwf	Insert@index
  7772  0784  308C               	movlw	140
  7773  0785  00FA               	movwf	Insert@destLimit
  7774  0786  3000               	movlw	0
  7775  0787  00FB               	movwf	Insert@destLimit+1
  7776  0788  3192  22E1  3185   	fcall	_Insert
  7777  078B  0876               	movf	?_Insert+1,w
  7778  078C  0142               	movlb	2	; select bank2
  7779  078D  00EF               	movwf	(main@index+1)^(0+256)
  7780  078E  0875               	movf	?_Insert,w
  7781  078F  00EE               	movwf	main@index^(0+256)
  7782                           
  7783                           ;main.c: 664:             index = InsertString(txdata, checksum, index, 140);
  7784  0790  3064               	movlw	100
  7785  0791  0140               	movlb	0	; select bank0
  7786  0792  00A9               	movwf	InsertString@dest
  7787  0793  3027               	movlw	39
  7788  0794  00AA               	movwf	InsertString@dest+1
  7789  0795  304A               	movlw	low _checksum
  7790  0796  00AB               	movwf	InsertString@src
  7791  0797  3001               	movlw	high _checksum
  7792  0798  00AC               	movwf	InsertString@src+1
  7793  0799  0142               	movlb	2	; select bank2
  7794  079A  086F               	movf	(main@index+1)^(0+256),w
  7795  079B  0140               	movlb	0	; select bank0
  7796  079C  00AE               	movwf	InsertString@index+1
  7797  079D  0142               	movlb	2	; select bank2
  7798  079E  086E               	movf	main@index^(0+256),w
  7799  079F  0140               	movlb	0	; select bank0
  7800  07A0  00AD               	movwf	InsertString@index
  7801  07A1  308C               	movlw	140
  7802  07A2  00AF               	movwf	InsertString@destLimit
  7803  07A3  3000               	movlw	0
  7804  07A4  00B0               	movwf	InsertString@destLimit+1
  7805  07A5  319F  2707  3185   	fcall	_InsertString
  7806  07A8  0140               	movlb	0	; select bank0
  7807  07A9  082A               	movf	?_InsertString+1,w
  7808  07AA  0142               	movlb	2	; select bank2
  7809  07AB  00EF               	movwf	(main@index+1)^(0+256)
  7810  07AC  0140               	movlb	0	; select bank0
  7811  07AD  0829               	movf	?_InsertString,w
  7812  07AE  0142               	movlb	2	; select bank2
  7813  07AF  00EE               	movwf	main@index^(0+256)
  7814                           
  7815                           ;main.c: 665:             index = Insert(txdata, '\n', index, 140);
  7816  07B0  3064               	movlw	100
  7817  07B1  00F5               	movwf	Insert@dest
  7818  07B2  3027               	movlw	39
  7819  07B3  00F6               	movwf	Insert@dest+1
  7820  07B4  300A               	movlw	10
  7821  07B5  0141               	movlb	1	; select bank1
  7822  07B6  00E3               	movwf	??_main^(0+128)
  7823  07B7  0863               	movf	??_main^(0+128),w
  7824  07B8  00F7               	movwf	Insert@src
  7825  07B9  0142               	movlb	2	; select bank2
  7826  07BA  086F               	movf	(main@index+1)^(0+256),w
  7827  07BB  00F9               	movwf	Insert@index+1
  7828  07BC  086E               	movf	main@index^(0+256),w
  7829  07BD  00F8               	movwf	Insert@index
  7830  07BE  308C               	movlw	140
  7831  07BF  00FA               	movwf	Insert@destLimit
  7832  07C0  3000               	movlw	0
  7833  07C1  00FB               	movwf	Insert@destLimit+1
  7834  07C2  3192  22E1  3185   	fcall	_Insert
  7835  07C5  0876               	movf	?_Insert+1,w
  7836  07C6  0142               	movlb	2	; select bank2
  7837  07C7  00EF               	movwf	(main@index+1)^(0+256)
  7838  07C8  0875               	movf	?_Insert,w
  7839  07C9  00EE               	movwf	main@index^(0+256)
  7840                           
  7841                           ;main.c: 668:             id++;
  7842  07CA  3001               	movlw	1
  7843  07CB  07C8               	addwf	_id^(0+256),f
  7844  07CC  3000               	movlw	0
  7845  07CD  3DC9               	addwfc	(_id+1)^(0+256),f
  7846  07CE  0140               	movlb	0	; select bank0
  7847  07CF  1518               	bsf	24,2	;volatile
  7848                           
  7849                           ;main.c: 670:             TransmitString("$$");
  7850  07D0  30B1               	movlw	low (STR_11| (0+32768))
  7851  07D1  00A3               	movwf	TransmitString@message
  7852  07D2  30A8               	movlw	high (STR_11| (0+32768))
  7853  07D3  00A4               	movwf	TransmitString@message+1
  7854  07D4  3199  2140  3185   	fcall	_TransmitString
  7855                           
  7856                           ;main.c: 671:             TransmitString(txdata);
  7857  07D7  3064               	movlw	100
  7858  07D8  0140               	movlb	0	; select bank0
  7859  07D9  00A3               	movwf	TransmitString@message
  7860  07DA  3027               	movlw	39
  7861  07DB  00A4               	movwf	TransmitString@message+1
  7862  07DC  3199  2140  3185   	fcall	_TransmitString
  7863  07DF  0140               	movlb	0	; select bank0
  7864  07E0  1118               	bcf	24,2	;volatile
  7865  07E1  2FF4               	goto	l832
  7866  07E2                     l5526:	
  7867                           
  7868                           ;main.c: 676:         {;main.c: 678:             DebugAlert(400, 200, 3);
  7869  07E2  3090               	movlw	144
  7870  07E3  0140               	movlb	0	; select bank0
  7871  07E4  00A0               	movwf	DebugAlert@delay_high
  7872  07E5  3001               	movlw	1
  7873  07E6  00A1               	movwf	DebugAlert@delay_high+1
  7874  07E7  30C8               	movlw	200
  7875  07E8  00A2               	movwf	DebugAlert@delay_low
  7876  07E9  3000               	movlw	0
  7877  07EA  00A3               	movwf	DebugAlert@delay_low+1
  7878  07EB  3003               	movlw	3
  7879  07EC  0141               	movlb	1	; select bank1
  7880  07ED  00E3               	movwf	??_main^(0+128)
  7881  07EE  0863               	movf	??_main^(0+128),w
  7882  07EF  0140               	movlb	0	; select bank0
  7883  07F0  00A4               	movwf	DebugAlert@num_flashes
  7884  07F1  3198  20C1  3185   	fcall	_DebugAlert
  7885  07F4                     l832:	
  7886                           ;main.c: 679:         }
  7887                           
  7888                           
  7889                           ;main.c: 681:         Sleep(5000);
  7890  07F4  3000               	movlw	0
  7891  07F5  00F3               	movwf	Sleep@ms+3
  7892  07F6  3000               	movlw	0
  7893  07F7  00F2               	movwf	Sleep@ms+2
  7894  07F8  3013               	movlw	19
  7895  07F9  00F1               	movwf	Sleep@ms+1
  7896  07FA  3088               	movlw	136
  7897  07FB  00F0               	movwf	Sleep@ms
  7898  07FC  3199  2115  3185   	fcall	_Sleep
  7899  07FF  2DB8               	goto	l5462
  7900  0800                     __end_of_main:	
  7901                           
  7902                           	psect	text1
  7903  27B5                     __ptext1:	
  7904 ;; *************** function _crc16 *****************
  7905 ;; Defined at:
  7906 ;;		line 22 in file "rtty.c"
  7907 ;; Parameters:    Size  Location     Type
  7908 ;;  data            2    1[BANK0 ] PTR unsigned char 
  7909 ;;		 -> txdata(140), 
  7910 ;; Auto vars:     Size  Location     Type
  7911 ;;  crc             2    3[BANK0 ] unsigned short 
  7912 ;; Return value:  Size  Location     Type
  7913 ;;                  2    1[BANK0 ] unsigned short 
  7914 ;; Registers used:
  7915 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7916 ;; Tracked objects:
  7917 ;;		On entry : 0/0
  7918 ;;		On exit  : 0/0
  7919 ;;		Unchanged: 0/0
  7920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7921 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7922 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7924 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7925 ;;Total ram usage:        4 bytes
  7926 ;; Hardware stack levels used:    1
  7927 ;; Hardware stack levels required when called:    4
  7928 ;; This function calls:
  7929 ;;		_crc16_update
  7930 ;;		_strlen
  7931 ;; This function is called by:
  7932 ;;		_main
  7933 ;; This function uses a non-reentrant model
  7934 ;;
  7935                           
  7936                           
  7937                           ;psect for function _crc16
  7938  27B5                     _crc16:	
  7939                           
  7940                           ;rtty.c: 22: uint16_t crc16(char* data);rtty.c: 23: {;rtty.c: 24:     uint16_t crc = 0xF
      +                          FFF;
  7941                           
  7942                           ;incstack = 0
  7943                           ; Regs used in _crc16: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7944  27B5  30FF               	movlw	255
  7945  27B6  0140               	movlb	0	; select bank0
  7946  27B7  00A3               	movwf	crc16@crc
  7947  27B8  30FF               	movlw	255
  7948  27B9  00A4               	movwf	crc16@crc+1
  7949                           
  7950                           ;rtty.c: 25:     crc = crc16_update(data, strlen(data), crc);
  7951  27BA  0822               	movf	crc16@data+1,w
  7952  27BB  00F6               	movwf	crc16_update@pData+1
  7953  27BC  0821               	movf	crc16@data,w
  7954  27BD  00F5               	movwf	crc16_update@pData
  7955  27BE  0822               	movf	crc16@data+1,w
  7956  27BF  00F1               	movwf	strlen@s+1
  7957  27C0  0821               	movf	crc16@data,w
  7958  27C1  00F0               	movwf	strlen@s
  7959  27C2  31A6  26A0  31A7   	fcall	_strlen
  7960  27C5  0871               	movf	?_strlen+1,w
  7961  27C6  00F8               	movwf	crc16_update@length+1
  7962  27C7  0870               	movf	?_strlen,w
  7963  27C8  00F7               	movwf	crc16_update@length
  7964  27C9  0140               	movlb	0	; select bank0
  7965  27CA  0824               	movf	crc16@crc+1,w
  7966  27CB  00FA               	movwf	crc16_update@wCrc+1
  7967  27CC  0823               	movf	crc16@crc,w
  7968  27CD  00F9               	movwf	crc16_update@wCrc
  7969  27CE  3188  2001         	fcall	_crc16_update
  7970  27D0  0876               	movf	?_crc16_update+1,w
  7971  27D1  0140               	movlb	0	; select bank0
  7972  27D2  00A4               	movwf	crc16@crc+1
  7973  27D3  0875               	movf	?_crc16_update,w
  7974  27D4  00A3               	movwf	crc16@crc
  7975                           
  7976                           ;rtty.c: 26:     return crc & 0xFFFF;
  7977  27D5  0824               	movf	crc16@crc+1,w
  7978  27D6  00A2               	movwf	?_crc16+1
  7979  27D7  0823               	movf	crc16@crc,w
  7980  27D8  00A1               	movwf	?_crc16
  7981  27D9  0008               	return
  7982  27DA                     __end_of_crc16:	
  7983                           
  7984                           	psect	text2
  7985  0801                     __ptext2:	
  7986 ;; *************** function _crc16_update *****************
  7987 ;; Defined at:
  7988 ;;		line 11 in file "rtty.c"
  7989 ;; Parameters:    Size  Location     Type
  7990 ;;  pData           2    5[COMMON] PTR unsigned char 
  7991 ;;		 -> txdata(140), 
  7992 ;;  length          2    7[COMMON] int 
  7993 ;;  wCrc            2    9[COMMON] unsigned short 
  7994 ;; Auto vars:     Size  Location     Type
  7995 ;;  i               1    0[BANK0 ] unsigned char 
  7996 ;; Return value:  Size  Location     Type
  7997 ;;                  2    5[COMMON] unsigned short 
  7998 ;; Registers used:
  7999 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8000 ;; Tracked objects:
  8001 ;;		On entry : 0/0
  8002 ;;		On exit  : 0/0
  8003 ;;		Unchanged: 0/0
  8004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8005 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8006 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8007 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8008 ;;      Totals:         9       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8009 ;;Total ram usage:       10 bytes
  8010 ;; Hardware stack levels used:    1
  8011 ;; Hardware stack levels required when called:    3
  8012 ;; This function calls:
  8013 ;;		Nothing
  8014 ;; This function is called by:
  8015 ;;		_crc16
  8016 ;; This function uses a non-reentrant model
  8017 ;;
  8018                           
  8019                           
  8020                           ;psect for function _crc16_update
  8021  0801                     _crc16_update:	
  8022  0801                     l4348:	
  8023                           ;rtty.c: 11: uint16_t crc16_update(char* pData, int length, uint16_t wCrc);rtty.c: 12: {
      +                          ;rtty.c: 13:     uint8_t i;;rtty.c: 14:     while (length--) {
  8024                           
  8025                           ;incstack = 0
  8026                           ; Regs used in _crc16_update: [wreg+fsr1l+fsr1h+status,2+status,0]
  8027                           
  8028                           
  8029                           ;rtty.c: 14:     while (length--) {
  8030  0801  30FF               	movlw	255
  8031  0802  07F7               	addwf	crc16_update@length,f
  8032  0803  30FF               	movlw	255
  8033  0804  3DF8               	addwfc	crc16_update@length+1,f
  8034  0805  0A77               	incf	crc16_update@length,w
  8035  0806  1903               	btfsc	3,2
  8036  0807  0A78               	incf	crc16_update@length+1,w
  8037  0808  1903               	btfsc	3,2
  8038  0809  2839               	goto	l4350
  8039                           
  8040                           ;rtty.c: 15:         wCrc ^= *(unsigned char *)pData++ << 8;
  8041  080A  0875               	movf	crc16_update@pData,w
  8042  080B  0086               	movwf	6
  8043  080C  0876               	movf	crc16_update@pData+1,w
  8044  080D  0087               	movwf	7
  8045  080E  0801               	movf	1,w
  8046  080F  00FB               	movwf	??_crc16_update
  8047  0810  01FC               	clrf	??_crc16_update+1
  8048  0811  087B               	movf	??_crc16_update,w
  8049  0812  00FC               	movwf	??_crc16_update+1
  8050  0813  01FB               	clrf	??_crc16_update
  8051  0814  087B               	movf	??_crc16_update,w
  8052  0815  06F9               	xorwf	crc16_update@wCrc,f
  8053  0816  087C               	movf	??_crc16_update+1,w
  8054  0817  06FA               	xorwf	crc16_update@wCrc+1,f
  8055  0818  3001               	movlw	1
  8056  0819  07F5               	addwf	crc16_update@pData,f
  8057  081A  3000               	movlw	0
  8058  081B  3DF6               	addwfc	crc16_update@pData+1,f
  8059                           
  8060                           ;rtty.c: 16:         for (i=0; i < 8; i++)
  8061  081C  0140               	movlb	0	; select bank0
  8062  081D  01A0               	clrf	crc16_update@i
  8063  081E                     l848:	
  8064                           
  8065                           ;rtty.c: 17:             wCrc = wCrc & 0x8000 ? (wCrc << 1) ^ 0x1021 : wCrc << 1;
  8066  081E  1BFA               	btfsc	crc16_update@wCrc+1,7
  8067  081F  2824               	goto	l4344
  8068  0820  3579               	lslf	crc16_update@wCrc,w
  8069  0821  00F9               	movwf	crc16_update@wCrc
  8070  0822  0D7A               	rlf	crc16_update@wCrc+1,w
  8071  0823  282F               	goto	L1
  8072  0824                     l4344:	
  8073  0824  087A               	movf	crc16_update@wCrc+1,w
  8074  0825  00FC               	movwf	??_crc16_update+1
  8075  0826  0879               	movf	crc16_update@wCrc,w
  8076  0827  00FB               	movwf	??_crc16_update
  8077  0828  35FB               	lslf	??_crc16_update,f
  8078  0829  0DFC               	rlf	??_crc16_update+1,f
  8079  082A  3021               	movlw	33
  8080  082B  067B               	xorwf	??_crc16_update,w
  8081  082C  00F9               	movwf	crc16_update@wCrc
  8082  082D  3010               	movlw	16
  8083  082E  067C               	xorwf	??_crc16_update+1,w
  8084  082F                     L1:	
  8085  082F  00FA               	movwf	crc16_update@wCrc+1
  8086  0830  3001               	movlw	1
  8087  0831  00FB               	movwf	??_crc16_update
  8088  0832  087B               	movf	??_crc16_update,w
  8089  0833  07A0               	addwf	crc16_update@i,f
  8090  0834  3008               	movlw	8
  8091  0835  0220               	subwf	crc16_update@i,w
  8092  0836  1803               	btfsc	3,0
  8093  0837  2801               	goto	l4348
  8094  0838  281E               	goto	l848
  8095  0839                     l4350:	
  8096                           
  8097                           ;rtty.c: 19:     return wCrc;
  8098  0839  087A               	movf	crc16_update@wCrc+1,w
  8099  083A  00F6               	movwf	?_crc16_update+1
  8100  083B  0879               	movf	crc16_update@wCrc,w
  8101  083C  00F5               	movwf	?_crc16_update
  8102  083D  0008               	return
  8103  083E                     __end_of_crc16_update:	
  8104                           
  8105                           	psect	text3
  8106  107A                     __ptext3:	
  8107 ;; *************** function _bme280_get_sensor_data *****************
  8108 ;; Defined at:
  8109 ;;		line 659 in file "BME280_driver/bme280.c"
  8110 ;; Parameters:    Size  Location     Type
  8111 ;;  sensor_comp     1    wreg     unsigned char 
  8112 ;;  comp_data       1   65[BANK0 ] PTR struct bme280_data
  8113 ;;		 -> main@sensor_data(12), 
  8114 ;;  dev             1   66[BANK0 ] PTR struct bme280_dev
  8115 ;;		 -> EnvSensor(51), 
  8116 ;; Auto vars:     Size  Location     Type
  8117 ;;  sensor_comp     1   53[BANK1 ] unsigned char 
  8118 ;;  uncomp_data    12   55[BANK1 ] struct bme280_uncomp_dat
  8119 ;;  reg_data        8   45[BANK1 ] unsigned char [8]
  8120 ;;  rslt            1   54[BANK1 ] char 
  8121 ;; Return value:  Size  Location     Type
  8122 ;;                  1    wreg      char 
  8123 ;; Registers used:
  8124 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8125 ;; Tracked objects:
  8126 ;;		On entry : 0/0
  8127 ;;		On exit  : 0/0
  8128 ;;		Unchanged: 0/0
  8129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8130 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8131 ;;      Locals:         0       0      22       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8132 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8133 ;;      Totals:         0       5      22       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8134 ;;Total ram usage:       27 bytes
  8135 ;; Hardware stack levels used:    1
  8136 ;; Hardware stack levels required when called:   11
  8137 ;; This function calls:
  8138 ;;		_bme280_compensate_data
  8139 ;;		_bme280_get_regs
  8140 ;;		_bme280_parse_sensor_data
  8141 ;;		_null_ptr_check
  8142 ;; This function is called by:
  8143 ;;		_main
  8144 ;; This function uses a non-reentrant model
  8145 ;;
  8146                           
  8147                           
  8148                           ;psect for function _bme280_get_sensor_data
  8149  107A                     _bme280_get_sensor_data:	
  8150                           
  8151                           ;incstack = 0
  8152                           ; Regs used in _bme280_get_sensor_data: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8153                           ;bme280_get_sensor_data@sensor_comp stored from wreg
  8154  107A  0141               	movlb	1	; select bank1
  8155  107B  00D5               	movwf	bme280_get_sensor_data@sensor_comp^(0+128)
  8156                           
  8157                           ;BME280_driver/bme280.c: 659: int8_t bme280_get_sensor_data(uint8_t sensor_comp, struct 
      +                          bme280_data *comp_data, struct bme280_dev *dev);BME280_driver/bme280.c: 660: {;BME280_dr
      +                          iver/bme280.c: 661:     int8_t rslt;;BME280_driver/bme280.c: 666:     uint8_t reg_data[8
      +                          ] = { 0 };
  8158  107C  30CD               	movlw	low bme280_get_sensor_data@reg_data
  8159  107D  0086               	movwf	6
  8160  107E  3000               	movlw	high bme280_get_sensor_data@reg_data
  8161  107F  0087               	movwf	7
  8162  1080  3008               	movlw	8
  8163  1081  0140               	movlb	0	; select bank0
  8164  1082  00E3               	movwf	??_bme280_get_sensor_data
  8165  1083  3000               	movlw	0
  8166  1084                     u5410:	
  8167  1084  001E               	movwi fsr1++
  8168  1085  0BE3               	decfsz	??_bme280_get_sensor_data,f
  8169  1086  2884               	goto	u5410
  8170                           
  8171                           ;BME280_driver/bme280.c: 667:     struct bme280_uncomp_data uncomp_data = { 0 };
  8172  1087  3030               	movlw	low bme280_get_sensor_data@F273
  8173  1088  0086               	movwf	6
  8174  1089  3001               	movlw	high bme280_get_sensor_data@F273
  8175  108A  0087               	movwf	7
  8176  108B  30D7               	movlw	low bme280_get_sensor_data@uncomp_data
  8177  108C  0084               	movwf	4
  8178  108D  3000               	movlw	high bme280_get_sensor_data@uncomp_data
  8179  108E  0085               	movwf	5
  8180  108F  300C               	movlw	12
  8181  1090  00E3               	movwf	??_bme280_get_sensor_data
  8182  1091                     u5420:	
  8183  1091  0016               	moviw fsr1++
  8184  1092  001A               	movwi fsr0++
  8185  1093  0BE3               	decfsz	??_bme280_get_sensor_data,f
  8186  1094  2891               	goto	u5420
  8187                           
  8188                           ;BME280_driver/bme280.c: 670:     rslt = null_ptr_check(dev);
  8189  1095  0862               	movf	bme280_get_sensor_data@dev,w
  8190  1096  31A7  2790  3190   	fcall	_null_ptr_check
  8191  1099  0140               	movlb	0	; select bank0
  8192  109A  00E3               	movwf	??_bme280_get_sensor_data
  8193  109B  0863               	movf	??_bme280_get_sensor_data,w
  8194  109C  0141               	movlb	1	; select bank1
  8195  109D  00D6               	movwf	bme280_get_sensor_data@rslt^(0+128)
  8196                           
  8197                           ;BME280_driver/bme280.c: 671:     if ((rslt == 0) && (comp_data != ((void*)0)))
  8198  109E  0856               	movf	bme280_get_sensor_data@rslt^(0+128),w
  8199  109F  1D03               	btfss	3,2
  8200  10A0  0008               	return
  8201  10A1  0140               	movlb	0	; select bank0
  8202  10A2  0861               	movf	bme280_get_sensor_data@comp_data,w
  8203  10A3  1903               	btfsc	3,2
  8204  10A4  0008               	return
  8205                           
  8206                           ;BME280_driver/bme280.c: 672:     {;BME280_driver/bme280.c: 674:         rslt = bme280_g
      +                          et_regs(0xF7, reg_data, 8, dev);
  8207  10A5  30CD               	movlw	(low (bme280_get_sensor_data@reg_data| 0))& (0+255)
  8208  10A6  00E3               	movwf	??_bme280_get_sensor_data
  8209  10A7  0863               	movf	??_bme280_get_sensor_data,w
  8210  10A8  00B7               	movwf	bme280_get_regs@reg_data
  8211  10A9  3008               	movlw	8
  8212  10AA  00B8               	movwf	bme280_get_regs@len
  8213  10AB  3000               	movlw	0
  8214  10AC  00B9               	movwf	bme280_get_regs@len+1
  8215  10AD  0862               	movf	bme280_get_sensor_data@dev,w
  8216  10AE  00E4               	movwf	??_bme280_get_sensor_data+1
  8217  10AF  0864               	movf	??_bme280_get_sensor_data+1,w
  8218  10B0  00BA               	movwf	bme280_get_regs@dev
  8219  10B1  30F7               	movlw	247
  8220  10B2  319C  241D  3190   	fcall	_bme280_get_regs
  8221  10B5  0140               	movlb	0	; select bank0
  8222  10B6  00E5               	movwf	??_bme280_get_sensor_data+2
  8223  10B7  0865               	movf	??_bme280_get_sensor_data+2,w
  8224  10B8  0141               	movlb	1	; select bank1
  8225  10B9  00D6               	movwf	bme280_get_sensor_data@rslt^(0+128)
  8226                           
  8227                           ;BME280_driver/bme280.c: 675:         if (rslt == 0)
  8228  10BA  0856               	movf	bme280_get_sensor_data@rslt^(0+128),w
  8229  10BB  1D03               	btfss	3,2
  8230  10BC  0008               	return
  8231                           
  8232                           ;BME280_driver/bme280.c: 676:         {;BME280_driver/bme280.c: 678:             bme280_
      +                          parse_sensor_data(reg_data, &uncomp_data);
  8233  10BD  30D7               	movlw	(low (bme280_get_sensor_data@uncomp_data| 0))& (0+255)
  8234  10BE  0140               	movlb	0	; select bank0
  8235  10BF  00E3               	movwf	??_bme280_get_sensor_data
  8236  10C0  0863               	movf	??_bme280_get_sensor_data,w
  8237  10C1  00F0               	movwf	bme280_parse_sensor_data@uncomp_data
  8238  10C2  30CD               	movlw	(low (bme280_get_sensor_data@reg_data| 0))& (0+255)
  8239  10C3  3188  203E  3190   	fcall	_bme280_parse_sensor_data
  8240  10C6  30D7               	movlw	(low (bme280_get_sensor_data@uncomp_data| 0))& (0+255)
  8241  10C7  0140               	movlb	0	; select bank0
  8242  10C8  00E3               	movwf	??_bme280_get_sensor_data
  8243  10C9  0863               	movf	??_bme280_get_sensor_data,w
  8244  10CA  00DB               	movwf	bme280_compensate_data@uncomp_data
  8245  10CB  0861               	movf	bme280_get_sensor_data@comp_data,w
  8246  10CC  00E4               	movwf	??_bme280_get_sensor_data+1
  8247  10CD  0864               	movf	??_bme280_get_sensor_data+1,w
  8248  10CE  00DC               	movwf	bme280_compensate_data@comp_data
  8249  10CF  0862               	movf	bme280_get_sensor_data@dev,w
  8250  10D0  3E09               	addlw	9
  8251  10D1  00E5               	movwf	??_bme280_get_sensor_data+2
  8252  10D2  0865               	movf	??_bme280_get_sensor_data+2,w
  8253  10D3  00DD               	movwf	bme280_compensate_data@calib_data
  8254  10D4  0141               	movlb	1	; select bank1
  8255  10D5  0855               	movf	bme280_get_sensor_data@sensor_comp^(0+128),w
  8256  10D6  3194  2444         	fcall	_bme280_compensate_data
  8257  10D8  0008               	return
  8258  10D9                     __end_of_bme280_get_sensor_data:	
  8259                           ;BME280_driver/bme280.c: 686:     else
  8260                           
  8261                           
  8262                           	psect	text4
  8263  083E                     __ptext4:	
  8264 ;; *************** function _bme280_parse_sensor_data *****************
  8265 ;; Defined at:
  8266 ;;		line 698 in file "BME280_driver/bme280.c"
  8267 ;; Parameters:    Size  Location     Type
  8268 ;;  reg_data        1    wreg     PTR const unsigned char 
  8269 ;;		 -> bme280_get_sensor_data@reg_data(8), 
  8270 ;;  uncomp_data     1    0[COMMON] PTR struct bme280_uncomp
  8271 ;;		 -> bme280_get_sensor_data@uncomp_data(12), 
  8272 ;; Auto vars:     Size  Location     Type
  8273 ;;  reg_data        1   12[BANK0 ] PTR const unsigned char 
  8274 ;;		 -> bme280_get_sensor_data@reg_data(8), 
  8275 ;;  data_msb        4    8[BANK0 ] unsigned long 
  8276 ;;  data_lsb        4    4[BANK0 ] unsigned long 
  8277 ;;  data_xlsb       4    0[BANK0 ] unsigned long 
  8278 ;; Return value:  Size  Location     Type
  8279 ;;                  1    wreg      void 
  8280 ;; Registers used:
  8281 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8282 ;; Tracked objects:
  8283 ;;		On entry : 0/0
  8284 ;;		On exit  : 0/0
  8285 ;;		Unchanged: 0/0
  8286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8287 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8288 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8289 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8290 ;;      Totals:         9      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8291 ;;Total ram usage:       22 bytes
  8292 ;; Hardware stack levels used:    1
  8293 ;; Hardware stack levels required when called:    3
  8294 ;; This function calls:
  8295 ;;		Nothing
  8296 ;; This function is called by:
  8297 ;;		_bme280_get_sensor_data
  8298 ;; This function uses a non-reentrant model
  8299 ;;
  8300                           
  8301                           
  8302                           ;psect for function _bme280_parse_sensor_data
  8303  083E                     _bme280_parse_sensor_data:	
  8304                           
  8305                           ;incstack = 0
  8306                           ; Regs used in _bme280_parse_sensor_data: [wreg+fsr1l+fsr1h+status,2+status,0]
  8307                           ;bme280_parse_sensor_data@reg_data stored from wreg
  8308  083E  0140               	movlb	0	; select bank0
  8309  083F  00AC               	movwf	bme280_parse_sensor_data@reg_data
  8310                           
  8311                           ;BME280_driver/bme280.c: 698: void bme280_parse_sensor_data(const uint8_t *reg_data, str
      +                          uct bme280_uncomp_data *uncomp_data);BME280_driver/bme280.c: 699: {;BME280_driver/bme280
      +                          .c: 701:     uint32_t data_xlsb;;BME280_driver/bme280.c: 702:     uint32_t data_lsb;;BME
      +                          280_driver/bme280.c: 703:     uint32_t data_msb;;BME280_driver/bme280.c: 706:     data_m
      +                          sb = (uint32_t)reg_data[0] << 12;
  8312  0840  082C               	movf	bme280_parse_sensor_data@reg_data,w
  8313  0841  0086               	movwf	6
  8314  0842  0187               	clrf	7
  8315  0843  0801               	movf	1,w
  8316  0844  00F1               	movwf	??_bme280_parse_sensor_data
  8317  0845  01F2               	clrf	??_bme280_parse_sensor_data+1
  8318  0846  01F3               	clrf	??_bme280_parse_sensor_data+2
  8319  0847  01F4               	clrf	??_bme280_parse_sensor_data+3
  8320  0848  300C               	movlw	12
  8321  0849                     u3705:	
  8322  0849  35F1               	lslf	??_bme280_parse_sensor_data,f
  8323  084A  0DF2               	rlf	??_bme280_parse_sensor_data+1,f
  8324  084B  0DF3               	rlf	??_bme280_parse_sensor_data+2,f
  8325  084C  0DF4               	rlf	??_bme280_parse_sensor_data+3,f
  8326  084D  0B89               	decfsz	9,f
  8327  084E  2849               	goto	u3705
  8328  084F  0874               	movf	??_bme280_parse_sensor_data+3,w
  8329  0850  00AB               	movwf	bme280_parse_sensor_data@data_msb+3
  8330  0851  0873               	movf	??_bme280_parse_sensor_data+2,w
  8331  0852  00AA               	movwf	bme280_parse_sensor_data@data_msb+2
  8332  0853  0872               	movf	??_bme280_parse_sensor_data+1,w
  8333  0854  00A9               	movwf	bme280_parse_sensor_data@data_msb+1
  8334  0855  0871               	movf	??_bme280_parse_sensor_data,w
  8335  0856  00A8               	movwf	bme280_parse_sensor_data@data_msb
  8336                           
  8337                           ;BME280_driver/bme280.c: 707:     data_lsb = (uint32_t)reg_data[1] << 4;
  8338  0857  0A2C               	incf	bme280_parse_sensor_data@reg_data,w
  8339  0858  0086               	movwf	6
  8340  0859  0187               	clrf	7
  8341  085A  0801               	movf	1,w
  8342  085B  00F1               	movwf	??_bme280_parse_sensor_data
  8343  085C  01F2               	clrf	??_bme280_parse_sensor_data+1
  8344  085D  01F3               	clrf	??_bme280_parse_sensor_data+2
  8345  085E  01F4               	clrf	??_bme280_parse_sensor_data+3
  8346  085F  3004               	movlw	4
  8347  0860                     u3715:	
  8348  0860  35F1               	lslf	??_bme280_parse_sensor_data,f
  8349  0861  0DF2               	rlf	??_bme280_parse_sensor_data+1,f
  8350  0862  0DF3               	rlf	??_bme280_parse_sensor_data+2,f
  8351  0863  0DF4               	rlf	??_bme280_parse_sensor_data+3,f
  8352  0864  0B89               	decfsz	9,f
  8353  0865  2860               	goto	u3715
  8354  0866  0874               	movf	??_bme280_parse_sensor_data+3,w
  8355  0867  00A7               	movwf	bme280_parse_sensor_data@data_lsb+3
  8356  0868  0873               	movf	??_bme280_parse_sensor_data+2,w
  8357  0869  00A6               	movwf	bme280_parse_sensor_data@data_lsb+2
  8358  086A  0872               	movf	??_bme280_parse_sensor_data+1,w
  8359  086B  00A5               	movwf	bme280_parse_sensor_data@data_lsb+1
  8360  086C  0871               	movf	??_bme280_parse_sensor_data,w
  8361  086D  00A4               	movwf	bme280_parse_sensor_data@data_lsb
  8362                           
  8363                           ;BME280_driver/bme280.c: 708:     data_xlsb = (uint32_t)reg_data[2] >> 4;
  8364  086E  082C               	movf	bme280_parse_sensor_data@reg_data,w
  8365  086F  3E02               	addlw	2
  8366  0870  0086               	movwf	6
  8367  0871  0187               	clrf	7
  8368  0872  0801               	movf	1,w
  8369  0873  00F1               	movwf	??_bme280_parse_sensor_data
  8370  0874  3004               	movlw	4
  8371  0875                     u3725:	
  8372  0875  36F1               	lsrf	??_bme280_parse_sensor_data,f
  8373  0876  0B89               	decfsz	9,f
  8374  0877  2875               	goto	u3725
  8375  0878  0871               	movf	??_bme280_parse_sensor_data,w
  8376  0879  00F2               	movwf	??_bme280_parse_sensor_data+1
  8377  087A  01F3               	clrf	??_bme280_parse_sensor_data+2
  8378  087B  01F4               	clrf	??_bme280_parse_sensor_data+3
  8379  087C  01F5               	clrf	??_bme280_parse_sensor_data+4
  8380  087D  0875               	movf	??_bme280_parse_sensor_data+4,w
  8381  087E  00A3               	movwf	bme280_parse_sensor_data@data_xlsb+3
  8382  087F  0874               	movf	??_bme280_parse_sensor_data+3,w
  8383  0880  00A2               	movwf	bme280_parse_sensor_data@data_xlsb+2
  8384  0881  0873               	movf	??_bme280_parse_sensor_data+2,w
  8385  0882  00A1               	movwf	bme280_parse_sensor_data@data_xlsb+1
  8386  0883  0872               	movf	??_bme280_parse_sensor_data+1,w
  8387  0884  00A0               	movwf	bme280_parse_sensor_data@data_xlsb
  8388                           
  8389                           ;BME280_driver/bme280.c: 709:     uncomp_data->pressure = data_msb | data_lsb | data_xls
      +                          b;
  8390  0885  0820               	movf	bme280_parse_sensor_data@data_xlsb,w
  8391  0886  00F1               	movwf	??_bme280_parse_sensor_data
  8392  0887  0821               	movf	bme280_parse_sensor_data@data_xlsb+1,w
  8393  0888  00F2               	movwf	??_bme280_parse_sensor_data+1
  8394  0889  0822               	movf	bme280_parse_sensor_data@data_xlsb+2,w
  8395  088A  00F3               	movwf	??_bme280_parse_sensor_data+2
  8396  088B  0823               	movf	bme280_parse_sensor_data@data_xlsb+3,w
  8397  088C  00F4               	movwf	??_bme280_parse_sensor_data+3
  8398  088D  0828               	movf	bme280_parse_sensor_data@data_msb,w
  8399  088E  0424               	iorwf	bme280_parse_sensor_data@data_lsb,w
  8400  088F  00F5               	movwf	??_bme280_parse_sensor_data+4
  8401  0890  0829               	movf	bme280_parse_sensor_data@data_msb+1,w
  8402  0891  0425               	iorwf	bme280_parse_sensor_data@data_lsb+1,w
  8403  0892  00F6               	movwf	??_bme280_parse_sensor_data+5
  8404  0893  082A               	movf	bme280_parse_sensor_data@data_msb+2,w
  8405  0894  0426               	iorwf	bme280_parse_sensor_data@data_lsb+2,w
  8406  0895  00F7               	movwf	??_bme280_parse_sensor_data+6
  8407  0896  082B               	movf	bme280_parse_sensor_data@data_msb+3,w
  8408  0897  0427               	iorwf	bme280_parse_sensor_data@data_lsb+3,w
  8409  0898  00F8               	movwf	??_bme280_parse_sensor_data+7
  8410  0899  0875               	movf	??_bme280_parse_sensor_data+4,w
  8411  089A  04F1               	iorwf	??_bme280_parse_sensor_data,f
  8412  089B  0876               	movf	??_bme280_parse_sensor_data+5,w
  8413  089C  04F2               	iorwf	??_bme280_parse_sensor_data+1,f
  8414  089D  0877               	movf	??_bme280_parse_sensor_data+6,w
  8415  089E  04F3               	iorwf	??_bme280_parse_sensor_data+2,f
  8416  089F  0878               	movf	??_bme280_parse_sensor_data+7,w
  8417  08A0  04F4               	iorwf	??_bme280_parse_sensor_data+3,f
  8418  08A1  0870               	movf	bme280_parse_sensor_data@uncomp_data,w
  8419  08A2  0086               	movwf	6
  8420  08A3  0187               	clrf	7
  8421  08A4  0871               	movf	??_bme280_parse_sensor_data,w
  8422  08A5  3FC0               	movwi [0]fsr1
  8423  08A6  0872               	movf	??_bme280_parse_sensor_data+1,w
  8424  08A7  3FC1               	movwi [1]fsr1
  8425  08A8  0873               	movf	??_bme280_parse_sensor_data+2,w
  8426  08A9  3FC2               	movwi [2]fsr1
  8427  08AA  0874               	movf	??_bme280_parse_sensor_data+3,w
  8428  08AB  3FC3               	movwi [3]fsr1
  8429                           
  8430                           ;BME280_driver/bme280.c: 712:     data_msb = (uint32_t)reg_data[3] << 12;
  8431  08AC  082C               	movf	bme280_parse_sensor_data@reg_data,w
  8432  08AD  3E03               	addlw	3
  8433  08AE  0086               	movwf	6
  8434  08AF  0187               	clrf	7
  8435  08B0  0801               	movf	1,w
  8436  08B1  00F1               	movwf	??_bme280_parse_sensor_data
  8437  08B2  01F2               	clrf	??_bme280_parse_sensor_data+1
  8438  08B3  01F3               	clrf	??_bme280_parse_sensor_data+2
  8439  08B4  01F4               	clrf	??_bme280_parse_sensor_data+3
  8440  08B5  300C               	movlw	12
  8441  08B6                     u3735:	
  8442  08B6  35F1               	lslf	??_bme280_parse_sensor_data,f
  8443  08B7  0DF2               	rlf	??_bme280_parse_sensor_data+1,f
  8444  08B8  0DF3               	rlf	??_bme280_parse_sensor_data+2,f
  8445  08B9  0DF4               	rlf	??_bme280_parse_sensor_data+3,f
  8446  08BA  0B89               	decfsz	9,f
  8447  08BB  28B6               	goto	u3735
  8448  08BC  0874               	movf	??_bme280_parse_sensor_data+3,w
  8449  08BD  00AB               	movwf	bme280_parse_sensor_data@data_msb+3
  8450  08BE  0873               	movf	??_bme280_parse_sensor_data+2,w
  8451  08BF  00AA               	movwf	bme280_parse_sensor_data@data_msb+2
  8452  08C0  0872               	movf	??_bme280_parse_sensor_data+1,w
  8453  08C1  00A9               	movwf	bme280_parse_sensor_data@data_msb+1
  8454  08C2  0871               	movf	??_bme280_parse_sensor_data,w
  8455  08C3  00A8               	movwf	bme280_parse_sensor_data@data_msb
  8456                           
  8457                           ;BME280_driver/bme280.c: 713:     data_lsb = (uint32_t)reg_data[4] << 4;
  8458  08C4  082C               	movf	bme280_parse_sensor_data@reg_data,w
  8459  08C5  3E04               	addlw	4
  8460  08C6  0086               	movwf	6
  8461  08C7  0187               	clrf	7
  8462  08C8  0801               	movf	1,w
  8463  08C9  00F1               	movwf	??_bme280_parse_sensor_data
  8464  08CA  01F2               	clrf	??_bme280_parse_sensor_data+1
  8465  08CB  01F3               	clrf	??_bme280_parse_sensor_data+2
  8466  08CC  01F4               	clrf	??_bme280_parse_sensor_data+3
  8467  08CD  3004               	movlw	4
  8468  08CE                     u3745:	
  8469  08CE  35F1               	lslf	??_bme280_parse_sensor_data,f
  8470  08CF  0DF2               	rlf	??_bme280_parse_sensor_data+1,f
  8471  08D0  0DF3               	rlf	??_bme280_parse_sensor_data+2,f
  8472  08D1  0DF4               	rlf	??_bme280_parse_sensor_data+3,f
  8473  08D2  0B89               	decfsz	9,f
  8474  08D3  28CE               	goto	u3745
  8475  08D4  0874               	movf	??_bme280_parse_sensor_data+3,w
  8476  08D5  00A7               	movwf	bme280_parse_sensor_data@data_lsb+3
  8477  08D6  0873               	movf	??_bme280_parse_sensor_data+2,w
  8478  08D7  00A6               	movwf	bme280_parse_sensor_data@data_lsb+2
  8479  08D8  0872               	movf	??_bme280_parse_sensor_data+1,w
  8480  08D9  00A5               	movwf	bme280_parse_sensor_data@data_lsb+1
  8481  08DA  0871               	movf	??_bme280_parse_sensor_data,w
  8482  08DB  00A4               	movwf	bme280_parse_sensor_data@data_lsb
  8483                           
  8484                           ;BME280_driver/bme280.c: 714:     data_xlsb = (uint32_t)reg_data[5] >> 4;
  8485  08DC  082C               	movf	bme280_parse_sensor_data@reg_data,w
  8486  08DD  3E05               	addlw	5
  8487  08DE  0086               	movwf	6
  8488  08DF  0187               	clrf	7
  8489  08E0  0801               	movf	1,w
  8490  08E1  00F1               	movwf	??_bme280_parse_sensor_data
  8491  08E2  3004               	movlw	4
  8492  08E3                     u3755:	
  8493  08E3  36F1               	lsrf	??_bme280_parse_sensor_data,f
  8494  08E4  0B89               	decfsz	9,f
  8495  08E5  28E3               	goto	u3755
  8496  08E6  0871               	movf	??_bme280_parse_sensor_data,w
  8497  08E7  00F2               	movwf	??_bme280_parse_sensor_data+1
  8498  08E8  01F3               	clrf	??_bme280_parse_sensor_data+2
  8499  08E9  01F4               	clrf	??_bme280_parse_sensor_data+3
  8500  08EA  01F5               	clrf	??_bme280_parse_sensor_data+4
  8501  08EB  0875               	movf	??_bme280_parse_sensor_data+4,w
  8502  08EC  00A3               	movwf	bme280_parse_sensor_data@data_xlsb+3
  8503  08ED  0874               	movf	??_bme280_parse_sensor_data+3,w
  8504  08EE  00A2               	movwf	bme280_parse_sensor_data@data_xlsb+2
  8505  08EF  0873               	movf	??_bme280_parse_sensor_data+2,w
  8506  08F0  00A1               	movwf	bme280_parse_sensor_data@data_xlsb+1
  8507  08F1  0872               	movf	??_bme280_parse_sensor_data+1,w
  8508  08F2  00A0               	movwf	bme280_parse_sensor_data@data_xlsb
  8509                           
  8510                           ;BME280_driver/bme280.c: 715:     uncomp_data->temperature = data_msb | data_lsb | data_
      +                          xlsb;
  8511  08F3  0820               	movf	bme280_parse_sensor_data@data_xlsb,w
  8512  08F4  00F1               	movwf	??_bme280_parse_sensor_data
  8513  08F5  0821               	movf	bme280_parse_sensor_data@data_xlsb+1,w
  8514  08F6  00F2               	movwf	??_bme280_parse_sensor_data+1
  8515  08F7  0822               	movf	bme280_parse_sensor_data@data_xlsb+2,w
  8516  08F8  00F3               	movwf	??_bme280_parse_sensor_data+2
  8517  08F9  0823               	movf	bme280_parse_sensor_data@data_xlsb+3,w
  8518  08FA  00F4               	movwf	??_bme280_parse_sensor_data+3
  8519  08FB  0828               	movf	bme280_parse_sensor_data@data_msb,w
  8520  08FC  0424               	iorwf	bme280_parse_sensor_data@data_lsb,w
  8521  08FD  00F5               	movwf	??_bme280_parse_sensor_data+4
  8522  08FE  0829               	movf	bme280_parse_sensor_data@data_msb+1,w
  8523  08FF  0425               	iorwf	bme280_parse_sensor_data@data_lsb+1,w
  8524  0900  00F6               	movwf	??_bme280_parse_sensor_data+5
  8525  0901  082A               	movf	bme280_parse_sensor_data@data_msb+2,w
  8526  0902  0426               	iorwf	bme280_parse_sensor_data@data_lsb+2,w
  8527  0903  00F7               	movwf	??_bme280_parse_sensor_data+6
  8528  0904  082B               	movf	bme280_parse_sensor_data@data_msb+3,w
  8529  0905  0427               	iorwf	bme280_parse_sensor_data@data_lsb+3,w
  8530  0906  00F8               	movwf	??_bme280_parse_sensor_data+7
  8531  0907  0875               	movf	??_bme280_parse_sensor_data+4,w
  8532  0908  04F1               	iorwf	??_bme280_parse_sensor_data,f
  8533  0909  0876               	movf	??_bme280_parse_sensor_data+5,w
  8534  090A  04F2               	iorwf	??_bme280_parse_sensor_data+1,f
  8535  090B  0877               	movf	??_bme280_parse_sensor_data+6,w
  8536  090C  04F3               	iorwf	??_bme280_parse_sensor_data+2,f
  8537  090D  0878               	movf	??_bme280_parse_sensor_data+7,w
  8538  090E  04F4               	iorwf	??_bme280_parse_sensor_data+3,f
  8539  090F  0870               	movf	bme280_parse_sensor_data@uncomp_data,w
  8540  0910  3E04               	addlw	4
  8541  0911  0086               	movwf	6
  8542  0912  0187               	clrf	7
  8543  0913  0871               	movf	??_bme280_parse_sensor_data,w
  8544  0914  3FC0               	movwi [0]fsr1
  8545  0915  0872               	movf	??_bme280_parse_sensor_data+1,w
  8546  0916  3FC1               	movwi [1]fsr1
  8547  0917  0873               	movf	??_bme280_parse_sensor_data+2,w
  8548  0918  3FC2               	movwi [2]fsr1
  8549  0919  0874               	movf	??_bme280_parse_sensor_data+3,w
  8550  091A  3FC3               	movwi [3]fsr1
  8551                           
  8552                           ;BME280_driver/bme280.c: 718:     data_lsb = (uint32_t)reg_data[6] << 8;
  8553  091B  082C               	movf	bme280_parse_sensor_data@reg_data,w
  8554  091C  3E06               	addlw	6
  8555  091D  0086               	movwf	6
  8556  091E  0187               	clrf	7
  8557  091F  0801               	movf	1,w
  8558  0920  00F1               	movwf	??_bme280_parse_sensor_data
  8559  0921  01F2               	clrf	??_bme280_parse_sensor_data+1
  8560  0922  01F3               	clrf	??_bme280_parse_sensor_data+2
  8561  0923  01F4               	clrf	??_bme280_parse_sensor_data+3
  8562  0924  3008               	movlw	8
  8563  0925                     u3765:	
  8564  0925  35F1               	lslf	??_bme280_parse_sensor_data,f
  8565  0926  0DF2               	rlf	??_bme280_parse_sensor_data+1,f
  8566  0927  0DF3               	rlf	??_bme280_parse_sensor_data+2,f
  8567  0928  0DF4               	rlf	??_bme280_parse_sensor_data+3,f
  8568  0929  0B89               	decfsz	9,f
  8569  092A  2925               	goto	u3765
  8570  092B  0874               	movf	??_bme280_parse_sensor_data+3,w
  8571  092C  00A7               	movwf	bme280_parse_sensor_data@data_lsb+3
  8572  092D  0873               	movf	??_bme280_parse_sensor_data+2,w
  8573  092E  00A6               	movwf	bme280_parse_sensor_data@data_lsb+2
  8574  092F  0872               	movf	??_bme280_parse_sensor_data+1,w
  8575  0930  00A5               	movwf	bme280_parse_sensor_data@data_lsb+1
  8576  0931  0871               	movf	??_bme280_parse_sensor_data,w
  8577  0932  00A4               	movwf	bme280_parse_sensor_data@data_lsb
  8578                           
  8579                           ;BME280_driver/bme280.c: 719:     data_msb = (uint32_t)reg_data[7];
  8580  0933  082C               	movf	bme280_parse_sensor_data@reg_data,w
  8581  0934  3E07               	addlw	7
  8582  0935  0086               	movwf	6
  8583  0936  0187               	clrf	7
  8584  0937  0801               	movf	1,w
  8585  0938  00F1               	movwf	??_bme280_parse_sensor_data
  8586  0939  01F2               	clrf	??_bme280_parse_sensor_data+1
  8587  093A  01F3               	clrf	??_bme280_parse_sensor_data+2
  8588  093B  01F4               	clrf	??_bme280_parse_sensor_data+3
  8589  093C  0874               	movf	??_bme280_parse_sensor_data+3,w
  8590  093D  00AB               	movwf	bme280_parse_sensor_data@data_msb+3
  8591  093E  0873               	movf	??_bme280_parse_sensor_data+2,w
  8592  093F  00AA               	movwf	bme280_parse_sensor_data@data_msb+2
  8593  0940  0872               	movf	??_bme280_parse_sensor_data+1,w
  8594  0941  00A9               	movwf	bme280_parse_sensor_data@data_msb+1
  8595  0942  0871               	movf	??_bme280_parse_sensor_data,w
  8596  0943  00A8               	movwf	bme280_parse_sensor_data@data_msb
  8597                           
  8598                           ;BME280_driver/bme280.c: 720:     uncomp_data->humidity = data_msb | data_lsb;
  8599  0944  0828               	movf	bme280_parse_sensor_data@data_msb,w
  8600  0945  0424               	iorwf	bme280_parse_sensor_data@data_lsb,w
  8601  0946  00F1               	movwf	??_bme280_parse_sensor_data
  8602  0947  0829               	movf	bme280_parse_sensor_data@data_msb+1,w
  8603  0948  0425               	iorwf	bme280_parse_sensor_data@data_lsb+1,w
  8604  0949  00F2               	movwf	??_bme280_parse_sensor_data+1
  8605  094A  082A               	movf	bme280_parse_sensor_data@data_msb+2,w
  8606  094B  0426               	iorwf	bme280_parse_sensor_data@data_lsb+2,w
  8607  094C  00F3               	movwf	??_bme280_parse_sensor_data+2
  8608  094D  082B               	movf	bme280_parse_sensor_data@data_msb+3,w
  8609  094E  0427               	iorwf	bme280_parse_sensor_data@data_lsb+3,w
  8610  094F  00F4               	movwf	??_bme280_parse_sensor_data+3
  8611  0950  0870               	movf	bme280_parse_sensor_data@uncomp_data,w
  8612  0951  3E08               	addlw	8
  8613  0952  0086               	movwf	6
  8614  0953  0187               	clrf	7
  8615  0954  0871               	movf	??_bme280_parse_sensor_data,w
  8616  0955  3FC0               	movwi [0]fsr1
  8617  0956  0872               	movf	??_bme280_parse_sensor_data+1,w
  8618  0957  3FC1               	movwi [1]fsr1
  8619  0958  0873               	movf	??_bme280_parse_sensor_data+2,w
  8620  0959  3FC2               	movwi [2]fsr1
  8621  095A  0874               	movf	??_bme280_parse_sensor_data+3,w
  8622  095B  3FC3               	movwi [3]fsr1
  8623  095C  0008               	return
  8624  095D                     __end_of_bme280_parse_sensor_data:	
  8625                           
  8626                           	psect	text5
  8627  1444                     __ptext5:	
  8628 ;; *************** function _bme280_compensate_data *****************
  8629 ;; Defined at:
  8630 ;;		line 728 in file "BME280_driver/bme280.c"
  8631 ;; Parameters:    Size  Location     Type
  8632 ;;  sensor_comp     1    wreg     unsigned char 
  8633 ;;  uncomp_data     1   59[BANK0 ] PTR const struct bme280_
  8634 ;;		 -> bme280_get_sensor_data@uncomp_data(12), 
  8635 ;;  comp_data       1   60[BANK0 ] PTR struct bme280_data
  8636 ;;		 -> main@sensor_data(12), 
  8637 ;;  calib_data      1   61[BANK0 ] PTR struct bme280_calib_
  8638 ;;		 -> EnvSensor(51), 
  8639 ;; Auto vars:     Size  Location     Type
  8640 ;;  sensor_comp     1   64[BANK0 ] unsigned char 
  8641 ;;  rslt            1   63[BANK0 ] char 
  8642 ;; Return value:  Size  Location     Type
  8643 ;;                  1    wreg      char 
  8644 ;; Registers used:
  8645 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8646 ;; Tracked objects:
  8647 ;;		On entry : 0/0
  8648 ;;		On exit  : 0/0
  8649 ;;		Unchanged: 0/0
  8650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8651 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8652 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8653 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8654 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8655 ;;Total ram usage:        6 bytes
  8656 ;; Hardware stack levels used:    1
  8657 ;; Hardware stack levels required when called:    5
  8658 ;; This function calls:
  8659 ;;		_compensate_humidity
  8660 ;;		_compensate_pressure
  8661 ;;		_compensate_temperature
  8662 ;; This function is called by:
  8663 ;;		_bme280_get_sensor_data
  8664 ;; This function uses a non-reentrant model
  8665 ;;
  8666                           
  8667                           
  8668                           ;psect for function _bme280_compensate_data
  8669  1444                     _bme280_compensate_data:	
  8670                           
  8671                           ;incstack = 0
  8672                           ; Regs used in _bme280_compensate_data: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
  8673                           ;bme280_compensate_data@sensor_comp stored from wreg
  8674  1444  0140               	movlb	0	; select bank0
  8675  1445  00E0               	movwf	bme280_compensate_data@sensor_comp
  8676                           
  8677                           ;BME280_driver/bme280.c: 728: int8_t bme280_compensate_data(uint8_t sensor_comp,;BME280_
      +                          driver/bme280.c: 729:                               const struct bme280_uncomp_data *unc
      +                          omp_data,;BME280_driver/bme280.c: 730:                               struct bme280_data 
      +                          *comp_data,;BME280_driver/bme280.c: 731:                               struct bme280_cal
      +                          ib_data *calib_data);BME280_driver/bme280.c: 732: {;BME280_driver/bme280.c: 733:     int
      +                          8_t rslt = 0;
  8678  1446  01DF               	clrf	bme280_compensate_data@rslt
  8679                           
  8680                           ;BME280_driver/bme280.c: 735:     if ((uncomp_data != ((void*)0)) && (comp_data != ((voi
      +                          d*)0)) && (calib_data != ((void*)0)))
  8681  1447  085B               	movf	bme280_compensate_data@uncomp_data,w
  8682  1448  1903               	btfsc	3,2
  8683  1449  2CB9               	goto	l126
  8684  144A  085C               	movf	bme280_compensate_data@comp_data,w
  8685  144B  1903               	btfsc	3,2
  8686  144C  2CB9               	goto	l126
  8687  144D  085D               	movf	bme280_compensate_data@calib_data,w
  8688  144E  1903               	btfsc	3,2
  8689  144F  2CB9               	goto	l126
  8690                           
  8691                           ;BME280_driver/bme280.c: 736:     {;BME280_driver/bme280.c: 738:         comp_data->temp
      +                          erature = 0;
  8692  1450  085C               	movf	bme280_compensate_data@comp_data,w
  8693  1451  3E04               	addlw	4
  8694  1452  0086               	movwf	6
  8695  1453  3001               	movlw	1	; select bank2/3
  8696  1454  0087               	movwf	7
  8697  1455  3000               	movlw	0
  8698  1456  3FC0               	movwi [0]fsr1
  8699  1457  3000               	movlw	0
  8700  1458  3FC1               	movwi [1]fsr1
  8701  1459  3FC2               	movwi [2]fsr1
  8702  145A  3FC3               	movwi [3]fsr1
  8703                           
  8704                           ;BME280_driver/bme280.c: 739:         comp_data->pressure = 0;
  8705  145B  085C               	movf	bme280_compensate_data@comp_data,w
  8706  145C  0086               	movwf	6
  8707  145D  3001               	movlw	1	; select bank2/3
  8708  145E  0087               	movwf	7
  8709  145F  3000               	movlw	0
  8710  1460  3FC0               	movwi [0]fsr1
  8711  1461  3FC1               	movwi [1]fsr1
  8712  1462  3FC2               	movwi [2]fsr1
  8713  1463  3FC3               	movwi [3]fsr1
  8714                           
  8715                           ;BME280_driver/bme280.c: 740:         comp_data->humidity = 0;
  8716  1464  085C               	movf	bme280_compensate_data@comp_data,w
  8717  1465  3E08               	addlw	8
  8718  1466  0086               	movwf	6
  8719  1467  3001               	movlw	1	; select bank2/3
  8720  1468  0087               	movwf	7
  8721  1469  3000               	movlw	0
  8722  146A  3FC0               	movwi [0]fsr1
  8723  146B  3000               	movlw	0
  8724  146C  3FC1               	movwi [1]fsr1
  8725  146D  3FC2               	movwi [2]fsr1
  8726  146E  3FC3               	movwi [3]fsr1
  8727                           
  8728                           ;BME280_driver/bme280.c: 743:         if (sensor_comp & (1 | 1 << 1 | 1 << 2))
  8729  146F  0860               	movf	bme280_compensate_data@sensor_comp,w
  8730  1470  3907               	andlw	7
  8731  1471  1903               	btfsc	3,2
  8732  1472  2C89               	goto	l4122
  8733                           
  8734                           ;BME280_driver/bme280.c: 744:         {;BME280_driver/bme280.c: 746:             comp_da
      +                          ta->temperature = compensate_temperature(uncomp_data, calib_data);
  8735  1473  085D               	movf	bme280_compensate_data@calib_data,w
  8736  1474  00DE               	movwf	??_bme280_compensate_data
  8737  1475  085E               	movf	??_bme280_compensate_data,w
  8738  1476  00AE               	movwf	compensate_temperature@calib_data
  8739  1477  085B               	movf	bme280_compensate_data@uncomp_data,w
  8740  1478  3189  215D  3194   	fcall	_compensate_temperature
  8741  147B  0140               	movlb	0	; select bank0
  8742  147C  085C               	movf	bme280_compensate_data@comp_data,w
  8743  147D  3E04               	addlw	4
  8744  147E  0086               	movwf	6
  8745  147F  3001               	movlw	1	; select bank2/3
  8746  1480  0087               	movwf	7
  8747  1481  082E               	movf	?_compensate_temperature,w
  8748  1482  3FC0               	movwi [0]fsr1
  8749  1483  082F               	movf	?_compensate_temperature+1,w
  8750  1484  3FC1               	movwi [1]fsr1
  8751  1485  0830               	movf	?_compensate_temperature+2,w
  8752  1486  3FC2               	movwi [2]fsr1
  8753  1487  0831               	movf	?_compensate_temperature+3,w
  8754  1488  3FC3               	movwi [3]fsr1
  8755  1489                     l4122:	
  8756                           
  8757                           ;BME280_driver/bme280.c: 748:         if (sensor_comp & 1)
  8758  1489  1C60               	btfss	bme280_compensate_data@sensor_comp,0
  8759  148A  2CA0               	goto	l4126
  8760                           
  8761                           ;BME280_driver/bme280.c: 749:         {;BME280_driver/bme280.c: 751:             comp_da
      +                          ta->pressure = compensate_pressure(uncomp_data, calib_data);
  8762  148B  085D               	movf	bme280_compensate_data@calib_data,w
  8763  148C  00DE               	movwf	??_bme280_compensate_data
  8764  148D  085E               	movf	??_bme280_compensate_data,w
  8765  148E  00AE               	movwf	compensate_pressure@calib_data
  8766  148F  085B               	movf	bme280_compensate_data@uncomp_data,w
  8767  1490  3180  2054  3194   	fcall	_compensate_pressure
  8768  1493  0140               	movlb	0	; select bank0
  8769  1494  085C               	movf	bme280_compensate_data@comp_data,w
  8770  1495  0086               	movwf	6
  8771  1496  3001               	movlw	1	; select bank2/3
  8772  1497  0087               	movwf	7
  8773  1498  082E               	movf	?_compensate_pressure,w
  8774  1499  3FC0               	movwi [0]fsr1
  8775  149A  082F               	movf	?_compensate_pressure+1,w
  8776  149B  3FC1               	movwi [1]fsr1
  8777  149C  0830               	movf	?_compensate_pressure+2,w
  8778  149D  3FC2               	movwi [2]fsr1
  8779  149E  0831               	movf	?_compensate_pressure+3,w
  8780  149F  3FC3               	movwi [3]fsr1
  8781  14A0                     l4126:	
  8782                           
  8783                           ;BME280_driver/bme280.c: 753:         if (sensor_comp & 1 << 2)
  8784  14A0  1D60               	btfss	bme280_compensate_data@sensor_comp,2
  8785  14A1  2CBB               	goto	l4130
  8786                           
  8787                           ;BME280_driver/bme280.c: 754:         {;BME280_driver/bme280.c: 757:             comp_da
      +                          ta->humidity = compensate_humidity(uncomp_data, calib_data);
  8788  14A2  085D               	movf	bme280_compensate_data@calib_data,w
  8789  14A3  00DE               	movwf	??_bme280_compensate_data
  8790  14A4  085E               	movf	??_bme280_compensate_data,w
  8791  14A5  00AE               	movwf	compensate_humidity@calib_data
  8792  14A6  085B               	movf	bme280_compensate_data@uncomp_data,w
  8793  14A7  318D  2536  3194   	fcall	_compensate_humidity
  8794  14AA  0140               	movlb	0	; select bank0
  8795  14AB  085C               	movf	bme280_compensate_data@comp_data,w
  8796  14AC  3E08               	addlw	8
  8797  14AD  0086               	movwf	6
  8798  14AE  3001               	movlw	1	; select bank2/3
  8799  14AF  0087               	movwf	7
  8800  14B0  082E               	movf	?_compensate_humidity,w
  8801  14B1  3FC0               	movwi [0]fsr1
  8802  14B2  082F               	movf	?_compensate_humidity+1,w
  8803  14B3  3FC1               	movwi [1]fsr1
  8804  14B4  0830               	movf	?_compensate_humidity+2,w
  8805  14B5  3FC2               	movwi [2]fsr1
  8806  14B6  0831               	movf	?_compensate_humidity+3,w
  8807  14B7  3FC3               	movwi [3]fsr1
  8808  14B8  2CBB               	goto	l4130
  8809  14B9                     l126:	
  8810                           ;BME280_driver/bme280.c: 764:     else
  8811                           
  8812                           
  8813                           ;BME280_driver/bme280.c: 765:     {;BME280_driver/bme280.c: 766:         rslt = -1;
  8814  14B9  01DF               	clrf	bme280_compensate_data@rslt
  8815  14BA  03DF               	decf	bme280_compensate_data@rslt,f
  8816  14BB                     l4130:	
  8817                           
  8818                           ;BME280_driver/bme280.c: 769:     return rslt;
  8819  14BB  085F               	movf	bme280_compensate_data@rslt,w
  8820  14BC  0008               	return
  8821  14BD                     __end_of_bme280_compensate_data:	
  8822                           
  8823                           	psect	text6
  8824  095D                     __ptext6:	
  8825 ;; *************** function _compensate_temperature *****************
  8826 ;; Defined at:
  8827 ;;		line 1125 in file "BME280_driver/bme280.c"
  8828 ;; Parameters:    Size  Location     Type
  8829 ;;  uncomp_data     1    wreg     PTR const struct bme280_
  8830 ;;		 -> bme280_get_sensor_data@uncomp_data(12), 
  8831 ;;  calib_data      1   14[BANK0 ] PTR struct bme280_calib_
  8832 ;;		 -> EnvSensor(51), 
  8833 ;; Auto vars:     Size  Location     Type
  8834 ;;  uncomp_data     1   44[BANK0 ] PTR const struct bme280_
  8835 ;;		 -> bme280_get_sensor_data@uncomp_data(12), 
  8836 ;;  temperature     4   49[BANK0 ] long 
  8837 ;;  var2            4   45[BANK0 ] long 
  8838 ;;  var1            4   40[BANK0 ] long 
  8839 ;;  temperature_    4   36[BANK0 ] long 
  8840 ;;  temperature_    4    0        long 
  8841 ;; Return value:  Size  Location     Type
  8842 ;;                  4   14[BANK0 ] long 
  8843 ;; Registers used:
  8844 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8845 ;; Tracked objects:
  8846 ;;		On entry : 0/0
  8847 ;;		On exit  : 0/0
  8848 ;;		Unchanged: 0/0
  8849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8850 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8851 ;;      Locals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8852 ;;      Temps:          0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8853 ;;      Totals:         0      39       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8854 ;;Total ram usage:       39 bytes
  8855 ;; Hardware stack levels used:    1
  8856 ;; Hardware stack levels required when called:    4
  8857 ;; This function calls:
  8858 ;;		___aldiv
  8859 ;;		___lmul
  8860 ;; This function is called by:
  8861 ;;		_bme280_compensate_data
  8862 ;; This function uses a non-reentrant model
  8863 ;;
  8864                           
  8865                           
  8866                           ;psect for function _compensate_temperature
  8867  095D                     _compensate_temperature:	
  8868                           
  8869                           ;incstack = 0
  8870                           ; Regs used in _compensate_temperature: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
  8871                           ;compensate_temperature@uncomp_data stored from wreg
  8872  095D  0140               	movlb	0	; select bank0
  8873  095E  00CC               	movwf	compensate_temperature@uncomp_data
  8874                           
  8875                           ;BME280_driver/bme280.c: 1132:     int32_t temperature_max = 8500;
  8876  095F  3000               	movlw	0
  8877  0960  00C7               	movwf	compensate_temperature@temperature_max+3
  8878  0961  3000               	movlw	0
  8879  0962  00C6               	movwf	compensate_temperature@temperature_max+2
  8880  0963  3021               	movlw	33
  8881  0964  00C5               	movwf	compensate_temperature@temperature_max+1
  8882  0965  3034               	movlw	52
  8883  0966  00C4               	movwf	compensate_temperature@temperature_max
  8884                           
  8885                           ;BME280_driver/bme280.c: 1134:     var1 = (int32_t)((uncomp_data->temperature / 8) - ((i
      +                          nt32_t)calib_data->dig_T1 * 2));
  8886  0967  082E               	movf	compensate_temperature@calib_data,w
  8887  0968  0086               	movwf	6
  8888  0969  3001               	movlw	1	; select bank2/3
  8889  096A  0087               	movwf	7
  8890  096B  3F40               	moviw [0]fsr1
  8891  096C  00B2               	movwf	??_compensate_temperature
  8892  096D  3F41               	moviw [1]fsr1
  8893  096E  00B3               	movwf	??_compensate_temperature+1
  8894  096F  0832               	movf	??_compensate_temperature,w
  8895  0970  00B4               	movwf	??_compensate_temperature+2
  8896  0971  0833               	movf	??_compensate_temperature+1,w
  8897  0972  00B5               	movwf	??_compensate_temperature+3
  8898  0973  01B6               	clrf	??_compensate_temperature+4
  8899  0974  01B7               	clrf	??_compensate_temperature+5
  8900  0975  3001               	movlw	1
  8901  0976                     u3135:	
  8902  0976  35B4               	lslf	??_compensate_temperature+2,f
  8903  0977  0DB5               	rlf	??_compensate_temperature+3,f
  8904  0978  0DB6               	rlf	??_compensate_temperature+4,f
  8905  0979  0DB7               	rlf	??_compensate_temperature+5,f
  8906  097A  0B89               	decfsz	9,f
  8907  097B  2976               	goto	u3135
  8908  097C  084C               	movf	compensate_temperature@uncomp_data,w
  8909  097D  3E04               	addlw	4
  8910  097E  0086               	movwf	6
  8911  097F  0187               	clrf	7
  8912  0980  3F40               	moviw [0]fsr1
  8913  0981  00B8               	movwf	??_compensate_temperature+6
  8914  0982  3F41               	moviw [1]fsr1
  8915  0983  00B9               	movwf	??_compensate_temperature+7
  8916  0984  3F42               	moviw [2]fsr1
  8917  0985  00BA               	movwf	??_compensate_temperature+8
  8918  0986  3F43               	moviw [3]fsr1
  8919  0987  00BB               	movwf	??_compensate_temperature+9
  8920  0988  3003               	movlw	3
  8921  0989                     u3145:	
  8922  0989  36BB               	lsrf	??_compensate_temperature+9,f
  8923  098A  0CBA               	rrf	??_compensate_temperature+8,f
  8924  098B  0CB9               	rrf	??_compensate_temperature+7,f
  8925  098C  0CB8               	rrf	??_compensate_temperature+6,f
  8926  098D  0B89               	decfsz	9,f
  8927  098E  2989               	goto	u3145
  8928  098F  0834               	movf	??_compensate_temperature+2,w
  8929  0990  02B8               	subwf	??_compensate_temperature+6,f
  8930  0991  0835               	movf	??_compensate_temperature+3,w
  8931  0992  3BB9               	subwfb	??_compensate_temperature+7,f
  8932  0993  0836               	movf	??_compensate_temperature+4,w
  8933  0994  3BBA               	subwfb	??_compensate_temperature+8,f
  8934  0995  0837               	movf	??_compensate_temperature+5,w
  8935  0996  3BBB               	subwfb	??_compensate_temperature+9,f
  8936  0997  083B               	movf	??_compensate_temperature+9,w
  8937  0998  00CB               	movwf	compensate_temperature@var1+3
  8938  0999  083A               	movf	??_compensate_temperature+8,w
  8939  099A  00CA               	movwf	compensate_temperature@var1+2
  8940  099B  0839               	movf	??_compensate_temperature+7,w
  8941  099C  00C9               	movwf	compensate_temperature@var1+1
  8942  099D  0838               	movf	??_compensate_temperature+6,w
  8943  099E  00C8               	movwf	compensate_temperature@var1
  8944                           
  8945                           ;BME280_driver/bme280.c: 1135:     var1 = (var1 * ((int32_t)calib_data->dig_T2)) / 2048;
  8946  099F  3000               	movlw	0
  8947  09A0  00A3               	movwf	___aldiv@divisor+3
  8948  09A1  3000               	movlw	0
  8949  09A2  00A2               	movwf	___aldiv@divisor+2
  8950  09A3  3008               	movlw	8
  8951  09A4  00A1               	movwf	___aldiv@divisor+1
  8952  09A5  3000               	movlw	0
  8953  09A6  00A0               	movwf	___aldiv@divisor
  8954  09A7  082E               	movf	compensate_temperature@calib_data,w
  8955  09A8  3E02               	addlw	2
  8956  09A9  0086               	movwf	6
  8957  09AA  3001               	movlw	1	; select bank2/3
  8958  09AB  0087               	movwf	7
  8959  09AC  3F40               	moviw [0]fsr1
  8960  09AD  00B2               	movwf	??_compensate_temperature
  8961  09AE  3F41               	moviw [1]fsr1
  8962  09AF  00B3               	movwf	??_compensate_temperature+1
  8963  09B0  0832               	movf	??_compensate_temperature,w
  8964  09B1  00F0               	movwf	___lmul@multiplier
  8965  09B2  0833               	movf	??_compensate_temperature+1,w
  8966  09B3  00F1               	movwf	___lmul@multiplier+1
  8967  09B4  0D89               	rlf	9,f
  8968  09B5  3B89               	subwfb	9,f
  8969  09B6  0989               	comf	9,f
  8970  09B7  00F2               	movwf	___lmul@multiplier+2
  8971  09B8  00F3               	movwf	___lmul@multiplier+3
  8972  09B9  084B               	movf	compensate_temperature@var1+3,w
  8973  09BA  00F7               	movwf	___lmul@multiplicand+3
  8974  09BB  084A               	movf	compensate_temperature@var1+2,w
  8975  09BC  00F6               	movwf	___lmul@multiplicand+2
  8976  09BD  0849               	movf	compensate_temperature@var1+1,w
  8977  09BE  00F5               	movwf	___lmul@multiplicand+1
  8978  09BF  0848               	movf	compensate_temperature@var1,w
  8979  09C0  00F4               	movwf	___lmul@multiplicand
  8980  09C1  319A  2221  3189   	fcall	___lmul
  8981  09C4  0873               	movf	?___lmul+3,w
  8982  09C5  0140               	movlb	0	; select bank0
  8983  09C6  00A7               	movwf	___aldiv@dividend+3
  8984  09C7  0872               	movf	?___lmul+2,w
  8985  09C8  00A6               	movwf	___aldiv@dividend+2
  8986  09C9  0871               	movf	?___lmul+1,w
  8987  09CA  00A5               	movwf	___aldiv@dividend+1
  8988  09CB  0870               	movf	?___lmul,w
  8989  09CC  00A4               	movwf	___aldiv@dividend
  8990  09CD  3194  24BD  3189   	fcall	___aldiv
  8991  09D0  0140               	movlb	0	; select bank0
  8992  09D1  0823               	movf	?___aldiv+3,w
  8993  09D2  00CB               	movwf	compensate_temperature@var1+3
  8994  09D3  0822               	movf	?___aldiv+2,w
  8995  09D4  00CA               	movwf	compensate_temperature@var1+2
  8996  09D5  0821               	movf	?___aldiv+1,w
  8997  09D6  00C9               	movwf	compensate_temperature@var1+1
  8998  09D7  0820               	movf	?___aldiv,w
  8999  09D8  00C8               	movwf	compensate_temperature@var1
  9000                           
  9001                           ;BME280_driver/bme280.c: 1136:     var2 = (int32_t)((uncomp_data->temperature / 16) - ((
      +                          int32_t)calib_data->dig_T1));
  9002  09D9  082E               	movf	compensate_temperature@calib_data,w
  9003  09DA  0086               	movwf	6
  9004  09DB  3001               	movlw	1	; select bank2/3
  9005  09DC  0087               	movwf	7
  9006  09DD  3F40               	moviw [0]fsr1
  9007  09DE  00B2               	movwf	??_compensate_temperature
  9008  09DF  3F41               	moviw [1]fsr1
  9009  09E0  00B3               	movwf	??_compensate_temperature+1
  9010  09E1  0832               	movf	??_compensate_temperature,w
  9011  09E2  00B4               	movwf	??_compensate_temperature+2
  9012  09E3  0833               	movf	??_compensate_temperature+1,w
  9013  09E4  00B5               	movwf	??_compensate_temperature+3
  9014  09E5  01B6               	clrf	??_compensate_temperature+4
  9015  09E6  01B7               	clrf	??_compensate_temperature+5
  9016  09E7  084C               	movf	compensate_temperature@uncomp_data,w
  9017  09E8  3E04               	addlw	4
  9018  09E9  0086               	movwf	6
  9019  09EA  0187               	clrf	7
  9020  09EB  3F40               	moviw [0]fsr1
  9021  09EC  00B8               	movwf	??_compensate_temperature+6
  9022  09ED  3F41               	moviw [1]fsr1
  9023  09EE  00B9               	movwf	??_compensate_temperature+7
  9024  09EF  3F42               	moviw [2]fsr1
  9025  09F0  00BA               	movwf	??_compensate_temperature+8
  9026  09F1  3F43               	moviw [3]fsr1
  9027  09F2  00BB               	movwf	??_compensate_temperature+9
  9028  09F3  3004               	movlw	4
  9029  09F4                     u3155:	
  9030  09F4  36BB               	lsrf	??_compensate_temperature+9,f
  9031  09F5  0CBA               	rrf	??_compensate_temperature+8,f
  9032  09F6  0CB9               	rrf	??_compensate_temperature+7,f
  9033  09F7  0CB8               	rrf	??_compensate_temperature+6,f
  9034  09F8  0B89               	decfsz	9,f
  9035  09F9  29F4               	goto	u3155
  9036  09FA  0834               	movf	??_compensate_temperature+2,w
  9037  09FB  02B8               	subwf	??_compensate_temperature+6,f
  9038  09FC  0835               	movf	??_compensate_temperature+3,w
  9039  09FD  3BB9               	subwfb	??_compensate_temperature+7,f
  9040  09FE  0836               	movf	??_compensate_temperature+4,w
  9041  09FF  3BBA               	subwfb	??_compensate_temperature+8,f
  9042  0A00  0837               	movf	??_compensate_temperature+5,w
  9043  0A01  3BBB               	subwfb	??_compensate_temperature+9,f
  9044  0A02  083B               	movf	??_compensate_temperature+9,w
  9045  0A03  00D0               	movwf	compensate_temperature@var2+3
  9046  0A04  083A               	movf	??_compensate_temperature+8,w
  9047  0A05  00CF               	movwf	compensate_temperature@var2+2
  9048  0A06  0839               	movf	??_compensate_temperature+7,w
  9049  0A07  00CE               	movwf	compensate_temperature@var2+1
  9050  0A08  0838               	movf	??_compensate_temperature+6,w
  9051  0A09  00CD               	movwf	compensate_temperature@var2
  9052                           
  9053                           ;BME280_driver/bme280.c: 1137:     var2 = (((var2 * var2) / 4096) * ((int32_t)calib_data
      +                          ->dig_T3)) / 16384;
  9054  0A0A  3000               	movlw	0
  9055  0A0B  00A3               	movwf	___aldiv@divisor+3
  9056  0A0C  3000               	movlw	0
  9057  0A0D  00A2               	movwf	___aldiv@divisor+2
  9058  0A0E  3010               	movlw	16
  9059  0A0F  00A1               	movwf	___aldiv@divisor+1
  9060  0A10  3000               	movlw	0
  9061  0A11  00A0               	movwf	___aldiv@divisor
  9062  0A12  0850               	movf	compensate_temperature@var2+3,w
  9063  0A13  00F3               	movwf	___lmul@multiplier+3
  9064  0A14  084F               	movf	compensate_temperature@var2+2,w
  9065  0A15  00F2               	movwf	___lmul@multiplier+2
  9066  0A16  084E               	movf	compensate_temperature@var2+1,w
  9067  0A17  00F1               	movwf	___lmul@multiplier+1
  9068  0A18  084D               	movf	compensate_temperature@var2,w
  9069  0A19  00F0               	movwf	___lmul@multiplier
  9070  0A1A  0850               	movf	compensate_temperature@var2+3,w
  9071  0A1B  00F7               	movwf	___lmul@multiplicand+3
  9072  0A1C  084F               	movf	compensate_temperature@var2+2,w
  9073  0A1D  00F6               	movwf	___lmul@multiplicand+2
  9074  0A1E  084E               	movf	compensate_temperature@var2+1,w
  9075  0A1F  00F5               	movwf	___lmul@multiplicand+1
  9076  0A20  084D               	movf	compensate_temperature@var2,w
  9077  0A21  00F4               	movwf	___lmul@multiplicand
  9078  0A22  319A  2221  3189   	fcall	___lmul
  9079  0A25  0873               	movf	?___lmul+3,w
  9080  0A26  0140               	movlb	0	; select bank0
  9081  0A27  00A7               	movwf	___aldiv@dividend+3
  9082  0A28  0872               	movf	?___lmul+2,w
  9083  0A29  00A6               	movwf	___aldiv@dividend+2
  9084  0A2A  0871               	movf	?___lmul+1,w
  9085  0A2B  00A5               	movwf	___aldiv@dividend+1
  9086  0A2C  0870               	movf	?___lmul,w
  9087  0A2D  00A4               	movwf	___aldiv@dividend
  9088  0A2E  3194  24BD  3189   	fcall	___aldiv
  9089  0A31  0140               	movlb	0	; select bank0
  9090  0A32  0823               	movf	?___aldiv+3,w
  9091  0A33  00BF               	movwf	_compensate_temperature$2715+3
  9092  0A34  0822               	movf	?___aldiv+2,w
  9093  0A35  00BE               	movwf	_compensate_temperature$2715+2
  9094  0A36  0821               	movf	?___aldiv+1,w
  9095  0A37  00BD               	movwf	_compensate_temperature$2715+1
  9096  0A38  0820               	movf	?___aldiv,w
  9097  0A39  00BC               	movwf	_compensate_temperature$2715
  9098                           
  9099                           ;BME280_driver/bme280.c: 1137:     var2 = (((var2 * var2) / 4096) * ((int32_t)calib_data
      +                          ->dig_T3)) / 16384;
  9100  0A3A  3000               	movlw	0
  9101  0A3B  00A3               	movwf	___aldiv@divisor+3
  9102  0A3C  3000               	movlw	0
  9103  0A3D  00A2               	movwf	___aldiv@divisor+2
  9104  0A3E  3040               	movlw	64
  9105  0A3F  00A1               	movwf	___aldiv@divisor+1
  9106  0A40  3000               	movlw	0
  9107  0A41  00A0               	movwf	___aldiv@divisor
  9108  0A42  083F               	movf	_compensate_temperature$2715+3,w
  9109  0A43  00F3               	movwf	___lmul@multiplier+3
  9110  0A44  083E               	movf	_compensate_temperature$2715+2,w
  9111  0A45  00F2               	movwf	___lmul@multiplier+2
  9112  0A46  083D               	movf	_compensate_temperature$2715+1,w
  9113  0A47  00F1               	movwf	___lmul@multiplier+1
  9114  0A48  083C               	movf	_compensate_temperature$2715,w
  9115  0A49  00F0               	movwf	___lmul@multiplier
  9116  0A4A  082E               	movf	compensate_temperature@calib_data,w
  9117  0A4B  3E04               	addlw	4
  9118  0A4C  0086               	movwf	6
  9119  0A4D  3001               	movlw	1	; select bank2/3
  9120  0A4E  0087               	movwf	7
  9121  0A4F  3F40               	moviw [0]fsr1
  9122  0A50  00B2               	movwf	??_compensate_temperature
  9123  0A51  3F41               	moviw [1]fsr1
  9124  0A52  00B3               	movwf	??_compensate_temperature+1
  9125  0A53  0832               	movf	??_compensate_temperature,w
  9126  0A54  00F4               	movwf	___lmul@multiplicand
  9127  0A55  0833               	movf	??_compensate_temperature+1,w
  9128  0A56  00F5               	movwf	___lmul@multiplicand+1
  9129  0A57  0D89               	rlf	9,f
  9130  0A58  3B89               	subwfb	9,f
  9131  0A59  0989               	comf	9,f
  9132  0A5A  00F6               	movwf	___lmul@multiplicand+2
  9133  0A5B  00F7               	movwf	___lmul@multiplicand+3
  9134  0A5C  319A  2221  3189   	fcall	___lmul
  9135  0A5F  0873               	movf	?___lmul+3,w
  9136  0A60  0140               	movlb	0	; select bank0
  9137  0A61  00A7               	movwf	___aldiv@dividend+3
  9138  0A62  0872               	movf	?___lmul+2,w
  9139  0A63  00A6               	movwf	___aldiv@dividend+2
  9140  0A64  0871               	movf	?___lmul+1,w
  9141  0A65  00A5               	movwf	___aldiv@dividend+1
  9142  0A66  0870               	movf	?___lmul,w
  9143  0A67  00A4               	movwf	___aldiv@dividend
  9144  0A68  3194  24BD  3189   	fcall	___aldiv
  9145  0A6B  0140               	movlb	0	; select bank0
  9146  0A6C  0823               	movf	?___aldiv+3,w
  9147  0A6D  00D0               	movwf	compensate_temperature@var2+3
  9148  0A6E  0822               	movf	?___aldiv+2,w
  9149  0A6F  00CF               	movwf	compensate_temperature@var2+2
  9150  0A70  0821               	movf	?___aldiv+1,w
  9151  0A71  00CE               	movwf	compensate_temperature@var2+1
  9152  0A72  0820               	movf	?___aldiv,w
  9153  0A73  00CD               	movwf	compensate_temperature@var2
  9154                           
  9155                           ;BME280_driver/bme280.c: 1138:     calib_data->t_fine = var1 + var2;
  9156  0A74  0848               	movf	compensate_temperature@var1,w
  9157  0A75  074D               	addwf	compensate_temperature@var2,w
  9158  0A76  00B2               	movwf	??_compensate_temperature
  9159  0A77  0849               	movf	compensate_temperature@var1+1,w
  9160  0A78  3D4E               	addwfc	compensate_temperature@var2+1,w
  9161  0A79  00B3               	movwf	??_compensate_temperature+1
  9162  0A7A  084A               	movf	compensate_temperature@var1+2,w
  9163  0A7B  3D4F               	addwfc	compensate_temperature@var2+2,w
  9164  0A7C  00B4               	movwf	??_compensate_temperature+2
  9165  0A7D  084B               	movf	compensate_temperature@var1+3,w
  9166  0A7E  3D50               	addwfc	compensate_temperature@var2+3,w
  9167  0A7F  00B5               	movwf	??_compensate_temperature+3
  9168  0A80  082E               	movf	compensate_temperature@calib_data,w
  9169  0A81  3E21               	addlw	33
  9170  0A82  0086               	movwf	6
  9171  0A83  3001               	movlw	1	; select bank2/3
  9172  0A84  0087               	movwf	7
  9173  0A85  0832               	movf	??_compensate_temperature,w
  9174  0A86  3FC0               	movwi [0]fsr1
  9175  0A87  0833               	movf	??_compensate_temperature+1,w
  9176  0A88  3FC1               	movwi [1]fsr1
  9177  0A89  0834               	movf	??_compensate_temperature+2,w
  9178  0A8A  3FC2               	movwi [2]fsr1
  9179  0A8B  0835               	movf	??_compensate_temperature+3,w
  9180  0A8C  3FC3               	movwi [3]fsr1
  9181                           
  9182                           ;BME280_driver/bme280.c: 1139:     temperature = (calib_data->t_fine * 5 + 128) / 256;
  9183  0A8D  3000               	movlw	0
  9184  0A8E  00A3               	movwf	___aldiv@divisor+3
  9185  0A8F  3000               	movlw	0
  9186  0A90  00A2               	movwf	___aldiv@divisor+2
  9187  0A91  3001               	movlw	1
  9188  0A92  00A1               	movwf	___aldiv@divisor+1
  9189  0A93  3000               	movlw	0
  9190  0A94  00A0               	movwf	___aldiv@divisor
  9191  0A95  3080               	movlw	128
  9192  0A96  00B2               	movwf	??_compensate_temperature
  9193  0A97  3000               	movlw	0
  9194  0A98  00B3               	movwf	??_compensate_temperature+1
  9195  0A99  3000               	movlw	0
  9196  0A9A  00B4               	movwf	??_compensate_temperature+2
  9197  0A9B  3000               	movlw	0
  9198  0A9C  00B5               	movwf	??_compensate_temperature+3
  9199  0A9D  082E               	movf	compensate_temperature@calib_data,w
  9200  0A9E  3E21               	addlw	33
  9201  0A9F  0086               	movwf	6
  9202  0AA0  3001               	movlw	1	; select bank2/3
  9203  0AA1  0087               	movwf	7
  9204  0AA2  3F40               	moviw [0]fsr1
  9205  0AA3  00F0               	movwf	___lmul@multiplier
  9206  0AA4  3F41               	moviw [1]fsr1
  9207  0AA5  00F1               	movwf	___lmul@multiplier+1
  9208  0AA6  3F42               	moviw [2]fsr1
  9209  0AA7  00F2               	movwf	___lmul@multiplier+2
  9210  0AA8  3F43               	moviw [3]fsr1
  9211  0AA9  00F3               	movwf	___lmul@multiplier+3
  9212  0AAA  3000               	movlw	0
  9213  0AAB  00F7               	movwf	___lmul@multiplicand+3
  9214  0AAC  3000               	movlw	0
  9215  0AAD  00F6               	movwf	___lmul@multiplicand+2
  9216  0AAE  3000               	movlw	0
  9217  0AAF  00F5               	movwf	___lmul@multiplicand+1
  9218  0AB0  3005               	movlw	5
  9219  0AB1  00F4               	movwf	___lmul@multiplicand
  9220  0AB2  319A  2221  3189   	fcall	___lmul
  9221  0AB5  0870               	movf	?___lmul,w
  9222  0AB6  0140               	movlb	0	; select bank0
  9223  0AB7  07B2               	addwf	??_compensate_temperature,f
  9224  0AB8  0871               	movf	?___lmul+1,w
  9225  0AB9  3DB3               	addwfc	??_compensate_temperature+1,f
  9226  0ABA  0872               	movf	?___lmul+2,w
  9227  0ABB  3DB4               	addwfc	??_compensate_temperature+2,f
  9228  0ABC  0873               	movf	?___lmul+3,w
  9229  0ABD  3DB5               	addwfc	??_compensate_temperature+3,f
  9230  0ABE  0835               	movf	??_compensate_temperature+3,w
  9231  0ABF  00A7               	movwf	___aldiv@dividend+3
  9232  0AC0  0834               	movf	??_compensate_temperature+2,w
  9233  0AC1  00A6               	movwf	___aldiv@dividend+2
  9234  0AC2  0833               	movf	??_compensate_temperature+1,w
  9235  0AC3  00A5               	movwf	___aldiv@dividend+1
  9236  0AC4  0832               	movf	??_compensate_temperature,w
  9237  0AC5  00A4               	movwf	___aldiv@dividend
  9238  0AC6  3194  24BD  3189   	fcall	___aldiv
  9239  0AC9  0140               	movlb	0	; select bank0
  9240  0ACA  0823               	movf	?___aldiv+3,w
  9241  0ACB  00D4               	movwf	compensate_temperature@temperature+3
  9242  0ACC  0822               	movf	?___aldiv+2,w
  9243  0ACD  00D3               	movwf	compensate_temperature@temperature+2
  9244  0ACE  0821               	movf	?___aldiv+1,w
  9245  0ACF  00D2               	movwf	compensate_temperature@temperature+1
  9246  0AD0  0820               	movf	?___aldiv,w
  9247  0AD1  00D1               	movwf	compensate_temperature@temperature
  9248                           
  9249                           ;BME280_driver/bme280.c: 1140:     if (temperature < temperature_min)
  9250  0AD2  1FD4               	btfss	compensate_temperature@temperature+3,7
  9251  0AD3  2AE6               	goto	l3782
  9252  0AD4  3060               	movlw	96
  9253  0AD5  0251               	subwf	compensate_temperature@temperature,w
  9254  0AD6  30F0               	movlw	240
  9255  0AD7  3B52               	subwfb	compensate_temperature@temperature+1,w
  9256  0AD8  30FF               	movlw	255
  9257  0AD9  3B53               	subwfb	compensate_temperature@temperature+2,w
  9258  0ADA  30FF               	movlw	255
  9259  0ADB  3B54               	subwfb	compensate_temperature@temperature+3,w
  9260  0ADC  1803               	btfsc	3,0
  9261  0ADD  2AE6               	goto	l3782
  9262                           
  9263                           ;BME280_driver/bme280.c: 1141:     {;BME280_driver/bme280.c: 1142:         temperature =
      +                           temperature_min;
  9264  0ADE  30FF               	movlw	255
  9265  0ADF  00D4               	movwf	compensate_temperature@temperature+3
  9266  0AE0  30FF               	movlw	255
  9267  0AE1  00D3               	movwf	compensate_temperature@temperature+2
  9268  0AE2  30F0               	movlw	240
  9269  0AE3  00D2               	movwf	compensate_temperature@temperature+1
  9270  0AE4  3060               	movlw	96
  9271  0AE5  2AFB               	goto	L2
  9272  0AE6                     l3782:	
  9273                           ;BME280_driver/bme280.c: 1143:     }
  9274                           
  9275  0AE6  1BD4               	btfsc	compensate_temperature@temperature+3,7
  9276  0AE7  2AFC               	goto	l185
  9277  0AE8  0854               	movf	compensate_temperature@temperature+3,w
  9278  0AE9  1D03               	btfss	3,2
  9279  0AEA  2AF4               	goto	l3784
  9280  0AEB  0853               	movf	compensate_temperature@temperature+2,w
  9281  0AEC  1D03               	btfss	3,2
  9282  0AED  2AF4               	goto	l3784
  9283  0AEE  3035               	movlw	53
  9284  0AEF  0251               	subwf	compensate_temperature@temperature,w
  9285  0AF0  3021               	movlw	33
  9286  0AF1  3B52               	subwfb	compensate_temperature@temperature+1,w
  9287  0AF2  1C03               	btfss	3,0
  9288  0AF3  2AFC               	goto	l185
  9289  0AF4                     l3784:	
  9290                           
  9291                           ;BME280_driver/bme280.c: 1145:     {;BME280_driver/bme280.c: 1146:         temperature =
      +                           temperature_max;
  9292  0AF4  3000               	movlw	0
  9293  0AF5  00D4               	movwf	compensate_temperature@temperature+3
  9294  0AF6  3000               	movlw	0
  9295  0AF7  00D3               	movwf	compensate_temperature@temperature+2
  9296  0AF8  3021               	movlw	33
  9297  0AF9  00D2               	movwf	compensate_temperature@temperature+1
  9298  0AFA  3034               	movlw	52
  9299  0AFB                     L2:	
  9300  0AFB  00D1               	movwf	compensate_temperature@temperature
  9301  0AFC                     l185:	
  9302                           
  9303                           ;BME280_driver/bme280.c: 1149:     return temperature;
  9304  0AFC  0854               	movf	compensate_temperature@temperature+3,w
  9305  0AFD  00B1               	movwf	?_compensate_temperature+3
  9306  0AFE  0853               	movf	compensate_temperature@temperature+2,w
  9307  0AFF  00B0               	movwf	?_compensate_temperature+2
  9308  0B00  0852               	movf	compensate_temperature@temperature+1,w
  9309  0B01  00AF               	movwf	?_compensate_temperature+1
  9310  0B02  0851               	movf	compensate_temperature@temperature,w
  9311  0B03  00AE               	movwf	?_compensate_temperature
  9312  0B04  0008               	return
  9313  0B05                     __end_of_compensate_temperature:	
  9314                           
  9315                           	psect	text7
  9316  0054                     __ptext7:	
  9317 ;; *************** function _compensate_pressure *****************
  9318 ;; Defined at:
  9319 ;;		line 1208 in file "BME280_driver/bme280.c"
  9320 ;; Parameters:    Size  Location     Type
  9321 ;;  uncomp_data     1    wreg     PTR const struct bme280_
  9322 ;;		 -> bme280_get_sensor_data@uncomp_data(12), 
  9323 ;;  calib_data      1   14[BANK0 ] PTR const struct bme280_
  9324 ;;		 -> EnvSensor(51), 
  9325 ;; Auto vars:     Size  Location     Type
  9326 ;;  uncomp_data     1   20[BANK1 ] PTR const struct bme280_
  9327 ;;		 -> bme280_get_sensor_data@uncomp_data(12), 
  9328 ;;  var1            4   41[BANK1 ] long 
  9329 ;;  pressure        4   37[BANK1 ] unsigned long 
  9330 ;;  var2            4   33[BANK1 ] long 
  9331 ;;  pressure_min    4    0        unsigned long 
  9332 ;;  pressure_max    4   21[BANK1 ] unsigned long 
  9333 ;;  var5            4    8[BANK1 ] unsigned long 
  9334 ;;  var4            4    4[BANK1 ] long 
  9335 ;;  var3            4    0[BANK1 ] long 
  9336 ;; Return value:  Size  Location     Type
  9337 ;;                  4   14[BANK0 ] unsigned long 
  9338 ;; Registers used:
  9339 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9340 ;; Tracked objects:
  9341 ;;		On entry : 0/0
  9342 ;;		On exit  : 0/0
  9343 ;;		Unchanged: 0/0
  9344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9345 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9346 ;;      Locals:         0       0      45       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9347 ;;      Temps:          0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9348 ;;      Totals:         0      22      45       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9349 ;;Total ram usage:       67 bytes
  9350 ;; Hardware stack levels used:    1
  9351 ;; Hardware stack levels required when called:    4
  9352 ;; This function calls:
  9353 ;;		___aldiv
  9354 ;;		___lldiv
  9355 ;;		___lmul
  9356 ;; This function is called by:
  9357 ;;		_bme280_compensate_data
  9358 ;; This function uses a non-reentrant model
  9359 ;;
  9360                           
  9361                           
  9362                           ;psect for function _compensate_pressure
  9363  0054                     _compensate_pressure:	
  9364                           
  9365                           ;incstack = 0
  9366                           ; Regs used in _compensate_pressure: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9367                           ;compensate_pressure@uncomp_data stored from wreg
  9368  0054  0141               	movlb	1	; select bank1
  9369  0055  00B4               	movwf	compensate_pressure@uncomp_data^(0+128)
  9370                           
  9371                           ;BME280_driver/bme280.c: 1218:     uint32_t pressure_max = 110000;
  9372  0056  3000               	movlw	0
  9373  0057  00B8               	movwf	(compensate_pressure@pressure_max+3)^(0+128)
  9374  0058  3001               	movlw	1
  9375  0059  00B7               	movwf	(compensate_pressure@pressure_max+2)^(0+128)
  9376  005A  30AD               	movlw	173
  9377  005B  00B6               	movwf	(compensate_pressure@pressure_max+1)^(0+128)
  9378  005C  30B0               	movlw	176
  9379  005D  00B5               	movwf	compensate_pressure@pressure_max^(0+128)
  9380                           
  9381                           ;BME280_driver/bme280.c: 1220:     var1 = (((int32_t)calib_data->t_fine) / 2) - (int32_t
      +                          )64000;
  9382  005E  3000               	movlw	0
  9383  005F  0140               	movlb	0	; select bank0
  9384  0060  00A3               	movwf	___aldiv@divisor+3
  9385  0061  3000               	movlw	0
  9386  0062  00A2               	movwf	___aldiv@divisor+2
  9387  0063  3000               	movlw	0
  9388  0064  00A1               	movwf	___aldiv@divisor+1
  9389  0065  3002               	movlw	2
  9390  0066  00A0               	movwf	___aldiv@divisor
  9391  0067  082E               	movf	compensate_pressure@calib_data,w
  9392  0068  3E21               	addlw	33
  9393  0069  0086               	movwf	6
  9394  006A  3001               	movlw	1	; select bank2/3
  9395  006B  0087               	movwf	7
  9396  006C  3F40               	moviw [0]fsr1
  9397  006D  00A4               	movwf	___aldiv@dividend
  9398  006E  3F41               	moviw [1]fsr1
  9399  006F  00A5               	movwf	___aldiv@dividend+1
  9400  0070  3F42               	moviw [2]fsr1
  9401  0071  00A6               	movwf	___aldiv@dividend+2
  9402  0072  3F43               	moviw [3]fsr1
  9403  0073  00A7               	movwf	___aldiv@dividend+3
  9404  0074  3194  24BD  3180   	fcall	___aldiv
  9405  0077  3000               	movlw	0
  9406  0078  0140               	movlb	0	; select bank0
  9407  0079  0720               	addwf	?___aldiv,w
  9408  007A  0141               	movlb	1	; select bank1
  9409  007B  00C9               	movwf	compensate_pressure@var1^(0+128)
  9410  007C  3006               	movlw	6
  9411  007D  0140               	movlb	0	; select bank0
  9412  007E  3D21               	addwfc	?___aldiv+1,w
  9413  007F  0141               	movlb	1	; select bank1
  9414  0080  00CA               	movwf	(compensate_pressure@var1+1)^(0+128)
  9415  0081  30FF               	movlw	255
  9416  0082  0140               	movlb	0	; select bank0
  9417  0083  3D22               	addwfc	?___aldiv+2,w
  9418  0084  0141               	movlb	1	; select bank1
  9419  0085  00CB               	movwf	(compensate_pressure@var1+2)^(0+128)
  9420  0086  30FF               	movlw	255
  9421  0087  0140               	movlb	0	; select bank0
  9422  0088  3D23               	addwfc	?___aldiv+3,w
  9423  0089  0141               	movlb	1	; select bank1
  9424  008A  00CC               	movwf	(compensate_pressure@var1+3)^(0+128)
  9425                           
  9426                           ;BME280_driver/bme280.c: 1221:     var2 = (((var1 / 4) * (var1 / 4)) / 2048) * ((int32_t
      +                          )calib_data->dig_P6);
  9427  008B  3000               	movlw	0
  9428  008C  0140               	movlb	0	; select bank0
  9429  008D  00A3               	movwf	___aldiv@divisor+3
  9430  008E  3000               	movlw	0
  9431  008F  00A2               	movwf	___aldiv@divisor+2
  9432  0090  3000               	movlw	0
  9433  0091  00A1               	movwf	___aldiv@divisor+1
  9434  0092  3004               	movlw	4
  9435  0093  00A0               	movwf	___aldiv@divisor
  9436  0094  0141               	movlb	1	; select bank1
  9437  0095  084C               	movf	(compensate_pressure@var1+3)^(0+128),w
  9438  0096  0140               	movlb	0	; select bank0
  9439  0097  00A7               	movwf	___aldiv@dividend+3
  9440  0098  0141               	movlb	1	; select bank1
  9441  0099  084B               	movf	(compensate_pressure@var1+2)^(0+128),w
  9442  009A  0140               	movlb	0	; select bank0
  9443  009B  00A6               	movwf	___aldiv@dividend+2
  9444  009C  0141               	movlb	1	; select bank1
  9445  009D  084A               	movf	(compensate_pressure@var1+1)^(0+128),w
  9446  009E  0140               	movlb	0	; select bank0
  9447  009F  00A5               	movwf	___aldiv@dividend+1
  9448  00A0  0141               	movlb	1	; select bank1
  9449  00A1  0849               	movf	compensate_pressure@var1^(0+128),w
  9450  00A2  0140               	movlb	0	; select bank0
  9451  00A3  00A4               	movwf	___aldiv@dividend
  9452  00A4  3194  24BD  3180   	fcall	___aldiv
  9453  00A7  0140               	movlb	0	; select bank0
  9454  00A8  0823               	movf	?___aldiv+3,w
  9455  00A9  00F3               	movwf	___lmul@multiplier+3
  9456  00AA  0822               	movf	?___aldiv+2,w
  9457  00AB  00F2               	movwf	___lmul@multiplier+2
  9458  00AC  0821               	movf	?___aldiv+1,w
  9459  00AD  00F1               	movwf	___lmul@multiplier+1
  9460  00AE  0820               	movf	?___aldiv,w
  9461  00AF  00F0               	movwf	___lmul@multiplier
  9462  00B0  3000               	movlw	0
  9463  00B1  00A3               	movwf	___aldiv@divisor+3
  9464  00B2  3000               	movlw	0
  9465  00B3  00A2               	movwf	___aldiv@divisor+2
  9466  00B4  3000               	movlw	0
  9467  00B5  00A1               	movwf	___aldiv@divisor+1
  9468  00B6  3004               	movlw	4
  9469  00B7  00A0               	movwf	___aldiv@divisor
  9470  00B8  0141               	movlb	1	; select bank1
  9471  00B9  084C               	movf	(compensate_pressure@var1+3)^(0+128),w
  9472  00BA  0140               	movlb	0	; select bank0
  9473  00BB  00A7               	movwf	___aldiv@dividend+3
  9474  00BC  0141               	movlb	1	; select bank1
  9475  00BD  084B               	movf	(compensate_pressure@var1+2)^(0+128),w
  9476  00BE  0140               	movlb	0	; select bank0
  9477  00BF  00A6               	movwf	___aldiv@dividend+2
  9478  00C0  0141               	movlb	1	; select bank1
  9479  00C1  084A               	movf	(compensate_pressure@var1+1)^(0+128),w
  9480  00C2  0140               	movlb	0	; select bank0
  9481  00C3  00A5               	movwf	___aldiv@dividend+1
  9482  00C4  0141               	movlb	1	; select bank1
  9483  00C5  0849               	movf	compensate_pressure@var1^(0+128),w
  9484  00C6  0140               	movlb	0	; select bank0
  9485  00C7  00A4               	movwf	___aldiv@dividend
  9486  00C8  3194  24BD  3180   	fcall	___aldiv
  9487  00CB  0140               	movlb	0	; select bank0
  9488  00CC  0823               	movf	?___aldiv+3,w
  9489  00CD  00F7               	movwf	___lmul@multiplicand+3
  9490  00CE  0822               	movf	?___aldiv+2,w
  9491  00CF  00F6               	movwf	___lmul@multiplicand+2
  9492  00D0  0821               	movf	?___aldiv+1,w
  9493  00D1  00F5               	movwf	___lmul@multiplicand+1
  9494  00D2  0820               	movf	?___aldiv,w
  9495  00D3  00F4               	movwf	___lmul@multiplicand
  9496  00D4  319A  2221  3180   	fcall	___lmul
  9497  00D7  0873               	movf	?___lmul+3,w
  9498  00D8  0141               	movlb	1	; select bank1
  9499  00D9  00BC               	movwf	(_compensate_pressure$2716+3)^(0+128)
  9500  00DA  0872               	movf	?___lmul+2,w
  9501  00DB  00BB               	movwf	(_compensate_pressure$2716+2)^(0+128)
  9502  00DC  0871               	movf	?___lmul+1,w
  9503  00DD  00BA               	movwf	(_compensate_pressure$2716+1)^(0+128)
  9504  00DE  0870               	movf	?___lmul,w
  9505  00DF  00B9               	movwf	_compensate_pressure$2716^(0+128)
  9506                           
  9507                           ;BME280_driver/bme280.c: 1221:     var2 = (((var1 / 4) * (var1 / 4)) / 2048) * ((int32_t
      +                          )calib_data->dig_P6);
  9508  00E0  3000               	movlw	0
  9509  00E1  0140               	movlb	0	; select bank0
  9510  00E2  00A3               	movwf	___aldiv@divisor+3
  9511  00E3  3000               	movlw	0
  9512  00E4  00A2               	movwf	___aldiv@divisor+2
  9513  00E5  3008               	movlw	8
  9514  00E6  00A1               	movwf	___aldiv@divisor+1
  9515  00E7  3000               	movlw	0
  9516  00E8  00A0               	movwf	___aldiv@divisor
  9517  00E9  0141               	movlb	1	; select bank1
  9518  00EA  083C               	movf	(_compensate_pressure$2716+3)^(0+128),w
  9519  00EB  0140               	movlb	0	; select bank0
  9520  00EC  00A7               	movwf	___aldiv@dividend+3
  9521  00ED  0141               	movlb	1	; select bank1
  9522  00EE  083B               	movf	(_compensate_pressure$2716+2)^(0+128),w
  9523  00EF  0140               	movlb	0	; select bank0
  9524  00F0  00A6               	movwf	___aldiv@dividend+2
  9525  00F1  0141               	movlb	1	; select bank1
  9526  00F2  083A               	movf	(_compensate_pressure$2716+1)^(0+128),w
  9527  00F3  0140               	movlb	0	; select bank0
  9528  00F4  00A5               	movwf	___aldiv@dividend+1
  9529  00F5  0141               	movlb	1	; select bank1
  9530  00F6  0839               	movf	_compensate_pressure$2716^(0+128),w
  9531  00F7  0140               	movlb	0	; select bank0
  9532  00F8  00A4               	movwf	___aldiv@dividend
  9533  00F9  3194  24BD  3180   	fcall	___aldiv
  9534  00FC  0140               	movlb	0	; select bank0
  9535  00FD  0823               	movf	?___aldiv+3,w
  9536  00FE  00F3               	movwf	___lmul@multiplier+3
  9537  00FF  0822               	movf	?___aldiv+2,w
  9538  0100  00F2               	movwf	___lmul@multiplier+2
  9539  0101  0821               	movf	?___aldiv+1,w
  9540  0102  00F1               	movwf	___lmul@multiplier+1
  9541  0103  0820               	movf	?___aldiv,w
  9542  0104  00F0               	movwf	___lmul@multiplier
  9543  0105  082E               	movf	compensate_pressure@calib_data,w
  9544  0106  3E10               	addlw	16
  9545  0107  0086               	movwf	6
  9546  0108  3001               	movlw	1	; select bank2/3
  9547  0109  0087               	movwf	7
  9548  010A  3F40               	moviw [0]fsr1
  9549  010B  00B2               	movwf	??_compensate_pressure
  9550  010C  3F41               	moviw [1]fsr1
  9551  010D  00B3               	movwf	??_compensate_pressure+1
  9552  010E  0832               	movf	??_compensate_pressure,w
  9553  010F  00F4               	movwf	___lmul@multiplicand
  9554  0110  0833               	movf	??_compensate_pressure+1,w
  9555  0111  00F5               	movwf	___lmul@multiplicand+1
  9556  0112  0D89               	rlf	9,f
  9557  0113  3B89               	subwfb	9,f
  9558  0114  0989               	comf	9,f
  9559  0115  00F6               	movwf	___lmul@multiplicand+2
  9560  0116  00F7               	movwf	___lmul@multiplicand+3
  9561  0117  319A  2221  3180   	fcall	___lmul
  9562  011A  0873               	movf	?___lmul+3,w
  9563  011B  0141               	movlb	1	; select bank1
  9564  011C  00C4               	movwf	(compensate_pressure@var2+3)^(0+128)
  9565  011D  0872               	movf	?___lmul+2,w
  9566  011E  00C3               	movwf	(compensate_pressure@var2+2)^(0+128)
  9567  011F  0871               	movf	?___lmul+1,w
  9568  0120  00C2               	movwf	(compensate_pressure@var2+1)^(0+128)
  9569  0121  0870               	movf	?___lmul,w
  9570  0122  00C1               	movwf	compensate_pressure@var2^(0+128)
  9571                           
  9572                           ;BME280_driver/bme280.c: 1222:     var2 = var2 + ((var1 * ((int32_t)calib_data->dig_P5))
      +                           * 2);
  9573  0123  0841               	movf	compensate_pressure@var2^(0+128),w
  9574  0124  0140               	movlb	0	; select bank0
  9575  0125  00B2               	movwf	??_compensate_pressure
  9576  0126  0141               	movlb	1	; select bank1
  9577  0127  0842               	movf	(compensate_pressure@var2+1)^(0+128),w
  9578  0128  0140               	movlb	0	; select bank0
  9579  0129  00B3               	movwf	??_compensate_pressure+1
  9580  012A  0141               	movlb	1	; select bank1
  9581  012B  0843               	movf	(compensate_pressure@var2+2)^(0+128),w
  9582  012C  0140               	movlb	0	; select bank0
  9583  012D  00B4               	movwf	??_compensate_pressure+2
  9584  012E  0141               	movlb	1	; select bank1
  9585  012F  0844               	movf	(compensate_pressure@var2+3)^(0+128),w
  9586  0130  0140               	movlb	0	; select bank0
  9587  0131  00B5               	movwf	??_compensate_pressure+3
  9588  0132  082E               	movf	compensate_pressure@calib_data,w
  9589  0133  3E0E               	addlw	14
  9590  0134  0086               	movwf	6
  9591  0135  3001               	movlw	1	; select bank2/3
  9592  0136  0087               	movwf	7
  9593  0137  3F40               	moviw [0]fsr1
  9594  0138  00B6               	movwf	??_compensate_pressure+4
  9595  0139  3F41               	moviw [1]fsr1
  9596  013A  00B7               	movwf	??_compensate_pressure+5
  9597  013B  0836               	movf	??_compensate_pressure+4,w
  9598  013C  00F0               	movwf	___lmul@multiplier
  9599  013D  0837               	movf	??_compensate_pressure+5,w
  9600  013E  00F1               	movwf	___lmul@multiplier+1
  9601  013F  0D89               	rlf	9,f
  9602  0140  3B89               	subwfb	9,f
  9603  0141  0989               	comf	9,f
  9604  0142  00F2               	movwf	___lmul@multiplier+2
  9605  0143  00F3               	movwf	___lmul@multiplier+3
  9606  0144  0141               	movlb	1	; select bank1
  9607  0145  084C               	movf	(compensate_pressure@var1+3)^(0+128),w
  9608  0146  00F7               	movwf	___lmul@multiplicand+3
  9609  0147  084B               	movf	(compensate_pressure@var1+2)^(0+128),w
  9610  0148  00F6               	movwf	___lmul@multiplicand+2
  9611  0149  084A               	movf	(compensate_pressure@var1+1)^(0+128),w
  9612  014A  00F5               	movwf	___lmul@multiplicand+1
  9613  014B  0849               	movf	compensate_pressure@var1^(0+128),w
  9614  014C  00F4               	movwf	___lmul@multiplicand
  9615  014D  319A  2221  3180   	fcall	___lmul
  9616  0150  0870               	movf	?___lmul,w
  9617  0151  0140               	movlb	0	; select bank0
  9618  0152  00B8               	movwf	??_compensate_pressure+6
  9619  0153  0871               	movf	?___lmul+1,w
  9620  0154  00B9               	movwf	??_compensate_pressure+7
  9621  0155  0872               	movf	?___lmul+2,w
  9622  0156  00BA               	movwf	??_compensate_pressure+8
  9623  0157  0873               	movf	?___lmul+3,w
  9624  0158  00BB               	movwf	??_compensate_pressure+9
  9625  0159  3001               	movlw	1
  9626  015A                     u3185:	
  9627  015A  35B8               	lslf	??_compensate_pressure+6,f
  9628  015B  0DB9               	rlf	??_compensate_pressure+7,f
  9629  015C  0DBA               	rlf	??_compensate_pressure+8,f
  9630  015D  0DBB               	rlf	??_compensate_pressure+9,f
  9631  015E  0B89               	decfsz	9,f
  9632  015F  295A               	goto	u3185
  9633  0160  0838               	movf	??_compensate_pressure+6,w
  9634  0161  07B2               	addwf	??_compensate_pressure,f
  9635  0162  0839               	movf	??_compensate_pressure+7,w
  9636  0163  3DB3               	addwfc	??_compensate_pressure+1,f
  9637  0164  083A               	movf	??_compensate_pressure+8,w
  9638  0165  3DB4               	addwfc	??_compensate_pressure+2,f
  9639  0166  083B               	movf	??_compensate_pressure+9,w
  9640  0167  3DB5               	addwfc	??_compensate_pressure+3,f
  9641  0168  0835               	movf	??_compensate_pressure+3,w
  9642  0169  0141               	movlb	1	; select bank1
  9643  016A  00C4               	movwf	(compensate_pressure@var2+3)^(0+128)
  9644  016B  0140               	movlb	0	; select bank0
  9645  016C  0834               	movf	??_compensate_pressure+2,w
  9646  016D  0141               	movlb	1	; select bank1
  9647  016E  00C3               	movwf	(compensate_pressure@var2+2)^(0+128)
  9648  016F  0140               	movlb	0	; select bank0
  9649  0170  0833               	movf	??_compensate_pressure+1,w
  9650  0171  0141               	movlb	1	; select bank1
  9651  0172  00C2               	movwf	(compensate_pressure@var2+1)^(0+128)
  9652  0173  0140               	movlb	0	; select bank0
  9653  0174  0832               	movf	??_compensate_pressure,w
  9654  0175  0141               	movlb	1	; select bank1
  9655  0176  00C1               	movwf	compensate_pressure@var2^(0+128)
  9656                           
  9657                           ;BME280_driver/bme280.c: 1223:     var2 = (var2 / 4) + (((int32_t)calib_data->dig_P4) * 
      +                          65536);
  9658  0177  0140               	movlb	0	; select bank0
  9659  0178  082E               	movf	compensate_pressure@calib_data,w
  9660  0179  3E0C               	addlw	12
  9661  017A  0086               	movwf	6
  9662  017B  3001               	movlw	1	; select bank2/3
  9663  017C  0087               	movwf	7
  9664  017D  3F40               	moviw [0]fsr1
  9665  017E  00B2               	movwf	??_compensate_pressure
  9666  017F  3F41               	moviw [1]fsr1
  9667  0180  00B3               	movwf	??_compensate_pressure+1
  9668  0181  0832               	movf	??_compensate_pressure,w
  9669  0182  00B4               	movwf	??_compensate_pressure+2
  9670  0183  0833               	movf	??_compensate_pressure+1,w
  9671  0184  00B5               	movwf	??_compensate_pressure+3
  9672  0185  01B6               	clrf	??_compensate_pressure+4
  9673  0186  01B7               	clrf	??_compensate_pressure+5
  9674  0187  3010               	movlw	16
  9675  0188                     u3195:	
  9676  0188  35B4               	lslf	??_compensate_pressure+2,f
  9677  0189  0DB5               	rlf	??_compensate_pressure+3,f
  9678  018A  0DB6               	rlf	??_compensate_pressure+4,f
  9679  018B  0DB7               	rlf	??_compensate_pressure+5,f
  9680  018C  0B89               	decfsz	9,f
  9681  018D  2988               	goto	u3195
  9682  018E  3000               	movlw	0
  9683  018F  00A3               	movwf	___aldiv@divisor+3
  9684  0190  3000               	movlw	0
  9685  0191  00A2               	movwf	___aldiv@divisor+2
  9686  0192  3000               	movlw	0
  9687  0193  00A1               	movwf	___aldiv@divisor+1
  9688  0194  3004               	movlw	4
  9689  0195  00A0               	movwf	___aldiv@divisor
  9690  0196  0141               	movlb	1	; select bank1
  9691  0197  0844               	movf	(compensate_pressure@var2+3)^(0+128),w
  9692  0198  0140               	movlb	0	; select bank0
  9693  0199  00A7               	movwf	___aldiv@dividend+3
  9694  019A  0141               	movlb	1	; select bank1
  9695  019B  0843               	movf	(compensate_pressure@var2+2)^(0+128),w
  9696  019C  0140               	movlb	0	; select bank0
  9697  019D  00A6               	movwf	___aldiv@dividend+2
  9698  019E  0141               	movlb	1	; select bank1
  9699  019F  0842               	movf	(compensate_pressure@var2+1)^(0+128),w
  9700  01A0  0140               	movlb	0	; select bank0
  9701  01A1  00A5               	movwf	___aldiv@dividend+1
  9702  01A2  0141               	movlb	1	; select bank1
  9703  01A3  0841               	movf	compensate_pressure@var2^(0+128),w
  9704  01A4  0140               	movlb	0	; select bank0
  9705  01A5  00A4               	movwf	___aldiv@dividend
  9706  01A6  3194  24BD  3180   	fcall	___aldiv
  9707  01A9  0140               	movlb	0	; select bank0
  9708  01AA  0820               	movf	?___aldiv,w
  9709  01AB  07B4               	addwf	??_compensate_pressure+2,f
  9710  01AC  0821               	movf	?___aldiv+1,w
  9711  01AD  3DB5               	addwfc	??_compensate_pressure+3,f
  9712  01AE  0822               	movf	?___aldiv+2,w
  9713  01AF  3DB6               	addwfc	??_compensate_pressure+4,f
  9714  01B0  0823               	movf	?___aldiv+3,w
  9715  01B1  3DB7               	addwfc	??_compensate_pressure+5,f
  9716  01B2  0837               	movf	??_compensate_pressure+5,w
  9717  01B3  0141               	movlb	1	; select bank1
  9718  01B4  00C4               	movwf	(compensate_pressure@var2+3)^(0+128)
  9719  01B5  0140               	movlb	0	; select bank0
  9720  01B6  0836               	movf	??_compensate_pressure+4,w
  9721  01B7  0141               	movlb	1	; select bank1
  9722  01B8  00C3               	movwf	(compensate_pressure@var2+2)^(0+128)
  9723  01B9  0140               	movlb	0	; select bank0
  9724  01BA  0835               	movf	??_compensate_pressure+3,w
  9725  01BB  0141               	movlb	1	; select bank1
  9726  01BC  00C2               	movwf	(compensate_pressure@var2+1)^(0+128)
  9727  01BD  0140               	movlb	0	; select bank0
  9728  01BE  0834               	movf	??_compensate_pressure+2,w
  9729  01BF  0141               	movlb	1	; select bank1
  9730  01C0  00C1               	movwf	compensate_pressure@var2^(0+128)
  9731                           
  9732                           ;BME280_driver/bme280.c: 1224:     var3 = (calib_data->dig_P3 * (((var1 / 4) * (var1 / 4
      +                          )) / 8192)) / 8;
  9733  01C1  3000               	movlw	0
  9734  01C2  0140               	movlb	0	; select bank0
  9735  01C3  00A3               	movwf	___aldiv@divisor+3
  9736  01C4  3000               	movlw	0
  9737  01C5  00A2               	movwf	___aldiv@divisor+2
  9738  01C6  3000               	movlw	0
  9739  01C7  00A1               	movwf	___aldiv@divisor+1
  9740  01C8  3004               	movlw	4
  9741  01C9  00A0               	movwf	___aldiv@divisor
  9742  01CA  0141               	movlb	1	; select bank1
  9743  01CB  084C               	movf	(compensate_pressure@var1+3)^(0+128),w
  9744  01CC  0140               	movlb	0	; select bank0
  9745  01CD  00A7               	movwf	___aldiv@dividend+3
  9746  01CE  0141               	movlb	1	; select bank1
  9747  01CF  084B               	movf	(compensate_pressure@var1+2)^(0+128),w
  9748  01D0  0140               	movlb	0	; select bank0
  9749  01D1  00A6               	movwf	___aldiv@dividend+2
  9750  01D2  0141               	movlb	1	; select bank1
  9751  01D3  084A               	movf	(compensate_pressure@var1+1)^(0+128),w
  9752  01D4  0140               	movlb	0	; select bank0
  9753  01D5  00A5               	movwf	___aldiv@dividend+1
  9754  01D6  0141               	movlb	1	; select bank1
  9755  01D7  0849               	movf	compensate_pressure@var1^(0+128),w
  9756  01D8  0140               	movlb	0	; select bank0
  9757  01D9  00A4               	movwf	___aldiv@dividend
  9758  01DA  3194  24BD  3180   	fcall	___aldiv
  9759  01DD  0140               	movlb	0	; select bank0
  9760  01DE  0823               	movf	?___aldiv+3,w
  9761  01DF  00F3               	movwf	___lmul@multiplier+3
  9762  01E0  0822               	movf	?___aldiv+2,w
  9763  01E1  00F2               	movwf	___lmul@multiplier+2
  9764  01E2  0821               	movf	?___aldiv+1,w
  9765  01E3  00F1               	movwf	___lmul@multiplier+1
  9766  01E4  0820               	movf	?___aldiv,w
  9767  01E5  00F0               	movwf	___lmul@multiplier
  9768  01E6  3000               	movlw	0
  9769  01E7  00A3               	movwf	___aldiv@divisor+3
  9770  01E8  3000               	movlw	0
  9771  01E9  00A2               	movwf	___aldiv@divisor+2
  9772  01EA  3000               	movlw	0
  9773  01EB  00A1               	movwf	___aldiv@divisor+1
  9774  01EC  3004               	movlw	4
  9775  01ED  00A0               	movwf	___aldiv@divisor
  9776  01EE  0141               	movlb	1	; select bank1
  9777  01EF  084C               	movf	(compensate_pressure@var1+3)^(0+128),w
  9778  01F0  0140               	movlb	0	; select bank0
  9779  01F1  00A7               	movwf	___aldiv@dividend+3
  9780  01F2  0141               	movlb	1	; select bank1
  9781  01F3  084B               	movf	(compensate_pressure@var1+2)^(0+128),w
  9782  01F4  0140               	movlb	0	; select bank0
  9783  01F5  00A6               	movwf	___aldiv@dividend+2
  9784  01F6  0141               	movlb	1	; select bank1
  9785  01F7  084A               	movf	(compensate_pressure@var1+1)^(0+128),w
  9786  01F8  0140               	movlb	0	; select bank0
  9787  01F9  00A5               	movwf	___aldiv@dividend+1
  9788  01FA  0141               	movlb	1	; select bank1
  9789  01FB  0849               	movf	compensate_pressure@var1^(0+128),w
  9790  01FC  0140               	movlb	0	; select bank0
  9791  01FD  00A4               	movwf	___aldiv@dividend
  9792  01FE  3194  24BD  3180   	fcall	___aldiv
  9793  0201  0140               	movlb	0	; select bank0
  9794  0202  0823               	movf	?___aldiv+3,w
  9795  0203  00F7               	movwf	___lmul@multiplicand+3
  9796  0204  0822               	movf	?___aldiv+2,w
  9797  0205  00F6               	movwf	___lmul@multiplicand+2
  9798  0206  0821               	movf	?___aldiv+1,w
  9799  0207  00F5               	movwf	___lmul@multiplicand+1
  9800  0208  0820               	movf	?___aldiv,w
  9801  0209  00F4               	movwf	___lmul@multiplicand
  9802  020A  319A  2221  3180   	fcall	___lmul
  9803  020D  0873               	movf	?___lmul+3,w
  9804  020E  0141               	movlb	1	; select bank1
  9805  020F  00BC               	movwf	(_compensate_pressure$2716+3)^(0+128)
  9806  0210  0872               	movf	?___lmul+2,w
  9807  0211  00BB               	movwf	(_compensate_pressure$2716+2)^(0+128)
  9808  0212  0871               	movf	?___lmul+1,w
  9809  0213  00BA               	movwf	(_compensate_pressure$2716+1)^(0+128)
  9810  0214  0870               	movf	?___lmul,w
  9811  0215  00B9               	movwf	_compensate_pressure$2716^(0+128)
  9812                           
  9813                           ;BME280_driver/bme280.c: 1224:     var3 = (calib_data->dig_P3 * (((var1 / 4) * (var1 / 4
      +                          )) / 8192)) / 8;
  9814  0216  0140               	movlb	0	; select bank0
  9815  0217  082E               	movf	compensate_pressure@calib_data,w
  9816  0218  3E0A               	addlw	10
  9817  0219  0086               	movwf	6
  9818  021A  3001               	movlw	1	; select bank2/3
  9819  021B  0087               	movwf	7
  9820  021C  3F40               	moviw [0]fsr1
  9821  021D  00B2               	movwf	??_compensate_pressure
  9822  021E  3F41               	moviw [1]fsr1
  9823  021F  00B3               	movwf	??_compensate_pressure+1
  9824  0220  0832               	movf	??_compensate_pressure,w
  9825  0221  00F0               	movwf	___lmul@multiplier
  9826  0222  0833               	movf	??_compensate_pressure+1,w
  9827  0223  00F1               	movwf	___lmul@multiplier+1
  9828  0224  0D89               	rlf	9,f
  9829  0225  3B89               	subwfb	9,f
  9830  0226  0989               	comf	9,f
  9831  0227  00F2               	movwf	___lmul@multiplier+2
  9832  0228  00F3               	movwf	___lmul@multiplier+3
  9833  0229  3000               	movlw	0
  9834  022A  00A3               	movwf	___aldiv@divisor+3
  9835  022B  3000               	movlw	0
  9836  022C  00A2               	movwf	___aldiv@divisor+2
  9837  022D  3020               	movlw	32
  9838  022E  00A1               	movwf	___aldiv@divisor+1
  9839  022F  3000               	movlw	0
  9840  0230  00A0               	movwf	___aldiv@divisor
  9841  0231  0141               	movlb	1	; select bank1
  9842  0232  083C               	movf	(_compensate_pressure$2716+3)^(0+128),w
  9843  0233  0140               	movlb	0	; select bank0
  9844  0234  00A7               	movwf	___aldiv@dividend+3
  9845  0235  0141               	movlb	1	; select bank1
  9846  0236  083B               	movf	(_compensate_pressure$2716+2)^(0+128),w
  9847  0237  0140               	movlb	0	; select bank0
  9848  0238  00A6               	movwf	___aldiv@dividend+2
  9849  0239  0141               	movlb	1	; select bank1
  9850  023A  083A               	movf	(_compensate_pressure$2716+1)^(0+128),w
  9851  023B  0140               	movlb	0	; select bank0
  9852  023C  00A5               	movwf	___aldiv@dividend+1
  9853  023D  0141               	movlb	1	; select bank1
  9854  023E  0839               	movf	_compensate_pressure$2716^(0+128),w
  9855  023F  0140               	movlb	0	; select bank0
  9856  0240  00A4               	movwf	___aldiv@dividend
  9857  0241  3194  24BD  3180   	fcall	___aldiv
  9858  0244  0140               	movlb	0	; select bank0
  9859  0245  0823               	movf	?___aldiv+3,w
  9860  0246  00F7               	movwf	___lmul@multiplicand+3
  9861  0247  0822               	movf	?___aldiv+2,w
  9862  0248  00F6               	movwf	___lmul@multiplicand+2
  9863  0249  0821               	movf	?___aldiv+1,w
  9864  024A  00F5               	movwf	___lmul@multiplicand+1
  9865  024B  0820               	movf	?___aldiv,w
  9866  024C  00F4               	movwf	___lmul@multiplicand
  9867  024D  319A  2221  3180   	fcall	___lmul
  9868  0250  0873               	movf	?___lmul+3,w
  9869  0251  0141               	movlb	1	; select bank1
  9870  0252  00AF               	movwf	(_compensate_pressure$2717+3)^(0+128)
  9871  0253  0872               	movf	?___lmul+2,w
  9872  0254  00AE               	movwf	(_compensate_pressure$2717+2)^(0+128)
  9873  0255  0871               	movf	?___lmul+1,w
  9874  0256  00AD               	movwf	(_compensate_pressure$2717+1)^(0+128)
  9875  0257  0870               	movf	?___lmul,w
  9876  0258  00AC               	movwf	_compensate_pressure$2717^(0+128)
  9877                           
  9878                           ;BME280_driver/bme280.c: 1224:     var3 = (calib_data->dig_P3 * (((var1 / 4) * (var1 / 4
      +                          )) / 8192)) / 8;
  9879  0259  3000               	movlw	0
  9880  025A  0140               	movlb	0	; select bank0
  9881  025B  00A3               	movwf	___aldiv@divisor+3
  9882  025C  3000               	movlw	0
  9883  025D  00A2               	movwf	___aldiv@divisor+2
  9884  025E  3000               	movlw	0
  9885  025F  00A1               	movwf	___aldiv@divisor+1
  9886  0260  3008               	movlw	8
  9887  0261  00A0               	movwf	___aldiv@divisor
  9888  0262  0141               	movlb	1	; select bank1
  9889  0263  082F               	movf	(_compensate_pressure$2717+3)^(0+128),w
  9890  0264  0140               	movlb	0	; select bank0
  9891  0265  00A7               	movwf	___aldiv@dividend+3
  9892  0266  0141               	movlb	1	; select bank1
  9893  0267  082E               	movf	(_compensate_pressure$2717+2)^(0+128),w
  9894  0268  0140               	movlb	0	; select bank0
  9895  0269  00A6               	movwf	___aldiv@dividend+2
  9896  026A  0141               	movlb	1	; select bank1
  9897  026B  082D               	movf	(_compensate_pressure$2717+1)^(0+128),w
  9898  026C  0140               	movlb	0	; select bank0
  9899  026D  00A5               	movwf	___aldiv@dividend+1
  9900  026E  0141               	movlb	1	; select bank1
  9901  026F  082C               	movf	_compensate_pressure$2717^(0+128),w
  9902  0270  0140               	movlb	0	; select bank0
  9903  0271  00A4               	movwf	___aldiv@dividend
  9904  0272  3194  24BD  3180   	fcall	___aldiv
  9905  0275  0140               	movlb	0	; select bank0
  9906  0276  0823               	movf	?___aldiv+3,w
  9907  0277  0141               	movlb	1	; select bank1
  9908  0278  00A3               	movwf	(compensate_pressure@var3+3)^(0+128)
  9909  0279  0140               	movlb	0	; select bank0
  9910  027A  0822               	movf	?___aldiv+2,w
  9911  027B  0141               	movlb	1	; select bank1
  9912  027C  00A2               	movwf	(compensate_pressure@var3+2)^(0+128)
  9913  027D  0140               	movlb	0	; select bank0
  9914  027E  0821               	movf	?___aldiv+1,w
  9915  027F  0141               	movlb	1	; select bank1
  9916  0280  00A1               	movwf	(compensate_pressure@var3+1)^(0+128)
  9917  0281  0140               	movlb	0	; select bank0
  9918  0282  0820               	movf	?___aldiv,w
  9919  0283  0141               	movlb	1	; select bank1
  9920  0284  00A0               	movwf	compensate_pressure@var3^(0+128)
  9921                           
  9922                           ;BME280_driver/bme280.c: 1225:     var4 = (((int32_t)calib_data->dig_P2) * var1) / 2;
  9923  0285  3000               	movlw	0
  9924  0286  0140               	movlb	0	; select bank0
  9925  0287  00A3               	movwf	___aldiv@divisor+3
  9926  0288  3000               	movlw	0
  9927  0289  00A2               	movwf	___aldiv@divisor+2
  9928  028A  3000               	movlw	0
  9929  028B  00A1               	movwf	___aldiv@divisor+1
  9930  028C  3002               	movlw	2
  9931  028D  00A0               	movwf	___aldiv@divisor
  9932  028E  082E               	movf	compensate_pressure@calib_data,w
  9933  028F  3E08               	addlw	8
  9934  0290  0086               	movwf	6
  9935  0291  3001               	movlw	1	; select bank2/3
  9936  0292  0087               	movwf	7
  9937  0293  3F40               	moviw [0]fsr1
  9938  0294  00B2               	movwf	??_compensate_pressure
  9939  0295  3F41               	moviw [1]fsr1
  9940  0296  00B3               	movwf	??_compensate_pressure+1
  9941  0297  0832               	movf	??_compensate_pressure,w
  9942  0298  00F0               	movwf	___lmul@multiplier
  9943  0299  0833               	movf	??_compensate_pressure+1,w
  9944  029A  00F1               	movwf	___lmul@multiplier+1
  9945  029B  0D89               	rlf	9,f
  9946  029C  3B89               	subwfb	9,f
  9947  029D  0989               	comf	9,f
  9948  029E  00F2               	movwf	___lmul@multiplier+2
  9949  029F  00F3               	movwf	___lmul@multiplier+3
  9950  02A0  0141               	movlb	1	; select bank1
  9951  02A1  084C               	movf	(compensate_pressure@var1+3)^(0+128),w
  9952  02A2  00F7               	movwf	___lmul@multiplicand+3
  9953  02A3  084B               	movf	(compensate_pressure@var1+2)^(0+128),w
  9954  02A4  00F6               	movwf	___lmul@multiplicand+2
  9955  02A5  084A               	movf	(compensate_pressure@var1+1)^(0+128),w
  9956  02A6  00F5               	movwf	___lmul@multiplicand+1
  9957  02A7  0849               	movf	compensate_pressure@var1^(0+128),w
  9958  02A8  00F4               	movwf	___lmul@multiplicand
  9959  02A9  319A  2221  3180   	fcall	___lmul
  9960  02AC  0873               	movf	?___lmul+3,w
  9961  02AD  0140               	movlb	0	; select bank0
  9962  02AE  00A7               	movwf	___aldiv@dividend+3
  9963  02AF  0872               	movf	?___lmul+2,w
  9964  02B0  00A6               	movwf	___aldiv@dividend+2
  9965  02B1  0871               	movf	?___lmul+1,w
  9966  02B2  00A5               	movwf	___aldiv@dividend+1
  9967  02B3  0870               	movf	?___lmul,w
  9968  02B4  00A4               	movwf	___aldiv@dividend
  9969  02B5  3194  24BD  3180   	fcall	___aldiv
  9970  02B8  0140               	movlb	0	; select bank0
  9971  02B9  0823               	movf	?___aldiv+3,w
  9972  02BA  0141               	movlb	1	; select bank1
  9973  02BB  00A7               	movwf	(compensate_pressure@var4+3)^(0+128)
  9974  02BC  0140               	movlb	0	; select bank0
  9975  02BD  0822               	movf	?___aldiv+2,w
  9976  02BE  0141               	movlb	1	; select bank1
  9977  02BF  00A6               	movwf	(compensate_pressure@var4+2)^(0+128)
  9978  02C0  0140               	movlb	0	; select bank0
  9979  02C1  0821               	movf	?___aldiv+1,w
  9980  02C2  0141               	movlb	1	; select bank1
  9981  02C3  00A5               	movwf	(compensate_pressure@var4+1)^(0+128)
  9982  02C4  0140               	movlb	0	; select bank0
  9983  02C5  0820               	movf	?___aldiv,w
  9984  02C6  0141               	movlb	1	; select bank1
  9985  02C7  00A4               	movwf	compensate_pressure@var4^(0+128)
  9986                           
  9987                           ;BME280_driver/bme280.c: 1226:     var1 = (var3 + var4) / 262144;
  9988  02C8  3000               	movlw	0
  9989  02C9  0140               	movlb	0	; select bank0
  9990  02CA  00A3               	movwf	___aldiv@divisor+3
  9991  02CB  3004               	movlw	4
  9992  02CC  00A2               	movwf	___aldiv@divisor+2
  9993  02CD  3000               	movlw	0
  9994  02CE  00A1               	movwf	___aldiv@divisor+1
  9995  02CF  3000               	movlw	0
  9996  02D0  00A0               	movwf	___aldiv@divisor
  9997  02D1  0141               	movlb	1	; select bank1
  9998  02D2  0820               	movf	compensate_pressure@var3^(0+128),w
  9999  02D3  0724               	addwf	compensate_pressure@var4^(0+128),w
 10000  02D4  0140               	movlb	0	; select bank0
 10001  02D5  00B2               	movwf	??_compensate_pressure
 10002  02D6  0141               	movlb	1	; select bank1
 10003  02D7  0821               	movf	(compensate_pressure@var3+1)^(0+128),w
 10004  02D8  3D25               	addwfc	(compensate_pressure@var4+1)^(0+128),w
 10005  02D9  0140               	movlb	0	; select bank0
 10006  02DA  00B3               	movwf	??_compensate_pressure+1
 10007  02DB  0141               	movlb	1	; select bank1
 10008  02DC  0822               	movf	(compensate_pressure@var3+2)^(0+128),w
 10009  02DD  3D26               	addwfc	(compensate_pressure@var4+2)^(0+128),w
 10010  02DE  0140               	movlb	0	; select bank0
 10011  02DF  00B4               	movwf	??_compensate_pressure+2
 10012  02E0  0141               	movlb	1	; select bank1
 10013  02E1  0823               	movf	(compensate_pressure@var3+3)^(0+128),w
 10014  02E2  3D27               	addwfc	(compensate_pressure@var4+3)^(0+128),w
 10015  02E3  0140               	movlb	0	; select bank0
 10016  02E4  00B5               	movwf	??_compensate_pressure+3
 10017  02E5  0835               	movf	??_compensate_pressure+3,w
 10018  02E6  00A7               	movwf	___aldiv@dividend+3
 10019  02E7  0834               	movf	??_compensate_pressure+2,w
 10020  02E8  00A6               	movwf	___aldiv@dividend+2
 10021  02E9  0833               	movf	??_compensate_pressure+1,w
 10022  02EA  00A5               	movwf	___aldiv@dividend+1
 10023  02EB  0832               	movf	??_compensate_pressure,w
 10024  02EC  00A4               	movwf	___aldiv@dividend
 10025  02ED  3194  24BD  3180   	fcall	___aldiv
 10026  02F0  0140               	movlb	0	; select bank0
 10027  02F1  0823               	movf	?___aldiv+3,w
 10028  02F2  0141               	movlb	1	; select bank1
 10029  02F3  00CC               	movwf	(compensate_pressure@var1+3)^(0+128)
 10030  02F4  0140               	movlb	0	; select bank0
 10031  02F5  0822               	movf	?___aldiv+2,w
 10032  02F6  0141               	movlb	1	; select bank1
 10033  02F7  00CB               	movwf	(compensate_pressure@var1+2)^(0+128)
 10034  02F8  0140               	movlb	0	; select bank0
 10035  02F9  0821               	movf	?___aldiv+1,w
 10036  02FA  0141               	movlb	1	; select bank1
 10037  02FB  00CA               	movwf	(compensate_pressure@var1+1)^(0+128)
 10038  02FC  0140               	movlb	0	; select bank0
 10039  02FD  0820               	movf	?___aldiv,w
 10040  02FE  0141               	movlb	1	; select bank1
 10041  02FF  00C9               	movwf	compensate_pressure@var1^(0+128)
 10042                           
 10043                           ;BME280_driver/bme280.c: 1227:     var1 = (((32768 + var1)) * ((int32_t)calib_data->dig_
      +                          P1)) / 32768;
 10044  0300  3000               	movlw	0
 10045  0301  0140               	movlb	0	; select bank0
 10046  0302  00A3               	movwf	___aldiv@divisor+3
 10047  0303  3000               	movlw	0
 10048  0304  00A2               	movwf	___aldiv@divisor+2
 10049  0305  3080               	movlw	128
 10050  0306  00A1               	movwf	___aldiv@divisor+1
 10051  0307  3000               	movlw	0
 10052  0308  00A0               	movwf	___aldiv@divisor
 10053  0309  3000               	movlw	0
 10054  030A  0141               	movlb	1	; select bank1
 10055  030B  0749               	addwf	compensate_pressure@var1^(0+128),w
 10056  030C  00F0               	movwf	___lmul@multiplier
 10057  030D  3080               	movlw	128
 10058  030E  3D4A               	addwfc	(compensate_pressure@var1+1)^(0+128),w
 10059  030F  00F1               	movwf	___lmul@multiplier+1
 10060  0310  3000               	movlw	0
 10061  0311  3D4B               	addwfc	(compensate_pressure@var1+2)^(0+128),w
 10062  0312  00F2               	movwf	___lmul@multiplier+2
 10063  0313  3000               	movlw	0
 10064  0314  3D4C               	addwfc	(compensate_pressure@var1+3)^(0+128),w
 10065  0315  00F3               	movwf	___lmul@multiplier+3
 10066  0316  0140               	movlb	0	; select bank0
 10067  0317  082E               	movf	compensate_pressure@calib_data,w
 10068  0318  3E06               	addlw	6
 10069  0319  0086               	movwf	6
 10070  031A  3001               	movlw	1	; select bank2/3
 10071  031B  0087               	movwf	7
 10072  031C  3F40               	moviw [0]fsr1
 10073  031D  00B2               	movwf	??_compensate_pressure
 10074  031E  3F41               	moviw [1]fsr1
 10075  031F  00B3               	movwf	??_compensate_pressure+1
 10076  0320  0832               	movf	??_compensate_pressure,w
 10077  0321  00F4               	movwf	___lmul@multiplicand
 10078  0322  0833               	movf	??_compensate_pressure+1,w
 10079  0323  00F5               	movwf	___lmul@multiplicand+1
 10080  0324  01F6               	clrf	___lmul@multiplicand+2
 10081  0325  01F7               	clrf	___lmul@multiplicand+3
 10082  0326  319A  2221  3180   	fcall	___lmul
 10083  0329  0873               	movf	?___lmul+3,w
 10084  032A  0140               	movlb	0	; select bank0
 10085  032B  00A7               	movwf	___aldiv@dividend+3
 10086  032C  0872               	movf	?___lmul+2,w
 10087  032D  00A6               	movwf	___aldiv@dividend+2
 10088  032E  0871               	movf	?___lmul+1,w
 10089  032F  00A5               	movwf	___aldiv@dividend+1
 10090  0330  0870               	movf	?___lmul,w
 10091  0331  00A4               	movwf	___aldiv@dividend
 10092  0332  3194  24BD  3180   	fcall	___aldiv
 10093  0335  0140               	movlb	0	; select bank0
 10094  0336  0823               	movf	?___aldiv+3,w
 10095  0337  0141               	movlb	1	; select bank1
 10096  0338  00CC               	movwf	(compensate_pressure@var1+3)^(0+128)
 10097  0339  0140               	movlb	0	; select bank0
 10098  033A  0822               	movf	?___aldiv+2,w
 10099  033B  0141               	movlb	1	; select bank1
 10100  033C  00CB               	movwf	(compensate_pressure@var1+2)^(0+128)
 10101  033D  0140               	movlb	0	; select bank0
 10102  033E  0821               	movf	?___aldiv+1,w
 10103  033F  0141               	movlb	1	; select bank1
 10104  0340  00CA               	movwf	(compensate_pressure@var1+1)^(0+128)
 10105  0341  0140               	movlb	0	; select bank0
 10106  0342  0820               	movf	?___aldiv,w
 10107  0343  0141               	movlb	1	; select bank1
 10108  0344  00C9               	movwf	compensate_pressure@var1^(0+128)
 10109                           
 10110                           ;BME280_driver/bme280.c: 1230:     if (var1)
 10111  0345  084C               	movf	(compensate_pressure@var1+3)^(0+128),w
 10112  0346  044B               	iorwf	(compensate_pressure@var1+2)^(0+128),w
 10113  0347  044A               	iorwf	(compensate_pressure@var1+1)^(0+128),w
 10114  0348  0449               	iorwf	compensate_pressure@var1^(0+128),w
 10115  0349  1903               	skipnz
 10116  034A  2D81               	goto	l3832
 10117                           
 10118                           ;BME280_driver/bme280.c: 1231:     {;BME280_driver/bme280.c: 1232:         var5 = (uint3
      +                          2_t)((uint32_t)1048576) - uncomp_data->pressure;
 10119  034B  0834               	movf	compensate_pressure@uncomp_data^(0+128),w
 10120  034C  0086               	movwf	6
 10121  034D  0187               	clrf	7
 10122  034E  3F40               	moviw [0]fsr1
 10123  034F  0140               	movlb	0	; select bank0
 10124  0350  00B2               	movwf	??_compensate_pressure
 10125  0351  3F41               	moviw [1]fsr1
 10126  0352  00B3               	movwf	??_compensate_pressure+1
 10127  0353  3F42               	moviw [2]fsr1
 10128  0354  00B4               	movwf	??_compensate_pressure+2
 10129  0355  3F43               	moviw [3]fsr1
 10130  0356  00B5               	movwf	??_compensate_pressure+3
 10131  0357  3000               	movlw	0
 10132  0358  00B6               	movwf	??_compensate_pressure+4
 10133  0359  3000               	movlw	0
 10134  035A  00B7               	movwf	??_compensate_pressure+5
 10135  035B  3010               	movlw	16
 10136  035C  00B8               	movwf	??_compensate_pressure+6
 10137  035D  3000               	movlw	0
 10138  035E  00B9               	movwf	??_compensate_pressure+7
 10139  035F  0832               	movf	??_compensate_pressure,w
 10140  0360  02B6               	subwf	??_compensate_pressure+4,f
 10141  0361  0833               	movf	??_compensate_pressure+1,w
 10142  0362  3BB7               	subwfb	??_compensate_pressure+5,f
 10143  0363  0834               	movf	??_compensate_pressure+2,w
 10144  0364  3BB8               	subwfb	??_compensate_pressure+6,f
 10145  0365  0835               	movf	??_compensate_pressure+3,w
 10146  0366  3BB9               	subwfb	??_compensate_pressure+7,f
 10147  0367  0839               	movf	??_compensate_pressure+7,w
 10148  0368  0141               	movlb	1	; select bank1
 10149  0369  00AB               	movwf	(compensate_pressure@var5+3)^(0+128)
 10150  036A  0140               	movlb	0	; select bank0
 10151  036B  0838               	movf	??_compensate_pressure+6,w
 10152  036C  0141               	movlb	1	; select bank1
 10153  036D  00AA               	movwf	(compensate_pressure@var5+2)^(0+128)
 10154  036E  0140               	movlb	0	; select bank0
 10155  036F  0837               	movf	??_compensate_pressure+5,w
 10156  0370  0141               	movlb	1	; select bank1
 10157  0371  00A9               	movwf	(compensate_pressure@var5+1)^(0+128)
 10158  0372  0140               	movlb	0	; select bank0
 10159  0373  0836               	movf	??_compensate_pressure+4,w
 10160  0374  0141               	movlb	1	; select bank1
 10161  0375  00A8               	movwf	compensate_pressure@var5^(0+128)
 10162                           
 10163                           ;BME280_driver/bme280.c: 1233:         pressure = ((uint32_t)(var5 - (uint32_t)(var2 / 4
      +                          096))) * 3125;
 10164  0376  3000               	movlw	0
 10165  0377  0140               	movlb	0	; select bank0
 10166  0378  00A3               	movwf	___aldiv@divisor+3
 10167  0379  3000               	movlw	0
 10168  037A  00A2               	movwf	___aldiv@divisor+2
 10169  037B  3010               	movlw	16
 10170  037C  00A1               	movwf	___aldiv@divisor+1
 10171  037D  3000               	movlw	0
 10172  037E  00A0               	movwf	___aldiv@divisor
 10173  037F  0141               	movlb	1	; select bank1
 10174  0380  0844               	movf	(compensate_pressure@var2+3)^(0+128),w
 10175  0381  0140               	movlb	0	; select bank0
 10176  0382  00A7               	movwf	___aldiv@dividend+3
 10177  0383  0141               	movlb	1	; select bank1
 10178  0384  0843               	movf	(compensate_pressure@var2+2)^(0+128),w
 10179  0385  0140               	movlb	0	; select bank0
 10180  0386  00A6               	movwf	___aldiv@dividend+2
 10181  0387  0141               	movlb	1	; select bank1
 10182  0388  0842               	movf	(compensate_pressure@var2+1)^(0+128),w
 10183  0389  0140               	movlb	0	; select bank0
 10184  038A  00A5               	movwf	___aldiv@dividend+1
 10185  038B  0141               	movlb	1	; select bank1
 10186  038C  0841               	movf	compensate_pressure@var2^(0+128),w
 10187  038D  0140               	movlb	0	; select bank0
 10188  038E  00A4               	movwf	___aldiv@dividend
 10189  038F  3194  24BD  3180   	fcall	___aldiv
 10190  0392  0140               	movlb	0	; select bank0
 10191  0393  0820               	movf	?___aldiv,w
 10192  0394  0141               	movlb	1	; select bank1
 10193  0395  0228               	subwf	compensate_pressure@var5^(0+128),w
 10194  0396  0140               	movlb	0	; select bank0
 10195  0397  00B2               	movwf	??_compensate_pressure
 10196  0398  0821               	movf	?___aldiv+1,w
 10197  0399  0141               	movlb	1	; select bank1
 10198  039A  3B29               	subwfb	(compensate_pressure@var5+1)^(0+128),w
 10199  039B  0140               	movlb	0	; select bank0
 10200  039C  00B3               	movwf	??_compensate_pressure+1
 10201  039D  0822               	movf	?___aldiv+2,w
 10202  039E  0141               	movlb	1	; select bank1
 10203  039F  3B2A               	subwfb	(compensate_pressure@var5+2)^(0+128),w
 10204  03A0  0140               	movlb	0	; select bank0
 10205  03A1  00B4               	movwf	??_compensate_pressure+2
 10206  03A2  0823               	movf	?___aldiv+3,w
 10207  03A3  0141               	movlb	1	; select bank1
 10208  03A4  3B2B               	subwfb	(compensate_pressure@var5+3)^(0+128),w
 10209  03A5  0140               	movlb	0	; select bank0
 10210  03A6  00B5               	movwf	??_compensate_pressure+3
 10211  03A7  0835               	movf	??_compensate_pressure+3,w
 10212  03A8  00F3               	movwf	___lmul@multiplier+3
 10213  03A9  0834               	movf	??_compensate_pressure+2,w
 10214  03AA  00F2               	movwf	___lmul@multiplier+2
 10215  03AB  0833               	movf	??_compensate_pressure+1,w
 10216  03AC  00F1               	movwf	___lmul@multiplier+1
 10217  03AD  0832               	movf	??_compensate_pressure,w
 10218  03AE  00F0               	movwf	___lmul@multiplier
 10219  03AF  3000               	movlw	0
 10220  03B0  00F7               	movwf	___lmul@multiplicand+3
 10221  03B1  3000               	movlw	0
 10222  03B2  00F6               	movwf	___lmul@multiplicand+2
 10223  03B3  300C               	movlw	12
 10224  03B4  00F5               	movwf	___lmul@multiplicand+1
 10225  03B5  3035               	movlw	53
 10226  03B6  00F4               	movwf	___lmul@multiplicand
 10227  03B7  319A  2221  3180   	fcall	___lmul
 10228  03BA  0873               	movf	?___lmul+3,w
 10229  03BB  0141               	movlb	1	; select bank1
 10230  03BC  00C8               	movwf	(compensate_pressure@pressure+3)^(0+128)
 10231  03BD  0872               	movf	?___lmul+2,w
 10232  03BE  00C7               	movwf	(compensate_pressure@pressure+2)^(0+128)
 10233  03BF  0871               	movf	?___lmul+1,w
 10234  03C0  00C6               	movwf	(compensate_pressure@pressure+1)^(0+128)
 10235  03C1  0870               	movf	?___lmul,w
 10236  03C2  00C5               	movwf	compensate_pressure@pressure^(0+128)
 10237                           
 10238                           ;BME280_driver/bme280.c: 1234:         if (pressure < 0x80000000)
 10239  03C3  3080               	movlw	128
 10240  03C4  0248               	subwf	(compensate_pressure@pressure+3)^(0+128),w
 10241  03C5  1803               	btfsc	3,0
 10242  03C6  2BE4               	goto	l3822
 10243                           
 10244                           ;BME280_driver/bme280.c: 1235:         {;BME280_driver/bme280.c: 1236:             press
      +                          ure = (pressure << 1) / ((uint32_t)var1);
 10245  03C7  084C               	movf	(compensate_pressure@var1+3)^(0+128),w
 10246  03C8  00F3               	movwf	___lldiv@divisor+3
 10247  03C9  084B               	movf	(compensate_pressure@var1+2)^(0+128),w
 10248  03CA  00F2               	movwf	___lldiv@divisor+2
 10249  03CB  084A               	movf	(compensate_pressure@var1+1)^(0+128),w
 10250  03CC  00F1               	movwf	___lldiv@divisor+1
 10251  03CD  0849               	movf	compensate_pressure@var1^(0+128),w
 10252  03CE  00F0               	movwf	___lldiv@divisor
 10253  03CF  3545               	lslf	compensate_pressure@pressure^(0+128),w
 10254  03D0  00F4               	movwf	___lldiv@dividend
 10255  03D1  0D46               	rlf	(compensate_pressure@pressure+1)^(0+128),w
 10256  03D2  00F5               	movwf	___lldiv@dividend+1
 10257  03D3  0D47               	rlf	(compensate_pressure@pressure+2)^(0+128),w
 10258  03D4  00F6               	movwf	___lldiv@dividend+2
 10259  03D5  0D48               	rlf	(compensate_pressure@pressure+3)^(0+128),w
 10260  03D6  00F7               	movwf	___lldiv@dividend+3
 10261  03D7  319F  2759  3180   	fcall	___lldiv
 10262  03DA  0873               	movf	?___lldiv+3,w
 10263  03DB  0141               	movlb	1	; select bank1
 10264  03DC  00C8               	movwf	(compensate_pressure@pressure+3)^(0+128)
 10265  03DD  0872               	movf	?___lldiv+2,w
 10266  03DE  00C7               	movwf	(compensate_pressure@pressure+2)^(0+128)
 10267  03DF  0871               	movf	?___lldiv+1,w
 10268  03E0  00C6               	movwf	(compensate_pressure@pressure+1)^(0+128)
 10269  03E1  0870               	movf	?___lldiv,w
 10270  03E2  00C5               	movwf	compensate_pressure@pressure^(0+128)
 10271                           
 10272                           ;BME280_driver/bme280.c: 1237:         }
 10273  03E3  2C00               	goto	l192
 10274  03E4                     l3822:	
 10275                           
 10276                           ;BME280_driver/bme280.c: 1239:         {;BME280_driver/bme280.c: 1240:             press
      +                          ure = (pressure / (uint32_t)var1) * 2;
 10277  03E4  084C               	movf	(compensate_pressure@var1+3)^(0+128),w
 10278  03E5  00F3               	movwf	___lldiv@divisor+3
 10279  03E6  084B               	movf	(compensate_pressure@var1+2)^(0+128),w
 10280  03E7  00F2               	movwf	___lldiv@divisor+2
 10281  03E8  084A               	movf	(compensate_pressure@var1+1)^(0+128),w
 10282  03E9  00F1               	movwf	___lldiv@divisor+1
 10283  03EA  0849               	movf	compensate_pressure@var1^(0+128),w
 10284  03EB  00F0               	movwf	___lldiv@divisor
 10285  03EC  0848               	movf	(compensate_pressure@pressure+3)^(0+128),w
 10286  03ED  00F7               	movwf	___lldiv@dividend+3
 10287  03EE  0847               	movf	(compensate_pressure@pressure+2)^(0+128),w
 10288  03EF  00F6               	movwf	___lldiv@dividend+2
 10289  03F0  0846               	movf	(compensate_pressure@pressure+1)^(0+128),w
 10290  03F1  00F5               	movwf	___lldiv@dividend+1
 10291  03F2  0845               	movf	compensate_pressure@pressure^(0+128),w
 10292  03F3  00F4               	movwf	___lldiv@dividend
 10293  03F4  319F  2759  3180   	fcall	___lldiv
 10294  03F7  3570               	lslf	?___lldiv,w
 10295  03F8  0141               	movlb	1	; select bank1
 10296  03F9  00C5               	movwf	compensate_pressure@pressure^(0+128)
 10297  03FA  0D71               	rlf	?___lldiv+1,w
 10298  03FB  00C6               	movwf	(compensate_pressure@pressure+1)^(0+128)
 10299  03FC  0D72               	rlf	?___lldiv+2,w
 10300  03FD  00C7               	movwf	(compensate_pressure@pressure+2)^(0+128)
 10301  03FE  0D73               	rlf	?___lldiv+3,w
 10302  03FF  00C8               	movwf	(compensate_pressure@pressure+3)^(0+128)
 10303  0400                     l192:	
 10304                           ;BME280_driver/bme280.c: 1241:         }
 10305                           
 10306                           
 10307                           ;BME280_driver/bme280.c: 1242:         var1 = (((int32_t)calib_data->dig_P9) * ((int32_t
      +                          )(((pressure / 8) * (pressure / 8)) / 8192))) / 4096;
 10308  0400  0845               	movf	compensate_pressure@pressure^(0+128),w
 10309  0401  0140               	movlb	0	; select bank0
 10310  0402  00B2               	movwf	??_compensate_pressure
 10311  0403  0141               	movlb	1	; select bank1
 10312  0404  0846               	movf	(compensate_pressure@pressure+1)^(0+128),w
 10313  0405  0140               	movlb	0	; select bank0
 10314  0406  00B3               	movwf	??_compensate_pressure+1
 10315  0407  0141               	movlb	1	; select bank1
 10316  0408  0847               	movf	(compensate_pressure@pressure+2)^(0+128),w
 10317  0409  0140               	movlb	0	; select bank0
 10318  040A  00B4               	movwf	??_compensate_pressure+2
 10319  040B  0141               	movlb	1	; select bank1
 10320  040C  0848               	movf	(compensate_pressure@pressure+3)^(0+128),w
 10321  040D  0140               	movlb	0	; select bank0
 10322  040E  00B5               	movwf	??_compensate_pressure+3
 10323  040F  3003               	movlw	3
 10324  0410                     u3225:	
 10325  0410  36B5               	lsrf	??_compensate_pressure+3,f
 10326  0411  0CB4               	rrf	??_compensate_pressure+2,f
 10327  0412  0CB3               	rrf	??_compensate_pressure+1,f
 10328  0413  0CB2               	rrf	??_compensate_pressure,f
 10329  0414  0B89               	decfsz	9,f
 10330  0415  2C10               	goto	u3225
 10331  0416  0835               	movf	??_compensate_pressure+3,w
 10332  0417  00F7               	movwf	___lmul@multiplicand+3
 10333  0418  0834               	movf	??_compensate_pressure+2,w
 10334  0419  00F6               	movwf	___lmul@multiplicand+2
 10335  041A  0833               	movf	??_compensate_pressure+1,w
 10336  041B  00F5               	movwf	___lmul@multiplicand+1
 10337  041C  0832               	movf	??_compensate_pressure,w
 10338  041D  00F4               	movwf	___lmul@multiplicand
 10339  041E  0141               	movlb	1	; select bank1
 10340  041F  0845               	movf	compensate_pressure@pressure^(0+128),w
 10341  0420  0140               	movlb	0	; select bank0
 10342  0421  00B6               	movwf	??_compensate_pressure+4
 10343  0422  0141               	movlb	1	; select bank1
 10344  0423  0846               	movf	(compensate_pressure@pressure+1)^(0+128),w
 10345  0424  0140               	movlb	0	; select bank0
 10346  0425  00B7               	movwf	??_compensate_pressure+5
 10347  0426  0141               	movlb	1	; select bank1
 10348  0427  0847               	movf	(compensate_pressure@pressure+2)^(0+128),w
 10349  0428  0140               	movlb	0	; select bank0
 10350  0429  00B8               	movwf	??_compensate_pressure+6
 10351  042A  0141               	movlb	1	; select bank1
 10352  042B  0848               	movf	(compensate_pressure@pressure+3)^(0+128),w
 10353  042C  0140               	movlb	0	; select bank0
 10354  042D  00B9               	movwf	??_compensate_pressure+7
 10355  042E  3003               	movlw	3
 10356  042F                     u3235:	
 10357  042F  36B9               	lsrf	??_compensate_pressure+7,f
 10358  0430  0CB8               	rrf	??_compensate_pressure+6,f
 10359  0431  0CB7               	rrf	??_compensate_pressure+5,f
 10360  0432  0CB6               	rrf	??_compensate_pressure+4,f
 10361  0433  0B89               	decfsz	9,f
 10362  0434  2C2F               	goto	u3235
 10363  0435  0839               	movf	??_compensate_pressure+7,w
 10364  0436  00F3               	movwf	___lmul@multiplier+3
 10365  0437  0838               	movf	??_compensate_pressure+6,w
 10366  0438  00F2               	movwf	___lmul@multiplier+2
 10367  0439  0837               	movf	??_compensate_pressure+5,w
 10368  043A  00F1               	movwf	___lmul@multiplier+1
 10369  043B  0836               	movf	??_compensate_pressure+4,w
 10370  043C  00F0               	movwf	___lmul@multiplier
 10371  043D  319A  2221  3180   	fcall	___lmul
 10372  0440  0870               	movf	?___lmul,w
 10373  0441  0140               	movlb	0	; select bank0
 10374  0442  00BA               	movwf	??_compensate_pressure+8
 10375  0443  0871               	movf	?___lmul+1,w
 10376  0444  00BB               	movwf	??_compensate_pressure+9
 10377  0445  0872               	movf	?___lmul+2,w
 10378  0446  00BC               	movwf	??_compensate_pressure+10
 10379  0447  0873               	movf	?___lmul+3,w
 10380  0448  00BD               	movwf	??_compensate_pressure+11
 10381  0449  300D               	movlw	13
 10382  044A                     u3245:	
 10383  044A  36BD               	lsrf	??_compensate_pressure+11,f
 10384  044B  0CBC               	rrf	??_compensate_pressure+10,f
 10385  044C  0CBB               	rrf	??_compensate_pressure+9,f
 10386  044D  0CBA               	rrf	??_compensate_pressure+8,f
 10387  044E  0B89               	decfsz	9,f
 10388  044F  2C4A               	goto	u3245
 10389  0450  083D               	movf	??_compensate_pressure+11,w
 10390  0451  0141               	movlb	1	; select bank1
 10391  0452  00B3               	movwf	(_compensate_pressure$2718+3)^(0+128)
 10392  0453  0140               	movlb	0	; select bank0
 10393  0454  083C               	movf	??_compensate_pressure+10,w
 10394  0455  0141               	movlb	1	; select bank1
 10395  0456  00B2               	movwf	(_compensate_pressure$2718+2)^(0+128)
 10396  0457  0140               	movlb	0	; select bank0
 10397  0458  083B               	movf	??_compensate_pressure+9,w
 10398  0459  0141               	movlb	1	; select bank1
 10399  045A  00B1               	movwf	(_compensate_pressure$2718+1)^(0+128)
 10400  045B  0140               	movlb	0	; select bank0
 10401  045C  083A               	movf	??_compensate_pressure+8,w
 10402  045D  0141               	movlb	1	; select bank1
 10403  045E  00B0               	movwf	_compensate_pressure$2718^(0+128)
 10404                           
 10405                           ;BME280_driver/bme280.c: 1242:         var1 = (((int32_t)calib_data->dig_P9) * ((int32_t
      +                          )(((pressure / 8) * (pressure / 8)) / 8192))) / 4096;
 10406  045F  3000               	movlw	0
 10407  0460  0140               	movlb	0	; select bank0
 10408  0461  00A3               	movwf	___aldiv@divisor+3
 10409  0462  3000               	movlw	0
 10410  0463  00A2               	movwf	___aldiv@divisor+2
 10411  0464  3010               	movlw	16
 10412  0465  00A1               	movwf	___aldiv@divisor+1
 10413  0466  3000               	movlw	0
 10414  0467  00A0               	movwf	___aldiv@divisor
 10415  0468  082E               	movf	compensate_pressure@calib_data,w
 10416  0469  3E16               	addlw	22
 10417  046A  0086               	movwf	6
 10418  046B  3001               	movlw	1	; select bank2/3
 10419  046C  0087               	movwf	7
 10420  046D  3F40               	moviw [0]fsr1
 10421  046E  00B2               	movwf	??_compensate_pressure
 10422  046F  3F41               	moviw [1]fsr1
 10423  0470  00B3               	movwf	??_compensate_pressure+1
 10424  0471  0832               	movf	??_compensate_pressure,w
 10425  0472  00F0               	movwf	___lmul@multiplier
 10426  0473  0833               	movf	??_compensate_pressure+1,w
 10427  0474  00F1               	movwf	___lmul@multiplier+1
 10428  0475  0D89               	rlf	9,f
 10429  0476  3B89               	subwfb	9,f
 10430  0477  0989               	comf	9,f
 10431  0478  00F2               	movwf	___lmul@multiplier+2
 10432  0479  00F3               	movwf	___lmul@multiplier+3
 10433  047A  0141               	movlb	1	; select bank1
 10434  047B  0833               	movf	(_compensate_pressure$2718+3)^(0+128),w
 10435  047C  00F7               	movwf	___lmul@multiplicand+3
 10436  047D  0832               	movf	(_compensate_pressure$2718+2)^(0+128),w
 10437  047E  00F6               	movwf	___lmul@multiplicand+2
 10438  047F  0831               	movf	(_compensate_pressure$2718+1)^(0+128),w
 10439  0480  00F5               	movwf	___lmul@multiplicand+1
 10440  0481  0830               	movf	_compensate_pressure$2718^(0+128),w
 10441  0482  00F4               	movwf	___lmul@multiplicand
 10442  0483  319A  2221  3180   	fcall	___lmul
 10443  0486  0873               	movf	?___lmul+3,w
 10444  0487  0140               	movlb	0	; select bank0
 10445  0488  00A7               	movwf	___aldiv@dividend+3
 10446  0489  0872               	movf	?___lmul+2,w
 10447  048A  00A6               	movwf	___aldiv@dividend+2
 10448  048B  0871               	movf	?___lmul+1,w
 10449  048C  00A5               	movwf	___aldiv@dividend+1
 10450  048D  0870               	movf	?___lmul,w
 10451  048E  00A4               	movwf	___aldiv@dividend
 10452  048F  3194  24BD  3180   	fcall	___aldiv
 10453  0492  0140               	movlb	0	; select bank0
 10454  0493  0823               	movf	?___aldiv+3,w
 10455  0494  0141               	movlb	1	; select bank1
 10456  0495  00CC               	movwf	(compensate_pressure@var1+3)^(0+128)
 10457  0496  0140               	movlb	0	; select bank0
 10458  0497  0822               	movf	?___aldiv+2,w
 10459  0498  0141               	movlb	1	; select bank1
 10460  0499  00CB               	movwf	(compensate_pressure@var1+2)^(0+128)
 10461  049A  0140               	movlb	0	; select bank0
 10462  049B  0821               	movf	?___aldiv+1,w
 10463  049C  0141               	movlb	1	; select bank1
 10464  049D  00CA               	movwf	(compensate_pressure@var1+1)^(0+128)
 10465  049E  0140               	movlb	0	; select bank0
 10466  049F  0820               	movf	?___aldiv,w
 10467  04A0  0141               	movlb	1	; select bank1
 10468  04A1  00C9               	movwf	compensate_pressure@var1^(0+128)
 10469                           
 10470                           ;BME280_driver/bme280.c: 1243:         var2 = (((int32_t)(pressure / 4)) * ((int32_t)cal
      +                          ib_data->dig_P8)) / 8192;
 10471  04A2  3000               	movlw	0
 10472  04A3  0140               	movlb	0	; select bank0
 10473  04A4  00A3               	movwf	___aldiv@divisor+3
 10474  04A5  3000               	movlw	0
 10475  04A6  00A2               	movwf	___aldiv@divisor+2
 10476  04A7  3020               	movlw	32
 10477  04A8  00A1               	movwf	___aldiv@divisor+1
 10478  04A9  3000               	movlw	0
 10479  04AA  00A0               	movwf	___aldiv@divisor
 10480  04AB  0141               	movlb	1	; select bank1
 10481  04AC  0845               	movf	compensate_pressure@pressure^(0+128),w
 10482  04AD  0140               	movlb	0	; select bank0
 10483  04AE  00B2               	movwf	??_compensate_pressure
 10484  04AF  0141               	movlb	1	; select bank1
 10485  04B0  0846               	movf	(compensate_pressure@pressure+1)^(0+128),w
 10486  04B1  0140               	movlb	0	; select bank0
 10487  04B2  00B3               	movwf	??_compensate_pressure+1
 10488  04B3  0141               	movlb	1	; select bank1
 10489  04B4  0847               	movf	(compensate_pressure@pressure+2)^(0+128),w
 10490  04B5  0140               	movlb	0	; select bank0
 10491  04B6  00B4               	movwf	??_compensate_pressure+2
 10492  04B7  0141               	movlb	1	; select bank1
 10493  04B8  0848               	movf	(compensate_pressure@pressure+3)^(0+128),w
 10494  04B9  0140               	movlb	0	; select bank0
 10495  04BA  00B5               	movwf	??_compensate_pressure+3
 10496  04BB  3002               	movlw	2
 10497  04BC                     u3255:	
 10498  04BC  36B5               	lsrf	??_compensate_pressure+3,f
 10499  04BD  0CB4               	rrf	??_compensate_pressure+2,f
 10500  04BE  0CB3               	rrf	??_compensate_pressure+1,f
 10501  04BF  0CB2               	rrf	??_compensate_pressure,f
 10502  04C0  0B89               	decfsz	9,f
 10503  04C1  2CBC               	goto	u3255
 10504  04C2  0835               	movf	??_compensate_pressure+3,w
 10505  04C3  00F3               	movwf	___lmul@multiplier+3
 10506  04C4  0834               	movf	??_compensate_pressure+2,w
 10507  04C5  00F2               	movwf	___lmul@multiplier+2
 10508  04C6  0833               	movf	??_compensate_pressure+1,w
 10509  04C7  00F1               	movwf	___lmul@multiplier+1
 10510  04C8  0832               	movf	??_compensate_pressure,w
 10511  04C9  00F0               	movwf	___lmul@multiplier
 10512  04CA  082E               	movf	compensate_pressure@calib_data,w
 10513  04CB  3E14               	addlw	20
 10514  04CC  0086               	movwf	6
 10515  04CD  3001               	movlw	1	; select bank2/3
 10516  04CE  0087               	movwf	7
 10517  04CF  3F40               	moviw [0]fsr1
 10518  04D0  00B6               	movwf	??_compensate_pressure+4
 10519  04D1  3F41               	moviw [1]fsr1
 10520  04D2  00B7               	movwf	??_compensate_pressure+5
 10521  04D3  0836               	movf	??_compensate_pressure+4,w
 10522  04D4  00F4               	movwf	___lmul@multiplicand
 10523  04D5  0837               	movf	??_compensate_pressure+5,w
 10524  04D6  00F5               	movwf	___lmul@multiplicand+1
 10525  04D7  0D89               	rlf	9,f
 10526  04D8  3B89               	subwfb	9,f
 10527  04D9  0989               	comf	9,f
 10528  04DA  00F6               	movwf	___lmul@multiplicand+2
 10529  04DB  00F7               	movwf	___lmul@multiplicand+3
 10530  04DC  319A  2221  3180   	fcall	___lmul
 10531  04DF  0873               	movf	?___lmul+3,w
 10532  04E0  0140               	movlb	0	; select bank0
 10533  04E1  00A7               	movwf	___aldiv@dividend+3
 10534  04E2  0872               	movf	?___lmul+2,w
 10535  04E3  00A6               	movwf	___aldiv@dividend+2
 10536  04E4  0871               	movf	?___lmul+1,w
 10537  04E5  00A5               	movwf	___aldiv@dividend+1
 10538  04E6  0870               	movf	?___lmul,w
 10539  04E7  00A4               	movwf	___aldiv@dividend
 10540  04E8  3194  24BD  3180   	fcall	___aldiv
 10541  04EB  0140               	movlb	0	; select bank0
 10542  04EC  0823               	movf	?___aldiv+3,w
 10543  04ED  0141               	movlb	1	; select bank1
 10544  04EE  00C4               	movwf	(compensate_pressure@var2+3)^(0+128)
 10545  04EF  0140               	movlb	0	; select bank0
 10546  04F0  0822               	movf	?___aldiv+2,w
 10547  04F1  0141               	movlb	1	; select bank1
 10548  04F2  00C3               	movwf	(compensate_pressure@var2+2)^(0+128)
 10549  04F3  0140               	movlb	0	; select bank0
 10550  04F4  0821               	movf	?___aldiv+1,w
 10551  04F5  0141               	movlb	1	; select bank1
 10552  04F6  00C2               	movwf	(compensate_pressure@var2+1)^(0+128)
 10553  04F7  0140               	movlb	0	; select bank0
 10554  04F8  0820               	movf	?___aldiv,w
 10555  04F9  0141               	movlb	1	; select bank1
 10556  04FA  00C1               	movwf	compensate_pressure@var2^(0+128)
 10557                           
 10558                           ;BME280_driver/bme280.c: 1244:         pressure = (uint32_t)((int32_t)pressure + ((var1 
      +                          + var2 + calib_data->dig_P7) / 16));
 10559  04FB  3000               	movlw	0
 10560  04FC  0140               	movlb	0	; select bank0
 10561  04FD  00A3               	movwf	___aldiv@divisor+3
 10562  04FE  3000               	movlw	0
 10563  04FF  00A2               	movwf	___aldiv@divisor+2
 10564  0500  3000               	movlw	0
 10565  0501  00A1               	movwf	___aldiv@divisor+1
 10566  0502  3010               	movlw	16
 10567  0503  00A0               	movwf	___aldiv@divisor
 10568  0504  0141               	movlb	1	; select bank1
 10569  0505  0841               	movf	compensate_pressure@var2^(0+128),w
 10570  0506  0140               	movlb	0	; select bank0
 10571  0507  00B2               	movwf	??_compensate_pressure
 10572  0508  0141               	movlb	1	; select bank1
 10573  0509  0842               	movf	(compensate_pressure@var2+1)^(0+128),w
 10574  050A  0140               	movlb	0	; select bank0
 10575  050B  00B3               	movwf	??_compensate_pressure+1
 10576  050C  0141               	movlb	1	; select bank1
 10577  050D  0843               	movf	(compensate_pressure@var2+2)^(0+128),w
 10578  050E  0140               	movlb	0	; select bank0
 10579  050F  00B4               	movwf	??_compensate_pressure+2
 10580  0510  0141               	movlb	1	; select bank1
 10581  0511  0844               	movf	(compensate_pressure@var2+3)^(0+128),w
 10582  0512  0140               	movlb	0	; select bank0
 10583  0513  00B5               	movwf	??_compensate_pressure+3
 10584  0514  0141               	movlb	1	; select bank1
 10585  0515  0849               	movf	compensate_pressure@var1^(0+128),w
 10586  0516  0140               	movlb	0	; select bank0
 10587  0517  00B6               	movwf	??_compensate_pressure+4
 10588  0518  0141               	movlb	1	; select bank1
 10589  0519  084A               	movf	(compensate_pressure@var1+1)^(0+128),w
 10590  051A  0140               	movlb	0	; select bank0
 10591  051B  00B7               	movwf	??_compensate_pressure+5
 10592  051C  0141               	movlb	1	; select bank1
 10593  051D  084B               	movf	(compensate_pressure@var1+2)^(0+128),w
 10594  051E  0140               	movlb	0	; select bank0
 10595  051F  00B8               	movwf	??_compensate_pressure+6
 10596  0520  0141               	movlb	1	; select bank1
 10597  0521  084C               	movf	(compensate_pressure@var1+3)^(0+128),w
 10598  0522  0140               	movlb	0	; select bank0
 10599  0523  00B9               	movwf	??_compensate_pressure+7
 10600  0524  082E               	movf	compensate_pressure@calib_data,w
 10601  0525  3E12               	addlw	18
 10602  0526  0086               	movwf	6
 10603  0527  3001               	movlw	1	; select bank2/3
 10604  0528  0087               	movwf	7
 10605  0529  3F40               	moviw [0]fsr1
 10606  052A  00BA               	movwf	??_compensate_pressure+8
 10607  052B  3F41               	moviw [1]fsr1
 10608  052C  00BB               	movwf	??_compensate_pressure+9
 10609  052D  083A               	movf	??_compensate_pressure+8,w
 10610  052E  00BC               	movwf	??_compensate_pressure+10
 10611  052F  083B               	movf	??_compensate_pressure+9,w
 10612  0530  00BD               	movwf	??_compensate_pressure+11
 10613  0531  3000               	movlw	0
 10614  0532  1BBD               	btfsc	??_compensate_pressure+11,7
 10615  0533  30FF               	movlw	255
 10616  0534  00BE               	movwf	??_compensate_pressure+12
 10617  0535  00BF               	movwf	??_compensate_pressure+13
 10618  0536  083C               	movf	??_compensate_pressure+10,w
 10619  0537  07B6               	addwf	??_compensate_pressure+4,f
 10620  0538  083D               	movf	??_compensate_pressure+11,w
 10621  0539  3DB7               	addwfc	??_compensate_pressure+5,f
 10622  053A  083E               	movf	??_compensate_pressure+12,w
 10623  053B  3DB8               	addwfc	??_compensate_pressure+6,f
 10624  053C  083F               	movf	??_compensate_pressure+13,w
 10625  053D  3DB9               	addwfc	??_compensate_pressure+7,f
 10626  053E  0836               	movf	??_compensate_pressure+4,w
 10627  053F  07B2               	addwf	??_compensate_pressure,f
 10628  0540  0837               	movf	??_compensate_pressure+5,w
 10629  0541  3DB3               	addwfc	??_compensate_pressure+1,f
 10630  0542  0838               	movf	??_compensate_pressure+6,w
 10631  0543  3DB4               	addwfc	??_compensate_pressure+2,f
 10632  0544  0839               	movf	??_compensate_pressure+7,w
 10633  0545  3DB5               	addwfc	??_compensate_pressure+3,f
 10634  0546  0835               	movf	??_compensate_pressure+3,w
 10635  0547  00A7               	movwf	___aldiv@dividend+3
 10636  0548  0834               	movf	??_compensate_pressure+2,w
 10637  0549  00A6               	movwf	___aldiv@dividend+2
 10638  054A  0833               	movf	??_compensate_pressure+1,w
 10639  054B  00A5               	movwf	___aldiv@dividend+1
 10640  054C  0832               	movf	??_compensate_pressure,w
 10641  054D  00A4               	movwf	___aldiv@dividend
 10642  054E  3194  24BD  3180   	fcall	___aldiv
 10643  0551  0140               	movlb	0	; select bank0
 10644  0552  0820               	movf	?___aldiv,w
 10645  0553  0141               	movlb	1	; select bank1
 10646  0554  0745               	addwf	compensate_pressure@pressure^(0+128),w
 10647  0555  0140               	movlb	0	; select bank0
 10648  0556  00C0               	movwf	??_compensate_pressure+14
 10649  0557  0821               	movf	?___aldiv+1,w
 10650  0558  0141               	movlb	1	; select bank1
 10651  0559  3D46               	addwfc	(compensate_pressure@pressure+1)^(0+128),w
 10652  055A  0140               	movlb	0	; select bank0
 10653  055B  00C1               	movwf	??_compensate_pressure+15
 10654  055C  0822               	movf	?___aldiv+2,w
 10655  055D  0141               	movlb	1	; select bank1
 10656  055E  3D47               	addwfc	(compensate_pressure@pressure+2)^(0+128),w
 10657  055F  0140               	movlb	0	; select bank0
 10658  0560  00C2               	movwf	??_compensate_pressure+16
 10659  0561  0823               	movf	?___aldiv+3,w
 10660  0562  0141               	movlb	1	; select bank1
 10661  0563  3D48               	addwfc	(compensate_pressure@pressure+3)^(0+128),w
 10662  0564  0140               	movlb	0	; select bank0
 10663  0565  00C3               	movwf	??_compensate_pressure+17
 10664  0566  0843               	movf	??_compensate_pressure+17,w
 10665  0567  0141               	movlb	1	; select bank1
 10666  0568  00C8               	movwf	(compensate_pressure@pressure+3)^(0+128)
 10667  0569  0140               	movlb	0	; select bank0
 10668  056A  0842               	movf	??_compensate_pressure+16,w
 10669  056B  0141               	movlb	1	; select bank1
 10670  056C  00C7               	movwf	(compensate_pressure@pressure+2)^(0+128)
 10671  056D  0140               	movlb	0	; select bank0
 10672  056E  0841               	movf	??_compensate_pressure+15,w
 10673  056F  0141               	movlb	1	; select bank1
 10674  0570  00C6               	movwf	(compensate_pressure@pressure+1)^(0+128)
 10675  0571  0140               	movlb	0	; select bank0
 10676  0572  0840               	movf	??_compensate_pressure+14,w
 10677  0573  0141               	movlb	1	; select bank1
 10678  0574  00C5               	movwf	compensate_pressure@pressure^(0+128)
 10679                           
 10680                           ;BME280_driver/bme280.c: 1245:         if (pressure < pressure_min)
 10681  0575  0848               	movf	(compensate_pressure@pressure+3)^(0+128),w
 10682  0576  1D03               	btfss	3,2
 10683  0577  2D89               	goto	l3834
 10684  0578  0847               	movf	(compensate_pressure@pressure+2)^(0+128),w
 10685  0579  1D03               	btfss	3,2
 10686  057A  2D89               	goto	l3834
 10687  057B  3030               	movlw	48
 10688  057C  0245               	subwf	compensate_pressure@pressure^(0+128),w
 10689  057D  3075               	movlw	117
 10690  057E  3B46               	subwfb	(compensate_pressure@pressure+1)^(0+128),w
 10691  057F  1803               	btfsc	3,0
 10692  0580  2D89               	goto	l3834
 10693  0581                     l3832:	
 10694                           
 10695                           ;BME280_driver/bme280.c: 1246:         {;BME280_driver/bme280.c: 1247:             press
      +                          ure = pressure_min;
 10696  0581  3000               	movlw	0
 10697  0582  00C8               	movwf	(compensate_pressure@pressure+3)^(0+128)
 10698  0583  3000               	movlw	0
 10699  0584  00C7               	movwf	(compensate_pressure@pressure+2)^(0+128)
 10700  0585  3075               	movlw	117
 10701  0586  00C6               	movwf	(compensate_pressure@pressure+1)^(0+128)
 10702  0587  3030               	movlw	48
 10703  0588  2D9B               	goto	L3
 10704  0589                     l3834:	
 10705                           ;BME280_driver/bme280.c: 1248:         }
 10706                           
 10707  0589  0848               	movf	(compensate_pressure@pressure+3)^(0+128),w
 10708  058A  1D03               	btfss	3,2
 10709  058B  2D94               	goto	l3836
 10710  058C  30B1               	movlw	177
 10711  058D  0245               	subwf	compensate_pressure@pressure^(0+128),w
 10712  058E  30AD               	movlw	173
 10713  058F  3B46               	subwfb	(compensate_pressure@pressure+1)^(0+128),w
 10714  0590  3001               	movlw	1
 10715  0591  3B47               	subwfb	(compensate_pressure@pressure+2)^(0+128),w
 10716  0592  1C03               	btfss	3,0
 10717  0593  2D9C               	goto	l196
 10718  0594                     l3836:	
 10719                           
 10720                           ;BME280_driver/bme280.c: 1250:         {;BME280_driver/bme280.c: 1251:             press
      +                          ure = pressure_max;
 10721  0594  3000               	movlw	0
 10722  0595  00C8               	movwf	(compensate_pressure@pressure+3)^(0+128)
 10723  0596  3001               	movlw	1
 10724  0597  00C7               	movwf	(compensate_pressure@pressure+2)^(0+128)
 10725  0598  30AD               	movlw	173
 10726  0599  00C6               	movwf	(compensate_pressure@pressure+1)^(0+128)
 10727  059A  30B0               	movlw	176
 10728  059B                     L3:	
 10729  059B  00C5               	movwf	compensate_pressure@pressure^(0+128)
 10730  059C                     l196:	
 10731                           ;BME280_driver/bme280.c: 1257:     }
 10732                           
 10733                           
 10734                           ;BME280_driver/bme280.c: 1259:     return pressure;
 10735  059C  0848               	movf	(compensate_pressure@pressure+3)^(0+128),w
 10736  059D  0140               	movlb	0	; select bank0
 10737  059E  00B1               	movwf	?_compensate_pressure+3
 10738  059F  0141               	movlb	1	; select bank1
 10739  05A0  0847               	movf	(compensate_pressure@pressure+2)^(0+128),w
 10740  05A1  0140               	movlb	0	; select bank0
 10741  05A2  00B0               	movwf	?_compensate_pressure+2
 10742  05A3  0141               	movlb	1	; select bank1
 10743  05A4  0846               	movf	(compensate_pressure@pressure+1)^(0+128),w
 10744  05A5  0140               	movlb	0	; select bank0
 10745  05A6  00AF               	movwf	?_compensate_pressure+1
 10746  05A7  0141               	movlb	1	; select bank1
 10747  05A8  0845               	movf	compensate_pressure@pressure^(0+128),w
 10748  05A9  0140               	movlb	0	; select bank0
 10749  05AA  00AE               	movwf	?_compensate_pressure
 10750  05AB  0008               	return
 10751  05AC                     __end_of_compensate_pressure:	
 10752                           
 10753                           	psect	text8
 10754  0D36                     __ptext8:	
 10755 ;; *************** function _compensate_humidity *****************
 10756 ;; Defined at:
 10757 ;;		line 1267 in file "BME280_driver/bme280.c"
 10758 ;; Parameters:    Size  Location     Type
 10759 ;;  uncomp_data     1    wreg     PTR const struct bme280_
 10760 ;;		 -> bme280_get_sensor_data@uncomp_data(12), 
 10761 ;;  calib_data      1   14[BANK0 ] PTR const struct bme280_
 10762 ;;		 -> EnvSensor(51), 
 10763 ;; Auto vars:     Size  Location     Type
 10764 ;;  uncomp_data     1   30[BANK0 ] PTR const struct bme280_
 10765 ;;		 -> bme280_get_sensor_data@uncomp_data(12), 
 10766 ;;  var3            4   55[BANK0 ] long 
 10767 ;;  var5            4   51[BANK0 ] long 
 10768 ;;  var4            4   47[BANK0 ] long 
 10769 ;;  var2            4   43[BANK0 ] long 
 10770 ;;  var1            4   39[BANK0 ] long 
 10771 ;;  humidity        4   35[BANK0 ] unsigned long 
 10772 ;;  humidity_max    4    0        unsigned long 
 10773 ;; Return value:  Size  Location     Type
 10774 ;;                  4   14[BANK0 ] unsigned long 
 10775 ;; Registers used:
 10776 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10777 ;; Tracked objects:
 10778 ;;		On entry : 0/0
 10779 ;;		On exit  : 0/0
 10780 ;;		Unchanged: 0/0
 10781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10782 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10783 ;;      Locals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10784 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10785 ;;      Totals:         0      45       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10786 ;;Total ram usage:       45 bytes
 10787 ;; Hardware stack levels used:    1
 10788 ;; Hardware stack levels required when called:    4
 10789 ;; This function calls:
 10790 ;;		___aldiv
 10791 ;;		___lmul
 10792 ;; This function is called by:
 10793 ;;		_bme280_compensate_data
 10794 ;; This function uses a non-reentrant model
 10795 ;;
 10796                           
 10797                           
 10798                           ;psect for function _compensate_humidity
 10799  0D36                     _compensate_humidity:	
 10800                           
 10801                           ;incstack = 0
 10802                           ; Regs used in _compensate_humidity: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10803                           ;compensate_humidity@uncomp_data stored from wreg
 10804  0D36  0140               	movlb	0	; select bank0
 10805  0D37  00BE               	movwf	compensate_humidity@uncomp_data
 10806                           
 10807                           ;BME280_driver/bme280.c: 1278:     var1 = calib_data->t_fine - ((int32_t)76800);
 10808  0D38  082E               	movf	compensate_humidity@calib_data,w
 10809  0D39  3E21               	addlw	33
 10810  0D3A  0086               	movwf	6
 10811  0D3B  3001               	movlw	1	; select bank2/3
 10812  0D3C  0087               	movwf	7
 10813  0D3D  3F40               	moviw [0]fsr1
 10814  0D3E  00B2               	movwf	??_compensate_humidity
 10815  0D3F  3F41               	moviw [1]fsr1
 10816  0D40  00B3               	movwf	??_compensate_humidity+1
 10817  0D41  3F42               	moviw [2]fsr1
 10818  0D42  00B4               	movwf	??_compensate_humidity+2
 10819  0D43  3F43               	moviw [3]fsr1
 10820  0D44  00B5               	movwf	??_compensate_humidity+3
 10821  0D45  3000               	movlw	0
 10822  0D46  0732               	addwf	??_compensate_humidity,w
 10823  0D47  00C7               	movwf	compensate_humidity@var1
 10824  0D48  30D4               	movlw	212
 10825  0D49  3D33               	addwfc	??_compensate_humidity+1,w
 10826  0D4A  00C8               	movwf	compensate_humidity@var1+1
 10827  0D4B  30FE               	movlw	254
 10828  0D4C  3D34               	addwfc	??_compensate_humidity+2,w
 10829  0D4D  00C9               	movwf	compensate_humidity@var1+2
 10830  0D4E  30FF               	movlw	255
 10831  0D4F  3D35               	addwfc	??_compensate_humidity+3,w
 10832  0D50  00CA               	movwf	compensate_humidity@var1+3
 10833                           
 10834                           ;BME280_driver/bme280.c: 1279:     var2 = (int32_t)(uncomp_data->humidity * 16384);
 10835  0D51  083E               	movf	compensate_humidity@uncomp_data,w
 10836  0D52  3E08               	addlw	8
 10837  0D53  0086               	movwf	6
 10838  0D54  0187               	clrf	7
 10839  0D55  3F40               	moviw [0]fsr1
 10840  0D56  00B2               	movwf	??_compensate_humidity
 10841  0D57  3F41               	moviw [1]fsr1
 10842  0D58  00B3               	movwf	??_compensate_humidity+1
 10843  0D59  3F42               	moviw [2]fsr1
 10844  0D5A  00B4               	movwf	??_compensate_humidity+2
 10845  0D5B  3F43               	moviw [3]fsr1
 10846  0D5C  00B5               	movwf	??_compensate_humidity+3
 10847  0D5D  300E               	movlw	14
 10848  0D5E                     u3285:	
 10849  0D5E  35B2               	lslf	??_compensate_humidity,f
 10850  0D5F  0DB3               	rlf	??_compensate_humidity+1,f
 10851  0D60  0DB4               	rlf	??_compensate_humidity+2,f
 10852  0D61  0DB5               	rlf	??_compensate_humidity+3,f
 10853  0D62  0B89               	decfsz	9,f
 10854  0D63  2D5E               	goto	u3285
 10855  0D64  0835               	movf	??_compensate_humidity+3,w
 10856  0D65  00CE               	movwf	compensate_humidity@var2+3
 10857  0D66  0834               	movf	??_compensate_humidity+2,w
 10858  0D67  00CD               	movwf	compensate_humidity@var2+2
 10859  0D68  0833               	movf	??_compensate_humidity+1,w
 10860  0D69  00CC               	movwf	compensate_humidity@var2+1
 10861  0D6A  0832               	movf	??_compensate_humidity,w
 10862  0D6B  00CB               	movwf	compensate_humidity@var2
 10863                           
 10864                           ;BME280_driver/bme280.c: 1280:     var3 = (int32_t)(((int32_t)calib_data->dig_H4) * 1048
      +                          576);
 10865  0D6C  082E               	movf	compensate_humidity@calib_data,w
 10866  0D6D  3E1C               	addlw	28
 10867  0D6E  0086               	movwf	6
 10868  0D6F  3001               	movlw	1	; select bank2/3
 10869  0D70  0087               	movwf	7
 10870  0D71  3F40               	moviw [0]fsr1
 10871  0D72  00B2               	movwf	??_compensate_humidity
 10872  0D73  3F41               	moviw [1]fsr1
 10873  0D74  00B3               	movwf	??_compensate_humidity+1
 10874  0D75  0832               	movf	??_compensate_humidity,w
 10875  0D76  00B4               	movwf	??_compensate_humidity+2
 10876  0D77  0833               	movf	??_compensate_humidity+1,w
 10877  0D78  00B5               	movwf	??_compensate_humidity+3
 10878  0D79  01B6               	clrf	??_compensate_humidity+4
 10879  0D7A  01B7               	clrf	??_compensate_humidity+5
 10880  0D7B  3014               	movlw	20
 10881  0D7C                     u3295:	
 10882  0D7C  35B4               	lslf	??_compensate_humidity+2,f
 10883  0D7D  0DB5               	rlf	??_compensate_humidity+3,f
 10884  0D7E  0DB6               	rlf	??_compensate_humidity+4,f
 10885  0D7F  0DB7               	rlf	??_compensate_humidity+5,f
 10886  0D80  0B89               	decfsz	9,f
 10887  0D81  2D7C               	goto	u3295
 10888  0D82  0837               	movf	??_compensate_humidity+5,w
 10889  0D83  00DA               	movwf	compensate_humidity@var3+3
 10890  0D84  0836               	movf	??_compensate_humidity+4,w
 10891  0D85  00D9               	movwf	compensate_humidity@var3+2
 10892  0D86  0835               	movf	??_compensate_humidity+3,w
 10893  0D87  00D8               	movwf	compensate_humidity@var3+1
 10894  0D88  0834               	movf	??_compensate_humidity+2,w
 10895  0D89  00D7               	movwf	compensate_humidity@var3
 10896                           
 10897                           ;BME280_driver/bme280.c: 1281:     var4 = ((int32_t)calib_data->dig_H5) * var1;
 10898  0D8A  082E               	movf	compensate_humidity@calib_data,w
 10899  0D8B  3E1E               	addlw	30
 10900  0D8C  0086               	movwf	6
 10901  0D8D  3001               	movlw	1	; select bank2/3
 10902  0D8E  0087               	movwf	7
 10903  0D8F  3F40               	moviw [0]fsr1
 10904  0D90  00B2               	movwf	??_compensate_humidity
 10905  0D91  3F41               	moviw [1]fsr1
 10906  0D92  00B3               	movwf	??_compensate_humidity+1
 10907  0D93  0832               	movf	??_compensate_humidity,w
 10908  0D94  00F0               	movwf	___lmul@multiplier
 10909  0D95  0833               	movf	??_compensate_humidity+1,w
 10910  0D96  00F1               	movwf	___lmul@multiplier+1
 10911  0D97  0D89               	rlf	9,f
 10912  0D98  3B89               	subwfb	9,f
 10913  0D99  0989               	comf	9,f
 10914  0D9A  00F2               	movwf	___lmul@multiplier+2
 10915  0D9B  00F3               	movwf	___lmul@multiplier+3
 10916  0D9C  084A               	movf	compensate_humidity@var1+3,w
 10917  0D9D  00F7               	movwf	___lmul@multiplicand+3
 10918  0D9E  0849               	movf	compensate_humidity@var1+2,w
 10919  0D9F  00F6               	movwf	___lmul@multiplicand+2
 10920  0DA0  0848               	movf	compensate_humidity@var1+1,w
 10921  0DA1  00F5               	movwf	___lmul@multiplicand+1
 10922  0DA2  0847               	movf	compensate_humidity@var1,w
 10923  0DA3  00F4               	movwf	___lmul@multiplicand
 10924  0DA4  319A  2221  318D   	fcall	___lmul
 10925  0DA7  0873               	movf	?___lmul+3,w
 10926  0DA8  0140               	movlb	0	; select bank0
 10927  0DA9  00D2               	movwf	compensate_humidity@var4+3
 10928  0DAA  0872               	movf	?___lmul+2,w
 10929  0DAB  00D1               	movwf	compensate_humidity@var4+2
 10930  0DAC  0871               	movf	?___lmul+1,w
 10931  0DAD  00D0               	movwf	compensate_humidity@var4+1
 10932  0DAE  0870               	movf	?___lmul,w
 10933  0DAF  00CF               	movwf	compensate_humidity@var4
 10934                           
 10935                           ;BME280_driver/bme280.c: 1282:     var5 = (((var2 - var3) - var4) + (int32_t)16384) / 32
      +                          768;
 10936  0DB0  3000               	movlw	0
 10937  0DB1  00A3               	movwf	___aldiv@divisor+3
 10938  0DB2  3000               	movlw	0
 10939  0DB3  00A2               	movwf	___aldiv@divisor+2
 10940  0DB4  3080               	movlw	128
 10941  0DB5  00A1               	movwf	___aldiv@divisor+1
 10942  0DB6  3000               	movlw	0
 10943  0DB7  00A0               	movwf	___aldiv@divisor
 10944  0DB8  084B               	movf	compensate_humidity@var2,w
 10945  0DB9  00B2               	movwf	??_compensate_humidity
 10946  0DBA  084C               	movf	compensate_humidity@var2+1,w
 10947  0DBB  00B3               	movwf	??_compensate_humidity+1
 10948  0DBC  084D               	movf	compensate_humidity@var2+2,w
 10949  0DBD  00B4               	movwf	??_compensate_humidity+2
 10950  0DBE  084E               	movf	compensate_humidity@var2+3,w
 10951  0DBF  00B5               	movwf	??_compensate_humidity+3
 10952  0DC0  0957               	comf	compensate_humidity@var3,w
 10953  0DC1  00B6               	movwf	??_compensate_humidity+4
 10954  0DC2  0958               	comf	compensate_humidity@var3+1,w
 10955  0DC3  00B7               	movwf	??_compensate_humidity+5
 10956  0DC4  0959               	comf	compensate_humidity@var3+2,w
 10957  0DC5  00B8               	movwf	??_compensate_humidity+6
 10958  0DC6  095A               	comf	compensate_humidity@var3+3,w
 10959  0DC7  00B9               	movwf	??_compensate_humidity+7
 10960  0DC8  0AB6               	incf	??_compensate_humidity+4,f
 10961  0DC9  1903               	skipnz
 10962  0DCA  0AB7               	incf	??_compensate_humidity+5,f
 10963  0DCB  1903               	skipnz
 10964  0DCC  0AB8               	incf	??_compensate_humidity+6,f
 10965  0DCD  1903               	skipnz
 10966  0DCE  0AB9               	incf	??_compensate_humidity+7,f
 10967  0DCF  084F               	movf	compensate_humidity@var4,w
 10968  0DD0  02B6               	subwf	??_compensate_humidity+4,f
 10969  0DD1  0850               	movf	compensate_humidity@var4+1,w
 10970  0DD2  3BB7               	subwfb	??_compensate_humidity+5,f
 10971  0DD3  0851               	movf	compensate_humidity@var4+2,w
 10972  0DD4  3BB8               	subwfb	??_compensate_humidity+6,f
 10973  0DD5  0852               	movf	compensate_humidity@var4+3,w
 10974  0DD6  3BB9               	subwfb	??_compensate_humidity+7,f
 10975  0DD7  0836               	movf	??_compensate_humidity+4,w
 10976  0DD8  07B2               	addwf	??_compensate_humidity,f
 10977  0DD9  0837               	movf	??_compensate_humidity+5,w
 10978  0DDA  3DB3               	addwfc	??_compensate_humidity+1,f
 10979  0DDB  0838               	movf	??_compensate_humidity+6,w
 10980  0DDC  3DB4               	addwfc	??_compensate_humidity+2,f
 10981  0DDD  0839               	movf	??_compensate_humidity+7,w
 10982  0DDE  3DB5               	addwfc	??_compensate_humidity+3,f
 10983  0DDF  3000               	movlw	0
 10984  0DE0  0732               	addwf	??_compensate_humidity,w
 10985  0DE1  00A4               	movwf	___aldiv@dividend
 10986  0DE2  3040               	movlw	64
 10987  0DE3  3D33               	addwfc	??_compensate_humidity+1,w
 10988  0DE4  00A5               	movwf	___aldiv@dividend+1
 10989  0DE5  3000               	movlw	0
 10990  0DE6  3D34               	addwfc	??_compensate_humidity+2,w
 10991  0DE7  00A6               	movwf	___aldiv@dividend+2
 10992  0DE8  3000               	movlw	0
 10993  0DE9  3D35               	addwfc	??_compensate_humidity+3,w
 10994  0DEA  00A7               	movwf	___aldiv@dividend+3
 10995  0DEB  3194  24BD  318D   	fcall	___aldiv
 10996  0DEE  0140               	movlb	0	; select bank0
 10997  0DEF  0823               	movf	?___aldiv+3,w
 10998  0DF0  00D6               	movwf	compensate_humidity@var5+3
 10999  0DF1  0822               	movf	?___aldiv+2,w
 11000  0DF2  00D5               	movwf	compensate_humidity@var5+2
 11001  0DF3  0821               	movf	?___aldiv+1,w
 11002  0DF4  00D4               	movwf	compensate_humidity@var5+1
 11003  0DF5  0820               	movf	?___aldiv,w
 11004  0DF6  00D3               	movwf	compensate_humidity@var5
 11005                           
 11006                           ;BME280_driver/bme280.c: 1283:     var2 = (var1 * ((int32_t)calib_data->dig_H6)) / 1024;
 11007  0DF7  3000               	movlw	0
 11008  0DF8  00A3               	movwf	___aldiv@divisor+3
 11009  0DF9  3000               	movlw	0
 11010  0DFA  00A2               	movwf	___aldiv@divisor+2
 11011  0DFB  3004               	movlw	4
 11012  0DFC  00A1               	movwf	___aldiv@divisor+1
 11013  0DFD  3000               	movlw	0
 11014  0DFE  00A0               	movwf	___aldiv@divisor
 11015  0DFF  082E               	movf	compensate_humidity@calib_data,w
 11016  0E00  3E20               	addlw	32
 11017  0E01  0086               	movwf	6
 11018  0E02  3001               	movlw	1	; select bank2/3
 11019  0E03  0087               	movwf	7
 11020  0E04  0801               	movf	1,w
 11021  0E05  00F0               	movwf	___lmul@multiplier
 11022  0E06  3980               	andlw	128
 11023  0E07  1D03               	skipz
 11024  0E08  30FF               	movlw	255
 11025  0E09  00F1               	movwf	___lmul@multiplier+1
 11026  0E0A  00F2               	movwf	___lmul@multiplier+2
 11027  0E0B  00F3               	movwf	___lmul@multiplier+3
 11028  0E0C  084A               	movf	compensate_humidity@var1+3,w
 11029  0E0D  00F7               	movwf	___lmul@multiplicand+3
 11030  0E0E  0849               	movf	compensate_humidity@var1+2,w
 11031  0E0F  00F6               	movwf	___lmul@multiplicand+2
 11032  0E10  0848               	movf	compensate_humidity@var1+1,w
 11033  0E11  00F5               	movwf	___lmul@multiplicand+1
 11034  0E12  0847               	movf	compensate_humidity@var1,w
 11035  0E13  00F4               	movwf	___lmul@multiplicand
 11036  0E14  319A  2221  318D   	fcall	___lmul
 11037  0E17  0873               	movf	?___lmul+3,w
 11038  0E18  0140               	movlb	0	; select bank0
 11039  0E19  00A7               	movwf	___aldiv@dividend+3
 11040  0E1A  0872               	movf	?___lmul+2,w
 11041  0E1B  00A6               	movwf	___aldiv@dividend+2
 11042  0E1C  0871               	movf	?___lmul+1,w
 11043  0E1D  00A5               	movwf	___aldiv@dividend+1
 11044  0E1E  0870               	movf	?___lmul,w
 11045  0E1F  00A4               	movwf	___aldiv@dividend
 11046  0E20  3194  24BD  318D   	fcall	___aldiv
 11047  0E23  0140               	movlb	0	; select bank0
 11048  0E24  0823               	movf	?___aldiv+3,w
 11049  0E25  00CE               	movwf	compensate_humidity@var2+3
 11050  0E26  0822               	movf	?___aldiv+2,w
 11051  0E27  00CD               	movwf	compensate_humidity@var2+2
 11052  0E28  0821               	movf	?___aldiv+1,w
 11053  0E29  00CC               	movwf	compensate_humidity@var2+1
 11054  0E2A  0820               	movf	?___aldiv,w
 11055  0E2B  00CB               	movwf	compensate_humidity@var2
 11056                           
 11057                           ;BME280_driver/bme280.c: 1284:     var3 = (var1 * ((int32_t)calib_data->dig_H3)) / 2048;
 11058  0E2C  3000               	movlw	0
 11059  0E2D  00A3               	movwf	___aldiv@divisor+3
 11060  0E2E  3000               	movlw	0
 11061  0E2F  00A2               	movwf	___aldiv@divisor+2
 11062  0E30  3008               	movlw	8
 11063  0E31  00A1               	movwf	___aldiv@divisor+1
 11064  0E32  3000               	movlw	0
 11065  0E33  00A0               	movwf	___aldiv@divisor
 11066  0E34  082E               	movf	compensate_humidity@calib_data,w
 11067  0E35  3E1B               	addlw	27
 11068  0E36  0086               	movwf	6
 11069  0E37  3001               	movlw	1	; select bank2/3
 11070  0E38  0087               	movwf	7
 11071  0E39  0801               	movf	1,w
 11072  0E3A  00B2               	movwf	??_compensate_humidity
 11073  0E3B  01B3               	clrf	??_compensate_humidity+1
 11074  0E3C  01B4               	clrf	??_compensate_humidity+2
 11075  0E3D  01B5               	clrf	??_compensate_humidity+3
 11076  0E3E  0835               	movf	??_compensate_humidity+3,w
 11077  0E3F  00F3               	movwf	___lmul@multiplier+3
 11078  0E40  0834               	movf	??_compensate_humidity+2,w
 11079  0E41  00F2               	movwf	___lmul@multiplier+2
 11080  0E42  0833               	movf	??_compensate_humidity+1,w
 11081  0E43  00F1               	movwf	___lmul@multiplier+1
 11082  0E44  0832               	movf	??_compensate_humidity,w
 11083  0E45  00F0               	movwf	___lmul@multiplier
 11084  0E46  084A               	movf	compensate_humidity@var1+3,w
 11085  0E47  00F7               	movwf	___lmul@multiplicand+3
 11086  0E48  0849               	movf	compensate_humidity@var1+2,w
 11087  0E49  00F6               	movwf	___lmul@multiplicand+2
 11088  0E4A  0848               	movf	compensate_humidity@var1+1,w
 11089  0E4B  00F5               	movwf	___lmul@multiplicand+1
 11090  0E4C  0847               	movf	compensate_humidity@var1,w
 11091  0E4D  00F4               	movwf	___lmul@multiplicand
 11092  0E4E  319A  2221  318D   	fcall	___lmul
 11093  0E51  0873               	movf	?___lmul+3,w
 11094  0E52  0140               	movlb	0	; select bank0
 11095  0E53  00A7               	movwf	___aldiv@dividend+3
 11096  0E54  0872               	movf	?___lmul+2,w
 11097  0E55  00A6               	movwf	___aldiv@dividend+2
 11098  0E56  0871               	movf	?___lmul+1,w
 11099  0E57  00A5               	movwf	___aldiv@dividend+1
 11100  0E58  0870               	movf	?___lmul,w
 11101  0E59  00A4               	movwf	___aldiv@dividend
 11102  0E5A  3194  24BD  318D   	fcall	___aldiv
 11103  0E5D  0140               	movlb	0	; select bank0
 11104  0E5E  0823               	movf	?___aldiv+3,w
 11105  0E5F  00DA               	movwf	compensate_humidity@var3+3
 11106  0E60  0822               	movf	?___aldiv+2,w
 11107  0E61  00D9               	movwf	compensate_humidity@var3+2
 11108  0E62  0821               	movf	?___aldiv+1,w
 11109  0E63  00D8               	movwf	compensate_humidity@var3+1
 11110  0E64  0820               	movf	?___aldiv,w
 11111  0E65  00D7               	movwf	compensate_humidity@var3
 11112                           
 11113                           ;BME280_driver/bme280.c: 1285:     var4 = ((var2 * (var3 + (int32_t)32768)) / 1024) + (i
      +                          nt32_t)2097152;
 11114  0E66  3000               	movlw	0
 11115  0E67  00A3               	movwf	___aldiv@divisor+3
 11116  0E68  3000               	movlw	0
 11117  0E69  00A2               	movwf	___aldiv@divisor+2
 11118  0E6A  3004               	movlw	4
 11119  0E6B  00A1               	movwf	___aldiv@divisor+1
 11120  0E6C  3000               	movlw	0
 11121  0E6D  00A0               	movwf	___aldiv@divisor
 11122  0E6E  3000               	movlw	0
 11123  0E6F  0757               	addwf	compensate_humidity@var3,w
 11124  0E70  00F0               	movwf	___lmul@multiplier
 11125  0E71  3080               	movlw	128
 11126  0E72  3D58               	addwfc	compensate_humidity@var3+1,w
 11127  0E73  00F1               	movwf	___lmul@multiplier+1
 11128  0E74  3000               	movlw	0
 11129  0E75  3D59               	addwfc	compensate_humidity@var3+2,w
 11130  0E76  00F2               	movwf	___lmul@multiplier+2
 11131  0E77  3000               	movlw	0
 11132  0E78  3D5A               	addwfc	compensate_humidity@var3+3,w
 11133  0E79  00F3               	movwf	___lmul@multiplier+3
 11134  0E7A  084E               	movf	compensate_humidity@var2+3,w
 11135  0E7B  00F7               	movwf	___lmul@multiplicand+3
 11136  0E7C  084D               	movf	compensate_humidity@var2+2,w
 11137  0E7D  00F6               	movwf	___lmul@multiplicand+2
 11138  0E7E  084C               	movf	compensate_humidity@var2+1,w
 11139  0E7F  00F5               	movwf	___lmul@multiplicand+1
 11140  0E80  084B               	movf	compensate_humidity@var2,w
 11141  0E81  00F4               	movwf	___lmul@multiplicand
 11142  0E82  319A  2221  318D   	fcall	___lmul
 11143  0E85  0873               	movf	?___lmul+3,w
 11144  0E86  0140               	movlb	0	; select bank0
 11145  0E87  00A7               	movwf	___aldiv@dividend+3
 11146  0E88  0872               	movf	?___lmul+2,w
 11147  0E89  00A6               	movwf	___aldiv@dividend+2
 11148  0E8A  0871               	movf	?___lmul+1,w
 11149  0E8B  00A5               	movwf	___aldiv@dividend+1
 11150  0E8C  0870               	movf	?___lmul,w
 11151  0E8D  00A4               	movwf	___aldiv@dividend
 11152  0E8E  3194  24BD  318D   	fcall	___aldiv
 11153  0E91  3000               	movlw	0
 11154  0E92  0140               	movlb	0	; select bank0
 11155  0E93  0720               	addwf	?___aldiv,w
 11156  0E94  00CF               	movwf	compensate_humidity@var4
 11157  0E95  3000               	movlw	0
 11158  0E96  3D21               	addwfc	?___aldiv+1,w
 11159  0E97  00D0               	movwf	compensate_humidity@var4+1
 11160  0E98  3020               	movlw	32
 11161  0E99  3D22               	addwfc	?___aldiv+2,w
 11162  0E9A  00D1               	movwf	compensate_humidity@var4+2
 11163  0E9B  3000               	movlw	0
 11164  0E9C  3D23               	addwfc	?___aldiv+3,w
 11165  0E9D  00D2               	movwf	compensate_humidity@var4+3
 11166                           
 11167                           ;BME280_driver/bme280.c: 1286:     var2 = ((var4 * ((int32_t)calib_data->dig_H2)) + 8192
      +                          ) / 16384;
 11168  0E9E  3000               	movlw	0
 11169  0E9F  00A3               	movwf	___aldiv@divisor+3
 11170  0EA0  3000               	movlw	0
 11171  0EA1  00A2               	movwf	___aldiv@divisor+2
 11172  0EA2  3040               	movlw	64
 11173  0EA3  00A1               	movwf	___aldiv@divisor+1
 11174  0EA4  3000               	movlw	0
 11175  0EA5  00A0               	movwf	___aldiv@divisor
 11176  0EA6  3000               	movlw	0
 11177  0EA7  00B2               	movwf	??_compensate_humidity
 11178  0EA8  3020               	movlw	32
 11179  0EA9  00B3               	movwf	??_compensate_humidity+1
 11180  0EAA  3000               	movlw	0
 11181  0EAB  00B4               	movwf	??_compensate_humidity+2
 11182  0EAC  3000               	movlw	0
 11183  0EAD  00B5               	movwf	??_compensate_humidity+3
 11184  0EAE  082E               	movf	compensate_humidity@calib_data,w
 11185  0EAF  3E19               	addlw	25
 11186  0EB0  0086               	movwf	6
 11187  0EB1  3001               	movlw	1	; select bank2/3
 11188  0EB2  0087               	movwf	7
 11189  0EB3  3F40               	moviw [0]fsr1
 11190  0EB4  00B6               	movwf	??_compensate_humidity+4
 11191  0EB5  3F41               	moviw [1]fsr1
 11192  0EB6  00B7               	movwf	??_compensate_humidity+5
 11193  0EB7  0836               	movf	??_compensate_humidity+4,w
 11194  0EB8  00F0               	movwf	___lmul@multiplier
 11195  0EB9  0837               	movf	??_compensate_humidity+5,w
 11196  0EBA  00F1               	movwf	___lmul@multiplier+1
 11197  0EBB  0D89               	rlf	9,f
 11198  0EBC  3B89               	subwfb	9,f
 11199  0EBD  0989               	comf	9,f
 11200  0EBE  00F2               	movwf	___lmul@multiplier+2
 11201  0EBF  00F3               	movwf	___lmul@multiplier+3
 11202  0EC0  0852               	movf	compensate_humidity@var4+3,w
 11203  0EC1  00F7               	movwf	___lmul@multiplicand+3
 11204  0EC2  0851               	movf	compensate_humidity@var4+2,w
 11205  0EC3  00F6               	movwf	___lmul@multiplicand+2
 11206  0EC4  0850               	movf	compensate_humidity@var4+1,w
 11207  0EC5  00F5               	movwf	___lmul@multiplicand+1
 11208  0EC6  084F               	movf	compensate_humidity@var4,w
 11209  0EC7  00F4               	movwf	___lmul@multiplicand
 11210  0EC8  319A  2221  318D   	fcall	___lmul
 11211  0ECB  0870               	movf	?___lmul,w
 11212  0ECC  0140               	movlb	0	; select bank0
 11213  0ECD  07B2               	addwf	??_compensate_humidity,f
 11214  0ECE  0871               	movf	?___lmul+1,w
 11215  0ECF  3DB3               	addwfc	??_compensate_humidity+1,f
 11216  0ED0  0872               	movf	?___lmul+2,w
 11217  0ED1  3DB4               	addwfc	??_compensate_humidity+2,f
 11218  0ED2  0873               	movf	?___lmul+3,w
 11219  0ED3  3DB5               	addwfc	??_compensate_humidity+3,f
 11220  0ED4  0835               	movf	??_compensate_humidity+3,w
 11221  0ED5  00A7               	movwf	___aldiv@dividend+3
 11222  0ED6  0834               	movf	??_compensate_humidity+2,w
 11223  0ED7  00A6               	movwf	___aldiv@dividend+2
 11224  0ED8  0833               	movf	??_compensate_humidity+1,w
 11225  0ED9  00A5               	movwf	___aldiv@dividend+1
 11226  0EDA  0832               	movf	??_compensate_humidity,w
 11227  0EDB  00A4               	movwf	___aldiv@dividend
 11228  0EDC  3194  24BD  318D   	fcall	___aldiv
 11229  0EDF  0140               	movlb	0	; select bank0
 11230  0EE0  0823               	movf	?___aldiv+3,w
 11231  0EE1  00CE               	movwf	compensate_humidity@var2+3
 11232  0EE2  0822               	movf	?___aldiv+2,w
 11233  0EE3  00CD               	movwf	compensate_humidity@var2+2
 11234  0EE4  0821               	movf	?___aldiv+1,w
 11235  0EE5  00CC               	movwf	compensate_humidity@var2+1
 11236  0EE6  0820               	movf	?___aldiv,w
 11237  0EE7  00CB               	movwf	compensate_humidity@var2
 11238                           
 11239                           ;BME280_driver/bme280.c: 1287:     var3 = var5 * var2;
 11240  0EE8  0856               	movf	compensate_humidity@var5+3,w
 11241  0EE9  00F3               	movwf	___lmul@multiplier+3
 11242  0EEA  0855               	movf	compensate_humidity@var5+2,w
 11243  0EEB  00F2               	movwf	___lmul@multiplier+2
 11244  0EEC  0854               	movf	compensate_humidity@var5+1,w
 11245  0EED  00F1               	movwf	___lmul@multiplier+1
 11246  0EEE  0853               	movf	compensate_humidity@var5,w
 11247  0EEF  00F0               	movwf	___lmul@multiplier
 11248  0EF0  084E               	movf	compensate_humidity@var2+3,w
 11249  0EF1  00F7               	movwf	___lmul@multiplicand+3
 11250  0EF2  084D               	movf	compensate_humidity@var2+2,w
 11251  0EF3  00F6               	movwf	___lmul@multiplicand+2
 11252  0EF4  084C               	movf	compensate_humidity@var2+1,w
 11253  0EF5  00F5               	movwf	___lmul@multiplicand+1
 11254  0EF6  084B               	movf	compensate_humidity@var2,w
 11255  0EF7  00F4               	movwf	___lmul@multiplicand
 11256  0EF8  319A  2221  318D   	fcall	___lmul
 11257  0EFB  0873               	movf	?___lmul+3,w
 11258  0EFC  0140               	movlb	0	; select bank0
 11259  0EFD  00DA               	movwf	compensate_humidity@var3+3
 11260  0EFE  0872               	movf	?___lmul+2,w
 11261  0EFF  00D9               	movwf	compensate_humidity@var3+2
 11262  0F00  0871               	movf	?___lmul+1,w
 11263  0F01  00D8               	movwf	compensate_humidity@var3+1
 11264  0F02  0870               	movf	?___lmul,w
 11265  0F03  00D7               	movwf	compensate_humidity@var3
 11266                           
 11267                           ;BME280_driver/bme280.c: 1288:     var4 = ((var3 / 32768) * (var3 / 32768)) / 128;
 11268  0F04  3000               	movlw	0
 11269  0F05  00A3               	movwf	___aldiv@divisor+3
 11270  0F06  3000               	movlw	0
 11271  0F07  00A2               	movwf	___aldiv@divisor+2
 11272  0F08  3080               	movlw	128
 11273  0F09  00A1               	movwf	___aldiv@divisor+1
 11274  0F0A  3000               	movlw	0
 11275  0F0B  00A0               	movwf	___aldiv@divisor
 11276  0F0C  085A               	movf	compensate_humidity@var3+3,w
 11277  0F0D  00A7               	movwf	___aldiv@dividend+3
 11278  0F0E  0859               	movf	compensate_humidity@var3+2,w
 11279  0F0F  00A6               	movwf	___aldiv@dividend+2
 11280  0F10  0858               	movf	compensate_humidity@var3+1,w
 11281  0F11  00A5               	movwf	___aldiv@dividend+1
 11282  0F12  0857               	movf	compensate_humidity@var3,w
 11283  0F13  00A4               	movwf	___aldiv@dividend
 11284  0F14  3194  24BD  318D   	fcall	___aldiv
 11285  0F17  0140               	movlb	0	; select bank0
 11286  0F18  0823               	movf	?___aldiv+3,w
 11287  0F19  00F3               	movwf	___lmul@multiplier+3
 11288  0F1A  0822               	movf	?___aldiv+2,w
 11289  0F1B  00F2               	movwf	___lmul@multiplier+2
 11290  0F1C  0821               	movf	?___aldiv+1,w
 11291  0F1D  00F1               	movwf	___lmul@multiplier+1
 11292  0F1E  0820               	movf	?___aldiv,w
 11293  0F1F  00F0               	movwf	___lmul@multiplier
 11294  0F20  3000               	movlw	0
 11295  0F21  00A3               	movwf	___aldiv@divisor+3
 11296  0F22  3000               	movlw	0
 11297  0F23  00A2               	movwf	___aldiv@divisor+2
 11298  0F24  3080               	movlw	128
 11299  0F25  00A1               	movwf	___aldiv@divisor+1
 11300  0F26  3000               	movlw	0
 11301  0F27  00A0               	movwf	___aldiv@divisor
 11302  0F28  085A               	movf	compensate_humidity@var3+3,w
 11303  0F29  00A7               	movwf	___aldiv@dividend+3
 11304  0F2A  0859               	movf	compensate_humidity@var3+2,w
 11305  0F2B  00A6               	movwf	___aldiv@dividend+2
 11306  0F2C  0858               	movf	compensate_humidity@var3+1,w
 11307  0F2D  00A5               	movwf	___aldiv@dividend+1
 11308  0F2E  0857               	movf	compensate_humidity@var3,w
 11309  0F2F  00A4               	movwf	___aldiv@dividend
 11310  0F30  3194  24BD  318D   	fcall	___aldiv
 11311  0F33  0140               	movlb	0	; select bank0
 11312  0F34  0823               	movf	?___aldiv+3,w
 11313  0F35  00F7               	movwf	___lmul@multiplicand+3
 11314  0F36  0822               	movf	?___aldiv+2,w
 11315  0F37  00F6               	movwf	___lmul@multiplicand+2
 11316  0F38  0821               	movf	?___aldiv+1,w
 11317  0F39  00F5               	movwf	___lmul@multiplicand+1
 11318  0F3A  0820               	movf	?___aldiv,w
 11319  0F3B  00F4               	movwf	___lmul@multiplicand
 11320  0F3C  319A  2221  318D   	fcall	___lmul
 11321  0F3F  0873               	movf	?___lmul+3,w
 11322  0F40  0140               	movlb	0	; select bank0
 11323  0F41  00BD               	movwf	_compensate_humidity$2719+3
 11324  0F42  0872               	movf	?___lmul+2,w
 11325  0F43  00BC               	movwf	_compensate_humidity$2719+2
 11326  0F44  0871               	movf	?___lmul+1,w
 11327  0F45  00BB               	movwf	_compensate_humidity$2719+1
 11328  0F46  0870               	movf	?___lmul,w
 11329  0F47  00BA               	movwf	_compensate_humidity$2719
 11330                           
 11331                           ;BME280_driver/bme280.c: 1288:     var4 = ((var3 / 32768) * (var3 / 32768)) / 128;
 11332  0F48  3000               	movlw	0
 11333  0F49  00A3               	movwf	___aldiv@divisor+3
 11334  0F4A  3000               	movlw	0
 11335  0F4B  00A2               	movwf	___aldiv@divisor+2
 11336  0F4C  3000               	movlw	0
 11337  0F4D  00A1               	movwf	___aldiv@divisor+1
 11338  0F4E  3080               	movlw	128
 11339  0F4F  00A0               	movwf	___aldiv@divisor
 11340  0F50  083D               	movf	_compensate_humidity$2719+3,w
 11341  0F51  00A7               	movwf	___aldiv@dividend+3
 11342  0F52  083C               	movf	_compensate_humidity$2719+2,w
 11343  0F53  00A6               	movwf	___aldiv@dividend+2
 11344  0F54  083B               	movf	_compensate_humidity$2719+1,w
 11345  0F55  00A5               	movwf	___aldiv@dividend+1
 11346  0F56  083A               	movf	_compensate_humidity$2719,w
 11347  0F57  00A4               	movwf	___aldiv@dividend
 11348  0F58  3194  24BD  318D   	fcall	___aldiv
 11349  0F5B  0140               	movlb	0	; select bank0
 11350  0F5C  0823               	movf	?___aldiv+3,w
 11351  0F5D  00D2               	movwf	compensate_humidity@var4+3
 11352  0F5E  0822               	movf	?___aldiv+2,w
 11353  0F5F  00D1               	movwf	compensate_humidity@var4+2
 11354  0F60  0821               	movf	?___aldiv+1,w
 11355  0F61  00D0               	movwf	compensate_humidity@var4+1
 11356  0F62  0820               	movf	?___aldiv,w
 11357  0F63  00CF               	movwf	compensate_humidity@var4
 11358                           
 11359                           ;BME280_driver/bme280.c: 1289:     var5 = var3 - ((var4 * ((int32_t)calib_data->dig_H1))
      +                           / 16);
 11360  0F64  3000               	movlw	0
 11361  0F65  00A3               	movwf	___aldiv@divisor+3
 11362  0F66  3000               	movlw	0
 11363  0F67  00A2               	movwf	___aldiv@divisor+2
 11364  0F68  3000               	movlw	0
 11365  0F69  00A1               	movwf	___aldiv@divisor+1
 11366  0F6A  3010               	movlw	16
 11367  0F6B  00A0               	movwf	___aldiv@divisor
 11368  0F6C  082E               	movf	compensate_humidity@calib_data,w
 11369  0F6D  3E18               	addlw	24
 11370  0F6E  0086               	movwf	6
 11371  0F6F  3001               	movlw	1	; select bank2/3
 11372  0F70  0087               	movwf	7
 11373  0F71  0801               	movf	1,w
 11374  0F72  00B2               	movwf	??_compensate_humidity
 11375  0F73  01B3               	clrf	??_compensate_humidity+1
 11376  0F74  01B4               	clrf	??_compensate_humidity+2
 11377  0F75  01B5               	clrf	??_compensate_humidity+3
 11378  0F76  0835               	movf	??_compensate_humidity+3,w
 11379  0F77  00F3               	movwf	___lmul@multiplier+3
 11380  0F78  0834               	movf	??_compensate_humidity+2,w
 11381  0F79  00F2               	movwf	___lmul@multiplier+2
 11382  0F7A  0833               	movf	??_compensate_humidity+1,w
 11383  0F7B  00F1               	movwf	___lmul@multiplier+1
 11384  0F7C  0832               	movf	??_compensate_humidity,w
 11385  0F7D  00F0               	movwf	___lmul@multiplier
 11386  0F7E  0852               	movf	compensate_humidity@var4+3,w
 11387  0F7F  00F7               	movwf	___lmul@multiplicand+3
 11388  0F80  0851               	movf	compensate_humidity@var4+2,w
 11389  0F81  00F6               	movwf	___lmul@multiplicand+2
 11390  0F82  0850               	movf	compensate_humidity@var4+1,w
 11391  0F83  00F5               	movwf	___lmul@multiplicand+1
 11392  0F84  084F               	movf	compensate_humidity@var4,w
 11393  0F85  00F4               	movwf	___lmul@multiplicand
 11394  0F86  319A  2221  318D   	fcall	___lmul
 11395  0F89  0873               	movf	?___lmul+3,w
 11396  0F8A  0140               	movlb	0	; select bank0
 11397  0F8B  00A7               	movwf	___aldiv@dividend+3
 11398  0F8C  0872               	movf	?___lmul+2,w
 11399  0F8D  00A6               	movwf	___aldiv@dividend+2
 11400  0F8E  0871               	movf	?___lmul+1,w
 11401  0F8F  00A5               	movwf	___aldiv@dividend+1
 11402  0F90  0870               	movf	?___lmul,w
 11403  0F91  00A4               	movwf	___aldiv@dividend
 11404  0F92  3194  24BD  318D   	fcall	___aldiv
 11405  0F95  0140               	movlb	0	; select bank0
 11406  0F96  0820               	movf	?___aldiv,w
 11407  0F97  0257               	subwf	compensate_humidity@var3,w
 11408  0F98  00B6               	movwf	??_compensate_humidity+4
 11409  0F99  0821               	movf	?___aldiv+1,w
 11410  0F9A  3B58               	subwfb	compensate_humidity@var3+1,w
 11411  0F9B  00B7               	movwf	??_compensate_humidity+5
 11412  0F9C  0822               	movf	?___aldiv+2,w
 11413  0F9D  3B59               	subwfb	compensate_humidity@var3+2,w
 11414  0F9E  00B8               	movwf	??_compensate_humidity+6
 11415  0F9F  0823               	movf	?___aldiv+3,w
 11416  0FA0  3B5A               	subwfb	compensate_humidity@var3+3,w
 11417  0FA1  00B9               	movwf	??_compensate_humidity+7
 11418  0FA2  0839               	movf	??_compensate_humidity+7,w
 11419  0FA3  00D6               	movwf	compensate_humidity@var5+3
 11420  0FA4  0838               	movf	??_compensate_humidity+6,w
 11421  0FA5  00D5               	movwf	compensate_humidity@var5+2
 11422  0FA6  0837               	movf	??_compensate_humidity+5,w
 11423  0FA7  00D4               	movwf	compensate_humidity@var5+1
 11424  0FA8  0836               	movf	??_compensate_humidity+4,w
 11425  0FA9  00D3               	movwf	compensate_humidity@var5
 11426                           
 11427                           ;BME280_driver/bme280.c: 1290:     var5 = (var5 < 0 ? 0 : var5);
 11428  0FAA  1FD6               	btfss	compensate_humidity@var5+3,7
 11429  0FAB  2FB4               	goto	l3876
 11430  0FAC  3000               	movlw	0
 11431  0FAD  00D6               	movwf	compensate_humidity@var5+3
 11432  0FAE  3000               	movlw	0
 11433  0FAF  00D5               	movwf	compensate_humidity@var5+2
 11434  0FB0  3000               	movlw	0
 11435  0FB1  00D4               	movwf	compensate_humidity@var5+1
 11436  0FB2  3000               	movlw	0
 11437  0FB3  00D3               	movwf	compensate_humidity@var5
 11438  0FB4                     l3876:	
 11439                           
 11440                           ;BME280_driver/bme280.c: 1291:     var5 = (var5 > 419430400 ? 419430400 : var5);
 11441  0FB4  1BD6               	btfsc	compensate_humidity@var5+3,7
 11442  0FB5  2FC8               	goto	l3882
 11443  0FB6  3001               	movlw	1
 11444  0FB7  0253               	subwf	compensate_humidity@var5,w
 11445  0FB8  3000               	movlw	0
 11446  0FB9  3B54               	subwfb	compensate_humidity@var5+1,w
 11447  0FBA  3000               	movlw	0
 11448  0FBB  3B55               	subwfb	compensate_humidity@var5+2,w
 11449  0FBC  3019               	movlw	25
 11450  0FBD  3B56               	subwfb	compensate_humidity@var5+3,w
 11451  0FBE  1C03               	btfss	3,0
 11452  0FBF  2FC8               	goto	l3882
 11453  0FC0  3019               	movlw	25
 11454  0FC1  00D6               	movwf	compensate_humidity@var5+3
 11455  0FC2  3000               	movlw	0
 11456  0FC3  00D5               	movwf	compensate_humidity@var5+2
 11457  0FC4  3000               	movlw	0
 11458  0FC5  00D4               	movwf	compensate_humidity@var5+1
 11459  0FC6  3000               	movlw	0
 11460  0FC7  00D3               	movwf	compensate_humidity@var5
 11461  0FC8                     l3882:	
 11462                           
 11463                           ;BME280_driver/bme280.c: 1292:     humidity = (uint32_t)(var5 / 4096);
 11464  0FC8  3000               	movlw	0
 11465  0FC9  00A3               	movwf	___aldiv@divisor+3
 11466  0FCA  3000               	movlw	0
 11467  0FCB  00A2               	movwf	___aldiv@divisor+2
 11468  0FCC  3010               	movlw	16
 11469  0FCD  00A1               	movwf	___aldiv@divisor+1
 11470  0FCE  3000               	movlw	0
 11471  0FCF  00A0               	movwf	___aldiv@divisor
 11472  0FD0  0856               	movf	compensate_humidity@var5+3,w
 11473  0FD1  00A7               	movwf	___aldiv@dividend+3
 11474  0FD2  0855               	movf	compensate_humidity@var5+2,w
 11475  0FD3  00A6               	movwf	___aldiv@dividend+2
 11476  0FD4  0854               	movf	compensate_humidity@var5+1,w
 11477  0FD5  00A5               	movwf	___aldiv@dividend+1
 11478  0FD6  0853               	movf	compensate_humidity@var5,w
 11479  0FD7  00A4               	movwf	___aldiv@dividend
 11480  0FD8  3194  24BD  318D   	fcall	___aldiv
 11481  0FDB  0140               	movlb	0	; select bank0
 11482  0FDC  0823               	movf	?___aldiv+3,w
 11483  0FDD  00C6               	movwf	compensate_humidity@humidity+3
 11484  0FDE  0822               	movf	?___aldiv+2,w
 11485  0FDF  00C5               	movwf	compensate_humidity@humidity+2
 11486  0FE0  0821               	movf	?___aldiv+1,w
 11487  0FE1  00C4               	movwf	compensate_humidity@humidity+1
 11488  0FE2  0820               	movf	?___aldiv,w
 11489  0FE3  00C3               	movwf	compensate_humidity@humidity
 11490                           
 11491                           ;BME280_driver/bme280.c: 1293:     if (humidity > humidity_max)
 11492  0FE4  0846               	movf	compensate_humidity@humidity+3,w
 11493  0FE5  1D03               	btfss	3,2
 11494  0FE6  2FEF               	goto	l3886
 11495  0FE7  3001               	movlw	1
 11496  0FE8  0243               	subwf	compensate_humidity@humidity,w
 11497  0FE9  3090               	movlw	144
 11498  0FEA  3B44               	subwfb	compensate_humidity@humidity+1,w
 11499  0FEB  3001               	movlw	1
 11500  0FEC  3B45               	subwfb	compensate_humidity@humidity+2,w
 11501  0FED  1C03               	btfss	3,0
 11502  0FEE  2FF7               	goto	l208
 11503  0FEF                     l3886:	
 11504                           
 11505                           ;BME280_driver/bme280.c: 1294:     {;BME280_driver/bme280.c: 1295:         humidity = hu
      +                          midity_max;
 11506  0FEF  3000               	movlw	0
 11507  0FF0  00C6               	movwf	compensate_humidity@humidity+3
 11508  0FF1  3001               	movlw	1
 11509  0FF2  00C5               	movwf	compensate_humidity@humidity+2
 11510  0FF3  3090               	movlw	144
 11511  0FF4  00C4               	movwf	compensate_humidity@humidity+1
 11512  0FF5  3000               	movlw	0
 11513  0FF6  00C3               	movwf	compensate_humidity@humidity
 11514  0FF7                     l208:	
 11515                           ;BME280_driver/bme280.c: 1296:     }
 11516                           
 11517                           
 11518                           ;BME280_driver/bme280.c: 1298:     return humidity;
 11519  0FF7  0846               	movf	compensate_humidity@humidity+3,w
 11520  0FF8  00B1               	movwf	?_compensate_humidity+3
 11521  0FF9  0845               	movf	compensate_humidity@humidity+2,w
 11522  0FFA  00B0               	movwf	?_compensate_humidity+2
 11523  0FFB  0844               	movf	compensate_humidity@humidity+1,w
 11524  0FFC  00AF               	movwf	?_compensate_humidity+1
 11525  0FFD  0843               	movf	compensate_humidity@humidity,w
 11526  0FFE  00AE               	movwf	?_compensate_humidity
 11527  0FFF  0008               	return
 11528  1000                     __end_of_compensate_humidity:	
 11529                           
 11530                           	psect	text9
 11531  1A21                     __ptext9:	
 11532 ;; *************** function ___lmul *****************
 11533 ;; Defined at:
 11534 ;;		line 15 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\Umul32.c"
 11535 ;; Parameters:    Size  Location     Type
 11536 ;;  multiplier      4    0[COMMON] unsigned long 
 11537 ;;  multiplicand    4    4[COMMON] unsigned long 
 11538 ;; Auto vars:     Size  Location     Type
 11539 ;;  product         4    8[COMMON] unsigned long 
 11540 ;; Return value:  Size  Location     Type
 11541 ;;                  4    0[COMMON] unsigned long 
 11542 ;; Registers used:
 11543 ;;		wreg, status,2, status,0
 11544 ;; Tracked objects:
 11545 ;;		On entry : 0/0
 11546 ;;		On exit  : 0/0
 11547 ;;		Unchanged: 0/0
 11548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11549 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11550 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11552 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11553 ;;Total ram usage:       12 bytes
 11554 ;; Hardware stack levels used:    1
 11555 ;; Hardware stack levels required when called:    3
 11556 ;; This function calls:
 11557 ;;		Nothing
 11558 ;; This function is called by:
 11559 ;;		_compensate_temperature
 11560 ;;		_compensate_pressure
 11561 ;;		_compensate_humidity
 11562 ;; This function uses a non-reentrant model
 11563 ;;
 11564                           
 11565                           
 11566                           ;psect for function ___lmul
 11567  1A21                     ___lmul:	
 11568                           
 11569                           ;incstack = 0
 11570                           ; Regs used in ___lmul: [wreg+status,2+status,0]
 11571  1A21  3000               	movlw	0
 11572  1A22  00FB               	movwf	___lmul@product+3
 11573  1A23  3000               	movlw	0
 11574  1A24  00FA               	movwf	___lmul@product+2
 11575  1A25  3000               	movlw	0
 11576  1A26  00F9               	movwf	___lmul@product+1
 11577  1A27  3000               	movlw	0
 11578  1A28  00F8               	movwf	___lmul@product
 11579  1A29                     l3612:	
 11580  1A29  1C70               	btfss	___lmul@multiplier,0
 11581  1A2A  2A33               	goto	l3616
 11582  1A2B  0874               	movf	___lmul@multiplicand,w
 11583  1A2C  07F8               	addwf	___lmul@product,f
 11584  1A2D  0875               	movf	___lmul@multiplicand+1,w
 11585  1A2E  3DF9               	addwfc	___lmul@product+1,f
 11586  1A2F  0876               	movf	___lmul@multiplicand+2,w
 11587  1A30  3DFA               	addwfc	___lmul@product+2,f
 11588  1A31  0877               	movf	___lmul@multiplicand+3,w
 11589  1A32  3DFB               	addwfc	___lmul@product+3,f
 11590  1A33                     l3616:	
 11591  1A33  3001               	movlw	1
 11592  1A34                     u2855:	
 11593  1A34  35F4               	lslf	___lmul@multiplicand,f
 11594  1A35  0DF5               	rlf	___lmul@multiplicand+1,f
 11595  1A36  0DF6               	rlf	___lmul@multiplicand+2,f
 11596  1A37  0DF7               	rlf	___lmul@multiplicand+3,f
 11597  1A38  0B89               	decfsz	9,f
 11598  1A39  2A34               	goto	u2855
 11599  1A3A  3001               	movlw	1
 11600  1A3B                     u2865:	
 11601  1A3B  36F3               	lsrf	___lmul@multiplier+3,f
 11602  1A3C  0CF2               	rrf	___lmul@multiplier+2,f
 11603  1A3D  0CF1               	rrf	___lmul@multiplier+1,f
 11604  1A3E  0CF0               	rrf	___lmul@multiplier,f
 11605  1A3F  0B89               	decfsz	9,f
 11606  1A40  2A3B               	goto	u2865
 11607  1A41  0873               	movf	___lmul@multiplier+3,w
 11608  1A42  0472               	iorwf	___lmul@multiplier+2,w
 11609  1A43  0471               	iorwf	___lmul@multiplier+1,w
 11610  1A44  0470               	iorwf	___lmul@multiplier,w
 11611  1A45  1D03               	skipz
 11612  1A46  2A29               	goto	l3612
 11613  1A47  087B               	movf	___lmul@product+3,w
 11614  1A48  00F3               	movwf	?___lmul+3
 11615  1A49  087A               	movf	___lmul@product+2,w
 11616  1A4A  00F2               	movwf	?___lmul+2
 11617  1A4B  0879               	movf	___lmul@product+1,w
 11618  1A4C  00F1               	movwf	?___lmul+1
 11619  1A4D  0878               	movf	___lmul@product,w
 11620  1A4E  00F0               	movwf	?___lmul
 11621  1A4F  0008               	return
 11622  1A50                     __end_of___lmul:	
 11623                           
 11624                           	psect	text10
 11625  14BD                     __ptext10:	
 11626 ;; *************** function ___aldiv *****************
 11627 ;; Defined at:
 11628 ;;		line 5 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\aldiv.c"
 11629 ;; Parameters:    Size  Location     Type
 11630 ;;  divisor         4    0[BANK0 ] long 
 11631 ;;  dividend        4    4[BANK0 ] long 
 11632 ;; Auto vars:     Size  Location     Type
 11633 ;;  quotient        4   10[BANK0 ] long 
 11634 ;;  sign            1    9[BANK0 ] unsigned char 
 11635 ;;  counter         1    8[BANK0 ] unsigned char 
 11636 ;; Return value:  Size  Location     Type
 11637 ;;                  4    0[BANK0 ] long 
 11638 ;; Registers used:
 11639 ;;		wreg, status,2, status,0
 11640 ;; Tracked objects:
 11641 ;;		On entry : 0/0
 11642 ;;		On exit  : 0/0
 11643 ;;		Unchanged: 0/0
 11644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11645 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11646 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11647 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11648 ;;      Totals:         1      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11649 ;;Total ram usage:       15 bytes
 11650 ;; Hardware stack levels used:    1
 11651 ;; Hardware stack levels required when called:    3
 11652 ;; This function calls:
 11653 ;;		Nothing
 11654 ;; This function is called by:
 11655 ;;		_compensate_temperature
 11656 ;;		_compensate_pressure
 11657 ;;		_compensate_humidity
 11658 ;; This function uses a non-reentrant model
 11659 ;;
 11660                           
 11661                           
 11662                           ;psect for function ___aldiv
 11663  14BD                     ___aldiv:	
 11664                           
 11665                           ;incstack = 0
 11666                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
 11667  14BD  0140               	movlb	0	; select bank0
 11668  14BE  01A9               	clrf	___aldiv@sign
 11669  14BF  1FA3               	btfss	___aldiv@divisor+3,7
 11670  14C0  2CCE               	goto	l1117
 11671  14C1  09A0               	comf	___aldiv@divisor,f
 11672  14C2  09A1               	comf	___aldiv@divisor+1,f
 11673  14C3  09A2               	comf	___aldiv@divisor+2,f
 11674  14C4  09A3               	comf	___aldiv@divisor+3,f
 11675  14C5  0AA0               	incf	___aldiv@divisor,f
 11676  14C6  1903               	skipnz
 11677  14C7  0AA1               	incf	___aldiv@divisor+1,f
 11678  14C8  1903               	skipnz
 11679  14C9  0AA2               	incf	___aldiv@divisor+2,f
 11680  14CA  1903               	skipnz
 11681  14CB  0AA3               	incf	___aldiv@divisor+3,f
 11682  14CC  01A9               	clrf	___aldiv@sign
 11683  14CD  0AA9               	incf	___aldiv@sign,f
 11684  14CE                     l1117:	
 11685  14CE  1FA7               	btfss	___aldiv@dividend+3,7
 11686  14CF  2CDF               	goto	l3658
 11687  14D0  09A4               	comf	___aldiv@dividend,f
 11688  14D1  09A5               	comf	___aldiv@dividend+1,f
 11689  14D2  09A6               	comf	___aldiv@dividend+2,f
 11690  14D3  09A7               	comf	___aldiv@dividend+3,f
 11691  14D4  0AA4               	incf	___aldiv@dividend,f
 11692  14D5  1903               	skipnz
 11693  14D6  0AA5               	incf	___aldiv@dividend+1,f
 11694  14D7  1903               	skipnz
 11695  14D8  0AA6               	incf	___aldiv@dividend+2,f
 11696  14D9  1903               	skipnz
 11697  14DA  0AA7               	incf	___aldiv@dividend+3,f
 11698  14DB  3001               	movlw	1
 11699  14DC  00FC               	movwf	??___aldiv
 11700  14DD  087C               	movf	??___aldiv,w
 11701  14DE  06A9               	xorwf	___aldiv@sign,f
 11702  14DF                     l3658:	
 11703  14DF  3000               	movlw	0
 11704  14E0  00AD               	movwf	___aldiv@quotient+3
 11705  14E1  3000               	movlw	0
 11706  14E2  00AC               	movwf	___aldiv@quotient+2
 11707  14E3  3000               	movlw	0
 11708  14E4  00AB               	movwf	___aldiv@quotient+1
 11709  14E5  3000               	movlw	0
 11710  14E6  00AA               	movwf	___aldiv@quotient
 11711  14E7  0823               	movf	___aldiv@divisor+3,w
 11712  14E8  0422               	iorwf	___aldiv@divisor+2,w
 11713  14E9  0421               	iorwf	___aldiv@divisor+1,w
 11714  14EA  0420               	iorwf	___aldiv@divisor,w
 11715  14EB  1903               	skipnz
 11716  14EC  2D28               	goto	l3680
 11717  14ED  01A8               	clrf	___aldiv@counter
 11718  14EE  0AA8               	incf	___aldiv@counter,f
 11719  14EF                     l3666:	
 11720  14EF  1BA3               	btfsc	___aldiv@divisor+3,7
 11721  14F0  2CFD               	goto	l3668
 11722  14F1  3001               	movlw	1
 11723  14F2                     u2985:	
 11724  14F2  35A0               	lslf	___aldiv@divisor,f
 11725  14F3  0DA1               	rlf	___aldiv@divisor+1,f
 11726  14F4  0DA2               	rlf	___aldiv@divisor+2,f
 11727  14F5  0DA3               	rlf	___aldiv@divisor+3,f
 11728  14F6  0B89               	decfsz	9,f
 11729  14F7  2CF2               	goto	u2985
 11730  14F8  3001               	movlw	1
 11731  14F9  00FC               	movwf	??___aldiv
 11732  14FA  087C               	movf	??___aldiv,w
 11733  14FB  07A8               	addwf	___aldiv@counter,f
 11734  14FC  2CEF               	goto	l3666
 11735  14FD                     l3668:	
 11736  14FD  3001               	movlw	1
 11737  14FE                     u3005:	
 11738  14FE  35AA               	lslf	___aldiv@quotient,f
 11739  14FF  0DAB               	rlf	___aldiv@quotient+1,f
 11740  1500  0DAC               	rlf	___aldiv@quotient+2,f
 11741  1501  0DAD               	rlf	___aldiv@quotient+3,f
 11742  1502  0B89               	decfsz	9,f
 11743  1503  2CFE               	goto	u3005
 11744  1504  0823               	movf	___aldiv@divisor+3,w
 11745  1505  0227               	subwf	___aldiv@dividend+3,w
 11746  1506  1D03               	skipz
 11747  1507  2D12               	goto	u3015
 11748  1508  0822               	movf	___aldiv@divisor+2,w
 11749  1509  0226               	subwf	___aldiv@dividend+2,w
 11750  150A  1D03               	skipz
 11751  150B  2D12               	goto	u3015
 11752  150C  0821               	movf	___aldiv@divisor+1,w
 11753  150D  0225               	subwf	___aldiv@dividend+1,w
 11754  150E  1D03               	skipz
 11755  150F  2D12               	goto	u3015
 11756  1510  0820               	movf	___aldiv@divisor,w
 11757  1511  0224               	subwf	___aldiv@dividend,w
 11758  1512                     u3015:	
 11759  1512  1C03               	skipc
 11760  1513  2D1D               	goto	l3676
 11761  1514  0820               	movf	___aldiv@divisor,w
 11762  1515  02A4               	subwf	___aldiv@dividend,f
 11763  1516  0821               	movf	___aldiv@divisor+1,w
 11764  1517  3BA5               	subwfb	___aldiv@dividend+1,f
 11765  1518  0822               	movf	___aldiv@divisor+2,w
 11766  1519  3BA6               	subwfb	___aldiv@dividend+2,f
 11767  151A  0823               	movf	___aldiv@divisor+3,w
 11768  151B  3BA7               	subwfb	___aldiv@dividend+3,f
 11769  151C  142A               	bsf	___aldiv@quotient,0
 11770  151D                     l3676:	
 11771  151D  3001               	movlw	1
 11772  151E                     u3025:	
 11773  151E  36A3               	lsrf	___aldiv@divisor+3,f
 11774  151F  0CA2               	rrf	___aldiv@divisor+2,f
 11775  1520  0CA1               	rrf	___aldiv@divisor+1,f
 11776  1521  0CA0               	rrf	___aldiv@divisor,f
 11777  1522  0B89               	decfsz	9,f
 11778  1523  2D1E               	goto	u3025
 11779  1524  3001               	movlw	1
 11780  1525  02A8               	subwf	___aldiv@counter,f
 11781  1526  1D03               	btfss	3,2
 11782  1527  2CFD               	goto	l3668
 11783  1528                     l3680:	
 11784  1528  0829               	movf	___aldiv@sign,w
 11785  1529  1903               	btfsc	3,2
 11786  152A  2D36               	goto	l3684
 11787  152B  09AA               	comf	___aldiv@quotient,f
 11788  152C  09AB               	comf	___aldiv@quotient+1,f
 11789  152D  09AC               	comf	___aldiv@quotient+2,f
 11790  152E  09AD               	comf	___aldiv@quotient+3,f
 11791  152F  0AAA               	incf	___aldiv@quotient,f
 11792  1530  1903               	skipnz
 11793  1531  0AAB               	incf	___aldiv@quotient+1,f
 11794  1532  1903               	skipnz
 11795  1533  0AAC               	incf	___aldiv@quotient+2,f
 11796  1534  1903               	skipnz
 11797  1535  0AAD               	incf	___aldiv@quotient+3,f
 11798  1536                     l3684:	
 11799  1536  082D               	movf	___aldiv@quotient+3,w
 11800  1537  00A3               	movwf	?___aldiv+3
 11801  1538  082C               	movf	___aldiv@quotient+2,w
 11802  1539  00A2               	movwf	?___aldiv+2
 11803  153A  082B               	movf	___aldiv@quotient+1,w
 11804  153B  00A1               	movwf	?___aldiv+1
 11805  153C  082A               	movf	___aldiv@quotient,w
 11806  153D  00A0               	movwf	?___aldiv
 11807  153E  0008               	return
 11808  153F                     __end_of___aldiv:	
 11809                           
 11810                           	psect	text11
 11811  1FAB                     __ptext11:	
 11812 ;; *************** function _UIntToString *****************
 11813 ;; Defined at:
 11814 ;;		line 207 in file "main.c"
 11815 ;; Parameters:    Size  Location     Type
 11816 ;;  n               4    9[BANK0 ] unsigned long 
 11817 ;;  dest            1   13[BANK0 ] PTR unsigned char 
 11818 ;;		 -> main@convertedNumber(16), 
 11819 ;; Auto vars:     Size  Location     Type
 11820 ;;  i               2   16[BANK0 ] int 
 11821 ;; Return value:  Size  Location     Type
 11822 ;;                  1    wreg      void 
 11823 ;; Registers used:
 11824 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11825 ;; Tracked objects:
 11826 ;;		On entry : 0/0
 11827 ;;		On exit  : 0/0
 11828 ;;		Unchanged: 0/0
 11829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11830 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11831 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11832 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11833 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11834 ;;Total ram usage:        9 bytes
 11835 ;; Hardware stack levels used:    1
 11836 ;; Hardware stack levels required when called:    5
 11837 ;; This function calls:
 11838 ;;		_ReverseString
 11839 ;;		___lldiv
 11840 ;;		___llmod
 11841 ;; This function is called by:
 11842 ;;		_main
 11843 ;; This function uses a non-reentrant model
 11844 ;;
 11845                           
 11846                           
 11847                           ;psect for function _UIntToString
 11848  1FAB                     _UIntToString:	
 11849                           
 11850                           ;main.c: 207: void UIntToString(uint32_t n, char* dest);main.c: 208: {;main.c: 209:     
      +                          int i = 0;
 11851                           
 11852                           ;incstack = 0
 11853                           ; Regs used in _UIntToString: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11854  1FAB  0140               	movlb	0	; select bank0
 11855  1FAC  01B0               	clrf	UIntToString@i
 11856  1FAD  01B1               	clrf	UIntToString@i+1
 11857  1FAE                     l4564:	
 11858                           
 11859                           ;main.c: 214:         dest[i++] = n % 10 + '0';
 11860  1FAE  3000               	movlw	0
 11861  1FAF  00F3               	movwf	___llmod@divisor+3
 11862  1FB0  3000               	movlw	0
 11863  1FB1  00F2               	movwf	___llmod@divisor+2
 11864  1FB2  3000               	movlw	0
 11865  1FB3  00F1               	movwf	___llmod@divisor+1
 11866  1FB4  300A               	movlw	10
 11867  1FB5  00F0               	movwf	___llmod@divisor
 11868  1FB6  082C               	movf	UIntToString@n+3,w
 11869  1FB7  00F7               	movwf	___llmod@dividend+3
 11870  1FB8  082B               	movf	UIntToString@n+2,w
 11871  1FB9  00F6               	movwf	___llmod@dividend+2
 11872  1FBA  082A               	movf	UIntToString@n+1,w
 11873  1FBB  00F5               	movwf	___llmod@dividend+1
 11874  1FBC  0829               	movf	UIntToString@n,w
 11875  1FBD  00F4               	movwf	___llmod@dividend
 11876  1FBE  319B  23DB  319F   	fcall	___llmod
 11877  1FC1  0870               	movf	?___llmod,w
 11878  1FC2  3E30               	addlw	48
 11879  1FC3  0140               	movlb	0	; select bank0
 11880  1FC4  00AE               	movwf	??_UIntToString
 11881  1FC5  0830               	movf	UIntToString@i,w
 11882  1FC6  072D               	addwf	UIntToString@dest,w
 11883  1FC7  00AF               	movwf	??_UIntToString+1
 11884  1FC8  082F               	movf	??_UIntToString+1,w
 11885  1FC9  0086               	movwf	6
 11886  1FCA  3001               	movlw	1	; select bank2/3
 11887  1FCB  0087               	movwf	7
 11888  1FCC  082E               	movf	??_UIntToString,w
 11889  1FCD  0081               	movwf	1
 11890  1FCE  3001               	movlw	1
 11891  1FCF  07B0               	addwf	UIntToString@i,f
 11892  1FD0  3000               	movlw	0
 11893  1FD1  3DB1               	addwfc	UIntToString@i+1,f
 11894                           
 11895                           ;main.c: 216:     } while ((n /= 10) > 0);
 11896  1FD2  3000               	movlw	0
 11897  1FD3  00F3               	movwf	___lldiv@divisor+3
 11898  1FD4  3000               	movlw	0
 11899  1FD5  00F2               	movwf	___lldiv@divisor+2
 11900  1FD6  3000               	movlw	0
 11901  1FD7  00F1               	movwf	___lldiv@divisor+1
 11902  1FD8  300A               	movlw	10
 11903  1FD9  00F0               	movwf	___lldiv@divisor
 11904  1FDA  082C               	movf	UIntToString@n+3,w
 11905  1FDB  00F7               	movwf	___lldiv@dividend+3
 11906  1FDC  082B               	movf	UIntToString@n+2,w
 11907  1FDD  00F6               	movwf	___lldiv@dividend+2
 11908  1FDE  082A               	movf	UIntToString@n+1,w
 11909  1FDF  00F5               	movwf	___lldiv@dividend+1
 11910  1FE0  0829               	movf	UIntToString@n,w
 11911  1FE1  00F4               	movwf	___lldiv@dividend
 11912  1FE2  319F  2759  319F   	fcall	___lldiv
 11913  1FE5  0873               	movf	?___lldiv+3,w
 11914  1FE6  0140               	movlb	0	; select bank0
 11915  1FE7  00AC               	movwf	UIntToString@n+3
 11916  1FE8  0872               	movf	?___lldiv+2,w
 11917  1FE9  00AB               	movwf	UIntToString@n+2
 11918  1FEA  0871               	movf	?___lldiv+1,w
 11919  1FEB  00AA               	movwf	UIntToString@n+1
 11920  1FEC  0870               	movf	?___lldiv,w
 11921  1FED  00A9               	movwf	UIntToString@n
 11922  1FEE  082C               	movf	UIntToString@n+3,w
 11923  1FEF  042B               	iorwf	UIntToString@n+2,w
 11924  1FF0  042A               	iorwf	UIntToString@n+1,w
 11925  1FF1  0429               	iorwf	UIntToString@n,w
 11926  1FF2  1D03               	skipz
 11927  1FF3  2FAE               	goto	l4564
 11928                           
 11929                           ;main.c: 217:     dest[i] = '\0';
 11930  1FF4  0830               	movf	UIntToString@i,w
 11931  1FF5  072D               	addwf	UIntToString@dest,w
 11932  1FF6  00AE               	movwf	??_UIntToString
 11933  1FF7  082E               	movf	??_UIntToString,w
 11934  1FF8  0086               	movwf	6
 11935  1FF9  3001               	movlw	1	; select bank2/3
 11936  1FFA  0087               	movwf	7
 11937  1FFB  0181               	clrf	1
 11938                           
 11939                           ;main.c: 219:     ReverseString(dest);
 11940  1FFC  082D               	movf	UIntToString@dest,w
 11941  1FFD  3191  213B         	fcall	_ReverseString
 11942  1FFF  0008               	return
 11943  2000                     __end_of_UIntToString:	
 11944                           
 11945                           	psect	text12
 11946  1BDB                     __ptext12:	
 11947 ;; *************** function ___llmod *****************
 11948 ;; Defined at:
 11949 ;;		line 5 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\llmod.c"
 11950 ;; Parameters:    Size  Location     Type
 11951 ;;  divisor         4    0[COMMON] unsigned long 
 11952 ;;  dividend        4    4[COMMON] unsigned long 
 11953 ;; Auto vars:     Size  Location     Type
 11954 ;;  counter         1    9[COMMON] unsigned char 
 11955 ;; Return value:  Size  Location     Type
 11956 ;;                  4    0[COMMON] unsigned long 
 11957 ;; Registers used:
 11958 ;;		wreg, status,2, status,0
 11959 ;; Tracked objects:
 11960 ;;		On entry : 0/0
 11961 ;;		On exit  : 0/0
 11962 ;;		Unchanged: 0/0
 11963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11964 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11965 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11966 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11967 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11968 ;;Total ram usage:       10 bytes
 11969 ;; Hardware stack levels used:    1
 11970 ;; Hardware stack levels required when called:    3
 11971 ;; This function calls:
 11972 ;;		Nothing
 11973 ;; This function is called by:
 11974 ;;		_UIntToString
 11975 ;; This function uses a non-reentrant model
 11976 ;;
 11977                           
 11978                           
 11979                           ;psect for function ___llmod
 11980  1BDB                     ___llmod:	
 11981                           
 11982                           ;incstack = 0
 11983                           ; Regs used in ___llmod: [wreg+status,2+status,0]
 11984  1BDB  0873               	movf	___llmod@divisor+3,w
 11985  1BDC  0472               	iorwf	___llmod@divisor+2,w
 11986  1BDD  0471               	iorwf	___llmod@divisor+1,w
 11987  1BDE  0470               	iorwf	___llmod@divisor,w
 11988  1BDF  1903               	skipnz
 11989  1BE0  2C14               	goto	l4426
 11990  1BE1  01F9               	clrf	___llmod@counter
 11991  1BE2  0AF9               	incf	___llmod@counter,f
 11992  1BE3                     l4416:	
 11993  1BE3  1BF3               	btfsc	___llmod@divisor+3,7
 11994  1BE4  2BF1               	goto	l4418
 11995  1BE5  3001               	movlw	1
 11996  1BE6                     u4115:	
 11997  1BE6  35F0               	lslf	___llmod@divisor,f
 11998  1BE7  0DF1               	rlf	___llmod@divisor+1,f
 11999  1BE8  0DF2               	rlf	___llmod@divisor+2,f
 12000  1BE9  0DF3               	rlf	___llmod@divisor+3,f
 12001  1BEA  0B89               	decfsz	9,f
 12002  1BEB  2BE6               	goto	u4115
 12003  1BEC  3001               	movlw	1
 12004  1BED  00F8               	movwf	??___llmod
 12005  1BEE  0878               	movf	??___llmod,w
 12006  1BEF  07F9               	addwf	___llmod@counter,f
 12007  1BF0  2BE3               	goto	l4416
 12008  1BF1                     l4418:	
 12009  1BF1  0873               	movf	___llmod@divisor+3,w
 12010  1BF2  0277               	subwf	___llmod@dividend+3,w
 12011  1BF3  1D03               	skipz
 12012  1BF4  2BFF               	goto	u4135
 12013  1BF5  0872               	movf	___llmod@divisor+2,w
 12014  1BF6  0276               	subwf	___llmod@dividend+2,w
 12015  1BF7  1D03               	skipz
 12016  1BF8  2BFF               	goto	u4135
 12017  1BF9  0871               	movf	___llmod@divisor+1,w
 12018  1BFA  0275               	subwf	___llmod@dividend+1,w
 12019  1BFB  1D03               	skipz
 12020  1BFC  2BFF               	goto	u4135
 12021  1BFD  0870               	movf	___llmod@divisor,w
 12022  1BFE  0274               	subwf	___llmod@dividend,w
 12023  1BFF                     u4135:	
 12024  1BFF  1C03               	skipc
 12025  1C00  2C09               	goto	l4422
 12026  1C01  0870               	movf	___llmod@divisor,w
 12027  1C02  02F4               	subwf	___llmod@dividend,f
 12028  1C03  0871               	movf	___llmod@divisor+1,w
 12029  1C04  3BF5               	subwfb	___llmod@dividend+1,f
 12030  1C05  0872               	movf	___llmod@divisor+2,w
 12031  1C06  3BF6               	subwfb	___llmod@dividend+2,f
 12032  1C07  0873               	movf	___llmod@divisor+3,w
 12033  1C08  3BF7               	subwfb	___llmod@dividend+3,f
 12034  1C09                     l4422:	
 12035  1C09  3001               	movlw	1
 12036  1C0A                     u4145:	
 12037  1C0A  36F3               	lsrf	___llmod@divisor+3,f
 12038  1C0B  0CF2               	rrf	___llmod@divisor+2,f
 12039  1C0C  0CF1               	rrf	___llmod@divisor+1,f
 12040  1C0D  0CF0               	rrf	___llmod@divisor,f
 12041  1C0E  0B89               	decfsz	9,f
 12042  1C0F  2C0A               	goto	u4145
 12043  1C10  3001               	movlw	1
 12044  1C11  02F9               	subwf	___llmod@counter,f
 12045  1C12  1D03               	btfss	3,2
 12046  1C13  2BF1               	goto	l4418
 12047  1C14                     l4426:	
 12048  1C14  0877               	movf	___llmod@dividend+3,w
 12049  1C15  00F3               	movwf	?___llmod+3
 12050  1C16  0876               	movf	___llmod@dividend+2,w
 12051  1C17  00F2               	movwf	?___llmod+2
 12052  1C18  0875               	movf	___llmod@dividend+1,w
 12053  1C19  00F1               	movwf	?___llmod+1
 12054  1C1A  0874               	movf	___llmod@dividend,w
 12055  1C1B  00F0               	movwf	?___llmod
 12056  1C1C  0008               	return
 12057  1C1D                     __end_of___llmod:	
 12058                           
 12059                           	psect	text13
 12060  1F59                     __ptext13:	
 12061 ;; *************** function ___lldiv *****************
 12062 ;; Defined at:
 12063 ;;		line 5 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\__lldiv.c"
 12064 ;; Parameters:    Size  Location     Type
 12065 ;;  divisor         4    0[COMMON] unsigned long 
 12066 ;;  dividend        4    4[COMMON] unsigned long 
 12067 ;; Auto vars:     Size  Location     Type
 12068 ;;  quotient        4    9[COMMON] unsigned long 
 12069 ;;  counter         1   13[COMMON] unsigned char 
 12070 ;; Return value:  Size  Location     Type
 12071 ;;                  4    0[COMMON] unsigned long 
 12072 ;; Registers used:
 12073 ;;		wreg, status,2, status,0
 12074 ;; Tracked objects:
 12075 ;;		On entry : 0/0
 12076 ;;		On exit  : 0/0
 12077 ;;		Unchanged: 0/0
 12078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12079 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12080 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12081 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12082 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12083 ;;Total ram usage:       14 bytes
 12084 ;; Hardware stack levels used:    1
 12085 ;; Hardware stack levels required when called:    3
 12086 ;; This function calls:
 12087 ;;		Nothing
 12088 ;; This function is called by:
 12089 ;;		_compensate_pressure
 12090 ;;		_UIntToString
 12091 ;; This function uses a non-reentrant model
 12092 ;;
 12093                           
 12094                           
 12095                           ;psect for function ___lldiv
 12096  1F59                     ___lldiv:	
 12097                           
 12098                           ;incstack = 0
 12099                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
 12100  1F59  3000               	movlw	0
 12101  1F5A  00FC               	movwf	___lldiv@quotient+3
 12102  1F5B  3000               	movlw	0
 12103  1F5C  00FB               	movwf	___lldiv@quotient+2
 12104  1F5D  3000               	movlw	0
 12105  1F5E  00FA               	movwf	___lldiv@quotient+1
 12106  1F5F  3000               	movlw	0
 12107  1F60  00F9               	movwf	___lldiv@quotient
 12108  1F61  0873               	movf	___lldiv@divisor+3,w
 12109  1F62  0472               	iorwf	___lldiv@divisor+2,w
 12110  1F63  0471               	iorwf	___lldiv@divisor+1,w
 12111  1F64  0470               	iorwf	___lldiv@divisor,w
 12112  1F65  1903               	skipnz
 12113  1F66  2FA2               	goto	l3644
 12114  1F67  01FD               	clrf	___lldiv@counter
 12115  1F68  0AFD               	incf	___lldiv@counter,f
 12116  1F69                     l3630:	
 12117  1F69  1BF3               	btfsc	___lldiv@divisor+3,7
 12118  1F6A  2F77               	goto	l3632
 12119  1F6B  3001               	movlw	1
 12120  1F6C                     u2895:	
 12121  1F6C  35F0               	lslf	___lldiv@divisor,f
 12122  1F6D  0DF1               	rlf	___lldiv@divisor+1,f
 12123  1F6E  0DF2               	rlf	___lldiv@divisor+2,f
 12124  1F6F  0DF3               	rlf	___lldiv@divisor+3,f
 12125  1F70  0B89               	decfsz	9,f
 12126  1F71  2F6C               	goto	u2895
 12127  1F72  3001               	movlw	1
 12128  1F73  00F8               	movwf	??___lldiv
 12129  1F74  0878               	movf	??___lldiv,w
 12130  1F75  07FD               	addwf	___lldiv@counter,f
 12131  1F76  2F69               	goto	l3630
 12132  1F77                     l3632:	
 12133  1F77  3001               	movlw	1
 12134  1F78                     u2915:	
 12135  1F78  35F9               	lslf	___lldiv@quotient,f
 12136  1F79  0DFA               	rlf	___lldiv@quotient+1,f
 12137  1F7A  0DFB               	rlf	___lldiv@quotient+2,f
 12138  1F7B  0DFC               	rlf	___lldiv@quotient+3,f
 12139  1F7C  0B89               	decfsz	9,f
 12140  1F7D  2F78               	goto	u2915
 12141  1F7E  0873               	movf	___lldiv@divisor+3,w
 12142  1F7F  0277               	subwf	___lldiv@dividend+3,w
 12143  1F80  1D03               	skipz
 12144  1F81  2F8C               	goto	u2925
 12145  1F82  0872               	movf	___lldiv@divisor+2,w
 12146  1F83  0276               	subwf	___lldiv@dividend+2,w
 12147  1F84  1D03               	skipz
 12148  1F85  2F8C               	goto	u2925
 12149  1F86  0871               	movf	___lldiv@divisor+1,w
 12150  1F87  0275               	subwf	___lldiv@dividend+1,w
 12151  1F88  1D03               	skipz
 12152  1F89  2F8C               	goto	u2925
 12153  1F8A  0870               	movf	___lldiv@divisor,w
 12154  1F8B  0274               	subwf	___lldiv@dividend,w
 12155  1F8C                     u2925:	
 12156  1F8C  1C03               	skipc
 12157  1F8D  2F97               	goto	l3640
 12158  1F8E  0870               	movf	___lldiv@divisor,w
 12159  1F8F  02F4               	subwf	___lldiv@dividend,f
 12160  1F90  0871               	movf	___lldiv@divisor+1,w
 12161  1F91  3BF5               	subwfb	___lldiv@dividend+1,f
 12162  1F92  0872               	movf	___lldiv@divisor+2,w
 12163  1F93  3BF6               	subwfb	___lldiv@dividend+2,f
 12164  1F94  0873               	movf	___lldiv@divisor+3,w
 12165  1F95  3BF7               	subwfb	___lldiv@dividend+3,f
 12166  1F96  1479               	bsf	___lldiv@quotient,0
 12167  1F97                     l3640:	
 12168  1F97  3001               	movlw	1
 12169  1F98                     u2935:	
 12170  1F98  36F3               	lsrf	___lldiv@divisor+3,f
 12171  1F99  0CF2               	rrf	___lldiv@divisor+2,f
 12172  1F9A  0CF1               	rrf	___lldiv@divisor+1,f
 12173  1F9B  0CF0               	rrf	___lldiv@divisor,f
 12174  1F9C  0B89               	decfsz	9,f
 12175  1F9D  2F98               	goto	u2935
 12176  1F9E  3001               	movlw	1
 12177  1F9F  02FD               	subwf	___lldiv@counter,f
 12178  1FA0  1D03               	btfss	3,2
 12179  1FA1  2F77               	goto	l3632
 12180  1FA2                     l3644:	
 12181  1FA2  087C               	movf	___lldiv@quotient+3,w
 12182  1FA3  00F3               	movwf	?___lldiv+3
 12183  1FA4  087B               	movf	___lldiv@quotient+2,w
 12184  1FA5  00F2               	movwf	?___lldiv+2
 12185  1FA6  087A               	movf	___lldiv@quotient+1,w
 12186  1FA7  00F1               	movwf	?___lldiv+1
 12187  1FA8  0879               	movf	___lldiv@quotient,w
 12188  1FA9  00F0               	movwf	?___lldiv
 12189  1FAA  0008               	return
 12190  1FAB                     __end_of___lldiv:	
 12191                           
 12192                           	psect	text14
 12193  13CC                     __ptext14:	
 12194 ;; *************** function _UIntToHexString *****************
 12195 ;; Defined at:
 12196 ;;		line 138 in file "main.c"
 12197 ;; Parameters:    Size  Location     Type
 12198 ;;  n               4    9[BANK0 ] unsigned long 
 12199 ;;  dest            1   13[BANK0 ] PTR unsigned char 
 12200 ;;		 -> checksum(6), 
 12201 ;; Auto vars:     Size  Location     Type
 12202 ;;  remainder       4   20[BANK0 ] unsigned long 
 12203 ;;  i               4   24[BANK0 ] unsigned long 
 12204 ;; Return value:  Size  Location     Type
 12205 ;;                  1    wreg      void 
 12206 ;; Registers used:
 12207 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12208 ;; Tracked objects:
 12209 ;;		On entry : 0/0
 12210 ;;		On exit  : 0/0
 12211 ;;		Unchanged: 0/0
 12212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12213 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12214 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12215 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12216 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12217 ;;Total ram usage:       19 bytes
 12218 ;; Hardware stack levels used:    1
 12219 ;; Hardware stack levels required when called:    5
 12220 ;; This function calls:
 12221 ;;		_ReverseString
 12222 ;; This function is called by:
 12223 ;;		_main
 12224 ;; This function uses a non-reentrant model
 12225 ;;
 12226                           
 12227                           
 12228                           ;psect for function _UIntToHexString
 12229  13CC                     _UIntToHexString:	
 12230                           
 12231                           ;main.c: 138: void UIntToHexString(uint32_t n, char* dest);main.c: 139: {;main.c: 140:  
      +                             uint32_t i = 0;
 12232                           
 12233                           ;incstack = 0
 12234                           ; Regs used in _UIntToHexString: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12235  13CC  3000               	movlw	0
 12236  13CD  0140               	movlb	0	; select bank0
 12237  13CE  00BB               	movwf	UIntToHexString@i+3
 12238  13CF  3000               	movlw	0
 12239  13D0  00BA               	movwf	UIntToHexString@i+2
 12240  13D1  3000               	movlw	0
 12241  13D2  00B9               	movwf	UIntToHexString@i+1
 12242  13D3  3000               	movlw	0
 12243  13D4  00B8               	movwf	UIntToHexString@i
 12244  13D5                     l683:	
 12245                           ;main.c: 141:     do {
 12246                           
 12247                           
 12248                           ;main.c: 144:         uint32_t remainder = n % 16;
 12249  13D5  300F               	movlw	15
 12250  13D6  0529               	andwf	UIntToHexString@n,w
 12251  13D7  00B4               	movwf	UIntToHexString@remainder
 12252  13D8  3000               	movlw	0
 12253  13D9  052A               	andwf	UIntToHexString@n+1,w
 12254  13DA  00B5               	movwf	UIntToHexString@remainder+1
 12255  13DB  3000               	movlw	0
 12256  13DC  052B               	andwf	UIntToHexString@n+2,w
 12257  13DD  00B6               	movwf	UIntToHexString@remainder+2
 12258  13DE  3000               	movlw	0
 12259  13DF  052C               	andwf	UIntToHexString@n+3,w
 12260  13E0  00B7               	movwf	UIntToHexString@remainder+3
 12261                           
 12262                           ;main.c: 146:         dest[i++] = remainder + (remainder >= 10 ? 55 : '0');
 12263  13E1  0837               	movf	UIntToHexString@remainder+3,w
 12264  13E2  1D03               	btfss	3,2
 12265  13E3  2BF6               	goto	l4522
 12266  13E4  0836               	movf	UIntToHexString@remainder+2,w
 12267  13E5  1D03               	btfss	3,2
 12268  13E6  2BF6               	goto	l4522
 12269  13E7  0835               	movf	UIntToHexString@remainder+1,w
 12270  13E8  1D03               	btfss	3,2
 12271  13E9  2BF6               	goto	l4522
 12272  13EA  300A               	movlw	10
 12273  13EB  0234               	subwf	UIntToHexString@remainder,w
 12274  13EC  1803               	btfsc	3,0
 12275  13ED  2BF6               	goto	l4522
 12276  13EE  3000               	movlw	0
 12277  13EF  00B3               	movwf	_UIntToHexString$1811+3
 12278  13F0  3000               	movlw	0
 12279  13F1  00B2               	movwf	_UIntToHexString$1811+2
 12280  13F2  3000               	movlw	0
 12281  13F3  00B1               	movwf	_UIntToHexString$1811+1
 12282  13F4  3030               	movlw	48
 12283  13F5  2BFD               	goto	L4
 12284  13F6                     l4522:	
 12285  13F6  3000               	movlw	0
 12286  13F7  00B3               	movwf	_UIntToHexString$1811+3
 12287  13F8  3000               	movlw	0
 12288  13F9  00B2               	movwf	_UIntToHexString$1811+2
 12289  13FA  3000               	movlw	0
 12290  13FB  00B1               	movwf	_UIntToHexString$1811+1
 12291  13FC  3037               	movlw	55
 12292  13FD                     L4:	
 12293  13FD  00B0               	movwf	_UIntToHexString$1811
 12294  13FE  0830               	movf	_UIntToHexString$1811,w
 12295  13FF  0734               	addwf	UIntToHexString@remainder,w
 12296  1400  00AE               	movwf	??_UIntToHexString
 12297  1401  0838               	movf	UIntToHexString@i,w
 12298  1402  072D               	addwf	UIntToHexString@dest,w
 12299  1403  00AF               	movwf	??_UIntToHexString+1
 12300  1404  082F               	movf	??_UIntToHexString+1,w
 12301  1405  0086               	movwf	6
 12302  1406  3001               	movlw	1	; select bank2/3
 12303  1407  0087               	movwf	7
 12304  1408  082E               	movf	??_UIntToHexString,w
 12305  1409  0081               	movwf	1
 12306  140A  3001               	movlw	1
 12307  140B  07B8               	addwf	UIntToHexString@i,f
 12308  140C  3000               	movlw	0
 12309  140D  3DB9               	addwfc	UIntToHexString@i+1,f
 12310  140E  3000               	movlw	0
 12311  140F  3DBA               	addwfc	UIntToHexString@i+2,f
 12312  1410  3000               	movlw	0
 12313  1411  3DBB               	addwfc	UIntToHexString@i+3,f
 12314                           
 12315                           ;main.c: 148:     } while ((n /= 16) > 0);
 12316  1412  3004               	movlw	4
 12317  1413                     u4265:	
 12318  1413  36AC               	lsrf	UIntToHexString@n+3,f
 12319  1414  0CAB               	rrf	UIntToHexString@n+2,f
 12320  1415  0CAA               	rrf	UIntToHexString@n+1,f
 12321  1416  0CA9               	rrf	UIntToHexString@n,f
 12322  1417  0B89               	decfsz	9,f
 12323  1418  2C13               	goto	u4265
 12324  1419  082C               	movf	UIntToHexString@n+3,w
 12325  141A  042B               	iorwf	UIntToHexString@n+2,w
 12326  141B  042A               	iorwf	UIntToHexString@n+1,w
 12327  141C  0429               	iorwf	UIntToHexString@n,w
 12328  141D  1903               	btfsc	3,2
 12329  141E  2C33               	goto	l4534
 12330  141F  2BD5               	goto	l683
 12331  1420                     l4530:	
 12332                           
 12333                           ;main.c: 150:     {;main.c: 151:         dest[i] = '0';
 12334  1420  3030               	movlw	48
 12335  1421  00AE               	movwf	??_UIntToHexString
 12336  1422  0838               	movf	UIntToHexString@i,w
 12337  1423  072D               	addwf	UIntToHexString@dest,w
 12338  1424  00AF               	movwf	??_UIntToHexString+1
 12339  1425  082F               	movf	??_UIntToHexString+1,w
 12340  1426  0086               	movwf	6
 12341  1427  3001               	movlw	1	; select bank2/3
 12342  1428  0087               	movwf	7
 12343  1429  082E               	movf	??_UIntToHexString,w
 12344  142A  0081               	movwf	1
 12345                           
 12346                           ;main.c: 152:         i++;
 12347  142B  3001               	movlw	1
 12348  142C  07B8               	addwf	UIntToHexString@i,f
 12349  142D  3000               	movlw	0
 12350  142E  3DB9               	addwfc	UIntToHexString@i+1,f
 12351  142F  3000               	movlw	0
 12352  1430  3DBA               	addwfc	UIntToHexString@i+2,f
 12353  1431  3000               	movlw	0
 12354  1432  3DBB               	addwfc	UIntToHexString@i+3,f
 12355  1433                     l4534:	
 12356                           
 12357                           ;main.c: 149:     while (i < 4)
 12358  1433  083B               	movf	UIntToHexString@i+3,w
 12359  1434  1D03               	btfss	3,2
 12360  1435  2C40               	goto	l4536
 12361  1436  083A               	movf	UIntToHexString@i+2,w
 12362  1437  1D03               	btfss	3,2
 12363  1438  2C40               	goto	l4536
 12364  1439  0839               	movf	UIntToHexString@i+1,w
 12365  143A  1D03               	btfss	3,2
 12366  143B  2C40               	goto	l4536
 12367  143C  3004               	movlw	4
 12368  143D  0238               	subwf	UIntToHexString@i,w
 12369  143E  1C03               	btfss	3,0
 12370  143F  2C20               	goto	l4530
 12371  1440                     l4536:	
 12372                           
 12373                           ;main.c: 154:     ReverseString(dest);
 12374  1440  082D               	movf	UIntToHexString@dest,w
 12375  1441  3191  213B         	fcall	_ReverseString
 12376  1443  0008               	return
 12377  1444                     __end_of_UIntToHexString:	
 12378                           
 12379                           	psect	text15
 12380  1940                     __ptext15:	
 12381 ;; *************** function _TransmitString *****************
 12382 ;; Defined at:
 12383 ;;		line 71 in file "rtty.c"
 12384 ;; Parameters:    Size  Location     Type
 12385 ;;  message         2    3[BANK0 ] PTR unsigned char 
 12386 ;;		 -> STR_11(3), txdata(140), 
 12387 ;; Auto vars:     Size  Location     Type
 12388 ;;  i               2    8[BANK0 ] int 
 12389 ;;  counti          2    6[BANK0 ] int 
 12390 ;; Return value:  Size  Location     Type
 12391 ;;                  1    wreg      void 
 12392 ;; Registers used:
 12393 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12394 ;; Tracked objects:
 12395 ;;		On entry : 0/0
 12396 ;;		On exit  : 0/0
 12397 ;;		Unchanged: 0/0
 12398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12399 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12400 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12401 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12402 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12403 ;;Total ram usage:        7 bytes
 12404 ;; Hardware stack levels used:    1
 12405 ;; Hardware stack levels required when called:    6
 12406 ;; This function calls:
 12407 ;;		_TransmitChar
 12408 ;;		_strlen
 12409 ;; This function is called by:
 12410 ;;		_main
 12411 ;; This function uses a non-reentrant model
 12412 ;;
 12413                           
 12414                           
 12415                           ;psect for function _TransmitString
 12416  1940                     _TransmitString:	
 12417                           
 12418                           ;rtty.c: 71: void TransmitString(char* message);rtty.c: 72: {;rtty.c: 76:  for (int i = 
      +                          0, counti = strlen(message); i < counti; i++)
 12419                           
 12420                           ;incstack = 0
 12421                           ; Regs used in _TransmitString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 12422  1940  0140               	movlb	0	; select bank0
 12423  1941  01A8               	clrf	TransmitString@i
 12424  1942  01A9               	clrf	TransmitString@i+1
 12425  1943  0824               	movf	TransmitString@message+1,w
 12426  1944  00F1               	movwf	strlen@s+1
 12427  1945  0823               	movf	TransmitString@message,w
 12428  1946  00F0               	movwf	strlen@s
 12429  1947  31A6  26A0  3199   	fcall	_strlen
 12430  194A  0871               	movf	?_strlen+1,w
 12431  194B  0140               	movlb	0	; select bank0
 12432  194C  00A7               	movwf	TransmitString@counti+1
 12433  194D  0870               	movf	?_strlen,w
 12434  194E  00A6               	movwf	TransmitString@counti
 12435  194F                     l5442:	
 12436  194F  0829               	movf	TransmitString@i+1,w
 12437  1950  3A80               	xorlw	128
 12438  1951  00A5               	movwf	??_TransmitString
 12439  1952  0827               	movf	TransmitString@counti+1,w
 12440  1953  3A80               	xorlw	128
 12441  1954  0225               	subwf	??_TransmitString,w
 12442  1955  1D03               	skipz
 12443  1956  2959               	goto	u5495
 12444  1957  0826               	movf	TransmitString@counti,w
 12445  1958  0228               	subwf	TransmitString@i,w
 12446  1959                     u5495:	
 12447  1959  1803               	btfsc	3,0
 12448  195A  0008               	return
 12449                           
 12450                           ;rtty.c: 77:  {;rtty.c: 78:   TransmitChar(message[i]);
 12451  195B  0140               	movlb	0	; select bank0
 12452  195C  0823               	movf	TransmitString@message,w
 12453  195D  0728               	addwf	TransmitString@i,w
 12454  195E  0084               	movwf	4
 12455  195F  0824               	movf	TransmitString@message+1,w
 12456  1960  3D29               	addwfc	TransmitString@i+1,w
 12457  1961  0085               	movwf	5
 12458  1962  0800               	movf	0,w	;code access
 12459  1963  319A  2280  3199   	fcall	_TransmitChar
 12460                           
 12461                           ;rtty.c: 79:  }
 12462  1966  3001               	movlw	1
 12463  1967  0140               	movlb	0	; select bank0
 12464  1968  07A8               	addwf	TransmitString@i,f
 12465  1969  3000               	movlw	0
 12466  196A  3DA9               	addwfc	TransmitString@i+1,f
 12467  196B  294F               	goto	l5442
 12468  196C                     __end_of_TransmitString:	
 12469                           
 12470                           	psect	text16
 12471  1A80                     __ptext16:	
 12472 ;; *************** function _TransmitChar *****************
 12473 ;; Defined at:
 12474 ;;		line 49 in file "rtty.c"
 12475 ;; Parameters:    Size  Location     Type
 12476 ;;  byte            1    wreg     unsigned char 
 12477 ;; Auto vars:     Size  Location     Type
 12478 ;;  byte            1    0[BANK0 ] unsigned char 
 12479 ;;  i               2    1[BANK0 ] int 
 12480 ;; Return value:  Size  Location     Type
 12481 ;;                  1    wreg      void 
 12482 ;; Registers used:
 12483 ;;		wreg, status,2, status,0, pclath, cstack
 12484 ;; Tracked objects:
 12485 ;;		On entry : 0/0
 12486 ;;		On exit  : 0/0
 12487 ;;		Unchanged: 0/0
 12488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12490 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12491 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12492 ;;      Totals:         1       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12493 ;;Total ram usage:        4 bytes
 12494 ;; Hardware stack levels used:    1
 12495 ;; Hardware stack levels required when called:    5
 12496 ;; This function calls:
 12497 ;;		_TransmitBit
 12498 ;; This function is called by:
 12499 ;;		_TransmitString
 12500 ;; This function uses a non-reentrant model
 12501 ;;
 12502                           
 12503                           
 12504                           ;psect for function _TransmitChar
 12505  1A80                     _TransmitChar:	
 12506                           
 12507                           ;incstack = 0
 12508                           ; Regs used in _TransmitChar: [wreg+status,2+status,0+pclath+cstack]
 12509                           ;TransmitChar@byte stored from wreg
 12510  1A80  0140               	movlb	0	; select bank0
 12511  1A81  00A0               	movwf	TransmitChar@byte
 12512                           
 12513                           ;rtty.c: 49: void TransmitChar(char byte);rtty.c: 50: {;rtty.c: 60:     TransmitBit(0);
 12514  1A82  3000               	movlw	0
 12515  1A83  31A6  2677  319A   	fcall	_TransmitBit
 12516                           
 12517                           ;rtty.c: 62:  for (int i = 0; i < 7; i++)
 12518  1A86  0140               	movlb	0	; select bank0
 12519  1A87  01A1               	clrf	TransmitChar@i
 12520  1A88  01A2               	clrf	TransmitChar@i+1
 12521  1A89                     l5344:	
 12522                           
 12523                           ;rtty.c: 63:  {;rtty.c: 64:   TransmitBit((byte >> i) & 1);
 12524  1A89  0140               	movlb	0	; select bank0
 12525  1A8A  0820               	movf	TransmitChar@byte,w
 12526  1A8B  00FD               	movwf	??_TransmitChar
 12527  1A8C  0A21               	incf	TransmitChar@i,w
 12528  1A8D  2A8F               	goto	u5374
 12529  1A8E                     u5375:	
 12530  1A8E  36FD               	lsrf	??_TransmitChar,f
 12531  1A8F                     u5374:	
 12532  1A8F  0B89               	decfsz	9,f
 12533  1A90  2A8E               	goto	u5375
 12534  1A91  1C7D               	btfss	??_TransmitChar,0
 12535  1A92  2A95               	goto	u5380
 12536  1A93  3001               	movlw	1
 12537  1A94  2A96               	goto	u5390
 12538  1A95                     u5380:	
 12539  1A95  3000               	movlw	0
 12540  1A96                     u5390:	
 12541  1A96  31A6  2677  319A   	fcall	_TransmitBit
 12542                           
 12543                           ;rtty.c: 65:  }
 12544  1A99  3001               	movlw	1
 12545  1A9A  0140               	movlb	0	; select bank0
 12546  1A9B  07A1               	addwf	TransmitChar@i,f
 12547  1A9C  3000               	movlw	0
 12548  1A9D  3DA2               	addwfc	TransmitChar@i+1,f
 12549  1A9E  0822               	movf	TransmitChar@i+1,w
 12550  1A9F  3A80               	xorlw	128
 12551  1AA0  00FD               	movwf	??_TransmitChar
 12552  1AA1  3080               	movlw	128
 12553  1AA2  027D               	subwf	??_TransmitChar,w
 12554  1AA3  1D03               	skipz
 12555  1AA4  2AA7               	goto	u5405
 12556  1AA5  3007               	movlw	7
 12557  1AA6  0221               	subwf	TransmitChar@i,w
 12558  1AA7                     u5405:	
 12559  1AA7  1C03               	skipc
 12560  1AA8  2A89               	goto	l5344
 12561                           
 12562                           ;rtty.c: 67:  TransmitBit(1);
 12563  1AA9  3001               	movlw	1
 12564  1AAA  31A6  2677  319A   	fcall	_TransmitBit
 12565                           
 12566                           ;rtty.c: 68:  TransmitBit(1);
 12567  1AAD  3001               	movlw	1
 12568  1AAE  31A6  2677         	fcall	_TransmitBit
 12569  1AB0  0008               	return
 12570  1AB1                     __end_of_TransmitChar:	
 12571                           
 12572                           	psect	text17
 12573  2677                     __ptext17:	
 12574 ;; *************** function _TransmitBit *****************
 12575 ;; Defined at:
 12576 ;;		line 29 in file "rtty.c"
 12577 ;; Parameters:    Size  Location     Type
 12578 ;;  b               1    wreg     _Bool 
 12579 ;; Auto vars:     Size  Location     Type
 12580 ;;  b               1   12[COMMON] _Bool 
 12581 ;; Return value:  Size  Location     Type
 12582 ;;                  1    wreg      void 
 12583 ;; Registers used:
 12584 ;;		wreg, status,2, status,0, pclath, cstack
 12585 ;; Tracked objects:
 12586 ;;		On entry : 0/0
 12587 ;;		On exit  : 0/0
 12588 ;;		Unchanged: 0/0
 12589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12591 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12593 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12594 ;;Total ram usage:        1 bytes
 12595 ;; Hardware stack levels used:    1
 12596 ;; Hardware stack levels required when called:    4
 12597 ;; This function calls:
 12598 ;;		_Sleep
 12599 ;; This function is called by:
 12600 ;;		_TransmitChar
 12601 ;; This function uses a non-reentrant model
 12602 ;;
 12603                           
 12604                           
 12605                           ;psect for function _TransmitBit
 12606  2677                     _TransmitBit:	
 12607                           
 12608                           ;incstack = 0
 12609                           ; Regs used in _TransmitBit: [wreg+status,2+status,0+pclath+cstack]
 12610                           ;TransmitBit@b stored from wreg
 12611  2677  00FC               	movwf	TransmitBit@b
 12612                           
 12613                           ;rtty.c: 29: void TransmitBit(_Bool b);rtty.c: 30: {;rtty.c: 31:  if (b)
 12614  2678  087C               	movf	TransmitBit@b,w
 12615  2679  1903               	btfsc	3,2
 12616  267A  2E7E               	goto	l865
 12617                           
 12618                           ;rtty.c: 32:  {;rtty.c: 33:   do { LATAbits.LATA4 = 1; } while(0);
 12619  267B  0140               	movlb	0	; select bank0
 12620  267C  1618               	bsf	24,4	;volatile
 12621  267D  2E80               	goto	l5250
 12622  267E                     l865:	
 12623                           ;rtty.c: 36:  {;rtty.c: 37:   do { LATAbits.LATA4 = 0; } while(0);
 12624                           
 12625  267E  0140               	movlb	0	; select bank0
 12626  267F  1218               	bcf	24,4	;volatile
 12627  2680                     l5250:	
 12628  2680  3000               	movlw	0
 12629  2681  00F3               	movwf	Sleep@ms+3
 12630  2682  3000               	movlw	0
 12631  2683  00F2               	movwf	Sleep@ms+2
 12632  2684  3000               	movlw	0
 12633  2685  00F1               	movwf	Sleep@ms+1
 12634  2686  3014               	movlw	20
 12635  2687  00F0               	movwf	Sleep@ms
 12636  2688  3199  2115         	fcall	_Sleep
 12637  268A  0008               	return
 12638  268B                     __end_of_TransmitBit:	
 12639                           
 12640                           	psect	text18
 12641  1D7A                     __ptext18:	
 12642 ;; *************** function _SetupGPS *****************
 12643 ;; Defined at:
 12644 ;;		line 429 in file "main.c"
 12645 ;; Parameters:    Size  Location     Type
 12646 ;;		None
 12647 ;; Auto vars:     Size  Location     Type
 12648 ;;		None
 12649 ;; Return value:  Size  Location     Type
 12650 ;;                  1    wreg      void 
 12651 ;; Registers used:
 12652 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12653 ;; Tracked objects:
 12654 ;;		On entry : 0/0
 12655 ;;		On exit  : 0/0
 12656 ;;		Unchanged: 0/0
 12657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12660 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12661 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12662 ;;Total ram usage:        1 bytes
 12663 ;; Hardware stack levels used:    1
 12664 ;; Hardware stack levels required when called:    5
 12665 ;; This function calls:
 12666 ;;		_GPS_HasAcknowledged
 12667 ;;		_GPS_SendUBX
 12668 ;;		_Sleep
 12669 ;;		_WriteGPS
 12670 ;; This function is called by:
 12671 ;;		_main
 12672 ;; This function uses a non-reentrant model
 12673 ;;
 12674                           
 12675                           
 12676                           ;psect for function _SetupGPS
 12677  1D7A                     _SetupGPS:	
 12678                           
 12679                           ;incstack = 0
 12680                           ; Regs used in _SetupGPS: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12681                           ;main.c: 431:     do { LATAbits.LATA5 = 0; } while(0);
 12682  1D7A  0140               	movlb	0	; select bank0
 12683  1D7B  1298               	bcf	24,5	;volatile
 12684  1D7C                     l5418:	
 12685                           
 12686                           ;main.c: 432:     while (!gps_configured)
 12687  1D7C  0141               	movlb	1	; select bank1
 12688  1D7D  086C               	movf	_gps_configured^(0+128),w
 12689  1D7E  1D03               	btfss	3,2
 12690  1D7F  2D98               	goto	l783
 12691                           
 12692                           ;main.c: 433:     {;main.c: 434:         GPS_SendUBX(setNavFlightMode);
 12693  1D80  3020               	movlw	(low (_setNavFlightMode| (0+512)))& (0+255)
 12694  1D81  3198  2049  319D   	fcall	_GPS_SendUBX
 12695                           
 12696                           ;main.c: 435:         gps_configured = GPS_HasAcknowledged(setNavFlightMode);
 12697  1D84  3020               	movlw	(low (_setNavFlightMode| (0+512)))& (0+255)
 12698  1D85  3195  253F  319D   	fcall	_GPS_HasAcknowledged
 12699  1D88  00FC               	movwf	??_SetupGPS
 12700  1D89  087C               	movf	??_SetupGPS,w
 12701  1D8A  0141               	movlb	1	; select bank1
 12702  1D8B  00EC               	movwf	_gps_configured^(0+128)
 12703                           
 12704                           ;main.c: 436:         Sleep(500);
 12705  1D8C  3000               	movlw	0
 12706  1D8D  00F3               	movwf	Sleep@ms+3
 12707  1D8E  3000               	movlw	0
 12708  1D8F  00F2               	movwf	Sleep@ms+2
 12709  1D90  3001               	movlw	1
 12710  1D91  00F1               	movwf	Sleep@ms+1
 12711  1D92  30F4               	movlw	244
 12712  1D93  00F0               	movwf	Sleep@ms
 12713  1D94  3199  2115  319D   	fcall	_Sleep
 12714  1D97  2D7C               	goto	l5418
 12715  1D98                     l783:	
 12716                           ;main.c: 438:     do { LATAbits.LATA5 = 1; } while(0);
 12717                           
 12718  1D98  0140               	movlb	0	; select bank0
 12719  1D99  1698               	bsf	24,5	;volatile
 12720                           
 12721                           ;main.c: 439:     gps_configured = 0;
 12722  1D9A  0141               	movlb	1	; select bank1
 12723  1D9B  01EC               	clrf	_gps_configured^(0+128)
 12724                           
 12725                           ;main.c: 441:     WriteGPS("$PUBX,40,GLL,0,0,0,0*5C\r\n");
 12726  1D9C  304E               	movlw	low (STR_1| (0+32768))
 12727  1D9D  00F5               	movwf	WriteGPS@message
 12728  1D9E  30A8               	movlw	high (STR_1| (0+32768))
 12729  1D9F  00F6               	movwf	WriteGPS@message+1
 12730  1DA0  3198  2070  319D   	fcall	_WriteGPS
 12731                           
 12732                           ;main.c: 442:     WriteGPS("$PUBX,40,GGA,0,0,0,0*5A\r\n");
 12733  1DA3  3034               	movlw	low (STR_2| (0+32768))
 12734  1DA4  00F5               	movwf	WriteGPS@message
 12735  1DA5  30A8               	movlw	high (STR_2| (0+32768))
 12736  1DA6  00F6               	movwf	WriteGPS@message+1
 12737  1DA7  3198  2070  319D   	fcall	_WriteGPS
 12738                           
 12739                           ;main.c: 443:     WriteGPS("$PUBX,40,VTG,0,0,0,0*5E\r\n");
 12740  1DAA  3082               	movlw	low (STR_3| (0+32768))
 12741  1DAB  00F5               	movwf	WriteGPS@message
 12742  1DAC  30A8               	movlw	high (STR_3| (0+32768))
 12743  1DAD  00F6               	movwf	WriteGPS@message+1
 12744  1DAE  3198  2070  319D   	fcall	_WriteGPS
 12745                           
 12746                           ;main.c: 444:     WriteGPS("$PUBX,40,GSV,0,0,0,0*59\r\n");
 12747  1DB1  301A               	movlw	low (STR_4| (0+32768))
 12748  1DB2  00F5               	movwf	WriteGPS@message
 12749  1DB3  30A8               	movlw	high (STR_4| (0+32768))
 12750  1DB4  00F6               	movwf	WriteGPS@message+1
 12751  1DB5  3198  2070  319D   	fcall	_WriteGPS
 12752                           
 12753                           ;main.c: 445:     WriteGPS("$PUBX,40,GSA,0,0,0,0*4E\r\n");
 12754  1DB8  3068               	movlw	low (STR_5| (0+32768))
 12755  1DB9  00F5               	movwf	WriteGPS@message
 12756  1DBA  30A8               	movlw	high (STR_5| (0+32768))
 12757  1DBB  00F6               	movwf	WriteGPS@message+1
 12758  1DBC  3198  2070  319D   	fcall	_WriteGPS
 12759                           
 12760                           ;main.c: 446:     WriteGPS("$PUBX,40,RMC,0,0,0,0*47\r\n");
 12761  1DBF  3000               	movlw	low (STR_6| (0+32768))
 12762  1DC0  00F5               	movwf	WriteGPS@message
 12763  1DC1  30A8               	movlw	high (STR_6| (0+32768))
 12764  1DC2  00F6               	movwf	WriteGPS@message+1
 12765  1DC3  3198  2070         	fcall	_WriteGPS
 12766  1DC5  0008               	return
 12767  1DC6                     __end_of_SetupGPS:	
 12768                           
 12769                           	psect	text19
 12770  1849                     __ptext19:	
 12771 ;; *************** function _GPS_SendUBX *****************
 12772 ;; Defined at:
 12773 ;;		line 345 in file "main.c"
 12774 ;; Parameters:    Size  Location     Type
 12775 ;;  data            1    wreg     PTR unsigned char 
 12776 ;;		 -> setNavFlightMode(44), 
 12777 ;; Auto vars:     Size  Location     Type
 12778 ;;  data            1    9[COMMON] PTR unsigned char 
 12779 ;;		 -> setNavFlightMode(44), 
 12780 ;;  i               2    7[COMMON] int 
 12781 ;;  length          2    5[COMMON] int 
 12782 ;; Return value:  Size  Location     Type
 12783 ;;                  1    wreg      void 
 12784 ;; Registers used:
 12785 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12786 ;; Tracked objects:
 12787 ;;		On entry : 0/0
 12788 ;;		On exit  : 0/0
 12789 ;;		Unchanged: 0/0
 12790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12792 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12793 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12794 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12795 ;;Total ram usage:        6 bytes
 12796 ;; Hardware stack levels used:    1
 12797 ;; Hardware stack levels required when called:    4
 12798 ;; This function calls:
 12799 ;;		_EUSART1_Write
 12800 ;;		_GetLengthUBX
 12801 ;; This function is called by:
 12802 ;;		_SetupGPS
 12803 ;; This function uses a non-reentrant model
 12804 ;;
 12805                           
 12806                           
 12807                           ;psect for function _GPS_SendUBX
 12808  1849                     _GPS_SendUBX:	
 12809                           
 12810                           ;incstack = 0
 12811                           ; Regs used in _GPS_SendUBX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12812                           ;GPS_SendUBX@data stored from wreg
 12813  1849  00F9               	movwf	GPS_SendUBX@data
 12814                           
 12815                           ;main.c: 345: void GPS_SendUBX(uint8_t* data);main.c: 346: {;main.c: 347:     for (int i
      +                           = 0, length = GetLengthUBX(data); i < length; i++)
 12816  184A  01F7               	clrf	GPS_SendUBX@i
 12817  184B  01F8               	clrf	GPS_SendUBX@i+1
 12818  184C  0879               	movf	GPS_SendUBX@data,w
 12819  184D  31A6  2652  3198   	fcall	_GetLengthUBX
 12820  1850  0871               	movf	?_GetLengthUBX+1,w
 12821  1851  00F6               	movwf	GPS_SendUBX@length+1
 12822  1852  0870               	movf	?_GetLengthUBX,w
 12823  1853  00F5               	movwf	GPS_SendUBX@length
 12824  1854                     l4244:	
 12825  1854  0878               	movf	GPS_SendUBX@i+1,w
 12826  1855  3A80               	xorlw	128
 12827  1856  00F4               	movwf	??_GPS_SendUBX
 12828  1857  0876               	movf	GPS_SendUBX@length+1,w
 12829  1858  3A80               	xorlw	128
 12830  1859  0274               	subwf	??_GPS_SendUBX,w
 12831  185A  1D03               	skipz
 12832  185B  285E               	goto	u3855
 12833  185C  0875               	movf	GPS_SendUBX@length,w
 12834  185D  0277               	subwf	GPS_SendUBX@i,w
 12835  185E                     u3855:	
 12836  185E  1803               	btfsc	3,0
 12837  185F  0008               	return
 12838                           
 12839                           ;main.c: 348:     {;main.c: 349:         EUSART1_Write(data[i]);
 12840  1860  0877               	movf	GPS_SendUBX@i,w
 12841  1861  0779               	addwf	GPS_SendUBX@data,w
 12842  1862  00F4               	movwf	??_GPS_SendUBX
 12843  1863  0874               	movf	??_GPS_SendUBX,w
 12844  1864  0086               	movwf	6
 12845  1865  3002               	movlw	2	; select bank4/5
 12846  1866  0087               	movwf	7
 12847  1867  0801               	movf	1,w
 12848  1868  31A5  25D4  3198   	fcall	_EUSART1_Write
 12849                           
 12850                           ;main.c: 350:     }
 12851  186B  3001               	movlw	1
 12852  186C  07F7               	addwf	GPS_SendUBX@i,f
 12853  186D  3000               	movlw	0
 12854  186E  3DF8               	addwfc	GPS_SendUBX@i+1,f
 12855  186F  2854               	goto	l4244
 12856  1870                     __end_of_GPS_SendUBX:	
 12857                           
 12858                           	psect	text20
 12859  2652                     __ptext20:	
 12860 ;; *************** function _GetLengthUBX *****************
 12861 ;; Defined at:
 12862 ;;		line 339 in file "main.c"
 12863 ;; Parameters:    Size  Location     Type
 12864 ;;  data            1    wreg     PTR unsigned char 
 12865 ;;		 -> setNavFlightMode(44), 
 12866 ;; Auto vars:     Size  Location     Type
 12867 ;;  data            1    3[COMMON] PTR unsigned char 
 12868 ;;		 -> setNavFlightMode(44), 
 12869 ;; Return value:  Size  Location     Type
 12870 ;;                  2    0[COMMON] unsigned int 
 12871 ;; Registers used:
 12872 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 12873 ;; Tracked objects:
 12874 ;;		On entry : 0/0
 12875 ;;		On exit  : 0/0
 12876 ;;		Unchanged: 0/0
 12877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12878 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12879 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12881 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12882 ;;Total ram usage:        4 bytes
 12883 ;; Hardware stack levels used:    1
 12884 ;; Hardware stack levels required when called:    3
 12885 ;; This function calls:
 12886 ;;		Nothing
 12887 ;; This function is called by:
 12888 ;;		_GPS_SendUBX
 12889 ;; This function uses a non-reentrant model
 12890 ;;
 12891                           
 12892                           
 12893                           ;psect for function _GetLengthUBX
 12894  2652                     _GetLengthUBX:	
 12895                           
 12896                           ;incstack = 0
 12897                           ; Regs used in _GetLengthUBX: [wreg-fsr1h+status,2+status,0]
 12898                           ;GetLengthUBX@data stored from wreg
 12899  2652  00F3               	movwf	GetLengthUBX@data
 12900                           
 12901                           ;main.c: 339: size_t GetLengthUBX(uint8_t* data);main.c: 340: {;main.c: 341:     return 
      +                          (short)(8 + (short)((short)data[4] + (short)(data[5] << 8)));
 12902  2653  0873               	movf	GetLengthUBX@data,w
 12903  2654  3E05               	addlw	5
 12904  2655  0086               	movwf	6
 12905  2656  3002               	movlw	2	; select bank4/5
 12906  2657  0087               	movwf	7
 12907  2658  0873               	movf	GetLengthUBX@data,w
 12908  2659  3E04               	addlw	4
 12909  265A  0084               	movwf	4
 12910  265B  3002               	movlw	2	; select bank4/5
 12911  265C  0085               	movwf	5
 12912  265D  0800               	movf	0,w
 12913  265E  3E08               	addlw	8
 12914  265F  00F0               	movwf	?_GetLengthUBX
 12915  2660  3000               	movlw	0
 12916  2661  3D01               	addwfc	1,w
 12917  2662  00F1               	movwf	?_GetLengthUBX+1
 12918  2663  0008               	return
 12919  2664                     __end_of_GetLengthUBX:	
 12920                           
 12921                           	psect	text21
 12922  153F                     __ptext21:	
 12923 ;; *************** function _GPS_HasAcknowledged *****************
 12924 ;; Defined at:
 12925 ;;		line 357 in file "main.c"
 12926 ;; Parameters:    Size  Location     Type
 12927 ;;  data            1    wreg     PTR unsigned char 
 12928 ;;		 -> setNavFlightMode(44), 
 12929 ;; Auto vars:     Size  Location     Type
 12930 ;;  data            1   15[BANK0 ] PTR unsigned char 
 12931 ;;		 -> setNavFlightMode(44), 
 12932 ;;  i               1   17[BANK0 ] unsigned char 
 12933 ;;  ackPacket      10    5[BANK0 ] unsigned char [10]
 12934 ;;  startTime       4    0[BANK0 ] unsigned long 
 12935 ;;  ackByteID       1   16[BANK0 ] unsigned char 
 12936 ;;  ackByte         1    4[BANK0 ] unsigned char 
 12937 ;; Return value:  Size  Location     Type
 12938 ;;                  1    wreg      _Bool 
 12939 ;; Registers used:
 12940 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12941 ;; Tracked objects:
 12942 ;;		On entry : 0/0
 12943 ;;		On exit  : 0/0
 12944 ;;		Unchanged: 0/0
 12945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12947 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12948 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12949 ;;      Totals:         4      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12950 ;;Total ram usage:       22 bytes
 12951 ;; Hardware stack levels used:    1
 12952 ;; Hardware stack levels required when called:    4
 12953 ;; This function calls:
 12954 ;;		_EUSART1_Read
 12955 ;;		_EUSART1_is_rx_ready
 12956 ;; This function is called by:
 12957 ;;		_SetupGPS
 12958 ;; This function uses a non-reentrant model
 12959 ;;
 12960                           
 12961                           
 12962                           ;psect for function _GPS_HasAcknowledged
 12963  153F                     _GPS_HasAcknowledged:	
 12964                           
 12965                           ;incstack = 0
 12966                           ; Regs used in _GPS_HasAcknowledged: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12967                           ;GPS_HasAcknowledged@data stored from wreg
 12968  153F  0140               	movlb	0	; select bank0
 12969  1540  00AF               	movwf	GPS_HasAcknowledged@data
 12970                           
 12971                           ;main.c: 357: _Bool GPS_HasAcknowledged(uint8_t* data);main.c: 358: {;main.c: 359:     u
      +                          int8_t ackPacket[10];;main.c: 360:     uint32_t startTime = ticks;
 12972  1541  0141               	movlb	1	; select bank1
 12973  1542  086B               	movf	(_ticks+3)^(0+128),w
 12974  1543  0140               	movlb	0	; select bank0
 12975  1544  00A3               	movwf	GPS_HasAcknowledged@startTime+3
 12976  1545  0141               	movlb	1	; select bank1
 12977  1546  086A               	movf	(_ticks+2)^(0+128),w
 12978  1547  0140               	movlb	0	; select bank0
 12979  1548  00A2               	movwf	GPS_HasAcknowledged@startTime+2
 12980  1549  0141               	movlb	1	; select bank1
 12981  154A  0869               	movf	(_ticks+1)^(0+128),w
 12982  154B  0140               	movlb	0	; select bank0
 12983  154C  00A1               	movwf	GPS_HasAcknowledged@startTime+1
 12984  154D  0141               	movlb	1	; select bank1
 12985  154E  0868               	movf	_ticks^(0+128),w
 12986  154F  0140               	movlb	0	; select bank0
 12987  1550  00A0               	movwf	GPS_HasAcknowledged@startTime
 12988                           
 12989                           ;main.c: 363:     ackPacket[0] = 0xB5;
 12990  1551  30B5               	movlw	181
 12991  1552  00F0               	movwf	??_GPS_HasAcknowledged
 12992  1553  0870               	movf	??_GPS_HasAcknowledged,w
 12993  1554  00A5               	movwf	GPS_HasAcknowledged@ackPacket
 12994                           
 12995                           ;main.c: 364:     ackPacket[1] = 0x62;
 12996  1555  3062               	movlw	98
 12997  1556  00F0               	movwf	??_GPS_HasAcknowledged
 12998  1557  0870               	movf	??_GPS_HasAcknowledged,w
 12999  1558  00A6               	movwf	GPS_HasAcknowledged@ackPacket+1
 13000                           
 13001                           ;main.c: 365:     ackPacket[2] = 0x05;
 13002  1559  3005               	movlw	5
 13003  155A  00F0               	movwf	??_GPS_HasAcknowledged
 13004  155B  0870               	movf	??_GPS_HasAcknowledged,w
 13005  155C  00A7               	movwf	GPS_HasAcknowledged@ackPacket+2
 13006                           
 13007                           ;main.c: 366:     ackPacket[3] = 0x01;
 13008  155D  01A8               	clrf	GPS_HasAcknowledged@ackPacket+3
 13009  155E  0AA8               	incf	GPS_HasAcknowledged@ackPacket+3,f
 13010                           
 13011                           ;main.c: 367:     ackPacket[4] = 0x02;
 13012  155F  3002               	movlw	2
 13013  1560  00F0               	movwf	??_GPS_HasAcknowledged
 13014  1561  0870               	movf	??_GPS_HasAcknowledged,w
 13015  1562  00A9               	movwf	GPS_HasAcknowledged@ackPacket+4
 13016                           
 13017                           ;main.c: 368:     ackPacket[5] = 0x00;
 13018  1563  01AA               	clrf	GPS_HasAcknowledged@ackPacket+5
 13019                           
 13020                           ;main.c: 369:     ackPacket[6] = data[2];
 13021  1564  082F               	movf	GPS_HasAcknowledged@data,w
 13022  1565  0086               	movwf	6
 13023  1566  3002               	movlw	2	; select bank4/5
 13024  1567  0087               	movwf	7
 13025  1568  3002               	movlw	2	; select bank4/5
 13026  1569  3F42               	moviw [2]fsr1
 13027  156A  00AB               	movwf	GPS_HasAcknowledged@ackPacket+6
 13028                           
 13029                           ;main.c: 370:     ackPacket[7] = data[3];
 13030  156B  082F               	movf	GPS_HasAcknowledged@data,w
 13031  156C  0086               	movwf	6
 13032  156D  3002               	movlw	2	; select bank4/5
 13033  156E  0087               	movwf	7
 13034  156F  3002               	movlw	2	; select bank4/5
 13035  1570  3F43               	moviw [3]fsr1
 13036  1571  00AC               	movwf	GPS_HasAcknowledged@ackPacket+7
 13037                           
 13038                           ;main.c: 371:     ackPacket[8] = 0;
 13039  1572  01AD               	clrf	GPS_HasAcknowledged@ackPacket+8
 13040                           
 13041                           ;main.c: 372:     ackPacket[9] = 0;
 13042  1573  01AE               	clrf	GPS_HasAcknowledged@ackPacket+9
 13043                           
 13044                           ;main.c: 375:     for (uint8_t i = 2; i < 8; i++)
 13045  1574  3002               	movlw	2
 13046  1575  00F0               	movwf	??_GPS_HasAcknowledged
 13047  1576  0870               	movf	??_GPS_HasAcknowledged,w
 13048  1577  00B1               	movwf	GPS_HasAcknowledged@i
 13049  1578                     l4266:	
 13050                           
 13051                           ;main.c: 376:     {;main.c: 377:         ackPacket[8] = ackPacket[8] + ackPacket[i];
 13052  1578  0831               	movf	GPS_HasAcknowledged@i,w
 13053  1579  3E25               	addlw	(low (GPS_HasAcknowledged@ackPacket| 0))& (0+255)
 13054  157A  0086               	movwf	6
 13055  157B  0187               	clrf	7
 13056  157C  082D               	movf	GPS_HasAcknowledged@ackPacket+8,w
 13057  157D  0701               	addwf	1,w
 13058  157E  00F0               	movwf	??_GPS_HasAcknowledged
 13059  157F  0870               	movf	??_GPS_HasAcknowledged,w
 13060  1580  00AD               	movwf	GPS_HasAcknowledged@ackPacket+8
 13061                           
 13062                           ;main.c: 378:         ackPacket[9] = ackPacket[9] + ackPacket[8];
 13063  1581  082E               	movf	GPS_HasAcknowledged@ackPacket+9,w
 13064  1582  072D               	addwf	GPS_HasAcknowledged@ackPacket+8,w
 13065  1583  00F0               	movwf	??_GPS_HasAcknowledged
 13066  1584  0870               	movf	??_GPS_HasAcknowledged,w
 13067  1585  00AE               	movwf	GPS_HasAcknowledged@ackPacket+9
 13068                           
 13069                           ;main.c: 379:     }
 13070  1586  3001               	movlw	1
 13071  1587  00F0               	movwf	??_GPS_HasAcknowledged
 13072  1588  0870               	movf	??_GPS_HasAcknowledged,w
 13073  1589  07B1               	addwf	GPS_HasAcknowledged@i,f
 13074  158A  3008               	movlw	8
 13075  158B  0231               	subwf	GPS_HasAcknowledged@i,w
 13076  158C  1C03               	skipc
 13077  158D  2D78               	goto	l4266
 13078  158E                     l4274:	
 13079                           
 13080                           ;main.c: 382:     uint8_t ackByte;;main.c: 385:     uint8_t ackByteID = 0;
 13081  158E  01B0               	clrf	GPS_HasAcknowledged@ackByteID
 13082  158F                     l4276:	
 13083                           
 13084                           ;main.c: 389:     {;main.c: 392:         if (ackByteID > 9)
 13085  158F  300A               	movlw	10
 13086  1590  0140               	movlb	0	; select bank0
 13087  1591  0230               	subwf	GPS_HasAcknowledged@ackByteID,w
 13088  1592  1C03               	skipc
 13089  1593  2D96               	goto	l4282
 13090                           
 13091                           ;main.c: 393:         {;main.c: 396:             return 1;
 13092  1594  3001               	movlw	1
 13093  1595  0008               	return
 13094  1596                     l4282:	
 13095                           
 13096                           ;main.c: 400:         if (ticks - startTime > 3000)
 13097  1596  0820               	movf	GPS_HasAcknowledged@startTime,w
 13098  1597  0141               	movlb	1	; select bank1
 13099  1598  0268               	subwf	_ticks^(0+128),w
 13100  1599  00F0               	movwf	??_GPS_HasAcknowledged
 13101  159A  0140               	movlb	0	; select bank0
 13102  159B  0821               	movf	GPS_HasAcknowledged@startTime+1,w
 13103  159C  0141               	movlb	1	; select bank1
 13104  159D  3B69               	subwfb	(_ticks+1)^(0+128),w
 13105  159E  00F1               	movwf	??_GPS_HasAcknowledged+1
 13106  159F  0140               	movlb	0	; select bank0
 13107  15A0  0822               	movf	GPS_HasAcknowledged@startTime+2,w
 13108  15A1  0141               	movlb	1	; select bank1
 13109  15A2  3B6A               	subwfb	(_ticks+2)^(0+128),w
 13110  15A3  00F2               	movwf	??_GPS_HasAcknowledged+2
 13111  15A4  0140               	movlb	0	; select bank0
 13112  15A5  0823               	movf	GPS_HasAcknowledged@startTime+3,w
 13113  15A6  0141               	movlb	1	; select bank1
 13114  15A7  3B6B               	subwfb	(_ticks+3)^(0+128),w
 13115  15A8  00F3               	movwf	??_GPS_HasAcknowledged+3
 13116  15A9  0873               	movf	??_GPS_HasAcknowledged+3,w
 13117  15AA  1D03               	btfss	3,2
 13118  15AB  2DB5               	goto	l4284
 13119  15AC  0872               	movf	??_GPS_HasAcknowledged+2,w
 13120  15AD  1D03               	btfss	3,2
 13121  15AE  2DB5               	goto	l4284
 13122  15AF  30B9               	movlw	185
 13123  15B0  0270               	subwf	??_GPS_HasAcknowledged,w
 13124  15B1  300B               	movlw	11
 13125  15B2  3B71               	subwfb	??_GPS_HasAcknowledged+1,w
 13126  15B3  1C03               	btfss	3,0
 13127  15B4  2DB7               	goto	l4288
 13128  15B5                     l4284:	
 13129                           
 13130                           ;main.c: 401:         {;main.c: 402:             return 0;
 13131  15B5  3000               	movlw	0
 13132  15B6  0008               	return
 13133  15B7                     l4288:	
 13134                           
 13135                           ;main.c: 406:         if (EUSART1_is_rx_ready())
 13136  15B7  3198  2000  3195   	fcall	_EUSART1_is_rx_ready
 13137  15BA  3A00               	xorlw	0
 13138  15BB  1903               	skipnz
 13139  15BC  2D8F               	goto	l4276
 13140                           
 13141                           ;main.c: 407:         {;main.c: 408:             ackByte = EUSART1_Read();
 13142  15BD  31A6  2604  3195   	fcall	_EUSART1_Read
 13143  15C0  00F0               	movwf	??_GPS_HasAcknowledged
 13144  15C1  0870               	movf	??_GPS_HasAcknowledged,w
 13145  15C2  0140               	movlb	0	; select bank0
 13146  15C3  00A4               	movwf	GPS_HasAcknowledged@ackByte
 13147                           
 13148                           ;main.c: 411:             if (ackByte == ackPacket[ackByteID]) {
 13149  15C4  0830               	movf	GPS_HasAcknowledged@ackByteID,w
 13150  15C5  3E25               	addlw	(low (GPS_HasAcknowledged@ackPacket| 0))& (0+255)
 13151  15C6  0086               	movwf	6
 13152  15C7  0187               	clrf	7
 13153  15C8  0801               	movf	1,w
 13154  15C9  0624               	xorwf	GPS_HasAcknowledged@ackByte,w
 13155  15CA  1D03               	skipz
 13156  15CB  2D8E               	goto	l4274
 13157                           
 13158                           ;main.c: 412:                 ackByteID++;
 13159  15CC  3001               	movlw	1
 13160  15CD  00F0               	movwf	??_GPS_HasAcknowledged
 13161  15CE  0870               	movf	??_GPS_HasAcknowledged,w
 13162  15CF  07B0               	addwf	GPS_HasAcknowledged@ackByteID,f
 13163                           
 13164                           ;main.c: 413:             }
 13165  15D0  2D8F               	goto	l4276
 13166  15D1                     __end_of_GPS_HasAcknowledged:	
 13167                           
 13168                           	psect	text22
 13169  2643                     __ptext22:	
 13170 ;; *************** function _SYSTEM_Initialize *****************
 13171 ;; Defined at:
 13172 ;;		line 50 in file "mcc_generated_files/mcc.c"
 13173 ;; Parameters:    Size  Location     Type
 13174 ;;		None
 13175 ;; Auto vars:     Size  Location     Type
 13176 ;;		None
 13177 ;; Return value:  Size  Location     Type
 13178 ;;                  1    wreg      void 
 13179 ;; Registers used:
 13180 ;;		wreg, status,2, status,0, pclath, cstack
 13181 ;; Tracked objects:
 13182 ;;		On entry : 0/0
 13183 ;;		On exit  : 0/0
 13184 ;;		Unchanged: 0/0
 13185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13189 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13190 ;;Total ram usage:        0 bytes
 13191 ;; Hardware stack levels used:    1
 13192 ;; Hardware stack levels required when called:    5
 13193 ;; This function calls:
 13194 ;;		_EUSART1_Initialize
 13195 ;;		_OSCILLATOR_Initialize
 13196 ;;		_PIN_MANAGER_Initialize
 13197 ;;		_PMD_Initialize
 13198 ;;		_TMR0_Initialize
 13199 ;; This function is called by:
 13200 ;;		_main
 13201 ;; This function uses a non-reentrant model
 13202 ;;
 13203                           
 13204                           
 13205                           ;psect for function _SYSTEM_Initialize
 13206  2643                     _SYSTEM_Initialize:	
 13207                           
 13208                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
 13209                           
 13210                           ;incstack = 0
 13211                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 13212  2643  31A5  25EF  31A6   	fcall	_PMD_Initialize
 13213                           
 13214                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
 13215  2646  3198  2098  31A6   	fcall	_PIN_MANAGER_Initialize
 13216                           
 13217                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
 13218  2649  31A5  25DC  31A6   	fcall	_OSCILLATOR_Initialize
 13219                           
 13220                           ;mcc_generated_files/mcc.c: 55:     TMR0_Initialize();
 13221  264C  31A6  2664  31A6   	fcall	_TMR0_Initialize
 13222                           
 13223                           ;mcc_generated_files/mcc.c: 56:     EUSART1_Initialize();
 13224  264F  3190  2001         	fcall	_EUSART1_Initialize
 13225  2651  0008               	return
 13226  2652                     __end_of_SYSTEM_Initialize:	
 13227                           
 13228                           	psect	text23
 13229  2664                     __ptext23:	
 13230 ;; *************** function _TMR0_Initialize *****************
 13231 ;; Defined at:
 13232 ;;		line 61 in file "mcc_generated_files/tmr0.c"
 13233 ;; Parameters:    Size  Location     Type
 13234 ;;		None
 13235 ;; Auto vars:     Size  Location     Type
 13236 ;;		None
 13237 ;; Return value:  Size  Location     Type
 13238 ;;                  1    wreg      void 
 13239 ;; Registers used:
 13240 ;;		wreg, status,2, status,0, pclath, cstack
 13241 ;; Tracked objects:
 13242 ;;		On entry : 0/0
 13243 ;;		On exit  : 0/0
 13244 ;;		Unchanged: 0/0
 13245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13249 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13250 ;;Total ram usage:        0 bytes
 13251 ;; Hardware stack levels used:    1
 13252 ;; Hardware stack levels required when called:    4
 13253 ;; This function calls:
 13254 ;;		_TMR0_SetInterruptHandler
 13255 ;; This function is called by:
 13256 ;;		_SYSTEM_Initialize
 13257 ;; This function uses a non-reentrant model
 13258 ;;
 13259                           
 13260                           
 13261                           ;psect for function _TMR0_Initialize
 13262  2664                     _TMR0_Initialize:	
 13263                           
 13264                           ;mcc_generated_files/tmr0.c: 66:     T0CON1 = 0x40;
 13265                           
 13266                           ;incstack = 0
 13267                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
 13268  2664  3040               	movlw	64
 13269  2665  014B               	movlb	11	; select bank11
 13270  2666  009F               	movwf	31	;volatile
 13271                           
 13272                           ;mcc_generated_files/tmr0.c: 69:     TMR0H = 0xF9;
 13273  2667  30F9               	movlw	249
 13274  2668  009D               	movwf	29	;volatile
 13275                           
 13276                           ;mcc_generated_files/tmr0.c: 72:     TMR0L = 0x00;
 13277  2669  019C               	clrf	28	;volatile
 13278                           
 13279                           ;mcc_generated_files/tmr0.c: 75:     PIR0bits.TMR0IF = 0;
 13280  266A  014E               	movlb	14	; select bank14
 13281  266B  128C               	bcf	12,5	;volatile
 13282                           
 13283                           ;mcc_generated_files/tmr0.c: 78:     PIE0bits.TMR0IE = 1;
 13284  266C  1696               	bsf	22,5	;volatile
 13285                           
 13286                           ;mcc_generated_files/tmr0.c: 81:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
 13287  266D  3003               	movlw	low _TMR0_DefaultInterruptHandler
 13288  266E  00F0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 13289  266F  3000               	movlw	high _TMR0_DefaultInterruptHandler
 13290  2670  00F1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 13291  2671  31A5  25B4         	fcall	_TMR0_SetInterruptHandler
 13292                           
 13293                           ;mcc_generated_files/tmr0.c: 84:     T0CON0 = 0x80;
 13294  2673  3080               	movlw	128
 13295  2674  014B               	movlb	11	; select bank11
 13296  2675  009E               	movwf	30	;volatile
 13297  2676  0008               	return
 13298  2677                     __end_of_TMR0_Initialize:	
 13299                           
 13300                           	psect	text24
 13301  25EF                     __ptext24:	
 13302 ;; *************** function _PMD_Initialize *****************
 13303 ;; Defined at:
 13304 ;;		line 73 in file "mcc_generated_files/mcc.c"
 13305 ;; Parameters:    Size  Location     Type
 13306 ;;		None
 13307 ;; Auto vars:     Size  Location     Type
 13308 ;;		None
 13309 ;; Return value:  Size  Location     Type
 13310 ;;                  1    wreg      void 
 13311 ;; Registers used:
 13312 ;;		status,2
 13313 ;; Tracked objects:
 13314 ;;		On entry : 0/0
 13315 ;;		On exit  : 0/0
 13316 ;;		Unchanged: 0/0
 13317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13321 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13322 ;;Total ram usage:        0 bytes
 13323 ;; Hardware stack levels used:    1
 13324 ;; Hardware stack levels required when called:    3
 13325 ;; This function calls:
 13326 ;;		Nothing
 13327 ;; This function is called by:
 13328 ;;		_SYSTEM_Initialize
 13329 ;; This function uses a non-reentrant model
 13330 ;;
 13331                           
 13332                           
 13333                           ;psect for function _PMD_Initialize
 13334  25EF                     _PMD_Initialize:	
 13335                           
 13336                           ;mcc_generated_files/mcc.c: 76:     PMD0 = 0x00;
 13337                           
 13338                           ;incstack = 0
 13339                           ; Regs used in _PMD_Initialize: [status,2]
 13340  25EF  014F               	movlb	15	; select bank15
 13341  25F0  0196               	clrf	22	;volatile
 13342                           
 13343                           ;mcc_generated_files/mcc.c: 78:     PMD1 = 0x00;
 13344  25F1  0197               	clrf	23	;volatile
 13345                           
 13346                           ;mcc_generated_files/mcc.c: 80:     PMD2 = 0x00;
 13347  25F2  0198               	clrf	24	;volatile
 13348                           
 13349                           ;mcc_generated_files/mcc.c: 82:     PMD3 = 0x00;
 13350  25F3  0199               	clrf	25	;volatile
 13351                           
 13352                           ;mcc_generated_files/mcc.c: 84:     PMD4 = 0x00;
 13353  25F4  019A               	clrf	26	;volatile
 13354                           
 13355                           ;mcc_generated_files/mcc.c: 86:     PMD5 = 0x00;
 13356  25F5  019B               	clrf	27	;volatile
 13357                           
 13358                           ;mcc_generated_files/mcc.c: 88:     PMD6 = 0x00;
 13359  25F6  019C               	clrf	28	;volatile
 13360                           
 13361                           ;mcc_generated_files/mcc.c: 90:     PMD7 = 0x00;
 13362  25F7  019D               	clrf	29	;volatile
 13363  25F8  0008               	return
 13364  25F9                     __end_of_PMD_Initialize:	
 13365                           
 13366                           	psect	text25
 13367  1898                     __ptext25:	
 13368 ;; *************** function _PIN_MANAGER_Initialize *****************
 13369 ;; Defined at:
 13370 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 13371 ;; Parameters:    Size  Location     Type
 13372 ;;		None
 13373 ;; Auto vars:     Size  Location     Type
 13374 ;;		None
 13375 ;; Return value:  Size  Location     Type
 13376 ;;                  1    wreg      void 
 13377 ;; Registers used:
 13378 ;;		wreg, status,2
 13379 ;; Tracked objects:
 13380 ;;		On entry : 0/0
 13381 ;;		On exit  : 0/0
 13382 ;;		Unchanged: 0/0
 13383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13387 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13388 ;;Total ram usage:        0 bytes
 13389 ;; Hardware stack levels used:    1
 13390 ;; Hardware stack levels required when called:    3
 13391 ;; This function calls:
 13392 ;;		Nothing
 13393 ;; This function is called by:
 13394 ;;		_SYSTEM_Initialize
 13395 ;; This function uses a non-reentrant model
 13396 ;;
 13397                           
 13398                           
 13399                           ;psect for function _PIN_MANAGER_Initialize
 13400  1898                     _PIN_MANAGER_Initialize:	
 13401                           
 13402                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
 13403                           
 13404                           ;incstack = 0
 13405                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 13406  1898  0140               	movlb	0	; select bank0
 13407  1899  0198               	clrf	24	;volatile
 13408                           
 13409                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
 13410  189A  0199               	clrf	25	;volatile
 13411                           
 13412                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
 13413  189B  019A               	clrf	26	;volatile
 13414                           
 13415                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x0B;
 13416  189C  300B               	movlw	11
 13417  189D  0092               	movwf	18	;volatile
 13418                           
 13419                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0x70;
 13420  189E  3070               	movlw	112
 13421  189F  0093               	movwf	19	;volatile
 13422                           
 13423                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xDF;
 13424  18A0  30DF               	movlw	223
 13425  18A1  0094               	movwf	20	;volatile
 13426                           
 13427                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0xFF;
 13428  18A2  30FF               	movlw	255
 13429  18A3  017E               	movlb	62	; select bank62
 13430  18A4  00CE               	movwf	78	;volatile
 13431                           
 13432                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x80;
 13433  18A5  3080               	movlw	128
 13434  18A6  00C3               	movwf	67	;volatile
 13435                           
 13436                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x37;
 13437  18A7  3037               	movlw	55
 13438  18A8  00B8               	movwf	56	;volatile
 13439                           
 13440                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
 13441  18A9  01C4               	clrf	68	;volatile
 13442                           
 13443                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x00;
 13444  18AA  01B9               	clrf	57	;volatile
 13445                           
 13446                           ;mcc_generated_files/pin_manager.c: 83:     WPUC = 0x00;
 13447  18AB  01CF               	clrf	79	;volatile
 13448                           
 13449                           ;mcc_generated_files/pin_manager.c: 88:     ODCONA = 0x00;
 13450  18AC  01BA               	clrf	58	;volatile
 13451                           
 13452                           ;mcc_generated_files/pin_manager.c: 89:     ODCONB = 0x00;
 13453  18AD  01C5               	clrf	69	;volatile
 13454                           
 13455                           ;mcc_generated_files/pin_manager.c: 90:     ODCONC = 0x00;
 13456  18AE  01D0               	clrf	80	;volatile
 13457                           
 13458                           ;mcc_generated_files/pin_manager.c: 95:     SLRCONA = 0x37;
 13459  18AF  3037               	movlw	55
 13460  18B0  00BB               	movwf	59	;volatile
 13461                           
 13462                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONB = 0xF0;
 13463  18B1  30F0               	movlw	240
 13464  18B2  00C6               	movwf	70	;volatile
 13465                           
 13466                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONC = 0xFF;
 13467  18B3  30FF               	movlw	255
 13468  18B4  00D1               	movwf	81	;volatile
 13469                           
 13470                           ;mcc_generated_files/pin_manager.c: 102:     INLVLA = 0x3F;
 13471  18B5  303F               	movlw	63
 13472  18B6  00BC               	movwf	60	;volatile
 13473                           
 13474                           ;mcc_generated_files/pin_manager.c: 103:     INLVLB = 0xF0;
 13475  18B7  30F0               	movlw	240
 13476  18B8  00C7               	movwf	71	;volatile
 13477                           
 13478                           ;mcc_generated_files/pin_manager.c: 104:     INLVLC = 0xFF;
 13479  18B9  30FF               	movlw	255
 13480  18BA  00D2               	movwf	82	;volatile
 13481                           
 13482                           ;mcc_generated_files/pin_manager.c: 113:     RB7PPS = 0x0F;
 13483  18BB  300F               	movlw	15
 13484  18BC  009F               	movwf	31	;volatile
 13485                           
 13486                           ;mcc_generated_files/pin_manager.c: 114:     RX1DTPPS = 0x0D;
 13487  18BD  300D               	movlw	13
 13488  18BE  017D               	movlb	61	; select bank61
 13489  18BF  00CB               	movwf	75	;volatile
 13490  18C0  0008               	return
 13491  18C1                     __end_of_PIN_MANAGER_Initialize:	
 13492                           
 13493                           	psect	text26
 13494  25DC                     __ptext26:	
 13495 ;; *************** function _OSCILLATOR_Initialize *****************
 13496 ;; Defined at:
 13497 ;;		line 59 in file "mcc_generated_files/mcc.c"
 13498 ;; Parameters:    Size  Location     Type
 13499 ;;		None
 13500 ;; Auto vars:     Size  Location     Type
 13501 ;;		None
 13502 ;; Return value:  Size  Location     Type
 13503 ;;                  1    wreg      void 
 13504 ;; Registers used:
 13505 ;;		wreg, status,2
 13506 ;; Tracked objects:
 13507 ;;		On entry : 0/0
 13508 ;;		On exit  : 0/0
 13509 ;;		Unchanged: 0/0
 13510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13512 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13514 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13515 ;;Total ram usage:        0 bytes
 13516 ;; Hardware stack levels used:    1
 13517 ;; Hardware stack levels required when called:    3
 13518 ;; This function calls:
 13519 ;;		Nothing
 13520 ;; This function is called by:
 13521 ;;		_SYSTEM_Initialize
 13522 ;; This function uses a non-reentrant model
 13523 ;;
 13524                           
 13525                           
 13526                           ;psect for function _OSCILLATOR_Initialize
 13527  25DC                     _OSCILLATOR_Initialize:	
 13528                           
 13529                           ;mcc_generated_files/mcc.c: 62:     OSCCON1 = 0x62;
 13530                           
 13531                           ;incstack = 0
 13532                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 13533  25DC  3062               	movlw	98
 13534  25DD  0151               	movlb	17	; select bank17
 13535  25DE  008D               	movwf	13	;volatile
 13536                           
 13537                           ;mcc_generated_files/mcc.c: 64:     OSCCON3 = 0x00;
 13538  25DF  018F               	clrf	15	;volatile
 13539                           
 13540                           ;mcc_generated_files/mcc.c: 66:     OSCEN = 0x00;
 13541  25E0  0191               	clrf	17	;volatile
 13542                           
 13543                           ;mcc_generated_files/mcc.c: 68:     OSCFRQ = 0x02;
 13544  25E1  3002               	movlw	2
 13545  25E2  0093               	movwf	19	;volatile
 13546                           
 13547                           ;mcc_generated_files/mcc.c: 70:     OSCTUNE = 0x00;
 13548  25E3  0192               	clrf	18	;volatile
 13549  25E4  0008               	return
 13550  25E5                     __end_of_OSCILLATOR_Initialize:	
 13551                           
 13552                           	psect	text27
 13553  1001                     __ptext27:	
 13554 ;; *************** function _EUSART1_Initialize *****************
 13555 ;; Defined at:
 13556 ;;		line 66 in file "mcc_generated_files/eusart1.c"
 13557 ;; Parameters:    Size  Location     Type
 13558 ;;		None
 13559 ;; Auto vars:     Size  Location     Type
 13560 ;;		None
 13561 ;; Return value:  Size  Location     Type
 13562 ;;                  1    wreg      void 
 13563 ;; Registers used:
 13564 ;;		wreg, status,2, status,0, pclath, cstack
 13565 ;; Tracked objects:
 13566 ;;		On entry : 0/0
 13567 ;;		On exit  : 0/0
 13568 ;;		Unchanged: 0/0
 13569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13571 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13573 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13574 ;;Total ram usage:        0 bytes
 13575 ;; Hardware stack levels used:    1
 13576 ;; Hardware stack levels required when called:    4
 13577 ;; This function calls:
 13578 ;;		_EUSART1_SetErrorHandler
 13579 ;;		_EUSART1_SetFramingErrorHandler
 13580 ;;		_EUSART1_SetOverrunErrorHandler
 13581 ;; This function is called by:
 13582 ;;		_SYSTEM_Initialize
 13583 ;; This function uses a non-reentrant model
 13584 ;;
 13585                           
 13586                           
 13587                           ;psect for function _EUSART1_Initialize
 13588  1001                     _EUSART1_Initialize:	
 13589                           
 13590                           ;mcc_generated_files/eusart1.c: 71:     BAUD1CON = 0x08;
 13591                           
 13592                           ;incstack = 0
 13593                           ; Regs used in _EUSART1_Initialize: [wreg+status,2+status,0+pclath+cstack]
 13594  1001  3008               	movlw	8
 13595  1002  0142               	movlb	2	; select bank2
 13596  1003  009F               	movwf	31	;volatile
 13597                           
 13598                           ;mcc_generated_files/eusart1.c: 74:     RC1STA = 0x90;
 13599  1004  3090               	movlw	144
 13600  1005  009D               	movwf	29	;volatile
 13601                           
 13602                           ;mcc_generated_files/eusart1.c: 77:     TX1STA = 0x24;
 13603  1006  3024               	movlw	36
 13604  1007  009E               	movwf	30	;volatile
 13605                           
 13606                           ;mcc_generated_files/eusart1.c: 80:     SP1BRGL = 0x19;
 13607  1008  3019               	movlw	25
 13608  1009  009B               	movwf	27	;volatile
 13609                           
 13610                           ;mcc_generated_files/eusart1.c: 83:     SP1BRGH = 0x00;
 13611  100A  019C               	clrf	28	;volatile
 13612                           
 13613                           ;mcc_generated_files/eusart1.c: 86:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultFr
      +                          amingErrorHandler);
 13614  100B  3000               	movlw	0
 13615  100C  00F0               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler
 13616  100D  3000               	movlw	0
 13617  100E  00F1               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler+1
 13618  100F  31A5  25C0  3190   	fcall	_EUSART1_SetFramingErrorHandler
 13619                           
 13620                           ;mcc_generated_files/eusart1.c: 87:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultOv
      +                          errunErrorHandler);
 13621  1012  3000               	movlw	0
 13622  1013  00F0               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler
 13623  1014  3000               	movlw	0
 13624  1015  00F1               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler+1
 13625  1016  31A5  25C6  3190   	fcall	_EUSART1_SetOverrunErrorHandler
 13626                           
 13627                           ;mcc_generated_files/eusart1.c: 88:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHand
      +                          ler);
 13628  1019  3000               	movlw	0
 13629  101A  00F0               	movwf	EUSART1_SetErrorHandler@interruptHandler
 13630  101B  3000               	movlw	0
 13631  101C  00F1               	movwf	EUSART1_SetErrorHandler@interruptHandler+1
 13632  101D  31A5  25BA         	fcall	_EUSART1_SetErrorHandler
 13633                           
 13634                           ;mcc_generated_files/eusart1.c: 90:     eusart1RxLastError.status = 0;
 13635  101F  0141               	movlb	1	; select bank1
 13636  1020  01ED               	clrf	_eusart1RxLastError^(0+128)	;volatile
 13637  1021  0008               	return
 13638  1022                     __end_of_EUSART1_Initialize:	
 13639                           
 13640                           	psect	text28
 13641  25C6                     __ptext28:	
 13642 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
 13643 ;; Defined at:
 13644 ;;		line 161 in file "mcc_generated_files/eusart1.c"
 13645 ;; Parameters:    Size  Location     Type
 13646 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
 13647 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
 13648 ;; Auto vars:     Size  Location     Type
 13649 ;;		None
 13650 ;; Return value:  Size  Location     Type
 13651 ;;                  1    wreg      void 
 13652 ;; Registers used:
 13653 ;;		wreg
 13654 ;; Tracked objects:
 13655 ;;		On entry : 0/0
 13656 ;;		On exit  : 0/0
 13657 ;;		Unchanged: 0/0
 13658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13659 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13662 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13663 ;;Total ram usage:        2 bytes
 13664 ;; Hardware stack levels used:    1
 13665 ;; Hardware stack levels required when called:    3
 13666 ;; This function calls:
 13667 ;;		Nothing
 13668 ;; This function is called by:
 13669 ;;		_EUSART1_Initialize
 13670 ;; This function uses a non-reentrant model
 13671 ;;
 13672                           
 13673                           
 13674                           ;psect for function _EUSART1_SetOverrunErrorHandler
 13675  25C6                     _EUSART1_SetOverrunErrorHandler:	
 13676                           
 13677                           ;mcc_generated_files/eusart1.c: 162:     EUSART1_OverrunErrorHandler = interruptHandler;
 13678                           
 13679                           ;incstack = 0
 13680                           ; Regs used in _EUSART1_SetOverrunErrorHandler: [wreg]
 13681  25C6  0871               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler+1,w
 13682  25C7  0143               	movlb	3	; select bank3
 13683  25C8  00EA               	movwf	(_EUSART1_OverrunErrorHandler+1)^(0+384)
 13684  25C9  0870               	movf	EUSART1_SetOverrunErrorHandler@interruptHandler,w
 13685  25CA  00E9               	movwf	_EUSART1_OverrunErrorHandler^(0+384)
 13686  25CB  0008               	return
 13687  25CC                     __end_of_EUSART1_SetOverrunErrorHandler:	
 13688                           
 13689                           	psect	text29
 13690  25C0                     __ptext29:	
 13691 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
 13692 ;; Defined at:
 13693 ;;		line 157 in file "mcc_generated_files/eusart1.c"
 13694 ;; Parameters:    Size  Location     Type
 13695 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
 13696 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
 13697 ;; Auto vars:     Size  Location     Type
 13698 ;;		None
 13699 ;; Return value:  Size  Location     Type
 13700 ;;                  1    wreg      void 
 13701 ;; Registers used:
 13702 ;;		wreg
 13703 ;; Tracked objects:
 13704 ;;		On entry : 0/0
 13705 ;;		On exit  : 0/0
 13706 ;;		Unchanged: 0/0
 13707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13708 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13711 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13712 ;;Total ram usage:        2 bytes
 13713 ;; Hardware stack levels used:    1
 13714 ;; Hardware stack levels required when called:    3
 13715 ;; This function calls:
 13716 ;;		Nothing
 13717 ;; This function is called by:
 13718 ;;		_EUSART1_Initialize
 13719 ;; This function uses a non-reentrant model
 13720 ;;
 13721                           
 13722                           
 13723                           ;psect for function _EUSART1_SetFramingErrorHandler
 13724  25C0                     _EUSART1_SetFramingErrorHandler:	
 13725                           
 13726                           ;mcc_generated_files/eusart1.c: 158:     EUSART1_FramingErrorHandler = interruptHandler;
 13727                           
 13728                           ;incstack = 0
 13729                           ; Regs used in _EUSART1_SetFramingErrorHandler: [wreg]
 13730  25C0  0871               	movf	EUSART1_SetFramingErrorHandler@interruptHandler+1,w
 13731  25C1  0143               	movlb	3	; select bank3
 13732  25C2  00EC               	movwf	(_EUSART1_FramingErrorHandler+1)^(0+384)
 13733  25C3  0870               	movf	EUSART1_SetFramingErrorHandler@interruptHandler,w
 13734  25C4  00EB               	movwf	_EUSART1_FramingErrorHandler^(0+384)
 13735  25C5  0008               	return
 13736  25C6                     __end_of_EUSART1_SetFramingErrorHandler:	
 13737                           
 13738                           	psect	text30
 13739  25BA                     __ptext30:	
 13740 ;; *************** function _EUSART1_SetErrorHandler *****************
 13741 ;; Defined at:
 13742 ;;		line 165 in file "mcc_generated_files/eusart1.c"
 13743 ;; Parameters:    Size  Location     Type
 13744 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
 13745 ;;		 -> EUSART1_DefaultErrorHandler(1), 
 13746 ;; Auto vars:     Size  Location     Type
 13747 ;;		None
 13748 ;; Return value:  Size  Location     Type
 13749 ;;                  1    wreg      void 
 13750 ;; Registers used:
 13751 ;;		wreg
 13752 ;; Tracked objects:
 13753 ;;		On entry : 0/0
 13754 ;;		On exit  : 0/0
 13755 ;;		Unchanged: 0/0
 13756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13757 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13760 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13761 ;;Total ram usage:        2 bytes
 13762 ;; Hardware stack levels used:    1
 13763 ;; Hardware stack levels required when called:    3
 13764 ;; This function calls:
 13765 ;;		Nothing
 13766 ;; This function is called by:
 13767 ;;		_EUSART1_Initialize
 13768 ;; This function uses a non-reentrant model
 13769 ;;
 13770                           
 13771                           
 13772                           ;psect for function _EUSART1_SetErrorHandler
 13773  25BA                     _EUSART1_SetErrorHandler:	
 13774                           
 13775                           ;mcc_generated_files/eusart1.c: 166:     EUSART1_ErrorHandler = interruptHandler;
 13776                           
 13777                           ;incstack = 0
 13778                           ; Regs used in _EUSART1_SetErrorHandler: [wreg]
 13779  25BA  0871               	movf	EUSART1_SetErrorHandler@interruptHandler+1,w
 13780  25BB  0143               	movlb	3	; select bank3
 13781  25BC  00E8               	movwf	(_EUSART1_ErrorHandler+1)^(0+384)
 13782  25BD  0870               	movf	EUSART1_SetErrorHandler@interruptHandler,w
 13783  25BE  00E7               	movwf	_EUSART1_ErrorHandler^(0+384)
 13784  25BF  0008               	return
 13785  25C0                     __end_of_EUSART1_SetErrorHandler:	
 13786                           
 13787                           	psect	text31
 13788  0B05                     __ptext31:	
 13789 ;; *************** function _PollGPS *****************
 13790 ;; Defined at:
 13791 ;;		line 509 in file "main.c"
 13792 ;; Parameters:    Size  Location     Type
 13793 ;;		None
 13794 ;; Auto vars:     Size  Location     Type
 13795 ;;  byte            1   38[BANK0 ] unsigned char 
 13796 ;;  i               2   39[BANK0 ] int 
 13797 ;;  counti          2   33[BANK0 ] int 
 13798 ;;  startTime       4   29[BANK0 ] unsigned long 
 13799 ;;  index           2   41[BANK0 ] int 
 13800 ;;  eusart_compl    1   37[BANK0 ] _Bool 
 13801 ;;  success         1   35[BANK0 ] _Bool 
 13802 ;; Return value:  Size  Location     Type
 13803 ;;                  1    wreg      _Bool 
 13804 ;; Registers used:
 13805 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13806 ;; Tracked objects:
 13807 ;;		On entry : 0/0
 13808 ;;		On exit  : 0/0
 13809 ;;		Unchanged: 0/0
 13810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13812 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13813 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13814 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13815 ;;Total ram usage:       18 bytes
 13816 ;; Hardware stack levels used:    1
 13817 ;; Hardware stack levels required when called:    7
 13818 ;; This function calls:
 13819 ;;		_ClearNMEA
 13820 ;;		_EUSART1_Read
 13821 ;;		_EUSART1_is_rx_ready
 13822 ;;		_GetAtRowCSV
 13823 ;;		_Insert
 13824 ;;		_InsertString
 13825 ;;		_InsertTxData
 13826 ;;		_InsertTxDataSep
 13827 ;;		_WriteGPS
 13828 ;;		_strcmp
 13829 ;;		_strlen
 13830 ;; This function is called by:
 13831 ;;		_main
 13832 ;; This function uses a non-reentrant model
 13833 ;;
 13834                           
 13835                           
 13836                           ;psect for function _PollGPS
 13837  0B05                     _PollGPS:	
 13838                           
 13839                           ;main.c: 511:     _Bool success = 0;
 13840                           
 13841                           ;incstack = 0
 13842                           ; Regs used in _PollGPS: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13843  0B05  0140               	movlb	0	; select bank0
 13844  0B06  01C3               	clrf	PollGPS@success
 13845                           
 13846                           ;main.c: 512:     uint32_t startTime = ticks;
 13847  0B07  0141               	movlb	1	; select bank1
 13848  0B08  086B               	movf	(_ticks+3)^(0+128),w
 13849  0B09  0140               	movlb	0	; select bank0
 13850  0B0A  00C0               	movwf	PollGPS@startTime+3
 13851  0B0B  0141               	movlb	1	; select bank1
 13852  0B0C  086A               	movf	(_ticks+2)^(0+128),w
 13853  0B0D  0140               	movlb	0	; select bank0
 13854  0B0E  00BF               	movwf	PollGPS@startTime+2
 13855  0B0F  0141               	movlb	1	; select bank1
 13856  0B10  0869               	movf	(_ticks+1)^(0+128),w
 13857  0B11  0140               	movlb	0	; select bank0
 13858  0B12  00BE               	movwf	PollGPS@startTime+1
 13859  0B13  0141               	movlb	1	; select bank1
 13860  0B14  0868               	movf	_ticks^(0+128),w
 13861  0B15  0140               	movlb	0	; select bank0
 13862  0B16  00BD               	movwf	PollGPS@startTime
 13863                           
 13864                           ;main.c: 515:     ClearNMEA();
 13865  0B17  3198  2005  318B   	fcall	_ClearNMEA
 13866                           
 13867                           ;main.c: 518:     int index = 0;
 13868  0B1A  0140               	movlb	0	; select bank0
 13869  0B1B  01C9               	clrf	PollGPS@index
 13870  0B1C  01CA               	clrf	PollGPS@index+1
 13871                           
 13872                           ;main.c: 521:     _Bool eusart_complete = 0;
 13873  0B1D  01C5               	clrf	PollGPS@eusart_complete
 13874                           
 13875                           ;main.c: 524:     WriteGPS("$PUBX,00*33\r\n");
 13876  0B1E  309C               	movlw	low (STR_7| (0+32768))
 13877  0B1F  00F5               	movwf	WriteGPS@message
 13878  0B20  30A8               	movlw	high (STR_7| (0+32768))
 13879  0B21  00F6               	movwf	WriteGPS@message+1
 13880  0B22  3198  2070  318B   	fcall	_WriteGPS
 13881  0B25                     l4666:	
 13882                           ;main.c: 527:     while (ticks - startTime < 3000)
 13883                           
 13884                           
 13885                           ;main.c: 527:     while (ticks - startTime < 3000)
 13886  0B25  0140               	movlb	0	; select bank0
 13887  0B26  083D               	movf	PollGPS@startTime,w
 13888  0B27  0141               	movlb	1	; select bank1
 13889  0B28  0268               	subwf	_ticks^(0+128),w
 13890  0B29  0140               	movlb	0	; select bank0
 13891  0B2A  00B9               	movwf	??_PollGPS
 13892  0B2B  083E               	movf	PollGPS@startTime+1,w
 13893  0B2C  0141               	movlb	1	; select bank1
 13894  0B2D  3B69               	subwfb	(_ticks+1)^(0+128),w
 13895  0B2E  0140               	movlb	0	; select bank0
 13896  0B2F  00BA               	movwf	??_PollGPS+1
 13897  0B30  083F               	movf	PollGPS@startTime+2,w
 13898  0B31  0141               	movlb	1	; select bank1
 13899  0B32  3B6A               	subwfb	(_ticks+2)^(0+128),w
 13900  0B33  0140               	movlb	0	; select bank0
 13901  0B34  00BB               	movwf	??_PollGPS+2
 13902  0B35  0840               	movf	PollGPS@startTime+3,w
 13903  0B36  0141               	movlb	1	; select bank1
 13904  0B37  3B6B               	subwfb	(_ticks+3)^(0+128),w
 13905  0B38  0140               	movlb	0	; select bank0
 13906  0B39  00BC               	movwf	??_PollGPS+3
 13907  0B3A  083C               	movf	??_PollGPS+3,w
 13908  0B3B  1D03               	btfss	3,2
 13909  0B3C  2D34               	goto	l4668
 13910  0B3D  083B               	movf	??_PollGPS+2,w
 13911  0B3E  1D03               	btfss	3,2
 13912  0B3F  2D34               	goto	l4668
 13913  0B40  30B8               	movlw	184
 13914  0B41  0239               	subwf	??_PollGPS,w
 13915  0B42  300B               	movlw	11
 13916  0B43  3B3A               	subwfb	??_PollGPS+1,w
 13917  0B44  1803               	btfsc	3,0
 13918  0B45  2D34               	goto	l4668
 13919                           
 13920                           ;main.c: 528:     {;main.c: 530:         if (eusart_complete)
 13921  0B46  0845               	movf	PollGPS@eusart_complete,w
 13922  0B47  1903               	btfsc	3,2
 13923  0B48  2D0C               	goto	l4654
 13924                           
 13925                           ;main.c: 531:         {;main.c: 532:             index = strlen(txdata);
 13926  0B49  3064               	movlw	100
 13927  0B4A  00F0               	movwf	strlen@s
 13928  0B4B  3027               	movlw	39
 13929  0B4C  00F1               	movwf	strlen@s+1
 13930  0B4D  31A6  26A0  318B   	fcall	_strlen
 13931  0B50  0871               	movf	?_strlen+1,w
 13932  0B51  0140               	movlb	0	; select bank0
 13933  0B52  00CA               	movwf	PollGPS@index+1
 13934  0B53  0870               	movf	?_strlen,w
 13935  0B54  00C9               	movwf	PollGPS@index
 13936                           
 13937                           ;main.c: 534:             for (int i = 0, counti = strlen(GetAtRowCSV(nmea_data, PUBX_TI
      +                          ME)); i < counti; i++)
 13938  0B55  01C7               	clrf	PollGPS@i
 13939  0B56  01C8               	clrf	PollGPS@i+1
 13940  0B57  30D8               	movlw	216
 13941  0B58  00F6               	movwf	GetAtRowCSV@src
 13942  0B59  3026               	movlw	38
 13943  0B5A  00F7               	movwf	GetAtRowCSV@src+1
 13944  0B5B  3000               	movlw	0
 13945  0B5C  00F9               	movwf	GetAtRowCSV@column+1
 13946  0B5D  3002               	movlw	2
 13947  0B5E  00F8               	movwf	GetAtRowCSV@column
 13948  0B5F  3190  20D9  318B   	fcall	_GetAtRowCSV
 13949  0B62  0140               	movlb	0	; select bank0
 13950  0B63  00B9               	movwf	??_PollGPS
 13951  0B64  0839               	movf	??_PollGPS,w
 13952  0B65  00C4               	movwf	_PollGPS$2720
 13953  0B66  0844               	movf	_PollGPS$2720,w
 13954  0B67  00F0               	movwf	strlen@s
 13955  0B68  3001               	movlw	1
 13956  0B69  00F1               	movwf	strlen@s+1
 13957  0B6A  31A6  26A0  318B   	fcall	_strlen
 13958  0B6D  0871               	movf	?_strlen+1,w
 13959  0B6E  0140               	movlb	0	; select bank0
 13960  0B6F  00C2               	movwf	PollGPS@counti+1
 13961  0B70  0870               	movf	?_strlen,w
 13962  0B71  00C1               	movwf	PollGPS@counti
 13963  0B72                     l4640:	
 13964  0B72  0848               	movf	PollGPS@i+1,w
 13965  0B73  3A80               	xorlw	128
 13966  0B74  00B9               	movwf	??_PollGPS
 13967  0B75  0842               	movf	PollGPS@counti+1,w
 13968  0B76  3A80               	xorlw	128
 13969  0B77  0239               	subwf	??_PollGPS,w
 13970  0B78  1D03               	skipz
 13971  0B79  2B7C               	goto	u4415
 13972  0B7A  0841               	movf	PollGPS@counti,w
 13973  0B7B  0247               	subwf	PollGPS@i,w
 13974  0B7C                     u4415:	
 13975  0B7C  1803               	btfsc	3,0
 13976  0B7D  2BD0               	goto	l4642
 13977                           
 13978                           ;main.c: 535:             {;main.c: 536:                 if (i < 6)
 13979  0B7E  0140               	movlb	0	; select bank0
 13980  0B7F  0848               	movf	PollGPS@i+1,w
 13981  0B80  3A80               	xorlw	128
 13982  0B81  00B9               	movwf	??_PollGPS
 13983  0B82  3080               	movlw	128
 13984  0B83  0239               	subwf	??_PollGPS,w
 13985  0B84  1D03               	skipz
 13986  0B85  2B88               	goto	u4385
 13987  0B86  3006               	movlw	6
 13988  0B87  0247               	subwf	PollGPS@i,w
 13989  0B88                     u4385:	
 13990  0B88  1803               	skipnc
 13991  0B89  2BCA               	goto	l4638
 13992                           
 13993                           ;main.c: 537:                 {;main.c: 538:                     if (i == 2 || i == 4)
 13994  0B8A  3002               	movlw	2
 13995  0B8B  0140               	movlb	0	; select bank0
 13996  0B8C  0647               	xorwf	PollGPS@i,w
 13997  0B8D  0448               	iorwf	PollGPS@i+1,w
 13998  0B8E  1903               	btfsc	3,2
 13999  0B8F  2B95               	goto	l4636
 14000  0B90  3004               	movlw	4
 14001  0B91  0647               	xorwf	PollGPS@i,w
 14002  0B92  0448               	iorwf	PollGPS@i+1,w
 14003  0B93  1D03               	btfss	3,2
 14004  0B94  2BAD               	goto	l807
 14005  0B95                     l4636:	
 14006                           
 14007                           ;main.c: 539:                     {;main.c: 540:                         index = Insert(
      +                          txdata, ':', index, 140);
 14008  0B95  3064               	movlw	100
 14009  0B96  00F5               	movwf	Insert@dest
 14010  0B97  3027               	movlw	39
 14011  0B98  00F6               	movwf	Insert@dest+1
 14012  0B99  303A               	movlw	58
 14013  0B9A  00B9               	movwf	??_PollGPS
 14014  0B9B  0839               	movf	??_PollGPS,w
 14015  0B9C  00F7               	movwf	Insert@src
 14016  0B9D  084A               	movf	PollGPS@index+1,w
 14017  0B9E  00F9               	movwf	Insert@index+1
 14018  0B9F  0849               	movf	PollGPS@index,w
 14019  0BA0  00F8               	movwf	Insert@index
 14020  0BA1  308C               	movlw	140
 14021  0BA2  00FA               	movwf	Insert@destLimit
 14022  0BA3  3000               	movlw	0
 14023  0BA4  00FB               	movwf	Insert@destLimit+1
 14024  0BA5  3192  22E1  318B   	fcall	_Insert
 14025  0BA8  0876               	movf	?_Insert+1,w
 14026  0BA9  0140               	movlb	0	; select bank0
 14027  0BAA  00CA               	movwf	PollGPS@index+1
 14028  0BAB  0875               	movf	?_Insert,w
 14029  0BAC  00C9               	movwf	PollGPS@index
 14030  0BAD                     l807:	
 14031                           ;main.c: 541:                     }
 14032                           
 14033                           
 14034                           ;main.c: 542:                     index = Insert(txdata, csvField[i], index, 140);
 14035  0BAD  3064               	movlw	100
 14036  0BAE  00F5               	movwf	Insert@dest
 14037  0BAF  3027               	movlw	39
 14038  0BB0  00F6               	movwf	Insert@dest+1
 14039  0BB1  0847               	movf	PollGPS@i,w
 14040  0BB2  3ED3               	addlw	(low (_csvField| (0+256)))& (0+255)
 14041  0BB3  0086               	movwf	6
 14042  0BB4  3001               	movlw	1	; select bank3/4
 14043  0BB5  0087               	movwf	7
 14044  0BB6  0801               	movf	1,w
 14045  0BB7  00B9               	movwf	??_PollGPS
 14046  0BB8  0839               	movf	??_PollGPS,w
 14047  0BB9  00F7               	movwf	Insert@src
 14048  0BBA  084A               	movf	PollGPS@index+1,w
 14049  0BBB  00F9               	movwf	Insert@index+1
 14050  0BBC  0849               	movf	PollGPS@index,w
 14051  0BBD  00F8               	movwf	Insert@index
 14052  0BBE  308C               	movlw	140
 14053  0BBF  00FA               	movwf	Insert@destLimit
 14054  0BC0  3000               	movlw	0
 14055  0BC1  00FB               	movwf	Insert@destLimit+1
 14056  0BC2  3192  22E1  318B   	fcall	_Insert
 14057  0BC5  0876               	movf	?_Insert+1,w
 14058  0BC6  0140               	movlb	0	; select bank0
 14059  0BC7  00CA               	movwf	PollGPS@index+1
 14060  0BC8  0875               	movf	?_Insert,w
 14061  0BC9  00C9               	movwf	PollGPS@index
 14062  0BCA                     l4638:	
 14063                           
 14064                           ;main.c: 544:             }
 14065  0BCA  3001               	movlw	1
 14066  0BCB  0140               	movlb	0	; select bank0
 14067  0BCC  07C7               	addwf	PollGPS@i,f
 14068  0BCD  3000               	movlw	0
 14069  0BCE  3DC8               	addwfc	PollGPS@i+1,f
 14070  0BCF  2B72               	goto	l4640
 14071  0BD0                     l4642:	
 14072                           
 14073                           ;main.c: 545:             index = InsertTxDataSep(index);
 14074  0BD0  0140               	movlb	0	; select bank0
 14075  0BD1  084A               	movf	PollGPS@index+1,w
 14076  0BD2  00FD               	movwf	InsertTxDataSep@index+1
 14077  0BD3  0849               	movf	PollGPS@index,w
 14078  0BD4  00FC               	movwf	InsertTxDataSep@index
 14079  0BD5  31A6  26B7  318B   	fcall	_InsertTxDataSep
 14080  0BD8  087D               	movf	?_InsertTxDataSep+1,w
 14081  0BD9  0140               	movlb	0	; select bank0
 14082  0BDA  00CA               	movwf	PollGPS@index+1
 14083  0BDB  087C               	movf	?_InsertTxDataSep,w
 14084  0BDC  00C9               	movwf	PollGPS@index
 14085                           
 14086                           ;main.c: 547:             if (strcmp(GetAtRowCSV(nmea_data, PUBX_NS), "S") == 0)
 14087  0BDD  30B6               	movlw	low (STR_8| (0+32768))
 14088  0BDE  00FB               	movwf	strcmp@r
 14089  0BDF  30A8               	movlw	high (STR_8| (0+32768))
 14090  0BE0  00FC               	movwf	strcmp@r+1
 14091  0BE1  30D8               	movlw	216
 14092  0BE2  00F6               	movwf	GetAtRowCSV@src
 14093  0BE3  3026               	movlw	38
 14094  0BE4  00F7               	movwf	GetAtRowCSV@src+1
 14095  0BE5  3000               	movlw	0
 14096  0BE6  00F9               	movwf	GetAtRowCSV@column+1
 14097  0BE7  3004               	movlw	4
 14098  0BE8  00F8               	movwf	GetAtRowCSV@column
 14099  0BE9  3190  20D9  318B   	fcall	_GetAtRowCSV
 14100  0BEC  3199  21F2  318B   	fcall	_strcmp
 14101  0BEF  087B               	movf	?_strcmp,w
 14102  0BF0  047C               	iorwf	?_strcmp+1,w
 14103  0BF1  1D03               	btfss	3,2
 14104  0BF2  2C0C               	goto	l811
 14105                           
 14106                           ;main.c: 548:             {;main.c: 549:                 index = Insert(txdata, '-', ind
      +                          ex, 140);
 14107  0BF3  3064               	movlw	100
 14108  0BF4  00F5               	movwf	Insert@dest
 14109  0BF5  3027               	movlw	39
 14110  0BF6  00F6               	movwf	Insert@dest+1
 14111  0BF7  302D               	movlw	45
 14112  0BF8  0140               	movlb	0	; select bank0
 14113  0BF9  00B9               	movwf	??_PollGPS
 14114  0BFA  0839               	movf	??_PollGPS,w
 14115  0BFB  00F7               	movwf	Insert@src
 14116  0BFC  084A               	movf	PollGPS@index+1,w
 14117  0BFD  00F9               	movwf	Insert@index+1
 14118  0BFE  0849               	movf	PollGPS@index,w
 14119  0BFF  00F8               	movwf	Insert@index
 14120  0C00  308C               	movlw	140
 14121  0C01  00FA               	movwf	Insert@destLimit
 14122  0C02  3000               	movlw	0
 14123  0C03  00FB               	movwf	Insert@destLimit+1
 14124  0C04  3192  22E1  318B   	fcall	_Insert
 14125  0C07  0876               	movf	?_Insert+1,w
 14126  0C08  0140               	movlb	0	; select bank0
 14127  0C09  00CA               	movwf	PollGPS@index+1
 14128  0C0A  0875               	movf	?_Insert,w
 14129  0C0B  00C9               	movwf	PollGPS@index
 14130  0C0C                     l811:	
 14131                           ;main.c: 550:             }
 14132                           
 14133                           
 14134                           ;main.c: 551:             index = InsertString(txdata, GetAtRowCSV(nmea_data, PUBX_LAT),
      +                           index, 140);
 14135  0C0C  3064               	movlw	100
 14136  0C0D  0140               	movlb	0	; select bank0
 14137  0C0E  00A9               	movwf	InsertString@dest
 14138  0C0F  3027               	movlw	39
 14139  0C10  00AA               	movwf	InsertString@dest+1
 14140  0C11  30D8               	movlw	216
 14141  0C12  00F6               	movwf	GetAtRowCSV@src
 14142  0C13  3026               	movlw	38
 14143  0C14  00F7               	movwf	GetAtRowCSV@src+1
 14144  0C15  3000               	movlw	0
 14145  0C16  00F9               	movwf	GetAtRowCSV@column+1
 14146  0C17  3003               	movlw	3
 14147  0C18  00F8               	movwf	GetAtRowCSV@column
 14148  0C19  3190  20D9  318B   	fcall	_GetAtRowCSV
 14149  0C1C  0140               	movlb	0	; select bank0
 14150  0C1D  00AB               	movwf	InsertString@src
 14151  0C1E  3001               	movlw	1
 14152  0C1F  00AC               	movwf	InsertString@src+1
 14153  0C20  084A               	movf	PollGPS@index+1,w
 14154  0C21  00AE               	movwf	InsertString@index+1
 14155  0C22  0849               	movf	PollGPS@index,w
 14156  0C23  00AD               	movwf	InsertString@index
 14157  0C24  308C               	movlw	140
 14158  0C25  00AF               	movwf	InsertString@destLimit
 14159  0C26  3000               	movlw	0
 14160  0C27  00B0               	movwf	InsertString@destLimit+1
 14161  0C28  319F  2707  318B   	fcall	_InsertString
 14162  0C2B  0140               	movlb	0	; select bank0
 14163  0C2C  082A               	movf	?_InsertString+1,w
 14164  0C2D  00CA               	movwf	PollGPS@index+1
 14165  0C2E  0829               	movf	?_InsertString,w
 14166  0C2F  00C9               	movwf	PollGPS@index
 14167                           
 14168                           ;main.c: 552:             index = InsertTxDataSep(index);
 14169  0C30  084A               	movf	PollGPS@index+1,w
 14170  0C31  00FD               	movwf	InsertTxDataSep@index+1
 14171  0C32  0849               	movf	PollGPS@index,w
 14172  0C33  00FC               	movwf	InsertTxDataSep@index
 14173  0C34  31A6  26B7  318B   	fcall	_InsertTxDataSep
 14174  0C37  087D               	movf	?_InsertTxDataSep+1,w
 14175  0C38  0140               	movlb	0	; select bank0
 14176  0C39  00CA               	movwf	PollGPS@index+1
 14177  0C3A  087C               	movf	?_InsertTxDataSep,w
 14178  0C3B  00C9               	movwf	PollGPS@index
 14179                           
 14180                           ;main.c: 554:             if (strcmp(GetAtRowCSV(nmea_data, PUBX_EW), "W") == 0)
 14181  0C3C  30B8               	movlw	low (STR_9| (0+32768))
 14182  0C3D  00FB               	movwf	strcmp@r
 14183  0C3E  30A8               	movlw	high (STR_9| (0+32768))
 14184  0C3F  00FC               	movwf	strcmp@r+1
 14185  0C40  30D8               	movlw	216
 14186  0C41  00F6               	movwf	GetAtRowCSV@src
 14187  0C42  3026               	movlw	38
 14188  0C43  00F7               	movwf	GetAtRowCSV@src+1
 14189  0C44  3000               	movlw	0
 14190  0C45  00F9               	movwf	GetAtRowCSV@column+1
 14191  0C46  3006               	movlw	6
 14192  0C47  00F8               	movwf	GetAtRowCSV@column
 14193  0C48  3190  20D9  318B   	fcall	_GetAtRowCSV
 14194  0C4B  3199  21F2  318B   	fcall	_strcmp
 14195  0C4E  087B               	movf	?_strcmp,w
 14196  0C4F  047C               	iorwf	?_strcmp+1,w
 14197  0C50  1D03               	btfss	3,2
 14198  0C51  2C6B               	goto	l812
 14199                           
 14200                           ;main.c: 555:             {;main.c: 556:                 index = Insert(txdata, '-', ind
      +                          ex, 140);
 14201  0C52  3064               	movlw	100
 14202  0C53  00F5               	movwf	Insert@dest
 14203  0C54  3027               	movlw	39
 14204  0C55  00F6               	movwf	Insert@dest+1
 14205  0C56  302D               	movlw	45
 14206  0C57  0140               	movlb	0	; select bank0
 14207  0C58  00B9               	movwf	??_PollGPS
 14208  0C59  0839               	movf	??_PollGPS,w
 14209  0C5A  00F7               	movwf	Insert@src
 14210  0C5B  084A               	movf	PollGPS@index+1,w
 14211  0C5C  00F9               	movwf	Insert@index+1
 14212  0C5D  0849               	movf	PollGPS@index,w
 14213  0C5E  00F8               	movwf	Insert@index
 14214  0C5F  308C               	movlw	140
 14215  0C60  00FA               	movwf	Insert@destLimit
 14216  0C61  3000               	movlw	0
 14217  0C62  00FB               	movwf	Insert@destLimit+1
 14218  0C63  3192  22E1  318B   	fcall	_Insert
 14219  0C66  0876               	movf	?_Insert+1,w
 14220  0C67  0140               	movlb	0	; select bank0
 14221  0C68  00CA               	movwf	PollGPS@index+1
 14222  0C69  0875               	movf	?_Insert,w
 14223  0C6A  00C9               	movwf	PollGPS@index
 14224  0C6B                     l812:	
 14225                           ;main.c: 557:             }
 14226                           
 14227                           
 14228                           ;main.c: 558:             index = InsertString(txdata, GetAtRowCSV(nmea_data, PUBX_LONG)
      +                          , index, 140);
 14229  0C6B  3064               	movlw	100
 14230  0C6C  0140               	movlb	0	; select bank0
 14231  0C6D  00A9               	movwf	InsertString@dest
 14232  0C6E  3027               	movlw	39
 14233  0C6F  00AA               	movwf	InsertString@dest+1
 14234  0C70  30D8               	movlw	216
 14235  0C71  00F6               	movwf	GetAtRowCSV@src
 14236  0C72  3026               	movlw	38
 14237  0C73  00F7               	movwf	GetAtRowCSV@src+1
 14238  0C74  3000               	movlw	0
 14239  0C75  00F9               	movwf	GetAtRowCSV@column+1
 14240  0C76  3005               	movlw	5
 14241  0C77  00F8               	movwf	GetAtRowCSV@column
 14242  0C78  3190  20D9  318B   	fcall	_GetAtRowCSV
 14243  0C7B  0140               	movlb	0	; select bank0
 14244  0C7C  00AB               	movwf	InsertString@src
 14245  0C7D  3001               	movlw	1
 14246  0C7E  00AC               	movwf	InsertString@src+1
 14247  0C7F  084A               	movf	PollGPS@index+1,w
 14248  0C80  00AE               	movwf	InsertString@index+1
 14249  0C81  0849               	movf	PollGPS@index,w
 14250  0C82  00AD               	movwf	InsertString@index
 14251  0C83  308C               	movlw	140
 14252  0C84  00AF               	movwf	InsertString@destLimit
 14253  0C85  3000               	movlw	0
 14254  0C86  00B0               	movwf	InsertString@destLimit+1
 14255  0C87  319F  2707  318B   	fcall	_InsertString
 14256  0C8A  0140               	movlb	0	; select bank0
 14257  0C8B  082A               	movf	?_InsertString+1,w
 14258  0C8C  00CA               	movwf	PollGPS@index+1
 14259  0C8D  0829               	movf	?_InsertString,w
 14260  0C8E  00C9               	movwf	PollGPS@index
 14261                           
 14262                           ;main.c: 559:             index = InsertTxDataSep(index);
 14263  0C8F  084A               	movf	PollGPS@index+1,w
 14264  0C90  00FD               	movwf	InsertTxDataSep@index+1
 14265  0C91  0849               	movf	PollGPS@index,w
 14266  0C92  00FC               	movwf	InsertTxDataSep@index
 14267  0C93  31A6  26B7  318B   	fcall	_InsertTxDataSep
 14268  0C96  087D               	movf	?_InsertTxDataSep+1,w
 14269  0C97  0140               	movlb	0	; select bank0
 14270  0C98  00CA               	movwf	PollGPS@index+1
 14271  0C99  087C               	movf	?_InsertTxDataSep,w
 14272  0C9A  00C9               	movwf	PollGPS@index
 14273                           
 14274                           ;main.c: 561:             index = InsertTxData(index, PUBX_ALT);
 14275  0C9B  084A               	movf	PollGPS@index+1,w
 14276  0C9C  00B6               	movwf	InsertTxData@index+1
 14277  0C9D  0849               	movf	PollGPS@index,w
 14278  0C9E  00B5               	movwf	InsertTxData@index
 14279  0C9F  3000               	movlw	0
 14280  0CA0  00B8               	movwf	InsertTxData@field+1
 14281  0CA1  3007               	movlw	7
 14282  0CA2  00B7               	movwf	InsertTxData@field
 14283  0CA3  319A  2250  318B   	fcall	_InsertTxData
 14284  0CA6  0140               	movlb	0	; select bank0
 14285  0CA7  0836               	movf	?_InsertTxData+1,w
 14286  0CA8  00CA               	movwf	PollGPS@index+1
 14287  0CA9  0835               	movf	?_InsertTxData,w
 14288  0CAA  00C9               	movwf	PollGPS@index
 14289                           
 14290                           ;main.c: 562:             index = InsertTxData(index, PUBX_HDOP);
 14291  0CAB  084A               	movf	PollGPS@index+1,w
 14292  0CAC  00B6               	movwf	InsertTxData@index+1
 14293  0CAD  0849               	movf	PollGPS@index,w
 14294  0CAE  00B5               	movwf	InsertTxData@index
 14295  0CAF  3000               	movlw	0
 14296  0CB0  00B8               	movwf	InsertTxData@field+1
 14297  0CB1  3009               	movlw	9
 14298  0CB2  00B7               	movwf	InsertTxData@field
 14299  0CB3  319A  2250  318B   	fcall	_InsertTxData
 14300  0CB6  0140               	movlb	0	; select bank0
 14301  0CB7  0836               	movf	?_InsertTxData+1,w
 14302  0CB8  00CA               	movwf	PollGPS@index+1
 14303  0CB9  0835               	movf	?_InsertTxData,w
 14304  0CBA  00C9               	movwf	PollGPS@index
 14305                           
 14306                           ;main.c: 563:             index = InsertTxData(index, PUBX_VDOP);
 14307  0CBB  084A               	movf	PollGPS@index+1,w
 14308  0CBC  00B6               	movwf	InsertTxData@index+1
 14309  0CBD  0849               	movf	PollGPS@index,w
 14310  0CBE  00B5               	movwf	InsertTxData@index
 14311  0CBF  3000               	movlw	0
 14312  0CC0  00B8               	movwf	InsertTxData@field+1
 14313  0CC1  300A               	movlw	10
 14314  0CC2  00B7               	movwf	InsertTxData@field
 14315  0CC3  319A  2250  318B   	fcall	_InsertTxData
 14316  0CC6  0140               	movlb	0	; select bank0
 14317  0CC7  0836               	movf	?_InsertTxData+1,w
 14318  0CC8  00CA               	movwf	PollGPS@index+1
 14319  0CC9  0835               	movf	?_InsertTxData,w
 14320  0CCA  00C9               	movwf	PollGPS@index
 14321                           
 14322                           ;main.c: 564:             index = InsertTxData(index, PUBX_SOG);
 14323  0CCB  084A               	movf	PollGPS@index+1,w
 14324  0CCC  00B6               	movwf	InsertTxData@index+1
 14325  0CCD  0849               	movf	PollGPS@index,w
 14326  0CCE  00B5               	movwf	InsertTxData@index
 14327  0CCF  3000               	movlw	0
 14328  0CD0  00B8               	movwf	InsertTxData@field+1
 14329  0CD1  300B               	movlw	11
 14330  0CD2  00B7               	movwf	InsertTxData@field
 14331  0CD3  319A  2250  318B   	fcall	_InsertTxData
 14332  0CD6  0140               	movlb	0	; select bank0
 14333  0CD7  0836               	movf	?_InsertTxData+1,w
 14334  0CD8  00CA               	movwf	PollGPS@index+1
 14335  0CD9  0835               	movf	?_InsertTxData,w
 14336  0CDA  00C9               	movwf	PollGPS@index
 14337                           
 14338                           ;main.c: 565:             index = InsertTxData(index, PUBX_COG);
 14339  0CDB  084A               	movf	PollGPS@index+1,w
 14340  0CDC  00B6               	movwf	InsertTxData@index+1
 14341  0CDD  0849               	movf	PollGPS@index,w
 14342  0CDE  00B5               	movwf	InsertTxData@index
 14343  0CDF  3000               	movlw	0
 14344  0CE0  00B8               	movwf	InsertTxData@field+1
 14345  0CE1  300C               	movlw	12
 14346  0CE2  00B7               	movwf	InsertTxData@field
 14347  0CE3  319A  2250  318B   	fcall	_InsertTxData
 14348  0CE6  0140               	movlb	0	; select bank0
 14349  0CE7  0836               	movf	?_InsertTxData+1,w
 14350  0CE8  00CA               	movwf	PollGPS@index+1
 14351  0CE9  0835               	movf	?_InsertTxData,w
 14352  0CEA  00C9               	movwf	PollGPS@index
 14353                           
 14354                           ;main.c: 566:             index = InsertTxData(index, PUBX_VVEL);
 14355  0CEB  084A               	movf	PollGPS@index+1,w
 14356  0CEC  00B6               	movwf	InsertTxData@index+1
 14357  0CED  0849               	movf	PollGPS@index,w
 14358  0CEE  00B5               	movwf	InsertTxData@index
 14359  0CEF  3000               	movlw	0
 14360  0CF0  00B8               	movwf	InsertTxData@field+1
 14361  0CF1  300D               	movlw	13
 14362  0CF2  00B7               	movwf	InsertTxData@field
 14363  0CF3  319A  2250  318B   	fcall	_InsertTxData
 14364  0CF6  0140               	movlb	0	; select bank0
 14365  0CF7  0836               	movf	?_InsertTxData+1,w
 14366  0CF8  00CA               	movwf	PollGPS@index+1
 14367  0CF9  0835               	movf	?_InsertTxData,w
 14368  0CFA  00C9               	movwf	PollGPS@index
 14369                           
 14370                           ;main.c: 567:             index = InsertTxData(index, PUBX_NAVSTAT);
 14371  0CFB  084A               	movf	PollGPS@index+1,w
 14372  0CFC  00B6               	movwf	InsertTxData@index+1
 14373  0CFD  0849               	movf	PollGPS@index,w
 14374  0CFE  00B5               	movwf	InsertTxData@index
 14375  0CFF  3000               	movlw	0
 14376  0D00  00B8               	movwf	InsertTxData@field+1
 14377  0D01  3008               	movlw	8
 14378  0D02  00B7               	movwf	InsertTxData@field
 14379  0D03  319A  2250         	fcall	_InsertTxData
 14380  0D05  0140               	movlb	0	; select bank0
 14381  0D06  0836               	movf	?_InsertTxData+1,w
 14382  0D07  00CA               	movwf	PollGPS@index+1
 14383  0D08  0835               	movf	?_InsertTxData,w
 14384  0D09  00C9               	movwf	PollGPS@index
 14385                           
 14386                           ;main.c: 568:             return 1;
 14387  0D0A  3001               	movlw	1
 14388  0D0B  0008               	return
 14389  0D0C                     l4654:	
 14390                           
 14391                           ;main.c: 571:         {;main.c: 573:             if (EUSART1_is_rx_ready())
 14392  0D0C  3198  2000  318B   	fcall	_EUSART1_is_rx_ready
 14393  0D0F  3A00               	xorlw	0
 14394  0D10  1903               	skipnz
 14395  0D11  2B25               	goto	l4666
 14396                           
 14397                           ;main.c: 574:             {;main.c: 575:                 char byte = EUSART1_Read();
 14398  0D12  31A6  2604  318B   	fcall	_EUSART1_Read
 14399  0D15  0140               	movlb	0	; select bank0
 14400  0D16  00B9               	movwf	??_PollGPS
 14401  0D17  0839               	movf	??_PollGPS,w
 14402  0D18  00C6               	movwf	PollGPS@byte
 14403                           
 14404                           ;main.c: 580:                 nmea_data[index] = byte;
 14405  0D19  30D8               	movlw	216
 14406  0D1A  00B9               	movwf	??_PollGPS
 14407  0D1B  3026               	movlw	38
 14408  0D1C  00BA               	movwf	??_PollGPS+1
 14409  0D1D  0849               	movf	PollGPS@index,w
 14410  0D1E  0739               	addwf	??_PollGPS,w
 14411  0D1F  00BB               	movwf	??_PollGPS+2
 14412  0D20  084A               	movf	PollGPS@index+1,w
 14413  0D21  3D3A               	addwfc	??_PollGPS+1,w
 14414  0D22  00BC               	movwf	??_PollGPS+3
 14415  0D23  083B               	movf	??_PollGPS+2,w
 14416  0D24  0086               	movwf	6
 14417  0D25  083C               	movf	??_PollGPS+3,w
 14418  0D26  0087               	movwf	7
 14419  0D27  0846               	movf	PollGPS@byte,w
 14420  0D28  0081               	movwf	1
 14421                           
 14422                           ;main.c: 582:                 if (byte == '\n')
 14423  0D29  300A               	movlw	10
 14424  0D2A  0646               	xorwf	PollGPS@byte,w
 14425  0D2B  1D03               	btfss	3,2
 14426  0D2C  2D2F               	goto	l4664
 14427                           
 14428                           ;main.c: 583:                 {;main.c: 584:                     eusart_complete = 1;
 14429  0D2D  01C5               	clrf	PollGPS@eusart_complete
 14430  0D2E  0AC5               	incf	PollGPS@eusart_complete,f
 14431  0D2F                     l4664:	
 14432                           
 14433                           ;main.c: 589:                 index++;
 14434  0D2F  3001               	movlw	1
 14435  0D30  07C9               	addwf	PollGPS@index,f
 14436  0D31  3000               	movlw	0
 14437  0D32  3DCA               	addwfc	PollGPS@index+1,f
 14438  0D33  2B25               	goto	l4666
 14439  0D34                     l4668:	
 14440                           
 14441                           ;main.c: 595:     return success;
 14442  0D34  0843               	movf	PollGPS@success,w
 14443  0D35  0008               	return
 14444  0D36                     __end_of_PollGPS:	
 14445                           
 14446                           	psect	text32
 14447  19F2                     __ptext32:	
 14448 ;; *************** function _strcmp *****************
 14449 ;; Defined at:
 14450 ;;		line 3 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\strcmp.c"
 14451 ;; Parameters:    Size  Location     Type
 14452 ;;  l               1    wreg     PTR const unsigned char 
 14453 ;;		 -> csvField(20), 
 14454 ;;  r               2   11[COMMON] PTR const unsigned char 
 14455 ;;		 -> STR_9(2), STR_8(2), 
 14456 ;; Auto vars:     Size  Location     Type
 14457 ;;  l               1    8[BANK0 ] PTR const unsigned char 
 14458 ;;		 -> csvField(20), 
 14459 ;; Return value:  Size  Location     Type
 14460 ;;                  2   11[COMMON] int 
 14461 ;; Registers used:
 14462 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 14463 ;; Tracked objects:
 14464 ;;		On entry : 0/0
 14465 ;;		On exit  : 0/0
 14466 ;;		Unchanged: 0/0
 14467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14468 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14469 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14470 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14471 ;;      Totals:         3       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14472 ;;Total ram usage:        4 bytes
 14473 ;; Hardware stack levels used:    1
 14474 ;; Hardware stack levels required when called:    3
 14475 ;; This function calls:
 14476 ;;		Nothing
 14477 ;; This function is called by:
 14478 ;;		_PollGPS
 14479 ;; This function uses a non-reentrant model
 14480 ;;
 14481                           
 14482                           
 14483                           ;psect for function _strcmp
 14484  19F2                     _strcmp:	
 14485                           
 14486                           ;incstack = 0
 14487                           ; Regs used in _strcmp: [wreg-fsr1h+status,2+status,0+pclath]
 14488                           ;strcmp@l stored from wreg
 14489  19F2  0140               	movlb	0	; select bank0
 14490  19F3  00A8               	movwf	strcmp@l
 14491  19F4  2A04               	goto	l4322
 14492  19F5                     l4324:	
 14493  19F5  0828               	movf	strcmp@l,w
 14494  19F6  0086               	movwf	6
 14495  19F7  3001               	movlw	1	; select bank2/3
 14496  19F8  0087               	movwf	7
 14497  19F9  0801               	movf	1,w
 14498  19FA  1903               	btfsc	3,2
 14499  19FB  2A12               	goto	l4326
 14500  19FC  3001               	movlw	1
 14501  19FD  00FD               	movwf	??_strcmp
 14502  19FE  087D               	movf	??_strcmp,w
 14503  19FF  07A8               	addwf	strcmp@l,f
 14504  1A00  3001               	movlw	1
 14505  1A01  07FB               	addwf	strcmp@r,f
 14506  1A02  3000               	movlw	0
 14507  1A03  3DFC               	addwfc	strcmp@r+1,f
 14508  1A04                     l4322:	
 14509  1A04  087B               	movf	strcmp@r,w
 14510  1A05  0084               	movwf	4
 14511  1A06  087C               	movf	strcmp@r+1,w
 14512  1A07  0085               	movwf	5
 14513  1A08  0800               	movf	0,w	;code access
 14514  1A09  00FD               	movwf	??_strcmp
 14515  1A0A  0828               	movf	strcmp@l,w
 14516  1A0B  0086               	movwf	6
 14517  1A0C  3001               	movlw	1	; select bank2/3
 14518  1A0D  0087               	movwf	7
 14519  1A0E  0801               	movf	1,w
 14520  1A0F  067D               	xorwf	??_strcmp,w
 14521  1A10  1903               	btfsc	3,2
 14522  1A11  29F5               	goto	l4324
 14523  1A12                     l4326:	
 14524  1A12  0828               	movf	strcmp@l,w
 14525  1A13  0086               	movwf	6
 14526  1A14  3001               	movlw	1	; select bank2/3
 14527  1A15  0087               	movwf	7
 14528  1A16  087B               	movf	strcmp@r,w
 14529  1A17  0084               	movwf	4
 14530  1A18  087C               	movf	strcmp@r+1,w
 14531  1A19  0085               	movwf	5
 14532  1A1A  0800               	movf	0,w	;code access
 14533  1A1B  0201               	subwf	1,w
 14534  1A1C  00FB               	movwf	?_strcmp
 14535  1A1D  01FC               	clrf	?_strcmp+1
 14536  1A1E  1C03               	skipc
 14537  1A1F  03FC               	decf	?_strcmp+1,f
 14538  1A20  0008               	return
 14539  1A21                     __end_of_strcmp:	
 14540                           
 14541                           	psect	text33
 14542  1870                     __ptext33:	
 14543 ;; *************** function _WriteGPS *****************
 14544 ;; Defined at:
 14545 ;;		line 310 in file "main.c"
 14546 ;; Parameters:    Size  Location     Type
 14547 ;;  message         2    5[COMMON] PTR unsigned char 
 14548 ;;		 -> STR_7(14), STR_6(26), STR_5(26), STR_4(26), 
 14549 ;;		 -> STR_3(26), STR_2(26), STR_1(26), 
 14550 ;; Auto vars:     Size  Location     Type
 14551 ;;  i               2   10[COMMON] int 
 14552 ;;  counti          2    8[COMMON] int 
 14553 ;; Return value:  Size  Location     Type
 14554 ;;                  1    wreg      void 
 14555 ;; Registers used:
 14556 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 14557 ;; Tracked objects:
 14558 ;;		On entry : 0/0
 14559 ;;		On exit  : 0/0
 14560 ;;		Unchanged: 0/0
 14561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14562 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14563 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14564 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14565 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14566 ;;Total ram usage:        7 bytes
 14567 ;; Hardware stack levels used:    1
 14568 ;; Hardware stack levels required when called:    4
 14569 ;; This function calls:
 14570 ;;		_EUSART1_Write
 14571 ;;		_strlen
 14572 ;; This function is called by:
 14573 ;;		_SetupGPS
 14574 ;;		_PollGPS
 14575 ;; This function uses a non-reentrant model
 14576 ;;
 14577                           
 14578                           
 14579                           ;psect for function _WriteGPS
 14580  1870                     _WriteGPS:	
 14581                           
 14582                           ;main.c: 310: void WriteGPS(char* message);main.c: 311: {;main.c: 312:     for (int i = 
      +                          0, counti = strlen(message); i <= counti; i++)
 14583                           
 14584                           ;incstack = 0
 14585                           ; Regs used in _WriteGPS: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 14586  1870  01FA               	clrf	WriteGPS@i
 14587  1871  01FB               	clrf	WriteGPS@i+1
 14588  1872  0876               	movf	WriteGPS@message+1,w
 14589  1873  00F1               	movwf	strlen@s+1
 14590  1874  0875               	movf	WriteGPS@message,w
 14591  1875  00F0               	movwf	strlen@s
 14592  1876  31A6  26A0  3198   	fcall	_strlen
 14593  1879  0871               	movf	?_strlen+1,w
 14594  187A  00F9               	movwf	WriteGPS@counti+1
 14595  187B  0870               	movf	?_strlen,w
 14596  187C  00F8               	movwf	WriteGPS@counti
 14597  187D                     l4234:	
 14598  187D  0879               	movf	WriteGPS@counti+1,w
 14599  187E  3A80               	xorlw	128
 14600  187F  00F7               	movwf	??_WriteGPS
 14601  1880  087B               	movf	WriteGPS@i+1,w
 14602  1881  3A80               	xorlw	128
 14603  1882  0277               	subwf	??_WriteGPS,w
 14604  1883  1D03               	skipz
 14605  1884  2887               	goto	u3845
 14606  1885  087A               	movf	WriteGPS@i,w
 14607  1886  0278               	subwf	WriteGPS@counti,w
 14608  1887                     u3845:	
 14609  1887  1C03               	btfss	3,0
 14610  1888  0008               	return
 14611                           
 14612                           ;main.c: 313:     {;main.c: 314:         EUSART1_Write((uint8_t)message[i]);
 14613  1889  0875               	movf	WriteGPS@message,w
 14614  188A  077A               	addwf	WriteGPS@i,w
 14615  188B  0084               	movwf	4
 14616  188C  0876               	movf	WriteGPS@message+1,w
 14617  188D  3D7B               	addwfc	WriteGPS@i+1,w
 14618  188E  0085               	movwf	5
 14619  188F  0800               	movf	0,w	;code access
 14620  1890  31A5  25D4  3198   	fcall	_EUSART1_Write
 14621                           
 14622                           ;main.c: 315:     }
 14623  1893  3001               	movlw	1
 14624  1894  07FA               	addwf	WriteGPS@i,f
 14625  1895  3000               	movlw	0
 14626  1896  3DFB               	addwfc	WriteGPS@i+1,f
 14627  1897  287D               	goto	l4234
 14628  1898                     __end_of_WriteGPS:	
 14629                           
 14630                           	psect	text34
 14631  25D4                     __ptext34:	
 14632 ;; *************** function _EUSART1_Write *****************
 14633 ;; Defined at:
 14634 ;;		line 132 in file "mcc_generated_files/eusart1.c"
 14635 ;; Parameters:    Size  Location     Type
 14636 ;;  txData          1    wreg     unsigned char 
 14637 ;; Auto vars:     Size  Location     Type
 14638 ;;  txData          1    0[COMMON] unsigned char 
 14639 ;; Return value:  Size  Location     Type
 14640 ;;                  1    wreg      void 
 14641 ;; Registers used:
 14642 ;;		wreg
 14643 ;; Tracked objects:
 14644 ;;		On entry : 0/0
 14645 ;;		On exit  : 0/0
 14646 ;;		Unchanged: 0/0
 14647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14649 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14651 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14652 ;;Total ram usage:        1 bytes
 14653 ;; Hardware stack levels used:    1
 14654 ;; Hardware stack levels required when called:    3
 14655 ;; This function calls:
 14656 ;;		Nothing
 14657 ;; This function is called by:
 14658 ;;		_WriteGPS
 14659 ;;		_GPS_SendUBX
 14660 ;; This function uses a non-reentrant model
 14661 ;;
 14662                           
 14663                           
 14664                           ;psect for function _EUSART1_Write
 14665  25D4                     _EUSART1_Write:	
 14666                           
 14667                           ;incstack = 0
 14668                           ; Regs used in _EUSART1_Write: [wreg]
 14669                           ;EUSART1_Write@txData stored from wreg
 14670  25D4  00F0               	movwf	EUSART1_Write@txData
 14671  25D5                     l355:	
 14672                           ;mcc_generated_files/eusart1.c: 135:     {;mcc_generated_files/eusart1.c: 136:     }
 14673                           
 14674                           
 14675                           ;mcc_generated_files/eusart1.c: 134:     while(0 == PIR3bits.TX1IF)
 14676  25D5  014E               	movlb	14	; select bank14
 14677  25D6  1E0F               	btfss	15,4	;volatile
 14678  25D7  2DD5               	goto	l355
 14679                           
 14680                           ;mcc_generated_files/eusart1.c: 138:     TX1REG = txData;
 14681  25D8  0870               	movf	EUSART1_Write@txData,w
 14682  25D9  0142               	movlb	2	; select bank2
 14683  25DA  009A               	movwf	26	;volatile
 14684  25DB  0008               	return
 14685  25DC                     __end_of_EUSART1_Write:	
 14686                           
 14687                           	psect	text35
 14688  1A50                     __ptext35:	
 14689 ;; *************** function _InsertTxData *****************
 14690 ;; Defined at:
 14691 ;;		line 503 in file "main.c"
 14692 ;; Parameters:    Size  Location     Type
 14693 ;;  index           2   21[BANK0 ] int 
 14694 ;;  field           2   23[BANK0 ] int 
 14695 ;; Auto vars:     Size  Location     Type
 14696 ;;		None
 14697 ;; Return value:  Size  Location     Type
 14698 ;;                  2   21[BANK0 ] int 
 14699 ;; Registers used:
 14700 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14701 ;; Tracked objects:
 14702 ;;		On entry : 0/0
 14703 ;;		On exit  : 0/0
 14704 ;;		Unchanged: 0/0
 14705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14706 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14709 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14710 ;;Total ram usage:        4 bytes
 14711 ;; Hardware stack levels used:    1
 14712 ;; Hardware stack levels required when called:    6
 14713 ;; This function calls:
 14714 ;;		_GetAtRowCSV
 14715 ;;		_InsertString
 14716 ;;		_InsertTxDataSep
 14717 ;; This function is called by:
 14718 ;;		_PollGPS
 14719 ;; This function uses a non-reentrant model
 14720 ;;
 14721                           
 14722                           
 14723                           ;psect for function _InsertTxData
 14724  1A50                     _InsertTxData:	
 14725                           
 14726                           ;main.c: 503: int InsertTxData(int index, int field);main.c: 504: {;main.c: 505:     ind
      +                          ex = InsertString(txdata, GetAtRowCSV(nmea_data, field), index, 140);
 14727                           
 14728                           ;incstack = 0
 14729                           ; Regs used in _InsertTxData: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14730  1A50  3064               	movlw	100
 14731  1A51  0140               	movlb	0	; select bank0
 14732  1A52  00A9               	movwf	InsertString@dest
 14733  1A53  3027               	movlw	39
 14734  1A54  00AA               	movwf	InsertString@dest+1
 14735  1A55  30D8               	movlw	216
 14736  1A56  00F6               	movwf	GetAtRowCSV@src
 14737  1A57  3026               	movlw	38
 14738  1A58  00F7               	movwf	GetAtRowCSV@src+1
 14739  1A59  0838               	movf	InsertTxData@field+1,w
 14740  1A5A  00F9               	movwf	GetAtRowCSV@column+1
 14741  1A5B  0837               	movf	InsertTxData@field,w
 14742  1A5C  00F8               	movwf	GetAtRowCSV@column
 14743  1A5D  3190  20D9  319A   	fcall	_GetAtRowCSV
 14744  1A60  0140               	movlb	0	; select bank0
 14745  1A61  00AB               	movwf	InsertString@src
 14746  1A62  3001               	movlw	1
 14747  1A63  00AC               	movwf	InsertString@src+1
 14748  1A64  0836               	movf	InsertTxData@index+1,w
 14749  1A65  00AE               	movwf	InsertString@index+1
 14750  1A66  0835               	movf	InsertTxData@index,w
 14751  1A67  00AD               	movwf	InsertString@index
 14752  1A68  308C               	movlw	140
 14753  1A69  00AF               	movwf	InsertString@destLimit
 14754  1A6A  3000               	movlw	0
 14755  1A6B  00B0               	movwf	InsertString@destLimit+1
 14756  1A6C  319F  2707  319A   	fcall	_InsertString
 14757  1A6F  0140               	movlb	0	; select bank0
 14758  1A70  082A               	movf	?_InsertString+1,w
 14759  1A71  00B6               	movwf	InsertTxData@index+1
 14760  1A72  0829               	movf	?_InsertString,w
 14761  1A73  00B5               	movwf	InsertTxData@index
 14762                           
 14763                           ;main.c: 506:     return InsertTxDataSep(index);
 14764  1A74  0836               	movf	InsertTxData@index+1,w
 14765  1A75  00FD               	movwf	InsertTxDataSep@index+1
 14766  1A76  0835               	movf	InsertTxData@index,w
 14767  1A77  00FC               	movwf	InsertTxDataSep@index
 14768  1A78  31A6  26B7         	fcall	_InsertTxDataSep
 14769  1A7A  087D               	movf	?_InsertTxDataSep+1,w
 14770  1A7B  0140               	movlb	0	; select bank0
 14771  1A7C  00B6               	movwf	?_InsertTxData+1
 14772  1A7D  087C               	movf	?_InsertTxDataSep,w
 14773  1A7E  00B5               	movwf	?_InsertTxData
 14774  1A7F  0008               	return
 14775  1A80                     __end_of_InsertTxData:	
 14776                           
 14777                           	psect	text36
 14778  26B7                     __ptext36:	
 14779 ;; *************** function _InsertTxDataSep *****************
 14780 ;; Defined at:
 14781 ;;		line 498 in file "main.c"
 14782 ;; Parameters:    Size  Location     Type
 14783 ;;  index           2   12[COMMON] int 
 14784 ;; Auto vars:     Size  Location     Type
 14785 ;;		None
 14786 ;; Return value:  Size  Location     Type
 14787 ;;                  2   12[COMMON] int 
 14788 ;; Registers used:
 14789 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14790 ;; Tracked objects:
 14791 ;;		On entry : 0/0
 14792 ;;		On exit  : 0/0
 14793 ;;		Unchanged: 0/0
 14794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14795 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14796 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14797 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14798 ;;      Totals:         2       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14799 ;;Total ram usage:        3 bytes
 14800 ;; Hardware stack levels used:    1
 14801 ;; Hardware stack levels required when called:    5
 14802 ;; This function calls:
 14803 ;;		_Insert
 14804 ;; This function is called by:
 14805 ;;		_InsertTxData
 14806 ;;		_PollGPS
 14807 ;; This function uses a non-reentrant model
 14808 ;;
 14809                           
 14810                           
 14811                           ;psect for function _InsertTxDataSep
 14812  26B7                     _InsertTxDataSep:	
 14813                           
 14814                           ;main.c: 498: int InsertTxDataSep(int index);main.c: 499: {;main.c: 500:     return Inse
      +                          rt(txdata, ',', index, 140);
 14815                           
 14816                           ;incstack = 0
 14817                           ; Regs used in _InsertTxDataSep: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14818  26B7  3064               	movlw	100
 14819  26B8  00F5               	movwf	Insert@dest
 14820  26B9  3027               	movlw	39
 14821  26BA  00F6               	movwf	Insert@dest+1
 14822  26BB  302C               	movlw	44
 14823  26BC  0140               	movlb	0	; select bank0
 14824  26BD  00A9               	movwf	??_InsertTxDataSep
 14825  26BE  0829               	movf	??_InsertTxDataSep,w
 14826  26BF  00F7               	movwf	Insert@src
 14827  26C0  087D               	movf	InsertTxDataSep@index+1,w
 14828  26C1  00F9               	movwf	Insert@index+1
 14829  26C2  087C               	movf	InsertTxDataSep@index,w
 14830  26C3  00F8               	movwf	Insert@index
 14831  26C4  308C               	movlw	140
 14832  26C5  00FA               	movwf	Insert@destLimit
 14833  26C6  3000               	movlw	0
 14834  26C7  00FB               	movwf	Insert@destLimit+1
 14835  26C8  3192  22E1         	fcall	_Insert
 14836  26CA  0876               	movf	?_Insert+1,w
 14837  26CB  00FD               	movwf	?_InsertTxDataSep+1
 14838  26CC  0875               	movf	?_Insert,w
 14839  26CD  00FC               	movwf	?_InsertTxDataSep
 14840  26CE  0008               	return
 14841  26CF                     __end_of_InsertTxDataSep:	
 14842                           
 14843                           	psect	text37
 14844  1F07                     __ptext37:	
 14845 ;; *************** function _InsertString *****************
 14846 ;; Defined at:
 14847 ;;		line 112 in file "main.c"
 14848 ;; Parameters:    Size  Location     Type
 14849 ;;  dest            2    9[BANK0 ] PTR unsigned char 
 14850 ;;		 -> txdata(140), 
 14851 ;;  src             2   11[BANK0 ] PTR unsigned char 
 14852 ;;		 -> checksum(6), STR_10(7), main@convertedNumber(16), csvField(20), 
 14853 ;;  index           2   13[BANK0 ] int 
 14854 ;;  destLimit       2   15[BANK0 ] int 
 14855 ;; Auto vars:     Size  Location     Type
 14856 ;;  i               2   19[BANK0 ] int 
 14857 ;;  counti          2   17[BANK0 ] int 
 14858 ;; Return value:  Size  Location     Type
 14859 ;;                  2    9[BANK0 ] int 
 14860 ;; Registers used:
 14861 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14862 ;; Tracked objects:
 14863 ;;		On entry : 0/0
 14864 ;;		On exit  : 0/0
 14865 ;;		Unchanged: 0/0
 14866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14867 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14868 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14869 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14870 ;;      Totals:         1      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14871 ;;Total ram usage:       13 bytes
 14872 ;; Hardware stack levels used:    1
 14873 ;; Hardware stack levels required when called:    5
 14874 ;; This function calls:
 14875 ;;		_Insert
 14876 ;;		_strlen
 14877 ;; This function is called by:
 14878 ;;		_InsertTxData
 14879 ;;		_PollGPS
 14880 ;;		_main
 14881 ;; This function uses a non-reentrant model
 14882 ;;
 14883                           
 14884                           
 14885                           ;psect for function _InsertString
 14886  1F07                     _InsertString:	
 14887                           
 14888                           ;main.c: 112: int InsertString(char* dest, char* src, int index, int destLimit);main.c: 
      +                          113: {;main.c: 114:     for (int i = 0, counti = strlen(src); i < counti && index < dest
      +                          Limit; i++)
 14889                           
 14890                           ;incstack = 0
 14891                           ; Regs used in _InsertString: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14892  1F07  0140               	movlb	0	; select bank0
 14893  1F08  01B3               	clrf	InsertString@i
 14894  1F09  01B4               	clrf	InsertString@i+1
 14895  1F0A  082C               	movf	InsertString@src+1,w
 14896  1F0B  00F1               	movwf	strlen@s+1
 14897  1F0C  082B               	movf	InsertString@src,w
 14898  1F0D  00F0               	movwf	strlen@s
 14899  1F0E  31A6  26A0  319F   	fcall	_strlen
 14900  1F11  0871               	movf	?_strlen+1,w
 14901  1F12  0140               	movlb	0	; select bank0
 14902  1F13  00B2               	movwf	InsertString@counti+1
 14903  1F14  0870               	movf	?_strlen,w
 14904  1F15  00B1               	movwf	InsertString@counti
 14905  1F16  2F47               	goto	l3954
 14906  1F17                     l3956:	
 14907  1F17  0140               	movlb	0	; select bank0
 14908  1F18  082E               	movf	InsertString@index+1,w
 14909  1F19  3A80               	xorlw	128
 14910  1F1A  00FC               	movwf	??_InsertString
 14911  1F1B  0830               	movf	InsertString@destLimit+1,w
 14912  1F1C  3A80               	xorlw	128
 14913  1F1D  027C               	subwf	??_InsertString,w
 14914  1F1E  1D03               	skipz
 14915  1F1F  2F22               	goto	u3415
 14916  1F20  082F               	movf	InsertString@destLimit,w
 14917  1F21  022D               	subwf	InsertString@index,w
 14918  1F22                     u3415:	
 14919  1F22  1803               	btfsc	3,0
 14920  1F23  2F53               	goto	l3958
 14921                           
 14922                           ;main.c: 115:     {;main.c: 117:         index = Insert(dest, src[i], index, destLimit);
 14923  1F24  0140               	movlb	0	; select bank0
 14924  1F25  082A               	movf	InsertString@dest+1,w
 14925  1F26  00F6               	movwf	Insert@dest+1
 14926  1F27  0829               	movf	InsertString@dest,w
 14927  1F28  00F5               	movwf	Insert@dest
 14928  1F29  082B               	movf	InsertString@src,w
 14929  1F2A  0733               	addwf	InsertString@i,w
 14930  1F2B  0084               	movwf	4
 14931  1F2C  082C               	movf	InsertString@src+1,w
 14932  1F2D  3D34               	addwfc	InsertString@i+1,w
 14933  1F2E  0085               	movwf	5
 14934  1F2F  0800               	movf	0,w	;code access
 14935  1F30  00FC               	movwf	??_InsertString
 14936  1F31  087C               	movf	??_InsertString,w
 14937  1F32  00F7               	movwf	Insert@src
 14938  1F33  082E               	movf	InsertString@index+1,w
 14939  1F34  00F9               	movwf	Insert@index+1
 14940  1F35  082D               	movf	InsertString@index,w
 14941  1F36  00F8               	movwf	Insert@index
 14942  1F37  0830               	movf	InsertString@destLimit+1,w
 14943  1F38  00FB               	movwf	Insert@destLimit+1
 14944  1F39  082F               	movf	InsertString@destLimit,w
 14945  1F3A  00FA               	movwf	Insert@destLimit
 14946  1F3B  3192  22E1  319F   	fcall	_Insert
 14947  1F3E  0876               	movf	?_Insert+1,w
 14948  1F3F  0140               	movlb	0	; select bank0
 14949  1F40  00AE               	movwf	InsertString@index+1
 14950  1F41  0875               	movf	?_Insert,w
 14951  1F42  00AD               	movwf	InsertString@index
 14952                           
 14953                           ;main.c: 118:     }
 14954  1F43  3001               	movlw	1
 14955  1F44  07B3               	addwf	InsertString@i,f
 14956  1F45  3000               	movlw	0
 14957  1F46  3DB4               	addwfc	InsertString@i+1,f
 14958  1F47                     l3954:	
 14959  1F47  0834               	movf	InsertString@i+1,w
 14960  1F48  3A80               	xorlw	128
 14961  1F49  00FC               	movwf	??_InsertString
 14962  1F4A  0832               	movf	InsertString@counti+1,w
 14963  1F4B  3A80               	xorlw	128
 14964  1F4C  027C               	subwf	??_InsertString,w
 14965  1F4D  1D03               	skipz
 14966  1F4E  2F51               	goto	u3405
 14967  1F4F  0831               	movf	InsertString@counti,w
 14968  1F50  0233               	subwf	InsertString@i,w
 14969  1F51                     u3405:	
 14970  1F51  1C03               	btfss	3,0
 14971  1F52  2F17               	goto	l3956
 14972  1F53                     l3958:	
 14973                           
 14974                           ;main.c: 119:     return index;
 14975  1F53  0140               	movlb	0	; select bank0
 14976  1F54  082E               	movf	InsertString@index+1,w
 14977  1F55  00AA               	movwf	?_InsertString+1
 14978  1F56  082D               	movf	InsertString@index,w
 14979  1F57  00A9               	movwf	?_InsertString
 14980  1F58  0008               	return
 14981  1F59                     __end_of_InsertString:	
 14982                           
 14983                           	psect	text38
 14984  12E1                     __ptext38:	
 14985 ;; *************** function _Insert *****************
 14986 ;; Defined at:
 14987 ;;		line 93 in file "main.c"
 14988 ;; Parameters:    Size  Location     Type
 14989 ;;  dest            2    5[COMMON] PTR unsigned char 
 14990 ;;		 -> txdata(140), 
 14991 ;;  src             1    7[COMMON] unsigned char 
 14992 ;;  index           2    8[COMMON] int 
 14993 ;;  destLimit       2   10[COMMON] int 
 14994 ;; Auto vars:     Size  Location     Type
 14995 ;;  i               2    7[BANK0 ] int 
 14996 ;;  length          2    5[BANK0 ] int 
 14997 ;; Return value:  Size  Location     Type
 14998 ;;                  2    5[COMMON] int 
 14999 ;; Registers used:
 15000 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15001 ;; Tracked objects:
 15002 ;;		On entry : 0/0
 15003 ;;		On exit  : 0/0
 15004 ;;		Unchanged: 0/0
 15005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15006 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15007 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15008 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15009 ;;      Totals:         7       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15010 ;;Total ram usage:       16 bytes
 15011 ;; Hardware stack levels used:    1
 15012 ;; Hardware stack levels required when called:    4
 15013 ;; This function calls:
 15014 ;;		_strlen
 15015 ;; This function is called by:
 15016 ;;		_InsertString
 15017 ;;		_InsertTxDataSep
 15018 ;;		_PollGPS
 15019 ;;		_main
 15020 ;; This function uses a non-reentrant model
 15021 ;;
 15022                           
 15023                           
 15024                           ;psect for function _Insert
 15025  12E1                     _Insert:	
 15026                           
 15027                           ;main.c: 93: int Insert(char* dest, char src, int index, int destLimit);main.c: 94: {;ma
      +                          in.c: 95:     int length = strlen(dest);
 15028                           
 15029                           ;incstack = 0
 15030                           ; Regs used in _Insert: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15031  12E1  0876               	movf	Insert@dest+1,w
 15032  12E2  00F1               	movwf	strlen@s+1
 15033  12E3  0875               	movf	Insert@dest,w
 15034  12E4  00F0               	movwf	strlen@s
 15035  12E5  31A6  26A0  3192   	fcall	_strlen
 15036  12E8  0871               	movf	?_strlen+1,w
 15037  12E9  0140               	movlb	0	; select bank0
 15038  12EA  00A6               	movwf	Insert@length+1
 15039  12EB  0870               	movf	?_strlen,w
 15040  12EC  00A5               	movwf	Insert@length
 15041                           
 15042                           ;main.c: 96:     if (length < destLimit - 1)
 15043  12ED  087A               	movf	Insert@destLimit,w
 15044  12EE  3EFF               	addlw	255
 15045  12EF  00A0               	movwf	??_Insert
 15046  12F0  30FF               	movlw	255
 15047  12F1  3D7B               	addwfc	Insert@destLimit+1,w
 15048  12F2  00A1               	movwf	??_Insert+1
 15049  12F3  0826               	movf	Insert@length+1,w
 15050  12F4  3A80               	xorlw	128
 15051  12F5  00A2               	movwf	??_Insert+2
 15052  12F6  0821               	movf	??_Insert+1,w
 15053  12F7  3A80               	xorlw	128
 15054  12F8  0222               	subwf	??_Insert+2,w
 15055  12F9  1D03               	skipz
 15056  12FA  2AFD               	goto	u2825
 15057  12FB  0820               	movf	??_Insert,w
 15058  12FC  0225               	subwf	Insert@length,w
 15059  12FD                     u2825:	
 15060  12FD  1803               	skipnc
 15061  12FE  2B4A               	goto	l3602
 15062                           
 15063                           ;main.c: 97:     {;main.c: 98:         dest[length + 1] = '\0';
 15064  12FF  0140               	movlb	0	; select bank0
 15065  1300  0825               	movf	Insert@length,w
 15066  1301  0775               	addwf	Insert@dest,w
 15067  1302  00A0               	movwf	??_Insert
 15068  1303  0826               	movf	Insert@length+1,w
 15069  1304  3D76               	addwfc	Insert@dest+1,w
 15070  1305  00A1               	movwf	??_Insert+1
 15071  1306  0820               	movf	??_Insert,w
 15072  1307  0086               	movwf	6
 15073  1308  0821               	movf	??_Insert+1,w
 15074  1309  0087               	movwf	7
 15075  130A  3141               	addfsr 1,1
 15076  130B  0181               	clrf	1
 15077                           
 15078                           ;main.c: 99:         for (int i = length; i > index; i--)
 15079  130C  0826               	movf	Insert@length+1,w
 15080  130D  00A8               	movwf	Insert@i+1
 15081  130E  0825               	movf	Insert@length,w
 15082  130F  00A7               	movwf	Insert@i
 15083  1310                     l3598:	
 15084  1310  0879               	movf	Insert@index+1,w
 15085  1311  3A80               	xorlw	128
 15086  1312  00A0               	movwf	??_Insert
 15087  1313  0828               	movf	Insert@i+1,w
 15088  1314  3A80               	xorlw	128
 15089  1315  0220               	subwf	??_Insert,w
 15090  1316  1D03               	skipz
 15091  1317  2B1A               	goto	u2835
 15092  1318  0827               	movf	Insert@i,w
 15093  1319  0278               	subwf	Insert@index,w
 15094  131A                     u2835:	
 15095  131A  1803               	btfsc	3,0
 15096  131B  2B3C               	goto	l3600
 15097                           
 15098                           ;main.c: 100:         {;main.c: 101:             dest[i] = dest[i - 1];
 15099  131C  0140               	movlb	0	; select bank0
 15100  131D  0827               	movf	Insert@i,w
 15101  131E  0775               	addwf	Insert@dest,w
 15102  131F  00A0               	movwf	??_Insert
 15103  1320  0828               	movf	Insert@i+1,w
 15104  1321  3D76               	addwfc	Insert@dest+1,w
 15105  1322  00A1               	movwf	??_Insert+1
 15106  1323  0820               	movf	??_Insert,w
 15107  1324  3EFF               	addlw	255
 15108  1325  0086               	movwf	6
 15109  1326  30FF               	movlw	255
 15110  1327  3D21               	addwfc	??_Insert+1,w
 15111  1328  0087               	movwf	7
 15112  1329  0801               	movf	1,w
 15113  132A  00A2               	movwf	??_Insert+2
 15114  132B  0827               	movf	Insert@i,w
 15115  132C  0775               	addwf	Insert@dest,w
 15116  132D  00A3               	movwf	??_Insert+3
 15117  132E  0828               	movf	Insert@i+1,w
 15118  132F  3D76               	addwfc	Insert@dest+1,w
 15119  1330  00A4               	movwf	??_Insert+4
 15120  1331  0823               	movf	??_Insert+3,w
 15121  1332  0086               	movwf	6
 15122  1333  0824               	movf	??_Insert+4,w
 15123  1334  0087               	movwf	7
 15124  1335  0822               	movf	??_Insert+2,w
 15125  1336  0081               	movwf	1
 15126                           
 15127                           ;main.c: 102:         }
 15128  1337  30FF               	movlw	255
 15129  1338  07A7               	addwf	Insert@i,f
 15130  1339  30FF               	movlw	255
 15131  133A  3DA8               	addwfc	Insert@i+1,f
 15132  133B  2B10               	goto	l3598
 15133  133C                     l3600:	
 15134                           
 15135                           ;main.c: 103:         dest[index] = src;
 15136  133C  0878               	movf	Insert@index,w
 15137  133D  0775               	addwf	Insert@dest,w
 15138  133E  0140               	movlb	0	; select bank0
 15139  133F  00A0               	movwf	??_Insert
 15140  1340  0879               	movf	Insert@index+1,w
 15141  1341  3D76               	addwfc	Insert@dest+1,w
 15142  1342  00A1               	movwf	??_Insert+1
 15143  1343  0820               	movf	??_Insert,w
 15144  1344  0086               	movwf	6
 15145  1345  0821               	movf	??_Insert+1,w
 15146  1346  0087               	movwf	7
 15147  1347  0877               	movf	Insert@src,w
 15148  1348  0081               	movwf	1
 15149                           
 15150                           ;main.c: 104:     }
 15151  1349  2B4F               	goto	l3606
 15152  134A                     l3602:	
 15153                           
 15154                           ;main.c: 106:     {;main.c: 107:         return index;
 15155  134A  0879               	movf	Insert@index+1,w
 15156  134B  00F6               	movwf	?_Insert+1
 15157  134C  0878               	movf	Insert@index,w
 15158  134D  00F5               	movwf	?_Insert
 15159  134E  0008               	return
 15160  134F                     l3606:	
 15161                           
 15162                           ;main.c: 109:     return index + 1;
 15163  134F  0878               	movf	Insert@index,w
 15164  1350  3E01               	addlw	1
 15165  1351  00F5               	movwf	?_Insert
 15166  1352  3000               	movlw	0
 15167  1353  3D79               	addwfc	Insert@index+1,w
 15168  1354  00F6               	movwf	?_Insert+1
 15169  1355  0008               	return
 15170  1356                     __end_of_Insert:	
 15171                           
 15172                           	psect	text39
 15173  10D9                     __ptext39:	
 15174 ;; *************** function _GetAtRowCSV *****************
 15175 ;; Defined at:
 15176 ;;		line 67 in file "main.c"
 15177 ;; Parameters:    Size  Location     Type
 15178 ;;  src             2    6[COMMON] PTR unsigned char 
 15179 ;;		 -> nmea_data(140), 
 15180 ;;  column          2    8[COMMON] int 
 15181 ;; Auto vars:     Size  Location     Type
 15182 ;;  i               2    6[BANK0 ] int 
 15183 ;;  counti          2    0[BANK0 ] int 
 15184 ;;  index           2    4[BANK0 ] int 
 15185 ;;  col             2    2[BANK0 ] int 
 15186 ;; Return value:  Size  Location     Type
 15187 ;;                  1    wreg      PTR unsigned char 
 15188 ;; Registers used:
 15189 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15190 ;; Tracked objects:
 15191 ;;		On entry : 0/0
 15192 ;;		On exit  : 0/0
 15193 ;;		Unchanged: 0/0
 15194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15195 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15196 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15197 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15198 ;;      Totals:         5       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15199 ;;Total ram usage:       13 bytes
 15200 ;; Hardware stack levels used:    1
 15201 ;; Hardware stack levels required when called:    4
 15202 ;; This function calls:
 15203 ;;		_ClearStringn
 15204 ;;		_strlen
 15205 ;; This function is called by:
 15206 ;;		_InsertTxData
 15207 ;;		_PollGPS
 15208 ;; This function uses a non-reentrant model
 15209 ;;
 15210                           
 15211                           
 15212                           ;psect for function _GetAtRowCSV
 15213  10D9                     _GetAtRowCSV:	
 15214                           
 15215                           ;main.c: 67: char* GetAtRowCSV(char* src, int column);main.c: 68: {;main.c: 69:     Clea
      +                          rStringn(csvField, 20);
 15216                           
 15217                           ;incstack = 0
 15218                           ; Regs used in _GetAtRowCSV: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15219  10D9  3014               	movlw	20
 15220  10DA  00F0               	movwf	ClearStringn@length
 15221  10DB  3000               	movlw	0
 15222  10DC  00F1               	movwf	ClearStringn@length+1
 15223  10DD  30D3               	movlw	(low (_csvField| (0+256)))& (0+255)
 15224  10DE  31A7  2757  3190   	fcall	_ClearStringn
 15225                           
 15226                           ;main.c: 70:     int col = 0;
 15227  10E1  0140               	movlb	0	; select bank0
 15228  10E2  01A2               	clrf	GetAtRowCSV@col
 15229  10E3  01A3               	clrf	GetAtRowCSV@col+1
 15230                           
 15231                           ;main.c: 71:     int index = 0;
 15232  10E4  01A4               	clrf	GetAtRowCSV@index
 15233  10E5  01A5               	clrf	GetAtRowCSV@index+1
 15234                           
 15235                           ;main.c: 72:     for (int i = 0, counti = strlen(src); i < counti; i++)
 15236  10E6  01A6               	clrf	GetAtRowCSV@i
 15237  10E7  01A7               	clrf	GetAtRowCSV@i+1
 15238  10E8  0877               	movf	GetAtRowCSV@src+1,w
 15239  10E9  00F1               	movwf	strlen@s+1
 15240  10EA  0876               	movf	GetAtRowCSV@src,w
 15241  10EB  00F0               	movwf	strlen@s
 15242  10EC  31A6  26A0  3190   	fcall	_strlen
 15243  10EF  0871               	movf	?_strlen+1,w
 15244  10F0  0140               	movlb	0	; select bank0
 15245  10F1  00A1               	movwf	GetAtRowCSV@counti+1
 15246  10F2  0870               	movf	?_strlen,w
 15247  10F3  00A0               	movwf	GetAtRowCSV@counti
 15248  10F4                     l652:	
 15249  10F4  0827               	movf	GetAtRowCSV@i+1,w
 15250  10F5  3A80               	xorlw	128
 15251  10F6  00FA               	movwf	??_GetAtRowCSV
 15252  10F7  0821               	movf	GetAtRowCSV@counti+1,w
 15253  10F8  3A80               	xorlw	128
 15254  10F9  027A               	subwf	??_GetAtRowCSV,w
 15255  10FA  1D03               	skipz
 15256  10FB  28FE               	goto	u3395
 15257  10FC  0820               	movf	GetAtRowCSV@counti,w
 15258  10FD  0226               	subwf	GetAtRowCSV@i,w
 15259  10FE                     u3395:	
 15260  10FE  1803               	btfsc	3,0
 15261  10FF  2939               	goto	l3942
 15262                           
 15263                           ;main.c: 73:     {;main.c: 74:         if (col == column)
 15264  1100  0879               	movf	GetAtRowCSV@column+1,w
 15265  1101  0140               	movlb	0	; select bank0
 15266  1102  0623               	xorwf	GetAtRowCSV@col+1,w
 15267  1103  1D03               	skipz
 15268  1104  2907               	goto	u3365
 15269  1105  0878               	movf	GetAtRowCSV@column,w
 15270  1106  0622               	xorwf	GetAtRowCSV@col,w
 15271  1107                     u3365:	
 15272  1107  1D03               	skipz
 15273  1108  2926               	goto	l3938
 15274                           
 15275                           ;main.c: 75:         {;main.c: 76:             if (src[i] == ',')
 15276  1109  0826               	movf	GetAtRowCSV@i,w
 15277  110A  0776               	addwf	GetAtRowCSV@src,w
 15278  110B  0086               	movwf	6
 15279  110C  0827               	movf	GetAtRowCSV@i+1,w
 15280  110D  3D77               	addwfc	GetAtRowCSV@src+1,w
 15281  110E  0087               	movwf	7
 15282  110F  302C               	movlw	44
 15283  1110  0601               	xorwf	1,w
 15284  1111  1903               	btfsc	3,2
 15285  1112  2939               	goto	l3942
 15286                           
 15287                           ;main.c: 80:             csvField[index] = src[i];
 15288  1113  0826               	movf	GetAtRowCSV@i,w
 15289  1114  0776               	addwf	GetAtRowCSV@src,w
 15290  1115  0086               	movwf	6
 15291  1116  0827               	movf	GetAtRowCSV@i+1,w
 15292  1117  3D77               	addwfc	GetAtRowCSV@src+1,w
 15293  1118  0087               	movwf	7
 15294  1119  0801               	movf	1,w
 15295  111A  00FA               	movwf	??_GetAtRowCSV
 15296  111B  0824               	movf	GetAtRowCSV@index,w
 15297  111C  3ED3               	addlw	(low (_csvField| (0+256)))& (0+255)
 15298  111D  0086               	movwf	6
 15299  111E  3001               	movlw	1	; select bank3/4
 15300  111F  0087               	movwf	7
 15301  1120  087A               	movf	??_GetAtRowCSV,w
 15302  1121  0081               	movwf	1
 15303                           
 15304                           ;main.c: 81:             index++;
 15305  1122  3001               	movlw	1
 15306  1123  07A4               	addwf	GetAtRowCSV@index,f
 15307  1124  3000               	movlw	0
 15308  1125  3DA5               	addwfc	GetAtRowCSV@index+1,f
 15309  1126                     l3938:	
 15310                           
 15311                           ;main.c: 83:         if (src[i] == ',')
 15312  1126  0826               	movf	GetAtRowCSV@i,w
 15313  1127  0776               	addwf	GetAtRowCSV@src,w
 15314  1128  0086               	movwf	6
 15315  1129  0827               	movf	GetAtRowCSV@i+1,w
 15316  112A  3D77               	addwfc	GetAtRowCSV@src+1,w
 15317  112B  0087               	movwf	7
 15318  112C  302C               	movlw	44
 15319  112D  0601               	xorwf	1,w
 15320  112E  1D03               	btfss	3,2
 15321  112F  2934               	goto	l657
 15322                           
 15323                           ;main.c: 84:         {;main.c: 85:             col++;
 15324  1130  3001               	movlw	1
 15325  1131  07A2               	addwf	GetAtRowCSV@col,f
 15326  1132  3000               	movlw	0
 15327  1133  3DA3               	addwfc	GetAtRowCSV@col+1,f
 15328  1134                     l657:	
 15329                           ;main.c: 86:         }
 15330                           
 15331                           
 15332                           ;main.c: 87:     }
 15333  1134  3001               	movlw	1
 15334  1135  07A6               	addwf	GetAtRowCSV@i,f
 15335  1136  3000               	movlw	0
 15336  1137  3DA7               	addwfc	GetAtRowCSV@i+1,f
 15337  1138  28F4               	goto	l652
 15338  1139                     l3942:	
 15339                           
 15340                           ;main.c: 88:     return csvField;
 15341  1139  30D3               	movlw	(low (_csvField| (0+256)))& (0+255)
 15342  113A  0008               	return
 15343  113B                     __end_of_GetAtRowCSV:	
 15344                           
 15345                           	psect	text40
 15346  2757                     __ptext40:	
 15347 ;; *************** function _ClearStringn *****************
 15348 ;; Defined at:
 15349 ;;		line 56 in file "main.c"
 15350 ;; Parameters:    Size  Location     Type
 15351 ;;  str             1    wreg     PTR unsigned char 
 15352 ;;		 -> csvField(20), 
 15353 ;;  length          2    0[COMMON] int 
 15354 ;; Auto vars:     Size  Location     Type
 15355 ;;  str             1    3[COMMON] PTR unsigned char 
 15356 ;;		 -> csvField(20), 
 15357 ;;  i               2    4[COMMON] int 
 15358 ;; Return value:  Size  Location     Type
 15359 ;;                  1    wreg      void 
 15360 ;; Registers used:
 15361 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 15362 ;; Tracked objects:
 15363 ;;		On entry : 0/0
 15364 ;;		On exit  : 0/0
 15365 ;;		Unchanged: 0/0
 15366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15367 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15368 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15369 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15370 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15371 ;;Total ram usage:        6 bytes
 15372 ;; Hardware stack levels used:    1
 15373 ;; Hardware stack levels required when called:    3
 15374 ;; This function calls:
 15375 ;;		Nothing
 15376 ;; This function is called by:
 15377 ;;		_GetAtRowCSV
 15378 ;; This function uses a non-reentrant model
 15379 ;;
 15380                           
 15381                           
 15382                           ;psect for function _ClearStringn
 15383  2757                     _ClearStringn:	
 15384                           
 15385                           ;incstack = 0
 15386                           ; Regs used in _ClearStringn: [wreg+fsr1l+fsr1h+status,2+status,0]
 15387                           ;ClearStringn@str stored from wreg
 15388  2757  00F3               	movwf	ClearStringn@str
 15389                           
 15390                           ;main.c: 56: void ClearStringn(char* str, int length);main.c: 57: {;main.c: 58:     for 
      +                          (int i = 0; i < length; i++)
 15391  2758  01F4               	clrf	ClearStringn@i
 15392  2759  01F5               	clrf	ClearStringn@i+1
 15393  275A                     l3584:	
 15394  275A  0875               	movf	ClearStringn@i+1,w
 15395  275B  3A80               	xorlw	128
 15396  275C  00F2               	movwf	??_ClearStringn
 15397  275D  0871               	movf	ClearStringn@length+1,w
 15398  275E  3A80               	xorlw	128
 15399  275F  0272               	subwf	??_ClearStringn,w
 15400  2760  1D03               	skipz
 15401  2761  2F64               	goto	u2815
 15402  2762  0870               	movf	ClearStringn@length,w
 15403  2763  0274               	subwf	ClearStringn@i,w
 15404  2764                     u2815:	
 15405  2764  1803               	btfsc	3,0
 15406  2765  0008               	return
 15407                           
 15408                           ;main.c: 59:     {;main.c: 60:         str[i] = '\0';
 15409  2766  0874               	movf	ClearStringn@i,w
 15410  2767  0773               	addwf	ClearStringn@str,w
 15411  2768  00F2               	movwf	??_ClearStringn
 15412  2769  0872               	movf	??_ClearStringn,w
 15413  276A  0086               	movwf	6
 15414  276B  3001               	movlw	1	; select bank2/3
 15415  276C  0087               	movwf	7
 15416  276D  0181               	clrf	1
 15417                           
 15418                           ;main.c: 61:     }
 15419  276E  3001               	movlw	1
 15420  276F  07F4               	addwf	ClearStringn@i,f
 15421  2770  3000               	movlw	0
 15422  2771  3DF5               	addwfc	ClearStringn@i+1,f
 15423  2772  2F5A               	goto	l3584
 15424  2773                     __end_of_ClearStringn:	
 15425                           
 15426                           	psect	text41
 15427  1800                     __ptext41:	
 15428 ;; *************** function _EUSART1_is_rx_ready *****************
 15429 ;; Defined at:
 15430 ;;		line 99 in file "mcc_generated_files/eusart1.c"
 15431 ;; Parameters:    Size  Location     Type
 15432 ;;		None
 15433 ;; Auto vars:     Size  Location     Type
 15434 ;;		None
 15435 ;; Return value:  Size  Location     Type
 15436 ;;                  1    wreg      _Bool 
 15437 ;; Registers used:
 15438 ;;		wreg, status,2, status,0
 15439 ;; Tracked objects:
 15440 ;;		On entry : 0/0
 15441 ;;		On exit  : 0/0
 15442 ;;		Unchanged: 0/0
 15443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15447 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15448 ;;Total ram usage:        0 bytes
 15449 ;; Hardware stack levels used:    1
 15450 ;; Hardware stack levels required when called:    3
 15451 ;; This function calls:
 15452 ;;		Nothing
 15453 ;; This function is called by:
 15454 ;;		_GPS_HasAcknowledged
 15455 ;;		_PollGPS
 15456 ;; This function uses a non-reentrant model
 15457 ;;
 15458                           
 15459                           
 15460                           ;psect for function _EUSART1_is_rx_ready
 15461  1800                     _EUSART1_is_rx_ready:	
 15462                           
 15463                           ;mcc_generated_files/eusart1.c: 101:     return (_Bool)(PIR3bits.RC1IF);
 15464                           
 15465                           ;incstack = 0
 15466                           ; Regs used in _EUSART1_is_rx_ready: [wreg+status,2+status,0]
 15467  1800  014E               	movlb	14	; select bank14
 15468  1801  0E0F               	swapf	15,w	;volatile
 15469  1802  0C89               	rrf	9,f
 15470  1803  3901               	andlw	1
 15471  1804  0008               	return
 15472  1805                     __end_of_EUSART1_is_rx_ready:	
 15473                           
 15474                           	psect	text42
 15475  2604                     __ptext42:	
 15476 ;; *************** function _EUSART1_Read *****************
 15477 ;; Defined at:
 15478 ;;		line 113 in file "mcc_generated_files/eusart1.c"
 15479 ;; Parameters:    Size  Location     Type
 15480 ;;		None
 15481 ;; Auto vars:     Size  Location     Type
 15482 ;;		None
 15483 ;; Return value:  Size  Location     Type
 15484 ;;                  1    wreg      unsigned char 
 15485 ;; Registers used:
 15486 ;;		wreg, status,2
 15487 ;; Tracked objects:
 15488 ;;		On entry : 0/0
 15489 ;;		On exit  : 0/0
 15490 ;;		Unchanged: 0/0
 15491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15493 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15495 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15496 ;;Total ram usage:        0 bytes
 15497 ;; Hardware stack levels used:    1
 15498 ;; Hardware stack levels required when called:    3
 15499 ;; This function calls:
 15500 ;;		Nothing
 15501 ;; This function is called by:
 15502 ;;		_GPS_HasAcknowledged
 15503 ;;		_PollGPS
 15504 ;; This function uses a non-reentrant model
 15505 ;;
 15506                           
 15507                           
 15508                           ;psect for function _EUSART1_Read
 15509  2604                     _EUSART1_Read:	
 15510  2604                     l348:	
 15511                           ;mcc_generated_files/eusart1.c: 116:     {;mcc_generated_files/eusart1.c: 117:     }
 15512                           
 15513                           ;incstack = 0
 15514                           ; Regs used in _EUSART1_Read: [wreg+status,2]
 15515                           
 15516                           
 15517                           ;mcc_generated_files/eusart1.c: 115:     while(!PIR3bits.RC1IF)
 15518  2604  014E               	movlb	14	; select bank14
 15519  2605  1E8F               	btfss	15,5	;volatile
 15520  2606  2E04               	goto	l348
 15521                           
 15522                           ;mcc_generated_files/eusart1.c: 119:     eusart1RxLastError.status = 0;
 15523  2607  0141               	movlb	1	; select bank1
 15524  2608  01ED               	clrf	_eusart1RxLastError^(0+128)	;volatile
 15525                           
 15526                           ;mcc_generated_files/eusart1.c: 121:     if(1 == RC1STAbits.OERR)
 15527  2609  0142               	movlb	2	; select bank2
 15528  260A  1C9D               	btfss	29,1	;volatile
 15529  260B  2E0E               	goto	l3910
 15530                           
 15531                           ;mcc_generated_files/eusart1.c: 122:     {;mcc_generated_files/eusart1.c: 125:         R
      +                          C1STAbits.CREN = 0;
 15532  260C  121D               	bcf	29,4	;volatile
 15533                           
 15534                           ;mcc_generated_files/eusart1.c: 126:         RC1STAbits.CREN = 1;
 15535  260D  161D               	bsf	29,4	;volatile
 15536  260E                     l3910:	
 15537                           
 15538                           ;mcc_generated_files/eusart1.c: 129:     return RC1REG;
 15539  260E  0819               	movf	25,w	;volatile
 15540  260F  0008               	return
 15541  2610                     __end_of_EUSART1_Read:	
 15542                           
 15543                           	psect	text43
 15544  1805                     __ptext43:	
 15545 ;; *************** function _ClearNMEA *****************
 15546 ;; Defined at:
 15547 ;;		line 490 in file "main.c"
 15548 ;; Parameters:    Size  Location     Type
 15549 ;;		None
 15550 ;; Auto vars:     Size  Location     Type
 15551 ;;  i               2    2[COMMON] int 
 15552 ;; Return value:  Size  Location     Type
 15553 ;;                  1    wreg      void 
 15554 ;; Registers used:
 15555 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 15556 ;; Tracked objects:
 15557 ;;		On entry : 0/0
 15558 ;;		On exit  : 0/0
 15559 ;;		Unchanged: 0/0
 15560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15562 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15563 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15564 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15565 ;;Total ram usage:        4 bytes
 15566 ;; Hardware stack levels used:    1
 15567 ;; Hardware stack levels required when called:    3
 15568 ;; This function calls:
 15569 ;;		Nothing
 15570 ;; This function is called by:
 15571 ;;		_PollGPS
 15572 ;; This function uses a non-reentrant model
 15573 ;;
 15574                           
 15575                           
 15576                           ;psect for function _ClearNMEA
 15577  1805                     _ClearNMEA:	
 15578                           
 15579                           ;main.c: 492:     for (int i = 0; i < 140; i++)
 15580                           
 15581                           ;incstack = 0
 15582                           ; Regs used in _ClearNMEA: [wreg+fsr1l+fsr1h+status,2+status,0]
 15583  1805  01F2               	clrf	ClearNMEA@i
 15584  1806  01F3               	clrf	ClearNMEA@i+1
 15585  1807                     l4308:	
 15586                           
 15587                           ;main.c: 493:     {;main.c: 494:         nmea_data[i] = '\0';
 15588  1807  30D8               	movlw	216
 15589  1808  00F0               	movwf	??_ClearNMEA
 15590  1809  3026               	movlw	38
 15591  180A  00F1               	movwf	??_ClearNMEA+1
 15592  180B  0872               	movf	ClearNMEA@i,w
 15593  180C  0770               	addwf	??_ClearNMEA,w
 15594  180D  0086               	movwf	6
 15595  180E  0873               	movf	ClearNMEA@i+1,w
 15596  180F  3D71               	addwfc	??_ClearNMEA+1,w
 15597  1810  0087               	movwf	7
 15598  1811  0181               	clrf	1
 15599                           
 15600                           ;main.c: 495:     }
 15601  1812  3001               	movlw	1
 15602  1813  07F2               	addwf	ClearNMEA@i,f
 15603  1814  3000               	movlw	0
 15604  1815  3DF3               	addwfc	ClearNMEA@i+1,f
 15605  1816  0873               	movf	ClearNMEA@i+1,w
 15606  1817  3A80               	xorlw	128
 15607  1818  00F0               	movwf	??_ClearNMEA
 15608  1819  3080               	movlw	128
 15609  181A  0270               	subwf	??_ClearNMEA,w
 15610  181B  1D03               	skipz
 15611  181C  281F               	goto	u3915
 15612  181D  308C               	movlw	140
 15613  181E  0272               	subwf	ClearNMEA@i,w
 15614  181F                     u3915:	
 15615  181F  1803               	btfsc	3,0
 15616  1820  0008               	return
 15617  1821  2807               	goto	l4308
 15618  1822                     __end_of_ClearNMEA:	
 15619                           
 15620                           	psect	text44
 15621  11A0                     __ptext44:	
 15622 ;; *************** function _IntToString *****************
 15623 ;; Defined at:
 15624 ;;		line 180 in file "main.c"
 15625 ;; Parameters:    Size  Location     Type
 15626 ;;  n               2   11[COMMON] int 
 15627 ;;  dest            1   13[COMMON] PTR unsigned char 
 15628 ;;		 -> main@convertedNumber(16), 
 15629 ;; Auto vars:     Size  Location     Type
 15630 ;;  i               2   12[BANK0 ] int 
 15631 ;;  sign            1   11[BANK0 ] _Bool 
 15632 ;; Return value:  Size  Location     Type
 15633 ;;                  1    wreg      void 
 15634 ;; Registers used:
 15635 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15636 ;; Tracked objects:
 15637 ;;		On entry : 0/0
 15638 ;;		On exit  : 0/0
 15639 ;;		Unchanged: 0/0
 15640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15641 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15642 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15643 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15644 ;;      Totals:         3       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15645 ;;Total ram usage:        8 bytes
 15646 ;; Hardware stack levels used:    1
 15647 ;; Hardware stack levels required when called:    5
 15648 ;; This function calls:
 15649 ;;		_ReverseString
 15650 ;;		___awdiv
 15651 ;;		___awmod
 15652 ;; This function is called by:
 15653 ;;		_main
 15654 ;;		_FloatToString
 15655 ;; This function uses a non-reentrant model
 15656 ;;
 15657                           
 15658                           
 15659                           ;psect for function _IntToString
 15660  11A0                     _IntToString:	
 15661                           
 15662                           ;main.c: 180: void IntToString(int n, char* dest);main.c: 181: {;main.c: 182:     int i 
      +                          = 0;
 15663                           
 15664                           ;incstack = 0
 15665                           ; Regs used in _IntToString: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15666  11A0  0140               	movlb	0	; select bank0
 15667  11A1  01AC               	clrf	IntToString@i
 15668  11A2  01AD               	clrf	IntToString@i+1
 15669                           
 15670                           ;main.c: 183:     _Bool sign = n < 0;
 15671  11A3  1FFC               	btfss	IntToString@n+1,7
 15672  11A4  29A7               	goto	u4290
 15673  11A5  3001               	movlw	1
 15674  11A6  29A8               	goto	u4300
 15675  11A7                     u4290:	
 15676  11A7  3000               	movlw	0
 15677  11A8                     u4300:	
 15678  11A8  00A9               	movwf	??_IntToString
 15679  11A9  0829               	movf	??_IntToString,w
 15680  11AA  00AB               	movwf	IntToString@sign
 15681                           
 15682                           ;main.c: 184:     if (sign)
 15683  11AB  082B               	movf	IntToString@sign,w
 15684  11AC  1903               	btfsc	3,2
 15685  11AD  29B3               	goto	l4546
 15686                           
 15687                           ;main.c: 185:     {;main.c: 187:         n = -n;
 15688  11AE  09FB               	comf	IntToString@n,f
 15689  11AF  09FC               	comf	IntToString@n+1,f
 15690  11B0  0AFB               	incf	IntToString@n,f
 15691  11B1  1903               	skipnz
 15692  11B2  0AFC               	incf	IntToString@n+1,f
 15693  11B3                     l4546:	
 15694                           
 15695                           ;main.c: 193:         dest[i++] = n % 10 + '0';
 15696  11B3  300A               	movlw	10
 15697  11B4  00F0               	movwf	___awmod@divisor
 15698  11B5  3000               	movlw	0
 15699  11B6  00F1               	movwf	___awmod@divisor+1
 15700  11B7  087C               	movf	IntToString@n+1,w
 15701  11B8  00F3               	movwf	___awmod@dividend+1
 15702  11B9  087B               	movf	IntToString@n,w
 15703  11BA  00F2               	movwf	___awmod@dividend
 15704  11BB  319C  2461  3191   	fcall	___awmod
 15705  11BE  0870               	movf	?___awmod,w
 15706  11BF  3E30               	addlw	48
 15707  11C0  0140               	movlb	0	; select bank0
 15708  11C1  00A9               	movwf	??_IntToString
 15709  11C2  082C               	movf	IntToString@i,w
 15710  11C3  077D               	addwf	IntToString@dest,w
 15711  11C4  00AA               	movwf	??_IntToString+1
 15712  11C5  082A               	movf	??_IntToString+1,w
 15713  11C6  0086               	movwf	6
 15714  11C7  3001               	movlw	1	; select bank2/3
 15715  11C8  0087               	movwf	7
 15716  11C9  0829               	movf	??_IntToString,w
 15717  11CA  0081               	movwf	1
 15718  11CB  3001               	movlw	1
 15719  11CC  07AC               	addwf	IntToString@i,f
 15720  11CD  3000               	movlw	0
 15721  11CE  3DAD               	addwfc	IntToString@i+1,f
 15722                           
 15723                           ;main.c: 195:     } while ((n /= 10) > 0);
 15724  11CF  300A               	movlw	10
 15725  11D0  00F0               	movwf	___awdiv@divisor
 15726  11D1  3000               	movlw	0
 15727  11D2  00F1               	movwf	___awdiv@divisor+1
 15728  11D3  087C               	movf	IntToString@n+1,w
 15729  11D4  00F3               	movwf	___awdiv@dividend+1
 15730  11D5  087B               	movf	IntToString@n,w
 15731  11D6  00F2               	movwf	___awdiv@dividend
 15732  11D7  319E  2664  3191   	fcall	___awdiv
 15733  11DA  0871               	movf	?___awdiv+1,w
 15734  11DB  00FC               	movwf	IntToString@n+1
 15735  11DC  0870               	movf	?___awdiv,w
 15736  11DD  00FB               	movwf	IntToString@n
 15737  11DE  087C               	movf	IntToString@n+1,w
 15738  11DF  3A80               	xorlw	128
 15739  11E0  0140               	movlb	0	; select bank0
 15740  11E1  00A9               	movwf	??_IntToString
 15741  11E2  3080               	movlw	128
 15742  11E3  0229               	subwf	??_IntToString,w
 15743  11E4  1D03               	skipz
 15744  11E5  29E8               	goto	u4325
 15745  11E6  3001               	movlw	1
 15746  11E7  027B               	subwf	IntToString@n,w
 15747  11E8                     u4325:	
 15748  11E8  1803               	skipnc
 15749  11E9  29B3               	goto	l4546
 15750                           
 15751                           ;main.c: 196:     if (sign)
 15752  11EA  0140               	movlb	0	; select bank0
 15753  11EB  082B               	movf	IntToString@sign,w
 15754  11EC  1903               	btfsc	3,2
 15755  11ED  29FD               	goto	l4558
 15756                           
 15757                           ;main.c: 197:     {;main.c: 198:         dest[i++] = '-';
 15758  11EE  302D               	movlw	45
 15759  11EF  00A9               	movwf	??_IntToString
 15760  11F0  082C               	movf	IntToString@i,w
 15761  11F1  077D               	addwf	IntToString@dest,w
 15762  11F2  00AA               	movwf	??_IntToString+1
 15763  11F3  082A               	movf	??_IntToString+1,w
 15764  11F4  0086               	movwf	6
 15765  11F5  3001               	movlw	1	; select bank2/3
 15766  11F6  0087               	movwf	7
 15767  11F7  0829               	movf	??_IntToString,w
 15768  11F8  0081               	movwf	1
 15769  11F9  3001               	movlw	1
 15770  11FA  07AC               	addwf	IntToString@i,f
 15771  11FB  3000               	movlw	0
 15772  11FC  3DAD               	addwfc	IntToString@i+1,f
 15773  11FD                     l4558:	
 15774                           
 15775                           ;main.c: 200:     dest[i] = '\0';
 15776  11FD  082C               	movf	IntToString@i,w
 15777  11FE  077D               	addwf	IntToString@dest,w
 15778  11FF  00A9               	movwf	??_IntToString
 15779  1200  0829               	movf	??_IntToString,w
 15780  1201  0086               	movwf	6
 15781  1202  3001               	movlw	1	; select bank2/3
 15782  1203  0087               	movwf	7
 15783  1204  0181               	clrf	1
 15784                           
 15785                           ;main.c: 202:     ReverseString(dest);
 15786  1205  087D               	movf	IntToString@dest,w
 15787  1206  3191  213B         	fcall	_ReverseString
 15788  1208  0008               	return
 15789  1209                     __end_of_IntToString:	
 15790                           
 15791                           	psect	text45
 15792  1C61                     __ptext45:	
 15793 ;; *************** function ___awmod *****************
 15794 ;; Defined at:
 15795 ;;		line 5 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\awmod.c"
 15796 ;; Parameters:    Size  Location     Type
 15797 ;;  divisor         2    0[COMMON] int 
 15798 ;;  dividend        2    2[COMMON] int 
 15799 ;; Auto vars:     Size  Location     Type
 15800 ;;  sign            1    6[COMMON] unsigned char 
 15801 ;;  counter         1    5[COMMON] unsigned char 
 15802 ;; Return value:  Size  Location     Type
 15803 ;;                  2    0[COMMON] int 
 15804 ;; Registers used:
 15805 ;;		wreg, status,2, status,0
 15806 ;; Tracked objects:
 15807 ;;		On entry : 0/0
 15808 ;;		On exit  : 0/0
 15809 ;;		Unchanged: 0/0
 15810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15811 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15812 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15813 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15814 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15815 ;;Total ram usage:        7 bytes
 15816 ;; Hardware stack levels used:    1
 15817 ;; Hardware stack levels required when called:    3
 15818 ;; This function calls:
 15819 ;;		Nothing
 15820 ;; This function is called by:
 15821 ;;		_IntToString
 15822 ;; This function uses a non-reentrant model
 15823 ;;
 15824                           
 15825                           
 15826                           ;psect for function ___awmod
 15827  1C61                     ___awmod:	
 15828                           
 15829                           ;incstack = 0
 15830                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 15831  1C61  01F6               	clrf	___awmod@sign
 15832  1C62  1FF3               	btfss	___awmod@dividend+1,7
 15833  1C63  2C6B               	goto	l4380
 15834  1C64  09F2               	comf	___awmod@dividend,f
 15835  1C65  09F3               	comf	___awmod@dividend+1,f
 15836  1C66  0AF2               	incf	___awmod@dividend,f
 15837  1C67  1903               	skipnz
 15838  1C68  0AF3               	incf	___awmod@dividend+1,f
 15839  1C69  01F6               	clrf	___awmod@sign
 15840  1C6A  0AF6               	incf	___awmod@sign,f
 15841  1C6B                     l4380:	
 15842  1C6B  1FF1               	btfss	___awmod@divisor+1,7
 15843  1C6C  2C72               	goto	l4384
 15844  1C6D  09F0               	comf	___awmod@divisor,f
 15845  1C6E  09F1               	comf	___awmod@divisor+1,f
 15846  1C6F  0AF0               	incf	___awmod@divisor,f
 15847  1C70  1903               	skipnz
 15848  1C71  0AF1               	incf	___awmod@divisor+1,f
 15849  1C72                     l4384:	
 15850  1C72  0870               	movf	___awmod@divisor,w
 15851  1C73  0471               	iorwf	___awmod@divisor+1,w
 15852  1C74  1903               	btfsc	3,2
 15853  1C75  2C99               	goto	l4402
 15854  1C76  01F5               	clrf	___awmod@counter
 15855  1C77  0AF5               	incf	___awmod@counter,f
 15856  1C78                     l4392:	
 15857  1C78  1BF1               	btfsc	___awmod@divisor+1,7
 15858  1C79  2C84               	goto	l4394
 15859  1C7A  3001               	movlw	1
 15860  1C7B                     u4045:	
 15861  1C7B  35F0               	lslf	___awmod@divisor,f
 15862  1C7C  0DF1               	rlf	___awmod@divisor+1,f
 15863  1C7D  0B89               	decfsz	9,f
 15864  1C7E  2C7B               	goto	u4045
 15865  1C7F  3001               	movlw	1
 15866  1C80  00F4               	movwf	??___awmod
 15867  1C81  0874               	movf	??___awmod,w
 15868  1C82  07F5               	addwf	___awmod@counter,f
 15869  1C83  2C78               	goto	l4392
 15870  1C84                     l4394:	
 15871  1C84  0871               	movf	___awmod@divisor+1,w
 15872  1C85  0273               	subwf	___awmod@dividend+1,w
 15873  1C86  1D03               	skipz
 15874  1C87  2C8A               	goto	u4065
 15875  1C88  0870               	movf	___awmod@divisor,w
 15876  1C89  0272               	subwf	___awmod@dividend,w
 15877  1C8A                     u4065:	
 15878  1C8A  1C03               	skipc
 15879  1C8B  2C90               	goto	l4398
 15880  1C8C  0870               	movf	___awmod@divisor,w
 15881  1C8D  02F2               	subwf	___awmod@dividend,f
 15882  1C8E  0871               	movf	___awmod@divisor+1,w
 15883  1C8F  3BF3               	subwfb	___awmod@dividend+1,f
 15884  1C90                     l4398:	
 15885  1C90  3001               	movlw	1
 15886  1C91                     u4075:	
 15887  1C91  36F1               	lsrf	___awmod@divisor+1,f
 15888  1C92  0CF0               	rrf	___awmod@divisor,f
 15889  1C93  0B89               	decfsz	9,f
 15890  1C94  2C91               	goto	u4075
 15891  1C95  3001               	movlw	1
 15892  1C96  02F5               	subwf	___awmod@counter,f
 15893  1C97  1D03               	btfss	3,2
 15894  1C98  2C84               	goto	l4394
 15895  1C99                     l4402:	
 15896  1C99  0876               	movf	___awmod@sign,w
 15897  1C9A  1903               	btfsc	3,2
 15898  1C9B  2CA1               	goto	l4406
 15899  1C9C  09F2               	comf	___awmod@dividend,f
 15900  1C9D  09F3               	comf	___awmod@dividend+1,f
 15901  1C9E  0AF2               	incf	___awmod@dividend,f
 15902  1C9F  1903               	skipnz
 15903  1CA0  0AF3               	incf	___awmod@dividend+1,f
 15904  1CA1                     l4406:	
 15905  1CA1  0873               	movf	___awmod@dividend+1,w
 15906  1CA2  00F1               	movwf	?___awmod+1
 15907  1CA3  0872               	movf	___awmod@dividend,w
 15908  1CA4  00F0               	movwf	?___awmod
 15909  1CA5  0008               	return
 15910  1CA6                     __end_of___awmod:	
 15911                           
 15912                           	psect	text46
 15913  113B                     __ptext46:	
 15914 ;; *************** function _ReverseString *****************
 15915 ;; Defined at:
 15916 ;;		line 125 in file "main.c"
 15917 ;; Parameters:    Size  Location     Type
 15918 ;;  str             1    wreg     PTR unsigned char 
 15919 ;;		 -> checksum(6), main@convertedNumber(16), 
 15920 ;; Auto vars:     Size  Location     Type
 15921 ;;  str             1    8[BANK0 ] PTR unsigned char 
 15922 ;;		 -> checksum(6), main@convertedNumber(16), 
 15923 ;;  opposite        1    3[BANK0 ] PTR unsigned char 
 15924 ;;		 -> checksum(6), main@convertedNumber(16), 
 15925 ;;  temp            1    2[BANK0 ] unsigned char 
 15926 ;;  i               2    6[BANK0 ] int 
 15927 ;;  halfway         2    0[BANK0 ] int 
 15928 ;;  counti          2    4[BANK0 ] int 
 15929 ;; Return value:  Size  Location     Type
 15930 ;;                  1    wreg      void 
 15931 ;; Registers used:
 15932 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15933 ;; Tracked objects:
 15934 ;;		On entry : 0/0
 15935 ;;		On exit  : 0/0
 15936 ;;		Unchanged: 0/0
 15937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15939 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15940 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15941 ;;      Totals:         2       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15942 ;;Total ram usage:       11 bytes
 15943 ;; Hardware stack levels used:    1
 15944 ;; Hardware stack levels required when called:    4
 15945 ;; This function calls:
 15946 ;;		___awdiv
 15947 ;;		_strlen
 15948 ;; This function is called by:
 15949 ;;		_UIntToHexString
 15950 ;;		_IntToString
 15951 ;;		_UIntToString
 15952 ;;		_IntToHexString
 15953 ;; This function uses a non-reentrant model
 15954 ;;
 15955                           
 15956                           
 15957                           ;psect for function _ReverseString
 15958  113B                     _ReverseString:	
 15959                           
 15960                           ;incstack = 0
 15961                           ; Regs used in _ReverseString: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15962                           ;ReverseString@str stored from wreg
 15963  113B  0140               	movlb	0	; select bank0
 15964  113C  00A8               	movwf	ReverseString@str
 15965                           
 15966                           ;main.c: 125: void ReverseString(char* str);main.c: 126: {;main.c: 127:     int counti =
      +                           strlen(str);
 15967  113D  0828               	movf	ReverseString@str,w
 15968  113E  00F0               	movwf	strlen@s
 15969  113F  3001               	movlw	1
 15970  1140  00F1               	movwf	strlen@s+1
 15971  1141  31A6  26A0  3191   	fcall	_strlen
 15972  1144  0871               	movf	?_strlen+1,w
 15973  1145  0140               	movlb	0	; select bank0
 15974  1146  00A5               	movwf	ReverseString@counti+1
 15975  1147  0870               	movf	?_strlen,w
 15976  1148  00A4               	movwf	ReverseString@counti
 15977                           
 15978                           ;main.c: 128:     for (int i = 0, halfway = counti / 2; i < halfway; i++)
 15979  1149  01A6               	clrf	ReverseString@i
 15980  114A  01A7               	clrf	ReverseString@i+1
 15981  114B  3002               	movlw	2
 15982  114C  00F0               	movwf	___awdiv@divisor
 15983  114D  3000               	movlw	0
 15984  114E  00F1               	movwf	___awdiv@divisor+1
 15985  114F  0825               	movf	ReverseString@counti+1,w
 15986  1150  00F3               	movwf	___awdiv@dividend+1
 15987  1151  0824               	movf	ReverseString@counti,w
 15988  1152  00F2               	movwf	___awdiv@dividend
 15989  1153  319E  2664  3191   	fcall	___awdiv
 15990  1156  0871               	movf	?___awdiv+1,w
 15991  1157  0140               	movlb	0	; select bank0
 15992  1158  00A1               	movwf	ReverseString@halfway+1
 15993  1159  0870               	movf	?___awdiv,w
 15994  115A  00A0               	movwf	ReverseString@halfway
 15995  115B                     l4222:	
 15996  115B  0827               	movf	ReverseString@i+1,w
 15997  115C  3A80               	xorlw	128
 15998  115D  00F9               	movwf	??_ReverseString
 15999  115E  0821               	movf	ReverseString@halfway+1,w
 16000  115F  3A80               	xorlw	128
 16001  1160  0279               	subwf	??_ReverseString,w
 16002  1161  1D03               	skipz
 16003  1162  2965               	goto	u3835
 16004  1163  0820               	movf	ReverseString@halfway,w
 16005  1164  0226               	subwf	ReverseString@i,w
 16006  1165                     u3835:	
 16007  1165  1803               	btfsc	3,0
 16008  1166  2996               	goto	l4224
 16009                           
 16010                           ;main.c: 129:     {;main.c: 130:         char temp = str[i];
 16011  1167  0140               	movlb	0	; select bank0
 16012  1168  0826               	movf	ReverseString@i,w
 16013  1169  0728               	addwf	ReverseString@str,w
 16014  116A  00F9               	movwf	??_ReverseString
 16015  116B  0879               	movf	??_ReverseString,w
 16016  116C  0086               	movwf	6
 16017  116D  3001               	movlw	1	; select bank2/3
 16018  116E  0087               	movwf	7
 16019  116F  0801               	movf	1,w
 16020  1170  00FA               	movwf	??_ReverseString+1
 16021  1171  087A               	movf	??_ReverseString+1,w
 16022  1172  00A2               	movwf	ReverseString@temp
 16023                           
 16024                           ;main.c: 131:         char* opposite = str + (counti - 1 - i);
 16025  1173  0826               	movf	ReverseString@i,w
 16026  1174  0228               	subwf	ReverseString@str,w
 16027  1175  0724               	addwf	ReverseString@counti,w
 16028  1176  3EFF               	addlw	-1
 16029  1177  00F9               	movwf	??_ReverseString
 16030  1178  0879               	movf	??_ReverseString,w
 16031  1179  00A3               	movwf	ReverseString@opposite
 16032                           
 16033                           ;main.c: 132:         str[i] = *opposite;
 16034  117A  0823               	movf	ReverseString@opposite,w
 16035  117B  0086               	movwf	6
 16036  117C  3001               	movlw	1	; select bank2/3
 16037  117D  0087               	movwf	7
 16038  117E  0801               	movf	1,w
 16039  117F  00F9               	movwf	??_ReverseString
 16040  1180  0826               	movf	ReverseString@i,w
 16041  1181  0728               	addwf	ReverseString@str,w
 16042  1182  00FA               	movwf	??_ReverseString+1
 16043  1183  087A               	movf	??_ReverseString+1,w
 16044  1184  0086               	movwf	6
 16045  1185  3001               	movlw	1	; select bank2/3
 16046  1186  0087               	movwf	7
 16047  1187  0879               	movf	??_ReverseString,w
 16048  1188  0081               	movwf	1
 16049                           
 16050                           ;main.c: 133:         *opposite = temp;
 16051  1189  0822               	movf	ReverseString@temp,w
 16052  118A  00F9               	movwf	??_ReverseString
 16053  118B  0823               	movf	ReverseString@opposite,w
 16054  118C  0086               	movwf	6
 16055  118D  3001               	movlw	1	; select bank2/3
 16056  118E  0087               	movwf	7
 16057  118F  0879               	movf	??_ReverseString,w
 16058  1190  0081               	movwf	1
 16059                           
 16060                           ;main.c: 134:     }
 16061  1191  3001               	movlw	1
 16062  1192  07A6               	addwf	ReverseString@i,f
 16063  1193  3000               	movlw	0
 16064  1194  3DA7               	addwfc	ReverseString@i+1,f
 16065  1195  295B               	goto	l4222
 16066  1196                     l4224:	
 16067                           
 16068                           ;main.c: 135:     str[counti] = '\0';
 16069  1196  0140               	movlb	0	; select bank0
 16070  1197  0824               	movf	ReverseString@counti,w
 16071  1198  0728               	addwf	ReverseString@str,w
 16072  1199  00F9               	movwf	??_ReverseString
 16073  119A  0879               	movf	??_ReverseString,w
 16074  119B  0086               	movwf	6
 16075  119C  3001               	movlw	1	; select bank2/3
 16076  119D  0087               	movwf	7
 16077  119E  0181               	clrf	1
 16078  119F  0008               	return
 16079  11A0                     __end_of_ReverseString:	
 16080                           
 16081                           	psect	text47
 16082  1E64                     __ptext47:	
 16083 ;; *************** function ___awdiv *****************
 16084 ;; Defined at:
 16085 ;;		line 5 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\awdiv.c"
 16086 ;; Parameters:    Size  Location     Type
 16087 ;;  divisor         2    0[COMMON] int 
 16088 ;;  dividend        2    2[COMMON] int 
 16089 ;; Auto vars:     Size  Location     Type
 16090 ;;  quotient        2    7[COMMON] int 
 16091 ;;  sign            1    6[COMMON] unsigned char 
 16092 ;;  counter         1    5[COMMON] unsigned char 
 16093 ;; Return value:  Size  Location     Type
 16094 ;;                  2    0[COMMON] int 
 16095 ;; Registers used:
 16096 ;;		wreg, status,2, status,0
 16097 ;; Tracked objects:
 16098 ;;		On entry : 0/0
 16099 ;;		On exit  : 0/0
 16100 ;;		Unchanged: 0/0
 16101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16102 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16103 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16104 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16105 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16106 ;;Total ram usage:        9 bytes
 16107 ;; Hardware stack levels used:    1
 16108 ;; Hardware stack levels required when called:    3
 16109 ;; This function calls:
 16110 ;;		Nothing
 16111 ;; This function is called by:
 16112 ;;		_ReverseString
 16113 ;;		_IntToString
 16114 ;;		_IntToHexString
 16115 ;; This function uses a non-reentrant model
 16116 ;;
 16117                           
 16118                           
 16119                           ;psect for function ___awdiv
 16120  1E64                     ___awdiv:	
 16121                           
 16122                           ;incstack = 0
 16123                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 16124  1E64  01F6               	clrf	___awdiv@sign
 16125  1E65  1FF1               	btfss	___awdiv@divisor+1,7
 16126  1E66  2E6E               	goto	l3982
 16127  1E67  09F0               	comf	___awdiv@divisor,f
 16128  1E68  09F1               	comf	___awdiv@divisor+1,f
 16129  1E69  0AF0               	incf	___awdiv@divisor,f
 16130  1E6A  1903               	skipnz
 16131  1E6B  0AF1               	incf	___awdiv@divisor+1,f
 16132  1E6C  01F6               	clrf	___awdiv@sign
 16133  1E6D  0AF6               	incf	___awdiv@sign,f
 16134  1E6E                     l3982:	
 16135  1E6E  1FF3               	btfss	___awdiv@dividend+1,7
 16136  1E6F  2E79               	goto	l3988
 16137  1E70  09F2               	comf	___awdiv@dividend,f
 16138  1E71  09F3               	comf	___awdiv@dividend+1,f
 16139  1E72  0AF2               	incf	___awdiv@dividend,f
 16140  1E73  1903               	skipnz
 16141  1E74  0AF3               	incf	___awdiv@dividend+1,f
 16142  1E75  3001               	movlw	1
 16143  1E76  00F4               	movwf	??___awdiv
 16144  1E77  0874               	movf	??___awdiv,w
 16145  1E78  06F6               	xorwf	___awdiv@sign,f
 16146  1E79                     l3988:	
 16147  1E79  01F7               	clrf	___awdiv@quotient
 16148  1E7A  01F8               	clrf	___awdiv@quotient+1
 16149  1E7B  0870               	movf	___awdiv@divisor,w
 16150  1E7C  0471               	iorwf	___awdiv@divisor+1,w
 16151  1E7D  1903               	btfsc	3,2
 16152  1E7E  2EA8               	goto	l4010
 16153  1E7F  01F5               	clrf	___awdiv@counter
 16154  1E80  0AF5               	incf	___awdiv@counter,f
 16155  1E81                     l3998:	
 16156  1E81  1BF1               	btfsc	___awdiv@divisor+1,7
 16157  1E82  2E8D               	goto	l4000
 16158  1E83  3001               	movlw	1
 16159  1E84                     u3465:	
 16160  1E84  35F0               	lslf	___awdiv@divisor,f
 16161  1E85  0DF1               	rlf	___awdiv@divisor+1,f
 16162  1E86  0B89               	decfsz	9,f
 16163  1E87  2E84               	goto	u3465
 16164  1E88  3001               	movlw	1
 16165  1E89  00F4               	movwf	??___awdiv
 16166  1E8A  0874               	movf	??___awdiv,w
 16167  1E8B  07F5               	addwf	___awdiv@counter,f
 16168  1E8C  2E81               	goto	l3998
 16169  1E8D                     l4000:	
 16170  1E8D  3001               	movlw	1
 16171  1E8E                     u3485:	
 16172  1E8E  35F7               	lslf	___awdiv@quotient,f
 16173  1E8F  0DF8               	rlf	___awdiv@quotient+1,f
 16174  1E90  0B89               	decfsz	9,f
 16175  1E91  2E8E               	goto	u3485
 16176  1E92  0871               	movf	___awdiv@divisor+1,w
 16177  1E93  0273               	subwf	___awdiv@dividend+1,w
 16178  1E94  1D03               	skipz
 16179  1E95  2E98               	goto	u3495
 16180  1E96  0870               	movf	___awdiv@divisor,w
 16181  1E97  0272               	subwf	___awdiv@dividend,w
 16182  1E98                     u3495:	
 16183  1E98  1C03               	skipc
 16184  1E99  2E9F               	goto	l4006
 16185  1E9A  0870               	movf	___awdiv@divisor,w
 16186  1E9B  02F2               	subwf	___awdiv@dividend,f
 16187  1E9C  0871               	movf	___awdiv@divisor+1,w
 16188  1E9D  3BF3               	subwfb	___awdiv@dividend+1,f
 16189  1E9E  1477               	bsf	___awdiv@quotient,0
 16190  1E9F                     l4006:	
 16191  1E9F  3001               	movlw	1
 16192  1EA0                     u3505:	
 16193  1EA0  36F1               	lsrf	___awdiv@divisor+1,f
 16194  1EA1  0CF0               	rrf	___awdiv@divisor,f
 16195  1EA2  0B89               	decfsz	9,f
 16196  1EA3  2EA0               	goto	u3505
 16197  1EA4  3001               	movlw	1
 16198  1EA5  02F5               	subwf	___awdiv@counter,f
 16199  1EA6  1D03               	btfss	3,2
 16200  1EA7  2E8D               	goto	l4000
 16201  1EA8                     l4010:	
 16202  1EA8  0876               	movf	___awdiv@sign,w
 16203  1EA9  1903               	btfsc	3,2
 16204  1EAA  2EB0               	goto	l4014
 16205  1EAB  09F7               	comf	___awdiv@quotient,f
 16206  1EAC  09F8               	comf	___awdiv@quotient+1,f
 16207  1EAD  0AF7               	incf	___awdiv@quotient,f
 16208  1EAE  1903               	skipnz
 16209  1EAF  0AF8               	incf	___awdiv@quotient+1,f
 16210  1EB0                     l4014:	
 16211  1EB0  0878               	movf	___awdiv@quotient+1,w
 16212  1EB1  00F1               	movwf	?___awdiv+1
 16213  1EB2  0877               	movf	___awdiv@quotient,w
 16214  1EB3  00F0               	movwf	?___awdiv
 16215  1EB4  0008               	return
 16216  1EB5                     __end_of___awdiv:	
 16217                           
 16218                           	psect	text48
 16219  25CC                     __ptext48:	
 16220 ;; *************** function _InitTiming *****************
 16221 ;; Defined at:
 16222 ;;		line 11 in file "timing.c"
 16223 ;; Parameters:    Size  Location     Type
 16224 ;;		None
 16225 ;; Auto vars:     Size  Location     Type
 16226 ;;		None
 16227 ;; Return value:  Size  Location     Type
 16228 ;;                  1    wreg      void 
 16229 ;; Registers used:
 16230 ;;		wreg, status,2, status,0, pclath, cstack
 16231 ;; Tracked objects:
 16232 ;;		On entry : 0/0
 16233 ;;		On exit  : 0/0
 16234 ;;		Unchanged: 0/0
 16235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16239 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16240 ;;Total ram usage:        0 bytes
 16241 ;; Hardware stack levels used:    1
 16242 ;; Hardware stack levels required when called:    4
 16243 ;; This function calls:
 16244 ;;		_TMR0_SetInterruptHandler
 16245 ;; This function is called by:
 16246 ;;		_main
 16247 ;; This function uses a non-reentrant model
 16248 ;;
 16249                           
 16250                           
 16251                           ;psect for function _InitTiming
 16252  25CC                     _InitTiming:	
 16253                           
 16254                           ;timing.c: 13:     (INTCONbits.GIE = 1);
 16255                           
 16256                           ;incstack = 0
 16257                           ; Regs used in _InitTiming: [wreg+status,2+status,0+pclath+cstack]
 16258  25CC  178B               	bsf	11,7	;volatile
 16259                           
 16260                           ;timing.c: 14:     TMR0_SetInterruptHandler(TimerISR);
 16261  25CD  30E5               	movlw	low _TimerISR
 16262  25CE  00F0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 16263  25CF  3025               	movlw	high _TimerISR
 16264  25D0  00F1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 16265  25D1  31A5  25B4         	fcall	_TMR0_SetInterruptHandler
 16266  25D3  0008               	return
 16267  25D4                     __end_of_InitTiming:	
 16268                           
 16269                           	psect	text49
 16270  25B4                     __ptext49:	
 16271 ;; *************** function _TMR0_SetInterruptHandler *****************
 16272 ;; Defined at:
 16273 ;;		line 134 in file "mcc_generated_files/tmr0.c"
 16274 ;; Parameters:    Size  Location     Type
 16275 ;;  InterruptHan    2    0[COMMON] PTR FTN()void 
 16276 ;;		 -> TimerISR(1), TMR0_DefaultInterruptHandler(1), 
 16277 ;; Auto vars:     Size  Location     Type
 16278 ;;		None
 16279 ;; Return value:  Size  Location     Type
 16280 ;;                  1    wreg      void 
 16281 ;; Registers used:
 16282 ;;		wreg
 16283 ;; Tracked objects:
 16284 ;;		On entry : 0/0
 16285 ;;		On exit  : 0/0
 16286 ;;		Unchanged: 0/0
 16287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16288 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16291 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16292 ;;Total ram usage:        2 bytes
 16293 ;; Hardware stack levels used:    1
 16294 ;; Hardware stack levels required when called:    3
 16295 ;; This function calls:
 16296 ;;		Nothing
 16297 ;; This function is called by:
 16298 ;;		_TMR0_Initialize
 16299 ;;		_InitTiming
 16300 ;; This function uses a non-reentrant model
 16301 ;;
 16302                           
 16303                           
 16304                           ;psect for function _TMR0_SetInterruptHandler
 16305  25B4                     _TMR0_SetInterruptHandler:	
 16306                           
 16307                           ;mcc_generated_files/tmr0.c: 135:     TMR0_InterruptHandler = InterruptHandler;
 16308                           
 16309                           ;incstack = 0
 16310                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
 16311  25B4  0871               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
 16312  25B5  0141               	movlb	1	; select bank1
 16313  25B6  00EF               	movwf	(_TMR0_InterruptHandler+1)^(0+128)
 16314  25B7  0870               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
 16315  25B8  00EE               	movwf	_TMR0_InterruptHandler^(0+128)
 16316  25B9  0008               	return
 16317  25BA                     __end_of_TMR0_SetInterruptHandler:	
 16318                           
 16319                           	psect	text50
 16320  2773                     __ptext50:	
 16321 ;; *************** function _ClearTxData *****************
 16322 ;; Defined at:
 16323 ;;		line 300 in file "main.c"
 16324 ;; Parameters:    Size  Location     Type
 16325 ;;		None
 16326 ;; Auto vars:     Size  Location     Type
 16327 ;;  i               2    2[COMMON] int 
 16328 ;; Return value:  Size  Location     Type
 16329 ;;                  1    wreg      void 
 16330 ;; Registers used:
 16331 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 16332 ;; Tracked objects:
 16333 ;;		On entry : 0/0
 16334 ;;		On exit  : 0/0
 16335 ;;		Unchanged: 0/0
 16336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16338 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16339 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16340 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16341 ;;Total ram usage:        4 bytes
 16342 ;; Hardware stack levels used:    1
 16343 ;; Hardware stack levels required when called:    3
 16344 ;; This function calls:
 16345 ;;		Nothing
 16346 ;; This function is called by:
 16347 ;;		_main
 16348 ;; This function uses a non-reentrant model
 16349 ;;
 16350                           
 16351                           
 16352                           ;psect for function _ClearTxData
 16353  2773                     _ClearTxData:	
 16354                           
 16355                           ;main.c: 302:     for (int i = 0; i < 140; i++)
 16356                           
 16357                           ;incstack = 0
 16358                           ; Regs used in _ClearTxData: [wreg+fsr1l+fsr1h+status,2+status,0]
 16359  2773  01F2               	clrf	ClearTxData@i
 16360  2774  01F3               	clrf	ClearTxData@i+1
 16361  2775                     l4580:	
 16362                           
 16363                           ;main.c: 303:     {;main.c: 304:         txdata[i] = '\0';
 16364  2775  3064               	movlw	100
 16365  2776  00F0               	movwf	??_ClearTxData
 16366  2777  3027               	movlw	39
 16367  2778  00F1               	movwf	??_ClearTxData+1
 16368  2779  0872               	movf	ClearTxData@i,w
 16369  277A  0770               	addwf	??_ClearTxData,w
 16370  277B  0086               	movwf	6
 16371  277C  0873               	movf	ClearTxData@i+1,w
 16372  277D  3D71               	addwfc	??_ClearTxData+1,w
 16373  277E  0087               	movwf	7
 16374  277F  0181               	clrf	1
 16375                           
 16376                           ;main.c: 305:     }
 16377  2780  3001               	movlw	1
 16378  2781  07F2               	addwf	ClearTxData@i,f
 16379  2782  3000               	movlw	0
 16380  2783  3DF3               	addwfc	ClearTxData@i+1,f
 16381  2784  0873               	movf	ClearTxData@i+1,w
 16382  2785  3A80               	xorlw	128
 16383  2786  00F0               	movwf	??_ClearTxData
 16384  2787  3080               	movlw	128
 16385  2788  0270               	subwf	??_ClearTxData,w
 16386  2789  1D03               	skipz
 16387  278A  2F8D               	goto	u4355
 16388  278B  308C               	movlw	140
 16389  278C  0272               	subwf	ClearTxData@i,w
 16390  278D                     u4355:	
 16391  278D  1803               	btfsc	3,0
 16392  278E  0008               	return
 16393  278F  2F75               	goto	l4580
 16394  2790                     __end_of_ClearTxData:	
 16395                           
 16396                           	psect	text51
 16397  1822                     __ptext51:	
 16398 ;; *************** function _ClearString *****************
 16399 ;; Defined at:
 16400 ;;		line 26 in file "main.c"
 16401 ;; Parameters:    Size  Location     Type
 16402 ;;  str             1    wreg     PTR unsigned char 
 16403 ;;		 -> main@convertedNumber(16), 
 16404 ;; Auto vars:     Size  Location     Type
 16405 ;;  str             1   10[COMMON] PTR unsigned char 
 16406 ;;		 -> main@convertedNumber(16), 
 16407 ;;  i               2    8[COMMON] int 
 16408 ;;  counti          2    6[COMMON] int 
 16409 ;; Return value:  Size  Location     Type
 16410 ;;                  1    wreg      void 
 16411 ;; Registers used:
 16412 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16413 ;; Tracked objects:
 16414 ;;		On entry : 0/0
 16415 ;;		On exit  : 0/0
 16416 ;;		Unchanged: 0/0
 16417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16419 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16420 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16421 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16422 ;;Total ram usage:        6 bytes
 16423 ;; Hardware stack levels used:    1
 16424 ;; Hardware stack levels required when called:    4
 16425 ;; This function calls:
 16426 ;;		_strlen
 16427 ;; This function is called by:
 16428 ;;		_main
 16429 ;; This function uses a non-reentrant model
 16430 ;;
 16431                           
 16432                           
 16433                           ;psect for function _ClearString
 16434  1822                     _ClearString:	
 16435                           
 16436                           ;incstack = 0
 16437                           ; Regs used in _ClearString: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16438                           ;ClearString@str stored from wreg
 16439  1822  00FA               	movwf	ClearString@str
 16440                           
 16441                           ;main.c: 26: void ClearString(char* str);main.c: 27: {;main.c: 28:     for (int i = 0, c
      +                          ounti = strlen(str); i < counti; i++)
 16442  1823  01F8               	clrf	ClearString@i
 16443  1824  01F9               	clrf	ClearString@i+1
 16444  1825  087A               	movf	ClearString@str,w
 16445  1826  00F0               	movwf	strlen@s
 16446  1827  3001               	movlw	1
 16447  1828  00F1               	movwf	strlen@s+1
 16448  1829  31A6  26A0  3198   	fcall	_strlen
 16449  182C  0871               	movf	?_strlen+1,w
 16450  182D  00F7               	movwf	ClearString@counti+1
 16451  182E  0870               	movf	?_strlen,w
 16452  182F  00F6               	movwf	ClearString@counti
 16453  1830                     l4514:	
 16454  1830  0879               	movf	ClearString@i+1,w
 16455  1831  3A80               	xorlw	128
 16456  1832  00F5               	movwf	??_ClearString
 16457  1833  0877               	movf	ClearString@counti+1,w
 16458  1834  3A80               	xorlw	128
 16459  1835  0275               	subwf	??_ClearString,w
 16460  1836  1D03               	skipz
 16461  1837  283A               	goto	u4245
 16462  1838  0876               	movf	ClearString@counti,w
 16463  1839  0278               	subwf	ClearString@i,w
 16464  183A                     u4245:	
 16465  183A  1803               	btfsc	3,0
 16466  183B  0008               	return
 16467                           
 16468                           ;main.c: 29:     {;main.c: 30:         str[i] = '\0';
 16469  183C  0878               	movf	ClearString@i,w
 16470  183D  077A               	addwf	ClearString@str,w
 16471  183E  00F5               	movwf	??_ClearString
 16472  183F  0875               	movf	??_ClearString,w
 16473  1840  0086               	movwf	6
 16474  1841  3001               	movlw	1	; select bank2/3
 16475  1842  0087               	movwf	7
 16476  1843  0181               	clrf	1
 16477                           
 16478                           ;main.c: 31:     }
 16479  1844  3001               	movlw	1
 16480  1845  07F8               	addwf	ClearString@i,f
 16481  1846  3000               	movlw	0
 16482  1847  3DF9               	addwfc	ClearString@i+1,f
 16483  1848  2830               	goto	l4514
 16484  1849                     __end_of_ClearString:	
 16485                           
 16486                           	psect	text52
 16487  26A0                     __ptext52:	
 16488 ;; *************** function _strlen *****************
 16489 ;; Defined at:
 16490 ;;		line 12 in file "K:\Programs\MPLABX\XC8 Compiler\pic\sources\c99\common\strlen.c"
 16491 ;; Parameters:    Size  Location     Type
 16492 ;;  s               2    0[COMMON] PTR const unsigned char 
 16493 ;;		 -> STR_11(3), checksum(6), STR_10(7), main@convertedNumber(16), 
 16494 ;;		 -> STR_7(14), nmea_data(140), STR_6(26), STR_5(26), 
 16495 ;;		 -> STR_4(26), STR_3(26), STR_2(26), STR_1(26), 
 16496 ;;		 -> txdata(140), csvField(20), 
 16497 ;; Auto vars:     Size  Location     Type
 16498 ;;  a               2    3[COMMON] PTR const unsigned char 
 16499 ;;		 -> STR_11(3), checksum(6), STR_10(7), main@convertedNumber(16), 
 16500 ;;		 -> STR_7(14), nmea_data(140), STR_6(26), STR_5(26), 
 16501 ;;		 -> STR_4(26), STR_3(26), STR_2(26), STR_1(26), 
 16502 ;;		 -> txdata(140), csvField(20), 
 16503 ;; Return value:  Size  Location     Type
 16504 ;;                  2    0[COMMON] unsigned int 
 16505 ;; Registers used:
 16506 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 16507 ;; Tracked objects:
 16508 ;;		On entry : 0/0
 16509 ;;		On exit  : 0/0
 16510 ;;		Unchanged: 0/0
 16511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16512 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16513 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16514 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16515 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16516 ;;Total ram usage:        5 bytes
 16517 ;; Hardware stack levels used:    1
 16518 ;; Hardware stack levels required when called:    3
 16519 ;; This function calls:
 16520 ;;		Nothing
 16521 ;; This function is called by:
 16522 ;;		_ClearString
 16523 ;;		_GetAtRowCSV
 16524 ;;		_Insert
 16525 ;;		_InsertString
 16526 ;;		_ReverseString
 16527 ;;		_WriteGPS
 16528 ;;		_PollGPS
 16529 ;;		_main
 16530 ;;		_crc16
 16531 ;;		_TransmitString
 16532 ;; This function uses a non-reentrant model
 16533 ;;
 16534                           
 16535                           
 16536                           ;psect for function _strlen
 16537  26A0                     _strlen:	
 16538                           
 16539                           ;incstack = 0
 16540                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
 16541  26A0  0871               	movf	strlen@s+1,w
 16542  26A1  00F4               	movwf	strlen@a+1
 16543  26A2  0870               	movf	strlen@s,w
 16544  26A3  00F3               	movwf	strlen@a
 16545  26A4                     l3500:	
 16546  26A4  0870               	movf	strlen@s,w
 16547  26A5  0084               	movwf	4
 16548  26A6  0871               	movf	strlen@s+1,w
 16549  26A7  0085               	movwf	5
 16550  26A8  0012               	moviw fsr0++
 16551  26A9  1903               	btfsc	3,2
 16552  26AA  2EB0               	goto	l3502
 16553  26AB  3001               	movlw	1
 16554  26AC  07F0               	addwf	strlen@s,f
 16555  26AD  3000               	movlw	0
 16556  26AE  3DF1               	addwfc	strlen@s+1,f
 16557  26AF  2EA4               	goto	l3500
 16558  26B0                     l3502:	
 16559  26B0  0873               	movf	strlen@a,w
 16560  26B1  0270               	subwf	strlen@s,w
 16561  26B2  00F0               	movwf	?_strlen
 16562  26B3  0874               	movf	strlen@a+1,w
 16563  26B4  3B71               	subwfb	strlen@s+1,w
 16564  26B5  00F1               	movwf	?_strlen+1
 16565  26B6  0008               	return
 16566  26B7                     __end_of_strlen:	
 16567                           
 16568                           	psect	text53
 16569  1274                     __ptext53:	
 16570 ;; *************** function _BME280_Init *****************
 16571 ;; Defined at:
 16572 ;;		line 86 in file "bme280_i2c.c"
 16573 ;; Parameters:    Size  Location     Type
 16574 ;;		None
 16575 ;; Auto vars:     Size  Location     Type
 16576 ;;  settings_sel    1   16[BANK1 ] unsigned char 
 16577 ;;  rslt            1   17[BANK1 ] char 
 16578 ;; Return value:  Size  Location     Type
 16579 ;;                  1    wreg      void 
 16580 ;; Registers used:
 16581 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16582 ;; Tracked objects:
 16583 ;;		On entry : 0/0
 16584 ;;		On exit  : 0/0
 16585 ;;		Unchanged: 0/0
 16586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16588 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16589 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16590 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16591 ;;Total ram usage:        4 bytes
 16592 ;; Hardware stack levels used:    1
 16593 ;; Hardware stack levels required when called:   16
 16594 ;; This function calls:
 16595 ;;		_DebugAlert
 16596 ;;		_I2C_Init
 16597 ;;		_bme280_init
 16598 ;;		_bme280_set_sensor_mode
 16599 ;;		_bme280_set_sensor_settings
 16600 ;; This function is called by:
 16601 ;;		_main
 16602 ;; This function uses a non-reentrant model
 16603 ;;
 16604                           
 16605                           
 16606                           ;psect for function _BME280_Init
 16607  1274                     _BME280_Init:	
 16608                           
 16609                           ;bme280_i2c.c: 88:     I2C_Init();
 16610                           
 16611                           ;incstack = 0
 16612 ;; hardware stack exceeded
 16613                           ; Regs used in _BME280_Init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16614  1274  31A6  268B  3192   	fcall	_I2C_Init
 16615                           
 16616                           ;bme280_i2c.c: 92:     EnvSensor.dev_id = 0x76;
 16617  1277  3076               	movlw	118
 16618  1278  0141               	movlb	1	; select bank1
 16619  1279  00AE               	movwf	??_BME280_Init^(0+128)
 16620  127A  082E               	movf	??_BME280_Init^(0+128),w
 16621  127B  0143               	movlb	3	; select bank3
 16622  127C  00A1               	movwf	(_EnvSensor^(0+384)+1)
 16623                           
 16624                           ;bme280_i2c.c: 93:     EnvSensor.intf = BME280_I2C_INTF;
 16625  127D  01A2               	clrf	(_EnvSensor^(0+384)+2)
 16626  127E  0AA2               	incf	(_EnvSensor^(0+384)+2),f
 16627                           
 16628                           ;bme280_i2c.c: 94:     EnvSensor.read = ReadEnvSensor;
 16629  127F  3013               	movlw	low _ReadEnvSensor
 16630  1280  00A3               	movwf	(low ((_EnvSensor| (0+256)+3)))^(0+128)
 16631  1281  301E               	movlw	high _ReadEnvSensor
 16632  1282  00A4               	movwf	((low ((_EnvSensor| (0+256)+3)))^(0+128)+1)
 16633                           
 16634                           ;bme280_i2c.c: 95:     EnvSensor.write = WriteEnvSensor;
 16635  1283  30B1               	movlw	low _WriteEnvSensor
 16636  1284  00A5               	movwf	(low ((_EnvSensor| (0+256)+5)))^(0+128)
 16637  1285  301A               	movlw	high _WriteEnvSensor
 16638  1286  00A6               	movwf	((low ((_EnvSensor| (0+256)+5)))^(0+128)+1)
 16639                           
 16640                           ;bme280_i2c.c: 96:     EnvSensor.delay_ms = Sleep;
 16641  1287  3015               	movlw	low _Sleep
 16642  1288  00A7               	movwf	(low ((_EnvSensor| (0+256)+7)))^(0+128)
 16643  1289  3019               	movlw	high _Sleep
 16644  128A  00A8               	movwf	((low ((_EnvSensor| (0+256)+7)))^(0+128)+1)
 16645                           
 16646                           ;bme280_i2c.c: 98:     rslt = bme280_init(&EnvSensor);
 16647  128B  30A0               	movlw	(low (_EnvSensor| (0+256)))& (0+255)
 16648  128C  3192  2209  3192   	fcall	_bme280_init
 16649  128F  0141               	movlb	1	; select bank1
 16650  1290  00AE               	movwf	??_BME280_Init^(0+128)
 16651  1291  082E               	movf	??_BME280_Init^(0+128),w
 16652  1292  00B1               	movwf	BME280_Init@rslt^(0+128)
 16653                           
 16654                           ;bme280_i2c.c: 100:     if (rslt == 0)
 16655  1293  0831               	movf	BME280_Init@rslt^(0+128),w
 16656  1294  1D03               	btfss	3,2
 16657  1295  2ACF               	goto	l5410
 16658                           
 16659                           ;bme280_i2c.c: 101:     {;bme280_i2c.c: 102:         uint8_t settings_sel;;bme280_i2c.c:
      +                           105:         EnvSensor.settings.osr_h = 0x01;
 16660  1296  0143               	movlb	3	; select bank3
 16661  1297  01D0               	clrf	(_EnvSensor^(0+384)+48)
 16662  1298  0AD0               	incf	(_EnvSensor^(0+384)+48),f
 16663                           
 16664                           ;bme280_i2c.c: 106:         EnvSensor.settings.osr_p = 0x05;
 16665  1299  3005               	movlw	5
 16666  129A  0141               	movlb	1	; select bank1
 16667  129B  00AE               	movwf	??_BME280_Init^(0+128)
 16668  129C  082E               	movf	??_BME280_Init^(0+128),w
 16669  129D  0143               	movlb	3	; select bank3
 16670  129E  00CE               	movwf	(_EnvSensor^(0+384)+46)
 16671                           
 16672                           ;bme280_i2c.c: 107:         EnvSensor.settings.osr_t = 0x02;
 16673  129F  3002               	movlw	2
 16674  12A0  0141               	movlb	1	; select bank1
 16675  12A1  00AE               	movwf	??_BME280_Init^(0+128)
 16676  12A2  082E               	movf	??_BME280_Init^(0+128),w
 16677  12A3  0143               	movlb	3	; select bank3
 16678  12A4  00CF               	movwf	(_EnvSensor^(0+384)+47)
 16679                           
 16680                           ;bme280_i2c.c: 108:         EnvSensor.settings.filter = (0x04);
 16681  12A5  3004               	movlw	4
 16682  12A6  0141               	movlb	1	; select bank1
 16683  12A7  00AE               	movwf	??_BME280_Init^(0+128)
 16684  12A8  082E               	movf	??_BME280_Init^(0+128),w
 16685  12A9  0143               	movlb	3	; select bank3
 16686  12AA  00D1               	movwf	(_EnvSensor^(0+384)+49)
 16687                           
 16688                           ;bme280_i2c.c: 109:         EnvSensor.settings.standby_time = (0x01);
 16689  12AB  01D2               	clrf	(_EnvSensor^(0+384)+50)
 16690  12AC  0AD2               	incf	(_EnvSensor^(0+384)+50),f
 16691                           
 16692                           ;bme280_i2c.c: 111:         settings_sel = 1;
 16693  12AD  0141               	movlb	1	; select bank1
 16694  12AE  01B0               	clrf	BME280_Init@settings_sel^(0+128)
 16695  12AF  0AB0               	incf	BME280_Init@settings_sel^(0+128),f
 16696                           
 16697                           ;bme280_i2c.c: 112:         settings_sel |= 1 << 1;
 16698  12B0  14B0               	bsf	BME280_Init@settings_sel^(0+128),1
 16699                           
 16700                           ;bme280_i2c.c: 113:         settings_sel |= 1 << 2;
 16701  12B1  1530               	bsf	BME280_Init@settings_sel^(0+128),2
 16702                           
 16703                           ;bme280_i2c.c: 114:         settings_sel |= 1 << 4;
 16704  12B2  1630               	bsf	BME280_Init@settings_sel^(0+128),4
 16705                           
 16706                           ;bme280_i2c.c: 115:         settings_sel |= 1 << 3;
 16707  12B3  15B0               	bsf	BME280_Init@settings_sel^(0+128),3
 16708  12B4  30A0               	movlw	(low (_EnvSensor| (0+256)))& (0+255)
 16709  12B5  00AE               	movwf	??_BME280_Init^(0+128)
 16710  12B6  082E               	movf	??_BME280_Init^(0+128),w
 16711  12B7  0140               	movlb	0	; select bank0
 16712  12B8  00EC               	movwf	bme280_set_sensor_settings@dev
 16713  12B9  0141               	movlb	1	; select bank1
 16714  12BA  0830               	movf	BME280_Init@settings_sel^(0+128),w
 16715  12BB  3193  2356  3192   	fcall	_bme280_set_sensor_settings
 16716                           
 16717                           ;bme280_i2c.c: 117:         rslt = bme280_set_sensor_mode(0x03, &EnvSensor);
 16718  12BE  30A0               	movlw	(low (_EnvSensor| (0+256)))& (0+255)
 16719  12BF  0141               	movlb	1	; select bank1
 16720  12C0  00AE               	movwf	??_BME280_Init^(0+128)
 16721  12C1  082E               	movf	??_BME280_Init^(0+128),w
 16722  12C2  0140               	movlb	0	; select bank0
 16723  12C3  00EC               	movwf	bme280_set_sensor_mode@dev
 16724  12C4  3003               	movlw	3
 16725  12C5  319B  2359  3192   	fcall	_bme280_set_sensor_mode
 16726  12C8  0141               	movlb	1	; select bank1
 16727  12C9  00AF               	movwf	(??_BME280_Init+1)^(0+128)
 16728  12CA  082F               	movf	(??_BME280_Init+1)^(0+128),w
 16729  12CB  00B1               	movwf	BME280_Init@rslt^(0+128)
 16730                           
 16731                           ;bme280_i2c.c: 119:         if (rslt == 0)
 16732  12CC  0831               	movf	BME280_Init@rslt^(0+128),w
 16733  12CD  1903               	btfsc	3,2
 16734  12CE  0008               	return
 16735  12CF                     l5410:	
 16736                           
 16737                           ;bme280_i2c.c: 125:     DebugAlert(200, 200, 3);;
 16738  12CF  30C8               	movlw	200
 16739  12D0  0140               	movlb	0	; select bank0
 16740  12D1  00A0               	movwf	DebugAlert@delay_high
 16741  12D2  3000               	movlw	0
 16742  12D3  00A1               	movwf	DebugAlert@delay_high+1
 16743  12D4  30C8               	movlw	200
 16744  12D5  00A2               	movwf	DebugAlert@delay_low
 16745  12D6  3000               	movlw	0
 16746  12D7  00A3               	movwf	DebugAlert@delay_low+1
 16747  12D8  3003               	movlw	3
 16748  12D9  0141               	movlb	1	; select bank1
 16749  12DA  00AE               	movwf	??_BME280_Init^(0+128)
 16750  12DB  082E               	movf	??_BME280_Init^(0+128),w
 16751  12DC  0140               	movlb	0	; select bank0
 16752  12DD  00A4               	movwf	DebugAlert@num_flashes
 16753  12DE  3198  20C1         	fcall	_DebugAlert
 16754  12E0  0008               	return
 16755  12E1                     __end_of_BME280_Init:	
 16756                           
 16757                           	psect	text54
 16758  1356                     __ptext54:	
 16759 ;; *************** function _bme280_set_sensor_settings *****************
 16760 ;; Defined at:
 16761 ;;		line 510 in file "BME280_driver/bme280.c"
 16762 ;; Parameters:    Size  Location     Type
 16763 ;;  desired_sett    1    wreg     unsigned char 
 16764 ;;  dev             1   76[BANK0 ] PTR const struct bme280_
 16765 ;;		 -> EnvSensor(51), 
 16766 ;; Auto vars:     Size  Location     Type
 16767 ;;  desired_sett    1   11[BANK1 ] unsigned char 
 16768 ;;  rslt            1   13[BANK1 ] char 
 16769 ;;  sensor_mode     1   12[BANK1 ] unsigned char 
 16770 ;; Return value:  Size  Location     Type
 16771 ;;                  1    wreg      char 
 16772 ;; Registers used:
 16773 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16774 ;; Tracked objects:
 16775 ;;		On entry : 0/0
 16776 ;;		On exit  : 0/0
 16777 ;;		Unchanged: 0/0
 16778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16779 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16780 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16781 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16782 ;;      Totals:         0       3       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16783 ;;Total ram usage:        6 bytes
 16784 ;; Hardware stack levels used:    1
 16785 ;; Hardware stack levels required when called:   15
 16786 ;; This function calls:
 16787 ;;		_are_settings_changed
 16788 ;;		_bme280_get_sensor_mode
 16789 ;;		_null_ptr_check
 16790 ;;		_put_device_to_sleep
 16791 ;;		_set_filter_standby_settings
 16792 ;;		_set_osr_settings
 16793 ;; This function is called by:
 16794 ;;		_BME280_Init
 16795 ;; This function uses a non-reentrant model
 16796 ;;
 16797                           
 16798                           
 16799                           ;psect for function _bme280_set_sensor_settings
 16800  1356                     _bme280_set_sensor_settings:	
 16801                           
 16802                           ;incstack = 0
 16803 ;; hardware stack exceeded
 16804                           ; Regs used in _bme280_set_sensor_settings: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 16805                           ;bme280_set_sensor_settings@desired_settings stored from wreg
 16806  1356  0141               	movlb	1	; select bank1
 16807  1357  00AB               	movwf	bme280_set_sensor_settings@desired_settings^(0+128)
 16808                           
 16809                           ;BME280_driver/bme280.c: 510: int8_t bme280_set_sensor_settings(uint8_t desired_settings
      +                          , const struct bme280_dev *dev);BME280_driver/bme280.c: 511: {;BME280_driver/bme280.c: 5
      +                          12:     int8_t rslt;;BME280_driver/bme280.c: 513:     uint8_t sensor_mode;;BME280_driver
      +                          /bme280.c: 516:     rslt = null_ptr_check(dev);
 16810  1358  0140               	movlb	0	; select bank0
 16811  1359  086C               	movf	bme280_set_sensor_settings@dev,w
 16812  135A  31A7  2790  3193   	fcall	_null_ptr_check
 16813  135D  0140               	movlb	0	; select bank0
 16814  135E  00ED               	movwf	??_bme280_set_sensor_settings
 16815  135F  086D               	movf	??_bme280_set_sensor_settings,w
 16816  1360  0141               	movlb	1	; select bank1
 16817  1361  00AD               	movwf	bme280_set_sensor_settings@rslt^(0+128)
 16818                           
 16819                           ;BME280_driver/bme280.c: 519:     if (rslt == 0)
 16820  1362  082D               	movf	bme280_set_sensor_settings@rslt^(0+128),w
 16821  1363  1D03               	btfss	3,2
 16822  1364  2BC9               	goto	l5312
 16823                           
 16824                           ;BME280_driver/bme280.c: 520:     {;BME280_driver/bme280.c: 521:         rslt = bme280_g
      +                          et_sensor_mode(&sensor_mode, dev);
 16825  1365  0140               	movlb	0	; select bank0
 16826  1366  086C               	movf	bme280_set_sensor_settings@dev,w
 16827  1367  00ED               	movwf	??_bme280_set_sensor_settings
 16828  1368  086D               	movf	??_bme280_set_sensor_settings,w
 16829  1369  00C0               	movwf	bme280_get_sensor_mode@dev
 16830  136A  30AC               	movlw	(low (bme280_set_sensor_settings@sensor_mode| 0))& (0+255)
 16831  136B  3199  21C5  3193   	fcall	_bme280_get_sensor_mode
 16832  136E  0140               	movlb	0	; select bank0
 16833  136F  00EE               	movwf	??_bme280_set_sensor_settings+1
 16834  1370  086E               	movf	??_bme280_set_sensor_settings+1,w
 16835  1371  0141               	movlb	1	; select bank1
 16836  1372  00AD               	movwf	bme280_set_sensor_settings@rslt^(0+128)
 16837                           
 16838                           ;BME280_driver/bme280.c: 522:         if ((rslt == 0) && (sensor_mode != 0x00))
 16839  1373  082D               	movf	bme280_set_sensor_settings@rslt^(0+128),w
 16840  1374  1D03               	btfss	3,2
 16841  1375  2B83               	goto	l5300
 16842  1376  082C               	movf	bme280_set_sensor_settings@sensor_mode^(0+128),w
 16843  1377  1903               	btfsc	3,2
 16844  1378  2B83               	goto	l5300
 16845                           
 16846                           ;BME280_driver/bme280.c: 523:         {;BME280_driver/bme280.c: 524:             rslt = 
      +                          put_device_to_sleep(dev);
 16847  1379  0140               	movlb	0	; select bank0
 16848  137A  086C               	movf	bme280_set_sensor_settings@dev,w
 16849  137B  319B  2399  3193   	fcall	_put_device_to_sleep
 16850  137E  0140               	movlb	0	; select bank0
 16851  137F  00ED               	movwf	??_bme280_set_sensor_settings
 16852  1380  086D               	movf	??_bme280_set_sensor_settings,w
 16853  1381  0141               	movlb	1	; select bank1
 16854  1382  00AD               	movwf	bme280_set_sensor_settings@rslt^(0+128)
 16855  1383                     l5300:	
 16856                           
 16857                           ;BME280_driver/bme280.c: 526:         if (rslt == 0)
 16858  1383  082D               	movf	bme280_set_sensor_settings@rslt^(0+128),w
 16859  1384  1D03               	btfss	3,2
 16860  1385  2BC9               	goto	l5312
 16861                           
 16862                           ;BME280_driver/bme280.c: 527:         {;BME280_driver/bme280.c: 531:             if (are
      +                          _settings_changed(0x07, desired_settings))
 16863  1386  082B               	movf	bme280_set_sensor_settings@desired_settings^(0+128),w
 16864  1387  0140               	movlb	0	; select bank0
 16865  1388  00ED               	movwf	??_bme280_set_sensor_settings
 16866  1389  086D               	movf	??_bme280_set_sensor_settings,w
 16867  138A  00F0               	movwf	are_settings_changed@desired_settings
 16868  138B  3007               	movlw	7
 16869  138C  31A5  25F9  3193   	fcall	_are_settings_changed
 16870  138F  3A00               	xorlw	0
 16871  1390  1903               	skipnz
 16872  1391  2BA6               	goto	l5306
 16873                           
 16874                           ;BME280_driver/bme280.c: 532:             {;BME280_driver/bme280.c: 533:                
      +                           rslt = set_osr_settings(desired_settings, &dev->settings, dev);
 16875  1392  0140               	movlb	0	; select bank0
 16876  1393  086C               	movf	bme280_set_sensor_settings@dev,w
 16877  1394  3E2E               	addlw	46
 16878  1395  00DD               	movwf	set_osr_settings@settings
 16879  1396  3001               	movlw	1
 16880  1397  00DE               	movwf	set_osr_settings@settings+1
 16881  1398  086C               	movf	bme280_set_sensor_settings@dev,w
 16882  1399  00ED               	movwf	??_bme280_set_sensor_settings
 16883  139A  086D               	movf	??_bme280_set_sensor_settings,w
 16884  139B  00DF               	movwf	set_osr_settings@dev
 16885  139C  0141               	movlb	1	; select bank1
 16886  139D  082B               	movf	bme280_set_sensor_settings@desired_settings^(0+128),w
 16887  139E  3198  20EB  3193   	fcall	_set_osr_settings
 16888  13A1  0140               	movlb	0	; select bank0
 16889  13A2  00EE               	movwf	??_bme280_set_sensor_settings+1
 16890  13A3  086E               	movf	??_bme280_set_sensor_settings+1,w
 16891  13A4  0141               	movlb	1	; select bank1
 16892  13A5  00AD               	movwf	bme280_set_sensor_settings@rslt^(0+128)
 16893  13A6                     l5306:	
 16894                           
 16895                           ;BME280_driver/bme280.c: 539:             if ((rslt == 0) && are_settings_changed(0x18, 
      +                          desired_settings))
 16896  13A6  0141               	movlb	1	; select bank1
 16897  13A7  082D               	movf	bme280_set_sensor_settings@rslt^(0+128),w
 16898  13A8  1D03               	btfss	3,2
 16899  13A9  2BC9               	goto	l5312
 16900  13AA  082B               	movf	bme280_set_sensor_settings@desired_settings^(0+128),w
 16901  13AB  0140               	movlb	0	; select bank0
 16902  13AC  00ED               	movwf	??_bme280_set_sensor_settings
 16903  13AD  086D               	movf	??_bme280_set_sensor_settings,w
 16904  13AE  00F0               	movwf	are_settings_changed@desired_settings
 16905  13AF  3018               	movlw	24
 16906  13B0  31A5  25F9  3193   	fcall	_are_settings_changed
 16907  13B3  3A00               	xorlw	0
 16908  13B4  1903               	skipnz
 16909  13B5  2BC9               	goto	l5312
 16910                           
 16911                           ;BME280_driver/bme280.c: 540:             {;BME280_driver/bme280.c: 541:                
      +                           rslt = set_filter_standby_settings(desired_settings, &dev->settings, dev);
 16912  13B6  0140               	movlb	0	; select bank0
 16913  13B7  086C               	movf	bme280_set_sensor_settings@dev,w
 16914  13B8  3E2E               	addlw	46
 16915  13B9  00D3               	movwf	set_filter_standby_settings@settings
 16916  13BA  3001               	movlw	1
 16917  13BB  00D4               	movwf	set_filter_standby_settings@settings+1
 16918  13BC  086C               	movf	bme280_set_sensor_settings@dev,w
 16919  13BD  00ED               	movwf	??_bme280_set_sensor_settings
 16920  13BE  086D               	movf	??_bme280_set_sensor_settings,w
 16921  13BF  00D5               	movwf	set_filter_standby_settings@dev
 16922  13C0  0141               	movlb	1	; select bank1
 16923  13C1  082B               	movf	bme280_set_sensor_settings@desired_settings^(0+128),w
 16924  13C2  319C  24A6         	fcall	_set_filter_standby_settings
 16925  13C4  0140               	movlb	0	; select bank0
 16926  13C5  00EE               	movwf	??_bme280_set_sensor_settings+1
 16927  13C6  086E               	movf	??_bme280_set_sensor_settings+1,w
 16928  13C7  0141               	movlb	1	; select bank1
 16929  13C8  00AD               	movwf	bme280_set_sensor_settings@rslt^(0+128)
 16930  13C9                     l5312:	
 16931                           
 16932                           ;BME280_driver/bme280.c: 546:     return rslt;
 16933  13C9  0141               	movlb	1	; select bank1
 16934  13CA  082D               	movf	bme280_set_sensor_settings@rslt^(0+128),w
 16935  13CB  0008               	return
 16936  13CC                     __end_of_bme280_set_sensor_settings:	
 16937                           
 16938                           	psect	text55
 16939  25F9                     __ptext55:	
 16940 ;; *************** function _are_settings_changed *****************
 16941 ;; Defined at:
 16942 ;;		line 1403 in file "BME280_driver/bme280.c"
 16943 ;; Parameters:    Size  Location     Type
 16944 ;;  sub_settings    1    wreg     unsigned char 
 16945 ;;  desired_sett    1    0[COMMON] unsigned char 
 16946 ;; Auto vars:     Size  Location     Type
 16947 ;;  sub_settings    1    1[COMMON] unsigned char 
 16948 ;;  settings_cha    1    2[COMMON] unsigned char 
 16949 ;; Return value:  Size  Location     Type
 16950 ;;                  1    wreg      unsigned char 
 16951 ;; Registers used:
 16952 ;;		wreg, status,2, status,0
 16953 ;; Tracked objects:
 16954 ;;		On entry : 0/0
 16955 ;;		On exit  : 0/0
 16956 ;;		Unchanged: 0/0
 16957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16958 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16959 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16961 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16962 ;;Total ram usage:        3 bytes
 16963 ;; Hardware stack levels used:    1
 16964 ;; Hardware stack levels required when called:    3
 16965 ;; This function calls:
 16966 ;;		Nothing
 16967 ;; This function is called by:
 16968 ;;		_bme280_set_sensor_settings
 16969 ;; This function uses a non-reentrant model
 16970 ;;
 16971                           
 16972                           
 16973                           ;psect for function _are_settings_changed
 16974  25F9                     _are_settings_changed:	
 16975                           
 16976                           ;incstack = 0
 16977                           ; Regs used in _are_settings_changed: [wreg+status,2+status,0]
 16978                           ;are_settings_changed@sub_settings stored from wreg
 16979  25F9  00F1               	movwf	are_settings_changed@sub_settings
 16980                           
 16981                           ;BME280_driver/bme280.c: 1407:     if (sub_settings & desired_settings)
 16982  25FA  0871               	movf	are_settings_changed@sub_settings,w
 16983  25FB  0570               	andwf	are_settings_changed@desired_settings,w
 16984  25FC  1903               	btfsc	3,2
 16985  25FD  2E01               	goto	l5228
 16986                           
 16987                           ;BME280_driver/bme280.c: 1408:     {;BME280_driver/bme280.c: 1410:         settings_chan
      +                          ged = 1;
 16988  25FE  01F2               	clrf	are_settings_changed@settings_changed
 16989  25FF  0AF2               	incf	are_settings_changed@settings_changed,f
 16990                           
 16991                           ;BME280_driver/bme280.c: 1411:     }
 16992  2600  2E02               	goto	l5230
 16993  2601                     l5228:	
 16994                           
 16995                           ;BME280_driver/bme280.c: 1413:     {;BME280_driver/bme280.c: 1415:         settings_chan
      +                          ged = 0;
 16996  2601  01F2               	clrf	are_settings_changed@settings_changed
 16997  2602                     l5230:	
 16998                           
 16999                           ;BME280_driver/bme280.c: 1418:     return settings_changed;
 17000  2602  0872               	movf	are_settings_changed@settings_changed,w
 17001  2603  0008               	return
 17002  2604                     __end_of_are_settings_changed:	
 17003                           
 17004                           	psect	text56
 17005  1B59                     __ptext56:	
 17006 ;; *************** function _bme280_set_sensor_mode *****************
 17007 ;; Defined at:
 17008 ;;		line 577 in file "BME280_driver/bme280.c"
 17009 ;; Parameters:    Size  Location     Type
 17010 ;;  sensor_mode     1    wreg     unsigned char 
 17011 ;;  dev             1   76[BANK0 ] PTR const struct bme280_
 17012 ;;		 -> EnvSensor(51), 
 17013 ;; Auto vars:     Size  Location     Type
 17014 ;;  sensor_mode     1   11[BANK1 ] unsigned char 
 17015 ;;  rslt            1   13[BANK1 ] char 
 17016 ;;  last_set_mod    1   12[BANK1 ] unsigned char 
 17017 ;; Return value:  Size  Location     Type
 17018 ;;                  1    wreg      char 
 17019 ;; Registers used:
 17020 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17021 ;; Tracked objects:
 17022 ;;		On entry : 0/0
 17023 ;;		On exit  : 0/0
 17024 ;;		Unchanged: 0/0
 17025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17026 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17027 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17028 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17029 ;;      Totals:         0       3       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17030 ;;Total ram usage:        6 bytes
 17031 ;; Hardware stack levels used:    1
 17032 ;; Hardware stack levels required when called:   15
 17033 ;; This function calls:
 17034 ;;		_bme280_get_sensor_mode
 17035 ;;		_null_ptr_check
 17036 ;;		_put_device_to_sleep
 17037 ;;		_write_power_mode
 17038 ;; This function is called by:
 17039 ;;		_BME280_Init
 17040 ;; This function uses a non-reentrant model
 17041 ;;
 17042                           
 17043                           
 17044                           ;psect for function _bme280_set_sensor_mode
 17045  1B59                     _bme280_set_sensor_mode:	
 17046                           
 17047                           ;incstack = 0
 17048 ;; hardware stack exceeded
 17049                           ; Regs used in _bme280_set_sensor_mode: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
 17050                           ;bme280_set_sensor_mode@sensor_mode stored from wreg
 17051  1B59  0141               	movlb	1	; select bank1
 17052  1B5A  00AB               	movwf	bme280_set_sensor_mode@sensor_mode^(0+128)
 17053                           
 17054                           ;BME280_driver/bme280.c: 577: int8_t bme280_set_sensor_mode(uint8_t sensor_mode, const s
      +                          truct bme280_dev *dev);BME280_driver/bme280.c: 578: {;BME280_driver/bme280.c: 579:     i
      +                          nt8_t rslt;;BME280_driver/bme280.c: 580:     uint8_t last_set_mode;;BME280_driver/bme280
      +                          .c: 583:     rslt = null_ptr_check(dev);
 17055  1B5B  0140               	movlb	0	; select bank0
 17056  1B5C  086C               	movf	bme280_set_sensor_mode@dev,w
 17057  1B5D  31A7  2790  319B   	fcall	_null_ptr_check
 17058  1B60  0140               	movlb	0	; select bank0
 17059  1B61  00ED               	movwf	??_bme280_set_sensor_mode
 17060  1B62  086D               	movf	??_bme280_set_sensor_mode,w
 17061  1B63  0141               	movlb	1	; select bank1
 17062  1B64  00AD               	movwf	bme280_set_sensor_mode@rslt^(0+128)
 17063                           
 17064                           ;BME280_driver/bme280.c: 584:     if (rslt == 0)
 17065  1B65  082D               	movf	bme280_set_sensor_mode@rslt^(0+128),w
 17066  1B66  1D03               	btfss	3,2
 17067  1B67  2B97               	goto	l5332
 17068                           
 17069                           ;BME280_driver/bme280.c: 585:     {;BME280_driver/bme280.c: 586:         rslt = bme280_g
      +                          et_sensor_mode(&last_set_mode, dev);
 17070  1B68  0140               	movlb	0	; select bank0
 17071  1B69  086C               	movf	bme280_set_sensor_mode@dev,w
 17072  1B6A  00ED               	movwf	??_bme280_set_sensor_mode
 17073  1B6B  086D               	movf	??_bme280_set_sensor_mode,w
 17074  1B6C  00C0               	movwf	bme280_get_sensor_mode@dev
 17075  1B6D  30AC               	movlw	(low (bme280_set_sensor_mode@last_set_mode| 0))& (0+255)
 17076  1B6E  3199  21C5  319B   	fcall	_bme280_get_sensor_mode
 17077  1B71  0140               	movlb	0	; select bank0
 17078  1B72  00EE               	movwf	??_bme280_set_sensor_mode+1
 17079  1B73  086E               	movf	??_bme280_set_sensor_mode+1,w
 17080  1B74  0141               	movlb	1	; select bank1
 17081  1B75  00AD               	movwf	bme280_set_sensor_mode@rslt^(0+128)
 17082                           
 17083                           ;BME280_driver/bme280.c: 591:         if ((rslt == 0) && (last_set_mode != 0x00))
 17084  1B76  082D               	movf	bme280_set_sensor_mode@rslt^(0+128),w
 17085  1B77  1D03               	btfss	3,2
 17086  1B78  2B86               	goto	l5328
 17087  1B79  082C               	movf	bme280_set_sensor_mode@last_set_mode^(0+128),w
 17088  1B7A  1903               	btfsc	3,2
 17089  1B7B  2B86               	goto	l5328
 17090                           
 17091                           ;BME280_driver/bme280.c: 592:         {;BME280_driver/bme280.c: 593:             rslt = 
      +                          put_device_to_sleep(dev);
 17092  1B7C  0140               	movlb	0	; select bank0
 17093  1B7D  086C               	movf	bme280_set_sensor_mode@dev,w
 17094  1B7E  319B  2399  319B   	fcall	_put_device_to_sleep
 17095  1B81  0140               	movlb	0	; select bank0
 17096  1B82  00ED               	movwf	??_bme280_set_sensor_mode
 17097  1B83  086D               	movf	??_bme280_set_sensor_mode,w
 17098  1B84  0141               	movlb	1	; select bank1
 17099  1B85  00AD               	movwf	bme280_set_sensor_mode@rslt^(0+128)
 17100  1B86                     l5328:	
 17101                           
 17102                           ;BME280_driver/bme280.c: 597:         if (rslt == 0)
 17103  1B86  082D               	movf	bme280_set_sensor_mode@rslt^(0+128),w
 17104  1B87  1D03               	btfss	3,2
 17105  1B88  2B97               	goto	l5332
 17106                           
 17107                           ;BME280_driver/bme280.c: 598:         {;BME280_driver/bme280.c: 599:             rslt = 
      +                          write_power_mode(sensor_mode, dev);
 17108  1B89  0140               	movlb	0	; select bank0
 17109  1B8A  086C               	movf	bme280_set_sensor_mode@dev,w
 17110  1B8B  00ED               	movwf	??_bme280_set_sensor_mode
 17111  1B8C  086D               	movf	??_bme280_set_sensor_mode,w
 17112  1B8D  00D3               	movwf	write_power_mode@dev
 17113  1B8E  0141               	movlb	1	; select bank1
 17114  1B8F  082B               	movf	bme280_set_sensor_mode@sensor_mode^(0+128),w
 17115  1B90  319A  22E4         	fcall	_write_power_mode
 17116  1B92  0140               	movlb	0	; select bank0
 17117  1B93  00EE               	movwf	??_bme280_set_sensor_mode+1
 17118  1B94  086E               	movf	??_bme280_set_sensor_mode+1,w
 17119  1B95  0141               	movlb	1	; select bank1
 17120  1B96  00AD               	movwf	bme280_set_sensor_mode@rslt^(0+128)
 17121  1B97                     l5332:	
 17122                           
 17123                           ;BME280_driver/bme280.c: 603:     return rslt;
 17124  1B97  082D               	movf	bme280_set_sensor_mode@rslt^(0+128),w
 17125  1B98  0008               	return
 17126  1B99                     __end_of_bme280_set_sensor_mode:	
 17127                           
 17128                           	psect	text57
 17129  1AE4                     __ptext57:	
 17130 ;; *************** function _write_power_mode *****************
 17131 ;; Defined at:
 17132 ;;		line 940 in file "BME280_driver/bme280.c"
 17133 ;; Parameters:    Size  Location     Type
 17134 ;;  sensor_mode     1    wreg     unsigned char 
 17135 ;;  dev             1   51[BANK0 ] PTR const struct bme280_
 17136 ;;		 -> EnvSensor(51), 
 17137 ;; Auto vars:     Size  Location     Type
 17138 ;;  sensor_mode     1   55[BANK0 ] unsigned char 
 17139 ;;  sensor_mode_    1   58[BANK0 ] unsigned char 
 17140 ;;  reg_addr        1   57[BANK0 ] unsigned char 
 17141 ;;  rslt            1   56[BANK0 ] char 
 17142 ;; Return value:  Size  Location     Type
 17143 ;;                  1    wreg      char 
 17144 ;; Registers used:
 17145 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17146 ;; Tracked objects:
 17147 ;;		On entry : 0/0
 17148 ;;		On exit  : 0/0
 17149 ;;		Unchanged: 0/0
 17150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17151 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17152 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17153 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17154 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17155 ;;Total ram usage:        8 bytes
 17156 ;; Hardware stack levels used:    1
 17157 ;; Hardware stack levels required when called:   11
 17158 ;; This function calls:
 17159 ;;		_bme280_get_regs
 17160 ;;		_bme280_set_regs
 17161 ;; This function is called by:
 17162 ;;		_bme280_set_sensor_mode
 17163 ;; This function uses a non-reentrant model
 17164 ;;
 17165                           
 17166                           
 17167                           ;psect for function _write_power_mode
 17168  1AE4                     _write_power_mode:	
 17169                           
 17170                           ;incstack = 0
 17171                           ; Regs used in _write_power_mode: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 17172                           ;write_power_mode@sensor_mode stored from wreg
 17173  1AE4  0140               	movlb	0	; select bank0
 17174  1AE5  00D7               	movwf	write_power_mode@sensor_mode
 17175                           
 17176                           ;BME280_driver/bme280.c: 940: static int8_t write_power_mode(uint8_t sensor_mode, const 
      +                          struct bme280_dev *dev);BME280_driver/bme280.c: 941: {;BME280_driver/bme280.c: 942:     
      +                          int8_t rslt;;BME280_driver/bme280.c: 943:     uint8_t reg_addr = 0xF4;
 17177  1AE6  30F4               	movlw	244
 17178  1AE7  00D4               	movwf	??_write_power_mode
 17179  1AE8  0854               	movf	??_write_power_mode,w
 17180  1AE9  00D9               	movwf	write_power_mode@reg_addr
 17181                           
 17182                           ;BME280_driver/bme280.c: 946:     uint8_t sensor_mode_reg_val;;BME280_driver/bme280.c: 9
      +                          49:     rslt = bme280_get_regs(reg_addr, &sensor_mode_reg_val, 1, dev);
 17183  1AEA  305A               	movlw	(low (write_power_mode@sensor_mode_reg_val| 0))& (0+255)
 17184  1AEB  00D4               	movwf	??_write_power_mode
 17185  1AEC  0854               	movf	??_write_power_mode,w
 17186  1AED  00B7               	movwf	bme280_get_regs@reg_data
 17187  1AEE  3001               	movlw	1
 17188  1AEF  00B8               	movwf	bme280_get_regs@len
 17189  1AF0  3000               	movlw	0
 17190  1AF1  00B9               	movwf	bme280_get_regs@len+1
 17191  1AF2  0853               	movf	write_power_mode@dev,w
 17192  1AF3  00D5               	movwf	??_write_power_mode+1
 17193  1AF4  0855               	movf	??_write_power_mode+1,w
 17194  1AF5  00BA               	movwf	bme280_get_regs@dev
 17195  1AF6  0859               	movf	write_power_mode@reg_addr,w
 17196  1AF7  319C  241D  319A   	fcall	_bme280_get_regs
 17197  1AFA  0140               	movlb	0	; select bank0
 17198  1AFB  00D6               	movwf	??_write_power_mode+2
 17199  1AFC  0856               	movf	??_write_power_mode+2,w
 17200  1AFD  00D8               	movwf	write_power_mode@rslt
 17201                           
 17202                           ;BME280_driver/bme280.c: 952:     if (rslt == 0)
 17203  1AFE  0858               	movf	write_power_mode@rslt,w
 17204  1AFF  1D03               	btfss	3,2
 17205  1B00  2B1B               	goto	l5244
 17206                           
 17207                           ;BME280_driver/bme280.c: 953:     {;BME280_driver/bme280.c: 954:         sensor_mode_reg
      +                          _val = ((sensor_mode_reg_val & ~( 0x03)) | (sensor_mode & 0x03));
 17208  1B01  3003               	movlw	3
 17209  1B02  0557               	andwf	write_power_mode@sensor_mode,w
 17210  1B03  00D4               	movwf	??_write_power_mode
 17211  1B04  085A               	movf	write_power_mode@sensor_mode_reg_val,w
 17212  1B05  39FC               	andlw	252
 17213  1B06  0454               	iorwf	??_write_power_mode,w
 17214  1B07  00D5               	movwf	??_write_power_mode+1
 17215  1B08  0855               	movf	??_write_power_mode+1,w
 17216  1B09  00DA               	movwf	write_power_mode@sensor_mode_reg_val
 17217                           
 17218                           ;BME280_driver/bme280.c: 957:         rslt = bme280_set_regs(&reg_addr, &sensor_mode_reg
      +                          _val, 1, dev);
 17219  1B0A  305A               	movlw	(low (write_power_mode@sensor_mode_reg_val| 0))& (0+255)
 17220  1B0B  00D4               	movwf	??_write_power_mode
 17221  1B0C  0854               	movf	??_write_power_mode,w
 17222  1B0D  00B4               	movwf	bme280_set_regs@reg_data
 17223  1B0E  01B5               	clrf	bme280_set_regs@len
 17224  1B0F  0AB5               	incf	bme280_set_regs@len,f
 17225  1B10  0853               	movf	write_power_mode@dev,w
 17226  1B11  00D5               	movwf	??_write_power_mode+1
 17227  1B12  0855               	movf	??_write_power_mode+1,w
 17228  1B13  00B6               	movwf	bme280_set_regs@dev
 17229  1B14  3059               	movlw	(low (write_power_mode@reg_addr| 0))& (0+255)
 17230  1B15  3196  266A         	fcall	_bme280_set_regs
 17231  1B17  0140               	movlb	0	; select bank0
 17232  1B18  00D6               	movwf	??_write_power_mode+2
 17233  1B19  0856               	movf	??_write_power_mode+2,w
 17234  1B1A  00D8               	movwf	write_power_mode@rslt
 17235  1B1B                     l5244:	
 17236                           
 17237                           ;BME280_driver/bme280.c: 960:     return rslt;
 17238  1B1B  0858               	movf	write_power_mode@rslt,w
 17239  1B1C  0008               	return
 17240  1B1D                     __end_of_write_power_mode:	
 17241                           
 17242                           	psect	text58
 17243  1B99                     __ptext58:	
 17244 ;; *************** function _put_device_to_sleep *****************
 17245 ;; Defined at:
 17246 ;;		line 966 in file "BME280_driver/bme280.c"
 17247 ;; Parameters:    Size  Location     Type
 17248 ;;  dev             1    wreg     PTR const struct bme280_
 17249 ;;		 -> EnvSensor(51), 
 17250 ;; Auto vars:     Size  Location     Type
 17251 ;;  dev             1    4[BANK1 ] PTR const struct bme280_
 17252 ;;		 -> EnvSensor(51), 
 17253 ;;  settings        5    6[BANK1 ] struct bme280_settings
 17254 ;;  reg_data        4    0[BANK1 ] unsigned char [4]
 17255 ;;  rslt            1    5[BANK1 ] char 
 17256 ;; Return value:  Size  Location     Type
 17257 ;;                  1    wreg      char 
 17258 ;; Registers used:
 17259 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17260 ;; Tracked objects:
 17261 ;;		On entry : 0/0
 17262 ;;		On exit  : 0/0
 17263 ;;		Unchanged: 0/0
 17264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17266 ;;      Locals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17267 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17268 ;;      Totals:         0       3      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17269 ;;Total ram usage:       14 bytes
 17270 ;; Hardware stack levels used:    1
 17271 ;; Hardware stack levels required when called:   14
 17272 ;; This function calls:
 17273 ;;		_bme280_get_regs
 17274 ;;		_bme280_soft_reset
 17275 ;;		_parse_device_settings
 17276 ;;		_reload_device_settings
 17277 ;; This function is called by:
 17278 ;;		_bme280_set_sensor_settings
 17279 ;;		_bme280_set_sensor_mode
 17280 ;; This function uses a non-reentrant model
 17281 ;;
 17282                           
 17283                           
 17284                           ;psect for function _put_device_to_sleep
 17285  1B99                     _put_device_to_sleep:	
 17286                           
 17287                           ;incstack = 0
 17288 ;; hardware stack exceeded
 17289                           ; Regs used in _put_device_to_sleep: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 17290                           ;put_device_to_sleep@dev stored from wreg
 17291  1B99  0141               	movlb	1	; select bank1
 17292  1B9A  00A4               	movwf	put_device_to_sleep@dev^(0+128)
 17293                           
 17294                           ;BME280_driver/bme280.c: 966: static int8_t put_device_to_sleep(const struct bme280_dev 
      +                          *dev);BME280_driver/bme280.c: 967: {;BME280_driver/bme280.c: 968:     int8_t rslt;;BME28
      +                          0_driver/bme280.c: 969:     uint8_t reg_data[4];;BME280_driver/bme280.c: 970:     struct
      +                           bme280_settings settings;;BME280_driver/bme280.c: 972:     rslt = bme280_get_regs(0xF2,
      +                           reg_data, 4, dev);
 17295  1B9B  30A0               	movlw	(low (put_device_to_sleep@reg_data| 0))& (0+255)
 17296  1B9C  0140               	movlb	0	; select bank0
 17297  1B9D  00E9               	movwf	??_put_device_to_sleep
 17298  1B9E  0869               	movf	??_put_device_to_sleep,w
 17299  1B9F  00B7               	movwf	bme280_get_regs@reg_data
 17300  1BA0  3004               	movlw	4
 17301  1BA1  00B8               	movwf	bme280_get_regs@len
 17302  1BA2  3000               	movlw	0
 17303  1BA3  00B9               	movwf	bme280_get_regs@len+1
 17304  1BA4  0141               	movlb	1	; select bank1
 17305  1BA5  0824               	movf	put_device_to_sleep@dev^(0+128),w
 17306  1BA6  0140               	movlb	0	; select bank0
 17307  1BA7  00EA               	movwf	??_put_device_to_sleep+1
 17308  1BA8  086A               	movf	??_put_device_to_sleep+1,w
 17309  1BA9  00BA               	movwf	bme280_get_regs@dev
 17310  1BAA  30F2               	movlw	242
 17311  1BAB  319C  241D  319B   	fcall	_bme280_get_regs
 17312  1BAE  0140               	movlb	0	; select bank0
 17313  1BAF  00EB               	movwf	??_put_device_to_sleep+2
 17314  1BB0  086B               	movf	??_put_device_to_sleep+2,w
 17315  1BB1  0141               	movlb	1	; select bank1
 17316  1BB2  00A5               	movwf	put_device_to_sleep@rslt^(0+128)
 17317                           
 17318                           ;BME280_driver/bme280.c: 973:     if (rslt == 0)
 17319  1BB3  0825               	movf	put_device_to_sleep@rslt^(0+128),w
 17320  1BB4  1D03               	btfss	3,2
 17321  1BB5  2BD9               	goto	l5218
 17322                           
 17323                           ;BME280_driver/bme280.c: 974:     {;BME280_driver/bme280.c: 975:         parse_device_se
      +                          ttings(reg_data, &settings);
 17324  1BB6  30A6               	movlw	(low (put_device_to_sleep@settings| 0))& (0+255)
 17325  1BB7  0140               	movlb	0	; select bank0
 17326  1BB8  00E9               	movwf	??_put_device_to_sleep
 17327  1BB9  0869               	movf	??_put_device_to_sleep,w
 17328  1BBA  00F0               	movwf	parse_device_settings@settings
 17329  1BBB  30A0               	movlw	(low (put_device_to_sleep@reg_data| 0))& (0+255)
 17330  1BBC  3190  2022  319B   	fcall	_parse_device_settings
 17331                           
 17332                           ;BME280_driver/bme280.c: 976:         rslt = bme280_soft_reset(dev);
 17333  1BBF  0141               	movlb	1	; select bank1
 17334  1BC0  0824               	movf	put_device_to_sleep@dev^(0+128),w
 17335  1BC1  319B  231D  319B   	fcall	_bme280_soft_reset
 17336  1BC4  0140               	movlb	0	; select bank0
 17337  1BC5  00E9               	movwf	??_put_device_to_sleep
 17338  1BC6  0869               	movf	??_put_device_to_sleep,w
 17339  1BC7  0141               	movlb	1	; select bank1
 17340  1BC8  00A5               	movwf	put_device_to_sleep@rslt^(0+128)
 17341                           
 17342                           ;BME280_driver/bme280.c: 977:         if (rslt == 0)
 17343  1BC9  0825               	movf	put_device_to_sleep@rslt^(0+128),w
 17344  1BCA  1D03               	btfss	3,2
 17345  1BCB  2BD9               	goto	l5218
 17346                           
 17347                           ;BME280_driver/bme280.c: 978:         {;BME280_driver/bme280.c: 979:             rslt = 
      +                          reload_device_settings(&settings, dev);
 17348  1BCC  0824               	movf	put_device_to_sleep@dev^(0+128),w
 17349  1BCD  0140               	movlb	0	; select bank0
 17350  1BCE  00E9               	movwf	??_put_device_to_sleep
 17351  1BCF  0869               	movf	??_put_device_to_sleep,w
 17352  1BD0  00E4               	movwf	reload_device_settings@dev
 17353  1BD1  30A6               	movlw	(low (put_device_to_sleep@settings| 0))& (0+255)
 17354  1BD2  31A7  27DA         	fcall	_reload_device_settings
 17355  1BD4  0140               	movlb	0	; select bank0
 17356  1BD5  00EA               	movwf	??_put_device_to_sleep+1
 17357  1BD6  086A               	movf	??_put_device_to_sleep+1,w
 17358  1BD7  0141               	movlb	1	; select bank1
 17359  1BD8  00A5               	movwf	put_device_to_sleep@rslt^(0+128)
 17360  1BD9                     l5218:	
 17361                           
 17362                           ;BME280_driver/bme280.c: 983:     return rslt;
 17363  1BD9  0825               	movf	put_device_to_sleep@rslt^(0+128),w
 17364  1BDA  0008               	return
 17365  1BDB                     __end_of_put_device_to_sleep:	
 17366                           
 17367                           	psect	text59
 17368  27DA                     __ptext59:	
 17369 ;; *************** function _reload_device_settings *****************
 17370 ;; Defined at:
 17371 ;;		line 990 in file "BME280_driver/bme280.c"
 17372 ;; Parameters:    Size  Location     Type
 17373 ;;  settings        1    wreg     PTR const struct bme280_
 17374 ;;		 -> put_device_to_sleep@settings(5), 
 17375 ;;  dev             1   68[BANK0 ] PTR const struct bme280_
 17376 ;;		 -> EnvSensor(51), 
 17377 ;; Auto vars:     Size  Location     Type
 17378 ;;  settings        1   71[BANK0 ] PTR const struct bme280_
 17379 ;;		 -> put_device_to_sleep@settings(5), 
 17380 ;;  rslt            1   72[BANK0 ] char 
 17381 ;; Return value:  Size  Location     Type
 17382 ;;                  1    wreg      char 
 17383 ;; Registers used:
 17384 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17385 ;; Tracked objects:
 17386 ;;		On entry : 0/0
 17387 ;;		On exit  : 0/0
 17388 ;;		Unchanged: 0/0
 17389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17390 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17391 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17392 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17393 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17394 ;;Total ram usage:        5 bytes
 17395 ;; Hardware stack levels used:    1
 17396 ;; Hardware stack levels required when called:   13
 17397 ;; This function calls:
 17398 ;;		_set_filter_standby_settings
 17399 ;;		_set_osr_settings
 17400 ;; This function is called by:
 17401 ;;		_put_device_to_sleep
 17402 ;; This function uses a non-reentrant model
 17403 ;;
 17404                           
 17405                           
 17406                           ;psect for function _reload_device_settings
 17407  27DA                     _reload_device_settings:	
 17408                           
 17409                           ;incstack = 0
 17410 ;; hardware stack exceeded
 17411                           ; Regs used in _reload_device_settings: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
 17412                           ;reload_device_settings@settings stored from wreg
 17413  27DA  0140               	movlb	0	; select bank0
 17414  27DB  00E7               	movwf	reload_device_settings@settings
 17415                           
 17416                           ;BME280_driver/bme280.c: 990: static int8_t reload_device_settings(const struct bme280_s
      +                          ettings *settings, const struct bme280_dev *dev);BME280_driver/bme280.c: 991: {;BME280_d
      +                          river/bme280.c: 992:     int8_t rslt;;BME280_driver/bme280.c: 994:     rslt = set_osr_se
      +                          ttings(0x1F, settings, dev);
 17417  27DC  0867               	movf	reload_device_settings@settings,w
 17418  27DD  00DD               	movwf	set_osr_settings@settings
 17419  27DE  3000               	movlw	0
 17420  27DF  00DE               	movwf	set_osr_settings@settings+1
 17421  27E0  0864               	movf	reload_device_settings@dev,w
 17422  27E1  00E5               	movwf	??_reload_device_settings
 17423  27E2  0865               	movf	??_reload_device_settings,w
 17424  27E3  00DF               	movwf	set_osr_settings@dev
 17425  27E4  301F               	movlw	31
 17426  27E5  3198  20EB  31A7   	fcall	_set_osr_settings
 17427  27E8  0140               	movlb	0	; select bank0
 17428  27E9  00E6               	movwf	??_reload_device_settings+1
 17429  27EA  0866               	movf	??_reload_device_settings+1,w
 17430  27EB  00E8               	movwf	reload_device_settings@rslt
 17431                           
 17432                           ;BME280_driver/bme280.c: 995:     if (rslt == 0)
 17433  27EC  0868               	movf	reload_device_settings@rslt,w
 17434  27ED  1D03               	btfss	3,2
 17435  27EE  2FFE               	goto	l5170
 17436                           
 17437                           ;BME280_driver/bme280.c: 996:     {;BME280_driver/bme280.c: 997:         rslt = set_filt
      +                          er_standby_settings(0x1F, settings, dev);
 17438  27EF  0867               	movf	reload_device_settings@settings,w
 17439  27F0  00D3               	movwf	set_filter_standby_settings@settings
 17440  27F1  3000               	movlw	0
 17441  27F2  00D4               	movwf	set_filter_standby_settings@settings+1
 17442  27F3  0864               	movf	reload_device_settings@dev,w
 17443  27F4  00E5               	movwf	??_reload_device_settings
 17444  27F5  0865               	movf	??_reload_device_settings,w
 17445  27F6  00D5               	movwf	set_filter_standby_settings@dev
 17446  27F7  301F               	movlw	31
 17447  27F8  319C  24A6         	fcall	_set_filter_standby_settings
 17448  27FA  0140               	movlb	0	; select bank0
 17449  27FB  00E6               	movwf	??_reload_device_settings+1
 17450  27FC  0866               	movf	??_reload_device_settings+1,w
 17451  27FD  00E8               	movwf	reload_device_settings@rslt
 17452  27FE                     l5170:	
 17453                           
 17454                           ;BME280_driver/bme280.c: 1000:     return rslt;
 17455  27FE  0868               	movf	reload_device_settings@rslt,w
 17456  27FF  0008               	return
 17457  2800                     __end_of_reload_device_settings:	
 17458                           
 17459                           	psect	text60
 17460  18EB                     __ptext60:	
 17461 ;; *************** function _set_osr_settings *****************
 17462 ;; Defined at:
 17463 ;;		line 776 in file "BME280_driver/bme280.c"
 17464 ;; Parameters:    Size  Location     Type
 17465 ;;  desired_sett    1    wreg     unsigned char 
 17466 ;;  settings        2   61[BANK0 ] PTR const struct bme280_
 17467 ;;		 -> EnvSensor(51), put_device_to_sleep@settings(5), 
 17468 ;;  dev             1   63[BANK0 ] PTR const struct bme280_
 17469 ;;		 -> EnvSensor(51), 
 17470 ;; Auto vars:     Size  Location     Type
 17471 ;;  desired_sett    1   67[BANK0 ] unsigned char 
 17472 ;;  rslt            1   66[BANK0 ] char 
 17473 ;; Return value:  Size  Location     Type
 17474 ;;                  1    wreg      char 
 17475 ;; Registers used:
 17476 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17477 ;; Tracked objects:
 17478 ;;		On entry : 0/0
 17479 ;;		On exit  : 0/0
 17480 ;;		Unchanged: 0/0
 17481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17482 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17483 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17484 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17485 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17486 ;;Total ram usage:        7 bytes
 17487 ;; Hardware stack levels used:    1
 17488 ;; Hardware stack levels required when called:   12
 17489 ;; This function calls:
 17490 ;;		_set_osr_humidity_settings
 17491 ;;		_set_osr_press_temp_settings
 17492 ;; This function is called by:
 17493 ;;		_bme280_set_sensor_settings
 17494 ;;		_reload_device_settings
 17495 ;; This function uses a non-reentrant model
 17496 ;;
 17497                           
 17498                           
 17499                           ;psect for function _set_osr_settings
 17500  18EB                     _set_osr_settings:	
 17501                           
 17502                           ;incstack = 0
 17503                           ; Regs used in _set_osr_settings: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 17504                           ;set_osr_settings@desired_settings stored from wreg
 17505  18EB  0140               	movlb	0	; select bank0
 17506  18EC  00E3               	movwf	set_osr_settings@desired_settings
 17507                           
 17508                           ;BME280_driver/bme280.c: 776: static int8_t set_osr_settings(uint8_t desired_settings,;B
      +                          ME280_driver/bme280.c: 777:                                const struct bme280_settings 
      +                          *settings,;BME280_driver/bme280.c: 778:                                const struct bme2
      +                          80_dev *dev);BME280_driver/bme280.c: 779: {;BME280_driver/bme280.c: 780:     int8_t rslt
      +                           = 1;
 17509  18ED  01E2               	clrf	set_osr_settings@rslt
 17510  18EE  0AE2               	incf	set_osr_settings@rslt,f
 17511                           
 17512                           ;BME280_driver/bme280.c: 782:     if (desired_settings & 1 << 2)
 17513  18EF  1D63               	btfss	set_osr_settings@desired_settings,2
 17514  18F0  2900               	goto	l5124
 17515                           
 17516                           ;BME280_driver/bme280.c: 783:     {;BME280_driver/bme280.c: 784:         rslt = set_osr_
      +                          humidity_settings(settings, dev);
 17517  18F1  085E               	movf	set_osr_settings@settings+1,w
 17518  18F2  00D4               	movwf	set_osr_humidity_settings@settings+1
 17519  18F3  085D               	movf	set_osr_settings@settings,w
 17520  18F4  00D3               	movwf	set_osr_humidity_settings@settings
 17521  18F5  085F               	movf	set_osr_settings@dev,w
 17522  18F6  00E0               	movwf	??_set_osr_settings
 17523  18F7  0860               	movf	??_set_osr_settings,w
 17524  18F8  00D5               	movwf	set_osr_humidity_settings@dev
 17525  18F9  319E  26B5  3198   	fcall	_set_osr_humidity_settings
 17526  18FC  0140               	movlb	0	; select bank0
 17527  18FD  00E1               	movwf	??_set_osr_settings+1
 17528  18FE  0861               	movf	??_set_osr_settings+1,w
 17529  18FF  00E2               	movwf	set_osr_settings@rslt
 17530  1900                     l5124:	
 17531                           
 17532                           ;BME280_driver/bme280.c: 786:     if (desired_settings & (1 | 1 << 1))
 17533  1900  0863               	movf	set_osr_settings@desired_settings,w
 17534  1901  3903               	andlw	3
 17535  1902  1903               	btfsc	3,2
 17536  1903  2913               	goto	l5128
 17537                           
 17538                           ;BME280_driver/bme280.c: 787:     {;BME280_driver/bme280.c: 788:         rslt = set_osr_
      +                          press_temp_settings(desired_settings, settings, dev);
 17539  1904  085E               	movf	set_osr_settings@settings+1,w
 17540  1905  00D4               	movwf	set_osr_press_temp_settings@settings+1
 17541  1906  085D               	movf	set_osr_settings@settings,w
 17542  1907  00D3               	movwf	set_osr_press_temp_settings@settings
 17543  1908  085F               	movf	set_osr_settings@dev,w
 17544  1909  00E0               	movwf	??_set_osr_settings
 17545  190A  0860               	movf	??_set_osr_settings,w
 17546  190B  00D5               	movwf	set_osr_press_temp_settings@dev
 17547  190C  0863               	movf	set_osr_settings@desired_settings,w
 17548  190D  319C  24EC         	fcall	_set_osr_press_temp_settings
 17549  190F  0140               	movlb	0	; select bank0
 17550  1910  00E1               	movwf	??_set_osr_settings+1
 17551  1911  0861               	movf	??_set_osr_settings+1,w
 17552  1912  00E2               	movwf	set_osr_settings@rslt
 17553  1913                     l5128:	
 17554                           
 17555                           ;BME280_driver/bme280.c: 791:     return rslt;
 17556  1913  0862               	movf	set_osr_settings@rslt,w
 17557  1914  0008               	return
 17558  1915                     __end_of_set_osr_settings:	
 17559                           
 17560                           	psect	text61
 17561  1CEC                     __ptext61:	
 17562 ;; *************** function _set_osr_press_temp_settings *****************
 17563 ;; Defined at:
 17564 ;;		line 829 in file "BME280_driver/bme280.c"
 17565 ;; Parameters:    Size  Location     Type
 17566 ;;  desired_sett    1    wreg     unsigned char 
 17567 ;;  settings        2   51[BANK0 ] PTR const struct bme280_
 17568 ;;		 -> EnvSensor(51), put_device_to_sleep@settings(5), 
 17569 ;;  dev             1   53[BANK0 ] PTR const struct bme280_
 17570 ;;		 -> EnvSensor(51), 
 17571 ;; Auto vars:     Size  Location     Type
 17572 ;;  desired_sett    1   57[BANK0 ] unsigned char 
 17573 ;;  reg_data        1   60[BANK0 ] unsigned char 
 17574 ;;  reg_addr        1   59[BANK0 ] unsigned char 
 17575 ;;  rslt            1   58[BANK0 ] char 
 17576 ;; Return value:  Size  Location     Type
 17577 ;;                  1    wreg      char 
 17578 ;; Registers used:
 17579 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17580 ;; Tracked objects:
 17581 ;;		On entry : 0/0
 17582 ;;		On exit  : 0/0
 17583 ;;		Unchanged: 0/0
 17584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17585 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17586 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17587 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17588 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17589 ;;Total ram usage:       10 bytes
 17590 ;; Hardware stack levels used:    1
 17591 ;; Hardware stack levels required when called:   11
 17592 ;; This function calls:
 17593 ;;		_bme280_get_regs
 17594 ;;		_bme280_set_regs
 17595 ;;		_fill_osr_press_settings
 17596 ;;		_fill_osr_temp_settings
 17597 ;; This function is called by:
 17598 ;;		_set_osr_settings
 17599 ;; This function uses a non-reentrant model
 17600 ;;
 17601                           
 17602                           
 17603                           ;psect for function _set_osr_press_temp_settings
 17604  1CEC                     _set_osr_press_temp_settings:	
 17605                           
 17606                           ;incstack = 0
 17607                           ; Regs used in _set_osr_press_temp_settings: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 17608                           ;set_osr_press_temp_settings@desired_settings stored from wreg
 17609  1CEC  0140               	movlb	0	; select bank0
 17610  1CED  00D9               	movwf	set_osr_press_temp_settings@desired_settings
 17611                           
 17612                           ;BME280_driver/bme280.c: 829: static int8_t set_osr_press_temp_settings(uint8_t desired_
      +                          settings,;BME280_driver/bme280.c: 830:                                           const s
      +                          truct bme280_settings *settings,;BME280_driver/bme280.c: 831:                           
      +                                          const struct bme280_dev *dev);BME280_driver/bme280.c: 832: {;BME280_driv
      +                          er/bme280.c: 833:     int8_t rslt;;BME280_driver/bme280.c: 834:     uint8_t reg_addr = 0
      +                          xF4;
 17613  1CEE  30F4               	movlw	244
 17614  1CEF  00D6               	movwf	??_set_osr_press_temp_settings
 17615  1CF0  0856               	movf	??_set_osr_press_temp_settings,w
 17616  1CF1  00DB               	movwf	set_osr_press_temp_settings@reg_addr
 17617                           
 17618                           ;BME280_driver/bme280.c: 835:     uint8_t reg_data;;BME280_driver/bme280.c: 837:     rsl
      +                          t = bme280_get_regs(reg_addr, &reg_data, 1, dev);
 17619  1CF2  305C               	movlw	(low (set_osr_press_temp_settings@reg_data| 0))& (0+255)
 17620  1CF3  00D6               	movwf	??_set_osr_press_temp_settings
 17621  1CF4  0856               	movf	??_set_osr_press_temp_settings,w
 17622  1CF5  00B7               	movwf	bme280_get_regs@reg_data
 17623  1CF6  3001               	movlw	1
 17624  1CF7  00B8               	movwf	bme280_get_regs@len
 17625  1CF8  3000               	movlw	0
 17626  1CF9  00B9               	movwf	bme280_get_regs@len+1
 17627  1CFA  0855               	movf	set_osr_press_temp_settings@dev,w
 17628  1CFB  00D7               	movwf	??_set_osr_press_temp_settings+1
 17629  1CFC  0857               	movf	??_set_osr_press_temp_settings+1,w
 17630  1CFD  00BA               	movwf	bme280_get_regs@dev
 17631  1CFE  085B               	movf	set_osr_press_temp_settings@reg_addr,w
 17632  1CFF  319C  241D  319C   	fcall	_bme280_get_regs
 17633  1D02  0140               	movlb	0	; select bank0
 17634  1D03  00D8               	movwf	??_set_osr_press_temp_settings+2
 17635  1D04  0858               	movf	??_set_osr_press_temp_settings+2,w
 17636  1D05  00DA               	movwf	set_osr_press_temp_settings@rslt
 17637                           
 17638                           ;BME280_driver/bme280.c: 838:     if (rslt == 0)
 17639  1D06  085A               	movf	set_osr_press_temp_settings@rslt,w
 17640  1D07  1D03               	btfss	3,2
 17641  1D08  2D30               	goto	l5110
 17642                           
 17643                           ;BME280_driver/bme280.c: 839:     {;BME280_driver/bme280.c: 840:         if (desired_set
      +                          tings & 1)
 17644  1D09  1C59               	btfss	set_osr_press_temp_settings@desired_settings,0
 17645  1D0A  2D13               	goto	l5106
 17646                           
 17647                           ;BME280_driver/bme280.c: 841:         {;BME280_driver/bme280.c: 842:             fill_os
      +                          r_press_settings(&reg_data, settings);
 17648  1D0B  0854               	movf	set_osr_press_temp_settings@settings+1,w
 17649  1D0C  00F1               	movwf	fill_osr_press_settings@settings+1
 17650  1D0D  0853               	movf	set_osr_press_temp_settings@settings,w
 17651  1D0E  00F0               	movwf	fill_osr_press_settings@settings
 17652  1D0F  305C               	movlw	(low (set_osr_press_temp_settings@reg_data| 0))& (0+255)
 17653  1D10  31A6  26E8  319C   	fcall	_fill_osr_press_settings
 17654  1D13                     l5106:	
 17655                           
 17656                           ;BME280_driver/bme280.c: 844:         if (desired_settings & 1 << 1)
 17657  1D13  0140               	movlb	0	; select bank0
 17658  1D14  1CD9               	btfss	set_osr_press_temp_settings@desired_settings,1
 17659  1D15  2D1E               	goto	l146
 17660                           
 17661                           ;BME280_driver/bme280.c: 845:         {;BME280_driver/bme280.c: 846:             fill_os
      +                          r_temp_settings(&reg_data, settings);
 17662  1D16  0854               	movf	set_osr_press_temp_settings@settings+1,w
 17663  1D17  00F1               	movwf	fill_osr_temp_settings@settings+1
 17664  1D18  0853               	movf	set_osr_press_temp_settings@settings,w
 17665  1D19  00F0               	movwf	fill_osr_temp_settings@settings
 17666  1D1A  305C               	movlw	(low (set_osr_press_temp_settings@reg_data| 0))& (0+255)
 17667  1D1B  31A7  273B  319C   	fcall	_fill_osr_temp_settings
 17668  1D1E                     l146:	
 17669                           ;BME280_driver/bme280.c: 847:         }
 17670                           
 17671                           
 17672                           ;BME280_driver/bme280.c: 850:         rslt = bme280_set_regs(&reg_addr, &reg_data, 1, de
      +                          v);
 17673  1D1E  305C               	movlw	(low (set_osr_press_temp_settings@reg_data| 0))& (0+255)
 17674  1D1F  0140               	movlb	0	; select bank0
 17675  1D20  00D6               	movwf	??_set_osr_press_temp_settings
 17676  1D21  0856               	movf	??_set_osr_press_temp_settings,w
 17677  1D22  00B4               	movwf	bme280_set_regs@reg_data
 17678  1D23  01B5               	clrf	bme280_set_regs@len
 17679  1D24  0AB5               	incf	bme280_set_regs@len,f
 17680  1D25  0855               	movf	set_osr_press_temp_settings@dev,w
 17681  1D26  00D7               	movwf	??_set_osr_press_temp_settings+1
 17682  1D27  0857               	movf	??_set_osr_press_temp_settings+1,w
 17683  1D28  00B6               	movwf	bme280_set_regs@dev
 17684  1D29  305B               	movlw	(low (set_osr_press_temp_settings@reg_addr| 0))& (0+255)
 17685  1D2A  3196  266A         	fcall	_bme280_set_regs
 17686  1D2C  0140               	movlb	0	; select bank0
 17687  1D2D  00D8               	movwf	??_set_osr_press_temp_settings+2
 17688  1D2E  0858               	movf	??_set_osr_press_temp_settings+2,w
 17689  1D2F  00DA               	movwf	set_osr_press_temp_settings@rslt
 17690  1D30                     l5110:	
 17691                           
 17692                           ;BME280_driver/bme280.c: 853:     return rslt;
 17693  1D30  085A               	movf	set_osr_press_temp_settings@rslt,w
 17694  1D31  0008               	return
 17695  1D32                     __end_of_set_osr_press_temp_settings:	
 17696                           
 17697                           	psect	text62
 17698  273B                     __ptext62:	
 17699 ;; *************** function _fill_osr_temp_settings *****************
 17700 ;; Defined at:
 17701 ;;		line 918 in file "BME280_driver/bme280.c"
 17702 ;; Parameters:    Size  Location     Type
 17703 ;;  reg_data        1    wreg     PTR unsigned char 
 17704 ;;		 -> set_osr_press_temp_settings@reg_data(1), 
 17705 ;;  settings        2    0[COMMON] PTR const struct bme280_
 17706 ;;		 -> EnvSensor(51), put_device_to_sleep@settings(5), 
 17707 ;; Auto vars:     Size  Location     Type
 17708 ;;  reg_data        1    5[COMMON] PTR unsigned char 
 17709 ;;		 -> set_osr_press_temp_settings@reg_data(1), 
 17710 ;; Return value:  Size  Location     Type
 17711 ;;                  1    wreg      void 
 17712 ;; Registers used:
 17713 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 17714 ;; Tracked objects:
 17715 ;;		On entry : 0/0
 17716 ;;		On exit  : 0/0
 17717 ;;		Unchanged: 0/0
 17718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17719 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17720 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17721 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17722 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17723 ;;Total ram usage:        6 bytes
 17724 ;; Hardware stack levels used:    1
 17725 ;; Hardware stack levels required when called:    3
 17726 ;; This function calls:
 17727 ;;		Nothing
 17728 ;; This function is called by:
 17729 ;;		_set_osr_press_temp_settings
 17730 ;; This function uses a non-reentrant model
 17731 ;;
 17732                           
 17733                           
 17734                           ;psect for function _fill_osr_temp_settings
 17735  273B                     _fill_osr_temp_settings:	
 17736                           
 17737                           ;incstack = 0
 17738                           ; Regs used in _fill_osr_temp_settings: [wreg+fsr1l+fsr1h+status,2+status,0]
 17739                           ;fill_osr_temp_settings@reg_data stored from wreg
 17740  273B  00F5               	movwf	fill_osr_temp_settings@reg_data
 17741                           
 17742                           ;BME280_driver/bme280.c: 918: static void fill_osr_temp_settings(uint8_t *reg_data, cons
      +                          t struct bme280_settings *settings);BME280_driver/bme280.c: 919: {;BME280_driver/bme280.
      +                          c: 920:     *reg_data = ((*reg_data & ~( 0xE0)) | ((settings->osr_t << 0x05) & 0xE0));
 17743  273C  0870               	movf	fill_osr_temp_settings@settings,w
 17744  273D  0086               	movwf	6
 17745  273E  0871               	movf	fill_osr_temp_settings@settings+1,w
 17746  273F  0087               	movwf	7
 17747  2740  3141               	addfsr 1,1
 17748  2741  0801               	movf	1,w
 17749  2742  00F2               	movwf	??_fill_osr_temp_settings
 17750  2743  3005               	movlw	5
 17751  2744                     u4925:	
 17752  2744  35F2               	lslf	??_fill_osr_temp_settings,f
 17753  2745  0B89               	decfsz	9,f
 17754  2746  2F44               	goto	u4925
 17755  2747  30E0               	movlw	224
 17756  2748  0572               	andwf	??_fill_osr_temp_settings,w
 17757  2749  00F3               	movwf	??_fill_osr_temp_settings+1
 17758  274A  0875               	movf	fill_osr_temp_settings@reg_data,w
 17759  274B  0086               	movwf	6
 17760  274C  0187               	clrf	7
 17761  274D  0801               	movf	1,w
 17762  274E  391F               	andlw	31
 17763  274F  0473               	iorwf	??_fill_osr_temp_settings+1,w
 17764  2750  00F4               	movwf	??_fill_osr_temp_settings+2
 17765  2751  0875               	movf	fill_osr_temp_settings@reg_data,w
 17766  2752  0086               	movwf	6
 17767  2753  0187               	clrf	7
 17768  2754  0874               	movf	??_fill_osr_temp_settings+2,w
 17769  2755  0081               	movwf	1
 17770  2756  0008               	return
 17771  2757                     __end_of_fill_osr_temp_settings:	
 17772                           
 17773                           	psect	text63
 17774  26E8                     __ptext63:	
 17775 ;; *************** function _fill_osr_press_settings *****************
 17776 ;; Defined at:
 17777 ;;		line 909 in file "BME280_driver/bme280.c"
 17778 ;; Parameters:    Size  Location     Type
 17779 ;;  reg_data        1    wreg     PTR unsigned char 
 17780 ;;		 -> set_osr_press_temp_settings@reg_data(1), 
 17781 ;;  settings        2    0[COMMON] PTR const struct bme280_
 17782 ;;		 -> EnvSensor(51), put_device_to_sleep@settings(5), 
 17783 ;; Auto vars:     Size  Location     Type
 17784 ;;  reg_data        1    5[COMMON] PTR unsigned char 
 17785 ;;		 -> set_osr_press_temp_settings@reg_data(1), 
 17786 ;; Return value:  Size  Location     Type
 17787 ;;                  1    wreg      void 
 17788 ;; Registers used:
 17789 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 17790 ;; Tracked objects:
 17791 ;;		On entry : 0/0
 17792 ;;		On exit  : 0/0
 17793 ;;		Unchanged: 0/0
 17794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17795 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17796 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17797 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17798 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17799 ;;Total ram usage:        6 bytes
 17800 ;; Hardware stack levels used:    1
 17801 ;; Hardware stack levels required when called:    3
 17802 ;; This function calls:
 17803 ;;		Nothing
 17804 ;; This function is called by:
 17805 ;;		_set_osr_press_temp_settings
 17806 ;; This function uses a non-reentrant model
 17807 ;;
 17808                           
 17809                           
 17810                           ;psect for function _fill_osr_press_settings
 17811  26E8                     _fill_osr_press_settings:	
 17812                           
 17813                           ;incstack = 0
 17814                           ; Regs used in _fill_osr_press_settings: [wreg+fsr1l+fsr1h+status,2+status,0]
 17815                           ;fill_osr_press_settings@reg_data stored from wreg
 17816  26E8  00F5               	movwf	fill_osr_press_settings@reg_data
 17817                           
 17818                           ;BME280_driver/bme280.c: 909: static void fill_osr_press_settings(uint8_t *reg_data, con
      +                          st struct bme280_settings *settings);BME280_driver/bme280.c: 910: {;BME280_driver/bme280
      +                          .c: 911:     *reg_data = ((*reg_data & ~( 0x1C)) | ((settings->osr_p << 0x02) & 0x1C));
 17819  26E9  0870               	movf	fill_osr_press_settings@settings,w
 17820  26EA  0086               	movwf	6
 17821  26EB  0871               	movf	fill_osr_press_settings@settings+1,w
 17822  26EC  0087               	movwf	7
 17823  26ED  0801               	movf	1,w
 17824  26EE  00F2               	movwf	??_fill_osr_press_settings
 17825  26EF  3002               	movlw	2
 17826  26F0                     u4915:	
 17827  26F0  35F2               	lslf	??_fill_osr_press_settings,f
 17828  26F1  0B89               	decfsz	9,f
 17829  26F2  2EF0               	goto	u4915
 17830  26F3  301C               	movlw	28
 17831  26F4  0572               	andwf	??_fill_osr_press_settings,w
 17832  26F5  00F3               	movwf	??_fill_osr_press_settings+1
 17833  26F6  0875               	movf	fill_osr_press_settings@reg_data,w
 17834  26F7  0086               	movwf	6
 17835  26F8  0187               	clrf	7
 17836  26F9  0801               	movf	1,w
 17837  26FA  39E3               	andlw	227
 17838  26FB  0473               	iorwf	??_fill_osr_press_settings+1,w
 17839  26FC  00F4               	movwf	??_fill_osr_press_settings+2
 17840  26FD  0875               	movf	fill_osr_press_settings@reg_data,w
 17841  26FE  0086               	movwf	6
 17842  26FF  0187               	clrf	7
 17843  2700  0874               	movf	??_fill_osr_press_settings+2,w
 17844  2701  0081               	movwf	1
 17845  2702  0008               	return
 17846  2703                     __end_of_fill_osr_press_settings:	
 17847                           
 17848                           	psect	text64
 17849  1EB5                     __ptext64:	
 17850 ;; *************** function _set_osr_humidity_settings *****************
 17851 ;; Defined at:
 17852 ;;		line 797 in file "BME280_driver/bme280.c"
 17853 ;; Parameters:    Size  Location     Type
 17854 ;;  settings        2   51[BANK0 ] PTR const struct bme280_
 17855 ;;		 -> EnvSensor(51), put_device_to_sleep@settings(5), 
 17856 ;;  dev             1   53[BANK0 ] PTR const struct bme280_
 17857 ;;		 -> EnvSensor(51), 
 17858 ;; Auto vars:     Size  Location     Type
 17859 ;;  reg_addr        1   60[BANK0 ] unsigned char 
 17860 ;;  rslt            1   59[BANK0 ] char 
 17861 ;;  ctrl_meas       1   58[BANK0 ] unsigned char 
 17862 ;;  ctrl_hum        1   57[BANK0 ] unsigned char 
 17863 ;; Return value:  Size  Location     Type
 17864 ;;                  1    wreg      char 
 17865 ;; Registers used:
 17866 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17867 ;; Tracked objects:
 17868 ;;		On entry : 0/0
 17869 ;;		On exit  : 0/0
 17870 ;;		Unchanged: 0/0
 17871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17872 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17873 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17874 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17875 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17876 ;;Total ram usage:       10 bytes
 17877 ;; Hardware stack levels used:    1
 17878 ;; Hardware stack levels required when called:   11
 17879 ;; This function calls:
 17880 ;;		_bme280_get_regs
 17881 ;;		_bme280_set_regs
 17882 ;; This function is called by:
 17883 ;;		_set_osr_settings
 17884 ;; This function uses a non-reentrant model
 17885 ;;
 17886                           
 17887                           
 17888                           ;psect for function _set_osr_humidity_settings
 17889  1EB5                     _set_osr_humidity_settings:	
 17890                           
 17891                           ;BME280_driver/bme280.c: 797: static int8_t set_osr_humidity_settings(const struct bme28
      +                          0_settings *settings, const struct bme280_dev *dev);BME280_driver/bme280.c: 798: {;BME28
      +                          0_driver/bme280.c: 799:     int8_t rslt;;BME280_driver/bme280.c: 800:     uint8_t ctrl_h
      +                          um;;BME280_driver/bme280.c: 801:     uint8_t ctrl_meas;;BME280_driver/bme280.c: 802:    
      +                           uint8_t reg_addr = 0xF2;
 17892                           
 17893                           ;incstack = 0
 17894                           ; Regs used in _set_osr_humidity_settings: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cs
      +                          tack]
 17895  1EB5  30F2               	movlw	242
 17896  1EB6  0140               	movlb	0	; select bank0
 17897  1EB7  00D6               	movwf	??_set_osr_humidity_settings
 17898  1EB8  0856               	movf	??_set_osr_humidity_settings,w
 17899  1EB9  00DC               	movwf	set_osr_humidity_settings@reg_addr
 17900                           
 17901                           ;BME280_driver/bme280.c: 804:     ctrl_hum = settings->osr_h & 0x07;
 17902  1EBA  0853               	movf	set_osr_humidity_settings@settings,w
 17903  1EBB  0086               	movwf	6
 17904  1EBC  0854               	movf	set_osr_humidity_settings@settings+1,w
 17905  1EBD  0087               	movwf	7
 17906  1EBE  3142               	addfsr 1,2
 17907  1EBF  0801               	movf	1,w
 17908  1EC0  3907               	andlw	7
 17909  1EC1  00D6               	movwf	??_set_osr_humidity_settings
 17910  1EC2  0856               	movf	??_set_osr_humidity_settings,w
 17911  1EC3  00D9               	movwf	set_osr_humidity_settings@ctrl_hum
 17912                           
 17913                           ;BME280_driver/bme280.c: 807:     rslt = bme280_set_regs(&reg_addr, &ctrl_hum, 1, dev);
 17914  1EC4  3059               	movlw	(low (set_osr_humidity_settings@ctrl_hum| 0))& (0+255)
 17915  1EC5  00D6               	movwf	??_set_osr_humidity_settings
 17916  1EC6  0856               	movf	??_set_osr_humidity_settings,w
 17917  1EC7  00B4               	movwf	bme280_set_regs@reg_data
 17918  1EC8  01B5               	clrf	bme280_set_regs@len
 17919  1EC9  0AB5               	incf	bme280_set_regs@len,f
 17920  1ECA  0855               	movf	set_osr_humidity_settings@dev,w
 17921  1ECB  00D7               	movwf	??_set_osr_humidity_settings+1
 17922  1ECC  0857               	movf	??_set_osr_humidity_settings+1,w
 17923  1ECD  00B6               	movwf	bme280_set_regs@dev
 17924  1ECE  305C               	movlw	(low (set_osr_humidity_settings@reg_addr| 0))& (0+255)
 17925  1ECF  3196  266A  319E   	fcall	_bme280_set_regs
 17926  1ED2  0140               	movlb	0	; select bank0
 17927  1ED3  00D8               	movwf	??_set_osr_humidity_settings+2
 17928  1ED4  0858               	movf	??_set_osr_humidity_settings+2,w
 17929  1ED5  00DB               	movwf	set_osr_humidity_settings@rslt
 17930                           
 17931                           ;BME280_driver/bme280.c: 812:     if (rslt == 0)
 17932  1ED6  085B               	movf	set_osr_humidity_settings@rslt,w
 17933  1ED7  1D03               	btfss	3,2
 17934  1ED8  2F05               	goto	l5092
 17935                           
 17936                           ;BME280_driver/bme280.c: 813:     {;BME280_driver/bme280.c: 814:         reg_addr = 0xF4
      +                          ;
 17937  1ED9  30F4               	movlw	244
 17938  1EDA  00D6               	movwf	??_set_osr_humidity_settings
 17939  1EDB  0856               	movf	??_set_osr_humidity_settings,w
 17940  1EDC  00DC               	movwf	set_osr_humidity_settings@reg_addr
 17941                           
 17942                           ;BME280_driver/bme280.c: 815:         rslt = bme280_get_regs(reg_addr, &ctrl_meas, 1, de
      +                          v);
 17943  1EDD  305A               	movlw	(low (set_osr_humidity_settings@ctrl_meas| 0))& (0+255)
 17944  1EDE  00D6               	movwf	??_set_osr_humidity_settings
 17945  1EDF  0856               	movf	??_set_osr_humidity_settings,w
 17946  1EE0  00B7               	movwf	bme280_get_regs@reg_data
 17947  1EE1  3001               	movlw	1
 17948  1EE2  00B8               	movwf	bme280_get_regs@len
 17949  1EE3  3000               	movlw	0
 17950  1EE4  00B9               	movwf	bme280_get_regs@len+1
 17951  1EE5  0855               	movf	set_osr_humidity_settings@dev,w
 17952  1EE6  00D7               	movwf	??_set_osr_humidity_settings+1
 17953  1EE7  0857               	movf	??_set_osr_humidity_settings+1,w
 17954  1EE8  00BA               	movwf	bme280_get_regs@dev
 17955  1EE9  085C               	movf	set_osr_humidity_settings@reg_addr,w
 17956  1EEA  319C  241D  319E   	fcall	_bme280_get_regs
 17957  1EED  0140               	movlb	0	; select bank0
 17958  1EEE  00D8               	movwf	??_set_osr_humidity_settings+2
 17959  1EEF  0858               	movf	??_set_osr_humidity_settings+2,w
 17960  1EF0  00DB               	movwf	set_osr_humidity_settings@rslt
 17961                           
 17962                           ;BME280_driver/bme280.c: 816:         if (rslt == 0)
 17963  1EF1  085B               	movf	set_osr_humidity_settings@rslt,w
 17964  1EF2  1D03               	btfss	3,2
 17965  1EF3  2F05               	goto	l5092
 17966                           
 17967                           ;BME280_driver/bme280.c: 817:         {;BME280_driver/bme280.c: 818:             rslt = 
      +                          bme280_set_regs(&reg_addr, &ctrl_meas, 1, dev);
 17968  1EF4  305A               	movlw	(low (set_osr_humidity_settings@ctrl_meas| 0))& (0+255)
 17969  1EF5  00D6               	movwf	??_set_osr_humidity_settings
 17970  1EF6  0856               	movf	??_set_osr_humidity_settings,w
 17971  1EF7  00B4               	movwf	bme280_set_regs@reg_data
 17972  1EF8  01B5               	clrf	bme280_set_regs@len
 17973  1EF9  0AB5               	incf	bme280_set_regs@len,f
 17974  1EFA  0855               	movf	set_osr_humidity_settings@dev,w
 17975  1EFB  00D7               	movwf	??_set_osr_humidity_settings+1
 17976  1EFC  0857               	movf	??_set_osr_humidity_settings+1,w
 17977  1EFD  00B6               	movwf	bme280_set_regs@dev
 17978  1EFE  305C               	movlw	(low (set_osr_humidity_settings@reg_addr| 0))& (0+255)
 17979  1EFF  3196  266A         	fcall	_bme280_set_regs
 17980  1F01  0140               	movlb	0	; select bank0
 17981  1F02  00D8               	movwf	??_set_osr_humidity_settings+2
 17982  1F03  0858               	movf	??_set_osr_humidity_settings+2,w
 17983  1F04  00DB               	movwf	set_osr_humidity_settings@rslt
 17984  1F05                     l5092:	
 17985                           
 17986                           ;BME280_driver/bme280.c: 822:     return rslt;
 17987  1F05  085B               	movf	set_osr_humidity_settings@rslt,w
 17988  1F06  0008               	return
 17989  1F07                     __end_of_set_osr_humidity_settings:	
 17990                           
 17991                           	psect	text65
 17992  1CA6                     __ptext65:	
 17993 ;; *************** function _set_filter_standby_settings *****************
 17994 ;; Defined at:
 17995 ;;		line 860 in file "BME280_driver/bme280.c"
 17996 ;; Parameters:    Size  Location     Type
 17997 ;;  desired_sett    1    wreg     unsigned char 
 17998 ;;  settings        2   51[BANK0 ] PTR const struct bme280_
 17999 ;;		 -> EnvSensor(51), put_device_to_sleep@settings(5), 
 18000 ;;  dev             1   53[BANK0 ] PTR const struct bme280_
 18001 ;;		 -> EnvSensor(51), 
 18002 ;; Auto vars:     Size  Location     Type
 18003 ;;  desired_sett    1   57[BANK0 ] unsigned char 
 18004 ;;  reg_data        1   60[BANK0 ] unsigned char 
 18005 ;;  reg_addr        1   59[BANK0 ] unsigned char 
 18006 ;;  rslt            1   58[BANK0 ] char 
 18007 ;; Return value:  Size  Location     Type
 18008 ;;                  1    wreg      char 
 18009 ;; Registers used:
 18010 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18011 ;; Tracked objects:
 18012 ;;		On entry : 0/0
 18013 ;;		On exit  : 0/0
 18014 ;;		Unchanged: 0/0
 18015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18016 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18017 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18018 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18019 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18020 ;;Total ram usage:       10 bytes
 18021 ;; Hardware stack levels used:    1
 18022 ;; Hardware stack levels required when called:   11
 18023 ;; This function calls:
 18024 ;;		_bme280_get_regs
 18025 ;;		_bme280_set_regs
 18026 ;;		_fill_filter_settings
 18027 ;;		_fill_standby_settings
 18028 ;; This function is called by:
 18029 ;;		_bme280_set_sensor_settings
 18030 ;;		_reload_device_settings
 18031 ;; This function uses a non-reentrant model
 18032 ;;
 18033                           
 18034                           
 18035                           ;psect for function _set_filter_standby_settings
 18036  1CA6                     _set_filter_standby_settings:	
 18037                           
 18038                           ;incstack = 0
 18039                           ; Regs used in _set_filter_standby_settings: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 18040                           ;set_filter_standby_settings@desired_settings stored from wreg
 18041  1CA6  0140               	movlb	0	; select bank0
 18042  1CA7  00D9               	movwf	set_filter_standby_settings@desired_settings
 18043                           
 18044                           ;BME280_driver/bme280.c: 860: static int8_t set_filter_standby_settings(uint8_t desired_
      +                          settings,;BME280_driver/bme280.c: 861:                                           const s
      +                          truct bme280_settings *settings,;BME280_driver/bme280.c: 862:                           
      +                                          const struct bme280_dev *dev);BME280_driver/bme280.c: 863: {;BME280_driv
      +                          er/bme280.c: 864:     int8_t rslt;;BME280_driver/bme280.c: 865:     uint8_t reg_addr = 0
      +                          xF5;
 18045  1CA8  30F5               	movlw	245
 18046  1CA9  00D6               	movwf	??_set_filter_standby_settings
 18047  1CAA  0856               	movf	??_set_filter_standby_settings,w
 18048  1CAB  00DB               	movwf	set_filter_standby_settings@reg_addr
 18049                           
 18050                           ;BME280_driver/bme280.c: 866:     uint8_t reg_data;;BME280_driver/bme280.c: 868:     rsl
      +                          t = bme280_get_regs(reg_addr, &reg_data, 1, dev);
 18051  1CAC  305C               	movlw	(low (set_filter_standby_settings@reg_data| 0))& (0+255)
 18052  1CAD  00D6               	movwf	??_set_filter_standby_settings
 18053  1CAE  0856               	movf	??_set_filter_standby_settings,w
 18054  1CAF  00B7               	movwf	bme280_get_regs@reg_data
 18055  1CB0  3001               	movlw	1
 18056  1CB1  00B8               	movwf	bme280_get_regs@len
 18057  1CB2  3000               	movlw	0
 18058  1CB3  00B9               	movwf	bme280_get_regs@len+1
 18059  1CB4  0855               	movf	set_filter_standby_settings@dev,w
 18060  1CB5  00D7               	movwf	??_set_filter_standby_settings+1
 18061  1CB6  0857               	movf	??_set_filter_standby_settings+1,w
 18062  1CB7  00BA               	movwf	bme280_get_regs@dev
 18063  1CB8  085B               	movf	set_filter_standby_settings@reg_addr,w
 18064  1CB9  319C  241D  319C   	fcall	_bme280_get_regs
 18065  1CBC  0140               	movlb	0	; select bank0
 18066  1CBD  00D8               	movwf	??_set_filter_standby_settings+2
 18067  1CBE  0858               	movf	??_set_filter_standby_settings+2,w
 18068  1CBF  00DA               	movwf	set_filter_standby_settings@rslt
 18069                           
 18070                           ;BME280_driver/bme280.c: 869:     if (rslt == 0)
 18071  1CC0  085A               	movf	set_filter_standby_settings@rslt,w
 18072  1CC1  1D03               	btfss	3,2
 18073  1CC2  2CEA               	goto	l5146
 18074                           
 18075                           ;BME280_driver/bme280.c: 870:     {;BME280_driver/bme280.c: 871:         if (desired_set
      +                          tings & 1 << 3)
 18076  1CC3  1DD9               	btfss	set_filter_standby_settings@desired_settings,3
 18077  1CC4  2CCD               	goto	l5142
 18078                           
 18079                           ;BME280_driver/bme280.c: 872:         {;BME280_driver/bme280.c: 873:             fill_fi
      +                          lter_settings(&reg_data, settings);
 18080  1CC5  0854               	movf	set_filter_standby_settings@settings+1,w
 18081  1CC6  00F1               	movwf	fill_filter_settings@settings+1
 18082  1CC7  0853               	movf	set_filter_standby_settings@settings,w
 18083  1CC8  00F0               	movwf	fill_filter_settings@settings
 18084  1CC9  305C               	movlw	(low (set_filter_standby_settings@reg_data| 0))& (0+255)
 18085  1CCA  31A7  2703  319C   	fcall	_fill_filter_settings
 18086  1CCD                     l5142:	
 18087                           
 18088                           ;BME280_driver/bme280.c: 875:         if (desired_settings & 1 << 4)
 18089  1CCD  0140               	movlb	0	; select bank0
 18090  1CCE  1E59               	btfss	set_filter_standby_settings@desired_settings,4
 18091  1CCF  2CD8               	goto	l152
 18092                           
 18093                           ;BME280_driver/bme280.c: 876:         {;BME280_driver/bme280.c: 877:             fill_st
      +                          andby_settings(&reg_data, settings);
 18094  1CD0  0854               	movf	set_filter_standby_settings@settings+1,w
 18095  1CD1  00F1               	movwf	fill_standby_settings@settings+1
 18096  1CD2  0853               	movf	set_filter_standby_settings@settings,w
 18097  1CD3  00F0               	movwf	fill_standby_settings@settings
 18098  1CD4  305C               	movlw	(low (set_filter_standby_settings@reg_data| 0))& (0+255)
 18099  1CD5  31A7  271F  319C   	fcall	_fill_standby_settings
 18100  1CD8                     l152:	
 18101                           ;BME280_driver/bme280.c: 878:         }
 18102                           
 18103                           
 18104                           ;BME280_driver/bme280.c: 881:         rslt = bme280_set_regs(&reg_addr, &reg_data, 1, de
      +                          v);
 18105  1CD8  305C               	movlw	(low (set_filter_standby_settings@reg_data| 0))& (0+255)
 18106  1CD9  0140               	movlb	0	; select bank0
 18107  1CDA  00D6               	movwf	??_set_filter_standby_settings
 18108  1CDB  0856               	movf	??_set_filter_standby_settings,w
 18109  1CDC  00B4               	movwf	bme280_set_regs@reg_data
 18110  1CDD  01B5               	clrf	bme280_set_regs@len
 18111  1CDE  0AB5               	incf	bme280_set_regs@len,f
 18112  1CDF  0855               	movf	set_filter_standby_settings@dev,w
 18113  1CE0  00D7               	movwf	??_set_filter_standby_settings+1
 18114  1CE1  0857               	movf	??_set_filter_standby_settings+1,w
 18115  1CE2  00B6               	movwf	bme280_set_regs@dev
 18116  1CE3  305B               	movlw	(low (set_filter_standby_settings@reg_addr| 0))& (0+255)
 18117  1CE4  3196  266A         	fcall	_bme280_set_regs
 18118  1CE6  0140               	movlb	0	; select bank0
 18119  1CE7  00D8               	movwf	??_set_filter_standby_settings+2
 18120  1CE8  0858               	movf	??_set_filter_standby_settings+2,w
 18121  1CE9  00DA               	movwf	set_filter_standby_settings@rslt
 18122  1CEA                     l5146:	
 18123                           
 18124                           ;BME280_driver/bme280.c: 884:     return rslt;
 18125  1CEA  085A               	movf	set_filter_standby_settings@rslt,w
 18126  1CEB  0008               	return
 18127  1CEC                     __end_of_set_filter_standby_settings:	
 18128                           
 18129                           	psect	text66
 18130  271F                     __ptext66:	
 18131 ;; *************** function _fill_standby_settings *****************
 18132 ;; Defined at:
 18133 ;;		line 900 in file "BME280_driver/bme280.c"
 18134 ;; Parameters:    Size  Location     Type
 18135 ;;  reg_data        1    wreg     PTR unsigned char 
 18136 ;;		 -> set_filter_standby_settings@reg_data(1), 
 18137 ;;  settings        2    0[COMMON] PTR const struct bme280_
 18138 ;;		 -> EnvSensor(51), put_device_to_sleep@settings(5), 
 18139 ;; Auto vars:     Size  Location     Type
 18140 ;;  reg_data        1    5[COMMON] PTR unsigned char 
 18141 ;;		 -> set_filter_standby_settings@reg_data(1), 
 18142 ;; Return value:  Size  Location     Type
 18143 ;;                  1    wreg      void 
 18144 ;; Registers used:
 18145 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 18146 ;; Tracked objects:
 18147 ;;		On entry : 0/0
 18148 ;;		On exit  : 0/0
 18149 ;;		Unchanged: 0/0
 18150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18151 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18152 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18153 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18154 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18155 ;;Total ram usage:        6 bytes
 18156 ;; Hardware stack levels used:    1
 18157 ;; Hardware stack levels required when called:    3
 18158 ;; This function calls:
 18159 ;;		Nothing
 18160 ;; This function is called by:
 18161 ;;		_set_filter_standby_settings
 18162 ;; This function uses a non-reentrant model
 18163 ;;
 18164                           
 18165                           
 18166                           ;psect for function _fill_standby_settings
 18167  271F                     _fill_standby_settings:	
 18168                           
 18169                           ;incstack = 0
 18170                           ; Regs used in _fill_standby_settings: [wreg+fsr1l+fsr1h+status,2+status,0]
 18171                           ;fill_standby_settings@reg_data stored from wreg
 18172  271F  00F5               	movwf	fill_standby_settings@reg_data
 18173                           
 18174                           ;BME280_driver/bme280.c: 900: static void fill_standby_settings(uint8_t *reg_data, const
      +                           struct bme280_settings *settings);BME280_driver/bme280.c: 901: {;BME280_driver/bme280.c
      +                          : 902:     *reg_data = ((*reg_data & ~( 0xE0)) | ((settings->standby_time << 0x05) & 0xE
      +                          0));
 18175  2720  0870               	movf	fill_standby_settings@settings,w
 18176  2721  0086               	movwf	6
 18177  2722  0871               	movf	fill_standby_settings@settings+1,w
 18178  2723  0087               	movwf	7
 18179  2724  3144               	addfsr 1,4
 18180  2725  0801               	movf	1,w
 18181  2726  00F2               	movwf	??_fill_standby_settings
 18182  2727  3005               	movlw	5
 18183  2728                     u4995:	
 18184  2728  35F2               	lslf	??_fill_standby_settings,f
 18185  2729  0B89               	decfsz	9,f
 18186  272A  2F28               	goto	u4995
 18187  272B  30E0               	movlw	224
 18188  272C  0572               	andwf	??_fill_standby_settings,w
 18189  272D  00F3               	movwf	??_fill_standby_settings+1
 18190  272E  0875               	movf	fill_standby_settings@reg_data,w
 18191  272F  0086               	movwf	6
 18192  2730  0187               	clrf	7
 18193  2731  0801               	movf	1,w
 18194  2732  391F               	andlw	31
 18195  2733  0473               	iorwf	??_fill_standby_settings+1,w
 18196  2734  00F4               	movwf	??_fill_standby_settings+2
 18197  2735  0875               	movf	fill_standby_settings@reg_data,w
 18198  2736  0086               	movwf	6
 18199  2737  0187               	clrf	7
 18200  2738  0874               	movf	??_fill_standby_settings+2,w
 18201  2739  0081               	movwf	1
 18202  273A  0008               	return
 18203  273B                     __end_of_fill_standby_settings:	
 18204                           
 18205                           	psect	text67
 18206  2703                     __ptext67:	
 18207 ;; *************** function _fill_filter_settings *****************
 18208 ;; Defined at:
 18209 ;;		line 891 in file "BME280_driver/bme280.c"
 18210 ;; Parameters:    Size  Location     Type
 18211 ;;  reg_data        1    wreg     PTR unsigned char 
 18212 ;;		 -> set_filter_standby_settings@reg_data(1), 
 18213 ;;  settings        2    0[COMMON] PTR const struct bme280_
 18214 ;;		 -> EnvSensor(51), put_device_to_sleep@settings(5), 
 18215 ;; Auto vars:     Size  Location     Type
 18216 ;;  reg_data        1    5[COMMON] PTR unsigned char 
 18217 ;;		 -> set_filter_standby_settings@reg_data(1), 
 18218 ;; Return value:  Size  Location     Type
 18219 ;;                  1    wreg      void 
 18220 ;; Registers used:
 18221 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 18222 ;; Tracked objects:
 18223 ;;		On entry : 0/0
 18224 ;;		On exit  : 0/0
 18225 ;;		Unchanged: 0/0
 18226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18227 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18228 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18229 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18230 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18231 ;;Total ram usage:        6 bytes
 18232 ;; Hardware stack levels used:    1
 18233 ;; Hardware stack levels required when called:    3
 18234 ;; This function calls:
 18235 ;;		Nothing
 18236 ;; This function is called by:
 18237 ;;		_set_filter_standby_settings
 18238 ;; This function uses a non-reentrant model
 18239 ;;
 18240                           
 18241                           
 18242                           ;psect for function _fill_filter_settings
 18243  2703                     _fill_filter_settings:	
 18244                           
 18245                           ;incstack = 0
 18246                           ; Regs used in _fill_filter_settings: [wreg+fsr1l+fsr1h+status,2+status,0]
 18247                           ;fill_filter_settings@reg_data stored from wreg
 18248  2703  00F5               	movwf	fill_filter_settings@reg_data
 18249                           
 18250                           ;BME280_driver/bme280.c: 891: static void fill_filter_settings(uint8_t *reg_data, const 
      +                          struct bme280_settings *settings);BME280_driver/bme280.c: 892: {;BME280_driver/bme280.c:
      +                           893:     *reg_data = ((*reg_data & ~( 0x1C)) | ((settings->filter << 0x02) & 0x1C));
 18251  2704  0870               	movf	fill_filter_settings@settings,w
 18252  2705  0086               	movwf	6
 18253  2706  0871               	movf	fill_filter_settings@settings+1,w
 18254  2707  0087               	movwf	7
 18255  2708  3143               	addfsr 1,3
 18256  2709  0801               	movf	1,w
 18257  270A  00F2               	movwf	??_fill_filter_settings
 18258  270B  3002               	movlw	2
 18259  270C                     u4985:	
 18260  270C  35F2               	lslf	??_fill_filter_settings,f
 18261  270D  0B89               	decfsz	9,f
 18262  270E  2F0C               	goto	u4985
 18263  270F  301C               	movlw	28
 18264  2710  0572               	andwf	??_fill_filter_settings,w
 18265  2711  00F3               	movwf	??_fill_filter_settings+1
 18266  2712  0875               	movf	fill_filter_settings@reg_data,w
 18267  2713  0086               	movwf	6
 18268  2714  0187               	clrf	7
 18269  2715  0801               	movf	1,w
 18270  2716  39E3               	andlw	227
 18271  2717  0473               	iorwf	??_fill_filter_settings+1,w
 18272  2718  00F4               	movwf	??_fill_filter_settings+2
 18273  2719  0875               	movf	fill_filter_settings@reg_data,w
 18274  271A  0086               	movwf	6
 18275  271B  0187               	clrf	7
 18276  271C  0874               	movf	??_fill_filter_settings+2,w
 18277  271D  0081               	movwf	1
 18278  271E  0008               	return
 18279  271F                     __end_of_fill_filter_settings:	
 18280                           
 18281                           	psect	text68
 18282  1022                     __ptext68:	
 18283 ;; *************** function _parse_device_settings *****************
 18284 ;; Defined at:
 18285 ;;		line 928 in file "BME280_driver/bme280.c"
 18286 ;; Parameters:    Size  Location     Type
 18287 ;;  reg_data        1    wreg     PTR const unsigned char 
 18288 ;;		 -> put_device_to_sleep@reg_data(4), bme280_get_sensor_settings@reg_data(4), 
 18289 ;;  settings        1    0[COMMON] PTR struct bme280_settin
 18290 ;;		 -> put_device_to_sleep@settings(5), 
 18291 ;; Auto vars:     Size  Location     Type
 18292 ;;  reg_data        1    3[COMMON] PTR const unsigned char 
 18293 ;;		 -> put_device_to_sleep@reg_data(4), bme280_get_sensor_settings@reg_data(4), 
 18294 ;; Return value:  Size  Location     Type
 18295 ;;                  1    wreg      void 
 18296 ;; Registers used:
 18297 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 18298 ;; Tracked objects:
 18299 ;;		On entry : 0/0
 18300 ;;		On exit  : 0/0
 18301 ;;		Unchanged: 0/0
 18302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18303 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18304 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18305 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18306 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18307 ;;Total ram usage:        4 bytes
 18308 ;; Hardware stack levels used:    1
 18309 ;; Hardware stack levels required when called:    3
 18310 ;; This function calls:
 18311 ;;		Nothing
 18312 ;; This function is called by:
 18313 ;;		_put_device_to_sleep
 18314 ;;		_bme280_get_sensor_settings
 18315 ;; This function uses a non-reentrant model
 18316 ;;
 18317                           
 18318                           
 18319                           ;psect for function _parse_device_settings
 18320  1022                     _parse_device_settings:	
 18321                           
 18322                           ;incstack = 0
 18323                           ; Regs used in _parse_device_settings: [wreg+fsr1l+fsr1h+status,2+status,0]
 18324                           ;parse_device_settings@reg_data stored from wreg
 18325  1022  00F3               	movwf	parse_device_settings@reg_data
 18326                           
 18327                           ;BME280_driver/bme280.c: 928: static void parse_device_settings(const uint8_t *reg_data,
      +                           struct bme280_settings *settings);BME280_driver/bme280.c: 929: {;BME280_driver/bme280.c
      +                          : 930:     settings->osr_h = (reg_data[0] & ( 0x07));
 18328  1023  0873               	movf	parse_device_settings@reg_data,w
 18329  1024  0086               	movwf	6
 18330  1025  0187               	clrf	7
 18331  1026  0801               	movf	1,w
 18332  1027  3907               	andlw	7
 18333  1028  00F1               	movwf	??_parse_device_settings
 18334  1029  0870               	movf	parse_device_settings@settings,w
 18335  102A  3E02               	addlw	2
 18336  102B  0086               	movwf	6
 18337  102C  0187               	clrf	7
 18338  102D  0871               	movf	??_parse_device_settings,w
 18339  102E  0081               	movwf	1
 18340                           
 18341                           ;BME280_driver/bme280.c: 931:     settings->osr_p = ((reg_data[2] & ( 0x1C)) >> ( 0x02))
      +                          ;
 18342  102F  0873               	movf	parse_device_settings@reg_data,w
 18343  1030  3E02               	addlw	2
 18344  1031  0086               	movwf	6
 18345  1032  0187               	clrf	7
 18346  1033  0801               	movf	1,w
 18347  1034  00F1               	movwf	??_parse_device_settings
 18348  1035  3002               	movlw	2
 18349  1036                     u5065:	
 18350  1036  36F1               	lsrf	??_parse_device_settings,f
 18351  1037  0B89               	decfsz	9,f
 18352  1038  2836               	goto	u5065
 18353  1039  0871               	movf	??_parse_device_settings,w
 18354  103A  3907               	andlw	7
 18355  103B  00F2               	movwf	??_parse_device_settings+1
 18356  103C  0870               	movf	parse_device_settings@settings,w
 18357  103D  0086               	movwf	6
 18358  103E  0187               	clrf	7
 18359  103F  0872               	movf	??_parse_device_settings+1,w
 18360  1040  0081               	movwf	1
 18361                           
 18362                           ;BME280_driver/bme280.c: 932:     settings->osr_t = ((reg_data[2] & ( 0xE0)) >> ( 0x05))
      +                          ;
 18363  1041  0873               	movf	parse_device_settings@reg_data,w
 18364  1042  3E02               	addlw	2
 18365  1043  0086               	movwf	6
 18366  1044  0187               	clrf	7
 18367  1045  0801               	movf	1,w
 18368  1046  00F1               	movwf	??_parse_device_settings
 18369  1047  3005               	movlw	5
 18370  1048                     u5075:	
 18371  1048  36F1               	lsrf	??_parse_device_settings,f
 18372  1049  0B89               	decfsz	9,f
 18373  104A  2848               	goto	u5075
 18374  104B  0871               	movf	??_parse_device_settings,w
 18375  104C  3907               	andlw	7
 18376  104D  00F2               	movwf	??_parse_device_settings+1
 18377  104E  0A70               	incf	parse_device_settings@settings,w
 18378  104F  0086               	movwf	6
 18379  1050  0187               	clrf	7
 18380  1051  0872               	movf	??_parse_device_settings+1,w
 18381  1052  0081               	movwf	1
 18382                           
 18383                           ;BME280_driver/bme280.c: 933:     settings->filter = ((reg_data[3] & ( 0x1C)) >> ( 0x02)
      +                          );
 18384  1053  0873               	movf	parse_device_settings@reg_data,w
 18385  1054  3E03               	addlw	3
 18386  1055  0086               	movwf	6
 18387  1056  0187               	clrf	7
 18388  1057  0801               	movf	1,w
 18389  1058  00F1               	movwf	??_parse_device_settings
 18390  1059  3002               	movlw	2
 18391  105A                     u5085:	
 18392  105A  36F1               	lsrf	??_parse_device_settings,f
 18393  105B  0B89               	decfsz	9,f
 18394  105C  285A               	goto	u5085
 18395  105D  0871               	movf	??_parse_device_settings,w
 18396  105E  3907               	andlw	7
 18397  105F  00F2               	movwf	??_parse_device_settings+1
 18398  1060  0870               	movf	parse_device_settings@settings,w
 18399  1061  3E03               	addlw	3
 18400  1062  0086               	movwf	6
 18401  1063  0187               	clrf	7
 18402  1064  0872               	movf	??_parse_device_settings+1,w
 18403  1065  0081               	movwf	1
 18404                           
 18405                           ;BME280_driver/bme280.c: 934:     settings->standby_time = ((reg_data[3] & ( 0xE0)) >> (
      +                           0x05));
 18406  1066  0873               	movf	parse_device_settings@reg_data,w
 18407  1067  3E03               	addlw	3
 18408  1068  0086               	movwf	6
 18409  1069  0187               	clrf	7
 18410  106A  0801               	movf	1,w
 18411  106B  00F1               	movwf	??_parse_device_settings
 18412  106C  3005               	movlw	5
 18413  106D                     u5095:	
 18414  106D  36F1               	lsrf	??_parse_device_settings,f
 18415  106E  0B89               	decfsz	9,f
 18416  106F  286D               	goto	u5095
 18417  1070  0871               	movf	??_parse_device_settings,w
 18418  1071  3907               	andlw	7
 18419  1072  00F2               	movwf	??_parse_device_settings+1
 18420  1073  0870               	movf	parse_device_settings@settings,w
 18421  1074  3E04               	addlw	4
 18422  1075  0086               	movwf	6
 18423  1076  0187               	clrf	7
 18424  1077  0872               	movf	??_parse_device_settings+1,w
 18425  1078  0081               	movwf	1
 18426  1079  0008               	return
 18427  107A                     __end_of_parse_device_settings:	
 18428                           
 18429                           	psect	text69
 18430  19C5                     __ptext69:	
 18431 ;; *************** function _bme280_get_sensor_mode *****************
 18432 ;; Defined at:
 18433 ;;		line 609 in file "BME280_driver/bme280.c"
 18434 ;; Parameters:    Size  Location     Type
 18435 ;;  sensor_mode     1    wreg     PTR unsigned char 
 18436 ;;		 -> bme280_set_sensor_mode@last_set_mode(1), bme280_set_sensor_settings@sensor_mode(1), 
 18437 ;;  dev             1   32[BANK0 ] PTR const struct bme280_
 18438 ;;		 -> EnvSensor(51), 
 18439 ;; Auto vars:     Size  Location     Type
 18440 ;;  sensor_mode     1   37[BANK0 ] PTR unsigned char 
 18441 ;;		 -> bme280_set_sensor_mode@last_set_mode(1), bme280_set_sensor_settings@sensor_mode(1), 
 18442 ;;  rslt            1   36[BANK0 ] char 
 18443 ;; Return value:  Size  Location     Type
 18444 ;;                  1    wreg      char 
 18445 ;; Registers used:
 18446 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18447 ;; Tracked objects:
 18448 ;;		On entry : 0/0
 18449 ;;		On exit  : 0/0
 18450 ;;		Unchanged: 0/0
 18451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18452 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18453 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18454 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18455 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18456 ;;Total ram usage:        6 bytes
 18457 ;; Hardware stack levels used:    1
 18458 ;; Hardware stack levels required when called:   11
 18459 ;; This function calls:
 18460 ;;		_bme280_get_regs
 18461 ;;		_null_ptr_check
 18462 ;; This function is called by:
 18463 ;;		_bme280_set_sensor_settings
 18464 ;;		_bme280_set_sensor_mode
 18465 ;; This function uses a non-reentrant model
 18466 ;;
 18467                           
 18468                           
 18469                           ;psect for function _bme280_get_sensor_mode
 18470  19C5                     _bme280_get_sensor_mode:	
 18471                           
 18472                           ;incstack = 0
 18473                           ; Regs used in _bme280_get_sensor_mode: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
 18474                           ;bme280_get_sensor_mode@sensor_mode stored from wreg
 18475  19C5  0140               	movlb	0	; select bank0
 18476  19C6  00C5               	movwf	bme280_get_sensor_mode@sensor_mode
 18477                           
 18478                           ;BME280_driver/bme280.c: 609: int8_t bme280_get_sensor_mode(uint8_t *sensor_mode, const 
      +                          struct bme280_dev *dev);BME280_driver/bme280.c: 610: {;BME280_driver/bme280.c: 611:     
      +                          int8_t rslt;;BME280_driver/bme280.c: 614:     rslt = null_ptr_check(dev);
 18479  19C7  0840               	movf	bme280_get_sensor_mode@dev,w
 18480  19C8  31A7  2790  3199   	fcall	_null_ptr_check
 18481  19CB  0140               	movlb	0	; select bank0
 18482  19CC  00C1               	movwf	??_bme280_get_sensor_mode
 18483  19CD  0841               	movf	??_bme280_get_sensor_mode,w
 18484  19CE  00C4               	movwf	bme280_get_sensor_mode@rslt
 18485                           
 18486                           ;BME280_driver/bme280.c: 615:     if (rslt == 0)
 18487  19CF  0844               	movf	bme280_get_sensor_mode@rslt,w
 18488  19D0  1D03               	btfss	3,2
 18489  19D1  29F0               	goto	l5204
 18490                           
 18491                           ;BME280_driver/bme280.c: 616:     {;BME280_driver/bme280.c: 618:         rslt = bme280_g
      +                          et_regs(0xF4, sensor_mode, 1, dev);
 18492  19D2  0845               	movf	bme280_get_sensor_mode@sensor_mode,w
 18493  19D3  00C1               	movwf	??_bme280_get_sensor_mode
 18494  19D4  0841               	movf	??_bme280_get_sensor_mode,w
 18495  19D5  00B7               	movwf	bme280_get_regs@reg_data
 18496  19D6  3001               	movlw	1
 18497  19D7  00B8               	movwf	bme280_get_regs@len
 18498  19D8  3000               	movlw	0
 18499  19D9  00B9               	movwf	bme280_get_regs@len+1
 18500  19DA  0840               	movf	bme280_get_sensor_mode@dev,w
 18501  19DB  00C2               	movwf	??_bme280_get_sensor_mode+1
 18502  19DC  0842               	movf	??_bme280_get_sensor_mode+1,w
 18503  19DD  00BA               	movwf	bme280_get_regs@dev
 18504  19DE  30F4               	movlw	244
 18505  19DF  319C  241D         	fcall	_bme280_get_regs
 18506  19E1  0140               	movlb	0	; select bank0
 18507  19E2  00C3               	movwf	??_bme280_get_sensor_mode+2
 18508  19E3  0843               	movf	??_bme280_get_sensor_mode+2,w
 18509  19E4  00C4               	movwf	bme280_get_sensor_mode@rslt
 18510                           
 18511                           ;BME280_driver/bme280.c: 621:         *sensor_mode = (*sensor_mode & ( 0x03));
 18512  19E5  0845               	movf	bme280_get_sensor_mode@sensor_mode,w
 18513  19E6  0086               	movwf	6
 18514  19E7  0187               	clrf	7
 18515  19E8  0801               	movf	1,w
 18516  19E9  3903               	andlw	3
 18517  19EA  00C1               	movwf	??_bme280_get_sensor_mode
 18518  19EB  0845               	movf	bme280_get_sensor_mode@sensor_mode,w
 18519  19EC  0086               	movwf	6
 18520  19ED  0187               	clrf	7
 18521  19EE  0841               	movf	??_bme280_get_sensor_mode,w
 18522  19EF  0081               	movwf	1
 18523  19F0                     l5204:	
 18524                           
 18525                           ;BME280_driver/bme280.c: 624:     return rslt;
 18526  19F0  0844               	movf	bme280_get_sensor_mode@rslt,w
 18527  19F1  0008               	return
 18528  19F2                     __end_of_bme280_get_sensor_mode:	
 18529                           
 18530                           	psect	text70
 18531  1209                     __ptext70:	
 18532 ;; *************** function _bme280_init *****************
 18533 ;; Defined at:
 18534 ;;		line 357 in file "BME280_driver/bme280.c"
 18535 ;; Parameters:    Size  Location     Type
 18536 ;;  dev             1    wreg     PTR struct bme280_dev
 18537 ;;		 -> EnvSensor(51), 
 18538 ;; Auto vars:     Size  Location     Type
 18539 ;;  dev             1   70[BANK0 ] PTR struct bme280_dev
 18540 ;;		 -> EnvSensor(51), 
 18541 ;;  rslt            1   69[BANK0 ] char 
 18542 ;;  chip_id         1   68[BANK0 ] unsigned char 
 18543 ;;  try_count       1   67[BANK0 ] unsigned char 
 18544 ;; Return value:  Size  Location     Type
 18545 ;;                  1    wreg      char 
 18546 ;; Registers used:
 18547 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18548 ;; Tracked objects:
 18549 ;;		On entry : 0/0
 18550 ;;		On exit  : 0/0
 18551 ;;		Unchanged: 0/0
 18552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18554 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18555 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18556 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18557 ;;Total ram usage:        7 bytes
 18558 ;; Hardware stack levels used:    1
 18559 ;; Hardware stack levels required when called:   12
 18560 ;; This function calls:
 18561 ;;		_Sleep
 18562 ;;		_bme280_get_regs
 18563 ;;		_bme280_soft_reset
 18564 ;;		_get_calib_data
 18565 ;;		_null_ptr_check
 18566 ;; This function is called by:
 18567 ;;		_BME280_Init
 18568 ;; This function uses a non-reentrant model
 18569 ;;
 18570                           
 18571                           
 18572                           ;psect for function _bme280_init
 18573  1209                     _bme280_init:	
 18574                           
 18575                           ;incstack = 0
 18576                           ; Regs used in _bme280_init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18577                           ;bme280_init@dev stored from wreg
 18578  1209  0140               	movlb	0	; select bank0
 18579  120A  00E6               	movwf	bme280_init@dev
 18580                           
 18581                           ;BME280_driver/bme280.c: 357: int8_t bme280_init(struct bme280_dev *dev);BME280_driver/b
      +                          me280.c: 358: {;BME280_driver/bme280.c: 359:     int8_t rslt;;BME280_driver/bme280.c: 36
      +                          2:     uint8_t try_count = 5;
 18582  120B  3005               	movlw	5
 18583  120C  00E0               	movwf	??_bme280_init
 18584  120D  0860               	movf	??_bme280_init,w
 18585  120E  00E3               	movwf	bme280_init@try_count
 18586                           
 18587                           ;BME280_driver/bme280.c: 363:     uint8_t chip_id = 0;
 18588  120F  01E4               	clrf	bme280_init@chip_id
 18589                           
 18590                           ;BME280_driver/bme280.c: 366:     rslt = null_ptr_check(dev);
 18591  1210  0866               	movf	bme280_init@dev,w
 18592  1211  31A7  2790  3192   	fcall	_null_ptr_check
 18593  1214  0140               	movlb	0	; select bank0
 18594  1215  00E0               	movwf	??_bme280_init
 18595  1216  0860               	movf	??_bme280_init,w
 18596  1217  00E5               	movwf	bme280_init@rslt
 18597                           
 18598                           ;BME280_driver/bme280.c: 369:     if (rslt == 0)
 18599  1218  0865               	movf	bme280_init@rslt,w
 18600  1219  1903               	btfsc	3,2
 18601  121A  2A68               	goto	l5280
 18602  121B  2A72               	goto	l55
 18603  121C                     l5262:	
 18604                           
 18605                           ;BME280_driver/bme280.c: 372:         {;BME280_driver/bme280.c: 374:             rslt = 
      +                          bme280_get_regs(0xD0, &chip_id, 1, dev);
 18606  121C  3064               	movlw	(low (bme280_init@chip_id| 0))& (0+255)
 18607  121D  00E0               	movwf	??_bme280_init
 18608  121E  0860               	movf	??_bme280_init,w
 18609  121F  00B7               	movwf	bme280_get_regs@reg_data
 18610  1220  3001               	movlw	1
 18611  1221  00B8               	movwf	bme280_get_regs@len
 18612  1222  3000               	movlw	0
 18613  1223  00B9               	movwf	bme280_get_regs@len+1
 18614  1224  0866               	movf	bme280_init@dev,w
 18615  1225  00E1               	movwf	??_bme280_init+1
 18616  1226  0861               	movf	??_bme280_init+1,w
 18617  1227  00BA               	movwf	bme280_get_regs@dev
 18618  1228  30D0               	movlw	208
 18619  1229  319C  241D  3192   	fcall	_bme280_get_regs
 18620  122C  0140               	movlb	0	; select bank0
 18621  122D  00E2               	movwf	??_bme280_init+2
 18622  122E  0862               	movf	??_bme280_init+2,w
 18623  122F  00E5               	movwf	bme280_init@rslt
 18624                           
 18625                           ;BME280_driver/bme280.c: 376:             if ((rslt == 0) && (chip_id == 0x60))
 18626  1230  0865               	movf	bme280_init@rslt,w
 18627  1231  1D03               	btfss	3,2
 18628  1232  2A53               	goto	l5276
 18629  1233  3060               	movlw	96
 18630  1234  0664               	xorwf	bme280_init@chip_id,w
 18631  1235  1D03               	btfss	3,2
 18632  1236  2A53               	goto	l5276
 18633                           
 18634                           ;BME280_driver/bme280.c: 377:             {;BME280_driver/bme280.c: 378:                
      +                           dev->chip_id = chip_id;
 18635  1237  0864               	movf	bme280_init@chip_id,w
 18636  1238  00E0               	movwf	??_bme280_init
 18637  1239  0866               	movf	bme280_init@dev,w
 18638  123A  0086               	movwf	6
 18639  123B  3001               	movlw	1	; select bank2/3
 18640  123C  0087               	movwf	7
 18641  123D  0860               	movf	??_bme280_init,w
 18642  123E  0081               	movwf	1
 18643                           
 18644                           ;BME280_driver/bme280.c: 381:                 rslt = bme280_soft_reset(dev);
 18645  123F  0866               	movf	bme280_init@dev,w
 18646  1240  319B  231D  3192   	fcall	_bme280_soft_reset
 18647  1243  0140               	movlb	0	; select bank0
 18648  1244  00E0               	movwf	??_bme280_init
 18649  1245  0860               	movf	??_bme280_init,w
 18650  1246  00E5               	movwf	bme280_init@rslt
 18651                           
 18652                           ;BME280_driver/bme280.c: 382:                 if (rslt == 0)
 18653  1247  0865               	movf	bme280_init@rslt,w
 18654  1248  1D03               	btfss	3,2
 18655  1249  2A6B               	goto	l5282
 18656                           
 18657                           ;BME280_driver/bme280.c: 383:                 {;BME280_driver/bme280.c: 385:            
      +                                   rslt = get_calib_data(dev);
 18658  124A  0866               	movf	bme280_init@dev,w
 18659  124B  319D  25C6  3192   	fcall	_get_calib_data
 18660  124E  0140               	movlb	0	; select bank0
 18661  124F  00E0               	movwf	??_bme280_init
 18662  1250  0860               	movf	??_bme280_init,w
 18663  1251  00E5               	movwf	bme280_init@rslt
 18664  1252  2A6B               	goto	l5282
 18665  1253                     l5276:	
 18666                           
 18667                           ;BME280_driver/bme280.c: 391:             dev->delay_ms(1);
 18668  1253  3000               	movlw	0
 18669  1254  00F3               	movwf	Sleep@ms+3
 18670  1255  3000               	movlw	0
 18671  1256  00F2               	movwf	Sleep@ms+2
 18672  1257  3000               	movlw	0
 18673  1258  00F1               	movwf	Sleep@ms+1
 18674  1259  3001               	movlw	1
 18675  125A  00F0               	movwf	Sleep@ms
 18676  125B  0866               	movf	bme280_init@dev,w
 18677  125C  3E07               	addlw	7
 18678  125D  0086               	movwf	6
 18679  125E  3001               	movlw	1	; select bank2/3
 18680  125F  0087               	movwf	7
 18681  1260  3F41               	moviw [1]fsr1
 18682  1261  008A               	movwf	10
 18683  1262  3F40               	moviw [0]fsr1
 18684  1263  000A               	callw
 18685  1264  3192               	pagesel	$
 18686                           
 18687                           ;BME280_driver/bme280.c: 392:             --try_count;
 18688  1265  3001               	movlw	1
 18689  1266  0140               	movlb	0	; select bank0
 18690  1267  02E3               	subwf	bme280_init@try_count,f
 18691  1268                     l5280:	
 18692                           
 18693                           ;BME280_driver/bme280.c: 371:         while (try_count)
 18694  1268  0863               	movf	bme280_init@try_count,w
 18695  1269  1D03               	btfss	3,2
 18696  126A  2A1C               	goto	l5262
 18697  126B                     l5282:	
 18698                           
 18699                           ;BME280_driver/bme280.c: 396:         if (!try_count)
 18700  126B  0863               	movf	bme280_init@try_count,w
 18701  126C  1D03               	btfss	3,2
 18702  126D  2A72               	goto	l55
 18703                           
 18704                           ;BME280_driver/bme280.c: 397:         {;BME280_driver/bme280.c: 398:             rslt = 
      +                          -2;
 18705  126E  30FE               	movlw	254
 18706  126F  00E0               	movwf	??_bme280_init
 18707  1270  0860               	movf	??_bme280_init,w
 18708  1271  00E5               	movwf	bme280_init@rslt
 18709  1272                     l55:	
 18710                           ;BME280_driver/bme280.c: 400:     }
 18711                           
 18712                           
 18713                           ;BME280_driver/bme280.c: 402:     return rslt;
 18714  1272  0865               	movf	bme280_init@rslt,w
 18715  1273  0008               	return
 18716  1274                     __end_of_bme280_init:	
 18717                           
 18718                           	psect	text71
 18719  1DC6                     __ptext71:	
 18720 ;; *************** function _get_calib_data *****************
 18721 ;; Defined at:
 18722 ;;		line 1306 in file "BME280_driver/bme280.c"
 18723 ;; Parameters:    Size  Location     Type
 18724 ;;  dev             1    wreg     PTR struct bme280_dev
 18725 ;;		 -> EnvSensor(51), 
 18726 ;; Auto vars:     Size  Location     Type
 18727 ;;  dev             1   63[BANK0 ] PTR struct bme280_dev
 18728 ;;		 -> EnvSensor(51), 
 18729 ;;  calib_data     26   35[BANK0 ] unsigned char [26]
 18730 ;;  rslt            1   62[BANK0 ] char 
 18731 ;;  reg_addr        1    0        unsigned char 
 18732 ;; Return value:  Size  Location     Type
 18733 ;;                  1    wreg      char 
 18734 ;; Registers used:
 18735 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18736 ;; Tracked objects:
 18737 ;;		On entry : 0/0
 18738 ;;		On exit  : 0/0
 18739 ;;		Unchanged: 0/0
 18740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18742 ;;      Locals:         0      29       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18743 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18744 ;;      Totals:         0      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18745 ;;Total ram usage:       32 bytes
 18746 ;; Hardware stack levels used:    1
 18747 ;; Hardware stack levels required when called:   11
 18748 ;; This function calls:
 18749 ;;		_bme280_get_regs
 18750 ;;		_parse_humidity_calib_data
 18751 ;;		_parse_temp_press_calib_data
 18752 ;; This function is called by:
 18753 ;;		_bme280_init
 18754 ;; This function uses a non-reentrant model
 18755 ;;
 18756                           
 18757                           
 18758                           ;psect for function _get_calib_data
 18759  1DC6                     _get_calib_data:	
 18760                           
 18761                           ;incstack = 0
 18762                           ; Regs used in _get_calib_data: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18763                           ;get_calib_data@dev stored from wreg
 18764  1DC6  0140               	movlb	0	; select bank0
 18765  1DC7  00DF               	movwf	get_calib_data@dev
 18766                           
 18767                           ;BME280_driver/bme280.c: 1312:     uint8_t calib_data[26] = { 0 };
 18768  1DC8  3043               	movlw	low get_calib_data@calib_data
 18769  1DC9  0086               	movwf	6
 18770  1DCA  3000               	movlw	high get_calib_data@calib_data
 18771  1DCB  0087               	movwf	7
 18772  1DCC  301A               	movlw	26
 18773  1DCD  00C0               	movwf	??_get_calib_data
 18774  1DCE  3000               	movlw	0
 18775  1DCF                     u5110:	
 18776  1DCF  001E               	movwi fsr1++
 18777  1DD0  0BC0               	decfsz	??_get_calib_data,f
 18778  1DD1  2DCF               	goto	u5110
 18779                           
 18780                           ;BME280_driver/bme280.c: 1315:     rslt = bme280_get_regs(reg_addr, calib_data, 26, dev)
      +                          ;
 18781  1DD2  3043               	movlw	(low (get_calib_data@calib_data| 0))& (0+255)
 18782  1DD3  00C0               	movwf	??_get_calib_data
 18783  1DD4  0840               	movf	??_get_calib_data,w
 18784  1DD5  00B7               	movwf	bme280_get_regs@reg_data
 18785  1DD6  301A               	movlw	26
 18786  1DD7  00B8               	movwf	bme280_get_regs@len
 18787  1DD8  3000               	movlw	0
 18788  1DD9  00B9               	movwf	bme280_get_regs@len+1
 18789  1DDA  085F               	movf	get_calib_data@dev,w
 18790  1DDB  00C1               	movwf	??_get_calib_data+1
 18791  1DDC  0841               	movf	??_get_calib_data+1,w
 18792  1DDD  00BA               	movwf	bme280_get_regs@dev
 18793  1DDE  3088               	movlw	136
 18794  1DDF  319C  241D  319D   	fcall	_bme280_get_regs
 18795  1DE2  0140               	movlb	0	; select bank0
 18796  1DE3  00C2               	movwf	??_get_calib_data+2
 18797  1DE4  0842               	movf	??_get_calib_data+2,w
 18798  1DE5  00DE               	movwf	get_calib_data@rslt
 18799                           
 18800                           ;BME280_driver/bme280.c: 1316:     if (rslt == 0)
 18801  1DE6  085E               	movf	get_calib_data@rslt,w
 18802  1DE7  1D03               	btfss	3,2
 18803  1DE8  2E10               	goto	l5192
 18804                           
 18805                           ;BME280_driver/bme280.c: 1317:     {;BME280_driver/bme280.c: 1321:         parse_temp_pr
      +                          ess_calib_data(calib_data, dev);
 18806  1DE9  085F               	movf	get_calib_data@dev,w
 18807  1DEA  00C0               	movwf	??_get_calib_data
 18808  1DEB  0840               	movf	??_get_calib_data,w
 18809  1DEC  00F0               	movwf	parse_temp_press_calib_data@dev
 18810  1DED  3043               	movlw	(low (get_calib_data@calib_data| 0))& (0+255)
 18811  1DEE  3197  270B  319D   	fcall	_parse_temp_press_calib_data
 18812                           
 18813                           ;BME280_driver/bme280.c: 1325:         rslt = bme280_get_regs(reg_addr, calib_data, 7, d
      +                          ev);
 18814  1DF1  3043               	movlw	(low (get_calib_data@calib_data| 0))& (0+255)
 18815  1DF2  0140               	movlb	0	; select bank0
 18816  1DF3  00C0               	movwf	??_get_calib_data
 18817  1DF4  0840               	movf	??_get_calib_data,w
 18818  1DF5  00B7               	movwf	bme280_get_regs@reg_data
 18819  1DF6  3007               	movlw	7
 18820  1DF7  00B8               	movwf	bme280_get_regs@len
 18821  1DF8  3000               	movlw	0
 18822  1DF9  00B9               	movwf	bme280_get_regs@len+1
 18823  1DFA  085F               	movf	get_calib_data@dev,w
 18824  1DFB  00C1               	movwf	??_get_calib_data+1
 18825  1DFC  0841               	movf	??_get_calib_data+1,w
 18826  1DFD  00BA               	movwf	bme280_get_regs@dev
 18827  1DFE  30E1               	movlw	225
 18828  1DFF  319C  241D  319D   	fcall	_bme280_get_regs
 18829  1E02  0140               	movlb	0	; select bank0
 18830  1E03  00C2               	movwf	??_get_calib_data+2
 18831  1E04  0842               	movf	??_get_calib_data+2,w
 18832  1E05  00DE               	movwf	get_calib_data@rslt
 18833                           
 18834                           ;BME280_driver/bme280.c: 1326:         if (rslt == 0)
 18835  1E06  085E               	movf	get_calib_data@rslt,w
 18836  1E07  1D03               	btfss	3,2
 18837  1E08  2E10               	goto	l5192
 18838                           
 18839                           ;BME280_driver/bme280.c: 1327:         {;BME280_driver/bme280.c: 1331:             parse
      +                          _humidity_calib_data(calib_data, dev);
 18840  1E09  085F               	movf	get_calib_data@dev,w
 18841  1E0A  00C0               	movwf	??_get_calib_data
 18842  1E0B  0840               	movf	??_get_calib_data,w
 18843  1E0C  00F0               	movwf	parse_humidity_calib_data@dev
 18844  1E0D  3043               	movlw	(low (get_calib_data@calib_data| 0))& (0+255)
 18845  1E0E  3195  25D1         	fcall	_parse_humidity_calib_data
 18846  1E10                     l5192:	
 18847                           
 18848                           ;BME280_driver/bme280.c: 1335:     return rslt;
 18849  1E10  0140               	movlb	0	; select bank0
 18850  1E11  085E               	movf	get_calib_data@rslt,w
 18851  1E12  0008               	return
 18852  1E13                     __end_of_get_calib_data:	
 18853                           
 18854                           	psect	text72
 18855  170B                     __ptext72:	
 18856 ;; *************** function _parse_temp_press_calib_data *****************
 18857 ;; Defined at:
 18858 ;;		line 1357 in file "BME280_driver/bme280.c"
 18859 ;; Parameters:    Size  Location     Type
 18860 ;;  reg_data        1    wreg     PTR const unsigned char 
 18861 ;;		 -> get_calib_data@calib_data(26), 
 18862 ;;  dev             1    0[COMMON] PTR struct bme280_dev
 18863 ;;		 -> EnvSensor(51), 
 18864 ;; Auto vars:     Size  Location     Type
 18865 ;;  reg_data        1    3[COMMON] PTR const unsigned char 
 18866 ;;		 -> get_calib_data@calib_data(26), 
 18867 ;;  calib_data      1    2[COMMON] PTR struct bme280_calib_
 18868 ;;		 -> EnvSensor.calib_data(37), EnvSensor(51), 
 18869 ;; Return value:  Size  Location     Type
 18870 ;;                  1    wreg      void 
 18871 ;; Registers used:
 18872 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 18873 ;; Tracked objects:
 18874 ;;		On entry : 0/0
 18875 ;;		On exit  : 0/0
 18876 ;;		Unchanged: 0/0
 18877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18878 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18879 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18880 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18881 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18882 ;;Total ram usage:        4 bytes
 18883 ;; Hardware stack levels used:    1
 18884 ;; Hardware stack levels required when called:    3
 18885 ;; This function calls:
 18886 ;;		Nothing
 18887 ;; This function is called by:
 18888 ;;		_get_calib_data
 18889 ;; This function uses a non-reentrant model
 18890 ;;
 18891                           
 18892                           
 18893                           ;psect for function _parse_temp_press_calib_data
 18894  170B                     _parse_temp_press_calib_data:	
 18895                           
 18896                           ;incstack = 0
 18897                           ; Regs used in _parse_temp_press_calib_data: [wreg-fsr1h+status,2+status,0]
 18898                           ;parse_temp_press_calib_data@reg_data stored from wreg
 18899  170B  00F3               	movwf	parse_temp_press_calib_data@reg_data
 18900                           
 18901                           ;BME280_driver/bme280.c: 1357: static void parse_temp_press_calib_data(const uint8_t *re
      +                          g_data, struct bme280_dev *dev);BME280_driver/bme280.c: 1358: {;BME280_driver/bme280.c: 
      +                          1359:     struct bme280_calib_data *calib_data = &dev->calib_data;
 18902  170C  0870               	movf	parse_temp_press_calib_data@dev,w
 18903  170D  3E09               	addlw	9
 18904  170E  00F1               	movwf	??_parse_temp_press_calib_data
 18905  170F  0871               	movf	??_parse_temp_press_calib_data,w
 18906  1710  00F2               	movwf	parse_temp_press_calib_data@calib_data
 18907                           
 18908                           ;BME280_driver/bme280.c: 1361:     calib_data->dig_T1 = (((uint16_t)reg_data[1] << 8) | 
      +                          (uint16_t)reg_data[0]);
 18909  1711  0A73               	incf	parse_temp_press_calib_data@reg_data,w
 18910  1712  0084               	movwf	4
 18911  1713  0185               	clrf	5
 18912  1714  0800               	movf	0,w
 18913  1715  00F1               	movwf	??_parse_temp_press_calib_data
 18914  1716  0873               	movf	parse_temp_press_calib_data@reg_data,w
 18915  1717  0084               	movwf	4
 18916  1718  0185               	clrf	5
 18917  1719  0872               	movf	parse_temp_press_calib_data@calib_data,w
 18918  171A  0086               	movwf	6
 18919  171B  3001               	movlw	1	; select bank2/3
 18920  171C  0087               	movwf	7
 18921  171D  0800               	movf	0,w
 18922  171E  3FC0               	movwi [0]fsr1
 18923  171F  0871               	movf	??_parse_temp_press_calib_data,w
 18924  1720  3FC1               	movwi [1]fsr1
 18925                           
 18926                           ;BME280_driver/bme280.c: 1362:     calib_data->dig_T2 = (int16_t)(((uint16_t)reg_data[3]
      +                           << 8) | (uint16_t)reg_data[2]);
 18927  1721  0873               	movf	parse_temp_press_calib_data@reg_data,w
 18928  1722  3E03               	addlw	3
 18929  1723  0084               	movwf	4
 18930  1724  0185               	clrf	5
 18931  1725  0800               	movf	0,w
 18932  1726  00F1               	movwf	??_parse_temp_press_calib_data
 18933  1727  0873               	movf	parse_temp_press_calib_data@reg_data,w
 18934  1728  3E02               	addlw	2
 18935  1729  0084               	movwf	4
 18936  172A  0185               	clrf	5
 18937  172B  0872               	movf	parse_temp_press_calib_data@calib_data,w
 18938  172C  3E02               	addlw	2
 18939  172D  0086               	movwf	6
 18940  172E  3001               	movlw	1	; select bank2/3
 18941  172F  0087               	movwf	7
 18942  1730  0800               	movf	0,w
 18943  1731  3FC0               	movwi [0]fsr1
 18944  1732  0871               	movf	??_parse_temp_press_calib_data,w
 18945  1733  3FC1               	movwi [1]fsr1
 18946                           
 18947                           ;BME280_driver/bme280.c: 1363:     calib_data->dig_T3 = (int16_t)(((uint16_t)reg_data[5]
      +                           << 8) | (uint16_t)reg_data[4]);
 18948  1734  0873               	movf	parse_temp_press_calib_data@reg_data,w
 18949  1735  3E05               	addlw	5
 18950  1736  0084               	movwf	4
 18951  1737  0185               	clrf	5
 18952  1738  0800               	movf	0,w
 18953  1739  00F1               	movwf	??_parse_temp_press_calib_data
 18954  173A  0873               	movf	parse_temp_press_calib_data@reg_data,w
 18955  173B  3E04               	addlw	4
 18956  173C  0084               	movwf	4
 18957  173D  0185               	clrf	5
 18958  173E  0872               	movf	parse_temp_press_calib_data@calib_data,w
 18959  173F  3E04               	addlw	4
 18960  1740  0086               	movwf	6
 18961  1741  3001               	movlw	1	; select bank2/3
 18962  1742  0087               	movwf	7
 18963  1743  0800               	movf	0,w
 18964  1744  3FC0               	movwi [0]fsr1
 18965  1745  0871               	movf	??_parse_temp_press_calib_data,w
 18966  1746  3FC1               	movwi [1]fsr1
 18967                           
 18968                           ;BME280_driver/bme280.c: 1364:     calib_data->dig_P1 = (((uint16_t)reg_data[7] << 8) | 
      +                          (uint16_t)reg_data[6]);
 18969  1747  0873               	movf	parse_temp_press_calib_data@reg_data,w
 18970  1748  3E07               	addlw	7
 18971  1749  0084               	movwf	4
 18972  174A  0185               	clrf	5
 18973  174B  0800               	movf	0,w
 18974  174C  00F1               	movwf	??_parse_temp_press_calib_data
 18975  174D  0873               	movf	parse_temp_press_calib_data@reg_data,w
 18976  174E  3E06               	addlw	6
 18977  174F  0084               	movwf	4
 18978  1750  0185               	clrf	5
 18979  1751  0872               	movf	parse_temp_press_calib_data@calib_data,w
 18980  1752  3E06               	addlw	6
 18981  1753  0086               	movwf	6
 18982  1754  3001               	movlw	1	; select bank2/3
 18983  1755  0087               	movwf	7
 18984  1756  0800               	movf	0,w
 18985  1757  3FC0               	movwi [0]fsr1
 18986  1758  0871               	movf	??_parse_temp_press_calib_data,w
 18987  1759  3FC1               	movwi [1]fsr1
 18988                           
 18989                           ;BME280_driver/bme280.c: 1365:     calib_data->dig_P2 = (int16_t)(((uint16_t)reg_data[9]
      +                           << 8) | (uint16_t)reg_data[8]);
 18990  175A  0873               	movf	parse_temp_press_calib_data@reg_data,w
 18991  175B  3E09               	addlw	9
 18992  175C  0084               	movwf	4
 18993  175D  0185               	clrf	5
 18994  175E  0800               	movf	0,w
 18995  175F  00F1               	movwf	??_parse_temp_press_calib_data
 18996  1760  0873               	movf	parse_temp_press_calib_data@reg_data,w
 18997  1761  3E08               	addlw	8
 18998  1762  0084               	movwf	4
 18999  1763  0185               	clrf	5
 19000  1764  0872               	movf	parse_temp_press_calib_data@calib_data,w
 19001  1765  3E08               	addlw	8
 19002  1766  0086               	movwf	6
 19003  1767  3001               	movlw	1	; select bank2/3
 19004  1768  0087               	movwf	7
 19005  1769  0800               	movf	0,w
 19006  176A  3FC0               	movwi [0]fsr1
 19007  176B  0871               	movf	??_parse_temp_press_calib_data,w
 19008  176C  3FC1               	movwi [1]fsr1
 19009                           
 19010                           ;BME280_driver/bme280.c: 1366:     calib_data->dig_P3 = (int16_t)(((uint16_t)reg_data[11
      +                          ] << 8) | (uint16_t)reg_data[10]);
 19011  176D  0873               	movf	parse_temp_press_calib_data@reg_data,w
 19012  176E  3E0B               	addlw	11
 19013  176F  0084               	movwf	4
 19014  1770  0185               	clrf	5
 19015  1771  0800               	movf	0,w
 19016  1772  00F1               	movwf	??_parse_temp_press_calib_data
 19017  1773  0873               	movf	parse_temp_press_calib_data@reg_data,w
 19018  1774  3E0A               	addlw	10
 19019  1775  0084               	movwf	4
 19020  1776  0185               	clrf	5
 19021  1777  0872               	movf	parse_temp_press_calib_data@calib_data,w
 19022  1778  3E0A               	addlw	10
 19023  1779  0086               	movwf	6
 19024  177A  3001               	movlw	1	; select bank2/3
 19025  177B  0087               	movwf	7
 19026  177C  0800               	movf	0,w
 19027  177D  3FC0               	movwi [0]fsr1
 19028  177E  0871               	movf	??_parse_temp_press_calib_data,w
 19029  177F  3FC1               	movwi [1]fsr1
 19030                           
 19031                           ;BME280_driver/bme280.c: 1367:     calib_data->dig_P4 = (int16_t)(((uint16_t)reg_data[13
      +                          ] << 8) | (uint16_t)reg_data[12]);
 19032  1780  0873               	movf	parse_temp_press_calib_data@reg_data,w
 19033  1781  3E0D               	addlw	13
 19034  1782  0084               	movwf	4
 19035  1783  0185               	clrf	5
 19036  1784  0800               	movf	0,w
 19037  1785  00F1               	movwf	??_parse_temp_press_calib_data
 19038  1786  0873               	movf	parse_temp_press_calib_data@reg_data,w
 19039  1787  3E0C               	addlw	12
 19040  1788  0084               	movwf	4
 19041  1789  0185               	clrf	5
 19042  178A  0872               	movf	parse_temp_press_calib_data@calib_data,w
 19043  178B  3E0C               	addlw	12
 19044  178C  0086               	movwf	6
 19045  178D  3001               	movlw	1	; select bank2/3
 19046  178E  0087               	movwf	7
 19047  178F  0800               	movf	0,w
 19048  1790  3FC0               	movwi [0]fsr1
 19049  1791  0871               	movf	??_parse_temp_press_calib_data,w
 19050  1792  3FC1               	movwi [1]fsr1
 19051                           
 19052                           ;BME280_driver/bme280.c: 1368:     calib_data->dig_P5 = (int16_t)(((uint16_t)reg_data[15
      +                          ] << 8) | (uint16_t)reg_data[14]);
 19053  1793  0873               	movf	parse_temp_press_calib_data@reg_data,w
 19054  1794  3E0F               	addlw	15
 19055  1795  0084               	movwf	4
 19056  1796  0185               	clrf	5
 19057  1797  0800               	movf	0,w
 19058  1798  00F1               	movwf	??_parse_temp_press_calib_data
 19059  1799  0873               	movf	parse_temp_press_calib_data@reg_data,w
 19060  179A  3E0E               	addlw	14
 19061  179B  0084               	movwf	4
 19062  179C  0185               	clrf	5
 19063  179D  0872               	movf	parse_temp_press_calib_data@calib_data,w
 19064  179E  3E0E               	addlw	14
 19065  179F  0086               	movwf	6
 19066  17A0  3001               	movlw	1	; select bank2/3
 19067  17A1  0087               	movwf	7
 19068  17A2  0800               	movf	0,w
 19069  17A3  3FC0               	movwi [0]fsr1
 19070  17A4  0871               	movf	??_parse_temp_press_calib_data,w
 19071  17A5  3FC1               	movwi [1]fsr1
 19072                           
 19073                           ;BME280_driver/bme280.c: 1369:     calib_data->dig_P6 = (int16_t)(((uint16_t)reg_data[17
      +                          ] << 8) | (uint16_t)reg_data[16]);
 19074  17A6  0873               	movf	parse_temp_press_calib_data@reg_data,w
 19075  17A7  3E11               	addlw	17
 19076  17A8  0084               	movwf	4
 19077  17A9  0185               	clrf	5
 19078  17AA  0800               	movf	0,w
 19079  17AB  00F1               	movwf	??_parse_temp_press_calib_data
 19080  17AC  0873               	movf	parse_temp_press_calib_data@reg_data,w
 19081  17AD  3E10               	addlw	16
 19082  17AE  0084               	movwf	4
 19083  17AF  0185               	clrf	5
 19084  17B0  0872               	movf	parse_temp_press_calib_data@calib_data,w
 19085  17B1  3E10               	addlw	16
 19086  17B2  0086               	movwf	6
 19087  17B3  3001               	movlw	1	; select bank2/3
 19088  17B4  0087               	movwf	7
 19089  17B5  0800               	movf	0,w
 19090  17B6  3FC0               	movwi [0]fsr1
 19091  17B7  0871               	movf	??_parse_temp_press_calib_data,w
 19092  17B8  3FC1               	movwi [1]fsr1
 19093                           
 19094                           ;BME280_driver/bme280.c: 1370:     calib_data->dig_P7 = (int16_t)(((uint16_t)reg_data[19
      +                          ] << 8) | (uint16_t)reg_data[18]);
 19095  17B9  0873               	movf	parse_temp_press_calib_data@reg_data,w
 19096  17BA  3E13               	addlw	19
 19097  17BB  0084               	movwf	4
 19098  17BC  0185               	clrf	5
 19099  17BD  0800               	movf	0,w
 19100  17BE  00F1               	movwf	??_parse_temp_press_calib_data
 19101  17BF  0873               	movf	parse_temp_press_calib_data@reg_data,w
 19102  17C0  3E12               	addlw	18
 19103  17C1  0084               	movwf	4
 19104  17C2  0185               	clrf	5
 19105  17C3  0872               	movf	parse_temp_press_calib_data@calib_data,w
 19106  17C4  3E12               	addlw	18
 19107  17C5  0086               	movwf	6
 19108  17C6  3001               	movlw	1	; select bank2/3
 19109  17C7  0087               	movwf	7
 19110  17C8  0800               	movf	0,w
 19111  17C9  3FC0               	movwi [0]fsr1
 19112  17CA  0871               	movf	??_parse_temp_press_calib_data,w
 19113  17CB  3FC1               	movwi [1]fsr1
 19114                           
 19115                           ;BME280_driver/bme280.c: 1371:     calib_data->dig_P8 = (int16_t)(((uint16_t)reg_data[21
      +                          ] << 8) | (uint16_t)reg_data[20]);
 19116  17CC  0873               	movf	parse_temp_press_calib_data@reg_data,w
 19117  17CD  3E15               	addlw	21
 19118  17CE  0084               	movwf	4
 19119  17CF  0185               	clrf	5
 19120  17D0  0800               	movf	0,w
 19121  17D1  00F1               	movwf	??_parse_temp_press_calib_data
 19122  17D2  0873               	movf	parse_temp_press_calib_data@reg_data,w
 19123  17D3  3E14               	addlw	20
 19124  17D4  0084               	movwf	4
 19125  17D5  0185               	clrf	5
 19126  17D6  0872               	movf	parse_temp_press_calib_data@calib_data,w
 19127  17D7  3E14               	addlw	20
 19128  17D8  0086               	movwf	6
 19129  17D9  3001               	movlw	1	; select bank2/3
 19130  17DA  0087               	movwf	7
 19131  17DB  0800               	movf	0,w
 19132  17DC  3FC0               	movwi [0]fsr1
 19133  17DD  0871               	movf	??_parse_temp_press_calib_data,w
 19134  17DE  3FC1               	movwi [1]fsr1
 19135                           
 19136                           ;BME280_driver/bme280.c: 1372:     calib_data->dig_P9 = (int16_t)(((uint16_t)reg_data[23
      +                          ] << 8) | (uint16_t)reg_data[22]);
 19137  17DF  0873               	movf	parse_temp_press_calib_data@reg_data,w
 19138  17E0  3E17               	addlw	23
 19139  17E1  0084               	movwf	4
 19140  17E2  0185               	clrf	5
 19141  17E3  0800               	movf	0,w
 19142  17E4  00F1               	movwf	??_parse_temp_press_calib_data
 19143  17E5  0873               	movf	parse_temp_press_calib_data@reg_data,w
 19144  17E6  3E16               	addlw	22
 19145  17E7  0084               	movwf	4
 19146  17E8  0185               	clrf	5
 19147  17E9  0872               	movf	parse_temp_press_calib_data@calib_data,w
 19148  17EA  3E16               	addlw	22
 19149  17EB  0086               	movwf	6
 19150  17EC  3001               	movlw	1	; select bank2/3
 19151  17ED  0087               	movwf	7
 19152  17EE  0800               	movf	0,w
 19153  17EF  3FC0               	movwi [0]fsr1
 19154  17F0  0871               	movf	??_parse_temp_press_calib_data,w
 19155  17F1  3FC1               	movwi [1]fsr1
 19156                           
 19157                           ;BME280_driver/bme280.c: 1373:     calib_data->dig_H1 = reg_data[25];
 19158  17F2  0873               	movf	parse_temp_press_calib_data@reg_data,w
 19159  17F3  3E19               	addlw	25
 19160  17F4  0086               	movwf	6
 19161  17F5  0187               	clrf	7
 19162  17F6  0801               	movf	1,w
 19163  17F7  00F1               	movwf	??_parse_temp_press_calib_data
 19164  17F8  0872               	movf	parse_temp_press_calib_data@calib_data,w
 19165  17F9  3E18               	addlw	24
 19166  17FA  0086               	movwf	6
 19167  17FB  3001               	movlw	1	; select bank2/3
 19168  17FC  0087               	movwf	7
 19169  17FD  0871               	movf	??_parse_temp_press_calib_data,w
 19170  17FE  0081               	movwf	1
 19171  17FF  0008               	return
 19172  1800                     __end_of_parse_temp_press_calib_data:	
 19173                           
 19174                           	psect	text73
 19175  15D1                     __ptext73:	
 19176 ;; *************** function _parse_humidity_calib_data *****************
 19177 ;; Defined at:
 19178 ;;		line 1380 in file "BME280_driver/bme280.c"
 19179 ;; Parameters:    Size  Location     Type
 19180 ;;  reg_data        1    wreg     PTR const unsigned char 
 19181 ;;		 -> get_calib_data@calib_data(26), 
 19182 ;;  dev             1    0[COMMON] PTR struct bme280_dev
 19183 ;;		 -> EnvSensor(51), 
 19184 ;; Auto vars:     Size  Location     Type
 19185 ;;  reg_data        1   13[COMMON] PTR const unsigned char 
 19186 ;;		 -> get_calib_data@calib_data(26), 
 19187 ;;  dig_H5_msb      2   10[COMMON] short 
 19188 ;;  dig_H5_lsb      2    8[COMMON] short 
 19189 ;;  dig_H4_msb      2    6[COMMON] short 
 19190 ;;  dig_H4_lsb      2    4[COMMON] short 
 19191 ;;  calib_data      1   12[COMMON] PTR struct bme280_calib_
 19192 ;;		 -> EnvSensor.calib_data(37), EnvSensor(51), 
 19193 ;; Return value:  Size  Location     Type
 19194 ;;                  1    wreg      void 
 19195 ;; Registers used:
 19196 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 19197 ;; Tracked objects:
 19198 ;;		On entry : 0/0
 19199 ;;		On exit  : 0/0
 19200 ;;		Unchanged: 0/0
 19201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19202 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19203 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19204 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19205 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19206 ;;Total ram usage:       14 bytes
 19207 ;; Hardware stack levels used:    1
 19208 ;; Hardware stack levels required when called:    3
 19209 ;; This function calls:
 19210 ;;		Nothing
 19211 ;; This function is called by:
 19212 ;;		_get_calib_data
 19213 ;; This function uses a non-reentrant model
 19214 ;;
 19215                           
 19216                           
 19217                           ;psect for function _parse_humidity_calib_data
 19218  15D1                     _parse_humidity_calib_data:	
 19219                           
 19220                           ;incstack = 0
 19221                           ; Regs used in _parse_humidity_calib_data: [wreg-fsr1h+status,2+status,0]
 19222                           ;parse_humidity_calib_data@reg_data stored from wreg
 19223  15D1  00FD               	movwf	parse_humidity_calib_data@reg_data
 19224                           
 19225                           ;BME280_driver/bme280.c: 1380: static void parse_humidity_calib_data(const uint8_t *reg_
      +                          data, struct bme280_dev *dev);BME280_driver/bme280.c: 1381: {;BME280_driver/bme280.c: 13
      +                          82:     struct bme280_calib_data *calib_data = &dev->calib_data;
 19226  15D2  0870               	movf	parse_humidity_calib_data@dev,w
 19227  15D3  3E09               	addlw	9
 19228  15D4  00F1               	movwf	??_parse_humidity_calib_data
 19229  15D5  0871               	movf	??_parse_humidity_calib_data,w
 19230  15D6  00FC               	movwf	parse_humidity_calib_data@calib_data
 19231                           
 19232                           ;BME280_driver/bme280.c: 1383:     int16_t dig_H4_lsb;;BME280_driver/bme280.c: 1384:    
      +                           int16_t dig_H4_msb;;BME280_driver/bme280.c: 1385:     int16_t dig_H5_lsb;;BME280_driver
      +                          /bme280.c: 1386:     int16_t dig_H5_msb;;BME280_driver/bme280.c: 1388:     calib_data->d
      +                          ig_H2 = (int16_t)(((uint16_t)reg_data[1] << 8) | (uint16_t)reg_data[0]);
 19233  15D7  0A7D               	incf	parse_humidity_calib_data@reg_data,w
 19234  15D8  0084               	movwf	4
 19235  15D9  0185               	clrf	5
 19236  15DA  0800               	movf	0,w
 19237  15DB  00F1               	movwf	??_parse_humidity_calib_data
 19238  15DC  087D               	movf	parse_humidity_calib_data@reg_data,w
 19239  15DD  0084               	movwf	4
 19240  15DE  0185               	clrf	5
 19241  15DF  087C               	movf	parse_humidity_calib_data@calib_data,w
 19242  15E0  3E19               	addlw	25
 19243  15E1  0086               	movwf	6
 19244  15E2  3001               	movlw	1	; select bank2/3
 19245  15E3  0087               	movwf	7
 19246  15E4  0800               	movf	0,w
 19247  15E5  3FC0               	movwi [0]fsr1
 19248  15E6  0871               	movf	??_parse_humidity_calib_data,w
 19249  15E7  3FC1               	movwi [1]fsr1
 19250                           
 19251                           ;BME280_driver/bme280.c: 1389:     calib_data->dig_H3 = reg_data[2];
 19252  15E8  087D               	movf	parse_humidity_calib_data@reg_data,w
 19253  15E9  3E02               	addlw	2
 19254  15EA  0086               	movwf	6
 19255  15EB  0187               	clrf	7
 19256  15EC  0801               	movf	1,w
 19257  15ED  00F1               	movwf	??_parse_humidity_calib_data
 19258  15EE  087C               	movf	parse_humidity_calib_data@calib_data,w
 19259  15EF  3E1B               	addlw	27
 19260  15F0  0086               	movwf	6
 19261  15F1  3001               	movlw	1	; select bank2/3
 19262  15F2  0087               	movwf	7
 19263  15F3  0871               	movf	??_parse_humidity_calib_data,w
 19264  15F4  0081               	movwf	1
 19265                           
 19266                           ;BME280_driver/bme280.c: 1390:     dig_H4_msb = (int16_t)(int8_t)reg_data[3] * 16;
 19267  15F5  087D               	movf	parse_humidity_calib_data@reg_data,w
 19268  15F6  3E03               	addlw	3
 19269  15F7  0086               	movwf	6
 19270  15F8  0187               	clrf	7
 19271  15F9  0801               	movf	1,w
 19272  15FA  00F1               	movwf	??_parse_humidity_calib_data
 19273  15FB  01F2               	clrf	??_parse_humidity_calib_data+1
 19274  15FC  1BF1               	btfsc	??_parse_humidity_calib_data,7
 19275  15FD  03F2               	decf	??_parse_humidity_calib_data+1,f
 19276  15FE  0EF1               	swapf	??_parse_humidity_calib_data,f
 19277  15FF  0EF2               	swapf	??_parse_humidity_calib_data+1,f
 19278  1600  30F0               	movlw	240
 19279  1601  05F2               	andwf	??_parse_humidity_calib_data+1,f
 19280  1602  0871               	movf	??_parse_humidity_calib_data,w
 19281  1603  390F               	andlw	15
 19282  1604  04F2               	iorwf	??_parse_humidity_calib_data+1,f
 19283  1605  30F0               	movlw	240
 19284  1606  05F1               	andwf	??_parse_humidity_calib_data,f
 19285  1607  0871               	movf	??_parse_humidity_calib_data,w
 19286  1608  00F6               	movwf	parse_humidity_calib_data@dig_H4_msb
 19287  1609  0872               	movf	??_parse_humidity_calib_data+1,w
 19288  160A  00F7               	movwf	parse_humidity_calib_data@dig_H4_msb+1
 19289                           
 19290                           ;BME280_driver/bme280.c: 1391:     dig_H4_lsb = (int16_t)(reg_data[4] & 0x0F);
 19291  160B  087D               	movf	parse_humidity_calib_data@reg_data,w
 19292  160C  3E04               	addlw	4
 19293  160D  0086               	movwf	6
 19294  160E  0187               	clrf	7
 19295  160F  0801               	movf	1,w
 19296  1610  390F               	andlw	15
 19297  1611  00F1               	movwf	??_parse_humidity_calib_data
 19298  1612  01F2               	clrf	??_parse_humidity_calib_data+1
 19299  1613  0871               	movf	??_parse_humidity_calib_data,w
 19300  1614  00F4               	movwf	parse_humidity_calib_data@dig_H4_lsb
 19301  1615  0872               	movf	??_parse_humidity_calib_data+1,w
 19302  1616  00F5               	movwf	parse_humidity_calib_data@dig_H4_lsb+1
 19303                           
 19304                           ;BME280_driver/bme280.c: 1392:     calib_data->dig_H4 = dig_H4_msb | dig_H4_lsb;
 19305  1617  0874               	movf	parse_humidity_calib_data@dig_H4_lsb,w
 19306  1618  0476               	iorwf	parse_humidity_calib_data@dig_H4_msb,w
 19307  1619  00F1               	movwf	??_parse_humidity_calib_data
 19308  161A  0875               	movf	parse_humidity_calib_data@dig_H4_lsb+1,w
 19309  161B  0477               	iorwf	parse_humidity_calib_data@dig_H4_msb+1,w
 19310  161C  00F2               	movwf	??_parse_humidity_calib_data+1
 19311  161D  087C               	movf	parse_humidity_calib_data@calib_data,w
 19312  161E  3E1C               	addlw	28
 19313  161F  0086               	movwf	6
 19314  1620  3001               	movlw	1	; select bank2/3
 19315  1621  0087               	movwf	7
 19316  1622  0871               	movf	??_parse_humidity_calib_data,w
 19317  1623  3FC0               	movwi [0]fsr1
 19318  1624  0872               	movf	??_parse_humidity_calib_data+1,w
 19319  1625  3FC1               	movwi [1]fsr1
 19320                           
 19321                           ;BME280_driver/bme280.c: 1393:     dig_H5_msb = (int16_t)(int8_t)reg_data[5] * 16;
 19322  1626  087D               	movf	parse_humidity_calib_data@reg_data,w
 19323  1627  3E05               	addlw	5
 19324  1628  0086               	movwf	6
 19325  1629  0187               	clrf	7
 19326  162A  0801               	movf	1,w
 19327  162B  00F1               	movwf	??_parse_humidity_calib_data
 19328  162C  01F2               	clrf	??_parse_humidity_calib_data+1
 19329  162D  1BF1               	btfsc	??_parse_humidity_calib_data,7
 19330  162E  03F2               	decf	??_parse_humidity_calib_data+1,f
 19331  162F  0EF1               	swapf	??_parse_humidity_calib_data,f
 19332  1630  0EF2               	swapf	??_parse_humidity_calib_data+1,f
 19333  1631  30F0               	movlw	240
 19334  1632  05F2               	andwf	??_parse_humidity_calib_data+1,f
 19335  1633  0871               	movf	??_parse_humidity_calib_data,w
 19336  1634  390F               	andlw	15
 19337  1635  04F2               	iorwf	??_parse_humidity_calib_data+1,f
 19338  1636  30F0               	movlw	240
 19339  1637  05F1               	andwf	??_parse_humidity_calib_data,f
 19340  1638  0871               	movf	??_parse_humidity_calib_data,w
 19341  1639  00FA               	movwf	parse_humidity_calib_data@dig_H5_msb
 19342  163A  0872               	movf	??_parse_humidity_calib_data+1,w
 19343  163B  00FB               	movwf	parse_humidity_calib_data@dig_H5_msb+1
 19344                           
 19345                           ;BME280_driver/bme280.c: 1394:     dig_H5_lsb = (int16_t)(reg_data[4] >> 4);
 19346  163C  087D               	movf	parse_humidity_calib_data@reg_data,w
 19347  163D  3E04               	addlw	4
 19348  163E  0086               	movwf	6
 19349  163F  0187               	clrf	7
 19350  1640  0801               	movf	1,w
 19351  1641  00F1               	movwf	??_parse_humidity_calib_data
 19352  1642  3004               	movlw	4
 19353  1643                     u2805:	
 19354  1643  36F1               	lsrf	??_parse_humidity_calib_data,f
 19355  1644  0B89               	decfsz	9,f
 19356  1645  2E43               	goto	u2805
 19357  1646  0871               	movf	??_parse_humidity_calib_data,w
 19358  1647  00F2               	movwf	??_parse_humidity_calib_data+1
 19359  1648  01F3               	clrf	??_parse_humidity_calib_data+2
 19360  1649  0872               	movf	??_parse_humidity_calib_data+1,w
 19361  164A  00F8               	movwf	parse_humidity_calib_data@dig_H5_lsb
 19362  164B  0873               	movf	??_parse_humidity_calib_data+2,w
 19363  164C  00F9               	movwf	parse_humidity_calib_data@dig_H5_lsb+1
 19364                           
 19365                           ;BME280_driver/bme280.c: 1395:     calib_data->dig_H5 = dig_H5_msb | dig_H5_lsb;
 19366  164D  0878               	movf	parse_humidity_calib_data@dig_H5_lsb,w
 19367  164E  047A               	iorwf	parse_humidity_calib_data@dig_H5_msb,w
 19368  164F  00F1               	movwf	??_parse_humidity_calib_data
 19369  1650  0879               	movf	parse_humidity_calib_data@dig_H5_lsb+1,w
 19370  1651  047B               	iorwf	parse_humidity_calib_data@dig_H5_msb+1,w
 19371  1652  00F2               	movwf	??_parse_humidity_calib_data+1
 19372  1653  087C               	movf	parse_humidity_calib_data@calib_data,w
 19373  1654  3E1E               	addlw	30
 19374  1655  0086               	movwf	6
 19375  1656  3001               	movlw	1	; select bank2/3
 19376  1657  0087               	movwf	7
 19377  1658  0871               	movf	??_parse_humidity_calib_data,w
 19378  1659  3FC0               	movwi [0]fsr1
 19379  165A  0872               	movf	??_parse_humidity_calib_data+1,w
 19380  165B  3FC1               	movwi [1]fsr1
 19381                           
 19382                           ;BME280_driver/bme280.c: 1396:     calib_data->dig_H6 = (int8_t)reg_data[6];
 19383  165C  087D               	movf	parse_humidity_calib_data@reg_data,w
 19384  165D  3E06               	addlw	6
 19385  165E  0086               	movwf	6
 19386  165F  0187               	clrf	7
 19387  1660  0801               	movf	1,w
 19388  1661  00F1               	movwf	??_parse_humidity_calib_data
 19389  1662  087C               	movf	parse_humidity_calib_data@calib_data,w
 19390  1663  3E20               	addlw	32
 19391  1664  0086               	movwf	6
 19392  1665  3001               	movlw	1	; select bank2/3
 19393  1666  0087               	movwf	7
 19394  1667  0871               	movf	??_parse_humidity_calib_data,w
 19395  1668  0081               	movwf	1
 19396  1669  0008               	return
 19397  166A                     __end_of_parse_humidity_calib_data:	
 19398                           
 19399                           	psect	text74
 19400  1C1D                     __ptext74:	
 19401 ;; *************** function _bme280_get_regs *****************
 19402 ;; Defined at:
 19403 ;;		line 408 in file "BME280_driver/bme280.c"
 19404 ;; Parameters:    Size  Location     Type
 19405 ;;  reg_addr        1    wreg     unsigned char 
 19406 ;;  reg_data        1   23[BANK0 ] PTR unsigned char 
 19407 ;;		 -> get_calib_data@calib_data(26), put_device_to_sleep@reg_data(4), write_power_mode@sensor_mode_reg_val(1), set_fil
      +ter_standby_settings@reg_data(1), 
 19408 ;;		 -> set_osr_press_temp_settings@reg_data(1), set_osr_humidity_settings@ctrl_meas(1), bme280_get_sensor_data@reg_data
      +(8), bme280_set_sensor_mode@last_set_mode(1), 
 19409 ;;		 -> bme280_get_sensor_settings@reg_data(4), bme280_set_sensor_settings@sensor_mode(1), bme280_init@chip_id(1), 
 19410 ;;  len             2   24[BANK0 ] unsigned short 
 19411 ;;  dev             1   26[BANK0 ] PTR const struct bme280_
 19412 ;;		 -> EnvSensor(51), 
 19413 ;; Auto vars:     Size  Location     Type
 19414 ;;  reg_addr        1   30[BANK0 ] unsigned char 
 19415 ;;  rslt            1   31[BANK0 ] char 
 19416 ;; Return value:  Size  Location     Type
 19417 ;;                  1    wreg      char 
 19418 ;; Registers used:
 19419 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19420 ;; Tracked objects:
 19421 ;;		On entry : 0/0
 19422 ;;		On exit  : 0/0
 19423 ;;		Unchanged: 0/0
 19424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19425 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19426 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19427 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19428 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19429 ;;Total ram usage:        9 bytes
 19430 ;; Hardware stack levels used:    1
 19431 ;; Hardware stack levels required when called:   10
 19432 ;; This function calls:
 19433 ;;		_ReadEnvSensor
 19434 ;;		_null_ptr_check
 19435 ;; This function is called by:
 19436 ;;		_bme280_init
 19437 ;;		_bme280_get_sensor_mode
 19438 ;;		_bme280_get_sensor_data
 19439 ;;		_set_osr_humidity_settings
 19440 ;;		_set_osr_press_temp_settings
 19441 ;;		_set_filter_standby_settings
 19442 ;;		_write_power_mode
 19443 ;;		_put_device_to_sleep
 19444 ;;		_get_calib_data
 19445 ;;		_bme280_get_sensor_settings
 19446 ;; This function uses a non-reentrant model
 19447 ;;
 19448                           
 19449                           
 19450                           ;psect for function _bme280_get_regs
 19451  1C1D                     _bme280_get_regs:	
 19452                           
 19453                           ;incstack = 0
 19454                           ; Regs used in _bme280_get_regs: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 19455                           ;bme280_get_regs@reg_addr stored from wreg
 19456  1C1D  0140               	movlb	0	; select bank0
 19457  1C1E  00BE               	movwf	bme280_get_regs@reg_addr
 19458                           
 19459                           ;BME280_driver/bme280.c: 408: int8_t bme280_get_regs(uint8_t reg_addr, uint8_t *reg_data
      +                          , uint16_t len, const struct bme280_dev *dev);BME280_driver/bme280.c: 409: {;BME280_driv
      +                          er/bme280.c: 410:     int8_t rslt;;BME280_driver/bme280.c: 413:     rslt = null_ptr_chec
      +                          k(dev);
 19460  1C1F  083A               	movf	bme280_get_regs@dev,w
 19461  1C20  31A7  2790  319C   	fcall	_null_ptr_check
 19462  1C23  0140               	movlb	0	; select bank0
 19463  1C24  00BB               	movwf	??_bme280_get_regs
 19464  1C25  083B               	movf	??_bme280_get_regs,w
 19465  1C26  00BF               	movwf	bme280_get_regs@rslt
 19466                           
 19467                           ;BME280_driver/bme280.c: 416:     if (rslt == 0)
 19468  1C27  083F               	movf	bme280_get_regs@rslt,w
 19469  1C28  1D03               	btfss	3,2
 19470  1C29  2C5F               	goto	l65
 19471                           
 19472                           ;BME280_driver/bme280.c: 417:     {;BME280_driver/bme280.c: 419:         if (dev->intf !
      +                          = BME280_I2C_INTF)
 19473  1C2A  083A               	movf	bme280_get_regs@dev,w
 19474  1C2B  3E02               	addlw	2
 19475  1C2C  0086               	movwf	6
 19476  1C2D  3001               	movlw	1	; select bank2/3
 19477  1C2E  0087               	movwf	7
 19478  1C2F  0301               	decf	1,w
 19479  1C30  1903               	btfsc	3,2
 19480  1C31  2C37               	goto	l5018
 19481                           
 19482                           ;BME280_driver/bme280.c: 420:         {;BME280_driver/bme280.c: 421:             reg_add
      +                          r = reg_addr | 0x80;
 19483  1C32  083E               	movf	bme280_get_regs@reg_addr,w
 19484  1C33  3880               	iorlw	128
 19485  1C34  00BB               	movwf	??_bme280_get_regs
 19486  1C35  083B               	movf	??_bme280_get_regs,w
 19487  1C36  00BE               	movwf	bme280_get_regs@reg_addr
 19488  1C37                     l5018:	
 19489                           
 19490                           ;BME280_driver/bme280.c: 425:         rslt = dev->read(dev->dev_id, reg_addr, reg_data, 
      +                          len);
 19491  1C37  083A               	movf	bme280_get_regs@dev,w
 19492  1C38  0086               	movwf	6
 19493  1C39  3001               	movlw	1	; select bank2/3
 19494  1C3A  0087               	movwf	7
 19495  1C3B  3001               	movlw	1	; select bank2/3
 19496  1C3C  3F41               	moviw [1]fsr1
 19497  1C3D  00AD               	movwf	ReadEnvSensor@dev_id
 19498  1C3E  083E               	movf	bme280_get_regs@reg_addr,w
 19499  1C3F  00BB               	movwf	??_bme280_get_regs
 19500  1C40  083B               	movf	??_bme280_get_regs,w
 19501  1C41  00AE               	movwf	ReadEnvSensor@reg_addr
 19502  1C42  0837               	movf	bme280_get_regs@reg_data,w
 19503  1C43  00BC               	movwf	??_bme280_get_regs+1
 19504  1C44  083C               	movf	??_bme280_get_regs+1,w
 19505  1C45  00AF               	movwf	ReadEnvSensor@reg_data
 19506  1C46  0839               	movf	bme280_get_regs@len+1,w
 19507  1C47  00B1               	movwf	ReadEnvSensor@len+1
 19508  1C48  0838               	movf	bme280_get_regs@len,w
 19509  1C49  00B0               	movwf	ReadEnvSensor@len
 19510  1C4A  083A               	movf	bme280_get_regs@dev,w
 19511  1C4B  3E03               	addlw	3
 19512  1C4C  0086               	movwf	6
 19513  1C4D  3001               	movlw	1	; select bank2/3
 19514  1C4E  0087               	movwf	7
 19515  1C4F  3F41               	moviw [1]fsr1
 19516  1C50  008A               	movwf	10
 19517  1C51  3F40               	moviw [0]fsr1
 19518  1C52  000A               	callw
 19519  1C53  319C               	pagesel	$
 19520  1C54  0140               	movlb	0	; select bank0
 19521  1C55  00BD               	movwf	??_bme280_get_regs+2
 19522  1C56  083D               	movf	??_bme280_get_regs+2,w
 19523  1C57  00BF               	movwf	bme280_get_regs@rslt
 19524                           
 19525                           ;BME280_driver/bme280.c: 428:         if (rslt != 0)
 19526  1C58  083F               	movf	bme280_get_regs@rslt,w
 19527  1C59  1903               	btfsc	3,2
 19528  1C5A  2C5F               	goto	l65
 19529                           
 19530                           ;BME280_driver/bme280.c: 429:         {;BME280_driver/bme280.c: 430:             rslt = 
      +                          -4;
 19531  1C5B  30FC               	movlw	252
 19532  1C5C  00BB               	movwf	??_bme280_get_regs
 19533  1C5D  083B               	movf	??_bme280_get_regs,w
 19534  1C5E  00BF               	movwf	bme280_get_regs@rslt
 19535  1C5F                     l65:	
 19536                           ;BME280_driver/bme280.c: 432:     }
 19537                           
 19538                           
 19539                           ;BME280_driver/bme280.c: 434:     return rslt;
 19540  1C5F  083F               	movf	bme280_get_regs@rslt,w
 19541  1C60  0008               	return
 19542  1C61                     __end_of_bme280_get_regs:	
 19543                           
 19544                           	psect	text75
 19545  1E13                     __ptext75:	
 19546 ;; *************** function _ReadEnvSensor *****************
 19547 ;; Defined at:
 19548 ;;		line 128 in file "bme280_i2c.c"
 19549 ;; Parameters:    Size  Location     Type
 19550 ;;  dev_id          1   13[BANK0 ] unsigned char 
 19551 ;;  reg_addr        1   14[BANK0 ] unsigned char 
 19552 ;;  reg_data        1   15[BANK0 ] PTR unsigned char 
 19553 ;;		 -> get_calib_data@calib_data(26), put_device_to_sleep@reg_data(4), write_power_mode@sensor_mode_reg_val(1), set_fil
      +ter_standby_settings@reg_data(1), 
 19554 ;;		 -> set_osr_press_temp_settings@reg_data(1), set_osr_humidity_settings@ctrl_meas(1), bme280_get_sensor_data@reg_data
      +(8), bme280_set_sensor_mode@last_set_mode(1), 
 19555 ;;		 -> bme280_get_sensor_settings@reg_data(4), bme280_set_sensor_settings@sensor_mode(1), bme280_init@chip_id(1), 
 19556 ;;  len             2   16[BANK0 ] unsigned short 
 19557 ;; Auto vars:     Size  Location     Type
 19558 ;;  i               2   21[BANK0 ] int 
 19559 ;;  rslt            1   20[BANK0 ] char 
 19560 ;; Return value:  Size  Location     Type
 19561 ;;                  1    wreg      char 
 19562 ;; Registers used:
 19563 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19564 ;; Tracked objects:
 19565 ;;		On entry : 0/0
 19566 ;;		On exit  : 0/0
 19567 ;;		Unchanged: 0/0
 19568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19569 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19570 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19571 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19572 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19573 ;;Total ram usage:       10 bytes
 19574 ;; Hardware stack levels used:    1
 19575 ;; Hardware stack levels required when called:    9
 19576 ;; This function calls:
 19577 ;;		_I2C_ReadByte
 19578 ;;		_I2C_Stop
 19579 ;;		_I2C_Wait_SSPIF
 19580 ;;		_I2C_WriteByte
 19581 ;; This function is called by:
 19582 ;;		_BME280_Init
 19583 ;;		_bme280_get_regs
 19584 ;; This function uses a non-reentrant model
 19585 ;;
 19586                           
 19587                           
 19588                           ;psect for function _ReadEnvSensor
 19589  1E13                     _ReadEnvSensor:	
 19590                           
 19591                           ;bme280_i2c.c: 128: int8_t ReadEnvSensor(uint8_t dev_id, uint8_t reg_addr, uint8_t *reg_
      +                          data, uint16_t len);bme280_i2c.c: 129: {;bme280_i2c.c: 130:     int8_t rslt = 0;
 19592                           
 19593                           ;incstack = 0
 19594                           ; Regs used in _ReadEnvSensor: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 19595  1E13  0140               	movlb	0	; select bank0
 19596  1E14  01B4               	clrf	ReadEnvSensor@rslt
 19597                           
 19598                           ;bme280_i2c.c: 132:     PIR3bits.SSP1IF = 0;
 19599  1E15  014E               	movlb	14	; select bank14
 19600  1E16  100F               	bcf	15,0	;volatile
 19601                           
 19602                           ;bme280_i2c.c: 135:     SSP1CON2bits.SEN = 1;
 19603  1E17  0143               	movlb	3	; select bank3
 19604  1E18  1411               	bsf	17,0	;volatile
 19605                           
 19606                           ;bme280_i2c.c: 136:     I2C_Wait_SSPIF();
 19607  1E19  319D  2532  319E   	fcall	_I2C_Wait_SSPIF
 19608                           
 19609                           ;bme280_i2c.c: 139:     I2C_WriteByte(dev_id << 1);
 19610  1E1C  0140               	movlb	0	; select bank0
 19611  1E1D  352D               	lslf	ReadEnvSensor@dev_id,w
 19612  1E1E  31A6  2635  319E   	fcall	_I2C_WriteByte
 19613                           
 19614                           ;bme280_i2c.c: 142:     I2C_WriteByte(reg_addr);
 19615  1E21  0140               	movlb	0	; select bank0
 19616  1E22  082E               	movf	ReadEnvSensor@reg_addr,w
 19617  1E23  31A6  2635  319E   	fcall	_I2C_WriteByte
 19618                           
 19619                           ;bme280_i2c.c: 145:     SSP1CON2bits.RSEN = 1;
 19620  1E26  0143               	movlb	3	; select bank3
 19621  1E27  1491               	bsf	17,1	;volatile
 19622                           
 19623                           ;bme280_i2c.c: 146:     I2C_Wait_SSPIF();
 19624  1E28  319D  2532  319E   	fcall	_I2C_Wait_SSPIF
 19625                           
 19626                           ;bme280_i2c.c: 149:     I2C_WriteByte((dev_id << 1) | 0x01);
 19627  1E2B  1403               	setc
 19628  1E2C  0140               	movlb	0	; select bank0
 19629  1E2D  0D2D               	rlf	ReadEnvSensor@dev_id,w
 19630  1E2E  31A6  2635  319E   	fcall	_I2C_WriteByte
 19631                           
 19632                           ;bme280_i2c.c: 152:     for (int i = 0; i < len; i++)
 19633  1E31  0140               	movlb	0	; select bank0
 19634  1E32  01B5               	clrf	ReadEnvSensor@i
 19635  1E33  01B6               	clrf	ReadEnvSensor@i+1
 19636  1E34                     l4976:	
 19637  1E34  0831               	movf	ReadEnvSensor@len+1,w
 19638  1E35  0236               	subwf	ReadEnvSensor@i+1,w
 19639  1E36  1D03               	skipz
 19640  1E37  2E3A               	goto	u4775
 19641  1E38  0830               	movf	ReadEnvSensor@len,w
 19642  1E39  0235               	subwf	ReadEnvSensor@i,w
 19643  1E3A                     u4775:	
 19644  1E3A  1803               	btfsc	3,0
 19645  1E3B  2E5F               	goto	l4978
 19646                           
 19647                           ;bme280_i2c.c: 153:     {;bme280_i2c.c: 154:         if (i == len - 1)
 19648  1E3C  0830               	movf	ReadEnvSensor@len,w
 19649  1E3D  3EFF               	addlw	255
 19650  1E3E  00B2               	movwf	??_ReadEnvSensor
 19651  1E3F  30FF               	movlw	255
 19652  1E40  3D31               	addwfc	ReadEnvSensor@len+1,w
 19653  1E41  00B3               	movwf	??_ReadEnvSensor+1
 19654  1E42  0836               	movf	ReadEnvSensor@i+1,w
 19655  1E43  0633               	xorwf	??_ReadEnvSensor+1,w
 19656  1E44  1D03               	skipz
 19657  1E45  2E48               	goto	u4765
 19658  1E46  0835               	movf	ReadEnvSensor@i,w
 19659  1E47  0632               	xorwf	??_ReadEnvSensor,w
 19660  1E48                     u4765:	
 19661  1E48  1D03               	skipz
 19662  1E49  2E4C               	goto	l4972
 19663                           
 19664                           ;bme280_i2c.c: 155:         {;bme280_i2c.c: 156:             reg_data[i] = I2C_ReadByte(
      +                          1);
 19665  1E4A  3001               	movlw	1
 19666  1E4B  2E4D               	goto	L5
 19667  1E4C                     l4972:	
 19668                           ;bme280_i2c.c: 157:         }
 19669                           
 19670                           
 19671                           ;bme280_i2c.c: 159:         {;bme280_i2c.c: 160:             reg_data[i]=I2C_ReadByte(0)
      +                          ;
 19672  1E4C  3000               	movlw	0
 19673  1E4D                     L5:	
 19674  1E4D  31A6  26CF  319E   	fcall	_I2C_ReadByte
 19675  1E50  0140               	movlb	0	; select bank0
 19676  1E51  00B2               	movwf	??_ReadEnvSensor
 19677  1E52  0835               	movf	ReadEnvSensor@i,w
 19678  1E53  072F               	addwf	ReadEnvSensor@reg_data,w
 19679  1E54  00B3               	movwf	??_ReadEnvSensor+1
 19680  1E55  0833               	movf	??_ReadEnvSensor+1,w
 19681  1E56  0086               	movwf	6
 19682  1E57  0187               	clrf	7
 19683  1E58  0832               	movf	??_ReadEnvSensor,w
 19684  1E59  0081               	movwf	1
 19685                           
 19686                           ;bme280_i2c.c: 162:     }
 19687  1E5A  3001               	movlw	1
 19688  1E5B  07B5               	addwf	ReadEnvSensor@i,f
 19689  1E5C  3000               	movlw	0
 19690  1E5D  3DB6               	addwfc	ReadEnvSensor@i+1,f
 19691  1E5E  2E34               	goto	l4976
 19692  1E5F                     l4978:	
 19693                           
 19694                           ;bme280_i2c.c: 165:     I2C_Stop();
 19695  1E5F  31A5  25AF         	fcall	_I2C_Stop
 19696                           
 19697                           ;bme280_i2c.c: 167:     return rslt;
 19698  1E61  0140               	movlb	0	; select bank0
 19699  1E62  0834               	movf	ReadEnvSensor@rslt,w
 19700  1E63  0008               	return
 19701  1E64                     __end_of_ReadEnvSensor:	
 19702                           
 19703                           	psect	text76
 19704  26CF                     __ptext76:	
 19705 ;; *************** function _I2C_ReadByte *****************
 19706 ;; Defined at:
 19707 ;;		line 54 in file "bme280_i2c.c"
 19708 ;; Parameters:    Size  Location     Type
 19709 ;;  ackbit          1    wreg     unsigned char 
 19710 ;; Auto vars:     Size  Location     Type
 19711 ;;  ackbit          1   11[BANK0 ] unsigned char 
 19712 ;;  rcvdata         1   12[BANK0 ] unsigned char 
 19713 ;; Return value:  Size  Location     Type
 19714 ;;                  1    wreg      unsigned char 
 19715 ;; Registers used:
 19716 ;;		wreg, status,2, status,0, pclath, cstack
 19717 ;; Tracked objects:
 19718 ;;		On entry : 0/0
 19719 ;;		On exit  : 0/0
 19720 ;;		Unchanged: 0/0
 19721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19723 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19724 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19725 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19726 ;;Total ram usage:        3 bytes
 19727 ;; Hardware stack levels used:    1
 19728 ;; Hardware stack levels required when called:    6
 19729 ;; This function calls:
 19730 ;;		_I2C_Wait_SSPIF
 19731 ;; This function is called by:
 19732 ;;		_ReadEnvSensor
 19733 ;; This function uses a non-reentrant model
 19734 ;;
 19735                           
 19736                           
 19737                           ;psect for function _I2C_ReadByte
 19738  26CF                     _I2C_ReadByte:	
 19739                           
 19740                           ;incstack = 0
 19741                           ; Regs used in _I2C_ReadByte: [wreg+status,2+status,0+pclath+cstack]
 19742                           ;I2C_ReadByte@ackbit stored from wreg
 19743  26CF  0140               	movlb	0	; select bank0
 19744  26D0  00AB               	movwf	I2C_ReadByte@ackbit
 19745                           
 19746                           ;bme280_i2c.c: 54: uint8_t I2C_ReadByte(uint8_t ackbit);bme280_i2c.c: 55: {;bme280_i2c.c
      +                          : 56:     uint8_t rcvdata;;bme280_i2c.c: 58:     SSP1CON2bits.RCEN = 1;
 19747  26D1  0143               	movlb	3	; select bank3
 19748  26D2  1591               	bsf	17,3	;volatile
 19749                           
 19750                           ;bme280_i2c.c: 59:     I2C_Wait_SSPIF();
 19751  26D3  319D  2532  31A6   	fcall	_I2C_Wait_SSPIF
 19752                           
 19753                           ;bme280_i2c.c: 61:     rcvdata = SSP1BUF;
 19754  26D6  0143               	movlb	3	; select bank3
 19755  26D7  080C               	movf	12,w	;volatile
 19756  26D8  00FD               	movwf	??_I2C_ReadByte
 19757  26D9  087D               	movf	??_I2C_ReadByte,w
 19758  26DA  0140               	movlb	0	; select bank0
 19759  26DB  00AC               	movwf	I2C_ReadByte@rcvdata
 19760                           
 19761                           ;bme280_i2c.c: 64:     SSP1CON2bits.ACKDT = ackbit;
 19762  26DC  0C2B               	rrf	I2C_ReadByte@ackbit,w
 19763  26DD  0143               	movlb	3	; select bank3
 19764  26DE  1C03               	skipc
 19765  26DF  1291               	bcf	17,5	;volatile
 19766  26E0  1803               	skipnc
 19767  26E1  1691               	bsf	17,5	;volatile
 19768                           
 19769                           ;bme280_i2c.c: 65:     SSP1CON2bits.ACKEN = 1;
 19770  26E2  1611               	bsf	17,4	;volatile
 19771                           
 19772                           ;bme280_i2c.c: 66:     I2C_Wait_SSPIF();
 19773  26E3  319D  2532         	fcall	_I2C_Wait_SSPIF
 19774                           
 19775                           ;bme280_i2c.c: 68:     return (rcvdata);
 19776  26E5  0140               	movlb	0	; select bank0
 19777  26E6  082C               	movf	I2C_ReadByte@rcvdata,w
 19778  26E7  0008               	return
 19779  26E8                     __end_of_I2C_ReadByte:	
 19780                           
 19781                           	psect	text77
 19782  1B1D                     __ptext77:	
 19783 ;; *************** function _bme280_soft_reset *****************
 19784 ;; Defined at:
 19785 ;;		line 630 in file "BME280_driver/bme280.c"
 19786 ;; Parameters:    Size  Location     Type
 19787 ;;  dev             1    wreg     PTR const struct bme280_
 19788 ;;		 -> EnvSensor(51), 
 19789 ;; Auto vars:     Size  Location     Type
 19790 ;;  dev             1   57[BANK0 ] PTR const struct bme280_
 19791 ;;		 -> EnvSensor(51), 
 19792 ;;  reg_addr        1   56[BANK0 ] unsigned char 
 19793 ;;  rslt            1   55[BANK0 ] char 
 19794 ;;  soft_rst_cmd    1   54[BANK0 ] unsigned char 
 19795 ;; Return value:  Size  Location     Type
 19796 ;;                  1    wreg      char 
 19797 ;; Registers used:
 19798 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19799 ;; Tracked objects:
 19800 ;;		On entry : 0/0
 19801 ;;		On exit  : 0/0
 19802 ;;		Unchanged: 0/0
 19803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19805 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19806 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19807 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19808 ;;Total ram usage:        7 bytes
 19809 ;; Hardware stack levels used:    1
 19810 ;; Hardware stack levels required when called:   11
 19811 ;; This function calls:
 19812 ;;		_Sleep
 19813 ;;		_bme280_set_regs
 19814 ;;		_null_ptr_check
 19815 ;; This function is called by:
 19816 ;;		_bme280_init
 19817 ;;		_put_device_to_sleep
 19818 ;; This function uses a non-reentrant model
 19819 ;;
 19820                           
 19821                           
 19822                           ;psect for function _bme280_soft_reset
 19823  1B1D                     _bme280_soft_reset:	
 19824                           
 19825                           ;incstack = 0
 19826                           ; Regs used in _bme280_soft_reset: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 19827                           ;bme280_soft_reset@dev stored from wreg
 19828  1B1D  0140               	movlb	0	; select bank0
 19829  1B1E  00D9               	movwf	bme280_soft_reset@dev
 19830                           
 19831                           ;BME280_driver/bme280.c: 630: int8_t bme280_soft_reset(const struct bme280_dev *dev);BME
      +                          280_driver/bme280.c: 631: {;BME280_driver/bme280.c: 632:     int8_t rslt;;BME280_driver/
      +                          bme280.c: 633:     uint8_t reg_addr = 0xE0;
 19832  1B1F  30E0               	movlw	224
 19833  1B20  00D3               	movwf	??_bme280_soft_reset
 19834  1B21  0853               	movf	??_bme280_soft_reset,w
 19835  1B22  00D8               	movwf	bme280_soft_reset@reg_addr
 19836                           
 19837                           ;BME280_driver/bme280.c: 636:     uint8_t soft_rst_cmd = 0xB6;
 19838  1B23  30B6               	movlw	182
 19839  1B24  00D3               	movwf	??_bme280_soft_reset
 19840  1B25  0853               	movf	??_bme280_soft_reset,w
 19841  1B26  00D6               	movwf	bme280_soft_reset@soft_rst_cmd
 19842                           
 19843                           ;BME280_driver/bme280.c: 639:     rslt = null_ptr_check(dev);
 19844  1B27  0859               	movf	bme280_soft_reset@dev,w
 19845  1B28  31A7  2790  319B   	fcall	_null_ptr_check
 19846  1B2B  0140               	movlb	0	; select bank0
 19847  1B2C  00D3               	movwf	??_bme280_soft_reset
 19848  1B2D  0853               	movf	??_bme280_soft_reset,w
 19849  1B2E  00D7               	movwf	bme280_soft_reset@rslt
 19850                           
 19851                           ;BME280_driver/bme280.c: 642:     if (rslt == 0)
 19852  1B2F  0857               	movf	bme280_soft_reset@rslt,w
 19853  1B30  1D03               	btfss	3,2
 19854  1B31  2B56               	goto	l5158
 19855                           
 19856                           ;BME280_driver/bme280.c: 643:     {;BME280_driver/bme280.c: 645:         rslt = bme280_s
      +                          et_regs(&reg_addr, &soft_rst_cmd, 1, dev);
 19857  1B32  3056               	movlw	(low (bme280_soft_reset@soft_rst_cmd| 0))& (0+255)
 19858  1B33  00D3               	movwf	??_bme280_soft_reset
 19859  1B34  0853               	movf	??_bme280_soft_reset,w
 19860  1B35  00B4               	movwf	bme280_set_regs@reg_data
 19861  1B36  01B5               	clrf	bme280_set_regs@len
 19862  1B37  0AB5               	incf	bme280_set_regs@len,f
 19863  1B38  0859               	movf	bme280_soft_reset@dev,w
 19864  1B39  00D4               	movwf	??_bme280_soft_reset+1
 19865  1B3A  0854               	movf	??_bme280_soft_reset+1,w
 19866  1B3B  00B6               	movwf	bme280_set_regs@dev
 19867  1B3C  3058               	movlw	(low (bme280_soft_reset@reg_addr| 0))& (0+255)
 19868  1B3D  3196  266A  319B   	fcall	_bme280_set_regs
 19869  1B40  0140               	movlb	0	; select bank0
 19870  1B41  00D5               	movwf	??_bme280_soft_reset+2
 19871  1B42  0855               	movf	??_bme280_soft_reset+2,w
 19872  1B43  00D7               	movwf	bme280_soft_reset@rslt
 19873                           
 19874                           ;BME280_driver/bme280.c: 648:         dev->delay_ms(2);
 19875  1B44  3000               	movlw	0
 19876  1B45  00F3               	movwf	Sleep@ms+3
 19877  1B46  3000               	movlw	0
 19878  1B47  00F2               	movwf	Sleep@ms+2
 19879  1B48  3000               	movlw	0
 19880  1B49  00F1               	movwf	Sleep@ms+1
 19881  1B4A  3002               	movlw	2
 19882  1B4B  00F0               	movwf	Sleep@ms
 19883  1B4C  0859               	movf	bme280_soft_reset@dev,w
 19884  1B4D  3E07               	addlw	7
 19885  1B4E  0086               	movwf	6
 19886  1B4F  3001               	movlw	1	; select bank2/3
 19887  1B50  0087               	movwf	7
 19888  1B51  3F41               	moviw [1]fsr1
 19889  1B52  008A               	movwf	10
 19890  1B53  3F40               	moviw [0]fsr1
 19891  1B54  000A               	callw
 19892  1B55  319B               	pagesel	$
 19893  1B56                     l5158:	
 19894                           
 19895                           ;BME280_driver/bme280.c: 651:     return rslt;
 19896  1B56  0140               	movlb	0	; select bank0
 19897  1B57  0857               	movf	bme280_soft_reset@rslt,w
 19898  1B58  0008               	return
 19899  1B59                     __end_of_bme280_soft_reset:	
 19900                           
 19901                           	psect	text78
 19902  166A                     __ptext78:	
 19903 ;; *************** function _bme280_set_regs *****************
 19904 ;; Defined at:
 19905 ;;		line 441 in file "BME280_driver/bme280.c"
 19906 ;; Parameters:    Size  Location     Type
 19907 ;;  reg_addr        1    wreg     PTR unsigned char 
 19908 ;;		 -> write_power_mode@reg_addr(1), set_filter_standby_settings@reg_addr(1), set_osr_press_temp_settings@reg_addr(1), 
      +set_osr_humidity_settings@reg_addr(1), 
 19909 ;;		 -> bme280_soft_reset@reg_addr(1), 
 19910 ;;  reg_data        1   20[BANK0 ] PTR const unsigned char 
 19911 ;;		 -> write_power_mode@sensor_mode_reg_val(1), set_filter_standby_settings@reg_data(1), set_osr_press_temp_settings@re
      +g_data(1), set_osr_humidity_settings@ctrl_meas(1), 
 19912 ;;		 -> set_osr_humidity_settings@ctrl_hum(1), bme280_soft_reset@soft_rst_cmd(1), 
 19913 ;;  len             1   21[BANK0 ] unsigned char 
 19914 ;;  dev             1   22[BANK0 ] PTR const struct bme280_
 19915 ;;		 -> EnvSensor(51), 
 19916 ;; Auto vars:     Size  Location     Type
 19917 ;;  reg_addr        1   50[BANK0 ] PTR unsigned char 
 19918 ;;		 -> write_power_mode@reg_addr(1), set_filter_standby_settings@reg_addr(1), set_osr_press_temp_settings@reg_addr(1), 
      +set_osr_humidity_settings@reg_addr(1), 
 19919 ;;		 -> bme280_soft_reset@reg_addr(1), 
 19920 ;;  temp_buff      20   26[BANK0 ] unsigned char [20]
 19921 ;;  temp_len        2   46[BANK0 ] unsigned short 
 19922 ;;  rslt            1   49[BANK0 ] char 
 19923 ;;  reg_addr_cnt    1   48[BANK0 ] unsigned char 
 19924 ;; Return value:  Size  Location     Type
 19925 ;;                  1    wreg      char 
 19926 ;; Registers used:
 19927 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19928 ;; Tracked objects:
 19929 ;;		On entry : 0/0
 19930 ;;		On exit  : 0/0
 19931 ;;		Unchanged: 0/0
 19932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19933 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19934 ;;      Locals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19935 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19936 ;;      Totals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19937 ;;Total ram usage:       31 bytes
 19938 ;; Hardware stack levels used:    1
 19939 ;; Hardware stack levels required when called:   10
 19940 ;; This function calls:
 19941 ;;		_WriteEnvSensor
 19942 ;;		_interleave_reg_addr
 19943 ;;		_null_ptr_check
 19944 ;; This function is called by:
 19945 ;;		_bme280_soft_reset
 19946 ;;		_set_osr_humidity_settings
 19947 ;;		_set_osr_press_temp_settings
 19948 ;;		_set_filter_standby_settings
 19949 ;;		_write_power_mode
 19950 ;; This function uses a non-reentrant model
 19951 ;;
 19952                           
 19953                           
 19954                           ;psect for function _bme280_set_regs
 19955  166A                     _bme280_set_regs:	
 19956                           
 19957                           ;incstack = 0
 19958                           ; Regs used in _bme280_set_regs: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 19959                           ;bme280_set_regs@reg_addr stored from wreg
 19960  166A  0140               	movlb	0	; select bank0
 19961  166B  00D2               	movwf	bme280_set_regs@reg_addr
 19962                           
 19963                           ;BME280_driver/bme280.c: 441: int8_t bme280_set_regs(uint8_t *reg_addr, const uint8_t *r
      +                          eg_data, uint8_t len, const struct bme280_dev *dev);BME280_driver/bme280.c: 442: {;BME28
      +                          0_driver/bme280.c: 443:     int8_t rslt;;BME280_driver/bme280.c: 444:     uint8_t temp_b
      +                          uff[20];;BME280_driver/bme280.c: 446:     if (len > 10)
 19964  166C  300B               	movlw	11
 19965  166D  0235               	subwf	bme280_set_regs@len,w
 19966  166E  1C03               	skipc
 19967  166F  2E74               	goto	l5030
 19968                           
 19969                           ;BME280_driver/bme280.c: 447:     {;BME280_driver/bme280.c: 448:         len = 10;
 19970  1670  300A               	movlw	10
 19971  1671  00B7               	movwf	??_bme280_set_regs
 19972  1672  0837               	movf	??_bme280_set_regs,w
 19973  1673  00B5               	movwf	bme280_set_regs@len
 19974  1674                     l5030:	
 19975                           
 19976                           ;BME280_driver/bme280.c: 450:     uint16_t temp_len;;BME280_driver/bme280.c: 451:     ui
      +                          nt8_t reg_addr_cnt;;BME280_driver/bme280.c: 454:     rslt = null_ptr_check(dev);
 19977  1674  0836               	movf	bme280_set_regs@dev,w
 19978  1675  31A7  2790  3196   	fcall	_null_ptr_check
 19979  1678  0140               	movlb	0	; select bank0
 19980  1679  00B7               	movwf	??_bme280_set_regs
 19981  167A  0837               	movf	??_bme280_set_regs,w
 19982  167B  00D1               	movwf	bme280_set_regs@rslt
 19983                           
 19984                           ;BME280_driver/bme280.c: 457:     if ((rslt == 0) && (reg_addr != ((void*)0)) && (reg_da
      +                          ta != ((void*)0)))
 19985  167C  0851               	movf	bme280_set_regs@rslt,w
 19986  167D  1D03               	btfss	3,2
 19987  167E  2F07               	goto	l72
 19988  167F  0852               	movf	bme280_set_regs@reg_addr,w
 19989  1680  1903               	btfsc	3,2
 19990  1681  2F07               	goto	l72
 19991  1682  0834               	movf	bme280_set_regs@reg_data,w
 19992  1683  1903               	btfsc	3,2
 19993  1684  2F07               	goto	l72
 19994                           
 19995                           ;BME280_driver/bme280.c: 458:     {;BME280_driver/bme280.c: 459:         if (len != 0)
 19996  1685  0835               	movf	bme280_set_regs@len,w
 19997  1686  1903               	btfsc	3,2
 19998  1687  2F02               	goto	l5066
 19999                           
 20000                           ;BME280_driver/bme280.c: 460:         {;BME280_driver/bme280.c: 461:             temp_bu
      +                          ff[0] = reg_data[0];
 20001  1688  0834               	movf	bme280_set_regs@reg_data,w
 20002  1689  0086               	movwf	6
 20003  168A  0187               	clrf	7
 20004  168B  0801               	movf	1,w
 20005  168C  00B7               	movwf	??_bme280_set_regs
 20006  168D  0837               	movf	??_bme280_set_regs,w
 20007  168E  00BA               	movwf	bme280_set_regs@temp_buff
 20008                           
 20009                           ;BME280_driver/bme280.c: 464:             if (dev->intf != BME280_I2C_INTF)
 20010  168F  0836               	movf	bme280_set_regs@dev,w
 20011  1690  3E02               	addlw	2
 20012  1691  0086               	movwf	6
 20013  1692  3001               	movlw	1	; select bank2/3
 20014  1693  0087               	movwf	7
 20015  1694  0301               	decf	1,w
 20016  1695  1903               	btfsc	3,2
 20017  1696  2EB2               	goto	l5052
 20018                           
 20019                           ;BME280_driver/bme280.c: 465:             {;BME280_driver/bme280.c: 466:                
      +                           for (reg_addr_cnt = 0; reg_addr_cnt < len; reg_addr_cnt++)
 20020  1697  01D0               	clrf	bme280_set_regs@reg_addr_cnt
 20021  1698                     l5050:	
 20022  1698  0835               	movf	bme280_set_regs@len,w
 20023  1699  0250               	subwf	bme280_set_regs@reg_addr_cnt,w
 20024  169A  1803               	btfsc	3,0
 20025  169B  2EB2               	goto	l5052
 20026                           
 20027                           ;BME280_driver/bme280.c: 467:                 {;BME280_driver/bme280.c: 468:            
      +                                   reg_addr[reg_addr_cnt] = reg_addr[reg_addr_cnt] & 0x7F;
 20028  169C  0850               	movf	bme280_set_regs@reg_addr_cnt,w
 20029  169D  0752               	addwf	bme280_set_regs@reg_addr,w
 20030  169E  00B7               	movwf	??_bme280_set_regs
 20031  169F  0837               	movf	??_bme280_set_regs,w
 20032  16A0  0086               	movwf	6
 20033  16A1  0187               	clrf	7
 20034  16A2  0801               	movf	1,w
 20035  16A3  397F               	andlw	127
 20036  16A4  00B8               	movwf	??_bme280_set_regs+1
 20037  16A5  0850               	movf	bme280_set_regs@reg_addr_cnt,w
 20038  16A6  0752               	addwf	bme280_set_regs@reg_addr,w
 20039  16A7  00B9               	movwf	??_bme280_set_regs+2
 20040  16A8  0839               	movf	??_bme280_set_regs+2,w
 20041  16A9  0086               	movwf	6
 20042  16AA  0187               	clrf	7
 20043  16AB  0838               	movf	??_bme280_set_regs+1,w
 20044  16AC  0081               	movwf	1
 20045                           
 20046                           ;BME280_driver/bme280.c: 469:                 }
 20047  16AD  3001               	movlw	1
 20048  16AE  00B7               	movwf	??_bme280_set_regs
 20049  16AF  0837               	movf	??_bme280_set_regs,w
 20050  16B0  07D0               	addwf	bme280_set_regs@reg_addr_cnt,f
 20051  16B1  2E98               	goto	l5050
 20052  16B2                     l5052:	
 20053                           
 20054                           ;BME280_driver/bme280.c: 473:             if (len > 1)
 20055  16B2  3002               	movlw	2
 20056  16B3  0235               	subwf	bme280_set_regs@len,w
 20057  16B4  1C03               	skipc
 20058  16B5  2ED2               	goto	l5058
 20059                           
 20060                           ;BME280_driver/bme280.c: 474:             {;BME280_driver/bme280.c: 478:                
      +                           interleave_reg_addr(reg_addr, temp_buff, reg_data, len);
 20061  16B6  303A               	movlw	(low (bme280_set_regs@temp_buff| 0))& (0+255)
 20062  16B7  00B7               	movwf	??_bme280_set_regs
 20063  16B8  0837               	movf	??_bme280_set_regs,w
 20064  16B9  00F0               	movwf	interleave_reg_addr@temp_buff
 20065  16BA  0834               	movf	bme280_set_regs@reg_data,w
 20066  16BB  00B8               	movwf	??_bme280_set_regs+1
 20067  16BC  0838               	movf	??_bme280_set_regs+1,w
 20068  16BD  00F1               	movwf	interleave_reg_addr@reg_data
 20069  16BE  0835               	movf	bme280_set_regs@len,w
 20070  16BF  00B9               	movwf	??_bme280_set_regs+2
 20071  16C0  0839               	movf	??_bme280_set_regs+2,w
 20072  16C1  00F2               	movwf	interleave_reg_addr@len
 20073  16C2  0852               	movf	bme280_set_regs@reg_addr,w
 20074  16C3  3199  2198  3196   	fcall	_interleave_reg_addr
 20075                           
 20076                           ;BME280_driver/bme280.c: 479:                 temp_len = ((len * 2) - 1);
 20077  16C6  0140               	movlb	0	; select bank0
 20078  16C7  0835               	movf	bme280_set_regs@len,w
 20079  16C8  00B7               	movwf	??_bme280_set_regs
 20080  16C9  01B8               	clrf	??_bme280_set_regs+1
 20081  16CA  35B7               	lslf	??_bme280_set_regs,f
 20082  16CB  0DB8               	rlf	??_bme280_set_regs+1,f
 20083  16CC  0837               	movf	??_bme280_set_regs,w
 20084  16CD  3EFF               	addlw	255
 20085  16CE  00CE               	movwf	bme280_set_regs@temp_len
 20086  16CF  30FF               	movlw	255
 20087  16D0  3D38               	addwfc	??_bme280_set_regs+1,w
 20088  16D1  2ED8               	goto	L6
 20089  16D2                     l5058:	
 20090                           ;BME280_driver/bme280.c: 480:             }
 20091                           
 20092                           
 20093                           ;BME280_driver/bme280.c: 482:             {;BME280_driver/bme280.c: 483:                
      +                           temp_len = len;
 20094  16D2  0835               	movf	bme280_set_regs@len,w
 20095  16D3  00B7               	movwf	??_bme280_set_regs
 20096  16D4  01B8               	clrf	??_bme280_set_regs+1
 20097  16D5  0837               	movf	??_bme280_set_regs,w
 20098  16D6  00CE               	movwf	bme280_set_regs@temp_len
 20099  16D7  0838               	movf	??_bme280_set_regs+1,w
 20100  16D8                     L6:	
 20101  16D8  00CF               	movwf	bme280_set_regs@temp_len+1
 20102                           
 20103                           ;BME280_driver/bme280.c: 485:             rslt = dev->write(dev->dev_id, reg_addr[0], te
      +                          mp_buff, temp_len);
 20104  16D9  0836               	movf	bme280_set_regs@dev,w
 20105  16DA  0086               	movwf	6
 20106  16DB  3001               	movlw	1	; select bank2/3
 20107  16DC  0087               	movwf	7
 20108  16DD  3001               	movlw	1	; select bank2/3
 20109  16DE  3F41               	moviw [1]fsr1
 20110  16DF  00AB               	movwf	WriteEnvSensor@dev_id
 20111  16E0  0852               	movf	bme280_set_regs@reg_addr,w
 20112  16E1  0086               	movwf	6
 20113  16E2  0187               	clrf	7
 20114  16E3  0801               	movf	1,w
 20115  16E4  00B7               	movwf	??_bme280_set_regs
 20116  16E5  0837               	movf	??_bme280_set_regs,w
 20117  16E6  00AC               	movwf	WriteEnvSensor@reg_addr
 20118  16E7  303A               	movlw	(low (bme280_set_regs@temp_buff| 0))& (0+255)
 20119  16E8  00B8               	movwf	??_bme280_set_regs+1
 20120  16E9  0838               	movf	??_bme280_set_regs+1,w
 20121  16EA  00AD               	movwf	WriteEnvSensor@reg_data
 20122  16EB  084F               	movf	bme280_set_regs@temp_len+1,w
 20123  16EC  00AF               	movwf	WriteEnvSensor@len+1
 20124  16ED  084E               	movf	bme280_set_regs@temp_len,w
 20125  16EE  00AE               	movwf	WriteEnvSensor@len
 20126  16EF  0836               	movf	bme280_set_regs@dev,w
 20127  16F0  3E05               	addlw	5
 20128  16F1  0086               	movwf	6
 20129  16F2  3001               	movlw	1	; select bank2/3
 20130  16F3  0087               	movwf	7
 20131  16F4  3F41               	moviw [1]fsr1
 20132  16F5  008A               	movwf	10
 20133  16F6  3F40               	moviw [0]fsr1
 20134  16F7  000A               	callw
 20135  16F8  3196               	pagesel	$
 20136  16F9  0140               	movlb	0	; select bank0
 20137  16FA  00B9               	movwf	??_bme280_set_regs+2
 20138  16FB  0839               	movf	??_bme280_set_regs+2,w
 20139  16FC  00D1               	movwf	bme280_set_regs@rslt
 20140                           
 20141                           ;BME280_driver/bme280.c: 488:             if (rslt != 0)
 20142  16FD  0851               	movf	bme280_set_regs@rslt,w
 20143  16FE  1903               	btfsc	3,2
 20144  16FF  2F09               	goto	l5068
 20145                           
 20146                           ;BME280_driver/bme280.c: 489:             {;BME280_driver/bme280.c: 490:                
      +                           rslt = -4;
 20147  1700  30FC               	movlw	252
 20148  1701  2F03               	goto	L7
 20149  1702                     l5066:	
 20150                           
 20151                           ;BME280_driver/bme280.c: 494:         {;BME280_driver/bme280.c: 495:             rslt = 
      +                          -3;
 20152  1702  30FD               	movlw	253
 20153  1703                     L7:	
 20154  1703  00B7               	movwf	??_bme280_set_regs
 20155  1704  0837               	movf	??_bme280_set_regs,w
 20156  1705  00D1               	movwf	bme280_set_regs@rslt
 20157  1706  2F09               	goto	l5068
 20158  1707                     l72:	
 20159                           ;BME280_driver/bme280.c: 498:     else
 20160                           
 20161                           
 20162                           ;BME280_driver/bme280.c: 499:     {;BME280_driver/bme280.c: 500:         rslt = -1;
 20163  1707  01D1               	clrf	bme280_set_regs@rslt
 20164  1708  03D1               	decf	bme280_set_regs@rslt,f
 20165  1709                     l5068:	
 20166                           
 20167                           ;BME280_driver/bme280.c: 503:     return rslt;
 20168  1709  0851               	movf	bme280_set_regs@rslt,w
 20169  170A  0008               	return
 20170  170B                     __end_of_bme280_set_regs:	
 20171                           
 20172                           	psect	text79
 20173  2790                     __ptext79:	
 20174 ;; *************** function _null_ptr_check *****************
 20175 ;; Defined at:
 20176 ;;		line 1425 in file "BME280_driver/bme280.c"
 20177 ;; Parameters:    Size  Location     Type
 20178 ;;  dev             1    wreg     PTR const struct bme280_
 20179 ;;		 -> EnvSensor(51), 
 20180 ;; Auto vars:     Size  Location     Type
 20181 ;;  dev             1    3[COMMON] PTR const struct bme280_
 20182 ;;		 -> EnvSensor(51), 
 20183 ;;  rslt            1    2[COMMON] char 
 20184 ;; Return value:  Size  Location     Type
 20185 ;;                  1    wreg      char 
 20186 ;; Registers used:
 20187 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 20188 ;; Tracked objects:
 20189 ;;		On entry : 0/0
 20190 ;;		On exit  : 0/0
 20191 ;;		Unchanged: 0/0
 20192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20194 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20195 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20196 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20197 ;;Total ram usage:        4 bytes
 20198 ;; Hardware stack levels used:    1
 20199 ;; Hardware stack levels required when called:    3
 20200 ;; This function calls:
 20201 ;;		Nothing
 20202 ;; This function is called by:
 20203 ;;		_bme280_init
 20204 ;;		_bme280_get_regs
 20205 ;;		_bme280_set_regs
 20206 ;;		_bme280_set_sensor_settings
 20207 ;;		_bme280_set_sensor_mode
 20208 ;;		_bme280_get_sensor_mode
 20209 ;;		_bme280_soft_reset
 20210 ;;		_bme280_get_sensor_data
 20211 ;;		_bme280_get_sensor_settings
 20212 ;; This function uses a non-reentrant model
 20213 ;;
 20214                           
 20215                           
 20216                           ;psect for function _null_ptr_check
 20217  2790                     _null_ptr_check:	
 20218                           
 20219                           ;incstack = 0
 20220                           ; Regs used in _null_ptr_check: [wreg+fsr1l+fsr1h+status,2+status,0]
 20221                           ;null_ptr_check@dev stored from wreg
 20222  2790  00F3               	movwf	null_ptr_check@dev
 20223                           
 20224                           ;BME280_driver/bme280.c: 1425: static int8_t null_ptr_check(const struct bme280_dev *dev
      +                          );BME280_driver/bme280.c: 1426: {;BME280_driver/bme280.c: 1427:     int8_t rslt;;BME280_
      +                          driver/bme280.c: 1429:     if ((dev == ((void*)0)) || (dev->read == ((void*)0)) || (dev-
      +                          >write == ((void*)0)) || (dev->delay_ms == ((void*)0)))
 20225  2791  0873               	movf	null_ptr_check@dev,w
 20226  2792  1903               	btfsc	3,2
 20227  2793  2FAF               	goto	l238
 20228  2794  0873               	movf	null_ptr_check@dev,w
 20229  2795  3E03               	addlw	3
 20230  2796  0086               	movwf	6
 20231  2797  3001               	movlw	1	; select bank2/3
 20232  2798  0087               	movwf	7
 20233  2799  0016               	moviw fsr1++
 20234  279A  0401               	iorwf	1,w
 20235  279B  1903               	btfsc	3,2
 20236  279C  2FAF               	goto	l238
 20237  279D  0873               	movf	null_ptr_check@dev,w
 20238  279E  3E05               	addlw	5
 20239  279F  0086               	movwf	6
 20240  27A0  3001               	movlw	1	; select bank2/3
 20241  27A1  0087               	movwf	7
 20242  27A2  0016               	moviw fsr1++
 20243  27A3  0401               	iorwf	1,w
 20244  27A4  1903               	btfsc	3,2
 20245  27A5  2FAF               	goto	l238
 20246  27A6  0873               	movf	null_ptr_check@dev,w
 20247  27A7  3E07               	addlw	7
 20248  27A8  0086               	movwf	6
 20249  27A9  3001               	movlw	1	; select bank2/3
 20250  27AA  0087               	movwf	7
 20251  27AB  0016               	moviw fsr1++
 20252  27AC  0401               	iorwf	1,w
 20253  27AD  1D03               	btfss	3,2
 20254  27AE  2FB2               	goto	l4934
 20255  27AF                     l238:	
 20256                           
 20257                           ;BME280_driver/bme280.c: 1430:     {;BME280_driver/bme280.c: 1432:         rslt = -1;
 20258  27AF  01F2               	clrf	null_ptr_check@rslt
 20259  27B0  03F2               	decf	null_ptr_check@rslt,f
 20260                           
 20261                           ;BME280_driver/bme280.c: 1433:     }
 20262  27B1  2FB3               	goto	l4936
 20263  27B2                     l4934:	
 20264                           
 20265                           ;BME280_driver/bme280.c: 1435:     {;BME280_driver/bme280.c: 1437:         rslt = 0;
 20266  27B2  01F2               	clrf	null_ptr_check@rslt
 20267  27B3                     l4936:	
 20268                           
 20269                           ;BME280_driver/bme280.c: 1440:     return rslt;
 20270  27B3  0872               	movf	null_ptr_check@rslt,w
 20271  27B4  0008               	return
 20272  27B5                     __end_of_null_ptr_check:	
 20273                           
 20274                           	psect	text80
 20275  1998                     __ptext80:	
 20276 ;; *************** function _interleave_reg_addr *****************
 20277 ;; Defined at:
 20278 ;;		line 1342 in file "BME280_driver/bme280.c"
 20279 ;; Parameters:    Size  Location     Type
 20280 ;;  reg_addr        1    wreg     PTR const unsigned char 
 20281 ;;		 -> write_power_mode@reg_addr(1), set_filter_standby_settings@reg_addr(1), set_osr_press_temp_settings@reg_addr(1), 
      +set_osr_humidity_settings@reg_addr(1), 
 20282 ;;		 -> bme280_soft_reset@reg_addr(1), 
 20283 ;;  temp_buff       1    0[COMMON] PTR unsigned char 
 20284 ;;		 -> bme280_set_regs@temp_buff(20), 
 20285 ;;  reg_data        1    1[COMMON] PTR const unsigned char 
 20286 ;;		 -> write_power_mode@sensor_mode_reg_val(1), set_filter_standby_settings@reg_data(1), set_osr_press_temp_settings@re
      +g_data(1), set_osr_humidity_settings@ctrl_meas(1), 
 20287 ;;		 -> set_osr_humidity_settings@ctrl_hum(1), bme280_soft_reset@soft_rst_cmd(1), 
 20288 ;;  len             1    2[COMMON] unsigned char 
 20289 ;; Auto vars:     Size  Location     Type
 20290 ;;  reg_addr        1    6[COMMON] PTR const unsigned char 
 20291 ;;		 -> write_power_mode@reg_addr(1), set_filter_standby_settings@reg_addr(1), set_osr_press_temp_settings@reg_addr(1), 
      +set_osr_humidity_settings@reg_addr(1), 
 20292 ;;		 -> bme280_soft_reset@reg_addr(1), 
 20293 ;;  index           1    7[COMMON] unsigned char 
 20294 ;; Return value:  Size  Location     Type
 20295 ;;                  1    wreg      void 
 20296 ;; Registers used:
 20297 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 20298 ;; Tracked objects:
 20299 ;;		On entry : 0/0
 20300 ;;		On exit  : 0/0
 20301 ;;		Unchanged: 0/0
 20302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20303 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20304 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20305 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20306 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20307 ;;Total ram usage:        8 bytes
 20308 ;; Hardware stack levels used:    1
 20309 ;; Hardware stack levels required when called:    3
 20310 ;; This function calls:
 20311 ;;		Nothing
 20312 ;; This function is called by:
 20313 ;;		_bme280_set_regs
 20314 ;; This function uses a non-reentrant model
 20315 ;;
 20316                           
 20317                           
 20318                           ;psect for function _interleave_reg_addr
 20319  1998                     _interleave_reg_addr:	
 20320                           
 20321                           ;incstack = 0
 20322                           ; Regs used in _interleave_reg_addr: [wreg+fsr1l+fsr1h+status,2+status,0]
 20323                           ;interleave_reg_addr@reg_addr stored from wreg
 20324  1998  00F6               	movwf	interleave_reg_addr@reg_addr
 20325                           
 20326                           ;BME280_driver/bme280.c: 1342: static void interleave_reg_addr(const uint8_t *reg_addr, 
      +                          uint8_t *temp_buff, const uint8_t *reg_data, uint8_t len);BME280_driver/bme280.c: 1343: 
      +                          {;BME280_driver/bme280.c: 1344:     uint8_t index;;BME280_driver/bme280.c: 1346:     for
      +                           (index = 1; index < len; index++)
 20327  1999  01F7               	clrf	interleave_reg_addr@index
 20328  199A  0AF7               	incf	interleave_reg_addr@index,f
 20329  199B                     l4946:	
 20330  199B  0872               	movf	interleave_reg_addr@len,w
 20331  199C  0277               	subwf	interleave_reg_addr@index,w
 20332  199D  1803               	btfsc	3,0
 20333  199E  0008               	return
 20334                           
 20335                           ;BME280_driver/bme280.c: 1347:     {;BME280_driver/bme280.c: 1348:         temp_buff[(in
      +                          dex * 2) - 1] = reg_addr[index];
 20336  199F  0877               	movf	interleave_reg_addr@index,w
 20337  19A0  0776               	addwf	interleave_reg_addr@reg_addr,w
 20338  19A1  00F3               	movwf	??_interleave_reg_addr
 20339  19A2  0873               	movf	??_interleave_reg_addr,w
 20340  19A3  0086               	movwf	6
 20341  19A4  0187               	clrf	7
 20342  19A5  0801               	movf	1,w
 20343  19A6  00F4               	movwf	??_interleave_reg_addr+1
 20344  19A7  3577               	lslf	interleave_reg_addr@index,w
 20345  19A8  0770               	addwf	interleave_reg_addr@temp_buff,w
 20346  19A9  00F5               	movwf	??_interleave_reg_addr+2
 20347  19AA  0875               	movf	??_interleave_reg_addr+2,w
 20348  19AB  3EFF               	addlw	-1
 20349  19AC  0086               	movwf	6
 20350  19AD  0187               	clrf	7
 20351  19AE  0874               	movf	??_interleave_reg_addr+1,w
 20352  19AF  0081               	movwf	1
 20353                           
 20354                           ;BME280_driver/bme280.c: 1349:         temp_buff[index * 2] = reg_data[index];
 20355  19B0  0877               	movf	interleave_reg_addr@index,w
 20356  19B1  0771               	addwf	interleave_reg_addr@reg_data,w
 20357  19B2  00F3               	movwf	??_interleave_reg_addr
 20358  19B3  0873               	movf	??_interleave_reg_addr,w
 20359  19B4  0086               	movwf	6
 20360  19B5  0187               	clrf	7
 20361  19B6  0801               	movf	1,w
 20362  19B7  00F4               	movwf	??_interleave_reg_addr+1
 20363  19B8  3577               	lslf	interleave_reg_addr@index,w
 20364  19B9  0770               	addwf	interleave_reg_addr@temp_buff,w
 20365  19BA  00F5               	movwf	??_interleave_reg_addr+2
 20366  19BB  0875               	movf	??_interleave_reg_addr+2,w
 20367  19BC  0086               	movwf	6
 20368  19BD  0187               	clrf	7
 20369  19BE  0874               	movf	??_interleave_reg_addr+1,w
 20370  19BF  0081               	movwf	1
 20371                           
 20372                           ;BME280_driver/bme280.c: 1350:     }
 20373  19C0  3001               	movlw	1
 20374  19C1  00F3               	movwf	??_interleave_reg_addr
 20375  19C2  0873               	movf	??_interleave_reg_addr,w
 20376  19C3  07F7               	addwf	interleave_reg_addr@index,f
 20377  19C4  299B               	goto	l4946
 20378  19C5                     __end_of_interleave_reg_addr:	
 20379                           
 20380                           	psect	text81
 20381  1AB1                     __ptext81:	
 20382 ;; *************** function _WriteEnvSensor *****************
 20383 ;; Defined at:
 20384 ;;		line 170 in file "bme280_i2c.c"
 20385 ;; Parameters:    Size  Location     Type
 20386 ;;  dev_id          1   11[BANK0 ] unsigned char 
 20387 ;;  reg_addr        1   12[BANK0 ] unsigned char 
 20388 ;;  reg_data        1   13[BANK0 ] PTR unsigned char 
 20389 ;;		 -> bme280_set_regs@temp_buff(20), 
 20390 ;;  len             2   14[BANK0 ] unsigned short 
 20391 ;; Auto vars:     Size  Location     Type
 20392 ;;  i               2   18[BANK0 ] int 
 20393 ;;  rslt            1   17[BANK0 ] char 
 20394 ;; Return value:  Size  Location     Type
 20395 ;;                  1    wreg      char 
 20396 ;; Registers used:
 20397 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20398 ;; Tracked objects:
 20399 ;;		On entry : 0/0
 20400 ;;		On exit  : 0/0
 20401 ;;		Unchanged: 0/0
 20402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20403 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20404 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20405 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20406 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20407 ;;Total ram usage:        9 bytes
 20408 ;; Hardware stack levels used:    1
 20409 ;; Hardware stack levels required when called:    9
 20410 ;; This function calls:
 20411 ;;		_I2C_Stop
 20412 ;;		_I2C_Wait_SSPIF
 20413 ;;		_I2C_WriteByte
 20414 ;; This function is called by:
 20415 ;;		_BME280_Init
 20416 ;;		_bme280_set_regs
 20417 ;; This function uses a non-reentrant model
 20418 ;;
 20419                           
 20420                           
 20421                           ;psect for function _WriteEnvSensor
 20422  1AB1                     _WriteEnvSensor:	
 20423                           
 20424                           ;bme280_i2c.c: 170: int8_t WriteEnvSensor(uint8_t dev_id, uint8_t reg_addr, uint8_t *reg
      +                          _data, uint16_t len);bme280_i2c.c: 171: {;bme280_i2c.c: 172:     int8_t rslt = 0;
 20425                           
 20426                           ;incstack = 0
 20427                           ; Regs used in _WriteEnvSensor: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 20428  1AB1  0140               	movlb	0	; select bank0
 20429  1AB2  01B1               	clrf	WriteEnvSensor@rslt
 20430                           
 20431                           ;bme280_i2c.c: 174:     PIR3bits.SSP1IF = 0;
 20432  1AB3  014E               	movlb	14	; select bank14
 20433  1AB4  100F               	bcf	15,0	;volatile
 20434                           
 20435                           ;bme280_i2c.c: 177:     SSP1CON2bits.SEN = 1;
 20436  1AB5  0143               	movlb	3	; select bank3
 20437  1AB6  1411               	bsf	17,0	;volatile
 20438                           
 20439                           ;bme280_i2c.c: 178:     I2C_Wait_SSPIF();
 20440  1AB7  319D  2532  319A   	fcall	_I2C_Wait_SSPIF
 20441                           
 20442                           ;bme280_i2c.c: 181:     I2C_WriteByte(dev_id << 1);
 20443  1ABA  0140               	movlb	0	; select bank0
 20444  1ABB  352B               	lslf	WriteEnvSensor@dev_id,w
 20445  1ABC  31A6  2635  319A   	fcall	_I2C_WriteByte
 20446                           
 20447                           ;bme280_i2c.c: 184:     I2C_WriteByte(reg_addr);
 20448  1ABF  0140               	movlb	0	; select bank0
 20449  1AC0  082C               	movf	WriteEnvSensor@reg_addr,w
 20450  1AC1  31A6  2635  319A   	fcall	_I2C_WriteByte
 20451                           
 20452                           ;bme280_i2c.c: 186:     for(int i = 0; i < len; i++)
 20453  1AC4  0140               	movlb	0	; select bank0
 20454  1AC5  01B2               	clrf	WriteEnvSensor@i
 20455  1AC6  01B3               	clrf	WriteEnvSensor@i+1
 20456  1AC7                     l5002:	
 20457  1AC7  082F               	movf	WriteEnvSensor@len+1,w
 20458  1AC8  0233               	subwf	WriteEnvSensor@i+1,w
 20459  1AC9  1D03               	skipz
 20460  1ACA  2ACD               	goto	u4785
 20461  1ACB  082E               	movf	WriteEnvSensor@len,w
 20462  1ACC  0232               	subwf	WriteEnvSensor@i,w
 20463  1ACD                     u4785:	
 20464  1ACD  1803               	btfsc	3,0
 20465  1ACE  2ADF               	goto	l5004
 20466                           
 20467                           ;bme280_i2c.c: 187:     {;bme280_i2c.c: 188:         I2C_WriteByte(reg_data[i]);
 20468  1ACF  0832               	movf	WriteEnvSensor@i,w
 20469  1AD0  072D               	addwf	WriteEnvSensor@reg_data,w
 20470  1AD1  00B0               	movwf	??_WriteEnvSensor
 20471  1AD2  0830               	movf	??_WriteEnvSensor,w
 20472  1AD3  0086               	movwf	6
 20473  1AD4  0187               	clrf	7
 20474  1AD5  0801               	movf	1,w
 20475  1AD6  31A6  2635  319A   	fcall	_I2C_WriteByte
 20476                           
 20477                           ;bme280_i2c.c: 189:     }
 20478  1AD9  3001               	movlw	1
 20479  1ADA  0140               	movlb	0	; select bank0
 20480  1ADB  07B2               	addwf	WriteEnvSensor@i,f
 20481  1ADC  3000               	movlw	0
 20482  1ADD  3DB3               	addwfc	WriteEnvSensor@i+1,f
 20483  1ADE  2AC7               	goto	l5002
 20484  1ADF                     l5004:	
 20485                           
 20486                           ;bme280_i2c.c: 191:     I2C_Stop();
 20487  1ADF  31A5  25AF         	fcall	_I2C_Stop
 20488                           
 20489                           ;bme280_i2c.c: 193:     return rslt;
 20490  1AE1  0140               	movlb	0	; select bank0
 20491  1AE2  0831               	movf	WriteEnvSensor@rslt,w
 20492  1AE3  0008               	return
 20493  1AE4                     __end_of_WriteEnvSensor:	
 20494                           
 20495                           	psect	text82
 20496  2635                     __ptext82:	
 20497 ;; *************** function _I2C_WriteByte *****************
 20498 ;; Defined at:
 20499 ;;		line 40 in file "bme280_i2c.c"
 20500 ;; Parameters:    Size  Location     Type
 20501 ;;  data            1    wreg     unsigned char 
 20502 ;; Auto vars:     Size  Location     Type
 20503 ;;  data            1   13[COMMON] unsigned char 
 20504 ;; Return value:  Size  Location     Type
 20505 ;;                  1    wreg      void 
 20506 ;; Registers used:
 20507 ;;		wreg, status,2, status,0, pclath, cstack
 20508 ;; Tracked objects:
 20509 ;;		On entry : 0/0
 20510 ;;		On exit  : 0/0
 20511 ;;		Unchanged: 0/0
 20512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20514 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20516 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20517 ;;Total ram usage:        1 bytes
 20518 ;; Hardware stack levels used:    1
 20519 ;; Hardware stack levels required when called:    8
 20520 ;; This function calls:
 20521 ;;		_I2C_UserAlert
 20522 ;;		_I2C_Wait_SSPIF
 20523 ;; This function is called by:
 20524 ;;		_ReadEnvSensor
 20525 ;;		_WriteEnvSensor
 20526 ;; This function uses a non-reentrant model
 20527 ;;
 20528                           
 20529                           
 20530                           ;psect for function _I2C_WriteByte
 20531  2635                     _I2C_WriteByte:	
 20532                           
 20533                           ;incstack = 0
 20534                           ; Regs used in _I2C_WriteByte: [wreg+status,2+status,0+pclath+cstack]
 20535                           ;I2C_WriteByte@data stored from wreg
 20536  2635  00FD               	movwf	I2C_WriteByte@data
 20537                           
 20538                           ;bme280_i2c.c: 40: void I2C_WriteByte(uint8_t data);bme280_i2c.c: 41: {;bme280_i2c.c: 42
      +                          :     SSP1BUF = data;
 20539  2636  087D               	movf	I2C_WriteByte@data,w
 20540  2637  0143               	movlb	3	; select bank3
 20541  2638  008C               	movwf	12	;volatile
 20542                           
 20543                           ;bme280_i2c.c: 43:     I2C_Wait_SSPIF();
 20544  2639  319D  2532  31A6   	fcall	_I2C_Wait_SSPIF
 20545                           
 20546                           ;bme280_i2c.c: 46:     if (SSP1CON2bits.ACKSTAT != 0)
 20547  263C  0143               	movlb	3	; select bank3
 20548  263D  1F11               	btfss	17,6	;volatile
 20549  263E  0008               	return
 20550                           
 20551                           ;bme280_i2c.c: 47:     {;bme280_i2c.c: 48:         I2C_UserAlert(I2C_ERROR_WRITE_NO_ACK)
      +                          ;
 20552  263F  3001               	movlw	1
 20553  2640  31A5  25AC         	fcall	_I2C_UserAlert
 20554  2642  0008               	return
 20555  2643                     __end_of_I2C_WriteByte:	
 20556                           
 20557                           	psect	text83
 20558  25AC                     __ptext83:	
 20559 ;; *************** function _I2C_UserAlert *****************
 20560 ;; Defined at:
 20561 ;;		line 77 in file "bme280_i2c.c"
 20562 ;; Parameters:    Size  Location     Type
 20563 ;;  status          1    wreg     enum E11288
 20564 ;; Auto vars:     Size  Location     Type
 20565 ;;  status          1    0[COMMON] enum E11288
 20566 ;; Return value:  Size  Location     Type
 20567 ;;                  1    wreg      void 
 20568 ;; Registers used:
 20569 ;;		wreg, status,2, status,0, pclath, cstack
 20570 ;; Tracked objects:
 20571 ;;		On entry : 0/0
 20572 ;;		On exit  : 0/0
 20573 ;;		Unchanged: 0/0
 20574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20578 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20579 ;;Total ram usage:        0 bytes
 20580 ;; Hardware stack levels used:    1
 20581 ;; Hardware stack levels required when called:    7
 20582 ;; This function calls:
 20583 ;;		_I2C_Stop
 20584 ;; This function is called by:
 20585 ;;		_I2C_WriteByte
 20586 ;; This function uses a non-reentrant model
 20587 ;;
 20588                           
 20589                           
 20590                           ;psect for function _I2C_UserAlert
 20591  25AC                     _I2C_UserAlert:	
 20592                           
 20593                           ;bme280_i2c.c: 77: void I2C_UserAlert(I2C_ERROR status);bme280_i2c.c: 78: {;bme280_i2c.c
      +                          : 79:     I2C_Stop();
 20594                           
 20595                           ;incstack = 0
 20596                           ; Regs used in _I2C_UserAlert: [wreg+status,2+status,0+pclath+cstack]
 20597  25AC  31A5  25AF         	fcall	_I2C_Stop
 20598  25AE  0008               	return
 20599  25AF                     __end_of_I2C_UserAlert:	
 20600                           
 20601                           	psect	text84
 20602  25AF                     __ptext84:	
 20603 ;; *************** function _I2C_Stop *****************
 20604 ;; Defined at:
 20605 ;;		line 71 in file "bme280_i2c.c"
 20606 ;; Parameters:    Size  Location     Type
 20607 ;;		None
 20608 ;; Auto vars:     Size  Location     Type
 20609 ;;		None
 20610 ;; Return value:  Size  Location     Type
 20611 ;;                  1    wreg      void 
 20612 ;; Registers used:
 20613 ;;		wreg, status,2, status,0, pclath, cstack
 20614 ;; Tracked objects:
 20615 ;;		On entry : 0/0
 20616 ;;		On exit  : 0/0
 20617 ;;		Unchanged: 0/0
 20618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20622 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20623 ;;Total ram usage:        0 bytes
 20624 ;; Hardware stack levels used:    1
 20625 ;; Hardware stack levels required when called:    6
 20626 ;; This function calls:
 20627 ;;		_I2C_Wait_SSPIF
 20628 ;; This function is called by:
 20629 ;;		_I2C_UserAlert
 20630 ;;		_ReadEnvSensor
 20631 ;;		_WriteEnvSensor
 20632 ;; This function uses a non-reentrant model
 20633 ;;
 20634                           
 20635                           
 20636                           ;psect for function _I2C_Stop
 20637  25AF                     _I2C_Stop:	
 20638                           
 20639                           ;bme280_i2c.c: 73:     SSP1CON2bits.PEN = 1;
 20640                           
 20641                           ;incstack = 0
 20642                           ; Regs used in _I2C_Stop: [wreg+status,2+status,0+pclath+cstack]
 20643  25AF  0143               	movlb	3	; select bank3
 20644  25B0  1511               	bsf	17,2	;volatile
 20645                           
 20646                           ;bme280_i2c.c: 74:     I2C_Wait_SSPIF();
 20647  25B1  319D  2532         	fcall	_I2C_Wait_SSPIF
 20648  25B3  0008               	return
 20649  25B4                     __end_of_I2C_Stop:	
 20650                           
 20651                           	psect	text85
 20652  1D32                     __ptext85:	
 20653 ;; *************** function _I2C_Wait_SSPIF *****************
 20654 ;; Defined at:
 20655 ;;		line 16 in file "bme280_i2c.c"
 20656 ;; Parameters:    Size  Location     Type
 20657 ;;		None
 20658 ;; Auto vars:     Size  Location     Type
 20659 ;;		None
 20660 ;; Return value:  Size  Location     Type
 20661 ;;                  1    wreg      void 
 20662 ;; Registers used:
 20663 ;;		wreg, status,2, status,0, pclath, cstack
 20664 ;; Tracked objects:
 20665 ;;		On entry : 0/0
 20666 ;;		On exit  : 0/0
 20667 ;;		Unchanged: 0/0
 20668 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20671 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20672 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20673 ;;Total ram usage:        4 bytes
 20674 ;; Hardware stack levels used:    1
 20675 ;; Hardware stack levels required when called:    5
 20676 ;; This function calls:
 20677 ;;		_DebugAlert
 20678 ;; This function is called by:
 20679 ;;		_I2C_WriteByte
 20680 ;;		_I2C_ReadByte
 20681 ;;		_I2C_Stop
 20682 ;;		_ReadEnvSensor
 20683 ;;		_WriteEnvSensor
 20684 ;; This function uses a non-reentrant model
 20685 ;;
 20686                           
 20687                           
 20688                           ;psect for function _I2C_Wait_SSPIF
 20689  1D32                     _I2C_Wait_SSPIF:	
 20690                           
 20691                           ;bme280_i2c.c: 18:     __g_timeout_start = ticks; while (!(PIR3bits.SSP1IF != 0)) { if (
      +                          ticks - __g_timeout_start > 1000) { DebugAlert(200, 200, 3);; break; } };
 20692                           
 20693                           ;incstack = 0
 20694                           ; Regs used in _I2C_Wait_SSPIF: [wreg+status,2+status,0+pclath+cstack]
 20695  1D32  0141               	movlb	1	; select bank1
 20696  1D33  086B               	movf	(_ticks+3)^(0+128),w
 20697  1D34  0142               	movlb	2	; select bank2
 20698  1D35  00C7               	movwf	(___g_timeout_start+3)^(0+256)
 20699  1D36  0141               	movlb	1	; select bank1
 20700  1D37  086A               	movf	(_ticks+2)^(0+128),w
 20701  1D38  0142               	movlb	2	; select bank2
 20702  1D39  00C6               	movwf	(___g_timeout_start+2)^(0+256)
 20703  1D3A  0141               	movlb	1	; select bank1
 20704  1D3B  0869               	movf	(_ticks+1)^(0+128),w
 20705  1D3C  0142               	movlb	2	; select bank2
 20706  1D3D  00C5               	movwf	(___g_timeout_start+1)^(0+256)
 20707  1D3E  0141               	movlb	1	; select bank1
 20708  1D3F  0868               	movf	_ticks^(0+128),w
 20709  1D40  0142               	movlb	2	; select bank2
 20710  1D41  00C4               	movwf	___g_timeout_start^(0+256)
 20711  1D42                     l535:	
 20712  1D42  014E               	movlb	14	; select bank14
 20713  1D43  180F               	btfsc	15,0	;volatile
 20714  1D44  2D77               	goto	l538
 20715  1D45  0142               	movlb	2	; select bank2
 20716  1D46  0844               	movf	___g_timeout_start^(0+256),w
 20717  1D47  0141               	movlb	1	; select bank1
 20718  1D48  0268               	subwf	_ticks^(0+128),w
 20719  1D49  0140               	movlb	0	; select bank0
 20720  1D4A  00A7               	movwf	??_I2C_Wait_SSPIF
 20721  1D4B  0142               	movlb	2	; select bank2
 20722  1D4C  0845               	movf	(___g_timeout_start+1)^(0+256),w
 20723  1D4D  0141               	movlb	1	; select bank1
 20724  1D4E  3B69               	subwfb	(_ticks+1)^(0+128),w
 20725  1D4F  0140               	movlb	0	; select bank0
 20726  1D50  00A8               	movwf	??_I2C_Wait_SSPIF+1
 20727  1D51  0142               	movlb	2	; select bank2
 20728  1D52  0846               	movf	(___g_timeout_start+2)^(0+256),w
 20729  1D53  0141               	movlb	1	; select bank1
 20730  1D54  3B6A               	subwfb	(_ticks+2)^(0+128),w
 20731  1D55  0140               	movlb	0	; select bank0
 20732  1D56  00A9               	movwf	??_I2C_Wait_SSPIF+2
 20733  1D57  0142               	movlb	2	; select bank2
 20734  1D58  0847               	movf	(___g_timeout_start+3)^(0+256),w
 20735  1D59  0141               	movlb	1	; select bank1
 20736  1D5A  3B6B               	subwfb	(_ticks+3)^(0+128),w
 20737  1D5B  0140               	movlb	0	; select bank0
 20738  1D5C  00AA               	movwf	??_I2C_Wait_SSPIF+3
 20739  1D5D  082A               	movf	??_I2C_Wait_SSPIF+3,w
 20740  1D5E  1D03               	btfss	3,2
 20741  1D5F  2D69               	goto	l4892
 20742  1D60  0829               	movf	??_I2C_Wait_SSPIF+2,w
 20743  1D61  1D03               	btfss	3,2
 20744  1D62  2D69               	goto	l4892
 20745  1D63  30E9               	movlw	233
 20746  1D64  0227               	subwf	??_I2C_Wait_SSPIF,w
 20747  1D65  3003               	movlw	3
 20748  1D66  3B28               	subwfb	??_I2C_Wait_SSPIF+1,w
 20749  1D67  1C03               	btfss	3,0
 20750  1D68  2D42               	goto	l535
 20751  1D69                     l4892:	
 20752  1D69  30C8               	movlw	200
 20753  1D6A  00A0               	movwf	DebugAlert@delay_high
 20754  1D6B  3000               	movlw	0
 20755  1D6C  00A1               	movwf	DebugAlert@delay_high+1
 20756  1D6D  30C8               	movlw	200
 20757  1D6E  00A2               	movwf	DebugAlert@delay_low
 20758  1D6F  3000               	movlw	0
 20759  1D70  00A3               	movwf	DebugAlert@delay_low+1
 20760  1D71  3003               	movlw	3
 20761  1D72  00A7               	movwf	??_I2C_Wait_SSPIF
 20762  1D73  0827               	movf	??_I2C_Wait_SSPIF,w
 20763  1D74  00A4               	movwf	DebugAlert@num_flashes
 20764  1D75  3198  20C1         	fcall	_DebugAlert
 20765  1D77                     l538:	
 20766                           
 20767                           ;bme280_i2c.c: 19:     PIR3bits.SSP1IF = 0;
 20768  1D77  014E               	movlb	14	; select bank14
 20769  1D78  100F               	bcf	15,0	;volatile
 20770  1D79  0008               	return
 20771  1D7A                     __end_of_I2C_Wait_SSPIF:	
 20772                           
 20773                           	psect	text86
 20774  18C1                     __ptext86:	
 20775 ;; *************** function _DebugAlert *****************
 20776 ;; Defined at:
 20777 ;;		line 4 in file "debug.c"
 20778 ;; Parameters:    Size  Location     Type
 20779 ;;  delay_high      2    0[BANK0 ] unsigned int 
 20780 ;;  delay_low       2    2[BANK0 ] unsigned int 
 20781 ;;  num_flashes     1    4[BANK0 ] unsigned char 
 20782 ;; Auto vars:     Size  Location     Type
 20783 ;;  i               2    5[BANK0 ] int 
 20784 ;; Return value:  Size  Location     Type
 20785 ;;                  1    wreg      void 
 20786 ;; Registers used:
 20787 ;;		wreg, status,2, status,0, pclath, cstack
 20788 ;; Tracked objects:
 20789 ;;		On entry : 0/0
 20790 ;;		On exit  : 0/0
 20791 ;;		Unchanged: 0/0
 20792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20793 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20794 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20795 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20796 ;;      Totals:         1       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20797 ;;Total ram usage:        8 bytes
 20798 ;; Hardware stack levels used:    1
 20799 ;; Hardware stack levels required when called:    4
 20800 ;; This function calls:
 20801 ;;		_Sleep
 20802 ;; This function is called by:
 20803 ;;		_I2C_Wait_SSPIF
 20804 ;;		_BME280_Init
 20805 ;;		_main
 20806 ;; This function uses a non-reentrant model
 20807 ;;
 20808                           
 20809                           
 20810                           ;psect for function _DebugAlert
 20811  18C1                     _DebugAlert:	
 20812                           
 20813                           ;debug.c: 4: void DebugAlert(unsigned int delay_high, unsigned int delay_low, uint8_t nu
      +                          m_flashes);debug.c: 5: {;debug.c: 7:     for (int i = 0; i < num_flashes; i++)
 20814                           
 20815                           ;incstack = 0
 20816                           ; Regs used in _DebugAlert: [wreg+status,2+status,0+pclath+cstack]
 20817  18C1  0140               	movlb	0	; select bank0
 20818  18C2  01A5               	clrf	DebugAlert@i
 20819  18C3  01A6               	clrf	DebugAlert@i+1
 20820  18C4                     l4886:	
 20821  18C4  0826               	movf	DebugAlert@i+1,w
 20822  18C5  3A80               	xorlw	128
 20823  18C6  00FC               	movwf	??_DebugAlert
 20824  18C7  3080               	movlw	128
 20825  18C8  027C               	subwf	??_DebugAlert,w
 20826  18C9  1D03               	skipz
 20827  18CA  28CD               	goto	u4675
 20828  18CB  0824               	movf	DebugAlert@num_flashes,w
 20829  18CC  0225               	subwf	DebugAlert@i,w
 20830  18CD                     u4675:	
 20831  18CD  1803               	btfsc	3,0
 20832  18CE  0008               	return
 20833                           
 20834                           ;debug.c: 8:     {;debug.c: 9:         do { LATCbits.LATC5 = 1; } while(0);
 20835  18CF  0140               	movlb	0	; select bank0
 20836  18D0  169A               	bsf	26,5	;volatile
 20837                           
 20838                           ;debug.c: 10:         Sleep(delay_high);
 20839  18D1  0820               	movf	DebugAlert@delay_high,w
 20840  18D2  00F0               	movwf	Sleep@ms
 20841  18D3  0821               	movf	DebugAlert@delay_high+1,w
 20842  18D4  00F1               	movwf	Sleep@ms+1
 20843  18D5  01F2               	clrf	Sleep@ms+2
 20844  18D6  01F3               	clrf	Sleep@ms+3
 20845  18D7  3199  2115  3198   	fcall	_Sleep
 20846  18DA  0140               	movlb	0	; select bank0
 20847  18DB  129A               	bcf	26,5	;volatile
 20848                           
 20849                           ;debug.c: 12:         Sleep(delay_low);
 20850  18DC  0822               	movf	DebugAlert@delay_low,w
 20851  18DD  00F0               	movwf	Sleep@ms
 20852  18DE  0823               	movf	DebugAlert@delay_low+1,w
 20853  18DF  00F1               	movwf	Sleep@ms+1
 20854  18E0  01F2               	clrf	Sleep@ms+2
 20855  18E1  01F3               	clrf	Sleep@ms+3
 20856  18E2  3199  2115  3198   	fcall	_Sleep
 20857                           
 20858                           ;debug.c: 13:     }
 20859  18E5  3001               	movlw	1
 20860  18E6  0140               	movlb	0	; select bank0
 20861  18E7  07A5               	addwf	DebugAlert@i,f
 20862  18E8  3000               	movlw	0
 20863  18E9  3DA6               	addwfc	DebugAlert@i+1,f
 20864  18EA  28C4               	goto	l4886
 20865  18EB                     __end_of_DebugAlert:	
 20866                           
 20867                           	psect	text87
 20868  1915                     __ptext87:	
 20869 ;; *************** function _Sleep *****************
 20870 ;; Defined at:
 20871 ;;		line 17 in file "timing.c"
 20872 ;; Parameters:    Size  Location     Type
 20873 ;;  ms              4    0[COMMON] unsigned long 
 20874 ;; Auto vars:     Size  Location     Type
 20875 ;;  start           4    8[COMMON] unsigned long 
 20876 ;; Return value:  Size  Location     Type
 20877 ;;                  1    wreg      void 
 20878 ;; Registers used:
 20879 ;;		wreg
 20880 ;; Tracked objects:
 20881 ;;		On entry : 0/0
 20882 ;;		On exit  : 0/0
 20883 ;;		Unchanged: 0/0
 20884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20885 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20886 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20887 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20888 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20889 ;;Total ram usage:       12 bytes
 20890 ;; Hardware stack levels used:    1
 20891 ;; Hardware stack levels required when called:    3
 20892 ;; This function calls:
 20893 ;;		Nothing
 20894 ;; This function is called by:
 20895 ;;		_BME280_Init
 20896 ;;		_DebugAlert
 20897 ;;		_SetupGPS
 20898 ;;		_main
 20899 ;;		_TransmitBit
 20900 ;;		_bme280_soft_reset
 20901 ;;		_bme280_init
 20902 ;; This function uses a non-reentrant model
 20903 ;;
 20904                           
 20905                           
 20906                           ;psect for function _Sleep
 20907  1915                     _Sleep:	
 20908                           
 20909                           ;timing.c: 17: void Sleep(uint32_t ms);timing.c: 18: {;timing.c: 19:     uint32_t start 
      +                          = ticks;
 20910                           
 20911                           ;incstack = 0
 20912                           ; Regs used in _Sleep: [wreg]
 20913  1915  0141               	movlb	1	; select bank1
 20914  1916  086B               	movf	(_ticks+3)^(0+128),w
 20915  1917  00FB               	movwf	Sleep@start+3
 20916  1918  086A               	movf	(_ticks+2)^(0+128),w
 20917  1919  00FA               	movwf	Sleep@start+2
 20918  191A  0869               	movf	(_ticks+1)^(0+128),w
 20919  191B  00F9               	movwf	Sleep@start+1
 20920  191C  0868               	movf	_ticks^(0+128),w
 20921  191D  00F8               	movwf	Sleep@start
 20922  191E                     l895:	
 20923                           ;timing.c: 23:     }
 20924                           
 20925                           ;timing.c: 20:     while (ticks - start < ms)
 20926                           
 20927                           
 20928                           ;timing.c: 20:     while (ticks - start < ms)
 20929  191E  0878               	movf	Sleep@start,w
 20930  191F  0141               	movlb	1	; select bank1
 20931  1920  0268               	subwf	_ticks^(0+128),w
 20932  1921  00F4               	movwf	??_Sleep
 20933  1922  0879               	movf	Sleep@start+1,w
 20934  1923  3B69               	subwfb	(_ticks+1)^(0+128),w
 20935  1924  00F5               	movwf	??_Sleep+1
 20936  1925  087A               	movf	Sleep@start+2,w
 20937  1926  3B6A               	subwfb	(_ticks+2)^(0+128),w
 20938  1927  00F6               	movwf	??_Sleep+2
 20939  1928  087B               	movf	Sleep@start+3,w
 20940  1929  3B6B               	subwfb	(_ticks+3)^(0+128),w
 20941  192A  00F7               	movwf	??_Sleep+3
 20942  192B  0873               	movf	Sleep@ms+3,w
 20943  192C  0277               	subwf	??_Sleep+3,w
 20944  192D  1D03               	skipz
 20945  192E  2939               	goto	u4665
 20946  192F  0872               	movf	Sleep@ms+2,w
 20947  1930  0276               	subwf	??_Sleep+2,w
 20948  1931  1D03               	skipz
 20949  1932  2939               	goto	u4665
 20950  1933  0871               	movf	Sleep@ms+1,w
 20951  1934  0275               	subwf	??_Sleep+1,w
 20952  1935  1D03               	skipz
 20953  1936  2939               	goto	u4665
 20954  1937  0870               	movf	Sleep@ms,w
 20955  1938  0274               	subwf	??_Sleep,w
 20956  1939                     u4665:	
 20957  1939  1803               	btfsc	3,0
 20958  193A  0008               	return
 20959                           
 20960                           ;timing.c: 21:     {;timing.c: 22:         _delay((unsigned long)((1)*(1000000/4000.0)))
      +                          ;
 20961  193B  3053               	movlw	83
 20962  193C                     u5547:	
 20963  193C  0B89               	decfsz	9,f
 20964  193D  293C               	goto	u5547
 20965  193E  0000               	nop
 20966  193F  291E               	goto	l895
 20967  1940                     __end_of_Sleep:	
 20968                           
 20969                           	psect	text88
 20970  268B                     __ptext88:	
 20971 ;; *************** function _I2C_Init *****************
 20972 ;; Defined at:
 20973 ;;		line 22 in file "bme280_i2c.c"
 20974 ;; Parameters:    Size  Location     Type
 20975 ;;		None
 20976 ;; Auto vars:     Size  Location     Type
 20977 ;;		None
 20978 ;; Return value:  Size  Location     Type
 20979 ;;                  1    wreg      void 
 20980 ;; Registers used:
 20981 ;;		wreg, status,2
 20982 ;; Tracked objects:
 20983 ;;		On entry : 0/0
 20984 ;;		On exit  : 0/0
 20985 ;;		Unchanged: 0/0
 20986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20990 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20991 ;;Total ram usage:        0 bytes
 20992 ;; Hardware stack levels used:    1
 20993 ;; Hardware stack levels required when called:    3
 20994 ;; This function calls:
 20995 ;;		Nothing
 20996 ;; This function is called by:
 20997 ;;		_BME280_Init
 20998 ;; This function uses a non-reentrant model
 20999 ;;
 21000                           
 21001                           
 21002                           ;psect for function _I2C_Init
 21003  268B                     _I2C_Init:	
 21004                           
 21005                           ;bme280_i2c.c: 25:     SSP1CLKPPS = 0x0E;
 21006                           
 21007                           ;incstack = 0
 21008                           ; Regs used in _I2C_Init: [wreg+status,2]
 21009  268B  300E               	movlw	14
 21010  268C  017D               	movlb	61	; select bank61
 21011  268D  00C5               	movwf	69	;volatile
 21012                           
 21013                           ;bme280_i2c.c: 26:     SSP1DATPPS = 0x0C;
 21014  268E  300C               	movlw	12
 21015  268F  00C6               	movwf	70	;volatile
 21016                           
 21017                           ;bme280_i2c.c: 27:     RB6PPS = 0x13;
 21018  2690  3013               	movlw	19
 21019  2691  017E               	movlb	62	; select bank62
 21020  2692  009E               	movwf	30	;volatile
 21021                           
 21022                           ;bme280_i2c.c: 28:     RB4PPS = 0x14;
 21023  2693  3014               	movlw	20
 21024  2694  009C               	movwf	28	;volatile
 21025                           
 21026                           ;bme280_i2c.c: 30:     SSP1STAT = 0x80;
 21027  2695  3080               	movlw	128
 21028  2696  0143               	movlb	3	; select bank3
 21029  2697  008F               	movwf	15	;volatile
 21030                           
 21031                           ;bme280_i2c.c: 31:     SSP1CON1 = 0x28;
 21032  2698  3028               	movlw	40
 21033  2699  0090               	movwf	16	;volatile
 21034                           
 21035                           ;bme280_i2c.c: 32:     SSP1CON2 = 0x00;
 21036  269A  0191               	clrf	17	;volatile
 21037                           
 21038                           ;bme280_i2c.c: 33:     SSP1CON3 = 0x00;
 21039  269B  0192               	clrf	18	;volatile
 21040                           
 21041                           ;bme280_i2c.c: 34:     SSP1ADD = 0x03;
 21042  269C  3003               	movlw	3
 21043  269D  008D               	movwf	13	;volatile
 21044                           
 21045                           ;bme280_i2c.c: 37:     SSP1CON1bits.SSPEN = 1;
 21046  269E  1690               	bsf	16,5	;volatile
 21047  269F  0008               	return
 21048  26A0                     __end_of_I2C_Init:	
 21049                           
 21050                           	psect	intentry
 21051  0004                     __pintentry:	
 21052 ;; *************** function _INTERRUPT_InterruptManager *****************
 21053 ;; Defined at:
 21054 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 21055 ;; Parameters:    Size  Location     Type
 21056 ;;		None
 21057 ;; Auto vars:     Size  Location     Type
 21058 ;;		None
 21059 ;; Return value:  Size  Location     Type
 21060 ;;                  1    wreg      void 
 21061 ;; Registers used:
 21062 ;;		wreg, status,2, status,0, pclath, cstack
 21063 ;; Tracked objects:
 21064 ;;		On entry : 0/0
 21065 ;;		On exit  : 0/0
 21066 ;;		Unchanged: 0/0
 21067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21071 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21072 ;;Total ram usage:        0 bytes
 21073 ;; Hardware stack levels used:    1
 21074 ;; Hardware stack levels required when called:    2
 21075 ;; This function calls:
 21076 ;;		_TMR0_ISR
 21077 ;; This function is called by:
 21078 ;;		Interrupt level 1
 21079 ;; This function uses a non-reentrant model
 21080 ;;
 21081                           
 21082  0004                     _INTERRUPT_InterruptManager:	
 21083                           
 21084                           ;incstack = 0
 21085 ;; hardware stack exceeded
 21086  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 21087                           
 21088                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
 21089  0005  3180               	pagesel	$
 21090                           
 21091                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.TMR0IE == 1 && PIR0bits.TM
      +                          R0IF == 1)
 21092  0006  014E               	movlb	14	; select bank14
 21093  0007  1A96               	btfsc	22,5	;volatile
 21094  0008  1E8C               	btfss	12,5	;volatile
 21095  0009  280C               	goto	i1l389
 21096                           
 21097                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
 21098  000A  31A6  2628         	fcall	_TMR0_ISR
 21099  000C                     i1l389:	
 21100                           ;mcc_generated_files/interrupt_manager.c: 58:     }
 21101                           
 21102  000C  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 21103  000D  0009               	retfie
 21104  000E                     __end_of_INTERRUPT_InterruptManager:	
 21105                           
 21106                           	psect	text90
 21107  2628                     __ptext90:	
 21108 ;; *************** function _TMR0_ISR *****************
 21109 ;; Defined at:
 21110 ;;		line 121 in file "mcc_generated_files/tmr0.c"
 21111 ;; Parameters:    Size  Location     Type
 21112 ;;		None
 21113 ;; Auto vars:     Size  Location     Type
 21114 ;;		None
 21115 ;; Return value:  Size  Location     Type
 21116 ;;                  1    wreg      void 
 21117 ;; Registers used:
 21118 ;;		wreg, status,2, status,0, pclath, cstack
 21119 ;; Tracked objects:
 21120 ;;		On entry : 0/0
 21121 ;;		On exit  : 0/0
 21122 ;;		Unchanged: 0/0
 21123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21127 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21128 ;;Total ram usage:        0 bytes
 21129 ;; Hardware stack levels used:    1
 21130 ;; Hardware stack levels required when called:    1
 21131 ;; This function calls:
 21132 ;;		Absolute function
 21133 ;;		_TMR0_DefaultInterruptHandler
 21134 ;;		_TimerISR
 21135 ;; This function is called by:
 21136 ;;		_INTERRUPT_InterruptManager
 21137 ;; This function uses a non-reentrant model
 21138 ;;
 21139                           
 21140                           
 21141                           ;psect for function _TMR0_ISR
 21142  2628                     _TMR0_ISR:	
 21143                           
 21144                           ;mcc_generated_files/tmr0.c: 124:     PIR0bits.TMR0IF = 0;
 21145                           
 21146                           ;incstack = 0
 21147 ;; hardware stack exceeded
 21148                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
 21149  2628  014E               	movlb	14	; select bank14
 21150  2629  128C               	bcf	12,5	;volatile
 21151                           
 21152                           ;mcc_generated_files/tmr0.c: 125:     if(TMR0_InterruptHandler)
 21153  262A  0141               	movlb	1	; select bank1
 21154  262B  086E               	movf	_TMR0_InterruptHandler^(0+128),w
 21155  262C  046F               	iorwf	(_TMR0_InterruptHandler+1)^(0+128),w
 21156  262D  1903               	btfsc	3,2
 21157  262E  0008               	return
 21158                           
 21159                           ;mcc_generated_files/tmr0.c: 126:     {;mcc_generated_files/tmr0.c: 127:         TMR0_In
      +                          terruptHandler();
 21160  262F  086F               	movf	(_TMR0_InterruptHandler+1)^(0+128),w
 21161  2630  008A               	movwf	10
 21162  2631  086E               	movf	_TMR0_InterruptHandler^(0+128),w
 21163  2632  000A               	callw
 21164  2633  31A6               	pagesel	$
 21165  2634  0008               	return
 21166  2635                     __end_of_TMR0_ISR:	
 21167                           
 21168                           	psect	text91
 21169  0003                     __ptext91:	
 21170 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 21171 ;; Defined at:
 21172 ;;		line 138 in file "mcc_generated_files/tmr0.c"
 21173 ;; Parameters:    Size  Location     Type
 21174 ;;		None
 21175 ;; Auto vars:     Size  Location     Type
 21176 ;;		None
 21177 ;; Return value:  Size  Location     Type
 21178 ;;                  1    wreg      void 
 21179 ;; Registers used:
 21180 ;;		None
 21181 ;; Tracked objects:
 21182 ;;		On entry : 0/0
 21183 ;;		On exit  : 0/0
 21184 ;;		Unchanged: 0/0
 21185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21189 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21190 ;;Total ram usage:        0 bytes
 21191 ;; Hardware stack levels used:    1
 21192 ;; This function calls:
 21193 ;;		Nothing
 21194 ;; This function is called by:
 21195 ;;		_TMR0_Initialize
 21196 ;;		_TMR0_ISR
 21197 ;; This function uses a non-reentrant model
 21198 ;;
 21199                           
 21200                           
 21201                           ;psect for function _TMR0_DefaultInterruptHandler
 21202  0003                     _TMR0_DefaultInterruptHandler:	
 21203                           
 21204                           ;incstack = 0
 21205 ;; hardware stack exceeded
 21206                           ; Regs used in _TMR0_DefaultInterruptHandler: []
 21207  0003  0008               	return
 21208  0004                     __end_of_TMR0_DefaultInterruptHandler:	
 21209                           
 21210                           	psect	text92
 21211  25E5                     __ptext92:	
 21212 ;; *************** function _TimerISR *****************
 21213 ;; Defined at:
 21214 ;;		line 6 in file "timing.c"
 21215 ;; Parameters:    Size  Location     Type
 21216 ;;		None
 21217 ;; Auto vars:     Size  Location     Type
 21218 ;;		None
 21219 ;; Return value:  Size  Location     Type
 21220 ;;                  1    wreg      void 
 21221 ;; Registers used:
 21222 ;;		wreg
 21223 ;; Tracked objects:
 21224 ;;		On entry : 0/0
 21225 ;;		On exit  : 0/0
 21226 ;;		Unchanged: 0/0
 21227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21231 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21232 ;;Total ram usage:        0 bytes
 21233 ;; Hardware stack levels used:    1
 21234 ;; This function calls:
 21235 ;;		Nothing
 21236 ;; This function is called by:
 21237 ;;		_InitTiming
 21238 ;;		_TMR0_ISR
 21239 ;; This function uses a non-reentrant model
 21240 ;;
 21241                           
 21242                           
 21243                           ;psect for function _TimerISR
 21244  25E5                     _TimerISR:	
 21245                           
 21246                           ;timing.c: 8:     ticks++;
 21247                           
 21248                           ;incstack = 0
 21249 ;; hardware stack exceeded
 21250                           ; Regs used in _TimerISR: [wreg]
 21251  25E5  3001               	movlw	1
 21252  25E6  0141               	movlb	1	; select bank1
 21253  25E7  07E8               	addwf	_ticks^(0+128),f
 21254  25E8  3000               	movlw	0
 21255  25E9  3DE9               	addwfc	(_ticks+1)^(0+128),f
 21256  25EA  3000               	movlw	0
 21257  25EB  3DEA               	addwfc	(_ticks+2)^(0+128),f
 21258  25EC  3000               	movlw	0
 21259  25ED  3DEB               	addwfc	(_ticks+3)^(0+128),f
 21260  25EE  0008               	return
 21261  25EF                     __end_of_TimerISR:	
 21262  007E                     btemp	set	126	;btemp
 21263  007E                     int$flags	set	126
 21264  007E                     wtemp0	set	126


Data Sizes:
    Strings     184
    Constant    2
    Data        44
    BSS         151
    Persistent  40
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     79      79
    BANK1            80     72      80
    BANK2            80     32      80
    BANK3            80      0      77
    BANK4            80      0      70
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           72      0       0
    BANK22            0      0       0
    BANK23            0      0       0
    BANK24            0      0       0
    BANK25            0      0       0

Pointer List with Targets:

    put_device_to_sleep@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 0
		 -> Sleep(), 

    put_device_to_sleep@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 0
		 -> WriteEnvSensor(), 

    put_device_to_sleep@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 0
		 -> ReadEnvSensor(), 

    get_calib_data@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 0
		 -> Sleep(), 

    get_calib_data@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 0
		 -> WriteEnvSensor(), 

    get_calib_data@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 0
		 -> ReadEnvSensor(), 

    PollGPS$2720	PTR const unsigned char  size(1) Largest target is 20
		 -> csvField(BANK3[20]), 

    S54$4$2	PTR unsigned char  size(1) Largest target is 20
		 -> bme280_set_regs@temp_buff(BANK0[20]), 

    S54$3$2	PTR unsigned char  size(1) Largest target is 26
		 -> get_calib_data@calib_data(BANK0[26]), put_device_to_sleep@reg_data(BANK1[4]), write_power_mode@sensor_mode_reg_val(BANK0[1]), set_filter_standby_settings@reg_data(BANK0[1]), 
		 -> set_osr_press_temp_settings@reg_data(BANK0[1]), set_osr_humidity_settings@ctrl_meas(BANK0[1]), bme280_get_sensor_data@reg_data(BANK1[8]), bme280_set_sensor_mode@last_set_mode(BANK1[1]), 
		 -> bme280_get_sensor_settings@reg_data(COMMON[4]), bme280_set_sensor_settings@sensor_mode(BANK1[1]), bme280_init@chip_id(BANK0[1]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 140
		 -> STR_11(CODE[3]), checksum(BANK2[6]), STR_10(CODE[7]), main@convertedNumber(BANK2[16]), 
		 -> STR_7(CODE[14]), nmea_data(BIGRAM[140]), STR_6(CODE[26]), STR_5(CODE[26]), 
		 -> STR_4(CODE[26]), STR_3(CODE[26]), STR_2(CODE[26]), STR_1(CODE[26]), 
		 -> txdata(BIGRAM[140]), csvField(BANK3[20]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 140
		 -> STR_11(CODE[3]), checksum(BANK2[6]), STR_10(CODE[7]), main@convertedNumber(BANK2[16]), 
		 -> STR_7(CODE[14]), nmea_data(BIGRAM[140]), STR_6(CODE[26]), STR_5(CODE[26]), 
		 -> STR_4(CODE[26]), STR_3(CODE[26]), STR_2(CODE[26]), STR_1(CODE[26]), 
		 -> txdata(BIGRAM[140]), csvField(BANK3[20]), 

    strcmp@r	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_9(CODE[2]), STR_8(CODE[2]), 

    strcmp@l	PTR const unsigned char  size(1) Largest target is 20
		 -> csvField(BANK3[20]), 

    TransmitString@message	PTR unsigned char  size(2) Largest target is 140
		 -> STR_11(CODE[3]), txdata(BIGRAM[140]), 

    crc16@data	PTR unsigned char  size(2) Largest target is 140
		 -> txdata(BIGRAM[140]), 

    crc16_update@pData	PTR unsigned char  size(2) Largest target is 140
		 -> txdata(BIGRAM[140]), 

    GPS_HasAcknowledged@data	PTR unsigned char  size(1) Largest target is 44
		 -> setNavFlightMode(BANK4[44]), 

    GPS_SendUBX@data	PTR unsigned char  size(1) Largest target is 44
		 -> setNavFlightMode(BANK4[44]), 

    GetLengthUBX@data	PTR unsigned char  size(1) Largest target is 44
		 -> setNavFlightMode(BANK4[44]), 

    WriteGPS@message	PTR unsigned char  size(2) Largest target is 26
		 -> STR_7(CODE[14]), STR_6(CODE[26]), STR_5(CODE[26]), STR_4(CODE[26]), 
		 -> STR_3(CODE[26]), STR_2(CODE[26]), STR_1(CODE[26]), 

    UIntToString@dest	PTR unsigned char  size(1) Largest target is 16
		 -> main@convertedNumber(BANK2[16]), 

    IntToString@dest	PTR unsigned char  size(1) Largest target is 16
		 -> main@convertedNumber(BANK2[16]), 

    UIntToHexString@dest	PTR unsigned char  size(1) Largest target is 6
		 -> checksum(BANK2[6]), 

    ReverseString@opposite	PTR unsigned char  size(1) Largest target is 16
		 -> checksum(BANK2[6]), main@convertedNumber(BANK2[16]), 

    ReverseString@str	PTR unsigned char  size(1) Largest target is 16
		 -> checksum(BANK2[6]), main@convertedNumber(BANK2[16]), 

    InsertString@dest	PTR unsigned char  size(2) Largest target is 140
		 -> txdata(BIGRAM[140]), 

    InsertString@src	PTR unsigned char  size(2) Largest target is 20
		 -> checksum(BANK2[6]), STR_10(CODE[7]), main@convertedNumber(BANK2[16]), csvField(BANK3[20]), 

    Insert@dest	PTR unsigned char  size(2) Largest target is 140
		 -> txdata(BIGRAM[140]), 

    sp__GetAtRowCSV	PTR unsigned char  size(1) Largest target is 20
		 -> csvField(BANK3[20]), 

    GetAtRowCSV@src	PTR unsigned char  size(2) Largest target is 140
		 -> nmea_data(BIGRAM[140]), 

    ClearStringn@str	PTR unsigned char  size(1) Largest target is 20
		 -> csvField(BANK3[20]), 

    ClearString@str	PTR unsigned char  size(1) Largest target is 16
		 -> main@convertedNumber(BANK2[16]), 

    WriteEnvSensor@reg_data	PTR unsigned char  size(1) Largest target is 20
		 -> bme280_set_regs@temp_buff(BANK0[20]), 

    ReadEnvSensor@reg_data	PTR unsigned char  size(1) Largest target is 26
		 -> get_calib_data@calib_data(BANK0[26]), put_device_to_sleep@reg_data(BANK1[4]), write_power_mode@sensor_mode_reg_val(BANK0[1]), set_filter_standby_settings@reg_data(BANK0[1]), 
		 -> set_osr_press_temp_settings@reg_data(BANK0[1]), set_osr_humidity_settings@ctrl_meas(BANK0[1]), bme280_get_sensor_data@reg_data(BANK1[8]), bme280_set_sensor_mode@last_set_mode(BANK1[1]), 
		 -> bme280_get_sensor_settings@reg_data(COMMON[4]), bme280_set_sensor_settings@sensor_mode(BANK1[1]), bme280_init@chip_id(BANK0[1]), 

    EnvSensor.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> Sleep(), 

    EnvSensor.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> WriteEnvSensor(), 

    EnvSensor.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> ReadEnvSensor(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), Absolute function(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TimerISR(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TimerISR(), Absolute function(), TMR0_DefaultInterruptHandler(), 

    null_ptr_check@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> Sleep(), 

    null_ptr_check@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> WriteEnvSensor(), 

    null_ptr_check@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> ReadEnvSensor(), 

    null_ptr_check@dev	PTR const struct bme280_dev size(1) Largest target is 51
		 -> EnvSensor(BANK3[51]), 

    parse_humidity_calib_data@reg_data	PTR const unsigned char  size(1) Largest target is 26
		 -> get_calib_data@calib_data(BANK0[26]), 

    parse_humidity_calib_data@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> Sleep(), 

    parse_humidity_calib_data@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> WriteEnvSensor(), 

    parse_humidity_calib_data@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> ReadEnvSensor(), 

    parse_humidity_calib_data@dev	PTR struct bme280_dev size(1) Largest target is 51
		 -> EnvSensor(BANK3[51]), 

    parse_humidity_calib_data@calib_data	PTR struct bme280_calib_data size(1) Largest target is 51
		 -> EnvSensor.calib_data(BANK3[37]), EnvSensor(BANK3[51]), 

    parse_temp_press_calib_data@reg_data	PTR const unsigned char  size(1) Largest target is 26
		 -> get_calib_data@calib_data(BANK0[26]), 

    parse_temp_press_calib_data@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> Sleep(), 

    parse_temp_press_calib_data@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> WriteEnvSensor(), 

    parse_temp_press_calib_data@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> ReadEnvSensor(), 

    parse_temp_press_calib_data@dev	PTR struct bme280_dev size(1) Largest target is 51
		 -> EnvSensor(BANK3[51]), 

    parse_temp_press_calib_data@calib_data	PTR struct bme280_calib_data size(1) Largest target is 51
		 -> EnvSensor.calib_data(BANK3[37]), EnvSensor(BANK3[51]), 

    interleave_reg_addr@reg_data	PTR const unsigned char  size(1) Largest target is 1
		 -> write_power_mode@sensor_mode_reg_val(BANK0[1]), set_filter_standby_settings@reg_data(BANK0[1]), set_osr_press_temp_settings@reg_data(BANK0[1]), set_osr_humidity_settings@ctrl_meas(BANK0[1]), 
		 -> set_osr_humidity_settings@ctrl_hum(BANK0[1]), bme280_soft_reset@soft_rst_cmd(BANK0[1]), 

    interleave_reg_addr@reg_addr	PTR const unsigned char  size(1) Largest target is 1
		 -> write_power_mode@reg_addr(BANK0[1]), set_filter_standby_settings@reg_addr(BANK0[1]), set_osr_press_temp_settings@reg_addr(BANK0[1]), set_osr_humidity_settings@reg_addr(BANK0[1]), 
		 -> bme280_soft_reset@reg_addr(BANK0[1]), 

    interleave_reg_addr@temp_buff	PTR unsigned char  size(1) Largest target is 20
		 -> bme280_set_regs@temp_buff(BANK0[20]), 

    get_calib_data@dev	PTR struct bme280_dev size(1) Largest target is 51
		 -> EnvSensor(BANK3[51]), 

    compensate_humidity@uncomp_data	PTR const struct bme280_uncomp_data size(1) Largest target is 12
		 -> bme280_get_sensor_data@uncomp_data(BANK1[12]), 

    compensate_humidity@calib_data	PTR const struct bme280_calib_data size(1) Largest target is 51
		 -> EnvSensor(BANK3[51]), 

    compensate_pressure@uncomp_data	PTR const struct bme280_uncomp_data size(1) Largest target is 12
		 -> bme280_get_sensor_data@uncomp_data(BANK1[12]), 

    compensate_pressure@calib_data	PTR const struct bme280_calib_data size(1) Largest target is 51
		 -> EnvSensor(BANK3[51]), 

    compensate_temperature@calib_data	PTR struct bme280_calib_data size(1) Largest target is 51
		 -> EnvSensor(BANK3[51]), 

    compensate_temperature@uncomp_data	PTR const struct bme280_uncomp_data size(1) Largest target is 12
		 -> bme280_get_sensor_data@uncomp_data(BANK1[12]), 

    reload_device_settings@dev	PTR const struct bme280_dev size(1) Largest target is 51
		 -> EnvSensor(BANK3[51]), 

    reload_device_settings@settings	PTR const struct bme280_settings size(1) Largest target is 5
		 -> put_device_to_sleep@settings(BANK1[5]), 

    put_device_to_sleep@dev	PTR const struct bme280_dev size(1) Largest target is 51
		 -> EnvSensor(BANK3[51]), 

    write_power_mode@dev	PTR const struct bme280_dev size(1) Largest target is 51
		 -> EnvSensor(BANK3[51]), 

    parse_device_settings@reg_data	PTR const unsigned char  size(1) Largest target is 4
		 -> put_device_to_sleep@reg_data(BANK1[4]), bme280_get_sensor_settings@reg_data(COMMON[4]), 

    parse_device_settings@settings	PTR struct bme280_settings size(1) Largest target is 5
		 -> put_device_to_sleep@settings(BANK1[5]), 

    fill_osr_temp_settings@settings	PTR const struct bme280_settings size(2) Largest target is 51
		 -> EnvSensor(BANK3[51]), put_device_to_sleep@settings(BANK1[5]), 

    fill_osr_temp_settings@reg_data	PTR unsigned char  size(1) Largest target is 1
		 -> set_osr_press_temp_settings@reg_data(BANK0[1]), 

    fill_osr_press_settings@settings	PTR const struct bme280_settings size(2) Largest target is 51
		 -> EnvSensor(BANK3[51]), put_device_to_sleep@settings(BANK1[5]), 

    fill_osr_press_settings@reg_data	PTR unsigned char  size(1) Largest target is 1
		 -> set_osr_press_temp_settings@reg_data(BANK0[1]), 

    fill_standby_settings@settings	PTR const struct bme280_settings size(2) Largest target is 51
		 -> EnvSensor(BANK3[51]), put_device_to_sleep@settings(BANK1[5]), 

    fill_standby_settings@reg_data	PTR unsigned char  size(1) Largest target is 1
		 -> set_filter_standby_settings@reg_data(BANK0[1]), 

    fill_filter_settings@settings	PTR const struct bme280_settings size(2) Largest target is 51
		 -> EnvSensor(BANK3[51]), put_device_to_sleep@settings(BANK1[5]), 

    fill_filter_settings@reg_data	PTR unsigned char  size(1) Largest target is 1
		 -> set_filter_standby_settings@reg_data(BANK0[1]), 

    set_filter_standby_settings@settings	PTR const struct bme280_settings size(2) Largest target is 51
		 -> EnvSensor(BANK3[51]), put_device_to_sleep@settings(BANK1[5]), 

    set_filter_standby_settings@dev	PTR const struct bme280_dev size(1) Largest target is 51
		 -> EnvSensor(BANK3[51]), 

    set_osr_press_temp_settings@settings	PTR const struct bme280_settings size(2) Largest target is 51
		 -> EnvSensor(BANK3[51]), put_device_to_sleep@settings(BANK1[5]), 

    set_osr_press_temp_settings@dev	PTR const struct bme280_dev size(1) Largest target is 51
		 -> EnvSensor(BANK3[51]), 

    set_osr_humidity_settings@dev	PTR const struct bme280_dev size(1) Largest target is 51
		 -> EnvSensor(BANK3[51]), 

    set_osr_humidity_settings@settings	PTR const struct bme280_settings size(2) Largest target is 51
		 -> EnvSensor(BANK3[51]), put_device_to_sleep@settings(BANK1[5]), 

    set_osr_settings@dev	PTR const struct bme280_dev size(1) Largest target is 51
		 -> EnvSensor(BANK3[51]), 

    set_osr_settings@settings	PTR const struct bme280_settings size(2) Largest target is 51
		 -> EnvSensor(BANK3[51]), put_device_to_sleep@settings(BANK1[5]), 

    bme280_compensate_data@calib_data	PTR struct bme280_calib_data size(1) Largest target is 51
		 -> EnvSensor(BANK3[51]), 

    bme280_compensate_data@comp_data	PTR struct bme280_data size(1) Largest target is 12
		 -> main@sensor_data(BANK2[12]), 

    bme280_compensate_data@uncomp_data	PTR const struct bme280_uncomp_data size(1) Largest target is 12
		 -> bme280_get_sensor_data@uncomp_data(BANK1[12]), 

    bme280_parse_sensor_data@uncomp_data	PTR struct bme280_uncomp_data size(1) Largest target is 12
		 -> bme280_get_sensor_data@uncomp_data(BANK1[12]), 

    bme280_parse_sensor_data@reg_data	PTR const unsigned char  size(1) Largest target is 8
		 -> bme280_get_sensor_data@reg_data(BANK1[8]), 

    bme280_get_sensor_data@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> Sleep(), 

    bme280_get_sensor_data@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> WriteEnvSensor(), 

    bme280_get_sensor_data@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> ReadEnvSensor(), 

    bme280_get_sensor_data@comp_data	PTR struct bme280_data size(1) Largest target is 12
		 -> main@sensor_data(BANK2[12]), 

    bme280_get_sensor_data@dev	PTR struct bme280_dev size(1) Largest target is 51
		 -> EnvSensor(BANK3[51]), 

    bme280_soft_reset@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> Sleep(), 

    bme280_soft_reset@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> WriteEnvSensor(), 

    bme280_soft_reset@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> ReadEnvSensor(), 

    bme280_soft_reset@dev	PTR const struct bme280_dev size(1) Largest target is 51
		 -> EnvSensor(BANK3[51]), 

    bme280_get_sensor_mode@sensor_mode	PTR unsigned char  size(1) Largest target is 1
		 -> bme280_set_sensor_mode@last_set_mode(BANK1[1]), bme280_set_sensor_settings@sensor_mode(BANK1[1]), 

    bme280_get_sensor_mode@dev	PTR const struct bme280_dev size(1) Largest target is 51
		 -> EnvSensor(BANK3[51]), 

    bme280_set_sensor_mode@dev	PTR const struct bme280_dev size(1) Largest target is 51
		 -> EnvSensor(BANK3[51]), 

    bme280_get_sensor_settings@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> Sleep(), 

    bme280_get_sensor_settings@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> WriteEnvSensor(), 

    bme280_get_sensor_settings@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> ReadEnvSensor(), 

    bme280_set_sensor_settings@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> Sleep(), 

    bme280_set_sensor_settings@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> WriteEnvSensor(), 

    bme280_set_sensor_settings@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> ReadEnvSensor(), 

    bme280_set_sensor_settings@dev	PTR const struct bme280_dev size(1) Largest target is 51
		 -> EnvSensor(BANK3[51]), 

    bme280_set_regs@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> Sleep(), 

    bme280_set_regs@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> WriteEnvSensor(), 

    bme280_set_regs@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> ReadEnvSensor(), 

    bme280_set_regs@reg_data	PTR const unsigned char  size(1) Largest target is 1
		 -> write_power_mode@sensor_mode_reg_val(BANK0[1]), set_filter_standby_settings@reg_data(BANK0[1]), set_osr_press_temp_settings@reg_data(BANK0[1]), set_osr_humidity_settings@ctrl_meas(BANK0[1]), 
		 -> set_osr_humidity_settings@ctrl_hum(BANK0[1]), bme280_soft_reset@soft_rst_cmd(BANK0[1]), 

    bme280_set_regs@reg_addr	PTR unsigned char  size(1) Largest target is 1
		 -> write_power_mode@reg_addr(BANK0[1]), set_filter_standby_settings@reg_addr(BANK0[1]), set_osr_press_temp_settings@reg_addr(BANK0[1]), set_osr_humidity_settings@reg_addr(BANK0[1]), 
		 -> bme280_soft_reset@reg_addr(BANK0[1]), 

    bme280_set_regs@dev	PTR const struct bme280_dev size(1) Largest target is 51
		 -> EnvSensor(BANK3[51]), 

    bme280_get_regs@reg_data	PTR unsigned char  size(1) Largest target is 26
		 -> get_calib_data@calib_data(BANK0[26]), put_device_to_sleep@reg_data(BANK1[4]), write_power_mode@sensor_mode_reg_val(BANK0[1]), set_filter_standby_settings@reg_data(BANK0[1]), 
		 -> set_osr_press_temp_settings@reg_data(BANK0[1]), set_osr_humidity_settings@ctrl_meas(BANK0[1]), bme280_get_sensor_data@reg_data(BANK1[8]), bme280_set_sensor_mode@last_set_mode(BANK1[1]), 
		 -> bme280_get_sensor_settings@reg_data(COMMON[4]), bme280_set_sensor_settings@sensor_mode(BANK1[1]), bme280_init@chip_id(BANK0[1]), 

    bme280_get_regs@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> Sleep(), 

    bme280_get_regs@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> WriteEnvSensor(), 

    bme280_get_regs@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> ReadEnvSensor(), 

    bme280_get_regs@dev	PTR const struct bme280_dev size(1) Largest target is 51
		 -> EnvSensor(BANK3[51]), 

    S54bme280_dev$delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> Sleep(), 

    bme280_init@dev.delay_ms	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> Sleep(), 

    S54bme280_dev$write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> WriteEnvSensor(), 

    bme280_init@dev.write	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> WriteEnvSensor(), 

    S54bme280_dev$read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> ReadEnvSensor(), 

    bme280_init@dev.read	PTR FTN(unsigned char ,unsigned char ,PTR unsigned char ,unsigned short ,)char  size(2) Largest target is 1
		 -> ReadEnvSensor(), 

    bme280_init@dev	PTR struct bme280_dev size(1) Largest target is 51
		 -> EnvSensor(BANK3[51]), 


Critical Paths under _main in COMMON

    _main->_IntToString
    _crc16->_crc16_update
    _crc16_update->_strlen
    _compensate_temperature->___aldiv
    _compensate_pressure->___lldiv
    _compensate_humidity->___aldiv
    ___aldiv->___lmul
    _UIntToString->___lldiv
    _TransmitString->_TransmitChar
    _TransmitChar->_TransmitBit
    _TransmitBit->_Sleep
    _SetupGPS->_Sleep
    _SetupGPS->_WriteGPS
    _GPS_SendUBX->_GetLengthUBX
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _PollGPS->_InsertTxDataSep
    _PollGPS->_strcmp
    _strcmp->_GetAtRowCSV
    _WriteGPS->_strlen
    _InsertTxData->_InsertTxDataSep
    _InsertTxDataSep->_Insert
    _InsertString->_Insert
    _Insert->_strlen
    _GetAtRowCSV->_ClearStringn
    _IntToString->_ReverseString
    _ReverseString->___awdiv
    _InitTiming->_TMR0_SetInterruptHandler
    _ClearString->_strlen
    _get_calib_data->_parse_humidity_calib_data
    _ReadEnvSensor->_I2C_ReadByte
    _ReadEnvSensor->_I2C_WriteByte
    _WriteEnvSensor->_I2C_WriteByte
    _I2C_Wait_SSPIF->_DebugAlert
    _DebugAlert->_Sleep

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    None.

Critical Paths under _main in BANK0

    _crc16->_crc16_update
    _bme280_get_sensor_data->_bme280_compensate_data
    _bme280_compensate_data->_compensate_humidity
    _compensate_temperature->___aldiv
    _compensate_pressure->___aldiv
    _compensate_humidity->___aldiv
    _UIntToString->_ReverseString
    _UIntToHexString->_ReverseString
    _TransmitString->_TransmitChar
    _SetupGPS->_GPS_HasAcknowledged
    _PollGPS->_InsertTxData
    _strcmp->_GetAtRowCSV
    _InsertTxData->_InsertString
    _InsertTxDataSep->_Insert
    _InsertString->_Insert
    _IntToString->_ReverseString
    _BME280_Init->_bme280_set_sensor_mode
    _BME280_Init->_bme280_set_sensor_settings
    _bme280_set_sensor_settings->_put_device_to_sleep
    _bme280_set_sensor_mode->_put_device_to_sleep
    _write_power_mode->_bme280_set_regs
    _put_device_to_sleep->_reload_device_settings
    _reload_device_settings->_set_osr_settings
    _set_osr_settings->_set_osr_humidity_settings
    _set_osr_settings->_set_osr_press_temp_settings
    _set_osr_press_temp_settings->_bme280_set_regs
    _set_osr_humidity_settings->_bme280_set_regs
    _set_filter_standby_settings->_bme280_set_regs
    _bme280_get_sensor_mode->_bme280_get_regs
    _bme280_init->_get_calib_data
    _get_calib_data->_bme280_get_regs
    _bme280_get_regs->_ReadEnvSensor
    _ReadEnvSensor->_I2C_ReadByte
    _I2C_ReadByte->_I2C_Wait_SSPIF
    _bme280_soft_reset->_bme280_set_regs
    _bme280_set_regs->_WriteEnvSensor
    _WriteEnvSensor->_I2C_Wait_SSPIF
    _I2C_WriteByte->_I2C_Wait_SSPIF
    _I2C_Stop->_I2C_Wait_SSPIF
    _I2C_Wait_SSPIF->_DebugAlert

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_bme280_get_sensor_data
    _bme280_compensate_data->_compensate_pressure
    _BME280_Init->_bme280_set_sensor_mode
    _BME280_Init->_bme280_set_sensor_settings
    _bme280_set_sensor_settings->_put_device_to_sleep
    _bme280_set_sensor_mode->_put_device_to_sleep

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                37    37      0  489685
                                             67 BANK1      5     5      0
                                              0 BANK2     32    32      0
                        _BME280_Init
                        _ClearString
                        _ClearTxData
                         _DebugAlert
                         _InitTiming
                             _Insert
                       _InsertString
                        _IntToString
                            _PollGPS
                  _SYSTEM_Initialize
                           _SetupGPS
                              _Sleep
                     _TransmitString
                    _UIntToHexString
                       _UIntToString
             _bme280_get_sensor_data
                              _crc16
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _crc16                                                4     2      2    1502
                                              1 BANK0      4     2      2
                       _crc16_update
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _crc16_update                                        10     4      6     410
                                              5 COMMON     9     3      6
                                              0 BANK0      1     1      0
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (1) _bme280_get_sensor_data                              27    25      2   43322
                                             65 BANK0      5     3      2
                                             45 BANK1     22    22      0
             _bme280_compensate_data
                    _bme280_get_regs
           _bme280_parse_sensor_data
                     _null_ptr_check
 ---------------------------------------------------------------------------------
 (2) _bme280_parse_sensor_data                            22    21      1     535
                                              0 COMMON     9     8      1
                                              0 BANK0     13    13      0
 ---------------------------------------------------------------------------------
 (2) _bme280_compensate_data                               6     3      3   29189
                                             59 BANK0      6     3      3
                _compensate_humidity
                _compensate_pressure
             _compensate_temperature
 ---------------------------------------------------------------------------------
 (3) _compensate_temperature                              39    35      4    9029
                                             14 BANK0     39    35      4
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) _compensate_pressure                                 67    63      4   10255
                                             14 BANK0     22    18      4
                                              0 BANK1     45    45      0
                            ___aldiv
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) _compensate_humidity                                 45    41      4    9257
                                             14 BANK0     45    41      4
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8    3588
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             15     7      8    4860
                                             12 COMMON     1     1      0
                                              0 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _UIntToString                                         9     4      5    3562
                                              9 BANK0      9     4      5
                      _ReverseString
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     311
                                              0 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             14     6      8     618
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _UIntToHexString                                     19    14      5    2572
                                              9 BANK0     19    14      5
                      _ReverseString
                              _crc16 (ARG)
 ---------------------------------------------------------------------------------
 (1) _TransmitString                                       7     5      2    2076
                                              3 BANK0      7     5      2
                       _TransmitChar
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _TransmitChar                                         4     4      0     806
                                             13 COMMON     1     1      0
                                              0 BANK0      3     3      0
                        _TransmitBit
 ---------------------------------------------------------------------------------
 (3) _TransmitBit                                          1     1      0     676
                                             12 COMMON     1     1      0
                              _Sleep
 ---------------------------------------------------------------------------------
 (1) _SetupGPS                                             1     1      0    3101
                                             12 COMMON     1     1      0
                _GPS_HasAcknowledged
                        _GPS_SendUBX
                              _Sleep
                           _WriteGPS
 ---------------------------------------------------------------------------------
 (2) _GPS_SendUBX                                          6     6      0     245
                                              4 COMMON     6     6      0
                      _EUSART1_Write
                       _GetLengthUBX
 ---------------------------------------------------------------------------------
 (3) _GetLengthUBX                                         4     1      3      77
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (2) _GPS_HasAcknowledged                                 22    22      0     618
                                              0 COMMON     4     4      0
                                              0 BANK0     18    18      0
                       _EUSART1_Read
                _EUSART1_is_rx_ready
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     468
                 _EUSART1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     174
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     294
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _PollGPS                                             18    18      0   42553
                                             25 BANK0     18    18      0
                          _ClearNMEA
                       _EUSART1_Read
                _EUSART1_is_rx_ready
                        _GetAtRowCSV
                             _Insert
                       _InsertString
                       _InsertTxData
                    _InsertTxDataSep
                           _WriteGPS
                             _strcmp
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strcmp                                               4     2      2     330
                                             11 COMMON     3     1      2
                                              8 BANK0      1     1      0
                        _GetAtRowCSV (ARG)
 ---------------------------------------------------------------------------------
 (2) _WriteGPS                                             7     5      2    1593
                                              5 COMMON     7     5      2
                      _EUSART1_Write
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _EUSART1_Write                                        1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _InsertTxData                                         4     0      4   17575
                                             21 BANK0      4     0      4
                        _GetAtRowCSV
                       _InsertString
                    _InsertTxDataSep
 ---------------------------------------------------------------------------------
 (2) _InsertTxDataSep                                      3     1      2    5277
                                             12 COMMON     2     0      2
                                              9 BANK0      1     1      0
                             _Insert
 ---------------------------------------------------------------------------------
 (3) _InsertString                                        13     5      8    8859
                                             12 COMMON     1     1      0
                                              9 BANK0     12     4      8
                        _GetAtRowCSV (ARG)
                             _Insert
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _Insert                                              16     9      7    4951
                                              5 COMMON     7     0      7
                                              0 BANK0      9     9      0
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _GetAtRowCSV                                         13     9      4    2308
                                              6 COMMON     5     1      4
                                              0 BANK0      8     8      0
                       _ClearStringn
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _ClearStringn                                         6     4      2     199
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EUSART1_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ClearNMEA                                            4     4      0      68
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _IntToString                                          8     5      3    4276
                                             11 COMMON     3     0      3
                                              9 BANK0      5     5      0
                      _ReverseString
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) _ReverseString                                       11    11      0    2172
                                              9 COMMON     2     2      0
                                              0 BANK0      9     9      0
                            ___awdiv
                             _strlen
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     756
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _InitTiming                                           0     0      0     174
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2     174
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _ClearTxData                                          4     4      0      68
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _ClearString                                          6     6      0    1138
                                              5 COMMON     6     6      0
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _strlen                                               5     3      2     926
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _BME280_Init                                          4     4      0  366883
                                             14 BANK1      4     4      0
                         _DebugAlert
                           _I2C_Init
                        _bme280_init
             _bme280_set_sensor_mode
         _bme280_set_sensor_settings
 ---------------------------------------------------------------------------------
 (2) _bme280_set_sensor_settings                           6     5      1  187200
                                             76 BANK0      3     2      1
                                             11 BANK1      3     3      0
               _are_settings_changed
             _bme280_get_sensor_mode
                     _null_ptr_check
                _put_device_to_sleep
        _set_filter_standby_settings
                   _set_osr_settings
 ---------------------------------------------------------------------------------
 (3) _are_settings_changed                                 3     2      1     282
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (2) _bme280_set_sensor_mode                               6     5      1  137160
                                             76 BANK0      3     2      1
                                             11 BANK1      3     3      0
             _bme280_get_sensor_mode
                     _null_ptr_check
                _put_device_to_sleep
                   _write_power_mode
 ---------------------------------------------------------------------------------
 (3) _write_power_mode                                     8     7      1   23631
                                             51 BANK0      8     7      1
                    _bme280_get_regs
                    _bme280_set_regs
 ---------------------------------------------------------------------------------
 (3) _put_device_to_sleep                                 14    14      0   99150
                                             73 BANK0      3     3      0
                                              0 BANK1     11    11      0
                    _bme280_get_regs
                  _bme280_soft_reset
              _parse_device_settings
             _reload_device_settings
 ---------------------------------------------------------------------------------
 (4) _reload_device_settings                               5     4      1   73487
                                             68 BANK0      5     4      1
        _set_filter_standby_settings
                   _set_osr_settings
 ---------------------------------------------------------------------------------
 (3) _set_osr_settings                                     7     4      3   48691
                                             61 BANK0      7     4      3
          _set_osr_humidity_settings
        _set_osr_press_temp_settings
 ---------------------------------------------------------------------------------
 (4) _set_osr_press_temp_settings                         10     7      3   24298
                                             51 BANK0     10     7      3
                    _bme280_get_regs
                    _bme280_set_regs
            _fill_osr_press_settings
             _fill_osr_temp_settings
 ---------------------------------------------------------------------------------
 (5) _fill_osr_temp_settings                               6     4      2     219
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (5) _fill_osr_press_settings                              6     4      2     219
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (4) _set_osr_humidity_settings                           10     7      3   23776
                                             51 BANK0     10     7      3
                    _bme280_get_regs
                    _bme280_set_regs
 ---------------------------------------------------------------------------------
 (3) _set_filter_standby_settings                         10     7      3   24478
                                             51 BANK0     10     7      3
                    _bme280_get_regs
                    _bme280_set_regs
               _fill_filter_settings
              _fill_standby_settings
 ---------------------------------------------------------------------------------
 (4) _fill_standby_settings                                6     4      2     219
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (4) _fill_filter_settings                                 6     4      2     219
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (4) _parse_device_settings                                4     3      1     562
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (3) _bme280_get_sensor_mode                               6     5      1   13430
                                             32 BANK0      6     5      1
                    _bme280_get_regs
                     _null_ptr_check
 ---------------------------------------------------------------------------------
 (2) _bme280_init                                          7     7      0   40818
                                             64 BANK0      7     7      0
                              _Sleep *
                    _bme280_get_regs
                  _bme280_soft_reset
                     _get_calib_data
                     _null_ptr_check
 ---------------------------------------------------------------------------------
 (3) _get_calib_data                                      32    32      0   14513
                                             32 BANK0     32    32      0
                    _bme280_get_regs
          _parse_humidity_calib_data
        _parse_temp_press_calib_data
 ---------------------------------------------------------------------------------
 (4) _parse_temp_press_calib_data                          4     3      1     968
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (4) _parse_humidity_calib_data                           14    13      1     510
                                              0 COMMON    14    13      1
 ---------------------------------------------------------------------------------
 (2) _bme280_get_regs                                      9     5      4   12470
                                             23 BANK0      9     5      4
                      _ReadEnvSensor *
                     _null_ptr_check
 ---------------------------------------------------------------------------------
 (3) _ReadEnvSensor                                       10     5      5    8662
                                             13 BANK0     10     5      5
                       _I2C_ReadByte
                           _I2C_Stop
                     _I2C_Wait_SSPIF
                      _I2C_WriteByte
 ---------------------------------------------------------------------------------
 (4) _I2C_ReadByte                                         3     3      0    1650
                                             13 COMMON     1     1      0
                                             11 BANK0      2     2      0
                     _I2C_Wait_SSPIF
 ---------------------------------------------------------------------------------
 (4) _bme280_soft_reset                                    7     7      0   12168
                                             51 BANK0      7     7      0
                              _Sleep *
                    _bme280_set_regs
                     _null_ptr_check
 ---------------------------------------------------------------------------------
 (5) _bme280_set_regs                                     31    28      3   10716
                                             20 BANK0     31    28      3
                     _WriteEnvSensor *
                _interleave_reg_addr
                     _null_ptr_check
 ---------------------------------------------------------------------------------
 (2) _null_ptr_check                                       4     4      0     485
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (6) _interleave_reg_addr                                  8     5      3     622
                                              0 COMMON     8     5      3
 ---------------------------------------------------------------------------------
 (6) _WriteEnvSensor                                       9     4      5    6857
                                             11 BANK0      9     4      5
                           _I2C_Stop
                     _I2C_Wait_SSPIF
                      _I2C_WriteByte
 ---------------------------------------------------------------------------------
 (4) _I2C_WriteByte                                        1     1      0    3201
                                             13 COMMON     1     1      0
                      _I2C_UserAlert
                     _I2C_Wait_SSPIF
 ---------------------------------------------------------------------------------
 (5) _I2C_UserAlert                                        1     1      0    1585
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (6) _I2C_Stop                                             0     0      0    1585
                     _I2C_Wait_SSPIF
 ---------------------------------------------------------------------------------
 (5) _I2C_Wait_SSPIF                                       4     4      0    1585
                                              7 BANK0      4     4      0
                         _DebugAlert
 ---------------------------------------------------------------------------------
 (6) _DebugAlert                                           8     3      5    1585
                                             12 COMMON     1     1      0
                                              0 BANK0      7     2      5
                              _Sleep
 ---------------------------------------------------------------------------------
 (7) _Sleep                                               12     8      4     645
                                              0 COMMON    12     8      4
 ---------------------------------------------------------------------------------
 (2) _I2C_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _INTERRUPT_InterruptManager                          0     0      0       0
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (16) _TMR0_ISR                                            0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                           _TimerISR *
 ---------------------------------------------------------------------------------
 (17) _TimerISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BME280_Init
     _DebugAlert
       _Sleep
     _I2C_Init
     _bme280_init
       _Sleep *
       _bme280_get_regs *
         _ReadEnvSensor *
           _I2C_ReadByte
             _I2C_Wait_SSPIF
               _DebugAlert
                 _Sleep
           _I2C_Stop
             _I2C_Wait_SSPIF
               _DebugAlert
                 _Sleep
           _I2C_Wait_SSPIF
             _DebugAlert
               _Sleep
           _I2C_WriteByte
             _I2C_UserAlert
               _I2C_Stop
                 _I2C_Wait_SSPIF
                   _DebugAlert
                     _Sleep
             _I2C_Wait_SSPIF
               _DebugAlert
                 _Sleep
         _null_ptr_check *
       _bme280_soft_reset *
         _Sleep *
         _bme280_set_regs *
           _WriteEnvSensor *
             _I2C_Stop
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
             _I2C_Wait_SSPIF
               _DebugAlert
                 _Sleep
             _I2C_WriteByte
               _I2C_UserAlert
                 _I2C_Stop
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
           _interleave_reg_addr *
           _null_ptr_check *
         _null_ptr_check *
       _get_calib_data *
         _bme280_get_regs
           _ReadEnvSensor *
             _I2C_ReadByte
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
             _I2C_Stop
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
             _I2C_Wait_SSPIF
               _DebugAlert
                 _Sleep
             _I2C_WriteByte
               _I2C_UserAlert
                 _I2C_Stop
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
           _null_ptr_check *
         _parse_humidity_calib_data
         _parse_temp_press_calib_data
       _null_ptr_check *
     _bme280_set_sensor_mode
       _bme280_get_sensor_mode
         _bme280_get_regs
           _ReadEnvSensor *
             _I2C_ReadByte
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
             _I2C_Stop
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
             _I2C_Wait_SSPIF
               _DebugAlert
                 _Sleep
             _I2C_WriteByte
               _I2C_UserAlert
                 _I2C_Stop
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
           _null_ptr_check *
         _null_ptr_check
       _null_ptr_check
       _put_device_to_sleep
         _bme280_get_regs
           _ReadEnvSensor *
             _I2C_ReadByte
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
             _I2C_Stop
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
             _I2C_Wait_SSPIF
               _DebugAlert
                 _Sleep
             _I2C_WriteByte
               _I2C_UserAlert
                 _I2C_Stop
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
           _null_ptr_check *
         _bme280_soft_reset
           _Sleep *
           _bme280_set_regs *
             _WriteEnvSensor *
               _I2C_Stop
                 _I2C_Wait_SSPIF
                   _DebugAlert
                     _Sleep
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
               _I2C_WriteByte
                 _I2C_UserAlert
                   _I2C_Stop
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                 _I2C_Wait_SSPIF
                   _DebugAlert
                     _Sleep
             _interleave_reg_addr *
             _null_ptr_check *
           _null_ptr_check *
         _parse_device_settings
         _reload_device_settings
           _set_filter_standby_settings
             _bme280_get_regs
               _ReadEnvSensor *
                 _I2C_ReadByte
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
                 _I2C_Stop
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
                 _I2C_Wait_SSPIF
                   _DebugAlert
                     _Sleep
                 _I2C_WriteByte
                   _I2C_UserAlert
                     _I2C_Stop
                       _I2C_Wait_SSPIF
                         _DebugAlert
                           _Sleep
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
               _null_ptr_check *
             _bme280_set_regs
               _WriteEnvSensor *
                 _I2C_Stop
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
                 _I2C_Wait_SSPIF
                   _DebugAlert
                     _Sleep
                 _I2C_WriteByte
                   _I2C_UserAlert
                     _I2C_Stop
                       _I2C_Wait_SSPIF
                         _DebugAlert
                           _Sleep
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
               _interleave_reg_addr *
               _null_ptr_check *
             _fill_filter_settings
             _fill_standby_settings
           _set_osr_settings
             _set_osr_humidity_settings
               _bme280_get_regs
                 _ReadEnvSensor *
                   _I2C_ReadByte
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                   _I2C_Stop
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
                   _I2C_WriteByte
                     _I2C_UserAlert
                       _I2C_Stop
                         _I2C_Wait_SSPIF
                           _DebugAlert
                             _Sleep
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                 _null_ptr_check *
               _bme280_set_regs
                 _WriteEnvSensor *
                   _I2C_Stop
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
                   _I2C_WriteByte
                     _I2C_UserAlert
                       _I2C_Stop
                         _I2C_Wait_SSPIF
                           _DebugAlert
                             _Sleep
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                 _interleave_reg_addr *
                 _null_ptr_check *
             _set_osr_press_temp_settings
               _bme280_get_regs
                 _ReadEnvSensor *
                   _I2C_ReadByte
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                   _I2C_Stop
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
                   _I2C_WriteByte
                     _I2C_UserAlert
                       _I2C_Stop
                         _I2C_Wait_SSPIF
                           _DebugAlert
                             _Sleep
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                 _null_ptr_check *
               _bme280_set_regs
                 _WriteEnvSensor *
                   _I2C_Stop
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
                   _I2C_WriteByte
                     _I2C_UserAlert
                       _I2C_Stop
                         _I2C_Wait_SSPIF
                           _DebugAlert
                             _Sleep
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                 _interleave_reg_addr *
                 _null_ptr_check *
               _fill_osr_press_settings
               _fill_osr_temp_settings
       _write_power_mode
         _bme280_get_regs
           _ReadEnvSensor *
             _I2C_ReadByte
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
             _I2C_Stop
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
             _I2C_Wait_SSPIF
               _DebugAlert
                 _Sleep
             _I2C_WriteByte
               _I2C_UserAlert
                 _I2C_Stop
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
           _null_ptr_check *
         _bme280_set_regs
           _WriteEnvSensor *
             _I2C_Stop
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
             _I2C_Wait_SSPIF
               _DebugAlert
                 _Sleep
             _I2C_WriteByte
               _I2C_UserAlert
                 _I2C_Stop
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
           _interleave_reg_addr *
           _null_ptr_check *
     _bme280_set_sensor_settings
       _are_settings_changed
       _bme280_get_sensor_mode
         _bme280_get_regs
           _ReadEnvSensor *
             _I2C_ReadByte
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
             _I2C_Stop
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
             _I2C_Wait_SSPIF
               _DebugAlert
                 _Sleep
             _I2C_WriteByte
               _I2C_UserAlert
                 _I2C_Stop
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
           _null_ptr_check *
         _null_ptr_check
       _null_ptr_check
       _put_device_to_sleep
         _bme280_get_regs
           _ReadEnvSensor *
             _I2C_ReadByte
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
             _I2C_Stop
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
             _I2C_Wait_SSPIF
               _DebugAlert
                 _Sleep
             _I2C_WriteByte
               _I2C_UserAlert
                 _I2C_Stop
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
           _null_ptr_check *
         _bme280_soft_reset
           _Sleep *
           _bme280_set_regs *
             _WriteEnvSensor *
               _I2C_Stop
                 _I2C_Wait_SSPIF
                   _DebugAlert
                     _Sleep
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
               _I2C_WriteByte
                 _I2C_UserAlert
                   _I2C_Stop
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                 _I2C_Wait_SSPIF
                   _DebugAlert
                     _Sleep
             _interleave_reg_addr *
             _null_ptr_check *
           _null_ptr_check *
         _parse_device_settings
         _reload_device_settings
           _set_filter_standby_settings
             _bme280_get_regs
               _ReadEnvSensor *
                 _I2C_ReadByte
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
                 _I2C_Stop
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
                 _I2C_Wait_SSPIF
                   _DebugAlert
                     _Sleep
                 _I2C_WriteByte
                   _I2C_UserAlert
                     _I2C_Stop
                       _I2C_Wait_SSPIF
                         _DebugAlert
                           _Sleep
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
               _null_ptr_check *
             _bme280_set_regs
               _WriteEnvSensor *
                 _I2C_Stop
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
                 _I2C_Wait_SSPIF
                   _DebugAlert
                     _Sleep
                 _I2C_WriteByte
                   _I2C_UserAlert
                     _I2C_Stop
                       _I2C_Wait_SSPIF
                         _DebugAlert
                           _Sleep
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
               _interleave_reg_addr *
               _null_ptr_check *
             _fill_filter_settings
             _fill_standby_settings
           _set_osr_settings
             _set_osr_humidity_settings
               _bme280_get_regs
                 _ReadEnvSensor *
                   _I2C_ReadByte
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                   _I2C_Stop
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
                   _I2C_WriteByte
                     _I2C_UserAlert
                       _I2C_Stop
                         _I2C_Wait_SSPIF
                           _DebugAlert
                             _Sleep
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                 _null_ptr_check *
               _bme280_set_regs
                 _WriteEnvSensor *
                   _I2C_Stop
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
                   _I2C_WriteByte
                     _I2C_UserAlert
                       _I2C_Stop
                         _I2C_Wait_SSPIF
                           _DebugAlert
                             _Sleep
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                 _interleave_reg_addr *
                 _null_ptr_check *
             _set_osr_press_temp_settings
               _bme280_get_regs
                 _ReadEnvSensor *
                   _I2C_ReadByte
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                   _I2C_Stop
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
                   _I2C_WriteByte
                     _I2C_UserAlert
                       _I2C_Stop
                         _I2C_Wait_SSPIF
                           _DebugAlert
                             _Sleep
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                 _null_ptr_check *
               _bme280_set_regs
                 _WriteEnvSensor *
                   _I2C_Stop
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
                   _I2C_WriteByte
                     _I2C_UserAlert
                       _I2C_Stop
                         _I2C_Wait_SSPIF
                           _DebugAlert
                             _Sleep
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                 _interleave_reg_addr *
                 _null_ptr_check *
               _fill_osr_press_settings
               _fill_osr_temp_settings
       _set_filter_standby_settings
         _bme280_get_regs
           _ReadEnvSensor *
             _I2C_ReadByte
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
             _I2C_Stop
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
             _I2C_Wait_SSPIF
               _DebugAlert
                 _Sleep
             _I2C_WriteByte
               _I2C_UserAlert
                 _I2C_Stop
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
           _null_ptr_check *
         _bme280_set_regs
           _WriteEnvSensor *
             _I2C_Stop
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
             _I2C_Wait_SSPIF
               _DebugAlert
                 _Sleep
             _I2C_WriteByte
               _I2C_UserAlert
                 _I2C_Stop
                   _I2C_Wait_SSPIF
                     _DebugAlert
                       _Sleep
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
           _interleave_reg_addr *
           _null_ptr_check *
         _fill_filter_settings
         _fill_standby_settings
       _set_osr_settings
         _set_osr_humidity_settings
           _bme280_get_regs
             _ReadEnvSensor *
               _I2C_ReadByte
                 _I2C_Wait_SSPIF
                   _DebugAlert
                     _Sleep
               _I2C_Stop
                 _I2C_Wait_SSPIF
                   _DebugAlert
                     _Sleep
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
               _I2C_WriteByte
                 _I2C_UserAlert
                   _I2C_Stop
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                 _I2C_Wait_SSPIF
                   _DebugAlert
                     _Sleep
             _null_ptr_check *
           _bme280_set_regs
             _WriteEnvSensor *
               _I2C_Stop
                 _I2C_Wait_SSPIF
                   _DebugAlert
                     _Sleep
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
               _I2C_WriteByte
                 _I2C_UserAlert
                   _I2C_Stop
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                 _I2C_Wait_SSPIF
                   _DebugAlert
                     _Sleep
             _interleave_reg_addr *
             _null_ptr_check *
         _set_osr_press_temp_settings
           _bme280_get_regs
             _ReadEnvSensor *
               _I2C_ReadByte
                 _I2C_Wait_SSPIF
                   _DebugAlert
                     _Sleep
               _I2C_Stop
                 _I2C_Wait_SSPIF
                   _DebugAlert
                     _Sleep
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
               _I2C_WriteByte
                 _I2C_UserAlert
                   _I2C_Stop
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                 _I2C_Wait_SSPIF
                   _DebugAlert
                     _Sleep
             _null_ptr_check *
           _bme280_set_regs
             _WriteEnvSensor *
               _I2C_Stop
                 _I2C_Wait_SSPIF
                   _DebugAlert
                     _Sleep
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
               _I2C_WriteByte
                 _I2C_UserAlert
                   _I2C_Stop
                     _I2C_Wait_SSPIF
                       _DebugAlert
                         _Sleep
                 _I2C_Wait_SSPIF
                   _DebugAlert
                     _Sleep
             _interleave_reg_addr *
             _null_ptr_check *
           _fill_osr_press_settings
           _fill_osr_temp_settings
   _ClearString
     _strlen
   _ClearTxData
   _DebugAlert
     _Sleep
   _InitTiming
     _TMR0_SetInterruptHandler
   _Insert
     _strlen
   _InsertString
     _GetAtRowCSV (ARG)
       _ClearStringn
       _strlen
     _Insert (ARG)
       _strlen
     _strlen (ARG)
   _IntToString
     _ReverseString
       ___awdiv
       _strlen
     ___awdiv
     ___awmod
   _PollGPS
     _ClearNMEA
     _EUSART1_Read
     _EUSART1_is_rx_ready
     _GetAtRowCSV
       _ClearStringn
       _strlen
     _Insert
       _strlen
     _InsertString
       _GetAtRowCSV (ARG)
         _ClearStringn
         _strlen
       _Insert (ARG)
         _strlen
       _strlen (ARG)
     _InsertTxData
       _GetAtRowCSV
         _ClearStringn
         _strlen
       _InsertString
         _GetAtRowCSV (ARG)
           _ClearStringn
           _strlen
         _Insert (ARG)
           _strlen
         _strlen (ARG)
       _InsertTxDataSep
         _Insert
           _strlen
     _InsertTxDataSep
       _Insert
         _strlen
     _WriteGPS
       _EUSART1_Write
       _strlen
     _strcmp
       _GetAtRowCSV (ARG)
         _ClearStringn
         _strlen
     _strlen
   _SYSTEM_Initialize
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
   _SetupGPS
     _GPS_HasAcknowledged
       _EUSART1_Read
       _EUSART1_is_rx_ready
     _GPS_SendUBX
       _EUSART1_Write
       _GetLengthUBX
     _Sleep
     _WriteGPS
       _EUSART1_Write
       _strlen
   _Sleep
   _TransmitString
     _TransmitChar
       _TransmitBit
         _Sleep
     _strlen
   _UIntToHexString
     _ReverseString
       ___awdiv
       _strlen
     _crc16 (ARG)
       _crc16_update
         _strlen (ARG)
       _strlen
   _UIntToString
     _ReverseString
       ___awdiv
       _strlen
     ___lldiv
     ___llmod
   _bme280_get_sensor_data
     _bme280_compensate_data
       _compensate_humidity
         ___aldiv
           ___lmul (ARG)
         ___lmul
       _compensate_pressure
         ___aldiv
           ___lmul (ARG)
         ___lldiv
         ___lmul
       _compensate_temperature
         ___aldiv
           ___lmul (ARG)
         ___lmul
     _bme280_get_regs
       _ReadEnvSensor *
         _I2C_ReadByte
           _I2C_Wait_SSPIF
             _DebugAlert
               _Sleep
         _I2C_Stop
           _I2C_Wait_SSPIF
             _DebugAlert
               _Sleep
         _I2C_Wait_SSPIF
           _DebugAlert
             _Sleep
         _I2C_WriteByte
           _I2C_UserAlert
             _I2C_Stop
               _I2C_Wait_SSPIF
                 _DebugAlert
                   _Sleep
           _I2C_Wait_SSPIF
             _DebugAlert
               _Sleep
       _null_ptr_check *
     _bme280_parse_sensor_data
     _null_ptr_check
   _crc16
     _crc16_update
       _strlen (ARG)
     _strlen
   _strlen

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _TimerISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      4F       5       98.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
ABS                  0      0     190       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     48      50       8      100.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50     20      50      10      100.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0      4D      12       96.3%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0      46      14       87.5%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITBANK13           50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BANK13              50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITBANK14           50      0       0      33        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BANK14              50      0       0      34        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITBANK15           50      0       0      35        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BANK15              50      0       0      36        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITBANK16           50      0       0      37        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BANK16              50      0       0      38        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITBANK17           50      0       0      39        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BANK17              50      0       0      40        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITBANK18           50      0       0      41        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BANK18              50      0       0      42        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITBANK19           50      0       0      43        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BANK19              50      0       0      44        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITBANK20           50      0       0      45        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BANK20              50      0       0      46        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITBANK21           50      0       0      47        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BANK21              48      0       0      48        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITBANK22           50      0       0      49        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BANK22               0      0       0      50        0.0%
BITBANK23           50      0       0      51        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BANK23               0      0       0      52        0.0%
BITBANK24           50      0       0      53        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BANK24               0      0       0      54        0.0%
BITBANK25           20      0       0      55        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BANK25               0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
DATA                 0      0     190      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon Sep 16 11:38:06 2019

                           __end_of_ClearString 1849                             __end_of_GetAtRowCSV 113B  
                              GetAtRowCSV@index 0024                            __end_of_ClearStringn 2773  
                             GetAtRowCSV@column 0078                                     __CFG_CP$OFF 0000  
                             GetAtRowCSV@counti 0020                bme280_parse_sensor_data@data_lsb 0024  
              bme280_parse_sensor_data@data_msb 0028                                              l55 1272  
                                            l72 1707                                              l65 1C5F  
                                  ___awdiv@sign 0076                                 GPS_SendUBX@data 0079  
                                            _id 0148                      ?_set_osr_humidity_settings 0053  
              __end_of_bme280_parse_sensor_data 095D                                     __CFG_LVP$ON 0000  
                                           l126 14B9                                             l152 1CD8  
                                           l208 0FF7                                             l146 1D1E  
                                           l238 27AF                                             l192 0400  
                                           l185 0AFC                                             l355 25D5  
                                           l348 2604                                             l196 059C  
                                           l535 1D42                                             l538 1D77  
                                           l811 0C0C                                             l652 10F4  
                                           l812 0C6B                                             l807 0BAD  
                                           l832 07F4                                             l657 1134  
                                           l683 13D5                                             l783 1D98  
                                           l848 081E                                             l865 267E  
                                           l895 191E               bme280_parse_sensor_data@data_xlsb 0020  
               __size_of_fill_osr_temp_settings 001C                         __size_of_PMD_Initialize 000A  
                                  ___awmod@sign 0076                                    __CFG_BORV$LO 0000  
                                           wreg 0009                                 _InsertTxDataSep 26B7  
                                 __CFG_BBEN$OFF 0000                bme280_parse_sensor_data@reg_data 002C  
                                bme280_init@dev 0066                 __size_of_compensate_temperature 01A8  
                             ___g_timeout_start 0144                                  ReverseString@i 0026  
                                WriteGPS@counti 0078                                      _DebugAlert 18C1  
                                          l1117 14CE                                            l4000 1E8D  
                                          l4010 1EA8                                            l4014 1EB0  
                                          l4006 1E9F                                            l5002 1AC7  
                                          l4130 14BB                                            l4122 1489  
                                          l5004 1ADF                                            l3500 26A4  
                                          l5030 1674                                            l5110 1D30  
                                          l3502 26B0                                            l4222 115B  
                                          l4126 14A0                           __size_of_crc16_update 003D  
                                          l4224 1196                                            l3600 133C  
                                          l5050 1698                                            l5018 1C37  
                                          l5106 1D13                                            l4402 1C99  
                                          l3602 134A                                            l4234 187D  
                                          l4322 1A04                                            l5052 16B2  
                                          l5204 19F0                                            l5124 1900  
                                          l5300 1383                                            l4308 1807  
                                          l4324 19F5                                            l4244 1854  
                                          l3612 1A29                                            l5142 1CCD  
                                          l5230 2602                                            l4406 1CA1  
                                          l3606 134F                                            l4326 1A12  
                                          l3630 1F69                                            l4422 1C09  
                                          l4350 0839                                            l5128 1913  
                                          l5312 13C9                                            l3640 1F97  
                                          l3632 1F77                                            l4416 1BE3  
                                          l3616 1A33                                            l4344 0824  
                                          l5058 16D2                                            l5066 1702  
                                          l5146 1CEA                                            l5170 27FE  
                                          l5218 1BD9                                            l5306 13A6  
                                          l5410 12CF                                            l4514 1830  
                                          l4282 1596                                            l4274 158E  
                                          l4266 1578                                            l5250 2680  
                                          l4530 1420                                            l4522 13F6  
                                          l4418 1BF1                                            l4426 1C14  
                                          l5068 1709                                            l5092 1F05  
                                          l5244 1B1B                                            l5332 1B97  
                                          l5228 2601                                            l4380 1C6B  
                                          l4284 15B5                                            l4276 158F  
                                          l3644 1FA2                                            l4348 0801  
                                          l5158 1B56                                            l5262 121C  
                                          l3910 260E                                            l4534 1433  
                                          l3822 03E4                                            l5192 1E10  
                                          l5280 1268                                            l5328 1B86  
                                          l4392 1C78                                            l4384 1C72  
                                          l3584 275A                                            l4640 0B72  
                                          l4288 15B7                                            l5344 1A89  
                                          l4536 1440                                            l3680 1528  
                                          l3832 0581                                            l5282 126B  
                                          l4394 1C84                                            l4546 11B3  
                                          l4642 0BD0                                            l5418 1D7C  
                                          l5442 194F                                            l3666 14EF  
                                          l3658 14DF                                            l3834 0589  
                                          l5276 1253                                            l4580 2775  
                                          l4636 0B95                                            l4564 1FAE  
                                          l3684 1536                                            l3676 151D  
                                          l3668 14FD                                            l3836 0594  
                                          l4398 1C90                                            l4558 11FD  
                                          l3942 1139                                            l3598 1310  
                                          l4638 0BCA                                            l4654 0D0C  
                                          l3782 0AE6                                            l5526 07E2  
                                          l5462 05B8                                            l4664 0D2F  
                                          l3784 0AF4                                            l3938 1126  
                                          l3954 1F47                                            l4666 0B25  
                                          l3882 0FC8                                            l3956 1F17  
                                          l4668 0D34                                            l3876 0FB4  
                                          l4934 27B2                                            l3982 1E6E  
                                          l3958 1F53                                            l3886 0FEF  
                                          l4936 27B3                                            l4946 199B  
                                          l4892 1D69                                            l4972 1E4C  
                                          l3988 1E79                                            l4886 18C4  
                                          l3998 1E81                                            l4976 1E34  
                                          l4978 1E5F                                            STR_1 284E  
                                          STR_2 2834                                            STR_3 2882  
                                          STR_4 281A                                            STR_5 2868  
                                          STR_6 2800                                            STR_7 289C  
                                          STR_8 28B6                                            STR_9 28B8  
                                          u3005 14FE                                            _LATA 0018  
                                          _LATB 0019                                            u3015 1512  
                                          _LATC 001A                                            u3025 151E  
                                          u3135 0976                                            u3225 0410  
                                          u3145 0989                                            u4115 1BE6  
                                          u3235 042F                                            u3155 09F4  
                                          u4300 11A8                                            u4045 1C7B  
                                          u3405 1F51                                            u3245 044A  
                                          u5110 1DCF                                            u3415 1F22  
                                          u4135 1BFF                                            u3255 04BC  
                                          u3505 1EA0                                            u4065 1C8A  
                                          u4145 1C0A                                            u3185 015A  
                                          u4075 1C91                                            u3195 0188  
                                          u2805 1643                                            u4245 183A  
                                          u4325 11E8                                            u3365 1107  
                                          u3285 0D5E                                            u2815 2764  
                                          u4415 0B7C                                            u3295 0D7C  
                                          u5065 1036                                            u3465 1E84  
                                          u2825 12FD                                            u4265 1413  
                                          u3705 0849                                            u4290 11A7  
                                          u5410 1084                                            u5075 1048  
                                          u4355 278D                                            u3395 10FE  
                                          u2835 131A                                            u2915 1F78  
                                          u3715 0860                                            u5420 1091  
                                          _PMD0 0796                                            u5085 105A  
                                          u3485 1E8E                                            u5405 1AA7  
                                          u2925 1F8C                                            u3725 0875  
                                          _PMD1 0797                                            _PMD2 0798  
                                          u5095 106D                                            u3495 1E98  
                                          u2935 1F98                                            u2855 1A34  
                                          u3735 08B6                                            _PMD3 0799  
                                          u5520 05C3                                            _PMD4 079A  
                                          u4385 0B88                                            u2865 1A3B  
                                          u3745 08CE                                            _PMD5 079B  
                                          _PMD6 079C                                            u3835 1165  
                                          u3915 181F                                            u3755 08E3  
                                          _PMD7 079D                                            u5380 1A95  
                                          u3845 1887                                            u3765 0925  
                                          u5390 1A96                                            u5374 1A8F  
                                          u3855 185E                                            u5375 1A8E  
                                          u2895 1F6C                                            u4665 1939  
                                          u2985 14F2                                            u5547 193C  
                                          u4675 18CD                                            u4915 26F0  
                                          u4765 1E48                                            u4925 2744  
                                          u4775 1E3A                                            u5495 1959  
                                          u4785 1ACD                     __end_of_compensate_humidity 1000  
                                          u4985 270C                                            u4995 2728  
                                          _WPUA 1F39                                            _WPUB 1F44  
                                          _WPUC 1F4F                          ??_fill_filter_settings 0072  
                     __size_of_write_power_mode 0039                          WriteEnvSensor@reg_addr 002C  
           bme280_parse_sensor_data@uncomp_data 0070                          WriteEnvSensor@reg_data 002D  
             bme280_get_sensor_data@uncomp_data 00D7                                   _EUSART1_Write 25D4  
                                 __CFG_FCMEN$ON 0000                 __size_of_bme280_set_sensor_mode 0040  
                     __size_of_set_osr_settings 002A                           __size_of_I2C_ReadByte 0019  
                           _put_device_to_sleep 1B99                                            _main 05AC  
                 compensate_humidity@calib_data 002E                            __end_of_GetLengthUBX 2664  
                                 ?_EUSART1_Read 0070                                __end_of_I2C_Init 26A0  
                                  TransmitBit@b 007C                                            fsr0h 0005  
                                          fsr1h 0007                                            indf0 0000  
                                          fsr0l 0004                                            indf1 0001  
                                          fsr1l 0006                                            btemp 007E  
                        interleave_reg_addr@len 0072                                __end_of_I2C_Stop 25B4  
          are_settings_changed@desired_settings 0070                     put_device_to_sleep@reg_data 00A0  
                                 __CFG_BOREN$ON 0000                               GPS_SendUBX@length 0075  
                  GPS_HasAcknowledged@startTime 0020                                            start 000E  
                          bme280_soft_reset@dev 0059                                 _HALF_BAUD_DELAY 28B4  
                   __end_of_compensate_pressure 05AC                                   __CFG_CSWEN$ON 0000  
                                 __CFG_MCLRE$ON 0000                  reload_device_settings@settings 0067  
                       ??_fill_standby_settings 0072                                   ??_IntToString 0029  
                   put_device_to_sleep@settings 00A6                                   _ReadEnvSensor 1E13  
                               __end_of_PollGPS 0D36                                 bme280_init@rslt 0065  
                       __end_of_TMR0_Initialize 2677                  ??_TMR0_DefaultInterruptHandler 0070  
                __size_of_OSCILLATOR_Initialize 0009                   __end_of_OSCILLATOR_Initialize 25E5  
                          ?_put_device_to_sleep 0070                                PollGPS@startTime 003D  
                               __end_of___aldiv 153F                           ReverseString@opposite 0023  
                                         ?_main 0070                      GPS_HasAcknowledged@ackByte 0024  
                               __end_of___awdiv 1EB5                                           STR_10 28AA  
                                         STR_11 28B1                                   __CFG_WDTE$OFF 0000  
                               __end_of___awmod 1CA6                                 WriteGPS@message 0075  
                               __end_of___lldiv 1FAB                          _bme280_compensate_data 1444  
                               ___awdiv@divisor 0070                                 __end_of___llmod 1C1D  
                                         i1l389 000C                                 ___awdiv@counter 0075  
                                         _OSCEN 0891                                    _crc16_update 0801  
                                         _TMR0H 059D                                           _TMR0L 059C  
                                    Insert@dest 0075                               _bme280_soft_reset 1B1D  
                                         _TRISA 0012                                           _TRISB 0013  
                                         _TRISC 0014               __size_of_TMR0_SetInterruptHandler 0006  
                      __size_of_bme280_get_regs 0044                             ___lmul@multiplicand 0074  
                     ?_TMR0_SetInterruptHandler 0070                                           _Sleep 1915  
                              __end_of_TMR0_ISR 2635                  compensate_pressure@uncomp_data 00B4  
                    bme280_compensate_data@rslt 005F                              ?_bme280_soft_reset 0070  
                                  _I2C_ReadByte 26CF                                   __CFG_WRTB$OFF 0000  
                                 __CFG_WRTC$OFF 0000                                   __CFG_WRTD$OFF 0000  
                      UIntToHexString@remainder 0034                                           _crc16 27B5  
                              crc16_update@wCrc 0079                                ?_UIntToHexString 0029  
                                  ?_GPS_SendUBX 0070                                           _ticks 00E8  
                                 TransmitChar@i 0021                                  ?_EUSART1_Write 0070  
                                         pclath 000A                         GPS_HasAcknowledged@data 002F  
                 __size_of_are_settings_changed 000B                                     _ClearTxData 2773  
                                ??_EUSART1_Read 0070                             ??_bme280_soft_reset 0053  
                                         status 0003                                           wtemp0 007E  
                                   _ClearString 1822                        __size_of_bme280_set_regs 00A1  
                              ??_get_calib_data 0040                          put_device_to_sleep@dev 00A4  
                         bme280_soft_reset@rslt 0057                                     _GetAtRowCSV 10D9  
                        _fill_osr_temp_settings 273B              _EUSART1_DefaultFramingErrorHandler 0000  
    bme280_set_sensor_settings@desired_settings 00AB                                   PollGPS@counti 0041  
                          __end_of_UIntToString 2000                   bme280_set_sensor_settings@dev 006C  
                               __initialization 0010                           DebugAlert@num_flashes 0024  
                        _compensate_temperature 095D                                      _InitTiming 25CC  
             parse_humidity_calib_data@reg_data 007D                                  ?_ReadEnvSensor 002D  
                    __end_of_EUSART1_Initialize 1022                                    __end_of_main 0800  
                          GPS_HasAcknowledged@i 0031                                  __CFG_SAFEN$OFF 0000  
                            __size_of_ClearNMEA 001D                     ?_INTERRUPT_InterruptManager 0070  
                        _bme280_set_sensor_mode 1B59                           ??_put_device_to_sleep 0069  
                       __end_of_InsertTxDataSep 26CF                         ?_bme280_get_sensor_data 0061  
                     __end_of_bme280_soft_reset 1B59                         ?_bme280_get_sensor_mode 0040  
                                        ??_main 00E3                           __end_of_ReverseString 11A0  
                           __end_of_IntToString 1209                          __size_of_I2C_UserAlert 0003  
                       __size_of_WriteEnvSensor 0033                                ??_null_ptr_check 0070  
               bme280_compensate_data@comp_data 005C               bme280_set_sensor_mode@sensor_mode 00AB  
                              ReverseString@str 0028                                   ?_InsertTxData 0035  
                              __end_of_TimerISR 25EF                 compensate_pressure@pressure_max 00B5  
                              __end_of_SetupGPS 1DC6                       bme280_get_sensor_data@dev 0062  
                         ReadEnvSensor@reg_addr 002E                                   ?_InsertString 0029  
                         ReadEnvSensor@reg_data 002F             write_power_mode@sensor_mode_reg_val 005A  
                                        ?_Sleep 0070                        _bme280_parse_sensor_data 083E  
                                        ?_crc16 0021                                      Sleep@start 0078  
                        __size_of_I2C_WriteByte 000E                                ___llmod@dividend 0074  
                              ___awdiv@dividend 0072                                     ?_DebugAlert 0020  
                                        _ANSELA 1F38                                          _ANSELB 1F43  
                                        _ANSELC 1F4E                              __CFG_RSTOSC$HFINT1 0000  
                                        _T0CON0 059E                                          _T0CON1 059F  
                       __end_of_HALF_BAUD_DELAY 28B6                                __end_of_WriteGPS 1898  
                                        _RC1REG 0119                        _compensate_humidity$2719 003A  
                                        _RC1STA 011D                        ??_reload_device_settings 0065  
                                        _RB4PPS 1F1C                                          _RB6PPS 1F1E  
                                        _RB7PPS 1F1F                                          _ODCONA 1F3A  
                                        _ODCONB 1F45                                          _ODCONC 1F50  
                  __size_of_EUSART1_is_rx_ready 0005                                  __CFG_WDTCCS$SC 0000  
                                        _INLVLA 1F3C                                          _INLVLB 1F47  
                                        _INLVLC 1F52                                          _OSCFRQ 0893  
                                        _TX1REG 011A                                          _TX1STA 011E  
                           I2C_ReadByte@rcvdata 002C                                     Insert@index 0078  
                  __size_of_interleave_reg_addr 002D                       bme280_get_sensor_mode@dev 0040  
                     bme280_set_sensor_mode@dev 006C                           __size_of_ClearStringn 001C  
                    ?_parse_humidity_calib_data 0070                                       ??_PollGPS 0039  
                                        _Insert 12E1                                  __CFG_PWRTS$OFF 0000  
                  fill_filter_settings@reg_data 0075                                          ___lmul 1A21  
                             crc16_update@pData 0075                                       ??___aldiv 007C  
                                     ??___awdiv 0074                                  __CFG_STVREN$ON 0000  
                                     ??___awmod 0074                                       ??___lldiv 0078  
                  parse_humidity_calib_data@dev 0070                                       ??___llmod 0078  
                __end_of_bme280_get_sensor_data 10D9                             DebugAlert@delay_low 0022  
                      ?_EUSART1_SetErrorHandler 0070                  __end_of_bme280_get_sensor_mode 19F2  
                              ?_TMR0_Initialize 0070                  fill_osr_temp_settings@reg_data 0075  
                   compensate_pressure@pressure 00C5                                ___awdiv@quotient 0077  
                               ___awmod@divisor 0070                    fill_filter_settings@settings 0070  
                               ___awmod@counter 0075                ??_EUSART1_SetOverrunErrorHandler 0072  
               ?_EUSART1_SetOverrunErrorHandler 0070                                          _txdata 2764  
                                        _strcmp 19F2                                          _strlen 26A0  
                      interleave_reg_addr@index 0077                               get_calib_data@dev 005F  
                                ??_InsertTxData 007E                                    IntToString@i 002C  
                                  IntToString@n 007B                                 InsertString@src 002B  
                                _PMD_Initialize 25EF                                       ?_I2C_Init 0070  
                       compensate_pressure@var1 00C9                         compensate_pressure@var2 00C1  
                       compensate_pressure@var3 00A0                         compensate_pressure@var4 00A4  
                       compensate_pressure@var5 00A8                                  ??_InsertString 007C  
                                     ?_I2C_Stop 0070                  fill_osr_temp_settings@settings 0070  
                              ??_TransmitString 0025                             write_power_mode@dev 0053  
                               ??_EUSART1_Write 0070        TMR0_SetInterruptHandler@InterruptHandler 0070  
                         __size_of_GetLengthUBX 0012                                   ClearStringn@i 0074  
                                  _ClearStringn 2757                               __end_of_ClearNMEA 1822  
                       put_device_to_sleep@rslt 00A5                               ??_bme280_get_regs 003B  
                              _write_power_mode 1AE4                bme280_compensate_data@calib_data 005D  
                  interleave_reg_addr@temp_buff 0070                               _SYSTEM_Initialize 2643  
                       __end_of__initialization 0050                                _set_osr_settings 18EB  
                                 _I2C_UserAlert 25AC                              ?_SYSTEM_Initialize 0070  
                           main@convertedNumber 0150                            _UIntToHexString$1811 0030  
              compensate_temperature@calib_data 002E                 set_filter_standby_settings@rslt 005A  
                               ??_ReadEnvSensor 0032                             ReverseString@counti 0024  
                bme280_set_sensor_settings@rslt 00AD                         __size_of_I2C_Wait_SSPIF 0048  
                                 ??_bme280_init 0060                        get_calib_data@calib_data 0043  
                                __pcstackCOMMON 0070                                     ?_InitTiming 0070  
                                 __end_of_Sleep 1940                                  PollGPS@success 0043  
                                 _I2C_WriteByte 2635                __size_of_fill_osr_press_settings 001B  
                                  __pidataBANK4 196C                               ??_bme280_set_regs 0037  
                                 __end_of_crc16 27DA                             ??_SYSTEM_Initialize 0072  
                                   _IntToString 11A0                                       ?_TMR0_ISR 0070  
              set_osr_settings@desired_settings 0063                                   ??_TransmitBit 007C  
                           __size_of_DebugAlert 002A                                     PollGPS@byte 0046  
                        __end_of_PMD_Initialize 25F9                      __size_of_bme280_soft_reset 003C  
                              ?_InsertTxDataSep 007C                            __end_of_EUSART1_Read 2610  
                   ??_set_osr_humidity_settings 0056                           _parse_device_settings 1022  
                                  _GetLengthUBX 2652                                      ??_I2C_Init 0070  
                                    ??_I2C_Stop 007D                are_settings_changed@sub_settings 0071  
                                       ??_Sleep 0074                             set_osr_settings@dev 005F  
                                       ??_crc16 007E                     __end_of_GPS_HasAcknowledged 15D1  
                     __end_of_SYSTEM_Initialize 2652                                      __pbssBANK1 00E8  
                                    __pbssBANK2 0120                                      __pbssBANK3 01A0  
                                    __pbssBANK4 024C                                   ??_BME280_Init 00AE  
               __size_of_reload_device_settings 0026                     interleave_reg_addr@reg_addr 0076  
                         __size_of_UIntToString 0055                            __size_of_GPS_SendUBX 0027  
                                ?_I2C_UserAlert 0070                               ReverseString@temp 0022  
                   interleave_reg_addr@reg_data 0071                           InsertString@destLimit 002F  
                              _setNavFlightMode 0220                                         ?_Insert 0075  
               __end_of_EUSART1_SetErrorHandler 25C0                                      __pmaintext 05AC  
                                     ?_TimerISR 0070                                  ?_I2C_WriteByte 0070  
                                     ?_SetupGPS 0070                  set_osr_press_temp_settings@dev 0055  
              __end_of_TMR0_SetInterruptHandler 25BA                                         ?___lmul 0070  
                                    ??_TMR0_ISR 0070                  __size_of_fill_standby_settings 001C  
                               __CFG_PPS1WAY$ON 0000                   __end_of_fill_standby_settings 273B  
                                    __pintentry 0004                         ?_bme280_compensate_data 005B  
   set_filter_standby_settings@desired_settings 0059                                  ___lmul@product 0078  
                              ReadEnvSensor@len 0030                                       ?_WriteGPS 0075  
                           __end_of_bme280_init 1274                                 __CFG_ZCDDIS$OFF 0000  
                               ?_PMD_Initialize 0070                                  _WriteEnvSensor 1AB1  
                                       ?_strcmp 007B                                         ?_strlen 0070  
        __end_of_EUSART1_SetFramingErrorHandler 25C6         __size_of_EUSART1_SetFramingErrorHandler 0006  
                _EUSART1_SetFramingErrorHandler 25C0                    ??_bme280_set_sensor_settings 006D  
                           __end_of_TransmitBit 268B                                         _SP1BRGH 011C  
                                       _SP1BRGL 011B                                         _OSCCON1 088D  
                                       _OSCCON3 088F                                    _UIntToString 1FAB  
                                       _OSCTUNE 0892                    ?_parse_temp_press_calib_data 0070  
                                       _SSP1ADD 018D                                         _SLRCONA 1F3B  
                                       _SLRCONB 1F46                                         _SLRCONC 1F51  
                                       _SSP1BUF 018C                   set_osr_humidity_settings@rslt 005B  
                           __size_of_InitTiming 0008                                    Insert@length 0025  
                       ?_fill_osr_temp_settings 0070                    ?_set_osr_press_temp_settings 0053  
                                  ?_ClearTxData 0070                       _set_osr_humidity_settings 1EB5  
                                       Insert@i 0027                                    ?_ClearString 0070  
                                  ?_GetAtRowCSV 0076                   __size_of_fill_filter_settings 001C  
                  set_osr_humidity_settings@dev 0055                         ?_compensate_temperature 002E  
                          __end_of_InsertTxData 1A80                   bme280_soft_reset@soft_rst_cmd 0056  
                                       Sleep@ms 0070                                         _PollGPS 0B05  
                  __size_of_compensate_humidity 02CA                            __end_of_InsertString 1F59  
                           __end_of_BME280_Init 12E1                                 __size_of_Insert 0075  
                                    ??_TimerISR 0070                                      ??_SetupGPS 007C  
                       ?_bme280_set_sensor_mode 006C                  __end_of_bme280_compensate_data 14BD  
                                       ___aldiv 14BD                                GetLengthUBX@data 0073  
                                       ___awdiv 1E64                                 __size_of___lmul 002F  
                                       ___awmod 1C61                                         ___lldiv 1F59  
                                       ___llmod 1BDB                    __end_of_are_settings_changed 2604  
                        __end_of_WriteEnvSensor 1AE4                    __size_of_compensate_pressure 0558  
                        _reload_device_settings 27DA                             _EUSART1_is_rx_ready 1800  
                    ??_bme280_parse_sensor_data 0071                          ?_parse_device_settings 0070  
                                    ??_WriteGPS 0077                              crc16_update@length 0077  
                                       __ptext1 27B5                                         __ptext2 0801  
                                       __ptext3 107A                                         __ptext4 083E  
                                       __ptext5 1444                                         __ptext6 095D  
                                       __ptext7 0054                                         __ptext8 0D36  
                                       __ptext9 1A21             parse_humidity_calib_data@dig_H4_lsb 0074  
           parse_humidity_calib_data@dig_H4_msb 0076             parse_humidity_calib_data@dig_H5_lsb 0078  
           parse_humidity_calib_data@dig_H5_msb 007A                            DebugAlert@delay_high 0020  
                               __CFG_WRTAPP$OFF 0000                                 __size_of_strcmp 002F  
           parse_humidity_calib_data@calib_data 007C                                 __size_of_strlen 0017  
                           _interleave_reg_addr 1998                           _OSCILLATOR_Initialize 25DC  
                              ___awmod@dividend 0072                                ___aldiv@dividend 0024  
                            _EUSART1_Initialize 1001                        ??_PIN_MANAGER_Initialize 0070  
                               __CFG_WRTSAF$OFF 0000                              get_calib_data@F376 024C  
                     reload_device_settings@dev 0064                  __end_of_fill_osr_temp_settings 2757  
                                       main@end 0160                      __size_of_SYSTEM_Initialize 000F  
                                       clrloop0 2611                                    ??_DebugAlert 007C  
                 ??_parse_temp_press_calib_data 0071                                 ??_I2C_UserAlert 007D  
                          end_of_initialization 0050                 bme280_get_sensor_data@comp_data 0061  
                            get_calib_data@rslt 005E                            ?_EUSART1_is_rx_ready 0070  
                           ?_EUSART1_Initialize 0070                                InsertString@dest 0029  
         bme280_set_sensor_settings@sensor_mode 00AC                                         init_ram 261C  
                __end_of_compensate_temperature 0B05                     _EUSART1_OverrunErrorHandler 01E9  
                                       initloop 261D                   ??_set_osr_press_temp_settings 0056  
                          ?_interleave_reg_addr 0070                        __size_of_UIntToHexString 0078  
                               ??_I2C_WriteByte 007D                                 ___lldiv@divisor 0070  
                __end_of_bme280_set_sensor_mode 1B99                                  _I2C_Wait_SSPIF 1D32  
                               ___lldiv@counter 007D                     ??_parse_humidity_calib_data 0071  
                       _fill_osr_press_settings 26E8                     __end_of_put_device_to_sleep 1BDB  
                          write_power_mode@rslt 0058                                     _bme280_init 1209  
                      write_power_mode@reg_addr 0059                                ___aldiv@quotient 002A  
                    reload_device_settings@rslt 0068               compensate_temperature@temperature 0051  
                         __size_of_EUSART1_Read 000C                                      main@F11368 0120  
                          ??_EUSART1_Initialize 0072                                  ClearString@str 007A  
                               ?_WriteEnvSensor 002B                                         strcmp@l 0028  
                                       strcmp@r 007B                                     _TransmitBit 2677  
                         __CFG_WDTCPS$WDTCPS_31 0000                                         strlen@a 0073  
                      __end_of_write_power_mode 1B1D                                         strlen@s 0070  
                            __end_of_DebugAlert 18EB                        _TMR0_SetInterruptHandler 25B4  
                      __end_of_set_osr_settings 1915                                 _bme280_get_regs 1C1D  
                                 ?_TransmitChar 0070                              bme280_get_regs@dev 003A  
                               WriteEnvSensor@i 0032                              bme280_get_regs@len 0038  
                               TransmitString@i 0028                 fill_osr_press_settings@reg_data 0075  
                                GetAtRowCSV@col 0022                                    GPS_SendUBX@i 0077  
                                GetAtRowCSV@src 0076                               __size_of_I2C_Init 0015  
                             __size_of_I2C_Stop 0005                __size_of_EUSART1_SetErrorHandler 0006  
                           EUSART1_Write@txData 0070                                __CFG_FEXTOSC$OFF 0000  
                         ??_EUSART1_is_rx_ready 0070                    ?_set_filter_standby_settings 0053  
               fill_osr_press_settings@settings 0070                  compensate_humidity@uncomp_data 003E  
                               _bme280_set_regs 166A                                     _BME280_Init 1274  
                          bme280_init@try_count 0063                           ??_interleave_reg_addr 0073  
                        __end_of_I2C_Wait_SSPIF 1D7A                                    _EUSART1_Read 2604  
                     bme280_soft_reset@reg_addr 0058               compensate_temperature@uncomp_data 004C  
                                _gps_configured 00EC                                       _ClearNMEA 1805  
                          ReverseString@halfway 0020                          __size_of_ReverseString 0065  
                         TransmitString@message 0023                                    ??_InitTiming 0072  
          __size_of_parse_temp_press_calib_data 00F5                                  __end_of_Insert 1356  
                                  ?_IntToString 007B                                  __end_of___lmul 1A50  
                       __size_of_get_calib_data 004D                                       Insert@src 0077  
          __size_of_set_osr_press_temp_settings 0046                               __size_of_TMR0_ISR 000D  
            __end_of_bme280_set_sensor_settings 13CC                      _bme280_set_sensor_settings 1356  
                        ?_OSCILLATOR_Initialize 0070                  parse_temp_press_calib_data@dev 0070  
                                     _EnvSensor 01A0                                  ??_TransmitChar 007D  
                      bme280_set_regs@temp_buff 003A                                  __end_of_strcmp 1A21  
                     _parse_humidity_calib_data 15D1                                  __end_of_strlen 26B7  
                           start_initialization 0010                             UIntToHexString@dest 002D  
                                  PollGPS@index 0049                        __size_of_TMR0_Initialize 0013  
               __size_of_PIN_MANAGER_Initialize 0029           parse_temp_press_calib_data@calib_data 0072  
                              UIntToHexString@i 0038                                UIntToHexString@n 0029  
                            __end_of_InitTiming 25D4                           __end_of_EUSART1_Write 25DC  
                             InsertTxData@field 0037                           __size_of_InsertTxData 0030  
                             InsertTxData@index 0035                            _are_settings_changed 25F9  
                            I2C_ReadByte@ackbit 002B                         __size_of_null_ptr_check 0025  
                         __size_of_InsertString 0052                   ??_set_filter_standby_settings 0056  
                               ___llmod@divisor 0070                                 ?_I2C_Wait_SSPIF 0070  
                     ??_fill_osr_press_settings 0072                                 ___llmod@counter 0079  
                                    ?_ClearNMEA 0070                            __size_of_ClearTxData 001D  
                          __size_of_ClearString 0027                                        ??_Insert 0020  
                              __CFG_LPBOREN$OFF 0000                            __size_of_GetAtRowCSV 0062  
                                  ClearTxData@i 0072                                ??_PMD_Initialize 0070  
                            bme280_init@chip_id 0064                           __end_of_ReadEnvSensor 1E64  
                          set_osr_settings@rslt 0062                                        ??___lmul 0078  
            __size_of_set_osr_humidity_settings 0052                         __end_of_bme280_get_regs 1C61  
                               BME280_Init@rslt 00B1                               ??_UIntToHexString 002E  
                             __size_of_TimerISR 000A                                     __pdataBANK4 0220  
                             __size_of_SetupGPS 004C                              null_ptr_check@rslt 0072  
                                  ClearString@i 0078                                        ??_strcmp 007D  
                                      ??_strlen 0072                                   ?_crc16_update 0075  
                    compensate_temperature@var1 0048                      compensate_temperature@var2 004D  
         compensate_temperature@temperature_max 0044                                   _ReverseString 113B  
                                  GetAtRowCSV@i 0026                               __size_of_WriteGPS 0028  
                                   __pbssBIGRAM 26D8                                    _InsertTxData 1A50  
                                     ___latbits 0003                             _compensate_humidity 0D36  
                                 __pcstackBANK0 0020                                   __pcstackBANK1 00A0  
                                 __pcstackBANK2 0150                                   ?_I2C_ReadByte 0070  
                       __end_of_bme280_set_regs 170B                                    _InsertString 1F07  
                                 crc16_update@i 0020                        __size_of_InsertTxDataSep 0018  
                                 ??_GPS_SendUBX 0074                        _compensate_pressure$2716 00B9  
                      _compensate_pressure$2717 00AC                        _compensate_pressure$2718 00B0  
                         ?_are_settings_changed 0070                             _compensate_pressure 0054  
              ??_EUSART1_SetFramingErrorHandler 0072                 ?_EUSART1_SetFramingErrorHandler 0070  
                        PollGPS@eusart_complete 0045             bme280_set_sensor_mode@last_set_mode 00AC  
             set_osr_humidity_settings@ctrl_hum 0059                                       crc16@data 0021  
                       __size_of_TransmitString 002C                           _TMR0_InterruptHandler 00EE  
                                     WriteGPS@i 007A                                       __pnvBANK1 00EE  
                                     __pnvBANK3 01E7                    __size_of_GPS_HasAcknowledged 0092  
             set_osr_humidity_settings@reg_addr 005C                        set_osr_settings@settings 005D  
                      ??_bme280_get_sensor_data 0063                            ?_compensate_humidity 002E  
                      ??_bme280_get_sensor_mode 0041                                        ?_PollGPS 0070  
                        _PIN_MANAGER_Initialize 1898                         ?_reload_device_settings 0064  
                       ??_parse_device_settings 0071                                        ?___aldiv 0020  
                                      ?___awdiv 0070                                        ?___awmod 0070  
                                      ?___lldiv 0070             set_filter_standby_settings@reg_addr 005B  
                                      ?___llmod 0070             set_filter_standby_settings@reg_data 005C  
             set_osr_humidity_settings@settings 0053                 set_osr_press_temp_settings@rslt 005A  
                          ?_compensate_pressure 002E            __size_of_set_filter_standby_settings 0046  
             __end_of_set_osr_humidity_settings 1F07                    ??_INTERRUPT_InterruptManager 0070  
                         _fill_standby_settings 271F                    __end_of_fill_filter_settings 271F  
                                ??_crc16_update 007B                 __end_of_fill_osr_press_settings 2703  
                                ?_ReverseString 0070                                        _BAUD1CON 011F  
           set_filter_standby_settings@settings 0053              _EUSART1_DefaultOverrunErrorHandler 0000  
                                  _PollGPS$2720 0044                                        _I2C_Init 268B  
                                      _I2C_Stop 25AF                            _EUSART1_ErrorHandler 01E7  
                                ??_I2C_ReadByte 007D                              ClearStringn@length 0070  
                             ReadEnvSensor@rslt 0034                         _EUSART1_SetErrorHandler 25BA  
                                __size_of_Sleep 002B                                  __size_of_crc16 0025  
                          InsertTxDataSep@index 007C                                       _nmea_data 26D8  
   set_osr_press_temp_settings@desired_settings 0059                                 ___aldiv@divisor 0020  
                             ??_TMR0_Initialize 0072                                 ___aldiv@counter 0028  
                                      _LATAbits 0018         EUSART1_SetErrorHandler@interruptHandler 0070  
                                      _LATCbits 001A                         BME280_Init@settings_sel 00B0  
                                   ??_ClearNMEA 0070                             __end_of_GPS_SendUBX 1870  
                                     clear_ram0 2610                            __end_of_TransmitChar 1AB1  
                                      _PIE0bits 0716                           ??_compensate_humidity 0032  
                __end_of_reload_device_settings 2800             __size_of_INTERRUPT_InterruptManager 000A  
           parse_temp_press_calib_data@reg_data 0073                                ??_WriteEnvSensor 0030  
                    ??_TMR0_SetInterruptHandler 0072                                        _PIR0bits 070C  
                                      _PIR3bits 070F                                        _RX1DTPPS 1ECB  
                                  ?_bme280_init 0070                                     DebugAlert@i 0025  
                                 UIntToString@i 0030                                   UIntToString@n 0029  
                bme280_get_sensor_data@reg_data 00CD                               __CFG_BBSIZE$BB512 0000  
                                      _SSP1CON1 0190                                        _SSP1CON2 0191  
                                      _SSP1CON3 0192                                        _TMR0_ISR 2628  
                         ??_compensate_pressure 0032                                        _SSP1STAT 018F  
                              ?_bme280_get_regs 0037                                  _get_calib_data 1DC6  
                                  ?_TransmitBit 0070                            __size_of_IntToString 0069  
                             ?_write_power_mode 0053                     compensate_humidity@humidity 0043  
                             ?_set_osr_settings 005D                            WriteEnvSensor@dev_id 002B  
                            ??_write_power_mode 0054                                       main@index 016E  
                       compensate_humidity@var1 0047                         compensate_humidity@var2 004B  
                       compensate_humidity@var3 0057                         compensate_humidity@var4 004F  
                       compensate_humidity@var5 0053                              ??_set_osr_settings 0060  
                          TransmitString@counti 0026                         bme280_get_regs@reg_addr 003E  
                       bme280_set_regs@reg_addr 0052                         bme280_get_regs@reg_data 0037  
                       bme280_set_regs@reg_data 0034                                ?_bme280_set_regs 0034  
             bme280_get_sensor_mode@sensor_mode 0045                          ??_are_settings_changed 0071  
                                 ?_ClearStringn 0070                               ___lmul@multiplier 0070  
                       bme280_set_regs@temp_len 004E               __size_of_bme280_parse_sensor_data 011F  
                     ?_bme280_parse_sensor_data 0070                                  _null_ptr_check 2790  
            __size_of_parse_humidity_calib_data 0099                                    ?_BME280_Init 0070  
                         __end_of_I2C_UserAlert 25AF                                        PollGPS@i 0047  
                           ReadEnvSensor@dev_id 002D                     bme280_set_regs@reg_addr_cnt 0050  
                             ??_InsertTxDataSep 0029                              InsertString@counti 0031  
                               IntToString@dest 007D                                 IntToString@sign 002B  
               __size_of_bme280_get_sensor_data 005F                             bme280_set_regs@rslt 0051  
               __size_of_bme280_get_sensor_mode 002D                           __end_of_I2C_WriteByte 2643  
                                      _TimerISR 25E5                                        _SetupGPS 1D7A  
                              __size_of_PollGPS 0231                          __end_of_get_calib_data 1E13  
                             null_ptr_check@dev 0073                                   InsertString@i 0033  
                       ??_OSCILLATOR_Initialize 0070                                __size_of___aldiv 0082  
                              __size_of___awdiv 0051                          ?_fill_standby_settings 0070  
                              __size_of___awmod 0045                                __size_of___lldiv 0052  
                              __size_of___llmod 0042                     __size_of_EUSART1_Initialize 0021  
                               ??_ReverseString 0079                                        _WriteGPS 1870  
                  __size_of_put_device_to_sleep 0042                                   ?_GetLengthUBX 0070  
                   ?_bme280_set_sensor_settings 006C                               ClearString@counti 0076  
                     ??_EUSART1_SetErrorHandler 0072                     _EUSART1_DefaultErrorHandler 0000  
                                      crc16@crc 0023                     __end_of_EUSART1_is_rx_ready 1805  
                                    _T0CON0bits 059E                                        _checksum 014A  
           __end_of_parse_temp_press_calib_data 1800                     _parse_temp_press_calib_data 170B  
                           I2C_UserAlert@status 0070                  set_filter_standby_settings@dev 0055  
                                ReadEnvSensor@i 0035                                        __ptext10 14BD  
                                      __ptext11 1FAB                                        __ptext20 2652  
                                      __ptext12 1BDB                                        __ptext21 153F  
                                      __ptext13 1F59                                        __ptext30 25BA  
                                      __ptext22 2643                                        __ptext14 13CC  
                                      __ptext31 0B05                                        __ptext23 2664  
                                      __ptext15 1940                                        __ptext40 2757  
                                      __ptext32 19F2                                        __ptext24 25EF  
                                      __ptext16 1A80                                        __ptext41 1800  
                                      __ptext33 1870                                        __ptext25 1898  
                                      __ptext17 2677                                        __ptext50 2773  
                                      __ptext42 2604                                        __ptext34 25D4  
                                      __ptext26 25DC                                        __ptext18 1D7A  
                                      __ptext51 1822                                        __ptext43 1805  
                                      __ptext35 1A50                                        __ptext27 1001  
                                      __ptext19 1849                                  ??_ClearStringn 0072  
                                      __ptext60 18EB                                        __ptext52 26A0  
                                      __ptext44 11A0                                        __ptext36 26B7  
                                      __ptext28 25C6                                        __ptext61 1CEC  
                                      __ptext53 1274                                        __ptext45 1C61  
                                      __ptext37 1F07                                        __ptext29 25C0  
                                      __ptext70 1209                                        __ptext62 273B  
                                      __ptext54 1356                                        __ptext46 113B  
                                      __ptext38 12E1                                        __ptext71 1DC6  
                                      __ptext63 26E8                                        __ptext55 25F9  
                                      __ptext47 1E64                                        __ptext39 10D9  
                                      __ptext80 1998                                        __ptext72 170B  
                                      __ptext64 1EB5                                        __ptext56 1B59  
                                      __ptext48 25CC                                        __ptext81 1AB1  
                                      __ptext73 15D1                                        __ptext65 1CA6  
                                      __ptext57 1AE4                                        __ptext49 25B4  
                                      __ptext90 2628                                        __ptext82 2635  
                                      __ptext74 1C1D                                        __ptext66 271F  
                                      __ptext58 1B99                                        __ptext91 0003  
                                      __ptext83 25AC                                        __ptext75 1E13  
                                      __ptext67 2703                                        __ptext59 27DA  
                                      __ptext92 25E5                                        __ptext84 25AF  
                                      __ptext76 26CF                                        __ptext68 1022  
                                      __ptext85 1D32                                        __ptext77 1B1D  
                                      __ptext69 19C5                                        __ptext86 18C1  
                                      __ptext78 166A                                        __ptext87 1915  
                                      __ptext79 2790                                        __ptext88 268B  
                   __end_of_interleave_reg_addr 19C5                                    _SSP1CON1bits 0190  
                        __end_of_null_ptr_check 27B5                                    _SSP1CON2bits 0191  
                              ??_I2C_Wait_SSPIF 0027                                        _csvField 01D3  
                                   _GPS_SendUBX 1849             __end_of_set_osr_press_temp_settings 1D32  
                   _set_osr_press_temp_settings 1CEC                   compensate_pressure@calib_data 002E  
                               _UIntToHexString 13CC                                  _TransmitString 1940  
                                 __size_of_main 0254               bme280_compensate_data@sensor_comp 0060  
                      ??_bme280_compensate_data 005E                            _fill_filter_settings 2703  
             __end_of_parse_humidity_calib_data 166A                            __end_of_crc16_update 083E  
          __end_of_TMR0_DefaultInterruptHandler 0004           __size_of_TMR0_DefaultInterruptHandler 0001  
                  _TMR0_DefaultInterruptHandler 0003                            __CFG_WDTCWS$WDTCWS_7 0000  
                          __end_of_I2C_ReadByte 26E8                                      _RC1STAbits 011D  
EUSART1_SetOverrunErrorHandler@interruptHandler 0070                                TransmitChar@byte 0020  
                               ?_get_calib_data 0070                     _compensate_temperature$2715 003C  
                                      int$flags 007E              __end_of_INTERRUPT_InterruptManager 000E  
                    _INTERRUPT_InterruptManager 0004                                      ClearNMEA@i 0072  
                              UIntToString@dest 002D                     _EUSART1_FramingErrorHandler 01EB  
                                ??_GetLengthUBX 0073                                 main@sensor_data 0162  
                      ??_fill_osr_temp_settings 0072                             _GPS_HasAcknowledged 153F  
                                    _INTCONbits 000B                          _bme280_get_sensor_data 107A  
                             InsertString@index 002D                          _bme280_get_sensor_mode 19C5  
            set_osr_humidity_settings@ctrl_meas 005A                                   ?_UIntToString 0029  
                            bme280_set_regs@dev 0036                              bme280_set_regs@len 0035  
                 parse_device_settings@reg_data 0073                                  __pstringtext10 28B1  
                                __pstringtext11 28B6                                  __pstringtext12 28B8  
                                __pstringtext13 0000                        ??_compensate_temperature 0032  
             bme280_compensate_data@uncomp_data 005B                                 ?_null_ptr_check 0070  
                    bme280_get_sensor_data@F271 013C                      bme280_get_sensor_data@F273 0130  
                         __size_of_TransmitChar 0031                          __end_of_TransmitString 196C  
                                      intlevel1 0000                                   ??_ClearTxData 0070  
                      ??_bme280_set_sensor_mode 006D                   parse_device_settings@settings 0070  
                 fill_standby_settings@reg_data 0075                                   ??_ClearString 0075  
                              ___lldiv@dividend 0074                           ?_fill_filter_settings 0070  
                                 ??_GetAtRowCSV 007A                         ?_PIN_MANAGER_Initialize 0070  
                    bme280_get_sensor_data@rslt 00D6                               __CFG_CLKOUTEN$OFF 0000  
        __end_of_EUSART1_SetOverrunErrorHandler 25CC         __size_of_EUSART1_SetOverrunErrorHandler 0006  
                _EUSART1_SetOverrunErrorHandler 25C6                            ?_GPS_HasAcknowledged 0070  
                 ?_TMR0_DefaultInterruptHandler 0070                   fill_standby_settings@settings 0070  
                  GPS_HasAcknowledged@ackByteID 0030                    GPS_HasAcknowledged@ackPacket 0025  
                            WriteEnvSensor@rslt 0031  EUSART1_SetFramingErrorHandler@interruptHandler 0070  
                          __size_of_bme280_init 006B                  __size_of_parse_device_settings 0058  
                 __end_of_parse_device_settings 107A                          __size_of_EUSART1_Write 0008  
                            _eusart1RxLastError 00ED                                   __pstringtext1 28B4  
                                 __pstringtext2 2800                                   __pstringtext3 281A  
                                 __pstringtext4 2834                                   __pstringtext5 284E  
                                 __pstringtext6 2868                                   __pstringtext7 2882  
                                 __pstringtext8 289C                                   __pstringtext9 28AA  
                          __size_of_TransmitBit 0014                                      _SSP1DATPPS 1EC6  
                                    _SSP1CLKPPS 1EC5                                    _TransmitChar 1A80  
                              ___lldiv@quotient 0079                                  ??_UIntToString 002E  
                               _TMR0_Initialize 2664                                 ClearStringn@str 0073  
          are_settings_changed@settings_changed 0072                                    ___aldiv@sign 0029  
                       __end_of_UIntToHexString 1444                               WriteEnvSensor@len 002E  
                                    _TX1STAbits 011E             __end_of_set_filter_standby_settings 1CEC  
                   _set_filter_standby_settings 1CA6                      bme280_get_sensor_mode@rslt 0044  
                        __size_of_ReadEnvSensor 0051                        ?_fill_osr_press_settings 0070  
                    bme280_set_sensor_mode@rslt 00AD                                 ?_TransmitString 0023  
                __end_of_PIN_MANAGER_Initialize 18C1                                 Insert@destLimit 007A  
           set_osr_press_temp_settings@reg_addr 005B             set_osr_press_temp_settings@reg_data 005C  
                           bme280_get_regs@rslt 003F                           ??_GPS_HasAcknowledged 0070  
                             I2C_WriteByte@data 007D                 __size_of_bme280_compensate_data 0079  
                          __size_of_BME280_Init 006D             __size_of_bme280_set_sensor_settings 0076  
             bme280_get_sensor_data@sensor_comp 00D5                             __end_of_ClearTxData 2790  
                   write_power_mode@sensor_mode 0057             set_osr_press_temp_settings@settings 0053  
